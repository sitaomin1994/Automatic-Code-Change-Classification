{"application": "apache-hama", "csha": "d6d6f890db2ecd2480fd0c20e19eaa5f1a6f569d", "files": [{"MaxFlow_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.BufferedWriter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.File"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.FileNotFoundException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.FileOutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.OutputStreamWriter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.LinkedList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.Path"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.FloatWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Text", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.bsp.HashPartitioner"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.SequenceFileInputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.TextOutputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.commons.io.FloatArrayWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.graph.AbstractAggregator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.graph.Edge"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.graph.GraphJob"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.graph.Vertex", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.graph.VertexInputReader"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"maxFlow is: \"", "DEL MethodInvocation", "DEL SimpleName: setMsgVertexID", "DEL MethodInvocation", "DEL SimpleName: senseMsgList", "DEL SimpleName: get", "DEL SimpleName: setInputKeyClass", "DEL MethodDeclaration", "DEL ArrayAccess", "DEL SimpleName: e", "DEL Dimension", "DEL SimpleName: e", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL SimpleType: Edge", "DEL SimpleName: maxFlow", "DEL SimpleName: pushStepCount", "DEL Modifier: public", "DEL SimpleName: setNumBspTask", "DEL SimpleName: getMsgFlow", "DEL Modifier: private", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: setMsgType", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL Modifier: private", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: equals", "DEL SimpleType: FloatWritable", "DEL SimpleName: maxValue", "DEL SimpleName: oldFlow", "DEL PrimitiveType: void", "DEL CastExpression", "DEL ArrayAccess", "DEL SimpleName: costArray", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: FloatArrayWritable", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: Iterable", "DEL MethodInvocation", "DEL SimpleName: flow", "DEL SimpleName: init", "DEL SimpleType: Text", "DEL SimpleName: getVertexID", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: e", "DEL SimpleName: MaxFlowSeqReader", "DEL SimpleName: outEdges", "DEL Assignment: =", "DEL SimpleType: MaxFLowAgrregator", "DEL Modifier: static", "DEL SimpleName: inSenseList", "DEL NumberLiteral: 1", "DEL EnhancedForStatement", "DEL Assignment: =", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL SimpleName: FloatWritable", "DEL SimpleName: setMsgPushStep", "DEL SimpleName: IOException", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: sendMessage", "DEL NullLiteral", "DEL SimpleType: FloatWritable", "DEL SimpleName: setNumBspTask", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: LinkedList", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL Modifier: public", "DEL NumberLiteral: 0.001", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SingleVariableDeclaration", "DEL SimpleType: MaxFlowSeqReader", "DEL PrimitiveType: void", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: Edge", "DEL SimpleName: rm", "DEL ExpressionStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: GraphJob", "DEL SimpleName: pushStepCompleted", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: m", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL SimpleName: ret", "DEL StringLiteral: \"3\"", "DEL SimpleName: set", "DEL SimpleName: Text", "DEL SimpleName: FloatWritable", "DEL Modifier: public", "DEL InfixExpression: ==", "DEL SimpleName: farray", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: senseStepCount", "DEL ArrayCreation", "DEL SimpleName: msg", "DEL Modifier: static", "DEL SimpleName: Vertex", "DEL SimpleName: Text", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: oldFlow", "DEL QualifiedName: System.out", "DEL MethodInvocation", "DEL SimpleName: haveActivingNormalVertex", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL NumberLiteral: 0", "DEL SimpleName: value", "DEL VariableDeclarationStatement", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: bw", "DEL SimpleName: senseMsgList", "DEL QualifiedName: Float.MAX_VALUE", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL ArrayType: FloatWritable[]", "DEL MethodInvocation", "DEL SimpleName: maxFlow", "DEL VariableDeclarationFragment", "DEL SimpleName: SENSEMSG", "DEL ReturnStatement", "DEL SimpleName: msg", "DEL ArrayType: FloatWritable[]", "DEL ExpressionStatement", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: MaxFlowSeqReader", "DEL SimpleName: overFlowMsgList", "DEL ExpressionStatement", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: String", "DEL NumberLiteral: 0", "DEL SimpleName: edge", "DEL SimpleName: PUSHMSG", "DEL SimpleName: FloatWritable", "DEL SimpleName: conf", "DEL SimpleName: OUTEDGE", "DEL PrimitiveType: void", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: preSuperStepOverFlow", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: set", "DEL Block", "DEL SimpleName: addEdge", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL ParenthesizedExpression", "DEL SimpleName: getEdgeCapacity", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL Block", "DEL ArrayAccess", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL CastExpression", "DEL SimpleName: getSuperstepCount", "DEL MethodDeclaration", "DEL SimpleName: ret", "DEL SingleVariableDeclaration", "DEL SimpleType: Text", "DEL SimpleName: getSourceID", "DEL SimpleName: maxFlow", "DEL ExpressionStatement", "DEL SimpleName: Text", "DEL Block", "DEL SimpleType: ArrayList", "DEL ReturnStatement", "DEL SimpleType: FloatWritable", "DEL SimpleName: v", "DEL SimpleName: ret", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: bw", "DEL SimpleName: FloatArrayWritable", "DEL TypeLiteral", "DEL Assignment: =", "DEL SimpleName: HamaConfiguration", "DEL ReturnStatement", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL SimpleName: array", "DEL SimpleName: Edge", "DEL SimpleName: get", "DEL SimpleName: v", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: String", "DEL SimpleName: equals", "DEL SimpleName: msg0", "DEL CastExpression", "DEL SimpleName: get", "DEL SimpleName: Text", "DEL Block", "DEL InfixExpression: <=", "DEL SimpleName: msg", "DEL SimpleName: msg", "DEL SimpleType: Edge", "DEL InfixExpression: >", "DEL SimpleName: pMsgList", "DEL SimpleName: setMsgVertexID", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: Math", "DEL PrefixExpression: -", "DEL SimpleName: msg", "DEL SimpleName: equals", "DEL SimpleName: set", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleType: Iterable", "DEL SimpleType: FloatWritable", "DEL SimpleName: FloatWritable", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleType: LinkedList", "DEL PrimitiveType: boolean", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: args", "DEL SimpleName: get", "DEL SimpleName: array", "DEL Modifier: static", "DEL SimpleName: array", "DEL SimpleType: FloatArrayWritable", "DEL ReturnStatement", "DEL SimpleName: Edge", "DEL SimpleName: e", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: v", "DEL SimpleName: msg0", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL CatchClause", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: maxFlow", "DEL SingleVariableDeclaration", "DEL SimpleName: senseMsgList", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL SimpleName: write", "DEL QualifiedName: Float.MAX_VALUE", "DEL SimpleName: oldFlow", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleName: vertex", "DEL ParameterizedType: Iterable<FloatArrayWritable>", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: Math", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: FloatArrayWritable", "DEL MethodDeclaration", "DEL SimpleName: maxFlow", "DEL SimpleName: senseStepCount", "DEL SimpleName: INEDGE", "DEL SimpleType: Text", "DEL SimpleName: Vertex", "DEL SimpleName: get", "DEL SimpleName: getDestinationVertexID", "DEL MethodInvocation", "DEL SimpleName: msg0", "DEL SimpleName: value", "DEL FieldDeclaration", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: LinkedList", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: Edge", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleType: ArrayList", "DEL SimpleName: get", "DEL IfStatement", "DEL NullLiteral", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: getValue", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: getDestinationVertexID", "DEL CastExpression", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: ret", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: LinkedList", "DEL MethodDeclaration", "DEL SimpleName: msg", "DEL IfStatement", "DEL SimpleName: msgList", "DEL SimpleName: sendMessage", "DEL SimpleName: getValue", "DEL SimpleName: e", "DEL SimpleType: FileNotFoundException", "DEL ExpressionStatement", "DEL PrimitiveType: float", "DEL VariableDeclarationFragment", "DEL SimpleName: msg", "DEL IfStatement", "DEL SimpleName: conf", "DEL SimpleName: createJob", "DEL VariableDeclarationStatement", "DEL SimpleName: min", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TypeLiteral", "DEL NumberLiteral: 0", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Text", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: getMsgSenseStep", "DEL SimpleType: Text", "DEL MethodDeclaration", "DEL SimpleType: Writable", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 2", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: inEdges", "DEL BooleanLiteral: true", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL SimpleName: Edge", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: setMaxIteration", "DEL SimpleName: MaxFLowAgrregator", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: flow", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL NumberLiteral: 0", "DEL FieldAccess", "DEL SimpleName: get", "DEL SimpleName: FloatWritable", "DEL Modifier: static", "DEL MethodInvocation", "DEL ThisExpression", "DEL IfStatement", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: getMsgFlow", "DEL BreakStatement", "DEL SimpleName: pushMsgComsume", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getSinkID", "DEL SimpleType: FloatWritable", "DEL Assignment: =", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: get", "DEL QualifiedName: args.length", "DEL SimpleName: msg", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL Block", "DEL IfStatement", "DEL NumberLiteral: 0", "DEL SimpleName: senseStepCount", "DEL SimpleType: Text", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: setEdgeType", "DEL NumberLiteral: 1", "DEL SimpleName: iterator", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: pushStepCompleted", "DEL IfStatement", "DEL SimpleName: getValue", "DEL SimpleName: FloatWritable", "DEL Block", "DEL EnhancedForStatement", "DEL PrimitiveType: void", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL EnhancedForStatement", "DEL SimpleName: maxFlow", "DEL SimpleName: flow", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL InfixExpression: ==", "DEL SimpleName: msg", "DEL IfStatement", "DEL NumberLiteral: 5", "DEL CastExpression", "DEL FieldDeclaration", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: Text", "DEL SimpleName: ArrayList", "DEL SimpleName: FloatArrayWritable", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: overFlow", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL PrefixExpression: -", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL IfStatement", "DEL IfStatement", "DEL SimpleType: FloatArrayWritable", "DEL ArrayAccess", "DEL SimpleName: String", "DEL SimpleType: FloatWritable", "DEL SimpleName: maxValue", "DEL SimpleName: edge", "DEL SimpleName: Math", "DEL BooleanLiteral: true", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: FloatArrayWritable", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL IfStatement", "DEL FieldDeclaration", "DEL Block", "DEL SimpleName: v2", "DEL SimpleName: FileNotFoundException", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: LinkedList", "DEL SimpleName: mArray0", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL SimpleType: IOException", "DEL BooleanLiteral: true", "DEL SimpleName: equals", "DEL SimpleName: sendMessage", "DEL SimpleType: ArrayList", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleType: Text", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: SENSEMSG", "DEL SimpleName: senseStepCount", "DEL InfixExpression: ==", "DEL SimpleName: overFlow", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: mfmcJob", "DEL ExpressionStatement", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: pushStepCount", "DEL SimpleName: add", "DEL SimpleName: startTime", "DEL Block", "DEL Block", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: Text", "DEL SimpleType: Exception", "DEL SimpleName: temp", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Integer", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: Text", "DEL SimpleType: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL ClassInstanceCreation", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: pushFlowToNeighbors", "DEL SimpleName: get", "DEL ParameterizedType: Iterable<FloatArrayWritable>", "DEL SimpleName: setAggregatorClass", "DEL SimpleName: step", "DEL ExpressionStatement", "DEL SimpleName: setPartitioner", "DEL SimpleName: getEdgeType", "DEL SimpleName: System", "DEL SimpleName: flowedOutEdges", "DEL NumberLiteral: 1111", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: v", "DEL SimpleName: array", "DEL InfixExpression: ==", "DEL Modifier: private", "DEL SimpleName: FloatWritable", "DEL SimpleType: LinkedList", "DEL SimpleName: msg", "DEL Block", "DEL MethodDeclaration", "DEL SimpleType: Text", "DEL ClassInstanceCreation", "DEL PrimitiveType: float", "DEL SimpleType: ArrayList", "DEL SimpleType: FloatWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: oldFlow", "DEL SimpleName: maxValue", "DEL SimpleName: capacity", "DEL SimpleName: msg0", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL ArrayType: FloatWritable[]", "DEL MethodInvocation", "DEL SimpleName: senseToNeighbor", "DEL Modifier: public", "DEL SimpleName: m", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SimpleType: Iterable", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL ArrayType: FloatWritable[]", "DEL SimpleName: LinkedList", "DEL IfStatement", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL NullLiteral", "DEL SimpleName: Text", "DEL Modifier: public", "DEL SimpleName: OUTEDGE", "DEL SimpleName: FloatWritable", "DEL Modifier: public", "DEL SimpleName: flow", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SimpleName: FloatWritable", "DEL SimpleName: inEdges", "DEL InfixExpression: &&", "DEL SimpleName: exit", "DEL SimpleName: Path", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatWritable", "DEL PrimitiveType: void", "DEL SimpleName: INEDGE", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL NumberLiteral: 0.0f", "DEL MethodInvocation", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: >", "DEL SimpleName: MaxFlow", "DEL ArrayCreation", "DEL SimpleType: FloatWritable", "DEL SimpleName: String", "DEL SimpleName: Text", "DEL SimpleName: costArray", "DEL MethodInvocation", "DEL SimpleName: overFlow", "DEL SimpleName: haveActivingNormalVertex", "DEL PrimitiveType: double", "DEL SimpleName: f", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL InfixExpression: >", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: msg", "DEL SimpleName: Text", "DEL MethodInvocation", "DEL ParameterizedType: Iterable<FloatArrayWritable>", "DEL SimpleName: getDestinationVertexID", "DEL SimpleType: String", "DEL EnhancedForStatement", "DEL ParameterizedType: LinkedList<FloatArrayWritable>", "DEL Block", "DEL SimpleName: msg", "DEL SimpleType: Edge", "DEL SimpleName: OVERFLOWMSG", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: value", "DEL InfixExpression: ==", "DEL VariableDeclarationStatement", "DEL SimpleName: messages", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: get", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: public", "DEL NumberLiteral: 1", "DEL ArrayAccess", "DEL SimpleName: pMsgList", "DEL VariableDeclarationStatement", "DEL SimpleName: nflow", "DEL SimpleName: outSenseList", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Boolean", "DEL SimpleName: senseMsgList", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: aggregate", "DEL SimpleName: bw", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL NullLiteral", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: File", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL SimpleType: VertexInputReader", "DEL SimpleName: setEdgeType", "DEL Modifier: private", "DEL SimpleName: min", "DEL SimpleName: isFirstSense", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL SimpleType: HamaConfiguration", "DEL BreakStatement", "DEL SimpleName: get", "DEL SimpleName: value", "DEL NumberLiteral: 3", "DEL SimpleName: Edge", "DEL SimpleName: getEdgeFlow", "DEL NumberLiteral: 0", "DEL NumberLiteral: 4", "DEL IfStatement", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL PrimitiveType: void", "DEL SimpleName: setMsgSenseStep", "DEL ArrayAccess", "DEL CastExpression", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: Path", "DEL SimpleName: Iterable", "DEL PrimitiveType: int", "DEL SimpleName: Text", "DEL MethodInvocation", "DEL TypeLiteral", "DEL NumberLiteral: 1", "DEL ContinueStatement", "DEL ExpressionStatement", "DEL SimpleName: MaxFlowVertex", "DEL SimpleName: sendMessage", "DEL SimpleType: FloatWritable", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: msg0", "DEL SimpleName: needFlow", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL SimpleName: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleName: s", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getEdgeType", "DEL BooleanLiteral: false", "DEL SimpleName: set", "DEL BreakStatement", "DEL NumberLiteral: 1", "DEL SimpleName: receiveFlowFromNeighbors", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: msg", "DEL ReturnStatement", "DEL ReturnStatement", "DEL PrefixExpression: -", "DEL SimpleName: exit", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: getSinkID", "DEL VariableDeclarationStatement", "DEL EmptyStatement", "DEL SimpleName: maxValue", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: pushMsgList", "DEL SimpleName: oldFlow", "DEL SimpleName: outEdges", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: getMsgType", "DEL Modifier: private", "DEL SimpleName: getSuperstepCount", "DEL SimpleName: msgList", "DEL SimpleName: messages", "DEL SimpleName: equals", "DEL SimpleName: level", "DEL SimpleName: step", "DEL SimpleType: Edge", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: mArray0", "DEL SimpleName: floatToText", "DEL SimpleType: Text", "DEL SimpleName: flow", "DEL NumberLiteral: 1", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: setMsgFlow", "DEL InfixExpression: >", "DEL SimpleName: overFlow", "DEL SimpleType: ArrayList", "DEL SimpleType: LinkedList", "DEL SimpleName: cap", "DEL SimpleName: stepStatusDetecting", "DEL PrimitiveType: int", "DEL SimpleName: msg", "DEL CastExpression", "DEL SimpleType: FloatWritable", "DEL MethodDeclaration", "DEL SimpleName: Text", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL SimpleName: OVERFLOWMSG", "DEL SimpleName: FloatArrayWritable", "DEL Assignment: =", "DEL SimpleName: maxFlow", "DEL SimpleType: FloatWritable", "DEL SimpleName: println", "DEL MethodInvocation", "DEL SimpleType: Edge", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: msg0", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: vertexID", "DEL SimpleType: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: msg", "DEL IfStatement", "DEL InfixExpression: >", "DEL Modifier: private", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL SimpleName: msg", "DEL SimpleName: Edge", "DEL SimpleName: Text", "DEL SimpleName: ArrayList", "DEL SimpleName: get", "DEL SimpleName: setEdgeType", "DEL SimpleName: parseFloat", "DEL VariableDeclarationStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatWritable", "DEL InfixExpression: /", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: cap", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL SimpleName: voteToHalt", "DEL SimpleName: setOutputPath", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL NumberLiteral: 0.0f", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: cap", "DEL Modifier: private", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: senseStepCompleted", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: maxFlow", "DEL SimpleName: get", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: algorithmCompleted", "DEL SimpleType: FloatWritable", "DEL SimpleName: LinkedList", "DEL SimpleName: getSinkID", "DEL NumberLiteral: 4", "DEL SimpleName: needFlow", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleType: Iterable", "DEL SimpleName: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: LinkedList", "DEL SimpleName: msg", "DEL ExpressionStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: conf", "DEL SimpleName: DoubleWritable", "DEL SimpleName: flow", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleType: FloatWritable", "DEL SimpleName: getMsgSenseStep", "DEL SimpleType: Edge", "DEL SimpleName: overFlow", "DEL SimpleName: msg0", "DEL ClassInstanceCreation", "DEL SimpleName: masterVertexCompute", "DEL TextElement: graph.", "DEL SimpleName: setMsgFlow", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: e", "DEL InfixExpression: ==", "DEL IfStatement", "DEL Block", "DEL SimpleType: FloatArrayWritable", "DEL Modifier: static", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: nflow", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL EmptyStatement", "DEL MethodInvocation", "DEL SimpleName: overFlowMsgList", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: LinkedList", "DEL SimpleName: getValue", "DEL SimpleName: next", "DEL SimpleName: outSenseList", "DEL ClassInstanceCreation", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleName: setNeedFlow", "DEL VariableDeclarationStatement", "DEL SimpleName: nflow", "DEL SimpleName: setEdgeCapacity", "DEL SimpleName: LinkedList", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: equals", "DEL Modifier: static", "DEL SimpleName: Text", "DEL SimpleType: FloatWritable", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: type", "DEL SimpleName: getMsgPushStep", "DEL ExpressionStatement", "DEL SimpleType: Edge", "DEL SimpleName: e", "DEL SimpleName: INEDGE", "DEL VariableDeclarationFragment", "DEL SimpleName: textToFloat", "DEL SimpleName: e", "DEL SimpleName: f", "DEL ReturnStatement", "DEL SimpleName: value", "DEL SimpleName: maxFlow", "DEL SimpleName: set", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: GraphJob", "DEL SimpleName: Edge", "DEL Modifier: public", "DEL SimpleType: Text", "DEL SimpleType: FloatArrayWritable", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: pushStepCount", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleType: ClassNotFoundException", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL NumberLiteral: 7", "DEL Modifier: private", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: values", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: get", "DEL IfStatement", "DEL SimpleName: sendOverFlowNodeToMaster", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: FloatArrayWritable", "DEL PrimitiveType: long", "DEL SimpleName: costArray", "DEL SimpleType: String", "DEL NumberLiteral: 0", "DEL SimpleName: add", "DEL SimpleName: msg", "DEL Block", "DEL PrefixExpression: -", "DEL SimpleName: setMsgFlow", "DEL SimpleName: e", "DEL SimpleType: FloatWritable", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: senseToNeighbors", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleName: ArrayList", "DEL ArrayAccess", "DEL SimpleName: getDestinationVertexID", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: add", "DEL SimpleName: senseToNeighbor", "DEL PrimitiveType: void", "DEL ClassInstanceCreation", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL CastExpression", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: FloatArrayWritable", "DEL ClassInstanceCreation", "DEL PrimitiveType: float", "DEL Modifier: public", "DEL SimpleName: msg", "DEL SimpleName: overFlow", "DEL PrimitiveType: float", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: FloatWritable", "DEL SimpleName: edge", "DEL SimpleName: clear", "DEL SimpleName: e", "DEL NumberLiteral: 2", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0.0f", "DEL ArrayType: FloatWritable[]", "DEL SimpleName: Edge", "DEL PrimitiveType: int", "DEL SimpleName: array", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL QualifiedName: System.out", "DEL SimpleName: Edge", "DEL PrimitiveType: boolean", "DEL SimpleName: getVertexID", "DEL SimpleName: get", "DEL Javadoc", "DEL SimpleName: Text", "DEL SimpleName: setOutputKeyClass", "DEL SimpleName: costArray", "DEL SimpleType: Edge", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleType: Edge", "DEL SimpleName: in", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL SingleVariableDeclaration", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: HaveActivingNormalVertex", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: getVertexID", "DEL StringLiteral: \"MaxFlow\"", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: Text", "DEL SimpleName: close", "DEL SimpleName: getEdgeAccordToMsg", "DEL SimpleName: FloatArrayWritable", "DEL TypeLiteral", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleType: FloatWritable", "DEL SimpleType: Vertex", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL SimpleName: overFlow", "DEL ClassInstanceCreation", "DEL SimpleType: Edge", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: senseStepCount", "DEL SimpleName: msg0", "DEL SimpleName: farray", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: m", "DEL SimpleName: value", "DEL SimpleName: e", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Edge", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL StringLiteral: \"Job Finished in \"", "DEL SimpleName: msg", "DEL InfixExpression: <=", "DEL SimpleName: FloatWritable", "DEL ArrayType: String[]", "DEL ArrayAccess", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: oldFlow", "DEL SimpleName: ArrayList", "DEL SimpleName: flow", "DEL SimpleName: getMsgType", "DEL SimpleType: Edge", "DEL VariableDeclarationFragment", "DEL SimpleType: Text", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: senseStepCompleted", "DEL SimpleName: setMsgVertexID", "DEL SimpleType: PageRank", "DEL ParameterizedType: Iterable<FloatArrayWritable>", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL IfStatement", "DEL PrefixExpression: !", "DEL SimpleName: getMsgType", "DEL SimpleName: e", "DEL SimpleType: Text", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL SimpleName: Text", "DEL ReturnStatement", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL PrimitiveType: float", "DEL SimpleName: SENSEMSG", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: msg", "DEL SimpleName: nflow", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: msg", "DEL SimpleName: Edge", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: add", "DEL SimpleType: TextOutputFormat", "DEL SimpleName: maxFlow", "DEL MethodInvocation", "DEL Block", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL VariableDeclarationFragment", "DEL SimpleType: BufferedWriter", "DEL SimpleName: set", "DEL SimpleName: getEdgeType", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: SequenceFileInputFormat", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: init", "DEL ClassInstanceCreation", "DEL SimpleType: FloatArrayWritable", "DEL Modifier: static", "DEL IfStatement", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: setVertexID", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL SimpleName: cap", "DEL SimpleName: msg", "DEL SimpleName: LinkedList", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: log", "DEL SimpleName: iter", "DEL SimpleType: DoubleWritable", "DEL SimpleName: setMessageClass", "DEL SimpleName: FloatArrayWritable", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL SimpleName: overFlow", "DEL SimpleName: getMsgVertexID", "DEL SimpleType: ArrayList", "DEL MethodInvocation", "DEL SimpleName: get", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleName: args", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: cost", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatWritable", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: getSuperstepCount", "DEL InfixExpression: ==", "DEL SimpleName: getSpareFlow", "DEL ReturnStatement", "DEL SimpleName: masterVertexCompute", "DEL PrefixExpression: !", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: msg", "DEL Block", "DEL Block", "DEL TypeLiteral", "DEL QualifiedName: System.out", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: msg", "DEL SimpleName: Edge", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: pushStepCount", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: FIRSTPUSHMSG", "DEL StringLiteral: \" seconds\"", "DEL IfStatement", "DEL SimpleName: messages", "DEL SimpleName: AbstractAggregator", "DEL PrefixExpression: -", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: LinkedList", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatWritable", "DEL ExpressionStatement", "DEL SimpleName: senseStepCount", "DEL SimpleName: parseVertex", "DEL SimpleName: msg", "DEL SimpleName: size", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL MarkerAnnotation", "DEL SimpleName: equals", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: receiveFlowFromNeighbors", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL SimpleName: msg", "DEL SimpleType: FloatWritable", "DEL SimpleName: iter", "DEL MethodInvocation", "DEL SimpleName: Edge", "DEL InfixExpression: >", "DEL PrimitiveType: int", "DEL PrefixExpression: -", "DEL SimpleName: GraphJob", "DEL SingleVariableDeclaration", "DEL TypeLiteral", "DEL SimpleName: e", "DEL NumberLiteral: 3", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL SimpleName: printMaxFlowValue", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: setInputPath", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Iterator<FloatArrayWritable>", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: setMsgSenseStep", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: PageRank", "DEL SimpleName: m", "DEL NumberLiteral: 0.0f", "DEL SimpleName: pushFlowToNeighbors", "DEL SimpleName: getMsgType", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Vertex<Text,FloatArrayWritable,FloatArrayWritable>", "DEL VariableDeclarationFragment", "DEL SimpleType: OutputStreamWriter", "DEL SimpleName: messages", "DEL ClassInstanceCreation", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: flow", "DEL SimpleName: getValue", "DEL SimpleType: Iterator", "DEL NumberLiteral: 2", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: InterruptedException", "DEL Block", "DEL Modifier: public", "DEL SimpleName: FloatWritable", "DEL SimpleName: msg0", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: sendMsg", "DEL IfStatement", "DEL SimpleName: e", "DEL SimpleName: msg0", "DEL FieldDeclaration", "DEL SimpleName: values", "DEL SimpleType: Text", "DEL IfStatement", "DEL SimpleName: aggregate", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL NumberLiteral: 1000.0", "DEL ExpressionStatement", "DEL SimpleName: level", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL QualifiedName: MaxFlowVertex.OUTPUT", "DEL Block", "DEL SimpleName: voteToHalt", "DEL ArrayAccess", "DEL NumberLiteral: 0.0f", "DEL SimpleType: LinkedList", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleName: ArrayList", "DEL Block", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL SimpleName: inSenseList", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: maxFlow", "DEL SimpleType: FloatWritable", "DEL SimpleName: overFlow", "DEL VariableDeclarationFragment", "DEL SimpleType: HashPartitioner", "DEL SimpleName: equals", "DEL SimpleName: getEdgeFlow", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: Text", "DEL MethodInvocation", "DEL SimpleName: outEdges", "DEL SimpleName: nflow", "DEL PrimitiveType: float", "DEL InfixExpression: +", "DEL SimpleName: v", "DEL MarkerAnnotation", "DEL SimpleType: File", "DEL Block", "DEL SimpleName: parseInt", "DEL SimpleType: FloatArrayWritable", "DEL MethodDeclaration", "DEL SimpleName: sendOverFlowNodeToMaster", "DEL SimpleType: Edge", "DEL SimpleName: aggregate", "DEL SimpleName: HashPartitioner", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: Text", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: Iterable", "DEL SimpleName: msg", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleName: overFlow", "DEL ExpressionStatement", "DEL SimpleName: vertexID", "DEL SimpleName: Edge", "DEL SimpleName: msg0", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleType: OutputStreamWriter", "DEL SimpleName: maxFlow", "DEL Modifier: private", "DEL NumberLiteral: 4f", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL IfStatement", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: String", "DEL InfixExpression: <", "DEL VariableDeclarationFragment", "DEL InfixExpression: >", "DEL SimpleType: FloatWritable", "DEL InfixExpression: <", "DEL SimpleName: mArray0", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: MaxFlowVertex", "DEL SingleVariableDeclaration", "DEL Dimension", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: add", "DEL MethodDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: temp", "DEL SimpleName: flow", "DEL SimpleType: FloatWritable", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: farray", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: pushMsgComsume", "DEL Modifier: private", "DEL SimpleType: IOException", "DEL Block", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL ArrayType: FloatWritable[]", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatArrayWritable", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL SimpleName: flow", "DEL SimpleType: FloatArrayWritable", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL Block", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL Modifier: private", "DEL SimpleName: pushStepCount", "DEL SimpleName: setMsgType", "DEL SimpleType: FloatArrayWritable", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: overFlow", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL SimpleName: log", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL SimpleName: getMsgType", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: overFlow", "DEL SimpleName: setMsgSenseStep", "DEL SimpleName: msg0", "DEL MethodInvocation", "DEL SimpleName: senseStepCount", "DEL NumberLiteral: 2", "DEL SimpleType: Iterable", "DEL SimpleName: FloatWritable", "DEL ArrayAccess", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL SimpleName: oldFlow", "DEL ExpressionStatement", "DEL SimpleName: Float", "DEL SimpleType: FloatWritable", "DEL ArrayAccess", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL SimpleName: step", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: Text", "DEL SimpleName: ArrayList", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleType: LinkedList", "DEL SimpleName: senseMsgList", "DEL ArrayAccess", "DEL SimpleName: msg0", "DEL SimpleType: FloatWritable", "DEL SimpleName: getMsgSenseStep", "DEL SimpleName: Text", "DEL Modifier: private", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: FloatWritable", "DEL ClassInstanceCreation", "DEL SimpleName: Text", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL InfixExpression: >", "DEL VariableDeclarationFragment", "DEL SimpleType: Text", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL NumberLiteral: 3", "DEL ArrayAccess", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL ReturnStatement", "DEL SimpleName: getDestinationVertexID", "DEL SimpleName: setMsgType", "DEL SimpleName: getNeedFlow", "DEL SimpleName: setEdgeCapacity", "DEL SimpleName: FloatArrayWritable", "DEL NumberLiteral: 0", "DEL SimpleName: Text", "DEL SimpleName: haveActivingNormalVertex", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: pushStepCount", "DEL Dimension", "DEL Modifier: public", "DEL PrimitiveType: float", "DEL SimpleName: Text", "DEL SimpleName: Text", "DEL Block", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL SimpleName: FloatWritable", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL MethodInvocation", "DEL SimpleName: inEdges", "DEL PrimitiveType: int", "DEL SimpleName: msg", "DEL ContinueStatement", "DEL SimpleName: set", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: msg", "DEL BreakStatement", "DEL MethodDeclaration", "DEL SimpleName: FloatWritable", "DEL ReturnStatement", "DEL ReturnStatement", "DEL ParameterizedType: Vertex<Text,FloatArrayWritable,FloatArrayWritable>", "DEL MethodInvocation", "DEL SimpleName: sendMessage", "DEL VariableDeclarationStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: equals", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: pushMsgList", "DEL SimpleName: msg", "DEL SimpleName: getEdgeType", "DEL SimpleName: msg0", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Block", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: FloatWritable", "DEL ExpressionStatement", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL Block", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: getVertexID", "DEL SingleVariableDeclaration", "DEL SimpleName: senseMsgList", "DEL Assignment: =", "DEL Modifier: private", "DEL SimpleName: set", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Writable", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: pushFlowToNeighbors", "DEL SimpleType: FloatWritable", "DEL SimpleName: msg0", "DEL Modifier: public", "DEL TypeLiteral", "DEL SimpleName: setMsgVertexID", "DEL SimpleName: BufferedWriter", "DEL VariableDeclarationStatement", "DEL SimpleName: OUTEDGE", "DEL SimpleName: ArrayList", "DEL SimpleName: msgList", "DEL PrimitiveType: void", "DEL SimpleName: msg0", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: inEdges", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: getSpareFlow", "DEL MethodDeclaration", "DEL SimpleType: FloatWritable", "DEL ParenthesizedExpression", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleName: getEdgeFlow", "DEL SimpleName: startTime", "DEL BreakStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: iter", "DEL SimpleName: msg0", "DEL SimpleType: FloatArrayWritable", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL PrimitiveType: float", "DEL SingleVariableDeclaration", "DEL SimpleName: set", "DEL MethodInvocation", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: type", "DEL Block", "DEL SimpleType: Edge", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL SimpleName: MAXIMUM_CONVERGENCE_ERROR", "DEL Block", "DEL BooleanLiteral: true", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: LinkedList", "DEL ExpressionStatement", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleType: FileOutputStream", "DEL MethodInvocation", "DEL SimpleName: OUTEDGE", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: FloatArrayWritable", "DEL PrimitiveType: void", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: Edge", "DEL SimpleName: msg", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL ArrayCreation", "DEL SimpleName: msg0", "DEL SimpleName: ArrayList", "DEL PrimitiveType: void", "DEL SimpleName: FloatWritable", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: addInEdge", "DEL SimpleType: Text", "DEL SimpleName: setMsgFlow", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL SimpleName: pMsgList", "DEL SimpleName: set", "DEL SimpleName: array", "DEL SimpleName: setMsgVertexID", "DEL SimpleName: pMsgList", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: bw", "DEL SimpleName: overFlow", "DEL SimpleName: DAMPING_FACTOR", "DEL SimpleName: pushMsgList", "DEL MethodInvocation", "DEL SimpleName: setOutputFormat", "DEL SingleVariableDeclaration", "DEL SimpleType: Text", "DEL ExpressionStatement", "DEL SimpleName: isFirstSense", "DEL SingleVariableDeclaration", "DEL SimpleName: senseStepCount", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL SimpleType: ArrayList", "DEL SimpleType: Text", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: args", "DEL Modifier: private", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL FieldAccess", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleType: Boolean", "DEL SimpleType: FloatWritable", "DEL Block", "DEL SimpleName: MaxFLowAgrregator", "DEL InfixExpression: <", "DEL ClassInstanceCreation", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: algorithmCompleted", "DEL SimpleName: setEdgeType", "DEL SimpleName: mArray0", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleType: Edge", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: main", "DEL ParenthesizedExpression", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: Edge", "DEL SimpleName: msg", "DEL SimpleName: temp", "DEL Assignment: =", "DEL SimpleType: Text", "DEL SimpleType: FloatWritable", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: preSuperStepOverFlow", "DEL SimpleName: flow", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: e", "DEL SimpleName: getVertexID", "DEL SimpleName: senseStepCompleted", "DEL NullLiteral", "DEL InfixExpression: +", "DEL SimpleName: OUTEDGE", "DEL SimpleName: println", "DEL SimpleName: FloatWritable", "DEL SimpleName: value", "DEL SimpleName: e", "DEL SimpleName: sendMsg", "DEL SimpleName: msg0", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: maxFlow", "DEL SimpleName: aggregate", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: FloatWritable", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: type", "DEL SingleVariableDeclaration", "DEL SimpleName: f", "DEL SimpleName: setEdgeValueClass", "DEL SimpleName: iter", "DEL MethodInvocation", "DEL SimpleName: normalVertexCompute", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: getMsgSenseStep", "DEL SingleVariableDeclaration", "DEL SimpleName: setMsgVertexID", "DEL SimpleName: getSpareFlow", "DEL SimpleType: GraphJob", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: GraphJob", "DEL SimpleType: IOException", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Iterable", "DEL SimpleName: inSenseList", "DEL MethodDeclaration", "DEL SimpleName: vertex", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL Modifier: static", "DEL SimpleType: IOException", "DEL SimpleType: ArrayList", "DEL Block", "DEL ReturnStatement", "DEL Block", "DEL TypeLiteral", "DEL SimpleName: FloatWritable", "DEL ClassInstanceCreation", "DEL SimpleName: OutputStreamWriter", "DEL SimpleName: setVertexInputReaderClass", "DEL PrimitiveType: boolean", "DEL IfStatement", "DEL MethodInvocation", "DEL ArrayAccess", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Text", "DEL SimpleType: FloatWritable", "DEL SimpleName: setEdgeValueClass", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL Block", "DEL NumberLiteral: 0.85", "DEL SimpleName: msg", "DEL BooleanLiteral: true", "DEL VariableDeclarationFragment", "DEL SimpleType: Path", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: msg0", "DEL SimpleName: in", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: get", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: value", "DEL IfStatement", "DEL CastExpression", "DEL SimpleType: Edge", "DEL ReturnStatement", "DEL StringLiteral: \"/maxflow\"", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: IOException", "DEL SimpleName: e", "DEL SimpleType: LinkedList", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Modifier: private", "DEL SimpleName: FloatArrayWritable", "DEL Modifier: private", "DEL SimpleName: msg", "DEL ExpressionStatement", "DEL SimpleName: getEdgeCapacity", "DEL Block", "DEL InfixExpression: >", "DEL SimpleName: msg0", "DEL SimpleName: set", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatWritable", "DEL SimpleName: set", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL TypeLiteral", "DEL SimpleName: FloatArrayWritable", "DEL ArrayAccess", "DEL SimpleName: maxFlow", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL SimpleName: value", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: OVERFLOWMSG", "DEL SimpleType: FloatWritable", "DEL NumberLiteral: 2", "DEL Modifier: private", "DEL EnhancedForStatement", "DEL SimpleName: equals", "DEL SimpleType: FloatWritable", "DEL ArrayAccess", "DEL InfixExpression: -", "DEL ExpressionStatement", "DEL SimpleType: FloatWritable", "DEL SimpleName: setup", "DEL ExpressionStatement", "DEL SimpleName: maxFlow", "DEL SimpleName: FloatWritable", "DEL SimpleName: add", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: aggregate", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: oldFlow", "DEL Block", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: key", "DEL SimpleName: Iterable", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL SimpleName: FloatArrayWritable", "DEL ClassInstanceCreation", "DEL SimpleName: getDestinationVertexID", "DEL VariableDeclarationFragment", "DEL SimpleName: FloatWritable", "DEL SimpleName: e", "DEL NumberLiteral: 3", "DEL SimpleType: FloatWritable", "DEL SimpleName: get", "DEL SimpleName: msg0", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: Edge", "DEL NullLiteral", "DEL NumberLiteral: 5", "DEL Assignment: =", "DEL SimpleName: valueOf", "DEL SimpleType: Edge", "DEL Block", "DEL SimpleName: cap", "DEL Modifier: public", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: GraphJob", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL InfixExpression: ==", "DEL InfixExpression: -", "DEL ClassInstanceCreation", "DEL SimpleType: Text", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: printMaxFlowValue", "DEL SimpleName: msg", "DEL BooleanLiteral: true", "DEL SimpleName: vertex", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: get", "DEL SimpleName: sendMsg", "DEL SimpleName: set", "DEL SimpleType: FloatWritable", "DEL Dimension", "DEL SimpleName: getValue", "DEL Assignment: =", "DEL SimpleName: getEdgeType", "DEL SimpleName: costArray", "DEL ExpressionStatement", "DEL SimpleName: sendMsg", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: File", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: floatToText", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: addOutEdge", "DEL NumberLiteral: 2", "DEL SimpleName: msg0", "DEL SimpleName: value", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: System", "DEL Modifier: static", "DEL SimpleName: f", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL SimpleName: MaxFlowVertex", "DEL SimpleName: capacity", "DEL SimpleType: Edge", "DEL SimpleType: FloatArrayWritable", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL StringLiteral: \"Usage: <input> <output> [tasks]\"", "DEL NumberLiteral: 1", "DEL VariableDeclarationStatement", "DEL TypeDeclaration: class", "DEL FieldDeclaration", "DEL BooleanLiteral: false", "DEL VariableDeclarationFragment", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: in", "DEL SimpleName: outEdges", "DEL SimpleName: sendMsg", "DEL SimpleName: e", "DEL Block", "DEL ArrayAccess", "DEL VariableDeclarationFragment", "DEL SimpleName: outSenseList", "DEL Block", "DEL Block", "DEL SimpleName: getSuperstepCount", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL PrimitiveType: boolean", "DEL SimpleName: getEdges", "DEL MethodInvocation", "DEL SimpleName: INEDGE", "DEL Block", "DEL SimpleType: Vertex", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: value", "DEL SimpleName: needFlow", "DEL TypeDeclaration: class", "DEL SimpleName: floatToText", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: args", "DEL IfStatement", "DEL SimpleName: overFlowMsgList", "DEL ContinueStatement", "DEL SimpleType: Path", "DEL SimpleType: File", "DEL SimpleName: min", "DEL SimpleType: AbstractAggregator", "DEL SimpleName: sendMsg", "DEL Block", "DEL SimpleType: ArrayList", "DEL PrefixExpression: -", "DEL VariableDeclarationStatement", "DEL SimpleName: step", "DEL InfixExpression: >", "DEL SimpleName: getSuperstepCount", "DEL SimpleName: IOException", "DEL SimpleType: FloatWritable", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: setOutputValueClass", "DEL ExpressionStatement", "DEL SimpleType: Text", "DEL SimpleType: FloatWritable", "DEL NumberLiteral: 0", "DEL SimpleName: min", "DEL SimpleName: inEdges", "DEL SimpleName: overFlow", "DEL MethodInvocation", "DEL SimpleType: Edge", "DEL SimpleName: value", "DEL BooleanLiteral: false", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: set", "DEL VariableDeclarationStatement", "DEL SimpleName: clear", "DEL SimpleName: maxFlow", "DEL Block", "DEL SimpleName: overFlow", "DEL SimpleName: setVertexValueClass", "DEL SimpleType: Text", "DEL NumberLiteral: 0", "DEL SimpleName: ArrayList", "DEL SimpleName: m", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: Text", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: valueOf", "DEL SimpleName: v", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"true\"", "DEL Block", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: aggregate", "DEL SimpleName: msg", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL SingleVariableDeclaration", "DEL SimpleName: nflow", "DEL SimpleName: value", "DEL SimpleName: needFlow", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: overFlow", "DEL SimpleType: Edge", "DEL SimpleName: IOException", "DEL PrefixExpression: -", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: getSinkID", "DEL TextElement: Maxflow algorithm, find the max flow from source vertex to sink vertex in a", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: FloatWritable", "DEL SimpleName: textToFloat", "DEL SimpleName: value", "DEL SimpleType: Iterable", "DEL SimpleName: Text", "DEL SimpleName: messages", "DEL NumberLiteral: 0", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: String", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Edge", "DEL SimpleName: path", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: PUSHMSG", "DEL SimpleName: msg", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleType: FloatArrayWritable", "DEL Modifier: private", "DEL SimpleName: textToFloat", "DEL SimpleName: INEDGE", "DEL SimpleName: msg", "DEL ExpressionStatement", "DEL SimpleName: maxFlow", "DEL SimpleName: mArray0", "DEL SimpleName: FIRSTPUSHMSG", "DEL SimpleName: flow", "DEL ExpressionStatement", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL FieldDeclaration", "DEL PrimitiveType: float", "DEL SimpleName: IOException", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: getVertexID", "DEL Block", "DEL SimpleType: FloatWritable", "DEL Modifier: public", "DEL NumberLiteral: 5f", "DEL PrimitiveType: float", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: TextOutputFormat", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: textToFloat", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: v2", "DEL MethodInvocation", "DEL SimpleName: Text", "DEL SimpleType: FloatArrayWritable", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: MaxFlowVertex", "DEL NumberLiteral: 8", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: e", "DEL SimpleName: senseToNeighbors", "DEL SimpleName: FloatWritable", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleType: Text", "DEL SimpleName: FloatWritable", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: addInEdge", "DEL SimpleName: get", "DEL PrimitiveType: void", "DEL InfixExpression: ==", "DEL SimpleName: maxFlow", "DEL SimpleName: rm", "DEL SimpleName: Iterator", "DEL SimpleName: System", "DEL VariableDeclarationFragment", "DEL SimpleName: setInputFormat", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: System", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatWritable", "DEL ClassInstanceCreation", "DEL SimpleName: senseToNeighbors", "DEL SimpleName: Text", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: get", "DEL PrimitiveType: void", "DEL BooleanLiteral: true", "DEL ReturnStatement", "DEL Modifier: static", "DEL SimpleName: value", "DEL InfixExpression: <", "DEL TypeLiteral", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: equals", "DEL MethodDeclaration", "DEL SimpleName: args", "DEL NullLiteral", "DEL ParameterizedType: VertexInputReader<FloatWritable,FloatArrayWritable,Text,FloatArrayWritable,FloatArrayWritable>", "DEL SimpleName: HaveActivingNormalVertex", "DEL InfixExpression: +", "DEL SimpleName: value", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: setNeedFlow", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL SimpleName: get", "DEL SimpleName: getDestinationVertexID", "DEL ExpressionStatement", "DEL SimpleName: aggregate", "DEL SimpleName: FileOutputStream", "DEL SimpleName: setMsgType", "DEL MethodInvocation", "DEL SimpleName: iter", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: OUTEDGE", "DEL SimpleType: IOException", "DEL Modifier: private", "DEL SimpleName: setVertexClass", "DEL SimpleType: LinkedList", "DEL TryStatement", "DEL ReturnStatement", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatWritable", "DEL SimpleName: msg0", "DEL Block", "DEL BooleanLiteral: true", "DEL SimpleName: Math", "DEL ArrayAccess", "DEL SimpleName: Edge", "DEL SimpleName: valueOf", "DEL SimpleName: Text", "DEL Block", "DEL SimpleName: getMsgSenseStep", "DEL Block", "DEL PrimitiveType: boolean", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: BufferedWriter", "DEL SimpleName: getTotalNumVertices", "DEL MethodInvocation", "DEL SimpleName: pushStepCount", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: close", "DEL FieldAccess", "DEL SimpleName: FloatArrayWritable", "DEL ThisExpression", "DEL SimpleName: FloatArrayWritable", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleName: e", "DEL SimpleName: s", "DEL SimpleName: Text", "DEL Dimension", "DEL SimpleName: setEdgeType", "DEL FieldDeclaration", "DEL SimpleName: FloatWritable", "DEL ContinueStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: msg0", "DEL SimpleName: cost", "DEL MethodInvocation", "DEL SimpleName: VertexInputReader", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: compute", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL SimpleName: FloatArrayWritable", "DEL ClassInstanceCreation", "DEL SimpleName: equals", "DEL SimpleName: get", "DEL SimpleType: ArrayList", "DEL EnhancedForStatement", "DEL SimpleName: textToFloat", "DEL Block", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: type", "DEL SimpleName: e", "DEL Modifier: private", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: receiveFlowFromNeighbors", "DEL VariableDeclarationFragment", "DEL SimpleName: HamaConfiguration", "DEL InfixExpression: >", "DEL SimpleName: messages", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL Block", "DEL FieldDeclaration", "DEL SimpleName: setJobName", "DEL PrefixExpression: -", "DEL FieldDeclaration", "DEL SimpleName: msg", "DEL SimpleName: msg", "DEL Modifier: static", "DEL Block", "DEL SimpleName: Math", "DEL SimpleName: bw", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL StringLiteral: \"hama.graph.self.ref\"", "DEL SimpleName: oldFlow", "DEL ClassInstanceCreation", "DEL SimpleName: msg", "DEL SimpleName: IOException", "DEL IfStatement", "DEL NumberLiteral: 2", "DEL Block", "DEL NumberLiteral: 0.0f", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL ClassInstanceCreation", "DEL SimpleName: maxFlow", "DEL SimpleName: value", "DEL SimpleType: FloatWritable", "DEL SimpleName: maxFlow", "DEL SimpleType: LinkedList", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: overFlow", "DEL Modifier: private", "DEL SimpleName: overFlow", "DEL FieldDeclaration", "DEL SimpleName: msg", "DEL SimpleName: e", "DEL PrimitiveType: int", "DEL SimpleName: OUTEDGE", "DEL SimpleName: abs", "DEL IfStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL InfixExpression: >", "DEL SimpleName: oldFlow", "DEL SimpleName: msg", "DEL ExpressionStatement", "DEL InfixExpression: -", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: waitForCompletion", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: getDestinationVertexID", "DEL NumberLiteral: 0", "DEL SimpleName: FloatArrayWritable", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL VariableDeclarationStatement", "DEL SimpleType: FloatArrayWritable", "DEL EnhancedForStatement", "DEL Assignment: =", "DEL BooleanLiteral: false", "DEL SimpleName: FloatWritable", "DEL MethodDeclaration", "DEL SimpleName: setEdgeType", "DEL MethodInvocation", "DEL SimpleName: getEdgeCapacity", "DEL SimpleName: msg0", "DEL Modifier: public", "DEL SimpleName: cap", "DEL SimpleName: floatToText", "DEL SimpleName: msg0", "DEL Block", "DEL SimpleName: bw", "DEL BooleanLiteral: true", "DEL EnhancedForStatement", "DEL SimpleType: Edge", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL Block", "DEL Block", "DEL SimpleName: Text", "DEL ReturnStatement", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL CastExpression", "DEL VariableDeclarationStatement", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: FloatArrayWritable", "DEL InfixExpression: +", "DEL SimpleName: ArrayList", "DEL SimpleName: msg", "DEL VariableDeclarationStatement", "DEL PrimitiveType: double", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL TypeDeclaration: class", "DEL NumberLiteral: 3", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: oldFlow", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL InfixExpression: ==", "DEL NumberLiteral: 0", "DEL SimpleName: Edge", "DEL SimpleName: getEdgeAccordToMsg", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleType: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL ContinueStatement", "DEL SimpleType: FloatArrayWritable", "DEL Dimension", "DEL SimpleName: outEdges", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: inEdges", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: println", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: type", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL SimpleName: Exception", "DEL Modifier: private", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL SimpleName: preSuperStepOverFlow", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL SimpleName: mArray0", "DEL ExpressionStatement", "DEL InfixExpression: -", "DEL SimpleName: msg0", "DEL InfixExpression: -", "DEL ArrayType: String[]", "DEL SimpleName: FloatWritable", "DEL SimpleName: valueOf", "DEL BooleanLiteral: false", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SimpleName: value", "DEL SimpleName: INEDGE", "DEL SimpleType: FloatWritable", "DEL SimpleName: overFlowMsgList", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleName: equals", "DEL SimpleName: mfmcJob", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: args", "DEL ClassInstanceCreation", "DEL Block", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: printUsage", "DEL MethodInvocation", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: cost", "DEL ClassInstanceCreation", "DEL SimpleName: msg", "DEL IfStatement", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL ClassInstanceCreation", "DEL SimpleName: msg0", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL Block", "DEL SimpleName: FloatWritable", "DEL SimpleName: equals", "DEL QualifiedName: Float.MAX_VALUE", "DEL SimpleName: getSinkID", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: args", "DEL SimpleName: e", "DEL SimpleName: addOutEdge", "DEL MethodDeclaration", "DEL SimpleName: getSpareFlow", "DEL SimpleName: msg", "DEL SimpleName: Edge", "DEL SimpleName: setNeedFlow", "DEL SimpleName: printUsage", "DEL SimpleName: getValue", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: FloatWritable", "DEL SimpleName: outEdges", "DEL ClassInstanceCreation", "DEL SimpleName: msgList", "DEL SimpleName: FloatWritable", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: voteToHalt", "DEL PrimitiveType: float", "DEL SimpleName: maxFlow", "DEL SimpleName: e", "DEL SimpleName: pushStepCompleted", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleType: GraphJob", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: maxFlow", "DEL MethodInvocation", "DEL SimpleName: maxFlow", "DEL SimpleName: equals", "DEL SimpleType: HamaConfiguration", "DEL PrimitiveType: float", "DEL SimpleName: FloatWritable", "DEL SimpleName: OUTPUT", "DEL SimpleName: values", "DEL ArrayType: FloatWritable[]", "DEL Modifier: private", "DEL SimpleName: getVertexID", "DEL MethodDeclaration", "DEL IfStatement", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: getEdgeFlow", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL SimpleName: IOException", "DEL EnhancedForStatement", "DEL SimpleName: OutputStreamWriter", "DEL SimpleType: Text", "DEL Dimension", "DEL SimpleName: maxFlow", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL SimpleName: remove", "DEL Block", "DEL ReturnStatement", "DEL ThisExpression", "DEL Block", "DEL SimpleName: capacity", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: setMsgFlow", "DEL ReturnStatement", "DEL Modifier: private", "DEL IfStatement", "DEL SimpleName: haveActivingNormalVertex", "DEL SimpleName: sendMessage", "DEL MethodInvocation", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: Text", "DEL InfixExpression: >", "DEL SimpleName: value", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatArrayWritable", "DEL PrimitiveType: void", "DEL SimpleName: getSourceID", "DEL Modifier: private", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL SimpleName: getEdgeType", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: SENSEMSG", "DEL Block", "DEL SimpleName: MaxFlowVertex", "DEL Block", "DEL ExpressionStatement", "DEL ParameterizedType: ArrayList<FloatArrayWritable>", "DEL BooleanLiteral: true", "DEL SimpleName: FloatWritable", "DEL TagElement", "DEL SimpleName: e", "DEL IfStatement", "DEL SimpleType: FloatWritable", "DEL SimpleName: BufferedWriter", "DEL SimpleName: senseStepCompleted", "DEL ExpressionStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: path", "DEL NumberLiteral: 0", "DEL SimpleName: m", "DEL SimpleName: FloatWritable", "DEL SimpleName: setNeedFlow", "DEL SimpleType: Edge", "DEL SimpleName: get", "DEL SimpleName: msg0", "DEL MethodInvocation", "DEL SimpleName: Text", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL Block", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL Assignment: =", "DEL SimpleType: FloatWritable", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL NumberLiteral: 0", "DEL PrimitiveType: boolean", "DEL ThisExpression", "DEL SimpleName: getValue", "DEL Modifier: public", "DEL SimpleName: FloatWritable", "DEL SimpleName: FloatWritable", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL ParameterizedType: Iterable<FloatArrayWritable>", "DEL SimpleName: vertexID", "DEL Block", "DEL CastExpression", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleName: flow", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: FloatArrayWritable", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: getVertexID", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: senseStepCount", "DEL ExpressionStatement", "DEL SimpleName: setNeedFlow", "DEL SimpleName: setEdgeType", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL SimpleName: stepStatusDetecting", "DEL SimpleType: FloatWritable", "DEL SimpleName: get", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ArrayAccess", "DEL Modifier: static", "DEL PrimitiveType: void", "DEL SimpleName: e", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleType: Edge", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getEdgeCapacity", "DEL MethodDeclaration", "DEL SimpleName: oldFlow", "DEL SimpleType: FloatArrayWritable", "DEL Modifier: public", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: edge", "DEL SimpleName: createJob", "DEL SimpleName: messages", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: flow", "DEL TypeLiteral", "DEL SimpleName: currentTimeMillis", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL SimpleType: FloatArrayWritable", "DEL SimpleType: FloatArrayWritable", "DEL NumberLiteral: 1000", "DEL SimpleName: e", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Edge<Text,FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL IfStatement", "DEL SimpleName: Edge", "DEL SimpleName: Text", "DEL PrimitiveType: float", "DEL MethodInvocation", "DEL SimpleType: FloatArrayWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL SimpleName: SequenceFileInputFormat", "DEL SimpleName: Edge", "DEL SimpleName: FloatWritable", "DEL SimpleType: Text", "DEL SimpleName: getEdgeAccordToMsg", "DEL Modifier: public", "DEL PrefixExpression: !", "DEL IfStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL BooleanLiteral: true", "DEL SimpleName: FloatWritable", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL CastExpression", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: pushMsgList", "DEL SimpleType: FloatWritable", "DEL SimpleName: Edge", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL SimpleName: msg0", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: msg", "DEL SimpleName: flow", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL Assignment: =", "DEL SimpleName: setMsgType", "DEL SimpleName: getMsgVertexID", "DEL Modifier: private", "DEL ArrayAccess", "DEL InfixExpression: ==", "DEL Block", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleType: FloatWritable", "DEL SimpleName: oldFlow", "DEL SimpleType: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: FloatArrayWritable", "DEL IfStatement", "DEL SimpleName: args", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: false", "DEL SimpleName: setEdgeType", "DEL SimpleType: FloatWritable", "DEL SimpleName: getVertexID", "DEL ExpressionStatement", "DEL SimpleName: Edge", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL SimpleName: FloatArrayWritable", "DEL SimpleName: FloatWritable", "DEL SimpleName: FIRSTPUSHMSG", "DEL SimpleName: setMsgPushStep", "DEL MethodDeclaration", "DEL TypeLiteral", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: getValue", "DEL ExpressionStatement", "DEL SimpleName: getEdgeAccordToMsg", "DEL MethodInvocation", "DEL SimpleType: GraphJob", "DEL ExpressionStatement", "DEL SimpleName: FloatArrayWritable", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: getMsgType", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL SimpleName: Text", "DEL Block", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL ArrayAccess", "DEL Modifier: private", "DEL SimpleName: getSinkID", "DEL ExpressionStatement", "DEL ParameterizedType: AbstractAggregator<FloatArrayWritable>", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: get", "DEL SimpleName: e", "DEL SimpleName: getEdgeCapacity", "DEL SimpleName: getSuperstepCount", "DEL MethodInvocation", "DEL SimpleName: Math", "DEL FieldDeclaration", "DEL SimpleName: msg0", "DEL SimpleName: OUTPUT", "DEL SimpleName: msg", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Block", "DEL SimpleType: FloatArrayWritable", "DEL SimpleName: getNeedFlow", "DEL SimpleName: setVertexIDClass", "DEL SimpleName: Text", "DEL Block", "DEL Block", "DEL ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL VariableDeclarationFragment", "DEL SimpleName: getAggregatedValue", "DEL SimpleName: FloatWritable", "DEL MethodInvocation", "DEL Dimension", "DEL MethodInvocation", "DEL Block", "DEL WhileStatement", "DEL SimpleName: f", "DEL FieldDeclaration", "DEL SimpleName: msg", "DEL SimpleName: msg0", "DEL SimpleType: FloatArrayWritable", "DEL ExpressionStatement", "DEL SimpleName: costArray", "DEL SingleVariableDeclaration", "DEL ArrayCreation", "DEL SimpleName: rm", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: msg0", "DEL SimpleName: FloatArrayWritable", "DEL MethodInvocation", "DEL SimpleName: setEdgeType", "DEL SimpleName: msg", "DEL QualifiedName: args.length", "DEL SimpleName: equals", "DEL SimpleName: senseStepCount", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: FloatWritable", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: senseToNeighbor", "DEL ArrayType: Writable[]", "DEL SimpleName: v", "DEL ArrayAccess", "DEL Modifier: private", "DEL SimpleName: set", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: pushStepCompleted", "DEL SimpleType: FloatWritable", "DEL BooleanLiteral: true", "DEL Block", "DEL SimpleName: normalVertexCompute", "DEL SimpleType: FloatArrayWritable", "DEL IfStatement", "DEL SimpleType: FloatArrayWritable", "DEL ParameterizedType: LinkedList<FloatArrayWritable>", "DEL ArrayAccess", "DEL SimpleName: INEDGE", "DEL SimpleName: setInputValueClass", "DEL SimpleName: toString", "DEL BooleanLiteral: false", "DEL SimpleName: min", "DEL Assignment: =", "DEL SimpleName: conf", "DEL SimpleName: flow", "DEL SimpleType: IOException", "DEL EnhancedForStatement", "DEL SimpleType: FloatArrayWritable", "DEL NumberLiteral: 1", "DEL SimpleType: Edge", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: PUSHMSG", "DEL Assignment: =", "DEL Modifier: static", "DEL MethodDeclaration", "DEL SimpleName: getMsgVertexID", "DEL SimpleName: floatToText", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: remove", "DEL SimpleName: hasNext", "DEL SimpleName: Edge", "DEL Dimension", "DEL NumberLiteral: 1", "DEL SimpleName: equals", "DEL NumberLiteral: 4", "DEL VariableDeclarationFragment", "DEL ArrayType: FloatWritable[]", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: senseToNeighbors", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SimpleName: flow", "DEL SimpleType: Text", "DEL IfStatement", "DEL ReturnStatement", "DEL SimpleType: FloatWritable", "DEL SimpleType: Text", "DEL QualifiedName: Float.MAX_VALUE"]}]}}, {"MaxFlow_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.hama.examples(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.BufferedWriter(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.io.File(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.io.FileNotFoundException(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: java.io.FileOutputStream(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: java.io.IOException(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: java.io.OutputStreamWriter(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: java.util.ArrayList(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: java.util.Iterator(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: java.util.LinkedList(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.hadoop.fs.Path(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.hadoop.io.FloatWritable(39)", "Delete ImportDeclaration(40)", "Delete QualifiedName: org.apache.hadoop.io.Text(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: org.apache.hadoop.io.Writable(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.hama.bsp.HashPartitioner(47)", "Delete ImportDeclaration(48)", "Delete QualifiedName: org.apache.hama.bsp.SequenceFileInputFormat(49)", "Delete ImportDeclaration(50)", "Delete QualifiedName: org.apache.hama.bsp.TextOutputFormat(51)", "Delete ImportDeclaration(52)", "Delete QualifiedName: org.apache.hama.commons.io.FloatArrayWritable(53)", "Delete ImportDeclaration(54)", "Delete QualifiedName: org.apache.hama.graph.AbstractAggregator(55)", "Delete ImportDeclaration(56)", "Delete QualifiedName: org.apache.hama.graph.Edge(57)", "Delete ImportDeclaration(58)", "Delete QualifiedName: org.apache.hama.graph.GraphJob(59)", "Delete ImportDeclaration(60)", "Delete QualifiedName: org.apache.hama.graph.Vertex(61)", "Delete ImportDeclaration(62)", "Delete QualifiedName: org.apache.hama.graph.VertexInputReader(63)", "Delete ImportDeclaration(64)", "Delete TextElement: Maxflow algorithm, find the max flow from source vertex to sink vertex in a(65)", "Delete TextElement: graph.(66)", "Delete TagElement(67)", "Delete Javadoc(68)", "Delete Modifier: public(69)", "Delete SimpleName: MaxFlow(70)", "Delete Modifier: public(71)", "Delete Modifier: static(72)", "Delete SimpleName: MaxFlowVertex(73)", "Delete SimpleName: Vertex(74)", "Delete SimpleType: Vertex(75)", "Delete SimpleName: Text(76)", "Delete SimpleType: Text(77)", "Delete SimpleName: FloatArrayWritable(78)", "Delete SimpleType: FloatArrayWritable(79)", "Delete SimpleName: FloatArrayWritable(80)", "Delete SimpleType: FloatArrayWritable(81)", "Delete ParameterizedType: Vertex<Text,FloatArrayWritable,FloatArrayWritable>(82)", "Delete Modifier: static(83)", "Delete PrimitiveType: double(84)", "Delete SimpleName: DAMPING_FACTOR(85)", "Delete NumberLiteral: 0.85(86)", "Delete VariableDeclarationFragment(87)", "Delete FieldDeclaration(88)", "Delete Modifier: static(89)", "Delete PrimitiveType: double(90)", "Delete SimpleName: MAXIMUM_CONVERGENCE_ERROR(91)", "Delete NumberLiteral: 0.001(92)", "Delete VariableDeclarationFragment(93)", "Delete FieldDeclaration(94)", "Delete Modifier: static(95)", "Delete SimpleName: String(96)", "Delete SimpleType: String(97)", "Delete SimpleName: OUTPUT(98)", "Delete NullLiteral(99)", "Delete VariableDeclarationFragment(100)", "Delete FieldDeclaration(101)", "Delete Modifier: static(102)", "Delete SimpleName: FloatWritable(103)", "Delete SimpleType: FloatWritable(104)", "Delete SimpleName: SENSEMSG(105)", "Delete SimpleName: FloatWritable(106)", "Delete SimpleType: FloatWritable(107)", "Delete NumberLiteral: 1(108)", "Delete PrefixExpression: -(109)", "Delete ClassInstanceCreation(110)", "Delete VariableDeclarationFragment(111)", "Delete FieldDeclaration(112)", "Delete Modifier: static(113)", "Delete SimpleName: FloatWritable(114)", "Delete SimpleType: FloatWritable(115)", "Delete SimpleName: PUSHMSG(116)", "Delete SimpleName: FloatWritable(117)", "Delete SimpleType: FloatWritable(118)", "Delete NumberLiteral: 2(119)", "Delete PrefixExpression: -(120)", "Delete ClassInstanceCreation(121)", "Delete VariableDeclarationFragment(122)", "Delete FieldDeclaration(123)", "Delete Modifier: static(124)", "Delete SimpleName: FloatWritable(125)", "Delete SimpleType: FloatWritable(126)", "Delete SimpleName: OVERFLOWMSG(127)", "Delete SimpleName: FloatWritable(128)", "Delete SimpleType: FloatWritable(129)", "Delete NumberLiteral: 7(130)", "Delete PrefixExpression: -(131)", "Delete ClassInstanceCreation(132)", "Delete VariableDeclarationFragment(133)", "Delete FieldDeclaration(134)", "Delete Modifier: static(135)", "Delete SimpleName: FloatWritable(136)", "Delete SimpleType: FloatWritable(137)", "Delete SimpleName: FIRSTPUSHMSG(138)", "Delete SimpleName: FloatWritable(139)", "Delete SimpleType: FloatWritable(140)", "Delete NumberLiteral: 8(141)", "Delete PrefixExpression: -(142)", "Delete ClassInstanceCreation(143)", "Delete VariableDeclarationFragment(144)", "Delete FieldDeclaration(145)", "Delete Modifier: static(146)", "Delete SimpleName: FloatWritable(147)", "Delete SimpleType: FloatWritable(148)", "Delete SimpleName: INEDGE(149)", "Delete SimpleName: FloatWritable(150)", "Delete SimpleType: FloatWritable(151)", "Delete NumberLiteral: 4(152)", "Delete PrefixExpression: -(153)", "Delete ClassInstanceCreation(154)", "Delete VariableDeclarationFragment(155)", "Delete FieldDeclaration(156)", "Delete Modifier: static(157)", "Delete SimpleName: FloatWritable(158)", "Delete SimpleType: FloatWritable(159)", "Delete SimpleName: OUTEDGE(160)", "Delete SimpleName: FloatWritable(161)", "Delete SimpleType: FloatWritable(162)", "Delete NumberLiteral: 5(163)", "Delete PrefixExpression: -(164)", "Delete ClassInstanceCreation(165)", "Delete VariableDeclarationFragment(166)", "Delete FieldDeclaration(167)", "Delete Modifier: private(168)", "Delete PrimitiveType: int(169)", "Delete SimpleName: senseStepCount(170)", "Delete NumberLiteral: 0(171)", "Delete VariableDeclarationFragment(172)", "Delete FieldDeclaration(173)", "Delete Modifier: private(174)", "Delete PrimitiveType: int(175)", "Delete SimpleName: pushStepCount(176)", "Delete NumberLiteral: 0(177)", "Delete VariableDeclarationFragment(178)", "Delete FieldDeclaration(179)", "Delete Modifier: private(180)", "Delete SimpleName: FloatWritable(181)", "Delete SimpleType: FloatWritable(182)", "Delete SimpleName: overFlow(183)", "Delete SimpleName: FloatWritable(184)", "Delete SimpleType: FloatWritable(185)", "Delete NumberLiteral: 0.0f(186)", "Delete ClassInstanceCreation(187)", "Delete VariableDeclarationFragment(188)", "Delete FieldDeclaration(189)", "Delete Modifier: private(190)", "Delete SimpleName: FloatWritable(191)", "Delete SimpleType: FloatWritable(192)", "Delete SimpleName: preSuperStepOverFlow(193)", "Delete SimpleName: FloatWritable(194)", "Delete SimpleType: FloatWritable(195)", "Delete NumberLiteral: 0.0f(196)", "Delete ClassInstanceCreation(197)", "Delete VariableDeclarationFragment(198)", "Delete FieldDeclaration(199)", "Delete SimpleName: FloatArrayWritable(200)", "Delete SimpleType: FloatArrayWritable(201)", "Delete SimpleName: msg0(202)", "Delete SimpleName: FloatArrayWritable(203)", "Delete SimpleType: FloatArrayWritable(204)", "Delete ClassInstanceCreation(205)", "Delete VariableDeclarationFragment(206)", "Delete FieldDeclaration(207)", "Delete SimpleName: FloatWritable(208)", "Delete SimpleType: FloatWritable(209)", "Delete Dimension(210)", "Delete ArrayType: FloatWritable[](211)", "Delete SimpleName: mArray0(212)", "Delete SimpleName: FloatWritable(213)", "Delete SimpleType: FloatWritable(214)", "Delete Dimension(215)", "Delete ArrayType: FloatWritable[](216)", "Delete NumberLiteral: 5(217)", "Delete ArrayCreation(218)", "Delete VariableDeclarationFragment(219)", "Delete FieldDeclaration(220)", "Delete Modifier: public(221)", "Delete SimpleName: ArrayList(222)", "Delete SimpleType: ArrayList(223)", "Delete SimpleName: FloatArrayWritable(224)", "Delete SimpleType: FloatArrayWritable(225)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(226)", "Delete SimpleName: senseMsgList(227)", "Delete SimpleName: ArrayList(228)", "Delete SimpleType: ArrayList(229)", "Delete SimpleName: FloatArrayWritable(230)", "Delete SimpleType: FloatArrayWritable(231)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(232)", "Delete ClassInstanceCreation(233)", "Delete VariableDeclarationFragment(234)", "Delete FieldDeclaration(235)", "Delete Modifier: public(236)", "Delete SimpleName: ArrayList(237)", "Delete SimpleType: ArrayList(238)", "Delete SimpleName: FloatArrayWritable(239)", "Delete SimpleType: FloatArrayWritable(240)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(241)", "Delete SimpleName: pushMsgList(242)", "Delete SimpleName: ArrayList(243)", "Delete SimpleType: ArrayList(244)", "Delete SimpleName: FloatArrayWritable(245)", "Delete SimpleType: FloatArrayWritable(246)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(247)", "Delete ClassInstanceCreation(248)", "Delete VariableDeclarationFragment(249)", "Delete FieldDeclaration(250)", "Delete Modifier: public(251)", "Delete SimpleName: LinkedList(252)", "Delete SimpleType: LinkedList(253)", "Delete SimpleName: Edge(254)", "Delete SimpleType: Edge(255)", "Delete SimpleName: Text(256)", "Delete SimpleType: Text(257)", "Delete SimpleName: FloatArrayWritable(258)", "Delete SimpleType: FloatArrayWritable(259)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(260)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(261)", "Delete SimpleName: inEdges(262)", "Delete SimpleName: LinkedList(263)", "Delete SimpleType: LinkedList(264)", "Delete SimpleName: Edge(265)", "Delete SimpleType: Edge(266)", "Delete SimpleName: Text(267)", "Delete SimpleType: Text(268)", "Delete SimpleName: FloatArrayWritable(269)", "Delete SimpleType: FloatArrayWritable(270)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(271)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(272)", "Delete ClassInstanceCreation(273)", "Delete VariableDeclarationFragment(274)", "Delete FieldDeclaration(275)", "Delete Modifier: public(276)", "Delete SimpleName: LinkedList(277)", "Delete SimpleType: LinkedList(278)", "Delete SimpleName: Edge(279)", "Delete SimpleType: Edge(280)", "Delete SimpleName: Text(281)", "Delete SimpleType: Text(282)", "Delete SimpleName: FloatArrayWritable(283)", "Delete SimpleType: FloatArrayWritable(284)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(285)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(286)", "Delete SimpleName: outEdges(287)", "Delete SimpleName: LinkedList(288)", "Delete SimpleType: LinkedList(289)", "Delete SimpleName: Edge(290)", "Delete SimpleType: Edge(291)", "Delete SimpleName: Text(292)", "Delete SimpleType: Text(293)", "Delete SimpleName: FloatArrayWritable(294)", "Delete SimpleType: FloatArrayWritable(295)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(296)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(297)", "Delete ClassInstanceCreation(298)", "Delete VariableDeclarationFragment(299)", "Delete FieldDeclaration(300)", "Delete Modifier: public(301)", "Delete SimpleName: LinkedList(302)", "Delete SimpleType: LinkedList(303)", "Delete SimpleName: Edge(304)", "Delete SimpleType: Edge(305)", "Delete SimpleName: Text(306)", "Delete SimpleType: Text(307)", "Delete SimpleName: FloatArrayWritable(308)", "Delete SimpleType: FloatArrayWritable(309)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(310)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(311)", "Delete SimpleName: flowedOutEdges(312)", "Delete SimpleName: LinkedList(313)", "Delete SimpleType: LinkedList(314)", "Delete SimpleName: Edge(315)", "Delete SimpleType: Edge(316)", "Delete SimpleName: Text(317)", "Delete SimpleType: Text(318)", "Delete SimpleName: FloatArrayWritable(319)", "Delete SimpleType: FloatArrayWritable(320)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(321)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(322)", "Delete ClassInstanceCreation(323)", "Delete VariableDeclarationFragment(324)", "Delete FieldDeclaration(325)", "Delete Modifier: static(326)", "Delete Modifier: public(327)", "Delete SimpleName: LinkedList(328)", "Delete SimpleType: LinkedList(329)", "Delete SimpleName: FloatArrayWritable(330)", "Delete SimpleType: FloatArrayWritable(331)", "Delete ParameterizedType: LinkedList<FloatArrayWritable>(332)", "Delete SimpleName: overFlowMsgList(333)", "Delete SimpleName: LinkedList(334)", "Delete SimpleType: LinkedList(335)", "Delete SimpleName: FloatArrayWritable(336)", "Delete SimpleType: FloatArrayWritable(337)", "Delete ParameterizedType: LinkedList<FloatArrayWritable>(338)", "Delete ClassInstanceCreation(339)", "Delete VariableDeclarationFragment(340)", "Delete FieldDeclaration(341)", "Delete SimpleName: Override(342)", "Delete MarkerAnnotation(343)", "Delete Modifier: public(344)", "Delete PrimitiveType: void(345)", "Delete SimpleName: setup(346)", "Delete SimpleName: HamaConfiguration(347)", "Delete SimpleType: HamaConfiguration(348)", "Delete SimpleName: conf(349)", "Delete SingleVariableDeclaration(350)", "Delete Block(351)", "Delete MethodDeclaration(352)", "Delete Modifier: public(353)", "Delete PrimitiveType: void(354)", "Delete SimpleName: addInEdge(355)", "Delete SimpleName: Edge(356)", "Delete SimpleType: Edge(357)", "Delete SimpleName: Text(358)", "Delete SimpleType: Text(359)", "Delete SimpleName: FloatArrayWritable(360)", "Delete SimpleType: FloatArrayWritable(361)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(362)", "Delete SimpleName: edge(363)", "Delete SingleVariableDeclaration(364)", "Delete ThisExpression(365)", "Delete SimpleName: inEdges(366)", "Delete FieldAccess(367)", "Delete NullLiteral(368)", "Delete InfixExpression: ==(369)", "Delete ThisExpression(370)", "Delete SimpleName: inEdges(371)", "Delete FieldAccess(372)", "Delete SimpleName: LinkedList(373)", "Delete SimpleType: LinkedList(374)", "Delete SimpleName: Edge(375)", "Delete SimpleType: Edge(376)", "Delete SimpleName: Text(377)", "Delete SimpleType: Text(378)", "Delete SimpleName: FloatArrayWritable(379)", "Delete SimpleType: FloatArrayWritable(380)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(381)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(382)", "Delete ClassInstanceCreation(383)", "Delete Assignment: =(384)", "Delete ExpressionStatement(385)", "Delete IfStatement(386)", "Delete ThisExpression(387)", "Delete SimpleName: inEdges(388)", "Delete FieldAccess(389)", "Delete SimpleName: add(390)", "Delete SimpleName: edge(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete Block(394)", "Delete MethodDeclaration(395)", "Delete Modifier: public(396)", "Delete PrimitiveType: void(397)", "Delete SimpleName: addOutEdge(398)", "Delete SimpleName: Edge(399)", "Delete SimpleType: Edge(400)", "Delete SimpleName: Text(401)", "Delete SimpleType: Text(402)", "Delete SimpleName: FloatArrayWritable(403)", "Delete SimpleType: FloatArrayWritable(404)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(405)", "Delete SimpleName: edge(406)", "Delete SingleVariableDeclaration(407)", "Delete ThisExpression(408)", "Delete SimpleName: outEdges(409)", "Delete FieldAccess(410)", "Delete NullLiteral(411)", "Delete InfixExpression: ==(412)", "Delete ThisExpression(413)", "Delete SimpleName: outEdges(414)", "Delete FieldAccess(415)", "Delete SimpleName: LinkedList(416)", "Delete SimpleType: LinkedList(417)", "Delete SimpleName: Edge(418)", "Delete SimpleType: Edge(419)", "Delete SimpleName: Text(420)", "Delete SimpleType: Text(421)", "Delete SimpleName: FloatArrayWritable(422)", "Delete SimpleType: FloatArrayWritable(423)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(424)", "Delete ParameterizedType: LinkedList<Edge<Text,FloatArrayWritable>>(425)", "Delete ClassInstanceCreation(426)", "Delete Assignment: =(427)", "Delete ExpressionStatement(428)", "Delete IfStatement(429)", "Delete ThisExpression(430)", "Delete SimpleName: outEdges(431)", "Delete FieldAccess(432)", "Delete SimpleName: add(433)", "Delete SimpleName: edge(434)", "Delete MethodInvocation(435)", "Delete ExpressionStatement(436)", "Delete Block(437)", "Delete MethodDeclaration(438)", "Delete SimpleName: Override(439)", "Delete MarkerAnnotation(440)", "Delete Modifier: public(441)", "Delete PrimitiveType: void(442)", "Delete SimpleName: compute(443)", "Delete SimpleName: Iterable(444)", "Delete SimpleType: Iterable(445)", "Delete SimpleName: FloatArrayWritable(446)", "Delete SimpleType: FloatArrayWritable(447)", "Delete ParameterizedType: Iterable<FloatArrayWritable>(448)", "Delete SimpleName: messages(449)", "Delete SingleVariableDeclaration(450)", "Delete SimpleName: IOException(451)", "Delete SimpleType: IOException(452)", "Delete SimpleName: getSuperstepCount(453)", "Delete MethodInvocation(454)", "Delete NumberLiteral: 0(455)", "Delete InfixExpression: ==(456)", "Delete SimpleName: aggregate(457)", "Delete MethodInvocation(458)", "Delete ExpressionStatement(459)", "Delete SimpleName: init(460)", "Delete MethodInvocation(461)", "Delete ExpressionStatement(462)", "Delete ReturnStatement(463)", "Delete Block(464)", "Delete IfStatement(465)", "Delete SimpleName: getVertexID(466)", "Delete MethodInvocation(467)", "Delete SimpleName: equals(468)", "Delete SimpleName: getSinkID(469)", "Delete MethodInvocation(470)", "Delete MethodInvocation(471)", "Delete PrefixExpression: !(472)", "Delete SimpleName: normalVertexCompute(473)", "Delete SimpleName: messages(474)", "Delete MethodInvocation(475)", "Delete ExpressionStatement(476)", "Delete Block(477)", "Delete IfStatement(478)", "Delete EmptyStatement(479)", "Delete SimpleName: getVertexID(480)", "Delete MethodInvocation(481)", "Delete SimpleName: equals(482)", "Delete SimpleName: getSinkID(483)", "Delete MethodInvocation(484)", "Delete MethodInvocation(485)", "Delete SimpleName: masterVertexCompute(486)", "Delete SimpleName: messages(487)", "Delete MethodInvocation(488)", "Delete ExpressionStatement(489)", "Delete Block(490)", "Delete IfStatement(491)", "Delete Block(492)", "Delete MethodDeclaration(493)", "Delete Modifier: private(494)", "Delete PrimitiveType: void(495)", "Delete SimpleName: init(496)", "Delete SimpleName: IOException(497)", "Delete SimpleType: IOException(498)", "Delete SimpleName: Edge(499)", "Delete SimpleType: Edge(500)", "Delete SimpleName: Text(501)", "Delete SimpleType: Text(502)", "Delete SimpleName: FloatArrayWritable(503)", "Delete SimpleType: FloatArrayWritable(504)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(505)", "Delete SimpleName: e(506)", "Delete SingleVariableDeclaration(507)", "Delete SimpleName: getEdges(508)", "Delete MethodInvocation(509)", "Delete SimpleName: e(510)", "Delete SimpleName: getDestinationVertexID(511)", "Delete MethodInvocation(512)", "Delete SimpleName: equals(513)", "Delete SimpleName: getVertexID(514)", "Delete MethodInvocation(515)", "Delete MethodInvocation(516)", "Delete ContinueStatement(517)", "Delete IfStatement(518)", "Delete SimpleName: getEdgeCapacity(519)", "Delete SimpleName: e(520)", "Delete MethodInvocation(521)", "Delete SimpleName: get(522)", "Delete MethodInvocation(523)", "Delete NumberLiteral: 0(524)", "Delete InfixExpression: <(525)", "Delete PrimitiveType: float(526)", "Delete SimpleName: cap(527)", "Delete SimpleName: Math(528)", "Delete SimpleName: abs(529)", "Delete SimpleName: getEdgeCapacity(530)", "Delete SimpleName: e(531)", "Delete MethodInvocation(532)", "Delete SimpleName: get(533)", "Delete MethodInvocation(534)", "Delete MethodInvocation(535)", "Delete VariableDeclarationFragment(536)", "Delete VariableDeclarationStatement(537)", "Delete SimpleName: setEdgeCapacity(538)", "Delete SimpleName: e(539)", "Delete SimpleName: FloatWritable(540)", "Delete SimpleType: FloatWritable(541)", "Delete SimpleName: cap(542)", "Delete ClassInstanceCreation(543)", "Delete MethodInvocation(544)", "Delete ExpressionStatement(545)", "Delete SimpleName: setEdgeType(546)", "Delete SimpleName: e(547)", "Delete SimpleName: getValue(548)", "Delete MethodInvocation(549)", "Delete SimpleName: INEDGE(550)", "Delete MethodInvocation(551)", "Delete ExpressionStatement(552)", "Delete SimpleName: addInEdge(553)", "Delete SimpleName: e(554)", "Delete MethodInvocation(555)", "Delete ExpressionStatement(556)", "Delete Block(557)", "Delete SimpleName: setEdgeType(558)", "Delete SimpleName: e(559)", "Delete SimpleName: getValue(560)", "Delete MethodInvocation(561)", "Delete SimpleName: OUTEDGE(562)", "Delete MethodInvocation(563)", "Delete ExpressionStatement(564)", "Delete SimpleName: addOutEdge(565)", "Delete SimpleName: e(566)", "Delete MethodInvocation(567)", "Delete ExpressionStatement(568)", "Delete Block(569)", "Delete IfStatement(570)", "Delete Block(571)", "Delete EnhancedForStatement(572)", "Delete SimpleName: getVertexID(573)", "Delete MethodInvocation(574)", "Delete SimpleName: equals(575)", "Delete SimpleName: getSinkID(576)", "Delete MethodInvocation(577)", "Delete MethodInvocation(578)", "Delete SimpleName: senseToNeighbors(579)", "Delete SimpleName: FloatWritable(580)", "Delete SimpleType: FloatWritable(581)", "Delete QualifiedName: Float.MAX_VALUE(582)", "Delete ClassInstanceCreation(583)", "Delete MethodInvocation(584)", "Delete ExpressionStatement(585)", "Delete ReturnStatement(586)", "Delete Block(587)", "Delete IfStatement(588)", "Delete SimpleName: getVertexID(589)", "Delete MethodInvocation(590)", "Delete SimpleName: equals(591)", "Delete SimpleName: getSourceID(592)", "Delete MethodInvocation(593)", "Delete MethodInvocation(594)", "Delete SimpleName: overFlow(595)", "Delete SimpleName: set(596)", "Delete QualifiedName: Float.MAX_VALUE(597)", "Delete MethodInvocation(598)", "Delete ExpressionStatement(599)", "Delete ReturnStatement(600)", "Delete Block(601)", "Delete IfStatement(602)", "Delete SimpleName: voteToHalt(603)", "Delete MethodInvocation(604)", "Delete ExpressionStatement(605)", "Delete Block(606)", "Delete MethodDeclaration(607)", "Delete Modifier: private(608)", "Delete PrimitiveType: void(609)", "Delete SimpleName: normalVertexCompute(610)", "Delete SimpleName: Iterable(611)", "Delete SimpleType: Iterable(612)", "Delete SimpleName: FloatArrayWritable(613)", "Delete SimpleType: FloatArrayWritable(614)", "Delete ParameterizedType: Iterable<FloatArrayWritable>(615)", "Delete SimpleName: messages(616)", "Delete SingleVariableDeclaration(617)", "Delete SimpleName: IOException(618)", "Delete SimpleType: IOException(619)", "Delete SimpleName: aggregate(620)", "Delete MethodInvocation(621)", "Delete ExpressionStatement(622)", "Delete SimpleName: ArrayList(623)", "Delete SimpleType: ArrayList(624)", "Delete SimpleName: FloatArrayWritable(625)", "Delete SimpleType: FloatArrayWritable(626)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(627)", "Delete SimpleName: pMsgList(628)", "Delete SimpleName: ArrayList(629)", "Delete SimpleType: ArrayList(630)", "Delete SimpleName: FloatArrayWritable(631)", "Delete SimpleType: FloatArrayWritable(632)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(633)", "Delete ClassInstanceCreation(634)", "Delete VariableDeclarationFragment(635)", "Delete VariableDeclarationStatement(636)", "Delete PrimitiveType: boolean(637)", "Delete SimpleName: senseToNeighbor(638)", "Delete BooleanLiteral: false(639)", "Delete VariableDeclarationFragment(640)", "Delete VariableDeclarationStatement(641)", "Delete SimpleName: FloatArrayWritable(642)", "Delete SimpleType: FloatArrayWritable(643)", "Delete SimpleName: msg(644)", "Delete SingleVariableDeclaration(645)", "Delete SimpleName: messages(646)", "Delete SimpleName: msg(647)", "Delete NullLiteral(648)", "Delete InfixExpression: ==(649)", "Delete ContinueStatement(650)", "Delete IfStatement(651)", "Delete SimpleName: getMsgType(652)", "Delete SimpleName: msg(653)", "Delete MethodInvocation(654)", "Delete SimpleName: equals(655)", "Delete SimpleName: SENSEMSG(656)", "Delete MethodInvocation(657)", "Delete SimpleName: isFirstSense(658)", "Delete SimpleName: msg(659)", "Delete MethodInvocation(660)", "Delete SimpleName: senseToNeighbor(661)", "Delete BooleanLiteral: true(662)", "Delete Assignment: =(663)", "Delete ExpressionStatement(664)", "Delete Block(665)", "Delete IfStatement(666)", "Delete SimpleName: senseMsgList(667)", "Delete SimpleName: add(668)", "Delete SimpleName: msg(669)", "Delete MethodInvocation(670)", "Delete ExpressionStatement(671)", "Delete Block(672)", "Delete SimpleName: getMsgType(673)", "Delete SimpleName: msg(674)", "Delete MethodInvocation(675)", "Delete SimpleName: equals(676)", "Delete SimpleName: PUSHMSG(677)", "Delete MethodInvocation(678)", "Delete SimpleName: pMsgList(679)", "Delete SimpleName: add(680)", "Delete SimpleName: msg(681)", "Delete MethodInvocation(682)", "Delete ExpressionStatement(683)", "Delete SimpleName: pushMsgList(684)", "Delete SimpleName: add(685)", "Delete SimpleName: msg(686)", "Delete MethodInvocation(687)", "Delete ExpressionStatement(688)", "Delete Block(689)", "Delete SimpleName: getMsgType(690)", "Delete SimpleName: msg(691)", "Delete MethodInvocation(692)", "Delete SimpleName: equals(693)", "Delete SimpleName: FIRSTPUSHMSG(694)", "Delete MethodInvocation(695)", "Delete SimpleName: pushFlowToNeighbors(696)", "Delete MethodInvocation(697)", "Delete ExpressionStatement(698)", "Delete Block(699)", "Delete IfStatement(700)", "Delete IfStatement(701)", "Delete IfStatement(702)", "Delete Block(703)", "Delete EnhancedForStatement(704)", "Delete SimpleName: senseToNeighbor(705)", "Delete BooleanLiteral: true(706)", "Delete InfixExpression: ==(707)", "Delete SimpleName: senseToNeighbors(708)", "Delete SimpleName: FloatWritable(709)", "Delete SimpleType: FloatWritable(710)", "Delete QualifiedName: Float.MAX_VALUE(711)", "Delete ClassInstanceCreation(712)", "Delete MethodInvocation(713)", "Delete ExpressionStatement(714)", "Delete SimpleName: overFlow(715)", "Delete SimpleName: get(716)", "Delete MethodInvocation(717)", "Delete NumberLiteral: 0(718)", "Delete InfixExpression: >(719)", "Delete SimpleName: sendOverFlowNodeToMaster(720)", "Delete MethodInvocation(721)", "Delete ExpressionStatement(722)", "Delete Block(723)", "Delete IfStatement(724)", "Delete Block(725)", "Delete IfStatement(726)", "Delete SimpleName: pMsgList(727)", "Delete SimpleName: size(728)", "Delete MethodInvocation(729)", "Delete NumberLiteral: 0(730)", "Delete InfixExpression: >(731)", "Delete SimpleName: pushMsgComsume(732)", "Delete SimpleName: pMsgList(733)", "Delete MethodInvocation(734)", "Delete ExpressionStatement(735)", "Delete Block(736)", "Delete IfStatement(737)", "Delete SimpleName: voteToHalt(738)", "Delete MethodInvocation(739)", "Delete ExpressionStatement(740)", "Delete Block(741)", "Delete MethodDeclaration(742)", "Delete Modifier: private(743)", "Delete PrimitiveType: void(744)", "Delete SimpleName: masterVertexCompute(745)", "Delete SimpleName: Iterable(746)", "Delete SimpleType: Iterable(747)", "Delete SimpleName: FloatArrayWritable(748)", "Delete SimpleType: FloatArrayWritable(749)", "Delete ParameterizedType: Iterable<FloatArrayWritable>(750)", "Delete SimpleName: messages(751)", "Delete SingleVariableDeclaration(752)", "Delete SimpleName: IOException(753)", "Delete SimpleType: IOException(754)", "Delete SimpleName: receiveFlowFromNeighbors(755)", "Delete SimpleName: messages(756)", "Delete MethodInvocation(757)", "Delete ExpressionStatement(758)", "Delete PrimitiveType: boolean(759)", "Delete SimpleName: haveActivingNormalVertex(760)", "Delete SimpleName: HaveActivingNormalVertex(761)", "Delete MethodInvocation(762)", "Delete VariableDeclarationFragment(763)", "Delete VariableDeclarationStatement(764)", "Delete SimpleName: stepStatusDetecting(765)", "Delete SimpleName: haveActivingNormalVertex(766)", "Delete MethodInvocation(767)", "Delete ExpressionStatement(768)", "Delete PrimitiveType: boolean(769)", "Delete SimpleName: pushStepCompleted(770)", "Delete SimpleName: pushStepCompleted(771)", "Delete SimpleName: haveActivingNormalVertex(772)", "Delete MethodInvocation(773)", "Delete VariableDeclarationFragment(774)", "Delete VariableDeclarationStatement(775)", "Delete PrimitiveType: boolean(776)", "Delete SimpleName: senseStepCompleted(777)", "Delete SimpleName: senseStepCompleted(778)", "Delete SimpleName: haveActivingNormalVertex(779)", "Delete MethodInvocation(780)", "Delete VariableDeclarationFragment(781)", "Delete VariableDeclarationStatement(782)", "Delete SimpleName: senseStepCompleted(783)", "Delete SimpleName: aggregate(784)", "Delete MethodInvocation(785)", "Delete ExpressionStatement(786)", "Delete SimpleName: FloatArrayWritable(787)", "Delete SimpleType: FloatArrayWritable(788)", "Delete SimpleName: msg(789)", "Delete SingleVariableDeclaration(790)", "Delete SimpleName: overFlowMsgList(791)", "Delete SimpleName: msg0(792)", "Delete SimpleName: set(793)", "Delete SimpleName: mArray0(794)", "Delete MethodInvocation(795)", "Delete ExpressionStatement(796)", "Delete SimpleName: setMsgType(797)", "Delete SimpleName: msg0(798)", "Delete SimpleName: FIRSTPUSHMSG(799)", "Delete MethodInvocation(800)", "Delete ExpressionStatement(801)", "Delete SimpleName: setMsgPushStep(802)", "Delete SimpleName: msg0(803)", "Delete SimpleName: pushStepCount(804)", "Delete MethodInvocation(805)", "Delete ExpressionStatement(806)", "Delete SimpleName: setMsgVertexID(807)", "Delete SimpleName: msg0(808)", "Delete SimpleName: textToFloat(809)", "Delete SimpleName: getVertexID(810)", "Delete MethodInvocation(811)", "Delete MethodInvocation(812)", "Delete MethodInvocation(813)", "Delete ExpressionStatement(814)", "Delete SimpleName: setMsgFlow(815)", "Delete SimpleName: msg0(816)", "Delete NumberLiteral: 0.0f(817)", "Delete MethodInvocation(818)", "Delete ExpressionStatement(819)", "Delete SimpleName: setEdgeType(820)", "Delete SimpleName: msg0(821)", "Delete SimpleName: FloatWritable(822)", "Delete SimpleType: FloatWritable(823)", "Delete ClassInstanceCreation(824)", "Delete MethodInvocation(825)", "Delete ExpressionStatement(826)", "Delete SimpleName: sendMessage(827)", "Delete SimpleName: floatToText(828)", "Delete SimpleName: getMsgVertexID(829)", "Delete SimpleName: msg(830)", "Delete MethodInvocation(831)", "Delete MethodInvocation(832)", "Delete SimpleName: msg0(833)", "Delete MethodInvocation(834)", "Delete ExpressionStatement(835)", "Delete Block(836)", "Delete EnhancedForStatement(837)", "Delete SimpleName: overFlowMsgList(838)", "Delete SimpleName: clear(839)", "Delete MethodInvocation(840)", "Delete ExpressionStatement(841)", "Delete Block(842)", "Delete IfStatement(843)", "Delete SimpleName: pushStepCompleted(844)", "Delete SimpleName: aggregate(845)", "Delete MethodInvocation(846)", "Delete ExpressionStatement(847)", "Delete SimpleName: algorithmCompleted(848)", "Delete MethodInvocation(849)", "Delete SimpleName: log(850)", "Delete NumberLiteral: 1111(851)", "Delete StringLiteral: \"maxFlow is: \"(852)", "Delete SimpleName: overFlow(853)", "Delete SimpleName: get(854)", "Delete MethodInvocation(855)", "Delete InfixExpression: +(856)", "Delete MethodInvocation(857)", "Delete ExpressionStatement(858)", "Delete SimpleName: printMaxFlowValue(859)", "Delete SimpleName: overFlow(860)", "Delete SimpleName: get(861)", "Delete MethodInvocation(862)", "Delete SimpleName: OUTPUT(863)", "Delete StringLiteral: \"/maxflow\"(864)", "Delete InfixExpression: +(865)", "Delete MethodInvocation(866)", "Delete ExpressionStatement(867)", "Delete SimpleName: voteToHalt(868)", "Delete MethodInvocation(869)", "Delete ExpressionStatement(870)", "Delete Block(871)", "Delete SimpleName: preSuperStepOverFlow(872)", "Delete SimpleName: set(873)", "Delete SimpleName: overFlow(874)", "Delete SimpleName: get(875)", "Delete MethodInvocation(876)", "Delete MethodInvocation(877)", "Delete ExpressionStatement(878)", "Delete SimpleName: senseToNeighbors(879)", "Delete SimpleName: FloatWritable(880)", "Delete SimpleType: FloatWritable(881)", "Delete QualifiedName: Float.MAX_VALUE(882)", "Delete ClassInstanceCreation(883)", "Delete MethodInvocation(884)", "Delete ExpressionStatement(885)", "Delete Block(886)", "Delete IfStatement(887)", "Delete Block(888)", "Delete IfStatement(889)", "Delete EmptyStatement(890)", "Delete Block(891)", "Delete MethodDeclaration(892)", "Delete Modifier: private(893)", "Delete PrimitiveType: void(894)", "Delete SimpleName: senseToNeighbors(895)", "Delete SimpleName: FloatWritable(896)", "Delete SimpleType: FloatWritable(897)", "Delete SimpleName: needFlow(898)", "Delete SingleVariableDeclaration(899)", "Delete SimpleName: IOException(900)", "Delete SimpleType: IOException(901)", "Delete SimpleName: msg0(902)", "Delete SimpleName: set(903)", "Delete SimpleName: mArray0(904)", "Delete MethodInvocation(905)", "Delete ExpressionStatement(906)", "Delete SimpleName: setMsgSenseStep(907)", "Delete SimpleName: msg0(908)", "Delete SimpleName: senseStepCount(909)", "Delete MethodInvocation(910)", "Delete ExpressionStatement(911)", "Delete SimpleName: mArray0(912)", "Delete NumberLiteral: 0(913)", "Delete ArrayAccess(914)", "Delete SimpleName: SENSEMSG(915)", "Delete Assignment: =(916)", "Delete ExpressionStatement(917)", "Delete SimpleName: setMsgType(918)", "Delete SimpleName: msg0(919)", "Delete SimpleName: SENSEMSG(920)", "Delete MethodInvocation(921)", "Delete ExpressionStatement(922)", "Delete SimpleName: setMsgVertexID(923)", "Delete SimpleName: msg0(924)", "Delete SimpleName: textToFloat(925)", "Delete SimpleName: getVertexID(926)", "Delete MethodInvocation(927)", "Delete MethodInvocation(928)", "Delete MethodInvocation(929)", "Delete ExpressionStatement(930)", "Delete SimpleName: Edge(931)", "Delete SimpleType: Edge(932)", "Delete SimpleName: Text(933)", "Delete SimpleType: Text(934)", "Delete SimpleName: FloatArrayWritable(935)", "Delete SimpleType: FloatArrayWritable(936)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(937)", "Delete SimpleName: e(938)", "Delete SingleVariableDeclaration(939)", "Delete SimpleName: inEdges(940)", "Delete SimpleName: setEdgeType(941)", "Delete SimpleName: msg0(942)", "Delete SimpleName: OUTEDGE(943)", "Delete MethodInvocation(944)", "Delete ExpressionStatement(945)", "Delete PrimitiveType: float(946)", "Delete SimpleName: nflow(947)", "Delete SimpleName: Math(948)", "Delete SimpleName: min(949)", "Delete SimpleName: getSpareFlow(950)", "Delete SimpleName: e(951)", "Delete MethodInvocation(952)", "Delete SimpleName: needFlow(953)", "Delete SimpleName: get(954)", "Delete MethodInvocation(955)", "Delete MethodInvocation(956)", "Delete VariableDeclarationFragment(957)", "Delete VariableDeclarationStatement(958)", "Delete PrimitiveType: boolean(959)", "Delete SimpleName: sendMsg(960)", "Delete BooleanLiteral: true(961)", "Delete VariableDeclarationFragment(962)", "Delete VariableDeclarationStatement(963)", "Delete SimpleName: nflow(964)", "Delete NumberLiteral: 0(965)", "Delete InfixExpression: >(966)", "Delete SimpleName: setNeedFlow(967)", "Delete SimpleName: msg0(968)", "Delete SimpleName: nflow(969)", "Delete MethodInvocation(970)", "Delete ExpressionStatement(971)", "Delete SimpleName: FloatArrayWritable(972)", "Delete SimpleType: FloatArrayWritable(973)", "Delete SimpleName: m(974)", "Delete SingleVariableDeclaration(975)", "Delete SimpleName: senseMsgList(976)", "Delete SimpleName: getMsgVertexID(977)", "Delete SimpleName: m(978)", "Delete MethodInvocation(979)", "Delete SimpleName: equals(980)", "Delete SimpleName: e(981)", "Delete SimpleName: getDestinationVertexID(982)", "Delete MethodInvocation(983)", "Delete MethodInvocation(984)", "Delete SimpleName: sendMsg(985)", "Delete BooleanLiteral: false(986)", "Delete Assignment: =(987)", "Delete ExpressionStatement(988)", "Delete BreakStatement(989)", "Delete Block(990)", "Delete IfStatement(991)", "Delete Block(992)", "Delete EnhancedForStatement(993)", "Delete SimpleName: sendMsg(994)", "Delete BooleanLiteral: true(995)", "Delete InfixExpression: ==(996)", "Delete SimpleName: sendMessage(997)", "Delete SimpleName: e(998)", "Delete SimpleName: getDestinationVertexID(999)", "Delete MethodInvocation(1000)", "Delete SimpleName: msg0(1001)", "Delete MethodInvocation(1002)", "Delete ExpressionStatement(1003)", "Delete IfStatement(1004)", "Delete Block(1005)", "Delete IfStatement(1006)", "Delete Block(1007)", "Delete EnhancedForStatement(1008)", "Delete SimpleName: Edge(1009)", "Delete SimpleType: Edge(1010)", "Delete SimpleName: Text(1011)", "Delete SimpleType: Text(1012)", "Delete SimpleName: FloatArrayWritable(1013)", "Delete SimpleType: FloatArrayWritable(1014)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1015)", "Delete SimpleName: e(1016)", "Delete SingleVariableDeclaration(1017)", "Delete SimpleName: outEdges(1018)", "Delete SimpleName: setEdgeType(1019)", "Delete SimpleName: msg0(1020)", "Delete SimpleName: INEDGE(1021)", "Delete MethodInvocation(1022)", "Delete ExpressionStatement(1023)", "Delete SimpleName: setNeedFlow(1024)", "Delete SimpleName: msg0(1025)", "Delete SimpleName: Math(1026)", "Delete SimpleName: min(1027)", "Delete SimpleName: getSpareFlow(1028)", "Delete SimpleName: e(1029)", "Delete MethodInvocation(1030)", "Delete SimpleName: needFlow(1031)", "Delete SimpleName: get(1032)", "Delete MethodInvocation(1033)", "Delete MethodInvocation(1034)", "Delete MethodInvocation(1035)", "Delete ExpressionStatement(1036)", "Delete PrimitiveType: float(1037)", "Delete SimpleName: nflow(1038)", "Delete SimpleName: Math(1039)", "Delete SimpleName: min(1040)", "Delete SimpleName: getSpareFlow(1041)", "Delete SimpleName: e(1042)", "Delete MethodInvocation(1043)", "Delete SimpleName: needFlow(1044)", "Delete SimpleName: get(1045)", "Delete MethodInvocation(1046)", "Delete MethodInvocation(1047)", "Delete VariableDeclarationFragment(1048)", "Delete VariableDeclarationStatement(1049)", "Delete PrimitiveType: boolean(1050)", "Delete SimpleName: sendMsg(1051)", "Delete BooleanLiteral: true(1052)", "Delete VariableDeclarationFragment(1053)", "Delete VariableDeclarationStatement(1054)", "Delete SimpleName: nflow(1055)", "Delete NumberLiteral: 0(1056)", "Delete InfixExpression: >(1057)", "Delete SimpleName: setNeedFlow(1058)", "Delete SimpleName: msg0(1059)", "Delete SimpleName: nflow(1060)", "Delete MethodInvocation(1061)", "Delete ExpressionStatement(1062)", "Delete SimpleName: e(1063)", "Delete SimpleName: getDestinationVertexID(1064)", "Delete MethodInvocation(1065)", "Delete SimpleName: equals(1066)", "Delete SimpleName: getSinkID(1067)", "Delete MethodInvocation(1068)", "Delete MethodInvocation(1069)", "Delete PrefixExpression: !(1070)", "Delete SimpleName: FloatArrayWritable(1071)", "Delete SimpleType: FloatArrayWritable(1072)", "Delete SimpleName: m(1073)", "Delete SingleVariableDeclaration(1074)", "Delete SimpleName: senseMsgList(1075)", "Delete SimpleName: getMsgVertexID(1076)", "Delete SimpleName: m(1077)", "Delete MethodInvocation(1078)", "Delete SimpleName: equals(1079)", "Delete SimpleName: e(1080)", "Delete SimpleName: getDestinationVertexID(1081)", "Delete MethodInvocation(1082)", "Delete MethodInvocation(1083)", "Delete SimpleName: sendMsg(1084)", "Delete BooleanLiteral: false(1085)", "Delete Assignment: =(1086)", "Delete ExpressionStatement(1087)", "Delete BreakStatement(1088)", "Delete Block(1089)", "Delete IfStatement(1090)", "Delete Block(1091)", "Delete EnhancedForStatement(1092)", "Delete SimpleName: sendMsg(1093)", "Delete BooleanLiteral: true(1094)", "Delete InfixExpression: ==(1095)", "Delete SimpleName: sendMessage(1096)", "Delete SimpleName: e(1097)", "Delete SimpleName: getDestinationVertexID(1098)", "Delete MethodInvocation(1099)", "Delete SimpleName: msg0(1100)", "Delete MethodInvocation(1101)", "Delete ExpressionStatement(1102)", "Delete IfStatement(1103)", "Delete Block(1104)", "Delete IfStatement(1105)", "Delete Block(1106)", "Delete IfStatement(1107)", "Delete Block(1108)", "Delete EnhancedForStatement(1109)", "Delete Block(1110)", "Delete MethodDeclaration(1111)", "Delete Modifier: private(1112)", "Delete PrimitiveType: void(1113)", "Delete SimpleName: sendOverFlowNodeToMaster(1114)", "Delete SimpleName: IOException(1115)", "Delete SimpleType: IOException(1116)", "Delete SimpleName: msg0(1117)", "Delete SimpleName: set(1118)", "Delete SimpleName: mArray0(1119)", "Delete MethodInvocation(1120)", "Delete ExpressionStatement(1121)", "Delete SimpleName: setMsgType(1122)", "Delete SimpleName: msg0(1123)", "Delete SimpleName: OVERFLOWMSG(1124)", "Delete MethodInvocation(1125)", "Delete ExpressionStatement(1126)", "Delete SimpleName: setMsgVertexID(1127)", "Delete SimpleName: msg0(1128)", "Delete SimpleName: textToFloat(1129)", "Delete SimpleName: getVertexID(1130)", "Delete MethodInvocation(1131)", "Delete MethodInvocation(1132)", "Delete MethodInvocation(1133)", "Delete ExpressionStatement(1134)", "Delete SimpleName: setMsgFlow(1135)", "Delete SimpleName: msg0(1136)", "Delete NumberLiteral: 0.0f(1137)", "Delete MethodInvocation(1138)", "Delete ExpressionStatement(1139)", "Delete SimpleName: setEdgeType(1140)", "Delete SimpleName: msg0(1141)", "Delete SimpleName: FloatWritable(1142)", "Delete SimpleType: FloatWritable(1143)", "Delete ClassInstanceCreation(1144)", "Delete MethodInvocation(1145)", "Delete ExpressionStatement(1146)", "Delete SimpleName: sendMessage(1147)", "Delete SimpleName: getSinkID(1148)", "Delete MethodInvocation(1149)", "Delete SimpleName: msg0(1150)", "Delete MethodInvocation(1151)", "Delete ExpressionStatement(1152)", "Delete Block(1153)", "Delete MethodDeclaration(1154)", "Delete Modifier: private(1155)", "Delete PrimitiveType: void(1156)", "Delete SimpleName: pushMsgComsume(1157)", "Delete SimpleName: Iterable(1158)", "Delete SimpleType: Iterable(1159)", "Delete SimpleName: FloatArrayWritable(1160)", "Delete SimpleType: FloatArrayWritable(1161)", "Delete ParameterizedType: Iterable<FloatArrayWritable>(1162)", "Delete SimpleName: msgList(1163)", "Delete SingleVariableDeclaration(1164)", "Delete SimpleName: IOException(1165)", "Delete SimpleType: IOException(1166)", "Delete SimpleName: receiveFlowFromNeighbors(1167)", "Delete SimpleName: msgList(1168)", "Delete MethodInvocation(1169)", "Delete ExpressionStatement(1170)", "Delete SimpleName: pushFlowToNeighbors(1171)", "Delete MethodInvocation(1172)", "Delete ExpressionStatement(1173)", "Delete Block(1174)", "Delete MethodDeclaration(1175)", "Delete Modifier: private(1176)", "Delete PrimitiveType: void(1177)", "Delete SimpleName: receiveFlowFromNeighbors(1178)", "Delete SimpleName: Iterable(1179)", "Delete SimpleType: Iterable(1180)", "Delete SimpleName: FloatArrayWritable(1181)", "Delete SimpleType: FloatArrayWritable(1182)", "Delete ParameterizedType: Iterable<FloatArrayWritable>(1183)", "Delete SimpleName: msgList(1184)", "Delete SingleVariableDeclaration(1185)", "Delete SimpleName: FloatArrayWritable(1186)", "Delete SimpleType: FloatArrayWritable(1187)", "Delete SimpleName: msg(1188)", "Delete SingleVariableDeclaration(1189)", "Delete SimpleName: msgList(1190)", "Delete SimpleName: msg(1191)", "Delete NullLiteral(1192)", "Delete InfixExpression: ==(1193)", "Delete ContinueStatement(1194)", "Delete IfStatement(1195)", "Delete SimpleName: getMsgType(1196)", "Delete SimpleName: msg(1197)", "Delete MethodInvocation(1198)", "Delete SimpleName: equals(1199)", "Delete SimpleName: OVERFLOWMSG(1200)", "Delete MethodInvocation(1201)", "Delete SimpleName: overFlowMsgList(1202)", "Delete SimpleName: add(1203)", "Delete SimpleName: msg(1204)", "Delete MethodInvocation(1205)", "Delete ExpressionStatement(1206)", "Delete ContinueStatement(1207)", "Delete Block(1208)", "Delete IfStatement(1209)", "Delete SimpleName: Edge(1210)", "Delete SimpleType: Edge(1211)", "Delete SimpleName: Text(1212)", "Delete SimpleType: Text(1213)", "Delete SimpleName: FloatArrayWritable(1214)", "Delete SimpleType: FloatArrayWritable(1215)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1216)", "Delete SimpleName: e(1217)", "Delete SimpleName: getEdgeAccordToMsg(1218)", "Delete SimpleName: msg(1219)", "Delete MethodInvocation(1220)", "Delete VariableDeclarationFragment(1221)", "Delete VariableDeclarationStatement(1222)", "Delete SimpleName: FloatWritable(1223)", "Delete SimpleType: FloatWritable(1224)", "Delete SimpleName: oldFlow(1225)", "Delete SimpleName: getEdgeFlow(1226)", "Delete SimpleName: e(1227)", "Delete MethodInvocation(1228)", "Delete VariableDeclarationFragment(1229)", "Delete VariableDeclarationStatement(1230)", "Delete SimpleName: FloatWritable(1231)", "Delete SimpleType: FloatWritable(1232)", "Delete SimpleName: flow(1233)", "Delete SimpleName: getMsgFlow(1234)", "Delete SimpleName: msg(1235)", "Delete MethodInvocation(1236)", "Delete VariableDeclarationFragment(1237)", "Delete VariableDeclarationStatement(1238)", "Delete SimpleName: getEdgeType(1239)", "Delete SimpleName: e(1240)", "Delete SimpleName: getValue(1241)", "Delete MethodInvocation(1242)", "Delete MethodInvocation(1243)", "Delete SimpleName: equals(1244)", "Delete SimpleName: INEDGE(1245)", "Delete MethodInvocation(1246)", "Delete SimpleName: oldFlow(1247)", "Delete SimpleName: set(1248)", "Delete SimpleName: oldFlow(1249)", "Delete SimpleName: get(1250)", "Delete MethodInvocation(1251)", "Delete SimpleName: flow(1252)", "Delete SimpleName: get(1253)", "Delete MethodInvocation(1254)", "Delete InfixExpression: +(1255)", "Delete MethodInvocation(1256)", "Delete ExpressionStatement(1257)", "Delete Block(1258)", "Delete SimpleName: getEdgeType(1259)", "Delete SimpleName: e(1260)", "Delete SimpleName: getValue(1261)", "Delete MethodInvocation(1262)", "Delete MethodInvocation(1263)", "Delete SimpleName: equals(1264)", "Delete SimpleName: OUTEDGE(1265)", "Delete MethodInvocation(1266)", "Delete SimpleName: oldFlow(1267)", "Delete SimpleName: set(1268)", "Delete SimpleName: oldFlow(1269)", "Delete SimpleName: get(1270)", "Delete MethodInvocation(1271)", "Delete SimpleName: flow(1272)", "Delete SimpleName: get(1273)", "Delete MethodInvocation(1274)", "Delete InfixExpression: -(1275)", "Delete MethodInvocation(1276)", "Delete ExpressionStatement(1277)", "Delete Block(1278)", "Delete IfStatement(1279)", "Delete IfStatement(1280)", "Delete SimpleName: overFlow(1281)", "Delete SimpleName: set(1282)", "Delete SimpleName: overFlow(1283)", "Delete SimpleName: get(1284)", "Delete MethodInvocation(1285)", "Delete SimpleName: flow(1286)", "Delete SimpleName: get(1287)", "Delete MethodInvocation(1288)", "Delete InfixExpression: +(1289)", "Delete MethodInvocation(1290)", "Delete ExpressionStatement(1291)", "Delete Block(1292)", "Delete EnhancedForStatement(1293)", "Delete Block(1294)", "Delete MethodDeclaration(1295)", "Delete Modifier: private(1296)", "Delete PrimitiveType: void(1297)", "Delete SimpleName: pushFlowToNeighbors(1298)", "Delete SimpleName: IOException(1299)", "Delete SimpleType: IOException(1300)", "Delete SimpleName: ArrayList(1301)", "Delete SimpleType: ArrayList(1302)", "Delete SimpleName: FloatArrayWritable(1303)", "Delete SimpleType: FloatArrayWritable(1304)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(1305)", "Delete SimpleName: inSenseList(1306)", "Delete SimpleName: ArrayList(1307)", "Delete SimpleType: ArrayList(1308)", "Delete SimpleName: FloatArrayWritable(1309)", "Delete SimpleType: FloatArrayWritable(1310)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(1311)", "Delete ClassInstanceCreation(1312)", "Delete VariableDeclarationFragment(1313)", "Delete VariableDeclarationStatement(1314)", "Delete SimpleName: ArrayList(1315)", "Delete SimpleType: ArrayList(1316)", "Delete SimpleName: FloatArrayWritable(1317)", "Delete SimpleType: FloatArrayWritable(1318)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(1319)", "Delete SimpleName: outSenseList(1320)", "Delete SimpleName: ArrayList(1321)", "Delete SimpleType: ArrayList(1322)", "Delete SimpleName: FloatArrayWritable(1323)", "Delete SimpleType: FloatArrayWritable(1324)", "Delete ParameterizedType: ArrayList<FloatArrayWritable>(1325)", "Delete ClassInstanceCreation(1326)", "Delete VariableDeclarationFragment(1327)", "Delete VariableDeclarationStatement(1328)", "Delete SimpleName: Iterator(1329)", "Delete SimpleType: Iterator(1330)", "Delete SimpleName: FloatArrayWritable(1331)", "Delete SimpleType: FloatArrayWritable(1332)", "Delete ParameterizedType: Iterator<FloatArrayWritable>(1333)", "Delete SimpleName: iter(1334)", "Delete SimpleName: senseMsgList(1335)", "Delete SimpleName: iterator(1336)", "Delete MethodInvocation(1337)", "Delete VariableDeclarationFragment(1338)", "Delete VariableDeclarationStatement(1339)", "Delete SimpleName: iter(1340)", "Delete SimpleName: hasNext(1341)", "Delete MethodInvocation(1342)", "Delete SimpleName: FloatArrayWritable(1343)", "Delete SimpleType: FloatArrayWritable(1344)", "Delete SimpleName: msg(1345)", "Delete SimpleName: FloatArrayWritable(1346)", "Delete SimpleType: FloatArrayWritable(1347)", "Delete SimpleName: iter(1348)", "Delete SimpleName: next(1349)", "Delete MethodInvocation(1350)", "Delete CastExpression(1351)", "Delete VariableDeclarationFragment(1352)", "Delete VariableDeclarationStatement(1353)", "Delete SimpleName: getMsgSenseStep(1354)", "Delete SimpleName: msg(1355)", "Delete MethodInvocation(1356)", "Delete SimpleName: senseStepCount(1357)", "Delete InfixExpression: <(1358)", "Delete SimpleName: iter(1359)", "Delete SimpleName: remove(1360)", "Delete MethodInvocation(1361)", "Delete ExpressionStatement(1362)", "Delete ContinueStatement(1363)", "Delete Block(1364)", "Delete IfStatement(1365)", "Delete PrimitiveType: boolean(1366)", "Delete SimpleName: rm(1367)", "Delete BooleanLiteral: false(1368)", "Delete VariableDeclarationFragment(1369)", "Delete VariableDeclarationStatement(1370)", "Delete SimpleName: FloatArrayWritable(1371)", "Delete SimpleType: FloatArrayWritable(1372)", "Delete SimpleName: m(1373)", "Delete SingleVariableDeclaration(1374)", "Delete SimpleName: pushMsgList(1375)", "Delete SimpleName: getMsgVertexID(1376)", "Delete SimpleName: msg(1377)", "Delete MethodInvocation(1378)", "Delete SimpleName: equals(1379)", "Delete SimpleName: getMsgVertexID(1380)", "Delete SimpleName: m(1381)", "Delete MethodInvocation(1382)", "Delete MethodInvocation(1383)", "Delete SimpleName: rm(1384)", "Delete BooleanLiteral: true(1385)", "Delete Assignment: =(1386)", "Delete ExpressionStatement(1387)", "Delete BreakStatement(1388)", "Delete Block(1389)", "Delete IfStatement(1390)", "Delete Block(1391)", "Delete EnhancedForStatement(1392)", "Delete SimpleName: rm(1393)", "Delete BooleanLiteral: true(1394)", "Delete InfixExpression: ==(1395)", "Delete SimpleName: iter(1396)", "Delete SimpleName: remove(1397)", "Delete MethodInvocation(1398)", "Delete ExpressionStatement(1399)", "Delete Block(1400)", "Delete IfStatement(1401)", "Delete Block(1402)", "Delete WhileStatement(1403)", "Delete SimpleName: FloatArrayWritable(1404)", "Delete SimpleType: FloatArrayWritable(1405)", "Delete SimpleName: msg(1406)", "Delete SingleVariableDeclaration(1407)", "Delete SimpleName: senseMsgList(1408)", "Delete SimpleName: getEdgeType(1409)", "Delete SimpleName: msg(1410)", "Delete MethodInvocation(1411)", "Delete SimpleName: equals(1412)", "Delete SimpleName: INEDGE(1413)", "Delete MethodInvocation(1414)", "Delete SimpleName: inSenseList(1415)", "Delete SimpleName: add(1416)", "Delete SimpleName: msg(1417)", "Delete MethodInvocation(1418)", "Delete ExpressionStatement(1419)", "Delete SimpleName: getEdgeType(1420)", "Delete SimpleName: msg(1421)", "Delete MethodInvocation(1422)", "Delete SimpleName: equals(1423)", "Delete SimpleName: OUTEDGE(1424)", "Delete MethodInvocation(1425)", "Delete SimpleName: outSenseList(1426)", "Delete SimpleName: add(1427)", "Delete SimpleName: msg(1428)", "Delete MethodInvocation(1429)", "Delete ExpressionStatement(1430)", "Delete IfStatement(1431)", "Delete IfStatement(1432)", "Delete Block(1433)", "Delete EnhancedForStatement(1434)", "Delete SimpleName: msg0(1435)", "Delete SimpleName: set(1436)", "Delete SimpleName: mArray0(1437)", "Delete MethodInvocation(1438)", "Delete ExpressionStatement(1439)", "Delete SimpleName: setMsgType(1440)", "Delete SimpleName: msg0(1441)", "Delete SimpleName: PUSHMSG(1442)", "Delete MethodInvocation(1443)", "Delete ExpressionStatement(1444)", "Delete SimpleName: setMsgVertexID(1445)", "Delete SimpleName: msg0(1446)", "Delete SimpleName: textToFloat(1447)", "Delete SimpleName: getVertexID(1448)", "Delete MethodInvocation(1449)", "Delete MethodInvocation(1450)", "Delete MethodInvocation(1451)", "Delete ExpressionStatement(1452)", "Delete SimpleName: FloatArrayWritable(1453)", "Delete SimpleType: FloatArrayWritable(1454)", "Delete SimpleName: msg(1455)", "Delete SingleVariableDeclaration(1456)", "Delete SimpleName: outSenseList(1457)", "Delete SimpleName: Edge(1458)", "Delete SimpleType: Edge(1459)", "Delete SimpleName: Text(1460)", "Delete SimpleType: Text(1461)", "Delete SimpleName: FloatArrayWritable(1462)", "Delete SimpleType: FloatArrayWritable(1463)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1464)", "Delete SimpleName: e(1465)", "Delete SimpleName: getEdgeAccordToMsg(1466)", "Delete SimpleName: msg(1467)", "Delete MethodInvocation(1468)", "Delete VariableDeclarationFragment(1469)", "Delete VariableDeclarationStatement(1470)", "Delete SimpleName: overFlow(1471)", "Delete SimpleName: get(1472)", "Delete MethodInvocation(1473)", "Delete NumberLiteral: 0(1474)", "Delete InfixExpression: >(1475)", "Delete SimpleName: FloatWritable(1476)", "Delete SimpleType: FloatWritable(1477)", "Delete SimpleName: oldFlow(1478)", "Delete SimpleName: getEdgeFlow(1479)", "Delete SimpleName: e(1480)", "Delete MethodInvocation(1481)", "Delete VariableDeclarationFragment(1482)", "Delete VariableDeclarationStatement(1483)", "Delete SimpleName: FloatWritable(1484)", "Delete SimpleType: FloatWritable(1485)", "Delete SimpleName: cap(1486)", "Delete SimpleName: getEdgeCapacity(1487)", "Delete SimpleName: e(1488)", "Delete MethodInvocation(1489)", "Delete VariableDeclarationFragment(1490)", "Delete VariableDeclarationStatement(1491)", "Delete PrimitiveType: float(1492)", "Delete SimpleName: flow(1493)", "Delete SimpleName: Math(1494)", "Delete SimpleName: min(1495)", "Delete SimpleName: overFlow(1496)", "Delete SimpleName: get(1497)", "Delete MethodInvocation(1498)", "Delete SimpleName: cap(1499)", "Delete SimpleName: get(1500)", "Delete MethodInvocation(1501)", "Delete SimpleName: oldFlow(1502)", "Delete SimpleName: get(1503)", "Delete MethodInvocation(1504)", "Delete InfixExpression: -(1505)", "Delete MethodInvocation(1506)", "Delete VariableDeclarationFragment(1507)", "Delete VariableDeclarationStatement(1508)", "Delete SimpleName: flow(1509)", "Delete NumberLiteral: 0(1510)", "Delete InfixExpression: >(1511)", "Delete SimpleName: overFlow(1512)", "Delete SimpleName: set(1513)", "Delete SimpleName: overFlow(1514)", "Delete SimpleName: get(1515)", "Delete MethodInvocation(1516)", "Delete SimpleName: flow(1517)", "Delete InfixExpression: -(1518)", "Delete MethodInvocation(1519)", "Delete ExpressionStatement(1520)", "Delete SimpleName: oldFlow(1521)", "Delete SimpleName: set(1522)", "Delete SimpleName: oldFlow(1523)", "Delete SimpleName: get(1524)", "Delete MethodInvocation(1525)", "Delete SimpleName: flow(1526)", "Delete InfixExpression: +(1527)", "Delete MethodInvocation(1528)", "Delete ExpressionStatement(1529)", "Delete SimpleName: setEdgeType(1530)", "Delete SimpleName: msg0(1531)", "Delete SimpleName: INEDGE(1532)", "Delete MethodInvocation(1533)", "Delete ExpressionStatement(1534)", "Delete SimpleName: setMsgFlow(1535)", "Delete SimpleName: msg0(1536)", "Delete SimpleName: flow(1537)", "Delete MethodInvocation(1538)", "Delete ExpressionStatement(1539)", "Delete SimpleName: sendMessage(1540)", "Delete SimpleName: e(1541)", "Delete SimpleName: msg0(1542)", "Delete MethodInvocation(1543)", "Delete ExpressionStatement(1544)", "Delete Block(1545)", "Delete IfStatement(1546)", "Delete Block(1547)", "Delete BreakStatement(1548)", "Delete Block(1549)", "Delete IfStatement(1550)", "Delete Block(1551)", "Delete EnhancedForStatement(1552)", "Delete SimpleName: FloatArrayWritable(1553)", "Delete SimpleType: FloatArrayWritable(1554)", "Delete SimpleName: msg(1555)", "Delete SingleVariableDeclaration(1556)", "Delete SimpleName: inSenseList(1557)", "Delete SimpleName: Edge(1558)", "Delete SimpleType: Edge(1559)", "Delete SimpleName: Text(1560)", "Delete SimpleType: Text(1561)", "Delete SimpleName: FloatArrayWritable(1562)", "Delete SimpleType: FloatArrayWritable(1563)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1564)", "Delete SimpleName: e(1565)", "Delete SimpleName: getEdgeAccordToMsg(1566)", "Delete SimpleName: msg(1567)", "Delete MethodInvocation(1568)", "Delete VariableDeclarationFragment(1569)", "Delete VariableDeclarationStatement(1570)", "Delete SimpleName: overFlow(1571)", "Delete SimpleName: get(1572)", "Delete MethodInvocation(1573)", "Delete NumberLiteral: 0(1574)", "Delete InfixExpression: >(1575)", "Delete SimpleName: FloatWritable(1576)", "Delete SimpleType: FloatWritable(1577)", "Delete SimpleName: oldFlow(1578)", "Delete SimpleName: FloatWritable(1579)", "Delete SimpleType: FloatWritable(1580)", "Delete SimpleName: e(1581)", "Delete SimpleName: getValue(1582)", "Delete MethodInvocation(1583)", "Delete SimpleName: get(1584)", "Delete MethodInvocation(1585)", "Delete NumberLiteral: 0(1586)", "Delete ArrayAccess(1587)", "Delete CastExpression(1588)", "Delete VariableDeclarationFragment(1589)", "Delete VariableDeclarationStatement(1590)", "Delete PrimitiveType: float(1591)", "Delete SimpleName: flow(1592)", "Delete SimpleName: Math(1593)", "Delete SimpleName: min(1594)", "Delete SimpleName: overFlow(1595)", "Delete SimpleName: get(1596)", "Delete MethodInvocation(1597)", "Delete SimpleName: oldFlow(1598)", "Delete SimpleName: get(1599)", "Delete MethodInvocation(1600)", "Delete MethodInvocation(1601)", "Delete VariableDeclarationFragment(1602)", "Delete VariableDeclarationStatement(1603)", "Delete SimpleName: flow(1604)", "Delete NumberLiteral: 0(1605)", "Delete InfixExpression: >(1606)", "Delete SimpleName: overFlow(1607)", "Delete SimpleName: set(1608)", "Delete SimpleName: overFlow(1609)", "Delete SimpleName: get(1610)", "Delete MethodInvocation(1611)", "Delete SimpleName: flow(1612)", "Delete InfixExpression: -(1613)", "Delete MethodInvocation(1614)", "Delete ExpressionStatement(1615)", "Delete SimpleName: oldFlow(1616)", "Delete SimpleName: set(1617)", "Delete SimpleName: oldFlow(1618)", "Delete SimpleName: get(1619)", "Delete MethodInvocation(1620)", "Delete SimpleName: flow(1621)", "Delete InfixExpression: -(1622)", "Delete MethodInvocation(1623)", "Delete ExpressionStatement(1624)", "Delete SimpleName: setEdgeType(1625)", "Delete SimpleName: msg0(1626)", "Delete SimpleName: OUTEDGE(1627)", "Delete MethodInvocation(1628)", "Delete ExpressionStatement(1629)", "Delete SimpleName: setMsgFlow(1630)", "Delete SimpleName: msg0(1631)", "Delete SimpleName: flow(1632)", "Delete MethodInvocation(1633)", "Delete ExpressionStatement(1634)", "Delete SimpleName: sendMessage(1635)", "Delete SimpleName: e(1636)", "Delete SimpleName: msg0(1637)", "Delete MethodInvocation(1638)", "Delete ExpressionStatement(1639)", "Delete Block(1640)", "Delete IfStatement(1641)", "Delete Block(1642)", "Delete BreakStatement(1643)", "Delete Block(1644)", "Delete IfStatement(1645)", "Delete Block(1646)", "Delete EnhancedForStatement(1647)", "Delete Block(1648)", "Delete MethodDeclaration(1649)", "Delete Modifier: private(1650)", "Delete PrimitiveType: boolean(1651)", "Delete SimpleName: algorithmCompleted(1652)", "Delete SimpleName: preSuperStepOverFlow(1653)", "Delete SimpleName: equals(1654)", "Delete SimpleName: overFlow(1655)", "Delete MethodInvocation(1656)", "Delete SimpleName: overFlow(1657)", "Delete SimpleName: get(1658)", "Delete MethodInvocation(1659)", "Delete NumberLiteral: 0(1660)", "Delete InfixExpression: >(1661)", "Delete InfixExpression: &&(1662)", "Delete BooleanLiteral: true(1663)", "Delete ReturnStatement(1664)", "Delete BooleanLiteral: false(1665)", "Delete ReturnStatement(1666)", "Delete IfStatement(1667)", "Delete Block(1668)", "Delete MethodDeclaration(1669)", "Delete Modifier: private(1670)", "Delete PrimitiveType: void(1671)", "Delete SimpleName: stepStatusDetecting(1672)", "Delete SimpleName: Boolean(1673)", "Delete SimpleType: Boolean(1674)", "Delete SimpleName: haveActivingNormalVertex(1675)", "Delete SingleVariableDeclaration(1676)", "Delete SimpleName: haveActivingNormalVertex(1677)", "Delete PrefixExpression: !(1678)", "Delete SimpleName: senseStepCount(1679)", "Delete SimpleName: pushStepCount(1680)", "Delete InfixExpression: ==(1681)", "Delete SimpleName: senseStepCount(1682)", "Delete PostfixExpression: ++(1683)", "Delete ExpressionStatement(1684)", "Delete Block(1685)", "Delete SimpleName: senseStepCount(1686)", "Delete SimpleName: pushStepCount(1687)", "Delete InfixExpression: >(1688)", "Delete SimpleName: pushStepCount(1689)", "Delete PostfixExpression: ++(1690)", "Delete ExpressionStatement(1691)", "Delete Block(1692)", "Delete IfStatement(1693)", "Delete IfStatement(1694)", "Delete Block(1695)", "Delete IfStatement(1696)", "Delete Block(1697)", "Delete MethodDeclaration(1698)", "Delete Modifier: private(1699)", "Delete PrimitiveType: boolean(1700)", "Delete SimpleName: pushStepCompleted(1701)", "Delete PrimitiveType: boolean(1702)", "Delete SimpleName: haveActivingNormalVertex(1703)", "Delete SingleVariableDeclaration(1704)", "Delete SimpleName: haveActivingNormalVertex(1705)", "Delete BooleanLiteral: false(1706)", "Delete ReturnStatement(1707)", "Delete IfStatement(1708)", "Delete SimpleName: getSuperstepCount(1709)", "Delete MethodInvocation(1710)", "Delete NumberLiteral: 2(1711)", "Delete InfixExpression: <=(1712)", "Delete BooleanLiteral: false(1713)", "Delete ReturnStatement(1714)", "Delete IfStatement(1715)", "Delete SimpleName: senseStepCount(1716)", "Delete SimpleName: pushStepCount(1717)", "Delete InfixExpression: >(1718)", "Delete ReturnStatement(1719)", "Delete Block(1720)", "Delete MethodDeclaration(1721)", "Delete Modifier: private(1722)", "Delete PrimitiveType: boolean(1723)", "Delete SimpleName: senseStepCompleted(1724)", "Delete PrimitiveType: boolean(1725)", "Delete SimpleName: haveActivingNormalVertex(1726)", "Delete SingleVariableDeclaration(1727)", "Delete SimpleName: haveActivingNormalVertex(1728)", "Delete BooleanLiteral: false(1729)", "Delete ReturnStatement(1730)", "Delete IfStatement(1731)", "Delete SimpleName: getSuperstepCount(1732)", "Delete MethodInvocation(1733)", "Delete NumberLiteral: 2(1734)", "Delete InfixExpression: <=(1735)", "Delete BooleanLiteral: false(1736)", "Delete ReturnStatement(1737)", "Delete IfStatement(1738)", "Delete SimpleName: senseStepCount(1739)", "Delete SimpleName: pushStepCount(1740)", "Delete InfixExpression: ==(1741)", "Delete ReturnStatement(1742)", "Delete Block(1743)", "Delete MethodDeclaration(1744)", "Delete Modifier: private(1745)", "Delete PrimitiveType: boolean(1746)", "Delete SimpleName: HaveActivingNormalVertex(1747)", "Delete SimpleName: FloatArrayWritable(1748)", "Delete SimpleType: FloatArrayWritable(1749)", "Delete SimpleName: value(1750)", "Delete SimpleName: getAggregatedValue(1751)", "Delete NumberLiteral: 0(1752)", "Delete MethodInvocation(1753)", "Delete VariableDeclarationFragment(1754)", "Delete VariableDeclarationStatement(1755)", "Delete SimpleName: value(1756)", "Delete NullLiteral(1757)", "Delete InfixExpression: ==(1758)", "Delete BooleanLiteral: true(1759)", "Delete ReturnStatement(1760)", "Delete IfStatement(1761)", "Delete SimpleName: FloatWritable(1762)", "Delete SimpleType: FloatWritable(1763)", "Delete SimpleName: temp(1764)", "Delete SimpleName: FloatWritable(1765)", "Delete SimpleType: FloatWritable(1766)", "Delete SimpleName: value(1767)", "Delete SimpleName: get(1768)", "Delete MethodInvocation(1769)", "Delete NumberLiteral: 0(1770)", "Delete ArrayAccess(1771)", "Delete CastExpression(1772)", "Delete VariableDeclarationFragment(1773)", "Delete VariableDeclarationStatement(1774)", "Delete SimpleName: temp(1775)", "Delete SimpleName: get(1776)", "Delete MethodInvocation(1777)", "Delete SimpleName: getSuperstepCount(1778)", "Delete MethodInvocation(1779)", "Delete NumberLiteral: 1(1780)", "Delete InfixExpression: -(1781)", "Delete InfixExpression: <(1782)", "Delete BooleanLiteral: false(1783)", "Delete ReturnStatement(1784)", "Delete Block(1785)", "Delete SimpleName: temp(1786)", "Delete SimpleName: get(1787)", "Delete MethodInvocation(1788)", "Delete SimpleName: getSuperstepCount(1789)", "Delete MethodInvocation(1790)", "Delete NumberLiteral: 1(1791)", "Delete InfixExpression: -(1792)", "Delete InfixExpression: ==(1793)", "Delete BooleanLiteral: true(1794)", "Delete ReturnStatement(1795)", "Delete Block(1796)", "Delete IfStatement(1797)", "Delete IfStatement(1798)", "Delete BooleanLiteral: true(1799)", "Delete ReturnStatement(1800)", "Delete Block(1801)", "Delete MethodDeclaration(1802)", "Delete Modifier: private(1803)", "Delete PrimitiveType: float(1804)", "Delete SimpleName: getSpareFlow(1805)", "Delete SimpleName: Edge(1806)", "Delete SimpleType: Edge(1807)", "Delete SimpleName: Text(1808)", "Delete SimpleType: Text(1809)", "Delete SimpleName: FloatArrayWritable(1810)", "Delete SimpleType: FloatArrayWritable(1811)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1812)", "Delete SimpleName: e(1813)", "Delete SingleVariableDeclaration(1814)", "Delete SimpleName: FloatWritable(1815)", "Delete SimpleType: FloatWritable(1816)", "Delete SimpleName: type(1817)", "Delete SimpleName: getEdgeType(1818)", "Delete SimpleName: e(1819)", "Delete SimpleName: getValue(1820)", "Delete MethodInvocation(1821)", "Delete MethodInvocation(1822)", "Delete VariableDeclarationFragment(1823)", "Delete VariableDeclarationStatement(1824)", "Delete PrimitiveType: float(1825)", "Delete SimpleName: cap(1826)", "Delete SimpleName: getEdgeCapacity(1827)", "Delete SimpleName: e(1828)", "Delete MethodInvocation(1829)", "Delete SimpleName: get(1830)", "Delete MethodInvocation(1831)", "Delete VariableDeclarationFragment(1832)", "Delete VariableDeclarationStatement(1833)", "Delete PrimitiveType: float(1834)", "Delete SimpleName: flow(1835)", "Delete SimpleName: getEdgeFlow(1836)", "Delete SimpleName: e(1837)", "Delete MethodInvocation(1838)", "Delete SimpleName: get(1839)", "Delete MethodInvocation(1840)", "Delete VariableDeclarationFragment(1841)", "Delete VariableDeclarationStatement(1842)", "Delete PrimitiveType: float(1843)", "Delete SimpleName: ret(1844)", "Delete NumberLiteral: 0.0f(1845)", "Delete VariableDeclarationFragment(1846)", "Delete VariableDeclarationStatement(1847)", "Delete SimpleName: type(1848)", "Delete SimpleName: equals(1849)", "Delete SimpleName: INEDGE(1850)", "Delete MethodInvocation(1851)", "Delete SimpleName: ret(1852)", "Delete SimpleName: cap(1853)", "Delete SimpleName: flow(1854)", "Delete InfixExpression: -(1855)", "Delete Assignment: =(1856)", "Delete ExpressionStatement(1857)", "Delete Block(1858)", "Delete SimpleName: type(1859)", "Delete SimpleName: equals(1860)", "Delete SimpleName: OUTEDGE(1861)", "Delete MethodInvocation(1862)", "Delete SimpleName: ret(1863)", "Delete SimpleName: flow(1864)", "Delete Assignment: =(1865)", "Delete ExpressionStatement(1866)", "Delete Block(1867)", "Delete IfStatement(1868)", "Delete IfStatement(1869)", "Delete SimpleName: ret(1870)", "Delete ReturnStatement(1871)", "Delete Block(1872)", "Delete MethodDeclaration(1873)", "Delete Modifier: private(1874)", "Delete PrimitiveType: void(1875)", "Delete SimpleName: aggregate(1876)", "Delete SimpleName: IOException(1877)", "Delete SimpleType: IOException(1878)", "Delete SimpleName: FloatArrayWritable(1879)", "Delete SimpleType: FloatArrayWritable(1880)", "Delete SimpleName: array(1881)", "Delete SimpleName: FloatArrayWritable(1882)", "Delete SimpleType: FloatArrayWritable(1883)", "Delete ClassInstanceCreation(1884)", "Delete VariableDeclarationFragment(1885)", "Delete VariableDeclarationStatement(1886)", "Delete SimpleName: FloatWritable(1887)", "Delete SimpleType: FloatWritable(1888)", "Delete Dimension(1889)", "Delete ArrayType: FloatWritable[](1890)", "Delete SimpleName: farray(1891)", "Delete SimpleName: FloatWritable(1892)", "Delete SimpleType: FloatWritable(1893)", "Delete Dimension(1894)", "Delete ArrayType: FloatWritable[](1895)", "Delete NumberLiteral: 1(1896)", "Delete ArrayCreation(1897)", "Delete VariableDeclarationFragment(1898)", "Delete VariableDeclarationStatement(1899)", "Delete SimpleName: array(1900)", "Delete SimpleName: set(1901)", "Delete SimpleName: farray(1902)", "Delete MethodInvocation(1903)", "Delete ExpressionStatement(1904)", "Delete SimpleName: farray(1905)", "Delete NumberLiteral: 0(1906)", "Delete ArrayAccess(1907)", "Delete SimpleName: FloatWritable(1908)", "Delete SimpleType: FloatWritable(1909)", "Delete PrimitiveType: float(1910)", "Delete SimpleName: getSuperstepCount(1911)", "Delete MethodInvocation(1912)", "Delete CastExpression(1913)", "Delete ClassInstanceCreation(1914)", "Delete Assignment: =(1915)", "Delete ExpressionStatement(1916)", "Delete SimpleName: aggregate(1917)", "Delete NumberLiteral: 0(1918)", "Delete SimpleName: array(1919)", "Delete MethodInvocation(1920)", "Delete ExpressionStatement(1921)", "Delete Block(1922)", "Delete MethodDeclaration(1923)", "Delete Modifier: private(1924)", "Delete SimpleName: Edge(1925)", "Delete SimpleType: Edge(1926)", "Delete SimpleName: Text(1927)", "Delete SimpleType: Text(1928)", "Delete SimpleName: FloatArrayWritable(1929)", "Delete SimpleType: FloatArrayWritable(1930)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1931)", "Delete SimpleName: getEdgeAccordToMsg(1932)", "Delete SimpleName: FloatArrayWritable(1933)", "Delete SimpleType: FloatArrayWritable(1934)", "Delete SimpleName: msg(1935)", "Delete SingleVariableDeclaration(1936)", "Delete SimpleName: Text(1937)", "Delete SimpleType: Text(1938)", "Delete SimpleName: vertexID(1939)", "Delete SimpleName: floatToText(1940)", "Delete SimpleName: getMsgVertexID(1941)", "Delete SimpleName: msg(1942)", "Delete MethodInvocation(1943)", "Delete MethodInvocation(1944)", "Delete VariableDeclarationFragment(1945)", "Delete VariableDeclarationStatement(1946)", "Delete SimpleName: Edge(1947)", "Delete SimpleType: Edge(1948)", "Delete SimpleName: Text(1949)", "Delete SimpleType: Text(1950)", "Delete SimpleName: FloatArrayWritable(1951)", "Delete SimpleType: FloatArrayWritable(1952)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1953)", "Delete SimpleName: e(1954)", "Delete SingleVariableDeclaration(1955)", "Delete SimpleName: inEdges(1956)", "Delete SimpleName: vertexID(1957)", "Delete SimpleName: equals(1958)", "Delete SimpleName: e(1959)", "Delete SimpleName: getDestinationVertexID(1960)", "Delete MethodInvocation(1961)", "Delete MethodInvocation(1962)", "Delete SimpleName: e(1963)", "Delete ReturnStatement(1964)", "Delete IfStatement(1965)", "Delete Block(1966)", "Delete EnhancedForStatement(1967)", "Delete SimpleName: Edge(1968)", "Delete SimpleType: Edge(1969)", "Delete SimpleName: Text(1970)", "Delete SimpleType: Text(1971)", "Delete SimpleName: FloatArrayWritable(1972)", "Delete SimpleType: FloatArrayWritable(1973)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(1974)", "Delete SimpleName: e(1975)", "Delete SingleVariableDeclaration(1976)", "Delete SimpleName: outEdges(1977)", "Delete SimpleName: vertexID(1978)", "Delete SimpleName: equals(1979)", "Delete SimpleName: e(1980)", "Delete SimpleName: getDestinationVertexID(1981)", "Delete MethodInvocation(1982)", "Delete MethodInvocation(1983)", "Delete SimpleName: e(1984)", "Delete ReturnStatement(1985)", "Delete IfStatement(1986)", "Delete Block(1987)", "Delete EnhancedForStatement(1988)", "Delete NullLiteral(1989)", "Delete ReturnStatement(1990)", "Delete Block(1991)", "Delete MethodDeclaration(1992)", "Delete Modifier: private(1993)", "Delete PrimitiveType: boolean(1994)", "Delete SimpleName: isFirstSense(1995)", "Delete SimpleName: FloatArrayWritable(1996)", "Delete SimpleType: FloatArrayWritable(1997)", "Delete SimpleName: msg(1998)", "Delete SingleVariableDeclaration(1999)", "Delete SimpleName: getMsgSenseStep(2000)", "Delete SimpleName: msg(2001)", "Delete MethodInvocation(2002)", "Delete SimpleName: senseStepCount(2003)", "Delete InfixExpression: >(2004)", "Delete SimpleName: senseStepCount(2005)", "Delete SimpleName: getMsgSenseStep(2006)", "Delete SimpleName: msg(2007)", "Delete MethodInvocation(2008)", "Delete Assignment: =(2009)", "Delete ExpressionStatement(2010)", "Delete SimpleName: pushMsgList(2011)", "Delete SimpleName: clear(2012)", "Delete MethodInvocation(2013)", "Delete ExpressionStatement(2014)", "Delete BooleanLiteral: true(2015)", "Delete ReturnStatement(2016)", "Delete Block(2017)", "Delete BooleanLiteral: false(2018)", "Delete ReturnStatement(2019)", "Delete Block(2020)", "Delete IfStatement(2021)", "Delete Block(2022)", "Delete MethodDeclaration(2023)", "Delete Modifier: private(2024)", "Delete PrimitiveType: void(2025)", "Delete SimpleName: printMaxFlowValue(2026)", "Delete PrimitiveType: float(2027)", "Delete SimpleName: value(2028)", "Delete SingleVariableDeclaration(2029)", "Delete SimpleName: String(2030)", "Delete SimpleType: String(2031)", "Delete SimpleName: path(2032)", "Delete SingleVariableDeclaration(2033)", "Delete SimpleName: IOException(2034)", "Delete SimpleType: IOException(2035)", "Delete SimpleName: File(2036)", "Delete SimpleType: File(2037)", "Delete SimpleName: f(2038)", "Delete SimpleName: File(2039)", "Delete SimpleType: File(2040)", "Delete SimpleName: path(2041)", "Delete ClassInstanceCreation(2042)", "Delete VariableDeclarationFragment(2043)", "Delete VariableDeclarationStatement(2044)", "Delete SimpleName: OutputStreamWriter(2045)", "Delete SimpleType: OutputStreamWriter(2046)", "Delete SimpleName: in(2047)", "Delete VariableDeclarationFragment(2048)", "Delete VariableDeclarationStatement(2049)", "Delete SimpleName: BufferedWriter(2050)", "Delete SimpleType: BufferedWriter(2051)", "Delete SimpleName: bw(2052)", "Delete NullLiteral(2053)", "Delete VariableDeclarationFragment(2054)", "Delete VariableDeclarationStatement(2055)", "Delete SimpleName: in(2056)", "Delete SimpleName: OutputStreamWriter(2057)", "Delete SimpleType: OutputStreamWriter(2058)", "Delete SimpleName: FileOutputStream(2059)", "Delete SimpleType: FileOutputStream(2060)", "Delete SimpleName: f(2061)", "Delete ClassInstanceCreation(2062)", "Delete ClassInstanceCreation(2063)", "Delete Assignment: =(2064)", "Delete ExpressionStatement(2065)", "Delete SimpleName: bw(2066)", "Delete SimpleName: BufferedWriter(2067)", "Delete SimpleType: BufferedWriter(2068)", "Delete SimpleName: in(2069)", "Delete ClassInstanceCreation(2070)", "Delete Assignment: =(2071)", "Delete ExpressionStatement(2072)", "Delete SimpleName: bw(2073)", "Delete SimpleName: write(2074)", "Delete SimpleName: String(2075)", "Delete SimpleName: valueOf(2076)", "Delete SimpleName: value(2077)", "Delete MethodInvocation(2078)", "Delete MethodInvocation(2079)", "Delete ExpressionStatement(2080)", "Delete SimpleName: bw(2081)", "Delete SimpleName: close(2082)", "Delete MethodInvocation(2083)", "Delete ExpressionStatement(2084)", "Delete Block(2085)", "Delete SimpleName: FileNotFoundException(2086)", "Delete SimpleType: FileNotFoundException(2087)", "Delete SimpleName: e(2088)", "Delete SingleVariableDeclaration(2089)", "Delete Block(2090)", "Delete CatchClause(2091)", "Delete SimpleName: bw(2092)", "Delete NullLiteral(2093)", "Delete InfixExpression: !=(2094)", "Delete SimpleName: bw(2095)", "Delete SimpleName: close(2096)", "Delete MethodInvocation(2097)", "Delete ExpressionStatement(2098)", "Delete IfStatement(2099)", "Delete Block(2100)", "Delete TryStatement(2101)", "Delete Block(2102)", "Delete MethodDeclaration(2103)", "Delete Modifier: private(2104)", "Delete SimpleName: Text(2105)", "Delete SimpleType: Text(2106)", "Delete SimpleName: getSinkID(2107)", "Delete SimpleName: Text(2108)", "Delete SimpleType: Text(2109)", "Delete SimpleName: String(2110)", "Delete SimpleName: valueOf(2111)", "Delete SimpleName: getTotalNumVertices(2112)", "Delete MethodInvocation(2113)", "Delete NumberLiteral: 1(2114)", "Delete InfixExpression: -(2115)", "Delete MethodInvocation(2116)", "Delete ClassInstanceCreation(2117)", "Delete ReturnStatement(2118)", "Delete Block(2119)", "Delete MethodDeclaration(2120)", "Delete Modifier: private(2121)", "Delete SimpleName: Text(2122)", "Delete SimpleType: Text(2123)", "Delete SimpleName: getSourceID(2124)", "Delete SimpleName: Text(2125)", "Delete SimpleType: Text(2126)", "Delete SimpleName: String(2127)", "Delete SimpleName: valueOf(2128)", "Delete NumberLiteral: 0(2129)", "Delete MethodInvocation(2130)", "Delete ClassInstanceCreation(2131)", "Delete ReturnStatement(2132)", "Delete Block(2133)", "Delete MethodDeclaration(2134)", "Delete Modifier: public(2135)", "Delete Modifier: static(2136)", "Delete SimpleName: Text(2137)", "Delete SimpleType: Text(2138)", "Delete SimpleName: floatToText(2139)", "Delete SimpleName: FloatWritable(2140)", "Delete SimpleType: FloatWritable(2141)", "Delete SimpleName: value(2142)", "Delete SingleVariableDeclaration(2143)", "Delete SimpleName: Text(2144)", "Delete SimpleType: Text(2145)", "Delete SimpleName: String(2146)", "Delete SimpleName: valueOf(2147)", "Delete PrimitiveType: int(2148)", "Delete SimpleName: value(2149)", "Delete SimpleName: get(2150)", "Delete MethodInvocation(2151)", "Delete ParenthesizedExpression(2152)", "Delete CastExpression(2153)", "Delete MethodInvocation(2154)", "Delete ClassInstanceCreation(2155)", "Delete ReturnStatement(2156)", "Delete Block(2157)", "Delete MethodDeclaration(2158)", "Delete Modifier: public(2159)", "Delete Modifier: static(2160)", "Delete SimpleName: FloatWritable(2161)", "Delete SimpleType: FloatWritable(2162)", "Delete SimpleName: textToFloat(2163)", "Delete SimpleName: Text(2164)", "Delete SimpleType: Text(2165)", "Delete SimpleName: value(2166)", "Delete SingleVariableDeclaration(2167)", "Delete SimpleName: FloatWritable(2168)", "Delete SimpleType: FloatWritable(2169)", "Delete SimpleName: Float(2170)", "Delete SimpleName: parseFloat(2171)", "Delete SimpleName: value(2172)", "Delete SimpleName: toString(2173)", "Delete MethodInvocation(2174)", "Delete MethodInvocation(2175)", "Delete ClassInstanceCreation(2176)", "Delete ReturnStatement(2177)", "Delete Block(2178)", "Delete MethodDeclaration(2179)", "Delete Modifier: public(2180)", "Delete PrimitiveType: void(2181)", "Delete SimpleName: setMsgType(2182)", "Delete SimpleName: FloatArrayWritable(2183)", "Delete SimpleType: FloatArrayWritable(2184)", "Delete SimpleName: msg(2185)", "Delete SingleVariableDeclaration(2186)", "Delete SimpleName: FloatWritable(2187)", "Delete SimpleType: FloatWritable(2188)", "Delete SimpleName: value(2189)", "Delete SingleVariableDeclaration(2190)", "Delete SimpleName: msg(2191)", "Delete SimpleName: get(2192)", "Delete MethodInvocation(2193)", "Delete NumberLiteral: 0(2194)", "Delete ArrayAccess(2195)", "Delete SimpleName: value(2196)", "Delete Assignment: =(2197)", "Delete ExpressionStatement(2198)", "Delete Block(2199)", "Delete MethodDeclaration(2200)", "Delete Modifier: public(2201)", "Delete SimpleName: FloatWritable(2202)", "Delete SimpleType: FloatWritable(2203)", "Delete SimpleName: getMsgType(2204)", "Delete SimpleName: FloatArrayWritable(2205)", "Delete SimpleType: FloatArrayWritable(2206)", "Delete SimpleName: msg(2207)", "Delete SingleVariableDeclaration(2208)", "Delete SimpleName: FloatWritable(2209)", "Delete SimpleType: FloatWritable(2210)", "Delete SimpleName: msg(2211)", "Delete SimpleName: get(2212)", "Delete MethodInvocation(2213)", "Delete NumberLiteral: 0(2214)", "Delete ArrayAccess(2215)", "Delete CastExpression(2216)", "Delete ReturnStatement(2217)", "Delete Block(2218)", "Delete MethodDeclaration(2219)", "Delete Modifier: public(2220)", "Delete SimpleName: FloatWritable(2221)", "Delete SimpleType: FloatWritable(2222)", "Delete SimpleName: getMsgVertexID(2223)", "Delete SimpleName: FloatArrayWritable(2224)", "Delete SimpleType: FloatArrayWritable(2225)", "Delete SimpleName: msg(2226)", "Delete SingleVariableDeclaration(2227)", "Delete SimpleName: FloatWritable(2228)", "Delete SimpleType: FloatWritable(2229)", "Delete SimpleName: msg(2230)", "Delete SimpleName: get(2231)", "Delete MethodInvocation(2232)", "Delete NumberLiteral: 1(2233)", "Delete ArrayAccess(2234)", "Delete CastExpression(2235)", "Delete ReturnStatement(2236)", "Delete Block(2237)", "Delete MethodDeclaration(2238)", "Delete Modifier: public(2239)", "Delete PrimitiveType: void(2240)", "Delete SimpleName: setMsgVertexID(2241)", "Delete SimpleName: FloatArrayWritable(2242)", "Delete SimpleType: FloatArrayWritable(2243)", "Delete SimpleName: msg(2244)", "Delete SingleVariableDeclaration(2245)", "Delete SimpleName: FloatWritable(2246)", "Delete SimpleType: FloatWritable(2247)", "Delete SimpleName: value(2248)", "Delete SingleVariableDeclaration(2249)", "Delete SimpleName: msg(2250)", "Delete SimpleName: get(2251)", "Delete MethodInvocation(2252)", "Delete NumberLiteral: 1(2253)", "Delete ArrayAccess(2254)", "Delete SimpleName: value(2255)", "Delete Assignment: =(2256)", "Delete ExpressionStatement(2257)", "Delete Block(2258)", "Delete MethodDeclaration(2259)", "Delete Modifier: public(2260)", "Delete PrimitiveType: void(2261)", "Delete SimpleName: setEdgeType(2262)", "Delete SimpleName: FloatArrayWritable(2263)", "Delete SimpleType: FloatArrayWritable(2264)", "Delete SimpleName: msg(2265)", "Delete SingleVariableDeclaration(2266)", "Delete SimpleName: FloatWritable(2267)", "Delete SimpleType: FloatWritable(2268)", "Delete SimpleName: type(2269)", "Delete SingleVariableDeclaration(2270)", "Delete SimpleName: msg(2271)", "Delete SimpleName: get(2272)", "Delete MethodInvocation(2273)", "Delete NumberLiteral: 2(2274)", "Delete ArrayAccess(2275)", "Delete SimpleName: type(2276)", "Delete Assignment: =(2277)", "Delete ExpressionStatement(2278)", "Delete Block(2279)", "Delete MethodDeclaration(2280)", "Delete Modifier: public(2281)", "Delete SimpleName: FloatWritable(2282)", "Delete SimpleType: FloatWritable(2283)", "Delete SimpleName: getEdgeType(2284)", "Delete SimpleName: FloatArrayWritable(2285)", "Delete SimpleType: FloatArrayWritable(2286)", "Delete SimpleName: msg(2287)", "Delete SingleVariableDeclaration(2288)", "Delete SimpleName: FloatWritable(2289)", "Delete SimpleType: FloatWritable(2290)", "Delete SimpleName: msg(2291)", "Delete SimpleName: get(2292)", "Delete MethodInvocation(2293)", "Delete NumberLiteral: 2(2294)", "Delete ArrayAccess(2295)", "Delete CastExpression(2296)", "Delete ReturnStatement(2297)", "Delete Block(2298)", "Delete MethodDeclaration(2299)", "Delete Modifier: public(2300)", "Delete PrimitiveType: int(2301)", "Delete SimpleName: getMsgSenseStep(2302)", "Delete SimpleName: FloatArrayWritable(2303)", "Delete SimpleType: FloatArrayWritable(2304)", "Delete SimpleName: msg(2305)", "Delete SingleVariableDeclaration(2306)", "Delete SimpleName: FloatWritable(2307)", "Delete SimpleType: FloatWritable(2308)", "Delete SimpleName: value(2309)", "Delete SimpleName: FloatWritable(2310)", "Delete SimpleType: FloatWritable(2311)", "Delete SimpleName: msg(2312)", "Delete SimpleName: get(2313)", "Delete MethodInvocation(2314)", "Delete NumberLiteral: 4(2315)", "Delete ArrayAccess(2316)", "Delete CastExpression(2317)", "Delete VariableDeclarationFragment(2318)", "Delete VariableDeclarationStatement(2319)", "Delete PrimitiveType: int(2320)", "Delete SimpleName: value(2321)", "Delete SimpleName: get(2322)", "Delete MethodInvocation(2323)", "Delete CastExpression(2324)", "Delete ReturnStatement(2325)", "Delete Block(2326)", "Delete MethodDeclaration(2327)", "Delete Modifier: public(2328)", "Delete PrimitiveType: void(2329)", "Delete SimpleName: setMsgSenseStep(2330)", "Delete SimpleName: FloatArrayWritable(2331)", "Delete SimpleType: FloatArrayWritable(2332)", "Delete SimpleName: msg(2333)", "Delete SingleVariableDeclaration(2334)", "Delete PrimitiveType: int(2335)", "Delete SimpleName: step(2336)", "Delete SingleVariableDeclaration(2337)", "Delete SimpleName: FloatWritable(2338)", "Delete SimpleType: FloatWritable(2339)", "Delete SimpleName: v(2340)", "Delete SimpleName: FloatWritable(2341)", "Delete SimpleType: FloatWritable(2342)", "Delete SimpleName: step(2343)", "Delete ClassInstanceCreation(2344)", "Delete VariableDeclarationFragment(2345)", "Delete VariableDeclarationStatement(2346)", "Delete SimpleName: msg(2347)", "Delete SimpleName: get(2348)", "Delete MethodInvocation(2349)", "Delete NumberLiteral: 4(2350)", "Delete ArrayAccess(2351)", "Delete SimpleName: v(2352)", "Delete Assignment: =(2353)", "Delete ExpressionStatement(2354)", "Delete Block(2355)", "Delete MethodDeclaration(2356)", "Delete Modifier: public(2357)", "Delete PrimitiveType: int(2358)", "Delete SimpleName: getMsgPushStep(2359)", "Delete SimpleName: FloatArrayWritable(2360)", "Delete SimpleType: FloatArrayWritable(2361)", "Delete SimpleName: msg(2362)", "Delete SingleVariableDeclaration(2363)", "Delete SimpleName: getMsgSenseStep(2364)", "Delete SimpleName: msg(2365)", "Delete MethodInvocation(2366)", "Delete ReturnStatement(2367)", "Delete Block(2368)", "Delete MethodDeclaration(2369)", "Delete Modifier: public(2370)", "Delete PrimitiveType: void(2371)", "Delete SimpleName: setMsgPushStep(2372)", "Delete SimpleName: FloatArrayWritable(2373)", "Delete SimpleType: FloatArrayWritable(2374)", "Delete SimpleName: msg(2375)", "Delete SingleVariableDeclaration(2376)", "Delete PrimitiveType: int(2377)", "Delete SimpleName: step(2378)", "Delete SingleVariableDeclaration(2379)", "Delete SimpleName: setMsgSenseStep(2380)", "Delete SimpleName: msg(2381)", "Delete SimpleName: step(2382)", "Delete MethodInvocation(2383)", "Delete ExpressionStatement(2384)", "Delete Block(2385)", "Delete MethodDeclaration(2386)", "Delete Modifier: private(2387)", "Delete PrimitiveType: void(2388)", "Delete SimpleName: setNeedFlow(2389)", "Delete SimpleName: FloatArrayWritable(2390)", "Delete SimpleType: FloatArrayWritable(2391)", "Delete SimpleName: msg(2392)", "Delete SingleVariableDeclaration(2393)", "Delete PrimitiveType: float(2394)", "Delete SimpleName: value(2395)", "Delete SingleVariableDeclaration(2396)", "Delete SimpleName: FloatWritable(2397)", "Delete SimpleType: FloatWritable(2398)", "Delete SimpleName: v(2399)", "Delete SimpleName: FloatWritable(2400)", "Delete SimpleType: FloatWritable(2401)", "Delete SimpleName: value(2402)", "Delete ClassInstanceCreation(2403)", "Delete VariableDeclarationFragment(2404)", "Delete VariableDeclarationStatement(2405)", "Delete SimpleName: msg(2406)", "Delete SimpleName: get(2407)", "Delete MethodInvocation(2408)", "Delete NumberLiteral: 3(2409)", "Delete ArrayAccess(2410)", "Delete SimpleName: v(2411)", "Delete Assignment: =(2412)", "Delete ExpressionStatement(2413)", "Delete Block(2414)", "Delete MethodDeclaration(2415)", "Delete Modifier: private(2416)", "Delete SimpleName: FloatWritable(2417)", "Delete SimpleType: FloatWritable(2418)", "Delete SimpleName: getNeedFlow(2419)", "Delete SimpleName: FloatArrayWritable(2420)", "Delete SimpleType: FloatArrayWritable(2421)", "Delete SimpleName: msg(2422)", "Delete SingleVariableDeclaration(2423)", "Delete SimpleName: FloatWritable(2424)", "Delete SimpleType: FloatWritable(2425)", "Delete SimpleName: msg(2426)", "Delete SimpleName: get(2427)", "Delete MethodInvocation(2428)", "Delete NumberLiteral: 3(2429)", "Delete ArrayAccess(2430)", "Delete CastExpression(2431)", "Delete ReturnStatement(2432)", "Delete Block(2433)", "Delete MethodDeclaration(2434)", "Delete Modifier: private(2435)", "Delete PrimitiveType: void(2436)", "Delete SimpleName: setMsgFlow(2437)", "Delete SimpleName: FloatArrayWritable(2438)", "Delete SimpleType: FloatArrayWritable(2439)", "Delete SimpleName: msg(2440)", "Delete SingleVariableDeclaration(2441)", "Delete PrimitiveType: float(2442)", "Delete SimpleName: value(2443)", "Delete SingleVariableDeclaration(2444)", "Delete SimpleName: setNeedFlow(2445)", "Delete SimpleName: msg(2446)", "Delete SimpleName: value(2447)", "Delete MethodInvocation(2448)", "Delete ExpressionStatement(2449)", "Delete Block(2450)", "Delete MethodDeclaration(2451)", "Delete Modifier: private(2452)", "Delete SimpleName: FloatWritable(2453)", "Delete SimpleType: FloatWritable(2454)", "Delete SimpleName: getMsgFlow(2455)", "Delete SimpleName: FloatArrayWritable(2456)", "Delete SimpleType: FloatArrayWritable(2457)", "Delete SimpleName: msg(2458)", "Delete SingleVariableDeclaration(2459)", "Delete SimpleName: getNeedFlow(2460)", "Delete SimpleName: msg(2461)", "Delete MethodInvocation(2462)", "Delete ReturnStatement(2463)", "Delete Block(2464)", "Delete MethodDeclaration(2465)", "Delete Modifier: private(2466)", "Delete SimpleName: FloatWritable(2467)", "Delete SimpleType: FloatWritable(2468)", "Delete SimpleName: getEdgeFlow(2469)", "Delete SimpleName: Edge(2470)", "Delete SimpleType: Edge(2471)", "Delete SimpleName: Text(2472)", "Delete SimpleType: Text(2473)", "Delete SimpleName: FloatArrayWritable(2474)", "Delete SimpleType: FloatArrayWritable(2475)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(2476)", "Delete SimpleName: e(2477)", "Delete SingleVariableDeclaration(2478)", "Delete SimpleName: getMsgType(2479)", "Delete SimpleName: e(2480)", "Delete SimpleName: getValue(2481)", "Delete MethodInvocation(2482)", "Delete MethodInvocation(2483)", "Delete ReturnStatement(2484)", "Delete Block(2485)", "Delete MethodDeclaration(2486)", "Delete Modifier: private(2487)", "Delete SimpleName: FloatWritable(2488)", "Delete SimpleType: FloatWritable(2489)", "Delete SimpleName: getEdgeCapacity(2490)", "Delete SimpleName: Edge(2491)", "Delete SimpleType: Edge(2492)", "Delete SimpleName: Text(2493)", "Delete SimpleType: Text(2494)", "Delete SimpleName: FloatArrayWritable(2495)", "Delete SimpleType: FloatArrayWritable(2496)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(2497)", "Delete SimpleName: e(2498)", "Delete SingleVariableDeclaration(2499)", "Delete SimpleName: getMsgVertexID(2500)", "Delete SimpleName: e(2501)", "Delete SimpleName: getValue(2502)", "Delete MethodInvocation(2503)", "Delete MethodInvocation(2504)", "Delete ReturnStatement(2505)", "Delete Block(2506)", "Delete MethodDeclaration(2507)", "Delete Modifier: private(2508)", "Delete PrimitiveType: void(2509)", "Delete SimpleName: setEdgeCapacity(2510)", "Delete SimpleName: Edge(2511)", "Delete SimpleType: Edge(2512)", "Delete SimpleName: Text(2513)", "Delete SimpleType: Text(2514)", "Delete SimpleName: FloatArrayWritable(2515)", "Delete SimpleType: FloatArrayWritable(2516)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(2517)", "Delete SimpleName: e(2518)", "Delete SingleVariableDeclaration(2519)", "Delete SimpleName: FloatWritable(2520)", "Delete SimpleType: FloatWritable(2521)", "Delete SimpleName: value(2522)", "Delete SingleVariableDeclaration(2523)", "Delete SimpleName: setMsgVertexID(2524)", "Delete SimpleName: e(2525)", "Delete SimpleName: getValue(2526)", "Delete MethodInvocation(2527)", "Delete SimpleName: value(2528)", "Delete MethodInvocation(2529)", "Delete ExpressionStatement(2530)", "Delete Block(2531)", "Delete MethodDeclaration(2532)", "Delete Modifier: public(2533)", "Delete PrimitiveType: void(2534)", "Delete SimpleName: log(2535)", "Delete PrimitiveType: int(2536)", "Delete SimpleName: level(2537)", "Delete SingleVariableDeclaration(2538)", "Delete SimpleName: String(2539)", "Delete SimpleType: String(2540)", "Delete SimpleName: s(2541)", "Delete SingleVariableDeclaration(2542)", "Delete SimpleName: level(2543)", "Delete NumberLiteral: 1000(2544)", "Delete InfixExpression: >(2545)", "Delete QualifiedName: System.out(2546)", "Delete SimpleName: println(2547)", "Delete SimpleName: s(2548)", "Delete MethodInvocation(2549)", "Delete ExpressionStatement(2550)", "Delete IfStatement(2551)", "Delete Block(2552)", "Delete MethodDeclaration(2553)", "Delete TypeDeclaration: class(2554)", "Delete Modifier: public(2555)", "Delete Modifier: static(2556)", "Delete SimpleName: MaxFLowAgrregator(2557)", "Delete SimpleName: AbstractAggregator(2558)", "Delete SimpleType: AbstractAggregator(2559)", "Delete SimpleName: FloatArrayWritable(2560)", "Delete SimpleType: FloatArrayWritable(2561)", "Delete ParameterizedType: AbstractAggregator<FloatArrayWritable>(2562)", "Delete PrimitiveType: int(2563)", "Delete SimpleName: maxValue(2564)", "Delete NumberLiteral: 0(2565)", "Delete VariableDeclarationFragment(2566)", "Delete FieldDeclaration(2567)", "Delete SimpleName: Override(2568)", "Delete MarkerAnnotation(2569)", "Delete Modifier: public(2570)", "Delete PrimitiveType: void(2571)", "Delete SimpleName: aggregate(2572)", "Delete SimpleName: FloatArrayWritable(2573)", "Delete SimpleType: FloatArrayWritable(2574)", "Delete SimpleName: value(2575)", "Delete SingleVariableDeclaration(2576)", "Delete SimpleName: FloatWritable(2577)", "Delete SimpleType: FloatWritable(2578)", "Delete SimpleName: v(2579)", "Delete SimpleName: FloatWritable(2580)", "Delete SimpleType: FloatWritable(2581)", "Delete SimpleName: value(2582)", "Delete SimpleName: get(2583)", "Delete MethodInvocation(2584)", "Delete NumberLiteral: 0(2585)", "Delete ArrayAccess(2586)", "Delete CastExpression(2587)", "Delete VariableDeclarationFragment(2588)", "Delete VariableDeclarationStatement(2589)", "Delete PrimitiveType: int(2590)", "Delete SimpleName: v(2591)", "Delete SimpleName: get(2592)", "Delete MethodInvocation(2593)", "Delete CastExpression(2594)", "Delete SimpleName: maxValue(2595)", "Delete InfixExpression: >(2596)", "Delete SimpleName: maxValue(2597)", "Delete PrimitiveType: int(2598)", "Delete SimpleName: v(2599)", "Delete SimpleName: get(2600)", "Delete MethodInvocation(2601)", "Delete CastExpression(2602)", "Delete Assignment: =(2603)", "Delete ExpressionStatement(2604)", "Delete IfStatement(2605)", "Delete Block(2606)", "Delete MethodDeclaration(2607)", "Delete SimpleName: Override(2608)", "Delete MarkerAnnotation(2609)", "Delete Modifier: public(2610)", "Delete SimpleName: FloatArrayWritable(2611)", "Delete SimpleType: FloatArrayWritable(2612)", "Delete SimpleName: getValue(2613)", "Delete SimpleName: FloatArrayWritable(2614)", "Delete SimpleType: FloatArrayWritable(2615)", "Delete SimpleName: value(2616)", "Delete SimpleName: FloatArrayWritable(2617)", "Delete SimpleType: FloatArrayWritable(2618)", "Delete ClassInstanceCreation(2619)", "Delete VariableDeclarationFragment(2620)", "Delete VariableDeclarationStatement(2621)", "Delete SimpleName: FloatWritable(2622)", "Delete SimpleType: FloatWritable(2623)", "Delete Dimension(2624)", "Delete ArrayType: FloatWritable[](2625)", "Delete SimpleName: array(2626)", "Delete SimpleName: FloatWritable(2627)", "Delete SimpleType: FloatWritable(2628)", "Delete Dimension(2629)", "Delete ArrayType: FloatWritable[](2630)", "Delete NumberLiteral: 1(2631)", "Delete ArrayCreation(2632)", "Delete VariableDeclarationFragment(2633)", "Delete VariableDeclarationStatement(2634)", "Delete SimpleName: FloatWritable(2635)", "Delete SimpleType: FloatWritable(2636)", "Delete SimpleName: f(2637)", "Delete SimpleName: FloatWritable(2638)", "Delete SimpleType: FloatWritable(2639)", "Delete ClassInstanceCreation(2640)", "Delete VariableDeclarationFragment(2641)", "Delete VariableDeclarationStatement(2642)", "Delete SimpleName: f(2643)", "Delete SimpleName: set(2644)", "Delete SimpleName: maxValue(2645)", "Delete MethodInvocation(2646)", "Delete ExpressionStatement(2647)", "Delete SimpleName: array(2648)", "Delete NumberLiteral: 0(2649)", "Delete ArrayAccess(2650)", "Delete SimpleName: f(2651)", "Delete Assignment: =(2652)", "Delete ExpressionStatement(2653)", "Delete SimpleName: value(2654)", "Delete SimpleName: set(2655)", "Delete SimpleName: array(2656)", "Delete MethodInvocation(2657)", "Delete ExpressionStatement(2658)", "Delete SimpleName: value(2659)", "Delete ReturnStatement(2660)", "Delete Block(2661)", "Delete MethodDeclaration(2662)", "Delete TypeDeclaration: class(2663)", "Delete Modifier: public(2664)", "Delete Modifier: static(2665)", "Delete SimpleName: MaxFlowSeqReader(2666)", "Delete SimpleName: VertexInputReader(2667)", "Delete SimpleType: VertexInputReader(2668)", "Delete SimpleName: FloatWritable(2669)", "Delete SimpleType: FloatWritable(2670)", "Delete SimpleName: FloatArrayWritable(2671)", "Delete SimpleType: FloatArrayWritable(2672)", "Delete SimpleName: Text(2673)", "Delete SimpleType: Text(2674)", "Delete SimpleName: FloatArrayWritable(2675)", "Delete SimpleType: FloatArrayWritable(2676)", "Delete SimpleName: FloatArrayWritable(2677)", "Delete SimpleType: FloatArrayWritable(2678)", "Delete ParameterizedType: VertexInputReader<FloatWritable,FloatArrayWritable,Text,FloatArrayWritable,FloatArrayWritable>(2679)", "Delete SimpleName: Override(2680)", "Delete MarkerAnnotation(2681)", "Delete Modifier: public(2682)", "Delete PrimitiveType: boolean(2683)", "Delete SimpleName: parseVertex(2684)", "Delete SimpleName: FloatWritable(2685)", "Delete SimpleType: FloatWritable(2686)", "Delete SimpleName: key(2687)", "Delete SingleVariableDeclaration(2688)", "Delete SimpleName: FloatArrayWritable(2689)", "Delete SimpleType: FloatArrayWritable(2690)", "Delete SimpleName: value(2691)", "Delete SingleVariableDeclaration(2692)", "Delete SimpleName: Vertex(2693)", "Delete SimpleType: Vertex(2694)", "Delete SimpleName: Text(2695)", "Delete SimpleType: Text(2696)", "Delete SimpleName: FloatArrayWritable(2697)", "Delete SimpleType: FloatArrayWritable(2698)", "Delete SimpleName: FloatArrayWritable(2699)", "Delete SimpleType: FloatArrayWritable(2700)", "Delete ParameterizedType: Vertex<Text,FloatArrayWritable,FloatArrayWritable>(2701)", "Delete SimpleName: vertex(2702)", "Delete SingleVariableDeclaration(2703)", "Delete SimpleName: Exception(2704)", "Delete SimpleType: Exception(2705)", "Delete SimpleName: vertex(2706)", "Delete SimpleName: setVertexID(2707)", "Delete SimpleName: MaxFlowVertex(2708)", "Delete SimpleName: floatToText(2709)", "Delete SimpleName: key(2710)", "Delete MethodInvocation(2711)", "Delete MethodInvocation(2712)", "Delete ExpressionStatement(2713)", "Delete SimpleName: Writable(2714)", "Delete SimpleType: Writable(2715)", "Delete Dimension(2716)", "Delete ArrayType: Writable[](2717)", "Delete SimpleName: values(2718)", "Delete SimpleName: value(2719)", "Delete SimpleName: get(2720)", "Delete MethodInvocation(2721)", "Delete VariableDeclarationFragment(2722)", "Delete VariableDeclarationStatement(2723)", "Delete SimpleName: FloatWritable(2724)", "Delete SimpleType: FloatWritable(2725)", "Delete SimpleName: v2(2726)", "Delete SimpleName: FloatWritable(2727)", "Delete SimpleType: FloatWritable(2728)", "Delete SimpleName: values(2729)", "Delete NumberLiteral: 0(2730)", "Delete ArrayAccess(2731)", "Delete CastExpression(2732)", "Delete VariableDeclarationFragment(2733)", "Delete VariableDeclarationStatement(2734)", "Delete SimpleName: FloatWritable(2735)", "Delete SimpleType: FloatWritable(2736)", "Delete SimpleName: capacity(2737)", "Delete SimpleName: FloatWritable(2738)", "Delete SimpleType: FloatWritable(2739)", "Delete SimpleName: values(2740)", "Delete NumberLiteral: 1(2741)", "Delete ArrayAccess(2742)", "Delete CastExpression(2743)", "Delete VariableDeclarationFragment(2744)", "Delete VariableDeclarationStatement(2745)", "Delete SimpleName: FloatArrayWritable(2746)", "Delete SimpleType: FloatArrayWritable(2747)", "Delete SimpleName: cost(2748)", "Delete SimpleName: FloatArrayWritable(2749)", "Delete SimpleType: FloatArrayWritable(2750)", "Delete ClassInstanceCreation(2751)", "Delete VariableDeclarationFragment(2752)", "Delete VariableDeclarationStatement(2753)", "Delete SimpleName: FloatWritable(2754)", "Delete SimpleType: FloatWritable(2755)", "Delete Dimension(2756)", "Delete ArrayType: FloatWritable[](2757)", "Delete SimpleName: costArray(2758)", "Delete SimpleName: FloatWritable(2759)", "Delete SimpleType: FloatWritable(2760)", "Delete Dimension(2761)", "Delete ArrayType: FloatWritable[](2762)", "Delete NumberLiteral: 3(2763)", "Delete ArrayCreation(2764)", "Delete VariableDeclarationFragment(2765)", "Delete VariableDeclarationStatement(2766)", "Delete SimpleName: costArray(2767)", "Delete NumberLiteral: 0(2768)", "Delete ArrayAccess(2769)", "Delete SimpleName: FloatWritable(2770)", "Delete SimpleType: FloatWritable(2771)", "Delete NumberLiteral: 0.0f(2772)", "Delete ClassInstanceCreation(2773)", "Delete Assignment: =(2774)", "Delete ExpressionStatement(2775)", "Delete SimpleName: costArray(2776)", "Delete NumberLiteral: 1(2777)", "Delete ArrayAccess(2778)", "Delete SimpleName: capacity(2779)", "Delete Assignment: =(2780)", "Delete ExpressionStatement(2781)", "Delete SimpleName: capacity(2782)", "Delete SimpleName: get(2783)", "Delete MethodInvocation(2784)", "Delete NumberLiteral: 0(2785)", "Delete InfixExpression: <(2786)", "Delete SimpleName: costArray(2787)", "Delete NumberLiteral: 2(2788)", "Delete ArrayAccess(2789)", "Delete SimpleName: FloatWritable(2790)", "Delete SimpleType: FloatWritable(2791)", "Delete NumberLiteral: 4f(2792)", "Delete PrefixExpression: -(2793)", "Delete ClassInstanceCreation(2794)", "Delete Assignment: =(2795)", "Delete ExpressionStatement(2796)", "Delete Block(2797)", "Delete SimpleName: costArray(2798)", "Delete NumberLiteral: 2(2799)", "Delete ArrayAccess(2800)", "Delete SimpleName: FloatWritable(2801)", "Delete SimpleType: FloatWritable(2802)", "Delete NumberLiteral: 5f(2803)", "Delete PrefixExpression: -(2804)", "Delete ClassInstanceCreation(2805)", "Delete Assignment: =(2806)", "Delete ExpressionStatement(2807)", "Delete Block(2808)", "Delete IfStatement(2809)", "Delete SimpleName: cost(2810)", "Delete SimpleName: set(2811)", "Delete SimpleName: costArray(2812)", "Delete MethodInvocation(2813)", "Delete ExpressionStatement(2814)", "Delete SimpleName: Edge(2815)", "Delete SimpleType: Edge(2816)", "Delete SimpleName: Text(2817)", "Delete SimpleType: Text(2818)", "Delete SimpleName: FloatArrayWritable(2819)", "Delete SimpleType: FloatArrayWritable(2820)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(2821)", "Delete SimpleName: e(2822)", "Delete SimpleName: Edge(2823)", "Delete SimpleType: Edge(2824)", "Delete SimpleName: Text(2825)", "Delete SimpleType: Text(2826)", "Delete SimpleName: FloatArrayWritable(2827)", "Delete SimpleType: FloatArrayWritable(2828)", "Delete ParameterizedType: Edge<Text,FloatArrayWritable>(2829)", "Delete SimpleName: MaxFlowVertex(2830)", "Delete SimpleName: floatToText(2831)", "Delete SimpleName: v2(2832)", "Delete MethodInvocation(2833)", "Delete SimpleName: cost(2834)", "Delete ClassInstanceCreation(2835)", "Delete VariableDeclarationFragment(2836)", "Delete VariableDeclarationStatement(2837)", "Delete SimpleName: vertex(2838)", "Delete ParenthesizedExpression(2839)", "Delete SimpleName: addEdge(2840)", "Delete SimpleName: e(2841)", "Delete MethodInvocation(2842)", "Delete ExpressionStatement(2843)", "Delete BooleanLiteral: true(2844)", "Delete ReturnStatement(2845)", "Delete Block(2846)", "Delete MethodDeclaration(2847)", "Delete TypeDeclaration: class(2848)", "Delete Modifier: public(2849)", "Delete Modifier: static(2850)", "Delete SimpleName: GraphJob(2851)", "Delete SimpleType: GraphJob(2852)", "Delete SimpleName: createJob(2853)", "Delete SimpleName: String(2854)", "Delete SimpleType: String(2855)", "Delete Dimension(2856)", "Delete ArrayType: String[](2857)", "Delete SimpleName: args(2858)", "Delete SingleVariableDeclaration(2859)", "Delete SimpleName: HamaConfiguration(2860)", "Delete SimpleType: HamaConfiguration(2861)", "Delete SimpleName: conf(2862)", "Delete SingleVariableDeclaration(2863)", "Delete SimpleName: IOException(2864)", "Delete SimpleType: IOException(2865)", "Delete SimpleName: GraphJob(2866)", "Delete SimpleType: GraphJob(2867)", "Delete SimpleName: maxFlow(2868)", "Delete SimpleName: GraphJob(2869)", "Delete SimpleType: GraphJob(2870)", "Delete SimpleName: conf(2871)", "Delete SimpleName: PageRank(2872)", "Delete SimpleType: PageRank(2873)", "Delete TypeLiteral(2874)", "Delete ClassInstanceCreation(2875)", "Delete VariableDeclarationFragment(2876)", "Delete VariableDeclarationStatement(2877)", "Delete SimpleName: maxFlow(2878)", "Delete SimpleName: setJobName(2879)", "Delete StringLiteral: \"MaxFlow\"(2880)", "Delete MethodInvocation(2881)", "Delete ExpressionStatement(2882)", "Delete SimpleName: maxFlow(2883)", "Delete SimpleName: setMessageClass(2884)", "Delete SimpleName: FloatArrayWritable(2885)", "Delete SimpleType: FloatArrayWritable(2886)", "Delete TypeLiteral(2887)", "Delete MethodInvocation(2888)", "Delete ExpressionStatement(2889)", "Delete SimpleName: maxFlow(2890)", "Delete SimpleName: setEdgeValueClass(2891)", "Delete SimpleName: FloatArrayWritable(2892)", "Delete SimpleType: FloatArrayWritable(2893)", "Delete TypeLiteral(2894)", "Delete MethodInvocation(2895)", "Delete ExpressionStatement(2896)", "Delete SimpleName: maxFlow(2897)", "Delete SimpleName: setVertexClass(2898)", "Delete SimpleName: MaxFlowVertex(2899)", "Delete SimpleType: MaxFlowVertex(2900)", "Delete TypeLiteral(2901)", "Delete MethodInvocation(2902)", "Delete ExpressionStatement(2903)", "Delete SimpleName: maxFlow(2904)", "Delete SimpleName: setInputKeyClass(2905)", "Delete SimpleName: FloatWritable(2906)", "Delete SimpleType: FloatWritable(2907)", "Delete TypeLiteral(2908)", "Delete MethodInvocation(2909)", "Delete ExpressionStatement(2910)", "Delete SimpleName: maxFlow(2911)", "Delete SimpleName: setInputValueClass(2912)", "Delete SimpleName: FloatArrayWritable(2913)", "Delete SimpleType: FloatArrayWritable(2914)", "Delete TypeLiteral(2915)", "Delete MethodInvocation(2916)", "Delete ExpressionStatement(2917)", "Delete SimpleName: maxFlow(2918)", "Delete SimpleName: setAggregatorClass(2919)", "Delete SimpleName: MaxFLowAgrregator(2920)", "Delete SimpleType: MaxFLowAgrregator(2921)", "Delete TypeLiteral(2922)", "Delete MethodInvocation(2923)", "Delete ExpressionStatement(2924)", "Delete SimpleName: maxFlow(2925)", "Delete SimpleName: setInputPath(2926)", "Delete SimpleName: Path(2927)", "Delete SimpleType: Path(2928)", "Delete SimpleName: args(2929)", "Delete NumberLiteral: 0(2930)", "Delete ArrayAccess(2931)", "Delete ClassInstanceCreation(2932)", "Delete MethodInvocation(2933)", "Delete ExpressionStatement(2934)", "Delete SimpleName: maxFlow(2935)", "Delete SimpleName: setOutputPath(2936)", "Delete SimpleName: Path(2937)", "Delete SimpleType: Path(2938)", "Delete SimpleName: args(2939)", "Delete NumberLiteral: 1(2940)", "Delete ArrayAccess(2941)", "Delete ClassInstanceCreation(2942)", "Delete MethodInvocation(2943)", "Delete ExpressionStatement(2944)", "Delete SimpleName: maxFlow(2945)", "Delete SimpleName: set(2946)", "Delete StringLiteral: \"hama.graph.self.ref\"(2947)", "Delete StringLiteral: \"true\"(2948)", "Delete MethodInvocation(2949)", "Delete ExpressionStatement(2950)", "Delete QualifiedName: args.length(2951)", "Delete NumberLiteral: 3(2952)", "Delete InfixExpression: ==(2953)", "Delete SimpleName: maxFlow(2954)", "Delete SimpleName: setNumBspTask(2955)", "Delete SimpleName: Integer(2956)", "Delete SimpleName: parseInt(2957)", "Delete SimpleName: args(2958)", "Delete NumberLiteral: 2(2959)", "Delete ArrayAccess(2960)", "Delete MethodInvocation(2961)", "Delete MethodInvocation(2962)", "Delete ExpressionStatement(2963)", "Delete Block(2964)", "Delete IfStatement(2965)", "Delete SimpleName: maxFlow(2966)", "Delete SimpleName: setNumBspTask(2967)", "Delete NumberLiteral: 3(2968)", "Delete MethodInvocation(2969)", "Delete ExpressionStatement(2970)", "Delete SimpleName: maxFlow(2971)", "Delete SimpleName: setMaxIteration(2972)", "Delete QualifiedName: Integer.MAX_VALUE(2973)", "Delete MethodInvocation(2974)", "Delete ExpressionStatement(2975)", "Delete SimpleName: maxFlow(2976)", "Delete SimpleName: setVertexInputReaderClass(2977)", "Delete SimpleName: MaxFlowSeqReader(2978)", "Delete SimpleType: MaxFlowSeqReader(2979)", "Delete TypeLiteral(2980)", "Delete MethodInvocation(2981)", "Delete ExpressionStatement(2982)", "Delete SimpleName: maxFlow(2983)", "Delete SimpleName: setVertexIDClass(2984)", "Delete SimpleName: Text(2985)", "Delete SimpleType: Text(2986)", "Delete TypeLiteral(2987)", "Delete MethodInvocation(2988)", "Delete ExpressionStatement(2989)", "Delete SimpleName: maxFlow(2990)", "Delete SimpleName: setVertexValueClass(2991)", "Delete SimpleName: FloatArrayWritable(2992)", "Delete SimpleType: FloatArrayWritable(2993)", "Delete TypeLiteral(2994)", "Delete MethodInvocation(2995)", "Delete ExpressionStatement(2996)", "Delete SimpleName: maxFlow(2997)", "Delete SimpleName: setEdgeValueClass(2998)", "Delete SimpleName: FloatArrayWritable(2999)", "Delete SimpleType: FloatArrayWritable(3000)", "Delete TypeLiteral(3001)", "Delete MethodInvocation(3002)", "Delete ExpressionStatement(3003)", "Delete SimpleName: maxFlow(3004)", "Delete SimpleName: setInputFormat(3005)", "Delete SimpleName: SequenceFileInputFormat(3006)", "Delete SimpleType: SequenceFileInputFormat(3007)", "Delete TypeLiteral(3008)", "Delete MethodInvocation(3009)", "Delete ExpressionStatement(3010)", "Delete SimpleName: maxFlow(3011)", "Delete SimpleName: setPartitioner(3012)", "Delete SimpleName: HashPartitioner(3013)", "Delete SimpleType: HashPartitioner(3014)", "Delete TypeLiteral(3015)", "Delete MethodInvocation(3016)", "Delete ExpressionStatement(3017)", "Delete SimpleName: maxFlow(3018)", "Delete SimpleName: setOutputFormat(3019)", "Delete SimpleName: TextOutputFormat(3020)", "Delete SimpleType: TextOutputFormat(3021)", "Delete TypeLiteral(3022)", "Delete MethodInvocation(3023)", "Delete ExpressionStatement(3024)", "Delete SimpleName: maxFlow(3025)", "Delete SimpleName: setOutputKeyClass(3026)", "Delete SimpleName: DoubleWritable(3027)", "Delete SimpleType: DoubleWritable(3028)", "Delete TypeLiteral(3029)", "Delete MethodInvocation(3030)", "Delete ExpressionStatement(3031)", "Delete SimpleName: maxFlow(3032)", "Delete SimpleName: setOutputValueClass(3033)", "Delete SimpleName: FloatArrayWritable(3034)", "Delete SimpleType: FloatArrayWritable(3035)", "Delete TypeLiteral(3036)", "Delete MethodInvocation(3037)", "Delete ExpressionStatement(3038)", "Delete SimpleName: maxFlow(3039)", "Delete ReturnStatement(3040)", "Delete Block(3041)", "Delete MethodDeclaration(3042)", "Delete Modifier: private(3043)", "Delete Modifier: static(3044)", "Delete PrimitiveType: void(3045)", "Delete SimpleName: printUsage(3046)", "Delete QualifiedName: System.out(3047)", "Delete SimpleName: println(3048)", "Delete StringLiteral: \"Usage: <input> <output> [tasks]\"(3049)", "Delete MethodInvocation(3050)", "Delete ExpressionStatement(3051)", "Delete SimpleName: System(3052)", "Delete SimpleName: exit(3053)", "Delete NumberLiteral: 1(3054)", "Delete PrefixExpression: -(3055)", "Delete MethodInvocation(3056)", "Delete ExpressionStatement(3057)", "Delete Block(3058)", "Delete MethodDeclaration(3059)", "Delete Modifier: public(3060)", "Delete Modifier: static(3061)", "Delete PrimitiveType: void(3062)", "Delete SimpleName: main(3063)", "Delete SimpleName: String(3064)", "Delete SimpleType: String(3065)", "Delete Dimension(3066)", "Delete ArrayType: String[](3067)", "Delete SimpleName: args(3068)", "Delete SingleVariableDeclaration(3069)", "Delete SimpleName: IOException(3070)", "Delete SimpleType: IOException(3071)", "Delete SimpleName: InterruptedException(3072)", "Delete SimpleType: InterruptedException(3073)", "Delete SimpleName: ClassNotFoundException(3074)", "Delete SimpleType: ClassNotFoundException(3075)", "Delete SimpleName: args(3076)", "Delete NumberLiteral: 2(3077)", "Delete ArrayAccess(3078)", "Delete StringLiteral: \"3\"(3079)", "Delete Assignment: =(3080)", "Delete ExpressionStatement(3081)", "Delete QualifiedName: args.length(3082)", "Delete NumberLiteral: 2(3083)", "Delete InfixExpression: <(3084)", "Delete SimpleName: printUsage(3085)", "Delete MethodInvocation(3086)", "Delete ExpressionStatement(3087)", "Delete SimpleName: System(3088)", "Delete SimpleName: exit(3089)", "Delete NumberLiteral: 1(3090)", "Delete PrefixExpression: -(3091)", "Delete MethodInvocation(3092)", "Delete ExpressionStatement(3093)", "Delete Block(3094)", "Delete IfStatement(3095)", "Delete SimpleName: HamaConfiguration(3096)", "Delete SimpleType: HamaConfiguration(3097)", "Delete SimpleName: conf(3098)", "Delete SimpleName: HamaConfiguration(3099)", "Delete SimpleType: HamaConfiguration(3100)", "Delete ClassInstanceCreation(3101)", "Delete VariableDeclarationFragment(3102)", "Delete VariableDeclarationStatement(3103)", "Delete SimpleName: GraphJob(3104)", "Delete SimpleType: GraphJob(3105)", "Delete SimpleName: mfmcJob(3106)", "Delete SimpleName: createJob(3107)", "Delete SimpleName: args(3108)", "Delete SimpleName: conf(3109)", "Delete MethodInvocation(3110)", "Delete VariableDeclarationFragment(3111)", "Delete VariableDeclarationStatement(3112)", "Delete PrimitiveType: long(3113)", "Delete SimpleName: startTime(3114)", "Delete SimpleName: System(3115)", "Delete SimpleName: currentTimeMillis(3116)", "Delete MethodInvocation(3117)", "Delete VariableDeclarationFragment(3118)", "Delete VariableDeclarationStatement(3119)", "Delete QualifiedName: MaxFlowVertex.OUTPUT(3120)", "Delete SimpleName: args(3121)", "Delete NumberLiteral: 1(3122)", "Delete ArrayAccess(3123)", "Delete Assignment: =(3124)", "Delete ExpressionStatement(3125)", "Delete SimpleName: mfmcJob(3126)", "Delete SimpleName: waitForCompletion(3127)", "Delete BooleanLiteral: true(3128)", "Delete MethodInvocation(3129)", "Delete QualifiedName: System.out(3130)", "Delete SimpleName: println(3131)", "Delete StringLiteral: \"Job Finished in \"(3132)", "Delete SimpleName: System(3133)", "Delete SimpleName: currentTimeMillis(3134)", "Delete MethodInvocation(3135)", "Delete SimpleName: startTime(3136)", "Delete InfixExpression: -(3137)", "Delete ParenthesizedExpression(3138)", "Delete NumberLiteral: 1000.0(3139)", "Delete InfixExpression: /(3140)", "Delete InfixExpression: +(3141)", "Delete StringLiteral: \" seconds\"(3142)", "Delete InfixExpression: +(3143)", "Delete MethodInvocation(3144)", "Delete ExpressionStatement(3145)", "Delete Block(3146)", "Delete IfStatement(3147)", "Delete Block(3148)", "Delete MethodDeclaration(3149)", "Delete TypeDeclaration: class(3150)"]}}, {"GraphJobRunner_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 33"]}, {"root": "UPDATE from java.io.ByteArrayOutputStream to org.apache.hama.util.WritableUtils", "operations": ["UPD QualifiedName: java.io.ByteArrayOutputStream from java.io.ByteArrayOutputStream to org.apache.hama.util.WritableUtils"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 1", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 11", "operations": ["INS VariableDeclarationStatement to Block at 11", "INS SimpleName: it to VariableDeclarationFragment at 0", "INS SimpleType: Iterator to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: vertices to MethodInvocation at 0"]}, {"root": "INS WhileStatement to Block at 12", "operations": ["INS WhileStatement to Block at 12", "INS MethodInvocation to WhileStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS CatchClause to TryStatement at 1", "INS Block to MethodDeclaration at 3", "INS TryStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: printStackTrace to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to MethodInvocation at 0", "INS Block to TryStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 5", "MOV WhileStatement to Block at 6"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV Block to WhileStatement at 1"]}, {"root": "INS TryStatement to Block at 0", "operations": ["INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: printStackTrace to MethodInvocation at 1", "INS Block to TryStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS TryStatement to Block at 0", "INS CatchClause to TryStatement at 1"]}, {"root": "INS SimpleType: V to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: V to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Vertex to Iterator", "operations": ["UPD SimpleName: Vertex from Vertex to Iterator"]}, {"root": "MOVE from SimpleType: Iterator", "operations": ["MOV SimpleName: Vertex to SimpleType: Iterator at 0"]}, {"root": "UPDATE from vertices to it", "operations": ["UPD SimpleName: vertices from vertices to it"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getValues to MethodInvocation at 1", "MOV SimpleName: vertices to MethodInvocation at 0"]}, {"root": "UPDATE from getValues to hasNext", "operations": ["UPD SimpleName: getValues from getValues to hasNext"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to CastExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: vertex to VariableDeclarationFragment at 0", "INS SimpleName: it to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS SimpleType: V to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: V to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from getValues to keySet", "operations": ["UPD SimpleName: getValues from getValues to keySet"]}, {"root": "MOVE from SimpleType: V", "operations": ["MOV SimpleName: V to SimpleType: V at 0"]}, {"root": "INS TryStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: vertexFinished to Assignment: = at 0", "INS TryStatement to Block at 2", "INS Block to TryStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Vertex<V,E,M> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from SimpleType: V", "operations": ["MOV SimpleName: V to SimpleType: V at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "operations": ["INS BooleanLiteral: false to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: V to SimpleType: V at 0", "operations": ["INS SimpleName: V to SimpleType: V at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ParameterizedType: Vertex<V,E,M> to CastExpression at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: vertices to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: v to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: V to SimpleType: V at 0", "operations": ["INS SimpleName: V to SimpleType: V at 0"]}, {"root": "INS SimpleName: WritableUtils to MethodInvocation at 0", "operations": ["INS SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "INS SimpleName: WritableUtils to MethodInvocation at 0", "operations": ["INS SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL ParameterizedType: Vertex<V,E,M>", "DEL MethodInvocation", "DEL SimpleName: V", "DEL SimpleName: E", "DEL SimpleName: M", "DEL SimpleType: E", "DEL SimpleType: V", "DEL SimpleType: M", "DEL SimpleType: Vertex", "DEL EnhancedForStatement", "DEL SimpleName: vertex", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: v", "operations": ["DEL SimpleName: v"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL TryStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: setRunner", "DEL MethodInvocation", "DEL SimpleName: vertex"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: a", "DEL SimpleName: b", "DEL SimpleName: ByteArrayOutputStream", "DEL Dimension", "DEL SimpleName: a", "DEL Modifier: public", "DEL Block", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL Modifier: static", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: DataOutputStream", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL SimpleName: a", "DEL SimpleType: DataOutputStream", "DEL SimpleName: a", "DEL SimpleName: toByteArray", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SingleVariableDeclaration", "DEL SimpleType: DataOutputStream", "DEL SimpleType: ByteArrayOutputStream", "DEL VariableDeclarationFragment", "DEL SimpleName: write", "DEL SimpleType: Writable", "DEL MethodInvocation", "DEL SimpleName: DataOutputStream", "DEL ClassInstanceCreation", "DEL SimpleName: writable", "DEL ReturnStatement", "DEL SimpleName: close", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleName: b", "DEL SimpleName: serialize", "DEL SimpleName: writable", "DEL MethodInvocation", "DEL SimpleType: ByteArrayOutputStream", "DEL ArrayType: byte[]"]}]}}, {"GraphJobRunner_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(3667) at 33", "Update QualifiedName: java.io.ByteArrayOutputStream(19) to org.apache.hama.util.WritableUtils", "Insert SingleMemberAnnotation(993) into MethodDeclaration(1256) at 1", "Insert SimpleName: SuppressWarnings(991) into SingleMemberAnnotation(993) at 0", "Insert StringLiteral: \"unchecked\"(992) into SingleMemberAnnotation(993) at 1", "Insert VariableDeclarationStatement(1139) into Block(1255) at 11", "Insert WhileStatement(1194) into Block(1255) at 12", "Insert Block(1486) into MethodDeclaration(1487) at 3", "Move VariableDeclarationStatement(1906) into Block(2172) at 5", "Move WhileStatement(1971) into Block(2172) at 6", "Insert SimpleType: Iterator(1133) into VariableDeclarationStatement(1139) at 0", "Insert VariableDeclarationFragment(1138) into VariableDeclarationStatement(1139) at 1", "Insert MethodInvocation(1142) into WhileStatement(1194) at 0", "Move Block(1170) into WhileStatement(1194) at 1", "Insert TryStatement(1437) into Block(1457) at 0", "Insert SimpleType: V(1462) into SingleVariableDeclaration(1464) at 0", "Insert TryStatement(1485) into Block(1486) at 0", "Update SimpleName: Vertex(1131) to Iterator", "Move SimpleName: Vertex(1131) into SimpleType: Iterator(1133) at 0", "Insert SimpleName: it(1134) into VariableDeclarationFragment(1138) at 0", "Insert MethodInvocation(1137) into VariableDeclarationFragment(1138) at 1", "Update SimpleName: vertices(1142) to it", "Move SimpleName: vertices(1142) into MethodInvocation(1142) at 0", "Update SimpleName: getValues(1143) to hasNext", "Move SimpleName: getValues(1143) into MethodInvocation(1142) at 1", "Insert VariableDeclarationStatement(1167) into Block(1193) at 0", "Insert SimpleType: V(1317) into SingleVariableDeclaration(1319) at 0", "Update SimpleName: getValues(1305) to keySet", "Insert Block(1426) into TryStatement(1437) at 0", "Insert CatchClause(1436) into TryStatement(1437) at 1", "Move SimpleName: V(1435) into SimpleType: V(1462) at 0", "Insert Block(1474) into TryStatement(1485) at 0", "Insert CatchClause(1484) into TryStatement(1485) at 1", "Insert TryStatement(2002) into Block(2022) at 2", "Insert SimpleName: vertices(1135) into MethodInvocation(1137) at 0", "Insert SimpleName: iterator(1136) into MethodInvocation(1137) at 1", "Move ParameterizedType: Vertex<V,E,M>(1441) into VariableDeclarationStatement(1167) at 0", "Insert VariableDeclarationFragment(1166) into VariableDeclarationStatement(1167) at 1", "Move SimpleName: V(1295) into SimpleType: V(1317) at 0", "Move ExpressionStatement(1409) into Block(1426) at 0", "Insert SingleVariableDeclaration(1430) into CatchClause(1436) at 0", "Insert Block(1435) into CatchClause(1436) at 1", "Move ExpressionStatement(1449) into Block(1474) at 0", "Insert SingleVariableDeclaration(1478) into CatchClause(1484) at 0", "Insert Block(1483) into CatchClause(1484) at 1", "Insert Block(1991) into TryStatement(2002) at 0", "Move CatchClause(1982) into TryStatement(2002) at 1", "Insert SimpleName: vertex(1152) into VariableDeclarationFragment(1166) at 0", "Insert CastExpression(1165) into VariableDeclarationFragment(1166) at 1", "Insert SimpleType: IOException(1428) into SingleVariableDeclaration(1430) at 0", "Insert SimpleName: e(1429) into SingleVariableDeclaration(1430) at 1", "Insert ExpressionStatement(1434) into Block(1435) at 0", "Move SimpleType: IOException(3054) into SingleVariableDeclaration(1478) at 0", "Insert SimpleName: e(1477) into SingleVariableDeclaration(1478) at 1", "Insert ExpressionStatement(1482) into Block(1483) at 0", "Insert BooleanLiteral: false(1975) into VariableDeclarationFragment(1976) at 1", "Insert ExpressionStatement(1990) into Block(1991) at 0", "Insert SimpleName: V(1145) into SimpleType: V(1146) at 0", "Move ParameterizedType: Vertex<V,E,M>(1301) into CastExpression(1165) at 0", "Insert MethodInvocation(1164) into CastExpression(1165) at 1", "Insert SimpleName: IOException(1427) into SimpleType: IOException(1428) at 0", "Insert MethodInvocation(1433) into ExpressionStatement(1434) at 0", "Insert MethodInvocation(1471) into Assignment: =(1472) at 1", "Insert MethodInvocation(1481) into ExpressionStatement(1482) at 0", "Insert Assignment: =(1989) into ExpressionStatement(1990) at 0", "Insert SimpleName: it(1162) into MethodInvocation(1164) at 0", "Insert SimpleName: next(1163) into MethodInvocation(1164) at 1", "Insert SimpleName: e(1431) into MethodInvocation(1433) at 0", "Insert SimpleName: printStackTrace(1432) into MethodInvocation(1433) at 1", "Insert SimpleName: vertices(1468) into MethodInvocation(1471) at 0", "Insert SimpleName: get(1469) into MethodInvocation(1471) at 1", "Insert SimpleName: v(1470) into MethodInvocation(1471) at 2", "Insert SimpleName: e(1479) into MethodInvocation(1481) at 0", "Insert SimpleName: printStackTrace(1480) into MethodInvocation(1481) at 1", "Insert SimpleName: vertexFinished(1978) into Assignment: =(1989) at 0", "Move MethodInvocation(1948) into Assignment: =(1989) at 1", "Insert SimpleName: V(1155) into SimpleType: V(1156) at 0", "Insert SimpleName: WritableUtils(2339) into MethodInvocation(2342) at 0", "Insert SimpleName: WritableUtils(2996) into MethodInvocation(3013) at 0", "Delete QualifiedName: java.io.DataOutputStream(23)", "Delete ImportDeclaration(24)", "Delete SimpleType: Vertex(1132)", "Delete SimpleName: V(1133)", "Delete SimpleType: V(1134)", "Delete SimpleName: E(1135)", "Delete SimpleType: E(1136)", "Delete SimpleName: M(1137)", "Delete SimpleType: M(1138)", "Delete ParameterizedType: Vertex<V,E,M>(1139)", "Delete SimpleName: vertex(1140)", "Delete SingleVariableDeclaration(1141)", "Delete MethodInvocation(1144)", "Delete EnhancedForStatement(1171)", "Delete SimpleName: v(1447)", "Delete Block(1450)", "Delete Block(1972)", "Delete TryStatement(1983)", "Delete SimpleName: vertex(2365)", "Delete SimpleName: setRunner(2366)", "Delete ThisExpression(2367)", "Delete MethodInvocation(2368)", "Delete ExpressionStatement(2369)", "Delete Modifier: public(3043)", "Delete Modifier: static(3044)", "Delete PrimitiveType: byte(3045)", "Delete Dimension(3046)", "Delete ArrayType: byte[](3047)", "Delete SimpleName: serialize(3048)", "Delete SimpleName: Writable(3049)", "Delete SimpleType: Writable(3050)", "Delete SimpleName: writable(3051)", "Delete SingleVariableDeclaration(3052)", "Delete SimpleName: ByteArrayOutputStream(3055)", "Delete SimpleType: ByteArrayOutputStream(3056)", "Delete SimpleName: a(3057)", "Delete SimpleName: ByteArrayOutputStream(3058)", "Delete SimpleType: ByteArrayOutputStream(3059)", "Delete ClassInstanceCreation(3060)", "Delete VariableDeclarationFragment(3061)", "Delete VariableDeclarationStatement(3062)", "Delete SimpleName: DataOutputStream(3063)", "Delete SimpleType: DataOutputStream(3064)", "Delete SimpleName: b(3065)", "Delete SimpleName: DataOutputStream(3066)", "Delete SimpleType: DataOutputStream(3067)", "Delete SimpleName: a(3068)", "Delete ClassInstanceCreation(3069)", "Delete VariableDeclarationFragment(3070)", "Delete VariableDeclarationStatement(3071)", "Delete SimpleName: writable(3072)", "Delete SimpleName: write(3073)", "Delete SimpleName: b(3074)", "Delete MethodInvocation(3075)", "Delete ExpressionStatement(3076)", "Delete SimpleName: a(3077)", "Delete SimpleName: close(3078)", "Delete MethodInvocation(3079)", "Delete ExpressionStatement(3080)", "Delete SimpleName: a(3081)", "Delete SimpleName: toByteArray(3082)", "Delete MethodInvocation(3083)", "Delete ReturnStatement(3084)", "Delete Block(3085)", "Delete MethodDeclaration(3086)"]}}, {"MapVerticesInfo_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from java.util.Collection to org.apache.hama.util.WritableUtils", "operations": ["UPD QualifiedName: java.util.Collection from java.util.Collection to org.apache.hama.util.WritableUtils"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS ParameterizedType: GraphJobRunner<V,E,M> to FieldDeclaration at 1", "INS SimpleType: E to ParameterizedType: GraphJobRunner<V,E,M> at 2", "INS SimpleType: GraphJobRunner to ParameterizedType: GraphJobRunner<V,E,M> at 0", "INS SimpleType: V to ParameterizedType: GraphJobRunner<V,E,M> at 1", "INS SimpleName: GraphJobRunner to SimpleType: GraphJobRunner at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: M to SimpleType: M at 0", "INS SimpleType: M to ParameterizedType: GraphJobRunner<V,E,M> at 3", "INS SimpleName: runner to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleType: V to MethodInvocation at 1", "INS SimpleName: get to MethodDeclaration at 3", "INS SimpleName: GraphJobRunner to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: M to SimpleType: M at 0", "INS SimpleName: newVertexInstance to MethodInvocation at 4", "INS Block to MethodDeclaration at 6", "INS SimpleName: runner to MethodInvocation at 2", "INS SimpleName: v to MethodInvocation at 0", "INS SimpleName: setRunner to MethodInvocation at 1", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: GraphJobRunner.VERTEX_CLASS to MethodInvocation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: E to MethodInvocation at 2", "INS SimpleType: M to MethodInvocation at 3", "INS SimpleName: v to VariableDeclarationFragment at 0", "INS SimpleName: V to SimpleType: V at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: deserialize to MethodInvocation at 1"]}, {"root": "UPDATE from ConcurrentHashMap<V,Vertex<V,E,M>> to ConcurrentHashMap<V,byte[]>", "operations": ["UPD ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> from ConcurrentHashMap<V,Vertex<V,E,M>> to ConcurrentHashMap<V,byte[]>", "UPD ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> from ConcurrentHashMap<V,Vertex<V,E,M>> to ConcurrentHashMap<V,byte[]>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV ParameterizedType: Vertex<V,E,M> to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "INS ArrayType: byte[] to ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> at 2", "operations": ["INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: runner to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: runner to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from Collection to IOException", "operations": ["UPD SimpleName: Collection from Collection to IOException"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: Collection to SimpleType: IOException at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: serialize to MethodInvocation at 1", "INS SimpleName: vertex to MethodInvocation at 2", "INS SimpleName: vertices to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getVertexID to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: vertex to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Vertex<V,E,M> to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: v to ReturnStatement at 0", "operations": ["INS SimpleName: v to ReturnStatement at 0"]}, {"root": "UPDATE from Iterator<Vertex<V,E,M>> to Iterator<byte[]>", "operations": ["UPD ParameterizedType: Iterator<Vertex<V,E,M>> from Iterator<Vertex<V,E,M>> to Iterator<byte[]>"]}, {"root": "INS ArrayType: byte[] to ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> at 2", "operations": ["INS ArrayType: byte[] to ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>> at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ThisExpression to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: v to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: WritableUtils to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: serialize to MethodInvocation at 1", "INS SimpleName: v to MethodInvocation at 2", "INS SimpleName: vertices to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getVertexID to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: vertex to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from vertices to WritableUtils", "operations": ["UPD SimpleName: vertices from vertices to WritableUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: values to MethodInvocation at 3", "MOV SimpleName: vertices to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from values to v", "operations": ["UPD SimpleName: values from values to v", "UPD SimpleName: vertices from vertices to v"]}, {"root": "INS ArrayType: byte[] to ParameterizedType: Iterator<Vertex<V,E,M>> at 1", "operations": ["INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to ParameterizedType: Iterator<Vertex<V,E,M>> at 1"]}, {"root": "UPDATE from vertexIterator to it", "operations": ["UPD SimpleName: vertexIterator from vertexIterator to it", "UPD SimpleName: vertexIterator from vertexIterator to it", "UPD SimpleName: vertexIterator from vertexIterator to it"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Vertex<V,E,M> to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: serialize to MethodInvocation at 1", "INS SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: vertex to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: vertices to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS QualifiedName: GraphJobRunner.VERTEX_CLASS to MethodInvocation at 5", "INS SimpleName: v to VariableDeclarationFragment at 0", "INS SimpleName: E to SimpleType: E at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: V to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: M to MethodInvocation at 3", "INS SimpleName: newVertexInstance to MethodInvocation at 4", "INS SimpleType: E to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: M to SimpleType: M at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: GraphJobRunner to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: deserialize to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: v to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: runner to MethodInvocation at 2", "INS SimpleName: setRunner to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: v to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS SimpleName: v to ReturnStatement at 0", "INS ReturnStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: it to MethodInvocation at 0", "INS SimpleName: remove to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Vertex<V,E,M> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: vertexIterator to MethodInvocation at 0", "MOV SimpleName: next to MethodInvocation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: get"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Override", "DEL SimpleName: getValues", "DEL ReturnStatement", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL SimpleType: Collection", "DEL MarkerAnnotation", "DEL ParameterizedType: Collection<Vertex<V,E,M>>"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL Modifier: public"]}, {"root": "DEL ParameterizedType: Vertex<V,E,M>", "operations": ["DEL SimpleName: M", "DEL ParameterizedType: Vertex<V,E,M>", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: E", "DEL SimpleName: Vertex", "DEL SimpleType: E", "DEL SimpleType: Vertex", "DEL SimpleType: M"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}]}}, {"MapVerticesInfo_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(571) at 10", "Update QualifiedName: java.util.Collection(19) to org.apache.hama.util.WritableUtils", "Insert FieldDeclaration(116) into TypeDeclaration: class(570) at 9", "Insert MethodDeclaration(342) into TypeDeclaration: class(570) at 16", "Update ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>>(97) to ConcurrentHashMap<V,byte[]>", "Insert Modifier: private(104) into FieldDeclaration(116) at 0", "Insert ParameterizedType: GraphJobRunner<V,E,M>(113) into FieldDeclaration(116) at 1", "Insert VariableDeclarationFragment(115) into FieldDeclaration(116) at 2", "Move MarkerAnnotation(273) into MethodDeclaration(342) at 0", "Move Modifier: public(241) into MethodDeclaration(342) at 1", "Move ParameterizedType: Vertex<V,E,M>(283) into MethodDeclaration(342) at 2", "Insert SimpleName: get(296) into MethodDeclaration(342) at 3", "Move SingleVariableDeclaration(288) into MethodDeclaration(342) at 4", "Insert SimpleType: IOException(302) into MethodDeclaration(342) at 5", "Insert Block(341) into MethodDeclaration(342) at 6", "Insert ArrayType: byte[](90) into ParameterizedType: ConcurrentHashMap<V,byte[]>(91) at 2", "Insert SimpleType: GraphJobRunner(106) into ParameterizedType: GraphJobRunner<V,E,M>(113) at 0", "Insert SimpleType: V(108) into ParameterizedType: GraphJobRunner<V,E,M>(113) at 1", "Insert SimpleType: E(110) into ParameterizedType: GraphJobRunner<V,E,M>(113) at 2", "Insert SimpleType: M(112) into ParameterizedType: GraphJobRunner<V,E,M>(113) at 3", "Insert SimpleName: runner(114) into VariableDeclarationFragment(115) at 0", "Insert ExpressionStatement(154) into Block(155) at 0", "Update SimpleName: Collection(242) to IOException", "Move SimpleName: Collection(242) into SimpleType: IOException(302) at 0", "Insert VariableDeclarationStatement(324) into Block(341) at 0", "Insert ExpressionStatement(333) into Block(341) at 1", "Insert ExpressionStatement(338) into Block(341) at 2", "Move ReturnStatement(293) into Block(341) at 3", "Insert ExpressionStatement(515) into Block(516) at 2", "Insert PrimitiveType: byte(88) into ArrayType: byte[](90) at 0", "Insert Dimension(89) into ArrayType: byte[](90) at 1", "Update ParameterizedType: ConcurrentHashMap<V,Vertex<V,E,M>>(112) to ConcurrentHashMap<V,byte[]>", "Insert SimpleName: GraphJobRunner(105) into SimpleType: GraphJobRunner(106) at 0", "Insert SimpleName: V(107) into SimpleType: V(108) at 0", "Insert SimpleName: E(109) into SimpleType: E(110) at 0", "Insert SimpleName: M(111) into SimpleType: M(112) at 0", "Insert Assignment: =(153) into ExpressionStatement(154) at 0", "Move ParameterizedType: Vertex<V,E,M>(111) into VariableDeclarationStatement(324) at 0", "Insert VariableDeclarationFragment(323) into VariableDeclarationStatement(324) at 1", "Insert MethodInvocation(332) into ExpressionStatement(333) at 0", "Insert MethodInvocation(337) into ExpressionStatement(338) at 0", "Insert SimpleName: v(339) into ReturnStatement(340) at 0", "Update ParameterizedType: Iterator<Vertex<V,E,M>>(324) to Iterator<byte[]>", "Insert MethodInvocation(514) into ExpressionStatement(515) at 0", "Insert ArrayType: byte[](99) into ParameterizedType: ConcurrentHashMap<V,byte[]>(100) at 2", "Insert FieldAccess(151) into Assignment: =(153) at 0", "Insert SimpleName: runner(152) into Assignment: =(153) at 1", "Insert VariableDeclarationStatement(211) into Block(242) at 0", "Insert ExpressionStatement(241) into Block(242) at 2", "Insert SimpleName: v(312) into VariableDeclarationFragment(323) at 0", "Insert MethodInvocation(322) into VariableDeclarationFragment(323) at 1", "Update SimpleName: vertices(255) to WritableUtils", "Move SimpleName: vertices(255) into MethodInvocation(332) at 0", "Insert SimpleName: deserialize(326) into MethodInvocation(332) at 1", "Move MethodInvocation(292) into MethodInvocation(332) at 2", "Update SimpleName: values(256) to v", "Move SimpleName: values(256) into MethodInvocation(332) at 3", "Insert SimpleName: v(334) into MethodInvocation(337) at 0", "Insert SimpleName: setRunner(335) into MethodInvocation(337) at 1", "Insert SimpleName: runner(336) into MethodInvocation(337) at 2", "Insert ArrayType: byte[](364) into ParameterizedType: Iterator<byte[]>(365) at 1", "Update SimpleName: vertexIterator(325) to it", "Insert SimpleName: vertices(505) into MethodInvocation(514) at 0", "Insert SimpleName: put(506) into MethodInvocation(514) at 1", "Insert MethodInvocation(509) into MethodInvocation(514) at 2", "Insert MethodInvocation(513) into MethodInvocation(514) at 3", "Insert PrimitiveType: byte(97) into ArrayType: byte[](99) at 0", "Insert Dimension(98) into ArrayType: byte[](99) at 1", "Insert ThisExpression(149) into FieldAccess(151) at 0", "Insert SimpleName: runner(150) into FieldAccess(151) at 1", "Move ParameterizedType: Vertex<V,E,M>(252) into VariableDeclarationStatement(211) at 0", "Insert VariableDeclarationFragment(210) into VariableDeclarationStatement(211) at 1", "Insert MethodInvocation(240) into ExpressionStatement(241) at 0", "Insert SimpleName: GraphJobRunner(313) into MethodInvocation(322) at 0", "Insert SimpleType: V(315) into MethodInvocation(322) at 1", "Insert SimpleType: E(317) into MethodInvocation(322) at 2", "Insert SimpleType: M(319) into MethodInvocation(322) at 3", "Insert SimpleName: newVertexInstance(320) into MethodInvocation(322) at 4", "Insert QualifiedName: GraphJobRunner.VERTEX_CLASS(321) into MethodInvocation(322) at 5", "Insert PrimitiveType: byte(362) into ArrayType: byte[](364) at 0", "Insert Dimension(363) into ArrayType: byte[](364) at 1", "Insert SimpleName: vertex(507) into MethodInvocation(509) at 0", "Insert SimpleName: getVertexID(508) into MethodInvocation(509) at 1", "Insert SimpleName: WritableUtils(510) into MethodInvocation(513) at 0", "Insert SimpleName: serialize(511) into MethodInvocation(513) at 1", "Insert SimpleName: vertex(512) into MethodInvocation(513) at 2", "Insert MethodInvocation(190) into MethodInvocation(191) at 3", "Insert SimpleName: v(203) into VariableDeclarationFragment(210) at 0", "Insert MethodInvocation(209) into VariableDeclarationFragment(210) at 1", "Insert SimpleName: vertices(231) into MethodInvocation(240) at 0", "Insert SimpleName: put(232) into MethodInvocation(240) at 1", "Insert MethodInvocation(235) into MethodInvocation(240) at 2", "Insert MethodInvocation(239) into MethodInvocation(240) at 3", "Insert SimpleName: V(314) into SimpleType: V(315) at 0", "Insert SimpleName: E(316) into SimpleType: E(317) at 0", "Insert SimpleName: M(318) into SimpleType: M(319) at 0", "Move MarkerAnnotation(376) into MethodDeclaration(396) at 0", "Move MarkerAnnotation(346) into MethodDeclaration(459) at 0", "Insert SimpleName: WritableUtils(187) into MethodInvocation(190) at 0", "Insert SimpleName: serialize(188) into MethodInvocation(190) at 1", "Move SimpleName: vertex(180) into MethodInvocation(190) at 2", "Insert ThisExpression(204) into MethodInvocation(209) at 0", "Insert SimpleName: get(205) into MethodInvocation(209) at 1", "Move MethodInvocation(200) into MethodInvocation(209) at 2", "Insert SimpleName: vertex(233) into MethodInvocation(235) at 0", "Insert SimpleName: getVertexID(234) into MethodInvocation(235) at 1", "Insert SimpleName: WritableUtils(236) into MethodInvocation(239) at 0", "Insert SimpleName: serialize(237) into MethodInvocation(239) at 1", "Insert SimpleName: v(238) into MethodInvocation(239) at 2", "Insert VariableDeclarationStatement(431) into Block(447) at 0", "Insert ExpressionStatement(439) into Block(447) at 1", "Insert ExpressionStatement(444) into Block(447) at 2", "Insert ReturnStatement(446) into Block(447) at 3", "Insert ExpressionStatement(457) into Block(458) at 0", "Update SimpleName: vertices(196) to v", "Move SimpleName: vertices(196) into MethodInvocation(227) at 0", "Move ParameterizedType: Vertex<V,E,M>(96) into VariableDeclarationStatement(431) at 0", "Insert VariableDeclarationFragment(430) into VariableDeclarationStatement(431) at 1", "Insert MethodInvocation(438) into ExpressionStatement(439) at 0", "Insert MethodInvocation(443) into ExpressionStatement(444) at 0", "Insert SimpleName: v(445) into ReturnStatement(446) at 0", "Insert MethodInvocation(456) into ExpressionStatement(457) at 0", "Update SimpleName: vertexIterator(350) to it", "Insert SimpleName: v(419) into VariableDeclarationFragment(430) at 0", "Insert MethodInvocation(429) into VariableDeclarationFragment(430) at 1", "Insert SimpleName: WritableUtils(432) into MethodInvocation(438) at 0", "Insert SimpleName: deserialize(433) into MethodInvocation(438) at 1", "Insert MethodInvocation(436) into MethodInvocation(438) at 2", "Insert SimpleName: v(437) into MethodInvocation(438) at 3", "Insert SimpleName: v(440) into MethodInvocation(443) at 0", "Insert SimpleName: setRunner(441) into MethodInvocation(443) at 1", "Insert SimpleName: runner(442) into MethodInvocation(443) at 2", "Insert SimpleName: it(454) into MethodInvocation(456) at 0", "Insert SimpleName: remove(455) into MethodInvocation(456) at 1", "Insert SimpleName: GraphJobRunner(420) into MethodInvocation(429) at 0", "Insert SimpleType: V(422) into MethodInvocation(429) at 1", "Insert SimpleType: E(424) into MethodInvocation(429) at 2", "Insert SimpleType: M(426) into MethodInvocation(429) at 3", "Insert SimpleName: newVertexInstance(427) into MethodInvocation(429) at 4", "Insert QualifiedName: GraphJobRunner.VERTEX_CLASS(428) into MethodInvocation(429) at 5", "Update SimpleName: vertexIterator(369) to it", "Move SimpleName: vertexIterator(369) into MethodInvocation(436) at 0", "Move SimpleName: next(370) into MethodInvocation(436) at 1", "Insert SimpleName: V(421) into SimpleType: V(422) at 0", "Insert SimpleName: E(423) into SimpleType: E(424) at 0", "Insert SimpleName: M(425) into SimpleType: M(426) at 0", "Delete SimpleName: get(197)", "Delete MethodInvocation(201)", "Delete SimpleName: Override(239)", "Delete MarkerAnnotation(240)", "Delete SimpleType: Collection(243)", "Delete ParameterizedType: Collection<Vertex<V,E,M>>(253)", "Delete SimpleName: getValues(254)", "Delete MethodInvocation(257)", "Delete ReturnStatement(258)", "Delete Block(259)", "Delete MethodDeclaration(260)", "Delete Modifier: public(274)", "Delete SimpleName: get(284)", "Delete Block(294)", "Delete MethodDeclaration(295)", "Delete SimpleName: Vertex(315)", "Delete SimpleType: Vertex(316)", "Delete SimpleName: V(317)", "Delete SimpleType: V(318)", "Delete SimpleName: E(319)", "Delete SimpleType: E(320)", "Delete SimpleName: M(321)", "Delete SimpleType: M(322)", "Delete ParameterizedType: Vertex<V,E,M>(323)", "Delete MethodInvocation(371)", "Delete ReturnStatement(372)"]}}, {"Vertex_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.hama.util.WritableUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: Vertex to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS Block to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from GraphJobRunner to WritableUtils", "operations": ["UPD SimpleName: GraphJobRunner from GraphJobRunner to WritableUtils", "UPD SimpleName: GraphJobRunner from GraphJobRunner to WritableUtils", "UPD SimpleName: GraphJobRunner from GraphJobRunner to WritableUtils"]}]}}, {"Vertex_diff": {"operations": ["Insert ImportDeclaration(42) into CompilationUnit(1481) at 13", "Insert QualifiedName: org.apache.hama.util.WritableUtils(41) into ImportDeclaration(42) at 0", "Insert MethodDeclaration(180) into TypeDeclaration: class(1480) at 17", "Insert Modifier: public(177) into MethodDeclaration(180) at 0", "Insert SimpleName: Vertex(178) into MethodDeclaration(180) at 1", "Insert Block(179) into MethodDeclaration(180) at 2", "Update SimpleName: GraphJobRunner(223) to WritableUtils", "Update SimpleName: GraphJobRunner(249) to WritableUtils", "Update SimpleName: GraphJobRunner(289) to WritableUtils"]}}, {"VerticesInfo_cluster": {"actions": [{"root": "INS SimpleType: IOException to MethodDeclaration at 4", "operations": ["INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collection", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: V", "DEL ParameterizedType: Collection<Vertex<V,E,M>>", "DEL SimpleType: E", "DEL ParameterizedType: Vertex<V,E,M>", "DEL Modifier: public", "DEL SimpleName: Vertex", "DEL SimpleName: Collection", "DEL SimpleName: E", "DEL SimpleType: V", "DEL SimpleType: M", "DEL SimpleName: getValues", "DEL SimpleType: Vertex", "DEL SimpleName: M", "DEL SimpleType: Collection"]}]}}, {"VerticesInfo_diff": {"operations": ["Insert SimpleType: IOException(130) into MethodDeclaration(131) at 4", "Insert SimpleName: IOException(129) into SimpleType: IOException(130) at 0", "Delete QualifiedName: java.util.Collection(19)", "Delete ImportDeclaration(20)", "Delete Modifier: public(207)", "Delete SimpleName: Collection(208)", "Delete SimpleType: Collection(209)", "Delete SimpleName: Vertex(210)", "Delete SimpleType: Vertex(211)", "Delete SimpleName: V(212)", "Delete SimpleType: V(213)", "Delete SimpleName: E(214)", "Delete SimpleType: E(215)", "Delete SimpleName: M(216)", "Delete SimpleType: M(217)", "Delete ParameterizedType: Vertex<V,E,M>(218)", "Delete ParameterizedType: Collection<Vertex<V,E,M>>(219)", "Delete SimpleName: getValues(220)", "Delete MethodDeclaration(221)"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 4, "testing": "True", "maintenance": "True", "build": "True"}]}