{"application": "google-sagetv", "csha": "368aa9e985bcf4ac392cc84c54340e56ba605d22", "files": [{"CorePluginManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: sage.EPG to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: sage.FileDownloader to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: sage.IOUtils to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: sage.MediaFile to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: sage.MetaImage to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: sage.Pooler to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: sage.Sage to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: sage.SageProperties to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: sage.SageTV to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: sage.SageTVPlugin to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: sage.SageTVPluginRegistry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: sage.UIClient to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: sage.UIManager to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: sage.Version to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: java.io.Closeable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: java.io.FileInputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: java.io.FileNotFoundException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: java.io.FileOutputStream to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS QualifiedName: java.io.InputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 26"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS QualifiedName: java.util.zip.ZipEntry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 34"]}, {"root": "INS QualifiedName: org.xml.sax.Attributes to ImportDeclaration at 0", "operations": ["INS QualifiedName: org.xml.sax.Attributes to ImportDeclaration at 0"]}, {"root": "UPDATE from javax.xml.parsers to org.xml.sax.SAXException", "operations": ["UPD QualifiedName: javax.xml.parsers from javax.xml.parsers to org.xml.sax.SAXException"]}, {"root": "UPDATE from org.xml.sax to org.xml.sax.helpers.DefaultHandler", "operations": ["UPD QualifiedName: org.xml.sax from org.xml.sax to org.xml.sax.helpers.DefaultHandler"]}, {"root": "UPDATE from org.xml.sax.helpers to javax.xml.parsers.SAXParserFactory", "operations": ["UPD QualifiedName: org.xml.sax.helpers from org.xml.sax.helpers to javax.xml.parsers.SAXParserFactory"]}, {"root": "UPDATE from java.util.regex.Pattern to java.util.zip.ZipFile", "operations": ["UPD QualifiedName: java.util.regex.Pattern from java.util.regex.Pattern to java.util.zip.ZipFile"]}, {"root": "INS TypeDeclaration: interface to TypeDeclaration: class at 56", "operations": ["INS SimpleName: getTime to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 3", "INS SimpleName: InstallableItem to TypeDeclaration: interface at 1", "INS SimpleName: getName to MethodDeclaration at 1", "INS Javadoc to TypeDeclaration: interface at 0", "INS MethodDeclaration to TypeDeclaration: interface at 2", "INS SimpleName: getInputStream to MethodDeclaration at 1", "INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: String to MethodDeclaration at 0", "INS TypeDeclaration: interface to TypeDeclaration: class at 56", "INS TextElement: Encapsulates an installable item that might come various sources, such as a ZipFile or regular File to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: interface at 4", "INS TagElement to Javadoc at 0", "INS PrimitiveType: long to MethodDeclaration at 0", "INS SimpleType: InputStream to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 57", "operations": ["INS SimpleType: File to FieldDeclaration at 2", "INS Modifier: static to TypeDeclaration: class at 2", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Encapsulates java File as an installable item to TagElement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: name to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS TypeDeclaration: class to TypeDeclaration: class at 57", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: name to Assignment: = at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: FileInstallableItem to MethodDeclaration at 0", "INS SimpleType: InputStream to MethodDeclaration at 1", "INS SimpleName: FileNotFoundException to SimpleType: FileNotFoundException at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: InstallableItem to SimpleType: InstallableItem at 0", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS PrimitiveType: long to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: getTime to MethodDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: file to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: getName to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleType: String to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: FileInstallableItem to TypeDeclaration: class at 3", "INS ReturnStatement to Block at 0", "INS SimpleType: FileNotFoundException to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: FileInputStream to SimpleType: FileInputStream at 0", "INS SimpleName: name to VariableDeclarationFragment at 0", "INS SimpleName: file to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: name to FieldAccess at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: getInputStream to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: InstallableItem to TypeDeclaration: class at 4", "INS SimpleName: File to SimpleType: File at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS ReturnStatement to Block at 0", "INS SimpleName: file to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: lastModified to MethodInvocation at 1", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: FileInputStream to ClassInstanceCreation at 0", "INS SimpleName: file to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: file to Assignment: = at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: file to SingleVariableDeclaration at 1"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 58", "operations": ["INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS Modifier: public to MethodDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: ZipEntryInstallableItem to TypeDeclaration: class at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Javadoc to TypeDeclaration: class at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: getInputStream to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: InstallableItem to SimpleType: InstallableItem at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleType: ZipFile to SingleVariableDeclaration at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: getName to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: static to TypeDeclaration: class at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: ZipEntry to FieldDeclaration at 1", "INS SimpleName: file to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: file to MethodInvocation at 0", "INS SimpleName: setEntry to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ZipEntryInstallableItem to MethodDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: file to Assignment: = at 1", "INS SimpleName: entry to FieldAccess at 1", "INS SimpleName: ZipEntry to SimpleType: ZipEntry at 0", "INS SimpleName: file to FieldAccess at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: getTime to MethodDeclaration at 2", "INS SimpleName: entry to MethodInvocation at 2", "INS SimpleName: entry to Assignment: = at 1", "INS SimpleType: ZipFile to FieldDeclaration at 2", "INS SimpleType: IOException to MethodDeclaration at 3", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: InstallableItem to TypeDeclaration: class at 4", "INS TypeDeclaration: class to TypeDeclaration: class at 58", "INS SimpleName: entry to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: file to SingleVariableDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS SimpleName: ZipFile to SimpleType: ZipFile at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 2", "INS SimpleName: ZipEntry to SimpleType: ZipEntry at 0", "INS SimpleType: ZipEntry to SingleVariableDeclaration at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS TextElement: Encapsulates a ZipEntry as an installable item to TagElement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: InputStream to MethodDeclaration at 1", "INS SimpleName: ZipFile to SimpleType: ZipFile at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getInputStream to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: long to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ReturnStatement to Block at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 59", "operations": ["INS SimpleName: println to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: stagedRenameWriter to Assignment: = at 0", "INS SimpleName: Closeable to SimpleType: Closeable at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: IOException to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleName: stagedRenameWriter to MethodInvocation at 2", "INS SimpleName: println to MethodDeclaration at 2", "INS SimpleType: StagedRenameWriter to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: StagedRenameWriter to FieldDeclaration at 1", "INS SimpleName: msg to SingleVariableDeclaration at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: open to MethodInvocation at 0", "INS SimpleName: get to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: StagedRenameWriter to SimpleType: StagedRenameWriter at 0", "INS SimpleName: stagedRenameWriter to MethodInvocation at 0", "INS SimpleName: IOUtils to MethodInvocation at 0", "INS SimpleType: IOException to MethodDeclaration at 4", "INS ExpressionStatement to Block at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: stagedRenameWriter to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: close to MethodDeclaration at 2", "INS TextElement: Provides a singleton access to the Staged Renamer writer to TagElement at 0", "INS SimpleName: StagedRenameWriter to SimpleType: StagedRenameWriter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: StagedRenameWriter to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS QualifiedName: java.io.PrintWriter to SimpleType: java.io.PrintWriter at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: StagedRenameWriter to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: instance to ReturnStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: Closeable to TypeDeclaration: class at 3", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: closeQuietly to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 59", "INS Modifier: final to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: instance to VariableDeclarationFragment at 0", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleType: java.io.PrintWriter to FieldDeclaration at 0", "INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: open to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: msg to MethodInvocation at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: StagedRenameWriter to SimpleType: StagedRenameWriter at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 60", "operations": ["INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: myInstallIndex to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS TextElement:  for any IO related errors to TagElement: @throws at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  copy data buffer to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: localExtract to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 2", "INS PrimitiveType: byte to SingleVariableDeclaration at 1", "INS TextElement:  Local File to TagElement: @param at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: pkg to TagElement: @param at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @param to Javadoc at 4", "INS SimpleName: buf to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS MethodDeclaration to TypeDeclaration: class at 60", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: buf to TagElement: @param at 0", "INS SimpleType: StagedRenameWriter to SingleVariableDeclaration at 0", "INS SimpleName: StagedRenameWriter to SimpleType: StagedRenameWriter at 0", "INS TagElement: @param to Javadoc at 5", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: entry to TagElement: @param at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Dimension to SingleVariableDeclaration at 3", "INS SimpleName: IOException to TagElement: @throws at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 7", "INS SimpleName: priorStateIndex to TagElement: @param at 0", "INS QualifiedName: PluginWrapper.Package to SimpleType: PluginWrapper.Package at 0", "INS SimpleName: File to SimpleType: File at 0", "INS TextElement: Installs an Installable Item to the localExtract file. to TagElement at 0", "INS TextElement:  Installable Item form which the get the Name and Input Stream to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: destDir to TagElement: @param at 0", "INS TextElement:  writer for writing staged renames to TagElement: @param at 1", "INS SimpleName: priorStateIndex to SingleVariableDeclaration at 2", "INS TagElement: @param to Javadoc at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS TagElement: @param to Javadoc at 6", "INS SimpleName: pkg to SingleVariableDeclaration at 1", "INS TagElement: @return to Javadoc at 9", "INS SimpleName: stagedRenameWriter to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS SimpleName: InstallableItem to SimpleType: InstallableItem at 0", "INS SimpleType: InstallableItem to SingleVariableDeclaration at 0", "INS SimpleType: PluginWrapper.Package to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: installFile to MethodDeclaration at 2", "INS TextElement:  \"OK\" on success, or and error message if it failed to TagElement: @return at 0", "INS SimpleType: IOException to MethodDeclaration at 11", "INS SimpleName: stagedRenameWriter to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS TextElement:  Destination Directory to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 8", "INS SimpleName: localExtract to TagElement: @param at 0", "INS TextElement:  Plugin Package to TagElement: @param at 1", "INS SimpleName: myInstallIndex to TagElement: @param at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: destDir to SingleVariableDeclaration at 1", "INS TagElement: @throws to Javadoc at 10"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0", "MOV Block to MethodDeclaration at 12"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS NullLiteral to ReturnStatement at 0", "INS ReturnStatement to Block at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS QualifiedName: pkg.overwrite to InfixExpression: || at 0", "INS InfixExpression: || to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 7"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV PrefixExpression: ! to InfixExpression: || at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS SimpleName: inStream to VariableDeclarationFragment at 0", "INS SimpleName: getInputStream to MethodInvocation at 1", "INS SimpleType: InputStream to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS VariableDeclarationStatement to Block at 9", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 9", "MOV IfStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS SimpleType: FileOutputStream to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: FileOutputStream to VariableDeclarationStatement at 0", "INS SimpleName: FileOutputStream to SimpleType: FileOutputStream at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS SimpleName: buf to MethodInvocation at 8", "INS SimpleName: myInstallIndex to MethodInvocation at 6", "INS StringLiteral: \" to root dest dir of: \" to InfixExpression: + at 2", "INS ExpressionStatement to Block at 1", "INS StringLiteral: \"\" to Assignment: = at 1", "INS FieldAccess to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayAccess to FieldAccess at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: currFile to MethodInvocation at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: progressMsg to Assignment: = at 0", "INS IfStatement to Block at 9", "INS SimpleName: type to FieldAccess at 1", "INS IfStatement to Block at 2", "INS Block to CatchClause at 1", "INS SimpleName: result to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS StringLiteral: \"JAR\" to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: destFile to MethodInvocation at 0", "INS QualifiedName: Sage.DBG to IfStatement at 0", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS StringLiteral: \"jar\" to MethodInvocation at 2", "INS SimpleName: endsWith to MethodInvocation at 1", "INS SimpleName: packages to ArrayAccess at 0", "INS SimpleName: currFile to InfixExpression: + at 1", "INS SimpleName: destDir to MethodInvocation at 3", "INS SimpleName: StagedRenameWriter to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS ArrayAccess to MethodInvocation at 1", "INS SimpleName: packages to ArrayAccess at 0", "INS ExpressionStatement to Block at 1", "INS TryStatement to Block at 2", "INS SimpleName: FileInstallableItem to SimpleType: FileInstallableItem at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: currFile to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: priorStateIndex to MethodInvocation at 5", "INS SimpleName: destFile to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 4", "INS StringLiteral: \"Beginning copying jar from cache file \" to InfixExpression: + at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS ReturnStatement to IfStatement at 1", "INS QualifiedName: System.out to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ReturnStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 7", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: installFile to MethodInvocation at 0", "INS SimpleType: FileInstallableItem to ClassInstanceCreation at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: destDir to InfixExpression: + at 3"]}, {"root": "UPDATE from stagedRenameWriter to IOUtils", "operations": ["UPD SimpleName: stagedRenameWriter from stagedRenameWriter to IOUtils"]}, {"root": "UPDATE from close to closeQuietly", "operations": ["UPD SimpleName: close from close to closeQuietly"]}, {"root": "INS SimpleName: stagedRenameWriter to MethodInvocation at 2", "operations": ["INS SimpleName: stagedRenameWriter to MethodInvocation at 2"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS ConditionalExpression to VariableDeclarationFragment at 1", "INS NullLiteral to ConditionalExpression at 2", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS InfixExpression: != to ParenthesizedExpression at 0", "INS SimpleName: newWrap to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: entry to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getMD5 to MethodInvocation at 1"]}, {"root": "UPDATE from java.io.InputStream to String", "operations": ["UPD SimpleType: java.io.InputStream from java.io.InputStream to String"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS SimpleName: localExtract to MethodInvocation at 2", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: StagedRenameWriter to MethodInvocation at 0", "INS SimpleType: ZipEntryInstallableItem to ClassInstanceCreation at 0", "INS WhileStatement to Block at 5", "INS SimpleName: zipEntryFacade to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 7", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: zipEntryFacade to MethodInvocation at 4", "INS ArrayAccess to MethodInvocation at 1", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: result to InfixExpression: != at 0", "INS SimpleType: ZipEntryInstallableItem to VariableDeclarationStatement at 0", "INS SimpleName: installFile to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: result to ReturnStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: destDir to MethodInvocation at 3", "INS Block to WhileStatement at 1", "INS SimpleName: i to ArrayAccess at 1", "INS Block to IfStatement at 2", "INS SimpleName: packages to ArrayAccess at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: zippy to ClassInstanceCreation at 1", "INS SimpleName: ZipEntryInstallableItem to SimpleType: ZipEntryInstallableItem at 0", "INS SimpleName: priorStateIndex to MethodInvocation at 5", "INS SimpleName: myInstallIndex to MethodInvocation at 6", "INS SimpleName: buf to MethodInvocation at 8", "INS SimpleName: ZipEntryInstallableItem to SimpleType: ZipEntryInstallableItem at 0", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "INS Block to TryStatement at 2", "operations": ["INS SimpleName: zippy to MethodInvocation at 2", "INS SimpleName: closeQuietly to MethodInvocation at 1", "INS SimpleName: IOUtils to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to TryStatement at 2"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS Block to TryStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 0"]}, {"root": "INS SimpleName: String to SimpleType: java.io.InputStream at 0", "operations": ["INS SimpleName: String to SimpleType: java.io.InputStream at 0"]}, {"root": "UPDATE from outStream to result", "operations": ["UPD SimpleName: outStream from outStream to result", "UPD SimpleName: inStream from inStream to result"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV IfStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS MethodInvocation to InfixExpression: != at 0", "operations": ["INS SimpleName: currPackage to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getRawMD5 to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getMD5 to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from java.io.FileOutputStream to java.io.File", "operations": ["UPD QualifiedName: java.io.FileOutputStream from java.io.FileOutputStream to java.io.File", "UPD SimpleType: java.io.FileOutputStream from java.io.FileOutputStream to java.io.File"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: destDir to ClassInstanceCreation at 1", "INS ArrayAccess to FieldAccess at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: i to ArrayAccess at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: packages to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS FieldAccess to ClassInstanceCreation at 1", "INS SimpleType: File to ClassInstanceCreation at 0", "INS SimpleName: destFile to VariableDeclarationFragment at 0", "INS QualifiedName: java.io.File to SimpleType: java.io.File at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: java.io.File to ClassInstanceCreation at 0", "INS SimpleName: url to FieldAccess at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "UPDATE from Exception to IOException", "operations": ["UPD SimpleType: Exception from Exception to IOException", "UPD SimpleName: Exception from Exception to IOException"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV MethodInvocation to WhileStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 0"]}, {"root": "UPDATE from != to ||", "operations": ["UPD InfixExpression: != from != to ||"]}, {"root": "UPDATE from || to +", "operations": ["UPD InfixExpression: || from || to +"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV InfixExpression: || to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setRawMD5 to MethodInvocation at 1", "INS SimpleName: data to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: currPackage to MethodInvocation at 0"]}, {"root": "INS QualifiedName: Sage.DBG to InfixExpression: != at 0", "operations": ["INS QualifiedName: Sage.DBG to InfixExpression: != at 0"]}, {"root": "INS QualifiedName: Sage.TESTING to InfixExpression: != at 1", "operations": ["INS QualifiedName: Sage.TESTING to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: printStackTrace to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to MethodInvocation at 0"]}, {"root": "INS StringLiteral: \"FAILED - Jar Installation of \" to InfixExpression: || at 0", "operations": ["INS StringLiteral: \"FAILED - Jar Installation of \" to InfixExpression: || at 0"]}, {"root": "UPDATE from overwrite to url", "operations": ["UPD SimpleName: overwrite from overwrite to url"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setRawMD5 to MethodInvocation at 1", "INS SimpleName: currPackage to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS QualifiedName: System.out to MethodInvocation at 0", "operations": ["INS QualifiedName: System.out to MethodInvocation at 0"]}, {"root": "UPDATE from inStream to println", "operations": ["UPD SimpleName: inStream from inStream to println"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS SimpleName: currFile to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"ERROR installing jar file \" to InfixExpression: + at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from zippy to zipEntryFacade", "operations": ["UPD SimpleName: zippy from zippy to zipEntryFacade"]}, {"root": "UPDATE from close to setEntry", "operations": ["UPD SimpleName: close from close to setEntry"]}, {"root": "INS SimpleName: entry to MethodInvocation at 2", "operations": ["INS SimpleName: entry to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 3", "operations": ["INS SimpleName: getRawMD5 to MethodInvocation at 1", "INS SimpleName: currPackage to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3"]}, {"root": "DEL SimpleName: sage", "operations": ["DEL SimpleName: sage"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL SimpleName: md5"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL SimpleName: md5"]}, {"root": "DEL QualifiedName: java.io.InputStream", "operations": ["DEL QualifiedName: java.io.InputStream"]}, {"root": "DEL SimpleName: inStream", "operations": ["DEL SimpleName: inStream"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: close", "operations": ["DEL SimpleName: close"]}, {"root": "DEL TryStatement", "operations": ["DEL TryStatement", "DEL CatchClause", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: Exception", "DEL Block", "DEL SimpleName: e", "DEL SimpleType: Exception"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL CatchClause", "operations": ["DEL SimpleName: e", "DEL SimpleName: Exception", "DEL SimpleType: Exception", "DEL CatchClause", "DEL Block", "DEL SingleVariableDeclaration"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL IfStatement", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL CatchClause", "DEL Block", "DEL SimpleName: zippy", "DEL Block", "DEL WhileStatement", "DEL TryStatement", "DEL Block", "DEL SimpleName: close", "DEL NullLiteral", "DEL SimpleName: outStream", "DEL IfStatement", "DEL Block", "DEL TryStatement"]}, {"root": "DEL Block", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL CatchClause", "DEL Block", "DEL IfStatement", "DEL TryStatement", "DEL SimpleName: Exception", "DEL SimpleType: Exception", "DEL Block", "DEL Block"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: getName", "DEL SimpleName: localExtract", "DEL MethodInvocation", "DEL SimpleName: lcName"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: inStream", "DEL SimpleName: zippy", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: getInputStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL NullLiteral", "DEL Assignment: =", "DEL SimpleName: outStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: inStream", "DEL NullLiteral", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: stagedRenameWriter", "DEL Block", "DEL IfStatement", "DEL InfixExpression: ==", "DEL NullLiteral"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: data", "DEL Assignment: =", "DEL QualifiedName: currPackage.md5"]}, {"root": "DEL Assignment: =", "operations": ["DEL QualifiedName: currPackage.md5", "DEL Assignment: ="]}, {"root": "DEL QualifiedName: currPackage.md5", "operations": ["DEL QualifiedName: currPackage.md5"]}, {"root": "DEL QualifiedName: currPackage.md5", "operations": ["DEL QualifiedName: currPackage.md5"]}]}}, {"CorePluginManager_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(13733) at 4", "Insert ImportDeclaration(11) into CompilationUnit(13733) at 5", "Insert ImportDeclaration(13) into CompilationUnit(13733) at 6", "Insert ImportDeclaration(15) into CompilationUnit(13733) at 7", "Insert ImportDeclaration(17) into CompilationUnit(13733) at 8", "Insert ImportDeclaration(19) into CompilationUnit(13733) at 9", "Insert ImportDeclaration(21) into CompilationUnit(13733) at 10", "Insert ImportDeclaration(23) into CompilationUnit(13733) at 11", "Insert ImportDeclaration(25) into CompilationUnit(13733) at 12", "Insert ImportDeclaration(27) into CompilationUnit(13733) at 13", "Insert ImportDeclaration(29) into CompilationUnit(13733) at 14", "Insert ImportDeclaration(31) into CompilationUnit(13733) at 15", "Insert ImportDeclaration(33) into CompilationUnit(13733) at 16", "Insert ImportDeclaration(35) into CompilationUnit(13733) at 17", "Insert ImportDeclaration(39) into CompilationUnit(13733) at 19", "Insert ImportDeclaration(43) into CompilationUnit(13733) at 21", "Insert ImportDeclaration(45) into CompilationUnit(13733) at 22", "Insert ImportDeclaration(47) into CompilationUnit(13733) at 23", "Insert ImportDeclaration(51) into CompilationUnit(13733) at 25", "Insert ImportDeclaration(53) into CompilationUnit(13733) at 26", "Insert ImportDeclaration(69) into CompilationUnit(13733) at 34", "Insert QualifiedName: org.xml.sax.Attributes(2) into ImportDeclaration(3) at 0", "Update QualifiedName: javax.xml.parsers(4) to org.xml.sax.SAXException", "Update QualifiedName: org.xml.sax(6) to org.xml.sax.helpers.DefaultHandler", "Insert QualifiedName: sage.EPG(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: sage.FileDownloader(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: sage.IOUtils(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: sage.MediaFile(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: sage.MetaImage(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: sage.Pooler(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: sage.Sage(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: sage.SageProperties(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: sage.SageTV(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: sage.SageTVPlugin(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: sage.SageTVPluginRegistry(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: sage.UIClient(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: sage.UIManager(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: sage.Version(34) into ImportDeclaration(35) at 0", "Update QualifiedName: org.xml.sax.helpers(8) to javax.xml.parsers.SAXParserFactory", "Insert QualifiedName: java.io.Closeable(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: java.io.FileInputStream(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: java.io.FileNotFoundException(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: java.io.FileOutputStream(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: java.io.IOException(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: java.io.InputStream(52) into ImportDeclaration(53) at 0", "Insert QualifiedName: java.util.zip.ZipEntry(68) into ImportDeclaration(69) at 0", "Update QualifiedName: java.util.regex.Pattern(28) to java.util.zip.ZipFile", "Insert TypeDeclaration: interface(9983) into TypeDeclaration: class(13732) at 56", "Insert TypeDeclaration: class(10059) into TypeDeclaration: class(13732) at 57", "Insert TypeDeclaration: class(10141) into TypeDeclaration: class(13732) at 58", "Insert TypeDeclaration: class(10240) into TypeDeclaration: class(13732) at 59", "Insert MethodDeclaration(10814) into TypeDeclaration: class(13732) at 60", "Insert Javadoc(9968) into TypeDeclaration: interface(9983) at 0", "Insert SimpleName: InstallableItem(9969) into TypeDeclaration: interface(9983) at 1", "Insert MethodDeclaration(9973) into TypeDeclaration: interface(9983) at 2", "Insert MethodDeclaration(9979) into TypeDeclaration: interface(9983) at 3", "Insert MethodDeclaration(9982) into TypeDeclaration: interface(9983) at 4", "Insert Javadoc(9986) into TypeDeclaration: class(10059) at 0", "Insert Modifier: private(9987) into TypeDeclaration: class(10059) at 1", "Insert Modifier: static(9988) into TypeDeclaration: class(10059) at 2", "Insert SimpleName: FileInstallableItem(9989) into TypeDeclaration: class(10059) at 3", "Insert SimpleType: InstallableItem(9991) into TypeDeclaration: class(10059) at 4", "Insert FieldDeclaration(9998) into TypeDeclaration: class(10059) at 5", "Insert FieldDeclaration(10005) into TypeDeclaration: class(10059) at 6", "Insert MethodDeclaration(10028) into TypeDeclaration: class(10059) at 7", "Insert MethodDeclaration(10036) into TypeDeclaration: class(10059) at 8", "Insert MethodDeclaration(10049) into TypeDeclaration: class(10059) at 9", "Insert MethodDeclaration(10058) into TypeDeclaration: class(10059) at 10", "Insert Javadoc(10062) into TypeDeclaration: class(10141) at 0", "Insert Modifier: private(10063) into TypeDeclaration: class(10141) at 1", "Insert Modifier: static(10064) into TypeDeclaration: class(10141) at 2", "Insert SimpleName: ZipEntryInstallableItem(10065) into TypeDeclaration: class(10141) at 3", "Insert SimpleType: InstallableItem(10067) into TypeDeclaration: class(10141) at 4", "Insert FieldDeclaration(10074) into TypeDeclaration: class(10141) at 5", "Insert FieldDeclaration(10080) into TypeDeclaration: class(10141) at 6", "Insert MethodDeclaration(10093) into TypeDeclaration: class(10141) at 7", "Insert MethodDeclaration(10108) into TypeDeclaration: class(10141) at 8", "Insert MethodDeclaration(10118) into TypeDeclaration: class(10141) at 9", "Insert MethodDeclaration(10131) into TypeDeclaration: class(10141) at 10", "Insert MethodDeclaration(10140) into TypeDeclaration: class(10141) at 11", "Insert Javadoc(10144) into TypeDeclaration: class(10240) at 0", "Insert Modifier: static(10145) into TypeDeclaration: class(10240) at 1", "Insert SimpleName: StagedRenameWriter(10146) into TypeDeclaration: class(10240) at 2", "Insert SimpleType: Closeable(10148) into TypeDeclaration: class(10240) at 3", "Insert FieldDeclaration(10157) into TypeDeclaration: class(10240) at 4", "Insert MethodDeclaration(10167) into TypeDeclaration: class(10240) at 5", "Insert FieldDeclaration(10173) into TypeDeclaration: class(10240) at 6", "Insert MethodDeclaration(10206) into TypeDeclaration: class(10240) at 7", "Insert MethodDeclaration(10220) into TypeDeclaration: class(10240) at 8", "Insert MethodDeclaration(10239) into TypeDeclaration: class(10240) at 9", "Insert Javadoc(10270) into MethodDeclaration(10814) at 0", "Insert SimpleType: String(10272) into MethodDeclaration(10814) at 1", "Insert SimpleName: installFile(10273) into MethodDeclaration(10814) at 2", "Insert SingleVariableDeclaration(10277) into MethodDeclaration(10814) at 3", "Insert SingleVariableDeclaration(10281) into MethodDeclaration(10814) at 4", "Insert SingleVariableDeclaration(10285) into MethodDeclaration(10814) at 5", "Insert SingleVariableDeclaration(10289) into MethodDeclaration(10814) at 6", "Insert SingleVariableDeclaration(10293) into MethodDeclaration(10814) at 7", "Insert SingleVariableDeclaration(10297) into MethodDeclaration(10814) at 8", "Insert SingleVariableDeclaration(10301) into MethodDeclaration(10814) at 9", "Insert SingleVariableDeclaration(10306) into MethodDeclaration(10814) at 10", "Insert SimpleType: IOException(10308) into MethodDeclaration(10814) at 11", "Move Block(9549) into MethodDeclaration(10814) at 12", "Insert TagElement(9967) into Javadoc(9968) at 0", "Insert SimpleType: String(9971) into MethodDeclaration(9973) at 0", "Insert SimpleName: getName(9972) into MethodDeclaration(9973) at 1", "Insert SimpleType: InputStream(9975) into MethodDeclaration(9979) at 0", "Insert SimpleName: getInputStream(9976) into MethodDeclaration(9979) at 1", "Insert SimpleType: IOException(9978) into MethodDeclaration(9979) at 2", "Insert PrimitiveType: long(9980) into MethodDeclaration(9982) at 0", "Insert SimpleName: getTime(9981) into MethodDeclaration(9982) at 1", "Insert TagElement(9985) into Javadoc(9986) at 0", "Insert SimpleName: InstallableItem(9990) into SimpleType: InstallableItem(9991) at 0", "Insert Modifier: private(9992) into FieldDeclaration(9998) at 0", "Insert Modifier: final(9993) into FieldDeclaration(9998) at 1", "Insert SimpleType: File(9995) into FieldDeclaration(9998) at 2", "Insert VariableDeclarationFragment(9997) into FieldDeclaration(9998) at 3", "Insert Modifier: private(9999) into FieldDeclaration(10005) at 0", "Insert Modifier: final(10000) into FieldDeclaration(10005) at 1", "Insert SimpleType: String(10002) into FieldDeclaration(10005) at 2", "Insert VariableDeclarationFragment(10004) into FieldDeclaration(10005) at 3", "Insert SimpleName: FileInstallableItem(10006) into MethodDeclaration(10028) at 0", "Insert SingleVariableDeclaration(10010) into MethodDeclaration(10028) at 1", "Insert SingleVariableDeclaration(10014) into MethodDeclaration(10028) at 2", "Insert Block(10027) into MethodDeclaration(10028) at 3", "Insert Modifier: public(10029) into MethodDeclaration(10036) at 0", "Insert SimpleType: String(10031) into MethodDeclaration(10036) at 1", "Insert SimpleName: getName(10032) into MethodDeclaration(10036) at 2", "Insert Block(10035) into MethodDeclaration(10036) at 3", "Insert Modifier: public(10037) into MethodDeclaration(10049) at 0", "Insert SimpleType: InputStream(10039) into MethodDeclaration(10049) at 1", "Insert SimpleName: getInputStream(10040) into MethodDeclaration(10049) at 2", "Insert SimpleType: FileNotFoundException(10042) into MethodDeclaration(10049) at 3", "Insert Block(10048) into MethodDeclaration(10049) at 4", "Insert Modifier: public(10050) into MethodDeclaration(10058) at 0", "Insert PrimitiveType: long(10051) into MethodDeclaration(10058) at 1", "Insert SimpleName: getTime(10052) into MethodDeclaration(10058) at 2", "Insert Block(10057) into MethodDeclaration(10058) at 3", "Insert TagElement(10061) into Javadoc(10062) at 0", "Insert SimpleName: InstallableItem(10066) into SimpleType: InstallableItem(10067) at 0", "Insert Modifier: private(10068) into FieldDeclaration(10074) at 0", "Insert Modifier: final(10069) into FieldDeclaration(10074) at 1", "Insert SimpleType: ZipFile(10071) into FieldDeclaration(10074) at 2", "Insert VariableDeclarationFragment(10073) into FieldDeclaration(10074) at 3", "Insert Modifier: private(10075) into FieldDeclaration(10080) at 0", "Insert SimpleType: ZipEntry(10077) into FieldDeclaration(10080) at 1", "Insert VariableDeclarationFragment(10079) into FieldDeclaration(10080) at 2", "Insert SimpleName: ZipEntryInstallableItem(10081) into MethodDeclaration(10093) at 0", "Insert SingleVariableDeclaration(10085) into MethodDeclaration(10093) at 1", "Insert Block(10092) into MethodDeclaration(10093) at 2", "Insert Modifier: public(10094) into MethodDeclaration(10108) at 0", "Insert PrimitiveType: void(10095) into MethodDeclaration(10108) at 1", "Insert SimpleName: setEntry(10096) into MethodDeclaration(10108) at 2", "Insert SingleVariableDeclaration(10100) into MethodDeclaration(10108) at 3", "Insert Block(10107) into MethodDeclaration(10108) at 4", "Insert Modifier: public(10109) into MethodDeclaration(10118) at 0", "Insert SimpleType: String(10111) into MethodDeclaration(10118) at 1", "Insert SimpleName: getName(10112) into MethodDeclaration(10118) at 2", "Insert Block(10117) into MethodDeclaration(10118) at 3", "Insert Modifier: public(10119) into MethodDeclaration(10131) at 0", "Insert SimpleType: InputStream(10121) into MethodDeclaration(10131) at 1", "Insert SimpleName: getInputStream(10122) into MethodDeclaration(10131) at 2", "Insert SimpleType: IOException(10124) into MethodDeclaration(10131) at 3", "Insert Block(10130) into MethodDeclaration(10131) at 4", "Insert Modifier: public(10132) into MethodDeclaration(10140) at 0", "Insert PrimitiveType: long(10133) into MethodDeclaration(10140) at 1", "Insert SimpleName: getTime(10134) into MethodDeclaration(10140) at 2", "Insert Block(10139) into MethodDeclaration(10140) at 3", "Insert TagElement(10143) into Javadoc(10144) at 0", "Insert SimpleName: Closeable(10147) into SimpleType: Closeable(10148) at 0", "Insert Modifier: static(10149) into FieldDeclaration(10157) at 0", "Insert SimpleType: StagedRenameWriter(10151) into FieldDeclaration(10157) at 1", "Insert VariableDeclarationFragment(10156) into FieldDeclaration(10157) at 2", "Insert Modifier: public(10158) into MethodDeclaration(10167) at 0", "Insert Modifier: static(10159) into MethodDeclaration(10167) at 1", "Insert Modifier: final(10160) into MethodDeclaration(10167) at 2", "Insert SimpleType: StagedRenameWriter(10162) into MethodDeclaration(10167) at 3", "Insert SimpleName: get(10163) into MethodDeclaration(10167) at 4", "Insert Block(10166) into MethodDeclaration(10167) at 5", "Insert SimpleType: java.io.PrintWriter(10169) into FieldDeclaration(10173) at 0", "Insert VariableDeclarationFragment(10172) into FieldDeclaration(10173) at 1", "Insert Modifier: public(10174) into MethodDeclaration(10206) at 0", "Insert PrimitiveType: void(10175) into MethodDeclaration(10206) at 1", "Insert SimpleName: open(10176) into MethodDeclaration(10206) at 2", "Insert SimpleType: IOException(10178) into MethodDeclaration(10206) at 3", "Insert Block(10205) into MethodDeclaration(10206) at 4", "Insert Modifier: public(10207) into MethodDeclaration(10220) at 0", "Insert PrimitiveType: void(10208) into MethodDeclaration(10220) at 1", "Insert SimpleName: close(10209) into MethodDeclaration(10220) at 2", "Insert Block(10219) into MethodDeclaration(10220) at 3", "Insert Modifier: public(10221) into MethodDeclaration(10239) at 0", "Insert PrimitiveType: void(10222) into MethodDeclaration(10239) at 1", "Insert SimpleName: println(10223) into MethodDeclaration(10239) at 2", "Insert SingleVariableDeclaration(10227) into MethodDeclaration(10239) at 3", "Insert SimpleType: IOException(10229) into MethodDeclaration(10239) at 4", "Insert Block(10238) into MethodDeclaration(10239) at 5", "Insert TagElement(10242) into Javadoc(10270) at 0", "Insert TagElement: @param(10245) into Javadoc(10270) at 1", "Insert TagElement: @param(10248) into Javadoc(10270) at 2", "Insert TagElement: @param(10251) into Javadoc(10270) at 3", "Insert TagElement: @param(10254) into Javadoc(10270) at 4", "Insert TagElement: @param(10256) into Javadoc(10270) at 5", "Insert TagElement: @param(10258) into Javadoc(10270) at 6", "Insert TagElement: @param(10261) into Javadoc(10270) at 7", "Insert TagElement: @param(10264) into Javadoc(10270) at 8", "Insert TagElement: @return(10266) into Javadoc(10270) at 9", "Insert TagElement: @throws(10269) into Javadoc(10270) at 10", "Insert SimpleName: String(10271) into SimpleType: String(10272) at 0", "Insert SimpleType: PluginWrapper.Package(10275) into SingleVariableDeclaration(10277) at 0", "Insert SimpleName: pkg(10276) into SingleVariableDeclaration(10277) at 1", "Insert SimpleType: File(10279) into SingleVariableDeclaration(10281) at 0", "Insert SimpleName: localExtract(10280) into SingleVariableDeclaration(10281) at 1", "Insert SimpleType: File(10283) into SingleVariableDeclaration(10285) at 0", "Insert SimpleName: destDir(10284) into SingleVariableDeclaration(10285) at 1", "Insert SimpleType: InstallableItem(10287) into SingleVariableDeclaration(10289) at 0", "Insert SimpleName: entry(10288) into SingleVariableDeclaration(10289) at 1", "Insert Modifier: final(10290) into SingleVariableDeclaration(10293) at 0", "Insert PrimitiveType: int(10291) into SingleVariableDeclaration(10293) at 1", "Insert SimpleName: priorStateIndex(10292) into SingleVariableDeclaration(10293) at 2", "Insert Modifier: final(10294) into SingleVariableDeclaration(10297) at 0", "Insert PrimitiveType: int(10295) into SingleVariableDeclaration(10297) at 1", "Insert SimpleName: myInstallIndex(10296) into SingleVariableDeclaration(10297) at 2", "Insert SimpleType: StagedRenameWriter(10299) into SingleVariableDeclaration(10301) at 0", "Insert SimpleName: stagedRenameWriter(10300) into SingleVariableDeclaration(10301) at 1", "Insert Modifier: final(10302) into SingleVariableDeclaration(10306) at 0", "Insert PrimitiveType: byte(10303) into SingleVariableDeclaration(10306) at 1", "Insert SimpleName: buf(10304) into SingleVariableDeclaration(10306) at 2", "Insert Dimension(10305) into SingleVariableDeclaration(10306) at 3", "Insert SimpleName: IOException(10307) into SimpleType: IOException(10308) at 0", "Insert ReturnStatement(10812) into Block(10813) at 1", "Move Block(9666) into TryStatement(9270) at 1", "Insert TextElement: Encapsulates an installable item that might come various sources, such as a ZipFile or regular File(9966) into TagElement(9967) at 0", "Insert SimpleName: String(9970) into SimpleType: String(9971) at 0", "Insert SimpleName: InputStream(9974) into SimpleType: InputStream(9975) at 0", "Insert SimpleName: IOException(9977) into SimpleType: IOException(9978) at 0", "Insert TextElement: Encapsulates java File as an installable item(9984) into TagElement(9985) at 0", "Insert SimpleName: File(9994) into SimpleType: File(9995) at 0", "Insert SimpleName: file(9996) into VariableDeclarationFragment(9997) at 0", "Insert SimpleName: String(10001) into SimpleType: String(10002) at 0", "Insert SimpleName: name(10003) into VariableDeclarationFragment(10004) at 0", "Insert SimpleType: File(10008) into SingleVariableDeclaration(10010) at 0", "Insert SimpleName: file(10009) into SingleVariableDeclaration(10010) at 1", "Insert SimpleType: String(10012) into SingleVariableDeclaration(10014) at 0", "Insert SimpleName: name(10013) into SingleVariableDeclaration(10014) at 1", "Insert ExpressionStatement(10020) into Block(10027) at 0", "Insert ExpressionStatement(10026) into Block(10027) at 1", "Insert SimpleName: String(10030) into SimpleType: String(10031) at 0", "Insert ReturnStatement(10034) into Block(10035) at 0", "Insert SimpleName: InputStream(10038) into SimpleType: InputStream(10039) at 0", "Insert SimpleName: FileNotFoundException(10041) into SimpleType: FileNotFoundException(10042) at 0", "Insert ReturnStatement(10047) into Block(10048) at 0", "Insert ReturnStatement(10056) into Block(10057) at 0", "Insert TextElement: Encapsulates a ZipEntry as an installable item(10060) into TagElement(10061) at 0", "Insert SimpleName: ZipFile(10070) into SimpleType: ZipFile(10071) at 0", "Insert SimpleName: file(10072) into VariableDeclarationFragment(10073) at 0", "Insert SimpleName: ZipEntry(10076) into SimpleType: ZipEntry(10077) at 0", "Insert SimpleName: entry(10078) into VariableDeclarationFragment(10079) at 0", "Insert SimpleType: ZipFile(10083) into SingleVariableDeclaration(10085) at 0", "Insert SimpleName: file(10084) into SingleVariableDeclaration(10085) at 1", "Insert ExpressionStatement(10091) into Block(10092) at 0", "Insert SimpleType: ZipEntry(10098) into SingleVariableDeclaration(10100) at 0", "Insert SimpleName: entry(10099) into SingleVariableDeclaration(10100) at 1", "Insert ExpressionStatement(10106) into Block(10107) at 0", "Insert SimpleName: String(10110) into SimpleType: String(10111) at 0", "Insert ReturnStatement(10116) into Block(10117) at 0", "Insert SimpleName: InputStream(10120) into SimpleType: InputStream(10121) at 0", "Insert SimpleName: IOException(10123) into SimpleType: IOException(10124) at 0", "Insert ReturnStatement(10129) into Block(10130) at 0", "Insert ReturnStatement(10138) into Block(10139) at 0", "Insert TextElement: Provides a singleton access to the Staged Renamer writer(10142) into TagElement(10143) at 0", "Insert SimpleName: StagedRenameWriter(10150) into SimpleType: StagedRenameWriter(10151) at 0", "Insert SimpleName: instance(10152) into VariableDeclarationFragment(10156) at 0", "Insert ClassInstanceCreation(10155) into VariableDeclarationFragment(10156) at 1", "Insert SimpleName: StagedRenameWriter(10161) into SimpleType: StagedRenameWriter(10162) at 0", "Insert ReturnStatement(10165) into Block(10166) at 0", "Insert QualifiedName: java.io.PrintWriter(10168) into SimpleType: java.io.PrintWriter(10169) at 0", "Insert SimpleName: stagedRenameWriter(10170) into VariableDeclarationFragment(10172) at 0", "Insert NullLiteral(10171) into VariableDeclarationFragment(10172) at 1", "Insert SimpleName: IOException(10177) into SimpleType: IOException(10178) at 0", "Insert IfStatement(10204) into Block(10205) at 0", "Insert ExpressionStatement(10214) into Block(10219) at 0", "Insert ExpressionStatement(10218) into Block(10219) at 1", "Insert SimpleType: String(10225) into SingleVariableDeclaration(10227) at 0", "Insert SimpleName: msg(10226) into SingleVariableDeclaration(10227) at 1", "Insert SimpleName: IOException(10228) into SimpleType: IOException(10229) at 0", "Insert ExpressionStatement(10232) into Block(10238) at 0", "Insert ExpressionStatement(10237) into Block(10238) at 1", "Insert TextElement: Installs an Installable Item to the localExtract file.(10241) into TagElement(10242) at 0", "Insert SimpleName: pkg(10243) into TagElement: @param(10245) at 0", "Insert TextElement:  Plugin Package(10244) into TagElement: @param(10245) at 1", "Insert SimpleName: localExtract(10246) into TagElement: @param(10248) at 0", "Insert TextElement:  Local File(10247) into TagElement: @param(10248) at 1", "Insert SimpleName: destDir(10249) into TagElement: @param(10251) at 0", "Insert TextElement:  Destination Directory(10250) into TagElement: @param(10251) at 1", "Insert SimpleName: entry(10252) into TagElement: @param(10254) at 0", "Insert TextElement:  Installable Item form which the get the Name and Input Stream(10253) into TagElement: @param(10254) at 1", "Insert SimpleName: priorStateIndex(10255) into TagElement: @param(10256) at 0", "Insert SimpleName: myInstallIndex(10257) into TagElement: @param(10258) at 0", "Insert SimpleName: stagedRenameWriter(10259) into TagElement: @param(10261) at 0", "Insert TextElement:  writer for writing staged renames(10260) into TagElement: @param(10261) at 1", "Insert SimpleName: buf(10262) into TagElement: @param(10264) at 0", "Insert TextElement:  copy data buffer(10263) into TagElement: @param(10264) at 1", "Insert TextElement:  \"OK\" on success, or and error message if it failed(10265) into TagElement: @return(10266) at 0", "Insert SimpleName: IOException(10267) into TagElement: @throws(10269) at 0", "Insert TextElement:  for any IO related errors(10268) into TagElement: @throws(10269) at 1", "Insert QualifiedName: PluginWrapper.Package(10274) into SimpleType: PluginWrapper.Package(10275) at 0", "Insert SimpleName: File(10278) into SimpleType: File(10279) at 0", "Insert SimpleName: File(10282) into SimpleType: File(10283) at 0", "Insert SimpleName: InstallableItem(10286) into SimpleType: InstallableItem(10287) at 0", "Insert SimpleName: StagedRenameWriter(10298) into SimpleType: StagedRenameWriter(10299) at 0", "Insert InfixExpression: ||(10314) into IfStatement(10810) at 0", "Move VariableDeclarationStatement(9036) into Block(10799) at 7", "Insert NullLiteral(10811) into ReturnStatement(10812) at 0", "Move ExpressionStatement(9679) into Block(9269) at 1", "Insert SimpleName: File(10007) into SimpleType: File(10008) at 0", "Insert SimpleName: String(10011) into SimpleType: String(10012) at 0", "Insert Assignment: =(10019) into ExpressionStatement(10020) at 0", "Insert Assignment: =(10025) into ExpressionStatement(10026) at 0", "Insert SimpleName: name(10033) into ReturnStatement(10034) at 0", "Insert ClassInstanceCreation(10046) into ReturnStatement(10047) at 0", "Insert MethodInvocation(10055) into ReturnStatement(10056) at 0", "Insert SimpleName: ZipFile(10082) into SimpleType: ZipFile(10083) at 0", "Insert Assignment: =(10090) into ExpressionStatement(10091) at 0", "Insert SimpleName: ZipEntry(10097) into SimpleType: ZipEntry(10098) at 0", "Insert Assignment: =(10105) into ExpressionStatement(10106) at 0", "Insert MethodInvocation(10115) into ReturnStatement(10116) at 0", "Insert MethodInvocation(10128) into ReturnStatement(10129) at 0", "Insert MethodInvocation(10137) into ReturnStatement(10138) at 0", "Insert SimpleType: StagedRenameWriter(10154) into ClassInstanceCreation(10155) at 0", "Insert SimpleName: instance(10164) into ReturnStatement(10165) at 0", "Move InfixExpression: !=(9661) into IfStatement(10204) at 0", "Move Block(9457) into IfStatement(10204) at 1", "Insert MethodInvocation(10213) into ExpressionStatement(10214) at 0", "Insert Assignment: =(10217) into ExpressionStatement(10218) at 0", "Insert SimpleName: String(10224) into SimpleType: String(10225) at 0", "Insert MethodInvocation(10231) into ExpressionStatement(10232) at 0", "Insert MethodInvocation(10236) into ExpressionStatement(10237) at 0", "Insert QualifiedName: pkg.overwrite(10309) into InfixExpression: ||(10314) at 0", "Move PrefixExpression: !(9016) into InfixExpression: ||(10314) at 1", "Insert VariableDeclarationStatement(10606) into Block(10799) at 9", "Move VariableDeclarationStatement(8780) into Block(9257) at 9", "Insert FieldAccess(10017) into Assignment: =(10019) at 0", "Insert SimpleName: file(10018) into Assignment: =(10019) at 1", "Insert FieldAccess(10023) into Assignment: =(10025) at 0", "Insert SimpleName: name(10024) into Assignment: =(10025) at 1", "Insert SimpleType: FileInputStream(10044) into ClassInstanceCreation(10046) at 0", "Insert SimpleName: file(10045) into ClassInstanceCreation(10046) at 1", "Insert SimpleName: file(10053) into MethodInvocation(10055) at 0", "Insert SimpleName: lastModified(10054) into MethodInvocation(10055) at 1", "Insert FieldAccess(10088) into Assignment: =(10090) at 0", "Insert SimpleName: file(10089) into Assignment: =(10090) at 1", "Insert FieldAccess(10103) into Assignment: =(10105) at 0", "Insert SimpleName: entry(10104) into Assignment: =(10105) at 1", "Insert SimpleName: entry(10113) into MethodInvocation(10115) at 0", "Insert SimpleName: getName(10114) into MethodInvocation(10115) at 1", "Insert SimpleName: file(10125) into MethodInvocation(10128) at 0", "Insert SimpleName: getInputStream(10126) into MethodInvocation(10128) at 1", "Insert SimpleName: entry(10127) into MethodInvocation(10128) at 2", "Insert SimpleName: entry(10135) into MethodInvocation(10137) at 0", "Insert SimpleName: getTime(10136) into MethodInvocation(10137) at 1", "Insert SimpleName: StagedRenameWriter(10153) into SimpleType: StagedRenameWriter(10154) at 0", "Insert SimpleName: IOUtils(10210) into MethodInvocation(10213) at 0", "Insert SimpleName: closeQuietly(10211) into MethodInvocation(10213) at 1", "Insert SimpleName: stagedRenameWriter(10212) into MethodInvocation(10213) at 2", "Insert SimpleName: stagedRenameWriter(10215) into Assignment: =(10217) at 0", "Insert NullLiteral(10216) into Assignment: =(10217) at 1", "Insert SimpleName: open(10230) into MethodInvocation(10231) at 0", "Insert SimpleName: stagedRenameWriter(10233) into MethodInvocation(10236) at 0", "Insert SimpleName: println(10234) into MethodInvocation(10236) at 1", "Insert SimpleName: msg(10235) into MethodInvocation(10236) at 2", "Insert SimpleType: FileOutputStream(10508) into VariableDeclarationStatement(10512) at 0", "Move VariableDeclarationFragment(8808) into VariableDeclarationStatement(10512) at 1", "Insert SimpleType: InputStream(10600) into VariableDeclarationStatement(10606) at 0", "Insert VariableDeclarationFragment(10605) into VariableDeclarationStatement(10606) at 1", "Insert IfStatement(9236) into Block(9257) at 5", "Update SimpleName: stagedRenameWriter(9662) to IOUtils", "Update SimpleName: close(9663) to closeQuietly", "Insert SimpleName: stagedRenameWriter(9262) into MethodInvocation(9263) at 2", "Insert ConditionalExpression(9836) into VariableDeclarationFragment(9837) at 1", "Insert ThisExpression(10015) into FieldAccess(10017) at 0", "Insert SimpleName: file(10016) into FieldAccess(10017) at 1", "Insert ThisExpression(10021) into FieldAccess(10023) at 0", "Insert SimpleName: name(10022) into FieldAccess(10023) at 1", "Insert SimpleName: FileInputStream(10043) into SimpleType: FileInputStream(10044) at 0", "Insert ThisExpression(10086) into FieldAccess(10088) at 0", "Insert SimpleName: file(10087) into FieldAccess(10088) at 1", "Insert ThisExpression(10101) into FieldAccess(10103) at 0", "Insert SimpleName: entry(10102) into FieldAccess(10103) at 1", "Insert SimpleName: FileOutputStream(10507) into SimpleType: FileOutputStream(10508) at 0", "Insert SimpleName: InputStream(10599) into SimpleType: InputStream(10600) at 0", "Insert SimpleName: inStream(10601) into VariableDeclarationFragment(10605) at 0", "Insert MethodInvocation(10604) into VariableDeclarationFragment(10605) at 1", "Insert InfixExpression: &&(8848) into IfStatement(9236) at 0", "Insert Block(8950) into IfStatement(9236) at 1", "Move Block(9632) into IfStatement(9236) at 2", "Insert ParenthesizedExpression(9831) into ConditionalExpression(9836) at 0", "Move MethodInvocation(10241) into ConditionalExpression(9836) at 1", "Insert NullLiteral(9835) into ConditionalExpression(9836) at 2", "Move SimpleName: entry(9307) into MethodInvocation(10604) at 0", "Insert SimpleName: getInputStream(10603) into MethodInvocation(10604) at 1", "Insert MethodInvocation(8841) into InfixExpression: &&(8848) at 0", "Insert MethodInvocation(8847) into InfixExpression: &&(8848) at 1", "Insert IfStatement(8859) into Block(8950) at 0", "Move VariableDeclarationStatement(8803) into Block(8950) at 1", "Insert TryStatement(8949) into Block(8950) at 2", "Move IfStatement(8791) into Block(9235) at 0", "Move VariableDeclarationStatement(8797) into Block(9235) at 1", "Insert InfixExpression: !=(9830) into ParenthesizedExpression(9831) at 0", "Move TryStatement(9488) into Block(10773) at 3", "Insert MethodInvocation(7909) into MethodInvocation(7910) at 2", "Insert StringLiteral: \"JAR\"(8834) into MethodInvocation(8841) at 0", "Insert SimpleName: equals(8835) into MethodInvocation(8841) at 1", "Insert FieldAccess(8840) into MethodInvocation(8841) at 2", "Insert MethodInvocation(8844) into MethodInvocation(8847) at 0", "Insert SimpleName: endsWith(8845) into MethodInvocation(8847) at 1", "Insert StringLiteral: \"jar\"(8846) into MethodInvocation(8847) at 2", "Insert QualifiedName: Sage.DBG(8849) into IfStatement(8859) at 0", "Insert ExpressionStatement(8858) into IfStatement(8859) at 1", "Update SimpleType: java.io.InputStream(8799) to String", "Insert Block(8914) into TryStatement(8949) at 0", "Insert CatchClause(8948) into TryStatement(8949) at 1", "Insert Block(9198) into TryStatement(9234) at 0", "Move CatchClause(9582) into TryStatement(9234) at 1", "Insert Block(9233) into TryStatement(9234) at 2", "Insert SimpleName: newWrap(9828) into InfixExpression: !=(9830) at 0", "Insert NullLiteral(9829) into InfixExpression: !=(9830) at 1", "Insert Block(10735) into TryStatement(10766) at 0", "Move ArrayAccess(7865) into MethodInvocation(7909) at 0", "Insert SimpleName: getMD5(7908) into MethodInvocation(7909) at 1", "Insert ArrayAccess(8838) into FieldAccess(8840) at 0", "Insert SimpleName: type(8839) into FieldAccess(8840) at 1", "Insert SimpleName: currFile(8842) into MethodInvocation(8844) at 0", "Insert SimpleName: getName(8843) into MethodInvocation(8844) at 1", "Insert MethodInvocation(8857) into ExpressionStatement(8858) at 0", "Insert SimpleName: String(8860) into SimpleType: String(8861) at 0", "Update SimpleName: inStream(8800) to result", "Move VariableDeclarationStatement(8809) into Block(8914) at 0", "Insert ExpressionStatement(8907) into Block(8914) at 1", "Insert IfStatement(8913) into Block(8914) at 2", "Move SingleVariableDeclaration(9594) into CatchClause(8948) at 0", "Insert Block(8947) into CatchClause(8948) at 1", "Move ExpressionStatement(8827) into Block(9198) at 0", "Insert VariableDeclarationStatement(8983) into Block(9198) at 1", "Move VariableDeclarationStatement(8834) into Block(9198) at 2", "Move IfStatement(8844) into Block(9198) at 3", "Move VariableDeclarationStatement(8852) into Block(9198) at 4", "Insert WhileStatement(9197) into Block(9198) at 5", "Insert ExpressionStatement(9232) into Block(9233) at 0", "Move ExpressionStatement(9497) into Block(10735) at 0", "Move ExpressionStatement(9504) into Block(10735) at 1", "Insert MethodInvocation(13558) into InfixExpression: !=(13560) at 0", "Insert MethodInvocation(8185) into MethodInvocation(8188) at 0", "Insert SimpleName: packages(8836) into ArrayAccess(8838) at 0", "Insert SimpleName: i(8837) into ArrayAccess(8838) at 1", "Insert QualifiedName: System.out(8850) into MethodInvocation(8857) at 0", "Insert SimpleName: println(8851) into MethodInvocation(8857) at 1", "Insert InfixExpression: +(8856) into MethodInvocation(8857) at 2", "Update SimpleType: java.io.FileOutputStream(8805) to java.io.File", "Insert VariableDeclarationFragment(8883) into VariableDeclarationStatement(8884) at 1", "Insert Assignment: =(8906) into ExpressionStatement(8907) at 0", "Move InfixExpression: !=(9585) into IfStatement(8913) at 0", "Insert ReturnStatement(8912) into IfStatement(8913) at 1", "Update SimpleType: Exception(9592) to IOException", "Move IfStatement(9616) into Block(8947) at 0", "Insert ExpressionStatement(8938) into Block(8947) at 1", "Insert ReturnStatement(8946) into Block(8947) at 2", "Insert SimpleType: ZipEntryInstallableItem(8976) into VariableDeclarationStatement(8983) at 0", "Insert VariableDeclarationFragment(8982) into VariableDeclarationStatement(8983) at 1", "Move MethodInvocation(8855) into WhileStatement(9197) at 0", "Insert Block(9196) into WhileStatement(9197) at 1", "Insert MethodInvocation(9231) into ExpressionStatement(9232) at 0", "Insert SimpleName: currPackage(13556) into MethodInvocation(13558) at 0", "Insert SimpleName: getRawMD5(13557) into MethodInvocation(13558) at 1", "Move ArrayAccess(8141) into MethodInvocation(8185) at 0", "Insert SimpleName: getMD5(8184) into MethodInvocation(8185) at 1", "Insert StringLiteral: \"Beginning copying jar from cache file \"(8852) into InfixExpression: +(8856) at 0", "Insert SimpleName: currFile(8853) into InfixExpression: +(8856) at 1", "Insert StringLiteral: \" to root dest dir of: \"(8854) into InfixExpression: +(8856) at 2", "Insert SimpleName: destDir(8855) into InfixExpression: +(8856) at 3", "Update QualifiedName: java.io.FileOutputStream(8804) to java.io.File", "Insert SimpleName: destFile(8868) into VariableDeclarationFragment(8883) at 0", "Insert ClassInstanceCreation(8882) into VariableDeclarationFragment(8883) at 1", "Insert SimpleName: result(8885) into Assignment: =(8906) at 0", "Insert MethodInvocation(8905) into Assignment: =(8906) at 1", "Update SimpleName: outStream(9583) to result", "Insert SimpleName: result(8911) into ReturnStatement(8912) at 0", "Update SimpleName: Exception(9591) to IOException", "Update InfixExpression: !=(9602) to ||", "Insert Assignment: =(8937) into ExpressionStatement(8938) at 0", "Update InfixExpression: ||(9017) to +", "Move InfixExpression: ||(9017) into ReturnStatement(8946) at 0", "Insert SimpleName: ZipEntryInstallableItem(8975) into SimpleType: ZipEntryInstallableItem(8976) at 0", "Insert SimpleName: zipEntryFacade(8977) into VariableDeclarationFragment(8982) at 0", "Insert ClassInstanceCreation(8981) into VariableDeclarationFragment(8982) at 1", "Move VariableDeclarationStatement(8866) into Block(9196) at 0", "Move IfStatement(8877) into Block(9196) at 1", "Move VariableDeclarationStatement(8889) into Block(9196) at 2", "Move ExpressionStatement(8897) into Block(9196) at 3", "Insert IfStatement(9195) into Block(9196) at 4", "Insert SimpleName: IOUtils(9228) into MethodInvocation(9231) at 0", "Insert SimpleName: closeQuietly(9229) into MethodInvocation(9231) at 1", "Insert SimpleName: zippy(9230) into MethodInvocation(9231) at 2", "Insert MethodInvocation(12869) into ExpressionStatement(12870) at 0", "Insert SimpleType: java.io.File(8870) into ClassInstanceCreation(8882) at 0", "Insert SimpleName: destDir(8871) into ClassInstanceCreation(8882) at 1", "Insert MethodInvocation(8881) into ClassInstanceCreation(8882) at 2", "Insert SimpleName: installFile(8886) into MethodInvocation(8905) at 0", "Insert ArrayAccess(8889) into MethodInvocation(8905) at 1", "Insert SimpleName: destFile(8890) into MethodInvocation(8905) at 2", "Insert SimpleName: destDir(8891) into MethodInvocation(8905) at 3", "Insert ClassInstanceCreation(8898) into MethodInvocation(8905) at 4", "Insert SimpleName: priorStateIndex(8899) into MethodInvocation(8905) at 5", "Insert SimpleName: myInstallIndex(8900) into MethodInvocation(8905) at 6", "Insert MethodInvocation(8903) into MethodInvocation(8905) at 7", "Insert SimpleName: buf(8904) into MethodInvocation(8905) at 8", "Insert QualifiedName: Sage.DBG(8919) into InfixExpression: ||(8921) at 0", "Insert QualifiedName: Sage.TESTING(8920) into InfixExpression: ||(8921) at 1", "Move ExpressionStatement(9606) into Block(8933) at 0", "Insert ExpressionStatement(8932) into Block(8933) at 1", "Insert SimpleName: progressMsg(8935) into Assignment: =(8937) at 0", "Insert StringLiteral: \"\"(8936) into Assignment: =(8937) at 1", "Insert StringLiteral: \"FAILED - Jar Installation of \"(8939) into InfixExpression: +(8945) at 0", "Insert SimpleType: ZipEntryInstallableItem(8979) into ClassInstanceCreation(8981) at 0", "Insert SimpleName: zippy(8980) into ClassInstanceCreation(8981) at 1", "Move MethodInvocation(8900) into IfStatement(9195) at 0", "Move Block(9007) into IfStatement(9195) at 1", "Insert Block(9194) into IfStatement(9195) at 2", "Insert SimpleName: currPackage(12866) into MethodInvocation(12869) at 0", "Insert SimpleName: setRawMD5(12867) into MethodInvocation(12869) at 1", "Insert SimpleName: data(12868) into MethodInvocation(12869) at 2", "Insert QualifiedName: java.io.File(8869) into SimpleType: java.io.File(8870) at 0", "Insert ClassInstanceCreation(8879) into MethodInvocation(8881) at 0", "Insert SimpleName: getName(8880) into MethodInvocation(8881) at 1", "Insert SimpleName: packages(8887) into ArrayAccess(8889) at 0", "Insert SimpleName: i(8888) into ArrayAccess(8889) at 1", "Insert SimpleType: FileInstallableItem(8893) into ClassInstanceCreation(8898) at 0", "Insert SimpleName: currFile(8894) into ClassInstanceCreation(8898) at 1", "Insert MethodInvocation(8897) into ClassInstanceCreation(8898) at 2", "Insert SimpleName: StagedRenameWriter(8901) into MethodInvocation(8903) at 0", "Insert SimpleName: get(8902) into MethodInvocation(8903) at 1", "Insert MethodInvocation(8931) into ExpressionStatement(8932) at 0", "Update SimpleName: overwrite(9011) to url", "Insert SimpleName: ZipEntryInstallableItem(8978) into SimpleType: ZipEntryInstallableItem(8979) at 0", "Move ExpressionStatement(9623) into Block(9194) at 0", "Insert VariableDeclarationStatement(9187) into Block(9194) at 1", "Insert IfStatement(9193) into Block(9194) at 2", "Insert MethodInvocation(13476) into ExpressionStatement(13477) at 0", "Insert SimpleType: File(8873) into ClassInstanceCreation(8879) at 0", "Insert FieldAccess(8878) into ClassInstanceCreation(8879) at 1", "Insert SimpleName: FileInstallableItem(8892) into SimpleType: FileInstallableItem(8893) at 0", "Insert SimpleName: destFile(8895) into MethodInvocation(8897) at 0", "Insert SimpleName: getName(8896) into MethodInvocation(8897) at 1", "Insert QualifiedName: System.out(8922) into MethodInvocation(8927) at 0", "Update SimpleName: inStream(9603) to println", "Insert InfixExpression: +(8926) into MethodInvocation(8927) at 2", "Insert SimpleName: e(8929) into MethodInvocation(8931) at 0", "Insert SimpleName: printStackTrace(8930) into MethodInvocation(8931) at 1", "Move SimpleType: String(9030) into VariableDeclarationStatement(9187) at 0", "Insert VariableDeclarationFragment(9186) into VariableDeclarationStatement(9187) at 1", "Insert InfixExpression: !=(9190) into IfStatement(9193) at 0", "Insert ReturnStatement(9192) into IfStatement(9193) at 1", "Insert SimpleName: currPackage(13470) into MethodInvocation(13476) at 0", "Insert SimpleName: setRawMD5(13471) into MethodInvocation(13476) at 1", "Move MethodInvocation(13029) into MethodInvocation(13476) at 2", "Insert SimpleName: File(8872) into SimpleType: File(8873) at 0", "Insert ArrayAccess(8876) into FieldAccess(8878) at 0", "Insert SimpleName: url(8877) into FieldAccess(8878) at 1", "Insert StringLiteral: \"ERROR installing jar file \"(8924) into InfixExpression: +(8926) at 0", "Insert SimpleName: currFile(8925) into InfixExpression: +(8926) at 1", "Update SimpleName: zippy(9620) to zipEntryFacade", "Update SimpleName: close(9621) to setEntry", "Insert SimpleName: entry(9166) into MethodInvocation(9167) at 2", "Insert SimpleName: result(9171) into VariableDeclarationFragment(9186) at 0", "Insert MethodInvocation(9185) into VariableDeclarationFragment(9186) at 1", "Insert SimpleName: result(9188) into InfixExpression: !=(9190) at 0", "Insert NullLiteral(9189) into InfixExpression: !=(9190) at 1", "Insert SimpleName: result(9191) into ReturnStatement(9192) at 0", "Insert SimpleName: packages(8874) into ArrayAccess(8876) at 0", "Insert SimpleName: i(8875) into ArrayAccess(8876) at 1", "Insert SimpleName: installFile(9172) into MethodInvocation(9185) at 0", "Insert ArrayAccess(9175) into MethodInvocation(9185) at 1", "Insert SimpleName: localExtract(9176) into MethodInvocation(9185) at 2", "Insert SimpleName: destDir(9177) into MethodInvocation(9185) at 3", "Insert SimpleName: zipEntryFacade(9178) into MethodInvocation(9185) at 4", "Insert SimpleName: priorStateIndex(9179) into MethodInvocation(9185) at 5", "Insert SimpleName: myInstallIndex(9180) into MethodInvocation(9185) at 6", "Insert MethodInvocation(9183) into MethodInvocation(9185) at 7", "Insert SimpleName: buf(9184) into MethodInvocation(9185) at 8", "Insert MethodInvocation(13510) into InfixExpression: +(13524) at 3", "Insert SimpleName: packages(9173) into ArrayAccess(9175) at 0", "Insert SimpleName: i(9174) into ArrayAccess(9175) at 1", "Insert SimpleName: StagedRenameWriter(9181) into MethodInvocation(9183) at 0", "Insert SimpleName: get(9182) into MethodInvocation(9183) at 1", "Insert SimpleName: currPackage(13508) into MethodInvocation(13510) at 0", "Insert SimpleName: getRawMD5(13509) into MethodInvocation(13510) at 1", "Delete SimpleName: sage(2)", "Delete SimpleName: md5(7866)", "Delete FieldAccess(7867)", "Delete SimpleName: md5(8142)", "Delete FieldAccess(8143)", "Delete QualifiedName: java.io.InputStream(8798)", "Delete SimpleName: inStream(9600)", "Delete NullLiteral(9601)", "Delete SimpleName: close(9604)", "Delete Block(9607)", "Delete SimpleName: Exception(9608)", "Delete SimpleType: Exception(9609)", "Delete SimpleName: e(9610)", "Delete SingleVariableDeclaration(9611)", "Delete Block(9612)", "Delete CatchClause(9613)", "Delete TryStatement(9614)", "Delete Block(9624)", "Delete SimpleName: Exception(9625)", "Delete SimpleType: Exception(9626)", "Delete SimpleName: e(9627)", "Delete SingleVariableDeclaration(9628)", "Delete Block(9629)", "Delete CatchClause(9630)", "Delete IfStatement(9550)", "Delete Block(9551)", "Delete WhileStatement(9552)", "Delete Block(9553)", "Delete SimpleName: outStream(9586)", "Delete SimpleName: close(9587)", "Delete MethodInvocation(9588)", "Delete ExpressionStatement(9589)", "Delete Block(9590)", "Delete Block(9595)", "Delete CatchClause(9596)", "Delete TryStatement(9597)", "Delete Block(9598)", "Delete IfStatement(9599)", "Delete SimpleName: zippy(9617)", "Delete NullLiteral(9618)", "Delete InfixExpression: !=(9619)", "Delete IfStatement(9633)", "Delete Block(9634)", "Delete TryStatement(9635)", "Delete SimpleName: Exception(9667)", "Delete SimpleType: Exception(9668)", "Delete SimpleName: e(9669)", "Delete SingleVariableDeclaration(9670)", "Delete Block(9671)", "Delete CatchClause(9672)", "Delete TryStatement(9673)", "Delete Block(9674)", "Delete IfStatement(9675)", "Delete Block(9680)", "Delete SimpleName: lcName(9031)", "Delete SimpleName: localExtract(9032)", "Delete SimpleName: getName(9033)", "Delete MethodInvocation(9034)", "Delete VariableDeclarationFragment(9035)", "Delete SimpleName: inStream(9304)", "Delete SimpleName: zippy(9305)", "Delete SimpleName: getInputStream(9306)", "Delete MethodInvocation(9308)", "Delete Assignment: =(9309)", "Delete ExpressionStatement(9310)", "Delete SimpleName: outStream(9343)", "Delete NullLiteral(9344)", "Delete Assignment: =(9345)", "Delete ExpressionStatement(9346)", "Delete SimpleName: inStream(9351)", "Delete NullLiteral(9352)", "Delete Assignment: =(9353)", "Delete ExpressionStatement(9354)", "Delete SimpleName: stagedRenameWriter(9433)", "Delete NullLiteral(9434)", "Delete InfixExpression: ==(9435)", "Delete Block(9489)", "Delete IfStatement(9490)", "Delete QualifiedName: currPackage.md5(12422)", "Delete SimpleName: data(12423)", "Delete Assignment: =(12424)", "Delete QualifiedName: currPackage.md5(13025)", "Delete Assignment: =(13030)", "Delete QualifiedName: currPackage.md5(13062)", "Delete QualifiedName: currPackage.md5(13108)"]}}, {"PluginWrapper_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: sage.Pooler to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: sage.Sage to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: sage.SageTVPlugin to ImportDeclaration at 0"]}, {"root": "INS QualifiedName: sage.IOUtils to ImportDeclaration at 0", "operations": ["INS QualifiedName: sage.IOUtils to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: computedMD5 to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: rawMD5 to MethodInvocation at 0", "INS TextElement: If the rawMD5 is null, then we use the URL field and we append .md5 which is standard Maven practice. to TagElement at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: startsWith to MethodInvocation at 1", "INS ReturnStatement to IfStatement at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: computedMD5 to InfixExpression: == at 0", "INS SimpleName: rawMD5 to MethodInvocation at 0", "INS SimpleName: startsWith to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 2", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: || at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: computedMD5 to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: == to InfixExpression: || at 0", "INS Javadoc to MethodDeclaration at 0", "INS IfStatement to IfStatement at 2", "INS IfStatement to Block at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS TextElement:  md5 for the package to TagElement: @return at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: rawMD5 to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 4", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: getUrlAsString to MethodInvocation at 1", "INS TextElement: because it's valid, or by dynamically fetching the md5 from a remote URL. to TagElement at 3", "INS MethodInvocation to InfixExpression: == at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: IOUtils to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"Failed to get MD5 for Package: \" to InfixExpression: + at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ExpressionStatement to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: trim to MethodInvocation at 1", "INS SimpleName: computedMD5 to Assignment: = at 0", "INS StringLiteral: \"; MD5: \" to InfixExpression: + at 2", "INS TextElement: Calling this method will result in getting the associated MD5 for the package, either by using the rawMD5 to TagElement at 2", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: IOUtils to MethodInvocation at 0", "INS SimpleName: rawMD5 to Assignment: = at 1", "INS TextElement: The rawMD5 field in the package can be empty, or, it can be a URL from which to download the MD5. to TagElement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: url to InfixExpression: + at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: rawMD5 to InfixExpression: != at 0", "INS SimpleName: rawMD5 to InfixExpression: == at 0", "INS SimpleName: computedMD5 to Assignment: = at 0", "INS SimpleName: computedMD5 to ReturnStatement at 0", "INS IfStatement to Block at 3", "INS SimpleName: computedMD5 to MethodInvocation at 0", "INS SimpleName: computedMD5 to Assignment: = at 0", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: computedMD5 to InfixExpression: != at 0", "INS StringLiteral: \"file:\" to MethodInvocation at 2", "INS SimpleName: computedMD5 to ReturnStatement at 0", "INS SimpleName: url to InfixExpression: + at 1", "INS SimpleName: trim to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS QualifiedName: System.out to MethodInvocation at 0", "INS SimpleName: computedMD5 to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: getUrlAsString to MethodInvocation at 1", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: rawMD5 to InfixExpression: + at 3", "INS StringLiteral: \"http\" to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: Sage.DBG to InfixExpression: && at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getMD5 to MethodDeclaration at 3", "INS SimpleName: rawMD5 to MethodInvocation at 2", "INS StringLiteral: \".md5\" to InfixExpression: + at 1", "INS SimpleName: computedMD5 to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: setRawMD5 to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: computedMD5 to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: rawMD5 to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: Sets the to TagElement at 0", "INS TagElement: @param to Javadoc at 1", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: md5 to Assignment: = at 1", "INS NullLiteral to Assignment: = at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: md5 to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: md5 to TagElement: @param at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: getRawMD5 to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: rawMD5 to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleType: String to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 1"]}, {"root": "INS SimpleType: String to MethodDeclaration at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to MethodDeclaration at 1"]}, {"root": "UPDATE from md5 to rawMD5", "operations": ["UPD SimpleName: md5 from md5 to rawMD5", "UPD SimpleName: md5 from md5 to rawMD5", "UPD SimpleName: md5 from md5 to rawMD5"]}, {"root": "UPDATE from pack.md5 to pack.rawMD5", "operations": ["UPD QualifiedName: pack.md5 from pack.md5 to pack.rawMD5", "UPD QualifiedName: pack.md5 from pack.md5 to pack.rawMD5"]}, {"root": "DEL SimpleName: sage", "operations": ["DEL SimpleName: sage"]}]}}, {"PluginWrapper_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(2453) at 1", "Insert ImportDeclaration(5) into CompilationUnit(2453) at 2", "Insert ImportDeclaration(7) into CompilationUnit(2453) at 3", "Insert ImportDeclaration(9) into CompilationUnit(2453) at 4", "Insert QualifiedName: sage.IOUtils(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: sage.Pooler(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: sage.Sage(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: sage.SageTVPlugin(8) into ImportDeclaration(9) at 0", "Insert FieldDeclaration(2288) into TypeDeclaration: class(2451) at 8", "Insert MethodDeclaration(2399) into TypeDeclaration: class(2451) at 10", "Insert MethodDeclaration(2425) into TypeDeclaration: class(2451) at 11", "Insert MethodDeclaration(2433) into TypeDeclaration: class(2451) at 12", "Update Modifier: public(2271) to private", "Insert Modifier: private(2283) into FieldDeclaration(2288) at 0", "Move SimpleType: String(2285) into FieldDeclaration(2288) at 1", "Insert VariableDeclarationFragment(2287) into FieldDeclaration(2288) at 2", "Insert Javadoc(2302) into MethodDeclaration(2399) at 0", "Insert Modifier: public(2303) into MethodDeclaration(2399) at 1", "Insert SimpleType: String(2305) into MethodDeclaration(2399) at 2", "Insert SimpleName: getMD5(2306) into MethodDeclaration(2399) at 3", "Insert Block(2398) into MethodDeclaration(2399) at 4", "Insert Javadoc(2404) into MethodDeclaration(2425) at 0", "Insert Modifier: public(2405) into MethodDeclaration(2425) at 1", "Insert PrimitiveType: void(2406) into MethodDeclaration(2425) at 2", "Insert SimpleName: setRawMD5(2407) into MethodDeclaration(2425) at 3", "Insert SingleVariableDeclaration(2411) into MethodDeclaration(2425) at 4", "Insert Block(2424) into MethodDeclaration(2425) at 5", "Insert Modifier: public(2426) into MethodDeclaration(2433) at 0", "Insert SimpleType: String(2428) into MethodDeclaration(2433) at 1", "Insert SimpleName: getRawMD5(2429) into MethodDeclaration(2433) at 2", "Insert Block(2432) into MethodDeclaration(2433) at 3", "Insert SimpleType: String(2436) into MethodDeclaration(2450) at 1", "Update SimpleName: md5(2274) to rawMD5", "Insert SimpleName: computedMD5(2286) into VariableDeclarationFragment(2287) at 0", "Insert TagElement(2299) into Javadoc(2302) at 0", "Insert TagElement: @return(2301) into Javadoc(2302) at 1", "Insert SimpleName: String(2304) into SimpleType: String(2305) at 0", "Insert IfStatement(2312) into Block(2398) at 0", "Insert IfStatement(2362) into Block(2398) at 1", "Insert IfStatement(2372) into Block(2398) at 2", "Insert IfStatement(2395) into Block(2398) at 3", "Insert ReturnStatement(2397) into Block(2398) at 4", "Insert TagElement(2401) into Javadoc(2404) at 0", "Insert TagElement: @param(2403) into Javadoc(2404) at 1", "Insert SimpleType: String(2409) into SingleVariableDeclaration(2411) at 0", "Insert SimpleName: md5(2410) into SingleVariableDeclaration(2411) at 1", "Insert ExpressionStatement(2417) into Block(2424) at 0", "Insert ExpressionStatement(2423) into Block(2424) at 1", "Insert SimpleName: String(2427) into SimpleType: String(2428) at 0", "Insert ReturnStatement(2431) into Block(2432) at 0", "Insert SimpleName: String(2435) into SimpleType: String(2436) at 0", "Insert TextElement: The rawMD5 field in the package can be empty, or, it can be a URL from which to download the MD5.(2295) into TagElement(2299) at 0", "Insert TextElement: If the rawMD5 is null, then we use the URL field and we append .md5 which is standard Maven practice.(2296) into TagElement(2299) at 1", "Insert TextElement: Calling this method will result in getting the associated MD5 for the package, either by using the rawMD5(2297) into TagElement(2299) at 2", "Insert TextElement: because it's valid, or by dynamically fetching the md5 from a remote URL.(2298) into TagElement(2299) at 3", "Insert TextElement:  md5 for the package(2300) into TagElement: @return(2301) at 0", "Insert InfixExpression: !=(2309) into IfStatement(2312) at 0", "Insert ReturnStatement(2311) into IfStatement(2312) at 1", "Insert InfixExpression: &&(2326) into IfStatement(2362) at 0", "Insert Block(2334) into IfStatement(2362) at 1", "Insert IfStatement(2361) into IfStatement(2362) at 2", "Insert InfixExpression: !=(2365) into IfStatement(2372) at 0", "Insert ExpressionStatement(2371) into IfStatement(2372) at 1", "Insert InfixExpression: &&(2384) into IfStatement(2395) at 0", "Insert Block(2394) into IfStatement(2395) at 1", "Insert SimpleName: computedMD5(2396) into ReturnStatement(2397) at 0", "Insert TextElement: Sets the(2400) into TagElement(2401) at 0", "Insert SimpleName: md5(2402) into TagElement: @param(2403) at 0", "Insert SimpleName: String(2408) into SimpleType: String(2409) at 0", "Insert Assignment: =(2416) into ExpressionStatement(2417) at 0", "Insert Assignment: =(2422) into ExpressionStatement(2423) at 0", "Insert SimpleName: rawMD5(2430) into ReturnStatement(2431) at 0", "Insert SimpleName: computedMD5(2307) into InfixExpression: !=(2309) at 0", "Insert NullLiteral(2308) into InfixExpression: !=(2309) at 1", "Insert SimpleName: computedMD5(2310) into ReturnStatement(2311) at 0", "Insert InfixExpression: !=(2315) into InfixExpression: &&(2326) at 0", "Insert ParenthesizedExpression(2325) into InfixExpression: &&(2326) at 1", "Insert ExpressionStatement(2333) into Block(2334) at 0", "Insert InfixExpression: ||(2345) into IfStatement(2361) at 0", "Insert Block(2355) into IfStatement(2361) at 1", "Insert Block(2360) into IfStatement(2361) at 2", "Insert SimpleName: computedMD5(2363) into InfixExpression: !=(2365) at 0", "Insert NullLiteral(2364) into InfixExpression: !=(2365) at 1", "Insert Assignment: =(2370) into ExpressionStatement(2371) at 0", "Insert QualifiedName: Sage.DBG(2373) into InfixExpression: &&(2384) at 0", "Insert ParenthesizedExpression(2383) into InfixExpression: &&(2384) at 1", "Insert ExpressionStatement(2393) into Block(2394) at 0", "Insert FieldAccess(2414) into Assignment: =(2416) at 0", "Insert SimpleName: md5(2415) into Assignment: =(2416) at 1", "Insert FieldAccess(2420) into Assignment: =(2422) at 0", "Insert NullLiteral(2421) into Assignment: =(2422) at 1", "Update SimpleName: md5(2292) to rawMD5", "Update SimpleName: md5(2242) to rawMD5", "Insert SimpleName: rawMD5(2313) into InfixExpression: !=(2315) at 0", "Insert NullLiteral(2314) into InfixExpression: !=(2315) at 1", "Insert InfixExpression: ||(2324) into ParenthesizedExpression(2325) at 0", "Insert Assignment: =(2332) into ExpressionStatement(2333) at 0", "Insert InfixExpression: ==(2337) into InfixExpression: ||(2345) at 0", "Insert InfixExpression: ==(2344) into InfixExpression: ||(2345) at 1", "Insert ExpressionStatement(2354) into Block(2355) at 0", "Insert ExpressionStatement(2359) into Block(2360) at 0", "Insert SimpleName: computedMD5(2366) into Assignment: =(2370) at 0", "Insert MethodInvocation(2369) into Assignment: =(2370) at 1", "Insert InfixExpression: ||(2382) into ParenthesizedExpression(2383) at 0", "Insert MethodInvocation(2392) into ExpressionStatement(2393) at 0", "Insert ThisExpression(2412) into FieldAccess(2414) at 0", "Insert SimpleName: rawMD5(2413) into FieldAccess(2414) at 1", "Insert ThisExpression(2418) into FieldAccess(2420) at 0", "Insert SimpleName: computedMD5(2419) into FieldAccess(2420) at 1", "Update QualifiedName: pack.md5(1465) to pack.rawMD5", "Insert MethodInvocation(2319) into InfixExpression: ||(2324) at 0", "Insert MethodInvocation(2323) into InfixExpression: ||(2324) at 1", "Insert SimpleName: computedMD5(2327) into Assignment: =(2332) at 0", "Insert MethodInvocation(2331) into Assignment: =(2332) at 1", "Insert SimpleName: rawMD5(2335) into InfixExpression: ==(2337) at 0", "Insert NullLiteral(2336) into InfixExpression: ==(2337) at 1", "Insert MethodInvocation(2342) into InfixExpression: ==(2344) at 0", "Insert NumberLiteral: 0(2343) into InfixExpression: ==(2344) at 1", "Insert Assignment: =(2353) into ExpressionStatement(2354) at 0", "Insert Assignment: =(2358) into ExpressionStatement(2359) at 0", "Insert SimpleName: computedMD5(2367) into MethodInvocation(2369) at 0", "Insert SimpleName: trim(2368) into MethodInvocation(2369) at 1", "Insert InfixExpression: ==(2376) into InfixExpression: ||(2382) at 0", "Insert InfixExpression: ==(2381) into InfixExpression: ||(2382) at 1", "Insert QualifiedName: System.out(2385) into MethodInvocation(2392) at 0", "Insert SimpleName: println(2386) into MethodInvocation(2392) at 1", "Insert InfixExpression: +(2391) into MethodInvocation(2392) at 2", "Update QualifiedName: pack.md5(1461) to pack.rawMD5", "Insert SimpleName: rawMD5(2316) into MethodInvocation(2319) at 0", "Insert SimpleName: startsWith(2317) into MethodInvocation(2319) at 1", "Insert StringLiteral: \"http\"(2318) into MethodInvocation(2319) at 2", "Insert SimpleName: rawMD5(2320) into MethodInvocation(2323) at 0", "Insert SimpleName: startsWith(2321) into MethodInvocation(2323) at 1", "Insert StringLiteral: \"file:\"(2322) into MethodInvocation(2323) at 2", "Insert SimpleName: IOUtils(2328) into MethodInvocation(2331) at 0", "Insert SimpleName: getUrlAsString(2329) into MethodInvocation(2331) at 1", "Insert SimpleName: rawMD5(2330) into MethodInvocation(2331) at 2", "Insert MethodInvocation(2340) into MethodInvocation(2342) at 0", "Insert SimpleName: length(2341) into MethodInvocation(2342) at 1", "Insert SimpleName: computedMD5(2346) into Assignment: =(2353) at 0", "Insert MethodInvocation(2352) into Assignment: =(2353) at 1", "Insert SimpleName: computedMD5(2356) into Assignment: =(2358) at 0", "Insert SimpleName: rawMD5(2357) into Assignment: =(2358) at 1", "Insert SimpleName: computedMD5(2374) into InfixExpression: ==(2376) at 0", "Insert NullLiteral(2375) into InfixExpression: ==(2376) at 1", "Insert MethodInvocation(2379) into InfixExpression: ==(2381) at 0", "Insert NumberLiteral: 0(2380) into InfixExpression: ==(2381) at 1", "Insert StringLiteral: \"Failed to get MD5 for Package: \"(2387) into InfixExpression: +(2391) at 0", "Insert SimpleName: url(2388) into InfixExpression: +(2391) at 1", "Insert StringLiteral: \"; MD5: \"(2389) into InfixExpression: +(2391) at 2", "Insert SimpleName: rawMD5(2390) into InfixExpression: +(2391) at 3", "Insert SimpleName: rawMD5(2338) into MethodInvocation(2340) at 0", "Insert SimpleName: trim(2339) into MethodInvocation(2340) at 1", "Insert SimpleName: IOUtils(2347) into MethodInvocation(2352) at 0", "Insert SimpleName: getUrlAsString(2348) into MethodInvocation(2352) at 1", "Insert InfixExpression: +(2351) into MethodInvocation(2352) at 2", "Insert SimpleName: computedMD5(2377) into MethodInvocation(2379) at 0", "Insert SimpleName: length(2378) into MethodInvocation(2379) at 1", "Insert SimpleName: url(2349) into InfixExpression: +(2351) at 0", "Insert StringLiteral: \".md5\"(2350) into InfixExpression: +(2351) at 1", "Delete SimpleName: sage(6)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}