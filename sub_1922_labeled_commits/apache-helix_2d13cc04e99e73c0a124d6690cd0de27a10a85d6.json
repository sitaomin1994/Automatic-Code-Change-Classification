{"application": "apache-helix", "csha": "2d13cc04e99e73c0a124d6690cd0de27a10a85d6", "files": [{"ConfigAccessor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: scope to SingleVariableDeclaration at 1", "INS SimpleName: scope to InfixExpression: + at 1", "INS SimpleType: HelixException to ClassInstanceCreation at 0", "INS InfixExpression: || to InfixExpression: || at 0", "INS SimpleName: error to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: recordToRemove to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: remove to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \" is not setup yet\" to InfixExpression: + at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: clusterName to MethodInvocation at 2", "INS StringLiteral: \"fail to remove. invalid scope: \" to InfixExpression: + at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to PrefixExpression: ! at 0", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: scope to MethodInvocation at 0", "INS SimpleType: ZNRecord to SingleVariableDeclaration at 0", "INS SimpleName: scope to TagElement: @param at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: subtract to MethodInvocation at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS TextElement: Remove multiple configs to TagElement at 0", "INS SimpleName: ZNRecord to SimpleType: ZNRecord at 0", "INS InfixExpression: || to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: scope to MethodInvocation at 0", "INS SimpleType: HelixConfigScope to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: scope to MethodInvocation at 0", "INS SimpleName: scope to InfixExpression: == at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getZkPath to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS TagElement: @param to Javadoc at 2", "INS ThrowStatement to Block at 0", "INS IfStatement to Block at 2", "INS SimpleName: HelixConfigScope to SimpleType: HelixConfigScope at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS Block to IfStatement at 1", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS SimpleName: zkPath to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: isFullKey to MethodInvocation at 1", "INS SimpleName: clusterName to InfixExpression: + at 1", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS Block to IfStatement at 1", "INS SimpleName: recordToRemove to MethodInvocation at 4", "INS SimpleName: zkClient to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: recordToRemove to TagElement: @param at 0", "INS SimpleName: getClusterName to MethodInvocation at 1", "INS SimpleName: ZKUtil to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement: participant, etc.) to TagElement: @param at 2", "INS StringLiteral: \"fail to remove. cluster \" to InfixExpression: + at 0", "INS TextElement:           scope specification of the entity set to query (e.g. cluster, resource, to TagElement: @param at 1", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: zkClient to MethodInvocation at 2", "INS SimpleName: scope to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ZKUtil to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: isClusterSetup to MethodInvocation at 1", "INS TextElement:  the ZNRecord that holds the entries that needs to be removed to TagElement: @param at 1", "INS SimpleName: clusterName to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: zkPath to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 6"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"ConfigAccessor_diff": {"operations": ["Insert MethodDeclaration(1809) into TypeDeclaration: class(2968) at 21", "Insert Javadoc(1733) into MethodDeclaration(1809) at 0", "Insert Modifier: public(1734) into MethodDeclaration(1809) at 1", "Insert PrimitiveType: void(1735) into MethodDeclaration(1809) at 2", "Insert SimpleName: remove(1736) into MethodDeclaration(1809) at 3", "Insert SingleVariableDeclaration(1740) into MethodDeclaration(1809) at 4", "Insert SingleVariableDeclaration(1744) into MethodDeclaration(1809) at 5", "Insert Block(1808) into MethodDeclaration(1809) at 6", "Insert TagElement(1725) into Javadoc(1733) at 0", "Insert TagElement: @param(1729) into Javadoc(1733) at 1", "Insert TagElement: @param(1732) into Javadoc(1733) at 2", "Insert SimpleType: HelixConfigScope(1738) into SingleVariableDeclaration(1740) at 0", "Insert SimpleName: scope(1739) into SingleVariableDeclaration(1740) at 1", "Insert SimpleType: ZNRecord(1742) into SingleVariableDeclaration(1744) at 0", "Insert SimpleName: recordToRemove(1743) into SingleVariableDeclaration(1744) at 1", "Insert IfStatement(1768) into Block(1808) at 0", "Insert VariableDeclarationStatement(1776) into Block(1808) at 1", "Insert IfStatement(1792) into Block(1808) at 2", "Insert VariableDeclarationStatement(1800) into Block(1808) at 3", "Insert ExpressionStatement(1807) into Block(1808) at 4", "Insert TextElement: Remove multiple configs(1724) into TagElement(1725) at 0", "Insert SimpleName: scope(1726) into TagElement: @param(1729) at 0", "Insert TextElement:           scope specification of the entity set to query (e.g. cluster, resource,(1727) into TagElement: @param(1729) at 1", "Insert TextElement: participant, etc.)(1728) into TagElement: @param(1729) at 2", "Insert SimpleName: recordToRemove(1730) into TagElement: @param(1732) at 0", "Insert TextElement:  the ZNRecord that holds the entries that needs to be removed(1731) into TagElement: @param(1732) at 1", "Insert SimpleName: HelixConfigScope(1737) into SimpleType: HelixConfigScope(1738) at 0", "Insert SimpleName: ZNRecord(1741) into SimpleType: ZNRecord(1742) at 0", "Insert InfixExpression: ||(1758) into IfStatement(1768) at 0", "Insert Block(1767) into IfStatement(1768) at 1", "Insert SimpleType: String(1770) into VariableDeclarationStatement(1776) at 0", "Insert VariableDeclarationFragment(1775) into VariableDeclarationStatement(1776) at 1", "Insert PrefixExpression: !(1782) into IfStatement(1792) at 0", "Insert Block(1791) into IfStatement(1792) at 1", "Insert SimpleType: String(1794) into VariableDeclarationStatement(1800) at 0", "Insert VariableDeclarationFragment(1799) into VariableDeclarationStatement(1800) at 1", "Insert MethodInvocation(1806) into ExpressionStatement(1807) at 0", "Insert InfixExpression: ||(1753) into InfixExpression: ||(1758) at 0", "Insert PrefixExpression: !(1757) into InfixExpression: ||(1758) at 1", "Insert ExpressionStatement(1765) into Block(1767) at 0", "Insert ReturnStatement(1766) into Block(1767) at 1", "Insert SimpleName: String(1769) into SimpleType: String(1770) at 0", "Insert SimpleName: clusterName(1771) into VariableDeclarationFragment(1775) at 0", "Insert MethodInvocation(1774) into VariableDeclarationFragment(1775) at 1", "Insert MethodInvocation(1781) into PrefixExpression: !(1782) at 0", "Insert ThrowStatement(1790) into Block(1791) at 0", "Insert SimpleName: String(1793) into SimpleType: String(1794) at 0", "Insert SimpleName: zkPath(1795) into VariableDeclarationFragment(1799) at 0", "Insert MethodInvocation(1798) into VariableDeclarationFragment(1799) at 1", "Insert SimpleName: ZKUtil(1801) into MethodInvocation(1806) at 0", "Insert SimpleName: subtract(1802) into MethodInvocation(1806) at 1", "Insert SimpleName: zkClient(1803) into MethodInvocation(1806) at 2", "Insert SimpleName: zkPath(1804) into MethodInvocation(1806) at 3", "Insert SimpleName: recordToRemove(1805) into MethodInvocation(1806) at 4", "Insert InfixExpression: ==(1747) into InfixExpression: ||(1753) at 0", "Insert InfixExpression: ==(1752) into InfixExpression: ||(1753) at 1", "Insert MethodInvocation(1756) into PrefixExpression: !(1757) at 0", "Insert MethodInvocation(1764) into ExpressionStatement(1765) at 0", "Insert SimpleName: scope(1772) into MethodInvocation(1774) at 0", "Insert SimpleName: getClusterName(1773) into MethodInvocation(1774) at 1", "Insert SimpleName: ZKUtil(1777) into MethodInvocation(1781) at 0", "Insert SimpleName: isClusterSetup(1778) into MethodInvocation(1781) at 1", "Insert SimpleName: clusterName(1779) into MethodInvocation(1781) at 2", "Insert SimpleName: zkClient(1780) into MethodInvocation(1781) at 3", "Insert ClassInstanceCreation(1789) into ThrowStatement(1790) at 0", "Insert SimpleName: scope(1796) into MethodInvocation(1798) at 0", "Insert SimpleName: getZkPath(1797) into MethodInvocation(1798) at 1", "Insert SimpleName: scope(1745) into InfixExpression: ==(1747) at 0", "Insert NullLiteral(1746) into InfixExpression: ==(1747) at 1", "Insert MethodInvocation(1750) into InfixExpression: ==(1752) at 0", "Insert NullLiteral(1751) into InfixExpression: ==(1752) at 1", "Insert SimpleName: scope(1754) into MethodInvocation(1756) at 0", "Insert SimpleName: isFullKey(1755) into MethodInvocation(1756) at 1", "Insert SimpleName: LOG(1759) into MethodInvocation(1764) at 0", "Insert SimpleName: error(1760) into MethodInvocation(1764) at 1", "Insert InfixExpression: +(1763) into MethodInvocation(1764) at 2", "Insert SimpleType: HelixException(1784) into ClassInstanceCreation(1789) at 0", "Insert InfixExpression: +(1788) into ClassInstanceCreation(1789) at 1", "Insert SimpleName: scope(1748) into MethodInvocation(1750) at 0", "Insert SimpleName: getType(1749) into MethodInvocation(1750) at 1", "Insert StringLiteral: \"fail to remove. invalid scope: \"(1761) into InfixExpression: +(1763) at 0", "Insert SimpleName: scope(1762) into InfixExpression: +(1763) at 1", "Insert SimpleName: HelixException(1783) into SimpleType: HelixException(1784) at 0", "Insert StringLiteral: \"fail to remove. cluster \"(1785) into InfixExpression: +(1788) at 0", "Insert SimpleName: clusterName(1786) into InfixExpression: +(1788) at 1", "Insert StringLiteral: \" is not setup yet\"(1787) into InfixExpression: +(1788) at 2", "Delete ReturnStatement(1055)", "Delete ReturnStatement(1290)", "Delete ReturnStatement(1523)", "Delete ReturnStatement(1725)"]}}, {"AbstractResource_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.helix.HelixException to ImportDeclaration at 0"]}, {"root": "INS EnumDeclaration to TypeDeclaration: class at 4", "operations": ["INS SimpleName: disable to EnumConstantDeclaration at 0", "INS SimpleName: expand to EnumConstantDeclaration at 0", "INS SimpleName: enable to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 7", "INS EnumConstantDeclaration to EnumDeclaration at 6", "INS SimpleName: Command to EnumDeclaration at 1", "INS SimpleName: update to EnumConstantDeclaration at 0", "INS SimpleName: delete to EnumConstantDeclaration at 0", "INS EnumDeclaration to TypeDeclaration: class at 4", "INS EnumConstantDeclaration to EnumDeclaration at 5", "INS EnumConstantDeclaration to EnumDeclaration at 3", "INS Modifier: public to EnumDeclaration at 0", "INS SimpleName: activate to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 4", "INS EnumConstantDeclaration to EnumDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS ThrowStatement to Block at 0", "INS SimpleType: HelixException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Modifier: protected to MethodDeclaration at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS Block to IfStatement at 1", "INS TryStatement to Block at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: command to VariableDeclarationFragment at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: Command to MethodDeclaration at 1", "INS SimpleType: IllegalArgumentException to SingleVariableDeclaration at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: Command to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS Block to CatchClause at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: commandStr to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: command to ReturnStatement at 0", "INS StringLiteral: \"Unknown command \" to InfixExpression: + at 0", "INS NullLiteral to InfixExpression: == at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: commandStr to InfixExpression: + at 1", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS SimpleName: commandStr to InfixExpression: + at 1", "INS StringLiteral: \"Unknown command \" to InfixExpression: + at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: Command to VariableDeclarationStatement at 0", "INS SimpleName: Command to SimpleType: Command at 0", "INS SimpleName: commandStr to InfixExpression: == at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: getCommand to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS InfixExpression: == to IfStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS SimpleName: Command to SimpleType: Command at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: commandStr to SingleVariableDeclaration at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS SimpleType: HelixException to ClassInstanceCreation at 0", "INS Block to TryStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: HelixException to MethodDeclaration at 4", "INS IfStatement to Block at 0"]}]}}, {"AbstractResource_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(708) at 12", "Insert QualifiedName: org.apache.helix.HelixException(24) into ImportDeclaration(25) at 0", "Insert EnumDeclaration(96) into TypeDeclaration: class(707) at 4", "Insert MethodDeclaration(706) into TypeDeclaration: class(707) at 30", "Insert Modifier: public(82) into EnumDeclaration(96) at 0", "Insert SimpleName: Command(83) into EnumDeclaration(96) at 1", "Insert EnumConstantDeclaration(85) into EnumDeclaration(96) at 2", "Insert EnumConstantDeclaration(87) into EnumDeclaration(96) at 3", "Insert EnumConstantDeclaration(89) into EnumDeclaration(96) at 4", "Insert EnumConstantDeclaration(91) into EnumDeclaration(96) at 5", "Insert EnumConstantDeclaration(93) into EnumDeclaration(96) at 6", "Insert EnumConstantDeclaration(95) into EnumDeclaration(96) at 7", "Insert Modifier: protected(657) into MethodDeclaration(706) at 0", "Insert SimpleType: Command(659) into MethodDeclaration(706) at 1", "Insert SimpleName: getCommand(660) into MethodDeclaration(706) at 2", "Insert SingleVariableDeclaration(664) into MethodDeclaration(706) at 3", "Insert SimpleType: HelixException(666) into MethodDeclaration(706) at 4", "Insert Block(705) into MethodDeclaration(706) at 5", "Insert SimpleName: activate(84) into EnumConstantDeclaration(85) at 0", "Insert SimpleName: expand(86) into EnumConstantDeclaration(87) at 0", "Insert SimpleName: enable(88) into EnumConstantDeclaration(89) at 0", "Insert SimpleName: disable(90) into EnumConstantDeclaration(91) at 0", "Insert SimpleName: update(92) into EnumConstantDeclaration(93) at 0", "Insert SimpleName: delete(94) into EnumConstantDeclaration(95) at 0", "Insert SimpleName: Command(658) into SimpleType: Command(659) at 0", "Insert SimpleType: String(662) into SingleVariableDeclaration(664) at 0", "Insert SimpleName: commandStr(663) into SingleVariableDeclaration(664) at 1", "Insert SimpleName: HelixException(665) into SimpleType: HelixException(666) at 0", "Insert IfStatement(678) into Block(705) at 0", "Insert TryStatement(704) into Block(705) at 1", "Insert SimpleName: String(661) into SimpleType: String(662) at 0", "Insert InfixExpression: ==(669) into IfStatement(678) at 0", "Insert Block(677) into IfStatement(678) at 1", "Insert Block(690) into TryStatement(704) at 0", "Insert CatchClause(703) into TryStatement(704) at 1", "Insert SimpleName: commandStr(667) into InfixExpression: ==(669) at 0", "Insert NullLiteral(668) into InfixExpression: ==(669) at 1", "Insert ThrowStatement(676) into Block(677) at 0", "Insert VariableDeclarationStatement(687) into Block(690) at 0", "Insert ReturnStatement(689) into Block(690) at 1", "Insert SingleVariableDeclaration(694) into CatchClause(703) at 0", "Insert Block(702) into CatchClause(703) at 1", "Insert ClassInstanceCreation(675) into ThrowStatement(676) at 0", "Insert SimpleType: Command(680) into VariableDeclarationStatement(687) at 0", "Insert VariableDeclarationFragment(686) into VariableDeclarationStatement(687) at 1", "Insert SimpleName: command(688) into ReturnStatement(689) at 0", "Insert SimpleType: IllegalArgumentException(692) into SingleVariableDeclaration(694) at 0", "Insert SimpleName: ex(693) into SingleVariableDeclaration(694) at 1", "Insert ThrowStatement(701) into Block(702) at 0", "Insert SimpleType: HelixException(671) into ClassInstanceCreation(675) at 0", "Insert InfixExpression: +(674) into ClassInstanceCreation(675) at 1", "Insert SimpleName: Command(679) into SimpleType: Command(680) at 0", "Insert SimpleName: command(681) into VariableDeclarationFragment(686) at 0", "Insert MethodInvocation(685) into VariableDeclarationFragment(686) at 1", "Insert SimpleName: IllegalArgumentException(691) into SimpleType: IllegalArgumentException(692) at 0", "Insert ClassInstanceCreation(700) into ThrowStatement(701) at 0", "Insert SimpleName: HelixException(670) into SimpleType: HelixException(671) at 0", "Insert StringLiteral: \"Unknown command \"(672) into InfixExpression: +(674) at 0", "Insert SimpleName: commandStr(673) into InfixExpression: +(674) at 1", "Insert SimpleName: Command(682) into MethodInvocation(685) at 0", "Insert SimpleName: valueOf(683) into MethodInvocation(685) at 1", "Insert SimpleName: commandStr(684) into MethodInvocation(685) at 2", "Insert SimpleType: HelixException(696) into ClassInstanceCreation(700) at 0", "Insert InfixExpression: +(699) into ClassInstanceCreation(700) at 1", "Insert SimpleName: HelixException(695) into SimpleType: HelixException(696) at 0", "Insert StringLiteral: \"Unknown command \"(697) into InfixExpression: +(699) at 0", "Insert SimpleName: commandStr(698) into InfixExpression: +(699) at 1"]}}, {"ClusterAccessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS ImportDeclaration to CompilationUnit at 27", "INS QualifiedName: org.apache.helix.model.HelixConfigScope to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS ImportDeclaration to CompilationUnit at 32", "INS QualifiedName: org.apache.helix.model.builder.HelixConfigScopeBuilder to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS CatchClause to TryStatement at 1", "INS SimpleName: clusterId to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: record to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS TryStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS SimpleName: badRequest to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: QueryParam to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to SingleVariableDeclaration at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: commandStr to SingleVariableDeclaration at 2", "INS SimpleName: getCommand to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: command to Assignment: = at 0", "INS SimpleName: Command to SimpleType: Command at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getId to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS SimpleType: Command to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: updateClusterConfig to MethodDeclaration at 4", "INS StringLiteral: \"ID does not match the cluster name in input!\" to MethodInvocation at 1", "INS SimpleName: getMessage to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: commandStr to MethodInvocation at 1", "INS SimpleType: HelixException to SingleVariableDeclaration at 0", "INS Block to CatchClause at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SingleVariableDeclaration to CatchClause at 0", "INS Modifier: public to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS StringLiteral: \"command\" to SingleMemberAnnotation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: command to VariableDeclarationFragment at 0", "INS SimpleName: badRequest to MethodInvocation at 0", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: ex to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: Response to MethodDeclaration at 3", "MOV SingleMemberAnnotation to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "UPDATE from command to commandStr", "operations": ["UPD SimpleName: command from command to commandStr", "UPD SimpleName: command from command to commandStr"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 7", "MOV ReturnStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 2", "MOV TryStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 6"]}, {"root": "UPDATE from ClusterCommands to Command", "operations": ["UPD SimpleName: ClusterCommands from ClusterCommands to Command", "UPD SimpleType: ClusterCommands from ClusterCommands to Command"]}, {"root": "UPDATE from commandType to command", "operations": ["UPD SimpleName: commandType from commandType to command", "UPD SimpleName: commandType from commandType to command", "UPD SimpleName: commandType from commandType to command", "UPD SimpleName: commandType from commandType to command"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS SwitchCase to SwitchStatement at 1", "INS BreakStatement to SwitchStatement at 6", "INS SimpleName: forCluster to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: clusterScope to MethodInvocation at 2", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: commandStr to InfixExpression: + at 1", "INS SwitchStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \"Unsupported command \" to InfixExpression: + at 0", "INS SimpleName: update to SwitchCase at 0", "INS BreakStatement to SwitchStatement at 3", "INS SwitchCase to SwitchStatement at 4", "INS SimpleType: HelixConfigScope to VariableDeclarationStatement at 0", "INS SimpleName: HelixConfigScopeBuilder to SimpleType: HelixConfigScopeBuilder at 0", "INS Block to TryStatement at 0", "INS SimpleName: HelixConfigScope to SimpleType: HelixConfigScope at 0", "INS SimpleName: badRequest to MethodInvocation at 0", "INS SimpleName: configAccessor to MethodInvocation at 0", "INS QualifiedName: HelixConfigScope.ConfigScopeProperty.CLUSTER to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: command to SwitchStatement at 0", "INS SimpleName: getRecord to MethodInvocation at 1", "INS SimpleType: HelixConfigScopeBuilder to ClassInstanceCreation at 0", "INS ReturnStatement to SwitchStatement at 8", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ReturnStatement at 0", "INS Block to SwitchStatement at 5", "INS SimpleName: delete to SwitchCase at 0", "INS SimpleName: clusterScope to VariableDeclarationFragment at 0", "INS SwitchCase to SwitchStatement at 7", "INS SimpleName: build to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 1", "INS SimpleName: config to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: clusterId to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from IllegalArgumentException to HelixException", "operations": ["UPD SimpleType: IllegalArgumentException from IllegalArgumentException to HelixException", "UPD SimpleName: IllegalArgumentException from IllegalArgumentException to HelixException"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV ExpressionStatement to SwitchStatement at 2"]}, {"root": "UPDATE from \"Unknown command \" to \"Unsupported command \"", "operations": ["UPD StringLiteral: \"Unknown command \" from \"Unknown command \" to \"Unsupported command \""]}, {"root": "UPDATE from ClusterCommands to getCommand", "operations": ["UPD SimpleName: ClusterCommands from ClusterCommands to getCommand"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: ex to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: getMessage to MethodInvocation at 1"]}, {"root": "UPDATE from \"Input is not a vaild ZNRecord!\" to \"Input is not a valid ZNRecord!\"", "operations": ["UPD StringLiteral: \"Input is not a vaild ZNRecord!\" from \"Input is not a vaild ZNRecord!\" to \"Input is not a valid ZNRecord!\""]}, {"root": "INS StringLiteral: \"Failed to \" to InfixExpression: + at 0", "operations": ["INS StringLiteral: \"Failed to \" to InfixExpression: + at 0"]}, {"root": "INS SimpleName: command to InfixExpression: + at 1", "operations": ["INS SimpleName: command to InfixExpression: + at 1"]}, {"root": "UPDATE from \"Failed to update cluster config, cluster \" to \" cluster config, cluster \"", "operations": ["UPD StringLiteral: \"Failed to update cluster config, cluster \" from \"Failed to update cluster config, cluster \" to \" cluster config, cluster \""]}, {"root": "DEL EnumDeclaration", "operations": ["DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: expand", "DEL Modifier: public", "DEL EnumConstantDeclaration", "DEL SimpleName: ClusterCommands", "DEL SimpleName: disable", "DEL EnumConstantDeclaration", "DEL SimpleName: enable", "DEL SimpleName: activate", "DEL EnumDeclaration"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"command is needed!\"", "DEL SimpleName: command", "DEL IfStatement", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: badRequest", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL SimpleName: valueOf", "operations": ["DEL SimpleName: valueOf"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL SimpleName: command", "DEL StringLiteral: \"Unknown command \""]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: updateClusterConfig", "DEL Modifier: public", "DEL Block"]}]}}, {"ClusterAccessor_diff": {"operations": ["Insert ImportDeclaration(55) into CompilationUnit(1523) at 27", "Insert ImportDeclaration(65) into CompilationUnit(1523) at 32", "Insert QualifiedName: org.apache.helix.model.HelixConfigScope(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: org.apache.helix.model.builder.HelixConfigScopeBuilder(64) into ImportDeclaration(65) at 0", "Insert MethodDeclaration(1037) into TypeDeclaration: class(1522) at 14", "Move MarkerAnnotation(855) into MethodDeclaration(1037) at 0", "Move SingleMemberAnnotation(858) into MethodDeclaration(1037) at 1", "Insert Modifier: public(842) into MethodDeclaration(1037) at 2", "Move SimpleType: Response(861) into MethodDeclaration(1037) at 3", "Insert SimpleName: updateClusterConfig(845) into MethodDeclaration(1037) at 4", "Move SingleVariableDeclaration(869) into MethodDeclaration(1037) at 5", "Insert SingleVariableDeclaration(859) into MethodDeclaration(1037) at 6", "Move SingleVariableDeclaration(873) into MethodDeclaration(1037) at 7", "Insert Block(1036) into MethodDeclaration(1037) at 8", "Update SimpleName: command(550) to commandStr", "Insert SingleMemberAnnotation(855) into SingleVariableDeclaration(859) at 0", "Insert SimpleType: String(857) into SingleVariableDeclaration(859) at 1", "Insert SimpleName: commandStr(858) into SingleVariableDeclaration(859) at 2", "Insert VariableDeclarationStatement(868) into Block(1036) at 0", "Insert TryStatement(888) into Block(1036) at 1", "Move VariableDeclarationStatement(878) into Block(1036) at 2", "Move TryStatement(905) into Block(1036) at 3", "Insert IfStatement(933) into Block(1036) at 4", "Move VariableDeclarationStatement(914) into Block(1036) at 5", "Move VariableDeclarationStatement(921) into Block(1036) at 6", "Move TryStatement(964) into Block(1036) at 7", "Move ReturnStatement(967) into Block(1036) at 8", "Update SimpleType: ClusterCommands(569) to Command", "Update SimpleName: commandType(608) to command", "Insert SimpleName: QueryParam(853) into SingleMemberAnnotation(855) at 0", "Insert StringLiteral: \"command\"(854) into SingleMemberAnnotation(855) at 1", "Insert SimpleName: String(856) into SimpleType: String(857) at 0", "Insert SimpleType: Command(865) into VariableDeclarationStatement(868) at 0", "Insert VariableDeclarationFragment(867) into VariableDeclarationStatement(868) at 1", "Insert Block(875) into TryStatement(888) at 0", "Insert CatchClause(887) into TryStatement(888) at 1", "Insert PrefixExpression: !(927) into IfStatement(933) at 0", "Insert Block(932) into IfStatement(933) at 1", "Insert Block(994) into TryStatement(1032) at 0", "Update SimpleName: ClusterCommands(568) to Command", "Update SimpleName: commandType(570) to command", "Insert SimpleName: Command(864) into SimpleType: Command(865) at 0", "Insert SimpleName: command(866) into VariableDeclarationFragment(867) at 0", "Insert ExpressionStatement(874) into Block(875) at 0", "Insert SingleVariableDeclaration(879) into CatchClause(887) at 0", "Insert Block(886) into CatchClause(887) at 1", "Insert MethodInvocation(926) into PrefixExpression: !(927) at 0", "Insert ReturnStatement(931) into Block(932) at 0", "Insert SwitchStatement(993) into Block(994) at 0", "Update SimpleType: IllegalArgumentException(582) to HelixException", "Insert Assignment: =(873) into ExpressionStatement(874) at 0", "Insert SimpleType: HelixException(877) into SingleVariableDeclaration(879) at 0", "Insert SimpleName: ex(878) into SingleVariableDeclaration(879) at 1", "Insert ReturnStatement(885) into Block(886) at 0", "Insert MethodInvocation(923) into MethodInvocation(926) at 0", "Insert SimpleName: equals(924) into MethodInvocation(926) at 1", "Insert SimpleName: clusterId(925) into MethodInvocation(926) at 2", "Insert MethodInvocation(930) into ReturnStatement(931) at 0", "Insert SimpleName: command(950) into SwitchStatement(993) at 0", "Insert SwitchCase(952) into SwitchStatement(993) at 1", "Move ExpressionStatement(927) into SwitchStatement(993) at 2", "Insert BreakStatement(959) into SwitchStatement(993) at 3", "Insert SwitchCase(961) into SwitchStatement(993) at 4", "Insert Block(984) into SwitchStatement(993) at 5", "Insert BreakStatement(985) into SwitchStatement(993) at 6", "Insert SwitchCase(986) into SwitchStatement(993) at 7", "Insert ReturnStatement(992) into SwitchStatement(993) at 8", "Update SimpleName: commandType(573) to command", "Update SimpleName: IllegalArgumentException(581) to HelixException", "Update StringLiteral: \"Unknown command \"(742) to \"Unsupported command \"", "Update SimpleName: commandType(743) to command", "Insert SimpleName: command(869) into Assignment: =(873) at 0", "Insert MethodInvocation(872) into Assignment: =(873) at 1", "Insert SimpleName: HelixException(876) into SimpleType: HelixException(877) at 0", "Insert MethodInvocation(884) into ReturnStatement(885) at 0", "Insert SimpleName: record(921) into MethodInvocation(923) at 0", "Insert SimpleName: getId(922) into MethodInvocation(923) at 1", "Insert SimpleName: badRequest(928) into MethodInvocation(930) at 0", "Insert StringLiteral: \"ID does not match the cluster name in input!\"(929) into MethodInvocation(930) at 1", "Insert SimpleName: update(951) into SwitchCase(952) at 0", "Insert SimpleName: delete(960) into SwitchCase(961) at 0", "Insert VariableDeclarationStatement(975) into Block(984) at 0", "Insert ExpressionStatement(983) into Block(984) at 1", "Insert MethodInvocation(991) into ReturnStatement(992) at 0", "Update SimpleName: ClusterCommands(574) to getCommand", "Update SimpleName: command(576) to commandStr", "Insert MethodInvocation(571) into MethodInvocation(572) at 1", "Insert SimpleName: getCommand(870) into MethodInvocation(872) at 0", "Insert SimpleName: commandStr(871) into MethodInvocation(872) at 1", "Insert SimpleName: badRequest(880) into MethodInvocation(884) at 0", "Insert MethodInvocation(883) into MethodInvocation(884) at 1", "Update StringLiteral: \"Input is not a vaild ZNRecord!\"(900) to \"Input is not a valid ZNRecord!\"", "Insert SimpleType: HelixConfigScope(963) into VariableDeclarationStatement(975) at 0", "Insert VariableDeclarationFragment(974) into VariableDeclarationStatement(975) at 1", "Insert MethodInvocation(982) into ExpressionStatement(983) at 0", "Insert SimpleName: badRequest(987) into MethodInvocation(991) at 0", "Insert InfixExpression: +(990) into MethodInvocation(991) at 1", "Insert SimpleName: ex(569) into MethodInvocation(571) at 0", "Insert SimpleName: getMessage(570) into MethodInvocation(571) at 1", "Insert SimpleName: ex(881) into MethodInvocation(883) at 0", "Insert SimpleName: getMessage(882) into MethodInvocation(883) at 1", "Insert SimpleName: HelixConfigScope(962) into SimpleType: HelixConfigScope(963) at 0", "Insert SimpleName: clusterScope(964) into VariableDeclarationFragment(974) at 0", "Insert MethodInvocation(973) into VariableDeclarationFragment(974) at 1", "Insert SimpleName: configAccessor(976) into MethodInvocation(982) at 0", "Insert SimpleName: remove(977) into MethodInvocation(982) at 1", "Insert SimpleName: clusterScope(978) into MethodInvocation(982) at 2", "Insert MethodInvocation(981) into MethodInvocation(982) at 3", "Insert StringLiteral: \"Unsupported command \"(988) into InfixExpression: +(990) at 0", "Insert SimpleName: commandStr(989) into InfixExpression: +(990) at 1", "Insert StringLiteral: \"Failed to \"(1013) into InfixExpression: +(1021) at 0", "Insert SimpleName: command(1014) into InfixExpression: +(1021) at 1", "Update StringLiteral: \"Failed to update cluster config, cluster \"(947) to \" cluster config, cluster \"", "Insert MethodInvocation(971) into MethodInvocation(973) at 0", "Insert SimpleName: build(972) into MethodInvocation(973) at 1", "Insert SimpleName: config(979) into MethodInvocation(981) at 0", "Insert SimpleName: getRecord(980) into MethodInvocation(981) at 1", "Insert ClassInstanceCreation(968) into MethodInvocation(971) at 0", "Insert SimpleName: forCluster(969) into MethodInvocation(971) at 1", "Insert SimpleName: clusterId(970) into MethodInvocation(971) at 2", "Insert SimpleType: HelixConfigScopeBuilder(966) into ClassInstanceCreation(968) at 0", "Insert QualifiedName: HelixConfigScope.ConfigScopeProperty.CLUSTER(967) into ClassInstanceCreation(968) at 1", "Insert SimpleName: HelixConfigScopeBuilder(965) into SimpleType: HelixConfigScopeBuilder(966) at 0", "Delete Modifier: public(117)", "Delete SimpleName: ClusterCommands(118)", "Delete SimpleName: activate(119)", "Delete EnumConstantDeclaration(120)", "Delete SimpleName: expand(121)", "Delete EnumConstantDeclaration(122)", "Delete SimpleName: enable(123)", "Delete EnumConstantDeclaration(124)", "Delete SimpleName: disable(125)", "Delete EnumConstantDeclaration(126)", "Delete EnumDeclaration(127)", "Delete SimpleName: command(559)", "Delete NullLiteral(560)", "Delete InfixExpression: ==(561)", "Delete SimpleName: badRequest(562)", "Delete StringLiteral: \"command is needed!\"(563)", "Delete MethodInvocation(564)", "Delete ReturnStatement(565)", "Delete Block(566)", "Delete IfStatement(567)", "Delete SimpleName: valueOf(575)", "Delete StringLiteral: \"Unknown command \"(586)", "Delete SimpleName: command(587)", "Delete InfixExpression: +(588)", "Delete Block(928)", "Delete Modifier: public(859)", "Delete SimpleName: updateClusterConfig(862)", "Delete Block(968)", "Delete MethodDeclaration(969)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}