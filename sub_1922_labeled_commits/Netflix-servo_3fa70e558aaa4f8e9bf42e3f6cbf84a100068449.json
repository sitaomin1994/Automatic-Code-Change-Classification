{"application": "Netflix-servo", "csha": "3fa70e558aaa4f8e9bf42e3f6cbf84a100068449", "files": [{"AbstractContextualMonitor_cluster": {"actions": [{"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Base configuration shared across all contexts.  to TagElement at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TextElement: Context to query when accessing a monitor.  to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Factory funtion used to create a new instance of a monitor.  to TagElement at 0", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Thread-safe map keeping track of the distinct monitors that have been created so far.  to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:   shared configuration to TagElement: @param at 1", "INS SimpleName: newMonitor to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: baseConfig to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: context to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TextElement:      provider for context specific tags to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS TextElement:   function to create new monitors to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Create a new instance of the monitor. to TagElement at 0"]}, {"root": "INS Modifier: protected to MethodDeclaration at 1", "operations": ["INS Modifier: protected to MethodDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: context then a new one will be created. to TagElement at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Returns a monitor instance for the current context. If no monitor exists for the current to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:   to TagElement at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:   to TagElement at 1"]}]}}, {"AbstractContextualMonitor_diff": {"operations": ["Insert Javadoc(38) into FieldDeclaration(45) at 0", "Insert Javadoc(48) into FieldDeclaration(55) at 0", "Insert Javadoc(58) into FieldDeclaration(70) at 0", "Insert Javadoc(73) into FieldDeclaration(85) at 0", "Insert Javadoc(97) into MethodDeclaration(147) at 0", "Insert Modifier: protected(98) into MethodDeclaration(147) at 1", "Insert Javadoc(151) into MethodDeclaration(206) at 0", "Insert Javadoc(210) into MethodDeclaration(243) at 0", "Insert Javadoc(247) into MethodDeclaration(271) at 0", "Insert TagElement(37) into Javadoc(38) at 0", "Insert TagElement(47) into Javadoc(48) at 0", "Insert TagElement(57) into Javadoc(58) at 0", "Insert TagElement(72) into Javadoc(73) at 0", "Insert TagElement(87) into Javadoc(97) at 0", "Insert TagElement: @param(90) into Javadoc(97) at 1", "Insert TagElement: @param(93) into Javadoc(97) at 2", "Insert TagElement: @param(96) into Javadoc(97) at 3", "Insert TagElement(150) into Javadoc(151) at 0", "Insert TagElement(209) into Javadoc(210) at 0", "Insert TagElement(246) into Javadoc(247) at 0", "Insert TextElement: Base configuration shared across all contexts. (36) into TagElement(37) at 0", "Insert TextElement: Context to query when accessing a monitor. (46) into TagElement(47) at 0", "Insert TextElement: Factory funtion used to create a new instance of a monitor. (56) into TagElement(57) at 0", "Insert TextElement: Thread-safe map keeping track of the distinct monitors that have been created so far. (71) into TagElement(72) at 0", "Insert TextElement: Create a new instance of the monitor.(86) into TagElement(87) at 0", "Insert SimpleName: baseConfig(88) into TagElement: @param(90) at 0", "Insert TextElement:   shared configuration(89) into TagElement: @param(90) at 1", "Insert SimpleName: context(91) into TagElement: @param(93) at 0", "Insert TextElement:      provider for context specific tags(92) into TagElement: @param(93) at 1", "Insert SimpleName: newMonitor(94) into TagElement: @param(96) at 0", "Insert TextElement:   function to create new monitors(95) into TagElement: @param(96) at 1", "Insert TextElement: Returns a monitor instance for the current context. If no monitor exists for the current(148) into TagElement(150) at 0", "Insert TextElement: context then a new one will be created.(149) into TagElement(150) at 1", "Insert TagElement: @inheritDoc(207) into TagElement(209) at 0", "Insert TextElement:  (208) into TagElement(209) at 1", "Insert TagElement: @inheritDoc(244) into TagElement(246) at 0", "Insert TextElement:  (245) into TagElement(246) at 1"]}}, {"AbstractMonitor_cluster": {"actions": [{"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected"]}, {"root": "UPDATE from Base type for implementing monitors. to Base type to simplify implementing monitors.", "operations": ["UPD TextElement: Base type for implementing monitors. from Base type for implementing monitors. to Base type to simplify implementing monitors."]}]}}, {"AbstractMonitor_diff": {"operations": ["Update Modifier: public(27) to protected", "Update TextElement: Base type for implementing monitors.(4) to Base type to simplify implementing monitors."]}}, {"BasicCompositeMonitor_cluster": {"actions": [{"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 2", "INS TextElement: Create a new composite. to TagElement at 0", "INS TextElement: shares common tags with the sub-monitors, but it is not enforced. to TagElement: @param at 2", "INS TextElement:     configuration for the composite. It is recommended that the configuration to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: config to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: monitors to TagElement: @param at 0", "INS TextElement:   list of sub-monitors to TagElement: @param at 1"]}, {"root": "INS TextElement:   to TagElement at 1", "operations": ["INS TextElement:   to TagElement at 1"]}, {"root": "INS TextElement:   to TagElement at 1", "operations": ["INS TextElement:   to TagElement at 1"]}]}}, {"BasicCompositeMonitor_diff": {"operations": ["Insert Javadoc(50) into MethodDeclaration(85) at 0", "Insert TagElement(42) into Javadoc(50) at 0", "Insert TagElement: @param(46) into Javadoc(50) at 1", "Insert TagElement: @param(49) into Javadoc(50) at 2", "Insert TextElement: Create a new composite.(41) into TagElement(42) at 0", "Insert SimpleName: config(43) into TagElement: @param(46) at 0", "Insert TextElement:     configuration for the composite. It is recommended that the configuration(44) into TagElement: @param(46) at 1", "Insert TextElement: shares common tags with the sub-monitors, but it is not enforced.(45) into TagElement: @param(46) at 2", "Insert SimpleName: monitors(47) into TagElement: @param(49) at 0", "Insert TextElement:   list of sub-monitors(48) into TagElement: @param(49) at 1", "Insert TextElement:  (136) into TagElement(137) at 1", "Insert TextElement:  (188) into TagElement(189) at 1"]}}, {"BasicGauge_cluster": {"actions": [{"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TextElement:     configuration for this monitor to TagElement: @param at 1", "INS SimpleName: config to TagElement: @param at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS SimpleName: function to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement:   a function used to fetch the value on demand to TagElement: @param at 1"]}]}}, {"BasicGauge_diff": {"operations": ["Insert TagElement: @param(44) into Javadoc(48) at 1", "Insert TagElement: @param(47) into Javadoc(48) at 2", "Insert SimpleName: config(42) into TagElement: @param(44) at 0", "Insert TextElement:     configuration for this monitor(43) into TagElement: @param(44) at 1", "Insert SimpleName: function(45) into TagElement: @param(47) at 0", "Insert TextElement:   a function used to fetch the value on demand(46) into TagElement: @param(47) at 1"]}}, {"BasicStopwatch_cluster": {"actions": [{"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: Create a new stopwatch with no associated timer.  to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: timer to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Create a new stopwatch with no associated timer. to TagElement at 0", "INS TextElement:   associated timer to record the duration when stopped to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS NullLiteral to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS TagElement: @inheritDoc to TagElement at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "UPDATE from Reset the stopwatch so that it can be used again. to  ", "operations": ["UPD TextElement: Reset the stopwatch so that it can be used again. from Reset the stopwatch so that it can be used again. to  ", "UPD TextElement:  duration in specified time unit. from  duration in specified time unit. to  ", "UPD TextElement: Start the stopwatch. from Start the stopwatch. to  ", "UPD TextElement: Stop the stopwatch. from Stop the stopwatch. to  "]}, {"root": "INS TagElement: @inheritDoc to TagElement at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS TagElement: @inheritDoc to TagElement at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement:  duration in specified time unit. to TagElement at 1"]}, {"root": "UPDATE from Get the duration in the default TimeUnit which is nano-seconds. to Returns the duration in nanoseconds. No checks are performed to ensure that the stopwatch", "operations": ["UPD TextElement: Get the duration in the default TimeUnit which is nano-seconds. from Get the duration in the default TimeUnit which is nano-seconds. to Returns the duration in nanoseconds. No checks are performed to ensure that the stopwatch"]}, {"root": "INS TextElement: has been properly started and stopped before executing this method. to TagElement at 1", "operations": ["INS TextElement: has been properly started and stopped before executing this method. to TagElement at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL Assignment: =", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleName: timer"]}, {"root": "DEL TagElement", "operations": ["DEL TextElement: Get the duration of time the stopwatch was running.", "DEL TagElement"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: timeUnit", "DEL TagElement: @param"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}]}}, {"BasicStopwatch_diff": {"operations": ["Insert Javadoc(41) into MethodDeclaration(47) at 0", "Insert Javadoc(53) into MethodDeclaration(67) at 0", "Insert TagElement(40) into Javadoc(41) at 0", "Insert ConstructorInvocation(45) into Block(46) at 0", "Insert TagElement(49) into Javadoc(53) at 0", "Insert TagElement: @param(52) into Javadoc(53) at 1", "Insert TagElement(145) into Javadoc(146) at 0", "Insert TextElement: Create a new stopwatch with no associated timer. (39) into TagElement(40) at 0", "Insert NullLiteral(44) into ConstructorInvocation(45) at 0", "Insert TextElement: Create a new stopwatch with no associated timer.(48) into TagElement(49) at 0", "Insert SimpleName: timer(50) into TagElement: @param(52) at 0", "Insert TextElement:   associated timer to record the duration when stopped(51) into TagElement: @param(52) at 1", "Insert TagElement: @inheritDoc(68) into TagElement(70) at 0", "Update TextElement: Start the stopwatch.(63) to  ", "Insert TagElement: @inheritDoc(86) into TagElement(88) at 0", "Update TextElement: Stop the stopwatch.(80) to  ", "Insert TagElement: @inheritDoc(118) into TagElement(120) at 0", "Update TextElement: Reset the stopwatch so that it can be used again.(111) to  ", "Insert TagElement: @inheritDoc(143) into TagElement(145) at 0", "Update TextElement:  duration in specified time unit.(139) to  ", "Move TextElement:  duration in specified time unit.(139) into TagElement(145) at 1", "Update TextElement: Get the duration in the default TimeUnit which is nano-seconds.(160) to Returns the duration in nanoseconds. No checks are performed to ensure that the stopwatch", "Insert TextElement: has been properly started and stopped before executing this method.(166) into TagElement(167) at 1", "Delete ThisExpression(41)", "Delete SimpleName: timer(42)", "Delete FieldAccess(43)", "Delete NullLiteral(44)", "Delete Assignment: =(45)", "Delete ExpressionStatement(46)", "Delete TextElement: Get the duration of time the stopwatch was running.(135)", "Delete TagElement(136)", "Delete SimpleName: timeUnit(137)", "Delete TagElement: @param(138)", "Delete TagElement: @return(140)", "Delete TagElement: @return(162)"]}}, {"BasicTimer_cluster": {"actions": [{"root": "UPDATE from Get the total time for all updates since the last reset.  to Get the total time for all updates. ", "operations": ["UPD TextElement: Get the total time for all updates since the last reset.  from Get the total time for all updates since the last reset.  to Get the total time for all updates. "]}, {"root": "UPDATE from Get the number of updates since the last reset.  to Get the total number of updates. ", "operations": ["UPD TextElement: Get the number of updates since the last reset.  from Get the number of updates since the last reset.  to Get the total number of updates. "]}]}}, {"BasicTimer_diff": {"operations": ["Update TextElement: Get the total time for all updates since the last reset. (414) to Get the total time for all updates. ", "Update TextElement: Get the number of updates since the last reset. (427) to Get the total number of updates. "]}}, {"ContextualCounter_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS Javadoc to TypeDeclaration: class at 0", "INS TagElement to Javadoc at 0", "INS TextElement: tagging context. to TagElement at 1", "INS TextElement: Composite that maintains separate simple counters for each distinct set of tags returned by the to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 2", "INS TextElement:   function to create new counters to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: config to TagElement: @param at 0", "INS SimpleName: newMonitor to TagElement: @param at 0", "INS TextElement: Create a new instance of the counter. to TagElement at 0", "INS TextElement:      provider for context specific tags to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:       shared configuration to TagElement: @param at 1", "INS SimpleName: context to TagElement: @param at 0"]}]}}, {"ContextualCounter_diff": {"operations": ["Insert Javadoc(9) into TypeDeclaration: class(111) at 0", "Insert TagElement(8) into Javadoc(9) at 0", "Insert Javadoc(32) into MethodDeclaration(57) at 0", "Insert TextElement: Composite that maintains separate simple counters for each distinct set of tags returned by the(6) into TagElement(8) at 0", "Insert TextElement: tagging context.(7) into TagElement(8) at 1", "Insert TagElement(22) into Javadoc(32) at 0", "Insert TagElement: @param(25) into Javadoc(32) at 1", "Insert TagElement: @param(28) into Javadoc(32) at 2", "Insert TagElement: @param(31) into Javadoc(32) at 3", "Insert TextElement: Create a new instance of the counter.(21) into TagElement(22) at 0", "Insert SimpleName: config(23) into TagElement: @param(25) at 0", "Insert TextElement:       shared configuration(24) into TagElement: @param(25) at 1", "Insert SimpleName: context(26) into TagElement: @param(28) at 0", "Insert TextElement:      provider for context specific tags(27) into TagElement: @param(28) at 1", "Insert SimpleName: newMonitor(29) into TagElement: @param(31) at 0", "Insert TextElement:   function to create new counters(30) into TagElement: @param(31) at 1"]}}, {"ContextualTimer_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Composite that maintains separate simple timers for each distinct set of tags returned by the to TagElement at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: tagging context. to TagElement at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement:   function to create new timers to TagElement: @param at 1", "INS TextElement:      provider for context specific tags to TagElement: @param at 1", "INS SimpleName: config to TagElement: @param at 0", "INS TextElement: Create a new instance of the timer. to TagElement at 0", "INS TextElement:       shared configuration to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: newMonitor to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: context to TagElement: @param at 0"]}]}}, {"ContextualTimer_diff": {"operations": ["Insert Javadoc(11) into TypeDeclaration: class(167) at 0", "Insert TagElement(10) into Javadoc(11) at 0", "Insert Javadoc(34) into MethodDeclaration(59) at 0", "Insert TextElement: Composite that maintains separate simple timers for each distinct set of tags returned by the(8) into TagElement(10) at 0", "Insert TextElement: tagging context.(9) into TagElement(10) at 1", "Insert TagElement(24) into Javadoc(34) at 0", "Insert TagElement: @param(27) into Javadoc(34) at 1", "Insert TagElement: @param(30) into Javadoc(34) at 2", "Insert TagElement: @param(33) into Javadoc(34) at 3", "Insert TextElement: Create a new instance of the timer.(23) into TagElement(24) at 0", "Insert SimpleName: config(25) into TagElement: @param(27) at 0", "Insert TextElement:       shared configuration(26) into TagElement: @param(27) at 1", "Insert SimpleName: context(28) into TagElement: @param(30) at 0", "Insert TextElement:      provider for context specific tags(29) into TagElement: @param(30) at 1", "Insert SimpleName: newMonitor(31) into TagElement: @param(33) at 0", "Insert TextElement:   function to create new timers(32) into TagElement: @param(33) at 1"]}}, {"Counter_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to TypeDeclaration: interface at 0", "INS TextElement: Monitor type for tracking how often some event is occurring. to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Update the count by one.  to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement: Update the count by the specified amount.  to TagElement at 0", "INS TagElement to Javadoc at 0"]}]}}, {"Counter_diff": {"operations": ["Insert Javadoc(4) into TypeDeclaration: interface(27) at 0", "Insert TagElement(3) into Javadoc(4) at 0", "Insert Javadoc(14) into MethodDeclaration(17) at 0", "Insert Javadoc(20) into MethodDeclaration(26) at 0", "Insert TextElement: Monitor type for tracking how often some event is occurring.(2) into TagElement(3) at 0", "Insert TagElement(13) into Javadoc(14) at 0", "Insert TagElement(19) into Javadoc(20) at 0", "Insert TextElement: Update the count by one. (12) into TagElement(13) at 0", "Insert TextElement: Update the count by the specified amount. (18) into TagElement(19) at 0"]}}, {"Gauge_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS Javadoc to TypeDeclaration: interface at 0", "INS TagElement to Javadoc at 0", "INS TextElement: Monitor type that provides the current value, e.g., the percentage of disk space used. to TagElement at 0"]}]}}, {"Gauge_diff": {"operations": ["Insert Javadoc(4) into TypeDeclaration: interface(16) at 0", "Insert TagElement(3) into Javadoc(4) at 0", "Insert TextElement: Monitor type that provides the current value, e.g., the percentage of disk space used.(2) into TagElement(3) at 0"]}}, {"Monitor_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS Javadoc to TypeDeclaration: interface at 0", "INS TextElement: Provides a way to sample a value tied to a particular configuration.  to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Returns the current value for the monitor.  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement: Configuration used to identify a monitor and provide metadata used in aggregations.  to TagElement at 0", "INS TagElement to Javadoc at 0"]}]}}, {"Monitor_diff": {"operations": ["Insert Javadoc(4) into TypeDeclaration: interface(23) at 0", "Insert TagElement(3) into Javadoc(4) at 0", "Insert Javadoc(11) into MethodDeclaration(15) at 0", "Insert Javadoc(18) into MethodDeclaration(22) at 0", "Insert TextElement: Provides a way to sample a value tied to a particular configuration. (2) into TagElement(3) at 0", "Insert TagElement(10) into Javadoc(11) at 0", "Insert TagElement(17) into Javadoc(18) at 0", "Insert TextElement: Returns the current value for the monitor. (9) into TagElement(10) at 0", "Insert TextElement: Configuration used to identify a monitor and provide metadata used in aggregations. (16) into TagElement(17) at 0"]}}, {"MonitorConfig_cluster": {"actions": [{"root": "UPDATE from Configuration settings associated with a metric. to Configuration settings associated with a monitor. A config consists of a name that is required", "operations": ["UPD TextElement: Configuration settings associated with a metric. from Configuration settings associated with a metric. to Configuration settings associated with a monitor. A config consists of a name that is required"]}, {"root": "INS TextElement: and an optional set of tags. to TagElement at 1", "operations": ["INS TextElement: and an optional set of tags. to TagElement at 1"]}, {"root": "INS TextElement:   to TagElement at 1", "operations": ["INS TextElement:   to TagElement at 1"]}, {"root": "INS TextElement:   to TagElement at 1", "operations": ["INS TextElement:   to TagElement at 1"]}, {"root": "INS TextElement:   to TagElement at 1", "operations": ["INS TextElement:   to TagElement at 1"]}]}}, {"MonitorConfig_diff": {"operations": ["Update TextElement: Configuration settings associated with a metric.(20) to Configuration settings associated with a monitor. A config consists of a name that is required", "Insert TextElement: and an optional set of tags.(21) into TagElement(22) at 1", "Insert TextElement:  (275) into TagElement(276) at 1", "Insert TextElement:  (327) into TagElement(328) at 1", "Insert TextElement:  (344) into TagElement(345) at 1"]}}, {"MonitoredCache_cluster": {"actions": [{"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TextElement: for updated stats so that typically it will only need to be done once per sampling interval to TagElement at 2", "INS TextElement: When polling metrics each monitor gets called independently. If we call cache.stats directly to TagElement at 0", "INS TextElement: each monitor call will create a new stats object. This supplier is used to control the calls to TagElement at 1", "INS TextElement: for all exposed monitors. to TagElement at 3", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0"]}]}}, {"MonitoredCache_diff": {"operations": ["Insert Javadoc(31) into FieldDeclaration(41) at 0", "Insert TagElement(30) into Javadoc(31) at 0", "Insert TextElement: When polling metrics each monitor gets called independently. If we call cache.stats directly(26) into TagElement(30) at 0", "Insert TextElement: each monitor call will create a new stats object. This supplier is used to control the calls(27) into TagElement(30) at 1", "Insert TextElement: for updated stats so that typically it will only need to be done once per sampling interval(28) into TagElement(30) at 2", "Insert TextElement: for all exposed monitors.(29) into TagElement(30) at 3"]}}, {"Stopwatch_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS Javadoc to TypeDeclaration: interface at 0", "INS TextElement: Measures the time taken for execution of some code. to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from @return to ", "operations": ["UPD TagElement: @return from @return to "]}, {"root": "UPDATE from Start the stopwatch. to Mark the start time. ", "operations": ["UPD TextElement: Start the stopwatch. from Start the stopwatch. to Mark the start time. "]}, {"root": "UPDATE from Stop the stopwatch. to Mark the end time. ", "operations": ["UPD TextElement: Stop the stopwatch. from Stop the stopwatch. to Mark the end time. "]}, {"root": "UPDATE from Reset the stopwatch so that it can be used again. to Reset the stopwatch so that it can be used again. ", "operations": ["UPD TextElement: Reset the stopwatch so that it can be used again. from Reset the stopwatch so that it can be used again. to Reset the stopwatch so that it can be used again. "]}, {"root": "UPDATE from  duration in specified time unit. to Returns the duration in the specified time unit. ", "operations": ["UPD TextElement:  duration in specified time unit. from  duration in specified time unit. to Returns the duration in the specified time unit. "]}, {"root": "UPDATE from Get the duration in the default TimeUnit which is nano-seconds. to Returns the duration in nanoseconds. ", "operations": ["UPD TextElement: Get the duration in the default TimeUnit which is nano-seconds. from Get the duration in the default TimeUnit which is nano-seconds. to Returns the duration in nanoseconds. "]}, {"root": "DEL TagElement", "operations": ["DEL TextElement: Get the duration of time the stopwatch was running.", "DEL TagElement"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: timeUnit"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}]}}, {"Stopwatch_diff": {"operations": ["Insert Javadoc(6) into TypeDeclaration: interface(43) at 0", "Insert TagElement(5) into Javadoc(6) at 0", "Insert TextElement: Measures the time taken for execution of some code.(4) into TagElement(5) at 0", "Update TagElement: @return(29) to ", "Update TextElement: Start the stopwatch.(6) to Mark the start time. ", "Update TextElement: Stop the stopwatch.(12) to Mark the end time. ", "Update TextElement: Reset the stopwatch so that it can be used again.(18) to Reset the stopwatch so that it can be used again. ", "Update TextElement:  duration in specified time unit.(28) to Returns the duration in the specified time unit. ", "Update TextElement: Get the duration in the default TimeUnit which is nano-seconds.(38) to Returns the duration in nanoseconds. ", "Delete TextElement: Get the duration of time the stopwatch was running.(24)", "Delete TagElement(25)", "Delete SimpleName: timeUnit(26)", "Delete TagElement: @param(27)", "Delete TagElement: @return(40)"]}}, {"Timer_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Monitor type for tracking how much time something is taking. to TagElement at 0", "INS Javadoc to TypeDeclaration: interface at 0"]}, {"root": "UPDATE from The TimeUnit that this timer is stored in. to The time unit reported by this timer.", "operations": ["UPD TextElement: The TimeUnit that this timer is stored in. from The TimeUnit that this timer is stored in. to The time unit reported by this timer."]}]}}, {"Timer_diff": {"operations": ["Insert Javadoc(6) into TypeDeclaration: interface(51) at 0", "Insert TagElement(5) into Javadoc(6) at 0", "Insert TextElement: Monitor type for tracking how much time something is taking.(4) into TagElement(5) at 0", "Update TextElement: The TimeUnit that this timer is stored in.(19) to The time unit reported by this timer."]}}], "commit_stats": [{"total_files": 15, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}