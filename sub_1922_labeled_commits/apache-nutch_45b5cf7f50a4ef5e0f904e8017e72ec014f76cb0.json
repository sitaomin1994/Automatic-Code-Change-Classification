{"application": "apache-nutch", "csha": "45b5cf7f50a4ef5e0f904e8017e72ec014f76cb0", "files": [{"DistributedSearch_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.lang.reflect.Method to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.nutch.ipc.RPC to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS TypeDeclaration: interface to TypeDeclaration: class at 5", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: Protocol to TypeDeclaration: interface at 2", "INS SimpleName: HitContent to SimpleType: HitContent at 0", "INS SimpleName: HitSummarizer to SimpleType: HitSummarizer at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: Searcher to TypeDeclaration: interface at 3", "INS Javadoc to TypeDeclaration: interface at 0", "INS SimpleType: HitContent to TypeDeclaration: interface at 6", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS TextElement: The distributed search protocol.  to TagElement at 0", "INS Modifier: public to TypeDeclaration: interface at 1", "INS SimpleName: getSegmentNames to MethodDeclaration at 2", "INS TypeDeclaration: interface to TypeDeclaration: class at 5", "INS SimpleType: HitSummarizer to TypeDeclaration: interface at 5", "INS SimpleName: HitDetailer to SimpleType: HitDetailer at 0", "INS SimpleType: HitDetailer to TypeDeclaration: interface at 4", "INS SimpleName: Searcher to SimpleType: Searcher at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 6", "operations": ["INS SimpleName: Server to TypeDeclaration: class at 3", "INS TypeDeclaration: class to TypeDeclaration: class at 6", "INS Modifier: static to TypeDeclaration: class at 2", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: Server to MethodDeclaration at 1", "INS Block to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS Modifier: public to TypeDeclaration: class at 1"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 7", "operations": ["INS SimpleName: getDetails to MethodDeclaration at 2", "INS SimpleName: getExplanation to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: static to Initializer at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: Protocol to TypeLiteral at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 3", "INS Block to Initializer at 1", "INS SimpleName: RPC to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS Block to MethodDeclaration at 5", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Protocol to CastExpression at 0", "INS SimpleType: Protocol to MethodDeclaration at 1", "INS SimpleName: getProxy to MethodInvocation at 1", "INS SimpleName: Client to MethodDeclaration at 2", "INS Block to CatchClause at 1", "INS SimpleName: hit to SingleVariableDeclaration at 1", "INS Block to TryStatement at 0", "INS SimpleType: Method to FieldDeclaration at 3", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleType: HitDetails to SingleVariableDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS CatchClause to TryStatement at 1", "INS Modifier: static to FieldDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: Method to FieldDeclaration at 3", "INS SimpleName: DETAILS to VariableDeclarationFragment at 0", "INS SimpleName: SUMMARY to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 2", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS SimpleName: query to MethodInvocation at 2", "INS ThrowStatement to Block at 0", "INS SimpleName: Protocol to SimpleType: Protocol at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS CastExpression to ReturnStatement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Block to MethodDeclaration at 5", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: address to MethodInvocation at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getExplanation to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 17", "INS MethodInvocation to CastExpression at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: Method to FieldDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS Initializer to TypeDeclaration: class at 21", "INS SimpleName: e to ClassInstanceCreation at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 7", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS Modifier: private to FieldDeclaration at 0", "INS TryStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 5", "MOV Javadoc to TypeDeclaration: class at 0", "MOV SimpleType: org.apache.nutch.ipc.Server to VariableDeclarationStatement at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 24", "MOV SimpleType: HitContent to TypeDeclaration: class at 8", "MOV MethodDeclaration to TypeDeclaration: class at 22", "MOV MethodDeclaration to TypeDeclaration: class at 29", "MOV MethodDeclaration to TypeDeclaration: class at 32", "MOV SimpleType: Searcher to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 30", "MOV SimpleType: HitDetailer to TypeDeclaration: class at 6", "MOV MethodDeclaration to TypeDeclaration: class at 37", "MOV SimpleType: HitSummarizer to TypeDeclaration: class at 7", "MOV MethodDeclaration to TypeDeclaration: class at 15", "MOV MethodDeclaration to TypeDeclaration: class at 38", "MOV MethodDeclaration to TypeDeclaration: class at 31", "MOV MethodDeclaration to TypeDeclaration: class at 33", "MOV MethodDeclaration to TypeDeclaration: class at 25", "MOV MethodDeclaration to TypeDeclaration: class at 36", "MOV MethodDeclaration to TypeDeclaration: class at 35", "MOV Javadoc to TypeDeclaration: class at 0", "MOV SimpleType: Runnable to TypeDeclaration: class at 9", "MOV MethodDeclaration to TypeDeclaration: class at 39", "MOV MethodDeclaration to TypeDeclaration: class at 23", "MOV MethodDeclaration to TypeDeclaration: class at 34", "MOV FieldDeclaration to TypeDeclaration: class at 12", "MOV MethodDeclaration to TypeDeclaration: class at 14"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 10", "MOV SimpleName: Param to TypeDeclaration: class at 3", "MOV FieldDeclaration to TypeDeclaration: class at 13", "MOV Modifier: public to TypeDeclaration: class at 1", "MOV FieldDeclaration to TypeDeclaration: class at 11", "MOV Modifier: static to TypeDeclaration: class at 2"]}, {"root": "UPDATE from Param to Client", "operations": ["UPD SimpleName: Param from Param to Client"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV SimpleType: Thread to TypeDeclaration: class at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 18"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ArrayType: String[] to MethodDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ArrayType: InetSocketAddress[] to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ArrayType: InetSocketAddress[] to FieldDeclaration at 1"]}, {"root": "INS PrimitiveType: boolean to FieldDeclaration at 1", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS Modifier: static to FieldDeclaration at 1", "operations": ["INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS Modifier: final to FieldDeclaration at 2", "operations": ["INS Modifier: final to FieldDeclaration at 2"]}, {"root": "UPDATE from File to Method", "operations": ["UPD SimpleName: File from File to Method", "UPD SimpleName: Writable from Writable to Method", "UPD SimpleName: DataInput from DataInput to Method", "UPD SimpleType: Writable from Writable to Method", "UPD SimpleName: Writable from Writable to Method"]}, {"root": "UPDATE from private to final", "operations": ["UPD Modifier: private from private to final"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: private to FieldDeclaration at 2", "MOV SimpleType: NutchBean to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private", "UPD Modifier: public from public to private"]}, {"root": "INS SimpleType: Protocol to MethodDeclaration at 1", "operations": ["INS SimpleType: Protocol to MethodDeclaration at 1"]}, {"root": "INS SimpleName: getRemote to MethodDeclaration at 2", "operations": ["INS SimpleName: getRemote to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Hit to SingleVariableDeclaration at 0", "INS SimpleName: hit to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS CastExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: HitDetails to MethodDeclaration at 1", "MOV SimpleType: IOException to MethodDeclaration at 4", "MOV SimpleName: getDetails to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from get to getRemote", "operations": ["UPD SimpleName: get from get to getRemote", "UPD SimpleName: getDetails from getDetails to getRemote", "UPD SimpleName: call from call to getRemote", "UPD SimpleName: get from get to getRemote", "UPD SimpleName: get from get to getRemote", "UPD SimpleName: get from get to getRemote", "UPD SimpleName: get from get to getRemote"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from stop to close", "operations": ["UPD SimpleName: stop from stop to close"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: bean to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS VariableDeclarationStatement to Block at 5"]}, {"root": "UPDATE from op to defaultAddresses", "operations": ["UPD SimpleName: op from op to defaultAddresses", "UPD SimpleName: defaultaddresses from defaultaddresses to defaultAddresses", "UPD SimpleName: op from op to defaultAddresses"]}, {"root": "UPDATE from first to liveAddresses", "operations": ["UPD SimpleName: first from first to liveAddresses", "UPD SimpleName: addresses from addresses to liveAddresses", "UPD SimpleName: addresses from addresses to liveAddresses", "UPD SimpleName: addresses from addresses to liveAddresses", "UPD SimpleName: addresses from addresses to liveAddresses", "UPD SimpleName: aliveaddresses from aliveaddresses to liveAddresses", "UPD SimpleName: aliveaddresses from aliveaddresses to liveAddresses", "UPD SimpleName: aliveaddresses from aliveaddresses to liveAddresses"]}, {"root": "UPDATE from shouldrun to running", "operations": ["UPD SimpleName: shouldrun from shouldrun to running", "UPD SimpleName: second from second to running"]}, {"root": "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "operations": ["INS BooleanLiteral: true to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from SimpleType: Method", "operations": ["MOV SimpleName: Writable to SimpleType: Method at 0"]}, {"root": "UPDATE from op to GET_SEGMENTS", "operations": ["UPD SimpleName: op from op to GET_SEGMENTS", "UPD SimpleName: value from value to GET_SEGMENTS"]}, {"root": "UPDATE from value to SEARCH", "operations": ["UPD SimpleName: value from value to SEARCH", "UPD SimpleName: value from value to SEARCH"]}, {"root": "MOVE from SimpleType: Method", "operations": ["MOV SimpleName: DataInput to SimpleType: Method at 0"]}, {"root": "MOVE from SimpleType: Method", "operations": ["MOV SimpleName: File to SimpleType: Method at 0"]}, {"root": "UPDATE from Param to Protocol", "operations": ["UPD SimpleName: Param from Param to Protocol", "UPD SimpleName: BytesWritable from BytesWritable to Protocol", "UPD SimpleType: Result from Result to Protocol", "UPD SimpleName: Result from Result to Protocol", "UPD SimpleName: Param from Param to Protocol", "UPD SimpleName: ArrayWritable from ArrayWritable to Protocol", "UPD SimpleName: UTF8 from UTF8 to Protocol", "UPD SimpleName: Result from Result to Protocol"]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: Param to SimpleType: Protocol at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS SimpleName: RPC to MethodInvocation at 0", "INS CastExpression to ReturnStatement at 0", "INS SimpleName: DETAILS to MethodInvocation at 2", "INS ReturnStatement to Block at 3", "INS MethodInvocation to CastExpression at 1"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: hit to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: hit to MethodInvocation at 1", "INS SimpleName: getRemote to MethodInvocation at 0", "INS SimpleName: getSummary to MethodInvocation at 1", "INS SimpleName: query to MethodInvocation at 3", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS CastExpression to ReturnStatement at 0", "INS SimpleName: RPC to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: SUMMARY to MethodInvocation at 2", "INS ReturnStatement to Block at 3"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: getContent to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: getParseData to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: hit to MethodInvocation at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: hit to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getParseText to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: hit to MethodInvocation at 2", "INS SimpleName: getAnchors to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getFetchDate to MethodInvocation at 1"]}, {"root": "UPDATE from Names of the op codes.  to The name of the segments searched by this node. ", "operations": ["UPD TextElement: Names of the op codes.  from Names of the op codes.  to The name of the segments searched by this node. "]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Updates segments to Updates segment names.", "operations": ["UPD TextElement: Updates segments from Updates segments to Updates segment names."]}, {"root": "UPDATE from Writable[] to Object[][]", "operations": ["UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]", "UPD ArrayType: Writable[] from Writable[] to Object[][]"]}, {"root": "UPDATE from Writable[] to String[][]", "operations": ["UPD ArrayType: Writable[] from Writable[] to String[][]"]}, {"root": "INS ArrayType: Hits[] to VariableDeclarationStatement at 0", "operations": ["INS ArrayType: Hits[] to VariableDeclarationStatement at 0", "INS Dimension to ArrayType: Hits[] at 1", "INS SimpleType: Hits to ArrayType: Hits[] at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV VariableDeclarationExpression to ForStatement at 0", "MOV PostfixExpression: ++ to ForStatement at 2", "MOV InfixExpression: < to ForStatement at 1"]}, {"root": "INS Block to ForStatement at 3", "operations": ["INS SimpleName: query to Assignment: = at 1", "INS SimpleName: i to ArrayAccess at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayAccess to ArrayAccess at 0", "INS SimpleName: params to ArrayAccess at 0", "INS ArrayAccess to Assignment: = at 0", "INS Block to ForStatement at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: Hits[] to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: Comparable to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: Comparable to SimpleType: Comparable at 0", "INS SimpleType: Comparable to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Param to Hit", "operations": ["UPD SimpleName: Param from Param to Hit"]}, {"root": "MOVE from SimpleType: Hit", "operations": ["MOV SimpleName: Param to SimpleType: Hit at 0"]}, {"root": "UPDATE from Param to HitDetails", "operations": ["UPD SimpleName: Param from Param to HitDetails"]}, {"root": "MOVE from SimpleType: HitDetails", "operations": ["MOV SimpleName: Param to SimpleType: HitDetails at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: hit to MethodInvocation at 2", "INS SimpleName: hit to MethodInvocation at 1", "INS SimpleName: getDetails to MethodInvocation at 1", "INS SimpleName: getRemote to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS SimpleName: running to WhileStatement at 0", "operations": ["INS SimpleName: running to WhileStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: bean to MethodInvocation at 2", "INS BooleanLiteral: true to MethodInvocation at 5", "INS SimpleName: getServer to MethodInvocation at 1", "INS SimpleName: port to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RPC to MethodInvocation at 0", "INS NumberLiteral: 10 to MethodInvocation at 4"]}, {"root": "UPDATE from op to addresses", "operations": ["UPD SimpleName: op from op to addresses"]}, {"root": "UPDATE from out to updateSegments", "operations": ["UPD SimpleName: out from out to updateSegments"]}, {"root": "UPDATE from first to setDaemon", "operations": ["UPD SimpleName: first from first to setDaemon"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 1", "operations": ["INS BooleanLiteral: true to MethodInvocation at 1"]}, {"root": "UPDATE from out to start", "operations": ["UPD SimpleName: out from out to start"]}, {"root": "UPDATE from statServers to liveServers", "operations": ["UPD SimpleName: statServers from statServers to liveServers", "UPD SimpleName: statServers from statServers to liveServers", "UPD SimpleName: statServers from statServers to liveServers"]}, {"root": "UPDATE from statSegments to liveSegments", "operations": ["UPD SimpleName: statSegments from statSegments to liveSegments", "UPD SimpleName: statSegments from statSegments to liveSegments", "UPD SimpleName: statSegments from statSegments to liveSegments"]}, {"root": "UPDATE from Writable to Object", "operations": ["UPD SimpleName: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleType: Writable from Writable to Object", "UPD SimpleName: Writable from Writable to Object"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "UPDATE from Writable to String", "operations": ["UPD SimpleType: Writable from Writable to String", "UPD SimpleName: Writable from Writable to String"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: String to ArrayType: String[][] at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: String[][] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Dimension to ArrayType: String[][] at 2", "INS SimpleName: RPC to MethodInvocation at 0", "INS ArrayType: String[][] to CastExpression at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: GET_SEGMENTS to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: segments to VariableDeclarationFragment at 0"]}, {"root": "INS ForStatement to Block at 3", "operations": ["INS ForStatement to Block at 3", "INS Block to ForStatement at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS SimpleName: liveAddresses to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from param to segmentHits", "operations": ["UPD SimpleName: param from param to segmentHits"]}, {"root": "INS ArrayCreation to VariableDeclarationFragment at 1", "operations": ["INS ArrayCreation to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: Hits[] at 1", "INS SimpleType: Hits to ArrayType: Hits[] at 0", "INS ArrayType: Hits[] to ArrayCreation at 0", "INS QualifiedName: liveAddresses.length to ArrayCreation at 1"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to CastExpression at 1", "INS SimpleName: SEARCH to MethodInvocation at 2", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: RPC to MethodInvocation at 0"]}, {"root": "UPDATE from minScore to minValue", "operations": ["UPD SimpleName: minScore from minScore to minValue", "UPD SimpleName: minScore from minScore to minValue"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1", "MOV SimpleType: Result to CastExpression at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 3"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ArrayType: HitDetails[] to CastExpression at 0"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: query to Assignment: = at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ArrayType: String[] to CastExpression at 0"]}, {"root": "UPDATE from get to hit", "operations": ["UPD SimpleName: get from get to hit", "UPD SimpleName: param from param to hit", "UPD SimpleName: get from get to hit"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from Param to NoSuchMethodException", "operations": ["UPD SimpleName: Param from Param to NoSuchMethodException", "UPD SimpleType: Param from Param to NoSuchMethodException"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: p to SingleVariableDeclaration at 1", "MOV SimpleType: Param to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from p to e", "operations": ["UPD SimpleName: p from p to e"]}, {"root": "UPDATE from defaultaddresses.length to defaultAddresses.length", "operations": ["UPD QualifiedName: defaultaddresses.length from defaultaddresses.length to defaultAddresses.length"]}, {"root": "INS NumberLiteral: 0 to ArrayCreation at 2", "operations": ["INS NumberLiteral: 0 to ArrayCreation at 2"]}, {"root": "UPDATE from Result to InetSocketAddress", "operations": ["UPD SimpleType: Result from Result to InetSocketAddress", "UPD SimpleName: Result from Result to InetSocketAddress"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: String[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV PostfixExpression: ++ to ForStatement at 2", "MOV VariableDeclarationExpression to ForStatement at 0", "MOV InfixExpression: < to ForStatement at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ArrayType: InetSocketAddress[] to CastExpression at 0"]}, {"root": "UPDATE from \" servers / \" to \" servers, \"", "operations": ["UPD StringLiteral: \" servers / \" from \" servers / \" to \" servers, \""]}, {"root": "UPDATE from \" segments online.\" to \" segments.\"", "operations": ["UPD StringLiteral: \" segments online.\" from \" segments online.\" to \" segments.\""]}, {"root": "UPDATE from Param to Hits", "operations": ["UPD SimpleName: Param from Param to Hits", "UPD SimpleName: Param from Param to Hits"]}, {"root": "MOVE from SimpleType: Hits", "operations": ["MOV SimpleName: Param to SimpleType: Hits at 0"]}, {"root": "UPDATE from addresses.length to liveAddresses.length", "operations": ["UPD QualifiedName: addresses.length from addresses.length to liveAddresses.length"]}, {"root": "INS NumberLiteral: 2 to ArrayCreation at 2", "operations": ["INS NumberLiteral: 2 to ArrayCreation at 2"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ArrayType: Hits[] to CastExpression at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Hits to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from call to RPC", "operations": ["UPD SimpleName: call from call to RPC"]}, {"root": "UPDATE from param to getProxy", "operations": ["UPD SimpleName: param from param to getProxy"]}, {"root": "INS TypeLiteral to MethodInvocation at 2", "operations": ["INS SimpleType: Protocol to TypeLiteral at 0", "INS SimpleName: Protocol to SimpleType: Protocol at 0", "INS TypeLiteral to MethodInvocation at 2"]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: Param to SimpleType: Protocol at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: call to MethodInvocation at 0", "MOV SimpleName: param to MethodInvocation at 1"]}, {"root": "INS NumberLiteral: 1 to ArrayCreation at 2", "operations": ["INS NumberLiteral: 1 to ArrayCreation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: call to MethodInvocation at 1", "MOV SimpleName: addrs to MethodInvocation at 4", "MOV SimpleName: params to MethodInvocation at 3"]}, {"root": "INS NumberLiteral: 2 to ArrayCreation at 2", "operations": ["INS NumberLiteral: 2 to ArrayCreation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 3", "MOV SimpleName: addrs to MethodInvocation at 4", "MOV SimpleName: call to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hit to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleType: Protocol to TypeLiteral at 0", "INS SimpleType: Class to ArrayType: Class[] at 0", "INS ArrayCreation to MethodInvocation at 3", "INS Dimension to ArrayType: Class[] at 1", "INS ArrayType: Class[] to ArrayCreation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS TypeLiteral to MethodInvocation at 0", "INS StringLiteral: \"getSegmentNames\" to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS ArrayInitializer to ArrayCreation at 1", "INS Dimension to ArrayType: Class[] at 1", "INS SimpleType: Class to ArrayType: Class[] at 0", "INS StringLiteral: \"search\" to MethodInvocation at 2", "INS QualifiedName: Integer.TYPE to ArrayInitializer at 1", "INS ArrayCreation to MethodInvocation at 3", "INS SimpleType: Protocol to TypeLiteral at 0", "INS MethodInvocation to Assignment: = at 1", "INS TypeLiteral to MethodInvocation at 0", "INS ArrayType: Class[] to ArrayCreation at 0", "INS TypeLiteral to ArrayInitializer at 0"]}, {"root": "UPDATE from value to DETAILS", "operations": ["UPD SimpleName: value from value to DETAILS"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS TypeLiteral to ArrayInitializer at 0", "INS SimpleType: Class to ArrayType: Class[] at 0", "INS ArrayType: Class[] to ArrayCreation at 0", "INS TypeLiteral to MethodInvocation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS StringLiteral: \"getDetails\" to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS Dimension to ArrayType: Class[] at 1", "INS ArrayCreation to MethodInvocation at 3", "INS SimpleType: Protocol to TypeLiteral at 0"]}, {"root": "UPDATE from value to SUMMARY", "operations": ["UPD SimpleName: value from value to SUMMARY"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: call to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 3", "MOV SimpleName: defaultaddresses to MethodInvocation at 4"]}, {"root": "INS SimpleName: addr to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: addr to VariableDeclarationFragment at 0"]}, {"root": "INS ArrayAccess to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: defaultAddresses to ArrayAccess at 0", "INS ArrayAccess to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ArrayAccess to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from result to segments", "operations": ["UPD SimpleName: result from result to segments"]}, {"root": "INS SimpleName: addr to MethodInvocation at 2", "operations": ["INS SimpleName: addr to MethodInvocation at 2"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "INS ArrayAccess to Assignment: = at 0", "operations": ["INS ArrayAccess to Assignment: = at 0", "INS NumberLiteral: 1 to ArrayAccess at 1"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: numHits to ClassInstanceCreation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: call to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 3", "MOV SimpleName: addresses to MethodInvocation at 4"]}, {"root": "UPDATE from result to hits", "operations": ["UPD SimpleName: result from result to hits", "UPD SimpleName: result from result to hits"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ArrayAccess to VariableDeclarationFragment at 1"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "INS ArrayAccess to Assignment: = at 0", "operations": ["INS NumberLiteral: 0 to ArrayAccess at 1", "INS ArrayAccess to Assignment: = at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ArrayAccess to Assignment: = at 1"]}, {"root": "INS Dimension to ArrayType: Writable[] at 2", "operations": ["INS Dimension to ArrayType: Writable[] at 2"]}, {"root": "INS ArrayAccess to Assignment: = at 0", "operations": ["INS ArrayAccess to Assignment: = at 0", "INS NumberLiteral: 0 to ArrayAccess at 1"]}, {"root": "INS SimpleName: hit to Assignment: = at 1", "operations": ["INS SimpleName: hit to Assignment: = at 1"]}, {"root": "UPDATE from getContent to getMethod", "operations": ["UPD SimpleName: getContent from getContent to getMethod", "UPD SimpleName: getSummary from getSummary to getMethod", "UPD SimpleName: getParseData from getParseData to getMethod", "UPD SimpleName: getAnchors from getAnchors to getMethod"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getSummary to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getContent to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAnchors to MethodInvocation at 1"]}, {"root": "INS TypeLiteral to MethodInvocation at 0", "operations": ["INS SimpleName: Protocol to SimpleType: Protocol at 0", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleType: Protocol to TypeLiteral at 0"]}, {"root": "INS StringLiteral: \"getSummary\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"getSummary\" to MethodInvocation at 3"]}, {"root": "INS ArrayCreation to MethodInvocation at 4", "operations": ["INS ArrayType: Class[] to ArrayCreation at 0", "INS Dimension to ArrayType: Class[] at 1", "INS ArrayInitializer to ArrayCreation at 1", "INS TypeLiteral to ArrayInitializer at 1", "INS ArrayCreation to MethodInvocation at 4", "INS SimpleType: Class to ArrayType: Class[] at 0", "INS TypeLiteral to ArrayInitializer at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: RuntimeException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: InetSocketAddress[] to ArrayCreation at 0"]}, {"root": "INS MethodInvocation to ArrayCreation at 1", "operations": ["INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ArrayCreation at 1", "INS SimpleName: liveAddresses to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: Hits", "operations": ["MOV SimpleName: Param to SimpleType: Hits at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV ArrayAccess to ArrayAccess at 0"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: >= to InfixExpression: || at 1", "INS SimpleName: minValue to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: || to IfStatement at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: compareTo to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SimpleName: minValue to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: >= at 0"]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: Result to SimpleType: Protocol at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV ArrayAccess to ArrayAccess at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV ArrayAccess to ArrayAccess at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV ArrayAccess to ArrayAccess at 0"]}, {"root": "INS SimpleName: addr to MethodInvocation at 3", "operations": ["INS SimpleName: addr to MethodInvocation at 3"]}, {"root": "UPDATE from \"Querying segments from search servers\" to \"Querying segments from search servers...\"", "operations": ["UPD StringLiteral: \"Querying segments from search servers\" from \"Querying segments from search servers\" to \"Querying segments from search servers...\""]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: UTF8 to SimpleType: Protocol at 0"]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: BytesWritable to SimpleType: Protocol at 0"]}, {"root": "MOVE from SimpleType: Protocol", "operations": ["MOV SimpleName: ArrayWritable to SimpleType: Protocol at 0"]}, {"root": "INS SimpleName: addr to InfixExpression: + at 1", "operations": ["INS SimpleName: addr to InfixExpression: + at 1"]}, {"root": "INS SimpleName: addr to InfixExpression: + at 3", "operations": ["INS SimpleName: addr to InfixExpression: + at 3"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ArrayCreation to Assignment: = at 1"]}, {"root": "UPDATE from HitDetails to Class", "operations": ["UPD SimpleName: HitDetails from HitDetails to Class", "UPD SimpleName: HitDetails from HitDetails to Class", "UPD SimpleName: HitDetails from HitDetails to Class", "UPD SimpleName: HitDetails from HitDetails to Class"]}, {"root": "MOVE from SimpleType: Class", "operations": ["MOV SimpleName: HitDetails to SimpleType: Class at 0"]}, {"root": "MOVE from SimpleType: Class", "operations": ["MOV SimpleName: HitDetails to SimpleType: Class at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: Query to TypeLiteral at 0"]}, {"root": "MOVE from SimpleType: Class", "operations": ["MOV SimpleName: HitDetails to SimpleType: Class at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: Hit to TypeLiteral at 0"]}, {"root": "MOVE from SimpleType: Class", "operations": ["MOV SimpleName: HitDetails to SimpleType: Class at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: HitDetails to TypeLiteral at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: Query to TypeLiteral at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getScore to MethodInvocation at 1", "MOV SimpleName: h to MethodInvocation at 0"]}, {"root": "UPDATE from getScore to getSite", "operations": ["UPD SimpleName: getScore from getScore to getSite", "UPD SimpleName: getScore from getScore to getSite"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: Server", "DEL SimpleName: port", "DEL SimpleName: directory", "DEL SimpleName: Server", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Server", "DEL VariableDeclarationStatement", "DEL SimpleName: Server"]}, {"root": "DEL PrimitiveType: byte", "operations": ["DEL PrimitiveType: byte"]}, {"root": "DEL SimpleType: Writable", "operations": ["DEL SimpleName: Writable", "DEL SimpleType: Writable"]}, {"root": "DEL SimpleType: Writable", "operations": ["DEL SimpleName: Writable", "DEL SimpleType: Writable"]}, {"root": "DEL SimpleName: writeByte", "operations": ["DEL SimpleName: writeByte"]}, {"root": "DEL SimpleName: op", "operations": ["DEL SimpleName: op"]}, {"root": "DEL SimpleName: write", "operations": ["DEL SimpleName: write"]}, {"root": "DEL SimpleName: out", "operations": ["DEL SimpleName: out"]}, {"root": "DEL SimpleName: second", "operations": ["DEL SimpleName: second"]}, {"root": "DEL SimpleName: write", "operations": ["DEL SimpleName: write"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL CastExpression", "DEL SimpleName: bean", "DEL SimpleType: HitDetails", "DEL SimpleType: UTF8", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: p.first", "DEL SimpleType: Query", "DEL QualifiedName: p.second", "DEL SimpleName: Query"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: BytesWritable", "DEL CastExpression", "DEL QualifiedName: p.first", "DEL SimpleType: HitDetails", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: bean"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MethodInvocation", "DEL QualifiedName: p.first", "DEL SimpleType: HitDetails", "DEL SimpleName: bean", "DEL SimpleType: ArrayWritable", "DEL ClassInstanceCreation", "DEL CastExpression"]}, {"root": "DEL SimpleName: bean", "operations": ["DEL SimpleName: bean"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: HitDetails", "DEL QualifiedName: p.first", "DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: OP_SEGMENTS", "DEL SimpleType: Param", "DEL SimpleName: param", "DEL SimpleType: Param", "DEL VariableDeclarationFragment", "DEL SimpleName: NullWritable", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: Param", "DEL MethodInvocation", "DEL SimpleName: Param"]}, {"root": "DEL ForStatement", "operations": ["DEL Assignment: =", "DEL Block", "DEL ForStatement", "DEL ExpressionStatement", "DEL SimpleName: param"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: Result", "DEL CastExpression", "DEL SimpleType: Result"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: i", "DEL ArrayAccess", "DEL SimpleName: defaultaddresses"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: defaultaddresses", "DEL SimpleName: i"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: i", "DEL SimpleName: defaultaddresses"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: defaultaddresses", "DEL SimpleName: i", "DEL ArrayAccess"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: ArrayWritable", "DEL ParenthesizedExpression", "DEL CastExpression", "DEL SimpleType: ArrayWritable", "DEL SimpleName: toStrings", "DEL SimpleName: segments", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL QualifiedName: result.value"]}, {"root": "DEL ForStatement", "operations": ["DEL ForStatement", "DEL Block"]}, {"root": "DEL SimpleName: addresses", "operations": ["DEL SimpleName: addresses"]}, {"root": "DEL SimpleName: statServers", "operations": ["DEL SimpleName: statServers"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ArrayCreation", "DEL SimpleName: segmentHits", "DEL QualifiedName: addresses.length", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL SimpleType: Param", "operations": ["DEL SimpleType: Param"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: IntWritable", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: OP_SEARCH", "DEL SimpleType: Param", "DEL SimpleName: query", "DEL SimpleType: IntWritable", "DEL SimpleName: numHits"]}, {"root": "DEL SimpleName: param", "operations": ["DEL SimpleName: param"]}, {"root": "DEL VariableDeclarationExpression", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL VariableDeclarationExpression"]}, {"root": "DEL InfixExpression: <", "operations": ["DEL InfixExpression: <", "DEL SimpleName: i", "DEL QualifiedName: params.length"]}, {"root": "DEL PostfixExpression: ++", "operations": ["DEL SimpleName: i", "DEL PostfixExpression: ++"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL ArrayType: Writable[]", "operations": ["DEL SimpleType: Writable", "DEL SimpleName: Writable", "DEL Dimension", "DEL ArrayType: Writable[]"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL PrimitiveType: float", "operations": ["DEL PrimitiveType: float"]}, {"root": "DEL NumberLiteral: 0.0f", "operations": ["DEL NumberLiteral: 0.0f"]}, {"root": "DEL SimpleType: Result", "operations": ["DEL SimpleName: Result", "DEL SimpleType: Result"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: Result", "DEL CastExpression", "DEL SimpleType: Result"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL QualifiedName: result.value", "DEL SimpleName: Hits", "DEL SimpleName: hits", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL SimpleType: Hits", "DEL VariableDeclarationStatement", "DEL SimpleName: Hits", "DEL SimpleType: Hits"]}, {"root": "DEL InfixExpression: >=", "operations": ["DEL MethodInvocation", "DEL SimpleName: minScore", "DEL InfixExpression: >="]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: h", "DEL SimpleName: getScore"]}, {"root": "DEL SimpleName: getExplanation", "operations": ["DEL SimpleName: getExplanation"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: Param", "DEL CastExpression", "DEL SimpleName: OP_EXPLAIN", "DEL SimpleName: toString", "DEL SimpleType: Param", "DEL SimpleName: Result", "DEL VariableDeclarationFragment", "DEL SimpleName: query", "DEL SimpleName: param", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: result", "DEL Block", "DEL SimpleType: Result", "DEL ReturnStatement", "DEL SimpleName: hit", "DEL VariableDeclarationStatement", "DEL QualifiedName: result.value", "DEL VariableDeclarationStatement"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: HitDetails", "DEL CastExpression", "DEL SimpleType: HitDetails", "DEL QualifiedName: result.value"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: Param", "DEL SimpleType: Param", "DEL ClassInstanceCreation", "DEL SimpleName: OP_DETAILS"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Writable", "DEL SimpleName: writables", "DEL MethodInvocation", "DEL SimpleType: Writable", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL ArrayType: Writable[]"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: HitDetails", "DEL VariableDeclarationStatement", "DEL ArrayCreation", "DEL QualifiedName: writables.length", "DEL ArrayType: HitDetails[]", "DEL SimpleName: HitDetails", "DEL Dimension", "DEL SimpleName: results", "DEL VariableDeclarationFragment"]}, {"root": "DEL ForStatement", "operations": ["DEL VariableDeclarationExpression", "DEL NumberLiteral: 0", "DEL SimpleType: Result", "DEL SimpleName: writables", "DEL ArrayAccess", "DEL SimpleType: HitDetails", "DEL QualifiedName: results.length", "DEL Assignment: =", "DEL SimpleName: results", "DEL CastExpression", "DEL ExpressionStatement", "DEL ForStatement", "DEL InfixExpression: <", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: HitDetails", "DEL SimpleName: i", "DEL SimpleName: value", "DEL SimpleName: Result", "DEL SimpleName: i", "DEL FieldAccess", "DEL SimpleName: i", "DEL CastExpression", "DEL ArrayAccess", "DEL SimpleName: i", "DEL PostfixExpression: ++", "DEL ParenthesizedExpression"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: results", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Param", "DEL SimpleType: Param", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: Param", "DEL SimpleName: OP_SUMMARY", "DEL SimpleName: query", "DEL VariableDeclarationStatement", "DEL SimpleName: hit", "DEL SimpleType: Param", "DEL SimpleName: param"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Result", "DEL MethodInvocation", "DEL SimpleName: address", "DEL VariableDeclarationFragment", "DEL SimpleName: call", "DEL VariableDeclarationStatement", "DEL SimpleType: Result", "DEL SimpleName: Result", "DEL SimpleName: result", "DEL SimpleName: Result", "DEL SimpleName: param", "DEL CastExpression"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: result.value", "DEL SimpleName: toString", "DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: Param", "DEL SimpleType: Param", "DEL SimpleName: hit", "DEL SimpleName: OP_SUMMARY", "DEL ClassInstanceCreation", "DEL SimpleName: query"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: Writable", "DEL ArrayType: Writable[]", "DEL VariableDeclarationStatement", "DEL SimpleName: results", "DEL SimpleType: Writable"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ArrayCreation", "DEL ArrayType: String[]", "DEL QualifiedName: results.length", "DEL VariableDeclarationStatement", "DEL SimpleName: strings", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL Dimension", "DEL SimpleName: String"]}, {"root": "DEL ForStatement", "operations": ["DEL PostfixExpression: ++", "DEL SimpleName: results", "DEL Assignment: =", "DEL ForStatement", "DEL CastExpression", "DEL PrimitiveType: int", "DEL ArrayAccess", "DEL SimpleName: i", "DEL SimpleType: Result", "DEL ArrayAccess", "DEL SimpleName: i", "DEL ArrayAccess", "DEL SimpleName: i", "DEL ParenthesizedExpression", "DEL VariableDeclarationExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: strings", "DEL FieldAccess", "DEL SimpleName: toString", "DEL Block", "DEL NullLiteral", "DEL QualifiedName: results.length", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: i", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL NumberLiteral: 0", "DEL IfStatement", "DEL SimpleName: Result", "DEL InfixExpression: !=", "DEL InfixExpression: <", "DEL SimpleName: results"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: strings", "DEL ReturnStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Param", "DEL SimpleName: param", "DEL SimpleName: Param", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: OP_CONTENT", "DEL SimpleType: Param", "DEL SimpleName: hit", "DEL SimpleType: Param", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: InetSocketAddress", "DEL SimpleName: InetSocketAddress", "DEL SimpleName: InetSocketAddress", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: segmentToAddress", "DEL SimpleName: address", "DEL VariableDeclarationStatement", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL CastExpression", "DEL StringLiteral: \"segment\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Result", "DEL SimpleName: call", "DEL SimpleName: result", "DEL SimpleType: Result", "DEL VariableDeclarationFragment", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: address", "DEL SimpleName: param"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL QualifiedName: result.value", "DEL SimpleName: BytesWritable", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleType: BytesWritable", "DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: Param", "DEL SimpleName: Param", "DEL VariableDeclarationFragment", "DEL SimpleType: Param", "DEL SimpleName: OP_PARSEDATA", "DEL SimpleType: Param", "DEL VariableDeclarationStatement", "DEL SimpleName: hit", "DEL SimpleName: param"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL CastExpression", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: getValue", "DEL SimpleName: InetSocketAddress", "DEL VariableDeclarationStatement", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: InetSocketAddress", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: address", "DEL VariableDeclarationFragment", "DEL SimpleName: segmentToAddress", "DEL StringLiteral: \"segment\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: call", "DEL SimpleName: result", "DEL MethodInvocation", "DEL SimpleName: Result", "DEL VariableDeclarationStatement", "DEL SimpleName: address", "DEL SimpleType: Result", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL CastExpression", "DEL SimpleName: param", "DEL VariableDeclarationFragment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL QualifiedName: result.value", "DEL CastExpression", "DEL SimpleName: ParseData", "DEL SimpleType: ParseData"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Param", "DEL ClassInstanceCreation", "DEL SimpleName: param", "DEL SimpleName: Param", "DEL SimpleName: OP_PARSETEXT", "DEL VariableDeclarationStatement", "DEL SimpleType: Param", "DEL VariableDeclarationFragment", "DEL SimpleType: Param", "DEL SimpleName: hit"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL StringLiteral: \"segment\"", "DEL CastExpression", "DEL SimpleName: InetSocketAddress", "DEL SimpleType: InetSocketAddress", "DEL SimpleType: InetSocketAddress", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: InetSocketAddress", "DEL SimpleName: address", "DEL SimpleName: segmentToAddress"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Result", "DEL MethodInvocation", "DEL SimpleName: address", "DEL VariableDeclarationStatement", "DEL CastExpression", "DEL SimpleType: Result", "DEL VariableDeclarationFragment", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL SimpleName: call", "DEL SimpleName: param", "DEL SimpleName: result"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL QualifiedName: result.value", "DEL CastExpression", "DEL SimpleName: ParseText", "DEL SimpleType: ParseText"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: OP_ANCHORS", "DEL SimpleName: Param", "DEL SimpleType: Param", "DEL ClassInstanceCreation", "DEL SimpleName: Param", "DEL VariableDeclarationStatement", "DEL SimpleName: param", "DEL SimpleName: hit", "DEL SimpleType: Param"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: InetSocketAddress", "DEL SimpleName: getValue", "DEL CastExpression", "DEL MethodInvocation", "DEL StringLiteral: \"segment\"", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: address", "DEL MethodInvocation", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: segmentToAddress", "DEL SimpleName: InetSocketAddress"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: address", "DEL SimpleType: Result", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: param", "DEL SimpleName: call", "DEL CastExpression", "DEL SimpleType: Result", "DEL SimpleName: Result", "DEL SimpleName: result", "DEL SimpleName: Result"]}, {"root": "DEL ReturnStatement", "operations": ["DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: toStrings", "DEL QualifiedName: result.value", "DEL ParenthesizedExpression", "DEL SimpleName: ArrayWritable", "DEL ReturnStatement", "DEL SimpleType: ArrayWritable"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Param", "DEL VariableDeclarationStatement", "DEL SimpleName: Param", "DEL SimpleType: Param", "DEL SimpleName: OP_FETCHDATE", "DEL SimpleName: hit", "DEL SimpleName: param", "DEL ClassInstanceCreation", "DEL SimpleType: Param", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: getValue", "DEL MethodInvocation", "DEL SimpleName: InetSocketAddress", "DEL SimpleType: InetSocketAddress", "DEL StringLiteral: \"segment\"", "DEL CastExpression", "DEL SimpleName: address", "DEL SimpleName: segmentToAddress", "DEL SimpleType: InetSocketAddress", "DEL SimpleName: InetSocketAddress", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Result", "DEL MethodInvocation", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL SimpleName: address", "DEL VariableDeclarationStatement", "DEL SimpleName: call", "DEL SimpleName: result", "DEL CastExpression", "DEL SimpleName: param", "DEL SimpleType: Result", "DEL VariableDeclarationFragment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleType: LongWritable", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL ReturnStatement", "DEL QualifiedName: result.value", "DEL SimpleName: LongWritable", "DEL CastExpression"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: shouldrun", "DEL BooleanLiteral: true", "DEL Assignment: ="]}, {"root": "DEL ArrayCreation", "operations": ["DEL ArrayType: InetSocketAddress[]", "DEL ArrayCreation", "DEL SimpleType: InetSocketAddress", "DEL NumberLiteral: 0", "DEL Dimension", "DEL SimpleName: InetSocketAddress"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SuperMethodInvocation", "DEL SimpleName: stop", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: info", "DEL MethodInvocation", "DEL StringLiteral: \"stopping watchdog.\"", "DEL SimpleName: LOG", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: watchdog", "operations": ["DEL SimpleName: watchdog"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: OP_SEGMENTS", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL Modifier: private", "DEL PrimitiveType: byte", "DEL CastExpression", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL CastExpression", "DEL NumberLiteral: 1", "DEL PrimitiveType: byte", "DEL Modifier: static", "DEL SimpleName: OP_SEARCH", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL Modifier: private", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: static", "DEL Modifier: final", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 2", "DEL PrimitiveType: byte", "DEL Modifier: private", "DEL SimpleName: OP_EXPLAIN", "DEL FieldDeclaration", "DEL PrimitiveType: byte"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL CastExpression", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL SimpleName: OP_DETAILS", "DEL FieldDeclaration", "DEL Modifier: static", "DEL NumberLiteral: 3", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL Modifier: final", "DEL CastExpression", "DEL SimpleName: OP_SUMMARY", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 4"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: byte", "DEL Modifier: final", "DEL SimpleName: OP_CONTENT", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL Modifier: private", "DEL Modifier: static", "DEL PrimitiveType: byte", "DEL NumberLiteral: 5"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL PrimitiveType: byte", "DEL CastExpression", "DEL Modifier: private", "DEL FieldDeclaration", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL NumberLiteral: 6", "DEL SimpleName: OP_ANCHORS"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL Modifier: private", "DEL FieldDeclaration", "DEL Modifier: final", "DEL NumberLiteral: 7", "DEL SimpleName: OP_PARSEDATA", "DEL PrimitiveType: byte", "DEL CastExpression"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL Modifier: static", "DEL NumberLiteral: 8", "DEL Modifier: final", "DEL CastExpression", "DEL Modifier: private", "DEL SimpleName: OP_PARSETEXT"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: OP_FETCHDATE", "DEL PrimitiveType: byte", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL CastExpression", "DEL Modifier: private", "DEL NumberLiteral: 9", "DEL Modifier: static", "DEL PrimitiveType: byte"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL NumberLiteral: 10", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL ArrayCreation", "DEL Dimension", "DEL SimpleName: String", "DEL Modifier: final", "DEL ArrayType: String[]", "DEL Javadoc", "DEL Modifier: private", "DEL SimpleType: String", "DEL SimpleName: OP_NAMES"]}, {"root": "DEL Initializer", "operations": ["DEL Assignment: =", "DEL StringLiteral: \"getAnchors\"", "DEL Assignment: =", "DEL StringLiteral: \"getContent\"", "DEL SimpleName: OP_SUMMARY", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: OP_NAMES", "DEL ExpressionStatement", "DEL Assignment: =", "DEL StringLiteral: \"getSegmentNames\"", "DEL StringLiteral: \"getFetchDate\"", "DEL ArrayAccess", "DEL SimpleName: OP_NAMES", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Assignment: =", "DEL StringLiteral: \"search\"", "DEL ArrayAccess", "DEL StringLiteral: \"getSummary\"", "DEL SimpleName: OP_DETAILS", "DEL SimpleName: OP_PARSETEXT", "DEL ArrayAccess", "DEL Modifier: static", "DEL SimpleName: OP_PARSEDATA", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: OP_EXPLAIN", "DEL ExpressionStatement", "DEL SimpleName: OP_NAMES", "DEL SimpleName: OP_NAMES", "DEL SimpleName: OP_NAMES", "DEL SimpleName: OP_NAMES", "DEL ArrayAccess", "DEL SimpleName: OP_NAMES", "DEL SimpleName: OP_SEGMENTS", "DEL SimpleName: OP_SEARCH", "DEL SimpleName: OP_NAMES", "DEL StringLiteral: \"getDetails\"", "DEL ArrayAccess", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: OP_NAMES", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Assignment: =", "DEL StringLiteral: \"getExplanation\"", "DEL StringLiteral: \"getParseText\"", "DEL Assignment: =", "DEL ArrayAccess", "DEL SimpleName: OP_CONTENT", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: OP_FETCHDATE", "DEL Assignment: =", "DEL SimpleName: OP_NAMES", "DEL SimpleName: OP_ANCHORS", "DEL Assignment: =", "DEL Initializer", "DEL StringLiteral: \"getParseData\""]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: OP_SEGMENTS", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SwitchCase", "DEL SimpleName: second", "DEL SwitchCase", "DEL StringLiteral: \"Unknown op code: \"", "DEL PrimitiveType: void", "DEL SimpleName: first", "DEL ClassInstanceCreation", "DEL SimpleType: Hit", "DEL BreakStatement", "DEL ThisExpression", "DEL SimpleName: Server", "DEL SimpleName: readFields", "DEL SimpleName: first", "DEL ClassInstanceCreation", "DEL SimpleName: first", "DEL ExpressionStatement", "DEL SwitchCase", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL FieldAccess", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: OP_SUMMARY", "DEL Assignment: =", "DEL SwitchCase", "DEL SimpleName: IntWritable", "DEL Modifier: public", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: Writable", "DEL BreakStatement", "DEL SimpleName: Param", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: first", "DEL Block", "DEL Assignment: =", "DEL TagElement", "DEL SimpleType: IOException", "DEL SimpleType: DataInput", "DEL ClassInstanceCreation", "DEL SimpleName: NullWritable", "DEL SimpleName: second", "DEL SingleVariableDeclaration", "DEL TagElement: @link", "DEL Modifier: public", "DEL SimpleName: OP_DETAILS", "DEL Assignment: =", "DEL BreakStatement", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL SimpleType: Writable", "DEL Assignment: =", "DEL SimpleName: NullWritable", "DEL SimpleType: Writable", "DEL SimpleName: HitDetails", "DEL SimpleType: Query", "DEL ExpressionStatement", "DEL SimpleName: first", "DEL MethodDeclaration", "DEL SimpleName: in", "DEL MethodInvocation", "DEL SimpleName: first", "DEL BreakStatement", "DEL SimpleName: OP_PARSETEXT", "DEL ExpressionStatement", "DEL SimpleName: readFields", "DEL SimpleName: OP_CONTENT", "DEL SwitchCase", "DEL ExpressionStatement", "DEL SimpleName: OP_SEARCH", "DEL SimpleName: Writable", "DEL Assignment: =", "DEL SimpleName: OP_ANCHORS", "DEL ClassInstanceCreation", "DEL SimpleName: op", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: op", "DEL ClassInstanceCreation", "DEL SimpleName: second", "DEL SimpleName: IOException", "DEL ClassInstanceCreation", "DEL SimpleName: op", "DEL ExpressionStatement", "DEL SimpleName: first", "DEL SimpleType: Writable", "DEL MethodInvocation", "DEL SimpleName: Param", "DEL MethodInvocation", "DEL FieldAccess", "DEL PrimitiveType: byte", "DEL SimpleName: in", "DEL Assignment: =", "DEL SimpleName: Param", "DEL SimpleName: first", "DEL SimpleType: DataOutput", "DEL Assignment: =", "DEL SimpleName: NullWritable", "DEL SwitchCase", "DEL SimpleName: first", "DEL SimpleName: OP_EXPLAIN", "DEL SwitchCase", "DEL SimpleName: second", "DEL SimpleName: get", "DEL SimpleName: Hit", "DEL ExpressionStatement", "DEL SimpleName: first", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SwitchCase", "DEL SimpleName: op", "DEL SimpleName: second", "DEL SingleVariableDeclaration", "DEL SimpleName: NullWritable", "DEL SimpleName: out", "DEL SwitchCase", "DEL BreakStatement", "DEL SimpleName: second", "DEL SwitchCase", "DEL SimpleName: get", "DEL SimpleName: get", "DEL Block", "DEL InfixExpression: +", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL TextElement: The parameter passed with IPC requests.  Public only so that ", "DEL SimpleType: Writable", "DEL SimpleName: first", "DEL SimpleType: IntWritable", "DEL ClassInstanceCreation", "DEL SimpleType: HitDetails", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: second", "DEL MethodInvocation", "DEL SimpleName: OP_PARSEDATA", "DEL SimpleName: first", "DEL SimpleName: in", "DEL SimpleName: write", "DEL SimpleName: in", "DEL SimpleName: readFields", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodDeclaration", "DEL Assignment: =", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SwitchStatement", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: DataOutput", "DEL SimpleName: DataInput", "DEL ExpressionStatement", "DEL Assignment: =", "DEL PrimitiveType: byte", "DEL ConstructorInvocation", "DEL Assignment: =", "DEL SimpleName: second", "DEL SimpleName: Writable", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: readByte", "DEL SimpleName: Query", "DEL ClassInstanceCreation", "DEL Block", "DEL BreakStatement", "DEL SimpleName: Writable", "DEL SimpleName: op", "DEL SimpleName: second", "DEL SimpleName: get", "DEL SimpleName: OP_FETCHDATE", "DEL ThisExpression", "DEL Javadoc", "DEL ExpressionStatement", "DEL SimpleName: op", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: second", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL TextElement:  can construct instances. ", "DEL MethodInvocation", "DEL SwitchCase", "DEL SimpleName: NullWritable"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Assignment: =", "DEL SimpleName: OP_FETCHDATE", "DEL ThisExpression", "DEL SimpleName: UTF8", "DEL SwitchCase", "DEL InfixExpression: +", "DEL Modifier: static", "DEL SwitchCase", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: UTF8", "DEL Modifier: public", "DEL Assignment: =", "DEL BreakStatement", "DEL SimpleType: DataInput", "DEL SimpleName: in", "DEL ThrowStatement", "DEL SimpleName: Writable", "DEL Block", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleType: HitDetails", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL Block", "DEL BreakStatement", "DEL SwitchCase", "DEL SimpleName: readFields", "DEL SimpleType: DataOutput", "DEL SimpleName: UTF8", "DEL ClassInstanceCreation", "DEL SimpleName: value", "DEL SimpleName: OP_DETAILS", "DEL SimpleName: LongWritable", "DEL SimpleName: RuntimeException", "DEL SimpleName: OP_EXPLAIN", "DEL TypeLiteral", "DEL TagElement: @link", "DEL Assignment: =", "DEL SimpleName: op", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: value", "DEL SimpleName: op", "DEL SimpleName: OP_SEGMENTS", "DEL FieldAccess", "DEL SimpleType: ParseData", "DEL SimpleName: BytesWritable", "DEL SimpleName: value", "DEL SimpleName: ParseText", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleType: ParseText", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleType: UTF8", "DEL ClassInstanceCreation", "DEL SwitchCase", "DEL SimpleName: write", "DEL SimpleName: out", "DEL SimpleName: Result", "DEL SwitchCase", "DEL SimpleName: OP_CONTENT", "DEL SimpleName: value", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleType: ArrayWritable", "DEL SimpleName: OP_ANCHORS", "DEL SimpleName: op", "DEL SwitchCase", "DEL Assignment: =", "DEL StringLiteral: \"Unknown op code: \"", "DEL PrimitiveType: byte", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleType: ArrayWritable", "DEL Assignment: =", "DEL SimpleType: LongWritable", "DEL SimpleName: out", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL SimpleName: readByte", "DEL MethodInvocation", "DEL SimpleType: UTF8", "DEL SimpleName: in", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SwitchStatement", "DEL SimpleName: UTF8", "DEL SimpleName: OP_PARSEDATA", "DEL ExpressionStatement", "DEL SimpleType: UTF8", "DEL SimpleType: Writable", "DEL BreakStatement", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleName: OP_PARSETEXT", "DEL ExpressionStatement", "DEL BreakStatement", "DEL BreakStatement", "DEL SwitchCase", "DEL FieldAccess", "DEL SimpleType: BytesWritable", "DEL Modifier: private", "DEL SimpleName: value", "DEL SimpleName: in", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL BreakStatement", "DEL SimpleType: RuntimeException", "DEL Assignment: =", "DEL TextElement: The parameter returned with IPC responses.  Public only so that ", "DEL TagElement", "DEL SimpleName: Client", "DEL SimpleName: value", "DEL ClassInstanceCreation", "DEL SimpleName: OP_SEARCH", "DEL SimpleName: HitDetails", "DEL BreakStatement", "DEL SimpleName: op", "DEL SimpleType: Writable", "DEL SimpleName: write", "DEL SimpleName: DataOutput", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: ParseData", "DEL SimpleName: op", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL SimpleName: writeByte", "DEL SimpleName: value", "DEL SimpleName: ArrayWritable", "DEL TypeDeclaration: class", "DEL SimpleName: value", "DEL SimpleName: ArrayWritable", "DEL TextElement:  can construct instances. ", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleName: Result", "DEL SimpleName: readFields", "DEL SimpleName: value", "DEL SimpleName: OP_SUMMARY", "DEL Block", "DEL SimpleName: op", "DEL ThisExpression", "DEL BreakStatement", "DEL ClassInstanceCreation", "DEL SimpleName: value", "DEL SimpleType: UTF8", "DEL Assignment: =", "DEL BreakStatement", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SwitchCase", "DEL SwitchCase", "DEL SwitchCase", "DEL ClassInstanceCreation", "DEL SwitchCase", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL SimpleName: out", "DEL Modifier: public", "DEL SimpleName: Result", "DEL BreakStatement", "DEL SimpleName: op", "DEL ExpressionStatement", "DEL SimpleName: value"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: OP_SEARCH", "DEL CastExpression", "DEL InfixExpression: !=", "DEL SwitchCase", "DEL SimpleType: File", "DEL StringLiteral: \"Unknown op code: \"", "DEL SimpleName: buffer", "DEL SimpleName: Query", "DEL VariableDeclarationStatement", "DEL SimpleName: info", "DEL SimpleName: bean", "DEL FieldAccess", "DEL SimpleName: currentThread", "DEL SimpleName: OP_PARSETEXT", "DEL SimpleType: Query", "DEL SimpleName: NullWritable", "DEL SimpleName: append", "DEL SimpleType: ArrayWritable", "DEL SimpleName: OP_ANCHORS", "DEL VariableDeclarationStatement", "DEL QualifiedName: p.first", "DEL SimpleName: getParseText", "DEL BreakStatement", "DEL SimpleName: port", "DEL SimpleName: buffer", "DEL IfStatement", "DEL BreakStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleType: Result", "DEL SimpleType: StringBuffer", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleType: Param", "DEL SimpleName: value", "DEL BreakStatement", "DEL SimpleName: Writable", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL SimpleName: Result", "DEL Modifier: private", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: p.first", "DEL SimpleName: NullWritable", "DEL Modifier: public", "DEL SimpleName: directory", "DEL SimpleName: bean", "DEL SimpleName: buffer", "DEL SimpleType: HitDetails", "DEL ClassInstanceCreation", "DEL SimpleName: getName", "DEL ExpressionStatement", "DEL SimpleType: Writable", "DEL SwitchCase", "DEL SwitchCase", "DEL MethodInvocation", "DEL SimpleName: append", "DEL SimpleName: StringBuffer", "DEL SimpleName: getExplanation", "DEL MethodDeclaration", "DEL StringLiteral: \"(\"", "DEL SimpleName: getDetails", "DEL VariableDeclarationFragment", "DEL QualifiedName: p.op", "DEL QualifiedName: p.second", "DEL SingleVariableDeclaration", "DEL SimpleName: OP_PARSEDATA", "DEL InfixExpression: !=", "DEL SimpleName: OP_SUMMARY", "DEL ExpressionStatement", "DEL SimpleName: buffer", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: p.op", "DEL QualifiedName: p.second", "DEL SimpleName: RuntimeException", "DEL SimpleName: ArrayWritable", "DEL SimpleName: Hit", "DEL SimpleName: value", "DEL Block", "DEL Assignment: =", "DEL SimpleName: bean", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: logRequest", "DEL BreakStatement", "DEL SimpleName: HitDetails", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL Modifier: public", "DEL Modifier: static", "DEL SimpleName: HitDetails", "DEL MethodInvocation", "DEL QualifiedName: p.op", "DEL SimpleType: Hit", "DEL Modifier: static", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL BreakStatement", "DEL QualifiedName: p.second", "DEL SimpleName: Param", "DEL CastExpression", "DEL SimpleName: buffer", "DEL SimpleName: bean", "DEL MethodInvocation", "DEL TextElement: directory, listening on the named port. ", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL SimpleName: OP_CONTENT", "DEL SimpleName: Param", "DEL SimpleType: Param", "DEL SimpleName: p", "DEL Javadoc", "DEL SimpleName: OP_SEGMENTS", "DEL SimpleName: value", "DEL StringLiteral: \": \"", "DEL SimpleName: buffer", "DEL SimpleName: Server", "DEL Assignment: =", "DEL QualifiedName: p.second", "DEL SimpleName: bean", "DEL MethodInvocation", "DEL IfStatement", "DEL SuperConstructorInvocation", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: StringBuffer", "DEL SwitchCase", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL ArrayAccess", "DEL SimpleName: buffer", "DEL SwitchStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL BreakStatement", "DEL ParenthesizedExpression", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: p.first", "DEL QualifiedName: p.first", "DEL MethodDeclaration", "DEL SimpleType: Writable", "DEL CastExpression", "DEL SimpleName: IntWritable", "DEL BreakStatement", "DEL SimpleName: buffer", "DEL FieldDeclaration", "DEL SwitchCase", "DEL SimpleType: Hit", "DEL SimpleName: buffer", "DEL SimpleType: LongWritable", "DEL SimpleName: getFetchDate", "DEL SimpleName: bean", "DEL ExpressionStatement", "DEL SimpleName: bean", "DEL MethodInvocation", "DEL SimpleName: append", "DEL SimpleName: value", "DEL SwitchCase", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: Query", "DEL SingleVariableDeclaration", "DEL StringLiteral: \", \"", "DEL SimpleName: UTF8", "DEL CastExpression", "DEL SimpleName: buffer", "DEL SimpleName: value", "DEL Assignment: =", "DEL Block", "DEL TypeLiteral", "DEL SwitchCase", "DEL ExpressionStatement", "DEL SwitchCase", "DEL SimpleName: get", "DEL SwitchCase", "DEL SimpleName: toString", "DEL QualifiedName: p.first", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: logRequest", "DEL SimpleName: bean", "DEL ExpressionStatement", "DEL SimpleType: StringBuffer", "DEL SimpleType: Writable", "DEL SimpleName: Param", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleType: Param", "DEL Modifier: public", "DEL ExpressionStatement", "DEL CastExpression", "DEL SimpleName: OP_FETCHDATE", "DEL SimpleName: call", "DEL SimpleName: append", "DEL QualifiedName: p.first", "DEL SimpleName: OP_DETAILS", "DEL InfixExpression: +", "DEL BreakStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: RuntimeException", "DEL MethodInvocation", "DEL SimpleType: HitDetails", "DEL SimpleName: param", "DEL BreakStatement", "DEL SimpleName: p", "DEL SingleVariableDeclaration", "DEL BreakStatement", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SwitchCase", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: LongWritable", "DEL SimpleName: Server", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL SimpleName: param", "DEL MethodDeclaration", "DEL SimpleName: Writable", "DEL SimpleName: OP_EXPLAIN", "DEL SimpleType: UTF8", "DEL ClassInstanceCreation", "DEL SimpleName: append", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL NumberLiteral: 10", "DEL SimpleName: port", "DEL SimpleName: value", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL SimpleName: append", "DEL SimpleName: Thread", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SwitchCase", "DEL SimpleName: value", "DEL SimpleName: OP_NAMES", "DEL SimpleName: append", "DEL Assignment: =", "DEL QualifiedName: p.first", "DEL TextElement: Construct a search server on the index and segments in the named", "DEL SimpleName: get", "DEL SimpleName: append", "DEL SimpleName: Hit", "DEL SimpleName: Query", "DEL VariableDeclarationStatement", "DEL SimpleName: value", "DEL SimpleName: search", "DEL CastExpression", "DEL ExpressionStatement", "DEL QualifiedName: p.op", "DEL StringLiteral: \")\"", "DEL SimpleName: getSegmentNames"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: Thread", "DEL VariableDeclarationStatement", "DEL QualifiedName: org.apache.nutch.ipc.Client", "DEL CastExpression", "DEL PrimitiveType: boolean", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: OP_DETAILS", "DEL SimpleName: start", "DEL ThisExpression", "DEL SimpleName: getIndexNo", "DEL BooleanLiteral: true", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: static", "DEL FieldDeclaration", "DEL SimpleName: watchdog", "DEL SimpleName: Client", "DEL ClassInstanceCreation", "DEL SimpleName: addresses", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: watchdog", "DEL SimpleName: Result", "DEL ExpressionStatement", "DEL SimpleName: defaultaddresses", "DEL SimpleType: Result", "DEL MethodDeclaration", "DEL SimpleType: Result", "DEL TagElement", "DEL SimpleName: addresses", "DEL SimpleName: Result", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SuperConstructorInvocation", "DEL TextElement: Flag for watchdog, true=keep running, false=stop", "DEL SimpleType: org.apache.nutch.ipc.Client", "DEL Modifier: private", "DEL ExpressionStatement", "DEL Modifier: private", "DEL Modifier: private", "DEL FieldDeclaration", "DEL TextElement: Backgroudthread that polls search servers.", "DEL Javadoc", "DEL Assignment: =", "DEL SimpleType: Result", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL TypeLiteral", "DEL SimpleName: result", "DEL ArrayAccess", "DEL TagElement", "DEL FieldAccess", "DEL SimpleType: Param", "DEL SimpleName: hit", "DEL VariableDeclarationStatement", "DEL TypeDeclaration: class", "DEL SimpleName: param", "DEL VariableDeclarationFragment", "DEL SimpleName: Client", "DEL SimpleName: addresses", "DEL SimpleType: Param", "DEL ThisExpression", "DEL SimpleName: Thread", "DEL VariableDeclarationFragment", "DEL SimpleName: watchdog", "DEL SimpleName: defaultaddresses", "DEL Javadoc", "DEL Modifier: public", "DEL Modifier: public", "DEL Block", "DEL SimpleName: shouldrun", "DEL MethodDeclaration", "DEL MethodInvocation"]}]}}, {"DistributedSearch_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(1644) at 5", "Insert ImportDeclaration(33) into CompilationUnit(1644) at 10", "Insert QualifiedName: java.lang.reflect.Method(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.apache.nutch.ipc.RPC(32) into ImportDeclaration(33) at 0", "Insert TypeDeclaration: interface(77) into TypeDeclaration: class(1643) at 5", "Insert TypeDeclaration: class(181) into TypeDeclaration: class(1643) at 6", "Insert TypeDeclaration: class(1642) into TypeDeclaration: class(1643) at 7", "Insert Javadoc(57) into TypeDeclaration: interface(77) at 0", "Insert Modifier: public(58) into TypeDeclaration: interface(77) at 1", "Insert SimpleName: Protocol(59) into TypeDeclaration: interface(77) at 2", "Insert SimpleType: Searcher(61) into TypeDeclaration: interface(77) at 3", "Insert SimpleType: HitDetailer(63) into TypeDeclaration: interface(77) at 4", "Insert SimpleType: HitSummarizer(65) into TypeDeclaration: interface(77) at 5", "Insert SimpleType: HitContent(67) into TypeDeclaration: interface(77) at 6", "Insert MethodDeclaration(76) into TypeDeclaration: interface(77) at 7", "Move Javadoc(675) into TypeDeclaration: class(181) at 0", "Insert Modifier: public(81) into TypeDeclaration: class(181) at 1", "Insert Modifier: static(82) into TypeDeclaration: class(181) at 2", "Insert SimpleName: Server(83) into TypeDeclaration: class(181) at 3", "Insert MethodDeclaration(87) into TypeDeclaration: class(181) at 4", "Move MethodDeclaration(1090) into TypeDeclaration: class(181) at 5", "Move Javadoc(1094) into TypeDeclaration: class(1642) at 0", "Move Modifier: public(239) into TypeDeclaration: class(1642) at 1", "Move Modifier: static(240) into TypeDeclaration: class(1642) at 2", "Update SimpleName: Param(241) to Client", "Move SimpleName: Param(241) into TypeDeclaration: class(1642) at 3", "Move SimpleType: Thread(1155) into TypeDeclaration: class(1642) at 4", "Move SimpleType: Searcher(1101) into TypeDeclaration: class(1642) at 5", "Move SimpleType: HitDetailer(1103) into TypeDeclaration: class(1642) at 6", "Move SimpleType: HitSummarizer(1105) into TypeDeclaration: class(1642) at 7", "Move SimpleType: HitContent(1107) into TypeDeclaration: class(1642) at 8", "Move SimpleType: Runnable(1109) into TypeDeclaration: class(1642) at 9", "Move FieldDeclaration(248) into TypeDeclaration: class(1642) at 10", "Move FieldDeclaration(254) into TypeDeclaration: class(1642) at 11", "Move FieldDeclaration(1140) into TypeDeclaration: class(1642) at 12", "Move FieldDeclaration(260) into TypeDeclaration: class(1642) at 13", "Move MethodDeclaration(1177) into TypeDeclaration: class(1642) at 14", "Move MethodDeclaration(1300) into TypeDeclaration: class(1642) at 15", "Insert MethodDeclaration(403) into TypeDeclaration: class(1642) at 16", "Insert FieldDeclaration(411) into TypeDeclaration: class(1642) at 17", "Move FieldDeclaration(496) into TypeDeclaration: class(1642) at 18", "Insert FieldDeclaration(427) into TypeDeclaration: class(1642) at 19", "Insert FieldDeclaration(435) into TypeDeclaration: class(1642) at 20", "Insert Initializer(524) into TypeDeclaration: class(1642) at 21", "Move MethodDeclaration(1548) into TypeDeclaration: class(1642) at 22", "Move MethodDeclaration(1578) into TypeDeclaration: class(1642) at 23", "Move MethodDeclaration(1817) into TypeDeclaration: class(1642) at 24", "Move MethodDeclaration(1864) into TypeDeclaration: class(1642) at 25", "Insert MethodDeclaration(1039) into TypeDeclaration: class(1642) at 26", "Insert MethodDeclaration(1063) into TypeDeclaration: class(1642) at 27", "Insert MethodDeclaration(1082) into TypeDeclaration: class(1642) at 28", "Move MethodDeclaration(2040) into TypeDeclaration: class(1642) at 29", "Move MethodDeclaration(2098) into TypeDeclaration: class(1642) at 30", "Move MethodDeclaration(2250) into TypeDeclaration: class(1642) at 31", "Move MethodDeclaration(2308) into TypeDeclaration: class(1642) at 32", "Move MethodDeclaration(2362) into TypeDeclaration: class(1642) at 33", "Move MethodDeclaration(2416) into TypeDeclaration: class(1642) at 34", "Move MethodDeclaration(2475) into TypeDeclaration: class(1642) at 35", "Move MethodDeclaration(2531) into TypeDeclaration: class(1642) at 36", "Move MethodDeclaration(2695) into TypeDeclaration: class(1642) at 37", "Move MethodDeclaration(2753) into TypeDeclaration: class(1642) at 38", "Move MethodDeclaration(2777) into TypeDeclaration: class(1642) at 39", "Insert TagElement(56) into Javadoc(57) at 0", "Insert SimpleName: Searcher(60) into SimpleType: Searcher(61) at 0", "Insert SimpleName: HitDetailer(62) into SimpleType: HitDetailer(63) at 0", "Insert SimpleName: HitSummarizer(64) into SimpleType: HitSummarizer(65) at 0", "Insert SimpleName: HitContent(66) into SimpleType: HitContent(67) at 0", "Insert Javadoc(70) into MethodDeclaration(76) at 0", "Move ArrayType: String[](2203) into MethodDeclaration(76) at 1", "Insert SimpleName: getSegmentNames(75) into MethodDeclaration(76) at 2", "Insert Modifier: private(84) into MethodDeclaration(87) at 0", "Insert SimpleName: Server(85) into MethodDeclaration(87) at 1", "Insert Block(86) into MethodDeclaration(87) at 2", "Move ArrayType: InetSocketAddress[](1128) into FieldDeclaration(207) at 1", "Move ArrayType: InetSocketAddress[](1114) into FieldDeclaration(215) at 1", "Insert PrimitiveType: boolean(226) into FieldDeclaration(230) at 1", "Move Javadoc(1303) into MethodDeclaration(403) at 0", "Move Modifier: public(261) into MethodDeclaration(403) at 1", "Insert SimpleName: Client(377) into MethodDeclaration(403) at 2", "Move SingleVariableDeclaration(1311) into MethodDeclaration(403) at 3", "Move SimpleType: IOException(1313) into MethodDeclaration(403) at 4", "Insert Block(402) into MethodDeclaration(403) at 5", "Insert Modifier: private(404) into FieldDeclaration(411) at 0", "Insert Modifier: static(405) into FieldDeclaration(411) at 1", "Insert Modifier: final(406) into FieldDeclaration(411) at 2", "Insert SimpleType: Method(408) into FieldDeclaration(411) at 3", "Move VariableDeclarationFragment(489) into FieldDeclaration(411) at 4", "Insert Modifier: static(413) into FieldDeclaration(419) at 1", "Insert Modifier: final(414) into FieldDeclaration(419) at 2", "Update SimpleType: Writable(493) to Method", "Insert Modifier: private(420) into FieldDeclaration(427) at 0", "Insert Modifier: static(421) into FieldDeclaration(427) at 1", "Insert Modifier: final(422) into FieldDeclaration(427) at 2", "Insert SimpleType: Method(424) into FieldDeclaration(427) at 3", "Insert VariableDeclarationFragment(426) into FieldDeclaration(427) at 4", "Insert Modifier: private(428) into FieldDeclaration(435) at 0", "Insert Modifier: static(429) into FieldDeclaration(435) at 1", "Update Modifier: private(681) to final", "Move Modifier: private(681) into FieldDeclaration(435) at 2", "Insert SimpleType: Method(432) into FieldDeclaration(435) at 3", "Insert VariableDeclarationFragment(434) into FieldDeclaration(435) at 4", "Insert Modifier: static(436) into Initializer(524) at 0", "Insert Block(523) into Initializer(524) at 1", "Update Modifier: public(1818) to private", "Insert SimpleType: Protocol(981) into MethodDeclaration(1003) at 1", "Insert SimpleName: getRemote(982) into MethodDeclaration(1003) at 2", "Insert SingleVariableDeclaration(986) into MethodDeclaration(1003) at 3", "Insert Block(1002) into MethodDeclaration(1003) at 4", "Update Modifier: public(1865) to private", "Move Modifier: public(1865) into MethodDeclaration(1039) at 0", "Insert SimpleType: Protocol(1006) into MethodDeclaration(1039) at 1", "Update SimpleName: getDetails(1868) to getRemote", "Move SimpleName: getDetails(1868) into MethodDeclaration(1039) at 2", "Insert SingleVariableDeclaration(1011) into MethodDeclaration(1039) at 3", "Insert Block(1038) into MethodDeclaration(1039) at 4", "Insert Modifier: public(1040) into MethodDeclaration(1063) at 0", "Move SimpleType: String(2043) into MethodDeclaration(1063) at 1", "Insert SimpleName: getExplanation(1043) into MethodDeclaration(1063) at 2", "Move SingleVariableDeclaration(1825) into MethodDeclaration(1063) at 3", "Move SingleVariableDeclaration(1829) into MethodDeclaration(1063) at 4", "Move SimpleType: IOException(701) into MethodDeclaration(1063) at 5", "Insert Block(1062) into MethodDeclaration(1063) at 6", "Insert Modifier: public(1064) into MethodDeclaration(1082) at 0", "Move SimpleType: HitDetails(1867) into MethodDeclaration(1082) at 1", "Insert SimpleName: getDetails(1067) into MethodDeclaration(1082) at 2", "Move SingleVariableDeclaration(1872) into MethodDeclaration(1082) at 3", "Move SimpleType: IOException(728) into MethodDeclaration(1082) at 4", "Insert Block(1081) into MethodDeclaration(1082) at 5", "Move VariableDeclarationStatement(1934) into Block(1172) at 2", "Move SimpleType: String(1820) into MethodDeclaration(1197) at 1", "Move SingleVariableDeclaration(2482) into MethodDeclaration(1197) at 3", "Move SimpleType: IOException(1831) into MethodDeclaration(1197) at 6", "Move VariableDeclarationStatement(2129) into Block(1308) at 2", "Move SingleVariableDeclaration(2426) into MethodDeclaration(1348) at 3", "Move SimpleType: IOException(552) into MethodDeclaration(1348) at 4", "Move SimpleType: IOException(531) into MethodDeclaration(1367) at 4", "Move SingleVariableDeclaration(2316) into MethodDeclaration(1388) at 3", "Move SimpleType: IOException(2318) into MethodDeclaration(1388) at 4", "Move SingleVariableDeclaration(2048) into MethodDeclaration(1406) at 3", "Move SimpleType: IOException(1874) into MethodDeclaration(1406) at 4", "Update SimpleName: stop(2759) to close", "Insert TextElement: The distributed search protocol. (55) into TagElement(56) at 0", "Move TagElement(152) into Javadoc(70) at 0", "Insert VariableDeclarationStatement(158) into Block(179) at 4", "Insert VariableDeclarationStatement(170) into Block(179) at 5", "Update SimpleName: op(246) to defaultAddresses", "Update SimpleName: first(252) to liveAddresses", "Update SimpleName: second(258) to running", "Insert BooleanLiteral: true(228) into VariableDeclarationFragment(229) at 1", "Move ExpressionStatement(298) into Block(402) at 0", "Move ExpressionStatement(326) into Block(402) at 1", "Move ExpressionStatement(331) into Block(402) at 2", "Move ExpressionStatement(336) into Block(402) at 3", "Update SimpleName: Writable(484) to Method", "Move SimpleName: Writable(484) into SimpleType: Method(408) at 0", "Update SimpleName: op(488) to GET_SEGMENTS", "Update SimpleName: Writable(492) to Method", "Update SimpleName: value(494) to SEARCH", "Update SimpleName: DataInput(547) to Method", "Move SimpleName: DataInput(547) into SimpleType: Method(424) at 0", "Insert SimpleName: DETAILS(425) into VariableDeclarationFragment(426) at 0", "Update SimpleName: File(693) to Method", "Move SimpleName: File(693) into SimpleType: Method(432) at 0", "Insert SimpleName: SUMMARY(433) into VariableDeclarationFragment(434) at 0", "Insert TryStatement(522) into Block(523) at 0", "Update SimpleName: Param(1832) to Protocol", "Move SimpleName: Param(1832) into SimpleType: Protocol(981) at 0", "Insert SimpleType: Hit(984) into SingleVariableDeclaration(986) at 0", "Insert SimpleName: hit(985) into SingleVariableDeclaration(986) at 1", "Insert ReturnStatement(1001) into Block(1002) at 0", "Insert SimpleName: Protocol(1005) into SimpleType: Protocol(1006) at 0", "Insert SimpleType: HitDetails(1009) into SingleVariableDeclaration(1011) at 0", "Insert SimpleName: hit(1010) into SingleVariableDeclaration(1011) at 1", "Move VariableDeclarationStatement(2080) into Block(1038) at 0", "Insert ReturnStatement(1037) into Block(1038) at 1", "Insert ReturnStatement(1061) into Block(1062) at 0", "Move ReturnStatement(1905) into Block(1081) at 0", "Insert ReturnStatement(1171) into Block(1172) at 3", "Insert ReturnStatement(1195) into Block(1196) at 0", "Insert ReturnStatement(1307) into Block(1308) at 3", "Insert ReturnStatement(1327) into Block(1328) at 0", "Insert ReturnStatement(1346) into Block(1347) at 0", "Insert ReturnStatement(1365) into Block(1366) at 0", "Insert ReturnStatement(1386) into Block(1387) at 0", "Insert ReturnStatement(1404) into Block(1405) at 0", "Update TextElement: Names of the op codes. (151) to The name of the segments searched by this node. ", "Move SimpleType: NutchBean(683) into VariableDeclarationStatement(158) at 0", "Insert VariableDeclarationFragment(157) into VariableDeclarationStatement(158) at 1", "Move SimpleType: org.apache.nutch.ipc.Server(680) into VariableDeclarationStatement(170) at 0", "Move VariableDeclarationFragment(1079) into VariableDeclarationStatement(170) at 1", "Insert Block(510) into TryStatement(522) at 0", "Insert CatchClause(521) into TryStatement(522) at 1", "Update TextElement: Updates segments(1337) to Updates segment names.", "Update ArrayType: Writable[](1380) to Object[][]", "Update ArrayType: Writable[](1411) to String[][]", "Insert ArrayType: Hits[](759) into VariableDeclarationStatement(768) at 0", "Update ArrayType: Writable[](1627) to Object[][]", "Move VariableDeclarationExpression(1394) into ForStatement(815) at 0", "Move InfixExpression: <(1397) into ForStatement(815) at 1", "Move PostfixExpression: ++(1399) into ForStatement(815) at 2", "Insert Block(814) into ForStatement(815) at 3", "Move ArrayType: Hits[](1605) into VariableDeclarationStatement(833) at 0", "Insert SimpleType: Comparable(843) into VariableDeclarationStatement(847) at 0", "Update SimpleName: Param(1835) to Hit", "Move SimpleName: Param(1835) into SimpleType: Hit(984) at 0", "Insert CastExpression(1000) into ReturnStatement(1001) at 0", "Update SimpleName: Param(1875) to HitDetails", "Move SimpleName: Param(1875) into SimpleType: HitDetails(1009) at 0", "Insert CastExpression(1036) into ReturnStatement(1037) at 0", "Insert MethodInvocation(1060) into ReturnStatement(1061) at 0", "Insert MethodInvocation(1079) into ReturnStatement(1080) at 0", "Update ArrayType: Writable[](1925) to Object[][]", "Move ExpressionStatement(1969) into Block(1158) at 2", "Insert CastExpression(1170) into ReturnStatement(1171) at 0", "Insert MethodInvocation(1194) into ReturnStatement(1195) at 0", "Update ArrayType: Writable[](2120) to Object[][]", "Move ExpressionStatement(2171) into Block(1294) at 3", "Insert CastExpression(1306) into ReturnStatement(1307) at 0", "Insert MethodInvocation(1326) into ReturnStatement(1327) at 0", "Insert MethodInvocation(1345) into ReturnStatement(1346) at 0", "Insert MethodInvocation(1364) into ReturnStatement(1365) at 0", "Insert MethodInvocation(1385) into ReturnStatement(1386) at 0", "Insert MethodInvocation(1403) into ReturnStatement(1404) at 0", "Insert SimpleName: running(1574) into WhileStatement(1624) at 0", "Move TryStatement(2731) into Block(1623) at 2", "Insert SimpleName: bean(152) into VariableDeclarationFragment(157) at 0", "Move ClassInstanceCreation(714) into VariableDeclarationFragment(157) at 1", "Insert MethodInvocation(168) into VariableDeclarationFragment(169) at 1", "Update SimpleName: op(296) to addresses", "Update SimpleName: out(322) to updateSegments", "Update SimpleName: first(327) to setDaemon", "Insert BooleanLiteral: true(396) into MethodInvocation(397) at 1", "Update SimpleName: out(334) to start", "Insert ExpressionStatement(451) into Block(510) at 0", "Insert ExpressionStatement(470) into Block(510) at 1", "Insert ExpressionStatement(488) into Block(510) at 2", "Insert ExpressionStatement(509) into Block(510) at 3", "Insert SingleVariableDeclaration(514) into CatchClause(521) at 0", "Insert Block(520) into CatchClause(521) at 1", "Update SimpleName: statServers(1348) to liveServers", "Update SimpleName: statSegments(1353) to liveSegments", "Update SimpleName: aliveaddresses(1359) to liveAddresses", "Update SimpleType: Writable(1378) to Object", "Insert Dimension(556) into ArrayType: Object[][](557) at 2", "Update SimpleType: Writable(1409) to String", "Insert Dimension(572) into ArrayType: String[][](573) at 2", "Insert CastExpression(586) into VariableDeclarationFragment(587) at 1", "Insert VariableDeclarationStatement(616) into Block(673) at 1", "Insert ForStatement(660) into Block(673) at 3", "Move ExpressionStatement(1508) into Block(673) at 4", "Insert FieldAccess(677) into Assignment: =(694) at 0", "Insert SimpleType: Hits(757) into ArrayType: Hits[](759) at 0", "Insert Dimension(758) into ArrayType: Hits[](759) at 1", "Update SimpleName: param(1612) to segmentHits", "Insert ArrayCreation(766) into VariableDeclarationFragment(767) at 1", "Update SimpleType: Writable(1625) to Object", "Insert Dimension(772) into ArrayType: Object[][](773) at 2", "Insert ExpressionStatement(802) into Block(814) at 0", "Move ExpressionStatement(1652) into Block(814) at 1", "Insert CastExpression(831) into VariableDeclarationFragment(832) at 1", "Insert SimpleName: Comparable(842) into SimpleType: Comparable(843) at 0", "Update SimpleName: minScore(1675) to minValue", "Insert NullLiteral(845) into VariableDeclarationFragment(846) at 1", "Update SimpleType: Result(1847) to Protocol", "Move SimpleType: Result(1847) into CastExpression(1000) at 0", "Move MethodInvocation(1855) into CastExpression(1000) at 1", "Insert SimpleType: Protocol(1028) into CastExpression(1036) at 0", "Insert MethodInvocation(1035) into CastExpression(1036) at 1", "Insert MethodInvocation(1056) into MethodInvocation(1060) at 0", "Insert SimpleName: getExplanation(1057) into MethodInvocation(1060) at 1", "Insert SimpleName: query(1058) into MethodInvocation(1060) at 2", "Move SimpleName: hit(1893) into MethodInvocation(1060) at 3", "Insert MethodInvocation(1076) into MethodInvocation(1079) at 0", "Insert SimpleName: getDetails(1077) into MethodInvocation(1079) at 1", "Insert SimpleName: hit(1078) into MethodInvocation(1079) at 2", "Update SimpleType: Writable(1923) to Object", "Insert Dimension(1113) into ArrayType: Object[][](1114) at 2", "Move ArrayType: HitDetails[](1998) into CastExpression(1170) at 0", "Insert MethodInvocation(1169) into CastExpression(1170) at 1", "Insert MethodInvocation(1190) into MethodInvocation(1194) at 0", "Insert SimpleName: getSummary(1191) into MethodInvocation(1194) at 1", "Insert SimpleName: hit(1192) into MethodInvocation(1194) at 2", "Insert SimpleName: query(1193) into MethodInvocation(1194) at 3", "Update SimpleType: Writable(2118) to Object", "Insert Dimension(1232) into ArrayType: Object[][](1233) at 2", "Insert ExpressionStatement(1293) into Block(1294) at 3", "Move ArrayType: String[](1458) into CastExpression(1306) at 0", "Insert MethodInvocation(1305) into CastExpression(1306) at 1", "Insert MethodInvocation(1323) into MethodInvocation(1326) at 0", "Insert SimpleName: getContent(1324) into MethodInvocation(1326) at 1", "Update SimpleName: get(2304) to hit", "Move SimpleName: get(2304) into MethodInvocation(1326) at 2", "Insert MethodInvocation(1342) into MethodInvocation(1345) at 0", "Insert SimpleName: getParseData(1343) into MethodInvocation(1345) at 1", "Insert SimpleName: hit(1344) into MethodInvocation(1345) at 2", "Insert MethodInvocation(1361) into MethodInvocation(1364) at 0", "Insert SimpleName: getParseText(1362) into MethodInvocation(1364) at 1", "Insert SimpleName: hit(1363) into MethodInvocation(1364) at 2", "Insert MethodInvocation(1382) into MethodInvocation(1385) at 0", "Insert SimpleName: getAnchors(1383) into MethodInvocation(1385) at 1", "Insert SimpleName: hit(1384) into MethodInvocation(1385) at 2", "Insert MethodInvocation(1400) into MethodInvocation(1403) at 0", "Insert SimpleName: getFetchDate(1401) into MethodInvocation(1403) at 1", "Update SimpleName: get(2527) to hit", "Move SimpleName: get(2527) into MethodInvocation(1403) at 2", "Update SimpleName: shouldrun(2768) to running", "Insert SimpleName: RPC(162) into MethodInvocation(168) at 0", "Insert SimpleName: getServer(163) into MethodInvocation(168) at 1", "Insert SimpleName: bean(164) into MethodInvocation(168) at 2", "Insert SimpleName: port(165) into MethodInvocation(168) at 3", "Insert NumberLiteral: 10(166) into MethodInvocation(168) at 4", "Insert BooleanLiteral: true(167) into MethodInvocation(168) at 5", "Update SimpleName: op(294) to defaultAddresses", "Move Assignment: =(830) into ExpressionStatement(451) at 0", "Move Assignment: =(846) into ExpressionStatement(470) at 0", "Move Assignment: =(862) into ExpressionStatement(488) at 0", "Move Assignment: =(875) into ExpressionStatement(509) at 0", "Update SimpleType: Param(929) to NoSuchMethodException", "Move SimpleType: Param(929) into SingleVariableDeclaration(514) at 0", "Update SimpleName: p(930) to e", "Move SimpleName: p(930) into SingleVariableDeclaration(514) at 1", "Insert ThrowStatement(519) into Block(520) at 0", "Update SimpleName: Writable(1377) to Object", "Update ArrayType: Writable[](1385) to Object[][]", "Update QualifiedName: defaultaddresses.length(1386) to defaultAddresses.length", "Insert NumberLiteral: 0(565) into ArrayCreation(566) at 2", "Update SimpleName: Writable(1408) to String", "Insert ArrayType: String[][](579) into CastExpression(586) at 0", "Insert MethodInvocation(585) into CastExpression(586) at 1", "Update SimpleType: Result(1430) to InetSocketAddress", "Move ArrayType: String[](165) into VariableDeclarationStatement(616) at 0", "Insert VariableDeclarationFragment(615) into VariableDeclarationStatement(616) at 1", "Move VariableDeclarationExpression(1473) into ForStatement(660) at 0", "Move InfixExpression: <(1476) into ForStatement(660) at 1", "Move PostfixExpression: ++(1478) into ForStatement(660) at 2", "Insert Block(659) into ForStatement(660) at 3", "Insert ThisExpression(675) into FieldAccess(677) at 0", "Insert SimpleName: liveAddresses(676) into FieldAccess(677) at 1", "Move ArrayType: InetSocketAddress[](1530) into CastExpression(693) at 0", "Update SimpleName: statServers(1540) to liveServers", "Update StringLiteral: \" servers / \"(1541) to \" servers, \"", "Update SimpleName: statSegments(1542) to liveSegments", "Update StringLiteral: \" segments online.\"(1543) to \" segments.\"", "Update SimpleName: Param(1610) to Hits", "Move SimpleName: Param(1610) into SimpleType: Hits(757) at 0", "Insert ArrayType: Hits[](764) into ArrayCreation(766) at 0", "Insert QualifiedName: liveAddresses.length(765) into ArrayCreation(766) at 1", "Update SimpleName: Writable(1624) to Object", "Update ArrayType: Writable[](1632) to Object[][]", "Update QualifiedName: addresses.length(1633) to liveAddresses.length", "Insert NumberLiteral: 2(781) into ArrayCreation(782) at 2", "Insert Assignment: =(801) into ExpressionStatement(802) at 0", "Move ArrayType: Hits[](1600) into CastExpression(831) at 0", "Insert MethodInvocation(830) into CastExpression(831) at 1", "Move SimpleType: Hits(576) into VariableDeclarationStatement(865) at 0", "Update SimpleName: Result(1846) to Protocol", "Update SimpleName: call(1848) to RPC", "Update SimpleName: param(1849) to getProxy", "Insert TypeLiteral(993) into MethodInvocation(999) at 2", "Update SimpleName: Param(1878) to Protocol", "Move SimpleName: Param(1878) into SimpleType: Protocol(1028) at 0", "Insert SimpleName: RPC(1029) into MethodInvocation(1035) at 0", "Insert SimpleName: getProxy(1030) into MethodInvocation(1035) at 1", "Insert TypeLiteral(1033) into MethodInvocation(1035) at 2", "Insert SimpleName: address(1034) into MethodInvocation(1035) at 3", "Update SimpleName: call(1890) to getRemote", "Move SimpleName: call(1890) into MethodInvocation(1056) at 0", "Update SimpleName: param(1891) to hit", "Move SimpleName: param(1891) into MethodInvocation(1056) at 1", "Insert SimpleName: getRemote(1074) into MethodInvocation(1076) at 0", "Insert SimpleName: hit(1075) into MethodInvocation(1076) at 1", "Update SimpleName: Writable(1922) to Object", "Update ArrayType: Writable[](1930) to Object[][]", "Insert NumberLiteral: 1(1122) into ArrayCreation(1123) at 2", "Insert SimpleName: RPC(1164) into MethodInvocation(1169) at 0", "Move SimpleName: call(1989) into MethodInvocation(1169) at 1", "Insert SimpleName: DETAILS(1166) into MethodInvocation(1169) at 2", "Move SimpleName: params(1990) into MethodInvocation(1169) at 3", "Move SimpleName: addrs(1991) into MethodInvocation(1169) at 4", "Insert SimpleName: getRemote(1188) into MethodInvocation(1190) at 0", "Insert SimpleName: hit(1189) into MethodInvocation(1190) at 1", "Update SimpleName: Writable(2117) to Object", "Update ArrayType: Writable[](2125) to Object[][]", "Insert NumberLiteral: 2(1241) into ArrayCreation(1242) at 2", "Insert Assignment: =(1292) into ExpressionStatement(1293) at 0", "Insert SimpleName: RPC(1300) into MethodInvocation(1305) at 0", "Move SimpleName: call(2194) into MethodInvocation(1305) at 1", "Insert SimpleName: SUMMARY(1302) into MethodInvocation(1305) at 2", "Move SimpleName: params(2195) into MethodInvocation(1305) at 3", "Move SimpleName: addrs(2196) into MethodInvocation(1305) at 4", "Update SimpleName: get(2278) to getRemote", "Move SimpleName: get(2278) into MethodInvocation(1323) at 0", "Move SimpleName: hit(2279) into MethodInvocation(1323) at 1", "Update SimpleName: get(2335) to getRemote", "Move SimpleName: get(2335) into MethodInvocation(1342) at 0", "Move SimpleName: hit(2336) into MethodInvocation(1342) at 1", "Update SimpleName: get(2389) to getRemote", "Move SimpleName: get(2389) into MethodInvocation(1361) at 0", "Move SimpleName: hit(2390) into MethodInvocation(1361) at 1", "Update SimpleName: get(2445) to getRemote", "Move SimpleName: get(2445) into MethodInvocation(1382) at 0", "Move SimpleName: hit(2446) into MethodInvocation(1382) at 1", "Update SimpleName: get(2501) to getRemote", "Move SimpleName: get(2501) into MethodInvocation(1400) at 0", "Move SimpleName: hit(2502) into MethodInvocation(1400) at 1", "Update SimpleName: value(815) to GET_SEGMENTS", "Insert MethodInvocation(449) into Assignment: =(450) at 1", "Update SimpleName: value(835) to SEARCH", "Insert MethodInvocation(468) into Assignment: =(469) at 1", "Update SimpleName: value(851) to DETAILS", "Insert MethodInvocation(486) into Assignment: =(487) at 1", "Update SimpleName: value(867) to SUMMARY", "Update SimpleName: Param(928) to NoSuchMethodException", "Insert ClassInstanceCreation(518) into ThrowStatement(519) at 0", "Update SimpleType: Writable(1383) to Object", "Insert Dimension(562) into ArrayType: Object[][](563) at 2", "Insert SimpleType: String(576) into ArrayType: String[][](579) at 0", "Insert Dimension(577) into ArrayType: String[][](579) at 1", "Insert Dimension(578) into ArrayType: String[][](579) at 2", "Insert SimpleName: RPC(580) into MethodInvocation(585) at 0", "Move SimpleName: call(1413) into MethodInvocation(585) at 1", "Insert SimpleName: GET_SEGMENTS(582) into MethodInvocation(585) at 2", "Move SimpleName: params(1414) into MethodInvocation(585) at 3", "Update SimpleName: defaultaddresses(1415) to defaultAddresses", "Move SimpleName: defaultaddresses(1415) into MethodInvocation(585) at 4", "Update SimpleName: Result(1429) to InetSocketAddress", "Insert SimpleName: addr(601) into VariableDeclarationFragment(605) at 0", "Insert ArrayAccess(604) into VariableDeclarationFragment(605) at 1", "Insert SimpleName: segments(611) into VariableDeclarationFragment(615) at 0", "Move ArrayAccess(1696) into VariableDeclarationFragment(615) at 1", "Update SimpleName: result(1440) to segments", "Move ExpressionStatement(1491) into Block(659) at 0", "Move ExpressionStatement(1501) into Block(659) at 1", "Update SimpleName: aliveaddresses(1502) to liveAddresses", "Insert SimpleName: addr(663) into MethodInvocation(664) at 2", "Update SimpleName: statServers(1511) to liveServers", "Update SimpleName: statSegments(1514) to liveSegments", "Update SimpleName: aliveaddresses(1525) to liveAddresses", "Insert SimpleType: Hits(762) into ArrayType: Hits[](764) at 0", "Insert Dimension(763) into ArrayType: Hits[](764) at 1", "Update SimpleType: Writable(1630) to Object", "Insert Dimension(778) into ArrayType: Object[][](779) at 2", "Insert ArrayAccess(799) into Assignment: =(801) at 0", "Insert SimpleName: query(800) into Assignment: =(801) at 1", "Insert ArrayAccess(807) into Assignment: =(812) at 0", "Insert ClassInstanceCreation(811) into Assignment: =(812) at 1", "Insert SimpleName: RPC(825) into MethodInvocation(830) at 0", "Move SimpleName: call(1660) into MethodInvocation(830) at 1", "Insert SimpleName: SEARCH(827) into MethodInvocation(830) at 2", "Move SimpleName: params(1661) into MethodInvocation(830) at 3", "Update SimpleName: addresses(1662) to liveAddresses", "Move SimpleName: addresses(1662) into MethodInvocation(830) at 4", "Update SimpleName: result(1691) to hits", "Move ArrayAccess(1436) into VariableDeclarationFragment(864) at 1", "Update SimpleName: result(1700) to hits", "Insert SimpleType: Protocol(992) into TypeLiteral(993) at 0", "Update SimpleName: addresses(1850) to liveAddresses", "Insert SimpleType: Protocol(1032) into TypeLiteral(1033) at 0", "Update SimpleType: Writable(1928) to Object", "Insert Dimension(1119) into ArrayType: Object[][](1120) at 2", "Insert ArrayAccess(1152) into Assignment: =(1156) at 0", "Move ArrayAccess(1966) into Assignment: =(1156) at 1", "Update SimpleType: Writable(2123) to Object", "Insert Dimension(1238) into ArrayType: Object[][](1239) at 2", "Insert ArrayAccess(1282) into Assignment: =(1284) at 0", "Insert SimpleName: hit(1283) into Assignment: =(1284) at 1", "Insert ArrayAccess(1290) into Assignment: =(1292) at 0", "Insert SimpleName: query(1291) into Assignment: =(1292) at 1", "Insert TypeLiteral(440) into MethodInvocation(449) at 0", "Update SimpleName: getSummary(819) to getMethod", "Move SimpleName: getSummary(819) into MethodInvocation(449) at 1", "Insert StringLiteral: \"getSegmentNames\"(442) into MethodInvocation(449) at 2", "Insert ArrayCreation(448) into MethodInvocation(449) at 3", "Insert TypeLiteral(455) into MethodInvocation(468) at 0", "Update SimpleName: getContent(839) to getMethod", "Move SimpleName: getContent(839) into MethodInvocation(468) at 1", "Insert StringLiteral: \"search\"(457) into MethodInvocation(468) at 2", "Insert ArrayCreation(467) into MethodInvocation(468) at 3", "Insert TypeLiteral(474) into MethodInvocation(486) at 0", "Update SimpleName: getAnchors(855) to getMethod", "Move SimpleName: getAnchors(855) into MethodInvocation(486) at 1", "Insert StringLiteral: \"getDetails\"(476) into MethodInvocation(486) at 2", "Insert ArrayCreation(485) into MethodInvocation(486) at 3", "Insert TypeLiteral(492) into MethodInvocation(507) at 0", "Update SimpleName: getParseData(869) to getMethod", "Insert StringLiteral: \"getSummary\"(494) into MethodInvocation(507) at 2", "Insert ArrayCreation(506) into MethodInvocation(507) at 3", "Move SimpleType: RuntimeException(455) into ClassInstanceCreation(518) at 0", "Insert SimpleName: e(517) into ClassInstanceCreation(518) at 1", "Update SimpleName: Writable(1382) to Object", "Insert SimpleName: String(575) into SimpleType: String(576) at 0", "Insert SimpleName: defaultAddresses(602) into ArrayAccess(604) at 0", "Insert SimpleName: i(603) into ArrayAccess(604) at 1", "Move ArrayType: InetSocketAddress[](1524) into ArrayCreation(691) at 0", "Insert MethodInvocation(690) into ArrayCreation(691) at 1", "Update SimpleName: Param(1613) to Hits", "Move SimpleName: Param(1613) into SimpleType: Hits(762) at 0", "Update SimpleName: Writable(1629) to Object", "Insert ArrayAccess(797) into ArrayAccess(799) at 0", "Insert NumberLiteral: 0(798) into ArrayAccess(799) at 1", "Move ArrayAccess(2163) into ArrayAccess(807) at 0", "Insert NumberLiteral: 1(806) into ArrayAccess(807) at 1", "Insert SimpleType: Integer(809) into ClassInstanceCreation(811) at 0", "Insert SimpleName: numHits(810) into ClassInstanceCreation(811) at 1", "Insert InfixExpression: ||(909) into IfStatement(951) at 0", "Insert SimpleName: Protocol(991) into SimpleType: Protocol(992) at 0", "Update SimpleName: Result(1885) to Protocol", "Move SimpleName: Result(1885) into SimpleType: Protocol(1032) at 0", "Update SimpleName: Writable(1927) to Object", "Update SimpleName: addresses(1973) to liveAddresses", "Move ArrayAccess(1960) into ArrayAccess(1152) at 0", "Insert NumberLiteral: 0(1151) into ArrayAccess(1152) at 1", "Update SimpleName: Writable(2122) to Object", "Move ArrayAccess(1649) into ArrayAccess(1282) at 0", "Insert NumberLiteral: 0(1281) into ArrayAccess(1282) at 1", "Move ArrayAccess(1402) into ArrayAccess(1290) at 0", "Insert NumberLiteral: 1(1289) into ArrayAccess(1290) at 1", "Insert SimpleType: Protocol(439) into TypeLiteral(440) at 0", "Insert ArrayType: Class[](446) into ArrayCreation(448) at 0", "Insert ArrayInitializer(447) into ArrayCreation(448) at 1", "Insert SimpleType: Protocol(454) into TypeLiteral(455) at 0", "Insert ArrayType: Class[](461) into ArrayCreation(467) at 0", "Insert ArrayInitializer(466) into ArrayCreation(467) at 1", "Insert SimpleType: Protocol(473) into TypeLiteral(474) at 0", "Insert ArrayType: Class[](480) into ArrayCreation(485) at 0", "Insert ArrayInitializer(484) into ArrayCreation(485) at 1", "Insert SimpleType: Protocol(491) into TypeLiteral(492) at 0", "Insert ArrayType: Class[](498) into ArrayCreation(506) at 0", "Insert ArrayInitializer(505) into ArrayCreation(506) at 1", "Insert SimpleName: addr(656) into MethodInvocation(657) at 3", "Insert SimpleName: liveAddresses(688) into MethodInvocation(690) at 0", "Insert SimpleName: size(689) into MethodInvocation(690) at 1", "Insert SimpleName: params(795) into ArrayAccess(797) at 0", "Insert SimpleName: i(796) into ArrayAccess(797) at 1", "Insert SimpleName: Integer(808) into SimpleType: Integer(809) at 0", "Insert InfixExpression: ==(900) into InfixExpression: ||(909) at 0", "Insert InfixExpression: >=(908) into InfixExpression: ||(909) at 1", "Update StringLiteral: \"Querying segments from search servers\"(2704) to \"Querying segments from search servers...\"", "Update SimpleName: UTF8(816) to Protocol", "Move SimpleName: UTF8(816) into SimpleType: Protocol(439) at 0", "Insert SimpleType: Class(444) into ArrayType: Class[](446) at 0", "Insert Dimension(445) into ArrayType: Class[](446) at 1", "Update SimpleName: BytesWritable(836) to Protocol", "Move SimpleName: BytesWritable(836) into SimpleType: Protocol(454) at 0", "Insert SimpleType: Class(459) into ArrayType: Class[](461) at 0", "Insert Dimension(460) into ArrayType: Class[](461) at 1", "Insert TypeLiteral(464) into ArrayInitializer(466) at 0", "Insert QualifiedName: Integer.TYPE(465) into ArrayInitializer(466) at 1", "Update SimpleName: ArrayWritable(852) to Protocol", "Move SimpleName: ArrayWritable(852) into SimpleType: Protocol(473) at 0", "Insert SimpleType: Class(478) into ArrayType: Class[](480) at 0", "Insert Dimension(479) into ArrayType: Class[](480) at 1", "Insert TypeLiteral(483) into ArrayInitializer(484) at 0", "Insert SimpleName: Protocol(490) into SimpleType: Protocol(491) at 0", "Insert SimpleType: Class(496) into ArrayType: Class[](498) at 0", "Insert Dimension(497) into ArrayType: Class[](498) at 1", "Insert TypeLiteral(501) into ArrayInitializer(505) at 0", "Insert TypeLiteral(504) into ArrayInitializer(505) at 1", "Insert SimpleName: addr(623) into InfixExpression: +(624) at 1", "Insert SimpleName: addr(647) into InfixExpression: +(648) at 3", "Insert SimpleName: minValue(898) into InfixExpression: ==(900) at 0", "Insert NullLiteral(899) into InfixExpression: ==(900) at 1", "Insert MethodInvocation(906) into InfixExpression: >=(908) at 0", "Insert NumberLiteral: 0(907) into InfixExpression: >=(908) at 1", "Update SimpleName: addresses(2720) to liveAddresses", "Move ArrayCreation(1121) into Assignment: =(1618) at 1", "Update SimpleName: HitDetails(820) to Class", "Move SimpleName: HitDetails(820) into SimpleType: Class(444) at 0", "Update SimpleName: HitDetails(840) to Class", "Move SimpleName: HitDetails(840) into SimpleType: Class(459) at 0", "Move SimpleType: Query(425) into TypeLiteral(464) at 0", "Update SimpleName: HitDetails(856) to Class", "Move SimpleName: HitDetails(856) into SimpleType: Class(478) at 0", "Move SimpleType: Hit(404) into TypeLiteral(483) at 0", "Update SimpleName: HitDetails(870) to Class", "Move SimpleName: HitDetails(870) into SimpleType: Class(496) at 0", "Move SimpleType: HitDetails(442) into TypeLiteral(501) at 0", "Move SimpleType: Query(389) into TypeLiteral(504) at 0", "Insert MethodInvocation(903) into MethodInvocation(906) at 0", "Insert SimpleName: compareTo(904) into MethodInvocation(906) at 1", "Insert SimpleName: minValue(905) into MethodInvocation(906) at 2", "Move SimpleName: h(1741) into MethodInvocation(903) at 0", "Update SimpleName: getScore(1742) to getSite", "Move SimpleName: getScore(1742) into MethodInvocation(903) at 1", "Update SimpleName: minScore(1775) to minValue", "Update SimpleName: getScore(1783) to getSite", "Delete SimpleName: Server(1074)", "Delete SimpleType: Server(1075)", "Delete SimpleName: directory(1076)", "Delete SimpleName: port(1077)", "Delete ClassInstanceCreation(1078)", "Delete SimpleName: Server(1071)", "Delete SimpleType: Server(1072)", "Delete VariableDeclarationStatement(1080)", "Delete PrimitiveType: byte(245)", "Delete SimpleName: Writable(250)", "Delete SimpleType: Writable(251)", "Delete SimpleName: Writable(256)", "Delete SimpleType: Writable(257)", "Delete SimpleName: writeByte(323)", "Delete SimpleName: op(324)", "Delete SimpleName: write(328)", "Delete SimpleName: out(329)", "Delete SimpleName: second(332)", "Delete SimpleName: write(333)", "Delete SimpleType: UTF8(817)", "Delete SimpleName: bean(818)", "Delete SimpleType: HitDetails(821)", "Delete QualifiedName: p.first(822)", "Delete CastExpression(823)", "Delete SimpleName: Query(824)", "Delete SimpleType: Query(825)", "Delete QualifiedName: p.second(826)", "Delete CastExpression(827)", "Delete MethodInvocation(828)", "Delete ClassInstanceCreation(829)", "Delete SimpleType: BytesWritable(837)", "Delete SimpleName: bean(838)", "Delete SimpleType: HitDetails(841)", "Delete QualifiedName: p.first(842)", "Delete CastExpression(843)", "Delete MethodInvocation(844)", "Delete ClassInstanceCreation(845)", "Delete SimpleType: ArrayWritable(853)", "Delete SimpleName: bean(854)", "Delete SimpleType: HitDetails(857)", "Delete QualifiedName: p.first(858)", "Delete CastExpression(859)", "Delete MethodInvocation(860)", "Delete ClassInstanceCreation(861)", "Delete SimpleName: bean(868)", "Delete SimpleType: HitDetails(871)", "Delete QualifiedName: p.first(872)", "Delete CastExpression(873)", "Delete SimpleName: Param(1365)", "Delete SimpleType: Param(1366)", "Delete SimpleName: param(1367)", "Delete SimpleName: Param(1368)", "Delete SimpleType: Param(1369)", "Delete SimpleName: OP_SEGMENTS(1370)", "Delete SimpleName: NullWritable(1371)", "Delete SimpleName: get(1372)", "Delete MethodInvocation(1373)", "Delete ClassInstanceCreation(1374)", "Delete VariableDeclarationFragment(1375)", "Delete VariableDeclarationStatement(1376)", "Delete SimpleName: param(1403)", "Delete Assignment: =(1404)", "Delete ExpressionStatement(1405)", "Delete Block(1406)", "Delete ForStatement(1407)", "Delete MethodInvocation(1416)", "Delete SimpleName: result(1431)", "Delete SimpleName: Result(1432)", "Delete SimpleType: Result(1433)", "Delete CastExpression(1437)", "Delete SimpleName: defaultaddresses(1446)", "Delete SimpleName: i(1447)", "Delete ArrayAccess(1448)", "Delete SimpleName: defaultaddresses(1486)", "Delete SimpleName: i(1487)", "Delete ArrayAccess(1488)", "Delete SimpleName: defaultaddresses(1497)", "Delete SimpleName: i(1498)", "Delete ArrayAccess(1499)", "Delete SimpleName: defaultaddresses(1504)", "Delete SimpleName: i(1505)", "Delete ArrayAccess(1506)", "Delete SimpleName: segments(1459)", "Delete SimpleName: ArrayWritable(1460)", "Delete SimpleType: ArrayWritable(1461)", "Delete QualifiedName: result.value(1462)", "Delete CastExpression(1463)", "Delete ParenthesizedExpression(1464)", "Delete SimpleName: toStrings(1465)", "Delete MethodInvocation(1466)", "Delete VariableDeclarationFragment(1467)", "Delete VariableDeclarationStatement(1468)", "Delete Block(1509)", "Delete ForStatement(1510)", "Delete SimpleName: addresses(1520)", "Delete SimpleName: statServers(1531)", "Delete SimpleName: segmentHits(1601)", "Delete QualifiedName: addresses.length(1606)", "Delete ArrayCreation(1607)", "Delete VariableDeclarationFragment(1608)", "Delete VariableDeclarationStatement(1609)", "Delete SimpleType: Param(1611)", "Delete SimpleType: Param(1614)", "Delete SimpleName: OP_SEARCH(1615)", "Delete SimpleName: query(1616)", "Delete SimpleName: IntWritable(1617)", "Delete SimpleType: IntWritable(1618)", "Delete SimpleName: numHits(1619)", "Delete ClassInstanceCreation(1620)", "Delete ClassInstanceCreation(1621)", "Delete SimpleName: param(1650)", "Delete PrimitiveType: int(1637)", "Delete SimpleName: i(1638)", "Delete NumberLiteral: 0(1639)", "Delete VariableDeclarationFragment(1640)", "Delete VariableDeclarationExpression(1641)", "Delete SimpleName: i(1642)", "Delete QualifiedName: params.length(1643)", "Delete InfixExpression: <(1644)", "Delete SimpleName: i(1645)", "Delete PostfixExpression: ++(1646)", "Delete Block(1653)", "Delete SimpleName: Writable(1655)", "Delete SimpleType: Writable(1656)", "Delete Dimension(1657)", "Delete ArrayType: Writable[](1658)", "Delete MethodInvocation(1663)", "Delete PrimitiveType: float(1674)", "Delete NumberLiteral: 0.0f(1676)", "Delete SimpleName: Result(1689)", "Delete SimpleType: Result(1690)", "Delete SimpleName: Result(1692)", "Delete SimpleType: Result(1693)", "Delete CastExpression(1697)", "Delete SimpleName: Hits(1705)", "Delete SimpleType: Hits(1706)", "Delete SimpleName: hits(1707)", "Delete SimpleName: Hits(1708)", "Delete SimpleType: Hits(1709)", "Delete QualifiedName: result.value(1710)", "Delete CastExpression(1711)", "Delete VariableDeclarationFragment(1712)", "Delete VariableDeclarationStatement(1713)", "Delete MethodInvocation(1743)", "Delete SimpleName: minScore(1744)", "Delete InfixExpression: >=(1745)", "Delete SimpleName: h(1754)", "Delete SimpleName: getScore(1755)", "Delete MethodInvocation(1756)", "Delete SimpleName: getExplanation(1821)", "Delete SimpleType: Param(1833)", "Delete SimpleName: param(1834)", "Delete SimpleType: Param(1836)", "Delete SimpleName: OP_EXPLAIN(1837)", "Delete SimpleName: query(1838)", "Delete SimpleName: hit(1839)", "Delete ClassInstanceCreation(1840)", "Delete VariableDeclarationFragment(1841)", "Delete VariableDeclarationStatement(1842)", "Delete SimpleName: Result(1843)", "Delete SimpleType: Result(1844)", "Delete SimpleName: result(1845)", "Delete CastExpression(1856)", "Delete VariableDeclarationFragment(1857)", "Delete VariableDeclarationStatement(1858)", "Delete QualifiedName: result.value(1859)", "Delete SimpleName: toString(1860)", "Delete MethodInvocation(1861)", "Delete ReturnStatement(1862)", "Delete Block(1863)", "Delete SimpleName: HitDetails(1901)", "Delete SimpleType: HitDetails(1902)", "Delete QualifiedName: result.value(1903)", "Delete CastExpression(1904)", "Delete SimpleName: Param(1961)", "Delete SimpleType: Param(1962)", "Delete SimpleName: OP_DETAILS(1963)", "Delete ClassInstanceCreation(1967)", "Delete SimpleName: Writable(1984)", "Delete SimpleType: Writable(1985)", "Delete Dimension(1986)", "Delete ArrayType: Writable[](1987)", "Delete SimpleName: writables(1988)", "Delete MethodInvocation(1992)", "Delete VariableDeclarationFragment(1993)", "Delete VariableDeclarationStatement(1994)", "Delete SimpleName: results(1999)", "Delete SimpleName: HitDetails(2000)", "Delete SimpleType: HitDetails(2001)", "Delete Dimension(2002)", "Delete ArrayType: HitDetails[](2003)", "Delete QualifiedName: writables.length(2004)", "Delete ArrayCreation(2005)", "Delete VariableDeclarationFragment(2006)", "Delete VariableDeclarationStatement(2007)", "Delete PrimitiveType: int(2008)", "Delete SimpleName: i(2009)", "Delete NumberLiteral: 0(2010)", "Delete VariableDeclarationFragment(2011)", "Delete VariableDeclarationExpression(2012)", "Delete SimpleName: i(2013)", "Delete QualifiedName: results.length(2014)", "Delete InfixExpression: <(2015)", "Delete SimpleName: i(2016)", "Delete PostfixExpression: ++(2017)", "Delete SimpleName: results(2018)", "Delete SimpleName: i(2019)", "Delete ArrayAccess(2020)", "Delete SimpleName: HitDetails(2021)", "Delete SimpleType: HitDetails(2022)", "Delete SimpleName: Result(2023)", "Delete SimpleType: Result(2024)", "Delete SimpleName: writables(2025)", "Delete SimpleName: i(2026)", "Delete ArrayAccess(2027)", "Delete CastExpression(2028)", "Delete ParenthesizedExpression(2029)", "Delete SimpleName: value(2030)", "Delete FieldAccess(2031)", "Delete CastExpression(2032)", "Delete Assignment: =(2033)", "Delete ExpressionStatement(2034)", "Delete Block(2035)", "Delete ForStatement(2036)", "Delete SimpleName: results(2037)", "Delete ReturnStatement(2038)", "Delete SimpleName: IOException(2053)", "Delete SimpleType: IOException(2054)", "Delete SimpleName: Param(2055)", "Delete SimpleType: Param(2056)", "Delete SimpleName: param(2057)", "Delete SimpleName: Param(2058)", "Delete SimpleType: Param(2059)", "Delete SimpleName: OP_SUMMARY(2060)", "Delete SimpleName: hit(2061)", "Delete SimpleName: query(2062)", "Delete ClassInstanceCreation(2063)", "Delete VariableDeclarationFragment(2064)", "Delete VariableDeclarationStatement(2065)", "Delete SimpleName: Result(2081)", "Delete SimpleType: Result(2082)", "Delete SimpleName: result(2083)", "Delete SimpleName: Result(2084)", "Delete SimpleType: Result(2085)", "Delete SimpleName: call(2086)", "Delete SimpleName: param(2087)", "Delete SimpleName: address(2088)", "Delete MethodInvocation(2089)", "Delete CastExpression(2090)", "Delete VariableDeclarationFragment(2091)", "Delete VariableDeclarationStatement(2092)", "Delete QualifiedName: result.value(2093)", "Delete SimpleName: toString(2094)", "Delete MethodInvocation(2095)", "Delete ReturnStatement(2096)", "Delete SimpleName: Param(2164)", "Delete SimpleType: Param(2165)", "Delete SimpleName: OP_SUMMARY(2166)", "Delete SimpleName: hit(2167)", "Delete SimpleName: query(2168)", "Delete ClassInstanceCreation(2169)", "Delete SimpleName: Writable(2189)", "Delete SimpleType: Writable(2190)", "Delete Dimension(2191)", "Delete ArrayType: Writable[](2192)", "Delete SimpleName: results(2193)", "Delete MethodInvocation(2197)", "Delete VariableDeclarationFragment(2198)", "Delete VariableDeclarationStatement(2199)", "Delete SimpleName: strings(2204)", "Delete SimpleName: String(2205)", "Delete SimpleType: String(2206)", "Delete Dimension(2207)", "Delete ArrayType: String[](2208)", "Delete QualifiedName: results.length(2209)", "Delete ArrayCreation(2210)", "Delete VariableDeclarationFragment(2211)", "Delete VariableDeclarationStatement(2212)", "Delete PrimitiveType: int(2213)", "Delete SimpleName: i(2214)", "Delete NumberLiteral: 0(2215)", "Delete VariableDeclarationFragment(2216)", "Delete VariableDeclarationExpression(2217)", "Delete SimpleName: i(2218)", "Delete QualifiedName: results.length(2219)", "Delete InfixExpression: <(2220)", "Delete SimpleName: i(2221)", "Delete PostfixExpression: ++(2222)", "Delete SimpleName: results(2223)", "Delete SimpleName: i(2224)", "Delete ArrayAccess(2225)", "Delete NullLiteral(2226)", "Delete InfixExpression: !=(2227)", "Delete SimpleName: strings(2228)", "Delete SimpleName: i(2229)", "Delete ArrayAccess(2230)", "Delete SimpleName: Result(2231)", "Delete SimpleType: Result(2232)", "Delete SimpleName: results(2233)", "Delete SimpleName: i(2234)", "Delete ArrayAccess(2235)", "Delete CastExpression(2236)", "Delete ParenthesizedExpression(2237)", "Delete SimpleName: value(2238)", "Delete FieldAccess(2239)", "Delete SimpleName: toString(2240)", "Delete MethodInvocation(2241)", "Delete Assignment: =(2242)", "Delete ExpressionStatement(2243)", "Delete IfStatement(2244)", "Delete Block(2245)", "Delete ForStatement(2246)", "Delete SimpleName: strings(2247)", "Delete ReturnStatement(2248)", "Delete SimpleName: Param(2262)", "Delete SimpleType: Param(2263)", "Delete SimpleName: param(2264)", "Delete SimpleName: Param(2265)", "Delete SimpleType: Param(2266)", "Delete SimpleName: OP_CONTENT(2267)", "Delete SimpleName: hit(2268)", "Delete ClassInstanceCreation(2269)", "Delete VariableDeclarationFragment(2270)", "Delete VariableDeclarationStatement(2271)", "Delete SimpleName: InetSocketAddress(2272)", "Delete SimpleType: InetSocketAddress(2273)", "Delete SimpleName: address(2274)", "Delete SimpleName: InetSocketAddress(2275)", "Delete SimpleType: InetSocketAddress(2276)", "Delete SimpleName: segmentToAddress(2277)", "Delete SimpleName: getValue(2280)", "Delete StringLiteral: \"segment\"(2281)", "Delete MethodInvocation(2282)", "Delete MethodInvocation(2283)", "Delete CastExpression(2284)", "Delete VariableDeclarationFragment(2285)", "Delete VariableDeclarationStatement(2286)", "Delete SimpleName: Result(2287)", "Delete SimpleType: Result(2288)", "Delete SimpleName: result(2289)", "Delete SimpleName: Result(2290)", "Delete SimpleType: Result(2291)", "Delete SimpleName: call(2292)", "Delete SimpleName: param(2293)", "Delete SimpleName: address(2294)", "Delete MethodInvocation(2295)", "Delete CastExpression(2296)", "Delete VariableDeclarationFragment(2297)", "Delete VariableDeclarationStatement(2298)", "Delete SimpleName: BytesWritable(2299)", "Delete SimpleType: BytesWritable(2300)", "Delete QualifiedName: result.value(2301)", "Delete CastExpression(2302)", "Delete ParenthesizedExpression(2303)", "Delete MethodInvocation(2305)", "Delete ReturnStatement(2306)", "Delete SimpleName: Param(2319)", "Delete SimpleType: Param(2320)", "Delete SimpleName: param(2321)", "Delete SimpleName: Param(2322)", "Delete SimpleType: Param(2323)", "Delete SimpleName: OP_PARSEDATA(2324)", "Delete SimpleName: hit(2325)", "Delete ClassInstanceCreation(2326)", "Delete VariableDeclarationFragment(2327)", "Delete VariableDeclarationStatement(2328)", "Delete SimpleName: InetSocketAddress(2329)", "Delete SimpleType: InetSocketAddress(2330)", "Delete SimpleName: address(2331)", "Delete SimpleName: InetSocketAddress(2332)", "Delete SimpleType: InetSocketAddress(2333)", "Delete SimpleName: segmentToAddress(2334)", "Delete SimpleName: getValue(2337)", "Delete StringLiteral: \"segment\"(2338)", "Delete MethodInvocation(2339)", "Delete MethodInvocation(2340)", "Delete CastExpression(2341)", "Delete VariableDeclarationFragment(2342)", "Delete VariableDeclarationStatement(2343)", "Delete SimpleName: Result(2344)", "Delete SimpleType: Result(2345)", "Delete SimpleName: result(2346)", "Delete SimpleName: Result(2347)", "Delete SimpleType: Result(2348)", "Delete SimpleName: call(2349)", "Delete SimpleName: param(2350)", "Delete SimpleName: address(2351)", "Delete MethodInvocation(2352)", "Delete CastExpression(2353)", "Delete VariableDeclarationFragment(2354)", "Delete VariableDeclarationStatement(2355)", "Delete SimpleName: ParseData(2356)", "Delete SimpleType: ParseData(2357)", "Delete QualifiedName: result.value(2358)", "Delete CastExpression(2359)", "Delete ReturnStatement(2360)", "Delete SimpleName: IOException(2371)", "Delete SimpleType: IOException(2372)", "Delete SimpleName: Param(2373)", "Delete SimpleType: Param(2374)", "Delete SimpleName: param(2375)", "Delete SimpleName: Param(2376)", "Delete SimpleType: Param(2377)", "Delete SimpleName: OP_PARSETEXT(2378)", "Delete SimpleName: hit(2379)", "Delete ClassInstanceCreation(2380)", "Delete VariableDeclarationFragment(2381)", "Delete VariableDeclarationStatement(2382)", "Delete SimpleName: InetSocketAddress(2383)", "Delete SimpleType: InetSocketAddress(2384)", "Delete SimpleName: address(2385)", "Delete SimpleName: InetSocketAddress(2386)", "Delete SimpleType: InetSocketAddress(2387)", "Delete SimpleName: segmentToAddress(2388)", "Delete SimpleName: getValue(2391)", "Delete StringLiteral: \"segment\"(2392)", "Delete MethodInvocation(2393)", "Delete MethodInvocation(2394)", "Delete CastExpression(2395)", "Delete VariableDeclarationFragment(2396)", "Delete VariableDeclarationStatement(2397)", "Delete SimpleName: Result(2398)", "Delete SimpleType: Result(2399)", "Delete SimpleName: result(2400)", "Delete SimpleName: Result(2401)", "Delete SimpleType: Result(2402)", "Delete SimpleName: call(2403)", "Delete SimpleName: param(2404)", "Delete SimpleName: address(2405)", "Delete MethodInvocation(2406)", "Delete CastExpression(2407)", "Delete VariableDeclarationFragment(2408)", "Delete VariableDeclarationStatement(2409)", "Delete SimpleName: ParseText(2410)", "Delete SimpleType: ParseText(2411)", "Delete QualifiedName: result.value(2412)", "Delete CastExpression(2413)", "Delete ReturnStatement(2414)", "Delete SimpleName: IOException(2427)", "Delete SimpleType: IOException(2428)", "Delete SimpleName: Param(2429)", "Delete SimpleType: Param(2430)", "Delete SimpleName: param(2431)", "Delete SimpleName: Param(2432)", "Delete SimpleType: Param(2433)", "Delete SimpleName: OP_ANCHORS(2434)", "Delete SimpleName: hit(2435)", "Delete ClassInstanceCreation(2436)", "Delete VariableDeclarationFragment(2437)", "Delete VariableDeclarationStatement(2438)", "Delete SimpleName: InetSocketAddress(2439)", "Delete SimpleType: InetSocketAddress(2440)", "Delete SimpleName: address(2441)", "Delete SimpleName: InetSocketAddress(2442)", "Delete SimpleType: InetSocketAddress(2443)", "Delete SimpleName: segmentToAddress(2444)", "Delete SimpleName: getValue(2447)", "Delete StringLiteral: \"segment\"(2448)", "Delete MethodInvocation(2449)", "Delete MethodInvocation(2450)", "Delete CastExpression(2451)", "Delete VariableDeclarationFragment(2452)", "Delete VariableDeclarationStatement(2453)", "Delete SimpleName: Result(2454)", "Delete SimpleType: Result(2455)", "Delete SimpleName: result(2456)", "Delete SimpleName: Result(2457)", "Delete SimpleType: Result(2458)", "Delete SimpleName: call(2459)", "Delete SimpleName: param(2460)", "Delete SimpleName: address(2461)", "Delete MethodInvocation(2462)", "Delete CastExpression(2463)", "Delete VariableDeclarationFragment(2464)", "Delete VariableDeclarationStatement(2465)", "Delete SimpleName: ArrayWritable(2466)", "Delete SimpleType: ArrayWritable(2467)", "Delete QualifiedName: result.value(2468)", "Delete CastExpression(2469)", "Delete ParenthesizedExpression(2470)", "Delete SimpleName: toStrings(2471)", "Delete MethodInvocation(2472)", "Delete ReturnStatement(2473)", "Delete SimpleName: IOException(2483)", "Delete SimpleType: IOException(2484)", "Delete SimpleName: Param(2485)", "Delete SimpleType: Param(2486)", "Delete SimpleName: param(2487)", "Delete SimpleName: Param(2488)", "Delete SimpleType: Param(2489)", "Delete SimpleName: OP_FETCHDATE(2490)", "Delete SimpleName: hit(2491)", "Delete ClassInstanceCreation(2492)", "Delete VariableDeclarationFragment(2493)", "Delete VariableDeclarationStatement(2494)", "Delete SimpleName: InetSocketAddress(2495)", "Delete SimpleType: InetSocketAddress(2496)", "Delete SimpleName: address(2497)", "Delete SimpleName: InetSocketAddress(2498)", "Delete SimpleType: InetSocketAddress(2499)", "Delete SimpleName: segmentToAddress(2500)", "Delete SimpleName: getValue(2503)", "Delete StringLiteral: \"segment\"(2504)", "Delete MethodInvocation(2505)", "Delete MethodInvocation(2506)", "Delete CastExpression(2507)", "Delete VariableDeclarationFragment(2508)", "Delete VariableDeclarationStatement(2509)", "Delete SimpleName: Result(2510)", "Delete SimpleType: Result(2511)", "Delete SimpleName: result(2512)", "Delete SimpleName: Result(2513)", "Delete SimpleType: Result(2514)", "Delete SimpleName: call(2515)", "Delete SimpleName: param(2516)", "Delete SimpleName: address(2517)", "Delete MethodInvocation(2518)", "Delete CastExpression(2519)", "Delete VariableDeclarationFragment(2520)", "Delete VariableDeclarationStatement(2521)", "Delete SimpleName: LongWritable(2522)", "Delete SimpleType: LongWritable(2523)", "Delete QualifiedName: result.value(2524)", "Delete CastExpression(2525)", "Delete ParenthesizedExpression(2526)", "Delete MethodInvocation(2528)", "Delete ReturnStatement(2529)", "Delete SimpleName: shouldrun(2699)", "Delete BooleanLiteral: true(2700)", "Delete Assignment: =(2701)", "Delete SimpleName: InetSocketAddress(2721)", "Delete SimpleType: InetSocketAddress(2722)", "Delete Dimension(2723)", "Delete ArrayType: InetSocketAddress[](2724)", "Delete NumberLiteral: 0(2725)", "Delete ArrayCreation(2726)", "Delete SimpleName: stop(2760)", "Delete SuperMethodInvocation(2761)", "Delete ExpressionStatement(2762)", "Delete SimpleName: LOG(2763)", "Delete SimpleName: info(2764)", "Delete StringLiteral: \"stopping watchdog.\"(2765)", "Delete MethodInvocation(2766)", "Delete ExpressionStatement(2767)", "Delete SimpleName: watchdog(2772)", "Delete Modifier: private(51)", "Delete Modifier: static(52)", "Delete Modifier: final(53)", "Delete PrimitiveType: byte(54)", "Delete SimpleName: OP_SEGMENTS(55)", "Delete PrimitiveType: byte(56)", "Delete NumberLiteral: 0(57)", "Delete CastExpression(58)", "Delete VariableDeclarationFragment(59)", "Delete FieldDeclaration(60)", "Delete Modifier: private(61)", "Delete Modifier: static(62)", "Delete Modifier: final(63)", "Delete PrimitiveType: byte(64)", "Delete SimpleName: OP_SEARCH(65)", "Delete PrimitiveType: byte(66)", "Delete NumberLiteral: 1(67)", "Delete CastExpression(68)", "Delete VariableDeclarationFragment(69)", "Delete FieldDeclaration(70)", "Delete Modifier: private(71)", "Delete Modifier: static(72)", "Delete Modifier: final(73)", "Delete PrimitiveType: byte(74)", "Delete SimpleName: OP_EXPLAIN(75)", "Delete PrimitiveType: byte(76)", "Delete NumberLiteral: 2(77)", "Delete CastExpression(78)", "Delete VariableDeclarationFragment(79)", "Delete FieldDeclaration(80)", "Delete Modifier: private(81)", "Delete Modifier: static(82)", "Delete Modifier: final(83)", "Delete PrimitiveType: byte(84)", "Delete SimpleName: OP_DETAILS(85)", "Delete PrimitiveType: byte(86)", "Delete NumberLiteral: 3(87)", "Delete CastExpression(88)", "Delete VariableDeclarationFragment(89)", "Delete FieldDeclaration(90)", "Delete Modifier: private(91)", "Delete Modifier: static(92)", "Delete Modifier: final(93)", "Delete PrimitiveType: byte(94)", "Delete SimpleName: OP_SUMMARY(95)", "Delete PrimitiveType: byte(96)", "Delete NumberLiteral: 4(97)", "Delete CastExpression(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete Modifier: private(101)", "Delete Modifier: static(102)", "Delete Modifier: final(103)", "Delete PrimitiveType: byte(104)", "Delete SimpleName: OP_CONTENT(105)", "Delete PrimitiveType: byte(106)", "Delete NumberLiteral: 5(107)", "Delete CastExpression(108)", "Delete VariableDeclarationFragment(109)", "Delete FieldDeclaration(110)", "Delete Modifier: private(111)", "Delete Modifier: static(112)", "Delete Modifier: final(113)", "Delete PrimitiveType: byte(114)", "Delete SimpleName: OP_ANCHORS(115)", "Delete PrimitiveType: byte(116)", "Delete NumberLiteral: 6(117)", "Delete CastExpression(118)", "Delete VariableDeclarationFragment(119)", "Delete FieldDeclaration(120)", "Delete Modifier: private(121)", "Delete Modifier: static(122)", "Delete Modifier: final(123)", "Delete PrimitiveType: byte(124)", "Delete SimpleName: OP_PARSEDATA(125)", "Delete PrimitiveType: byte(126)", "Delete NumberLiteral: 7(127)", "Delete CastExpression(128)", "Delete VariableDeclarationFragment(129)", "Delete FieldDeclaration(130)", "Delete Modifier: private(131)", "Delete Modifier: static(132)", "Delete Modifier: final(133)", "Delete PrimitiveType: byte(134)", "Delete SimpleName: OP_PARSETEXT(135)", "Delete PrimitiveType: byte(136)", "Delete NumberLiteral: 8(137)", "Delete CastExpression(138)", "Delete VariableDeclarationFragment(139)", "Delete FieldDeclaration(140)", "Delete Modifier: private(141)", "Delete Modifier: static(142)", "Delete Modifier: final(143)", "Delete PrimitiveType: byte(144)", "Delete SimpleName: OP_FETCHDATE(145)", "Delete PrimitiveType: byte(146)", "Delete NumberLiteral: 9(147)", "Delete CastExpression(148)", "Delete VariableDeclarationFragment(149)", "Delete FieldDeclaration(150)", "Delete Javadoc(153)", "Delete Modifier: private(154)", "Delete Modifier: static(155)", "Delete Modifier: final(156)", "Delete SimpleName: String(157)", "Delete SimpleType: String(158)", "Delete Dimension(159)", "Delete ArrayType: String[](160)", "Delete SimpleName: OP_NAMES(161)", "Delete NumberLiteral: 10(166)", "Delete ArrayCreation(167)", "Delete VariableDeclarationFragment(168)", "Delete FieldDeclaration(169)", "Delete Modifier: static(170)", "Delete SimpleName: OP_NAMES(171)", "Delete SimpleName: OP_SEGMENTS(172)", "Delete ArrayAccess(173)", "Delete StringLiteral: \"getSegmentNames\"(174)", "Delete Assignment: =(175)", "Delete ExpressionStatement(176)", "Delete SimpleName: OP_NAMES(177)", "Delete SimpleName: OP_SEARCH(178)", "Delete ArrayAccess(179)", "Delete StringLiteral: \"search\"(180)", "Delete Assignment: =(181)", "Delete ExpressionStatement(182)", "Delete SimpleName: OP_NAMES(183)", "Delete SimpleName: OP_EXPLAIN(184)", "Delete ArrayAccess(185)", "Delete StringLiteral: \"getExplanation\"(186)", "Delete Assignment: =(187)", "Delete ExpressionStatement(188)", "Delete SimpleName: OP_NAMES(189)", "Delete SimpleName: OP_DETAILS(190)", "Delete ArrayAccess(191)", "Delete StringLiteral: \"getDetails\"(192)", "Delete Assignment: =(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: OP_NAMES(195)", "Delete SimpleName: OP_SUMMARY(196)", "Delete ArrayAccess(197)", "Delete StringLiteral: \"getSummary\"(198)", "Delete Assignment: =(199)", "Delete ExpressionStatement(200)", "Delete SimpleName: OP_NAMES(201)", "Delete SimpleName: OP_CONTENT(202)", "Delete ArrayAccess(203)", "Delete StringLiteral: \"getContent\"(204)", "Delete Assignment: =(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: OP_NAMES(207)", "Delete SimpleName: OP_ANCHORS(208)", "Delete ArrayAccess(209)", "Delete StringLiteral: \"getAnchors\"(210)", "Delete Assignment: =(211)", "Delete ExpressionStatement(212)", "Delete SimpleName: OP_NAMES(213)", "Delete SimpleName: OP_PARSEDATA(214)", "Delete ArrayAccess(215)", "Delete StringLiteral: \"getParseData\"(216)", "Delete Assignment: =(217)", "Delete ExpressionStatement(218)", "Delete SimpleName: OP_NAMES(219)", "Delete SimpleName: OP_PARSETEXT(220)", "Delete ArrayAccess(221)", "Delete StringLiteral: \"getParseText\"(222)", "Delete Assignment: =(223)", "Delete ExpressionStatement(224)", "Delete SimpleName: OP_NAMES(225)", "Delete SimpleName: OP_FETCHDATE(226)", "Delete ArrayAccess(227)", "Delete StringLiteral: \"getFetchDate\"(228)", "Delete Assignment: =(229)", "Delete ExpressionStatement(230)", "Delete Block(231)", "Delete Initializer(232)", "Delete TextElement: The parameter passed with IPC requests.  Public only so that (233)", "Delete SimpleName: Server(234)", "Delete TagElement: @link(235)", "Delete TextElement:  can construct instances. (236)", "Delete TagElement(237)", "Delete Javadoc(238)", "Delete SimpleName: Writable(242)", "Delete SimpleType: Writable(243)", "Delete SimpleName: Param(262)", "Delete Block(263)", "Delete MethodDeclaration(264)", "Delete SimpleName: Param(265)", "Delete PrimitiveType: byte(266)", "Delete SimpleName: op(267)", "Delete SingleVariableDeclaration(268)", "Delete SimpleName: Writable(269)", "Delete SimpleType: Writable(270)", "Delete SimpleName: first(271)", "Delete SingleVariableDeclaration(272)", "Delete SimpleName: op(273)", "Delete SimpleName: first(274)", "Delete SimpleName: NullWritable(275)", "Delete SimpleName: get(276)", "Delete MethodInvocation(277)", "Delete ConstructorInvocation(278)", "Delete Block(279)", "Delete MethodDeclaration(280)", "Delete SimpleName: Param(281)", "Delete PrimitiveType: byte(282)", "Delete SimpleName: op(283)", "Delete SingleVariableDeclaration(284)", "Delete SimpleName: Writable(285)", "Delete SimpleType: Writable(286)", "Delete SimpleName: first(287)", "Delete SingleVariableDeclaration(288)", "Delete SimpleName: Writable(289)", "Delete SimpleType: Writable(290)", "Delete SimpleName: second(291)", "Delete SingleVariableDeclaration(292)", "Delete ThisExpression(299)", "Delete SimpleName: first(300)", "Delete FieldAccess(301)", "Delete SimpleName: first(302)", "Delete Assignment: =(303)", "Delete ExpressionStatement(304)", "Delete ThisExpression(305)", "Delete SimpleName: second(306)", "Delete FieldAccess(307)", "Delete SimpleName: second(308)", "Delete Assignment: =(309)", "Delete ExpressionStatement(310)", "Delete Block(311)", "Delete MethodDeclaration(312)", "Delete Modifier: public(313)", "Delete PrimitiveType: void(314)", "Delete SimpleName: write(315)", "Delete SimpleName: DataOutput(316)", "Delete SimpleType: DataOutput(317)", "Delete SimpleName: out(318)", "Delete SingleVariableDeclaration(319)", "Delete SimpleName: IOException(320)", "Delete SimpleType: IOException(321)", "Delete Block(337)", "Delete MethodDeclaration(338)", "Delete Modifier: public(339)", "Delete PrimitiveType: void(340)", "Delete SimpleName: readFields(341)", "Delete SimpleName: DataInput(342)", "Delete SimpleType: DataInput(343)", "Delete SimpleName: in(344)", "Delete SingleVariableDeclaration(345)", "Delete SimpleName: IOException(346)", "Delete SimpleType: IOException(347)", "Delete SimpleName: op(348)", "Delete SimpleName: in(349)", "Delete SimpleName: readByte(350)", "Delete MethodInvocation(351)", "Delete Assignment: =(352)", "Delete ExpressionStatement(353)", "Delete SimpleName: op(354)", "Delete SimpleName: OP_SEGMENTS(355)", "Delete SwitchCase(356)", "Delete SimpleName: first(357)", "Delete SimpleName: NullWritable(358)", "Delete SimpleName: get(359)", "Delete MethodInvocation(360)", "Delete Assignment: =(361)", "Delete ExpressionStatement(362)", "Delete SimpleName: second(363)", "Delete SimpleName: NullWritable(364)", "Delete SimpleName: get(365)", "Delete MethodInvocation(366)", "Delete Assignment: =(367)", "Delete ExpressionStatement(368)", "Delete BreakStatement(369)", "Delete SimpleName: OP_SEARCH(370)", "Delete SwitchCase(371)", "Delete SimpleName: first(372)", "Delete SimpleName: Query(373)", "Delete SimpleType: Query(374)", "Delete ClassInstanceCreation(375)", "Delete Assignment: =(376)", "Delete ExpressionStatement(377)", "Delete SimpleName: second(378)", "Delete SimpleName: IntWritable(379)", "Delete SimpleType: IntWritable(380)", "Delete ClassInstanceCreation(381)", "Delete Assignment: =(382)", "Delete ExpressionStatement(383)", "Delete BreakStatement(384)", "Delete SimpleName: OP_EXPLAIN(385)", "Delete SwitchCase(386)", "Delete SimpleName: first(387)", "Delete ClassInstanceCreation(390)", "Delete Assignment: =(391)", "Delete ExpressionStatement(392)", "Delete SimpleName: second(393)", "Delete SimpleName: Hit(394)", "Delete SimpleType: Hit(395)", "Delete ClassInstanceCreation(396)", "Delete Assignment: =(397)", "Delete ExpressionStatement(398)", "Delete BreakStatement(399)", "Delete SimpleName: OP_DETAILS(400)", "Delete SwitchCase(401)", "Delete SimpleName: first(402)", "Delete ClassInstanceCreation(405)", "Delete Assignment: =(406)", "Delete ExpressionStatement(407)", "Delete SimpleName: second(408)", "Delete SimpleName: NullWritable(409)", "Delete SimpleName: get(410)", "Delete MethodInvocation(411)", "Delete Assignment: =(412)", "Delete ExpressionStatement(413)", "Delete BreakStatement(414)", "Delete SimpleName: OP_SUMMARY(415)", "Delete SwitchCase(416)", "Delete SimpleName: first(417)", "Delete SimpleName: HitDetails(418)", "Delete SimpleType: HitDetails(419)", "Delete ClassInstanceCreation(420)", "Delete Assignment: =(421)", "Delete ExpressionStatement(422)", "Delete SimpleName: second(423)", "Delete ClassInstanceCreation(426)", "Delete Assignment: =(427)", "Delete ExpressionStatement(428)", "Delete BreakStatement(429)", "Delete SimpleName: OP_CONTENT(430)", "Delete SwitchCase(431)", "Delete SimpleName: OP_ANCHORS(432)", "Delete SwitchCase(433)", "Delete SimpleName: OP_PARSEDATA(434)", "Delete SwitchCase(435)", "Delete SimpleName: OP_PARSETEXT(436)", "Delete SwitchCase(437)", "Delete SimpleName: OP_FETCHDATE(438)", "Delete SwitchCase(439)", "Delete SimpleName: first(440)", "Delete ClassInstanceCreation(443)", "Delete Assignment: =(444)", "Delete ExpressionStatement(445)", "Delete SimpleName: second(446)", "Delete SimpleName: NullWritable(447)", "Delete SimpleName: get(448)", "Delete MethodInvocation(449)", "Delete Assignment: =(450)", "Delete ExpressionStatement(451)", "Delete BreakStatement(452)", "Delete SwitchCase(453)", "Delete StringLiteral: \"Unknown op code: \"(456)", "Delete SimpleName: op(457)", "Delete InfixExpression: +(458)", "Delete ClassInstanceCreation(459)", "Delete ThrowStatement(460)", "Delete SwitchStatement(461)", "Delete SimpleName: first(462)", "Delete SimpleName: readFields(463)", "Delete SimpleName: in(464)", "Delete MethodInvocation(465)", "Delete ExpressionStatement(466)", "Delete SimpleName: second(467)", "Delete SimpleName: readFields(468)", "Delete SimpleName: in(469)", "Delete MethodInvocation(470)", "Delete ExpressionStatement(471)", "Delete Block(472)", "Delete MethodDeclaration(473)", "Delete TypeDeclaration: class(474)", "Delete TextElement: The parameter returned with IPC responses.  Public only so that (475)", "Delete SimpleName: Client(476)", "Delete TagElement: @link(477)", "Delete TextElement:  can construct instances. (478)", "Delete TagElement(479)", "Delete Javadoc(480)", "Delete Modifier: public(481)", "Delete Modifier: static(482)", "Delete SimpleName: Result(483)", "Delete SimpleType: Writable(485)", "Delete Modifier: private(486)", "Delete PrimitiveType: byte(487)", "Delete FieldDeclaration(490)", "Delete Modifier: public(497)", "Delete SimpleName: Result(498)", "Delete Block(499)", "Delete MethodDeclaration(500)", "Delete SimpleName: Result(501)", "Delete PrimitiveType: byte(502)", "Delete SimpleName: op(503)", "Delete SingleVariableDeclaration(504)", "Delete SimpleName: Writable(505)", "Delete SimpleType: Writable(506)", "Delete SimpleName: value(507)", "Delete SingleVariableDeclaration(508)", "Delete ThisExpression(509)", "Delete SimpleName: op(510)", "Delete FieldAccess(511)", "Delete SimpleName: op(512)", "Delete Assignment: =(513)", "Delete ExpressionStatement(514)", "Delete ThisExpression(515)", "Delete SimpleName: value(516)", "Delete FieldAccess(517)", "Delete SimpleName: value(518)", "Delete Assignment: =(519)", "Delete ExpressionStatement(520)", "Delete Block(521)", "Delete MethodDeclaration(522)", "Delete Modifier: public(523)", "Delete PrimitiveType: void(524)", "Delete SimpleName: write(525)", "Delete SimpleName: DataOutput(526)", "Delete SimpleType: DataOutput(527)", "Delete SimpleName: out(528)", "Delete SingleVariableDeclaration(529)", "Delete SimpleName: out(532)", "Delete SimpleName: writeByte(533)", "Delete SimpleName: op(534)", "Delete MethodInvocation(535)", "Delete ExpressionStatement(536)", "Delete SimpleName: value(537)", "Delete SimpleName: write(538)", "Delete SimpleName: out(539)", "Delete MethodInvocation(540)", "Delete ExpressionStatement(541)", "Delete Block(542)", "Delete MethodDeclaration(543)", "Delete Modifier: public(544)", "Delete PrimitiveType: void(545)", "Delete SimpleName: readFields(546)", "Delete SimpleType: DataInput(548)", "Delete SimpleName: in(549)", "Delete SingleVariableDeclaration(550)", "Delete SimpleName: op(553)", "Delete SimpleName: in(554)", "Delete SimpleName: readByte(555)", "Delete MethodInvocation(556)", "Delete Assignment: =(557)", "Delete ExpressionStatement(558)", "Delete SimpleName: op(559)", "Delete SimpleName: OP_SEGMENTS(560)", "Delete SwitchCase(561)", "Delete SimpleName: value(562)", "Delete SimpleName: ArrayWritable(563)", "Delete SimpleType: ArrayWritable(564)", "Delete SimpleName: UTF8(565)", "Delete SimpleType: UTF8(566)", "Delete TypeLiteral(567)", "Delete ClassInstanceCreation(568)", "Delete Assignment: =(569)", "Delete ExpressionStatement(570)", "Delete BreakStatement(571)", "Delete SimpleName: OP_SEARCH(572)", "Delete SwitchCase(573)", "Delete SimpleName: value(574)", "Delete ClassInstanceCreation(577)", "Delete Assignment: =(578)", "Delete ExpressionStatement(579)", "Delete BreakStatement(580)", "Delete SimpleName: OP_EXPLAIN(581)", "Delete SwitchCase(582)", "Delete SimpleName: value(583)", "Delete SimpleName: UTF8(584)", "Delete SimpleType: UTF8(585)", "Delete ClassInstanceCreation(586)", "Delete Assignment: =(587)", "Delete ExpressionStatement(588)", "Delete BreakStatement(589)", "Delete SimpleName: OP_DETAILS(590)", "Delete SwitchCase(591)", "Delete SimpleName: value(592)", "Delete SimpleName: HitDetails(593)", "Delete SimpleType: HitDetails(594)", "Delete ClassInstanceCreation(595)", "Delete Assignment: =(596)", "Delete ExpressionStatement(597)", "Delete BreakStatement(598)", "Delete SimpleName: OP_SUMMARY(599)", "Delete SwitchCase(600)", "Delete SimpleName: value(601)", "Delete SimpleName: UTF8(602)", "Delete SimpleType: UTF8(603)", "Delete ClassInstanceCreation(604)", "Delete Assignment: =(605)", "Delete ExpressionStatement(606)", "Delete BreakStatement(607)", "Delete SimpleName: OP_CONTENT(608)", "Delete SwitchCase(609)", "Delete SimpleName: value(610)", "Delete SimpleName: BytesWritable(611)", "Delete SimpleType: BytesWritable(612)", "Delete ClassInstanceCreation(613)", "Delete Assignment: =(614)", "Delete ExpressionStatement(615)", "Delete BreakStatement(616)", "Delete SimpleName: OP_ANCHORS(617)", "Delete SwitchCase(618)", "Delete SimpleName: value(619)", "Delete SimpleName: ArrayWritable(620)", "Delete SimpleType: ArrayWritable(621)", "Delete SimpleName: UTF8(622)", "Delete SimpleType: UTF8(623)", "Delete TypeLiteral(624)", "Delete ClassInstanceCreation(625)", "Delete Assignment: =(626)", "Delete ExpressionStatement(627)", "Delete BreakStatement(628)", "Delete SimpleName: OP_PARSEDATA(629)", "Delete SwitchCase(630)", "Delete SimpleName: value(631)", "Delete SimpleName: ParseData(632)", "Delete SimpleType: ParseData(633)", "Delete ClassInstanceCreation(634)", "Delete Assignment: =(635)", "Delete ExpressionStatement(636)", "Delete BreakStatement(637)", "Delete SimpleName: OP_PARSETEXT(638)", "Delete SwitchCase(639)", "Delete SimpleName: value(640)", "Delete SimpleName: ParseText(641)", "Delete SimpleType: ParseText(642)", "Delete ClassInstanceCreation(643)", "Delete Assignment: =(644)", "Delete ExpressionStatement(645)", "Delete BreakStatement(646)", "Delete SimpleName: OP_FETCHDATE(647)", "Delete SwitchCase(648)", "Delete SimpleName: value(649)", "Delete SimpleName: LongWritable(650)", "Delete SimpleType: LongWritable(651)", "Delete ClassInstanceCreation(652)", "Delete Assignment: =(653)", "Delete ExpressionStatement(654)", "Delete BreakStatement(655)", "Delete SwitchCase(656)", "Delete SimpleName: RuntimeException(657)", "Delete SimpleType: RuntimeException(658)", "Delete StringLiteral: \"Unknown op code: \"(659)", "Delete SimpleName: op(660)", "Delete InfixExpression: +(661)", "Delete ClassInstanceCreation(662)", "Delete ThrowStatement(663)", "Delete SwitchStatement(664)", "Delete SimpleName: value(665)", "Delete SimpleName: readFields(666)", "Delete SimpleName: in(667)", "Delete MethodInvocation(668)", "Delete ExpressionStatement(669)", "Delete Block(670)", "Delete MethodDeclaration(671)", "Delete TypeDeclaration: class(672)", "Delete Modifier: public(676)", "Delete Modifier: static(677)", "Delete SimpleName: Server(678)", "Delete SimpleName: bean(684)", "Delete VariableDeclarationFragment(685)", "Delete FieldDeclaration(686)", "Delete TextElement: Construct a search server on the index and segments in the named(687)", "Delete TextElement: directory, listening on the named port. (688)", "Delete TagElement(689)", "Delete Javadoc(690)", "Delete Modifier: public(691)", "Delete SimpleName: Server(692)", "Delete SimpleType: File(694)", "Delete SimpleName: directory(695)", "Delete SingleVariableDeclaration(696)", "Delete PrimitiveType: int(697)", "Delete SimpleName: port(698)", "Delete SingleVariableDeclaration(699)", "Delete SimpleName: port(702)", "Delete SimpleName: Param(703)", "Delete SimpleType: Param(704)", "Delete TypeLiteral(705)", "Delete NumberLiteral: 10(706)", "Delete SuperConstructorInvocation(707)", "Delete ThisExpression(708)", "Delete SimpleName: bean(709)", "Delete FieldAccess(710)", "Delete Assignment: =(715)", "Delete ExpressionStatement(716)", "Delete Block(717)", "Delete MethodDeclaration(718)", "Delete Modifier: public(719)", "Delete SimpleName: Writable(720)", "Delete SimpleType: Writable(721)", "Delete SimpleName: call(722)", "Delete SimpleName: Writable(723)", "Delete SimpleType: Writable(724)", "Delete SimpleName: param(725)", "Delete SingleVariableDeclaration(726)", "Delete SimpleName: Param(729)", "Delete SimpleType: Param(730)", "Delete SimpleName: p(731)", "Delete SimpleName: Param(732)", "Delete SimpleType: Param(733)", "Delete SimpleName: param(734)", "Delete CastExpression(735)", "Delete VariableDeclarationFragment(736)", "Delete VariableDeclarationStatement(737)", "Delete SimpleName: logRequest(738)", "Delete SimpleName: p(739)", "Delete MethodInvocation(740)", "Delete ExpressionStatement(741)", "Delete SimpleName: Writable(742)", "Delete SimpleType: Writable(743)", "Delete SimpleName: value(744)", "Delete VariableDeclarationFragment(745)", "Delete VariableDeclarationStatement(746)", "Delete QualifiedName: p.op(747)", "Delete SimpleName: OP_SEGMENTS(748)", "Delete SwitchCase(749)", "Delete SimpleName: value(750)", "Delete SimpleName: ArrayWritable(751)", "Delete SimpleType: ArrayWritable(752)", "Delete SimpleName: bean(753)", "Delete SimpleName: getSegmentNames(754)", "Delete MethodInvocation(755)", "Delete ClassInstanceCreation(756)", "Delete Assignment: =(757)", "Delete ExpressionStatement(758)", "Delete BreakStatement(759)", "Delete SimpleName: OP_SEARCH(760)", "Delete SwitchCase(761)", "Delete SimpleName: value(762)", "Delete SimpleName: bean(763)", "Delete SimpleName: search(764)", "Delete SimpleName: Query(765)", "Delete SimpleType: Query(766)", "Delete QualifiedName: p.first(767)", "Delete CastExpression(768)", "Delete SimpleName: IntWritable(769)", "Delete SimpleType: IntWritable(770)", "Delete QualifiedName: p.second(771)", "Delete CastExpression(772)", "Delete ParenthesizedExpression(773)", "Delete SimpleName: get(774)", "Delete MethodInvocation(775)", "Delete MethodInvocation(776)", "Delete Assignment: =(777)", "Delete ExpressionStatement(778)", "Delete BreakStatement(779)", "Delete SimpleName: OP_EXPLAIN(780)", "Delete SwitchCase(781)", "Delete SimpleName: value(782)", "Delete SimpleName: UTF8(783)", "Delete SimpleType: UTF8(784)", "Delete SimpleName: bean(785)", "Delete SimpleName: getExplanation(786)", "Delete SimpleName: Query(787)", "Delete SimpleType: Query(788)", "Delete QualifiedName: p.first(789)", "Delete CastExpression(790)", "Delete SimpleName: Hit(791)", "Delete SimpleType: Hit(792)", "Delete QualifiedName: p.second(793)", "Delete CastExpression(794)", "Delete MethodInvocation(795)", "Delete ClassInstanceCreation(796)", "Delete Assignment: =(797)", "Delete ExpressionStatement(798)", "Delete BreakStatement(799)", "Delete SimpleName: OP_DETAILS(800)", "Delete SwitchCase(801)", "Delete SimpleName: value(802)", "Delete SimpleName: bean(803)", "Delete SimpleName: getDetails(804)", "Delete SimpleName: Hit(805)", "Delete SimpleType: Hit(806)", "Delete QualifiedName: p.first(807)", "Delete CastExpression(808)", "Delete MethodInvocation(809)", "Delete Assignment: =(810)", "Delete ExpressionStatement(811)", "Delete BreakStatement(812)", "Delete SimpleName: OP_SUMMARY(813)", "Delete SwitchCase(814)", "Delete ExpressionStatement(831)", "Delete BreakStatement(832)", "Delete SimpleName: OP_CONTENT(833)", "Delete SwitchCase(834)", "Delete ExpressionStatement(847)", "Delete BreakStatement(848)", "Delete SimpleName: OP_ANCHORS(849)", "Delete SwitchCase(850)", "Delete ExpressionStatement(863)", "Delete BreakStatement(864)", "Delete SimpleName: OP_PARSEDATA(865)", "Delete SwitchCase(866)", "Delete ExpressionStatement(876)", "Delete BreakStatement(877)", "Delete SimpleName: OP_PARSETEXT(878)", "Delete SwitchCase(879)", "Delete SimpleName: value(880)", "Delete SimpleName: bean(881)", "Delete SimpleName: getParseText(882)", "Delete SimpleName: HitDetails(883)", "Delete SimpleType: HitDetails(884)", "Delete QualifiedName: p.first(885)", "Delete CastExpression(886)", "Delete MethodInvocation(887)", "Delete Assignment: =(888)", "Delete ExpressionStatement(889)", "Delete BreakStatement(890)", "Delete SimpleName: OP_FETCHDATE(891)", "Delete SwitchCase(892)", "Delete SimpleName: value(893)", "Delete SimpleName: LongWritable(894)", "Delete SimpleType: LongWritable(895)", "Delete SimpleName: bean(896)", "Delete SimpleName: getFetchDate(897)", "Delete SimpleName: HitDetails(898)", "Delete SimpleType: HitDetails(899)", "Delete QualifiedName: p.first(900)", "Delete CastExpression(901)", "Delete MethodInvocation(902)", "Delete ClassInstanceCreation(903)", "Delete Assignment: =(904)", "Delete ExpressionStatement(905)", "Delete BreakStatement(906)", "Delete SwitchCase(907)", "Delete SimpleName: RuntimeException(908)", "Delete SimpleType: RuntimeException(909)", "Delete StringLiteral: \"Unknown op code: \"(910)", "Delete QualifiedName: p.op(911)", "Delete InfixExpression: +(912)", "Delete ClassInstanceCreation(913)", "Delete ThrowStatement(914)", "Delete SwitchStatement(915)", "Delete SimpleName: Result(916)", "Delete SimpleType: Result(917)", "Delete QualifiedName: p.op(918)", "Delete SimpleName: value(919)", "Delete ClassInstanceCreation(920)", "Delete ReturnStatement(921)", "Delete Block(922)", "Delete MethodDeclaration(923)", "Delete Modifier: private(924)", "Delete Modifier: static(925)", "Delete PrimitiveType: void(926)", "Delete SimpleName: logRequest(927)", "Delete SingleVariableDeclaration(931)", "Delete SimpleName: StringBuffer(932)", "Delete SimpleType: StringBuffer(933)", "Delete SimpleName: buffer(934)", "Delete SimpleName: StringBuffer(935)", "Delete SimpleType: StringBuffer(936)", "Delete ClassInstanceCreation(937)", "Delete VariableDeclarationFragment(938)", "Delete VariableDeclarationStatement(939)", "Delete SimpleName: buffer(940)", "Delete SimpleName: append(941)", "Delete SimpleName: Thread(942)", "Delete SimpleName: currentThread(943)", "Delete MethodInvocation(944)", "Delete SimpleName: getName(945)", "Delete MethodInvocation(946)", "Delete MethodInvocation(947)", "Delete ExpressionStatement(948)", "Delete SimpleName: buffer(949)", "Delete SimpleName: append(950)", "Delete StringLiteral: \": \"(951)", "Delete MethodInvocation(952)", "Delete ExpressionStatement(953)", "Delete SimpleName: buffer(954)", "Delete SimpleName: append(955)", "Delete SimpleName: OP_NAMES(956)", "Delete QualifiedName: p.op(957)", "Delete ArrayAccess(958)", "Delete MethodInvocation(959)", "Delete ExpressionStatement(960)", "Delete SimpleName: buffer(961)", "Delete SimpleName: append(962)", "Delete StringLiteral: \"(\"(963)", "Delete MethodInvocation(964)", "Delete ExpressionStatement(965)", "Delete QualifiedName: p.first(966)", "Delete SimpleName: NullWritable(967)", "Delete SimpleName: get(968)", "Delete MethodInvocation(969)", "Delete InfixExpression: !=(970)", "Delete SimpleName: buffer(971)", "Delete SimpleName: append(972)", "Delete QualifiedName: p.first(973)", "Delete MethodInvocation(974)", "Delete ExpressionStatement(975)", "Delete QualifiedName: p.second(976)", "Delete SimpleName: NullWritable(977)", "Delete SimpleName: get(978)", "Delete MethodInvocation(979)", "Delete InfixExpression: !=(980)", "Delete SimpleName: buffer(981)", "Delete SimpleName: append(982)", "Delete StringLiteral: \", \"(983)", "Delete MethodInvocation(984)", "Delete ExpressionStatement(985)", "Delete SimpleName: buffer(986)", "Delete SimpleName: append(987)", "Delete QualifiedName: p.second(988)", "Delete MethodInvocation(989)", "Delete ExpressionStatement(990)", "Delete Block(991)", "Delete IfStatement(992)", "Delete Block(993)", "Delete IfStatement(994)", "Delete SimpleName: buffer(995)", "Delete SimpleName: append(996)", "Delete StringLiteral: \")\"(997)", "Delete MethodInvocation(998)", "Delete ExpressionStatement(999)", "Delete SimpleName: LOG(1000)", "Delete SimpleName: info(1001)", "Delete SimpleName: buffer(1002)", "Delete SimpleName: toString(1003)", "Delete MethodInvocation(1004)", "Delete MethodInvocation(1005)", "Delete ExpressionStatement(1006)", "Delete Block(1007)", "Delete MethodDeclaration(1008)", "Delete TypeDeclaration: class(1091)", "Delete Modifier: public(1095)", "Delete Modifier: static(1096)", "Delete SimpleName: Client(1097)", "Delete QualifiedName: org.apache.nutch.ipc.Client(1098)", "Delete SimpleType: org.apache.nutch.ipc.Client(1099)", "Delete Modifier: private(1110)", "Delete SimpleName: addresses(1115)", "Delete VariableDeclarationFragment(1122)", "Delete FieldDeclaration(1123)", "Delete Modifier: private(1124)", "Delete SimpleName: defaultaddresses(1129)", "Delete VariableDeclarationFragment(1130)", "Delete FieldDeclaration(1131)", "Delete TextElement: Flag for watchdog, true=keep running, false=stop(1141)", "Delete TagElement(1142)", "Delete Javadoc(1143)", "Delete Modifier: private(1144)", "Delete PrimitiveType: boolean(1145)", "Delete SimpleName: shouldrun(1146)", "Delete BooleanLiteral: true(1147)", "Delete VariableDeclarationFragment(1148)", "Delete FieldDeclaration(1149)", "Delete TextElement: Backgroudthread that polls search servers.(1150)", "Delete TagElement(1151)", "Delete Javadoc(1152)", "Delete Modifier: private(1153)", "Delete SimpleName: watchdog(1156)", "Delete VariableDeclarationFragment(1157)", "Delete FieldDeclaration(1158)", "Delete Modifier: public(1304)", "Delete SimpleName: Client(1305)", "Delete SimpleName: Result(1314)", "Delete SimpleType: Result(1315)", "Delete TypeLiteral(1316)", "Delete SuperConstructorInvocation(1317)", "Delete ThisExpression(1318)", "Delete SimpleName: defaultaddresses(1319)", "Delete FieldAccess(1320)", "Delete SimpleName: addresses(1321)", "Delete Assignment: =(1322)", "Delete ExpressionStatement(1323)", "Delete SimpleName: watchdog(1324)", "Delete SimpleName: Thread(1325)", "Delete SimpleType: Thread(1326)", "Delete ThisExpression(1327)", "Delete ClassInstanceCreation(1328)", "Delete Assignment: =(1329)", "Delete ExpressionStatement(1330)", "Delete SimpleName: watchdog(1331)", "Delete SimpleName: start(1332)", "Delete MethodInvocation(1333)", "Delete ExpressionStatement(1334)", "Delete Block(1335)", "Delete MethodDeclaration(1336)", "Delete SimpleType: Param(1876)", "Delete SimpleName: param(1877)", "Delete SimpleType: Param(1879)", "Delete SimpleName: OP_DETAILS(1880)", "Delete SimpleName: hit(1881)", "Delete ClassInstanceCreation(1882)", "Delete VariableDeclarationFragment(1883)", "Delete VariableDeclarationStatement(1884)", "Delete SimpleType: Result(1886)", "Delete SimpleName: result(1887)", "Delete SimpleName: Result(1888)", "Delete SimpleType: Result(1889)", "Delete SimpleName: addresses(1892)", "Delete SimpleName: getIndexNo(1894)", "Delete MethodInvocation(1895)", "Delete ArrayAccess(1896)", "Delete MethodInvocation(1897)", "Delete CastExpression(1898)", "Delete VariableDeclarationFragment(1899)", "Delete VariableDeclarationStatement(1900)", "Delete Block(1906)", "Delete MethodDeclaration(1907)", "Delete TypeDeclaration: class(2778)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}