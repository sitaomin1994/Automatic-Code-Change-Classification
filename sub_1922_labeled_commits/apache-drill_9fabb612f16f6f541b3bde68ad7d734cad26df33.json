{"application": "apache-drill", "csha": "9fabb612f16f6f541b3bde68ad7d734cad26df33", "files": [{"View_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV ExpressionStatement to SwitchStatement at 15"]}, {"root": "INS SwitchCase to SwitchStatement at 11", "operations": ["INS SwitchCase to SwitchStatement at 11", "INS SimpleName: INTERVAL_YEAR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 13", "operations": ["INS SimpleName: INTERVAL_MONTH to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 13"]}, {"root": "INS SwitchCase to SwitchStatement at 16", "operations": ["INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 16"]}, {"root": "INS SwitchCase to SwitchStatement at 17", "operations": ["INS SwitchCase to SwitchStatement at 17", "INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 18", "operations": ["INS SimpleName: INTERVAL_HOUR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 18"]}, {"root": "INS SwitchCase to SwitchStatement at 19", "operations": ["INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 19"]}, {"root": "INS SwitchCase to SwitchStatement at 20", "operations": ["INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 20"]}, {"root": "INS SwitchCase to SwitchStatement at 21", "operations": ["INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 21"]}, {"root": "INS SwitchCase to SwitchStatement at 22", "operations": ["INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 22"]}, {"root": "INS SwitchCase to SwitchStatement at 23", "operations": ["INS SwitchCase to SwitchStatement at 23", "INS SimpleName: INTERVAL_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 25", "operations": ["INS SwitchCase to SwitchStatement at 25"]}, {"root": "UPDATE from INTERVAL_DAY_TIME to INTERVAL_DAY", "operations": ["UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY"]}, {"root": "INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0", "operations": ["INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL Javadoc", "DEL TextElement: limitations under the License.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}]}}, {"View_diff": {"operations": ["Move ExpressionStatement(341) into SwitchStatement(351) at 15", "Insert SwitchCase(316) into SwitchStatement(351) at 11", "Insert SwitchCase(320) into SwitchStatement(351) at 13", "Insert SwitchCase(326) into SwitchStatement(351) at 16", "Insert SwitchCase(328) into SwitchStatement(351) at 17", "Insert SwitchCase(330) into SwitchStatement(351) at 18", "Insert SwitchCase(332) into SwitchStatement(351) at 19", "Insert SwitchCase(334) into SwitchStatement(351) at 20", "Insert SwitchCase(336) into SwitchStatement(351) at 21", "Insert SwitchCase(338) into SwitchStatement(351) at 22", "Insert SwitchCase(340) into SwitchStatement(351) at 23", "Insert SwitchCase(349) into SwitchStatement(351) at 25", "Insert SimpleName: INTERVAL_YEAR(315) into SwitchCase(316) at 0", "Insert SimpleName: INTERVAL_MONTH(319) into SwitchCase(320) at 0", "Update SimpleName: INTERVAL_DAY_TIME(332) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(323) into SwitchCase(324) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(325) into SwitchCase(326) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(327) into SwitchCase(328) at 0", "Insert SimpleName: INTERVAL_HOUR(329) into SwitchCase(330) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(331) into SwitchCase(332) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(333) into SwitchCase(334) at 0", "Insert SimpleName: INTERVAL_MINUTE(335) into SwitchCase(336) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(337) into SwitchCase(338) at 0", "Insert SimpleName: INTERVAL_SECOND(339) into SwitchCase(340) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"FileSystemPartitionDescriptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleType: String to MethodInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL Javadoc", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: limitations under the License.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}]}}, {"FileSystemPartitionDescriptor_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(1235) at 11", "Insert QualifiedName: com.google.common.collect.ImmutableList(22) into ImportDeclaration(23) at 0", "Insert MethodInvocation(1150) into MethodInvocation(1151) at 5", "Insert SimpleName: ImmutableList(1146) into MethodInvocation(1150) at 0", "Insert SimpleType: String(1148) into MethodInvocation(1150) at 1", "Insert SimpleName: of(1149) into MethodInvocation(1150) at 2", "Insert SimpleName: String(1147) into SimpleType: String(1148) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"AbstractSchema_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: now to SingleVariableDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Schema to SimpleType: Schema at 0", "INS ThisExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: Schema to MethodDeclaration at 2", "INS SimpleName: snapshot to MethodDeclaration at 3"]}]}}, {"AbstractSchema_diff": {"operations": ["Insert MethodDeclaration(550) into TypeDeclaration: class(830) at 32", "Insert MarkerAnnotation(539) into MethodDeclaration(550) at 0", "Insert Modifier: public(540) into MethodDeclaration(550) at 1", "Insert SimpleType: Schema(542) into MethodDeclaration(550) at 2", "Insert SimpleName: snapshot(543) into MethodDeclaration(550) at 3", "Insert SingleVariableDeclaration(546) into MethodDeclaration(550) at 4", "Insert Block(549) into MethodDeclaration(550) at 5", "Insert SimpleName: Override(538) into MarkerAnnotation(539) at 0", "Insert SimpleName: Schema(541) into SimpleType: Schema(542) at 0", "Insert PrimitiveType: long(544) into SingleVariableDeclaration(546) at 0", "Insert SimpleName: now(545) into SingleVariableDeclaration(546) at 1", "Insert ReturnStatement(548) into Block(549) at 0", "Insert ThisExpression(547) into ReturnStatement(548) at 0"]}}, {"SchemaTreeProvider_cluster": {"actions": [{"root": "UPDATE from org.apache.calcite.jdbc.SimpleCalciteSchema to org.apache.calcite.jdbc.CalciteSchema", "operations": ["UPD QualifiedName: org.apache.calcite.jdbc.SimpleCalciteSchema from org.apache.calcite.jdbc.SimpleCalciteSchema to org.apache.calcite.jdbc.CalciteSchema"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS BooleanLiteral: false to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: plus to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from SimpleCalciteSchema to CalciteSchema", "operations": ["UPD SimpleName: SimpleCalciteSchema from SimpleCalciteSchema to CalciteSchema"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV BooleanLiteral: false to MethodInvocation at 2", "MOV SimpleName: SimpleCalciteSchema to MethodInvocation at 0", "MOV SimpleName: createRootSchema to MethodInvocation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}]}}, {"SchemaTreeProvider_diff": {"operations": ["Update QualifiedName: org.apache.calcite.jdbc.SimpleCalciteSchema(6) to org.apache.calcite.jdbc.CalciteSchema", "Insert MethodInvocation(298) into VariableDeclarationFragment(299) at 1", "Insert MethodInvocation(296) into MethodInvocation(298) at 0", "Insert SimpleName: plus(297) into MethodInvocation(298) at 1", "Update SimpleName: SimpleCalciteSchema(292) to CalciteSchema", "Move SimpleName: SimpleCalciteSchema(292) into MethodInvocation(296) at 0", "Move SimpleName: createRootSchema(293) into MethodInvocation(296) at 1", "Move BooleanLiteral: false(294) into MethodInvocation(296) at 2", "Insert BooleanLiteral: false(295) into MethodInvocation(296) at 3", "Delete MethodInvocation(295)"]}}, {"DrillConnectionImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 29", "operations": ["INS ImportDeclaration to CompilationUnit at 29", "INS QualifiedName: org.apache.calcite.avatica.NoSuchStatementException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 30", "operations": ["INS QualifiedName: org.apache.calcite.avatica.QueryState to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 30"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: QueryState to SingleVariableDeclaration at 0", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS SimpleName: QueryState to SimpleType: QueryState at 0"]}, {"root": "INS SimpleType: NoSuchStatementException to MethodDeclaration at 8", "operations": ["INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 8"]}, {"root": "INS SimpleName: state to SuperMethodInvocation at 2", "operations": ["INS SimpleName: state to SuperMethodInvocation at 2"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL TagElement", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,"]}]}}, {"DrillConnectionImpl_diff": {"operations": ["Insert ImportDeclaration(59) into CompilationUnit(2542) at 29", "Insert ImportDeclaration(61) into CompilationUnit(2542) at 30", "Insert QualifiedName: org.apache.calcite.avatica.NoSuchStatementException(58) into ImportDeclaration(59) at 0", "Insert QualifiedName: org.apache.calcite.avatica.QueryState(60) into ImportDeclaration(61) at 0", "Insert SingleVariableDeclaration(528) into MethodDeclaration(537) at 5", "Insert SimpleType: NoSuchStatementException(558) into MethodDeclaration(586) at 8", "Insert SimpleType: QueryState(526) into SingleVariableDeclaration(528) at 0", "Insert SimpleName: state(527) into SingleVariableDeclaration(528) at 1", "Insert SimpleName: NoSuchStatementException(557) into SimpleType: NoSuchStatementException(558) at 0", "Insert SimpleName: QueryState(525) into SimpleType: QueryState(526) at 0", "Insert SimpleName: state(533) into SuperMethodInvocation(534) at 2", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillJdbc41Factory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.calcite.avatica.QueryState to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: QueryState to SimpleType: QueryState at 0", "INS SimpleType: QueryState to SingleVariableDeclaration at 0", "INS SimpleName: state to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: state to ClassInstanceCreation at 2", "operations": ["INS SimpleName: state to ClassInstanceCreation at 2"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TagElement", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."]}]}}, {"DrillJdbc41Factory_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(1050) at 16", "Insert QualifiedName: org.apache.calcite.avatica.QueryState(32) into ImportDeclaration(33) at 0", "Insert SingleVariableDeclaration(499) into MethodDeclaration(533) at 5", "Insert SimpleType: QueryState(497) into SingleVariableDeclaration(499) at 0", "Insert SimpleName: state(498) into SingleVariableDeclaration(499) at 1", "Insert SimpleName: QueryState(496) into SimpleType: QueryState(497) at 0", "Insert SimpleName: state(525) into ClassInstanceCreation(530) at 2", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillMetaImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.calcite.avatica.MissingResultsException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.calcite.avatica.NoSuchStatementException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: org.apache.calcite.avatica.QueryState to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS QualifiedName: org.apache.calcite.avatica.remote.TypedValue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 23"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 34", "INS ReturnStatement to Block at 0", "INS SimpleName: maxRowsInFirstFrame to SingleVariableDeclaration at 1", "INS SimpleName: sql to MethodInvocation at 2", "INS SimpleName: callback to MethodInvocation at 4", "INS SimpleType: ExecuteResult to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: prepareAndExecute to MethodDeclaration at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: maxRowCount to MethodInvocation at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: sql to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: handle to SingleVariableDeclaration at 2", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 9", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: PrepareCallback to SimpleType: PrepareCallback at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: maxRowCount to SingleVariableDeclaration at 2", "INS SimpleName: handle to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: callback to SingleVariableDeclaration at 2", "INS Block to MethodDeclaration at 10", "INS PrimitiveType: long to SingleVariableDeclaration at 1", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 1", "INS SimpleName: prepareAndExecute to MethodInvocation at 0", "INS SimpleName: ExecuteResult to SimpleType: ExecuteResult at 0", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleType: PrepareCallback to SingleVariableDeclaration at 1", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ExecuteBatchResult to SimpleType: ExecuteBatchResult at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: prepareAndExecuteBatch to MethodDeclaration at 3", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: list to SingleVariableDeclaration at 1", "INS ThisExpression to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 6", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: ExecuteBatchResult to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 35"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 6", "INS SimpleType: List to ParameterizedType: List<TypedValue> at 0", "INS SimpleName: list to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: executeBatch to MethodDeclaration at 3", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: List to SimpleType: List at 0", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS SimpleName: ExecuteBatchResult to SimpleType: ExecuteBatchResult at 0", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: List<List<TypedValue>> to SingleVariableDeclaration at 0", "INS ThisExpression to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleType: ExecuteBatchResult to MethodDeclaration at 2", "INS SimpleName: getClass to MethodInvocation at 1", "INS ParameterizedType: List<TypedValue> to ParameterizedType: List<List<TypedValue>> at 1", "INS SimpleType: TypedValue to ParameterizedType: List<TypedValue> at 1", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: TypedValue to SimpleType: TypedValue at 0", "INS Block to MethodDeclaration at 7", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: List to ParameterizedType: List<List<TypedValue>> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: Frame to MethodDeclaration at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: fetch to MethodDeclaration at 3", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleName: MissingResultsException to SimpleType: MissingResultsException at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: MissingResultsException to MethodDeclaration at 8", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS SimpleName: Frame to SimpleType: Frame at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 9", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: l to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 7", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: TypedValue to ParameterizedType: List<TypedValue> at 1", "INS SimpleName: list to SingleVariableDeclaration at 1", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: List<TypedValue> to SingleVariableDeclaration at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: TypedValue to SimpleType: TypedValue at 0", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: execute to MethodDeclaration at 3", "INS SimpleName: ExecuteResult to SimpleType: ExecuteResult at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS Block to MethodDeclaration at 8", "INS SimpleType: ExecuteResult to MethodDeclaration at 2", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<TypedValue> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS SimpleName: execute to MethodDeclaration at 3", "INS Block to MethodDeclaration at 8", "INS SimpleType: List to ParameterizedType: List<TypedValue> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: list to SingleVariableDeclaration at 1", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ExecuteResult to SimpleType: ExecuteResult at 0", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 7", "INS SimpleType: TypedValue to ParameterizedType: List<TypedValue> at 1", "INS SimpleType: ExecuteResult to MethodDeclaration at 2", "INS ParameterizedType: List<TypedValue> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: TypedValue to SimpleType: TypedValue at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS ThrowStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SimpleName: queryState to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: syncResults to MethodDeclaration at 3", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: NoSuchStatementException to SimpleType: NoSuchStatementException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: StatementHandle to SimpleType: StatementHandle at 0", "INS SimpleType: NoSuchStatementException to MethodDeclaration at 7", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS ThisExpression to MethodInvocation at 0", "INS SimpleType: StatementHandle to SingleVariableDeclaration at 0", "INS SimpleType: QueryState to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: statementHandle to SingleVariableDeclaration at 1", "INS SimpleName: QueryState to SimpleType: QueryState at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS ThisExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS ThrowStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: connectionHandle to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: commit to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS SimpleName: rollback to MethodDeclaration at 3", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ThisExpression to MethodInvocation at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: connectionHandle to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS SimpleName: getClass to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0", "INS SimpleName: ch to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ch to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS SimpleName: ch to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ch to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionHandle to SimpleType: ConnectionHandle at 0", "INS SimpleType: ConnectionHandle to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS QualifiedName: Meta.StatementType.SELECT to ClassInstanceCreation at 6", "operations": ["INS QualifiedName: Meta.StatementType.SELECT to ClassInstanceCreation at 6"]}, {"root": "INS QualifiedName: Meta.StatementType.SELECT to MethodInvocation at 6", "operations": ["INS QualifiedName: Meta.StatementType.SELECT to MethodInvocation at 6"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: limitations under the License.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement", "DEL Javadoc", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}]}}, {"DrillMetaImpl_diff": {"operations": ["Insert ImportDeclaration(41) into CompilationUnit(3608) at 20", "Insert ImportDeclaration(43) into CompilationUnit(3608) at 21", "Insert ImportDeclaration(45) into CompilationUnit(3608) at 22", "Insert ImportDeclaration(47) into CompilationUnit(3608) at 23", "Insert QualifiedName: org.apache.calcite.avatica.MissingResultsException(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: org.apache.calcite.avatica.NoSuchStatementException(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: org.apache.calcite.avatica.QueryState(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: org.apache.calcite.avatica.remote.TypedValue(46) into ImportDeclaration(47) at 0", "Insert MethodDeclaration(3373) into TypeDeclaration: class(3607) at 34", "Insert MethodDeclaration(3403) into TypeDeclaration: class(3607) at 35", "Insert MethodDeclaration(3436) into TypeDeclaration: class(3607) at 36", "Insert MethodDeclaration(3467) into TypeDeclaration: class(3607) at 37", "Insert MethodDeclaration(3500) into TypeDeclaration: class(3607) at 38", "Insert MethodDeclaration(3526) into TypeDeclaration: class(3607) at 39", "Insert MethodDeclaration(3566) into TypeDeclaration: class(3607) at 41", "Insert MethodDeclaration(3586) into TypeDeclaration: class(3607) at 42", "Insert MethodDeclaration(3606) into TypeDeclaration: class(3607) at 43", "Insert SingleVariableDeclaration(1776) into MethodDeclaration(1828) at 5", "Insert SingleVariableDeclaration(2721) into MethodDeclaration(2770) at 5", "Insert SingleVariableDeclaration(2993) into MethodDeclaration(3030) at 5", "Insert SingleVariableDeclaration(3180) into MethodDeclaration(3205) at 5", "Insert MarkerAnnotation(3336) into MethodDeclaration(3373) at 0", "Insert Modifier: public(3337) into MethodDeclaration(3373) at 1", "Insert SimpleType: ExecuteResult(3339) into MethodDeclaration(3373) at 2", "Insert SimpleName: prepareAndExecute(3340) into MethodDeclaration(3373) at 3", "Insert SingleVariableDeclaration(3345) into MethodDeclaration(3373) at 4", "Insert SingleVariableDeclaration(3350) into MethodDeclaration(3373) at 5", "Insert SingleVariableDeclaration(3354) into MethodDeclaration(3373) at 6", "Insert SingleVariableDeclaration(3357) into MethodDeclaration(3373) at 7", "Insert SingleVariableDeclaration(3362) into MethodDeclaration(3373) at 8", "Insert SimpleType: NoSuchStatementException(3364) into MethodDeclaration(3373) at 9", "Insert Block(3372) into MethodDeclaration(3373) at 10", "Insert MarkerAnnotation(3375) into MethodDeclaration(3403) at 0", "Insert Modifier: public(3376) into MethodDeclaration(3403) at 1", "Insert SimpleType: ExecuteBatchResult(3378) into MethodDeclaration(3403) at 2", "Insert SimpleName: prepareAndExecuteBatch(3379) into MethodDeclaration(3403) at 3", "Insert SingleVariableDeclaration(3383) into MethodDeclaration(3403) at 4", "Insert SingleVariableDeclaration(3390) into MethodDeclaration(3403) at 5", "Insert SimpleType: NoSuchStatementException(3392) into MethodDeclaration(3403) at 6", "Insert Block(3402) into MethodDeclaration(3403) at 7", "Insert MarkerAnnotation(3405) into MethodDeclaration(3436) at 0", "Insert Modifier: public(3406) into MethodDeclaration(3436) at 1", "Insert SimpleType: ExecuteBatchResult(3408) into MethodDeclaration(3436) at 2", "Insert SimpleName: executeBatch(3409) into MethodDeclaration(3436) at 3", "Insert SingleVariableDeclaration(3413) into MethodDeclaration(3436) at 4", "Insert SingleVariableDeclaration(3423) into MethodDeclaration(3436) at 5", "Insert SimpleType: NoSuchStatementException(3425) into MethodDeclaration(3436) at 6", "Insert Block(3435) into MethodDeclaration(3436) at 7", "Insert MarkerAnnotation(3438) into MethodDeclaration(3467) at 0", "Insert Modifier: public(3439) into MethodDeclaration(3467) at 1", "Insert SimpleType: Frame(3441) into MethodDeclaration(3467) at 2", "Insert SimpleName: fetch(3442) into MethodDeclaration(3467) at 3", "Insert SingleVariableDeclaration(3446) into MethodDeclaration(3467) at 4", "Insert SingleVariableDeclaration(3449) into MethodDeclaration(3467) at 5", "Insert SingleVariableDeclaration(3452) into MethodDeclaration(3467) at 6", "Insert SimpleType: NoSuchStatementException(3454) into MethodDeclaration(3467) at 7", "Insert SimpleType: MissingResultsException(3456) into MethodDeclaration(3467) at 8", "Insert Block(3466) into MethodDeclaration(3467) at 9", "Insert MarkerAnnotation(3469) into MethodDeclaration(3500) at 0", "Insert Modifier: public(3470) into MethodDeclaration(3500) at 1", "Insert SimpleType: ExecuteResult(3472) into MethodDeclaration(3500) at 2", "Insert SimpleName: execute(3473) into MethodDeclaration(3500) at 3", "Insert SingleVariableDeclaration(3477) into MethodDeclaration(3500) at 4", "Insert SingleVariableDeclaration(3484) into MethodDeclaration(3500) at 5", "Insert SingleVariableDeclaration(3487) into MethodDeclaration(3500) at 6", "Insert SimpleType: NoSuchStatementException(3489) into MethodDeclaration(3500) at 7", "Insert Block(3499) into MethodDeclaration(3500) at 8", "Insert MarkerAnnotation(3502) into MethodDeclaration(3526) at 0", "Insert Modifier: public(3503) into MethodDeclaration(3526) at 1", "Insert SimpleType: ExecuteResult(3505) into MethodDeclaration(3526) at 2", "Insert SimpleName: execute(3506) into MethodDeclaration(3526) at 3", "Insert SingleVariableDeclaration(3510) into MethodDeclaration(3526) at 4", "Insert SingleVariableDeclaration(3517) into MethodDeclaration(3526) at 5", "Insert SingleVariableDeclaration(3520) into MethodDeclaration(3526) at 6", "Insert SimpleType: NoSuchStatementException(3522) into MethodDeclaration(3526) at 7", "Insert Block(3525) into MethodDeclaration(3526) at 8", "Insert MarkerAnnotation(3539) into MethodDeclaration(3566) at 0", "Insert Modifier: public(3540) into MethodDeclaration(3566) at 1", "Insert PrimitiveType: boolean(3541) into MethodDeclaration(3566) at 2", "Insert SimpleName: syncResults(3542) into MethodDeclaration(3566) at 3", "Insert SingleVariableDeclaration(3546) into MethodDeclaration(3566) at 4", "Insert SingleVariableDeclaration(3550) into MethodDeclaration(3566) at 5", "Insert SingleVariableDeclaration(3553) into MethodDeclaration(3566) at 6", "Insert SimpleType: NoSuchStatementException(3555) into MethodDeclaration(3566) at 7", "Insert Block(3565) into MethodDeclaration(3566) at 8", "Insert MarkerAnnotation(3568) into MethodDeclaration(3586) at 0", "Insert Modifier: public(3569) into MethodDeclaration(3586) at 1", "Insert PrimitiveType: void(3570) into MethodDeclaration(3586) at 2", "Insert SimpleName: commit(3571) into MethodDeclaration(3586) at 3", "Insert SingleVariableDeclaration(3575) into MethodDeclaration(3586) at 4", "Insert Block(3585) into MethodDeclaration(3586) at 5", "Insert MarkerAnnotation(3588) into MethodDeclaration(3606) at 0", "Insert Modifier: public(3589) into MethodDeclaration(3606) at 1", "Insert PrimitiveType: void(3590) into MethodDeclaration(3606) at 2", "Insert SimpleName: rollback(3591) into MethodDeclaration(3606) at 3", "Insert SingleVariableDeclaration(3595) into MethodDeclaration(3606) at 4", "Insert Block(3605) into MethodDeclaration(3606) at 5", "Insert SimpleType: ConnectionHandle(1774) into SingleVariableDeclaration(1776) at 0", "Insert SimpleName: ch(1775) into SingleVariableDeclaration(1776) at 1", "Insert SimpleType: ConnectionHandle(2719) into SingleVariableDeclaration(2721) at 0", "Insert SimpleName: ch(2720) into SingleVariableDeclaration(2721) at 1", "Insert SimpleType: ConnectionHandle(2991) into SingleVariableDeclaration(2993) at 0", "Insert SimpleName: ch(2992) into SingleVariableDeclaration(2993) at 1", "Insert SimpleType: ConnectionHandle(3178) into SingleVariableDeclaration(3180) at 0", "Insert SimpleName: ch(3179) into SingleVariableDeclaration(3180) at 1", "Insert SimpleName: Override(3335) into MarkerAnnotation(3336) at 0", "Insert SimpleName: ExecuteResult(3338) into SimpleType: ExecuteResult(3339) at 0", "Insert Modifier: final(3341) into SingleVariableDeclaration(3345) at 0", "Insert SimpleType: StatementHandle(3343) into SingleVariableDeclaration(3345) at 1", "Insert SimpleName: handle(3344) into SingleVariableDeclaration(3345) at 2", "Insert Modifier: final(3346) into SingleVariableDeclaration(3350) at 0", "Insert SimpleType: String(3348) into SingleVariableDeclaration(3350) at 1", "Insert SimpleName: sql(3349) into SingleVariableDeclaration(3350) at 2", "Insert Modifier: final(3351) into SingleVariableDeclaration(3354) at 0", "Insert PrimitiveType: long(3352) into SingleVariableDeclaration(3354) at 1", "Insert SimpleName: maxRowCount(3353) into SingleVariableDeclaration(3354) at 2", "Insert PrimitiveType: int(3355) into SingleVariableDeclaration(3357) at 0", "Insert SimpleName: maxRowsInFirstFrame(3356) into SingleVariableDeclaration(3357) at 1", "Insert Modifier: final(3358) into SingleVariableDeclaration(3362) at 0", "Insert SimpleType: PrepareCallback(3360) into SingleVariableDeclaration(3362) at 1", "Insert SimpleName: callback(3361) into SingleVariableDeclaration(3362) at 2", "Insert SimpleName: NoSuchStatementException(3363) into SimpleType: NoSuchStatementException(3364) at 0", "Insert ReturnStatement(3371) into Block(3372) at 0", "Insert SimpleName: Override(3374) into MarkerAnnotation(3375) at 0", "Insert SimpleName: ExecuteBatchResult(3377) into SimpleType: ExecuteBatchResult(3378) at 0", "Insert SimpleType: StatementHandle(3381) into SingleVariableDeclaration(3383) at 0", "Insert SimpleName: statementHandle(3382) into SingleVariableDeclaration(3383) at 1", "Insert ParameterizedType: List<String>(3388) into SingleVariableDeclaration(3390) at 0", "Insert SimpleName: list(3389) into SingleVariableDeclaration(3390) at 1", "Insert SimpleName: NoSuchStatementException(3391) into SimpleType: NoSuchStatementException(3392) at 0", "Insert ThrowStatement(3401) into Block(3402) at 0", "Insert SimpleName: Override(3404) into MarkerAnnotation(3405) at 0", "Insert SimpleName: ExecuteBatchResult(3407) into SimpleType: ExecuteBatchResult(3408) at 0", "Insert SimpleType: StatementHandle(3411) into SingleVariableDeclaration(3413) at 0", "Insert SimpleName: statementHandle(3412) into SingleVariableDeclaration(3413) at 1", "Insert ParameterizedType: List<List<TypedValue>>(3421) into SingleVariableDeclaration(3423) at 0", "Insert SimpleName: list(3422) into SingleVariableDeclaration(3423) at 1", "Insert SimpleName: NoSuchStatementException(3424) into SimpleType: NoSuchStatementException(3425) at 0", "Insert ThrowStatement(3434) into Block(3435) at 0", "Insert SimpleName: Override(3437) into MarkerAnnotation(3438) at 0", "Insert SimpleName: Frame(3440) into SimpleType: Frame(3441) at 0", "Insert SimpleType: StatementHandle(3444) into SingleVariableDeclaration(3446) at 0", "Insert SimpleName: statementHandle(3445) into SingleVariableDeclaration(3446) at 1", "Insert PrimitiveType: long(3447) into SingleVariableDeclaration(3449) at 0", "Insert SimpleName: l(3448) into SingleVariableDeclaration(3449) at 1", "Insert PrimitiveType: int(3450) into SingleVariableDeclaration(3452) at 0", "Insert SimpleName: i(3451) into SingleVariableDeclaration(3452) at 1", "Insert SimpleName: NoSuchStatementException(3453) into SimpleType: NoSuchStatementException(3454) at 0", "Insert SimpleName: MissingResultsException(3455) into SimpleType: MissingResultsException(3456) at 0", "Insert ThrowStatement(3465) into Block(3466) at 0", "Insert SimpleName: Override(3468) into MarkerAnnotation(3469) at 0", "Insert SimpleName: ExecuteResult(3471) into SimpleType: ExecuteResult(3472) at 0", "Insert SimpleType: StatementHandle(3475) into SingleVariableDeclaration(3477) at 0", "Insert SimpleName: statementHandle(3476) into SingleVariableDeclaration(3477) at 1", "Insert ParameterizedType: List<TypedValue>(3482) into SingleVariableDeclaration(3484) at 0", "Insert SimpleName: list(3483) into SingleVariableDeclaration(3484) at 1", "Insert PrimitiveType: long(3485) into SingleVariableDeclaration(3487) at 0", "Insert SimpleName: l(3486) into SingleVariableDeclaration(3487) at 1", "Insert SimpleName: NoSuchStatementException(3488) into SimpleType: NoSuchStatementException(3489) at 0", "Insert ThrowStatement(3498) into Block(3499) at 0", "Insert SimpleName: Override(3501) into MarkerAnnotation(3502) at 0", "Insert SimpleName: ExecuteResult(3504) into SimpleType: ExecuteResult(3505) at 0", "Insert SimpleType: StatementHandle(3508) into SingleVariableDeclaration(3510) at 0", "Insert SimpleName: statementHandle(3509) into SingleVariableDeclaration(3510) at 1", "Insert ParameterizedType: List<TypedValue>(3515) into SingleVariableDeclaration(3517) at 0", "Insert SimpleName: list(3516) into SingleVariableDeclaration(3517) at 1", "Insert PrimitiveType: int(3518) into SingleVariableDeclaration(3520) at 0", "Insert SimpleName: i(3519) into SingleVariableDeclaration(3520) at 1", "Insert SimpleName: NoSuchStatementException(3521) into SimpleType: NoSuchStatementException(3522) at 0", "Insert ReturnStatement(3524) into Block(3525) at 0", "Insert SimpleName: Override(3538) into MarkerAnnotation(3539) at 0", "Insert SimpleType: StatementHandle(3544) into SingleVariableDeclaration(3546) at 0", "Insert SimpleName: statementHandle(3545) into SingleVariableDeclaration(3546) at 1", "Insert SimpleType: QueryState(3548) into SingleVariableDeclaration(3550) at 0", "Insert SimpleName: queryState(3549) into SingleVariableDeclaration(3550) at 1", "Insert PrimitiveType: long(3551) into SingleVariableDeclaration(3553) at 0", "Insert SimpleName: l(3552) into SingleVariableDeclaration(3553) at 1", "Insert SimpleName: NoSuchStatementException(3554) into SimpleType: NoSuchStatementException(3555) at 0", "Insert ThrowStatement(3564) into Block(3565) at 0", "Insert SimpleName: Override(3567) into MarkerAnnotation(3568) at 0", "Insert SimpleType: ConnectionHandle(3573) into SingleVariableDeclaration(3575) at 0", "Insert SimpleName: connectionHandle(3574) into SingleVariableDeclaration(3575) at 1", "Insert ThrowStatement(3584) into Block(3585) at 0", "Insert SimpleName: Override(3587) into MarkerAnnotation(3588) at 0", "Insert SimpleType: ConnectionHandle(3593) into SingleVariableDeclaration(3595) at 0", "Insert SimpleName: connectionHandle(3594) into SingleVariableDeclaration(3595) at 1", "Insert ThrowStatement(3604) into Block(3605) at 0", "Insert SimpleName: ConnectionHandle(1773) into SimpleType: ConnectionHandle(1774) at 0", "Insert SimpleName: ConnectionHandle(2718) into SimpleType: ConnectionHandle(2719) at 0", "Insert SimpleName: ConnectionHandle(2990) into SimpleType: ConnectionHandle(2991) at 0", "Insert SimpleName: ConnectionHandle(3177) into SimpleType: ConnectionHandle(3178) at 0", "Insert SimpleName: StatementHandle(3342) into SimpleType: StatementHandle(3343) at 0", "Insert SimpleName: String(3347) into SimpleType: String(3348) at 0", "Insert SimpleName: PrepareCallback(3359) into SimpleType: PrepareCallback(3360) at 0", "Insert MethodInvocation(3370) into ReturnStatement(3371) at 0", "Insert SimpleName: StatementHandle(3380) into SimpleType: StatementHandle(3381) at 0", "Insert SimpleType: List(3385) into ParameterizedType: List<String>(3388) at 0", "Insert SimpleType: String(3387) into ParameterizedType: List<String>(3388) at 1", "Insert ClassInstanceCreation(3400) into ThrowStatement(3401) at 0", "Insert SimpleName: StatementHandle(3410) into SimpleType: StatementHandle(3411) at 0", "Insert SimpleType: List(3415) into ParameterizedType: List<List<TypedValue>>(3421) at 0", "Insert ParameterizedType: List<TypedValue>(3420) into ParameterizedType: List<List<TypedValue>>(3421) at 1", "Insert ClassInstanceCreation(3433) into ThrowStatement(3434) at 0", "Insert SimpleName: StatementHandle(3443) into SimpleType: StatementHandle(3444) at 0", "Insert ClassInstanceCreation(3464) into ThrowStatement(3465) at 0", "Insert SimpleName: StatementHandle(3474) into SimpleType: StatementHandle(3475) at 0", "Insert SimpleType: List(3479) into ParameterizedType: List<TypedValue>(3482) at 0", "Insert SimpleType: TypedValue(3481) into ParameterizedType: List<TypedValue>(3482) at 1", "Insert ClassInstanceCreation(3497) into ThrowStatement(3498) at 0", "Insert SimpleName: StatementHandle(3507) into SimpleType: StatementHandle(3508) at 0", "Insert SimpleType: List(3512) into ParameterizedType: List<TypedValue>(3515) at 0", "Insert SimpleType: TypedValue(3514) into ParameterizedType: List<TypedValue>(3515) at 1", "Insert NullLiteral(3523) into ReturnStatement(3524) at 0", "Insert SimpleName: StatementHandle(3543) into SimpleType: StatementHandle(3544) at 0", "Insert SimpleName: QueryState(3547) into SimpleType: QueryState(3548) at 0", "Insert ClassInstanceCreation(3563) into ThrowStatement(3564) at 0", "Insert SimpleName: ConnectionHandle(3572) into SimpleType: ConnectionHandle(3573) at 0", "Insert ClassInstanceCreation(3583) into ThrowStatement(3584) at 0", "Insert SimpleName: ConnectionHandle(3592) into SimpleType: ConnectionHandle(3593) at 0", "Insert ClassInstanceCreation(3603) into ThrowStatement(3604) at 0", "Insert QualifiedName: Meta.StatementType.SELECT(207) into ClassInstanceCreation(208) at 6", "Insert SimpleName: prepareAndExecute(3365) into MethodInvocation(3370) at 0", "Insert SimpleName: handle(3366) into MethodInvocation(3370) at 1", "Insert SimpleName: sql(3367) into MethodInvocation(3370) at 2", "Insert SimpleName: maxRowCount(3368) into MethodInvocation(3370) at 3", "Insert SimpleName: callback(3369) into MethodInvocation(3370) at 4", "Insert SimpleName: List(3384) into SimpleType: List(3385) at 0", "Insert SimpleName: String(3386) into SimpleType: String(3387) at 0", "Insert SimpleType: UnsupportedOperationException(3394) into ClassInstanceCreation(3400) at 0", "Insert MethodInvocation(3399) into ClassInstanceCreation(3400) at 1", "Insert SimpleName: List(3414) into SimpleType: List(3415) at 0", "Insert SimpleType: List(3417) into ParameterizedType: List<TypedValue>(3420) at 0", "Insert SimpleType: TypedValue(3419) into ParameterizedType: List<TypedValue>(3420) at 1", "Insert SimpleType: UnsupportedOperationException(3427) into ClassInstanceCreation(3433) at 0", "Insert MethodInvocation(3432) into ClassInstanceCreation(3433) at 1", "Insert SimpleType: UnsupportedOperationException(3458) into ClassInstanceCreation(3464) at 0", "Insert MethodInvocation(3463) into ClassInstanceCreation(3464) at 1", "Insert SimpleName: List(3478) into SimpleType: List(3479) at 0", "Insert SimpleName: TypedValue(3480) into SimpleType: TypedValue(3481) at 0", "Insert SimpleType: UnsupportedOperationException(3491) into ClassInstanceCreation(3497) at 0", "Insert MethodInvocation(3496) into ClassInstanceCreation(3497) at 1", "Insert SimpleName: List(3511) into SimpleType: List(3512) at 0", "Insert SimpleName: TypedValue(3513) into SimpleType: TypedValue(3514) at 0", "Insert SimpleType: UnsupportedOperationException(3557) into ClassInstanceCreation(3563) at 0", "Insert MethodInvocation(3562) into ClassInstanceCreation(3563) at 1", "Insert SimpleType: UnsupportedOperationException(3577) into ClassInstanceCreation(3583) at 0", "Insert MethodInvocation(3582) into ClassInstanceCreation(3583) at 1", "Insert SimpleType: UnsupportedOperationException(3597) into ClassInstanceCreation(3603) at 0", "Insert MethodInvocation(3602) into ClassInstanceCreation(3603) at 1", "Insert SimpleName: UnsupportedOperationException(3393) into SimpleType: UnsupportedOperationException(3394) at 0", "Insert MethodInvocation(3397) into MethodInvocation(3399) at 0", "Insert SimpleName: getSimpleName(3398) into MethodInvocation(3399) at 1", "Insert SimpleName: List(3416) into SimpleType: List(3417) at 0", "Insert SimpleName: TypedValue(3418) into SimpleType: TypedValue(3419) at 0", "Insert SimpleName: UnsupportedOperationException(3426) into SimpleType: UnsupportedOperationException(3427) at 0", "Insert MethodInvocation(3430) into MethodInvocation(3432) at 0", "Insert SimpleName: getSimpleName(3431) into MethodInvocation(3432) at 1", "Insert SimpleName: UnsupportedOperationException(3457) into SimpleType: UnsupportedOperationException(3458) at 0", "Insert MethodInvocation(3461) into MethodInvocation(3463) at 0", "Insert SimpleName: getSimpleName(3462) into MethodInvocation(3463) at 1", "Insert SimpleName: UnsupportedOperationException(3490) into SimpleType: UnsupportedOperationException(3491) at 0", "Insert MethodInvocation(3494) into MethodInvocation(3496) at 0", "Insert SimpleName: getSimpleName(3495) into MethodInvocation(3496) at 1", "Insert SimpleName: UnsupportedOperationException(3556) into SimpleType: UnsupportedOperationException(3557) at 0", "Insert MethodInvocation(3560) into MethodInvocation(3562) at 0", "Insert SimpleName: getSimpleName(3561) into MethodInvocation(3562) at 1", "Insert SimpleName: UnsupportedOperationException(3576) into SimpleType: UnsupportedOperationException(3577) at 0", "Insert MethodInvocation(3580) into MethodInvocation(3582) at 0", "Insert SimpleName: getSimpleName(3581) into MethodInvocation(3582) at 1", "Insert SimpleName: UnsupportedOperationException(3596) into SimpleType: UnsupportedOperationException(3597) at 0", "Insert MethodInvocation(3600) into MethodInvocation(3602) at 0", "Insert SimpleName: getSimpleName(3601) into MethodInvocation(3602) at 1", "Insert ThisExpression(3395) into MethodInvocation(3397) at 0", "Insert SimpleName: getClass(3396) into MethodInvocation(3397) at 1", "Insert ThisExpression(3428) into MethodInvocation(3430) at 0", "Insert SimpleName: getClass(3429) into MethodInvocation(3430) at 1", "Insert ThisExpression(3459) into MethodInvocation(3461) at 0", "Insert SimpleName: getClass(3460) into MethodInvocation(3461) at 1", "Insert ThisExpression(3492) into MethodInvocation(3494) at 0", "Insert SimpleName: getClass(3493) into MethodInvocation(3494) at 1", "Insert ThisExpression(3558) into MethodInvocation(3560) at 0", "Insert SimpleName: getClass(3559) into MethodInvocation(3560) at 1", "Insert ThisExpression(3578) into MethodInvocation(3580) at 0", "Insert SimpleName: getClass(3579) into MethodInvocation(3580) at 1", "Insert ThisExpression(3598) into MethodInvocation(3600) at 0", "Insert SimpleName: getClass(3599) into MethodInvocation(3600) at 1", "Insert QualifiedName: Meta.StatementType.SELECT(1340) into MethodInvocation(1341) at 6", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete Modifier: final(1782)", "Delete Modifier: final(1787)", "Delete Modifier: final(1792)"]}}, {"DrillPreparedStatementImpl_cluster": {"actions": [{"root": "UPDATE from SQLException to RuntimeException", "operations": ["UPD SimpleName: SQLException from SQLException to RuntimeException", "UPD SimpleType: SQLException from SQLException to RuntimeException"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS TryStatement to Block at 0", "operations": ["INS TryStatement to Block at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: AlreadyClosedSqlException to SingleVariableDeclaration at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS Block to TryStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: AlreadyClosedSqlException to SimpleType: AlreadyClosedSqlException at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ClassInstanceCreation to ThrowStatement at 0", "operations": ["INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TagElement", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL IfStatement", "DEL Block", "DEL SimpleName: preparedStatementHandle", "DEL NullLiteral"]}]}}, {"DrillPreparedStatementImpl_diff": {"operations": ["Update SimpleType: SQLException(863) to RuntimeException", "Move ExpressionStatement(133) into Block(116) at 3", "Update SimpleName: SQLException(862) to RuntimeException", "Insert TryStatement(859) into Block(882) at 0", "Insert Block(847) into TryStatement(859) at 0", "Insert CatchClause(858) into TryStatement(859) at 1", "Move ExpressionStatement(866) into Block(847) at 0", "Insert SingleVariableDeclaration(851) into CatchClause(858) at 0", "Insert Block(857) into CatchClause(858) at 1", "Insert SimpleType: AlreadyClosedSqlException(849) into SingleVariableDeclaration(851) at 0", "Insert SimpleName: e(850) into SingleVariableDeclaration(851) at 1", "Insert ThrowStatement(856) into Block(857) at 0", "Insert SimpleName: AlreadyClosedSqlException(848) into SimpleType: AlreadyClosedSqlException(849) at 0", "Insert ClassInstanceCreation(855) into ThrowStatement(856) at 0", "Insert ClassInstanceCreation(877) into ThrowStatement(878) at 0", "Insert SimpleType: RuntimeException(853) into ClassInstanceCreation(855) at 0", "Insert SimpleName: e(854) into ClassInstanceCreation(855) at 1", "Insert SimpleType: RuntimeException(869) into ClassInstanceCreation(877) at 0", "Move ClassInstanceCreation(881) into ClassInstanceCreation(877) at 1", "Insert SimpleName: RuntimeException(852) into SimpleType: RuntimeException(853) at 0", "Insert SimpleName: RuntimeException(868) into SimpleType: RuntimeException(869) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: preparedStatementHandle(120)", "Delete NullLiteral(121)", "Delete InfixExpression: !=(122)", "Delete Block(134)", "Delete IfStatement(135)"]}}, {"DrillResultSetImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS QualifiedName: org.apache.calcite.avatica.QueryState to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 31"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleType: QueryState to SingleVariableDeclaration at 0", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS SimpleName: QueryState to SimpleType: QueryState at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS SimpleName: state to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: state to SuperConstructorInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL Javadoc", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement"]}]}}, {"DrillResultSetImpl_diff": {"operations": ["Insert ImportDeclaration(63) into CompilationUnit(6204) at 31", "Insert QualifiedName: org.apache.calcite.avatica.QueryState(62) into ImportDeclaration(63) at 0", "Insert SingleVariableDeclaration(124) into MethodDeclaration(158) at 2", "Insert SimpleType: QueryState(122) into SingleVariableDeclaration(124) at 0", "Insert SimpleName: state(123) into SingleVariableDeclaration(124) at 1", "Insert SimpleName: QueryState(121) into SimpleType: QueryState(122) at 0", "Insert SimpleName: state(142) into SuperConstructorInvocation(147) at 1", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"JdbcExpressionCheck_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.calcite.rex.RexPatternFieldRef to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.calcite.rex.RexSubQuery to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.calcite.rex.RexTableInputRef to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: subQuery to SingleVariableDeclaration at 1", "INS SimpleType: RexSubQuery to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: RexSubQuery to SimpleType: RexSubQuery at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: visitSubQuery to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: Boolean to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: visitTableInputRef to MethodDeclaration at 3", "INS SimpleName: fieldRef to SingleVariableDeclaration at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: RexTableInputRef to SimpleType: RexTableInputRef at 0", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS SimpleType: RexTableInputRef to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleType: RexPatternFieldRef to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS SimpleName: visitPatternFieldRef to MethodDeclaration at 3", "INS SimpleName: fieldRef to SingleVariableDeclaration at 1", "INS SimpleName: RexPatternFieldRef to SimpleType: RexPatternFieldRef at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS ReturnStatement to Block at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: limitations under the License.", "DEL Javadoc", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TagElement", "DEL TextElement: with the License.  You may obtain a copy of the License at"]}]}}, {"JdbcExpressionCheck_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(325) at 11", "Insert ImportDeclaration(27) into CompilationUnit(325) at 13", "Insert ImportDeclaration(29) into CompilationUnit(325) at 14", "Insert QualifiedName: org.apache.calcite.rex.RexPatternFieldRef(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.apache.calcite.rex.RexSubQuery(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.calcite.rex.RexTableInputRef(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(295) into TypeDeclaration: class(324) at 14", "Insert MethodDeclaration(309) into TypeDeclaration: class(324) at 15", "Insert MethodDeclaration(323) into TypeDeclaration: class(324) at 16", "Insert MarkerAnnotation(283) into MethodDeclaration(295) at 0", "Insert Modifier: public(284) into MethodDeclaration(295) at 1", "Insert SimpleType: Boolean(286) into MethodDeclaration(295) at 2", "Insert SimpleName: visitSubQuery(287) into MethodDeclaration(295) at 3", "Insert SingleVariableDeclaration(291) into MethodDeclaration(295) at 4", "Insert Block(294) into MethodDeclaration(295) at 5", "Insert MarkerAnnotation(297) into MethodDeclaration(309) at 0", "Insert Modifier: public(298) into MethodDeclaration(309) at 1", "Insert SimpleType: Boolean(300) into MethodDeclaration(309) at 2", "Insert SimpleName: visitTableInputRef(301) into MethodDeclaration(309) at 3", "Insert SingleVariableDeclaration(305) into MethodDeclaration(309) at 4", "Insert Block(308) into MethodDeclaration(309) at 5", "Insert MarkerAnnotation(311) into MethodDeclaration(323) at 0", "Insert Modifier: public(312) into MethodDeclaration(323) at 1", "Insert SimpleType: Boolean(314) into MethodDeclaration(323) at 2", "Insert SimpleName: visitPatternFieldRef(315) into MethodDeclaration(323) at 3", "Insert SingleVariableDeclaration(319) into MethodDeclaration(323) at 4", "Insert Block(322) into MethodDeclaration(323) at 5", "Insert SimpleName: Override(282) into MarkerAnnotation(283) at 0", "Insert SimpleName: Boolean(285) into SimpleType: Boolean(286) at 0", "Insert SimpleType: RexSubQuery(289) into SingleVariableDeclaration(291) at 0", "Insert SimpleName: subQuery(290) into SingleVariableDeclaration(291) at 1", "Insert ReturnStatement(293) into Block(294) at 0", "Insert SimpleName: Override(296) into MarkerAnnotation(297) at 0", "Insert SimpleName: Boolean(299) into SimpleType: Boolean(300) at 0", "Insert SimpleType: RexTableInputRef(303) into SingleVariableDeclaration(305) at 0", "Insert SimpleName: fieldRef(304) into SingleVariableDeclaration(305) at 1", "Insert ReturnStatement(307) into Block(308) at 0", "Insert SimpleName: Override(310) into MarkerAnnotation(311) at 0", "Insert SimpleName: Boolean(313) into SimpleType: Boolean(314) at 0", "Insert SimpleType: RexPatternFieldRef(317) into SingleVariableDeclaration(319) at 0", "Insert SimpleName: fieldRef(318) into SingleVariableDeclaration(319) at 1", "Insert ReturnStatement(321) into Block(322) at 0", "Insert SimpleName: RexSubQuery(288) into SimpleType: RexSubQuery(289) at 0", "Insert NullLiteral(292) into ReturnStatement(293) at 0", "Insert SimpleName: RexTableInputRef(302) into SimpleType: RexTableInputRef(303) at 0", "Insert BooleanLiteral: false(306) into ReturnStatement(307) at 0", "Insert SimpleName: RexPatternFieldRef(316) into SimpleType: RexPatternFieldRef(317) at 0", "Insert BooleanLiteral: false(320) into ReturnStatement(321) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"JdbcPrel_cluster": {"actions": [{"root": "UPDATE from asQuery to asSelect", "operations": ["UPD SimpleName: asQuery from asQuery to asSelect"]}]}}, {"JdbcPrel_diff": {"operations": ["Update SimpleName: asQuery(163) to asSelect"]}}, {"DrillStoreRelBase_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.calcite.rex.RexNode to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS ParameterizedType: List<RexNode> to SingleVariableDeclaration at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleType: List to ParameterizedType: List<RexNode> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleType: RexNode to ParameterizedType: List<RexNode> at 1", "INS SimpleName: sourceExpressionList to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: sourceExpressionList to SuperConstructorInvocation at 7", "operations": ["INS SimpleName: sourceExpressionList to SuperConstructorInvocation at 7"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TagElement", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and"]}]}}, {"DrillStoreRelBase_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(97) at 8", "Insert QualifiedName: org.apache.calcite.rex.RexNode(16) into ImportDeclaration(17) at 0", "Insert SingleVariableDeclaration(80) into MethodDeclaration(95) at 9", "Insert ParameterizedType: List<RexNode>(78) into SingleVariableDeclaration(80) at 0", "Insert SimpleName: sourceExpressionList(79) into SingleVariableDeclaration(80) at 1", "Insert SimpleType: List(75) into ParameterizedType: List<RexNode>(78) at 0", "Insert SimpleType: RexNode(77) into ParameterizedType: List<RexNode>(78) at 1", "Insert SimpleName: sourceExpressionList(91) into SuperConstructorInvocation(93) at 7", "Insert SimpleName: List(74) into SimpleType: List(75) at 0", "Insert SimpleName: RexNode(76) into SimpleType: RexNode(77) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillValuesRelBase_cluster": {"actions": [{"root": "INS SwitchCase to SwitchStatement at 38", "operations": ["INS SimpleName: INTERVAL_YEAR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 38"]}, {"root": "INS SwitchCase to SwitchStatement at 40", "operations": ["INS SwitchCase to SwitchStatement at 40", "INS SimpleName: INTERVAL_MONTH to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 44", "operations": ["INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 44"]}, {"root": "INS SwitchCase to SwitchStatement at 45", "operations": ["INS SwitchCase to SwitchStatement at 45", "INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 46", "operations": ["INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 46"]}, {"root": "INS SwitchCase to SwitchStatement at 47", "operations": ["INS SwitchCase to SwitchStatement at 47", "INS SimpleName: INTERVAL_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 48", "operations": ["INS SwitchCase to SwitchStatement at 48", "INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 49", "operations": ["INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 49"]}, {"root": "INS SwitchCase to SwitchStatement at 50", "operations": ["INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 50"]}, {"root": "INS SwitchCase to SwitchStatement at 51", "operations": ["INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 51"]}, {"root": "INS SwitchCase to SwitchStatement at 52", "operations": ["INS SimpleName: INTERVAL_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 52"]}, {"root": "UPDATE from INTERVAL_DAY_TIME to INTERVAL_DAY", "operations": ["UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY"]}]}}, {"DrillValuesRelBase_diff": {"operations": ["Insert SwitchCase(697) into SwitchStatement(840) at 38", "Insert SwitchCase(701) into SwitchStatement(840) at 40", "Insert SwitchCase(740) into SwitchStatement(840) at 44", "Insert SwitchCase(742) into SwitchStatement(840) at 45", "Insert SwitchCase(744) into SwitchStatement(840) at 46", "Insert SwitchCase(746) into SwitchStatement(840) at 47", "Insert SwitchCase(748) into SwitchStatement(840) at 48", "Insert SwitchCase(750) into SwitchStatement(840) at 49", "Insert SwitchCase(752) into SwitchStatement(840) at 50", "Insert SwitchCase(754) into SwitchStatement(840) at 51", "Insert SwitchCase(756) into SwitchStatement(840) at 52", "Insert SimpleName: INTERVAL_YEAR(696) into SwitchCase(697) at 0", "Insert SimpleName: INTERVAL_MONTH(700) into SwitchCase(701) at 0", "Update SimpleName: INTERVAL_DAY_TIME(733) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(739) into SwitchCase(740) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(741) into SwitchCase(742) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(743) into SwitchCase(744) at 0", "Insert SimpleName: INTERVAL_HOUR(745) into SwitchCase(746) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(747) into SwitchCase(748) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(749) into SwitchCase(750) at 0", "Insert SimpleName: INTERVAL_MINUTE(751) into SwitchCase(752) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(753) into SwitchCase(754) at 0", "Insert SimpleName: INTERVAL_SECOND(755) into SwitchCase(756) at 0"]}}, {"DrillAggregateRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: LogicalAggregate to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: limitations under the License.", "DEL TagElement", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.rel.core.Aggregate"]}, {"root": "DEL SimpleType: LogicalAggregate", "operations": ["DEL SimpleType: LogicalAggregate", "DEL SimpleName: LogicalAggregate"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}]}}, {"DrillAggregateRule_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(177) at 11", "Update QualifiedName: java.util.logging.Logger(17) to org.slf4j.Logger", "Move SimpleType: LogicalAggregate(106) into VariableDeclarationStatement(93) at 1", "Move MethodInvocation(110) into VariableDeclarationFragment(92) at 1", "Update SimpleName: warning(185) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.calcite.rel.core.Aggregate(19)", "Delete ImportDeclaration(20)", "Delete SimpleName: LogicalAggregate(102)", "Delete SimpleType: LogicalAggregate(103)", "Delete CastExpression(111)"]}}, {"DrillConditions_cluster": {"actions": [{"root": "INS MethodDeclaration to AnonymousClassDeclaration at 0", "operations": ["INS SimpleName: rexNode to SingleVariableDeclaration at 1", "INS SimpleType: RexNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: apply to MethodDeclaration at 3", "INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: limitations under the License.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."]}]}}, {"DrillConditions_diff": {"operations": ["Insert MethodDeclaration(30) into AnonymousClassDeclaration(70) at 0", "Insert MarkerAnnotation(19) into MethodDeclaration(30) at 0", "Insert Modifier: public(20) into MethodDeclaration(30) at 1", "Insert PrimitiveType: boolean(21) into MethodDeclaration(30) at 2", "Insert SimpleName: apply(22) into MethodDeclaration(30) at 3", "Insert SingleVariableDeclaration(26) into MethodDeclaration(30) at 4", "Insert Block(29) into MethodDeclaration(30) at 5", "Insert SimpleName: Override(18) into MarkerAnnotation(19) at 0", "Insert SimpleType: RexNode(24) into SingleVariableDeclaration(26) at 0", "Insert SimpleName: rexNode(25) into SingleVariableDeclaration(26) at 1", "Insert ReturnStatement(28) into Block(29) at 0", "Insert SimpleName: RexNode(23) into SimpleType: RexNode(24) at 0", "Insert BooleanLiteral: false(27) into ReturnStatement(28) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillConstExecutor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.calcite.rex.RexExecutor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.calcite.util.DateString to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.calcite.util.TimeString to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.calcite.util.TimestampString to ImportDeclaration at 0"]}, {"root": "UPDATE from RelOptPlanner.Executor to RexExecutor", "operations": ["UPD SimpleType: RelOptPlanner.Executor from RelOptPlanner.Executor to RexExecutor"]}, {"root": "INS SimpleName: RexExecutor to SimpleType: RelOptPlanner.Executor at 0", "operations": ["INS SimpleName: RexExecutor to SimpleType: RelOptPlanner.Executor at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: fromCalendarFields to MethodInvocation at 1", "INS SimpleName: DateString to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: TimeString to MethodInvocation at 0", "INS SimpleName: fromCalendarFields to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: fromCalendarFields to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: TimestampString to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: value to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: value to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: value to MethodInvocation at 2"]}, {"root": "UPDATE from SqlTypeName.INTERVAL_DAY_TIME to SqlTypeName.INTERVAL_DAY", "operations": ["UPD QualifiedName: SqlTypeName.INTERVAL_DAY_TIME from SqlTypeName.INTERVAL_DAY_TIME to SqlTypeName.INTERVAL_DAY"]}, {"root": "DEL QualifiedName: RelOptPlanner.Executor", "operations": ["DEL QualifiedName: RelOptPlanner.Executor"]}]}}, {"DrillConstExecutor_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(1473) at 4", "Insert ImportDeclaration(11) into CompilationUnit(1473) at 5", "Insert ImportDeclaration(13) into CompilationUnit(1473) at 6", "Insert ImportDeclaration(15) into CompilationUnit(1473) at 7", "Insert QualifiedName: org.apache.calcite.rex.RexExecutor(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.calcite.util.DateString(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.calcite.util.TimeString(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.calcite.util.TimestampString(14) into ImportDeclaration(15) at 0", "Update SimpleType: RelOptPlanner.Executor(125) to RexExecutor", "Insert SimpleName: RexExecutor(132) into SimpleType: RexExecutor(133) at 0", "Insert MethodInvocation(824) into MethodInvocation(836) at 2", "Insert MethodInvocation(1228) into MethodInvocation(1240) at 2", "Insert MethodInvocation(1292) into MethodInvocation(1304) at 2", "Insert SimpleName: DateString(821) into MethodInvocation(824) at 0", "Insert SimpleName: fromCalendarFields(822) into MethodInvocation(824) at 1", "Move SimpleName: value(813) into MethodInvocation(824) at 2", "Insert SimpleName: TimeString(1225) into MethodInvocation(1228) at 0", "Insert SimpleName: fromCalendarFields(1226) into MethodInvocation(1228) at 1", "Move SimpleName: value(1214) into MethodInvocation(1228) at 2", "Insert SimpleName: TimestampString(1289) into MethodInvocation(1292) at 0", "Insert SimpleName: fromCalendarFields(1290) into MethodInvocation(1292) at 1", "Move SimpleName: value(1275) into MethodInvocation(1292) at 2", "Update QualifiedName: SqlTypeName.INTERVAL_DAY_TIME(1410) to SqlTypeName.INTERVAL_DAY", "Delete QualifiedName: RelOptPlanner.Executor(124)"]}}, {"DrillJoinRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 19"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: LogicalJoin to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL Javadoc", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}, {"root": "DEL SimpleType: LogicalJoin", "operations": ["DEL SimpleType: LogicalJoin", "DEL SimpleName: LogicalJoin"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: intValue", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: intValue", "DEL MethodInvocation"]}]}}, {"DrillJoinRule_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(547) at 19", "Update QualifiedName: java.util.logging.Logger(19) to org.slf4j.Logger", "Move SimpleType: LogicalJoin(115) into VariableDeclarationStatement(104) at 1", "Move MethodInvocation(119) into VariableDeclarationFragment(103) at 1", "Move MethodInvocation(506) into VariableDeclarationFragment(489) at 1", "Move MethodInvocation(516) into VariableDeclarationFragment(497) at 1", "Update SimpleName: warning(394) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: LogicalJoin(111)", "Delete SimpleType: LogicalJoin(112)", "Delete CastExpression(120)", "Delete SimpleName: intValue(507)", "Delete MethodInvocation(508)", "Delete SimpleName: intValue(517)", "Delete MethodInvocation(518)"]}}, {"DrillOptiq_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 47"]}, {"root": "INS IfStatement to SwitchStatement at 23", "operations": ["INS SimpleName: doFunction to MethodInvocation at 0", "INS IfStatement to SwitchStatement at 23", "INS SimpleName: getOperator to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"-\" to MethodInvocation at 2", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: call to MethodInvocation at 1", "INS QualifiedName: SqlStdOperatorTable.MINUS_DATE to InfixExpression: == at 1", "INS SimpleName: call to MethodInvocation at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 20", "operations": ["INS SwitchCase to SwitchStatement at 20", "INS StringLiteral: \"INTERVAL_YEAR\" to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 22", "operations": ["INS StringLiteral: \"INTERVAL_MONTH\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 22"]}, {"root": "INS SwitchCase to SwitchStatement at 26", "operations": ["INS SwitchCase to SwitchStatement at 26", "INS StringLiteral: \"INTERVAL_DAY_HOUR\" to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 27", "operations": ["INS StringLiteral: \"INTERVAL_DAY_MINUTE\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 27"]}, {"root": "INS SwitchCase to SwitchStatement at 28", "operations": ["INS SwitchCase to SwitchStatement at 28", "INS StringLiteral: \"INTERVAL_DAY_SECOND\" to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 29", "operations": ["INS StringLiteral: \"INTERVAL_HOUR\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 29"]}, {"root": "INS SwitchCase to SwitchStatement at 30", "operations": ["INS StringLiteral: \"INTERVAL_HOUR_MINUTE\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 30"]}, {"root": "INS SwitchCase to SwitchStatement at 31", "operations": ["INS SwitchCase to SwitchStatement at 31", "INS StringLiteral: \"INTERVAL_HOUR_SECOND\" to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 32", "operations": ["INS StringLiteral: \"INTERVAL_MINUTE\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 32"]}, {"root": "INS SwitchCase to SwitchStatement at 33", "operations": ["INS StringLiteral: \"INTERVAL_MINUTE_SECOND\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 33"]}, {"root": "INS SwitchCase to SwitchStatement at 34", "operations": ["INS SwitchCase to SwitchStatement at 34", "INS StringLiteral: \"INTERVAL_SECOND\" to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 44", "operations": ["INS SwitchCase to SwitchStatement at 44", "INS SimpleName: INTERVAL_YEAR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 45", "operations": ["INS SwitchCase to SwitchStatement at 45", "INS SimpleName: INTERVAL_MONTH to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 50", "operations": ["INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 50"]}, {"root": "INS SwitchCase to SwitchStatement at 51", "operations": ["INS SwitchCase to SwitchStatement at 51", "INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 52", "operations": ["INS SwitchCase to SwitchStatement at 52", "INS SimpleName: INTERVAL_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 53", "operations": ["INS SwitchCase to SwitchStatement at 53", "INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 54", "operations": ["INS SwitchCase to SwitchStatement at 54", "INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 55", "operations": ["INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 55"]}, {"root": "INS SwitchCase to SwitchStatement at 56", "operations": ["INS SwitchCase to SwitchStatement at 56", "INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 57", "operations": ["INS SwitchCase to SwitchStatement at 57", "INS SimpleName: INTERVAL_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 64", "operations": ["INS SwitchCase to SwitchStatement at 64"]}, {"root": "UPDATE from \"INTERVAL_DAY_TIME\" to \"INTERVAL_DAY\"", "operations": ["UPD StringLiteral: \"INTERVAL_DAY_TIME\" from \"INTERVAL_DAY_TIME\" to \"INTERVAL_DAY\""]}, {"root": "UPDATE from INTERVAL_DAY_TIME to INTERVAL_DAY", "operations": ["UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY"]}, {"root": "INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0", "operations": ["INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0"]}]}}, {"DrillOptiq_diff": {"operations": ["Move SwitchCase(2421) into SwitchStatement(2492) at 47", "Insert IfStatement(819) into SwitchStatement(831) at 23", "Insert SwitchCase(1294) into SwitchStatement(1376) at 20", "Insert SwitchCase(1298) into SwitchStatement(1376) at 22", "Insert SwitchCase(1310) into SwitchStatement(1376) at 26", "Insert SwitchCase(1312) into SwitchStatement(1376) at 27", "Insert SwitchCase(1314) into SwitchStatement(1376) at 28", "Insert SwitchCase(1316) into SwitchStatement(1376) at 29", "Insert SwitchCase(1318) into SwitchStatement(1376) at 30", "Insert SwitchCase(1320) into SwitchStatement(1376) at 31", "Insert SwitchCase(1322) into SwitchStatement(1376) at 32", "Insert SwitchCase(1324) into SwitchStatement(1376) at 33", "Insert SwitchCase(1326) into SwitchStatement(1376) at 34", "Insert SwitchCase(2393) into SwitchStatement(2492) at 44", "Insert SwitchCase(2395) into SwitchStatement(2492) at 45", "Insert SwitchCase(2425) into SwitchStatement(2492) at 50", "Insert SwitchCase(2427) into SwitchStatement(2492) at 51", "Insert SwitchCase(2429) into SwitchStatement(2492) at 52", "Insert SwitchCase(2431) into SwitchStatement(2492) at 53", "Insert SwitchCase(2433) into SwitchStatement(2492) at 54", "Insert SwitchCase(2435) into SwitchStatement(2492) at 55", "Insert SwitchCase(2437) into SwitchStatement(2492) at 56", "Insert SwitchCase(2439) into SwitchStatement(2492) at 57", "Insert SwitchCase(2477) into SwitchStatement(2492) at 64", "Insert InfixExpression: ==(812) into IfStatement(819) at 0", "Insert Block(818) into IfStatement(819) at 1", "Insert StringLiteral: \"INTERVAL_YEAR\"(1293) into SwitchCase(1294) at 0", "Insert StringLiteral: \"INTERVAL_MONTH\"(1297) into SwitchCase(1298) at 0", "Update StringLiteral: \"INTERVAL_DAY_TIME\"(1291) to \"INTERVAL_DAY\"", "Insert StringLiteral: \"INTERVAL_DAY_HOUR\"(1309) into SwitchCase(1310) at 0", "Insert StringLiteral: \"INTERVAL_DAY_MINUTE\"(1311) into SwitchCase(1312) at 0", "Insert StringLiteral: \"INTERVAL_DAY_SECOND\"(1313) into SwitchCase(1314) at 0", "Insert StringLiteral: \"INTERVAL_HOUR\"(1315) into SwitchCase(1316) at 0", "Insert StringLiteral: \"INTERVAL_HOUR_MINUTE\"(1317) into SwitchCase(1318) at 0", "Insert StringLiteral: \"INTERVAL_HOUR_SECOND\"(1319) into SwitchCase(1320) at 0", "Insert StringLiteral: \"INTERVAL_MINUTE\"(1321) into SwitchCase(1322) at 0", "Insert StringLiteral: \"INTERVAL_MINUTE_SECOND\"(1323) into SwitchCase(1324) at 0", "Insert StringLiteral: \"INTERVAL_SECOND\"(1325) into SwitchCase(1326) at 0", "Insert SimpleName: INTERVAL_YEAR(2392) into SwitchCase(2393) at 0", "Insert SimpleName: INTERVAL_MONTH(2394) into SwitchCase(2395) at 0", "Update SimpleName: INTERVAL_DAY_TIME(2382) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(2422) into SwitchCase(2423) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(2424) into SwitchCase(2425) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(2426) into SwitchCase(2427) at 0", "Insert SimpleName: INTERVAL_HOUR(2428) into SwitchCase(2429) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(2430) into SwitchCase(2431) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(2432) into SwitchCase(2433) at 0", "Insert SimpleName: INTERVAL_MINUTE(2434) into SwitchCase(2435) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(2436) into SwitchCase(2437) at 0", "Insert SimpleName: INTERVAL_SECOND(2438) into SwitchCase(2439) at 0", "Insert MethodInvocation(810) into InfixExpression: ==(812) at 0", "Insert QualifiedName: SqlStdOperatorTable.MINUS_DATE(811) into InfixExpression: ==(812) at 1", "Insert ReturnStatement(817) into Block(818) at 0", "Insert SimpleName: call(808) into MethodInvocation(810) at 0", "Insert SimpleName: getOperator(809) into MethodInvocation(810) at 1", "Insert MethodInvocation(816) into ReturnStatement(817) at 0", "Insert SimpleName: doFunction(813) into MethodInvocation(816) at 0", "Insert SimpleName: call(814) into MethodInvocation(816) at 1", "Insert StringLiteral: \"-\"(815) into MethodInvocation(816) at 2"]}}, {"DrillProjectSetOpTransposeRule_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.calcite.rel.core.RelFactories to ImportDeclaration at 0"]}, {"root": "INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1", "operations": ["INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL Javadoc", "DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}]}}, {"DrillProjectSetOpTransposeRule_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(38) at 2", "Insert QualifiedName: org.apache.calcite.rel.core.RelFactories(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(33) into SuperConstructorInvocation(34) at 1", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillPushProjectPastFilterRule_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.calcite.rel.core.RelFactories to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.calcite.rel.logical.LogicalFilter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.calcite.rel.logical.LogicalProject to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS TypeLiteral to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: LogicalProject to SimpleType: LogicalProject at 0", "INS TypeLiteral to SuperConstructorInvocation at 0", "INS SimpleType: LogicalProject to TypeLiteral at 0"]}, {"root": "INS TypeLiteral to SuperConstructorInvocation at 1", "operations": ["INS SimpleType: LogicalFilter to TypeLiteral at 0", "INS TypeLiteral to SuperConstructorInvocation at 1", "INS SimpleName: LogicalFilter to SimpleType: LogicalFilter at 0"]}, {"root": "INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 2", "operations": ["INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 2"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: limitations under the License.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TagElement", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the"]}]}}, {"DrillPushProjectPastFilterRule_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(48) at 1", "Insert ImportDeclaration(5) into CompilationUnit(48) at 2", "Insert ImportDeclaration(7) into CompilationUnit(48) at 3", "Insert QualifiedName: org.apache.calcite.rel.core.RelFactories(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalFilter(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalProject(6) into ImportDeclaration(7) at 0", "Insert TypeLiteral(38) into SuperConstructorInvocation(44) at 0", "Insert TypeLiteral(41) into SuperConstructorInvocation(44) at 1", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(42) into SuperConstructorInvocation(44) at 2", "Insert SimpleType: LogicalProject(37) into TypeLiteral(38) at 0", "Insert SimpleType: LogicalFilter(40) into TypeLiteral(41) at 0", "Insert SimpleName: LogicalProject(36) into SimpleType: LogicalProject(37) at 0", "Insert SimpleName: LogicalFilter(39) into SimpleType: LogicalFilter(40) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillPushProjectPastJoinRule_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: org.apache.calcite.rel.core.RelFactories to ImportDeclaration at 0"]}, {"root": "INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1", "operations": ["INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL Javadoc", "DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}]}}, {"DrillPushProjectPastJoinRule_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(38) at 1", "Insert QualifiedName: org.apache.calcite.rel.core.RelFactories(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(33) into SuperConstructorInvocation(34) at 1", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillReduceAggregatesRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 46"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "INS QualifiedName: rexWinAggCall.distinct to ClassInstanceCreation at 5", "operations": ["INS QualifiedName: rexWinAggCall.distinct to ClassInstanceCreation at 5"]}]}}, {"DrillReduceAggregatesRule_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(2577) at 46", "Update QualifiedName: java.util.logging.Logger(14) to org.slf4j.Logger", "Update SimpleName: warning(2283) to warn", "Insert QualifiedName: rexWinAggCall.distinct(2473) into ClassInstanceCreation(2474) at 5"]}}, {"DrillReduceExpressionsRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.calcite.rel.logical.LogicalFilter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from org.apache.calcite.rel.RelCollationImpl to org.apache.calcite.plan.RelOptRuleCall", "operations": ["UPD QualifiedName: org.apache.calcite.rel.RelCollationImpl from org.apache.calcite.rel.RelCollationImpl to org.apache.calcite.plan.RelOptRuleCall"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Sort to org.apache.calcite.rel.core.RelFactories", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Sort from org.apache.calcite.rel.core.Sort to org.apache.calcite.rel.core.RelFactories"]}, {"root": "UPDATE from ReduceExpressionsRule.ReduceFilterRule to ReduceExpressionsRule.FilterReduceExpressionsRule", "operations": ["UPD SimpleType: ReduceExpressionsRule.ReduceFilterRule from ReduceExpressionsRule.ReduceFilterRule to ReduceExpressionsRule.FilterReduceExpressionsRule", "UPD QualifiedName: ReduceExpressionsRule.ReduceFilterRule from ReduceExpressionsRule.ReduceFilterRule to ReduceExpressionsRule.FilterReduceExpressionsRule"]}, {"root": "UPDATE from ReduceExpressionsRule.ReduceCalcRule to ReduceExpressionsRule.CalcReduceExpressionsRule", "operations": ["UPD QualifiedName: ReduceExpressionsRule.ReduceCalcRule from ReduceExpressionsRule.ReduceCalcRule to ReduceExpressionsRule.CalcReduceExpressionsRule", "UPD SimpleType: ReduceExpressionsRule.ReduceCalcRule from ReduceExpressionsRule.ReduceCalcRule to ReduceExpressionsRule.CalcReduceExpressionsRule"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: RelOptRuleCall to SingleVariableDeclaration at 0", "INS SimpleName: RelOptRuleCall to SimpleType: RelOptRuleCall at 0", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS SimpleType: RelOptRuleCall to SingleVariableDeclaration at 0", "INS SimpleName: RelOptRuleCall to SimpleType: RelOptRuleCall at 0"]}, {"root": "UPDATE from calc to input", "operations": ["UPD SimpleName: calc from calc to input", "UPD SimpleName: calc from calc to input"]}, {"root": "INS TypeLiteral to SuperConstructorInvocation at 0", "operations": ["INS SimpleType: DrillFilterRel to TypeLiteral at 0", "INS SimpleName: DrillFilterRel to SimpleType: DrillFilterRel at 0", "INS TypeLiteral to SuperConstructorInvocation at 0"]}, {"root": "INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1", "operations": ["INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1"]}, {"root": "INS TypeLiteral to SuperConstructorInvocation at 0", "operations": ["INS SimpleType: Calc to TypeLiteral at 0", "INS TypeLiteral to SuperConstructorInvocation at 0", "INS SimpleName: Calc to SimpleType: Calc at 0"]}, {"root": "INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1", "operations": ["INS QualifiedName: RelFactories.LOGICAL_BUILDER to SuperConstructorInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL Javadoc", "DEL TagElement", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file"]}, {"root": "DEL StringLiteral: \"DrillReduceExpressionsRule(Filter)\"", "operations": ["DEL StringLiteral: \"DrillReduceExpressionsRule(Filter)\""]}, {"root": "DEL StringLiteral: \"DrillReduceExpressionsRule(Calc)\"", "operations": ["DEL StringLiteral: \"DrillReduceExpressionsRule(Calc)\""]}]}}, {"DrillReduceExpressionsRule_diff": {"operations": ["Move ImportDeclaration(22) into CompilationUnit(172) at 8", "Move ImportDeclaration(26) into CompilationUnit(172) at 1", "Move ImportDeclaration(32) into CompilationUnit(172) at 4", "Insert ImportDeclaration(19) into CompilationUnit(172) at 9", "Update QualifiedName: org.apache.calcite.rel.RelCollationImpl(25) to org.apache.calcite.plan.RelOptRuleCall", "Update QualifiedName: org.apache.calcite.rel.core.Sort(31) to org.apache.calcite.rel.core.RelFactories", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalFilter(18) into ImportDeclaration(19) at 0", "Update SimpleType: ReduceExpressionsRule.ReduceFilterRule(67) to ReduceExpressionsRule.FilterReduceExpressionsRule", "Update SimpleType: ReduceExpressionsRule.ReduceCalcRule(100) to ReduceExpressionsRule.CalcReduceExpressionsRule", "Update QualifiedName: ReduceExpressionsRule.ReduceFilterRule(66) to ReduceExpressionsRule.FilterReduceExpressionsRule", "Insert SingleVariableDeclaration(78) into MethodDeclaration(88) at 5", "Update QualifiedName: ReduceExpressionsRule.ReduceCalcRule(99) to ReduceExpressionsRule.CalcReduceExpressionsRule", "Insert SingleVariableDeclaration(118) into MethodDeclaration(128) at 5", "Insert SimpleType: RelOptRuleCall(76) into SingleVariableDeclaration(78) at 0", "Insert SimpleName: call(77) into SingleVariableDeclaration(78) at 1", "Insert SimpleType: RelOptRuleCall(116) into SingleVariableDeclaration(118) at 0", "Insert SimpleName: call(117) into SingleVariableDeclaration(118) at 1", "Update SimpleName: calc(120) to input", "Insert TypeLiteral(58) into SuperConstructorInvocation(60) at 0", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(59) into SuperConstructorInvocation(60) at 1", "Insert SimpleName: RelOptRuleCall(75) into SimpleType: RelOptRuleCall(76) at 0", "Insert TypeLiteral(98) into SuperConstructorInvocation(100) at 0", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(99) into SuperConstructorInvocation(100) at 1", "Insert SimpleName: RelOptRuleCall(115) into SimpleType: RelOptRuleCall(116) at 0", "Insert SimpleType: DrillFilterRel(57) into TypeLiteral(58) at 0", "Insert SimpleType: Calc(97) into TypeLiteral(98) at 0", "Update SimpleName: calc(123) to input", "Insert SimpleName: DrillFilterRel(56) into SimpleType: DrillFilterRel(57) at 0", "Insert SimpleName: Calc(96) into SimpleType: Calc(97) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete StringLiteral: \"DrillReduceExpressionsRule(Filter)\"(69)", "Delete StringLiteral: \"DrillReduceExpressionsRule(Calc)\"(102)"]}}, {"DrillRelFactories_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.calcite.rel.core.CorrelationId to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: CorrelationId to SimpleType: CorrelationId at 0", "INS SimpleName: getTraitSet to MethodInvocation at 1", "INS SimpleName: createJoin to MethodDeclaration at 3", "INS SimpleName: joinType to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: Set to ParameterizedType: Set<CorrelationId> at 0", "INS SimpleName: condition to SingleVariableDeclaration at 1", "INS SimpleName: getCluster to MethodInvocation at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SimpleType: DrillJoinRel to ClassInstanceCreation at 0", "INS SimpleName: left to ClassInstanceCreation at 3", "INS SimpleType: CorrelationId to ParameterizedType: Set<CorrelationId> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: right to ClassInstanceCreation at 4", "INS SimpleName: variablesSet to SingleVariableDeclaration at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS Block to MethodDeclaration at 10", "INS SimpleName: semiJoinDone to SingleVariableDeclaration at 1", "INS SimpleName: DrillJoinRel to SimpleType: DrillJoinRel at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: JoinRelType to SimpleType: JoinRelType at 0", "INS SimpleName: left to SingleVariableDeclaration at 1", "INS SimpleType: RexNode to SingleVariableDeclaration at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: left to MethodInvocation at 0", "INS SimpleName: joinType to ClassInstanceCreation at 6", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: RelNode to SingleVariableDeclaration at 0", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: condition to ClassInstanceCreation at 5", "INS SimpleName: left to MethodInvocation at 0", "INS SimpleName: right to SingleVariableDeclaration at 1", "INS ParameterizedType: Set<CorrelationId> to SingleVariableDeclaration at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleType: JoinRelType to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: RelNode to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleType: RelNode to SingleVariableDeclaration at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL Javadoc", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License.  You may obtain a copy of the License at"]}]}}, {"DrillRelFactories_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(295) at 3", "Insert QualifiedName: org.apache.calcite.rel.core.CorrelationId(6) into ImportDeclaration(7) at 0", "Insert MethodDeclaration(244) into TypeDeclaration: class(293) at 5", "Insert MarkerAnnotation(198) into MethodDeclaration(244) at 0", "Insert Modifier: public(199) into MethodDeclaration(244) at 1", "Insert SimpleType: RelNode(201) into MethodDeclaration(244) at 2", "Insert SimpleName: createJoin(202) into MethodDeclaration(244) at 3", "Insert SingleVariableDeclaration(206) into MethodDeclaration(244) at 4", "Insert SingleVariableDeclaration(210) into MethodDeclaration(244) at 5", "Insert SingleVariableDeclaration(214) into MethodDeclaration(244) at 6", "Insert SingleVariableDeclaration(221) into MethodDeclaration(244) at 7", "Insert SingleVariableDeclaration(225) into MethodDeclaration(244) at 8", "Insert SingleVariableDeclaration(228) into MethodDeclaration(244) at 9", "Insert Block(243) into MethodDeclaration(244) at 10", "Insert SimpleName: Override(197) into MarkerAnnotation(198) at 0", "Insert SimpleName: RelNode(200) into SimpleType: RelNode(201) at 0", "Insert SimpleType: RelNode(204) into SingleVariableDeclaration(206) at 0", "Insert SimpleName: left(205) into SingleVariableDeclaration(206) at 1", "Insert SimpleType: RelNode(208) into SingleVariableDeclaration(210) at 0", "Insert SimpleName: right(209) into SingleVariableDeclaration(210) at 1", "Insert SimpleType: RexNode(212) into SingleVariableDeclaration(214) at 0", "Insert SimpleName: condition(213) into SingleVariableDeclaration(214) at 1", "Insert ParameterizedType: Set<CorrelationId>(219) into SingleVariableDeclaration(221) at 0", "Insert SimpleName: variablesSet(220) into SingleVariableDeclaration(221) at 1", "Insert SimpleType: JoinRelType(223) into SingleVariableDeclaration(225) at 0", "Insert SimpleName: joinType(224) into SingleVariableDeclaration(225) at 1", "Insert PrimitiveType: boolean(226) into SingleVariableDeclaration(228) at 0", "Insert SimpleName: semiJoinDone(227) into SingleVariableDeclaration(228) at 1", "Insert ReturnStatement(242) into Block(243) at 0", "Insert SimpleName: RelNode(203) into SimpleType: RelNode(204) at 0", "Insert SimpleName: RelNode(207) into SimpleType: RelNode(208) at 0", "Insert SimpleName: RexNode(211) into SimpleType: RexNode(212) at 0", "Insert SimpleType: Set(216) into ParameterizedType: Set<CorrelationId>(219) at 0", "Insert SimpleType: CorrelationId(218) into ParameterizedType: Set<CorrelationId>(219) at 1", "Insert SimpleName: JoinRelType(222) into SimpleType: JoinRelType(223) at 0", "Insert ClassInstanceCreation(241) into ReturnStatement(242) at 0", "Insert SimpleName: Set(215) into SimpleType: Set(216) at 0", "Insert SimpleName: CorrelationId(217) into SimpleType: CorrelationId(218) at 0", "Insert SimpleType: DrillJoinRel(230) into ClassInstanceCreation(241) at 0", "Insert MethodInvocation(233) into ClassInstanceCreation(241) at 1", "Insert MethodInvocation(236) into ClassInstanceCreation(241) at 2", "Insert SimpleName: left(237) into ClassInstanceCreation(241) at 3", "Insert SimpleName: right(238) into ClassInstanceCreation(241) at 4", "Insert SimpleName: condition(239) into ClassInstanceCreation(241) at 5", "Insert SimpleName: joinType(240) into ClassInstanceCreation(241) at 6", "Insert SimpleName: DrillJoinRel(229) into SimpleType: DrillJoinRel(230) at 0", "Insert SimpleName: left(231) into MethodInvocation(233) at 0", "Insert SimpleName: getCluster(232) into MethodInvocation(233) at 1", "Insert SimpleName: left(234) into MethodInvocation(236) at 0", "Insert SimpleName: getTraitSet(235) into MethodInvocation(236) at 1", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillStoreRel_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.calcite.rex.RexNode to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleType: RexNode to ParameterizedType: List<RexNode> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<RexNode> at 0", "INS ParameterizedType: List<RexNode> to SingleVariableDeclaration at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: sourceExpressionList to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: sourceExpressionList to SuperConstructorInvocation at 7", "operations": ["INS SimpleName: sourceExpressionList to SuperConstructorInvocation at 7"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: limitations under the License.", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc"]}]}}, {"DrillStoreRel_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(109) at 3", "Insert QualifiedName: org.apache.calcite.rex.RexNode(6) into ImportDeclaration(7) at 0", "Insert SingleVariableDeclaration(78) into MethodDeclaration(93) at 9", "Insert ParameterizedType: List<RexNode>(76) into SingleVariableDeclaration(78) at 0", "Insert SimpleName: sourceExpressionList(77) into SingleVariableDeclaration(78) at 1", "Insert SimpleType: List(73) into ParameterizedType: List<RexNode>(76) at 0", "Insert SimpleType: RexNode(75) into ParameterizedType: List<RexNode>(76) at 1", "Insert SimpleName: sourceExpressionList(89) into SuperConstructorInvocation(91) at 7", "Insert SimpleName: List(72) into SimpleType: List(73) at 0", "Insert SimpleName: RexNode(74) into SimpleType: RexNode(75) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillUnionAllRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 13"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: LogicalUnion to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: limitations under the License.", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}, {"root": "DEL SimpleType: LogicalUnion", "operations": ["DEL SimpleName: LogicalUnion", "DEL SimpleType: LogicalUnion"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}]}}, {"DrillUnionAllRule_diff": {"operations": ["Move ImportDeclaration(22) into CompilationUnit(184) at 13", "Update QualifiedName: java.util.logging.Logger(21) to org.slf4j.Logger", "Move SimpleType: LogicalUnion(103) into VariableDeclarationStatement(92) at 1", "Move MethodInvocation(107) into VariableDeclarationFragment(91) at 1", "Update SimpleName: warning(190) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: LogicalUnion(99)", "Delete SimpleType: LogicalUnion(100)", "Delete CastExpression(108)"]}}, {"DrillViewTable_cluster": {"actions": [{"root": "UPDATE from java.util.List to com.google.common.collect.ImmutableList", "operations": ["UPD QualifiedName: java.util.List from java.util.List to com.google.common.collect.ImmutableList"]}, {"root": "INS FieldAccess to Assignment: = at 1", "operations": ["INS FieldAccess to Assignment: = at 1", "INS SimpleName: rel to FieldAccess at 1"]}, {"root": "INS FieldAccess to Assignment: = at 1", "operations": ["INS SimpleName: rel to FieldAccess at 1", "INS SimpleName: of to MethodInvocation at 2", "INS SimpleType: String to MethodInvocation at 1", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: String to SimpleType: String at 0", "INS FieldAccess to Assignment: = at 1"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV MethodInvocation to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: expandView to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 4", "MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: rowType to MethodInvocation at 2"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TagElement", "DEL Javadoc", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}]}}, {"DrillViewTable_diff": {"operations": ["Update QualifiedName: java.util.List(17) to com.google.common.collect.ImmutableList", "Insert FieldAccess(187) into Assignment: =(188) at 1", "Insert FieldAccess(208) into Assignment: =(209) at 1", "Move MethodInvocation(200) into FieldAccess(187) at 0", "Insert SimpleName: rel(186) into FieldAccess(187) at 1", "Insert MethodInvocation(206) into FieldAccess(208) at 0", "Insert SimpleName: rel(207) into FieldAccess(208) at 1", "Move SimpleName: context(205) into MethodInvocation(206) at 0", "Move SimpleName: expandView(206) into MethodInvocation(206) at 1", "Move SimpleName: rowType(207) into MethodInvocation(206) at 2", "Move MethodInvocation(210) into MethodInvocation(206) at 3", "Move MethodInvocation(213) into MethodInvocation(206) at 4", "Insert MethodInvocation(205) into MethodInvocation(206) at 5", "Insert SimpleName: ImmutableList(201) into MethodInvocation(205) at 0", "Insert SimpleType: String(203) into MethodInvocation(205) at 1", "Insert SimpleName: of(204) into MethodInvocation(205) at 2", "Insert SimpleName: String(202) into SimpleType: String(203) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete MethodInvocation(214)"]}}, {"HashAggPrel_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.common.logical.data.NamedExpression"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.ExecConstants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.expr.holders.IntHolder"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase.DrillCostFactory", "DEL ImportDeclaration"]}]}}, {"HashAggPrel_diff": {"operations": ["Delete QualifiedName: org.apache.drill.common.logical.data.NamedExpression(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.drill.exec.ExecConstants(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.drill.exec.expr.holders.IntHolder(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase.DrillCostFactory(20)", "Delete ImportDeclaration(21)"]}}, {"HashAggPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 13"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TagElement", "DEL TextElement: limitations under the License.", "DEL TextElement: \"License\"); you may not use this file except in compliance"]}]}}, {"HashAggPrule_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(548) at 13", "Update QualifiedName: java.util.logging.Logger(17) to org.slf4j.Logger", "Update SimpleName: warning(328) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"HashJoinPrel_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase.DrillCostFactory", "DEL ImportDeclaration"]}]}}, {"HashJoinPrel_diff": {"operations": ["Delete QualifiedName: org.apache.drill.exec.planner.cost.DrillCostBase.DrillCostFactory(20)", "Delete ImportDeclaration(21)"]}}, {"HashJoinPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: DrillJoinRel to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL Javadoc", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file"]}, {"root": "DEL SimpleType: DrillJoinRel", "operations": ["DEL SimpleName: DrillJoinRel", "DEL SimpleType: DrillJoinRel"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}]}}, {"HashJoinPrule_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(266) at 10", "Update QualifiedName: java.util.logging.Logger(17) to org.slf4j.Logger", "Move SimpleType: DrillJoinRel(180) into VariableDeclarationStatement(169) at 1", "Move MethodInvocation(184) into VariableDeclarationFragment(168) at 1", "Update SimpleName: warning(272) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: DrillJoinRel(176)", "Delete SimpleType: DrillJoinRel(177)", "Delete CastExpression(185)"]}}, {"MergeJoinPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: See the License for the specific language governing permissions and", "DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL TextElement: \"License\"); you may not use this file except in compliance"]}]}}, {"MergeJoinPrule_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(324) at 15", "Update QualifiedName: java.util.logging.Logger(19) to org.slf4j.Logger", "Update SimpleName: warning(284) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"NestedLoopJoinPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: DrillJoinRel to VariableDeclarationStatement at 1", "MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL SimpleType: DrillJoinRel", "operations": ["DEL SimpleType: DrillJoinRel", "DEL SimpleName: DrillJoinRel"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}]}}, {"NestedLoopJoinPrule_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(326) at 15", "Update QualifiedName: java.util.logging.Logger(4) to org.slf4j.Logger", "Move SimpleType: DrillJoinRel(252) into VariableDeclarationStatement(256) at 1", "Move MethodInvocation(256) into VariableDeclarationFragment(255) at 1", "Update SimpleName: warning(317) to warn", "Delete SimpleName: DrillJoinRel(248)", "Delete SimpleType: DrillJoinRel(249)", "Delete CastExpression(257)"]}}, {"StreamAggPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 18"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TagElement", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}]}}, {"StreamAggPrule_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(715) at 18", "Update QualifiedName: java.util.logging.Logger(19) to org.slf4j.Logger", "Update SimpleName: warning(611) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"UnionAllPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 16"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "INS EnhancedForStatement to Block at 5", "operations": ["INS SimpleName: child to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 5", "INS SimpleName: inputs to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: RelNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TagElement", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: with the License.  You may obtain a copy of the License at"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL SimpleType: DrillUnionRel", "DEL SimpleName: DrillUnionRel"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: DrillUnionRel", "DEL CastExpression", "DEL SimpleType: DrillUnionRel"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: child", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: inputs"]}, {"root": "DEL ForStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationExpression", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL PrimitiveType: int", "DEL PostfixExpression: ++", "DEL ForStatement", "DEL SimpleName: i", "DEL SimpleName: inputs", "DEL SimpleName: size", "DEL SimpleName: i"]}]}}, {"UnionAllPrule_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(384) at 16", "Update QualifiedName: java.util.logging.Logger(19) to org.slf4j.Logger", "Insert EnhancedForStatement(276) into Block(381) at 5", "Insert SingleVariableDeclaration(157) into EnhancedForStatement(276) at 0", "Insert SimpleName: inputs(158) into EnhancedForStatement(276) at 1", "Move Block(312) into EnhancedForStatement(276) at 2", "Move MethodInvocation(132) into VariableDeclarationFragment(86) at 1", "Move MethodInvocation(102) into VariableDeclarationFragment(113) at 1", "Move SimpleType: RelNode(188) into SingleVariableDeclaration(157) at 0", "Insert SimpleName: child(156) into SingleVariableDeclaration(157) at 1", "Update SimpleName: warning(409) to warn", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: DrillUnionRel(97)", "Delete SimpleType: DrillUnionRel(98)", "Delete CastExpression(103)", "Delete SimpleName: DrillUnionRel(127)", "Delete SimpleType: DrillUnionRel(128)", "Delete CastExpression(133)", "Delete SimpleName: child(189)", "Delete SimpleName: inputs(190)", "Delete SimpleName: get(191)", "Delete SimpleName: i(192)", "Delete MethodInvocation(193)", "Delete VariableDeclarationFragment(194)", "Delete VariableDeclarationStatement(195)", "Delete PrimitiveType: int(175)", "Delete SimpleName: i(176)", "Delete NumberLiteral: 0(177)", "Delete VariableDeclarationFragment(178)", "Delete VariableDeclarationExpression(179)", "Delete SimpleName: i(180)", "Delete SimpleName: inputs(181)", "Delete SimpleName: size(182)", "Delete MethodInvocation(183)", "Delete InfixExpression: <(184)", "Delete SimpleName: i(185)", "Delete PostfixExpression: ++(186)", "Delete ForStatement(313)"]}}, {"UnionDistinctPrule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 12"]}, {"root": "UPDATE from java.util.logging.Logger to org.slf4j.Logger", "operations": ["UPD QualifiedName: java.util.logging.Logger from java.util.logging.Logger to org.slf4j.Logger"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS EnhancedForStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SimpleType: RelNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: inputs to EnhancedForStatement at 1", "INS SimpleName: input to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from warning to warn", "operations": ["UPD SimpleName: warning from warning to warn"]}, {"root": "UPDATE from inputs to input", "operations": ["UPD SimpleName: inputs from inputs to input"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: inputs to MethodInvocation at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: distributed with this work for additional information", "DEL TagElement", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: DrillUnionRel", "DEL CastExpression", "DEL SimpleType: DrillUnionRel"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL SimpleName: DrillUnionRel", "DEL SimpleType: DrillUnionRel"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: get", "DEL SimpleName: i", "DEL MethodInvocation"]}, {"root": "DEL ForStatement", "operations": ["DEL InfixExpression: <", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: i", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL VariableDeclarationExpression", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL SimpleName: size", "DEL SimpleName: inputs", "DEL ForStatement", "DEL PostfixExpression: ++"]}]}}, {"UnionDistinctPrule_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(223) at 12", "Update QualifiedName: java.util.logging.Logger(19) to org.slf4j.Logger", "Move MethodInvocation(128) into VariableDeclarationFragment(78) at 1", "Move MethodInvocation(94) into VariableDeclarationFragment(109) at 1", "Insert EnhancedForStatement(171) into Block(205) at 0", "Insert SingleVariableDeclaration(150) into EnhancedForStatement(171) at 0", "Insert SimpleName: inputs(151) into EnhancedForStatement(171) at 1", "Insert Block(170) into EnhancedForStatement(171) at 2", "Insert SimpleType: RelNode(148) into SingleVariableDeclaration(150) at 0", "Insert SimpleName: input(149) into SingleVariableDeclaration(150) at 1", "Move VariableDeclarationStatement(195) into Block(170) at 0", "Move ExpressionStatement(200) into Block(170) at 1", "Insert SimpleName: RelNode(147) into SimpleType: RelNode(148) at 0", "Update SimpleName: warning(242) to warn", "Update SimpleName: inputs(184) to input", "Move SimpleName: inputs(184) into MethodInvocation(162) at 1", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleName: DrillUnionRel(89)", "Delete SimpleType: DrillUnionRel(90)", "Delete CastExpression(95)", "Delete SimpleName: DrillUnionRel(123)", "Delete SimpleType: DrillUnionRel(124)", "Delete CastExpression(129)", "Delete SimpleName: get(185)", "Delete SimpleName: i(186)", "Delete MethodInvocation(187)", "Delete PrimitiveType: int(168)", "Delete SimpleName: i(169)", "Delete NumberLiteral: 0(170)", "Delete VariableDeclarationFragment(171)", "Delete VariableDeclarationExpression(172)", "Delete SimpleName: i(173)", "Delete SimpleName: inputs(174)", "Delete SimpleName: size(175)", "Delete MethodInvocation(176)", "Delete InfixExpression: <(177)", "Delete SimpleName: i(178)", "Delete PostfixExpression: ++(179)", "Delete Block(201)", "Delete ForStatement(202)"]}}, {"WindowPrule_cluster": {"actions": [{"root": "INS QualifiedName: aggCall.distinct to ClassInstanceCreation at 5", "operations": ["INS QualifiedName: aggCall.distinct to ClassInstanceCreation at 5"]}, {"root": "INS QualifiedName: aggCall.distinct to ClassInstanceCreation at 5", "operations": ["INS QualifiedName: aggCall.distinct to ClassInstanceCreation at 5"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed with this work for additional information", "DEL TagElement", "DEL TextElement: limitations under the License.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file"]}]}}, {"WindowPrule_diff": {"operations": ["Insert QualifiedName: aggCall.distinct(544) into ClassInstanceCreation(545) at 5", "Insert QualifiedName: aggCall.distinct(565) into ClassInstanceCreation(566) at 5", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"DrillCalciteSqlAggFunctionWrapper_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.calcite.util.Litmus to ImportDeclaration at 0"]}, {"root": "INS SimpleType: Litmus to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Litmus to SimpleType: Litmus at 0", "INS SimpleType: Litmus to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: litmus to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: litmus to SingleVariableDeclaration at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL Javadoc", "DEL TextElement: limitations under the License.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: fail", "operations": ["DEL SimpleName: fail"]}]}}, {"DrillCalciteSqlAggFunctionWrapper_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(367) at 12", "Insert QualifiedName: org.apache.calcite.util.Litmus(24) into ImportDeclaration(25) at 0", "Insert SimpleType: Litmus(168) into SingleVariableDeclaration(170) at 0", "Insert SimpleName: litmus(169) into SingleVariableDeclaration(170) at 1", "Insert SimpleName: Litmus(167) into SimpleType: Litmus(168) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete PrimitiveType: boolean(180)", "Delete SimpleName: fail(181)"]}}, {"DrillCalciteSqlFunctionWrapper_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.calcite.util.Litmus to ImportDeclaration at 0"]}, {"root": "INS SimpleType: Litmus to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Litmus to SingleVariableDeclaration at 0", "INS SimpleName: Litmus to SimpleType: Litmus at 0"]}, {"root": "INS SimpleName: litmus to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: litmus to SingleVariableDeclaration at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TagElement", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: fail", "operations": ["DEL SimpleName: fail"]}]}}, {"DrillCalciteSqlFunctionWrapper_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(336) at 12", "Insert QualifiedName: org.apache.calcite.util.Litmus(24) into ImportDeclaration(25) at 0", "Insert SimpleType: Litmus(118) into SingleVariableDeclaration(120) at 0", "Insert SimpleName: litmus(119) into SingleVariableDeclaration(120) at 1", "Insert SimpleName: Litmus(117) into SimpleType: Litmus(118) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete PrimitiveType: boolean(130)", "Delete SimpleName: fail(131)"]}}, {"DrillCalciteSqlOperatorWrapper_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.calcite.util.Litmus to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS SimpleType: Litmus to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Litmus to SingleVariableDeclaration at 0", "INS SimpleName: Litmus to SimpleType: Litmus at 0"]}, {"root": "INS SimpleName: litmus to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: litmus to SingleVariableDeclaration at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL Javadoc", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: fail", "operations": ["DEL SimpleName: fail"]}]}}, {"DrillCalciteSqlOperatorWrapper_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(331) at 12", "Insert QualifiedName: org.apache.calcite.util.Litmus(24) into ImportDeclaration(25) at 0", "Insert SimpleType: Litmus(194) into SingleVariableDeclaration(196) at 0", "Insert SimpleName: litmus(195) into SingleVariableDeclaration(196) at 1", "Insert SimpleName: Litmus(193) into SimpleType: Litmus(194) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete PrimitiveType: boolean(206)", "Delete SimpleName: fail(207)"]}}, {"DrillParserConfig_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.calcite.sql.validate.SqlConformance to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.calcite.sql.validate.SqlConformanceEnum to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleType: SqlConformance to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: conformance to MethodDeclaration at 3", "INS SimpleName: SqlConformance to SimpleType: SqlConformance at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS QualifiedName: SqlConformanceEnum.DEFAULT to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: isBangEqualAllowed to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: allowBangEqual to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: conformance to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0"]}]}}, {"DrillParserConfig_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(138) at 5", "Insert ImportDeclaration(13) into CompilationUnit(138) at 6", "Insert QualifiedName: org.apache.calcite.sql.validate.SqlConformance(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.calcite.sql.validate.SqlConformanceEnum(12) into ImportDeclaration(13) at 0", "Insert MethodDeclaration(114) into TypeDeclaration: class(137) at 11", "Insert MethodDeclaration(126) into TypeDeclaration: class(137) at 12", "Insert MarkerAnnotation(106) into MethodDeclaration(114) at 0", "Insert Modifier: public(107) into MethodDeclaration(114) at 1", "Insert SimpleType: SqlConformance(109) into MethodDeclaration(114) at 2", "Insert SimpleName: conformance(110) into MethodDeclaration(114) at 3", "Insert Block(113) into MethodDeclaration(114) at 4", "Insert MarkerAnnotation(116) into MethodDeclaration(126) at 0", "Insert Modifier: public(117) into MethodDeclaration(126) at 1", "Insert PrimitiveType: boolean(118) into MethodDeclaration(126) at 2", "Insert SimpleName: allowBangEqual(119) into MethodDeclaration(126) at 3", "Insert Block(125) into MethodDeclaration(126) at 4", "Insert SimpleName: Override(105) into MarkerAnnotation(106) at 0", "Insert SimpleName: SqlConformance(108) into SimpleType: SqlConformance(109) at 0", "Insert ReturnStatement(112) into Block(113) at 0", "Insert SimpleName: Override(115) into MarkerAnnotation(116) at 0", "Insert ReturnStatement(124) into Block(125) at 0", "Insert QualifiedName: SqlConformanceEnum.DEFAULT(111) into ReturnStatement(112) at 0", "Insert MethodInvocation(123) into ReturnStatement(124) at 0", "Insert MethodInvocation(121) into MethodInvocation(123) at 0", "Insert SimpleName: isBangEqualAllowed(122) into MethodInvocation(123) at 1", "Insert SimpleName: conformance(120) into MethodInvocation(121) at 0"]}}, {"DrillSqlWorker_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.calcite.sql.SqlDescribeSchema to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.calcite.sql.SqlDescribeTable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeSchemaHandler to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.drill.exec.planner.sql.parser.DrillSqlDescribeTable to ImportDeclaration at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 7"]}, {"root": "INS IfStatement to SwitchStatement at 8", "operations": ["INS InstanceofExpression to IfStatement at 0", "INS SimpleName: DrillSqlDescribeTable to SimpleType: DrillSqlDescribeTable at 0", "INS SimpleName: DescribeTableHandler to SimpleType: DescribeTableHandler at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: handler to Assignment: = at 0", "INS SimpleType: DrillSqlDescribeTable to InstanceofExpression at 1", "INS SimpleType: DescribeTableHandler to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: sqlNode to InstanceofExpression at 0", "INS Block to IfStatement at 1", "INS BreakStatement to Block at 1", "INS SimpleName: config to ClassInstanceCreation at 1", "INS IfStatement to SwitchStatement at 8"]}, {"root": "INS SwitchCase to SwitchStatement at 9", "operations": ["INS SimpleName: DESCRIBE_SCHEMA to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 9"]}, {"root": "INS IfStatement to SwitchStatement at 10", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: SqlDescribeSchema to SimpleType: SqlDescribeSchema at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS IfStatement to SwitchStatement at 10", "INS BreakStatement to Block at 1", "INS SimpleName: DescribeSchemaHandler to SimpleType: DescribeSchemaHandler at 0", "INS SimpleName: sqlNode to InstanceofExpression at 0", "INS SimpleName: config to ClassInstanceCreation at 1", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: handler to Assignment: = at 0", "INS SimpleType: DescribeSchemaHandler to ClassInstanceCreation at 0", "INS Block to IfStatement at 1", "INS SimpleType: SqlDescribeSchema to InstanceofExpression at 1"]}, {"root": "INS SwitchCase to SwitchStatement at 14", "operations": ["INS SwitchCase to SwitchStatement at 14"]}, {"root": "INS SimpleName: DESCRIBE_TABLE to SwitchCase at 0", "operations": ["INS SimpleName: DESCRIBE_TABLE to SwitchCase at 0"]}]}}, {"DrillSqlWorker_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(503) at 2", "Insert ImportDeclaration(7) into CompilationUnit(503) at 3", "Insert ImportDeclaration(27) into CompilationUnit(503) at 13", "Insert ImportDeclaration(29) into CompilationUnit(503) at 14", "Insert ImportDeclaration(39) into CompilationUnit(503) at 19", "Insert QualifiedName: org.apache.calcite.sql.SqlDescribeSchema(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.calcite.sql.SqlDescribeTable(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeSchemaHandler(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.drill.exec.planner.sql.parser.DrillSqlDescribeTable(38) into ImportDeclaration(39) at 0", "Move SwitchCase(362) into SwitchStatement(413) at 7", "Insert IfStatement(348) into SwitchStatement(413) at 8", "Insert SwitchCase(350) into SwitchStatement(413) at 9", "Insert IfStatement(364) into SwitchStatement(413) at 10", "Insert SwitchCase(404) into SwitchStatement(413) at 14", "Insert SimpleName: DESCRIBE_TABLE(333) into SwitchCase(334) at 0", "Insert InstanceofExpression(338) into IfStatement(348) at 0", "Insert Block(347) into IfStatement(348) at 1", "Insert SimpleName: DESCRIBE_SCHEMA(349) into SwitchCase(350) at 0", "Insert InstanceofExpression(354) into IfStatement(364) at 0", "Insert Block(363) into IfStatement(364) at 1", "Insert SimpleName: sqlNode(335) into InstanceofExpression(338) at 0", "Insert SimpleType: DrillSqlDescribeTable(337) into InstanceofExpression(338) at 1", "Insert ExpressionStatement(345) into Block(347) at 0", "Insert BreakStatement(346) into Block(347) at 1", "Insert SimpleName: sqlNode(351) into InstanceofExpression(354) at 0", "Insert SimpleType: SqlDescribeSchema(353) into InstanceofExpression(354) at 1", "Insert ExpressionStatement(361) into Block(363) at 0", "Insert BreakStatement(362) into Block(363) at 1", "Insert SimpleName: DrillSqlDescribeTable(336) into SimpleType: DrillSqlDescribeTable(337) at 0", "Insert Assignment: =(344) into ExpressionStatement(345) at 0", "Insert SimpleName: SqlDescribeSchema(352) into SimpleType: SqlDescribeSchema(353) at 0", "Insert Assignment: =(360) into ExpressionStatement(361) at 0", "Insert SimpleName: handler(339) into Assignment: =(344) at 0", "Insert ClassInstanceCreation(343) into Assignment: =(344) at 1", "Insert SimpleName: handler(355) into Assignment: =(360) at 0", "Insert ClassInstanceCreation(359) into Assignment: =(360) at 1", "Insert SimpleType: DescribeTableHandler(341) into ClassInstanceCreation(343) at 0", "Insert SimpleName: config(342) into ClassInstanceCreation(343) at 1", "Insert SimpleType: DescribeSchemaHandler(357) into ClassInstanceCreation(359) at 0", "Insert SimpleName: config(358) into ClassInstanceCreation(359) at 1", "Insert SimpleName: DescribeTableHandler(340) into SimpleType: DescribeTableHandler(341) at 0", "Insert SimpleName: DescribeSchemaHandler(356) into SimpleType: DescribeSchemaHandler(357) at 0"]}}, {"SqlConverter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.calcite.avatica.util.Quoting to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.calcite.prepare.Prepare to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS ImportDeclaration to CompilationUnit at 32", "INS QualifiedName: org.apache.calcite.sql.parser.SqlParserImplFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 37", "operations": ["INS ImportDeclaration to CompilationUnit at 37", "INS QualifiedName: org.apache.calcite.sql.validate.SqlConformanceEnum to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 56", "operations": ["INS QualifiedName: org.apache.drill.exec.planner.sql.parser.impl.DrillParserWithCompoundIdConverter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 56"]}, {"root": "UPDATE from org.apache.calcite.jdbc.CalciteSchemaImpl to org.apache.calcite.avatica.util.Casing", "operations": ["UPD QualifiedName: org.apache.calcite.jdbc.CalciteSchemaImpl from org.apache.calcite.jdbc.CalciteSchemaImpl to org.apache.calcite.avatica.util.Casing"]}, {"root": "UPDATE from org.apache.calcite.rel.RelNode to org.apache.calcite.rel.RelRoot", "operations": ["UPD QualifiedName: org.apache.calcite.rel.RelNode from org.apache.calcite.rel.RelNode to org.apache.calcite.rel.RelRoot"]}, {"root": "UPDATE from RelNode to RelRoot", "operations": ["UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: viewPath to SingleVariableDeclaration at 1", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from getInSubqueryThreshold to getInSubQueryThreshold", "operations": ["UPD SimpleName: getInSubqueryThreshold from getInSubqueryThreshold to getInSubQueryThreshold"]}, {"root": "UPDATE from RelOptTableImpl to Prepare.PreparingTable", "operations": ["UPD SimpleType: RelOptTableImpl from RelOptTableImpl to Prepare.PreparingTable", "UPD SimpleType: RelOptTableImpl from RelOptTableImpl to Prepare.PreparingTable", "UPD SimpleType: RelOptTableImpl from RelOptTableImpl to Prepare.PreparingTable"]}, {"root": "INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0", "operations": ["INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: rel to MethodInvocation at 0", "INS QualifiedName: rel.rel to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: withRel to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: withRel to MethodInvocation at 1", "INS QualifiedName: rel2.rel to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: rel2 to MethodInvocation at 0"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 4", "operations": ["INS BooleanLiteral: false to MethodInvocation at 4"]}, {"root": "UPDATE from CalciteSchemaImpl to CalciteSchema", "operations": ["UPD SimpleName: CalciteSchemaImpl from CalciteSchemaImpl to CalciteSchema", "UPD SimpleName: CalciteSchemaImpl from CalciteSchemaImpl to CalciteSchema"]}, {"root": "INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0", "operations": ["INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0"]}, {"root": "INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0", "operations": ["INS QualifiedName: Prepare.PreparingTable to SimpleType: RelOptTableImpl at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sqlToRelConverter to MethodInvocation at 0", "MOV SimpleName: flattenTypes to MethodInvocation at 1", "MOV BooleanLiteral: true to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: decorrelateQuery to MethodInvocation at 1", "MOV SimpleName: RelDecorrelator to MethodInvocation at 0"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL SimpleName: isInnerQuery", "DEL PrefixExpression: !"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: rel"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: rel2"]}, {"root": "DEL SimpleName: RelOptTableImpl", "operations": ["DEL SimpleName: RelOptTableImpl"]}, {"root": "DEL SimpleName: RelOptTableImpl", "operations": ["DEL SimpleName: RelOptTableImpl"]}, {"root": "DEL SimpleName: RelOptTableImpl", "operations": ["DEL SimpleName: RelOptTableImpl"]}]}}, {"SqlConverter_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(1981) at 8", "Move ImportDeclaration(105) into CompilationUnit(1981) at 5", "Move ImportDeclaration(107) into CompilationUnit(1981) at 6", "Insert ImportDeclaration(19) into CompilationUnit(1981) at 9", "Insert ImportDeclaration(37) into CompilationUnit(1981) at 18", "Insert ImportDeclaration(65) into CompilationUnit(1981) at 32", "Insert ImportDeclaration(75) into CompilationUnit(1981) at 37", "Insert ImportDeclaration(113) into CompilationUnit(1981) at 56", "Update QualifiedName: org.apache.calcite.jdbc.CalciteSchemaImpl(14) to org.apache.calcite.avatica.util.Casing", "Insert QualifiedName: org.apache.calcite.avatica.util.Quoting(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.calcite.prepare.Prepare(36) into ImportDeclaration(37) at 0", "Update QualifiedName: org.apache.calcite.rel.RelNode(34) to org.apache.calcite.rel.RelRoot", "Insert QualifiedName: org.apache.calcite.sql.parser.SqlParserImplFactory(64) into ImportDeclaration(65) at 0", "Insert QualifiedName: org.apache.calcite.sql.validate.SqlConformanceEnum(74) into ImportDeclaration(75) at 0", "Insert QualifiedName: org.apache.drill.exec.planner.sql.parser.impl.DrillParserWithCompoundIdConverter(112) into ImportDeclaration(113) at 0", "Update SimpleType: RelNode(859) to RelRoot", "Update SimpleName: RelNode(858) to RelRoot", "Update SimpleType: RelNode(996) to RelRoot", "Insert SingleVariableDeclaration(1034) into MethodDeclaration(1072) at 7", "Update SimpleType: RelNode(1055) to RelRoot", "Update SimpleType: RelNode(1174) to RelRoot", "Update SimpleName: getInSubqueryThreshold(1296) to getInSubQueryThreshold", "Update SimpleType: RelOptTableImpl(1620) to Prepare.PreparingTable", "Update SimpleType: RelNode(948) to RelRoot", "Update SimpleType: RelNode(961) to RelRoot", "Update SimpleType: RelNode(972) to RelRoot", "Update SimpleName: RelNode(995) to RelRoot", "Insert ParameterizedType: List<String>(1032) into SingleVariableDeclaration(1034) at 0", "Insert SimpleName: viewPath(1033) into SingleVariableDeclaration(1034) at 1", "Update SimpleName: RelNode(1054) to RelRoot", "Update SimpleName: RelNode(1173) to RelRoot", "Insert QualifiedName: Prepare.PreparingTable(1641) into SimpleType: Prepare.PreparingTable(1642) at 0", "Update SimpleName: RelNode(947) to RelRoot", "Update SimpleName: RelNode(960) to RelRoot", "Insert MethodInvocation(979) into VariableDeclarationFragment(980) at 1", "Update SimpleName: RelNode(971) to RelRoot", "Insert MethodInvocation(992) into VariableDeclarationFragment(993) at 1", "Insert SimpleType: List(1029) into ParameterizedType: List<String>(1032) at 0", "Insert SimpleType: String(1031) into ParameterizedType: List<String>(1032) at 1", "Update SimpleType: RelOptTableImpl(1631) to Prepare.PreparingTable", "Update SimpleType: RelOptTableImpl(1707) to Prepare.PreparingTable", "Insert BooleanLiteral: false(964) into MethodInvocation(965) at 4", "Insert SimpleName: rel(972) into MethodInvocation(979) at 0", "Insert SimpleName: withRel(973) into MethodInvocation(979) at 1", "Insert MethodInvocation(978) into MethodInvocation(979) at 2", "Insert SimpleName: rel2(986) into MethodInvocation(992) at 0", "Insert SimpleName: withRel(987) into MethodInvocation(992) at 1", "Insert MethodInvocation(991) into MethodInvocation(992) at 2", "Insert SimpleName: List(1028) into SimpleType: List(1029) at 0", "Insert SimpleName: String(1030) into SimpleType: String(1031) at 0", "Update SimpleName: CalciteSchemaImpl(1554) to CalciteSchema", "Insert QualifiedName: Prepare.PreparingTable(1652) into SimpleType: Prepare.PreparingTable(1653) at 0", "Insert QualifiedName: Prepare.PreparingTable(1728) into SimpleType: Prepare.PreparingTable(1729) at 0", "Move SimpleName: sqlToRelConverter(963) into MethodInvocation(978) at 0", "Move SimpleName: flattenTypes(964) into MethodInvocation(978) at 1", "Insert QualifiedName: rel.rel(976) into MethodInvocation(978) at 2", "Move BooleanLiteral: true(966) into MethodInvocation(978) at 3", "Move SimpleName: RelDecorrelator(974) into MethodInvocation(991) at 0", "Move SimpleName: decorrelateQuery(975) into MethodInvocation(991) at 1", "Insert QualifiedName: rel2.rel(990) into MethodInvocation(991) at 2", "Update SimpleName: CalciteSchemaImpl(373) to CalciteSchema", "Delete SimpleName: isInnerQuery(954)", "Delete PrefixExpression: !(955)", "Delete SimpleName: rel(965)", "Delete MethodInvocation(967)", "Delete SimpleName: rel2(976)", "Delete MethodInvocation(977)", "Delete SimpleName: RelOptTableImpl(1619)", "Delete SimpleName: RelOptTableImpl(1630)", "Delete SimpleName: RelOptTableImpl(1706)"]}}, {"ConversionContext_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.calcite.rel.RelRoot to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from RelNode to RelRoot", "operations": ["UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleName: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot", "UPD SimpleType: RelNode from RelNode to RelRoot"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SimpleName: viewPath to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: limitations under the License.", "DEL TagElement", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file"]}]}}, {"ConversionContext_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(536) at 4", "Insert QualifiedName: org.apache.calcite.rel.RelRoot(8) into ImportDeclaration(9) at 0", "Update SimpleType: RelNode(296) to RelRoot", "Insert SingleVariableDeclaration(306) into MethodDeclaration(312) at 7", "Update SimpleType: RelNode(323) to RelRoot", "Update SimpleName: RelNode(295) to RelRoot", "Insert ParameterizedType: List<String>(304) into SingleVariableDeclaration(306) at 0", "Insert SimpleName: viewPath(305) into SingleVariableDeclaration(306) at 1", "Update SimpleName: RelNode(322) to RelRoot", "Insert SimpleType: List(301) into ParameterizedType: List<String>(304) at 0", "Insert SimpleType: String(303) into ParameterizedType: List<String>(304) at 1", "Insert SimpleName: List(300) into SimpleType: List(301) at 0", "Insert SimpleName: String(302) into SimpleType: String(303) at 0", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)"]}}, {"RelDataTypeDrillImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from org.apache.calcite.rel.type.RelDataTypeImpl to org.apache.calcite.rel.type.DynamicRecordType", "operations": ["UPD QualifiedName: org.apache.calcite.rel.type.RelDataTypeImpl from org.apache.calcite.rel.type.RelDataTypeImpl to org.apache.calcite.rel.type.DynamicRecordType"]}, {"root": "UPDATE from RelDataTypeImpl to DynamicRecordType", "operations": ["UPD SimpleType: RelDataTypeImpl from RelDataTypeImpl to DynamicRecordType", "UPD SimpleName: RelDataTypeImpl from RelDataTypeImpl to DynamicRecordType"]}]}}, {"RelDataTypeDrillImpl_diff": {"operations": ["Move ImportDeclaration(28) into CompilationUnit(310) at 3", "Update QualifiedName: org.apache.calcite.rel.type.RelDataTypeImpl(27) to org.apache.calcite.rel.type.DynamicRecordType", "Update SimpleType: RelDataTypeImpl(38) to DynamicRecordType", "Update SimpleName: RelDataTypeImpl(37) to DynamicRecordType"]}}, {"RelDataTypeHolder_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.calcite.rel.type.DynamicRecordType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.calcite.util.Pair to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.calcite.util.Util to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS QualifiedName: SqlTypeName.DYNAMIC_STAR to ConditionalExpression at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: DynamicRecordType to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS QualifiedName: SqlTypeName.ANY to ConditionalExpression at 2", "INS SimpleName: fieldName to MethodInvocation at 2", "INS SimpleName: SqlTypeName to SimpleType: SqlTypeName at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleType: SqlTypeName to VariableDeclarationStatement at 1", "INS SimpleName: isDynamicStarColName to MethodInvocation at 1", "INS SimpleName: typeName to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleName: typeName to MethodInvocation at 2", "operations": ["INS SimpleName: typeName to MethodInvocation at 2"]}, {"root": "DEL QualifiedName: SqlTypeName.ANY", "operations": ["DEL QualifiedName: SqlTypeName.ANY"]}]}}, {"RelDataTypeHolder_diff": {"operations": ["Insert ImportDeclaration(20) into CompilationUnit(287) at 2", "Insert ImportDeclaration(32) into CompilationUnit(287) at 8", "Insert ImportDeclaration(34) into CompilationUnit(287) at 9", "Insert QualifiedName: org.apache.calcite.rel.type.DynamicRecordType(19) into ImportDeclaration(20) at 0", "Insert QualifiedName: org.apache.calcite.util.Pair(31) into ImportDeclaration(32) at 0", "Insert QualifiedName: org.apache.calcite.util.Util(33) into ImportDeclaration(34) at 0", "Insert VariableDeclarationStatement(161) into Block(189) at 1", "Insert Modifier: final(149) into VariableDeclarationStatement(161) at 0", "Insert SimpleType: SqlTypeName(151) into VariableDeclarationStatement(161) at 1", "Insert VariableDeclarationFragment(160) into VariableDeclarationStatement(161) at 2", "Insert SimpleName: SqlTypeName(150) into SimpleType: SqlTypeName(151) at 0", "Insert SimpleName: typeName(152) into VariableDeclarationFragment(160) at 0", "Insert ConditionalExpression(159) into VariableDeclarationFragment(160) at 1", "Insert MethodInvocation(156) into ConditionalExpression(159) at 0", "Insert QualifiedName: SqlTypeName.DYNAMIC_STAR(157) into ConditionalExpression(159) at 1", "Insert QualifiedName: SqlTypeName.ANY(158) into ConditionalExpression(159) at 2", "Insert SimpleName: DynamicRecordType(153) into MethodInvocation(156) at 0", "Insert SimpleName: isDynamicStarColName(154) into MethodInvocation(156) at 1", "Insert SimpleName: fieldName(155) into MethodInvocation(156) at 2", "Insert SimpleName: typeName(175) into MethodInvocation(176) at 2", "Delete QualifiedName: SqlTypeName.ANY(156)"]}}, {"Records_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV ExpressionStatement to SwitchStatement at 99", "MOV ExpressionStatement to SwitchStatement at 89", "MOV ExpressionStatement to SwitchStatement at 99", "MOV ExpressionStatement to SwitchStatement at 99", "MOV ExpressionStatement to SwitchStatement at 91", "MOV ExpressionStatement to SwitchStatement at 93", "MOV ExpressionStatement to SwitchStatement at 89", "MOV ExpressionStatement to SwitchStatement at 96", "MOV ExpressionStatement to SwitchStatement at 90", "MOV ExpressionStatement to SwitchStatement at 99"]}, {"root": "INS SwitchCase to SwitchStatement at 27", "operations": ["INS SimpleName: INTERVAL_YEAR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 27"]}, {"root": "INS SwitchCase to SwitchStatement at 29", "operations": ["INS SwitchCase to SwitchStatement at 29", "INS SimpleName: INTERVAL_MONTH to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 33", "operations": ["INS SwitchCase to SwitchStatement at 33", "INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 34", "operations": ["INS SwitchCase to SwitchStatement at 34", "INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 35", "operations": ["INS SwitchCase to SwitchStatement at 35", "INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 36", "operations": ["INS SimpleName: INTERVAL_HOUR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 36"]}, {"root": "INS SwitchCase to SwitchStatement at 37", "operations": ["INS SwitchCase to SwitchStatement at 37", "INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 38", "operations": ["INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 38"]}, {"root": "INS SwitchCase to SwitchStatement at 39", "operations": ["INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 39"]}, {"root": "INS SwitchCase to SwitchStatement at 40", "operations": ["INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 40"]}, {"root": "INS SwitchCase to SwitchStatement at 41", "operations": ["INS SwitchCase to SwitchStatement at 41", "INS SimpleName: INTERVAL_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 87", "operations": ["INS SimpleName: INTERVAL_YEAR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 87"]}, {"root": "INS SwitchCase to SwitchStatement at 89", "operations": ["INS SwitchCase to SwitchStatement at 89", "INS SimpleName: INTERVAL_MONTH to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 91", "operations": ["INS SwitchCase to SwitchStatement at 91", "INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 92", "operations": ["INS SwitchCase to SwitchStatement at 92", "INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 93", "operations": ["INS SwitchCase to SwitchStatement at 93", "INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 94", "operations": ["INS SimpleName: INTERVAL_HOUR to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 94"]}, {"root": "INS SwitchCase to SwitchStatement at 95", "operations": ["INS SwitchCase to SwitchStatement at 95", "INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 96", "operations": ["INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 96"]}, {"root": "INS SwitchCase to SwitchStatement at 97", "operations": ["INS SwitchCase to SwitchStatement at 97", "INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 98", "operations": ["INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 98"]}, {"root": "INS SwitchCase to SwitchStatement at 99", "operations": ["INS SimpleName: INTERVAL_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 99"]}, {"root": "UPDATE from INTERVAL_DAY_TIME to INTERVAL_DAY", "operations": ["UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY", "UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY", "UPD SimpleName: INTERVAL_DAY_TIME from INTERVAL_DAY_TIME to INTERVAL_DAY"]}, {"root": "INS SwitchCase to SwitchStatement at 1", "operations": ["INS SwitchCase to SwitchStatement at 1", "INS SimpleName: INTERVAL_YEAR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 3", "operations": ["INS SimpleName: INTERVAL_MONTH to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 3"]}, {"root": "INS SwitchCase to SwitchStatement at 7", "operations": ["INS SwitchCase to SwitchStatement at 7", "INS SimpleName: INTERVAL_DAY_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 8", "operations": ["INS SwitchCase to SwitchStatement at 8", "INS SimpleName: INTERVAL_DAY_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 9", "operations": ["INS SimpleName: INTERVAL_DAY_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 9"]}, {"root": "INS SwitchCase to SwitchStatement at 10", "operations": ["INS SwitchCase to SwitchStatement at 10", "INS SimpleName: INTERVAL_HOUR to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 11", "operations": ["INS SimpleName: INTERVAL_HOUR_MINUTE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 11"]}, {"root": "INS SwitchCase to SwitchStatement at 12", "operations": ["INS SimpleName: INTERVAL_HOUR_SECOND to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 12"]}, {"root": "INS SwitchCase to SwitchStatement at 13", "operations": ["INS SwitchCase to SwitchStatement at 13", "INS SimpleName: INTERVAL_MINUTE to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 14", "operations": ["INS SwitchCase to SwitchStatement at 14", "INS SimpleName: INTERVAL_MINUTE_SECOND to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 15", "operations": ["INS SwitchCase to SwitchStatement at 15", "INS SimpleName: INTERVAL_SECOND to SwitchCase at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL StringLiteral: \"INTERVAL\"", "DEL SimpleName: DATA_TYPE", "DEL ExpressionStatement", "DEL ThisExpression", "DEL Assignment: ="]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"Records_diff": {"operations": ["Move ExpressionStatement(1039) into SwitchStatement(1570) at 99", "Move ExpressionStatement(1045) into SwitchStatement(1570) at 99", "Move ExpressionStatement(1051) into SwitchStatement(1570) at 99", "Move ExpressionStatement(1057) into SwitchStatement(1570) at 96", "Move ExpressionStatement(1063) into SwitchStatement(1570) at 99", "Move ExpressionStatement(1461) into SwitchStatement(1570) at 89", "Move ExpressionStatement(1467) into SwitchStatement(1570) at 89", "Move ExpressionStatement(1473) into SwitchStatement(1570) at 90", "Move ExpressionStatement(1479) into SwitchStatement(1570) at 91", "Move ExpressionStatement(1485) into SwitchStatement(1570) at 93", "Insert SwitchCase(416) into SwitchStatement(465) at 27", "Insert SwitchCase(420) into SwitchStatement(465) at 29", "Insert SwitchCase(424) into SwitchStatement(465) at 31", "Insert SwitchCase(426) into SwitchStatement(465) at 32", "Insert SwitchCase(428) into SwitchStatement(465) at 33", "Insert SwitchCase(430) into SwitchStatement(465) at 34", "Insert SwitchCase(432) into SwitchStatement(465) at 35", "Insert SwitchCase(434) into SwitchStatement(465) at 36", "Insert SwitchCase(436) into SwitchStatement(465) at 37", "Insert SwitchCase(438) into SwitchStatement(465) at 38", "Insert SwitchCase(440) into SwitchStatement(465) at 39", "Insert SwitchCase(1046) into SwitchStatement(1570) at 87", "Insert SwitchCase(1050) into SwitchStatement(1570) at 89", "Insert SwitchCase(1054) into SwitchStatement(1570) at 91", "Insert SwitchCase(1056) into SwitchStatement(1570) at 92", "Insert SwitchCase(1058) into SwitchStatement(1570) at 93", "Insert SwitchCase(1060) into SwitchStatement(1570) at 94", "Insert SwitchCase(1062) into SwitchStatement(1570) at 95", "Insert SwitchCase(1064) into SwitchStatement(1570) at 96", "Insert SwitchCase(1066) into SwitchStatement(1570) at 97", "Insert SwitchCase(1068) into SwitchStatement(1570) at 98", "Insert SwitchCase(1070) into SwitchStatement(1570) at 99", "Insert SimpleName: INTERVAL_YEAR(415) into SwitchCase(416) at 0", "Insert SimpleName: INTERVAL_MONTH(419) into SwitchCase(420) at 0", "Update SimpleName: INTERVAL_DAY_TIME(424) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(423) into SwitchCase(424) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(425) into SwitchCase(426) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(427) into SwitchCase(428) at 0", "Insert SimpleName: INTERVAL_HOUR(429) into SwitchCase(430) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(431) into SwitchCase(432) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(433) into SwitchCase(434) at 0", "Insert SimpleName: INTERVAL_MINUTE(435) into SwitchCase(436) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(437) into SwitchCase(438) at 0", "Insert SimpleName: INTERVAL_SECOND(439) into SwitchCase(440) at 0", "Insert SimpleName: INTERVAL_YEAR(1045) into SwitchCase(1046) at 0", "Insert SimpleName: INTERVAL_MONTH(1049) into SwitchCase(1050) at 0", "Update SimpleName: INTERVAL_DAY_TIME(1032) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(1053) into SwitchCase(1054) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(1055) into SwitchCase(1056) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(1057) into SwitchCase(1058) at 0", "Insert SimpleName: INTERVAL_HOUR(1059) into SwitchCase(1060) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(1061) into SwitchCase(1062) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(1063) into SwitchCase(1064) at 0", "Insert SimpleName: INTERVAL_MINUTE(1065) into SwitchCase(1066) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(1067) into SwitchCase(1068) at 0", "Insert SimpleName: INTERVAL_SECOND(1069) into SwitchCase(1070) at 0", "Insert SwitchCase(1103) into SwitchStatement(1156) at 1", "Insert SwitchCase(1107) into SwitchStatement(1156) at 3", "Insert SwitchCase(1118) into SwitchStatement(1156) at 7", "Insert SwitchCase(1120) into SwitchStatement(1156) at 8", "Insert SwitchCase(1122) into SwitchStatement(1156) at 9", "Insert SwitchCase(1124) into SwitchStatement(1156) at 10", "Insert SwitchCase(1126) into SwitchStatement(1156) at 11", "Insert SwitchCase(1128) into SwitchStatement(1156) at 12", "Insert SwitchCase(1130) into SwitchStatement(1156) at 13", "Insert SwitchCase(1132) into SwitchStatement(1156) at 14", "Insert SwitchCase(1134) into SwitchStatement(1156) at 15", "Insert SimpleName: INTERVAL_YEAR(1102) into SwitchCase(1103) at 0", "Insert SimpleName: INTERVAL_MONTH(1106) into SwitchCase(1107) at 0", "Update SimpleName: INTERVAL_DAY_TIME(1074) to INTERVAL_DAY", "Insert SimpleName: INTERVAL_DAY_HOUR(1117) into SwitchCase(1118) at 0", "Insert SimpleName: INTERVAL_DAY_MINUTE(1119) into SwitchCase(1120) at 0", "Insert SimpleName: INTERVAL_DAY_SECOND(1121) into SwitchCase(1122) at 0", "Insert SimpleName: INTERVAL_HOUR(1123) into SwitchCase(1124) at 0", "Insert SimpleName: INTERVAL_HOUR_MINUTE(1125) into SwitchCase(1126) at 0", "Insert SimpleName: INTERVAL_HOUR_SECOND(1127) into SwitchCase(1128) at 0", "Insert SimpleName: INTERVAL_MINUTE(1129) into SwitchCase(1130) at 0", "Insert SimpleName: INTERVAL_MINUTE_SECOND(1131) into SwitchCase(1132) at 0", "Insert SimpleName: INTERVAL_SECOND(1133) into SwitchCase(1134) at 0", "Delete ThisExpression(417)", "Delete SimpleName: DATA_TYPE(418)", "Delete FieldAccess(419)", "Delete StringLiteral: \"INTERVAL\"(420)", "Delete Assignment: =(421)", "Delete ExpressionStatement(422)", "Delete BreakStatement(423)"]}}, {"TopProjectVisitor_cluster": {"actions": [{"root": "UPDATE from SqlValidatorUtil.F_SUGGESTER2 to SqlValidatorUtil.EXPR_SUGGESTER", "operations": ["UPD QualifiedName: SqlValidatorUtil.F_SUGGESTER2 from SqlValidatorUtil.F_SUGGESTER2 to SqlValidatorUtil.EXPR_SUGGESTER"]}]}}, {"TopProjectVisitor_diff": {"operations": ["Update QualifiedName: SqlValidatorUtil.F_SUGGESTER2(419) to SqlValidatorUtil.EXPR_SUGGESTER"]}}, {"DefaultSqlHandler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 36"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.calcite.plan.RelOptCostImpl to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.calcite.plan.RelOptLattice to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.calcite.plan.RelOptMaterialization to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.calcite.rel.metadata.CachingRelMetadataProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.apache.calcite.rel.metadata.ChainedRelMetadataProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "UPDATE from org.apache.calcite.sql.TypedSqlNode to org.apache.calcite.util.Pair", "operations": ["UPD QualifiedName: org.apache.calcite.sql.TypedSqlNode from org.apache.calcite.sql.TypedSqlNode to org.apache.calcite.util.Pair"]}, {"root": "INS ParameterizedType: Pair<SqlNode,RelDataType> to MethodDeclaration at 1", "operations": ["INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleType: SqlNode to ParameterizedType: Pair<SqlNode,RelDataType> at 1", "INS SimpleType: Pair to ParameterizedType: Pair<SqlNode,RelDataType> at 0", "INS ParameterizedType: Pair<SqlNode,RelDataType> to MethodDeclaration at 1", "INS SimpleType: RelDataType to ParameterizedType: Pair<SqlNode,RelDataType> at 2", "INS SimpleName: Pair to SimpleType: Pair at 0"]}, {"root": "INS ParameterizedType: Pair<SqlNode,RelDataType> to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: RelDataType to ParameterizedType: Pair<SqlNode,RelDataType> at 2", "INS ParameterizedType: Pair<SqlNode,RelDataType> to VariableDeclarationStatement at 1", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleType: Pair to ParameterizedType: Pair<SqlNode,RelDataType> at 0"]}, {"root": "INS SimpleType: SqlNode to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: SqlNode to VariableDeclarationStatement at 1", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0"]}, {"root": "UPDATE from TypedSqlNode to SqlNode", "operations": ["UPD SimpleName: TypedSqlNode from TypedSqlNode to SqlNode", "UPD SimpleName: TypedSqlNode from TypedSqlNode to SqlNode"]}, {"root": "MOVE from SimpleType: SqlNode", "operations": ["MOV SimpleName: TypedSqlNode to SimpleType: SqlNode at 0"]}, {"root": "INS ParameterizedType: Pair<SqlNode,RelDataType> to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: Pair to SimpleType: Pair at 0", "INS ParameterizedType: Pair<SqlNode,RelDataType> to VariableDeclarationStatement at 1", "INS SimpleType: SqlNode to ParameterizedType: Pair<SqlNode,RelDataType> at 1", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleType: Pair to ParameterizedType: Pair<SqlNode,RelDataType> at 0", "INS SimpleType: RelDataType to ParameterizedType: Pair<SqlNode,RelDataType> at 2"]}, {"root": "MOVE from ParameterizedType: Pair<SqlNode,RelDataType>", "operations": ["MOV SimpleType: SqlNode to ParameterizedType: Pair<SqlNode,RelDataType> at 1"]}, {"root": "INS FieldAccess to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: rel to FieldAccess at 1", "INS FieldAccess to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from TypedSqlNode to RelDataType", "operations": ["UPD SimpleName: TypedSqlNode from TypedSqlNode to RelDataType"]}, {"root": "MOVE from SimpleType: RelDataType", "operations": ["MOV SimpleName: TypedSqlNode to SimpleType: RelDataType at 0"]}, {"root": "UPDATE from getSqlNode to getKey", "operations": ["UPD SimpleName: getSqlNode from getSqlNode to getKey"]}, {"root": "UPDATE from getType to getValue", "operations": ["UPD SimpleName: getType from getType to getValue"]}, {"root": "MOVE from SimpleType: SqlNode", "operations": ["MOV SimpleName: TypedSqlNode to SimpleType: SqlNode at 0"]}, {"root": "INS ParameterizedType: Pair<> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Pair to ParameterizedType: Pair<> at 0", "INS ParameterizedType: Pair<> to ClassInstanceCreation at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV MethodInvocation to FieldAccess at 0"]}, {"root": "UPDATE from SqlValidatorUtil.F_SUGGESTER2 to SqlValidatorUtil.EXPR_SUGGESTER", "operations": ["UPD QualifiedName: SqlValidatorUtil.F_SUGGESTER2 from SqlValidatorUtil.F_SUGGESTER2 to SqlValidatorUtil.EXPR_SUGGESTER"]}, {"root": "INS BooleanLiteral: true to ClassInstanceCreation at 3", "operations": ["INS BooleanLiteral: true to ClassInstanceCreation at 3"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 4", "operations": ["INS NullLiteral to ClassInstanceCreation at 4"]}, {"root": "INS QualifiedName: RelOptCostImpl.FACTORY to ClassInstanceCreation at 5", "operations": ["INS QualifiedName: RelOptCostImpl.FACTORY to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: of to MethodInvocation at 2", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: RelOptMaterialization to SimpleType: RelOptMaterialization at 0", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleType: RelOptMaterialization to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 6", "operations": ["INS SimpleName: of to MethodInvocation at 2", "INS SimpleType: RelOptLattice to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 6", "INS SimpleName: RelOptLattice to SimpleType: RelOptLattice at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "UPDATE from TypedSqlNode to Pair", "operations": ["UPD SimpleName: TypedSqlNode from TypedSqlNode to Pair"]}, {"root": "MOVE from SimpleType: Pair", "operations": ["MOV SimpleName: TypedSqlNode to SimpleType: Pair at 0"]}, {"root": "DEL SimpleType: TypedSqlNode", "operations": ["DEL SimpleType: TypedSqlNode"]}, {"root": "DEL SimpleType: TypedSqlNode", "operations": ["DEL SimpleType: TypedSqlNode"]}, {"root": "DEL SimpleType: TypedSqlNode", "operations": ["DEL SimpleType: TypedSqlNode"]}, {"root": "DEL SimpleType: TypedSqlNode", "operations": ["DEL SimpleType: TypedSqlNode"]}]}}, {"DefaultSqlHandler_diff": {"operations": ["Move ImportDeclaration(59) into CompilationUnit(2564) at 36", "Insert ImportDeclaration(13) into CompilationUnit(2564) at 6", "Insert ImportDeclaration(15) into CompilationUnit(2564) at 7", "Insert ImportDeclaration(17) into CompilationUnit(2564) at 8", "Insert ImportDeclaration(19) into CompilationUnit(2564) at 9", "Insert ImportDeclaration(49) into CompilationUnit(2564) at 24", "Insert ImportDeclaration(51) into CompilationUnit(2564) at 25", "Insert QualifiedName: com.google.common.collect.ImmutableList(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.calcite.plan.RelOptCostImpl(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.calcite.plan.RelOptLattice(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.calcite.plan.RelOptMaterialization(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.calcite.rel.metadata.CachingRelMetadataProvider(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: org.apache.calcite.rel.metadata.ChainedRelMetadataProvider(50) into ImportDeclaration(51) at 0", "Update QualifiedName: org.apache.calcite.sql.TypedSqlNode(58) to org.apache.calcite.util.Pair", "Insert ParameterizedType: Pair<SqlNode,RelDataType>(2053) into MethodDeclaration(2130) at 1", "Insert SimpleType: Pair(2048) into ParameterizedType: Pair<SqlNode,RelDataType>(2053) at 0", "Insert SimpleType: SqlNode(2050) into ParameterizedType: Pair<SqlNode,RelDataType>(2053) at 1", "Insert SimpleType: RelDataType(2052) into ParameterizedType: Pair<SqlNode,RelDataType>(2053) at 2", "Insert ParameterizedType: Pair<SqlNode,RelDataType>(665) into VariableDeclarationStatement(671) at 1", "Insert SimpleType: SqlNode(674) into VariableDeclarationStatement(680) at 1", "Insert SimpleName: Pair(2047) into SimpleType: Pair(2048) at 0", "Update SimpleName: TypedSqlNode(2017) to SqlNode", "Move SimpleName: TypedSqlNode(2017) into SimpleType: SqlNode(2050) at 0", "Insert SimpleName: RelDataType(2051) into SimpleType: RelDataType(2052) at 0", "Insert ParameterizedType: Pair<SqlNode,RelDataType>(2084) into VariableDeclarationStatement(2098) at 1", "Insert SimpleType: Pair(660) into ParameterizedType: Pair<SqlNode,RelDataType>(665) at 0", "Move SimpleType: SqlNode(657) into ParameterizedType: Pair<SqlNode,RelDataType>(665) at 1", "Insert SimpleType: RelDataType(664) into ParameterizedType: Pair<SqlNode,RelDataType>(665) at 2", "Insert SimpleName: SqlNode(673) into SimpleType: SqlNode(674) at 0", "Insert SimpleType: Pair(2079) into ParameterizedType: Pair<SqlNode,RelDataType>(2084) at 0", "Insert SimpleType: SqlNode(2081) into ParameterizedType: Pair<SqlNode,RelDataType>(2084) at 1", "Insert SimpleType: RelDataType(2083) into ParameterizedType: Pair<SqlNode,RelDataType>(2084) at 2", "Insert FieldAccess(2152) into VariableDeclarationFragment(2153) at 1", "Insert SimpleName: Pair(659) into SimpleType: Pair(660) at 0", "Update SimpleName: TypedSqlNode(647) to RelDataType", "Move SimpleName: TypedSqlNode(647) into SimpleType: RelDataType(664) at 0", "Update SimpleName: getSqlNode(660) to getKey", "Update SimpleName: getType(682) to getValue", "Insert SimpleName: Pair(2078) into SimpleType: Pair(2079) at 0", "Update SimpleName: TypedSqlNode(2043) to SqlNode", "Move SimpleName: TypedSqlNode(2043) into SimpleType: SqlNode(2081) at 0", "Insert SimpleName: RelDataType(2082) into SimpleType: RelDataType(2083) at 0", "Insert ParameterizedType: Pair<>(2088) into ClassInstanceCreation(2096) at 0", "Move MethodInvocation(2109) into FieldAccess(2152) at 0", "Insert SimpleName: rel(2151) into FieldAccess(2152) at 1", "Update QualifiedName: SqlValidatorUtil.F_SUGGESTER2(2266) to SqlValidatorUtil.EXPR_SUGGESTER", "Insert SimpleType: Pair(2087) into ParameterizedType: Pair<>(2088) at 0", "Insert BooleanLiteral: true(1277) into ClassInstanceCreation(1280) at 3", "Insert NullLiteral(1278) into ClassInstanceCreation(1280) at 4", "Insert QualifiedName: RelOptCostImpl.FACTORY(1279) into ClassInstanceCreation(1280) at 5", "Insert MethodInvocation(1381) into MethodInvocation(1387) at 5", "Insert MethodInvocation(1386) into MethodInvocation(1387) at 6", "Update SimpleName: TypedSqlNode(2046) to Pair", "Move SimpleName: TypedSqlNode(2046) into SimpleType: Pair(2087) at 0", "Insert SimpleName: ImmutableList(1377) into MethodInvocation(1381) at 0", "Insert SimpleType: RelOptMaterialization(1379) into MethodInvocation(1381) at 1", "Insert SimpleName: of(1380) into MethodInvocation(1381) at 2", "Insert SimpleName: ImmutableList(1382) into MethodInvocation(1386) at 0", "Insert SimpleType: RelOptLattice(1384) into MethodInvocation(1386) at 1", "Insert SimpleName: of(1385) into MethodInvocation(1386) at 2", "Insert SimpleName: RelOptMaterialization(1378) into SimpleType: RelOptMaterialization(1379) at 0", "Insert SimpleName: RelOptLattice(1383) into SimpleType: RelOptLattice(1384) at 0", "Delete SimpleType: TypedSqlNode(648)", "Delete SimpleType: TypedSqlNode(2018)", "Delete SimpleType: TypedSqlNode(2044)", "Delete SimpleType: TypedSqlNode(2047)"]}}, {"DescribeSchemaHandler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from org.apache.drill.exec.planner.sql.parser.SqlDescribeSchema to org.apache.calcite.sql.SqlDescribeSchema", "operations": ["UPD QualifiedName: org.apache.drill.exec.planner.sql.parser.SqlDescribeSchema from org.apache.drill.exec.planner.sql.parser.SqlDescribeSchema to org.apache.calcite.sql.SqlDescribeSchema"]}]}}, {"DescribeSchemaHandler_diff": {"operations": ["Move ImportDeclaration(48) into CompilationUnit(464) at 7", "Update QualifiedName: org.apache.drill.exec.planner.sql.parser.SqlDescribeSchema(47) to org.apache.calcite.sql.SqlDescribeSchema"]}}, {"DescribeTableHandler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.calcite.sql.SqlDescribeTable to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.drill.exec.planner.sql.parser.SqlDescribeTable to org.apache.drill.exec.planner.sql.parser.DrillSqlDescribeTable", "operations": ["UPD QualifiedName: org.apache.drill.exec.planner.sql.parser.SqlDescribeTable from org.apache.drill.exec.planner.sql.parser.SqlDescribeTable to org.apache.drill.exec.planner.sql.parser.DrillSqlDescribeTable"]}, {"root": "UPDATE from SqlDescribeTable to DrillSqlDescribeTable", "operations": ["UPD SimpleType: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable", "UPD SimpleName: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable", "UPD SimpleType: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable", "UPD SimpleName: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable"]}]}}, {"DescribeTableHandler_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(450) at 10", "Insert QualifiedName: org.apache.calcite.sql.SqlDescribeTable(20) into ImportDeclaration(21) at 0", "Update QualifiedName: org.apache.drill.exec.planner.sql.parser.SqlDescribeTable(44) to org.apache.drill.exec.planner.sql.parser.DrillSqlDescribeTable", "Update SimpleType: SqlDescribeTable(96) to DrillSqlDescribeTable", "Update SimpleName: SqlDescribeTable(95) to DrillSqlDescribeTable", "Update SimpleType: SqlDescribeTable(101) to DrillSqlDescribeTable", "Update SimpleName: SqlDescribeTable(100) to DrillSqlDescribeTable"]}}, {"FindLimit0Visitor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS ImportDeclaration to CompilationUnit at 32", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: public to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: append to MethodInvocation at 1", "INS StringLiteral: \"-\" to InfixExpression: + at 1", "INS SimpleName: getMinorType to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ReturnStatement to Block at 7", "INS SimpleName: columnTypes to EnhancedForStatement at 1", "INS SimpleName: toString to MethodDeclaration at 4", "INS SimpleType: TypeProtos.MajorType to SingleVariableDeclaration at 0", "INS SimpleType: StringBuilder to VariableDeclarationStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: columnTypesList to VariableDeclarationFragment at 0", "INS SimpleName: columnTypes to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement:  string representation of RelDataTypeReader content to TagElement: @return at 0", "INS QualifiedName: TypeProtos.MajorType to SimpleType: TypeProtos.MajorType at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS StringLiteral: \"RelDataTypeReader{columnNames=\" to MethodInvocation at 2", "INS SimpleName: columnType to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS SimpleName: columnTypesList to MethodInvocation at 2", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: columnType to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \", columnTypes=\" to MethodInvocation at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS StringLiteral: \"}\" to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ExpressionStatement to Block at 5", "INS SimpleType: String to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Example: RelDataTypeReader{columnNames=[col1], columnTypes=[INTERVALYEAR-OPTIONAL]} to TagElement at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 6", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: columnNames to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: getMode to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: columnTypesList to MethodInvocation at 0", "INS EnhancedForStatement to Block at 4", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: columnType to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS TextElement: Represents RelDataTypeReader content as string, used in query plan json. to TagElement at 0"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_YEAR to MethodInvocation at 11", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_YEAR to MethodInvocation at 11"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_MONTH to MethodInvocation at 13", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_MONTH to MethodInvocation at 13"]}, {"root": "UPDATE from SqlTypeName.INTERVAL_DAY_TIME to SqlTypeName.INTERVAL_DAY", "operations": ["UPD QualifiedName: SqlTypeName.INTERVAL_DAY_TIME from SqlTypeName.INTERVAL_DAY_TIME to SqlTypeName.INTERVAL_DAY"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_DAY_HOUR to MethodInvocation at 15", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_DAY_HOUR to MethodInvocation at 15"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_DAY_MINUTE to MethodInvocation at 16", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_DAY_MINUTE to MethodInvocation at 16"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_DAY_SECOND to MethodInvocation at 17", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_DAY_SECOND to MethodInvocation at 17"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_HOUR to MethodInvocation at 18", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_HOUR to MethodInvocation at 18"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_HOUR_MINUTE to MethodInvocation at 19", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_HOUR_MINUTE to MethodInvocation at 19"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_HOUR_SECOND to MethodInvocation at 20", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_HOUR_SECOND to MethodInvocation at 20"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_MINUTE to MethodInvocation at 21", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_MINUTE to MethodInvocation at 21"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_MINUTE_SECOND to MethodInvocation at 22", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_MINUTE_SECOND to MethodInvocation at 22"]}, {"root": "INS QualifiedName: SqlTypeName.INTERVAL_SECOND to MethodInvocation at 23", "operations": ["INS QualifiedName: SqlTypeName.INTERVAL_SECOND to MethodInvocation at 23"]}]}}, {"FindLimit0Visitor_diff": {"operations": ["Insert ImportDeclaration(65) into CompilationUnit(797) at 32", "Insert QualifiedName: java.util.ArrayList(64) into ImportDeclaration(65) at 0", "Insert MethodDeclaration(794) into TypeDeclaration: class(795) at 11", "Insert Javadoc(713) into MethodDeclaration(794) at 0", "Insert MarkerAnnotation(715) into MethodDeclaration(794) at 1", "Insert Modifier: public(716) into MethodDeclaration(794) at 2", "Insert SimpleType: String(718) into MethodDeclaration(794) at 3", "Insert SimpleName: toString(719) into MethodDeclaration(794) at 4", "Insert Block(793) into MethodDeclaration(794) at 5", "Insert TagElement(710) into Javadoc(713) at 0", "Insert TagElement: @return(712) into Javadoc(713) at 1", "Insert SimpleName: Override(714) into MarkerAnnotation(715) at 0", "Insert SimpleName: String(717) into SimpleType: String(718) at 0", "Insert VariableDeclarationStatement(727) into Block(793) at 0", "Insert ExpressionStatement(732) into Block(793) at 1", "Insert ExpressionStatement(740) into Block(793) at 2", "Insert VariableDeclarationStatement(755) into Block(793) at 3", "Insert EnhancedForStatement(778) into Block(793) at 4", "Insert ExpressionStatement(783) into Block(793) at 5", "Insert ExpressionStatement(788) into Block(793) at 6", "Insert ReturnStatement(792) into Block(793) at 7", "Insert QualifiedName: SqlTypeName.INTERVAL_YEAR(101) into MethodInvocation(115) at 11", "Insert QualifiedName: SqlTypeName.INTERVAL_MONTH(103) into MethodInvocation(115) at 13", "Update QualifiedName: SqlTypeName.INTERVAL_DAY_TIME(100) to SqlTypeName.INTERVAL_DAY", "Insert QualifiedName: SqlTypeName.INTERVAL_DAY_HOUR(105) into MethodInvocation(115) at 15", "Insert QualifiedName: SqlTypeName.INTERVAL_DAY_MINUTE(106) into MethodInvocation(115) at 16", "Insert QualifiedName: SqlTypeName.INTERVAL_DAY_SECOND(107) into MethodInvocation(115) at 17", "Insert QualifiedName: SqlTypeName.INTERVAL_HOUR(108) into MethodInvocation(115) at 18", "Insert QualifiedName: SqlTypeName.INTERVAL_HOUR_MINUTE(109) into MethodInvocation(115) at 19", "Insert QualifiedName: SqlTypeName.INTERVAL_HOUR_SECOND(110) into MethodInvocation(115) at 20", "Insert QualifiedName: SqlTypeName.INTERVAL_MINUTE(111) into MethodInvocation(115) at 21", "Insert QualifiedName: SqlTypeName.INTERVAL_MINUTE_SECOND(112) into MethodInvocation(115) at 22", "Insert QualifiedName: SqlTypeName.INTERVAL_SECOND(113) into MethodInvocation(115) at 23", "Insert TextElement: Represents RelDataTypeReader content as string, used in query plan json.(708) into TagElement(710) at 0", "Insert TextElement: Example: RelDataTypeReader{columnNames=[col1], columnTypes=[INTERVALYEAR-OPTIONAL]}(709) into TagElement(710) at 1", "Insert TextElement:  string representation of RelDataTypeReader content(711) into TagElement: @return(712) at 0", "Insert SimpleType: StringBuilder(721) into VariableDeclarationStatement(727) at 0", "Insert VariableDeclarationFragment(726) into VariableDeclarationStatement(727) at 1", "Insert MethodInvocation(731) into ExpressionStatement(732) at 0", "Insert MethodInvocation(739) into ExpressionStatement(740) at 0", "Insert ParameterizedType: List<String>(745) into VariableDeclarationStatement(755) at 0", "Insert VariableDeclarationFragment(754) into VariableDeclarationStatement(755) at 1", "Insert SingleVariableDeclaration(759) into EnhancedForStatement(778) at 0", "Insert SimpleName: columnTypes(760) into EnhancedForStatement(778) at 1", "Insert Block(777) into EnhancedForStatement(778) at 2", "Insert MethodInvocation(782) into ExpressionStatement(783) at 0", "Insert MethodInvocation(787) into ExpressionStatement(788) at 0", "Insert MethodInvocation(791) into ReturnStatement(792) at 0", "Insert SimpleName: StringBuilder(720) into SimpleType: StringBuilder(721) at 0", "Insert SimpleName: builder(722) into VariableDeclarationFragment(726) at 0", "Insert ClassInstanceCreation(725) into VariableDeclarationFragment(726) at 1", "Insert SimpleName: builder(728) into MethodInvocation(731) at 0", "Insert SimpleName: append(729) into MethodInvocation(731) at 1", "Insert StringLiteral: \"RelDataTypeReader{columnNames=\"(730) into MethodInvocation(731) at 2", "Insert MethodInvocation(736) into MethodInvocation(739) at 0", "Insert SimpleName: append(737) into MethodInvocation(739) at 1", "Insert StringLiteral: \", columnTypes=\"(738) into MethodInvocation(739) at 2", "Insert SimpleType: List(742) into ParameterizedType: List<String>(745) at 0", "Insert SimpleType: String(744) into ParameterizedType: List<String>(745) at 1", "Insert SimpleName: columnTypesList(746) into VariableDeclarationFragment(754) at 0", "Insert ClassInstanceCreation(753) into VariableDeclarationFragment(754) at 1", "Insert SimpleType: TypeProtos.MajorType(757) into SingleVariableDeclaration(759) at 0", "Insert SimpleName: columnType(758) into SingleVariableDeclaration(759) at 1", "Insert ExpressionStatement(776) into Block(777) at 0", "Insert SimpleName: builder(779) into MethodInvocation(782) at 0", "Insert SimpleName: append(780) into MethodInvocation(782) at 1", "Insert SimpleName: columnTypesList(781) into MethodInvocation(782) at 2", "Insert SimpleName: builder(784) into MethodInvocation(787) at 0", "Insert SimpleName: append(785) into MethodInvocation(787) at 1", "Insert StringLiteral: \"}\"(786) into MethodInvocation(787) at 2", "Insert SimpleName: builder(789) into MethodInvocation(791) at 0", "Insert SimpleName: toString(790) into MethodInvocation(791) at 1", "Insert SimpleType: StringBuilder(724) into ClassInstanceCreation(725) at 0", "Insert SimpleName: builder(733) into MethodInvocation(736) at 0", "Insert SimpleName: append(734) into MethodInvocation(736) at 1", "Insert SimpleName: columnNames(735) into MethodInvocation(736) at 2", "Insert SimpleName: List(741) into SimpleType: List(742) at 0", "Insert SimpleName: String(743) into SimpleType: String(744) at 0", "Insert ParameterizedType: ArrayList<>(749) into ClassInstanceCreation(753) at 0", "Insert MethodInvocation(752) into ClassInstanceCreation(753) at 1", "Insert QualifiedName: TypeProtos.MajorType(756) into SimpleType: TypeProtos.MajorType(757) at 0", "Insert MethodInvocation(775) into ExpressionStatement(776) at 0", "Insert SimpleName: StringBuilder(723) into SimpleType: StringBuilder(724) at 0", "Insert SimpleType: ArrayList(748) into ParameterizedType: ArrayList<>(749) at 0", "Insert SimpleName: columnTypes(750) into MethodInvocation(752) at 0", "Insert SimpleName: size(751) into MethodInvocation(752) at 1", "Insert SimpleName: columnTypesList(761) into MethodInvocation(775) at 0", "Insert SimpleName: add(762) into MethodInvocation(775) at 1", "Insert InfixExpression: +(774) into MethodInvocation(775) at 2", "Insert SimpleName: ArrayList(747) into SimpleType: ArrayList(748) at 0", "Insert MethodInvocation(767) into InfixExpression: +(774) at 0", "Insert StringLiteral: \"-\"(768) into InfixExpression: +(774) at 1", "Insert MethodInvocation(773) into InfixExpression: +(774) at 2", "Insert MethodInvocation(765) into MethodInvocation(767) at 0", "Insert SimpleName: toString(766) into MethodInvocation(767) at 1", "Insert MethodInvocation(771) into MethodInvocation(773) at 0", "Insert SimpleName: toString(772) into MethodInvocation(773) at 1", "Insert SimpleName: columnType(763) into MethodInvocation(765) at 0", "Insert SimpleName: getMinorType(764) into MethodInvocation(765) at 1", "Insert SimpleName: columnType(769) into MethodInvocation(771) at 0", "Insert SimpleName: getMode(770) into MethodInvocation(771) at 1"]}}, {"CompoundIdentifierConverter_cluster": {"actions": [{"root": "UPDATE from SqlDescribeTable to DrillSqlDescribeTable", "operations": ["UPD SimpleName: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable", "UPD SimpleType: SqlDescribeTable from SqlDescribeTable to DrillSqlDescribeTable"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: rules", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: R", "DEL ExpressionStatement", "DEL SimpleType: SqlDescribeSchema", "DEL SimpleName: D", "DEL SimpleName: SqlDescribeSchema"]}]}}, {"CompoundIdentifierConverter_diff": {"operations": ["Update SimpleType: SqlDescribeTable(466) to DrillSqlDescribeTable", "Update SimpleName: SqlDescribeTable(465) to DrillSqlDescribeTable", "Delete SimpleName: rules(578)", "Delete SimpleName: put(579)", "Delete SimpleName: SqlDescribeSchema(580)", "Delete SimpleType: SqlDescribeSchema(581)", "Delete TypeLiteral(582)", "Delete SimpleName: R(583)", "Delete SimpleName: D(584)", "Delete MethodInvocation(585)", "Delete MethodInvocation(586)", "Delete ExpressionStatement(587)"]}}, {"SqlDescribeSchema_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc", "DEL TextElement: <p/>", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL QualifiedName: org.apache.drill.exec.planner.sql.parser", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TagElement", "DEL PackageDeclaration", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: <p/>"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlCall"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlIdentifier", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlKind"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlLiteral", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlNode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlOperator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlSpecialOperator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlWriter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.parser.SqlParserPos", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.AbstractSqlHandler"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeSchemaHandler"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.SqlHandlerConfig", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collections", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL SimpleName: SqlLiteral", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL SimpleName: unparse", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL MethodDeclaration", "DEL Modifier: static", "DEL MarkerAnnotation", "DEL SimpleName: pos", "DEL SimpleType: SqlIdentifier", "DEL SimpleName: operands", "DEL SingleVariableDeclaration", "DEL SimpleType: SqlOperator", "DEL SimpleName: SqlIdentifier", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: getSqlHandler", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL SimpleType: SqlHandlerConfig", "DEL SimpleName: SqlDescribeSchema", "DEL SimpleName: SqlCall", "DEL SimpleType: List", "DEL Modifier: public", "DEL SimpleName: SqlHandlerConfig", "DEL SimpleName: leftPrec", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: List", "DEL SimpleName: SqlIdentifier", "DEL SimpleName: functionQualifier", "DEL SimpleName: leftPrec", "DEL SimpleName: createCall", "DEL SimpleName: keyword", "DEL TextElement: Sql parse tree node to represent statement:", "DEL QualifiedName: SqlKind.OTHER", "DEL SimpleName: config", "DEL SimpleName: pos", "DEL Modifier: public", "DEL TextElement: DESCRIBE {SCHEMA | DATABASE} schema_name", "DEL ReturnStatement", "DEL AnonymousClassDeclaration", "DEL SimpleName: Collections", "DEL Modifier: public", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: getOperator", "DEL SuperConstructorInvocation", "DEL SimpleName: getSchema", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL CastExpression", "DEL SimpleName: Override", "DEL Assignment: =", "DEL SimpleType: SqlNode", "DEL Modifier: public", "DEL SimpleName: SqlOperator", "DEL SimpleName: SqlNode", "DEL SimpleType: DrillSqlCall", "DEL SimpleName: pos", "DEL SimpleName: SqlNode", "DEL SimpleType: SqlParserPos", "DEL SimpleType: SqlDescribeSchema", "DEL SimpleName: SqlParserPos", "DEL SimpleName: getOperandList", "DEL SimpleName: Override", "DEL SimpleName: Override", "DEL SimpleName: unparse", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: schema", "DEL StringLiteral: \"SCHEMA\"", "DEL SimpleType: SqlIdentifier", "DEL VariableDeclarationFragment", "DEL SimpleName: SqlSpecialOperator", "DEL SimpleName: DescribeSchemaHandler", "DEL MethodDeclaration", "DEL ParameterizedType: List<SqlNode>", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: AbstractSqlHandler", "DEL SimpleType: DescribeSchemaHandler", "DEL MarkerAnnotation", "DEL SimpleName: SqlWriter", "DEL Modifier: final", "DEL MarkerAnnotation", "DEL SimpleName: writer", "DEL Modifier: public", "DEL SimpleName: keyword", "DEL SimpleName: schema", "DEL SimpleName: OPERATOR", "DEL Modifier: private", "DEL SimpleName: schema", "DEL ExpressionStatement", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: config", "DEL ArrayAccess", "DEL ClassInstanceCreation", "DEL SimpleName: rightPrec", "DEL PrimitiveType: int", "DEL SimpleType: SqlIdentifier", "DEL SimpleName: writer", "DEL SimpleName: DrillSqlCall", "DEL Modifier: public", "DEL FieldDeclaration", "DEL SimpleType: SqlCall", "DEL SimpleName: schema", "DEL Block", "DEL SimpleType: AbstractSqlHandler", "DEL SimpleType: SqlSpecialOperator", "DEL SimpleType: SqlParserPos", "DEL SimpleName: schema", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: rightPrec", "DEL SimpleName: SqlDescribeSchema", "DEL ThisExpression", "DEL SimpleName: SqlSpecialOperator", "DEL TypeDeclaration: class", "DEL StringLiteral: \"DESCRIBE\"", "DEL SimpleName: SqlDescribeSchema", "DEL SimpleName: SqlIdentifier", "DEL SimpleName: OPERATOR", "DEL ReturnStatement", "DEL StringLiteral: \"DESCRIBE_SCHEMA\"", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL FieldAccess", "DEL SimpleType: SqlWriter", "DEL TagElement", "DEL SimpleType: SqlLiteral", "DEL SimpleType: SqlNode", "DEL MarkerAnnotation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: SqlParserPos", "DEL SimpleName: writer", "DEL SimpleName: SqlNode", "DEL SimpleName: Override", "DEL SimpleName: schema", "DEL ClassInstanceCreation", "DEL SimpleName: pos", "DEL SimpleType: SqlSpecialOperator", "DEL SimpleName: singletonList", "DEL SimpleType: SqlIdentifier", "DEL PrimitiveType: int", "DEL SimpleName: writer", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleType: SqlNode", "DEL SimpleName: SqlIdentifier", "DEL SimpleName: schema", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: operands", "DEL SimpleName: Override", "DEL MethodInvocation"]}]}}, {"SqlDescribeSchema_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: <p/>(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: <p/>(9)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(10)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(11)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(12)", "Delete TextElement: See the License for the specific language governing permissions and(13)", "Delete TextElement: limitations under the License.(14)", "Delete TagElement(15)", "Delete Javadoc(16)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.parser(17)", "Delete PackageDeclaration(18)", "Delete QualifiedName: org.apache.calcite.sql.SqlCall(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.calcite.sql.SqlIdentifier(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.calcite.sql.SqlKind(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.calcite.sql.SqlLiteral(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: org.apache.calcite.sql.SqlNode(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: org.apache.calcite.sql.SqlOperator(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: org.apache.calcite.sql.SqlSpecialOperator(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.calcite.sql.SqlWriter(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.calcite.sql.parser.SqlParserPos(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.AbstractSqlHandler(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeSchemaHandler(39)", "Delete ImportDeclaration(40)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.SqlHandlerConfig(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: java.util.Collections(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: java.util.List(45)", "Delete ImportDeclaration(46)", "Delete TextElement: Sql parse tree node to represent statement:(47)", "Delete TextElement: DESCRIBE {SCHEMA | DATABASE} schema_name(48)", "Delete TagElement(49)", "Delete Javadoc(50)", "Delete Modifier: public(51)", "Delete SimpleName: SqlDescribeSchema(52)", "Delete SimpleName: DrillSqlCall(53)", "Delete SimpleType: DrillSqlCall(54)", "Delete Modifier: private(55)", "Delete Modifier: final(56)", "Delete SimpleName: SqlIdentifier(57)", "Delete SimpleType: SqlIdentifier(58)", "Delete SimpleName: schema(59)", "Delete VariableDeclarationFragment(60)", "Delete FieldDeclaration(61)", "Delete Modifier: public(62)", "Delete Modifier: static(63)", "Delete Modifier: final(64)", "Delete SimpleName: SqlSpecialOperator(65)", "Delete SimpleType: SqlSpecialOperator(66)", "Delete SimpleName: OPERATOR(67)", "Delete SimpleName: SqlSpecialOperator(68)", "Delete SimpleType: SqlSpecialOperator(69)", "Delete StringLiteral: \"DESCRIBE_SCHEMA\"(70)", "Delete QualifiedName: SqlKind.OTHER(71)", "Delete SimpleName: Override(72)", "Delete MarkerAnnotation(73)", "Delete Modifier: public(74)", "Delete SimpleName: SqlCall(75)", "Delete SimpleType: SqlCall(76)", "Delete SimpleName: createCall(77)", "Delete SimpleName: SqlLiteral(78)", "Delete SimpleType: SqlLiteral(79)", "Delete SimpleName: functionQualifier(80)", "Delete SingleVariableDeclaration(81)", "Delete SimpleName: SqlParserPos(82)", "Delete SimpleType: SqlParserPos(83)", "Delete SimpleName: pos(84)", "Delete SingleVariableDeclaration(85)", "Delete SimpleName: SqlNode(86)", "Delete SimpleType: SqlNode(87)", "Delete SimpleName: operands(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: SqlDescribeSchema(90)", "Delete SimpleType: SqlDescribeSchema(91)", "Delete SimpleName: pos(92)", "Delete SimpleName: SqlIdentifier(93)", "Delete SimpleType: SqlIdentifier(94)", "Delete SimpleName: operands(95)", "Delete NumberLiteral: 0(96)", "Delete ArrayAccess(97)", "Delete CastExpression(98)", "Delete ClassInstanceCreation(99)", "Delete ReturnStatement(100)", "Delete Block(101)", "Delete MethodDeclaration(102)", "Delete AnonymousClassDeclaration(103)", "Delete ClassInstanceCreation(104)", "Delete VariableDeclarationFragment(105)", "Delete FieldDeclaration(106)", "Delete Modifier: public(107)", "Delete SimpleName: SqlDescribeSchema(108)", "Delete SimpleName: SqlParserPos(109)", "Delete SimpleType: SqlParserPos(110)", "Delete SimpleName: pos(111)", "Delete SingleVariableDeclaration(112)", "Delete SimpleName: SqlIdentifier(113)", "Delete SimpleType: SqlIdentifier(114)", "Delete SimpleName: schema(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: pos(117)", "Delete SuperConstructorInvocation(118)", "Delete ThisExpression(119)", "Delete SimpleName: schema(120)", "Delete FieldAccess(121)", "Delete SimpleName: schema(122)", "Delete Assignment: =(123)", "Delete ExpressionStatement(124)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete SimpleName: Override(127)", "Delete MarkerAnnotation(128)", "Delete Modifier: public(129)", "Delete SimpleName: SqlOperator(130)", "Delete SimpleType: SqlOperator(131)", "Delete SimpleName: getOperator(132)", "Delete SimpleName: OPERATOR(133)", "Delete ReturnStatement(134)", "Delete Block(135)", "Delete MethodDeclaration(136)", "Delete SimpleName: Override(137)", "Delete MarkerAnnotation(138)", "Delete Modifier: public(139)", "Delete SimpleName: List(140)", "Delete SimpleType: List(141)", "Delete SimpleName: SqlNode(142)", "Delete SimpleType: SqlNode(143)", "Delete ParameterizedType: List<SqlNode>(144)", "Delete SimpleName: getOperandList(145)", "Delete SimpleName: Collections(146)", "Delete SimpleName: singletonList(147)", "Delete SimpleName: SqlNode(148)", "Delete SimpleType: SqlNode(149)", "Delete SimpleName: schema(150)", "Delete CastExpression(151)", "Delete MethodInvocation(152)", "Delete ReturnStatement(153)", "Delete Block(154)", "Delete MethodDeclaration(155)", "Delete SimpleName: Override(156)", "Delete MarkerAnnotation(157)", "Delete Modifier: public(158)", "Delete PrimitiveType: void(159)", "Delete SimpleName: unparse(160)", "Delete SimpleName: SqlWriter(161)", "Delete SimpleType: SqlWriter(162)", "Delete SimpleName: writer(163)", "Delete SingleVariableDeclaration(164)", "Delete PrimitiveType: int(165)", "Delete SimpleName: leftPrec(166)", "Delete SingleVariableDeclaration(167)", "Delete PrimitiveType: int(168)", "Delete SimpleName: rightPrec(169)", "Delete SingleVariableDeclaration(170)", "Delete SimpleName: writer(171)", "Delete SimpleName: keyword(172)", "Delete StringLiteral: \"DESCRIBE\"(173)", "Delete MethodInvocation(174)", "Delete ExpressionStatement(175)", "Delete SimpleName: writer(176)", "Delete SimpleName: keyword(177)", "Delete StringLiteral: \"SCHEMA\"(178)", "Delete MethodInvocation(179)", "Delete ExpressionStatement(180)", "Delete SimpleName: schema(181)", "Delete SimpleName: unparse(182)", "Delete SimpleName: writer(183)", "Delete SimpleName: leftPrec(184)", "Delete SimpleName: rightPrec(185)", "Delete MethodInvocation(186)", "Delete ExpressionStatement(187)", "Delete Block(188)", "Delete MethodDeclaration(189)", "Delete SimpleName: Override(190)", "Delete MarkerAnnotation(191)", "Delete Modifier: public(192)", "Delete SimpleName: AbstractSqlHandler(193)", "Delete SimpleType: AbstractSqlHandler(194)", "Delete SimpleName: getSqlHandler(195)", "Delete SimpleName: SqlHandlerConfig(196)", "Delete SimpleType: SqlHandlerConfig(197)", "Delete SimpleName: config(198)", "Delete SingleVariableDeclaration(199)", "Delete SimpleName: DescribeSchemaHandler(200)", "Delete SimpleType: DescribeSchemaHandler(201)", "Delete SimpleName: config(202)", "Delete ClassInstanceCreation(203)", "Delete ReturnStatement(204)", "Delete Block(205)", "Delete MethodDeclaration(206)", "Delete Modifier: public(207)", "Delete SimpleName: SqlIdentifier(208)", "Delete SimpleType: SqlIdentifier(209)", "Delete SimpleName: getSchema(210)", "Delete SimpleName: schema(211)", "Delete ReturnStatement(212)", "Delete Block(213)", "Delete MethodDeclaration(214)", "Delete TypeDeclaration: class(215)"]}}, {"SqlDescribeTable_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL Javadoc", "DEL PackageDeclaration", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL QualifiedName: org.apache.drill.exec.planner.sql.parser", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.tools.Planner"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.ops.QueryContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.AbstractSqlHandler", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.planner.sql.handlers.SqlHandlerConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.plan.hep.HepPlanner"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlCall"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlIdentifier", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlKind"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlLiteral"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlNode", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.SqlOperator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlSpecialOperator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.SqlWriter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.parser.SqlParserPos"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.Lists"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: SqlSpecialOperator", "DEL SimpleName: SqlNode", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: pos", "DEL SimpleType: SqlNode", "DEL SimpleName: column", "DEL SingleVariableDeclaration", "DEL SimpleName: SqlLiteral", "DEL Modifier: public", "DEL SimpleName: SqlDescribeTable", "DEL SimpleName: SqlIdentifier", "DEL ParameterizedType: List<SqlNode>", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleName: getColumnQualifier", "DEL SimpleName: Override", "DEL SimpleName: table", "DEL SimpleName: columnQualifier", "DEL SimpleName: getOperator", "DEL SimpleType: SqlIdentifier", "DEL SimpleName: opList", "DEL SimpleName: column", "DEL Modifier: public", "DEL SimpleName: keyword", "DEL TextElement: { DESCRIBE | DESC } tblname [col_name | wildcard ]", "DEL VariableDeclarationFragment", "DEL SimpleType: SqlParserPos", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: operands", "DEL ParameterizedType: List<SqlNode>", "DEL SimpleName: Override", "DEL SimpleName: opList", "DEL PrimitiveType: int", "DEL SimpleName: columnQualifier", "DEL PrimitiveType: void", "DEL SimpleName: table", "DEL SimpleType: SqlIdentifier", "DEL Modifier: private", "DEL SimpleName: SqlIdentifier", "DEL SimpleType: SqlWriter", "DEL SimpleType: SqlParserPos", "DEL TagElement", "DEL TextElement: Sql parser tree node to represent statement:", "DEL FieldDeclaration", "DEL SimpleName: column", "DEL SimpleName: Override", "DEL SimpleName: Lists", "DEL Block", "DEL SimpleName: SqlNode", "DEL Assignment: =", "DEL Block", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: writer", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleType: SqlIdentifier", "DEL FieldAccess", "DEL Modifier: static", "DEL SimpleName: opList", "DEL SimpleName: SqlDescribeTable", "DEL SimpleName: table", "DEL SimpleName: leftPrec", "DEL Block", "DEL SimpleType: SqlNode", "DEL ArrayAccess", "DEL SimpleName: SqlSpecialOperator", "DEL SimpleName: SqlIdentifier", "DEL SimpleName: column", "DEL SimpleName: leftPrec", "DEL Modifier: public", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL SimpleType: SqlIdentifier", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL SimpleName: List", "DEL SimpleName: getSqlHandler", "DEL SimpleName: pos", "DEL Block", "DEL SimpleName: SqlIdentifier", "DEL Modifier: final", "DEL SimpleName: SqlNode", "DEL SimpleName: functionQualifier", "DEL SimpleType: SqlSpecialOperator", "DEL ExpressionStatement", "DEL SimpleName: SqlIdentifier", "DEL IfStatement", "DEL ExpressionStatement", "DEL Modifier: private", "DEL SimpleName: getOperandList", "DEL SimpleName: unparse", "DEL ThisExpression", "DEL SimpleName: DescribeTableHandler", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: DrillSqlCall", "DEL SimpleName: rightPrec", "DEL SimpleName: getColumn", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: SqlLiteral", "DEL SimpleName: add", "DEL SimpleName: operands", "DEL SimpleType: SqlHandlerConfig", "DEL SimpleName: add", "DEL SimpleName: SqlParserPos", "DEL SimpleName: pos", "DEL SimpleType: SqlOperator", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ArrayAccess", "DEL MethodDeclaration", "DEL SimpleName: SqlIdentifier", "DEL SimpleName: OPERATOR", "DEL SimpleType: SqlNode", "DEL Modifier: private", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: keyword", "DEL SimpleName: config", "DEL SimpleName: SqlNode", "DEL FieldDeclaration", "DEL SimpleName: writer", "DEL SimpleName: AbstractSqlHandler", "DEL ThisExpression", "DEL SimpleName: column", "DEL SimpleName: SqlHandlerConfig", "DEL SimpleType: DrillSqlCall", "DEL SimpleName: OPERATOR", "DEL SimpleName: createCall", "DEL StringLiteral: \"DESCRIBE\"", "DEL NumberLiteral: 0", "DEL SimpleType: SqlIdentifier", "DEL Block", "DEL SimpleType: SqlIdentifier", "DEL SimpleName: columnQualifier", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL PrimitiveType: int", "DEL QualifiedName: SqlKind.OTHER", "DEL SimpleName: config", "DEL SimpleName: writer", "DEL Modifier: public", "DEL SimpleName: SqlOperator", "DEL MethodDeclaration", "DEL SimpleName: newArrayList", "DEL FieldDeclaration", "DEL CastExpression", "DEL MarkerAnnotation", "DEL SimpleName: SqlIdentifier", "DEL ArrayAccess", "DEL SimpleType: SqlCall", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: table", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: getTable", "DEL SimpleName: opList", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: rightPrec", "DEL VariableDeclarationFragment", "DEL SimpleName: SqlSpecialOperator", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: writer", "DEL MethodDeclaration", "DEL SimpleType: SqlNode", "DEL SimpleName: table", "DEL Block", "DEL SimpleName: unparse", "DEL SimpleName: table", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: column", "DEL SimpleName: opList", "DEL SimpleName: columnQualifier", "DEL Modifier: final", "DEL SimpleName: SqlParserPos", "DEL MethodInvocation", "DEL StringLiteral: \"DESCRIBE_TABLE\"", "DEL ReturnStatement", "DEL SimpleName: column", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL NumberLiteral: 2", "DEL Modifier: public", "DEL SuperConstructorInvocation", "DEL ThisExpression", "DEL SimpleName: unparse", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: columnQualifier", "DEL ExpressionStatement", "DEL SimpleName: pos", "DEL CastExpression", "DEL SimpleName: leftPrec", "DEL ReturnStatement", "DEL SimpleName: SqlWriter", "DEL InfixExpression: !=", "DEL SimpleName: List", "DEL SimpleName: columnQualifier", "DEL SimpleType: SqlIdentifier", "DEL Assignment: =", "DEL SimpleType: SqlIdentifier", "DEL Modifier: public", "DEL Block", "DEL SimpleType: SqlNode", "DEL SimpleName: writer", "DEL SimpleType: List", "DEL SimpleName: columnQualifier", "DEL SimpleName: Override", "DEL SimpleName: columnQualifier", "DEL SimpleName: SqlCall", "DEL SimpleType: DescribeTableHandler", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: operands", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"TABLE\"", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: rightPrec", "DEL TypeDeclaration: class", "DEL SimpleName: column", "DEL Modifier: final", "DEL SimpleType: AbstractSqlHandler", "DEL SimpleName: SqlDescribeTable", "DEL SimpleName: rightPrec", "DEL SimpleName: operands", "DEL SimpleName: SqlNode", "DEL FieldAccess", "DEL SimpleName: writer", "DEL SimpleName: SqlIdentifier", "DEL ReturnStatement", "DEL SimpleName: leftPrec", "DEL Assignment: =", "DEL SimpleType: SqlNode", "DEL MethodInvocation", "DEL SimpleType: SqlDescribeTable", "DEL SimpleName: add", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: unparse", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: SqlNode"]}]}}, {"SqlDescribeTable_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.parser(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.util.List(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: org.apache.calcite.tools.Planner(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.exec.ops.QueryContext(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.AbstractSqlHandler(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: org.apache.drill.exec.planner.sql.handlers.SqlHandlerConfig(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: org.apache.calcite.plan.hep.HepPlanner(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: org.apache.calcite.sql.SqlCall(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.calcite.sql.SqlIdentifier(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.calcite.sql.SqlKind(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.calcite.sql.SqlLiteral(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.calcite.sql.SqlNode(39)", "Delete ImportDeclaration(40)", "Delete QualifiedName: org.apache.calcite.sql.SqlOperator(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: org.apache.calcite.sql.SqlSpecialOperator(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.calcite.sql.SqlWriter(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.calcite.sql.parser.SqlParserPos(47)", "Delete ImportDeclaration(48)", "Delete QualifiedName: com.google.common.collect.Lists(49)", "Delete ImportDeclaration(50)", "Delete TextElement: Sql parser tree node to represent statement:(51)", "Delete TextElement: { DESCRIBE | DESC } tblname [col_name | wildcard ](52)", "Delete TagElement(53)", "Delete Javadoc(54)", "Delete Modifier: public(55)", "Delete SimpleName: SqlDescribeTable(56)", "Delete SimpleName: DrillSqlCall(57)", "Delete SimpleType: DrillSqlCall(58)", "Delete Modifier: private(59)", "Delete Modifier: final(60)", "Delete SimpleName: SqlIdentifier(61)", "Delete SimpleType: SqlIdentifier(62)", "Delete SimpleName: table(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete Modifier: private(66)", "Delete Modifier: final(67)", "Delete SimpleName: SqlIdentifier(68)", "Delete SimpleType: SqlIdentifier(69)", "Delete SimpleName: column(70)", "Delete VariableDeclarationFragment(71)", "Delete FieldDeclaration(72)", "Delete Modifier: private(73)", "Delete Modifier: final(74)", "Delete SimpleName: SqlNode(75)", "Delete SimpleType: SqlNode(76)", "Delete SimpleName: columnQualifier(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete Modifier: public(80)", "Delete Modifier: static(81)", "Delete Modifier: final(82)", "Delete SimpleName: SqlSpecialOperator(83)", "Delete SimpleType: SqlSpecialOperator(84)", "Delete SimpleName: OPERATOR(85)", "Delete SimpleName: SqlSpecialOperator(86)", "Delete SimpleType: SqlSpecialOperator(87)", "Delete StringLiteral: \"DESCRIBE_TABLE\"(88)", "Delete QualifiedName: SqlKind.OTHER(89)", "Delete SimpleName: Override(90)", "Delete MarkerAnnotation(91)", "Delete Modifier: public(92)", "Delete SimpleName: SqlCall(93)", "Delete SimpleType: SqlCall(94)", "Delete SimpleName: createCall(95)", "Delete SimpleName: SqlLiteral(96)", "Delete SimpleType: SqlLiteral(97)", "Delete SimpleName: functionQualifier(98)", "Delete SingleVariableDeclaration(99)", "Delete SimpleName: SqlParserPos(100)", "Delete SimpleType: SqlParserPos(101)", "Delete SimpleName: pos(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: SqlNode(104)", "Delete SimpleType: SqlNode(105)", "Delete SimpleName: operands(106)", "Delete SingleVariableDeclaration(107)", "Delete SimpleName: SqlDescribeTable(108)", "Delete SimpleType: SqlDescribeTable(109)", "Delete SimpleName: pos(110)", "Delete SimpleName: SqlIdentifier(111)", "Delete SimpleType: SqlIdentifier(112)", "Delete SimpleName: operands(113)", "Delete NumberLiteral: 0(114)", "Delete ArrayAccess(115)", "Delete CastExpression(116)", "Delete SimpleName: SqlIdentifier(117)", "Delete SimpleType: SqlIdentifier(118)", "Delete SimpleName: operands(119)", "Delete NumberLiteral: 1(120)", "Delete ArrayAccess(121)", "Delete CastExpression(122)", "Delete SimpleName: operands(123)", "Delete NumberLiteral: 2(124)", "Delete ArrayAccess(125)", "Delete ClassInstanceCreation(126)", "Delete ReturnStatement(127)", "Delete Block(128)", "Delete MethodDeclaration(129)", "Delete AnonymousClassDeclaration(130)", "Delete ClassInstanceCreation(131)", "Delete VariableDeclarationFragment(132)", "Delete FieldDeclaration(133)", "Delete Modifier: public(134)", "Delete SimpleName: SqlDescribeTable(135)", "Delete SimpleName: SqlParserPos(136)", "Delete SimpleType: SqlParserPos(137)", "Delete SimpleName: pos(138)", "Delete SingleVariableDeclaration(139)", "Delete SimpleName: SqlIdentifier(140)", "Delete SimpleType: SqlIdentifier(141)", "Delete SimpleName: table(142)", "Delete SingleVariableDeclaration(143)", "Delete SimpleName: SqlIdentifier(144)", "Delete SimpleType: SqlIdentifier(145)", "Delete SimpleName: column(146)", "Delete SingleVariableDeclaration(147)", "Delete SimpleName: SqlNode(148)", "Delete SimpleType: SqlNode(149)", "Delete SimpleName: columnQualifier(150)", "Delete SingleVariableDeclaration(151)", "Delete SimpleName: pos(152)", "Delete SuperConstructorInvocation(153)", "Delete ThisExpression(154)", "Delete SimpleName: table(155)", "Delete FieldAccess(156)", "Delete SimpleName: table(157)", "Delete Assignment: =(158)", "Delete ExpressionStatement(159)", "Delete ThisExpression(160)", "Delete SimpleName: column(161)", "Delete FieldAccess(162)", "Delete SimpleName: column(163)", "Delete Assignment: =(164)", "Delete ExpressionStatement(165)", "Delete ThisExpression(166)", "Delete SimpleName: columnQualifier(167)", "Delete FieldAccess(168)", "Delete SimpleName: columnQualifier(169)", "Delete Assignment: =(170)", "Delete ExpressionStatement(171)", "Delete Block(172)", "Delete MethodDeclaration(173)", "Delete SimpleName: Override(174)", "Delete MarkerAnnotation(175)", "Delete Modifier: public(176)", "Delete SimpleName: SqlOperator(177)", "Delete SimpleType: SqlOperator(178)", "Delete SimpleName: getOperator(179)", "Delete SimpleName: OPERATOR(180)", "Delete ReturnStatement(181)", "Delete Block(182)", "Delete MethodDeclaration(183)", "Delete SimpleName: Override(184)", "Delete MarkerAnnotation(185)", "Delete Modifier: public(186)", "Delete SimpleName: List(187)", "Delete SimpleType: List(188)", "Delete SimpleName: SqlNode(189)", "Delete SimpleType: SqlNode(190)", "Delete ParameterizedType: List<SqlNode>(191)", "Delete SimpleName: getOperandList(192)", "Delete SimpleName: List(193)", "Delete SimpleType: List(194)", "Delete SimpleName: SqlNode(195)", "Delete SimpleType: SqlNode(196)", "Delete ParameterizedType: List<SqlNode>(197)", "Delete SimpleName: opList(198)", "Delete SimpleName: Lists(199)", "Delete SimpleName: newArrayList(200)", "Delete MethodInvocation(201)", "Delete VariableDeclarationFragment(202)", "Delete VariableDeclarationStatement(203)", "Delete SimpleName: opList(204)", "Delete SimpleName: add(205)", "Delete SimpleName: table(206)", "Delete MethodInvocation(207)", "Delete ExpressionStatement(208)", "Delete SimpleName: opList(209)", "Delete SimpleName: add(210)", "Delete SimpleName: column(211)", "Delete MethodInvocation(212)", "Delete ExpressionStatement(213)", "Delete SimpleName: opList(214)", "Delete SimpleName: add(215)", "Delete SimpleName: columnQualifier(216)", "Delete MethodInvocation(217)", "Delete ExpressionStatement(218)", "Delete SimpleName: opList(219)", "Delete ReturnStatement(220)", "Delete Block(221)", "Delete MethodDeclaration(222)", "Delete SimpleName: Override(223)", "Delete MarkerAnnotation(224)", "Delete Modifier: public(225)", "Delete PrimitiveType: void(226)", "Delete SimpleName: unparse(227)", "Delete SimpleName: SqlWriter(228)", "Delete SimpleType: SqlWriter(229)", "Delete SimpleName: writer(230)", "Delete SingleVariableDeclaration(231)", "Delete PrimitiveType: int(232)", "Delete SimpleName: leftPrec(233)", "Delete SingleVariableDeclaration(234)", "Delete PrimitiveType: int(235)", "Delete SimpleName: rightPrec(236)", "Delete SingleVariableDeclaration(237)", "Delete SimpleName: writer(238)", "Delete SimpleName: keyword(239)", "Delete StringLiteral: \"DESCRIBE\"(240)", "Delete MethodInvocation(241)", "Delete ExpressionStatement(242)", "Delete SimpleName: writer(243)", "Delete SimpleName: keyword(244)", "Delete StringLiteral: \"TABLE\"(245)", "Delete MethodInvocation(246)", "Delete ExpressionStatement(247)", "Delete SimpleName: table(248)", "Delete SimpleName: unparse(249)", "Delete SimpleName: writer(250)", "Delete SimpleName: leftPrec(251)", "Delete SimpleName: rightPrec(252)", "Delete MethodInvocation(253)", "Delete ExpressionStatement(254)", "Delete SimpleName: column(255)", "Delete NullLiteral(256)", "Delete InfixExpression: !=(257)", "Delete SimpleName: column(258)", "Delete SimpleName: unparse(259)", "Delete SimpleName: writer(260)", "Delete SimpleName: leftPrec(261)", "Delete SimpleName: rightPrec(262)", "Delete MethodInvocation(263)", "Delete ExpressionStatement(264)", "Delete Block(265)", "Delete IfStatement(266)", "Delete SimpleName: columnQualifier(267)", "Delete NullLiteral(268)", "Delete InfixExpression: !=(269)", "Delete SimpleName: columnQualifier(270)", "Delete SimpleName: unparse(271)", "Delete SimpleName: writer(272)", "Delete SimpleName: leftPrec(273)", "Delete SimpleName: rightPrec(274)", "Delete MethodInvocation(275)", "Delete ExpressionStatement(276)", "Delete Block(277)", "Delete IfStatement(278)", "Delete Block(279)", "Delete MethodDeclaration(280)", "Delete SimpleName: Override(281)", "Delete MarkerAnnotation(282)", "Delete Modifier: public(283)", "Delete SimpleName: AbstractSqlHandler(284)", "Delete SimpleType: AbstractSqlHandler(285)", "Delete SimpleName: getSqlHandler(286)", "Delete SimpleName: SqlHandlerConfig(287)", "Delete SimpleType: SqlHandlerConfig(288)", "Delete SimpleName: config(289)", "Delete SingleVariableDeclaration(290)", "Delete SimpleName: DescribeTableHandler(291)", "Delete SimpleType: DescribeTableHandler(292)", "Delete SimpleName: config(293)", "Delete ClassInstanceCreation(294)", "Delete ReturnStatement(295)", "Delete Block(296)", "Delete MethodDeclaration(297)", "Delete Modifier: public(298)", "Delete SimpleName: SqlIdentifier(299)", "Delete SimpleType: SqlIdentifier(300)", "Delete SimpleName: getTable(301)", "Delete SimpleName: table(302)", "Delete ReturnStatement(303)", "Delete Block(304)", "Delete MethodDeclaration(305)", "Delete Modifier: public(306)", "Delete SimpleName: SqlIdentifier(307)", "Delete SimpleType: SqlIdentifier(308)", "Delete SimpleName: getColumn(309)", "Delete SimpleName: column(310)", "Delete ReturnStatement(311)", "Delete Block(312)", "Delete MethodDeclaration(313)", "Delete Modifier: public(314)", "Delete SimpleName: SqlNode(315)", "Delete SimpleType: SqlNode(316)", "Delete SimpleName: getColumnQualifier(317)", "Delete SimpleName: columnQualifier(318)", "Delete ReturnStatement(319)", "Delete Block(320)", "Delete MethodDeclaration(321)", "Delete TypeDeclaration: class(322)"]}}], "commit_stats": [{"total_files": 71, "deleted_files": 2, "testing": "True", "maintenance": "True", "build": "True"}]}