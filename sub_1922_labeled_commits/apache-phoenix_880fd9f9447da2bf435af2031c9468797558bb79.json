{"application": "apache-phoenix", "csha": "880fd9f9447da2bf435af2031c9468797558bb79", "files": [{"MetaDataProtocol_cluster": {"actions": [{"root": "UPDATE from 0 to 2", "operations": ["UPD NumberLiteral: 0 from 0 to 2"]}, {"root": "UPDATE from 0 to 1", "operations": ["UPD NumberLiteral: 0 from 0 to 1"]}, {"root": "UPDATE from 4 to 5", "operations": ["UPD NumberLiteral: 4 from 4 to 5"]}]}}, {"MetaDataProtocol_diff": {"operations": ["Update NumberLiteral: 0(64) to 2", "Update NumberLiteral: 0(72) to 1", "Update NumberLiteral: 4(102) to 5"]}}, {"ConnectionQueryServicesImpl_cluster": {"actions": [{"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: e to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: getTable to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: clearTableRegionCache to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_FULLNAME_BYTES to MethodInvocation at 1"]}, {"root": "UPDATE from PhoenixDatabaseMetaData.SYSTEM_CATALOG_SCHEMA to PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME", "operations": ["UPD QualifiedName: PhoenixDatabaseMetaData.SYSTEM_CATALOG_SCHEMA from PhoenixDatabaseMetaData.SYSTEM_CATALOG_SCHEMA to PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME"]}, {"root": "UPDATE from PhoenixDatabaseMetaData.TYPE_SEQUENCE to PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME", "operations": ["UPD QualifiedName: PhoenixDatabaseMetaData.TYPE_SEQUENCE from PhoenixDatabaseMetaData.TYPE_SEQUENCE to PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME"]}, {"root": "UPDATE from clearCache to clearTableFromCache", "operations": ["UPD SimpleName: clearCache from clearCache to clearTableFromCache"]}, {"root": "INS QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY to MethodInvocation at 1", "operations": ["INS QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY to MethodInvocation at 1"]}, {"root": "INS QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME_BYTES to MethodInvocation at 2", "operations": ["INS QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME_BYTES to MethodInvocation at 2"]}, {"root": "INS QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME_BYTES to MethodInvocation at 3", "operations": ["INS QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME_BYTES to MethodInvocation at 3"]}, {"root": "INS QualifiedName: MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP to MethodInvocation at 4", "operations": ["INS QualifiedName: MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP to MethodInvocation at 4"]}]}}, {"ConnectionQueryServicesImpl_diff": {"operations": ["Insert MethodInvocation(7350) into MethodInvocation(7351) at 4", "Insert ExpressionStatement(7370) into Block(7371) at 2", "Insert SimpleName: e(7348) into MethodInvocation(7350) at 0", "Insert SimpleName: getTable(7349) into MethodInvocation(7350) at 1", "Insert MethodInvocation(7369) into ExpressionStatement(7370) at 0", "Update QualifiedName: PhoenixDatabaseMetaData.SYSTEM_CATALOG_SCHEMA(7352) to PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME", "Update QualifiedName: PhoenixDatabaseMetaData.TYPE_SEQUENCE(7353) to PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME", "Update SimpleName: clearCache(7357) to clearTableFromCache", "Insert QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(7361) into MethodInvocation(7365) at 1", "Insert QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_SCHEMA_NAME_BYTES(7362) into MethodInvocation(7365) at 2", "Insert QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_TABLE_NAME_BYTES(7363) into MethodInvocation(7365) at 3", "Insert QualifiedName: MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP(7364) into MethodInvocation(7365) at 4", "Insert SimpleName: clearTableRegionCache(7367) into MethodInvocation(7369) at 0", "Insert QualifiedName: PhoenixDatabaseMetaData.SEQUENCE_FULLNAME_BYTES(7368) into MethodInvocation(7369) at 1"]}}, {"MetaDataClient_cluster": {"actions": [{"root": "INS MethodInvocation to ClassInstanceCreation at 3", "operations": ["INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: getTable to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 3"]}]}}, {"MetaDataClient_diff": {"operations": ["Insert MethodInvocation(7412) into ClassInstanceCreation(7413) at 3", "Insert SimpleName: result(7410) into MethodInvocation(7412) at 0", "Insert SimpleName: getTable(7411) into MethodInvocation(7412) at 1"]}}, {"TableAlreadyExistsException_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: table to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleType: PTable to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: msg to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to ConstructorInvocation at 3", "INS SimpleName: schemaName to ConstructorInvocation at 0", "INS SimpleName: tableName to SingleVariableDeclaration at 1", "INS ConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: TableAlreadyExistsException to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: msg to ConstructorInvocation at 2", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: schemaName to SingleVariableDeclaration at 1", "INS SimpleName: tableName to ConstructorInvocation at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: table to ConstructorInvocation at 3", "INS SimpleName: schemaName to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: schemaName to ConstructorInvocation at 0", "INS SimpleName: TableAlreadyExistsException to MethodDeclaration at 1", "INS SimpleType: PTable to SingleVariableDeclaration at 0", "INS NullLiteral to ConstructorInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: tableName to ConstructorInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: tableName to SingleVariableDeclaration at 1", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: table to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleName: getTable to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleType: PTable to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleType: PTable to SingleVariableDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS SimpleName: table to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: table to FieldAccess at 1"]}, {"root": "INS NullLiteral to ConstructorInvocation at 3", "operations": ["INS NullLiteral to ConstructorInvocation at 3"]}]}}, {"TableAlreadyExistsException_diff": {"operations": ["Insert FieldDeclaration(53) into TypeDeclaration: class(199) at 8", "Insert MethodDeclaration(91) into TypeDeclaration: class(199) at 10", "Insert MethodDeclaration(112) into TypeDeclaration: class(199) at 11", "Insert MethodDeclaration(198) into TypeDeclaration: class(199) at 15", "Insert Modifier: private(47) into FieldDeclaration(53) at 0", "Insert Modifier: final(48) into FieldDeclaration(53) at 1", "Insert SimpleType: PTable(50) into FieldDeclaration(53) at 2", "Insert VariableDeclarationFragment(52) into FieldDeclaration(53) at 3", "Insert Modifier: public(71) into MethodDeclaration(91) at 0", "Insert SimpleName: TableAlreadyExistsException(72) into MethodDeclaration(91) at 1", "Insert SingleVariableDeclaration(76) into MethodDeclaration(91) at 2", "Insert SingleVariableDeclaration(80) into MethodDeclaration(91) at 3", "Insert SingleVariableDeclaration(84) into MethodDeclaration(91) at 4", "Insert Block(90) into MethodDeclaration(91) at 5", "Insert Modifier: public(92) into MethodDeclaration(112) at 0", "Insert SimpleName: TableAlreadyExistsException(93) into MethodDeclaration(112) at 1", "Insert SingleVariableDeclaration(97) into MethodDeclaration(112) at 2", "Insert SingleVariableDeclaration(101) into MethodDeclaration(112) at 3", "Insert SingleVariableDeclaration(105) into MethodDeclaration(112) at 4", "Insert Block(111) into MethodDeclaration(112) at 5", "Insert SingleVariableDeclaration(130) into MethodDeclaration(174) at 5", "Insert Modifier: public(191) into MethodDeclaration(198) at 0", "Insert SimpleType: PTable(193) into MethodDeclaration(198) at 1", "Insert SimpleName: getTable(194) into MethodDeclaration(198) at 2", "Insert Block(197) into MethodDeclaration(198) at 3", "Insert SimpleName: PTable(49) into SimpleType: PTable(50) at 0", "Insert SimpleName: table(51) into VariableDeclarationFragment(52) at 0", "Insert SimpleType: String(74) into SingleVariableDeclaration(76) at 0", "Insert SimpleName: schemaName(75) into SingleVariableDeclaration(76) at 1", "Insert SimpleType: String(78) into SingleVariableDeclaration(80) at 0", "Insert SimpleName: tableName(79) into SingleVariableDeclaration(80) at 1", "Insert SimpleType: String(82) into SingleVariableDeclaration(84) at 0", "Insert SimpleName: msg(83) into SingleVariableDeclaration(84) at 1", "Insert ConstructorInvocation(89) into Block(90) at 0", "Insert SimpleType: String(95) into SingleVariableDeclaration(97) at 0", "Insert SimpleName: schemaName(96) into SingleVariableDeclaration(97) at 1", "Insert SimpleType: String(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: tableName(100) into SingleVariableDeclaration(101) at 1", "Insert SimpleType: PTable(103) into SingleVariableDeclaration(105) at 0", "Insert SimpleName: table(104) into SingleVariableDeclaration(105) at 1", "Insert ConstructorInvocation(110) into Block(111) at 0", "Insert SimpleType: PTable(128) into SingleVariableDeclaration(130) at 0", "Insert SimpleName: table(129) into SingleVariableDeclaration(130) at 1", "Insert ExpressionStatement(172) into Block(173) at 3", "Insert SimpleName: PTable(192) into SimpleType: PTable(193) at 0", "Insert ReturnStatement(196) into Block(197) at 0", "Insert NullLiteral(67) into ConstructorInvocation(68) at 3", "Insert SimpleName: String(73) into SimpleType: String(74) at 0", "Insert SimpleName: String(77) into SimpleType: String(78) at 0", "Insert SimpleName: String(81) into SimpleType: String(82) at 0", "Insert SimpleName: schemaName(85) into ConstructorInvocation(89) at 0", "Insert SimpleName: tableName(86) into ConstructorInvocation(89) at 1", "Insert SimpleName: msg(87) into ConstructorInvocation(89) at 2", "Insert NullLiteral(88) into ConstructorInvocation(89) at 3", "Insert SimpleName: String(94) into SimpleType: String(95) at 0", "Insert SimpleName: String(98) into SimpleType: String(99) at 0", "Insert SimpleName: PTable(102) into SimpleType: PTable(103) at 0", "Insert SimpleName: schemaName(106) into ConstructorInvocation(110) at 0", "Insert SimpleName: tableName(107) into ConstructorInvocation(110) at 1", "Insert NullLiteral(108) into ConstructorInvocation(110) at 2", "Insert SimpleName: table(109) into ConstructorInvocation(110) at 3", "Insert SimpleName: PTable(127) into SimpleType: PTable(128) at 0", "Insert Assignment: =(171) into ExpressionStatement(172) at 0", "Insert SimpleName: table(195) into ReturnStatement(196) at 0", "Insert FieldAccess(169) into Assignment: =(171) at 0", "Insert SimpleName: table(170) into Assignment: =(171) at 1", "Insert ThisExpression(167) into FieldAccess(169) at 0", "Insert SimpleName: table(168) into FieldAccess(169) at 1"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}