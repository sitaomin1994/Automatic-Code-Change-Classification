{"application": "google-turbine", "csha": "0ddf140d2a04f5bab18638c3ac1d1ce58f85c368", "files": [{"DisambiguateTypeAnnotations_cluster": {"actions": [{"root": "UPDATE from fixAnnotations to addAnnotationsToType", "operations": ["UPD SimpleName: fixAnnotations from fixAnnotations to addAnnotationsToType", "UPD SimpleName: fixAnnotations from fixAnnotations to addAnnotationsToType", "UPD SimpleName: fixAnnotations from fixAnnotations to addAnnotationsToType"]}, {"root": "UPDATE from fixAnnotations to appendAnnotations", "operations": ["UPD SimpleName: fixAnnotations from fixAnnotations to appendAnnotations", "UPD SimpleName: fixAnnotations from fixAnnotations to appendAnnotations", "UPD SimpleName: fixAnnotations from fixAnnotations to appendAnnotations", "UPD SimpleName: fixAnnotations from fixAnnotations to appendAnnotations"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: annos to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: build to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: addAll to MethodInvocation at 1", "MOV SimpleName: extra to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: builder to MethodInvocation at 2", "MOV SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleType: AnnoInfo to MethodInvocation at 1"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL SimpleName: declarationAnnotations", "operations": ["DEL SimpleName: declarationAnnotations"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: TypeBoundClass", "DEL SimpleName: Env", "DEL SimpleName: ClassSymbol", "DEL SimpleName: env", "DEL SimpleType: ClassSymbol", "DEL ParameterizedType: Env<ClassSymbol,TypeBoundClass>", "DEL SingleVariableDeclaration", "DEL SimpleName: TypeBoundClass", "DEL SimpleType: Env"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: AnnoInfo", "DEL SimpleType: AnnoInfo", "DEL SimpleName: Builder", "DEL SimpleType: Builder", "DEL SingleVariableDeclaration", "DEL SimpleName: removed", "DEL ParameterizedType: Builder<AnnoInfo>"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL SimpleName: removed", "operations": ["DEL SimpleName: removed"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL SimpleName: removed", "operations": ["DEL SimpleName: removed"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL SimpleName: removed", "operations": ["DEL SimpleName: removed"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL SimpleName: removed", "operations": ["DEL SimpleName: removed"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: Env", "DEL SimpleType: TypeBoundClass", "DEL SimpleName: ClassSymbol", "DEL ParameterizedType: Env<ClassSymbol,TypeBoundClass>", "DEL SimpleName: TypeBoundClass", "DEL SimpleName: env", "DEL SimpleName: Env", "DEL SingleVariableDeclaration", "DEL SimpleType: ClassSymbol"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: Builder", "DEL SingleVariableDeclaration", "DEL SimpleName: Builder", "DEL ParameterizedType: Builder<AnnoInfo>", "DEL SimpleName: removed"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ParameterizedType: ImmutableList.Builder<AnnoInfo>", "DEL SimpleType: ImmutableList.Builder", "DEL SimpleType: AnnoInfo", "DEL MethodInvocation", "DEL QualifiedName: ImmutableList.Builder", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: AnnoInfo", "DEL SimpleName: result"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: result", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: ElementType", "DEL SimpleName: target", "DEL SimpleName: annotationMetadata", "DEL SimpleName: sym", "DEL SimpleName: AnnoInfo", "DEL ParameterizedType: Set<ElementType>", "DEL MethodInvocation", "DEL SimpleType: Set", "DEL SimpleName: annos", "DEL MethodInvocation", "DEL SimpleName: add", "DEL IfStatement", "DEL SimpleName: target", "DEL SimpleName: add", "DEL SimpleName: anno", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Set", "DEL MethodInvocation", "DEL SimpleName: removed", "DEL Block", "DEL Block", "DEL SimpleName: anno", "DEL QualifiedName: ElementType.TYPE_USE", "DEL SimpleName: get", "DEL SimpleName: target", "DEL SimpleName: anno", "DEL MethodInvocation", "DEL SimpleType: AnnoInfo", "DEL EnhancedForStatement", "DEL SimpleName: anno", "DEL ExpressionStatement", "DEL SimpleName: env", "DEL SimpleName: ElementType", "DEL VariableDeclarationFragment", "DEL SimpleName: contains"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: result"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: result", "DEL ReturnStatement"]}]}}, {"DisambiguateTypeAnnotations_diff": {"operations": ["Update SimpleName: fixAnnotations(731) to addAnnotationsToType", "Update SimpleName: fixAnnotations(934) to appendAnnotations", "Insert ReturnStatement(936) into Block(937) at 0", "Insert MethodInvocation(935) into ReturnStatement(936) at 0", "Update SimpleName: fixAnnotations(576) to addAnnotationsToType", "Insert MethodInvocation(933) into MethodInvocation(935) at 0", "Move SimpleName: build(1024) into MethodInvocation(935) at 1", "Insert MethodInvocation(930) into MethodInvocation(933) at 0", "Move SimpleName: addAll(1019) into MethodInvocation(933) at 1", "Move SimpleName: extra(1020) into MethodInvocation(933) at 2", "Update SimpleName: fixAnnotations(778) to appendAnnotations", "Update SimpleName: fixAnnotations(866) to addAnnotationsToType", "Update SimpleName: fixAnnotations(895) to appendAnnotations", "Insert MethodInvocation(927) into MethodInvocation(930) at 0", "Insert SimpleName: addAll(928) into MethodInvocation(930) at 1", "Insert SimpleName: annos(929) into MethodInvocation(930) at 2", "Update SimpleName: fixAnnotations(819) to appendAnnotations", "Move SimpleName: ImmutableList(971) into MethodInvocation(927) at 0", "Move SimpleType: AnnoInfo(961) into MethodInvocation(927) at 1", "Move SimpleName: builder(972) into MethodInvocation(927) at 2", "Delete SimpleName: env(577)", "Delete SimpleName: declarationAnnotations(582)", "Delete SimpleName: Env(732)", "Delete SimpleType: Env(733)", "Delete SimpleName: ClassSymbol(734)", "Delete SimpleType: ClassSymbol(735)", "Delete SimpleName: TypeBoundClass(736)", "Delete SimpleType: TypeBoundClass(737)", "Delete ParameterizedType: Env<ClassSymbol,TypeBoundClass>(738)", "Delete SimpleName: env(739)", "Delete SingleVariableDeclaration(740)", "Delete SimpleName: Builder(752)", "Delete SimpleType: Builder(753)", "Delete SimpleName: AnnoInfo(754)", "Delete SimpleType: AnnoInfo(755)", "Delete ParameterizedType: Builder<AnnoInfo>(756)", "Delete SimpleName: removed(757)", "Delete SingleVariableDeclaration(758)", "Delete SimpleName: env(779)", "Delete SimpleName: removed(784)", "Delete SimpleName: env(820)", "Delete SimpleName: removed(825)", "Delete SimpleName: env(867)", "Delete SimpleName: removed(872)", "Delete SimpleName: env(896)", "Delete SimpleName: removed(901)", "Delete SimpleName: Env(935)", "Delete SimpleType: Env(936)", "Delete SimpleName: ClassSymbol(937)", "Delete SimpleType: ClassSymbol(938)", "Delete SimpleName: TypeBoundClass(939)", "Delete SimpleType: TypeBoundClass(940)", "Delete ParameterizedType: Env<ClassSymbol,TypeBoundClass>(941)", "Delete SimpleName: env(942)", "Delete SingleVariableDeclaration(943)", "Delete SimpleName: Builder(958)", "Delete SimpleType: Builder(959)", "Delete ParameterizedType: Builder<AnnoInfo>(962)", "Delete SimpleName: removed(963)", "Delete SingleVariableDeclaration(964)", "Delete QualifiedName: ImmutableList.Builder(965)", "Delete SimpleType: ImmutableList.Builder(966)", "Delete SimpleName: AnnoInfo(967)", "Delete SimpleType: AnnoInfo(968)", "Delete ParameterizedType: ImmutableList.Builder<AnnoInfo>(969)", "Delete SimpleName: result(970)", "Delete MethodInvocation(973)", "Delete VariableDeclarationFragment(974)", "Delete VariableDeclarationStatement(975)", "Delete SimpleName: AnnoInfo(976)", "Delete SimpleType: AnnoInfo(977)", "Delete SimpleName: anno(978)", "Delete SingleVariableDeclaration(979)", "Delete SimpleName: annos(980)", "Delete SimpleName: Set(981)", "Delete SimpleType: Set(982)", "Delete SimpleName: ElementType(983)", "Delete SimpleType: ElementType(984)", "Delete ParameterizedType: Set<ElementType>(985)", "Delete SimpleName: target(986)", "Delete SimpleName: env(987)", "Delete SimpleName: get(988)", "Delete SimpleName: anno(989)", "Delete SimpleName: sym(990)", "Delete MethodInvocation(991)", "Delete MethodInvocation(992)", "Delete SimpleName: annotationMetadata(993)", "Delete MethodInvocation(994)", "Delete SimpleName: target(995)", "Delete MethodInvocation(996)", "Delete VariableDeclarationFragment(997)", "Delete VariableDeclarationStatement(998)", "Delete SimpleName: target(999)", "Delete SimpleName: contains(1000)", "Delete QualifiedName: ElementType.TYPE_USE(1001)", "Delete MethodInvocation(1002)", "Delete SimpleName: result(1003)", "Delete SimpleName: add(1004)", "Delete SimpleName: anno(1005)", "Delete MethodInvocation(1006)", "Delete ExpressionStatement(1007)", "Delete Block(1008)", "Delete SimpleName: removed(1009)", "Delete SimpleName: add(1010)", "Delete SimpleName: anno(1011)", "Delete MethodInvocation(1012)", "Delete ExpressionStatement(1013)", "Delete Block(1014)", "Delete IfStatement(1015)", "Delete Block(1016)", "Delete EnhancedForStatement(1017)", "Delete SimpleName: result(1018)", "Delete MethodInvocation(1021)", "Delete ExpressionStatement(1022)", "Delete SimpleName: result(1023)", "Delete MethodInvocation(1025)", "Delete ReturnStatement(1026)"]}}, {"ConstExpressionParser_cluster": {"actions": [{"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: of", "DEL MethodInvocation", "DEL SimpleName: ImmutableList"]}]}}, {"ConstExpressionParser_diff": {"operations": ["Delete SimpleName: ImmutableList(374)", "Delete SimpleName: of(375)", "Delete MethodInvocation(376)"]}}, {"Parser_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 38"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: maybeAnnos to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 20"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: ImmutableList<Anno> to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 3", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS SimpleType: Type to MethodDeclaration at 1", "operations": ["INS SimpleType: Type to MethodDeclaration at 1", "INS SimpleName: Type to SimpleType: Type at 0"]}, {"root": "UPDATE from maybeAnnos to maybeDims", "operations": ["UPD SimpleName: maybeAnnos from maybeAnnos to maybeDims"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: typeAnnos to SingleVariableDeclaration at 1", "INS ParameterizedType: ImmutableList<Anno> to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: ty to SingleVariableDeclaration at 1", "INS SimpleType: Type to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Type to SimpleType: Type at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "UPDATE from modifiers to modifiersAndAnnotations", "operations": ["UPD SimpleName: modifiers from modifiers to modifiersAndAnnotations", "UPD SimpleName: modifiers from modifiers to modifiersAndAnnotations"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleType: Anno to MethodInvocation at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: annos to Assignment: = at 0", "INS SimpleName: builder to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: annos to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: token to InfixExpression: != at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: Token.AT to InfixExpression: != at 1", "INS SimpleName: of to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: ty to MethodInvocation at 2", "INS SimpleName: ty to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: maybeDims to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV WhileStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS SimpleName: ty to Assignment: = at 0", "INS SimpleName: maybeDims to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ty to MethodInvocation at 2", "INS Block to IfStatement at 2", "INS SimpleName: typeAnnos to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ParameterizedType: ImmutableList<Anno>", "operations": ["MOV SimpleType: ImmutableList to ParameterizedType: ImmutableList<Anno> at 0", "MOV SimpleType: Anno to ParameterizedType: ImmutableList<Anno> at 1"]}, {"root": "UPDATE from typeAnnos to ty", "operations": ["UPD SimpleName: typeAnnos from typeAnnos to ty"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: maybeDims to MethodInvocation at 0", "INS SimpleName: maybeAnnos to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from typeAnnos to ImmutableList", "operations": ["UPD SimpleName: typeAnnos from typeAnnos to ImmutableList"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: typeAnnos to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: maybeDims to MethodInvocation at 0", "INS SimpleName: maybeAnnos to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: maybeDims to MethodInvocation at 0", "INS SimpleName: maybeAnnos to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 5"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: maybeAnnos to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS SimpleName: of to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 5", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: Anno", "operations": ["MOV SimpleName: Anno to SimpleType: Anno at 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Anno", "DEL SimpleName: typeAnnos", "DEL SimpleName: ImmutableList", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ParameterizedType: ImmutableList<Anno>", "DEL VariableDeclarationFragment", "DEL SimpleType: ImmutableList"]}, {"root": "DEL SimpleName: typeAnnos", "operations": ["DEL SimpleName: typeAnnos"]}, {"root": "DEL SimpleName: typeAnnos", "operations": ["DEL SimpleName: typeAnnos"]}, {"root": "DEL SimpleName: typeAnnos", "operations": ["DEL SimpleName: typeAnnos"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: position", "DEL SimpleName: result", "DEL SimpleName: ArrTy", "DEL ClassInstanceCreation", "DEL SimpleName: typeAnnos", "DEL SimpleType: ArrTy"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: typeAnnos", "DEL SimpleName: maybeAnnos", "DEL MethodInvocation", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: Token.LBRACK", "DEL SimpleName: eat", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL DoStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL DoStatement", "DEL ExpressionStatement", "DEL SimpleName: maybe", "DEL Block", "DEL QualifiedName: Token.LBRACK", "DEL QualifiedName: Token.RBRACK", "DEL SimpleName: eat"]}, {"root": "DEL SimpleName: typeAnnos", "operations": ["DEL SimpleName: typeAnnos"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: typeAnnos", "DEL SimpleName: result", "DEL SimpleName: position", "DEL SimpleType: ArrTy", "DEL SimpleName: ArrTy", "DEL ClassInstanceCreation"]}, {"root": "DEL WhileStatement", "operations": ["DEL Block", "DEL SimpleName: eat", "DEL WhileStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: maybe", "DEL QualifiedName: Token.LBRACK", "DEL QualifiedName: Token.RBRACK"]}, {"root": "DEL SimpleName: typeAnnos", "operations": ["DEL SimpleName: typeAnnos"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: result", "DEL ClassInstanceCreation", "DEL SimpleType: ArrTy", "DEL SimpleName: position", "DEL SimpleName: typeAnnos", "DEL SimpleName: ArrTy"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: eat", "DEL WhileStatement", "DEL SimpleName: maybe", "DEL MethodInvocation", "DEL QualifiedName: Token.RBRACK", "DEL QualifiedName: Token.LBRACK", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: typeAnnos"]}, {"root": "DEL WhileStatement", "operations": ["DEL SimpleName: eat", "DEL QualifiedName: Token.RBRACK", "DEL ExpressionStatement", "DEL SimpleName: maybeAnnos", "DEL MethodInvocation", "DEL SimpleName: typeAnnos", "DEL QualifiedName: Token.LBRACK", "DEL SimpleName: ty", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: ArrTy", "DEL InfixExpression: ==", "DEL SimpleName: ArrTy", "DEL Assignment: =", "DEL QualifiedName: Token.LBRACK", "DEL SimpleName: position", "DEL SimpleName: ty", "DEL SimpleName: eat", "DEL MethodInvocation", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: token", "DEL SimpleName: typeAnnos", "DEL WhileStatement"]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL ParameterizedType: ImmutableList<Anno>", "DEL SimpleName: typeAnnos", "DEL IfStatement"]}]}}, {"Parser_diff": {"operations": ["Move MethodDeclaration(2033) into TypeDeclaration: class(4266) at 38", "Insert MethodDeclaration(1999) into TypeDeclaration: class(4266) at 20", "Insert Modifier: private(1953) into MethodDeclaration(1999) at 0", "Move ParameterizedType: ImmutableList<Anno>(1981) into MethodDeclaration(1999) at 1", "Insert SimpleName: maybeAnnos(1959) into MethodDeclaration(1999) at 2", "Move Block(2028) into MethodDeclaration(1999) at 3", "Insert SimpleType: Type(3659) into MethodDeclaration(3698) at 1", "Update SimpleName: maybeAnnos(1982) to maybeDims", "Insert SingleVariableDeclaration(3667) into MethodDeclaration(3698) at 3", "Insert SingleVariableDeclaration(3671) into MethodDeclaration(3698) at 4", "Insert Block(3697) into MethodDeclaration(3698) at 5", "Update SimpleName: modifiers(3725) to modifiersAndAnnotations", "Insert IfStatement(1632) into Block(1951) at 4", "Insert IfStatement(1968) into Block(1998) at 0", "Insert ReturnStatement(1997) into Block(1998) at 3", "Insert ExpressionStatement(3652) into Block(3655) at 2", "Insert SimpleName: Type(3658) into SimpleType: Type(3659) at 0", "Insert ParameterizedType: ImmutableList<Anno>(3665) into SingleVariableDeclaration(3667) at 0", "Insert SimpleName: typeAnnos(3666) into SingleVariableDeclaration(3667) at 1", "Insert SimpleType: Type(3669) into SingleVariableDeclaration(3671) at 0", "Insert SimpleName: ty(3670) into SingleVariableDeclaration(3671) at 1", "Move WhileStatement(3714) into Block(3697) at 0", "Move ReturnStatement(2031) into Block(3697) at 1", "Move InfixExpression: ==(1996) into IfStatement(1632) at 0", "Insert Block(1631) into IfStatement(1632) at 1", "Insert InfixExpression: !=(1962) into IfStatement(1968) at 0", "Insert Block(1967) into IfStatement(1968) at 1", "Move MethodInvocation(2025) into ReturnStatement(1997) at 0", "Insert Block(2837) into IfStatement(2838) at 2", "Insert Assignment: =(3651) into ExpressionStatement(3652) at 0", "Move SimpleType: ImmutableList(1984) into ParameterizedType: ImmutableList<Anno>(3665) at 0", "Move SimpleType: Anno(1986) into ParameterizedType: ImmutableList<Anno>(3665) at 1", "Insert SimpleName: Type(3668) into SimpleType: Type(3669) at 0", "Update SimpleName: typeAnnos(2030) to ty", "Insert ExpressionStatement(1630) into Block(1631) at 0", "Insert IfStatement(1883) into Block(1944) at 3", "Move ExpressionStatement(1910) into Block(1944) at 4", "Insert SimpleName: token(1960) into InfixExpression: !=(1962) at 0", "Insert QualifiedName: Token.AT(1961) into InfixExpression: !=(1962) at 1", "Insert ReturnStatement(1966) into Block(1967) at 0", "Insert ExpressionStatement(2836) into Block(2837) at 0", "Insert SimpleName: ty(3645) into Assignment: =(3651) at 0", "Insert MethodInvocation(3650) into Assignment: =(3651) at 1", "Move ExpressionStatement(1797) into Block(3693) at 2", "Insert Assignment: =(1629) into ExpressionStatement(1630) at 0", "Move InfixExpression: ==(1882) into IfStatement(1883) at 0", "Insert Block(1882) into IfStatement(1883) at 1", "Insert MethodInvocation(1965) into ReturnStatement(1966) at 0", "Update SimpleName: modifiers(2821) to modifiersAndAnnotations", "Insert MethodInvocation(2798) into MethodInvocation(2799) at 1", "Insert Assignment: =(2835) into ExpressionStatement(2836) at 0", "Insert SimpleName: maybeDims(3646) into MethodInvocation(3650) at 0", "Move MethodInvocation(2831) into MethodInvocation(3650) at 1", "Insert SimpleName: ty(3649) into MethodInvocation(3650) at 2", "Insert SimpleName: annos(1614) into Assignment: =(1629) at 0", "Insert MethodInvocation(1628) into Assignment: =(1629) at 1", "Move ExpressionStatement(1788) into Block(1797) at 1", "Move ExpressionStatement(1838) into Block(1827) at 1", "Move ExpressionStatement(1885) into Block(1882) at 0", "Move ExpressionStatement(1894) into Block(1882) at 1", "Insert MethodInvocation(1889) into Assignment: =(1890) at 1", "Insert SimpleName: ImmutableList(1963) into MethodInvocation(1965) at 0", "Insert SimpleName: of(1964) into MethodInvocation(1965) at 1", "Insert SimpleName: ImmutableList(2796) into MethodInvocation(2798) at 0", "Insert SimpleName: of(2797) into MethodInvocation(2798) at 1", "Insert SimpleName: ty(2830) into Assignment: =(2835) at 0", "Insert MethodInvocation(2834) into Assignment: =(2835) at 1", "Insert MethodInvocation(1626) into MethodInvocation(1628) at 0", "Insert SimpleName: build(1627) into MethodInvocation(1628) at 1", "Move MethodInvocation(1991) into MethodInvocation(1681) at 1", "Insert SimpleName: maybeDims(1885) into MethodInvocation(1889) at 0", "Insert MethodInvocation(1887) into MethodInvocation(1889) at 1", "Insert SimpleName: result(1888) into MethodInvocation(1889) at 2", "Insert SimpleName: maybeDims(2831) into MethodInvocation(2834) at 0", "Insert SimpleName: typeAnnos(2832) into MethodInvocation(2834) at 1", "Insert SimpleName: ty(2833) into MethodInvocation(2834) at 2", "Insert MethodInvocation(1622) into MethodInvocation(1626) at 0", "Insert SimpleName: addAll(1623) into MethodInvocation(1626) at 1", "Insert MethodInvocation(1625) into MethodInvocation(1626) at 2", "Update SimpleName: typeAnnos(1667) to ImmutableList", "Move SimpleName: typeAnnos(1667) into MethodInvocation(1680) at 0", "Insert MethodInvocation(1793) into Assignment: =(1794) at 1", "Insert MethodInvocation(1823) into Assignment: =(1824) at 1", "Insert MethodInvocation(1847) into ClassInstanceCreation(1848) at 5", "Insert SimpleName: maybeAnnos(1886) into MethodInvocation(1887) at 0", "Insert MethodInvocation(1619) into MethodInvocation(1622) at 0", "Insert SimpleName: addAll(1620) into MethodInvocation(1622) at 1", "Insert SimpleName: annos(1621) into MethodInvocation(1622) at 2", "Move SimpleName: maybeAnnos(1617) into MethodInvocation(1625) at 0", "Insert MethodInvocation(1745) into ClassInstanceCreation(1746) at 5", "Insert MethodInvocation(1784) into ClassInstanceCreation(1785) at 5", "Insert SimpleName: maybeDims(1789) into MethodInvocation(1793) at 0", "Insert MethodInvocation(1791) into MethodInvocation(1793) at 1", "Insert SimpleName: result(1792) into MethodInvocation(1793) at 2", "Insert MethodInvocation(1814) into ClassInstanceCreation(1815) at 5", "Insert SimpleName: maybeDims(1819) into MethodInvocation(1823) at 0", "Insert MethodInvocation(1821) into MethodInvocation(1823) at 1", "Insert SimpleName: result(1822) into MethodInvocation(1823) at 2", "Insert SimpleName: ImmutableList(1845) into MethodInvocation(1847) at 0", "Insert SimpleName: of(1846) into MethodInvocation(1847) at 1", "Insert SimpleName: ImmutableList(1615) into MethodInvocation(1619) at 0", "Insert SimpleType: Anno(1617) into MethodInvocation(1619) at 1", "Insert SimpleName: builder(1618) into MethodInvocation(1619) at 2", "Insert SimpleName: ImmutableList(1743) into MethodInvocation(1745) at 0", "Insert SimpleName: of(1744) into MethodInvocation(1745) at 1", "Insert SimpleName: ImmutableList(1782) into MethodInvocation(1784) at 0", "Insert SimpleName: of(1783) into MethodInvocation(1784) at 1", "Insert SimpleName: maybeAnnos(1790) into MethodInvocation(1791) at 0", "Insert SimpleName: ImmutableList(1812) into MethodInvocation(1814) at 0", "Insert SimpleName: of(1813) into MethodInvocation(1814) at 1", "Insert SimpleName: maybeAnnos(1820) into MethodInvocation(1821) at 0", "Move SimpleName: Anno(1613) into SimpleType: Anno(1617) at 0", "Delete SimpleName: ImmutableList(1611)", "Delete SimpleType: ImmutableList(1612)", "Delete SimpleType: Anno(1614)", "Delete ParameterizedType: ImmutableList<Anno>(1615)", "Delete SimpleName: typeAnnos(1616)", "Delete MethodInvocation(1618)", "Delete VariableDeclarationFragment(1619)", "Delete VariableDeclarationStatement(1620)", "Delete SimpleName: typeAnnos(1628)", "Delete SimpleName: typeAnnos(1730)", "Delete SimpleName: typeAnnos(1767)", "Delete SimpleName: ArrTy(1781)", "Delete SimpleType: ArrTy(1782)", "Delete SimpleName: position(1783)", "Delete SimpleName: typeAnnos(1784)", "Delete SimpleName: result(1785)", "Delete ClassInstanceCreation(1786)", "Delete SimpleName: typeAnnos(1771)", "Delete SimpleName: maybeAnnos(1772)", "Delete MethodInvocation(1773)", "Delete Assignment: =(1774)", "Delete ExpressionStatement(1775)", "Delete SimpleName: eat(1776)", "Delete QualifiedName: Token.LBRACK(1777)", "Delete MethodInvocation(1778)", "Delete ExpressionStatement(1779)", "Delete SimpleName: eat(1789)", "Delete QualifiedName: Token.RBRACK(1790)", "Delete MethodInvocation(1791)", "Delete ExpressionStatement(1792)", "Delete Block(1798)", "Delete SimpleName: maybe(1799)", "Delete QualifiedName: Token.LBRACK(1800)", "Delete MethodInvocation(1801)", "Delete DoStatement(1802)", "Delete SimpleName: typeAnnos(1819)", "Delete SimpleName: ArrTy(1831)", "Delete SimpleType: ArrTy(1832)", "Delete SimpleName: position(1833)", "Delete SimpleName: typeAnnos(1834)", "Delete SimpleName: result(1835)", "Delete ClassInstanceCreation(1836)", "Delete SimpleName: maybe(1823)", "Delete QualifiedName: Token.LBRACK(1824)", "Delete MethodInvocation(1825)", "Delete SimpleName: eat(1826)", "Delete QualifiedName: Token.RBRACK(1827)", "Delete MethodInvocation(1828)", "Delete ExpressionStatement(1829)", "Delete Block(1839)", "Delete WhileStatement(1840)", "Delete SimpleName: typeAnnos(1860)", "Delete SimpleName: ArrTy(1903)", "Delete SimpleType: ArrTy(1904)", "Delete SimpleName: position(1905)", "Delete SimpleName: typeAnnos(1906)", "Delete SimpleName: result(1907)", "Delete ClassInstanceCreation(1908)", "Delete SimpleName: maybe(1895)", "Delete QualifiedName: Token.LBRACK(1896)", "Delete MethodInvocation(1897)", "Delete SimpleName: eat(1898)", "Delete QualifiedName: Token.RBRACK(1899)", "Delete MethodInvocation(1900)", "Delete ExpressionStatement(1901)", "Delete Block(1911)", "Delete WhileStatement(1912)", "Delete Block(1913)", "Delete IfStatement(1914)", "Delete SimpleName: typeAnnos(2022)", "Delete Assignment: =(2026)", "Delete ExpressionStatement(2027)", "Delete SimpleName: token(2864)", "Delete QualifiedName: Token.LBRACK(2865)", "Delete InfixExpression: ==(2866)", "Delete SimpleName: eat(2867)", "Delete QualifiedName: Token.LBRACK(2868)", "Delete MethodInvocation(2869)", "Delete ExpressionStatement(2870)", "Delete SimpleName: eat(2871)", "Delete QualifiedName: Token.RBRACK(2872)", "Delete MethodInvocation(2873)", "Delete ExpressionStatement(2874)", "Delete SimpleName: ty(2875)", "Delete SimpleName: ArrTy(2876)", "Delete SimpleType: ArrTy(2877)", "Delete SimpleName: position(2878)", "Delete SimpleName: typeAnnos(2879)", "Delete SimpleName: ty(2880)", "Delete ClassInstanceCreation(2881)", "Delete Assignment: =(2882)", "Delete ExpressionStatement(2883)", "Delete SimpleName: typeAnnos(2884)", "Delete SimpleName: maybeAnnos(2885)", "Delete MethodInvocation(2886)", "Delete Assignment: =(2887)", "Delete ExpressionStatement(2888)", "Delete Block(2889)", "Delete WhileStatement(2890)", "Delete ParameterizedType: ImmutableList<Anno>(1987)", "Delete SimpleName: typeAnnos(1988)", "Delete VariableDeclarationFragment(1992)", "Delete VariableDeclarationStatement(1993)", "Delete IfStatement(2029)", "Delete Block(2032)"]}}, {"Tree_cluster": {"actions": [{"root": "INS MethodInvocation to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: of to MethodInvocation at 1", "INS MethodInvocation to SuperConstructorInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ImmutableList", "DEL SimpleName: ImmutableList", "DEL SimpleName: annos", "DEL SimpleType: Anno", "DEL SimpleName: Anno", "DEL SingleVariableDeclaration", "DEL ParameterizedType: ImmutableList<Anno>"]}, {"root": "DEL SimpleName: annos", "operations": ["DEL SimpleName: annos"]}]}}, {"Tree_diff": {"operations": ["Insert MethodInvocation(626) into SuperConstructorInvocation(627) at 1", "Insert SimpleName: ImmutableList(624) into MethodInvocation(626) at 0", "Insert SimpleName: of(625) into MethodInvocation(626) at 1", "Delete SimpleName: ImmutableList(623)", "Delete SimpleType: ImmutableList(624)", "Delete SimpleName: Anno(625)", "Delete SimpleType: Anno(626)", "Delete ParameterizedType: ImmutableList<Anno>(627)", "Delete SimpleName: annos(628)", "Delete SingleVariableDeclaration(629)", "Delete SimpleName: annos(631)"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}