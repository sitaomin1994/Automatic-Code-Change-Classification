{"application": "google-closure-templates", "csha": "edb7dd2300dc79dd5891be7d7e579b38eaa52070", "files": [{"RawTextContextUpdater_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.common.base.MoreObjects to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: javax.annotation.Nullable to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ReturnStatement to Block at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 2", "INS SimpleType: Transition to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS SimpleName: transitionToState to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: prior to MethodInvocation at 0", "INS SimpleName: Transition to SimpleType: Transition at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: makeTransitionToStateLiteral to MethodDeclaration at 4", "INS SimpleType: Context to MethodDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: literal to ClassInstanceCreation at 1", "INS SimpleName: state to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Transition to SimpleType: Transition at 0", "INS Block to MethodDeclaration at 7", "INS Block to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleType: Transition to MethodDeclaration at 3", "INS SimpleName: computeNextContext to MethodDeclaration at 2", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: HtmlContext to SimpleType: HtmlContext at 0", "INS SimpleName: prior to SingleVariableDeclaration at 1", "INS SimpleType: Context to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: HtmlContext to SingleVariableDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: literal to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Javadoc to FieldDeclaration at 0", "INS MarkerAnnotation to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TextElement: For matching a literal string.  to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: Transition to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS NullLiteral to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Transition to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 1", "INS SimpleName: pattern to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: literal to FieldAccess at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 14", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"pattern\" to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: omitNullValues to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ThisExpression to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toStringHelper to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: pattern to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: literal to MethodInvocation at 3", "INS SimpleName: add to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: MoreObjects to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS StringLiteral: \"literal\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 1", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: regex to SingleVariableDeclaration at 1", "INS SimpleName: Pattern to SimpleType: Pattern at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Pattern to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from makeTransitionToJsString to makeTransitionToJsStringLiteral", "operations": ["UPD SimpleName: makeTransitionToJsString from makeTransitionToJsString to makeTransitionToJsStringLiteral", "UPD SimpleName: makeTransitionToJsString from makeTransitionToJsString to makeTransitionToJsStringLiteral", "UPD SimpleName: makeTransitionToJsString from makeTransitionToJsString to makeTransitionToJsStringLiteral"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: Pattern to SingleVariableDeclaration at 0", "INS SimpleName: regex to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Pattern to SimpleType: Pattern at 0"]}, {"root": "INS MarkerAnnotation to FieldDeclaration at 1", "operations": ["INS SimpleName: Nullable to MarkerAnnotation at 0", "INS MarkerAnnotation to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleType: Matcher to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SimpleName: Matcher to SimpleType: Matcher at 0", "INS SimpleName: matcher to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: Nullable to MarkerAnnotation at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleType: Matcher to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: matcher to SingleVariableDeclaration at 2", "INS SimpleName: Matcher to SimpleType: Matcher at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from regex to literal", "operations": ["UPD SimpleName: regex from regex to literal", "UPD SimpleName: regex from regex to literal", "UPD SimpleName: regex from regex to literal", "UPD SimpleName: regex from regex to literal", "UPD SimpleName: regex from regex to literal"]}, {"root": "INS SimpleType: Pattern to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Pattern to SimpleType: Pattern at 0", "INS SimpleType: Pattern to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: String to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SimpleName: literal to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: literal to SingleVariableDeclaration at 1"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Context to SimpleType: Context at 0", "INS SimpleType: Context to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Transition to SimpleType: Transition at 0", "INS SimpleType: Context to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: prior to SingleVariableDeclaration at 1", "INS SimpleName: prior to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: computeNextContext to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: Context to SimpleType: Context at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Transition to ClassInstanceCreation at 0"]}, {"root": "UPDATE from makeTransitionToSelf to Pattern", "operations": ["UPD SimpleName: makeTransitionToSelf from makeTransitionToSelf to Pattern", "UPD SimpleName: String from String to Pattern", "UPD SimpleName: makeTransitionToSelf from makeTransitionToSelf to Pattern", "UPD SimpleType: String from String to Pattern", "UPD SimpleName: makeTransitionToSelf from makeTransitionToSelf to Pattern", "UPD SimpleName: makeCssUriTransition from makeCssUriTransition to Pattern"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to InfixExpression: < at 0", "INS InfixExpression: < to InfixExpression: && at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: index to InfixExpression: + at 0", "INS Block to WhileStatement at 1", "INS ExpressionStatement to Block at 1", "INS NullLiteral to MethodInvocation at 3", "INS InfixExpression: && to WhileStatement at 0", "INS SimpleName: transition to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: needle to MethodInvocation at 2", "INS SimpleName: earliestTransition to Assignment: = at 0", "INS SimpleName: earliestStart to Assignment: = at 0", "INS SimpleName: text to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: start to MethodInvocation at 3", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: earliestMatcher to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS QualifiedName: transition.literal to InfixExpression: != at 0", "INS Assignment: = to ParenthesizedExpression at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: index to Assignment: = at 0", "INS SimpleName: context to MethodInvocation at 2", "INS NullLiteral to Assignment: = at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: length to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS WhileStatement to Block at 3", "INS SimpleName: needle to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: text to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: isApplicableTo to MethodInvocation at 1", "INS SimpleName: needle to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS ParenthesizedExpression to InfixExpression: != at 0", "INS NullLiteral to MethodInvocation at 3", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: indexOf to MethodInvocation at 1", "INS SimpleName: transition to Assignment: = at 1", "INS SimpleName: earliestStart to InfixExpression: < at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS ExpressionStatement to Block at 2", "INS PrefixExpression: - to InfixExpression: != at 1", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 2", "INS IfStatement to Block at 0", "INS QualifiedName: transition.literal to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: < to InfixExpression: && at 1", "INS SimpleName: earliestMatcher to Assignment: = at 0", "INS SimpleName: earliestTransition to Assignment: = at 0", "INS SimpleName: earliestStart to InfixExpression: < at 1", "INS SimpleName: index to Assignment: = at 1", "INS SimpleName: transition to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: isApplicableTo to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: index to InfixExpression: < at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: transition to Assignment: = at 1", "INS InfixExpression: + to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: text to MethodInvocation at 0", "INS SimpleName: earliestStart to Assignment: = at 0", "INS SimpleName: start to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: text to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: length to MethodInvocation at 1", "INS QualifiedName: transition.pattern to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: earliestEnd to Assignment: = at 0", "INS SimpleName: context to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS BreakStatement to Block at 4", "INS IfStatement to Block at 0", "INS SimpleName: earliestEnd to Assignment: = at 0", "INS Block to EnhancedForStatement at 2", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: literal to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: pattern to FieldAccess at 1", "INS NullLiteral to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: literal to FieldAccess at 1", "INS SimpleName: literal to Assignment: = at 1"]}, {"root": "INS MarkerAnnotation to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Nullable to MarkerAnnotation at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS StringLiteral: \"([:./&?=#])|\\\\z\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS StringLiteral: \"(?i)^(javascript|data|blob|filesystem):\" to MethodInvocation at 2", "INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from Matches a token.  to Matches a pattern. ", "operations": ["UPD TextElement: Matches a token.  from Matches a token.  to Matches a pattern. "]}, {"root": "MOVE from TagElement: @param", "operations": ["MOV TagElement: @code to TagElement: @param at 2"]}, {"root": "UPDATE from . to  or ", "operations": ["UPD TextElement: . from . to  or ", "UPD TextElement: . from . to  or ", "UPD TextElement: . from . to  or "]}, {"root": "INS TagElement: @code to TagElement: @param at 5", "operations": ["INS TagElement: @code to TagElement: @param at 5", "INS TextElement:  null to TagElement: @code at 0"]}, {"root": "INS TextElement:  if this transition to TagElement: @param at 6", "operations": ["INS TextElement:  if this transition to TagElement: @param at 6"]}, {"root": "INS TextElement: uses a  to TagElement: @param at 7", "operations": ["INS TextElement: uses a  to TagElement: @param at 7"]}, {"root": "INS TagElement: @code to TagElement: @param at 8", "operations": ["INS TagElement: @code to TagElement: @param at 8", "INS TextElement:  literal to TagElement: @code at 0"]}, {"root": "INS TagElement: @code to TagElement: @param at 4", "operations": ["INS TagElement: @code to TagElement: @param at 4", "INS TextElement:  null to TagElement: @code at 0"]}, {"root": "INS TextElement:  if this transition to TagElement: @param at 5", "operations": ["INS TextElement:  if this transition to TagElement: @param at 5"]}, {"root": "INS TextElement: uses a  to TagElement: @param at 6", "operations": ["INS TextElement: uses a  to TagElement: @param at 6"]}, {"root": "INS TagElement: @code to TagElement: @param at 7", "operations": ["INS TextElement:  literal to TagElement: @code at 0", "INS TagElement: @code to TagElement: @param at 7"]}, {"root": "MOVE from TagElement: @param", "operations": ["MOV TagElement: @code to TagElement: @param at 2"]}, {"root": "INS TagElement: @code to TagElement: @param at 4", "operations": ["INS TextElement:  null to TagElement: @code at 0", "INS TagElement: @code to TagElement: @param at 4"]}, {"root": "INS TextElement:  if this transition to TagElement: @param at 5", "operations": ["INS TextElement:  if this transition to TagElement: @param at 5"]}, {"root": "INS TextElement: uses a  to TagElement: @param at 6", "operations": ["INS TextElement: uses a  to TagElement: @param at 6"]}, {"root": "INS TagElement: @code to TagElement: @param at 7", "operations": ["INS TextElement:  literal to TagElement: @code at 0", "INS TagElement: @code to TagElement: @param at 7"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: makeTransitionToSelf to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: makeTransitionToSelf to MethodInvocation at 0"]}, {"root": "INS StringLiteral: \"`\" to ClassInstanceCreation at 1", "operations": ["INS StringLiteral: \"`\" to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0"]}, {"root": "UPDATE from makeTransitionToState to makeTransitionToStateLiteral", "operations": ["UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral", "UPD SimpleName: makeTransitionToState from makeTransitionToState to makeTransitionToStateLiteral"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"${\" to MethodInvocation at 1"]}, {"root": "INS SimpleName: compile to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: makeTransitionToSelf to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\\\\\[$`]\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: HtmlContext.JS to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: makeTransitionToState to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "INS SimpleName: compile to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "INS SimpleName: compile to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "UPDATE from \"\\\\*/\" to \"*/\"", "operations": ["UPD StringLiteral: \"\\\\*/\" from \"\\\\*/\" to \"*/\"", "UPD StringLiteral: \"\\\\*/\" from \"\\\\*/\" to \"*/\""]}, {"root": "INS SimpleName: Pattern to MethodInvocation at 0", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0"]}, {"root": "UPDATE from makeTransitionToState to compile", "operations": ["UPD SimpleName: makeTransitionToState from makeTransitionToState to compile"]}, {"root": "UPDATE from \"/\\\\*\" to \"/*\"", "operations": ["UPD StringLiteral: \"/\\\\*\" from \"/\\\\*\" to \"/*\"", "UPD StringLiteral: \"/\\\\*\" from \"/\\\\*\" to \"/*\""]}, {"root": "INS StringLiteral: \"`\" to ClassInstanceCreation at 1", "operations": ["INS StringLiteral: \"`\" to ClassInstanceCreation at 1"]}, {"root": "INS StringLiteral: \"}\" to ClassInstanceCreation at 1", "operations": ["INS StringLiteral: \"}\" to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: compile to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0", "INS StringLiteral: \"[^/\\\"'}`\\\\s\\\\\\\\]+\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: compile to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\s+\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f\\\"])\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\n\\r\\f]\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f'])\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\n\\r\\f]\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Pattern to MethodInvocation at 0", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\\\)\\\\s]\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\\"']\" to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f'])\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\n\\r\\f]\" to MethodInvocation at 2"]}, {"root": "UPDATE from StringBuffer to RawTextNode", "operations": ["UPD SimpleType: StringBuffer from StringBuffer to RawTextNode", "UPD SimpleName: StringBuffer from StringBuffer to RawTextNode"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS QualifiedName: UriType.MEDIA to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: makeCssUriTransition to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f\\\"])\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"[\\n\\r\\f]\" to MethodInvocation at 2"]}, {"root": "INS SimpleName: suffixNode to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: suffixNode to VariableDeclarationFragment at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: suffixNode to MethodInvocation at 3", "operations": ["INS SimpleName: suffixNode to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: Pattern to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: suffixNode to MethodInvocation at 0", "INS SimpleName: getRawText to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS SimpleName: compile to MethodInvocation at 1", "operations": ["INS SimpleName: compile to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"(?i)\\\\burl\\\\s*\\\\(\\\\s*(['\\\"]?)\" to MethodInvocation at 2"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL SimpleName: Pattern", "DEL ConstructorInvocation", "DEL QualifiedName: Pattern.DOTALL", "DEL MethodInvocation", "DEL SimpleName: compile", "DEL SimpleName: regex"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: regex", "DEL SimpleName: Transition", "DEL MethodDeclaration"]}, {"root": "DEL SimpleName: regex", "operations": ["DEL SimpleName: regex"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"\\\\z\"", "DEL SimpleName: makeTransitionToSelf", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \"([:./&?=#])|\\\\z\"", "operations": ["DEL StringLiteral: \"([:./&?=#])|\\\\z\""]}, {"root": "DEL StringLiteral: \"(?i)^(javascript|data|blob|filesystem):\"", "operations": ["DEL StringLiteral: \"(?i)^(javascript|data|blob|filesystem):\""]}, {"root": "DEL QualifiedName: UriType.MEDIA", "operations": ["DEL QualifiedName: UriType.MEDIA"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: quote", "DEL MethodInvocation", "DEL SimpleName: Pattern", "DEL StringLiteral: \"`\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: Pattern", "DEL SimpleName: quote", "DEL StringLiteral: \"}\""]}, {"root": "DEL SimpleName: rest", "operations": ["DEL SimpleName: rest"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: StringBuffer", "DEL SimpleName: StringBuffer"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: rest", "DEL SimpleName: appendTail", "DEL MethodInvocation", "DEL SimpleName: matcher", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: rest", "operations": ["DEL SimpleName: rest"]}, {"root": "DEL StringLiteral: \"[^/\\\"'}`\\\\s\\\\\\\\]+\"", "operations": ["DEL StringLiteral: \"[^/\\\"'}`\\\\s\\\\\\\\]+\""]}, {"root": "DEL QualifiedName: HtmlContext.JS", "operations": ["DEL QualifiedName: HtmlContext.JS"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: Pattern", "DEL MethodInvocation", "DEL StringLiteral: \"`\"", "DEL SimpleName: quote"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: quote", "DEL SimpleName: Pattern"]}]}}, {"RawTextContextUpdater_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(2393) at 1", "Insert ImportDeclaration(25) into CompilationUnit(2393) at 12", "Insert QualifiedName: com.google.common.base.MoreObjects(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: javax.annotation.Nullable(24) into ImportDeclaration(25) at 0", "Insert MethodDeclaration(1113) into TypeDeclaration: class(2392) at 10", "Insert FieldDeclaration(858) into TypeDeclaration: class(1068) at 6", "Insert MethodDeclaration(896) into TypeDeclaration: class(1068) at 8", "Insert MethodDeclaration(911) into TypeDeclaration: class(1068) at 9", "Insert MethodDeclaration(1067) into TypeDeclaration: class(1068) at 13", "Move Javadoc(874) into MethodDeclaration(1113) at 0", "Insert Modifier: private(1072) into MethodDeclaration(1113) at 1", "Insert Modifier: static(1073) into MethodDeclaration(1113) at 2", "Insert SimpleType: Transition(1075) into MethodDeclaration(1113) at 3", "Insert SimpleName: makeTransitionToStateLiteral(1076) into MethodDeclaration(1113) at 4", "Move SingleVariableDeclaration(1040) into MethodDeclaration(1113) at 5", "Insert SingleVariableDeclaration(1085) into MethodDeclaration(1113) at 6", "Insert Block(1112) into MethodDeclaration(1113) at 7", "Insert SingleVariableDeclaration(1122) into MethodDeclaration(1155) at 4", "Update SimpleName: makeTransitionToJsString(981) to makeTransitionToJsStringLiteral", "Insert SingleVariableDeclaration(1279) into MethodDeclaration(1304) at 5", "Insert MarkerAnnotation(841) into FieldDeclaration(847) at 1", "Insert Javadoc(850) into FieldDeclaration(858) at 0", "Insert MarkerAnnotation(852) into FieldDeclaration(858) at 1", "Insert Modifier: final(853) into FieldDeclaration(858) at 2", "Move SimpleType: String(926) into FieldDeclaration(858) at 3", "Insert VariableDeclarationFragment(857) into FieldDeclaration(858) at 4", "Insert SimpleName: Transition(878) into MethodDeclaration(896) at 0", "Move SingleVariableDeclaration(883) into MethodDeclaration(896) at 1", "Move Block(762) into MethodDeclaration(896) at 2", "Insert SimpleName: Transition(897) into MethodDeclaration(911) at 0", "Insert Block(910) into MethodDeclaration(911) at 1", "Insert SingleVariableDeclaration(945) into MethodDeclaration(949) at 4", "Insert SingleVariableDeclaration(1036) into MethodDeclaration(1042) at 4", "Insert MarkerAnnotation(1044) into MethodDeclaration(1067) at 0", "Insert Modifier: public(1045) into MethodDeclaration(1067) at 1", "Move SimpleType: String(983) into MethodDeclaration(1067) at 2", "Insert SimpleName: toString(1048) into MethodDeclaration(1067) at 3", "Insert Block(1066) into MethodDeclaration(1067) at 4", "Insert SimpleName: Transition(1074) into SimpleType: Transition(1075) at 0", "Update SimpleName: regex(1039) to literal", "Insert Modifier: final(1081) into SingleVariableDeclaration(1085) at 0", "Insert SimpleType: HtmlContext(1083) into SingleVariableDeclaration(1085) at 1", "Insert SimpleName: state(1084) into SingleVariableDeclaration(1085) at 2", "Insert ReturnStatement(1111) into Block(1112) at 0", "Insert SimpleType: Pattern(1120) into SingleVariableDeclaration(1122) at 0", "Insert SimpleName: regex(1121) into SingleVariableDeclaration(1122) at 1", "Insert SimpleType: Pattern(1165) into SingleVariableDeclaration(1167) at 0", "Insert SimpleType: String(1222) into SingleVariableDeclaration(1224) at 0", "Insert SimpleName: literal(1223) into SingleVariableDeclaration(1224) at 1", "Insert SimpleType: Pattern(1277) into SingleVariableDeclaration(1279) at 0", "Insert SimpleName: regex(1278) into SingleVariableDeclaration(1279) at 1", "Insert ClassInstanceCreation(1334) into VariableDeclarationFragment(1335) at 1", "Update SimpleType: String(1361) to Pattern", "Update SimpleName: regex(1456) to literal", "Insert Block(749) into EnhancedForStatement(750) at 2", "Insert SimpleName: Nullable(840) into MarkerAnnotation(841) at 0", "Insert TagElement(849) into Javadoc(850) at 0", "Insert SimpleName: Nullable(851) into MarkerAnnotation(852) at 0", "Insert SimpleName: literal(856) into VariableDeclarationFragment(857) at 0", "Insert ExpressionStatement(875) into Block(876) at 1", "Update SimpleName: regex(882) to literal", "Insert ExpressionStatement(888) into Block(895) at 0", "Insert ExpressionStatement(894) into Block(895) at 1", "Insert ExpressionStatement(903) into Block(910) at 0", "Insert ExpressionStatement(909) into Block(910) at 1", "Insert MarkerAnnotation(941) into SingleVariableDeclaration(945) at 0", "Insert SimpleName: matcher(944) into SingleVariableDeclaration(945) at 2", "Insert MarkerAnnotation(992) into SingleVariableDeclaration(996) at 0", "Insert MarkerAnnotation(1032) into SingleVariableDeclaration(1036) at 0", "Insert SimpleName: matcher(1035) into SingleVariableDeclaration(1036) at 2", "Insert SimpleName: Override(1043) into MarkerAnnotation(1044) at 0", "Insert ReturnStatement(1065) into Block(1066) at 0", "Insert SimpleName: HtmlContext(1082) into SimpleType: HtmlContext(1083) at 0", "Insert ClassInstanceCreation(1110) into ReturnStatement(1111) at 0", "Insert SimpleName: Pattern(1119) into SimpleType: Pattern(1120) at 0", "Insert SimpleName: Pattern(1164) into SimpleType: Pattern(1165) at 0", "Insert SimpleName: String(1221) into SimpleType: String(1222) at 0", "Insert SimpleName: Pattern(1276) into SimpleType: Pattern(1277) at 0", "Insert SimpleType: Transition(1315) into ClassInstanceCreation(1334) at 0", "Insert AnonymousClassDeclaration(1333) into ClassInstanceCreation(1334) at 1", "Insert MethodInvocation(1469) into ClassInstanceCreation(1555) at 1", "Insert MethodInvocation(1572) into ClassInstanceCreation(1612) at 1", "Update SimpleName: String(1360) to Pattern", "Insert IfStatement(748) into Block(749) at 0", "Insert TextElement: For matching a literal string. (848) into TagElement(849) at 0", "Insert Assignment: =(874) into ExpressionStatement(875) at 0", "Insert Assignment: =(887) into ExpressionStatement(888) at 0", "Insert Assignment: =(893) into ExpressionStatement(894) at 0", "Insert Assignment: =(902) into ExpressionStatement(903) at 0", "Insert Assignment: =(908) into ExpressionStatement(909) at 0", "Move TagElement: @code(848) into TagElement: @param(932) at 2", "Update TextElement: .(777) to  or ", "Insert TagElement: @code(927) into TagElement: @param(932) at 4", "Insert TextElement:  if this transition(928) into TagElement: @param(932) at 5", "Insert TextElement: uses a (929) into TagElement: @param(932) at 6", "Insert TagElement: @code(931) into TagElement: @param(932) at 7", "Insert SimpleName: Nullable(940) into MarkerAnnotation(941) at 0", "Update TextElement: .(810) to  or ", "Insert TagElement: @code(968) into TagElement: @param(973) at 4", "Insert TextElement:  if this transition(969) into TagElement: @param(973) at 5", "Insert TextElement: uses a (970) into TagElement: @param(973) at 6", "Insert TagElement: @code(972) into TagElement: @param(973) at 7", "Insert SimpleName: Nullable(991) into MarkerAnnotation(992) at 0", "Move TagElement: @code(776) into TagElement: @param(1020) at 2", "Update TextElement: .(849) to  or ", "Insert TagElement: @code(1015) into TagElement: @param(1020) at 4", "Insert TextElement:  if this transition(1016) into TagElement: @param(1020) at 5", "Insert TextElement: uses a (1017) into TagElement: @param(1020) at 6", "Insert TagElement: @code(1019) into TagElement: @param(1020) at 7", "Insert SimpleName: Nullable(1031) into MarkerAnnotation(1032) at 0", "Insert MethodInvocation(1064) into ReturnStatement(1065) at 0", "Insert SimpleType: Transition(1087) into ClassInstanceCreation(1110) at 0", "Insert SimpleName: literal(1088) into ClassInstanceCreation(1110) at 1", "Insert AnonymousClassDeclaration(1109) into ClassInstanceCreation(1110) at 2", "Update SimpleName: regex(993) to literal", "Insert SimpleName: Transition(1314) into SimpleType: Transition(1315) at 0", "Insert MethodDeclaration(1332) into AnonymousClassDeclaration(1333) at 0", "Insert SimpleName: Pattern(1466) into MethodInvocation(1469) at 0", "Insert SimpleName: compile(1467) into MethodInvocation(1469) at 1", "Insert StringLiteral: \"([:./&?=#])|\\\\z\"(1468) into MethodInvocation(1469) at 2", "Insert SimpleName: Pattern(1569) into MethodInvocation(1572) at 0", "Insert SimpleName: compile(1570) into MethodInvocation(1572) at 1", "Insert StringLiteral: \"(?i)^(javascript|data|blob|filesystem):\"(1571) into MethodInvocation(1572) at 2", "Update SimpleName: regex(1460) to literal", "Insert InfixExpression: !=(563) into IfStatement(748) at 0", "Move Block(641) into IfStatement(748) at 1", "Insert IfStatement(747) into IfStatement(748) at 2", "Insert FieldAccess(872) into Assignment: =(874) at 0", "Insert NullLiteral(873) into Assignment: =(874) at 1", "Insert FieldAccess(885) into Assignment: =(887) at 0", "Insert NullLiteral(886) into Assignment: =(887) at 1", "Insert FieldAccess(891) into Assignment: =(893) at 0", "Insert SimpleName: literal(892) into Assignment: =(893) at 1", "Insert FieldAccess(900) into Assignment: =(902) at 0", "Insert NullLiteral(901) into Assignment: =(902) at 1", "Insert FieldAccess(906) into Assignment: =(908) at 0", "Insert NullLiteral(907) into Assignment: =(908) at 1", "Insert TextElement:  null(926) into TagElement: @code(927) at 0", "Insert TextElement:  literal(930) into TagElement: @code(931) at 0", "Insert TextElement:  null(967) into TagElement: @code(968) at 0", "Insert TextElement:  literal(971) into TagElement: @code(972) at 0", "Insert TextElement:  null(1014) into TagElement: @code(1015) at 0", "Insert TextElement:  literal(1018) into TagElement: @code(1019) at 0", "Insert MethodInvocation(1062) into MethodInvocation(1064) at 0", "Insert SimpleName: toString(1063) into MethodInvocation(1064) at 1", "Insert SimpleName: Transition(1086) into SimpleType: Transition(1087) at 0", "Insert MethodDeclaration(1108) into AnonymousClassDeclaration(1109) at 0", "Insert MarkerAnnotation(1317) into MethodDeclaration(1332) at 0", "Insert SimpleType: Context(1319) into MethodDeclaration(1332) at 1", "Insert SimpleName: computeNextContext(1320) into MethodDeclaration(1332) at 2", "Insert SingleVariableDeclaration(1324) into MethodDeclaration(1332) at 3", "Move SingleVariableDeclaration(789) into MethodDeclaration(1332) at 4", "Insert Block(1331) into MethodDeclaration(1332) at 5", "Insert QualifiedName: transition.pattern(561) into InfixExpression: !=(563) at 0", "Insert NullLiteral(562) into InfixExpression: !=(563) at 1", "Insert InfixExpression: !=(651) into IfStatement(747) at 0", "Insert Block(712) into IfStatement(747) at 1", "Insert Block(746) into IfStatement(747) at 2", "Insert ThisExpression(870) into FieldAccess(872) at 0", "Insert SimpleName: literal(871) into FieldAccess(872) at 1", "Insert ThisExpression(883) into FieldAccess(885) at 0", "Insert SimpleName: pattern(884) into FieldAccess(885) at 1", "Insert ThisExpression(889) into FieldAccess(891) at 0", "Insert SimpleName: literal(890) into FieldAccess(891) at 1", "Insert ThisExpression(898) into FieldAccess(900) at 0", "Insert SimpleName: pattern(899) into FieldAccess(900) at 1", "Insert ThisExpression(904) into FieldAccess(906) at 0", "Insert SimpleName: literal(905) into FieldAccess(906) at 1", "Insert MethodInvocation(1060) into MethodInvocation(1062) at 0", "Insert SimpleName: omitNullValues(1061) into MethodInvocation(1062) at 1", "Insert MarkerAnnotation(1090) into MethodDeclaration(1108) at 0", "Insert SimpleType: Context(1092) into MethodDeclaration(1108) at 1", "Insert SimpleName: computeNextContext(1093) into MethodDeclaration(1108) at 2", "Insert SingleVariableDeclaration(1097) into MethodDeclaration(1108) at 3", "Move SingleVariableDeclaration(864) into MethodDeclaration(1108) at 4", "Insert Block(1107) into MethodDeclaration(1108) at 5", "Insert SimpleName: Override(1316) into MarkerAnnotation(1317) at 0", "Insert SimpleName: Context(1318) into SimpleType: Context(1319) at 0", "Insert SimpleType: Context(1322) into SingleVariableDeclaration(1324) at 0", "Insert SimpleName: prior(1323) into SingleVariableDeclaration(1324) at 1", "Insert ReturnStatement(1330) into Block(1331) at 0", "Insert QualifiedName: transition.literal(649) into InfixExpression: !=(651) at 0", "Insert NullLiteral(650) into InfixExpression: !=(651) at 1", "Insert VariableDeclarationStatement(656) into Block(712) at 0", "Insert VariableDeclarationStatement(660) into Block(712) at 1", "Insert VariableDeclarationStatement(666) into Block(712) at 2", "Insert WhileStatement(711) into Block(712) at 3", "Insert IfStatement(745) into Block(746) at 0", "Insert MethodInvocation(1056) into MethodInvocation(1060) at 0", "Insert SimpleName: add(1057) into MethodInvocation(1060) at 1", "Insert StringLiteral: \"literal\"(1058) into MethodInvocation(1060) at 2", "Insert SimpleName: literal(1059) into MethodInvocation(1060) at 3", "Insert SimpleName: Override(1089) into MarkerAnnotation(1090) at 0", "Insert SimpleName: Context(1091) into SimpleType: Context(1092) at 0", "Insert SimpleType: Context(1095) into SingleVariableDeclaration(1097) at 0", "Insert SimpleName: prior(1096) into SingleVariableDeclaration(1097) at 1", "Insert ReturnStatement(1106) into Block(1107) at 0", "Insert SimpleName: Context(1321) into SimpleType: Context(1322) at 0", "Insert SimpleName: prior(1329) into ReturnStatement(1330) at 0", "Insert PrimitiveType: int(652) into VariableDeclarationStatement(656) at 0", "Insert VariableDeclarationFragment(655) into VariableDeclarationStatement(656) at 1", "Insert PrimitiveType: int(657) into VariableDeclarationStatement(660) at 0", "Insert VariableDeclarationFragment(659) into VariableDeclarationStatement(660) at 1", "Move SimpleType: String(753) into VariableDeclarationStatement(666) at 0", "Insert VariableDeclarationFragment(665) into VariableDeclarationStatement(666) at 1", "Insert InfixExpression: &&(681) into WhileStatement(711) at 0", "Insert Block(710) into WhileStatement(711) at 1", "Insert InfixExpression: &&(723) into IfStatement(745) at 0", "Insert Block(744) into IfStatement(745) at 1", "Insert MethodInvocation(1052) into MethodInvocation(1056) at 0", "Insert SimpleName: add(1053) into MethodInvocation(1056) at 1", "Insert StringLiteral: \"pattern\"(1054) into MethodInvocation(1056) at 2", "Insert SimpleName: pattern(1055) into MethodInvocation(1056) at 3", "Insert SimpleName: Context(1094) into SimpleType: Context(1095) at 0", "Insert MethodInvocation(1105) into ReturnStatement(1106) at 0", "Insert MethodInvocation(2363) into MethodInvocation(2364) at 3", "Insert SimpleName: start(653) into VariableDeclarationFragment(655) at 0", "Insert NumberLiteral: 0(654) into VariableDeclarationFragment(655) at 1", "Insert SimpleName: index(658) into VariableDeclarationFragment(659) at 0", "Insert SimpleName: needle(663) into VariableDeclarationFragment(665) at 0", "Insert QualifiedName: transition.literal(664) into VariableDeclarationFragment(665) at 1", "Insert InfixExpression: !=(677) into InfixExpression: &&(681) at 0", "Insert InfixExpression: <(680) into InfixExpression: &&(681) at 1", "Insert IfStatement(709) into Block(710) at 0", "Insert InfixExpression: <(717) into InfixExpression: &&(723) at 0", "Insert MethodInvocation(722) into InfixExpression: &&(723) at 1", "Insert ExpressionStatement(729) into Block(744) at 0", "Insert ExpressionStatement(735) into Block(744) at 1", "Insert ExpressionStatement(739) into Block(744) at 2", "Insert ExpressionStatement(743) into Block(744) at 3", "Insert SimpleName: MoreObjects(1049) into MethodInvocation(1052) at 0", "Insert SimpleName: toStringHelper(1050) into MethodInvocation(1052) at 1", "Insert ThisExpression(1051) into MethodInvocation(1052) at 2", "Insert SimpleName: prior(1102) into MethodInvocation(1105) at 0", "Insert SimpleName: transitionToState(1103) into MethodInvocation(1105) at 1", "Insert SimpleName: state(1104) into MethodInvocation(1105) at 2", "Insert SimpleName: makeTransitionToSelf(2341) into MethodInvocation(2363) at 0", "Move MethodInvocation(2060) into MethodInvocation(2363) at 1", "Insert ParenthesizedExpression(674) into InfixExpression: !=(677) at 0", "Insert PrefixExpression: -(676) into InfixExpression: !=(677) at 1", "Insert SimpleName: index(678) into InfixExpression: <(680) at 0", "Insert SimpleName: earliestStart(679) into InfixExpression: <(680) at 1", "Insert MethodInvocation(686) into IfStatement(709) at 0", "Insert Block(708) into IfStatement(709) at 1", "Insert MethodInvocation(715) into InfixExpression: <(717) at 0", "Insert SimpleName: earliestStart(716) into InfixExpression: <(717) at 1", "Insert SimpleName: transition(718) into MethodInvocation(722) at 0", "Insert SimpleName: isApplicableTo(719) into MethodInvocation(722) at 1", "Insert SimpleName: context(720) into MethodInvocation(722) at 2", "Insert NullLiteral(721) into MethodInvocation(722) at 3", "Insert Assignment: =(728) into ExpressionStatement(729) at 0", "Insert Assignment: =(734) into ExpressionStatement(735) at 0", "Insert Assignment: =(738) into ExpressionStatement(739) at 0", "Insert Assignment: =(742) into ExpressionStatement(743) at 0", "Insert MethodInvocation(2277) into MethodInvocation(2278) at 3", "Insert StringLiteral: \"`\"(2286) into ClassInstanceCreation(2320) at 1", "Insert MethodInvocation(2325) into MethodInvocation(2326) at 1", "Update SimpleName: makeTransitionToState(2024) to makeTransitionToStateLiteral", "Move StringLiteral: \"${\"(2027) into MethodInvocation(2330) at 1", "Update SimpleName: makeTransitionToSelf(2041) to Pattern", "Insert SimpleName: compile(2343) into MethodInvocation(2362) at 1", "Insert Assignment: =(673) into ParenthesizedExpression(674) at 0", "Insert NumberLiteral: 1(675) into PrefixExpression: -(676) at 0", "Insert SimpleName: transition(682) into MethodInvocation(686) at 0", "Insert SimpleName: isApplicableTo(683) into MethodInvocation(686) at 1", "Insert SimpleName: context(684) into MethodInvocation(686) at 2", "Insert NullLiteral(685) into MethodInvocation(686) at 3", "Insert ExpressionStatement(690) into Block(708) at 0", "Insert ExpressionStatement(698) into Block(708) at 1", "Insert ExpressionStatement(702) into Block(708) at 2", "Insert ExpressionStatement(706) into Block(708) at 3", "Insert BreakStatement(707) into Block(708) at 4", "Insert SimpleName: text(713) into MethodInvocation(715) at 0", "Insert SimpleName: length(714) into MethodInvocation(715) at 1", "Insert SimpleName: earliestStart(724) into Assignment: =(728) at 0", "Insert MethodInvocation(727) into Assignment: =(728) at 1", "Insert SimpleName: earliestEnd(730) into Assignment: =(734) at 0", "Insert MethodInvocation(733) into Assignment: =(734) at 1", "Insert SimpleName: earliestTransition(736) into Assignment: =(738) at 0", "Insert SimpleName: transition(737) into Assignment: =(738) at 1", "Insert NullLiteral(741) into Assignment: =(742) at 1", "Insert MethodInvocation(2252) into MethodInvocation(2253) at 3", "Insert SimpleName: makeTransitionToSelf(2262) into MethodInvocation(2277) at 0", "Move MethodInvocation(1974) into MethodInvocation(2277) at 1", "Insert SimpleName: Pattern(2322) into MethodInvocation(2325) at 0", "Insert SimpleName: compile(2323) into MethodInvocation(2325) at 1", "Move StringLiteral: \"\\\\\\\\[$`]\"(2022) into MethodInvocation(2325) at 2", "Insert SimpleName: index(667) into Assignment: =(673) at 0", "Insert MethodInvocation(672) into Assignment: =(673) at 1", "Insert Assignment: =(689) into ExpressionStatement(690) at 0", "Insert Assignment: =(697) into ExpressionStatement(698) at 0", "Insert Assignment: =(701) into ExpressionStatement(702) at 0", "Insert Assignment: =(705) into ExpressionStatement(706) at 0", "Insert SimpleName: text(725) into MethodInvocation(727) at 0", "Insert SimpleName: length(726) into MethodInvocation(727) at 1", "Insert SimpleName: text(731) into MethodInvocation(733) at 0", "Insert SimpleName: length(732) into MethodInvocation(733) at 1", "Insert MethodInvocation(2226) into MethodInvocation(2228) at 2", "Insert SimpleName: makeTransitionToSelf(2237) into MethodInvocation(2252) at 0", "Move MethodInvocation(1952) into MethodInvocation(2252) at 1", "Update SimpleName: makeTransitionToSelf(1962) to Pattern", "Insert SimpleName: compile(2264) into MethodInvocation(2276) at 1", "Insert SimpleName: text(668) into MethodInvocation(672) at 0", "Insert SimpleName: indexOf(669) into MethodInvocation(672) at 1", "Insert SimpleName: needle(670) into MethodInvocation(672) at 2", "Insert SimpleName: start(671) into MethodInvocation(672) at 3", "Insert SimpleName: earliestStart(687) into Assignment: =(689) at 0", "Insert SimpleName: index(688) into Assignment: =(689) at 1", "Insert SimpleName: earliestEnd(691) into Assignment: =(697) at 0", "Insert InfixExpression: +(696) into Assignment: =(697) at 1", "Insert SimpleName: earliestTransition(699) into Assignment: =(701) at 0", "Insert SimpleName: transition(700) into Assignment: =(701) at 1", "Insert NullLiteral(704) into Assignment: =(705) at 1", "Insert SimpleName: makeTransitionToState(2217) into MethodInvocation(2226) at 0", "Move MethodInvocation(1929) into MethodInvocation(2226) at 1", "Insert QualifiedName: HtmlContext.JS(2225) into MethodInvocation(2226) at 2", "Update SimpleName: makeTransitionToSelf(1940) to Pattern", "Insert SimpleName: compile(2239) into MethodInvocation(2251) at 1", "Insert SimpleName: index(692) into InfixExpression: +(696) at 0", "Insert MethodInvocation(695) into InfixExpression: +(696) at 1", "Update SimpleName: makeTransitionToState(1912) to makeTransitionToStateLiteral", "Update StringLiteral: \"\\\\*/\"(1913) to \"*/\"", "Insert SimpleName: Pattern(2218) into MethodInvocation(2224) at 0", "Update SimpleName: makeTransitionToState(1923) to compile", "Insert SimpleName: needle(693) into MethodInvocation(695) at 0", "Insert SimpleName: length(694) into MethodInvocation(695) at 1", "Update SimpleName: makeTransitionToState(1691) to makeTransitionToStateLiteral", "Update StringLiteral: \"/\\\\*\"(1692) to \"/*\"", "Update SimpleName: makeTransitionToState(1695) to makeTransitionToStateLiteral", "Update SimpleName: makeTransitionToJsString(1699) to makeTransitionToJsStringLiteral", "Update SimpleName: makeTransitionToJsString(1703) to makeTransitionToJsStringLiteral", "Insert StringLiteral: \"`\"(2008) into ClassInstanceCreation(2039) at 1", "Insert StringLiteral: \"}\"(2042) into ClassInstanceCreation(2075) at 1", "Insert MethodInvocation(2163) into ClassInstanceCreation(2193) at 1", "Insert MethodInvocation(2198) into MethodInvocation(2199) at 1", "Update SimpleName: makeTransitionToState(1672) to makeTransitionToStateLiteral", "Insert MethodInvocation(1975) into MethodInvocation(1976) at 1", "Insert MethodInvocation(1981) into MethodInvocation(1983) at 1", "Insert SimpleName: Pattern(2160) into MethodInvocation(2163) at 0", "Insert SimpleName: compile(2161) into MethodInvocation(2163) at 1", "Insert StringLiteral: \"[^/\\\"'}`\\\\s\\\\\\\\]+\"(2162) into MethodInvocation(2163) at 2", "Insert SimpleName: Pattern(2195) into MethodInvocation(2198) at 0", "Insert SimpleName: compile(2196) into MethodInvocation(2198) at 1", "Move StringLiteral: \"\\\\s+\"(1904) into MethodInvocation(2198) at 2", "Update SimpleName: makeTransitionToState(1653) to makeTransitionToStateLiteral", "Insert MethodInvocation(1950) into MethodInvocation(1951) at 1", "Insert MethodInvocation(1956) into MethodInvocation(1958) at 1", "Insert SimpleName: Pattern(1972) into MethodInvocation(1975) at 0", "Insert SimpleName: compile(1973) into MethodInvocation(1975) at 1", "Move StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f\\\"])\"(1679) into MethodInvocation(1975) at 2", "Insert SimpleName: Pattern(1978) into MethodInvocation(1981) at 0", "Insert SimpleName: compile(1979) into MethodInvocation(1981) at 1", "Move StringLiteral: \"[\\n\\r\\f]\"(1682) into MethodInvocation(1981) at 2", "Insert MethodInvocation(1922) into MethodInvocation(1924) at 1", "Insert MethodInvocation(1931) into MethodInvocation(1933) at 1", "Insert SimpleName: Pattern(1947) into MethodInvocation(1950) at 0", "Insert SimpleName: compile(1948) into MethodInvocation(1950) at 1", "Move StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f'])\"(1660) into MethodInvocation(1950) at 2", "Insert SimpleName: Pattern(1953) into MethodInvocation(1956) at 0", "Insert SimpleName: compile(1954) into MethodInvocation(1956) at 1", "Move StringLiteral: \"[\\n\\r\\f]\"(1663) into MethodInvocation(1956) at 2", "Update SimpleName: makeTransitionToState(1619) to makeTransitionToStateLiteral", "Insert MethodInvocation(1902) into MethodInvocation(1903) at 1", "Insert MethodInvocation(1908) into MethodInvocation(1910) at 1", "Insert SimpleName: Pattern(1919) into MethodInvocation(1922) at 0", "Insert SimpleName: compile(1920) into MethodInvocation(1922) at 1", "Move StringLiteral: \"[\\\\)\\\\s]\"(1638) into MethodInvocation(1922) at 2", "Insert SimpleName: Pattern(1928) into MethodInvocation(1931) at 0", "Insert SimpleName: compile(1929) into MethodInvocation(1931) at 1", "Move StringLiteral: \"[\\\"']\"(1644) into MethodInvocation(1931) at 2", "Update SimpleName: makeTransitionToState(1601) to makeTransitionToStateLiteral", "Insert MethodInvocation(1878) into MethodInvocation(1879) at 1", "Insert MethodInvocation(1884) into MethodInvocation(1886) at 1", "Insert SimpleName: Pattern(1899) into MethodInvocation(1902) at 0", "Insert SimpleName: compile(1900) into MethodInvocation(1902) at 1", "Move StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f'])\"(1624) into MethodInvocation(1902) at 2", "Insert SimpleName: Pattern(1905) into MethodInvocation(1908) at 0", "Insert SimpleName: compile(1906) into MethodInvocation(1908) at 1", "Move StringLiteral: \"[\\n\\r\\f]\"(1627) into MethodInvocation(1908) at 2", "Update SimpleType: StringBuffer(1837) to RawTextNode", "Insert MethodInvocation(1844) into MethodInvocation(1853) at 5", "Update SimpleName: makeTransitionToState(1590) to makeTransitionToStateLiteral", "Update StringLiteral: \"\\\\*/\"(1591) to \"*/\"", "Insert SimpleName: Pattern(1875) into MethodInvocation(1878) at 0", "Insert SimpleName: compile(1876) into MethodInvocation(1878) at 1", "Move StringLiteral: \"\\\\\\\\(?:\\r\\n?|[\\n\\f\\\"])\"(1606) into MethodInvocation(1878) at 2", "Insert SimpleName: Pattern(1881) into MethodInvocation(1884) at 0", "Insert SimpleName: compile(1882) into MethodInvocation(1884) at 1", "Move StringLiteral: \"[\\n\\r\\f]\"(1609) into MethodInvocation(1884) at 2", "Update SimpleName: StringBuffer(1836) to RawTextNode", "Insert SimpleName: suffixNode(2131) into VariableDeclarationFragment(2137) at 0", "Move MethodInvocation(1862) into VariableDeclarationFragment(2137) at 1", "Insert SimpleName: suffixNode(2150) into MethodInvocation(2151) at 3", "Update SimpleName: makeTransitionToState(1559) to makeTransitionToStateLiteral", "Update StringLiteral: \"/\\\\*\"(1560) to \"/*\"", "Update SimpleName: makeTransitionToState(1563) to makeTransitionToStateLiteral", "Update SimpleName: makeTransitionToState(1567) to makeTransitionToStateLiteral", "Insert SimpleName: makeCssUriTransition(1834) into MethodInvocation(1844) at 0", "Move MethodInvocation(1578) into MethodInvocation(1844) at 1", "Insert QualifiedName: UriType.MEDIA(1843) into MethodInvocation(1844) at 2", "Insert MethodInvocation(1849) into MethodInvocation(1851) at 1", "Insert MethodInvocation(2147) into InfixExpression: +(2149) at 1", "Update SimpleName: makeCssUriTransition(1571) to Pattern", "Insert SimpleName: compile(1836) into MethodInvocation(1842) at 1", "Insert SimpleName: Pattern(1846) into MethodInvocation(1849) at 0", "Insert SimpleName: compile(1847) into MethodInvocation(1849) at 1", "Move StringLiteral: \"(?i)\\\\burl\\\\s*\\\\(\\\\s*(['\\\"]?)\"(1580) into MethodInvocation(1849) at 2", "Insert SimpleName: suffixNode(2145) into MethodInvocation(2147) at 0", "Insert SimpleName: getRawText(2146) into MethodInvocation(2147) at 1", "Delete SimpleName: Pattern(756)", "Delete SimpleName: compile(757)", "Delete SimpleName: regex(758)", "Delete QualifiedName: Pattern.DOTALL(759)", "Delete MethodInvocation(760)", "Delete ConstructorInvocation(761)", "Delete SimpleName: Transition(751)", "Delete SimpleName: regex(754)", "Delete SingleVariableDeclaration(755)", "Delete MethodDeclaration(763)", "Delete SimpleName: regex(984)", "Delete SimpleName: makeTransitionToSelf(1075)", "Delete StringLiteral: \"\\\\z\"(1076)", "Delete MethodInvocation(1077)", "Delete StringLiteral: \"([:./&?=#])|\\\\z\"(1209)", "Delete StringLiteral: \"(?i)^(javascript|data|blob|filesystem):\"(1309)", "Delete QualifiedName: UriType.MEDIA(1577)", "Delete SimpleName: Pattern(1709)", "Delete SimpleName: quote(1710)", "Delete StringLiteral: \"`\"(1711)", "Delete MethodInvocation(1712)", "Delete SimpleName: Pattern(1746)", "Delete SimpleName: quote(1747)", "Delete StringLiteral: \"}\"(1748)", "Delete MethodInvocation(1749)", "Delete SimpleName: rest(1838)", "Delete SimpleName: StringBuffer(1839)", "Delete SimpleType: StringBuffer(1840)", "Delete ClassInstanceCreation(1841)", "Delete SimpleName: matcher(1844)", "Delete SimpleName: appendTail(1845)", "Delete SimpleName: rest(1846)", "Delete MethodInvocation(1847)", "Delete ExpressionStatement(1848)", "Delete SimpleName: rest(1855)", "Delete StringLiteral: \"[^/\\\"'}`\\\\s\\\\\\\\]+\"(1872)", "Delete QualifiedName: HtmlContext.JS(1928)", "Delete SimpleName: Pattern(1983)", "Delete SimpleName: quote(1984)", "Delete StringLiteral: \"`\"(1985)", "Delete MethodInvocation(1986)", "Delete SimpleName: Pattern(2025)", "Delete SimpleName: quote(2026)", "Delete MethodInvocation(2028)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}