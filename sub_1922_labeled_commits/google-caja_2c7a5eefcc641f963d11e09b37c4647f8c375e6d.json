{"application": "google-caja", "csha": "2c7a5eefcc641f963d11e09b37c4647f8c375e6d", "files": [{"DefaultCajaRewriter_cluster": {"actions": [{"root": "INS ClassInstanceCreation to ArrayInitializer at 76", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: List<ParseTreeNode> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: vals to MethodInvocation at 0", "INS SimpleName: i to MethodInvocation at 2", "INS ParameterizedType: ArrayList<ParseTreeNode> to ClassInstanceCreation at 0", "INS SimpleName: items to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS WildcardType: ? extends ParseTreeNode to ParameterizedType: List<? extends ParseTreeNode> at 1", "INS SimpleName: vals to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<ParseTreeNode> at 0", "INS SimpleType: ParseTreeNode to ParameterizedType: ArrayList<ParseTreeNode> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: keys to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: List to ParameterizedType: List<ParseTreeNode> at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: add to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Block to IfStatement at 1", "INS Block to ForStatement at 3", "INS ClassInstanceCreation to ArrayInitializer at 76", "INS Block to MethodDeclaration at 8", "INS IfStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ForStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: i to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS InfixExpression: < to ForStatement at 1", "INS MethodInvocation to InfixExpression: < at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS SimpleName: children to MethodInvocation at 1", "INS SimpleName: items to VariableDeclarationFragment at 0", "INS SimpleType: ParseTreeNode to WildcardType: ? extends ParseTreeNode at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS ParameterizedType: List<? extends ParseTreeNode> to VariableDeclarationStatement at 0", "INS SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Rule to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV NormalAnnotation to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: ParseTreeNode to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 2", "MOV SimpleType: ParseTreeNode to ParameterizedType: List<ParseTreeNode> at 1", "MOV SimpleName: fire to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from \"({@keys*: @vals*})\" to \"___.initializeMap([@items*]) where items are interleaved keys and vals\"", "operations": ["UPD StringLiteral: \"({@keys*: @vals*})\" from \"({@keys*: @vals*})\" to \"___.initializeMap([@items*]) where items are interleaved keys and vals\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 4"]}, {"root": "UPDATE from Map<String,ParseTreeNode> to List<? extends ParseTreeNode>", "operations": ["UPD ParameterizedType: Map<String,ParseTreeNode> from Map<String,ParseTreeNode> to List<? extends ParseTreeNode>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,ParseTreeNode> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Map to List", "operations": ["UPD SimpleName: Map from Map to List", "UPD SimpleName: LinkedHashMap from LinkedHashMap to List", "UPD SimpleType: Map from Map to List", "UPD SimpleType: LinkedHashMap from LinkedHashMap to List", "UPD SimpleName: ParseTreeNode from ParseTreeNode to List"]}, {"root": "INS WildcardType: ? extends ParseTreeNode to ParameterizedType: Map<String,ParseTreeNode> at 1", "operations": ["INS SimpleType: ParseTreeNode to WildcardType: ? extends ParseTreeNode at 0", "INS WildcardType: ? extends ParseTreeNode to ParameterizedType: Map<String,ParseTreeNode> at 1"]}, {"root": "UPDATE from substV to keys", "operations": ["UPD SimpleName: substV from substV to keys", "UPD SimpleName: bindings from bindings to keys"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: bindings to VariableDeclarationFragment at 0"]}, {"root": "MOVE from ParameterizedType: List<? extends ParseTreeNode>", "operations": ["MOV SimpleType: LinkedHashMap to ParameterizedType: List<? extends ParseTreeNode> at 0"]}, {"root": "UPDATE from \"___.initializeMap({ @keys*: @vals* })\" to \"___.initializeMap([ @items* ])\"", "operations": ["UPD StringLiteral: \"___.initializeMap({ @keys*: @vals* })\" from \"___.initializeMap({ @keys*: @vals* })\" to \"___.initializeMap([ @items* ])\""]}, {"root": "UPDATE from \"keys\" to \"items\"", "operations": ["UPD StringLiteral: \"keys\" from \"keys\" to \"items\""]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 3", "operations": ["INS SimpleName: ParseTreeNodeContainer to SimpleType: ParseTreeNodeContainer at 0", "INS SimpleName: items to ClassInstanceCreation at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: ParseTreeNodeContainer to ClassInstanceCreation at 0"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: ParseTreeNode to SimpleType: List at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from QuasiBuilder to children", "operations": ["UPD SimpleName: QuasiBuilder from QuasiBuilder to children"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: bindings to MethodInvocation at 0", "MOV SimpleName: node to MethodInvocation at 1", "MOV SimpleName: QuasiBuilder to MethodInvocation at 1"]}, {"root": "UPDATE from node to size", "operations": ["UPD SimpleName: node from node to size"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: ParseTreeNode to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: ParseTreeNode to SimpleType: ParseTreeNode at 0"]}, {"root": "UPDATE from bindings to items", "operations": ["UPD SimpleName: bindings from bindings to items"]}, {"root": "UPDATE from Scope to ArrayList", "operations": ["UPD SimpleName: Scope from Scope to ArrayList"]}, {"root": "MOVE from SimpleType: ArrayList", "operations": ["MOV SimpleName: Scope to SimpleType: ArrayList at 0"]}, {"root": "UPDATE from MessageQueue to ParseTreeNode", "operations": ["UPD SimpleName: MessageQueue from MessageQueue to ParseTreeNode"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: MessageQueue to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: substV to MethodInvocation at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MemberValuePair", "DEL SimpleName: match", "DEL SingleVariableDeclaration", "DEL SimpleType: ParseTreeNode", "DEL StringLiteral: \"({})\"", "DEL SimpleName: mq", "DEL VariableDeclarationStatement", "DEL SimpleName: name", "DEL ReturnStatement", "DEL Block", "DEL SimpleType: String", "DEL MarkerAnnotation", "DEL SimpleName: synopsis", "DEL StringLiteral: \"mapEmpty\"", "DEL SimpleName: RuleDescription", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: NONE", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"\"", "DEL SimpleName: node", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"___.initializeMap({})\"", "DEL SimpleType: Scope", "DEL SimpleName: Rule", "DEL SimpleType: Rule", "DEL SimpleName: matches", "DEL SimpleType: MessageQueue", "DEL AnonymousClassDeclaration", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: Override", "DEL StringLiteral: \"___.initializeMap({})\"", "DEL StringLiteral: \"({})\"", "DEL SimpleName: scope", "DEL ReturnStatement", "DEL ParameterizedType: LinkedHashMap<String,ParseTreeNode>", "DEL NormalAnnotation", "DEL MethodDeclaration", "DEL MemberValuePair", "DEL MemberValuePair", "DEL IfStatement", "DEL MemberValuePair", "DEL SimpleName: reason", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: substitutes", "DEL StringLiteral: \"\"", "DEL MemberValuePair", "DEL SimpleType: ParseTreeNode"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL SimpleType: ParseTreeNode", "operations": ["DEL SimpleType: ParseTreeNode"]}, {"root": "DEL StringLiteral: \"vals\"", "operations": ["DEL StringLiteral: \"vals\""]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL IfStatement", "DEL Block", "DEL SimpleName: fire", "DEL Modifier: public", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL ClassInstanceCreation", "DEL Block"]}]}}, {"DefaultCajaRewriter_diff": {"operations": ["Insert ClassInstanceCreation(9134) into ArrayInitializer(9990) at 75", "Move SimpleType: Rule(9053) into ClassInstanceCreation(9134) at 0", "Insert AnonymousClassDeclaration(9133) into ClassInstanceCreation(9134) at 1", "Insert MethodDeclaration(9132) into AnonymousClassDeclaration(9133) at 0", "Move MarkerAnnotation(9055) into MethodDeclaration(9132) at 0", "Move NormalAnnotation(9072) into MethodDeclaration(9132) at 1", "Move Modifier: public(8822) into MethodDeclaration(9132) at 2", "Move SimpleType: ParseTreeNode(9075) into MethodDeclaration(9132) at 3", "Move SimpleName: fire(8825) into MethodDeclaration(9132) at 4", "Move SingleVariableDeclaration(9080) into MethodDeclaration(9132) at 5", "Move SingleVariableDeclaration(9084) into MethodDeclaration(9132) at 6", "Move SingleVariableDeclaration(9088) into MethodDeclaration(9132) at 7", "Insert Block(9131) into MethodDeclaration(9132) at 8", "Move VariableDeclarationStatement(9106) into Block(9131) at 0", "Insert IfStatement(9128) into Block(9131) at 1", "Move ReturnStatement(9134) into Block(9131) at 2", "Update StringLiteral: \"({@keys*: @vals*})\"(9070) to \"___.initializeMap([@items*]) where items are interleaved keys and vals\"", "Move MethodInvocation(9112) into IfStatement(9128) at 0", "Insert Block(9127) into IfStatement(9128) at 1", "Insert VariableDeclarationStatement(9053) into Block(9127) at 0", "Insert VariableDeclarationStatement(9068) into Block(9127) at 1", "Insert VariableDeclarationStatement(9087) into Block(9127) at 2", "Insert ForStatement(9117) into Block(9127) at 3", "Move ReturnStatement(9130) into Block(9127) at 4", "Insert ParameterizedType: List<ParseTreeNode>(9044) into VariableDeclarationStatement(9053) at 0", "Insert VariableDeclarationFragment(9052) into VariableDeclarationStatement(9053) at 1", "Update ParameterizedType: Map<String,ParseTreeNode>(8844) to List<? extends ParseTreeNode>", "Move ParameterizedType: Map<String,ParseTreeNode>(8844) into VariableDeclarationStatement(9068) at 0", "Insert VariableDeclarationFragment(9067) into VariableDeclarationStatement(9068) at 1", "Insert ParameterizedType: List<? extends ParseTreeNode>(9074) into VariableDeclarationStatement(9087) at 0", "Insert VariableDeclarationFragment(9086) into VariableDeclarationStatement(9087) at 1", "Insert VariableDeclarationExpression(9092) into ForStatement(9117) at 0", "Insert InfixExpression: <(9097) into ForStatement(9117) at 1", "Insert PrefixExpression: ++(9099) into ForStatement(9117) at 2", "Insert Block(9116) into ForStatement(9117) at 3", "Insert SimpleType: List(9041) into ParameterizedType: List<ParseTreeNode>(9044) at 0", "Move SimpleType: ParseTreeNode(8824) into ParameterizedType: List<ParseTreeNode>(9044) at 1", "Insert SimpleName: items(9045) into VariableDeclarationFragment(9052) at 0", "Insert ClassInstanceCreation(9051) into VariableDeclarationFragment(9052) at 1", "Update SimpleType: Map(8839) to List", "Insert WildcardType: ? extends ParseTreeNode(9058) into ParameterizedType: List<? extends ParseTreeNode>(9059) at 1", "Update SimpleName: bindings(8845) to keys", "Move SimpleName: bindings(8845) into VariableDeclarationFragment(9067) at 0", "Insert MethodInvocation(9066) into VariableDeclarationFragment(9067) at 1", "Update SimpleType: LinkedHashMap(8847) to List", "Move SimpleType: LinkedHashMap(8847) into ParameterizedType: List<? extends ParseTreeNode>(9074) at 0", "Insert WildcardType: ? extends ParseTreeNode(9073) into ParameterizedType: List<? extends ParseTreeNode>(9074) at 1", "Insert SimpleName: vals(9075) into VariableDeclarationFragment(9086) at 0", "Insert MethodInvocation(9085) into VariableDeclarationFragment(9086) at 1", "Insert PrimitiveType: int(9088) into VariableDeclarationExpression(9092) at 0", "Insert VariableDeclarationFragment(9091) into VariableDeclarationExpression(9092) at 1", "Insert SimpleName: i(9093) into InfixExpression: <(9097) at 0", "Insert MethodInvocation(9096) into InfixExpression: <(9097) at 1", "Insert SimpleName: i(9098) into PrefixExpression: ++(9099) at 0", "Insert ExpressionStatement(9107) into Block(9116) at 0", "Insert ExpressionStatement(9115) into Block(9116) at 1", "Update StringLiteral: \"___.initializeMap({ @keys*: @vals* })\"(9114) to \"___.initializeMap([ @items* ])\"", "Update StringLiteral: \"keys\"(9115) to \"items\"", "Insert ClassInstanceCreation(9124) into MethodInvocation(9125) at 3", "Update SimpleName: ParseTreeNode(8826) to List", "Move SimpleName: ParseTreeNode(8826) into SimpleType: List(9041) at 0", "Insert ParameterizedType: ArrayList<ParseTreeNode>(9050) into ClassInstanceCreation(9051) at 0", "Update SimpleName: Map(8838) to List", "Insert SimpleType: ParseTreeNode(9057) into WildcardType: ? extends ParseTreeNode(9058) at 0", "Move MethodInvocation(9119) into MethodInvocation(9066) at 0", "Insert SimpleName: children(9065) into MethodInvocation(9066) at 1", "Update SimpleName: LinkedHashMap(8846) to List", "Insert SimpleType: ParseTreeNode(9072) into WildcardType: ? extends ParseTreeNode(9073) at 0", "Move MethodInvocation(9128) into MethodInvocation(9085) at 0", "Update SimpleName: QuasiBuilder(8856) to children", "Move SimpleName: QuasiBuilder(8856) into MethodInvocation(9085) at 1", "Insert SimpleName: i(9089) into VariableDeclarationFragment(9091) at 0", "Insert NumberLiteral: 0(9090) into VariableDeclarationFragment(9091) at 1", "Insert SimpleName: keys(9094) into MethodInvocation(9096) at 0", "Update SimpleName: node(8859) to size", "Move SimpleName: node(8859) into MethodInvocation(9096) at 1", "Insert MethodInvocation(9106) into ExpressionStatement(9107) at 0", "Insert MethodInvocation(9114) into ExpressionStatement(9115) at 0", "Insert SimpleType: ParseTreeNodeContainer(9122) into ClassInstanceCreation(9124) at 0", "Insert SimpleName: items(9123) into ClassInstanceCreation(9124) at 1", "Insert SimpleType: ArrayList(9047) into ParameterizedType: ArrayList<ParseTreeNode>(9050) at 0", "Insert SimpleType: ParseTreeNode(9049) into ParameterizedType: ArrayList<ParseTreeNode>(9050) at 1", "Move SimpleName: ParseTreeNode(8842) into SimpleType: ParseTreeNode(9057) at 0", "Move SimpleName: ParseTreeNode(8850) into SimpleType: ParseTreeNode(9072) at 0", "Update SimpleName: bindings(8860) to items", "Move SimpleName: bindings(8860) into MethodInvocation(9106) at 0", "Insert SimpleName: add(9101) into MethodInvocation(9106) at 1", "Insert MethodInvocation(9105) into MethodInvocation(9106) at 2", "Insert SimpleName: items(9108) into MethodInvocation(9114) at 0", "Insert SimpleName: add(9109) into MethodInvocation(9114) at 1", "Insert MethodInvocation(9113) into MethodInvocation(9114) at 2", "Insert SimpleName: ParseTreeNodeContainer(9121) into SimpleType: ParseTreeNodeContainer(9122) at 0", "Update SimpleName: Scope(8830) to ArrayList", "Move SimpleName: Scope(8830) into SimpleType: ArrayList(9047) at 0", "Update SimpleName: MessageQueue(8834) to ParseTreeNode", "Move SimpleName: MessageQueue(8834) into SimpleType: ParseTreeNode(9049) at 0", "Update SimpleName: substV(8862) to keys", "Move SimpleName: substV(8862) into MethodInvocation(9105) at 0", "Insert SimpleName: get(9103) into MethodInvocation(9105) at 1", "Insert SimpleName: i(9104) into MethodInvocation(9105) at 2", "Insert SimpleName: vals(9110) into MethodInvocation(9113) at 0", "Insert SimpleName: get(9111) into MethodInvocation(9113) at 1", "Insert SimpleName: i(9112) into MethodInvocation(9113) at 2", "Delete SimpleName: Rule(8801)", "Delete SimpleType: Rule(8802)", "Delete SimpleName: Override(8803)", "Delete MarkerAnnotation(8804)", "Delete SimpleName: RuleDescription(8805)", "Delete SimpleName: name(8806)", "Delete StringLiteral: \"mapEmpty\"(8807)", "Delete MemberValuePair(8808)", "Delete SimpleName: synopsis(8809)", "Delete StringLiteral: \"\"(8810)", "Delete MemberValuePair(8811)", "Delete SimpleName: reason(8812)", "Delete StringLiteral: \"\"(8813)", "Delete MemberValuePair(8814)", "Delete SimpleName: matches(8815)", "Delete StringLiteral: \"({})\"(8816)", "Delete MemberValuePair(8817)", "Delete SimpleName: substitutes(8818)", "Delete StringLiteral: \"___.initializeMap({})\"(8819)", "Delete MemberValuePair(8820)", "Delete NormalAnnotation(8821)", "Delete SimpleType: ParseTreeNode(8827)", "Delete SimpleName: node(8828)", "Delete SingleVariableDeclaration(8829)", "Delete SimpleType: Scope(8831)", "Delete SimpleName: scope(8832)", "Delete SingleVariableDeclaration(8833)", "Delete SimpleType: MessageQueue(8835)", "Delete SimpleName: mq(8836)", "Delete SingleVariableDeclaration(8837)", "Delete SimpleName: String(8848)", "Delete SimpleType: String(8849)", "Delete SimpleType: ParseTreeNode(8851)", "Delete ParameterizedType: LinkedHashMap<String,ParseTreeNode>(8852)", "Delete ClassInstanceCreation(8853)", "Delete VariableDeclarationFragment(8854)", "Delete VariableDeclarationStatement(8855)", "Delete SimpleName: match(8857)", "Delete StringLiteral: \"({})\"(8858)", "Delete MethodInvocation(8861)", "Delete StringLiteral: \"___.initializeMap({})\"(8863)", "Delete MethodInvocation(8864)", "Delete ReturnStatement(8865)", "Delete Block(8866)", "Delete IfStatement(8867)", "Delete SimpleName: NONE(8868)", "Delete ReturnStatement(8869)", "Delete Block(8870)", "Delete MethodDeclaration(8871)", "Delete AnonymousClassDeclaration(8872)", "Delete ClassInstanceCreation(8873)", "Delete SimpleName: String(8840)", "Delete SimpleType: String(8841)", "Delete SimpleType: ParseTreeNode(8843)", "Delete StringLiteral: \"vals\"(9120)", "Delete Modifier: public(9073)", "Delete SimpleName: fire(9076)", "Delete Block(9131)", "Delete IfStatement(9132)", "Delete Block(9135)", "Delete MethodDeclaration(9136)", "Delete AnonymousClassDeclaration(9137)", "Delete ClassInstanceCreation(9138)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}