{"application": "apache-httpclient", "csha": "2ad9a219de85902d90c66240a26440b01fac7031", "files": [{"AbstractBaseHostnameVerifier_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.http.util.Args to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: Args to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Host\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: host to MethodInvocation at 2", "INS SimpleName: notNull to MethodInvocation at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL StringLiteral: \"host to verify is null\"", "DEL NullLiteral", "DEL SimpleName: host", "DEL Block", "DEL InfixExpression: ==", "DEL ClassInstanceCreation", "DEL SimpleName: NullPointerException", "DEL ThrowStatement", "DEL SimpleType: NullPointerException"]}]}}, {"AbstractBaseHostnameVerifier_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(205) at 9", "Insert QualifiedName: org.apache.http.util.Args(18) into ImportDeclaration(19) at 0", "Insert ExpressionStatement(67) into Block(143) at 0", "Insert MethodInvocation(66) into ExpressionStatement(67) at 0", "Insert SimpleName: Args(62) into MethodInvocation(66) at 0", "Insert SimpleName: notNull(63) into MethodInvocation(66) at 1", "Insert SimpleName: host(64) into MethodInvocation(66) at 2", "Insert StringLiteral: \"Host\"(65) into MethodInvocation(66) at 3", "Delete SimpleName: host(60)", "Delete NullLiteral(61)", "Delete InfixExpression: ==(62)", "Delete SimpleName: NullPointerException(63)", "Delete SimpleType: NullPointerException(64)", "Delete StringLiteral: \"host to verify is null\"(65)", "Delete ClassInstanceCreation(66)", "Delete ThrowStatement(67)", "Delete Block(68)", "Delete IfStatement(69)"]}}, {"AbstractCommonHostnameVerifier_cluster": {"actions": [{"root": "UPDATE from getSubjectAlts to extractSubjectAlts", "operations": ["UPD SimpleName: getSubjectAlts from getSubjectAlts to extractSubjectAlts", "UPD SimpleName: getSubjectAlts from getSubjectAlts to extractSubjectAlts"]}, {"root": "DEL TextElement: /", "operations": ["DEL TextElement: /"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: from the CN field.", "DEL TextElement: (Or maybe the version of OpenSSL I'm using to test isn't storing the", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: X509Certificate", "DEL TagElement", "DEL TextElement: <p/>", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL Modifier: final", "DEL NullLiteral", "DEL SimpleName: getSubjectAlts", "DEL ReturnStatement", "DEL TextElement:  X509Certificate", "DEL SimpleType: X509Certificate", "DEL TextElement: Extracts the array of SubjectAlt DNS names from an X509Certificate.", "DEL ArrayType: String[]", "DEL MethodInvocation", "DEL TextElement:  Array of SubjectALT DNS names stored in the certificate.", "DEL Modifier: public", "DEL SimpleName: cert", "DEL TextElement: international characters correctly in the SubjectAlts?).", "DEL SimpleName: cert", "DEL TextElement: Note:  Java doesn't appear able to extract international characters", "DEL TagElement: @return", "DEL Javadoc", "DEL SimpleName: cert", "DEL TextElement: from the SubjectAlts.  It can only extract international characters", "DEL TextElement: <p/>", "DEL Dimension", "DEL TextElement: Returns null if there aren't any.", "DEL SimpleName: getDNSSubjectAlts", "DEL Block", "DEL SimpleType: String"]}]}}, {"AbstractCommonHostnameVerifier_diff": {"operations": ["Update SimpleName: getSubjectAlts(848) to extractSubjectAlts", "Update SimpleName: getSubjectAlts(190) to extractSubjectAlts", "Delete TextElement: /(48)", "Delete Modifier: private(842)", "Delete TextElement: Extracts the array of SubjectAlt DNS names from an X509Certificate.(1015)", "Delete TextElement: Returns null if there aren't any.(1016)", "Delete TextElement: <p/>(1017)", "Delete TextElement: Note:  Java doesn't appear able to extract international characters(1018)", "Delete TextElement: from the SubjectAlts.  It can only extract international characters(1019)", "Delete TextElement: from the CN field.(1020)", "Delete TextElement: <p/>(1021)", "Delete TextElement: (Or maybe the version of OpenSSL I'm using to test isn't storing the(1022)", "Delete TextElement: international characters correctly in the SubjectAlts?).(1023)", "Delete TagElement(1024)", "Delete SimpleName: cert(1025)", "Delete TextElement:  X509Certificate(1026)", "Delete TagElement: @param(1027)", "Delete TextElement:  Array of SubjectALT DNS names stored in the certificate.(1028)", "Delete TagElement: @return(1029)", "Delete Javadoc(1030)", "Delete Modifier: public(1031)", "Delete Modifier: static(1032)", "Delete SimpleName: String(1033)", "Delete SimpleType: String(1034)", "Delete Dimension(1035)", "Delete ArrayType: String[](1036)", "Delete SimpleName: getDNSSubjectAlts(1037)", "Delete Modifier: final(1038)", "Delete SimpleName: X509Certificate(1039)", "Delete SimpleType: X509Certificate(1040)", "Delete SimpleName: cert(1041)", "Delete SingleVariableDeclaration(1042)", "Delete SimpleName: getSubjectAlts(1043)", "Delete SimpleName: cert(1044)", "Delete NullLiteral(1045)", "Delete MethodInvocation(1046)", "Delete ReturnStatement(1047)", "Delete Block(1048)", "Delete MethodDeclaration(1049)"]}}, {"AbstractVerifier_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS ArrayType: String[] to MethodDeclaration at 3", "INS TextElement: (Or maybe the version of OpenSSL I'm using to test isn't storing the to TagElement at 7", "INS SimpleName: X509Certificate to SimpleType: X509Certificate at 0", "INS SimpleName: extractSubjectAlts to MethodInvocation at 0", "INS TagElement to Javadoc at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TextElement: Returns null if there aren't any. to TagElement at 1", "INS TextElement: international characters correctly in the SubjectAlts?). to TagElement at 8", "INS TagElement: @param to Javadoc at 1", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  X509Certificate to TagElement: @param at 1", "INS TextElement:  Array of SubjectALT DNS names stored in the certificate. to TagElement: @return at 0", "INS TextElement: <p/> to TagElement at 6", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS TextElement: Note:  Java doesn't appear able to extract international characters to TagElement at 3", "INS TextElement: from the SubjectAlts.  It can only extract international characters to TagElement at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: cert to MethodInvocation at 1", "INS SimpleName: getDNSSubjectAlts to MethodDeclaration at 4", "INS SimpleName: cert to SingleVariableDeclaration at 2", "INS SimpleName: cert to TagElement: @param at 0", "INS Modifier: static to MethodDeclaration at 2", "INS TextElement: Extracts the array of SubjectAlt DNS names from an X509Certificate. to TagElement at 0", "INS NullLiteral to MethodInvocation at 2", "INS SimpleType: String to ArrayType: String[] at 0", "INS Block to MethodDeclaration at 6", "INS Dimension to ArrayType: String[] at 1", "INS TextElement: <p/> to TagElement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS TextElement: from the CN field. to TagElement at 5", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: X509Certificate to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0"]}]}}, {"AbstractVerifier_diff": {"operations": ["Insert MethodDeclaration(101) into TypeDeclaration: class(102) at 7", "Insert Javadoc(82) into MethodDeclaration(101) at 0", "Insert Modifier: public(83) into MethodDeclaration(101) at 1", "Insert Modifier: static(84) into MethodDeclaration(101) at 2", "Insert ArrayType: String[](88) into MethodDeclaration(101) at 3", "Insert SimpleName: getDNSSubjectAlts(89) into MethodDeclaration(101) at 4", "Insert SingleVariableDeclaration(94) into MethodDeclaration(101) at 5", "Insert Block(100) into MethodDeclaration(101) at 6", "Insert TagElement(76) into Javadoc(82) at 0", "Insert TagElement: @param(79) into Javadoc(82) at 1", "Insert TagElement: @return(81) into Javadoc(82) at 2", "Insert SimpleType: String(86) into ArrayType: String[](88) at 0", "Insert Dimension(87) into ArrayType: String[](88) at 1", "Insert Modifier: final(90) into SingleVariableDeclaration(94) at 0", "Insert SimpleType: X509Certificate(92) into SingleVariableDeclaration(94) at 1", "Insert SimpleName: cert(93) into SingleVariableDeclaration(94) at 2", "Insert ReturnStatement(99) into Block(100) at 0", "Insert TextElement: Extracts the array of SubjectAlt DNS names from an X509Certificate.(67) into TagElement(76) at 0", "Insert TextElement: Returns null if there aren't any.(68) into TagElement(76) at 1", "Insert TextElement: <p/>(69) into TagElement(76) at 2", "Insert TextElement: Note:  Java doesn't appear able to extract international characters(70) into TagElement(76) at 3", "Insert TextElement: from the SubjectAlts.  It can only extract international characters(71) into TagElement(76) at 4", "Insert TextElement: from the CN field.(72) into TagElement(76) at 5", "Insert TextElement: <p/>(73) into TagElement(76) at 6", "Insert TextElement: (Or maybe the version of OpenSSL I'm using to test isn't storing the(74) into TagElement(76) at 7", "Insert TextElement: international characters correctly in the SubjectAlts?).(75) into TagElement(76) at 8", "Insert SimpleName: cert(77) into TagElement: @param(79) at 0", "Insert TextElement:  X509Certificate(78) into TagElement: @param(79) at 1", "Insert TextElement:  Array of SubjectALT DNS names stored in the certificate.(80) into TagElement: @return(81) at 0", "Insert SimpleName: String(85) into SimpleType: String(86) at 0", "Insert SimpleName: X509Certificate(91) into SimpleType: X509Certificate(92) at 0", "Insert MethodInvocation(98) into ReturnStatement(99) at 0", "Insert SimpleName: extractSubjectAlts(95) into MethodInvocation(98) at 0", "Insert SimpleName: cert(96) into MethodInvocation(98) at 1", "Insert NullLiteral(97) into MethodInvocation(98) at 2"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}