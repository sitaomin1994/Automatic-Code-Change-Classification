{"application": "Netflix-servo", "csha": "c2143a21a5158b381d4368eb60c6b51053372da3", "files": [{"DynamicCounter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from com.google.common.cache.CacheBuilder to com.google.common.util.concurrent.ThreadFactoryBuilder", "operations": ["UPD QualifiedName: com.google.common.cache.CacheBuilder from com.google.common.cache.CacheBuilder to com.google.common.util.concurrent.ThreadFactoryBuilder"]}, {"root": "UPDATE from java.util.concurrent.ConcurrentMap to jsr166e.ConcurrentHashMapV8", "operations": ["UPD QualifiedName: java.util.concurrent.ConcurrentMap from java.util.concurrent.ConcurrentMap to jsr166e.ConcurrentHashMapV8"]}, {"root": "UPDATE from java.util.concurrent.ExecutionException to java.util.Map", "operations": ["UPD QualifiedName: java.util.concurrent.ExecutionException from java.util.concurrent.ExecutionException to java.util.Map"]}, {"root": "UPDATE from java.util.concurrent.TimeUnit to java.util.concurrent", "operations": ["UPD QualifiedName: java.util.concurrent.TimeUnit from java.util.concurrent.TimeUnit to java.util.concurrent"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 15", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry> to FieldDeclaration at 2", "INS SimpleType: Entry to ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry> at 2", "INS SimpleType: ConcurrentHashMapV8 to ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry> at 0", "INS SimpleName: ConcurrentHashMapV8 to SimpleType: ConcurrentHashMapV8 at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 16", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 16", "INS PrimitiveType: long to FieldDeclaration at 2"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 17", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 9", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: synchronized to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: ResettableCounter to SimpleType: ResettableCounter at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: accessTime to InfixExpression: >>> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: static to MethodDeclaration at 0", "INS InfixExpression: != to InfixExpression: || at 1", "INS InfixExpression: ^ to ParenthesizedExpression at 0", "INS InfixExpression: || to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: Entry to TypeDeclaration: class at 2", "INS SimpleType: ResettableCounter to FieldDeclaration at 2", "INS SimpleName: accessTime to Assignment: = at 0", "INS SimpleType: Entry to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to InfixExpression: != at 1", "INS SimpleName: getClass to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS StringLiteral: \"accessTime=\" to InfixExpression: + at 1", "INS StringLiteral: \", counter=\" to InfixExpression: + at 2", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: accessTime to FieldAccess at 1", "INS PrimitiveType: long to FieldDeclaration at 1", "INS SimpleName: result to InfixExpression: * at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: o to CastExpression at 1", "INS StringLiteral: \"Entry{\" to InfixExpression: + at 0", "INS SimpleName: o to MethodInvocation at 0", "INS NumberLiteral: 32 to InfixExpression: >>> at 1", "INS SimpleName: result to Assignment: = at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: accessTime to SingleVariableDeclaration at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: >>> to ParenthesizedExpression at 0", "INS SimpleName: counter to InfixExpression: + at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: System to MethodInvocation at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS InfixExpression: == to InfixExpression: || at 0", "INS ThisExpression to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: entry.counter to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: equals to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Entry to CastExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 1", "INS ReturnStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: newEntry to MethodDeclaration at 2", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: accessTime to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: entry.accessTime to InfixExpression: == at 1", "INS SimpleName: Entry to MethodDeclaration at 1", "INS ParenthesizedExpression to InfixExpression: ^ at 1", "INS InfixExpression: + to InfixExpression: + at 0", "INS PrimitiveType: int to CastExpression at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: counter to VariableDeclarationFragment at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: accessTime to InfixExpression: == at 0", "INS VariableDeclarationStatement to Block at 2", "INS InfixExpression: * to InfixExpression: + at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SimpleName: accessTime to InfixExpression: ^ at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: o to InfixExpression: == at 0", "INS SimpleName: o to InfixExpression: == at 1", "INS SimpleName: counter to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: counter to ReturnStatement at 0", "INS NumberLiteral: 31 to InfixExpression: * at 0", "INS SimpleName: counter to MethodInvocation at 0", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS SimpleName: getCounter to MethodDeclaration at 3", "INS SimpleName: result to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS CharacterLiteral: '}' to InfixExpression: + at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: counter to SingleVariableDeclaration at 1", "INS SimpleName: accessTime to InfixExpression: + at 1", "INS SimpleName: hashCode to MethodInvocation at 1", "INS InfixExpression: && to ReturnStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleType: ResettableCounter to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: counter to Assignment: = at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ReturnStatement to IfStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: Entry to VariableDeclarationStatement at 0", "INS SimpleName: counter to FieldAccess at 1", "INS SimpleName: accessTime to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ResettableCounter to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: o to SingleVariableDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 17", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: expireAfterMs to InfixExpression: - at 1", "INS InfixExpression: < to IfStatement at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: Runnable to FieldDeclaration at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: run to MethodDeclaration at 3", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<MonitorConfig,Entry> at 0", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS SimpleName: getValue to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: tooOld to InfixExpression: < at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: counters to MethodInvocation at 0", "INS SimpleType: Runnable to ClassInstanceCreation at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: tooOld to VariableDeclarationFragment at 0", "INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: accessTime to FieldAccess at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS Block to IfStatement at 1", "INS SimpleName: expirationJob to VariableDeclarationFragment at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS FieldAccess to InfixExpression: < at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: counters to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS EnhancedForStatement to Block at 1", "INS ParameterizedType: Map.Entry<MonitorConfig,Entry> to SingleVariableDeclaration at 0", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: - at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleType: ScheduledExecutorService to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: private to FieldDeclaration at 0", "MOV Modifier: static to FieldDeclaration at 1", "MOV SimpleType: String to MethodDeclaration at 2", "MOV Modifier: final to FieldDeclaration at 1", "MOV VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "UPDATE from static to final", "operations": ["UPD Modifier: static from static to final"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: final to FieldDeclaration at 1", "MOV VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2", "MOV Modifier: final to FieldDeclaration at 0"]}, {"root": "MOVE from ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>", "operations": ["MOV SimpleType: MonitorConfig to ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry> at 1"]}, {"root": "UPDATE from counters to expireAfterMs", "operations": ["UPD SimpleName: counters from counters to expireAfterMs", "UPD SimpleName: CACHE_MONITOR_ID from CACHE_MONITOR_ID to expireAfterMs"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from DefaultMonitorRegistry to service", "operations": ["UPD SimpleName: DefaultMonitorRegistry from DefaultMonitorRegistry to service", "UPD SimpleName: cacheMonitor from cacheMonitor to service", "UPD SimpleName: cacheMonitor from cacheMonitor to service"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: counters to Assignment: = at 0", "INS ExpressionStatement to Block at 5", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS StringLiteral: \"dynCounterExpiration-%d\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: setDaemon to MethodInvocation at 1", "INS SimpleName: threadFactory to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 6", "INS SimpleType: ThreadFactory to VariableDeclarationStatement at 1", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: ThreadFactoryBuilder to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: setNameFormat to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: MonitorConfig to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: MonitorConfig to SingleVariableDeclaration at 1", "INS SimpleName: MonitorConfig to SimpleType: MonitorConfig at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: final to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: ConcurrentHashMapV8.Fun to ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry> at 0", "INS ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry> to ClassInstanceCreation at 0", "INS SimpleName: MonitorConfig to SimpleType: MonitorConfig at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: monitorConfig to SingleVariableDeclaration at 2", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: config to MethodInvocation at 2", "INS SimpleType: Entry to VariableDeclarationStatement at 0", "INS SimpleName: apply to MethodDeclaration at 3", "INS SimpleType: Entry to MethodDeclaration at 2", "INS SimpleType: Entry to ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry> at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: ConcurrentHashMapV8.Fun to SimpleType: ConcurrentHashMapV8.Fun at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: MonitorConfig to ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry> at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS EnhancedForStatement to Block at 1", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleType: Entry to SingleVariableDeclaration at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: e.counter to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from Counter to ResettableCounter", "operations": ["UPD SimpleName: Counter from Counter to ResettableCounter", "UPD SimpleName: LoadingCache from LoadingCache to ResettableCounter"]}, {"root": "MOVE from SimpleType: ResettableCounter", "operations": ["MOV SimpleName: LoadingCache to SimpleType: ResettableCounter at 0"]}, {"root": "UPDATE from ConcurrentMap<MonitorConfig,Counter> to ImmutableList.Builder<Monitor<?>>", "operations": ["UPD ParameterizedType: ConcurrentMap<MonitorConfig,Counter> from ConcurrentMap<MonitorConfig,Counter> to ImmutableList.Builder<Monitor<?>>"]}, {"root": "MOVE from SimpleType: ResettableCounter", "operations": ["MOV SimpleName: Counter to SimpleType: ResettableCounter at 0"]}, {"root": "INS ClassInstanceCreation to ReturnStatement at 0", "operations": ["INS NumberLiteral: 0L to ClassInstanceCreation at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: Entry to ClassInstanceCreation at 0", "INS SimpleName: Entry to SimpleType: Entry at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV SimpleName: counters to Assignment: = at 0"]}, {"root": "UPDATE from Counter to ThreadFactory", "operations": ["UPD SimpleName: Counter from Counter to ThreadFactory"]}, {"root": "MOVE from SimpleType: ThreadFactory", "operations": ["MOV SimpleName: Counter to SimpleType: ThreadFactory at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getInstance to MethodInvocation at 1", "MOV SimpleName: DefaultMonitorRegistry to MethodInvocation at 0"]}, {"root": "UPDATE from getInstance to scheduleWithFixedDelay", "operations": ["UPD SimpleName: getInstance from getInstance to scheduleWithFixedDelay"]}, {"root": "UPDATE from register to expirationJob", "operations": ["UPD SimpleName: register from register to expirationJob"]}, {"root": "INS NumberLiteral: 1 to MethodInvocation at 4", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 4"]}, {"root": "INS NumberLiteral: 1 to MethodInvocation at 5", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 5"]}, {"root": "INS QualifiedName: TimeUnit.MINUTES to MethodInvocation at 6", "operations": ["INS QualifiedName: TimeUnit.MINUTES to MethodInvocation at 6"]}, {"root": "UPDATE from Throwables to entry", "operations": ["UPD SimpleName: Throwables from Throwables to entry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: propagate to MethodInvocation at 1", "MOV SimpleName: Throwables to MethodInvocation at 0"]}, {"root": "UPDATE from propagate to getCounter", "operations": ["UPD SimpleName: propagate from propagate to getCounter"]}, {"root": "UPDATE from Counter to ImmutableList.Builder", "operations": ["UPD SimpleType: Counter from Counter to ImmutableList.Builder"]}, {"root": "MOVE from ParameterizedType: ConcurrentMap<MonitorConfig,Counter>", "operations": ["MOV ParameterizedType: Monitor<?> to ParameterizedType: ConcurrentMap<MonitorConfig,Counter> at 3"]}, {"root": "UPDATE from countersMap to builder", "operations": ["UPD SimpleName: countersMap from countersMap to builder", "UPD SimpleName: asMap from asMap to builder"]}, {"root": "UPDATE from countersMap to counters", "operations": ["UPD SimpleName: countersMap from countersMap to counters"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: countersMap to MethodInvocation at 0", "MOV SimpleName: values to MethodInvocation at 1"]}, {"root": "INS SimpleName: counters to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: counters to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from CacheBuilder to expirationUnitValue", "operations": ["UPD SimpleName: CacheBuilder from CacheBuilder to expirationUnitValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: CacheBuilder to MethodInvocation at 0"]}, {"root": "UPDATE from expireAfterAccess to toMillis", "operations": ["UPD SimpleName: expireAfterAccess from expireAfterAccess to toMillis"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: expirationValue to MethodInvocation at 2", "MOV SimpleName: expireAfterAccess to MethodInvocation at 1"]}, {"root": "UPDATE from CacheLoader<MonitorConfig,Counter> to ConcurrentHashMapV8<MonitorConfig,Entry>", "operations": ["UPD ParameterizedType: CacheLoader<MonitorConfig,Counter> from CacheLoader<MonitorConfig,Counter> to ConcurrentHashMapV8<MonitorConfig,Entry>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: CacheLoader<MonitorConfig,Counter> to ClassInstanceCreation at 0"]}, {"root": "UPDATE from Monitors to Executors", "operations": ["UPD SimpleName: Monitors from Monitors to Executors"]}, {"root": "UPDATE from newCacheMonitor to newSingleThreadScheduledExecutor", "operations": ["UPD SimpleName: newCacheMonitor from newCacheMonitor to newSingleThreadScheduledExecutor"]}, {"root": "UPDATE from CACHE_MONITOR_ID to threadFactory", "operations": ["UPD SimpleName: CACHE_MONITOR_ID from CACHE_MONITOR_ID to threadFactory"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: counters to MethodInvocation at 0", "MOV SimpleName: config to MethodInvocation at 2"]}, {"root": "UPDATE from get to computeIfAbsent", "operations": ["UPD SimpleName: get from get to computeIfAbsent"]}, {"root": "INS QualifiedName: ImmutableList.Builder to SimpleType: Counter at 0", "operations": ["INS QualifiedName: ImmutableList.Builder to SimpleType: Counter at 0"]}, {"root": "UPDATE from counters to ImmutableList", "operations": ["UPD SimpleName: counters from counters to ImmutableList"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: counters to MethodInvocation at 0"]}, {"root": "UPDATE from CacheLoader to ConcurrentHashMapV8", "operations": ["UPD SimpleName: CacheLoader from CacheLoader to ConcurrentHashMapV8", "UPD SimpleType: CacheLoader from CacheLoader to ConcurrentHashMapV8"]}, {"root": "MOVE from ParameterizedType: CacheLoader<MonitorConfig,Counter>", "operations": ["MOV SimpleType: MonitorConfig to ParameterizedType: CacheLoader<MonitorConfig,Counter> at 1"]}, {"root": "UPDATE from Counter to Entry", "operations": ["UPD SimpleName: Counter from Counter to Entry", "UPD SimpleType: Counter from Counter to Entry", "UPD SimpleName: ExecutionException from ExecutionException to Entry", "UPD SimpleType: CompositeMonitor from CompositeMonitor to Entry", "UPD SimpleName: CompositeMonitor from CompositeMonitor to Entry", "UPD SimpleName: e from e to Entry"]}, {"root": "MOVE from SimpleType: Entry", "operations": ["MOV SimpleName: ExecutionException to SimpleType: Entry at 0"]}, {"root": "MOVE from ParameterizedType: Map.Entry<MonitorConfig,Entry>", "operations": ["MOV SimpleType: MonitorConfig to ParameterizedType: Map.Entry<MonitorConfig,Entry> at 1"]}, {"root": "MOVE from ParameterizedType: Map.Entry<MonitorConfig,Entry>", "operations": ["MOV SimpleType: CompositeMonitor to ParameterizedType: Map.Entry<MonitorConfig,Entry> at 2"]}, {"root": "UPDATE from Exception to ThreadFactoryBuilder", "operations": ["UPD SimpleName: Exception from Exception to ThreadFactoryBuilder"]}, {"root": "MOVE from SimpleType: ThreadFactoryBuilder", "operations": ["MOV SimpleName: Exception to SimpleType: ThreadFactoryBuilder at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: MonitorConfig to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 0", "MOV SimpleName: getMessage to MethodInvocation at 1"]}, {"root": "UPDATE from getMessage to newEntry", "operations": ["UPD SimpleName: getMessage from getMessage to newEntry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Throwables"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.cache.CacheLoader"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.cache.LoadingCache", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.servo.DefaultMonitorRegistry"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration"]}, {"root": "DEL StringLiteral: \"servoCountersCache\"", "operations": ["DEL StringLiteral: \"servoCountersCache\""]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: LoadingCache", "DEL ParameterizedType: LoadingCache<MonitorConfig,Counter>", "DEL SimpleType: Counter", "DEL FieldDeclaration", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL ParameterizedType: CompositeMonitor<?>", "DEL WildcardType: ?", "DEL FieldDeclaration", "DEL Modifier: private"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: expirationUnitValue", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL ExpressionStatement", "DEL SimpleType: Counter", "DEL MethodInvocation", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleName: newBuilder", "DEL SimpleName: build", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: Exception", "DEL SimpleName: load"]}, {"root": "DEL SimpleName: counters", "operations": ["DEL SimpleName: counters"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL TryStatement", "operations": ["DEL ReturnStatement", "DEL ExpressionStatement", "DEL CatchClause", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: LOGGER", "DEL SimpleName: config", "DEL TryStatement", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: e", "DEL SimpleType: ExecutionException", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \"Failed to get a counter for {}: {}\"", "DEL SimpleName: error"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: ConcurrentMap", "operations": ["DEL SimpleName: ConcurrentMap", "DEL SimpleType: ConcurrentMap"]}, {"root": "DEL SimpleName: Counter", "operations": ["DEL SimpleName: Counter"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: ImmutableList", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: copyOf"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: asMap", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: counters", "DEL SimpleName: asMap", "DEL MethodInvocation"]}]}}, {"DynamicCounter_diff": {"operations": ["Move ImportDeclaration(21) into CompilationUnit(886) at 8", "Move ImportDeclaration(39) into CompilationUnit(886) at 10", "Update QualifiedName: com.google.common.cache.CacheBuilder(20) to com.google.common.util.concurrent.ThreadFactoryBuilder", "Update QualifiedName: java.util.concurrent.ConcurrentMap(38) to jsr166e.ConcurrentHashMapV8", "Update QualifiedName: java.util.concurrent.ExecutionException(40) to java.util.Map", "Update QualifiedName: java.util.concurrent.TimeUnit(42) to java.util.concurrent", "Insert FieldDeclaration(162) into TypeDeclaration: class(885) at 14", "Insert FieldDeclaration(168) into TypeDeclaration: class(885) at 15", "Insert TypeDeclaration: class(339) into TypeDeclaration: class(885) at 16", "Insert FieldDeclaration(398) into TypeDeclaration: class(885) at 17", "Insert FieldDeclaration(404) into TypeDeclaration: class(885) at 18", "Move Modifier: private(134) into FieldDeclaration(162) at 0", "Update Modifier: static(135) to final", "Move Modifier: static(135) into FieldDeclaration(162) at 1", "Insert ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>(159) into FieldDeclaration(162) at 2", "Move VariableDeclarationFragment(178) into FieldDeclaration(162) at 3", "Insert Modifier: private(163) into FieldDeclaration(168) at 0", "Move Modifier: final(136) into FieldDeclaration(168) at 1", "Insert PrimitiveType: long(165) into FieldDeclaration(168) at 2", "Move VariableDeclarationFragment(141) into FieldDeclaration(168) at 3", "Insert Modifier: private(169) into TypeDeclaration: class(339) at 0", "Insert Modifier: static(170) into TypeDeclaration: class(339) at 1", "Insert SimpleName: Entry(171) into TypeDeclaration: class(339) at 2", "Insert FieldDeclaration(176) into TypeDeclaration: class(339) at 3", "Insert FieldDeclaration(183) into TypeDeclaration: class(339) at 4", "Insert MethodDeclaration(206) into TypeDeclaration: class(339) at 5", "Insert MethodDeclaration(221) into TypeDeclaration: class(339) at 6", "Insert MethodDeclaration(241) into TypeDeclaration: class(339) at 7", "Insert MethodDeclaration(289) into TypeDeclaration: class(339) at 8", "Insert MethodDeclaration(321) into TypeDeclaration: class(339) at 9", "Insert MethodDeclaration(338) into TypeDeclaration: class(339) at 10", "Move Modifier: final(181) into FieldDeclaration(398) at 0", "Insert SimpleType: Runnable(342) into FieldDeclaration(398) at 1", "Insert VariableDeclarationFragment(397) into FieldDeclaration(398) at 2", "Insert Modifier: final(399) into FieldDeclaration(404) at 0", "Insert SimpleType: ScheduledExecutorService(401) into FieldDeclaration(404) at 1", "Move VariableDeclarationFragment(187) into FieldDeclaration(404) at 2", "Insert SimpleType: ConcurrentHashMapV8(154) into ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>(159) at 0", "Move SimpleType: MonitorConfig(173) into ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>(159) at 1", "Insert SimpleType: Entry(158) into ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>(159) at 2", "Update SimpleName: CACHE_MONITOR_ID(139) to expireAfterMs", "Insert Modifier: private(172) into FieldDeclaration(176) at 0", "Insert PrimitiveType: long(173) into FieldDeclaration(176) at 1", "Insert VariableDeclarationFragment(175) into FieldDeclaration(176) at 2", "Insert Modifier: private(177) into FieldDeclaration(183) at 0", "Move Modifier: final(169) into FieldDeclaration(183) at 1", "Insert SimpleType: ResettableCounter(180) into FieldDeclaration(183) at 2", "Insert VariableDeclarationFragment(182) into FieldDeclaration(183) at 3", "Insert Modifier: private(184) into MethodDeclaration(206) at 0", "Insert SimpleName: Entry(185) into MethodDeclaration(206) at 1", "Insert SingleVariableDeclaration(189) into MethodDeclaration(206) at 2", "Insert SingleVariableDeclaration(192) into MethodDeclaration(206) at 3", "Insert Block(205) into MethodDeclaration(206) at 4", "Insert Modifier: private(207) into MethodDeclaration(221) at 0", "Insert Modifier: synchronized(208) into MethodDeclaration(221) at 1", "Insert SimpleType: ResettableCounter(210) into MethodDeclaration(221) at 2", "Insert SimpleName: getCounter(211) into MethodDeclaration(221) at 3", "Insert Block(220) into MethodDeclaration(221) at 4", "Insert Modifier: static(222) into MethodDeclaration(241) at 0", "Insert SimpleType: Entry(224) into MethodDeclaration(241) at 1", "Insert SimpleName: newEntry(225) into MethodDeclaration(241) at 2", "Move SingleVariableDeclaration(258) into MethodDeclaration(241) at 3", "Move Block(266) into MethodDeclaration(241) at 4", "Move MarkerAnnotation(249) into MethodDeclaration(289) at 0", "Insert Modifier: public(244) into MethodDeclaration(289) at 1", "Insert PrimitiveType: boolean(245) into MethodDeclaration(289) at 2", "Insert SimpleName: equals(246) into MethodDeclaration(289) at 3", "Insert SingleVariableDeclaration(250) into MethodDeclaration(289) at 4", "Insert Block(288) into MethodDeclaration(289) at 5", "Insert MarkerAnnotation(291) into MethodDeclaration(321) at 0", "Insert Modifier: public(292) into MethodDeclaration(321) at 1", "Insert PrimitiveType: int(293) into MethodDeclaration(321) at 2", "Insert SimpleName: hashCode(294) into MethodDeclaration(321) at 3", "Insert Block(320) into MethodDeclaration(321) at 4", "Insert MarkerAnnotation(323) into MethodDeclaration(338) at 0", "Insert Modifier: public(324) into MethodDeclaration(338) at 1", "Move SimpleType: String(138) into MethodDeclaration(338) at 2", "Insert SimpleName: toString(327) into MethodDeclaration(338) at 3", "Insert Block(337) into MethodDeclaration(338) at 4", "Insert SimpleName: Runnable(341) into SimpleType: Runnable(342) at 0", "Insert SimpleName: expirationJob(343) into VariableDeclarationFragment(397) at 0", "Insert ClassInstanceCreation(396) into VariableDeclarationFragment(397) at 1", "Insert SimpleName: ScheduledExecutorService(400) into SimpleType: ScheduledExecutorService(401) at 0", "Update SimpleName: cacheMonitor(186) to service", "Insert ExpressionStatement(454) into Block(498) at 4", "Insert ExpressionStatement(465) into Block(498) at 5", "Insert VariableDeclarationStatement(482) into Block(498) at 6", "Insert Modifier: final(504) into SingleVariableDeclaration(508) at 0", "Insert SimpleType: MonitorConfig(506) into SingleVariableDeclaration(508) at 1", "Insert VariableDeclarationStatement(544) into Block(549) at 0", "Insert ReturnStatement(548) into Block(549) at 1", "Insert EnhancedForStatement(807) into Block(812) at 1", "Insert ReturnStatement(811) into Block(812) at 2", "Insert SimpleName: ConcurrentHashMapV8(153) into SimpleType: ConcurrentHashMapV8(154) at 0", "Insert SimpleName: Entry(157) into SimpleType: Entry(158) at 0", "Insert SimpleName: accessTime(174) into VariableDeclarationFragment(175) at 0", "Update SimpleName: LoadingCache(170) to ResettableCounter", "Move SimpleName: LoadingCache(170) into SimpleType: ResettableCounter(180) at 0", "Insert SimpleName: counter(181) into VariableDeclarationFragment(182) at 0", "Insert SimpleType: ResettableCounter(187) into SingleVariableDeclaration(189) at 0", "Insert SimpleName: counter(188) into SingleVariableDeclaration(189) at 1", "Insert PrimitiveType: long(190) into SingleVariableDeclaration(192) at 0", "Insert SimpleName: accessTime(191) into SingleVariableDeclaration(192) at 1", "Insert ExpressionStatement(198) into Block(205) at 0", "Insert ExpressionStatement(204) into Block(205) at 1", "Insert SimpleName: ResettableCounter(209) into SimpleType: ResettableCounter(210) at 0", "Insert ExpressionStatement(217) into Block(220) at 0", "Insert ReturnStatement(219) into Block(220) at 1", "Insert SimpleName: Entry(223) into SimpleType: Entry(224) at 0", "Insert SimpleType: Object(248) into SingleVariableDeclaration(250) at 0", "Insert SimpleName: o(249) into SingleVariableDeclaration(250) at 1", "Insert IfStatement(256) into Block(288) at 0", "Insert IfStatement(269) into Block(288) at 1", "Insert VariableDeclarationStatement(278) into Block(288) at 2", "Insert ReturnStatement(287) into Block(288) at 3", "Insert SimpleName: Override(290) into MarkerAnnotation(291) at 0", "Insert VariableDeclarationStatement(307) into Block(320) at 0", "Insert ExpressionStatement(317) into Block(320) at 1", "Insert ReturnStatement(319) into Block(320) at 2", "Insert SimpleName: Override(322) into MarkerAnnotation(323) at 0", "Insert ReturnStatement(336) into Block(337) at 0", "Insert SimpleType: Runnable(345) into ClassInstanceCreation(396) at 0", "Insert AnonymousClassDeclaration(395) into ClassInstanceCreation(396) at 1", "Insert Assignment: =(453) into ExpressionStatement(454) at 0", "Insert Assignment: =(464) into ExpressionStatement(465) at 0", "Insert Modifier: final(466) into VariableDeclarationStatement(482) at 0", "Insert SimpleType: ThreadFactory(468) into VariableDeclarationStatement(482) at 1", "Insert VariableDeclarationFragment(481) into VariableDeclarationStatement(482) at 2", "Insert SimpleName: MonitorConfig(505) into SimpleType: MonitorConfig(506) at 0", "Insert SimpleType: Entry(510) into VariableDeclarationStatement(544) at 0", "Insert VariableDeclarationFragment(543) into VariableDeclarationStatement(544) at 1", "Insert MethodInvocation(547) into ReturnStatement(548) at 0", "Update ParameterizedType: ConcurrentMap<MonitorConfig,Counter>(564) to ImmutableList.Builder<Monitor<?>>", "Insert SingleVariableDeclaration(797) into EnhancedForStatement(807) at 0", "Insert MethodInvocation(800) into EnhancedForStatement(807) at 1", "Insert Block(806) into EnhancedForStatement(807) at 2", "Insert MethodInvocation(810) into ReturnStatement(811) at 0", "Update SimpleName: Counter(174) to ResettableCounter", "Move SimpleName: Counter(174) into SimpleType: ResettableCounter(187) at 0", "Insert Assignment: =(197) into ExpressionStatement(198) at 0", "Insert Assignment: =(203) into ExpressionStatement(204) at 0", "Insert Assignment: =(216) into ExpressionStatement(217) at 0", "Insert SimpleName: counter(218) into ReturnStatement(219) at 0", "Insert ClassInstanceCreation(238) into ReturnStatement(239) at 0", "Insert SimpleName: Object(247) into SimpleType: Object(248) at 0", "Insert InfixExpression: ==(253) into IfStatement(256) at 0", "Insert ReturnStatement(255) into IfStatement(256) at 1", "Insert InfixExpression: ||(266) into IfStatement(269) at 0", "Insert ReturnStatement(268) into IfStatement(269) at 1", "Insert SimpleType: Entry(271) into VariableDeclarationStatement(278) at 0", "Insert VariableDeclarationFragment(277) into VariableDeclarationStatement(278) at 1", "Insert InfixExpression: &&(286) into ReturnStatement(287) at 0", "Insert PrimitiveType: int(295) into VariableDeclarationStatement(307) at 0", "Insert VariableDeclarationFragment(306) into VariableDeclarationStatement(307) at 1", "Insert Assignment: =(316) into ExpressionStatement(317) at 0", "Insert SimpleName: result(318) into ReturnStatement(319) at 0", "Insert InfixExpression: +(335) into ReturnStatement(336) at 0", "Insert SimpleName: Runnable(344) into SimpleType: Runnable(345) at 0", "Insert MethodDeclaration(394) into AnonymousClassDeclaration(395) at 0", "Update SimpleName: counters(232) to expireAfterMs", "Move SimpleName: counters(232) into Assignment: =(453) at 0", "Insert MethodInvocation(452) into Assignment: =(453) at 1", "Insert SimpleName: counters(455) into Assignment: =(464) at 0", "Insert ClassInstanceCreation(463) into Assignment: =(464) at 1", "Update SimpleName: Counter(251) to ThreadFactory", "Move SimpleName: Counter(251) into SimpleType: ThreadFactory(468) at 0", "Insert SimpleName: threadFactory(469) into VariableDeclarationFragment(481) at 0", "Insert MethodInvocation(480) into VariableDeclarationFragment(481) at 1", "Update SimpleName: cacheMonitor(273) to service", "Update SimpleName: DefaultMonitorRegistry(281) to service", "Move SimpleName: DefaultMonitorRegistry(281) into MethodInvocation(496) at 0", "Update SimpleName: getInstance(282) to scheduleWithFixedDelay", "Move SimpleName: getInstance(282) into MethodInvocation(496) at 1", "Update SimpleName: register(284) to expirationJob", "Insert NumberLiteral: 1(493) into MethodInvocation(496) at 3", "Insert NumberLiteral: 1(494) into MethodInvocation(496) at 4", "Insert QualifiedName: TimeUnit.MINUTES(495) into MethodInvocation(496) at 5", "Insert SimpleName: Entry(509) into SimpleType: Entry(510) at 0", "Insert SimpleName: entry(511) into VariableDeclarationFragment(543) at 0", "Insert MethodInvocation(542) into VariableDeclarationFragment(543) at 1", "Update SimpleName: Throwables(317) to entry", "Move SimpleName: Throwables(317) into MethodInvocation(547) at 0", "Update SimpleName: propagate(318) to getCounter", "Move SimpleName: propagate(318) into MethodInvocation(547) at 1", "Update SimpleType: Counter(563) to ImmutableList.Builder", "Move ParameterizedType: Monitor<?>(575) into ParameterizedType: ImmutableList.Builder<Monitor<?>>(787) at 3", "Update SimpleName: countersMap(565) to builder", "Insert SimpleType: Entry(795) into SingleVariableDeclaration(797) at 0", "Insert SimpleName: e(796) into SingleVariableDeclaration(797) at 1", "Update SimpleName: countersMap(577) to counters", "Move SimpleName: countersMap(577) into MethodInvocation(800) at 0", "Move SimpleName: values(578) into MethodInvocation(800) at 1", "Insert ExpressionStatement(805) into Block(806) at 0", "Insert SimpleName: builder(808) into MethodInvocation(810) at 0", "Insert SimpleName: build(809) into MethodInvocation(810) at 1", "Insert SimpleName: counters(859) into VariableDeclarationFragment(860) at 1", "Insert FieldAccess(195) into Assignment: =(197) at 0", "Insert SimpleName: counter(196) into Assignment: =(197) at 1", "Insert FieldAccess(201) into Assignment: =(203) at 0", "Insert SimpleName: accessTime(202) into Assignment: =(203) at 1", "Insert SimpleName: accessTime(212) into Assignment: =(216) at 0", "Insert MethodInvocation(215) into Assignment: =(216) at 1", "Insert SimpleType: Entry(232) into ClassInstanceCreation(238) at 0", "Move ClassInstanceCreation(264) into ClassInstanceCreation(238) at 1", "Insert NumberLiteral: 0L(237) into ClassInstanceCreation(238) at 2", "Insert ThisExpression(251) into InfixExpression: ==(253) at 0", "Insert SimpleName: o(252) into InfixExpression: ==(253) at 1", "Insert BooleanLiteral: true(254) into ReturnStatement(255) at 0", "Insert InfixExpression: ==(259) into InfixExpression: ||(266) at 0", "Insert InfixExpression: !=(265) into InfixExpression: ||(266) at 1", "Insert BooleanLiteral: false(267) into ReturnStatement(268) at 0", "Insert SimpleName: Entry(270) into SimpleType: Entry(271) at 0", "Insert SimpleName: entry(272) into VariableDeclarationFragment(277) at 0", "Insert CastExpression(276) into VariableDeclarationFragment(277) at 1", "Insert InfixExpression: ==(281) into InfixExpression: &&(286) at 0", "Insert MethodInvocation(285) into InfixExpression: &&(286) at 1", "Insert SimpleName: result(296) into VariableDeclarationFragment(306) at 0", "Insert CastExpression(305) into VariableDeclarationFragment(306) at 1", "Insert SimpleName: result(308) into Assignment: =(316) at 0", "Insert InfixExpression: +(315) into Assignment: =(316) at 1", "Insert InfixExpression: +(330) into InfixExpression: +(335) at 0", "Insert SimpleName: accessTime(331) into InfixExpression: +(335) at 1", "Insert StringLiteral: \", counter=\"(332) into InfixExpression: +(335) at 2", "Insert SimpleName: counter(333) into InfixExpression: +(335) at 3", "Insert CharacterLiteral: '}'(334) into InfixExpression: +(335) at 4", "Insert MarkerAnnotation(347) into MethodDeclaration(394) at 0", "Insert Modifier: public(348) into MethodDeclaration(394) at 1", "Insert PrimitiveType: void(349) into MethodDeclaration(394) at 2", "Insert SimpleName: run(350) into MethodDeclaration(394) at 3", "Insert Block(393) into MethodDeclaration(394) at 4", "Update SimpleName: CacheBuilder(233) to expirationUnitValue", "Move SimpleName: CacheBuilder(233) into MethodInvocation(452) at 0", "Update SimpleName: expireAfterAccess(236) to toMillis", "Move SimpleName: expireAfterAccess(236) into MethodInvocation(452) at 1", "Move SimpleName: expirationValue(237) into MethodInvocation(452) at 2", "Update ParameterizedType: CacheLoader<MonitorConfig,Counter>(247) to ConcurrentHashMapV8<MonitorConfig,Entry>", "Move ParameterizedType: CacheLoader<MonitorConfig,Counter>(247) into ClassInstanceCreation(463) at 0", "Insert MethodInvocation(478) into MethodInvocation(480) at 0", "Insert SimpleName: build(479) into MethodInvocation(480) at 1", "Update SimpleName: Monitors(274) to Executors", "Update SimpleName: newCacheMonitor(275) to newSingleThreadScheduledExecutor", "Update SimpleName: CACHE_MONITOR_ID(276) to threadFactory", "Move SimpleName: counters(298) into MethodInvocation(542) at 0", "Update SimpleName: get(299) to computeIfAbsent", "Move SimpleName: get(299) into MethodInvocation(542) at 1", "Move SimpleName: config(300) into MethodInvocation(542) at 2", "Insert ClassInstanceCreation(541) into MethodInvocation(542) at 3", "Insert QualifiedName: ImmutableList.Builder(781) into SimpleType: ImmutableList.Builder(782) at 0", "Update SimpleName: counters(566) to ImmutableList", "Update SimpleName: asMap(567) to builder", "Insert SimpleName: Entry(794) into SimpleType: Entry(795) at 0", "Insert MethodInvocation(804) into ExpressionStatement(805) at 0", "Move SimpleName: counters(594) into MethodInvocation(826) at 0", "Insert ThisExpression(193) into FieldAccess(195) at 0", "Insert SimpleName: counter(194) into FieldAccess(195) at 1", "Insert ThisExpression(199) into FieldAccess(201) at 0", "Insert SimpleName: accessTime(200) into FieldAccess(201) at 1", "Insert SimpleName: System(213) into MethodInvocation(215) at 0", "Insert SimpleName: currentTimeMillis(214) into MethodInvocation(215) at 1", "Insert SimpleName: Entry(231) into SimpleType: Entry(232) at 0", "Insert SimpleName: o(257) into InfixExpression: ==(259) at 0", "Insert NullLiteral(258) into InfixExpression: ==(259) at 1", "Insert MethodInvocation(261) into InfixExpression: !=(265) at 0", "Insert MethodInvocation(264) into InfixExpression: !=(265) at 1", "Insert SimpleType: Entry(274) into CastExpression(276) at 0", "Insert SimpleName: o(275) into CastExpression(276) at 1", "Insert SimpleName: accessTime(279) into InfixExpression: ==(281) at 0", "Insert QualifiedName: entry.accessTime(280) into InfixExpression: ==(281) at 1", "Insert SimpleName: counter(282) into MethodInvocation(285) at 0", "Insert SimpleName: equals(283) into MethodInvocation(285) at 1", "Insert QualifiedName: entry.counter(284) into MethodInvocation(285) at 2", "Insert PrimitiveType: int(297) into CastExpression(305) at 0", "Insert ParenthesizedExpression(304) into CastExpression(305) at 1", "Insert InfixExpression: *(311) into InfixExpression: +(315) at 0", "Insert MethodInvocation(314) into InfixExpression: +(315) at 1", "Insert StringLiteral: \"Entry{\"(328) into InfixExpression: +(330) at 0", "Insert StringLiteral: \"accessTime=\"(329) into InfixExpression: +(330) at 1", "Insert SimpleName: Override(346) into MarkerAnnotation(347) at 0", "Insert VariableDeclarationStatement(359) into Block(393) at 0", "Insert EnhancedForStatement(392) into Block(393) at 1", "Update SimpleType: CacheLoader(242) to ConcurrentHashMapV8", "Move SimpleType: MonitorConfig(295) into ParameterizedType: ConcurrentHashMapV8<MonitorConfig,Entry>(462) at 1", "Update SimpleType: Counter(246) to Entry", "Insert MethodInvocation(475) into MethodInvocation(478) at 0", "Insert SimpleName: setNameFormat(476) into MethodInvocation(478) at 1", "Insert StringLiteral: \"dynCounterExpiration-%d\"(477) into MethodInvocation(478) at 2", "Insert ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry>(521) into ClassInstanceCreation(541) at 0", "Insert AnonymousClassDeclaration(540) into ClassInstanceCreation(541) at 1", "Insert SimpleName: builder(801) into MethodInvocation(804) at 0", "Insert SimpleName: add(802) into MethodInvocation(804) at 1", "Insert QualifiedName: e.counter(803) into MethodInvocation(804) at 2", "Insert SimpleName: getClass(260) into MethodInvocation(261) at 0", "Insert SimpleName: o(262) into MethodInvocation(264) at 0", "Insert SimpleName: getClass(263) into MethodInvocation(264) at 1", "Insert SimpleName: Entry(273) into SimpleType: Entry(274) at 0", "Insert InfixExpression: ^(303) into ParenthesizedExpression(304) at 0", "Insert NumberLiteral: 31(309) into InfixExpression: *(311) at 0", "Insert SimpleName: result(310) into InfixExpression: *(311) at 1", "Insert SimpleName: counter(312) into MethodInvocation(314) at 0", "Insert SimpleName: hashCode(313) into MethodInvocation(314) at 1", "Insert PrimitiveType: long(351) into VariableDeclarationStatement(359) at 0", "Insert VariableDeclarationFragment(358) into VariableDeclarationStatement(359) at 1", "Insert SingleVariableDeclaration(368) into EnhancedForStatement(392) at 0", "Insert MethodInvocation(371) into EnhancedForStatement(392) at 1", "Insert Block(391) into EnhancedForStatement(392) at 2", "Update SimpleName: CacheLoader(241) to ConcurrentHashMapV8", "Update SimpleName: Counter(245) to Entry", "Insert ClassInstanceCreation(472) into MethodInvocation(475) at 0", "Insert SimpleName: setDaemon(473) into MethodInvocation(475) at 1", "Insert BooleanLiteral: true(474) into MethodInvocation(475) at 2", "Insert SimpleType: ConcurrentHashMapV8.Fun(516) into ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry>(521) at 0", "Insert SimpleType: MonitorConfig(518) into ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry>(521) at 1", "Insert SimpleType: Entry(520) into ParameterizedType: ConcurrentHashMapV8.Fun<MonitorConfig,Entry>(521) at 2", "Insert MethodDeclaration(539) into AnonymousClassDeclaration(540) at 0", "Insert SimpleName: accessTime(298) into InfixExpression: ^(303) at 0", "Insert ParenthesizedExpression(302) into InfixExpression: ^(303) at 1", "Insert SimpleName: tooOld(352) into VariableDeclarationFragment(358) at 0", "Insert InfixExpression: -(357) into VariableDeclarationFragment(358) at 1", "Insert ParameterizedType: Map.Entry<MonitorConfig,Entry>(366) into SingleVariableDeclaration(368) at 0", "Insert SimpleName: entry(367) into SingleVariableDeclaration(368) at 1", "Insert SimpleName: counters(369) into MethodInvocation(371) at 0", "Insert SimpleName: entrySet(370) into MethodInvocation(371) at 1", "Insert IfStatement(390) into Block(391) at 0", "Insert SimpleType: ThreadFactoryBuilder(471) into ClassInstanceCreation(472) at 0", "Insert QualifiedName: ConcurrentHashMapV8.Fun(515) into SimpleType: ConcurrentHashMapV8.Fun(516) at 0", "Insert SimpleName: MonitorConfig(517) into SimpleType: MonitorConfig(518) at 0", "Update SimpleName: ExecutionException(304) to Entry", "Move SimpleName: ExecutionException(304) into SimpleType: Entry(520) at 0", "Insert MarkerAnnotation(523) into MethodDeclaration(539) at 0", "Insert Modifier: public(524) into MethodDeclaration(539) at 1", "Insert SimpleType: Entry(526) into MethodDeclaration(539) at 2", "Insert SimpleName: apply(527) into MethodDeclaration(539) at 3", "Insert SingleVariableDeclaration(532) into MethodDeclaration(539) at 4", "Insert Block(538) into MethodDeclaration(539) at 5", "Insert InfixExpression: >>>(301) into ParenthesizedExpression(302) at 0", "Insert MethodInvocation(355) into InfixExpression: -(357) at 0", "Insert SimpleName: expireAfterMs(356) into InfixExpression: -(357) at 1", "Insert SimpleType: Map.Entry(361) into ParameterizedType: Map.Entry<MonitorConfig,Entry>(366) at 0", "Move SimpleType: MonitorConfig(244) into ParameterizedType: Map.Entry<MonitorConfig,Entry>(366) at 1", "Update SimpleType: CompositeMonitor(183) to Entry", "Move SimpleType: CompositeMonitor(183) into ParameterizedType: Map.Entry<MonitorConfig,Entry>(366) at 2", "Insert InfixExpression: <(378) into IfStatement(390) at 0", "Insert Block(389) into IfStatement(390) at 1", "Update SimpleName: Exception(259) to ThreadFactoryBuilder", "Move SimpleName: Exception(259) into SimpleType: ThreadFactoryBuilder(471) at 0", "Insert SimpleName: Override(522) into MarkerAnnotation(523) at 0", "Insert SimpleName: Entry(525) into SimpleType: Entry(526) at 0", "Insert Modifier: final(528) into SingleVariableDeclaration(532) at 0", "Move SimpleType: MonitorConfig(561) into SingleVariableDeclaration(532) at 1", "Insert SimpleName: monitorConfig(531) into SingleVariableDeclaration(532) at 2", "Insert ReturnStatement(537) into Block(538) at 0", "Insert SimpleName: accessTime(299) into InfixExpression: >>>(301) at 0", "Insert NumberLiteral: 32(300) into InfixExpression: >>>(301) at 1", "Insert SimpleName: System(353) into MethodInvocation(355) at 0", "Insert SimpleName: currentTimeMillis(354) into MethodInvocation(355) at 1", "Insert QualifiedName: Map.Entry(360) into SimpleType: Map.Entry(361) at 0", "Update SimpleName: CompositeMonitor(182) to Entry", "Insert FieldAccess(376) into InfixExpression: <(378) at 0", "Insert SimpleName: tooOld(377) into InfixExpression: <(378) at 1", "Insert ExpressionStatement(388) into Block(389) at 0", "Insert MethodInvocation(536) into ReturnStatement(537) at 0", "Insert MethodInvocation(374) into FieldAccess(376) at 0", "Insert SimpleName: accessTime(375) into FieldAccess(376) at 1", "Insert MethodInvocation(387) into ExpressionStatement(388) at 0", "Update SimpleName: e(312) to Entry", "Move SimpleName: e(312) into MethodInvocation(536) at 0", "Update SimpleName: getMessage(313) to newEntry", "Move SimpleName: getMessage(313) into MethodInvocation(536) at 1", "Insert SimpleName: config(535) into MethodInvocation(536) at 2", "Insert SimpleName: entry(372) into MethodInvocation(374) at 0", "Insert SimpleName: getValue(373) into MethodInvocation(374) at 1", "Insert SimpleName: counters(379) into MethodInvocation(387) at 0", "Insert SimpleName: remove(380) into MethodInvocation(387) at 1", "Insert MethodInvocation(383) into MethodInvocation(387) at 2", "Insert MethodInvocation(386) into MethodInvocation(387) at 3", "Insert SimpleName: entry(381) into MethodInvocation(383) at 0", "Insert SimpleName: getKey(382) into MethodInvocation(383) at 1", "Insert SimpleName: entry(384) into MethodInvocation(386) at 0", "Insert SimpleName: getValue(385) into MethodInvocation(386) at 1", "Delete QualifiedName: com.google.common.base.Throwables(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: com.google.common.cache.CacheLoader(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: com.google.common.cache.LoadingCache(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: com.netflix.servo.DefaultMonitorRegistry(28)", "Delete ImportDeclaration(29)", "Delete FieldDeclaration(142)", "Delete StringLiteral: \"servoCountersCache\"(140)", "Delete Modifier: private(168)", "Delete SimpleType: LoadingCache(171)", "Delete SimpleType: Counter(175)", "Delete ParameterizedType: LoadingCache<MonitorConfig,Counter>(176)", "Delete FieldDeclaration(179)", "Delete Modifier: private(180)", "Delete WildcardType: ?(184)", "Delete ParameterizedType: CompositeMonitor<?>(185)", "Delete FieldDeclaration(188)", "Delete SimpleName: newBuilder(234)", "Delete MethodInvocation(235)", "Delete SimpleName: expirationUnitValue(238)", "Delete MethodInvocation(239)", "Delete SimpleName: build(240)", "Delete Modifier: public(250)", "Delete SimpleType: Counter(252)", "Delete SimpleName: load(253)", "Delete SimpleType: Exception(260)", "Delete MethodDeclaration(267)", "Delete AnonymousClassDeclaration(268)", "Delete ClassInstanceCreation(269)", "Delete MethodInvocation(270)", "Delete Assignment: =(271)", "Delete ExpressionStatement(272)", "Delete SimpleName: counters(277)", "Delete MethodInvocation(283)", "Delete ThisExpression(285)", "Delete MethodInvocation(301)", "Delete ReturnStatement(302)", "Delete Block(303)", "Delete SimpleType: ExecutionException(305)", "Delete SimpleName: e(306)", "Delete SingleVariableDeclaration(307)", "Delete SimpleName: LOGGER(308)", "Delete SimpleName: error(309)", "Delete StringLiteral: \"Failed to get a counter for {}: {}\"(310)", "Delete SimpleName: config(311)", "Delete MethodInvocation(314)", "Delete MethodInvocation(315)", "Delete ExpressionStatement(316)", "Delete SimpleName: e(319)", "Delete MethodInvocation(320)", "Delete ThrowStatement(321)", "Delete Block(322)", "Delete CatchClause(323)", "Delete TryStatement(324)", "Delete Modifier: final(557)", "Delete SimpleName: ConcurrentMap(558)", "Delete SimpleType: ConcurrentMap(559)", "Delete SimpleName: Counter(562)", "Delete SimpleName: ImmutableList(571)", "Delete SimpleName: copyOf(576)", "Delete MethodInvocation(579)", "Delete MethodInvocation(580)", "Delete ReturnStatement(581)", "Delete SimpleName: asMap(595)", "Delete MethodInvocation(596)", "Delete SimpleName: counters(631)", "Delete SimpleName: asMap(632)", "Delete MethodInvocation(633)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "True"}]}