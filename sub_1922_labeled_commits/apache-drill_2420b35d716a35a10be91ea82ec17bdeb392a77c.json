{"application": "apache-drill", "csha": "2420b35d716a35a10be91ea82ec17bdeb392a77c", "files": [{"SqlPatternContainsMatcher_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: SQL Pattern Contains implementation  to TagElement at 0", "INS Javadoc to TypeDeclaration: class at 0"]}, {"root": "INS Modifier: final to TypeDeclaration: class at 2", "operations": ["INS Modifier: final to TypeDeclaration: class at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: matcherFcn to VariableDeclarationFragment at 0", "INS SimpleType: MatcherFcn to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: matcherFcn to MethodInvocation at 0", "INS SimpleName: start to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: match to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS SimpleName: end to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS SimpleName: drillBuf to MethodInvocation at 4", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 8", "operations": ["INS SimpleName: MatcherFcn to TypeDeclaration: class at 3", "INS AssertStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Modifier: protected to FieldDeclaration at 0", "INS MethodInvocation to AssertStatement at 0", "INS SimpleName: array to MethodInvocation at 1", "INS SimpleName: patternArray to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS SimpleName: match to MethodDeclaration at 4", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS TagElement: @return to Javadoc at 0", "INS PrimitiveType: int to MethodDeclaration at 3", "INS ExpressionStatement to Block at 1", "INS SimpleName: patternArray to VariableDeclarationFragment at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS Javadoc to MethodDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ArrayType: byte[] to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 2", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: patternByteBuffer to MethodInvocation at 0", "INS Modifier: abstract to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Modifier: abstract to TypeDeclaration: class at 2", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: hasArray to MethodInvocation at 1", "INS TextElement: Abstract matcher class to allow us pick the most efficient implementation  to TagElement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 8", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: patternByteBuffer to MethodInvocation at 0", "INS SimpleName: MatcherFcn to MethodDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TextElement:  1 if the pattern was matched; 0 otherwise to TagElement: @return at 0", "INS Modifier: protected to MethodDeclaration at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 9", "operations": ["INS SimpleName: end to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: match to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS TagElement: @inheritDoc to TagElement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 9", "INS Javadoc to TypeDeclaration: class at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 9", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS TextElement:   to TagElement at 1", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS Modifier: protected to MethodDeclaration at 2", "INS SimpleName: MatcherZero to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Handles patterns with length zero  to TagElement at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 2", "INS Modifier: final to MethodDeclaration at 3", "INS SimpleName: MatcherZero to TypeDeclaration: class at 3", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 4", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS TagElement to Javadoc at 0", "INS Modifier: private to MethodDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 5"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 10", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS SimpleName: firstPatternByte to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Modifier: final to TypeDeclaration: class at 2", "INS Modifier: final to MethodDeclaration at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: inputByte to InfixExpression: != at 1", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: MatcherOne to TypeDeclaration: class at 3", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 1", "INS Modifier: protected to MethodDeclaration at 2", "INS ForStatement to Block at 1", "INS ArrayAccess to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS PrimitiveType: int to MethodDeclaration at 4", "INS SimpleName: idx to PostfixExpression: ++ at 0", "INS SimpleName: MatcherOne to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: inputByte to VariableDeclarationFragment at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS Block to ForStatement at 3", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS TagElement: @inheritDoc to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS Modifier: final to FieldDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS TypeDeclaration: class to TypeDeclaration: class at 10", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: getByte to MethodInvocation at 1", "INS TextElement: Handles patterns with length one  to TagElement at 0", "INS SimpleName: match to MethodDeclaration at 5", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS SimpleName: firstPatternByte to InfixExpression: != at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 9", "INS SimpleName: firstPatternByte to VariableDeclarationFragment at 0", "INS TextElement:   to TagElement at 1", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS PrimitiveType: byte to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 11", "operations": ["INS SimpleName: match to MethodDeclaration at 5", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: start to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 0", "INS TagElement: @inheritDoc to TagElement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Javadoc to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: idx to PostfixExpression: ++ at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: firstInByte to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: MatcherTwo to MethodDeclaration at 1", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS IfStatement to Block at 1", "INS SimpleName: secondPatternByte to InfixExpression: == at 1", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS SimpleName: secondInByte to VariableDeclarationFragment at 0", "INS Modifier: private to MethodDeclaration at 0", "INS IfStatement to Block at 1", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: firstPatternByte to VariableDeclarationFragment at 0", "INS Modifier: protected to MethodDeclaration at 2", "INS ArrayAccess to Assignment: = at 1", "INS Modifier: final to MethodDeclaration at 3", "INS ExpressionStatement to Block at 1", "INS ReturnStatement to Block at 2", "INS SimpleName: start to InfixExpression: + at 0", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS ForStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS PrimitiveType: int to MethodDeclaration at 4", "INS SimpleName: firstPatternByte to InfixExpression: != at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: secondPatternByte to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 9", "INS SimpleName: patternArray to ArrayAccess at 0", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS SimpleName: secondPatternByte to Assignment: = at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Modifier: final to FieldDeclaration at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS TextElement: Handles patterns with length two  to TagElement at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: secondInByte to InfixExpression: == at 0", "INS SimpleName: MatcherTwo to TypeDeclaration: class at 3", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Block to ForStatement at 3", "INS InfixExpression: == to IfStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: lengthToProcess to InfixExpression: < at 1", "INS SimpleName: idx to InfixExpression: < at 0", "INS SimpleName: firstInByte to InfixExpression: != at 1", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS NumberLiteral: 1 to InfixExpression: + at 2", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS SimpleName: firstPatternByte to Assignment: = at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 11", "INS SimpleName: getByte to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS TagElement to Javadoc at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS TextElement:   to TagElement at 1", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS ContinueStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Modifier: final to TypeDeclaration: class at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to IfStatement at 2", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ArrayAccess to Assignment: = at 1", "INS SimpleName: getByte to MethodInvocation at 1"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 12", "operations": ["INS SimpleName: getByte to MethodInvocation at 1", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS SimpleName: secondInByte to InfixExpression: == at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: secondPatternByte to InfixExpression: == at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TagElement to Javadoc at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: thirdPatternByte to VariableDeclarationFragment at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: secondPatternByte to VariableDeclarationFragment at 0", "INS SimpleName: inputByte to VariableDeclarationFragment at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: protected to MethodDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: final to FieldDeclaration at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS ExpressionStatement to Block at 2", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS ArrayAccess to Assignment: = at 1", "INS Modifier: final to FieldDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: start to InfixExpression: + at 0", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: firstPatternByte to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 12", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS IfStatement to Block at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS IfStatement to Block at 2", "INS SimpleName: MatcherThree to MethodDeclaration at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS Block to MethodDeclaration at 2", "INS Modifier: final to FieldDeclaration at 0", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: secondInByte to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: thirdInByte to VariableDeclarationFragment at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS TagElement: @inheritDoc to TagElement at 0", "INS TextElement: Handles patterns with length three  to TagElement at 0", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS SimpleName: firstPatternByte to InfixExpression: != at 0", "INS InfixExpression: && to IfStatement at 0", "INS TextElement:   to TagElement at 1", "INS SimpleName: MatcherThree to TypeDeclaration: class at 3", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ContinueStatement to Block at 0", "INS SimpleName: lengthToProcess to VariableDeclarationFragment at 0", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: thirdPatternByte to Assignment: = at 0", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: firstPatternByte to Assignment: = at 0", "INS SimpleName: start to InfixExpression: - at 1", "INS VariableDeclarationStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to ForStatement at 3", "INS NumberLiteral: 2 to InfixExpression: + at 2", "INS SimpleName: start to InfixExpression: + at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS SimpleName: idx to InfixExpression: + at 1", "INS SimpleName: getByte to MethodInvocation at 1", "INS SimpleName: inputByte to InfixExpression: != at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: final to MethodDeclaration at 3", "INS NumberLiteral: 2 to ArrayAccess at 1", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS NumberLiteral: 2 to InfixExpression: - at 2", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS Block to IfStatement at 2", "INS Block to MethodDeclaration at 9", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: thirdPatternByte to InfixExpression: == at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ForStatement to Block at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS ArrayAccess to Assignment: = at 1", "INS NumberLiteral: 1 to InfixExpression: + at 2", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS PrimitiveType: int to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: end to InfixExpression: - at 0", "INS SimpleName: match to MethodDeclaration at 5", "INS SimpleName: secondPatternByte to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS InfixExpression: + to MethodInvocation at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 2", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS SimpleName: getByte to MethodInvocation at 1", "INS ArrayAccess to Assignment: = at 1", "INS SimpleName: thirdInByte to InfixExpression: == at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 13", "operations": ["INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 13", "INS Modifier: final to TypeDeclaration: class at 2", "INS PrimitiveType: int to MethodDeclaration at 4", "INS SimpleName: lengthToProcess to VariableDeclarationFragment at 0", "INS ArrayAccess to Assignment: = at 1", "INS SimpleName: match to MethodDeclaration at 5", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: - to InfixExpression: + at 0", "INS TextElement: Handles patterns with arbitrary length  to TagElement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS SimpleName: MatcherN to TypeDeclaration: class at 3", "INS PrimitiveType: byte to FieldDeclaration at 1", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: start to InfixExpression: - at 1", "INS TagElement: @inheritDoc to TagElement at 0", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS TagElement to Javadoc at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: MatcherN to MethodDeclaration at 1", "INS SimpleName: firstPatternByte to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Modifier: private to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:   to TagElement at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS VariableDeclarationStatement to Block at 1", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS Modifier: final to MethodDeclaration at 3", "INS SimpleName: firstPatternByte to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: final to FieldDeclaration at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 9", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: patternLength to InfixExpression: - at 2", "INS Modifier: protected to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: end to InfixExpression: - at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 14", "operations": ["INS SimpleName: suffixLength to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS InfixExpression: - to InfixExpression: + at 0", "INS Block to ForStatement at 4", "INS SimpleName: resultTable to ArrayAccess at 0", "INS Modifier: protected to MethodDeclaration at 2", "INS Dimension to ArrayType: int[] at 1", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS Block to ForStatement at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: idx to InfixExpression: < at 0", "INS SimpleName: resultTable to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: inputLength to InfixExpression: < at 1", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS SimpleName: characterTable to VariableDeclarationFragment at 0", "INS Assignment: = to ForStatement at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ExpressionStatement to Block at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: idx1 to ArrayAccess at 1", "INS ReturnStatement to Block at 4", "INS ParenthesizedExpression to InfixExpression: & at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: BoyerMooreMatcher to MethodDeclaration at 1", "INS SimpleName: end to InfixExpression: - at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrefixExpression: ++ to ForStatement at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: patternLength to ArrayCreation at 1", "INS SimpleName: idx2 to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS InfixExpression: - to Assignment: = at 1", "INS TextElement: Builds the scan offset based on which mismatch occurs.  to TagElement at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS ForStatement to Block at 1", "INS InfixExpression: - to ArrayAccess at 1", "INS ArrayAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: idx1 to InfixExpression: >= at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: suffixLength to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS IfStatement to Block at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS Block to ForStatement at 3", "INS SimpleName: resultTable to ArrayAccess at 0", "INS Dimension to ArrayType: int[] at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: idx1 to PrefixExpression: -- at 0", "INS SimpleName: idx1 to InfixExpression: + at 1", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: patternLength to Assignment: = at 1", "INS SimpleName: idx to InfixExpression: - at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: idx to InfixExpression: < at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS SimpleName: idx2 to InfixExpression: - at 2", "INS SimpleType: DrillBuf to SingleVariableDeclaration at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: idx to InfixExpression: < at 0", "INS ArrayType: int[] to MethodDeclaration at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: result to ReturnStatement at 0", "INS SimpleName: idx1 to PrefixExpression: -- at 0", "INS SimpleName: resultTable to ArrayAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrefixExpression: -- to ForStatement at 3", "INS ArrayType: int[] to ArrayCreation at 0", "INS SimpleName: getByte to MethodInvocation at 1", "INS ArrayAccess to InfixExpression: != at 1", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS InfixExpression: < to ForStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to ForStatement at 4", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: idx2 to ArrayAccess at 1", "INS ArrayAccess to CastExpression at 1", "INS SimpleName: idx1 to InfixExpression: < at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: result to Assignment: += at 0", "INS SimpleName: idx to InfixExpression: + at 0", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS SimpleName: idx to PrefixExpression: -- at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS ArrayAccess to MethodInvocation at 3", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS ReturnStatement to Block at 2", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: makeCharTable to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS TextElement: Build the jump table based on the mismatched character information  to TagElement at 0", "INS SimpleName: offsetTable to VariableDeclarationFragment at 0", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ForStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ArrayType: int[] to FieldDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: lastPrefixPosition to VariableDeclarationFragment at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 14", "INS ExpressionStatement to Block at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS Block to MethodDeclaration at 4", "INS PrefixExpression: -- to ForStatement at 2", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: start to InfixExpression: - at 1", "INS SimpleName: isPrefix to MethodDeclaration at 3", "INS SimpleName: isPrefix to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS Block to ForStatement at 4", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: pos to SingleVariableDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS SimpleName: pos to VariableDeclarationFragment at 1", "INS ArrayAccess to Assignment: = at 0", "INS TagElement: @inheritDoc to TagElement at 0", "INS InfixExpression: - to InfixExpression: < at 1", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS SimpleName: characterTable to ArrayAccess at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS Assignment: += to ExpressionStatement at 0", "INS SuperConstructorInvocation to Block at 0", "INS Dimension to ArrayType: int[] at 1", "INS PrefixExpression: -- to ForStatement at 2", "INS SimpleName: resultTable to ReturnStatement at 0", "INS TextElement: Computes the maximum length of the substring ends at \"pos\" and is a suffix  to TagElement at 0", "INS SimpleName: idx to ArrayAccess at 1", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: patternValue to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ArrayType: int[] to ArrayCreation at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: idx to PrefixExpression: ++ at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS IfStatement to Block at 0", "INS SimpleName: lastPrefixPosition to InfixExpression: - at 0", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: DrillBuf to SimpleType: DrillBuf at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS QualifiedName: resultTable.length to InfixExpression: < at 1", "INS ArrayAccess to InfixExpression: != at 0", "INS SimpleName: suffixLen to VariableDeclarationFragment at 0", "INS NumberLiteral: 256 to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS PrefixExpression: -- to ForStatement at 2", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS SimpleName: TABLE_SIZE to VariableDeclarationFragment at 0", "INS SimpleName: idx to InfixExpression: + at 0", "INS ForStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: - to ArrayAccess at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: idx to PrefixExpression: ++ at 0", "INS ArrayAccess to InfixExpression: == at 0", "INS SimpleName: idx2 to PrefixExpression: ++ at 0", "INS SimpleName: idx2 to ArrayAccess at 1", "INS Dimension to ArrayType: int[] at 1", "INS SimpleName: inputLength to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: idx to InfixExpression: >= at 0", "INS SimpleName: idx1 to PrefixExpression: ++ at 0", "INS SimpleName: idx to PrefixExpression: ++ at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: idx to ArrayAccess at 1", "INS SimpleName: idx to InfixExpression: - at 2", "INS SimpleName: match to MethodDeclaration at 4", "INS SimpleName: start to InfixExpression: + at 0", "INS SimpleName: pos to VariableDeclarationFragment at 1", "INS SimpleName: idx1 to VariableDeclarationFragment at 0", "INS Modifier: private to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Block to IfStatement at 1", "INS ArrayAccess to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: idx to InfixExpression: - at 2", "INS SimpleName: idx1 to Assignment: += at 0", "INS TextElement: Checks whether needle[pos:end] is a prefix of pattern  to TagElement at 0", "INS TextElement: frequently in the input. to TagElement at 1", "INS SimpleName: pos to SingleVariableDeclaration at 1", "INS PrefixExpression: ++ to ForStatement at 2", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS PrefixExpression: ++ to ForStatement at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS SimpleName: idx1 to VariableDeclarationFragment at 0", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: idx2 to PrefixExpression: -- at 0", "INS SimpleName: TABLE_SIZE to ArrayCreation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: makeCharTable to MethodInvocation at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS Javadoc to MethodDeclaration at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: offsetTable to FieldAccess at 1", "INS SimpleName: getByte to MethodInvocation at 1", "INS PrimitiveType: int to CastExpression at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS InfixExpression: & to VariableDeclarationFragment at 1", "INS PrefixExpression: -- to ForStatement at 3", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS MethodInvocation to Assignment: = at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS InfixExpression: - to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: idx2 to PrefixExpression: -- at 0", "INS ForStatement to Block at 1", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: resultTable to ReturnStatement at 0", "INS SimpleName: max to MethodInvocation at 1", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: idx to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS Block to IfStatement at 1", "INS SimpleName: makeOffsetTable to MethodInvocation at 0", "INS Block to ForStatement at 3", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS Dimension to ArrayType: int[] at 1", "INS SimpleName: idx2 to InfixExpression: == at 0", "INS ArrayType: int[] to VariableDeclarationStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ArrayAccess to InfixExpression: == at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS Block to ForStatement at 3", "INS SimpleName: characterTable to FieldAccess at 1", "INS Modifier: private to MethodDeclaration at 1", "INS ReturnStatement to Block at 2", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: suffixLen to InfixExpression: + at 1", "INS SimpleName: idx2 to VariableDeclarationFragment at 0", "INS ForStatement to Block at 0", "INS ArrayType: int[] to FieldDeclaration at 2", "INS Modifier: private to TypeDeclaration: class at 1", "INS SimpleName: MatcherFcn to SimpleType: MatcherFcn at 0", "INS SimpleName: lastPrefixPosition to Assignment: = at 0", "INS InfixExpression: == to ForStatement at 1", "INS InfixExpression: + to Assignment: = at 1", "INS ArrayAccess to InfixExpression: == at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: makeOffsetTable to MethodDeclaration at 3", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: private to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS ForStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: patternValue to ArrayAccess at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: drillBuf to SingleVariableDeclaration at 1", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: && to ForStatement at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS InfixExpression: + to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS TextElement:   to TagElement at 1", "INS TextElement: Boyer-Moore matcher algorithm; excellent for large patterns and for prefix patterns which appear to TagElement at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS InfixExpression: >= to InfixExpression: && at 0", "INS InfixExpression: & to ArrayAccess at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: - to InfixExpression: + at 0", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to MethodDeclaration at 3", "INS SimpleName: offsetTable to ArrayAccess at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: idx2 to Assignment: = at 0", "INS SimpleName: resultTable to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: idx1 to ArrayAccess at 1", "INS InfixExpression: < to ForStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: final to TypeDeclaration: class at 2", "INS SimpleName: resultTable to ArrayAccess at 0", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS InfixExpression: - to Assignment: = at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: idx2 to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS ArrayType: int[] to MethodDeclaration at 2", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS MethodInvocation to Assignment: += at 1", "INS SimpleName: patternLength to InfixExpression: + at 1", "INS Block to MethodDeclaration at 8", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS InfixExpression: >= to ForStatement at 1", "INS SimpleName: BoyerMooreMatcher to TypeDeclaration: class at 3", "INS VariableDeclarationExpression to ForStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS Modifier: private to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS Dimension to ArrayType: int[] at 1", "INS Block to ForStatement at 3", "INS InfixExpression: - to InfixExpression: < at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS SimpleName: idx1 to InfixExpression: + at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ForStatement to Block at 3", "INS PrimitiveType: int to ArrayType: int[] at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: patternLength to InfixExpression: < at 1", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: idx1 to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS ReturnStatement to Block at 4", "INS NumberLiteral: 1 to Assignment: += at 1", "INS MethodInvocation to InfixExpression: & at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: idx to InfixExpression: - at 1", "INS ExpressionStatement to Block at 1", "INS TagElement to Javadoc at 0", "INS ForStatement to Block at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: patternLength to InfixExpression: - at 0", "INS SimpleName: patternLength to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: idx2 to ArrayAccess at 1", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS Dimension to ArrayType: int[] at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS ArrayType: int[] to VariableDeclarationStatement at 0", "INS SimpleName: idx1 to InfixExpression: < at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: patternArray to ArrayAccess at 0", "INS SimpleType: MatcherFcn to TypeDeclaration: class at 4", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: suffixLen to ArrayAccess at 1", "INS Dimension to ArrayType: int[] at 1", "INS InfixExpression: + to InfixExpression: - at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 3 to InfixExpression: == at 1", "INS SimpleName: MatcherThree to SimpleType: MatcherThree at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: patternLength to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: MatcherZero to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: patternLength to InfixExpression: == at 0", "INS SimpleName: MatcherTwo to SimpleType: MatcherTwo at 0", "INS SimpleName: MatcherOne to SimpleType: MatcherOne at 0", "INS SimpleType: MatcherOne to ClassInstanceCreation at 0", "INS InfixExpression: < to IfStatement at 0", "INS SimpleType: MatcherThree to ClassInstanceCreation at 0", "INS SimpleName: patternLength to InfixExpression: == at 0", "INS SimpleName: MatcherZero to SimpleType: MatcherZero at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: BoyerMooreMatcher to SimpleType: BoyerMooreMatcher at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to IfStatement at 2", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS IfStatement to IfStatement at 2", "INS Block to MethodDeclaration at 3", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: MatcherN to SimpleType: MatcherN at 0", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS IfStatement to IfStatement at 2", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 10 to InfixExpression: < at 1", "INS SimpleType: MatcherTwo to ClassInstanceCreation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: MatcherN to ClassInstanceCreation at 0", "INS SimpleName: patternLength to InfixExpression: < at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: matcherFcn to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: BoyerMooreMatcher to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleName: match to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 1", "MOV PrimitiveType: int to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "MOVE from Block", "operations": ["MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 2", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from ForStatement", "operations": ["MOV PostfixExpression: ++ to ForStatement at 2", "MOV VariableDeclarationExpression to ForStatement at 0", "MOV InfixExpression: <= to ForStatement at 1"]}, {"root": "UPDATE from <= to <", "operations": ["UPD InfixExpression: <= from <= to <"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS InfixExpression: < to ForStatement at 1", "operations": ["INS SimpleName: idx to InfixExpression: < at 0", "INS SimpleName: lengthToProcess to InfixExpression: < at 1", "INS InfixExpression: < to ForStatement at 1"]}, {"root": "UPDATE from patternLength to lengthToProcess", "operations": ["UPD SimpleName: patternLength from patternLength to lengthToProcess", "UPD SimpleName: txtLength from txtLength to lengthToProcess", "UPD SimpleName: outerEnd from outerEnd to lengthToProcess", "UPD SimpleName: outerEnd from outerEnd to lengthToProcess"]}, {"root": "UPDATE from txtIndex to idx", "operations": ["UPD SimpleName: txtIndex from txtIndex to idx", "UPD SimpleName: txtLength from txtLength to idx", "UPD SimpleName: txtIndex from txtIndex to idx", "UPD SimpleName: patternIndex from patternIndex to idx", "UPD SimpleName: txtIndex from txtIndex to idx", "UPD SimpleName: txtIndex from txtIndex to idx"]}, {"root": "MOVE from InfixExpression: <", "operations": ["MOV SimpleName: patternLength to InfixExpression: < at 1", "MOV SimpleName: txtLength to InfixExpression: < at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: idx to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: idx to InfixExpression: + at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: inputByte to VariableDeclarationFragment at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: drillBuf to MethodInvocation at 0", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getByte to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from txtLength to end", "operations": ["UPD SimpleName: txtLength from txtLength to end"]}, {"root": "UPDATE from patternLength to start", "operations": ["UPD SimpleName: patternLength from patternLength to start"]}, {"root": "INS NumberLiteral: 1 to InfixExpression: - at 2", "operations": ["INS NumberLiteral: 1 to InfixExpression: - at 2"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS SimpleName: inputByte to InfixExpression: == at 1", "INS SimpleName: firstPatternByte to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: patternIndex to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS Block to ForStatement at 3", "INS NumberLiteral: 1 to Assignment: = at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS ForStatement to Block at 0", "INS SimpleName: currInByte to InfixExpression: != at 0", "INS BreakStatement to Block at 0", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: currPattByte to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: currPattByte to VariableDeclarationFragment at 0", "INS Assignment: = to ForStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: patternArray to ArrayAccess at 0", "INS IfStatement to Block at 2", "INS PrimitiveType: byte to VariableDeclarationStatement at 1", "INS SimpleName: patternIndex to PrefixExpression: ++ at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS SimpleName: patternIndex to Assignment: = at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: patternLength to InfixExpression: == at 1", "INS SimpleName: patternIndex to ArrayAccess at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: currInByte to VariableDeclarationFragment at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS ContinueStatement to Block at 0", "operations": ["INS ContinueStatement to Block at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV InfixExpression: < to ForStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 2", "MOV SimpleName: getByte to MethodInvocation at 1", "MOV SimpleName: drillBuf to MethodInvocation at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL SimpleName: patternByteBuffer", "DEL SimpleName: patternIndex", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL InfixExpression: !="]}, {"root": "DEL Block", "operations": ["DEL ContinueStatement", "DEL Block", "DEL SimpleName: outer"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL LabeledStatement", "DEL ForStatement", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: outer", "DEL Block", "DEL InfixExpression: <", "DEL IfStatement", "DEL IfStatement"]}]}}, {"SqlPatternContainsMatcher_diff": {"operations": ["Insert Javadoc(6) into TypeDeclaration: class(1096) at 0", "Insert Modifier: final(8) into TypeDeclaration: class(1096) at 2", "Insert FieldDeclaration(18) into TypeDeclaration: class(1096) at 5", "Insert MethodDeclaration(114) into TypeDeclaration: class(1096) at 7", "Insert TypeDeclaration: class(161) into TypeDeclaration: class(1096) at 8", "Insert TypeDeclaration: class(198) into TypeDeclaration: class(1096) at 9", "Insert TypeDeclaration: class(284) into TypeDeclaration: class(1096) at 10", "Insert TypeDeclaration: class(401) into TypeDeclaration: class(1096) at 11", "Insert TypeDeclaration: class(545) into TypeDeclaration: class(1096) at 12", "Insert TypeDeclaration: class(680) into TypeDeclaration: class(1096) at 13", "Insert TypeDeclaration: class(1095) into TypeDeclaration: class(1096) at 14", "Insert TagElement(5) into Javadoc(6) at 0", "Insert Modifier: private(12) into FieldDeclaration(18) at 0", "Insert Modifier: final(13) into FieldDeclaration(18) at 1", "Insert VariableDeclarationFragment(17) into FieldDeclaration(18) at 3", "Insert Block(89) into MethodDeclaration(90) at 3", "Insert MarkerAnnotation(92) into MethodDeclaration(114) at 0", "Move Modifier: public(20) into MethodDeclaration(114) at 1", "Move PrimitiveType: int(21) into MethodDeclaration(114) at 2", "Move SimpleName: match(22) into MethodDeclaration(114) at 3", "Insert SingleVariableDeclaration(98) into MethodDeclaration(114) at 4", "Insert SingleVariableDeclaration(101) into MethodDeclaration(114) at 5", "Insert SingleVariableDeclaration(105) into MethodDeclaration(114) at 6", "Insert Block(113) into MethodDeclaration(114) at 7", "Insert Javadoc(117) into TypeDeclaration: class(161) at 0", "Insert Modifier: private(118) into TypeDeclaration: class(161) at 1", "Insert Modifier: abstract(119) into TypeDeclaration: class(161) at 2", "Insert FieldDeclaration(128) into TypeDeclaration: class(161) at 4", "Insert MethodDeclaration(142) into TypeDeclaration: class(161) at 5", "Insert MethodDeclaration(160) into TypeDeclaration: class(161) at 6", "Insert Javadoc(164) into TypeDeclaration: class(198) at 0", "Insert Modifier: private(165) into TypeDeclaration: class(198) at 1", "Insert Modifier: final(166) into TypeDeclaration: class(198) at 2", "Insert MethodDeclaration(173) into TypeDeclaration: class(198) at 5", "Insert MethodDeclaration(197) into TypeDeclaration: class(198) at 6", "Insert Javadoc(201) into TypeDeclaration: class(284) at 0", "Insert Modifier: private(202) into TypeDeclaration: class(284) at 1", "Insert Modifier: final(203) into TypeDeclaration: class(284) at 2", "Insert FieldDeclaration(211) into TypeDeclaration: class(284) at 5", "Insert MethodDeclaration(221) into TypeDeclaration: class(284) at 6", "Insert MethodDeclaration(283) into TypeDeclaration: class(284) at 7", "Insert Javadoc(287) into TypeDeclaration: class(401) at 0", "Insert Modifier: private(288) into TypeDeclaration: class(401) at 1", "Insert Modifier: final(289) into TypeDeclaration: class(401) at 2", "Insert FieldDeclaration(297) into TypeDeclaration: class(401) at 5", "Insert FieldDeclaration(302) into TypeDeclaration: class(401) at 6", "Insert MethodDeclaration(318) into TypeDeclaration: class(401) at 7", "Insert MethodDeclaration(400) into TypeDeclaration: class(401) at 8", "Insert Javadoc(404) into TypeDeclaration: class(545) at 0", "Insert Modifier: private(405) into TypeDeclaration: class(545) at 1", "Insert Modifier: final(406) into TypeDeclaration: class(545) at 2", "Insert FieldDeclaration(414) into TypeDeclaration: class(545) at 5", "Insert FieldDeclaration(419) into TypeDeclaration: class(545) at 6", "Insert FieldDeclaration(424) into TypeDeclaration: class(545) at 7", "Insert MethodDeclaration(446) into TypeDeclaration: class(545) at 8", "Insert MethodDeclaration(544) into TypeDeclaration: class(545) at 9", "Insert Javadoc(548) into TypeDeclaration: class(680) at 0", "Insert Modifier: private(549) into TypeDeclaration: class(680) at 1", "Insert Modifier: final(550) into TypeDeclaration: class(680) at 2", "Insert FieldDeclaration(558) into TypeDeclaration: class(680) at 5", "Insert MethodDeclaration(568) into TypeDeclaration: class(680) at 6", "Insert MethodDeclaration(679) into TypeDeclaration: class(680) at 7", "Insert Javadoc(684) into TypeDeclaration: class(1095) at 0", "Insert Modifier: private(685) into TypeDeclaration: class(1095) at 1", "Insert Modifier: final(686) into TypeDeclaration: class(1095) at 2", "Insert FieldDeclaration(697) into TypeDeclaration: class(1095) at 5", "Insert FieldDeclaration(705) into TypeDeclaration: class(1095) at 6", "Insert MethodDeclaration(724) into TypeDeclaration: class(1095) at 7", "Insert MethodDeclaration(819) into TypeDeclaration: class(1095) at 8", "Insert MethodDeclaration(902) into TypeDeclaration: class(1095) at 9", "Insert MethodDeclaration(1004) into TypeDeclaration: class(1095) at 10", "Insert MethodDeclaration(1045) into TypeDeclaration: class(1095) at 11", "Insert MethodDeclaration(1094) into TypeDeclaration: class(1095) at 12", "Insert TextElement: SQL Pattern Contains implementation (4) into TagElement(5) at 0", "Insert SimpleName: matcherFcn(16) into VariableDeclarationFragment(17) at 0", "Move SuperConstructorInvocation(15) into Block(89) at 0", "Insert IfStatement(88) into Block(89) at 1", "Insert SimpleName: Override(91) into MarkerAnnotation(92) at 0", "Insert PrimitiveType: int(96) into SingleVariableDeclaration(98) at 0", "Insert SimpleName: start(97) into SingleVariableDeclaration(98) at 1", "Insert PrimitiveType: int(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: end(100) into SingleVariableDeclaration(101) at 1", "Insert SimpleType: DrillBuf(103) into SingleVariableDeclaration(105) at 0", "Insert SimpleName: drillBuf(104) into SingleVariableDeclaration(105) at 1", "Insert ReturnStatement(112) into Block(113) at 0", "Insert TagElement(116) into Javadoc(117) at 0", "Insert Modifier: protected(121) into FieldDeclaration(128) at 0", "Insert Modifier: final(122) into FieldDeclaration(128) at 1", "Insert ArrayType: byte[](125) into FieldDeclaration(128) at 2", "Insert VariableDeclarationFragment(127) into FieldDeclaration(128) at 3", "Insert Modifier: protected(129) into MethodDeclaration(142) at 0", "Insert Block(141) into MethodDeclaration(142) at 2", "Insert Javadoc(145) into MethodDeclaration(160) at 0", "Insert Modifier: protected(146) into MethodDeclaration(160) at 1", "Insert Modifier: abstract(147) into MethodDeclaration(160) at 2", "Insert PrimitiveType: int(148) into MethodDeclaration(160) at 3", "Insert SimpleName: match(149) into MethodDeclaration(160) at 4", "Insert SingleVariableDeclaration(152) into MethodDeclaration(160) at 5", "Insert SingleVariableDeclaration(155) into MethodDeclaration(160) at 6", "Insert SingleVariableDeclaration(159) into MethodDeclaration(160) at 7", "Insert TagElement(163) into Javadoc(164) at 0", "Insert Modifier: private(170) into MethodDeclaration(173) at 0", "Insert Block(172) into MethodDeclaration(173) at 2", "Insert Javadoc(177) into MethodDeclaration(197) at 0", "Insert MarkerAnnotation(179) into MethodDeclaration(197) at 1", "Insert Modifier: protected(180) into MethodDeclaration(197) at 2", "Insert Modifier: final(181) into MethodDeclaration(197) at 3", "Insert PrimitiveType: int(182) into MethodDeclaration(197) at 4", "Insert SimpleName: match(183) into MethodDeclaration(197) at 5", "Insert SingleVariableDeclaration(186) into MethodDeclaration(197) at 6", "Insert SingleVariableDeclaration(189) into MethodDeclaration(197) at 7", "Insert SingleVariableDeclaration(193) into MethodDeclaration(197) at 8", "Insert Block(196) into MethodDeclaration(197) at 9", "Insert TagElement(200) into Javadoc(201) at 0", "Insert Modifier: final(207) into FieldDeclaration(211) at 0", "Insert PrimitiveType: byte(208) into FieldDeclaration(211) at 1", "Insert VariableDeclarationFragment(210) into FieldDeclaration(211) at 2", "Insert Modifier: private(212) into MethodDeclaration(221) at 0", "Insert Block(220) into MethodDeclaration(221) at 2", "Insert Javadoc(225) into MethodDeclaration(283) at 0", "Insert MarkerAnnotation(227) into MethodDeclaration(283) at 1", "Insert Modifier: protected(228) into MethodDeclaration(283) at 2", "Insert Modifier: final(229) into MethodDeclaration(283) at 3", "Insert PrimitiveType: int(230) into MethodDeclaration(283) at 4", "Insert SimpleName: match(231) into MethodDeclaration(283) at 5", "Insert SingleVariableDeclaration(234) into MethodDeclaration(283) at 6", "Insert SingleVariableDeclaration(237) into MethodDeclaration(283) at 7", "Insert SingleVariableDeclaration(241) into MethodDeclaration(283) at 8", "Insert Block(282) into MethodDeclaration(283) at 9", "Insert TagElement(286) into Javadoc(287) at 0", "Insert Modifier: final(293) into FieldDeclaration(297) at 0", "Insert PrimitiveType: byte(294) into FieldDeclaration(297) at 1", "Insert VariableDeclarationFragment(296) into FieldDeclaration(297) at 2", "Insert Modifier: final(298) into FieldDeclaration(302) at 0", "Insert PrimitiveType: byte(299) into FieldDeclaration(302) at 1", "Insert VariableDeclarationFragment(301) into FieldDeclaration(302) at 2", "Insert Modifier: private(303) into MethodDeclaration(318) at 0", "Insert Block(317) into MethodDeclaration(318) at 2", "Insert Javadoc(322) into MethodDeclaration(400) at 0", "Insert MarkerAnnotation(324) into MethodDeclaration(400) at 1", "Insert Modifier: protected(325) into MethodDeclaration(400) at 2", "Insert Modifier: final(326) into MethodDeclaration(400) at 3", "Insert PrimitiveType: int(327) into MethodDeclaration(400) at 4", "Insert SimpleName: match(328) into MethodDeclaration(400) at 5", "Insert SingleVariableDeclaration(331) into MethodDeclaration(400) at 6", "Insert SingleVariableDeclaration(334) into MethodDeclaration(400) at 7", "Insert SingleVariableDeclaration(338) into MethodDeclaration(400) at 8", "Insert Block(399) into MethodDeclaration(400) at 9", "Insert TagElement(403) into Javadoc(404) at 0", "Insert Modifier: final(410) into FieldDeclaration(414) at 0", "Insert PrimitiveType: byte(411) into FieldDeclaration(414) at 1", "Insert VariableDeclarationFragment(413) into FieldDeclaration(414) at 2", "Insert Modifier: final(415) into FieldDeclaration(419) at 0", "Insert PrimitiveType: byte(416) into FieldDeclaration(419) at 1", "Insert VariableDeclarationFragment(418) into FieldDeclaration(419) at 2", "Insert Modifier: final(420) into FieldDeclaration(424) at 0", "Insert PrimitiveType: byte(421) into FieldDeclaration(424) at 1", "Insert VariableDeclarationFragment(423) into FieldDeclaration(424) at 2", "Insert Modifier: private(425) into MethodDeclaration(446) at 0", "Insert Block(445) into MethodDeclaration(446) at 2", "Insert Javadoc(450) into MethodDeclaration(544) at 0", "Insert MarkerAnnotation(452) into MethodDeclaration(544) at 1", "Insert Modifier: protected(453) into MethodDeclaration(544) at 2", "Insert Modifier: final(454) into MethodDeclaration(544) at 3", "Insert PrimitiveType: int(455) into MethodDeclaration(544) at 4", "Insert SimpleName: match(456) into MethodDeclaration(544) at 5", "Insert SingleVariableDeclaration(459) into MethodDeclaration(544) at 6", "Insert SingleVariableDeclaration(462) into MethodDeclaration(544) at 7", "Insert SingleVariableDeclaration(466) into MethodDeclaration(544) at 8", "Insert Block(543) into MethodDeclaration(544) at 9", "Insert TagElement(547) into Javadoc(548) at 0", "Insert Modifier: final(554) into FieldDeclaration(558) at 0", "Insert PrimitiveType: byte(555) into FieldDeclaration(558) at 1", "Insert VariableDeclarationFragment(557) into FieldDeclaration(558) at 2", "Insert Modifier: private(559) into MethodDeclaration(568) at 0", "Insert Block(567) into MethodDeclaration(568) at 2", "Insert Javadoc(572) into MethodDeclaration(679) at 0", "Move MarkerAnnotation(19) into MethodDeclaration(679) at 1", "Insert Modifier: protected(575) into MethodDeclaration(679) at 2", "Insert Modifier: final(576) into MethodDeclaration(679) at 3", "Insert PrimitiveType: int(577) into MethodDeclaration(679) at 4", "Insert SimpleName: match(578) into MethodDeclaration(679) at 5", "Move SingleVariableDeclaration(25) into MethodDeclaration(679) at 6", "Move SingleVariableDeclaration(28) into MethodDeclaration(679) at 7", "Move SingleVariableDeclaration(32) into MethodDeclaration(679) at 8", "Insert Block(678) into MethodDeclaration(679) at 9", "Insert TagElement(683) into Javadoc(684) at 0", "Insert Modifier: private(690) into FieldDeclaration(697) at 0", "Insert Modifier: final(691) into FieldDeclaration(697) at 1", "Insert ArrayType: int[](694) into FieldDeclaration(697) at 2", "Insert VariableDeclarationFragment(696) into FieldDeclaration(697) at 3", "Insert Modifier: private(698) into FieldDeclaration(705) at 0", "Insert Modifier: final(699) into FieldDeclaration(705) at 1", "Insert ArrayType: int[](702) into FieldDeclaration(705) at 2", "Insert VariableDeclarationFragment(704) into FieldDeclaration(705) at 3", "Insert Modifier: private(706) into MethodDeclaration(724) at 0", "Insert Block(723) into MethodDeclaration(724) at 2", "Insert Javadoc(728) into MethodDeclaration(819) at 0", "Insert MarkerAnnotation(730) into MethodDeclaration(819) at 1", "Insert Modifier: protected(731) into MethodDeclaration(819) at 2", "Insert PrimitiveType: int(732) into MethodDeclaration(819) at 3", "Insert SimpleName: match(733) into MethodDeclaration(819) at 4", "Insert SingleVariableDeclaration(736) into MethodDeclaration(819) at 5", "Insert SingleVariableDeclaration(739) into MethodDeclaration(819) at 6", "Insert SingleVariableDeclaration(743) into MethodDeclaration(819) at 7", "Insert Block(818) into MethodDeclaration(819) at 8", "Insert Javadoc(822) into MethodDeclaration(902) at 0", "Insert Modifier: private(823) into MethodDeclaration(902) at 1", "Insert ArrayType: int[](826) into MethodDeclaration(902) at 2", "Insert SimpleName: makeCharTable(827) into MethodDeclaration(902) at 3", "Insert Block(901) into MethodDeclaration(902) at 4", "Insert Javadoc(905) into MethodDeclaration(1004) at 0", "Insert Modifier: private(906) into MethodDeclaration(1004) at 1", "Insert ArrayType: int[](909) into MethodDeclaration(1004) at 2", "Insert SimpleName: makeOffsetTable(910) into MethodDeclaration(1004) at 3", "Insert Block(1003) into MethodDeclaration(1004) at 4", "Insert Javadoc(1007) into MethodDeclaration(1045) at 0", "Insert Modifier: private(1008) into MethodDeclaration(1045) at 1", "Insert PrimitiveType: boolean(1009) into MethodDeclaration(1045) at 2", "Insert SimpleName: isPrefix(1010) into MethodDeclaration(1045) at 3", "Insert SingleVariableDeclaration(1013) into MethodDeclaration(1045) at 4", "Insert Block(1044) into MethodDeclaration(1045) at 5", "Insert Javadoc(1048) into MethodDeclaration(1094) at 0", "Insert Modifier: private(1049) into MethodDeclaration(1094) at 1", "Insert PrimitiveType: int(1050) into MethodDeclaration(1094) at 2", "Insert SimpleName: suffixLength(1051) into MethodDeclaration(1094) at 3", "Insert SingleVariableDeclaration(1054) into MethodDeclaration(1094) at 4", "Insert Block(1093) into MethodDeclaration(1094) at 5", "Move InfixExpression: ==(35) into IfStatement(88) at 0", "Insert Block(36) into IfStatement(88) at 1", "Insert IfStatement(87) into IfStatement(88) at 2", "Insert SimpleName: DrillBuf(102) into SimpleType: DrillBuf(103) at 0", "Insert MethodInvocation(111) into ReturnStatement(112) at 0", "Insert TextElement: Abstract matcher class to allow us pick the most efficient implementation (115) into TagElement(116) at 0", "Insert PrimitiveType: byte(123) into ArrayType: byte[](125) at 0", "Insert Dimension(124) into ArrayType: byte[](125) at 1", "Insert SimpleName: patternArray(126) into VariableDeclarationFragment(127) at 0", "Insert AssertStatement(134) into Block(141) at 0", "Insert ExpressionStatement(140) into Block(141) at 1", "Insert TagElement: @return(144) into Javadoc(145) at 0", "Insert PrimitiveType: int(150) into SingleVariableDeclaration(152) at 0", "Insert SimpleName: start(151) into SingleVariableDeclaration(152) at 1", "Insert PrimitiveType: int(153) into SingleVariableDeclaration(155) at 0", "Insert SimpleName: end(154) into SingleVariableDeclaration(155) at 1", "Insert SimpleType: DrillBuf(157) into SingleVariableDeclaration(159) at 0", "Insert SimpleName: drillBuf(158) into SingleVariableDeclaration(159) at 1", "Insert TextElement: Handles patterns with length zero (162) into TagElement(163) at 0", "Insert TagElement(176) into Javadoc(177) at 0", "Insert SimpleName: Override(178) into MarkerAnnotation(179) at 0", "Insert PrimitiveType: int(184) into SingleVariableDeclaration(186) at 0", "Insert SimpleName: start(185) into SingleVariableDeclaration(186) at 1", "Insert PrimitiveType: int(187) into SingleVariableDeclaration(189) at 0", "Insert SimpleName: end(188) into SingleVariableDeclaration(189) at 1", "Insert SimpleType: DrillBuf(191) into SingleVariableDeclaration(193) at 0", "Insert SimpleName: drillBuf(192) into SingleVariableDeclaration(193) at 1", "Insert ReturnStatement(195) into Block(196) at 0", "Insert TextElement: Handles patterns with length one (199) into TagElement(200) at 0", "Insert SimpleName: firstPatternByte(209) into VariableDeclarationFragment(210) at 0", "Insert ExpressionStatement(219) into Block(220) at 0", "Insert TagElement(224) into Javadoc(225) at 0", "Insert SimpleName: Override(226) into MarkerAnnotation(227) at 0", "Insert PrimitiveType: int(232) into SingleVariableDeclaration(234) at 0", "Insert SimpleName: start(233) into SingleVariableDeclaration(234) at 1", "Insert PrimitiveType: int(235) into SingleVariableDeclaration(237) at 0", "Insert SimpleName: end(236) into SingleVariableDeclaration(237) at 1", "Insert SimpleType: DrillBuf(239) into SingleVariableDeclaration(241) at 0", "Insert SimpleName: drillBuf(240) into SingleVariableDeclaration(241) at 1", "Move VariableDeclarationStatement(47) into Block(282) at 0", "Insert ForStatement(279) into Block(282) at 1", "Move ReturnStatement(52) into Block(282) at 2", "Insert TextElement: Handles patterns with length two (285) into TagElement(286) at 0", "Insert SimpleName: firstPatternByte(295) into VariableDeclarationFragment(296) at 0", "Insert SimpleName: secondPatternByte(300) into VariableDeclarationFragment(301) at 0", "Insert ExpressionStatement(310) into Block(317) at 0", "Insert ExpressionStatement(316) into Block(317) at 1", "Insert TagElement(321) into Javadoc(322) at 0", "Insert SimpleName: Override(323) into MarkerAnnotation(324) at 0", "Insert PrimitiveType: int(329) into SingleVariableDeclaration(331) at 0", "Insert SimpleName: start(330) into SingleVariableDeclaration(331) at 1", "Insert PrimitiveType: int(332) into SingleVariableDeclaration(334) at 0", "Insert SimpleName: end(333) into SingleVariableDeclaration(334) at 1", "Insert SimpleType: DrillBuf(336) into SingleVariableDeclaration(338) at 0", "Insert SimpleName: drillBuf(337) into SingleVariableDeclaration(338) at 1", "Move VariableDeclarationStatement(62) into Block(399) at 0", "Insert ForStatement(396) into Block(399) at 1", "Insert ReturnStatement(398) into Block(399) at 2", "Insert TextElement: Handles patterns with length three (402) into TagElement(403) at 0", "Insert SimpleName: firstPatternByte(412) into VariableDeclarationFragment(413) at 0", "Insert SimpleName: secondPatternByte(417) into VariableDeclarationFragment(418) at 0", "Insert SimpleName: thirdPatternByte(422) into VariableDeclarationFragment(423) at 0", "Insert ExpressionStatement(432) into Block(445) at 0", "Insert ExpressionStatement(438) into Block(445) at 1", "Insert ExpressionStatement(444) into Block(445) at 2", "Insert TagElement(449) into Javadoc(450) at 0", "Insert SimpleName: Override(451) into MarkerAnnotation(452) at 0", "Insert PrimitiveType: int(457) into SingleVariableDeclaration(459) at 0", "Insert SimpleName: start(458) into SingleVariableDeclaration(459) at 1", "Insert PrimitiveType: int(460) into SingleVariableDeclaration(462) at 0", "Insert SimpleName: end(461) into SingleVariableDeclaration(462) at 1", "Insert SimpleType: DrillBuf(464) into SingleVariableDeclaration(466) at 0", "Insert SimpleName: drillBuf(465) into SingleVariableDeclaration(466) at 1", "Insert VariableDeclarationStatement(475) into Block(543) at 0", "Insert ForStatement(540) into Block(543) at 1", "Insert ReturnStatement(542) into Block(543) at 2", "Insert TextElement: Handles patterns with arbitrary length (546) into TagElement(547) at 0", "Insert SimpleName: firstPatternByte(556) into VariableDeclarationFragment(557) at 0", "Insert ExpressionStatement(566) into Block(567) at 0", "Insert TagElement(571) into Javadoc(572) at 0", "Insert VariableDeclarationStatement(599) into Block(678) at 0", "Insert VariableDeclarationStatement(604) into Block(678) at 1", "Move ForStatement(101) into Block(678) at 2", "Move ReturnStatement(108) into Block(678) at 3", "Insert TextElement: Boyer-Moore matcher algorithm; excellent for large patterns and for prefix patterns which appear(681) into TagElement(683) at 0", "Insert TextElement: frequently in the input.(682) into TagElement(683) at 1", "Insert PrimitiveType: int(692) into ArrayType: int[](694) at 0", "Insert Dimension(693) into ArrayType: int[](694) at 1", "Insert SimpleName: offsetTable(695) into VariableDeclarationFragment(696) at 0", "Insert PrimitiveType: int(700) into ArrayType: int[](702) at 0", "Insert Dimension(701) into ArrayType: int[](702) at 1", "Insert SimpleName: characterTable(703) into VariableDeclarationFragment(704) at 0", "Insert SuperConstructorInvocation(708) into Block(723) at 0", "Insert ExpressionStatement(715) into Block(723) at 1", "Insert ExpressionStatement(722) into Block(723) at 2", "Insert TagElement(727) into Javadoc(728) at 0", "Insert SimpleName: Override(729) into MarkerAnnotation(730) at 0", "Insert PrimitiveType: int(734) into SingleVariableDeclaration(736) at 0", "Insert SimpleName: start(735) into SingleVariableDeclaration(736) at 1", "Insert PrimitiveType: int(737) into SingleVariableDeclaration(739) at 0", "Insert SimpleName: end(738) into SingleVariableDeclaration(739) at 1", "Insert SimpleType: DrillBuf(741) into SingleVariableDeclaration(743) at 0", "Insert SimpleName: drillBuf(742) into SingleVariableDeclaration(743) at 1", "Insert VariableDeclarationStatement(751) into Block(818) at 0", "Insert ForStatement(815) into Block(818) at 1", "Insert ReturnStatement(817) into Block(818) at 2", "Insert TagElement(821) into Javadoc(822) at 0", "Insert PrimitiveType: int(824) into ArrayType: int[](826) at 0", "Insert Dimension(825) into ArrayType: int[](826) at 1", "Insert VariableDeclarationStatement(833) into Block(901) at 0", "Insert VariableDeclarationStatement(844) into Block(901) at 1", "Insert ForStatement(862) into Block(901) at 2", "Insert ForStatement(898) into Block(901) at 3", "Insert ReturnStatement(900) into Block(901) at 4", "Insert TagElement(904) into Javadoc(905) at 0", "Insert PrimitiveType: int(907) into ArrayType: int[](909) at 0", "Insert Dimension(908) into ArrayType: int[](909) at 1", "Insert VariableDeclarationStatement(921) into Block(1003) at 0", "Insert VariableDeclarationStatement(926) into Block(1003) at 1", "Insert ForStatement(968) into Block(1003) at 2", "Insert ForStatement(1000) into Block(1003) at 3", "Insert ReturnStatement(1002) into Block(1003) at 4", "Insert TagElement(1006) into Javadoc(1007) at 0", "Insert PrimitiveType: int(1011) into SingleVariableDeclaration(1013) at 0", "Insert SimpleName: pos(1012) into SingleVariableDeclaration(1013) at 1", "Insert ForStatement(1041) into Block(1044) at 0", "Insert ReturnStatement(1043) into Block(1044) at 1", "Insert TagElement(1047) into Javadoc(1048) at 0", "Insert PrimitiveType: int(1052) into SingleVariableDeclaration(1054) at 0", "Insert SimpleName: pos(1053) into SingleVariableDeclaration(1054) at 1", "Insert VariableDeclarationStatement(1059) into Block(1093) at 0", "Insert ForStatement(1090) into Block(1093) at 1", "Insert ReturnStatement(1092) into Block(1093) at 2", "Insert ExpressionStatement(35) into Block(36) at 0", "Insert InfixExpression: ==(39) into IfStatement(87) at 0", "Insert Block(46) into IfStatement(87) at 1", "Insert IfStatement(86) into IfStatement(87) at 2", "Insert SimpleName: matcherFcn(106) into MethodInvocation(111) at 0", "Insert SimpleName: match(107) into MethodInvocation(111) at 1", "Insert SimpleName: start(108) into MethodInvocation(111) at 2", "Insert SimpleName: end(109) into MethodInvocation(111) at 3", "Insert SimpleName: drillBuf(110) into MethodInvocation(111) at 4", "Insert MethodInvocation(133) into AssertStatement(134) at 0", "Insert Assignment: =(139) into ExpressionStatement(140) at 0", "Insert TextElement:  1 if the pattern was matched; 0 otherwise(143) into TagElement: @return(144) at 0", "Insert SimpleName: DrillBuf(156) into SimpleType: DrillBuf(157) at 0", "Insert TagElement: @inheritDoc(174) into TagElement(176) at 0", "Insert TextElement:  (175) into TagElement(176) at 1", "Insert SimpleName: DrillBuf(190) into SimpleType: DrillBuf(191) at 0", "Insert NumberLiteral: 1(194) into ReturnStatement(195) at 0", "Insert Assignment: =(218) into ExpressionStatement(219) at 0", "Insert TagElement: @inheritDoc(222) into TagElement(224) at 0", "Insert TextElement:  (223) into TagElement(224) at 1", "Insert SimpleName: DrillBuf(238) into SimpleType: DrillBuf(239) at 0", "Insert VariableDeclarationExpression(254) into ForStatement(279) at 0", "Insert InfixExpression: <(257) into ForStatement(279) at 1", "Insert PostfixExpression: ++(259) into ForStatement(279) at 2", "Insert Block(278) into ForStatement(279) at 3", "Insert Assignment: =(309) into ExpressionStatement(310) at 0", "Insert Assignment: =(315) into ExpressionStatement(316) at 0", "Insert TagElement: @inheritDoc(319) into TagElement(321) at 0", "Insert TextElement:  (320) into TagElement(321) at 1", "Insert SimpleName: DrillBuf(335) into SimpleType: DrillBuf(336) at 0", "Insert VariableDeclarationExpression(352) into ForStatement(396) at 0", "Insert InfixExpression: <(355) into ForStatement(396) at 1", "Insert PostfixExpression: ++(357) into ForStatement(396) at 2", "Insert Block(395) into ForStatement(396) at 3", "Insert NumberLiteral: 0(397) into ReturnStatement(398) at 0", "Insert Assignment: =(431) into ExpressionStatement(432) at 0", "Insert Assignment: =(437) into ExpressionStatement(438) at 0", "Insert Assignment: =(443) into ExpressionStatement(444) at 0", "Insert TagElement: @inheritDoc(447) into TagElement(449) at 0", "Insert TextElement:  (448) into TagElement(449) at 1", "Insert SimpleName: DrillBuf(463) into SimpleType: DrillBuf(464) at 0", "Insert Modifier: final(467) into VariableDeclarationStatement(475) at 0", "Insert PrimitiveType: int(468) into VariableDeclarationStatement(475) at 1", "Insert VariableDeclarationFragment(474) into VariableDeclarationStatement(475) at 2", "Move VariableDeclarationExpression(68) into ForStatement(540) at 0", "Update InfixExpression: <=(71) to <", "Move InfixExpression: <=(71) into ForStatement(540) at 1", "Move PostfixExpression: ++(73) into ForStatement(540) at 2", "Insert Block(539) into ForStatement(540) at 3", "Insert NumberLiteral: 0(541) into ReturnStatement(542) at 0", "Insert Assignment: =(565) into ExpressionStatement(566) at 0", "Insert TagElement: @inheritDoc(569) into TagElement(571) at 0", "Insert TextElement:  (570) into TagElement(571) at 1", "Insert Modifier: final(589) into VariableDeclarationStatement(599) at 0", "Insert PrimitiveType: int(590) into VariableDeclarationStatement(599) at 1", "Insert VariableDeclarationFragment(598) into VariableDeclarationStatement(599) at 2", "Insert PrimitiveType: int(600) into VariableDeclarationStatement(604) at 0", "Move VariableDeclarationFragment(77) into VariableDeclarationStatement(604) at 1", "Insert InfixExpression: <(612) into ForStatement(675) at 1", "Insert Assignment: =(714) into ExpressionStatement(715) at 0", "Insert Assignment: =(721) into ExpressionStatement(722) at 0", "Insert TagElement: @inheritDoc(725) into TagElement(727) at 0", "Insert TextElement:  (726) into TagElement(727) at 1", "Insert SimpleName: DrillBuf(740) into SimpleType: DrillBuf(741) at 0", "Insert Modifier: final(744) into VariableDeclarationStatement(751) at 0", "Insert PrimitiveType: int(745) into VariableDeclarationStatement(751) at 1", "Insert VariableDeclarationFragment(750) into VariableDeclarationStatement(751) at 2", "Insert VariableDeclarationExpression(760) into ForStatement(815) at 0", "Insert InfixExpression: <(763) into ForStatement(815) at 1", "Insert Block(814) into ForStatement(815) at 2", "Insert NumberLiteral: 0(816) into ReturnStatement(817) at 0", "Insert TextElement: Build the jump table based on the mismatched character information (820) into TagElement(821) at 0", "Insert Modifier: final(828) into VariableDeclarationStatement(833) at 0", "Insert PrimitiveType: int(829) into VariableDeclarationStatement(833) at 1", "Insert VariableDeclarationFragment(832) into VariableDeclarationStatement(833) at 2", "Insert ArrayType: int[](836) into VariableDeclarationStatement(844) at 0", "Insert VariableDeclarationFragment(843) into VariableDeclarationStatement(844) at 1", "Insert VariableDeclarationExpression(849) into ForStatement(862) at 0", "Insert InfixExpression: <(852) into ForStatement(862) at 1", "Insert PrefixExpression: ++(854) into ForStatement(862) at 2", "Insert Block(861) into ForStatement(862) at 3", "Insert VariableDeclarationExpression(867) into ForStatement(898) at 0", "Insert InfixExpression: <(872) into ForStatement(898) at 1", "Insert PrefixExpression: ++(874) into ForStatement(898) at 2", "Insert Block(897) into ForStatement(898) at 3", "Insert SimpleName: resultTable(899) into ReturnStatement(900) at 0", "Insert TextElement: Builds the scan offset based on which mismatch occurs. (903) into TagElement(904) at 0", "Insert ArrayType: int[](913) into VariableDeclarationStatement(921) at 0", "Insert VariableDeclarationFragment(920) into VariableDeclarationStatement(921) at 1", "Insert PrimitiveType: int(922) into VariableDeclarationStatement(926) at 0", "Insert VariableDeclarationFragment(925) into VariableDeclarationStatement(926) at 1", "Insert VariableDeclarationExpression(933) into ForStatement(968) at 0", "Insert InfixExpression: >=(936) into ForStatement(968) at 1", "Insert PrefixExpression: --(938) into ForStatement(968) at 2", "Insert Block(967) into ForStatement(968) at 3", "Insert VariableDeclarationExpression(973) into ForStatement(1000) at 0", "Insert InfixExpression: <(978) into ForStatement(1000) at 1", "Insert PrefixExpression: ++(980) into ForStatement(1000) at 2", "Insert Block(999) into ForStatement(1000) at 3", "Insert SimpleName: resultTable(1001) into ReturnStatement(1002) at 0", "Insert TextElement: Checks whether needle[pos:end] is a prefix of pattern (1005) into TagElement(1006) at 0", "Insert VariableDeclarationExpression(1021) into ForStatement(1041) at 0", "Insert InfixExpression: <(1024) into ForStatement(1041) at 1", "Insert PrefixExpression: ++(1026) into ForStatement(1041) at 2", "Insert PrefixExpression: ++(1028) into ForStatement(1041) at 3", "Insert Block(1040) into ForStatement(1041) at 4", "Insert BooleanLiteral: true(1042) into ReturnStatement(1043) at 0", "Insert TextElement: Computes the maximum length of the substring ends at \"pos\" and is a suffix (1046) into TagElement(1047) at 0", "Insert PrimitiveType: int(1055) into VariableDeclarationStatement(1059) at 0", "Insert VariableDeclarationFragment(1058) into VariableDeclarationStatement(1059) at 1", "Insert VariableDeclarationExpression(1069) into ForStatement(1090) at 0", "Insert InfixExpression: &&(1080) into ForStatement(1090) at 1", "Insert PrefixExpression: --(1082) into ForStatement(1090) at 2", "Insert PrefixExpression: --(1084) into ForStatement(1090) at 3", "Insert Block(1089) into ForStatement(1090) at 4", "Insert SimpleName: result(1091) into ReturnStatement(1092) at 0", "Insert Assignment: =(34) into ExpressionStatement(35) at 0", "Insert SimpleName: patternLength(37) into InfixExpression: ==(39) at 0", "Insert NumberLiteral: 1(38) into InfixExpression: ==(39) at 1", "Insert ExpressionStatement(45) into Block(46) at 0", "Insert InfixExpression: ==(49) into IfStatement(86) at 0", "Insert Block(56) into IfStatement(86) at 1", "Insert IfStatement(85) into IfStatement(86) at 2", "Insert SimpleName: patternByteBuffer(131) into MethodInvocation(133) at 0", "Insert SimpleName: hasArray(132) into MethodInvocation(133) at 1", "Insert SimpleName: patternArray(135) into Assignment: =(139) at 0", "Insert MethodInvocation(138) into Assignment: =(139) at 1", "Insert SimpleName: firstPatternByte(214) into Assignment: =(218) at 0", "Insert ArrayAccess(217) into Assignment: =(218) at 1", "Update SimpleName: txtLength(42) to lengthToProcess", "Insert PrimitiveType: int(250) into VariableDeclarationExpression(254) at 0", "Insert VariableDeclarationFragment(253) into VariableDeclarationExpression(254) at 1", "Update SimpleName: txtLength(48) to idx", "Move SimpleName: txtLength(48) into InfixExpression: <(257) at 0", "Update SimpleName: patternLength(49) to lengthToProcess", "Move SimpleName: patternLength(49) into InfixExpression: <(257) at 1", "Insert SimpleName: idx(258) into PostfixExpression: ++(259) at 0", "Insert VariableDeclarationStatement(269) into Block(278) at 0", "Insert IfStatement(275) into Block(278) at 1", "Move ReturnStatement(103) into Block(278) at 2", "Insert SimpleName: firstPatternByte(305) into Assignment: =(309) at 0", "Insert ArrayAccess(308) into Assignment: =(309) at 1", "Insert SimpleName: secondPatternByte(311) into Assignment: =(315) at 0", "Insert ArrayAccess(314) into Assignment: =(315) at 1", "Update SimpleName: outerEnd(57) to lengthToProcess", "Insert PrimitiveType: int(348) into VariableDeclarationExpression(352) at 0", "Insert VariableDeclarationFragment(351) into VariableDeclarationExpression(352) at 1", "Insert SimpleName: idx(353) into InfixExpression: <(355) at 0", "Insert SimpleName: lengthToProcess(354) into InfixExpression: <(355) at 1", "Insert SimpleName: idx(356) into PostfixExpression: ++(357) at 0", "Insert VariableDeclarationStatement(368) into Block(395) at 0", "Insert IfStatement(394) into Block(395) at 1", "Insert SimpleName: firstPatternByte(427) into Assignment: =(431) at 0", "Insert ArrayAccess(430) into Assignment: =(431) at 1", "Insert SimpleName: secondPatternByte(433) into Assignment: =(437) at 0", "Insert ArrayAccess(436) into Assignment: =(437) at 1", "Insert SimpleName: thirdPatternByte(439) into Assignment: =(443) at 0", "Insert ArrayAccess(442) into Assignment: =(443) at 1", "Insert SimpleName: lengthToProcess(469) into VariableDeclarationFragment(474) at 0", "Insert InfixExpression: -(473) into VariableDeclarationFragment(474) at 1", "Update SimpleName: txtIndex(69) to idx", "Update SimpleName: outerEnd(70) to lengthToProcess", "Update SimpleName: txtIndex(72) to idx", "Insert VariableDeclarationStatement(496) into Block(539) at 0", "Insert IfStatement(538) into Block(539) at 1", "Insert SimpleName: firstPatternByte(561) into Assignment: =(565) at 0", "Insert ArrayAccess(564) into Assignment: =(565) at 1", "Insert SimpleName: lengthToProcess(591) into VariableDeclarationFragment(598) at 0", "Insert InfixExpression: +(597) into VariableDeclarationFragment(598) at 1", "Insert VariableDeclarationFragment(608) into VariableDeclarationExpression(609) at 1", "Insert SimpleName: idx(610) into InfixExpression: <(612) at 0", "Insert SimpleName: lengthToProcess(611) into InfixExpression: <(612) at 1", "Update SimpleName: patternIndex(82) to idx", "Insert VariableDeclarationStatement(625) into Block(674) at 0", "Insert FieldAccess(711) into Assignment: =(714) at 0", "Insert MethodInvocation(713) into Assignment: =(714) at 1", "Insert FieldAccess(718) into Assignment: =(721) at 0", "Insert MethodInvocation(720) into Assignment: =(721) at 1", "Insert SimpleName: inputLength(746) into VariableDeclarationFragment(750) at 0", "Insert InfixExpression: -(749) into VariableDeclarationFragment(750) at 1", "Insert PrimitiveType: int(752) into VariableDeclarationExpression(760) at 0", "Insert VariableDeclarationFragment(757) into VariableDeclarationExpression(760) at 1", "Insert VariableDeclarationFragment(759) into VariableDeclarationExpression(760) at 2", "Insert SimpleName: idx1(761) into InfixExpression: <(763) at 0", "Insert SimpleName: inputLength(762) into InfixExpression: <(763) at 1", "Insert ForStatement(791) into Block(814) at 0", "Insert ExpressionStatement(813) into Block(814) at 1", "Insert SimpleName: TABLE_SIZE(830) into VariableDeclarationFragment(832) at 0", "Insert NumberLiteral: 256(831) into VariableDeclarationFragment(832) at 1", "Insert PrimitiveType: int(834) into ArrayType: int[](836) at 0", "Insert Dimension(835) into ArrayType: int[](836) at 1", "Insert SimpleName: resultTable(837) into VariableDeclarationFragment(843) at 0", "Insert ArrayCreation(842) into VariableDeclarationFragment(843) at 1", "Insert PrimitiveType: int(845) into VariableDeclarationExpression(849) at 0", "Insert VariableDeclarationFragment(848) into VariableDeclarationExpression(849) at 1", "Insert SimpleName: idx(850) into InfixExpression: <(852) at 0", "Insert QualifiedName: resultTable.length(851) into InfixExpression: <(852) at 1", "Insert SimpleName: idx(853) into PrefixExpression: ++(854) at 0", "Insert ExpressionStatement(860) into Block(861) at 0", "Insert PrimitiveType: int(863) into VariableDeclarationExpression(867) at 0", "Insert VariableDeclarationFragment(866) into VariableDeclarationExpression(867) at 1", "Insert SimpleName: idx(868) into InfixExpression: <(872) at 0", "Insert InfixExpression: -(871) into InfixExpression: <(872) at 1", "Insert SimpleName: idx(873) into PrefixExpression: ++(874) at 0", "Insert VariableDeclarationStatement(887) into Block(897) at 0", "Insert ExpressionStatement(896) into Block(897) at 1", "Insert PrimitiveType: int(911) into ArrayType: int[](913) at 0", "Insert Dimension(912) into ArrayType: int[](913) at 1", "Insert SimpleName: resultTable(914) into VariableDeclarationFragment(920) at 0", "Insert ArrayCreation(919) into VariableDeclarationFragment(920) at 1", "Insert SimpleName: lastPrefixPosition(923) into VariableDeclarationFragment(925) at 0", "Insert SimpleName: patternLength(924) into VariableDeclarationFragment(925) at 1", "Insert PrimitiveType: int(927) into VariableDeclarationExpression(933) at 0", "Insert VariableDeclarationFragment(932) into VariableDeclarationExpression(933) at 1", "Insert SimpleName: idx(934) into InfixExpression: >=(936) at 0", "Insert NumberLiteral: 0(935) into InfixExpression: >=(936) at 1", "Insert SimpleName: idx(937) into PrefixExpression: --(938) at 0", "Insert IfStatement(951) into Block(967) at 0", "Insert ExpressionStatement(966) into Block(967) at 1", "Insert PrimitiveType: int(969) into VariableDeclarationExpression(973) at 0", "Insert VariableDeclarationFragment(972) into VariableDeclarationExpression(973) at 1", "Insert SimpleName: idx(974) into InfixExpression: <(978) at 0", "Insert InfixExpression: -(977) into InfixExpression: <(978) at 1", "Insert SimpleName: idx(979) into PrefixExpression: ++(980) at 0", "Insert VariableDeclarationStatement(987) into Block(999) at 0", "Insert ExpressionStatement(998) into Block(999) at 1", "Insert PrimitiveType: int(1014) into VariableDeclarationExpression(1021) at 0", "Insert VariableDeclarationFragment(1017) into VariableDeclarationExpression(1021) at 1", "Insert VariableDeclarationFragment(1020) into VariableDeclarationExpression(1021) at 2", "Insert SimpleName: idx1(1022) into InfixExpression: <(1024) at 0", "Insert SimpleName: patternLength(1023) into InfixExpression: <(1024) at 1", "Insert SimpleName: idx1(1025) into PrefixExpression: ++(1026) at 0", "Insert SimpleName: idx2(1027) into PrefixExpression: ++(1028) at 0", "Insert IfStatement(1039) into Block(1040) at 0", "Insert SimpleName: result(1056) into VariableDeclarationFragment(1058) at 0", "Insert NumberLiteral: 0(1057) into VariableDeclarationFragment(1058) at 1", "Insert PrimitiveType: int(1060) into VariableDeclarationExpression(1069) at 0", "Insert VariableDeclarationFragment(1063) into VariableDeclarationExpression(1069) at 1", "Insert VariableDeclarationFragment(1068) into VariableDeclarationExpression(1069) at 2", "Insert InfixExpression: >=(1072) into InfixExpression: &&(1080) at 0", "Insert InfixExpression: ==(1079) into InfixExpression: &&(1080) at 1", "Insert SimpleName: idx1(1081) into PrefixExpression: --(1082) at 0", "Insert SimpleName: idx2(1083) into PrefixExpression: --(1084) at 0", "Insert ExpressionStatement(1088) into Block(1089) at 0", "Insert SimpleName: matcherFcn(30) into Assignment: =(34) at 0", "Insert ClassInstanceCreation(33) into Assignment: =(34) at 1", "Insert Assignment: =(44) into ExpressionStatement(45) at 0", "Insert SimpleName: patternLength(47) into InfixExpression: ==(49) at 0", "Insert NumberLiteral: 2(48) into InfixExpression: ==(49) at 1", "Insert ExpressionStatement(55) into Block(56) at 0", "Insert InfixExpression: ==(59) into IfStatement(85) at 0", "Insert Block(66) into IfStatement(85) at 1", "Insert IfStatement(84) into IfStatement(85) at 2", "Insert SimpleName: patternByteBuffer(136) into MethodInvocation(138) at 0", "Insert SimpleName: array(137) into MethodInvocation(138) at 1", "Insert SimpleName: patternArray(215) into ArrayAccess(217) at 0", "Insert NumberLiteral: 0(216) into ArrayAccess(217) at 1", "Insert SimpleName: idx(251) into VariableDeclarationFragment(253) at 0", "Insert NumberLiteral: 0(252) into VariableDeclarationFragment(253) at 1", "Insert PrimitiveType: byte(260) into VariableDeclarationStatement(269) at 0", "Insert VariableDeclarationFragment(268) into VariableDeclarationStatement(269) at 1", "Insert InfixExpression: !=(272) into IfStatement(275) at 0", "Move Block(53) into IfStatement(275) at 1", "Insert SimpleName: patternArray(306) into ArrayAccess(308) at 0", "Insert NumberLiteral: 0(307) into ArrayAccess(308) at 1", "Insert SimpleName: patternArray(312) into ArrayAccess(314) at 0", "Insert NumberLiteral: 1(313) into ArrayAccess(314) at 1", "Update SimpleName: txtLength(58) to end", "Update SimpleName: patternLength(59) to start", "Insert NumberLiteral: 1(344) into InfixExpression: -(345) at 2", "Insert SimpleName: idx(349) into VariableDeclarationFragment(351) at 0", "Insert NumberLiteral: 0(350) into VariableDeclarationFragment(351) at 1", "Insert Modifier: final(358) into VariableDeclarationStatement(368) at 0", "Insert PrimitiveType: byte(359) into VariableDeclarationStatement(368) at 1", "Insert VariableDeclarationFragment(367) into VariableDeclarationStatement(368) at 2", "Insert InfixExpression: !=(371) into IfStatement(394) at 0", "Insert Block(373) into IfStatement(394) at 1", "Insert Block(393) into IfStatement(394) at 2", "Insert SimpleName: patternArray(428) into ArrayAccess(430) at 0", "Insert NumberLiteral: 0(429) into ArrayAccess(430) at 1", "Insert SimpleName: patternArray(434) into ArrayAccess(436) at 0", "Insert NumberLiteral: 1(435) into ArrayAccess(436) at 1", "Insert SimpleName: patternArray(440) into ArrayAccess(442) at 0", "Insert NumberLiteral: 2(441) into ArrayAccess(442) at 1", "Insert SimpleName: end(470) into InfixExpression: -(473) at 0", "Insert SimpleName: start(471) into InfixExpression: -(473) at 1", "Insert NumberLiteral: 2(472) into InfixExpression: -(473) at 2", "Update SimpleName: txtIndex(65) to idx", "Insert Modifier: final(486) into VariableDeclarationStatement(496) at 0", "Insert PrimitiveType: byte(487) into VariableDeclarationStatement(496) at 1", "Insert VariableDeclarationFragment(495) into VariableDeclarationStatement(496) at 2", "Insert InfixExpression: !=(499) into IfStatement(538) at 0", "Insert Block(501) into IfStatement(538) at 1", "Insert Block(537) into IfStatement(538) at 2", "Insert SimpleName: patternArray(562) into ArrayAccess(564) at 0", "Insert NumberLiteral: 0(563) into ArrayAccess(564) at 1", "Insert InfixExpression: -(595) into InfixExpression: +(597) at 0", "Insert NumberLiteral: 1(596) into InfixExpression: +(597) at 1", "Insert SimpleName: idx(606) into VariableDeclarationFragment(608) at 0", "Insert NumberLiteral: 0(607) into VariableDeclarationFragment(608) at 1", "Insert Modifier: final(615) into VariableDeclarationStatement(625) at 0", "Insert PrimitiveType: byte(616) into VariableDeclarationStatement(625) at 1", "Insert VariableDeclarationFragment(624) into VariableDeclarationStatement(625) at 2", "Insert InfixExpression: ==(628) into IfStatement(673) at 0", "Insert Block(672) into IfStatement(673) at 1", "Insert ThisExpression(709) into FieldAccess(711) at 0", "Insert SimpleName: offsetTable(710) into FieldAccess(711) at 1", "Insert SimpleName: makeOffsetTable(712) into MethodInvocation(713) at 0", "Insert ThisExpression(716) into FieldAccess(718) at 0", "Insert SimpleName: characterTable(717) into FieldAccess(718) at 1", "Insert SimpleName: makeCharTable(719) into MethodInvocation(720) at 0", "Insert SimpleName: end(747) into InfixExpression: -(749) at 0", "Insert SimpleName: start(748) into InfixExpression: -(749) at 1", "Insert SimpleName: idx1(753) into VariableDeclarationFragment(757) at 0", "Insert InfixExpression: -(756) into VariableDeclarationFragment(757) at 1", "Insert SimpleName: idx2(758) into VariableDeclarationFragment(759) at 0", "Insert Assignment: =(768) into ForStatement(791) at 0", "Insert InfixExpression: ==(778) into ForStatement(791) at 1", "Insert PrefixExpression: --(780) into ForStatement(791) at 2", "Insert PrefixExpression: --(782) into ForStatement(791) at 3", "Insert Block(790) into ForStatement(791) at 4", "Insert Assignment: +=(812) into ExpressionStatement(813) at 0", "Insert ArrayType: int[](840) into ArrayCreation(842) at 0", "Insert SimpleName: TABLE_SIZE(841) into ArrayCreation(842) at 1", "Insert SimpleName: idx(846) into VariableDeclarationFragment(848) at 0", "Insert NumberLiteral: 0(847) into VariableDeclarationFragment(848) at 1", "Insert Assignment: =(859) into ExpressionStatement(860) at 0", "Insert SimpleName: idx(864) into VariableDeclarationFragment(866) at 0", "Insert NumberLiteral: 0(865) into VariableDeclarationFragment(866) at 1", "Insert SimpleName: patternLength(869) into InfixExpression: -(871) at 0", "Insert NumberLiteral: 1(870) into InfixExpression: -(871) at 1", "Insert Modifier: final(875) into VariableDeclarationStatement(887) at 0", "Insert PrimitiveType: int(876) into VariableDeclarationStatement(887) at 1", "Insert VariableDeclarationFragment(886) into VariableDeclarationStatement(887) at 2", "Insert Assignment: =(895) into ExpressionStatement(896) at 0", "Insert ArrayType: int[](917) into ArrayCreation(919) at 0", "Insert SimpleName: patternLength(918) into ArrayCreation(919) at 1", "Insert SimpleName: idx(928) into VariableDeclarationFragment(932) at 0", "Insert InfixExpression: -(931) into VariableDeclarationFragment(932) at 1", "Insert MethodInvocation(943) into IfStatement(951) at 0", "Insert Block(950) into IfStatement(951) at 1", "Insert Assignment: =(965) into ExpressionStatement(966) at 0", "Insert SimpleName: idx(970) into VariableDeclarationFragment(972) at 0", "Insert NumberLiteral: 0(971) into VariableDeclarationFragment(972) at 1", "Insert SimpleName: patternLength(975) into InfixExpression: -(977) at 0", "Insert NumberLiteral: 1(976) into InfixExpression: -(977) at 1", "Insert PrimitiveType: int(981) into VariableDeclarationStatement(987) at 0", "Insert VariableDeclarationFragment(986) into VariableDeclarationStatement(987) at 1", "Insert Assignment: =(997) into ExpressionStatement(998) at 0", "Insert SimpleName: idx1(1015) into VariableDeclarationFragment(1017) at 0", "Insert SimpleName: pos(1016) into VariableDeclarationFragment(1017) at 1", "Insert SimpleName: idx2(1018) into VariableDeclarationFragment(1020) at 0", "Insert NumberLiteral: 0(1019) into VariableDeclarationFragment(1020) at 1", "Insert InfixExpression: !=(1035) into IfStatement(1039) at 0", "Insert Block(1038) into IfStatement(1039) at 1", "Insert SimpleName: idx1(1061) into VariableDeclarationFragment(1063) at 0", "Insert SimpleName: pos(1062) into VariableDeclarationFragment(1063) at 1", "Insert SimpleName: idx2(1064) into VariableDeclarationFragment(1068) at 0", "Insert InfixExpression: -(1067) into VariableDeclarationFragment(1068) at 1", "Insert SimpleName: idx1(1070) into InfixExpression: >=(1072) at 0", "Insert NumberLiteral: 0(1071) into InfixExpression: >=(1072) at 1", "Insert ArrayAccess(1075) into InfixExpression: ==(1079) at 0", "Insert ArrayAccess(1078) into InfixExpression: ==(1079) at 1", "Insert Assignment: +=(1087) into ExpressionStatement(1088) at 0", "Insert SimpleName: matcherFcn(40) into Assignment: =(44) at 0", "Insert ClassInstanceCreation(43) into Assignment: =(44) at 1", "Insert Assignment: =(54) into ExpressionStatement(55) at 0", "Insert SimpleName: patternLength(57) into InfixExpression: ==(59) at 0", "Insert NumberLiteral: 3(58) into InfixExpression: ==(59) at 1", "Insert ExpressionStatement(65) into Block(66) at 0", "Insert InfixExpression: <(69) into IfStatement(84) at 0", "Insert Block(76) into IfStatement(84) at 1", "Insert Block(83) into IfStatement(84) at 2", "Insert SimpleName: inputByte(261) into VariableDeclarationFragment(268) at 0", "Insert MethodInvocation(267) into VariableDeclarationFragment(268) at 1", "Insert SimpleName: firstPatternByte(270) into InfixExpression: !=(272) at 0", "Insert SimpleName: inputByte(271) into InfixExpression: !=(272) at 1", "Insert ContinueStatement(273) into Block(274) at 0", "Insert SimpleName: firstInByte(360) into VariableDeclarationFragment(367) at 0", "Insert MethodInvocation(366) into VariableDeclarationFragment(367) at 1", "Insert SimpleName: firstPatternByte(369) into InfixExpression: !=(371) at 0", "Insert SimpleName: firstInByte(370) into InfixExpression: !=(371) at 1", "Insert ContinueStatement(372) into Block(373) at 0", "Insert VariableDeclarationStatement(385) into Block(393) at 0", "Insert IfStatement(392) into Block(393) at 1", "Insert SimpleName: inputByte(488) into VariableDeclarationFragment(495) at 0", "Insert MethodInvocation(494) into VariableDeclarationFragment(495) at 1", "Insert SimpleName: firstPatternByte(497) into InfixExpression: !=(499) at 0", "Insert SimpleName: inputByte(498) into InfixExpression: !=(499) at 1", "Insert ContinueStatement(500) into Block(501) at 0", "Insert VariableDeclarationStatement(513) into Block(537) at 0", "Insert VariableDeclarationStatement(525) into Block(537) at 1", "Insert IfStatement(536) into Block(537) at 2", "Insert SimpleName: end(592) into InfixExpression: -(595) at 0", "Insert SimpleName: start(593) into InfixExpression: -(595) at 1", "Insert SimpleName: patternLength(594) into InfixExpression: -(595) at 2", "Insert SimpleName: inputByte(617) into VariableDeclarationFragment(624) at 0", "Insert MethodInvocation(623) into VariableDeclarationFragment(624) at 1", "Insert SimpleName: firstPatternByte(626) into InfixExpression: ==(628) at 0", "Insert SimpleName: inputByte(627) into InfixExpression: ==(628) at 1", "Insert ForStatement(664) into Block(672) at 0", "Insert IfStatement(671) into Block(672) at 1", "Insert SimpleName: patternLength(754) into InfixExpression: -(756) at 0", "Insert NumberLiteral: 1(755) into InfixExpression: -(756) at 1", "Insert SimpleName: idx2(764) into Assignment: =(768) at 0", "Insert InfixExpression: -(767) into Assignment: =(768) at 1", "Insert ArrayAccess(771) into InfixExpression: ==(778) at 0", "Insert MethodInvocation(777) into InfixExpression: ==(778) at 1", "Insert SimpleName: idx1(779) into PrefixExpression: --(780) at 0", "Insert SimpleName: idx2(781) into PrefixExpression: --(782) at 0", "Insert IfStatement(789) into Block(790) at 0", "Insert SimpleName: idx1(792) into Assignment: +=(812) at 0", "Insert MethodInvocation(811) into Assignment: +=(812) at 1", "Insert PrimitiveType: int(838) into ArrayType: int[](840) at 0", "Insert Dimension(839) into ArrayType: int[](840) at 1", "Insert ArrayAccess(857) into Assignment: =(859) at 0", "Insert SimpleName: patternLength(858) into Assignment: =(859) at 1", "Insert SimpleName: patternValue(877) into VariableDeclarationFragment(886) at 0", "Insert InfixExpression: &(885) into VariableDeclarationFragment(886) at 1", "Insert ArrayAccess(890) into Assignment: =(895) at 0", "Insert InfixExpression: -(894) into Assignment: =(895) at 1", "Insert PrimitiveType: int(915) into ArrayType: int[](917) at 0", "Insert Dimension(916) into ArrayType: int[](917) at 1", "Insert SimpleName: patternLength(929) into InfixExpression: -(931) at 0", "Insert NumberLiteral: 1(930) into InfixExpression: -(931) at 1", "Insert SimpleName: isPrefix(939) into MethodInvocation(943) at 0", "Insert InfixExpression: +(942) into MethodInvocation(943) at 1", "Insert ExpressionStatement(949) into Block(950) at 0", "Insert ArrayAccess(957) into Assignment: =(965) at 0", "Insert InfixExpression: -(964) into Assignment: =(965) at 1", "Insert SimpleName: suffixLen(982) into VariableDeclarationFragment(986) at 0", "Insert MethodInvocation(985) into VariableDeclarationFragment(986) at 1", "Insert ArrayAccess(990) into Assignment: =(997) at 0", "Insert InfixExpression: +(996) into Assignment: =(997) at 1", "Insert ArrayAccess(1031) into InfixExpression: !=(1035) at 0", "Insert ArrayAccess(1034) into InfixExpression: !=(1035) at 1", "Insert ReturnStatement(1037) into Block(1038) at 0", "Insert SimpleName: patternLength(1065) into InfixExpression: -(1067) at 0", "Insert NumberLiteral: 1(1066) into InfixExpression: -(1067) at 1", "Insert SimpleName: patternArray(1073) into ArrayAccess(1075) at 0", "Insert SimpleName: idx1(1074) into ArrayAccess(1075) at 1", "Insert SimpleName: patternArray(1076) into ArrayAccess(1078) at 0", "Insert SimpleName: idx2(1077) into ArrayAccess(1078) at 1", "Insert SimpleName: result(1085) into Assignment: +=(1087) at 0", "Insert NumberLiteral: 1(1086) into Assignment: +=(1087) at 1", "Insert SimpleName: matcherFcn(50) into Assignment: =(54) at 0", "Insert ClassInstanceCreation(53) into Assignment: =(54) at 1", "Insert Assignment: =(64) into ExpressionStatement(65) at 0", "Insert SimpleName: patternLength(67) into InfixExpression: <(69) at 0", "Insert NumberLiteral: 10(68) into InfixExpression: <(69) at 1", "Insert ExpressionStatement(75) into Block(76) at 0", "Insert ExpressionStatement(82) into Block(83) at 0", "Insert SimpleName: drillBuf(262) into MethodInvocation(267) at 0", "Insert SimpleName: getByte(263) into MethodInvocation(267) at 1", "Insert InfixExpression: +(266) into MethodInvocation(267) at 2", "Insert SimpleName: drillBuf(361) into MethodInvocation(366) at 0", "Insert SimpleName: getByte(362) into MethodInvocation(366) at 1", "Insert InfixExpression: +(365) into MethodInvocation(366) at 2", "Insert Modifier: final(374) into VariableDeclarationStatement(385) at 0", "Insert PrimitiveType: byte(375) into VariableDeclarationStatement(385) at 1", "Insert VariableDeclarationFragment(384) into VariableDeclarationStatement(385) at 2", "Insert InfixExpression: ==(388) into IfStatement(392) at 0", "Move Block(38) into IfStatement(392) at 1", "Insert SimpleName: drillBuf(489) into MethodInvocation(494) at 0", "Insert SimpleName: getByte(490) into MethodInvocation(494) at 1", "Insert InfixExpression: +(493) into MethodInvocation(494) at 2", "Insert Modifier: final(502) into VariableDeclarationStatement(513) at 0", "Insert PrimitiveType: byte(503) into VariableDeclarationStatement(513) at 1", "Insert VariableDeclarationFragment(512) into VariableDeclarationStatement(513) at 2", "Insert Modifier: final(514) into VariableDeclarationStatement(525) at 0", "Insert PrimitiveType: byte(515) into VariableDeclarationStatement(525) at 1", "Insert VariableDeclarationFragment(524) into VariableDeclarationStatement(525) at 2", "Insert InfixExpression: &&(532) into IfStatement(536) at 0", "Insert Block(535) into IfStatement(536) at 1", "Insert SimpleName: drillBuf(618) into MethodInvocation(623) at 0", "Insert SimpleName: getByte(619) into MethodInvocation(623) at 1", "Insert InfixExpression: +(622) into MethodInvocation(623) at 2", "Insert Assignment: =(631) into ForStatement(664) at 0", "Move InfixExpression: <(81) into ForStatement(664) at 1", "Insert PrefixExpression: ++(636) into ForStatement(664) at 2", "Insert Block(663) into ForStatement(664) at 3", "Insert InfixExpression: ==(667) into IfStatement(671) at 0", "Insert Block(670) into IfStatement(671) at 1", "Insert SimpleName: patternLength(765) into InfixExpression: -(767) at 0", "Insert NumberLiteral: 1(766) into InfixExpression: -(767) at 1", "Insert SimpleName: patternArray(769) into ArrayAccess(771) at 0", "Insert SimpleName: idx2(770) into ArrayAccess(771) at 1", "Insert SimpleName: drillBuf(772) into MethodInvocation(777) at 0", "Insert SimpleName: getByte(773) into MethodInvocation(777) at 1", "Insert InfixExpression: +(776) into MethodInvocation(777) at 2", "Insert InfixExpression: ==(785) into IfStatement(789) at 0", "Insert Block(788) into IfStatement(789) at 1", "Insert SimpleName: Math(793) into MethodInvocation(811) at 0", "Insert SimpleName: max(794) into MethodInvocation(811) at 1", "Insert ArrayAccess(800) into MethodInvocation(811) at 2", "Insert ArrayAccess(810) into MethodInvocation(811) at 3", "Insert SimpleName: resultTable(855) into ArrayAccess(857) at 0", "Insert SimpleName: idx(856) into ArrayAccess(857) at 1", "Insert ParenthesizedExpression(883) into InfixExpression: &(885) at 0", "Insert NumberLiteral: 0xFF(884) into InfixExpression: &(885) at 1", "Insert SimpleName: resultTable(888) into ArrayAccess(890) at 0", "Insert SimpleName: patternValue(889) into ArrayAccess(890) at 1", "Insert SimpleName: patternLength(891) into InfixExpression: -(894) at 0", "Insert NumberLiteral: 1(892) into InfixExpression: -(894) at 1", "Insert SimpleName: idx(893) into InfixExpression: -(894) at 2", "Insert SimpleName: idx(940) into InfixExpression: +(942) at 0", "Insert NumberLiteral: 1(941) into InfixExpression: +(942) at 1", "Insert Assignment: =(948) into ExpressionStatement(949) at 0", "Insert SimpleName: resultTable(952) into ArrayAccess(957) at 0", "Insert InfixExpression: -(956) into ArrayAccess(957) at 1", "Insert InfixExpression: +(962) into InfixExpression: -(964) at 0", "Insert NumberLiteral: 1(963) into InfixExpression: -(964) at 1", "Insert SimpleName: suffixLength(983) into MethodInvocation(985) at 0", "Insert SimpleName: idx(984) into MethodInvocation(985) at 1", "Insert SimpleName: resultTable(988) into ArrayAccess(990) at 0", "Insert SimpleName: suffixLen(989) into ArrayAccess(990) at 1", "Insert InfixExpression: -(994) into InfixExpression: +(996) at 0", "Insert SimpleName: suffixLen(995) into InfixExpression: +(996) at 1", "Insert SimpleName: patternArray(1029) into ArrayAccess(1031) at 0", "Insert SimpleName: idx1(1030) into ArrayAccess(1031) at 1", "Insert SimpleName: patternArray(1032) into ArrayAccess(1034) at 0", "Insert SimpleName: idx2(1033) into ArrayAccess(1034) at 1", "Insert BooleanLiteral: false(1036) into ReturnStatement(1037) at 0", "Insert SimpleName: matcherFcn(60) into Assignment: =(64) at 0", "Insert ClassInstanceCreation(63) into Assignment: =(64) at 1", "Insert Assignment: =(74) into ExpressionStatement(75) at 0", "Insert Assignment: =(81) into ExpressionStatement(82) at 0", "Insert SimpleName: start(264) into InfixExpression: +(266) at 0", "Insert SimpleName: idx(265) into InfixExpression: +(266) at 1", "Insert SimpleName: start(363) into InfixExpression: +(365) at 0", "Insert SimpleName: idx(364) into InfixExpression: +(365) at 1", "Insert SimpleName: secondInByte(376) into VariableDeclarationFragment(384) at 0", "Insert MethodInvocation(383) into VariableDeclarationFragment(384) at 1", "Insert SimpleName: secondInByte(386) into InfixExpression: ==(388) at 0", "Insert SimpleName: secondPatternByte(387) into InfixExpression: ==(388) at 1", "Insert SimpleName: start(491) into InfixExpression: +(493) at 0", "Insert SimpleName: idx(492) into InfixExpression: +(493) at 1", "Insert SimpleName: secondInByte(504) into VariableDeclarationFragment(512) at 0", "Insert MethodInvocation(511) into VariableDeclarationFragment(512) at 1", "Insert SimpleName: thirdInByte(516) into VariableDeclarationFragment(524) at 0", "Insert MethodInvocation(523) into VariableDeclarationFragment(524) at 1", "Insert InfixExpression: ==(528) into InfixExpression: &&(532) at 0", "Insert InfixExpression: ==(531) into InfixExpression: &&(532) at 1", "Insert ReturnStatement(534) into Block(535) at 0", "Insert SimpleName: start(620) into InfixExpression: +(622) at 0", "Insert SimpleName: idx(621) into InfixExpression: +(622) at 1", "Insert SimpleName: patternIndex(629) into Assignment: =(631) at 0", "Insert NumberLiteral: 1(630) into Assignment: =(631) at 1", "Insert SimpleName: patternIndex(635) into PrefixExpression: ++(636) at 0", "Insert VariableDeclarationStatement(648) into Block(663) at 0", "Insert VariableDeclarationStatement(656) into Block(663) at 1", "Insert IfStatement(662) into Block(663) at 2", "Insert SimpleName: patternIndex(665) into InfixExpression: ==(667) at 0", "Insert SimpleName: patternLength(666) into InfixExpression: ==(667) at 1", "Insert ReturnStatement(669) into Block(670) at 0", "Insert SimpleName: start(774) into InfixExpression: +(776) at 0", "Insert SimpleName: idx1(775) into InfixExpression: +(776) at 1", "Insert SimpleName: idx2(783) into InfixExpression: ==(785) at 0", "Insert NumberLiteral: 0(784) into InfixExpression: ==(785) at 1", "Insert ReturnStatement(787) into Block(788) at 0", "Insert SimpleName: offsetTable(795) into ArrayAccess(800) at 0", "Insert InfixExpression: -(799) into ArrayAccess(800) at 1", "Insert SimpleName: characterTable(801) into ArrayAccess(810) at 0", "Insert InfixExpression: &(809) into ArrayAccess(810) at 1", "Insert CastExpression(882) into ParenthesizedExpression(883) at 0", "Insert SimpleName: lastPrefixPosition(944) into Assignment: =(948) at 0", "Insert InfixExpression: +(947) into Assignment: =(948) at 1", "Insert SimpleName: patternLength(953) into InfixExpression: -(956) at 0", "Insert NumberLiteral: 1(954) into InfixExpression: -(956) at 1", "Insert SimpleName: idx(955) into InfixExpression: -(956) at 2", "Insert InfixExpression: -(960) into InfixExpression: +(962) at 0", "Insert SimpleName: patternLength(961) into InfixExpression: +(962) at 1", "Insert SimpleName: patternLength(991) into InfixExpression: -(994) at 0", "Insert NumberLiteral: 1(992) into InfixExpression: -(994) at 1", "Insert SimpleName: idx(993) into InfixExpression: -(994) at 2", "Insert SimpleName: matcherFcn(70) into Assignment: =(74) at 0", "Insert ClassInstanceCreation(73) into Assignment: =(74) at 1", "Insert SimpleName: matcherFcn(77) into Assignment: =(81) at 0", "Insert ClassInstanceCreation(80) into Assignment: =(81) at 1", "Insert SimpleName: drillBuf(377) into MethodInvocation(383) at 0", "Insert SimpleName: getByte(378) into MethodInvocation(383) at 1", "Insert InfixExpression: +(382) into MethodInvocation(383) at 2", "Insert SimpleName: drillBuf(505) into MethodInvocation(511) at 0", "Insert SimpleName: getByte(506) into MethodInvocation(511) at 1", "Insert InfixExpression: +(510) into MethodInvocation(511) at 2", "Insert SimpleName: drillBuf(517) into MethodInvocation(523) at 0", "Insert SimpleName: getByte(518) into MethodInvocation(523) at 1", "Insert InfixExpression: +(522) into MethodInvocation(523) at 2", "Insert SimpleName: secondInByte(526) into InfixExpression: ==(528) at 0", "Insert SimpleName: secondPatternByte(527) into InfixExpression: ==(528) at 1", "Insert SimpleName: thirdInByte(529) into InfixExpression: ==(531) at 0", "Insert SimpleName: thirdPatternByte(530) into InfixExpression: ==(531) at 1", "Insert NumberLiteral: 1(533) into ReturnStatement(534) at 0", "Insert Modifier: final(637) into VariableDeclarationStatement(648) at 0", "Insert PrimitiveType: byte(638) into VariableDeclarationStatement(648) at 1", "Insert VariableDeclarationFragment(647) into VariableDeclarationStatement(648) at 2", "Insert Modifier: final(649) into VariableDeclarationStatement(656) at 0", "Insert PrimitiveType: byte(650) into VariableDeclarationStatement(656) at 1", "Insert VariableDeclarationFragment(655) into VariableDeclarationStatement(656) at 2", "Insert InfixExpression: !=(659) into IfStatement(662) at 0", "Insert Block(661) into IfStatement(662) at 1", "Insert NumberLiteral: 1(668) into ReturnStatement(669) at 0", "Insert NumberLiteral: 1(786) into ReturnStatement(787) at 0", "Insert SimpleName: patternLength(796) into InfixExpression: -(799) at 0", "Insert NumberLiteral: 1(797) into InfixExpression: -(799) at 1", "Insert SimpleName: idx2(798) into InfixExpression: -(799) at 2", "Insert MethodInvocation(807) into InfixExpression: &(809) at 0", "Insert NumberLiteral: 0xFF(808) into InfixExpression: &(809) at 1", "Insert PrimitiveType: int(878) into CastExpression(882) at 0", "Insert ArrayAccess(881) into CastExpression(882) at 1", "Insert SimpleName: idx(945) into InfixExpression: +(947) at 0", "Insert NumberLiteral: 1(946) into InfixExpression: +(947) at 1", "Insert SimpleName: lastPrefixPosition(958) into InfixExpression: -(960) at 0", "Insert SimpleName: idx(959) into InfixExpression: -(960) at 1", "Insert SimpleName: start(379) into InfixExpression: +(382) at 0", "Insert SimpleName: idx(380) into InfixExpression: +(382) at 1", "Insert NumberLiteral: 1(381) into InfixExpression: +(382) at 2", "Insert SimpleName: start(507) into InfixExpression: +(510) at 0", "Insert SimpleName: idx(508) into InfixExpression: +(510) at 1", "Insert NumberLiteral: 1(509) into InfixExpression: +(510) at 2", "Insert SimpleName: start(519) into InfixExpression: +(522) at 0", "Insert SimpleName: idx(520) into InfixExpression: +(522) at 1", "Insert NumberLiteral: 2(521) into InfixExpression: +(522) at 2", "Insert SimpleName: currInByte(639) into VariableDeclarationFragment(647) at 0", "Insert MethodInvocation(646) into VariableDeclarationFragment(647) at 1", "Insert SimpleName: currPattByte(651) into VariableDeclarationFragment(655) at 0", "Insert ArrayAccess(654) into VariableDeclarationFragment(655) at 1", "Insert SimpleName: currInByte(657) into InfixExpression: !=(659) at 0", "Insert SimpleName: currPattByte(658) into InfixExpression: !=(659) at 1", "Insert BreakStatement(660) into Block(661) at 0", "Insert SimpleName: drillBuf(802) into MethodInvocation(807) at 0", "Insert SimpleName: getByte(803) into MethodInvocation(807) at 1", "Insert InfixExpression: +(806) into MethodInvocation(807) at 2", "Insert SimpleName: patternArray(879) into ArrayAccess(881) at 0", "Insert SimpleName: idx(880) into ArrayAccess(881) at 1", "Move SimpleName: drillBuf(88) into MethodInvocation(646) at 0", "Move SimpleName: getByte(89) into MethodInvocation(646) at 1", "Move InfixExpression: +(93) into MethodInvocation(646) at 2", "Insert SimpleName: patternArray(652) into ArrayAccess(654) at 0", "Insert SimpleName: patternIndex(653) into ArrayAccess(654) at 1", "Insert SimpleName: start(804) into InfixExpression: +(806) at 0", "Insert SimpleName: idx1(805) into InfixExpression: +(806) at 1", "Update SimpleName: txtIndex(91) to idx", "Delete Block(16)", "Delete SimpleName: patternByteBuffer(84)", "Delete SimpleName: get(85)", "Delete SimpleName: patternIndex(86)", "Delete MethodInvocation(87)", "Delete MethodInvocation(94)", "Delete InfixExpression: !=(95)", "Delete SimpleName: outer(96)", "Delete ContinueStatement(97)", "Delete Block(98)", "Delete IfStatement(39)", "Delete InfixExpression: <(50)", "Delete IfStatement(54)", "Delete SimpleName: outer(63)", "Delete Block(104)", "Delete ForStatement(105)", "Delete LabeledStatement(106)", "Delete Block(109)", "Delete MethodDeclaration(110)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}