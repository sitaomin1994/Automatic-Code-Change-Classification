{"application": "apache-drill", "csha": "eb6325dc9b59291582cd7d3c3e5d02efd5d15906", "files": [{"AbstractFieldReader_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 40", "MOV Initializer to TypeDeclaration: class at 36", "MOV MethodDeclaration to TypeDeclaration: class at 36", "MOV FieldDeclaration to TypeDeclaration: class at 37"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS SimpleName: read to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS Block to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 32", "operations": ["INS Initializer to TypeDeclaration: class at 32", "INS StringLiteral: \"${name}\" to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to Initializer at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: fail to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 37", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 37", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: holder to VariableDeclarationFragment at 0", "INS SimpleType: Holder to FieldDeclaration at 0", "INS SimpleName: Holder to SimpleType: Holder at 0"]}]}}, {"AbstractFieldReader_diff": {"operations": ["Move MethodDeclaration(186) into TypeDeclaration: class(332) at 36", "Move Initializer(197) into TypeDeclaration: class(332) at 36", "Move FieldDeclaration(226) into TypeDeclaration: class(332) at 40", "Move FieldDeclaration(246) into TypeDeclaration: class(332) at 37", "Insert MethodDeclaration(183) into TypeDeclaration: class(332) at 30", "Insert Initializer(194) into TypeDeclaration: class(332) at 32", "Insert FieldDeclaration(226) into TypeDeclaration: class(332) at 37", "Insert Modifier: public(179) into MethodDeclaration(183) at 0", "Insert PrimitiveType: void(180) into MethodDeclaration(183) at 1", "Insert SimpleName: read(181) into MethodDeclaration(183) at 2", "Insert Block(182) into MethodDeclaration(183) at 3", "Insert Block(193) into Initializer(194) at 0", "Insert SimpleType: Holder(223) into FieldDeclaration(226) at 0", "Insert VariableDeclarationFragment(225) into FieldDeclaration(226) at 1", "Insert ExpressionStatement(192) into Block(193) at 0", "Insert SimpleName: Holder(222) into SimpleType: Holder(223) at 0", "Insert SimpleName: holder(224) into VariableDeclarationFragment(225) at 0", "Insert MethodInvocation(191) into ExpressionStatement(192) at 0", "Insert SimpleName: fail(189) into MethodInvocation(191) at 0", "Insert StringLiteral: \"${name}\"(190) into MethodInvocation(191) at 1"]}}, {"AbstractFieldWriter_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Initializer to TypeDeclaration: class at 21", "MOV Initializer to TypeDeclaration: class at 52", "MOV FieldDeclaration to TypeDeclaration: class at 53", "MOV FieldDeclaration to TypeDeclaration: class at 48", "MOV Initializer to TypeDeclaration: class at 55", "MOV Initializer to TypeDeclaration: class at 26", "MOV FieldDeclaration to TypeDeclaration: class at 51", "MOV FieldDeclaration to TypeDeclaration: class at 38", "MOV Initializer to TypeDeclaration: class at 55"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ThrowStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: format to MethodInvocation at 1", "INS SimpleName: getClass to MethodInvocation at 1", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: startList to MethodDeclaration at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ThisExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"You tried to start when you are using a ValueWriter of type %s.\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ThisExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: getClass to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: endList to MethodDeclaration at 3", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS StringLiteral: \"You tried to end when you are using a ValueWriter of type %s.\" to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: format to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 3"]}]}}, {"AbstractFieldWriter_diff": {"operations": ["Move Initializer(134) into TypeDeclaration: class(428) at 26", "Move Initializer(146) into TypeDeclaration: class(428) at 21", "Move FieldDeclaration(252) into TypeDeclaration: class(428) at 38", "Move Initializer(297) into TypeDeclaration: class(428) at 55", "Move FieldDeclaration(302) into TypeDeclaration: class(428) at 48", "Move FieldDeclaration(309) into TypeDeclaration: class(428) at 51", "Move Initializer(317) into TypeDeclaration: class(428) at 55", "Move FieldDeclaration(324) into TypeDeclaration: class(428) at 53", "Move Initializer(326) into TypeDeclaration: class(428) at 52", "Insert MethodDeclaration(98) into TypeDeclaration: class(428) at 11", "Insert MethodDeclaration(118) into TypeDeclaration: class(428) at 12", "Insert MarkerAnnotation(80) into MethodDeclaration(98) at 0", "Insert Modifier: public(81) into MethodDeclaration(98) at 1", "Insert PrimitiveType: void(82) into MethodDeclaration(98) at 2", "Insert SimpleName: startList(83) into MethodDeclaration(98) at 3", "Insert Block(97) into MethodDeclaration(98) at 4", "Insert MarkerAnnotation(100) into MethodDeclaration(118) at 0", "Insert Modifier: public(101) into MethodDeclaration(118) at 1", "Insert PrimitiveType: void(102) into MethodDeclaration(118) at 2", "Insert SimpleName: endList(103) into MethodDeclaration(118) at 3", "Insert Block(117) into MethodDeclaration(118) at 4", "Insert SimpleName: Override(79) into MarkerAnnotation(80) at 0", "Insert ThrowStatement(96) into Block(97) at 0", "Insert SimpleName: Override(99) into MarkerAnnotation(100) at 0", "Insert ThrowStatement(116) into Block(117) at 0", "Insert ClassInstanceCreation(95) into ThrowStatement(96) at 0", "Insert ClassInstanceCreation(115) into ThrowStatement(116) at 0", "Insert SimpleType: IllegalStateException(85) into ClassInstanceCreation(95) at 0", "Insert MethodInvocation(94) into ClassInstanceCreation(95) at 1", "Insert SimpleType: IllegalStateException(105) into ClassInstanceCreation(115) at 0", "Insert MethodInvocation(114) into ClassInstanceCreation(115) at 1", "Insert SimpleName: IllegalStateException(84) into SimpleType: IllegalStateException(85) at 0", "Insert SimpleName: String(86) into MethodInvocation(94) at 0", "Insert SimpleName: format(87) into MethodInvocation(94) at 1", "Insert StringLiteral: \"You tried to start when you are using a ValueWriter of type %s.\"(88) into MethodInvocation(94) at 2", "Insert MethodInvocation(93) into MethodInvocation(94) at 3", "Insert SimpleName: IllegalStateException(104) into SimpleType: IllegalStateException(105) at 0", "Insert SimpleName: String(106) into MethodInvocation(114) at 0", "Insert SimpleName: format(107) into MethodInvocation(114) at 1", "Insert StringLiteral: \"You tried to end when you are using a ValueWriter of type %s.\"(108) into MethodInvocation(114) at 2", "Insert MethodInvocation(113) into MethodInvocation(114) at 3", "Insert MethodInvocation(91) into MethodInvocation(93) at 0", "Insert SimpleName: getSimpleName(92) into MethodInvocation(93) at 1", "Insert MethodInvocation(111) into MethodInvocation(113) at 0", "Insert SimpleName: getSimpleName(112) into MethodInvocation(113) at 1", "Insert ThisExpression(89) into MethodInvocation(91) at 0", "Insert SimpleName: getClass(90) into MethodInvocation(91) at 1", "Insert ThisExpression(109) into MethodInvocation(111) at 0", "Insert SimpleName: getClass(110) into MethodInvocation(111) at 1"]}}, {"AbstractRecordWriter_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Initializer to TypeDeclaration: class at 20"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: FieldReader to SimpleType: FieldReader at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: fieldName to SingleVariableDeclaration at 1", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleType: FieldConverter to MethodDeclaration at 2", "INS SimpleType: FieldReader to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: FieldConverter to SimpleType: FieldConverter at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: fieldId to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS StringLiteral: \"Doesn't support writing Union type'\" to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: reader to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getNewUnionConverter to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}]}}, {"AbstractRecordWriter_diff": {"operations": ["Move Initializer(180) into TypeDeclaration: class(226) at 20", "Insert MethodDeclaration(116) into TypeDeclaration: class(226) at 9", "Insert MarkerAnnotation(94) into MethodDeclaration(116) at 0", "Insert Modifier: public(95) into MethodDeclaration(116) at 1", "Insert SimpleType: FieldConverter(97) into MethodDeclaration(116) at 2", "Insert SimpleName: getNewUnionConverter(98) into MethodDeclaration(116) at 3", "Insert SingleVariableDeclaration(101) into MethodDeclaration(116) at 4", "Insert SingleVariableDeclaration(105) into MethodDeclaration(116) at 5", "Insert SingleVariableDeclaration(109) into MethodDeclaration(116) at 6", "Insert Block(115) into MethodDeclaration(116) at 7", "Insert SimpleName: Override(93) into MarkerAnnotation(94) at 0", "Insert SimpleName: FieldConverter(96) into SimpleType: FieldConverter(97) at 0", "Insert PrimitiveType: int(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: fieldId(100) into SingleVariableDeclaration(101) at 1", "Insert SimpleType: String(103) into SingleVariableDeclaration(105) at 0", "Insert SimpleName: fieldName(104) into SingleVariableDeclaration(105) at 1", "Insert SimpleType: FieldReader(107) into SingleVariableDeclaration(109) at 0", "Insert SimpleName: reader(108) into SingleVariableDeclaration(109) at 1", "Insert ThrowStatement(114) into Block(115) at 0", "Insert SimpleName: String(102) into SimpleType: String(103) at 0", "Insert SimpleName: FieldReader(106) into SimpleType: FieldReader(107) at 0", "Insert ClassInstanceCreation(113) into ThrowStatement(114) at 0", "Insert SimpleType: UnsupportedOperationException(111) into ClassInstanceCreation(113) at 0", "Insert StringLiteral: \"Doesn't support writing Union type'\"(112) into ClassInstanceCreation(113) at 1", "Insert SimpleName: UnsupportedOperationException(110) into SimpleType: UnsupportedOperationException(111) at 0"]}}, {"BaseReader_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS SimpleName: read to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 0", "INS SimpleName: UnionHolder to SimpleType: UnionHolder at 0", "INS MethodDeclaration to TypeDeclaration: interface at 10", "INS SimpleName: holder to SingleVariableDeclaration at 1", "INS SimpleType: UnionHolder to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS SimpleName: UnionHolder to SimpleType: UnionHolder at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 0", "INS SimpleName: holder to SingleVariableDeclaration at 1", "INS SimpleName: read to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: interface at 11", "INS SimpleType: UnionHolder to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: index to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 12", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0", "INS SimpleType: UnionWriter to SingleVariableDeclaration at 0", "INS SimpleName: copyAsValue to MethodDeclaration at 1", "INS SimpleName: writer to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: UnionWriter to SimpleType: UnionWriter at 0", "INS MethodDeclaration to TypeDeclaration: interface at 12"]}]}}, {"BaseReader_diff": {"operations": ["Insert MethodDeclaration(45) into TypeDeclaration: interface(190) at 10", "Insert MethodDeclaration(55) into TypeDeclaration: interface(190) at 11", "Insert MethodDeclaration(62) into TypeDeclaration: interface(190) at 12", "Insert PrimitiveType: void(39) into MethodDeclaration(45) at 0", "Insert SimpleName: read(40) into MethodDeclaration(45) at 1", "Insert SingleVariableDeclaration(44) into MethodDeclaration(45) at 2", "Insert PrimitiveType: void(46) into MethodDeclaration(55) at 0", "Insert SimpleName: read(47) into MethodDeclaration(55) at 1", "Insert SingleVariableDeclaration(50) into MethodDeclaration(55) at 2", "Insert SingleVariableDeclaration(54) into MethodDeclaration(55) at 3", "Insert PrimitiveType: void(56) into MethodDeclaration(62) at 0", "Insert SimpleName: copyAsValue(57) into MethodDeclaration(62) at 1", "Insert SingleVariableDeclaration(61) into MethodDeclaration(62) at 2", "Insert SimpleType: UnionHolder(42) into SingleVariableDeclaration(44) at 0", "Insert SimpleName: holder(43) into SingleVariableDeclaration(44) at 1", "Insert PrimitiveType: int(48) into SingleVariableDeclaration(50) at 0", "Insert SimpleName: index(49) into SingleVariableDeclaration(50) at 1", "Insert SimpleType: UnionHolder(52) into SingleVariableDeclaration(54) at 0", "Insert SimpleName: holder(53) into SingleVariableDeclaration(54) at 1", "Insert SimpleType: UnionWriter(59) into SingleVariableDeclaration(61) at 0", "Insert SimpleName: writer(60) into SingleVariableDeclaration(61) at 1", "Insert SimpleName: UnionHolder(41) into SimpleType: UnionHolder(42) at 0", "Insert SimpleName: UnionHolder(51) into SimpleType: UnionHolder(52) at 0", "Insert SimpleName: UnionWriter(58) into SimpleType: UnionWriter(59) at 0"]}}, {"BaseWriter_cluster": {"actions": [{"root": "UPDATE from start to startList", "operations": ["UPD SimpleName: start from start to startList"]}, {"root": "UPDATE from end to endList", "operations": ["UPD SimpleName: end from end to endList"]}]}}, {"BaseWriter_diff": {"operations": ["Update SimpleName: start(158) to startList", "Update SimpleName: end(161) to endList"]}}, {"ComplexReaders_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Initializer to TypeDeclaration: class at 40"]}, {"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV FieldDeclaration to TypeDeclaration: interface at 23", "MOV MethodDeclaration to TypeDeclaration: interface at 22", "MOV Initializer to TypeDeclaration: interface at 18"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS SimpleName: read to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 39", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 39", "INS SimpleType: Holder to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: Holder to SimpleType: Holder at 0", "INS SimpleName: h to VariableDeclarationFragment at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 40", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: idx to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: h to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: vector to MethodInvocation at 0", "INS Initializer to TypeDeclaration: class at 40", "INS Block to Initializer at 0", "INS SimpleName: getAccessor to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 15", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: read to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 15", "INS Block to MethodDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 16", "operations": ["INS SimpleName: h to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: Holder to FieldDeclaration at 0", "INS SimpleName: Holder to SimpleType: Holder at 0", "INS FieldDeclaration to TypeDeclaration: interface at 16"]}]}}, {"ComplexReaders_diff": {"operations": ["Move Initializer(258) into TypeDeclaration: class(315) at 40", "Move Initializer(364) into TypeDeclaration: interface(426) at 18", "Move FieldDeclaration(380) into TypeDeclaration: interface(426) at 23", "Move MethodDeclaration(389) into TypeDeclaration: interface(426) at 22", "Insert MethodDeclaration(261) into TypeDeclaration: class(315) at 38", "Insert FieldDeclaration(266) into TypeDeclaration: class(315) at 39", "Insert Initializer(277) into TypeDeclaration: class(315) at 40", "Insert MethodDeclaration(383) into TypeDeclaration: interface(426) at 15", "Insert FieldDeclaration(388) into TypeDeclaration: interface(426) at 16", "Insert Modifier: public(257) into MethodDeclaration(261) at 0", "Insert PrimitiveType: void(258) into MethodDeclaration(261) at 1", "Insert SimpleName: read(259) into MethodDeclaration(261) at 2", "Insert Block(260) into MethodDeclaration(261) at 3", "Insert SimpleType: Holder(263) into FieldDeclaration(266) at 0", "Insert VariableDeclarationFragment(265) into FieldDeclaration(266) at 1", "Insert Block(276) into Initializer(277) at 0", "Insert Modifier: public(379) into MethodDeclaration(383) at 0", "Insert PrimitiveType: void(380) into MethodDeclaration(383) at 1", "Insert SimpleName: read(381) into MethodDeclaration(383) at 2", "Insert Block(382) into MethodDeclaration(383) at 3", "Insert SimpleType: Holder(385) into FieldDeclaration(388) at 0", "Insert VariableDeclarationFragment(387) into FieldDeclaration(388) at 1", "Insert SimpleName: Holder(262) into SimpleType: Holder(263) at 0", "Insert SimpleName: h(264) into VariableDeclarationFragment(265) at 0", "Insert ExpressionStatement(275) into Block(276) at 0", "Insert SimpleName: Holder(384) into SimpleType: Holder(385) at 0", "Insert SimpleName: h(386) into VariableDeclarationFragment(387) at 0", "Insert MethodInvocation(274) into ExpressionStatement(275) at 0", "Insert MethodInvocation(269) into MethodInvocation(274) at 0", "Insert SimpleName: get(270) into MethodInvocation(274) at 1", "Insert MethodInvocation(272) into MethodInvocation(274) at 2", "Insert SimpleName: h(273) into MethodInvocation(274) at 3", "Insert SimpleName: vector(267) into MethodInvocation(269) at 0", "Insert SimpleName: getAccessor(268) into MethodInvocation(269) at 1", "Insert SimpleName: idx(271) into MethodInvocation(272) at 0"]}}, {"EventBasedRecordWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.drill.exec.vector.complex.impl.UnionReader to ImportDeclaration at 0"]}]}}, {"EventBasedRecordWriter_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(357) at 8", "Insert QualifiedName: org.apache.drill.exec.vector.complex.impl.UnionReader(16) into ImportDeclaration(17) at 0"]}}, {"HolderReaderImpl_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 24", "MOV Initializer to TypeDeclaration: class at 25", "MOV Initializer to TypeDeclaration: class at 23", "MOV Initializer to TypeDeclaration: class at 26"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: read to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: h to VariableDeclarationFragment at 0", "INS SimpleName: Holder to SimpleType: Holder at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: Holder to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 20"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: read to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 23", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 23", "INS SimpleName: h to VariableDeclarationFragment at 0", "INS SimpleName: Holder to SimpleType: Holder at 0", "INS SimpleType: Holder to FieldDeclaration at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 30", "operations": ["INS Initializer to TypeDeclaration: class at 30", "INS Block to Initializer at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 31", "operations": ["INS Block to Initializer at 0", "INS Initializer to TypeDeclaration: class at 31"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 34", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: copyAsValue to MethodDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 35", "operations": ["INS SimpleName: writer to VariableDeclarationFragment at 0", "INS SimpleType: Writer to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: Writer to SimpleType: Writer at 0", "INS FieldDeclaration to TypeDeclaration: class at 35"]}, {"root": "INS Initializer to TypeDeclaration: class at 36", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS Block to Initializer at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: writer to MethodInvocation at 0", "INS SimpleName: write to MethodInvocation at 1", "INS Initializer to TypeDeclaration: class at 36", "INS SimpleName: holder to MethodInvocation at 2"]}]}}, {"HolderReaderImpl_diff": {"operations": ["Move Initializer(99) into TypeDeclaration: class(173) at 26", "Move Initializer(101) into TypeDeclaration: class(173) at 25", "Move FieldDeclaration(105) into TypeDeclaration: class(173) at 24", "Move Initializer(109) into TypeDeclaration: class(173) at 23", "Insert MethodDeclaration(104) into TypeDeclaration: class(173) at 19", "Insert FieldDeclaration(109) into TypeDeclaration: class(173) at 20", "Insert MethodDeclaration(118) into TypeDeclaration: class(173) at 22", "Insert FieldDeclaration(123) into TypeDeclaration: class(173) at 23", "Insert Initializer(139) into TypeDeclaration: class(173) at 30", "Insert Initializer(141) into TypeDeclaration: class(173) at 31", "Insert MethodDeclaration(160) into TypeDeclaration: class(173) at 34", "Insert FieldDeclaration(165) into TypeDeclaration: class(173) at 35", "Insert Initializer(172) into TypeDeclaration: class(173) at 36", "Insert MarkerAnnotation(99) into MethodDeclaration(104) at 0", "Insert Modifier: public(100) into MethodDeclaration(104) at 1", "Insert PrimitiveType: void(101) into MethodDeclaration(104) at 2", "Insert SimpleName: read(102) into MethodDeclaration(104) at 3", "Insert Block(103) into MethodDeclaration(104) at 4", "Insert SimpleType: Holder(106) into FieldDeclaration(109) at 0", "Insert VariableDeclarationFragment(108) into FieldDeclaration(109) at 1", "Insert MarkerAnnotation(113) into MethodDeclaration(118) at 0", "Insert Modifier: public(114) into MethodDeclaration(118) at 1", "Insert PrimitiveType: void(115) into MethodDeclaration(118) at 2", "Insert SimpleName: read(116) into MethodDeclaration(118) at 3", "Insert Block(117) into MethodDeclaration(118) at 4", "Insert SimpleType: Holder(120) into FieldDeclaration(123) at 0", "Insert VariableDeclarationFragment(122) into FieldDeclaration(123) at 1", "Insert Block(138) into Initializer(139) at 0", "Insert Block(140) into Initializer(141) at 0", "Insert Modifier: public(156) into MethodDeclaration(160) at 0", "Insert PrimitiveType: void(157) into MethodDeclaration(160) at 1", "Insert SimpleName: copyAsValue(158) into MethodDeclaration(160) at 2", "Insert Block(159) into MethodDeclaration(160) at 3", "Insert SimpleType: Writer(162) into FieldDeclaration(165) at 0", "Insert VariableDeclarationFragment(164) into FieldDeclaration(165) at 1", "Insert Block(171) into Initializer(172) at 0", "Insert SimpleName: Override(98) into MarkerAnnotation(99) at 0", "Insert SimpleName: Holder(105) into SimpleType: Holder(106) at 0", "Insert SimpleName: h(107) into VariableDeclarationFragment(108) at 0", "Insert SimpleName: Override(112) into MarkerAnnotation(113) at 0", "Insert SimpleName: Holder(119) into SimpleType: Holder(120) at 0", "Insert SimpleName: h(121) into VariableDeclarationFragment(122) at 0", "Insert SimpleName: Writer(161) into SimpleType: Writer(162) at 0", "Insert SimpleName: writer(163) into VariableDeclarationFragment(164) at 0", "Insert ExpressionStatement(170) into Block(171) at 0", "Insert MethodInvocation(169) into ExpressionStatement(170) at 0", "Insert SimpleName: writer(166) into MethodInvocation(169) at 0", "Insert SimpleName: write(167) into MethodInvocation(169) at 1", "Insert SimpleName: holder(168) into MethodInvocation(169) at 2"]}}, {"ListWriters_cluster": {"actions": [{"root": "UPDATE from start to startList", "operations": ["UPD SimpleName: start from start to startList", "UPD SimpleName: start from start to startList"]}, {"root": "UPDATE from end to endList", "operations": ["UPD SimpleName: end from end to endList", "UPD SimpleName: end from end to endList"]}]}}, {"ListWriters_diff": {"operations": ["Update SimpleName: start(309) to startList", "Update SimpleName: end(398) to endList", "Update SimpleName: start(425) to startList", "Update SimpleName: end(430) to endList"]}}, {"MapWriters_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Initializer to TypeDeclaration: class at 39", "MOV FieldDeclaration to TypeDeclaration: class at 45", "MOV FieldDeclaration to TypeDeclaration: class at 7", "MOV FieldDeclaration to TypeDeclaration: class at 30", "MOV Initializer to TypeDeclaration: class at 46", "MOV FieldDeclaration to TypeDeclaration: class at 26", "MOV FieldDeclaration to TypeDeclaration: class at 49", "MOV FieldDeclaration to TypeDeclaration: class at 36", "MOV Initializer to TypeDeclaration: class at 48", "MOV FieldDeclaration to TypeDeclaration: class at 44", "MOV Initializer to TypeDeclaration: class at 44", "MOV FieldDeclaration to TypeDeclaration: class at 44", "MOV Initializer to TypeDeclaration: class at 7", "MOV FieldDeclaration to TypeDeclaration: class at 49", "MOV Initializer to TypeDeclaration: class at 45"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: unionEnabled to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: unionInternalMap to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Block to MethodDeclaration at 1", "INS SimpleName: MapWriter to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 0", "INS SimpleName: unionEnabled to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS VariableDeclarationFragment to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: unionInternalMap to VariableDeclarationFragment at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 12", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: unionEnabled to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 2", "INS SimpleName: unionInternalMap to Assignment: = at 1", "INS Initializer to TypeDeclaration: class at 12", "INS SimpleName: unionEnabled to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: unionInternalMap to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to Initializer at 0", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: MapWriter to MethodDeclaration at 0", "INS Block to MethodDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 15", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: FieldWriter to FieldDeclaration at 0", "INS SimpleName: FieldWriter to SimpleType: FieldWriter at 0", "INS SimpleName: parent to VariableDeclarationFragment at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 16", "operations": ["INS Block to Initializer at 0", "INS Initializer to TypeDeclaration: class at 16", "INS SimpleName: container to ConstructorInvocation at 0", "INS SimpleName: parent to ConstructorInvocation at 1", "INS BooleanLiteral: false to ConstructorInvocation at 3", "INS BooleanLiteral: false to ConstructorInvocation at 2", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS Initializer to TypeDeclaration: class at 58", "operations": ["INS Initializer to TypeDeclaration: class at 58", "INS Block to Initializer at 0"]}, {"root": "MOVE from Block", "operations": ["MOV SuperConstructorInvocation to Block at 0", "MOV ExpressionStatement to Block at 1"]}]}}, {"MapWriters_diff": {"operations": ["Move FieldDeclaration(46) into TypeDeclaration: class(517) at 7", "Move FieldDeclaration(353) into TypeDeclaration: class(517) at 26", "Move FieldDeclaration(373) into TypeDeclaration: class(517) at 30", "Move FieldDeclaration(383) into TypeDeclaration: class(517) at 49", "Move Initializer(385) into TypeDeclaration: class(517) at 7", "Move FieldDeclaration(390) into TypeDeclaration: class(517) at 49", "Move Initializer(410) into TypeDeclaration: class(517) at 39", "Move Initializer(412) into TypeDeclaration: class(517) at 48", "Move Initializer(419) into TypeDeclaration: class(517) at 46", "Move FieldDeclaration(424) into TypeDeclaration: class(517) at 36", "Move FieldDeclaration(428) into TypeDeclaration: class(517) at 44", "Move FieldDeclaration(432) into TypeDeclaration: class(517) at 44", "Move FieldDeclaration(442) into TypeDeclaration: class(517) at 45", "Move Initializer(444) into TypeDeclaration: class(517) at 45", "Move Initializer(446) into TypeDeclaration: class(517) at 44", "Insert FieldDeclaration(47) into TypeDeclaration: class(517) at 5", "Insert FieldDeclaration(53) into TypeDeclaration: class(517) at 6", "Insert MethodDeclaration(58) into TypeDeclaration: class(517) at 8", "Insert FieldDeclaration(67) into TypeDeclaration: class(517) at 10", "Insert FieldDeclaration(71) into TypeDeclaration: class(517) at 11", "Insert Initializer(93) into TypeDeclaration: class(517) at 12", "Insert MethodDeclaration(98) into TypeDeclaration: class(517) at 14", "Insert FieldDeclaration(103) into TypeDeclaration: class(517) at 15", "Insert Initializer(110) into TypeDeclaration: class(517) at 16", "Insert Initializer(516) into TypeDeclaration: class(517) at 58", "Insert Modifier: private(42) into FieldDeclaration(47) at 0", "Insert Modifier: final(43) into FieldDeclaration(47) at 1", "Insert PrimitiveType: boolean(44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: private(48) into FieldDeclaration(53) at 0", "Insert Modifier: final(49) into FieldDeclaration(53) at 1", "Insert PrimitiveType: boolean(50) into FieldDeclaration(53) at 2", "Insert VariableDeclarationFragment(52) into FieldDeclaration(53) at 3", "Insert SimpleName: MapWriter(56) into MethodDeclaration(58) at 0", "Insert Block(57) into MethodDeclaration(58) at 1", "Insert PrimitiveType: boolean(64) into FieldDeclaration(67) at 0", "Insert VariableDeclarationFragment(66) into FieldDeclaration(67) at 1", "Insert PrimitiveType: boolean(68) into FieldDeclaration(71) at 0", "Insert VariableDeclarationFragment(70) into FieldDeclaration(71) at 1", "Insert Block(92) into Initializer(93) at 0", "Insert SimpleName: MapWriter(96) into MethodDeclaration(98) at 0", "Insert Block(97) into MethodDeclaration(98) at 1", "Insert SimpleType: FieldWriter(100) into FieldDeclaration(103) at 0", "Insert VariableDeclarationFragment(102) into FieldDeclaration(103) at 1", "Insert Block(109) into Initializer(110) at 0", "Insert Block(515) into Initializer(516) at 0", "Insert SimpleName: unionEnabled(45) into VariableDeclarationFragment(46) at 0", "Insert SimpleName: unionInternalMap(51) into VariableDeclarationFragment(52) at 0", "Insert SimpleName: unionEnabled(65) into VariableDeclarationFragment(66) at 0", "Insert SimpleName: unionInternalMap(69) into VariableDeclarationFragment(70) at 0", "Move SuperConstructorInvocation(48) into Block(92) at 0", "Move ExpressionStatement(54) into Block(92) at 1", "Insert ExpressionStatement(85) into Block(92) at 2", "Insert ExpressionStatement(91) into Block(92) at 3", "Insert SimpleName: FieldWriter(99) into SimpleType: FieldWriter(100) at 0", "Insert SimpleName: parent(101) into VariableDeclarationFragment(102) at 0", "Insert ConstructorInvocation(108) into Block(109) at 0", "Insert Assignment: =(84) into ExpressionStatement(85) at 0", "Insert Assignment: =(90) into ExpressionStatement(91) at 0", "Insert SimpleName: container(104) into ConstructorInvocation(108) at 0", "Insert SimpleName: parent(105) into ConstructorInvocation(108) at 1", "Insert BooleanLiteral: false(106) into ConstructorInvocation(108) at 2", "Insert BooleanLiteral: false(107) into ConstructorInvocation(108) at 3", "Insert FieldAccess(82) into Assignment: =(84) at 0", "Insert SimpleName: unionEnabled(83) into Assignment: =(84) at 1", "Insert FieldAccess(88) into Assignment: =(90) at 0", "Insert SimpleName: unionInternalMap(89) into Assignment: =(90) at 1", "Insert ThisExpression(80) into FieldAccess(82) at 0", "Insert SimpleName: unionEnabled(81) into FieldAccess(82) at 1", "Insert ThisExpression(86) into FieldAccess(88) at 0", "Insert SimpleName: unionInternalMap(87) into FieldAccess(88) at 1"]}}, {"NullReader_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Initializer to TypeDeclaration: class at 51", "MOV FieldDeclaration to TypeDeclaration: class at 32", "MOV MethodDeclaration to TypeDeclaration: class at 30", "MOV Initializer to TypeDeclaration: class at 53", "MOV FieldDeclaration to TypeDeclaration: class at 48", "MOV FieldDeclaration to TypeDeclaration: class at 22", "MOV Initializer to TypeDeclaration: class at 32", "MOV Initializer to TypeDeclaration: class at 52"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: copyAsValue to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: writer to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: UnionWriter to SimpleType: UnionWriter at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: UnionWriter to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS Initializer to TypeDeclaration: class at 23", "operations": ["INS Block to Initializer at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS Initializer to TypeDeclaration: class at 23", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"NullReader cannot read into non-nullable holder\" to ClassInstanceCreation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: read to MethodDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleType: Holder to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 28", "INS SimpleName: holder to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: Holder to SimpleType: Holder at 0"]}]}}, {"NullReader_diff": {"operations": ["Move FieldDeclaration(180) into TypeDeclaration: class(395) at 22", "Move FieldDeclaration(196) into TypeDeclaration: class(395) at 32", "Move Initializer(198) into TypeDeclaration: class(395) at 32", "Move MethodDeclaration(207) into TypeDeclaration: class(395) at 30", "Move FieldDeclaration(347) into TypeDeclaration: class(395) at 48", "Move Initializer(360) into TypeDeclaration: class(395) at 53", "Move Initializer(362) into TypeDeclaration: class(395) at 52", "Move Initializer(364) into TypeDeclaration: class(395) at 51", "Insert MethodDeclaration(135) into TypeDeclaration: class(395) at 15", "Insert Initializer(177) into TypeDeclaration: class(395) at 23", "Insert MethodDeclaration(182) into TypeDeclaration: class(395) at 24", "Insert FieldDeclaration(206) into TypeDeclaration: class(395) at 28", "Insert Modifier: public(127) into MethodDeclaration(135) at 0", "Insert PrimitiveType: void(128) into MethodDeclaration(135) at 1", "Insert SimpleName: copyAsValue(129) into MethodDeclaration(135) at 2", "Insert SingleVariableDeclaration(133) into MethodDeclaration(135) at 3", "Insert Block(134) into MethodDeclaration(135) at 4", "Insert Block(176) into Initializer(177) at 0", "Insert Modifier: public(178) into MethodDeclaration(182) at 0", "Insert PrimitiveType: void(179) into MethodDeclaration(182) at 1", "Insert SimpleName: read(180) into MethodDeclaration(182) at 2", "Insert Block(181) into MethodDeclaration(182) at 3", "Insert SimpleType: Holder(203) into FieldDeclaration(206) at 0", "Insert VariableDeclarationFragment(205) into FieldDeclaration(206) at 1", "Insert SimpleType: UnionWriter(131) into SingleVariableDeclaration(133) at 0", "Insert SimpleName: writer(132) into SingleVariableDeclaration(133) at 1", "Insert ThrowStatement(175) into Block(176) at 0", "Insert SimpleName: Holder(202) into SimpleType: Holder(203) at 0", "Insert SimpleName: holder(204) into VariableDeclarationFragment(205) at 0", "Insert SimpleName: UnionWriter(130) into SimpleType: UnionWriter(131) at 0", "Insert ClassInstanceCreation(174) into ThrowStatement(175) at 0", "Insert SimpleType: UnsupportedOperationException(172) into ClassInstanceCreation(174) at 0", "Insert StringLiteral: \"NullReader cannot read into non-nullable holder\"(173) into ClassInstanceCreation(174) at 1", "Insert SimpleName: UnsupportedOperationException(171) into SimpleType: UnsupportedOperationException(172) at 0"]}}, {"RecordWriter_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV Initializer to TypeDeclaration: interface at 19"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 8", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: fieldName to SingleVariableDeclaration at 1", "INS SimpleName: getNewUnionConverter to MethodDeclaration at 2", "INS SimpleName: FieldConverter to SimpleType: FieldConverter at 0", "INS SimpleName: reader to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 8", "INS SimpleName: fieldId to SingleVariableDeclaration at 1", "INS SimpleType: FieldConverter to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: FieldReader to SingleVariableDeclaration at 0", "INS SimpleName: FieldReader to SimpleType: FieldReader at 0"]}]}}, {"RecordWriter_diff": {"operations": ["Move Initializer(172) into TypeDeclaration: interface(224) at 19", "Insert MethodDeclaration(115) into TypeDeclaration: interface(224) at 8", "Insert Modifier: public(100) into MethodDeclaration(115) at 0", "Insert SimpleType: FieldConverter(102) into MethodDeclaration(115) at 1", "Insert SimpleName: getNewUnionConverter(103) into MethodDeclaration(115) at 2", "Insert SingleVariableDeclaration(106) into MethodDeclaration(115) at 3", "Insert SingleVariableDeclaration(110) into MethodDeclaration(115) at 4", "Insert SingleVariableDeclaration(114) into MethodDeclaration(115) at 5", "Insert SimpleName: FieldConverter(101) into SimpleType: FieldConverter(102) at 0", "Insert PrimitiveType: int(104) into SingleVariableDeclaration(106) at 0", "Insert SimpleName: fieldId(105) into SingleVariableDeclaration(106) at 1", "Insert SimpleType: String(108) into SingleVariableDeclaration(110) at 0", "Insert SimpleName: fieldName(109) into SingleVariableDeclaration(110) at 1", "Insert SimpleType: FieldReader(112) into SingleVariableDeclaration(114) at 0", "Insert SimpleName: reader(113) into SingleVariableDeclaration(114) at 1", "Insert SimpleName: String(107) into SimpleType: String(108) at 0", "Insert SimpleName: FieldReader(111) into SimpleType: FieldReader(112) at 0"]}}, {"Types_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 57"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV ReturnStatement to SwitchStatement at 6"]}, {"root": "INS ReturnStatement to SwitchStatement at 58", "operations": ["INS StringLiteral: \"UNION\" to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 58"]}, {"root": "INS SwitchCase to SwitchStatement at 67", "operations": ["INS SwitchCase to SwitchStatement at 67"]}, {"root": "INS ReturnStatement to SwitchStatement at 64", "operations": ["INS ReturnStatement to SwitchStatement at 64", "INS QualifiedName: java.sql.Types.OTHER to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 65", "operations": ["INS SwitchCase to SwitchStatement at 65"]}, {"root": "INS SwitchCase to SwitchStatement at 6", "operations": ["INS SwitchCase to SwitchStatement at 6"]}, {"root": "INS SimpleName: UNION to SwitchCase at 0", "operations": ["INS SimpleName: UNION to SwitchCase at 0"]}, {"root": "INS SimpleName: UNION to SwitchCase at 0", "operations": ["INS SimpleName: UNION to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 37", "operations": ["INS SwitchCase to SwitchStatement at 37", "INS SimpleName: UNION to SwitchCase at 0"]}, {"root": "INS SimpleName: UNION to SwitchCase at 0", "operations": ["INS SimpleName: UNION to SwitchCase at 0"]}]}}, {"Types_diff": {"operations": ["Move SwitchCase(365) into SwitchStatement(379) at 57", "Move ReturnStatement(769) into SwitchStatement(785) at 6", "Insert ReturnStatement(352) into SwitchStatement(379) at 58", "Insert SwitchCase(369) into SwitchStatement(379) at 67", "Insert ReturnStatement(533) into SwitchStatement(544) at 64", "Insert SwitchCase(534) into SwitchStatement(544) at 65", "Insert SwitchCase(782) into SwitchStatement(785) at 6", "Insert SimpleName: UNION(349) into SwitchCase(350) at 0", "Insert StringLiteral: \"UNION\"(351) into ReturnStatement(352) at 0", "Insert SimpleName: UNION(530) into SwitchCase(531) at 0", "Insert QualifiedName: java.sql.Types.OTHER(532) into ReturnStatement(533) at 0", "Insert SwitchCase(662) into SwitchStatement(684) at 37", "Insert SimpleName: UNION(778) into SwitchCase(779) at 0", "Insert SimpleName: UNION(661) into SwitchCase(662) at 0"]}}, {"ExecConstants_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 97", "operations": ["INS SimpleType: BooleanValidator to FieldDeclaration at 2", "INS SimpleName: BooleanValidator to SimpleType: BooleanValidator at 0", "INS StringLiteral: \"exec.enable_union_type\" to ClassInstanceCreation at 1", "INS SimpleType: BooleanValidator to ClassInstanceCreation at 0", "INS SimpleName: BooleanValidator to SimpleType: BooleanValidator at 0", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: interface at 97", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: ENABLE_UNION_TYPE to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS BooleanLiteral: false to ClassInstanceCreation at 2", "INS Modifier: static to FieldDeclaration at 1"]}]}}, {"ExecConstants_diff": {"operations": ["Insert FieldDeclaration(1005) into TypeDeclaration: interface(1671) at 97", "Insert Modifier: public(994) into FieldDeclaration(1005) at 0", "Insert Modifier: static(995) into FieldDeclaration(1005) at 1", "Insert SimpleType: BooleanValidator(997) into FieldDeclaration(1005) at 2", "Insert VariableDeclarationFragment(1004) into FieldDeclaration(1005) at 3", "Insert SimpleName: BooleanValidator(996) into SimpleType: BooleanValidator(997) at 0", "Insert SimpleName: ENABLE_UNION_TYPE(998) into VariableDeclarationFragment(1004) at 0", "Insert ClassInstanceCreation(1003) into VariableDeclarationFragment(1004) at 1", "Insert SimpleType: BooleanValidator(1000) into ClassInstanceCreation(1003) at 0", "Insert StringLiteral: \"exec.enable_union_type\"(1001) into ClassInstanceCreation(1003) at 1", "Insert BooleanLiteral: false(1002) into ClassInstanceCreation(1003) at 2", "Insert SimpleName: BooleanValidator(999) into SimpleType: BooleanValidator(1000) at 0"]}}, {"MinorType_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 40", "operations": ["INS NumberLiteral: 42 to EnumConstantDeclaration at 1", "INS SimpleName: UNION to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 40"]}, {"root": "INS ReturnStatement to SwitchStatement at 76", "operations": ["INS ReturnStatement to SwitchStatement at 76", "INS SimpleName: UNION to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 77", "operations": ["INS SwitchCase to SwitchStatement at 77"]}, {"root": "INS NumberLiteral: 42 to SwitchCase at 0", "operations": ["INS NumberLiteral: 42 to SwitchCase at 0"]}]}}, {"MinorType_diff": {"operations": ["Insert EnumConstantDeclaration(137) into EnumDeclaration(331) at 40", "Insert SimpleName: UNION(135) into EnumConstantDeclaration(137) at 0", "Insert NumberLiteral: 42(136) into EnumConstantDeclaration(137) at 1", "Insert ReturnStatement(324) into SwitchStatement(328) at 76", "Insert SwitchCase(325) into SwitchStatement(328) at 77", "Insert NumberLiteral: 42(321) into SwitchCase(322) at 0", "Insert SimpleName: UNION(323) into ReturnStatement(324) at 0"]}}, {"TypeProtos_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 41", "operations": ["INS TextElement: <code>UNION = 42;</code> to TagElement at 0", "INS NumberLiteral: 37 to EnumConstantDeclaration at 2", "INS TagElement to Javadoc at 0", "INS EnumConstantDeclaration to EnumDeclaration at 41", "INS SimpleName: UNION to EnumConstantDeclaration at 1", "INS NumberLiteral: 42 to EnumConstantDeclaration at 3", "INS Javadoc to EnumConstantDeclaration at 0"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 79", "operations": ["INS SimpleName: UNION_VALUE to VariableDeclarationFragment at 0", "INS FieldDeclaration to EnumDeclaration at 79", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS NumberLiteral: 42 to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS Modifier: public to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2", "INS Javadoc to FieldDeclaration at 0", "INS PrimitiveType: int to FieldDeclaration at 4", "INS TextElement: <code>UNION = 42;</code> to TagElement at 0", "INS Modifier: final to FieldDeclaration at 3"]}, {"root": "INS ReturnStatement to SwitchStatement at 76", "operations": ["INS SimpleName: UNION to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 76"]}, {"root": "INS SwitchCase to SwitchStatement at 77", "operations": ["INS SwitchCase to SwitchStatement at 77"]}, {"root": "INS NumberLiteral: 42 to SwitchCase at 0", "operations": ["INS NumberLiteral: 42 to SwitchCase at 0"]}, {"root": "INS StringLiteral: \"peProtosH\\001\" to ArrayInitializer at 2", "operations": ["INS StringLiteral: \"peProtosH\\001\" to ArrayInitializer at 2"]}, {"root": "UPDATE from \"imeZone\\030\\006 \\001(\\005*\\212\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\" to \"imeZone\\030\\006 \\001(\\005*\\225\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\"", "operations": ["UPD StringLiteral: \"imeZone\\030\\006 \\001(\\005*\\212\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\" from \"imeZone\\030\\006 \\001(\\005*\\212\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\" to \"imeZone\\030\\006 \\001(\\005*\\225\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\""]}, {"root": "UPDATE from \"\\n\\016GENERIC_OBJECT\\020)*4\\n\\010DataMode\\022\\014\\n\\010OPTION\" to \"\\n\\016GENERIC_OBJECT\\020)\\022\\t\\n\\005UNION\\020**4\\n\\010DataMod\"", "operations": ["UPD StringLiteral: \"\\n\\016GENERIC_OBJECT\\020)*4\\n\\010DataMode\\022\\014\\n\\010OPTION\" from \"\\n\\016GENERIC_OBJECT\\020)*4\\n\\010DataMode\\022\\014\\n\\010OPTION\" to \"\\n\\016GENERIC_OBJECT\\020)\\022\\t\\n\\005UNION\\020**4\\n\\010DataMod\""]}, {"root": "UPDATE from \"AL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATED\\020\\002B-\\n\\035org.\" to \"e\\022\\014\\n\\010OPTIONAL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATE\"", "operations": ["UPD StringLiteral: \"AL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATED\\020\\002B-\\n\\035org.\" from \"AL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATED\\020\\002B-\\n\\035org.\" to \"e\\022\\014\\n\\010OPTIONAL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATE\""]}, {"root": "UPDATE from \"apache.drill.common.typesB\\nTypeProtosH\\001\" to \"D\\020\\002B-\\n\\035org.apache.drill.common.typesB\\nTy\"", "operations": ["UPD StringLiteral: \"apache.drill.common.typesB\\nTypeProtosH\\001\" from \"apache.drill.common.typesB\\nTypeProtosH\\001\" to \"D\\020\\002B-\\n\\035org.apache.drill.common.typesB\\nTy\""]}]}}, {"TypeProtos_diff": {"operations": ["Insert EnumConstantDeclaration(413) into EnumDeclaration(1273) at 41", "Insert FieldDeclaration(936) into EnumDeclaration(1273) at 79", "Insert Javadoc(409) into EnumConstantDeclaration(413) at 0", "Insert SimpleName: UNION(410) into EnumConstantDeclaration(413) at 1", "Insert NumberLiteral: 37(411) into EnumConstantDeclaration(413) at 2", "Insert NumberLiteral: 42(412) into EnumConstantDeclaration(413) at 3", "Insert Javadoc(928) into FieldDeclaration(936) at 0", "Insert Modifier: public(929) into FieldDeclaration(936) at 1", "Insert Modifier: static(930) into FieldDeclaration(936) at 2", "Insert Modifier: final(931) into FieldDeclaration(936) at 3", "Insert PrimitiveType: int(932) into FieldDeclaration(936) at 4", "Insert VariableDeclarationFragment(935) into FieldDeclaration(936) at 5", "Insert TagElement(408) into Javadoc(409) at 0", "Insert TagElement(927) into Javadoc(928) at 0", "Insert SimpleName: UNION_VALUE(933) into VariableDeclarationFragment(935) at 0", "Insert NumberLiteral: 42(934) into VariableDeclarationFragment(935) at 1", "Insert TextElement: <code>UNION = 42;</code>(407) into TagElement(408) at 0", "Insert TextElement: <code>UNION = 42;</code>(926) into TagElement(927) at 0", "Insert ReturnStatement(1105) into SwitchStatement(1109) at 76", "Insert SwitchCase(1106) into SwitchStatement(1109) at 77", "Insert NumberLiteral: 42(1102) into SwitchCase(1103) at 0", "Insert SimpleName: UNION(1104) into ReturnStatement(1105) at 0", "Insert StringLiteral: \"peProtosH\\001\"(4155) into ArrayInitializer(4156) at 2", "Update StringLiteral: \"imeZone\\030\\006 \\001(\\005*\\212\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\"(4115) to \"imeZone\\030\\006 \\001(\\005*\\225\\004\\n\\tMinorType\\022\\010\\n\\004LATE\\020\\000\\022\\007\\n\"", "Update StringLiteral: \"\\n\\016GENERIC_OBJECT\\020)*4\\n\\010DataMode\\022\\014\\n\\010OPTION\"(4129) to \"\\n\\016GENERIC_OBJECT\\020)\\022\\t\\n\\005UNION\\020**4\\n\\010DataMod\"", "Update StringLiteral: \"AL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATED\\020\\002B-\\n\\035org.\"(4130) to \"e\\022\\014\\n\\010OPTIONAL\\020\\000\\022\\014\\n\\010REQUIRED\\020\\001\\022\\014\\n\\010REPEATE\"", "Update StringLiteral: \"apache.drill.common.typesB\\nTypeProtosH\\001\"(4131) to \"D\\020\\002B-\\n\\035org.apache.drill.common.typesB\\nTy\""]}}, {"CastFunctions_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: TYPE2FUNC to MethodInvocation at 0", "INS StringLiteral: \"castUNION\" to MethodInvocation at 3", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}]}}, {"CastFunctions_diff": {"operations": ["Insert ExpressionStatement(109) into Block(450) at 0", "Insert MethodInvocation(108) into ExpressionStatement(109) at 0", "Insert SimpleName: TYPE2FUNC(104) into MethodInvocation(108) at 0", "Insert SimpleName: put(105) into MethodInvocation(108) at 1", "Insert QualifiedName: MinorType.UNION(106) into MethodInvocation(108) at 2", "Insert StringLiteral: \"castUNION\"(107) into MethodInvocation(108) at 3"]}}, {"ExpressionTreeMaterializer_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SimpleName: unionTypeEnabled to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 8", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: unionTypeEnabled to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: unionTypeEnabled to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: unionTypeEnabled to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: unionTypeEnabled to Assignment: = at 1", "INS ExpressionStatement to Block at 3"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS SimpleName: errorCollector to MethodInvocation at 4", "INS QualifiedName: conditions.expression to MethodInvocation at 1", "INS QualifiedName: conditions.expression to MethodInvocation at 1", "INS SimpleName: leastRestrictive to InfixExpression: != at 0", "INS SimpleName: addCastExpression to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 7", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleType: IfExpression.IfCondition to ClassInstanceCreation at 0", "INS SimpleName: elseType to InfixExpression: != at 1", "INS SimpleName: addCastExpression to MethodInvocation at 0", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS SimpleName: elseType to InfixExpression: != at 1", "INS SimpleName: leastRestrictive to InfixExpression: != at 0", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: optional to MethodInvocation at 1", "INS SimpleName: errorCollector to MethodInvocation at 4", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: MinorType.NULL to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS SimpleName: newElseExpr to MethodInvocation at 1", "INS SimpleName: Types to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: MinorType.NULL to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS SimpleName: newElseExpr to Assignment: = at 0", "INS SimpleName: newCondition to ClassInstanceCreation at 1", "INS SimpleName: asList to MethodInvocation at 1", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: leastRestrictive to VariableDeclarationFragment at 0", "INS SimpleName: thenType to InfixExpression: == at 0", "INS SimpleName: optional to MethodInvocation at 1", "INS SimpleType: MinorType to VariableDeclarationStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS SimpleType: IfExpression.IfCondition to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: conditions to Assignment: = at 0", "INS SimpleName: getLeastRestrictiveType to MethodInvocation at 1", "INS ParenthesizedExpression to MethodInvocation at 2", "INS SimpleName: functionLookupContext to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: elseType to MethodInvocation at 3", "INS SimpleName: thenType to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Types to MethodInvocation at 0", "INS SimpleName: functionLookupContext to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: MinorType to SimpleType: MinorType at 0", "INS SimpleName: conditions to Assignment: = at 0", "INS SimpleName: optional to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: Types to MethodInvocation at 0", "INS SimpleName: unionTypeEnabled to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: newElseExpr to Assignment: = at 0", "INS Block to IfStatement at 1", "INS SimpleName: elseType to InfixExpression: == at 0", "INS SimpleName: errorCollector to MethodInvocation at 4", "INS SimpleName: optional to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Types to MethodInvocation at 0", "INS SimpleName: functionLookupContext to MethodInvocation at 3", "INS SimpleName: thenType to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: IfExpression.IfCondition to SimpleType: IfExpression.IfCondition at 0", "INS SimpleName: newCondition to ClassInstanceCreation at 1", "INS SimpleName: errorCollector to MethodInvocation at 4", "INS SimpleName: functionLookupContext to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: addCastExpression to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: TypeCastRules to MethodInvocation at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: newElseExpr to MethodInvocation at 1", "INS InfixExpression: == to InfixExpression: || at 1", "INS QualifiedName: IfExpression.IfCondition to SimpleType: IfExpression.IfCondition at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS Block to IfStatement at 2", "INS IfStatement to IfStatement at 2", "INS SimpleName: addCastExpression to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS ClassInstanceCreation to Assignment: = at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: thenType to InfixExpression: != at 1"]}, {"root": "INS IfStatement to Block at 14", "operations": ["INS IfStatement to Block at 14", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: unionTypeEnabled to PrefixExpression: ! at 0", "INS Block to IfStatement at 1"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 7", "operations": ["INS BooleanLiteral: false to MethodInvocation at 7"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 7", "operations": ["INS BooleanLiteral: false to MethodInvocation at 7"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV IfStatement to Block at 0"]}, {"root": "INS SimpleName: unionTypeEnabled to ClassInstanceCreation at 4", "operations": ["INS SimpleName: unionTypeEnabled to ClassInstanceCreation at 4"]}]}}, {"ExpressionTreeMaterializer_diff": {"operations": ["Insert SingleVariableDeclaration(274) into MethodDeclaration(323) at 9", "Insert FieldDeclaration(731) into TypeDeclaration: class(2690) at 8", "Insert PrimitiveType: boolean(272) into SingleVariableDeclaration(274) at 0", "Insert SimpleName: unionTypeEnabled(273) into SingleVariableDeclaration(274) at 1", "Insert Modifier: private(726) into FieldDeclaration(731) at 0", "Insert Modifier: final(727) into FieldDeclaration(731) at 1", "Insert PrimitiveType: boolean(728) into FieldDeclaration(731) at 2", "Insert VariableDeclarationFragment(730) into FieldDeclaration(731) at 3", "Insert SingleVariableDeclaration(747) into MethodDeclaration(773) at 5", "Insert SimpleName: unionTypeEnabled(729) into VariableDeclarationFragment(730) at 0", "Insert PrimitiveType: boolean(745) into SingleVariableDeclaration(747) at 0", "Insert SimpleName: unionTypeEnabled(746) into SingleVariableDeclaration(747) at 1", "Insert ExpressionStatement(771) into Block(772) at 3", "Insert IfStatement(1589) into Block(1813) at 7", "Insert IfStatement(1798) into Block(1813) at 13", "Insert BooleanLiteral: false(182) into MethodInvocation(183) at 7", "Insert Assignment: =(770) into ExpressionStatement(771) at 0", "Insert SimpleName: unionTypeEnabled(1419) into IfStatement(1589) at 0", "Insert Block(1516) into IfStatement(1589) at 1", "Insert Block(1588) into IfStatement(1589) at 2", "Insert PrefixExpression: !(1719) into IfStatement(1798) at 0", "Insert Block(1797) into IfStatement(1798) at 1", "Insert BooleanLiteral: false(224) into MethodInvocation(225) at 7", "Insert FieldAccess(768) into Assignment: =(770) at 0", "Insert SimpleName: unionTypeEnabled(769) into Assignment: =(770) at 1", "Insert IfStatement(1515) into Block(1516) at 0", "Move IfStatement(1468) into Block(1588) at 0", "Insert SimpleName: unionTypeEnabled(1718) into PrefixExpression: !(1719) at 0", "Move IfStatement(1673) into Block(1797) at 0", "Insert SimpleName: unionTypeEnabled(285) into ClassInstanceCreation(286) at 4", "Insert ThisExpression(766) into FieldAccess(768) at 0", "Insert SimpleName: unionTypeEnabled(767) into FieldAccess(768) at 1", "Insert InfixExpression: &&(1432) into IfStatement(1515) at 0", "Insert Block(1514) into IfStatement(1515) at 1", "Insert InfixExpression: !=(1422) into InfixExpression: &&(1432) at 0", "Insert PrefixExpression: !(1431) into InfixExpression: &&(1432) at 1", "Insert VariableDeclarationStatement(1446) into Block(1514) at 0", "Insert IfStatement(1513) into Block(1514) at 1", "Insert SimpleName: thenType(1420) into InfixExpression: !=(1422) at 0", "Insert SimpleName: elseType(1421) into InfixExpression: !=(1422) at 1", "Insert ParenthesizedExpression(1430) into PrefixExpression: !(1431) at 0", "Insert SimpleType: MinorType(1434) into VariableDeclarationStatement(1446) at 0", "Insert VariableDeclarationFragment(1445) into VariableDeclarationStatement(1446) at 1", "Insert InfixExpression: !=(1449) into IfStatement(1513) at 0", "Insert Block(1466) into IfStatement(1513) at 1", "Insert IfStatement(1512) into IfStatement(1513) at 2", "Insert InfixExpression: ||(1429) into ParenthesizedExpression(1430) at 0", "Insert SimpleName: MinorType(1433) into SimpleType: MinorType(1434) at 0", "Insert SimpleName: leastRestrictive(1435) into VariableDeclarationFragment(1445) at 0", "Insert MethodInvocation(1444) into VariableDeclarationFragment(1445) at 1", "Insert SimpleName: leastRestrictive(1447) into InfixExpression: !=(1449) at 0", "Insert SimpleName: thenType(1448) into InfixExpression: !=(1449) at 1", "Insert ExpressionStatement(1465) into Block(1466) at 0", "Insert InfixExpression: !=(1469) into IfStatement(1512) at 0", "Insert Block(1482) into IfStatement(1512) at 1", "Insert Block(1511) into IfStatement(1512) at 2", "Insert InfixExpression: ==(1425) into InfixExpression: ||(1429) at 0", "Insert InfixExpression: ==(1428) into InfixExpression: ||(1429) at 1", "Insert SimpleName: TypeCastRules(1436) into MethodInvocation(1444) at 0", "Insert SimpleName: getLeastRestrictiveType(1437) into MethodInvocation(1444) at 1", "Insert ParenthesizedExpression(1443) into MethodInvocation(1444) at 2", "Insert Assignment: =(1464) into ExpressionStatement(1465) at 0", "Insert SimpleName: leastRestrictive(1467) into InfixExpression: !=(1469) at 0", "Insert SimpleName: elseType(1468) into InfixExpression: !=(1469) at 1", "Insert ExpressionStatement(1481) into Block(1482) at 0", "Insert ExpressionStatement(1498) into Block(1511) at 0", "Insert ExpressionStatement(1510) into Block(1511) at 1", "Insert SimpleName: thenType(1423) into InfixExpression: ==(1425) at 0", "Insert QualifiedName: MinorType.NULL(1424) into InfixExpression: ==(1425) at 1", "Insert SimpleName: elseType(1426) into InfixExpression: ==(1428) at 0", "Insert QualifiedName: MinorType.NULL(1427) into InfixExpression: ==(1428) at 1", "Insert MethodInvocation(1442) into ParenthesizedExpression(1443) at 0", "Insert SimpleName: conditions(1450) into Assignment: =(1464) at 0", "Insert ClassInstanceCreation(1463) into Assignment: =(1464) at 1", "Insert Assignment: =(1480) into ExpressionStatement(1481) at 0", "Insert Assignment: =(1497) into ExpressionStatement(1498) at 0", "Insert Assignment: =(1509) into ExpressionStatement(1510) at 0", "Insert SimpleName: Arrays(1438) into MethodInvocation(1442) at 0", "Insert SimpleName: asList(1439) into MethodInvocation(1442) at 1", "Insert SimpleName: thenType(1440) into MethodInvocation(1442) at 2", "Insert SimpleName: elseType(1441) into MethodInvocation(1442) at 3", "Insert SimpleType: IfExpression.IfCondition(1452) into ClassInstanceCreation(1463) at 0", "Insert SimpleName: newCondition(1453) into ClassInstanceCreation(1463) at 1", "Insert MethodInvocation(1462) into ClassInstanceCreation(1463) at 2", "Insert SimpleName: newElseExpr(1470) into Assignment: =(1480) at 0", "Insert MethodInvocation(1479) into Assignment: =(1480) at 1", "Insert SimpleName: conditions(1483) into Assignment: =(1497) at 0", "Insert ClassInstanceCreation(1496) into Assignment: =(1497) at 1", "Insert SimpleName: newElseExpr(1499) into Assignment: =(1509) at 0", "Insert MethodInvocation(1508) into Assignment: =(1509) at 1", "Insert QualifiedName: IfExpression.IfCondition(1451) into SimpleType: IfExpression.IfCondition(1452) at 0", "Insert SimpleName: addCastExpression(1454) into MethodInvocation(1462) at 0", "Insert QualifiedName: conditions.expression(1455) into MethodInvocation(1462) at 1", "Insert MethodInvocation(1459) into MethodInvocation(1462) at 2", "Insert SimpleName: functionLookupContext(1460) into MethodInvocation(1462) at 3", "Insert SimpleName: errorCollector(1461) into MethodInvocation(1462) at 4", "Insert SimpleName: addCastExpression(1471) into MethodInvocation(1479) at 0", "Insert SimpleName: newElseExpr(1472) into MethodInvocation(1479) at 1", "Insert MethodInvocation(1476) into MethodInvocation(1479) at 2", "Insert SimpleName: functionLookupContext(1477) into MethodInvocation(1479) at 3", "Insert SimpleName: errorCollector(1478) into MethodInvocation(1479) at 4", "Insert SimpleType: IfExpression.IfCondition(1485) into ClassInstanceCreation(1496) at 0", "Insert SimpleName: newCondition(1486) into ClassInstanceCreation(1496) at 1", "Insert MethodInvocation(1495) into ClassInstanceCreation(1496) at 2", "Insert SimpleName: addCastExpression(1500) into MethodInvocation(1508) at 0", "Insert SimpleName: newElseExpr(1501) into MethodInvocation(1508) at 1", "Insert MethodInvocation(1505) into MethodInvocation(1508) at 2", "Insert SimpleName: functionLookupContext(1506) into MethodInvocation(1508) at 3", "Insert SimpleName: errorCollector(1507) into MethodInvocation(1508) at 4", "Insert SimpleName: Types(1456) into MethodInvocation(1459) at 0", "Insert SimpleName: optional(1457) into MethodInvocation(1459) at 1", "Insert QualifiedName: MinorType.UNION(1458) into MethodInvocation(1459) at 2", "Insert SimpleName: Types(1473) into MethodInvocation(1476) at 0", "Insert SimpleName: optional(1474) into MethodInvocation(1476) at 1", "Insert QualifiedName: MinorType.UNION(1475) into MethodInvocation(1476) at 2", "Insert QualifiedName: IfExpression.IfCondition(1484) into SimpleType: IfExpression.IfCondition(1485) at 0", "Insert SimpleName: addCastExpression(1487) into MethodInvocation(1495) at 0", "Insert QualifiedName: conditions.expression(1488) into MethodInvocation(1495) at 1", "Insert MethodInvocation(1492) into MethodInvocation(1495) at 2", "Insert SimpleName: functionLookupContext(1493) into MethodInvocation(1495) at 3", "Insert SimpleName: errorCollector(1494) into MethodInvocation(1495) at 4", "Insert SimpleName: Types(1502) into MethodInvocation(1505) at 0", "Insert SimpleName: optional(1503) into MethodInvocation(1505) at 1", "Insert QualifiedName: MinorType.UNION(1504) into MethodInvocation(1505) at 2", "Insert SimpleName: Types(1489) into MethodInvocation(1492) at 0", "Insert SimpleName: optional(1490) into MethodInvocation(1492) at 1", "Insert QualifiedName: MinorType.UNION(1491) into MethodInvocation(1492) at 2"]}}, {"AbstractRecordBatch_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.drill.exec.ExecConstants to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.drill.exec.server.options.OptionValue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS Modifier: protected to FieldDeclaration at 0", "INS SimpleName: unionTypeEnabled to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS VariableDeclarationStatement to Block at 6", "INS SimpleType: OptionValue to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getOption to MethodInvocation at 1", "INS SimpleName: getOptions to MethodInvocation at 1", "INS QualifiedName: ExecConstants.ENABLE_UNION_TYPE to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: OptionValue to SimpleType: OptionValue at 0", "INS SimpleName: context to MethodInvocation at 0", "INS SimpleName: option to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getOptionName to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS QualifiedName: option.bool_val to Assignment: = at 1", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 7", "INS BooleanLiteral: false to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: unionTypeEnabled to Assignment: = at 0", "INS SimpleName: unionTypeEnabled to Assignment: = at 0", "INS SimpleName: option to InfixExpression: != at 0"]}]}}, {"AbstractRecordBatch_diff": {"operations": ["Insert ImportDeclaration(26) into CompilationUnit(676) at 5", "Insert ImportDeclaration(44) into CompilationUnit(676) at 14", "Insert QualifiedName: org.apache.drill.exec.ExecConstants(25) into ImportDeclaration(26) at 0", "Insert QualifiedName: org.apache.drill.exec.server.options.OptionValue(43) into ImportDeclaration(44) at 0", "Insert FieldDeclaration(113) into TypeDeclaration: class(675) at 11", "Insert Modifier: protected(108) into FieldDeclaration(113) at 0", "Insert Modifier: final(109) into FieldDeclaration(113) at 1", "Insert PrimitiveType: boolean(110) into FieldDeclaration(113) at 2", "Insert VariableDeclarationFragment(112) into FieldDeclaration(113) at 3", "Insert SimpleName: unionTypeEnabled(111) into VariableDeclarationFragment(112) at 0", "Insert VariableDeclarationStatement(252) into Block(267) at 6", "Insert IfStatement(266) into Block(267) at 7", "Insert SimpleType: OptionValue(241) into VariableDeclarationStatement(252) at 0", "Insert VariableDeclarationFragment(251) into VariableDeclarationStatement(252) at 1", "Insert InfixExpression: !=(255) into IfStatement(266) at 0", "Insert Block(260) into IfStatement(266) at 1", "Insert Block(265) into IfStatement(266) at 2", "Insert SimpleName: OptionValue(240) into SimpleType: OptionValue(241) at 0", "Insert SimpleName: option(242) into VariableDeclarationFragment(251) at 0", "Insert MethodInvocation(250) into VariableDeclarationFragment(251) at 1", "Insert SimpleName: option(253) into InfixExpression: !=(255) at 0", "Insert NullLiteral(254) into InfixExpression: !=(255) at 1", "Insert ExpressionStatement(259) into Block(260) at 0", "Insert ExpressionStatement(264) into Block(265) at 0", "Insert MethodInvocation(245) into MethodInvocation(250) at 0", "Insert SimpleName: getOption(246) into MethodInvocation(250) at 1", "Insert MethodInvocation(249) into MethodInvocation(250) at 2", "Insert Assignment: =(258) into ExpressionStatement(259) at 0", "Insert Assignment: =(263) into ExpressionStatement(264) at 0", "Insert SimpleName: context(243) into MethodInvocation(245) at 0", "Insert SimpleName: getOptions(244) into MethodInvocation(245) at 1", "Insert QualifiedName: ExecConstants.ENABLE_UNION_TYPE(247) into MethodInvocation(249) at 0", "Insert SimpleName: getOptionName(248) into MethodInvocation(249) at 1", "Insert SimpleName: unionTypeEnabled(256) into Assignment: =(258) at 0", "Insert QualifiedName: option.bool_val(257) into Assignment: =(258) at 1", "Insert SimpleName: unionTypeEnabled(261) into Assignment: =(263) at 0", "Insert BooleanLiteral: false(262) into Assignment: =(263) at 1"]}}, {"SimpleVectorWrapper_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.drill.common.types.MinorType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.drill.common.types.TypeProtos to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.drill.common.types.Types to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: org.apache.drill.exec.vector.complex.impl.UnionVector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: UnionVector to InstanceofExpression at 1", "INS SimpleName: Types to MethodInvocation at 0", "INS SimpleName: optional to MethodInvocation at 1", "INS SimpleName: intermediateType to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: expectedPath to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS InstanceofExpression to IfStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: remainder to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: getChild to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: v to InstanceofExpression at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleType: TypedFieldId.Builder to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: UnionVector to SimpleType: UnionVector at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS QualifiedName: TypeProtos.MinorType.UNION to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: finalType to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: id to MethodInvocation at 2", "INS IfStatement to Block at 2", "INS SimpleName: optional to MethodInvocation at 1", "INS QualifiedName: TypeProtos.MinorType.UNION to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getRootSegment to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Types to MethodInvocation at 0", "INS QualifiedName: TypedFieldId.Builder to SimpleType: TypedFieldId.Builder at 0", "INS SimpleName: addId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: TypedFieldId to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}]}}, {"SimpleVectorWrapper_diff": {"operations": ["Insert ImportDeclaration(22) into CompilationUnit(528) at 3", "Insert ImportDeclaration(24) into CompilationUnit(528) at 4", "Insert ImportDeclaration(28) into CompilationUnit(528) at 6", "Insert ImportDeclaration(38) into CompilationUnit(528) at 11", "Insert QualifiedName: org.apache.drill.common.types.MinorType(21) into ImportDeclaration(22) at 0", "Insert QualifiedName: org.apache.drill.common.types.TypeProtos(23) into ImportDeclaration(24) at 0", "Insert QualifiedName: org.apache.drill.common.types.Types(27) into ImportDeclaration(28) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.complex.impl.UnionVector(37) into ImportDeclaration(38) at 0", "Insert IfStatement(524) into Block(525) at 2", "Insert InstanceofExpression(343) into IfStatement(524) at 0", "Insert Block(384) into IfStatement(524) at 1", "Move IfStatement(470) into IfStatement(524) at 2", "Insert SimpleName: v(340) into InstanceofExpression(343) at 0", "Insert SimpleType: UnionVector(342) into InstanceofExpression(343) at 1", "Insert VariableDeclarationStatement(351) into Block(384) at 0", "Insert ExpressionStatement(363) into Block(384) at 1", "Insert ExpressionStatement(371) into Block(384) at 2", "Insert ExpressionStatement(379) into Block(384) at 3", "Insert ReturnStatement(383) into Block(384) at 4", "Insert SimpleName: UnionVector(341) into SimpleType: UnionVector(342) at 0", "Insert SimpleType: TypedFieldId.Builder(345) into VariableDeclarationStatement(351) at 0", "Insert VariableDeclarationFragment(350) into VariableDeclarationStatement(351) at 1", "Insert MethodInvocation(362) into ExpressionStatement(363) at 0", "Insert MethodInvocation(370) into ExpressionStatement(371) at 0", "Insert MethodInvocation(378) into ExpressionStatement(379) at 0", "Insert MethodInvocation(382) into ReturnStatement(383) at 0", "Insert QualifiedName: TypedFieldId.Builder(344) into SimpleType: TypedFieldId.Builder(345) at 0", "Insert SimpleName: builder(346) into VariableDeclarationFragment(350) at 0", "Insert MethodInvocation(349) into VariableDeclarationFragment(350) at 1", "Insert MethodInvocation(355) into MethodInvocation(362) at 0", "Insert SimpleName: remainder(356) into MethodInvocation(362) at 1", "Insert MethodInvocation(361) into MethodInvocation(362) at 2", "Insert SimpleName: builder(364) into MethodInvocation(370) at 0", "Insert SimpleName: finalType(365) into MethodInvocation(370) at 1", "Insert MethodInvocation(369) into MethodInvocation(370) at 2", "Insert SimpleName: builder(372) into MethodInvocation(378) at 0", "Insert SimpleName: intermediateType(373) into MethodInvocation(378) at 1", "Insert MethodInvocation(377) into MethodInvocation(378) at 2", "Insert SimpleName: builder(380) into MethodInvocation(382) at 0", "Insert SimpleName: build(381) into MethodInvocation(382) at 1", "Insert SimpleName: TypedFieldId(347) into MethodInvocation(349) at 0", "Insert SimpleName: newBuilder(348) into MethodInvocation(349) at 1", "Insert SimpleName: builder(352) into MethodInvocation(355) at 0", "Insert SimpleName: addId(353) into MethodInvocation(355) at 1", "Insert SimpleName: id(354) into MethodInvocation(355) at 2", "Insert MethodInvocation(359) into MethodInvocation(361) at 0", "Insert SimpleName: getChild(360) into MethodInvocation(361) at 1", "Insert SimpleName: Types(366) into MethodInvocation(369) at 0", "Insert SimpleName: optional(367) into MethodInvocation(369) at 1", "Insert QualifiedName: TypeProtos.MinorType.UNION(368) into MethodInvocation(369) at 2", "Insert SimpleName: Types(374) into MethodInvocation(377) at 0", "Insert SimpleName: optional(375) into MethodInvocation(377) at 1", "Insert QualifiedName: TypeProtos.MinorType.UNION(376) into MethodInvocation(377) at 2", "Insert SimpleName: expectedPath(357) into MethodInvocation(359) at 0", "Insert SimpleName: getRootSegment(358) into MethodInvocation(359) at 1"]}}, {"ResolverTypePrecedence_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 35", "operations": ["INS NumberLiteral: 2 to Assignment: += at 1", "INS Assignment: += to MethodInvocation at 3", "INS SimpleName: precedenceMap to MethodInvocation at 0", "INS ExpressionStatement to Block at 35", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS SimpleName: i to Assignment: += at 0"]}]}}, {"ResolverTypePrecedence_diff": {"operations": ["Insert ExpressionStatement(352) into Block(560) at 35", "Insert MethodInvocation(351) into ExpressionStatement(352) at 0", "Insert SimpleName: precedenceMap(345) into MethodInvocation(351) at 0", "Insert SimpleName: put(346) into MethodInvocation(351) at 1", "Insert QualifiedName: MinorType.UNION(347) into MethodInvocation(351) at 2", "Insert Assignment: +=(350) into MethodInvocation(351) at 3", "Insert SimpleName: i(348) into Assignment: +=(350) at 0", "Insert NumberLiteral: 2(349) into Assignment: +=(350) at 1"]}}, {"TypeCastRules_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: com.google.common.collect.Sets to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ExpressionStatement to Block at 648", "operations": ["INS SimpleName: newHashSet to MethodInvocation at 1", "INS SimpleName: rules to MethodInvocation at 0", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 648", "INS SimpleName: Sets to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS QualifiedName: MinorType.UNION to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 2", "INS QualifiedName: MinorType.UNION to InfixExpression: == at 1", "INS SimpleName: result to InfixExpression: == at 0", "INS SimpleName: result to ReturnStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: next to ReturnStatement at 0", "INS QualifiedName: MinorType.UNION to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS InfixExpression: == to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: next to InfixExpression: == at 0"]}]}}, {"TypeCastRules_diff": {"operations": ["Insert ImportDeclaration(28) into CompilationUnit(4141) at 6", "Insert ImportDeclaration(30) into CompilationUnit(4141) at 7", "Insert QualifiedName: com.google.common.collect.Lists(27) into ImportDeclaration(28) at 0", "Insert QualifiedName: com.google.common.collect.Sets(29) into ImportDeclaration(30) at 0", "Insert ExpressionStatement(3476) into Block(3477) at 648", "Insert IfStatement(3660) into Block(3747) at 2", "Insert MethodInvocation(3475) into ExpressionStatement(3476) at 0", "Insert InfixExpression: ==(3656) into IfStatement(3660) at 0", "Insert Block(3659) into IfStatement(3660) at 1", "Insert SimpleName: rules(3468) into MethodInvocation(3475) at 0", "Insert SimpleName: put(3469) into MethodInvocation(3475) at 1", "Insert QualifiedName: MinorType.UNION(3470) into MethodInvocation(3475) at 2", "Insert MethodInvocation(3474) into MethodInvocation(3475) at 3", "Insert SimpleName: result(3654) into InfixExpression: ==(3656) at 0", "Insert QualifiedName: MinorType.UNION(3655) into InfixExpression: ==(3656) at 1", "Insert ReturnStatement(3658) into Block(3659) at 0", "Insert IfStatement(3696) into Block(3743) at 1", "Insert SimpleName: Sets(3471) into MethodInvocation(3474) at 0", "Insert SimpleName: newHashSet(3472) into MethodInvocation(3474) at 1", "Insert QualifiedName: MinorType.UNION(3473) into MethodInvocation(3474) at 2", "Insert SimpleName: result(3657) into ReturnStatement(3658) at 0", "Insert InfixExpression: ==(3692) into IfStatement(3696) at 0", "Insert Block(3695) into IfStatement(3696) at 1", "Insert SimpleName: next(3690) into InfixExpression: ==(3692) at 0", "Insert QualifiedName: MinorType.UNION(3691) into InfixExpression: ==(3692) at 1", "Insert ReturnStatement(3694) into Block(3695) at 0", "Insert SimpleName: next(3693) into ReturnStatement(3694) at 0"]}}, {"DrillFuncHolder_cluster": {"actions": [{"root": "INS InfixExpression: != to InfixExpression: && at 3", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getMinorType to MethodInvocation at 1", "INS InfixExpression: != to InfixExpression: && at 3", "INS QualifiedName: MinorType.UNION to InfixExpression: != at 1", "INS SimpleName: inputVariable to MethodInvocation at 0"]}]}}, {"DrillFuncHolder_diff": {"operations": ["Insert InfixExpression: !=(838) into InfixExpression: &&(839) at 3", "Insert MethodInvocation(836) into InfixExpression: !=(838) at 0", "Insert QualifiedName: MinorType.UNION(837) into InfixExpression: !=(838) at 1", "Insert SimpleName: inputVariable(834) into MethodInvocation(836) at 0", "Insert SimpleName: getMinorType(835) into MethodInvocation(836) at 1"]}}, {"SystemOptionManager_cluster": {"actions": [{"root": "INS QualifiedName: ExecConstants.ENABLE_UNION_TYPE to ArrayInitializer at 39", "operations": ["INS QualifiedName: ExecConstants.ENABLE_UNION_TYPE to ArrayInitializer at 39"]}]}}, {"SystemOptionManager_diff": {"operations": ["Insert QualifiedName: ExecConstants.ENABLE_UNION_TYPE(148) into ArrayInitializer(185) at 39"]}}, {"MapOrListWriter_cluster": {"actions": [{"root": "UPDATE from start to startList", "operations": ["UPD SimpleName: start from start to startList"]}, {"root": "UPDATE from end to endList", "operations": ["UPD SimpleName: end from end to endList"]}]}}, {"MapOrListWriter_diff": {"operations": ["Update SimpleName: start(102) to startList", "Update SimpleName: end(120) to endList"]}}, {"FilterRecordBatch_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.drill.exec.ExecConstants to ImportDeclaration at 0"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 6", "operations": ["INS BooleanLiteral: false to MethodInvocation at 6"]}, {"root": "INS SimpleName: unionTypeEnabled to MethodInvocation at 7", "operations": ["INS SimpleName: unionTypeEnabled to MethodInvocation at 7"]}]}}, {"FilterRecordBatch_diff": {"operations": ["Insert ImportDeclaration(28) into CompilationUnit(666) at 6", "Insert QualifiedName: org.apache.drill.exec.ExecConstants(27) into ImportDeclaration(28) at 0", "Insert BooleanLiteral: false(545) into MethodInvocation(547) at 6", "Insert SimpleName: unionTypeEnabled(546) into MethodInvocation(547) at 7"]}}, {"FlattenRecordBatch_cluster": {"actions": [{"root": "INS BooleanLiteral: false to MethodInvocation at 7", "operations": ["INS BooleanLiteral: false to MethodInvocation at 7"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 7", "operations": ["INS BooleanLiteral: false to MethodInvocation at 7"]}]}}, {"FlattenRecordBatch_diff": {"operations": ["Insert BooleanLiteral: false(962) into MethodInvocation(963) at 7", "Insert BooleanLiteral: false(1119) into MethodInvocation(1120) at 7"]}}, {"ProjectRecordBatch_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 20"]}, {"root": "UPDATE from org.apache.drill.exec.vector.complex.AbstractContainerVector to org.apache.drill.exec.ExecConstants", "operations": ["UPD QualifiedName: org.apache.drill.exec.vector.complex.AbstractContainerVector from org.apache.drill.exec.vector.complex.AbstractContainerVector to org.apache.drill.exec.ExecConstants"]}, {"root": "INS SimpleName: unionTypeEnabled to MethodInvocation at 7", "operations": ["INS SimpleName: unionTypeEnabled to MethodInvocation at 7"]}]}}, {"ProjectRecordBatch_diff": {"operations": ["Move ImportDeclaration(108) into CompilationUnit(3138) at 20", "Update QualifiedName: org.apache.drill.exec.vector.complex.AbstractContainerVector(107) to org.apache.drill.exec.ExecConstants", "Insert SimpleName: unionTypeEnabled(1415) into MethodInvocation(1416) at 7"]}}, {"JSONRecordReader_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 15", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: unionEnabled to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: boolean to FieldDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: ExecConstants.ENABLE_UNION_TYPE to MethodInvocation at 2", "INS SimpleName: unionEnabled to FieldAccess at 1", "INS SimpleName: getOption to MethodInvocation at 1", "INS SimpleName: getOptions to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: fragmentContext to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: unionEnabled to ClassInstanceCreation at 2", "operations": ["INS SimpleName: unionEnabled to ClassInstanceCreation at 2"]}]}}, {"JSONRecordReader_diff": {"operations": ["Insert FieldDeclaration(153) into TypeDeclaration: class(730) at 15", "Insert Modifier: private(148) into FieldDeclaration(153) at 0", "Insert Modifier: final(149) into FieldDeclaration(153) at 1", "Insert PrimitiveType: boolean(150) into FieldDeclaration(153) at 2", "Insert VariableDeclarationFragment(152) into FieldDeclaration(153) at 3", "Insert SimpleName: unionEnabled(151) into VariableDeclarationFragment(152) at 0", "Insert ExpressionStatement(373) into Block(378) at 6", "Insert Assignment: =(372) into ExpressionStatement(373) at 0", "Insert FieldAccess(365) into Assignment: =(372) at 0", "Insert MethodInvocation(371) into Assignment: =(372) at 1", "Insert ThisExpression(363) into FieldAccess(365) at 0", "Insert SimpleName: unionEnabled(364) into FieldAccess(365) at 1", "Insert MethodInvocation(368) into MethodInvocation(371) at 0", "Insert SimpleName: getOption(369) into MethodInvocation(371) at 1", "Insert QualifiedName: ExecConstants.ENABLE_UNION_TYPE(370) into MethodInvocation(371) at 2", "Insert SimpleName: fragmentContext(366) into MethodInvocation(368) at 0", "Insert SimpleName: getOptions(367) into MethodInvocation(368) at 1", "Insert SimpleName: unionEnabled(417) into ClassInstanceCreation(418) at 2"]}}, {"JsonRecordWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.drill.exec.vector.complex.fn.JsonWriter to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: FieldReader to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: fieldName to ClassInstanceCreation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getNewUnionConverter to MethodDeclaration at 3", "INS SimpleName: fieldId to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: reader to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: fieldId to ClassInstanceCreation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: FieldConverter to SimpleType: FieldConverter at 0", "INS SimpleType: FieldConverter to MethodDeclaration at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: fieldName to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: UnionJsonConverter to ClassInstanceCreation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: FieldReader to SimpleType: FieldReader at 0", "INS SimpleName: UnionJsonConverter to SimpleType: UnionJsonConverter at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: reader to ClassInstanceCreation at 3"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 21", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: writeFieldName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: writer to MethodInvocation at 0", "INS SimpleName: fieldName to SingleVariableDeclaration at 1", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: reader to MethodInvocation at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: writer to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: writeField to MethodDeclaration at 3", "INS SimpleName: JsonWriter to SimpleType: JsonWriter at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: gen to MethodInvocation at 0", "INS SimpleName: fieldId to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: UnionJsonConverter to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: fieldId to SuperConstructorInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: gen to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS SimpleType: FieldReader to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: JsonWriter to SimpleType: JsonWriter at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: fieldName to MethodInvocation at 2", "INS SimpleName: startField to MethodDeclaration at 3", "INS SuperConstructorInvocation to Block at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 21", "INS SimpleName: reader to SuperConstructorInvocation at 2", "INS SimpleType: FieldConverter to TypeDeclaration: class at 2", "INS SimpleName: FieldConverter to SimpleType: FieldConverter at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: JsonWriter to VariableDeclarationStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: FieldReader to SimpleType: FieldReader at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to TypeDeclaration: class at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: UnionJsonConverter to TypeDeclaration: class at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: JsonWriter to ClassInstanceCreation at 0", "INS SimpleName: fieldName to SuperConstructorInvocation at 1", "INS SimpleName: reader to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0"]}]}}, {"JsonRecordWriter_diff": {"operations": ["Insert ImportDeclaration(40) into CompilationUnit(876) at 12", "Insert QualifiedName: org.apache.drill.exec.vector.complex.fn.JsonWriter(39) into ImportDeclaration(40) at 0", "Insert MethodDeclaration(491) into TypeDeclaration: class(875) at 20", "Insert TypeDeclaration: class(552) into TypeDeclaration: class(875) at 21", "Insert MarkerAnnotation(467) into MethodDeclaration(491) at 0", "Insert Modifier: public(468) into MethodDeclaration(491) at 1", "Insert SimpleType: FieldConverter(470) into MethodDeclaration(491) at 2", "Insert SimpleName: getNewUnionConverter(471) into MethodDeclaration(491) at 3", "Insert SingleVariableDeclaration(474) into MethodDeclaration(491) at 4", "Insert SingleVariableDeclaration(478) into MethodDeclaration(491) at 5", "Insert SingleVariableDeclaration(482) into MethodDeclaration(491) at 6", "Insert Block(490) into MethodDeclaration(491) at 7", "Insert Modifier: public(492) into TypeDeclaration: class(552) at 0", "Insert SimpleName: UnionJsonConverter(493) into TypeDeclaration: class(552) at 1", "Insert SimpleType: FieldConverter(495) into TypeDeclaration: class(552) at 2", "Insert MethodDeclaration(514) into TypeDeclaration: class(552) at 3", "Insert MethodDeclaration(528) into TypeDeclaration: class(552) at 4", "Insert MethodDeclaration(551) into TypeDeclaration: class(552) at 5", "Insert SimpleName: Override(466) into MarkerAnnotation(467) at 0", "Insert SimpleName: FieldConverter(469) into SimpleType: FieldConverter(470) at 0", "Insert PrimitiveType: int(472) into SingleVariableDeclaration(474) at 0", "Insert SimpleName: fieldId(473) into SingleVariableDeclaration(474) at 1", "Insert SimpleType: String(476) into SingleVariableDeclaration(478) at 0", "Insert SimpleName: fieldName(477) into SingleVariableDeclaration(478) at 1", "Insert SimpleType: FieldReader(480) into SingleVariableDeclaration(482) at 0", "Insert SimpleName: reader(481) into SingleVariableDeclaration(482) at 1", "Insert ReturnStatement(489) into Block(490) at 0", "Insert SimpleName: FieldConverter(494) into SimpleType: FieldConverter(495) at 0", "Insert Modifier: public(496) into MethodDeclaration(514) at 0", "Insert SimpleName: UnionJsonConverter(497) into MethodDeclaration(514) at 1", "Insert SingleVariableDeclaration(500) into MethodDeclaration(514) at 2", "Insert SingleVariableDeclaration(504) into MethodDeclaration(514) at 3", "Insert SingleVariableDeclaration(508) into MethodDeclaration(514) at 4", "Insert Block(513) into MethodDeclaration(514) at 5", "Insert MarkerAnnotation(516) into MethodDeclaration(528) at 0", "Insert Modifier: public(517) into MethodDeclaration(528) at 1", "Insert PrimitiveType: void(518) into MethodDeclaration(528) at 2", "Insert SimpleName: startField(519) into MethodDeclaration(528) at 3", "Insert SimpleType: IOException(521) into MethodDeclaration(528) at 4", "Insert Block(527) into MethodDeclaration(528) at 5", "Insert MarkerAnnotation(530) into MethodDeclaration(551) at 0", "Insert Modifier: public(531) into MethodDeclaration(551) at 1", "Insert PrimitiveType: void(532) into MethodDeclaration(551) at 2", "Insert SimpleName: writeField(533) into MethodDeclaration(551) at 3", "Insert SimpleType: IOException(535) into MethodDeclaration(551) at 4", "Insert Block(550) into MethodDeclaration(551) at 5", "Insert SimpleName: String(475) into SimpleType: String(476) at 0", "Insert SimpleName: FieldReader(479) into SimpleType: FieldReader(480) at 0", "Insert ClassInstanceCreation(488) into ReturnStatement(489) at 0", "Insert PrimitiveType: int(498) into SingleVariableDeclaration(500) at 0", "Insert SimpleName: fieldId(499) into SingleVariableDeclaration(500) at 1", "Insert SimpleType: String(502) into SingleVariableDeclaration(504) at 0", "Insert SimpleName: fieldName(503) into SingleVariableDeclaration(504) at 1", "Insert SimpleType: FieldReader(506) into SingleVariableDeclaration(508) at 0", "Insert SimpleName: reader(507) into SingleVariableDeclaration(508) at 1", "Insert SuperConstructorInvocation(512) into Block(513) at 0", "Insert SimpleName: Override(515) into MarkerAnnotation(516) at 0", "Insert SimpleName: IOException(520) into SimpleType: IOException(521) at 0", "Insert ExpressionStatement(526) into Block(527) at 0", "Insert SimpleName: Override(529) into MarkerAnnotation(530) at 0", "Insert SimpleName: IOException(534) into SimpleType: IOException(535) at 0", "Insert VariableDeclarationStatement(544) into Block(550) at 0", "Insert ExpressionStatement(549) into Block(550) at 1", "Insert SimpleType: UnionJsonConverter(484) into ClassInstanceCreation(488) at 0", "Insert SimpleName: fieldId(485) into ClassInstanceCreation(488) at 1", "Insert SimpleName: fieldName(486) into ClassInstanceCreation(488) at 2", "Insert SimpleName: reader(487) into ClassInstanceCreation(488) at 3", "Insert SimpleName: String(501) into SimpleType: String(502) at 0", "Insert SimpleName: FieldReader(505) into SimpleType: FieldReader(506) at 0", "Insert SimpleName: fieldId(509) into SuperConstructorInvocation(512) at 0", "Insert SimpleName: fieldName(510) into SuperConstructorInvocation(512) at 1", "Insert SimpleName: reader(511) into SuperConstructorInvocation(512) at 2", "Insert MethodInvocation(525) into ExpressionStatement(526) at 0", "Insert SimpleType: JsonWriter(537) into VariableDeclarationStatement(544) at 0", "Insert VariableDeclarationFragment(543) into VariableDeclarationStatement(544) at 1", "Insert MethodInvocation(548) into ExpressionStatement(549) at 0", "Insert SimpleName: UnionJsonConverter(483) into SimpleType: UnionJsonConverter(484) at 0", "Insert SimpleName: gen(522) into MethodInvocation(525) at 0", "Insert SimpleName: writeFieldName(523) into MethodInvocation(525) at 1", "Insert SimpleName: fieldName(524) into MethodInvocation(525) at 2", "Insert SimpleName: JsonWriter(536) into SimpleType: JsonWriter(537) at 0", "Insert SimpleName: writer(538) into VariableDeclarationFragment(543) at 0", "Insert ClassInstanceCreation(542) into VariableDeclarationFragment(543) at 1", "Insert SimpleName: writer(545) into MethodInvocation(548) at 0", "Insert SimpleName: write(546) into MethodInvocation(548) at 1", "Insert SimpleName: reader(547) into MethodInvocation(548) at 2", "Insert SimpleType: JsonWriter(540) into ClassInstanceCreation(542) at 0", "Insert SimpleName: gen(541) into ClassInstanceCreation(542) at 1", "Insert SimpleName: JsonWriter(539) into SimpleType: JsonWriter(540) at 0"]}}, {"JsonReader_cluster": {"actions": [{"root": "INS SimpleType: IOException to MethodDeclaration at 4", "operations": ["INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS Block to TryStatement at 1", "INS TryStatement to Block at 1", "INS Block to TryStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV LabeledStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from start to startList", "operations": ["UPD SimpleName: start from start to startList", "UPD SimpleName: start from start to startList"]}, {"root": "UPDATE from end to endList", "operations": ["UPD SimpleName: end from end to endList", "UPD SimpleName: end from end to endList"]}]}}, {"JsonReader_diff": {"operations": ["Insert SimpleType: IOException(1465) into MethodDeclaration(1655) at 4", "Insert TryStatement(1112) into Block(1113) at 1", "Insert SimpleName: IOException(1464) into SimpleType: IOException(1465) at 0", "Insert Block(1106) into TryStatement(1112) at 0", "Insert Block(1111) into TryStatement(1112) at 1", "Move LabeledStatement(1105) into Block(1106) at 0", "Move ExpressionStatement(1109) into Block(1111) at 0", "Update SimpleName: start(1462) to startList", "Update SimpleName: end(1646) to endList", "Update SimpleName: start(1661) to startList", "Update SimpleName: end(1748) to endList"]}}, {"JsonWriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: gen to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: JsonOutput to SimpleType: JsonOutput at 0", "INS SimpleName: gen to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: JsonOutput to SingleVariableDeclaration at 0", "INS SimpleName: gen to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS FieldAccess to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: JsonWriter to MethodDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS ExpressionStatement to SwitchStatement at 45", "operations": ["INS SimpleName: writeStartArray to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: gen to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 45"]}, {"root": "INS WhileStatement to SwitchStatement at 46", "operations": ["INS Block to WhileStatement at 1", "INS SimpleName: reader to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to WhileStatement at 0", "INS WhileStatement to SwitchStatement at 46"]}, {"root": "INS ExpressionStatement to SwitchStatement at 47", "operations": ["INS SimpleName: gen to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 47", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writeEndArray to MethodInvocation at 1"]}, {"root": "INS SwitchCase to SwitchStatement at 56", "operations": ["INS SwitchCase to SwitchStatement at 56", "INS SimpleName: LATE to SwitchCase at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"JsonWriter_diff": {"operations": ["Insert MethodDeclaration(130) into TypeDeclaration: class(866) at 6", "Insert Modifier: public(117) into MethodDeclaration(130) at 0", "Insert SimpleName: JsonWriter(118) into MethodDeclaration(130) at 1", "Insert SingleVariableDeclaration(122) into MethodDeclaration(130) at 2", "Insert Block(129) into MethodDeclaration(130) at 3", "Insert SimpleType: JsonOutput(120) into SingleVariableDeclaration(122) at 0", "Insert SimpleName: gen(121) into SingleVariableDeclaration(122) at 1", "Insert ExpressionStatement(128) into Block(129) at 0", "Insert SimpleName: JsonOutput(119) into SimpleType: JsonOutput(120) at 0", "Insert Assignment: =(127) into ExpressionStatement(128) at 0", "Insert FieldAccess(125) into Assignment: =(127) at 0", "Insert SimpleName: gen(126) into Assignment: =(127) at 1", "Insert ExpressionStatement(306) into SwitchStatement(402) at 45", "Insert WhileStatement(317) into SwitchStatement(402) at 46", "Insert ExpressionStatement(321) into SwitchStatement(402) at 47", "Insert SwitchCase(372) into SwitchStatement(402) at 55", "Insert ThisExpression(123) into FieldAccess(125) at 0", "Insert SimpleName: gen(124) into FieldAccess(125) at 1", "Insert MethodInvocation(305) into ExpressionStatement(306) at 0", "Insert MethodInvocation(309) into WhileStatement(317) at 0", "Insert Block(316) into WhileStatement(317) at 1", "Insert MethodInvocation(320) into ExpressionStatement(321) at 0", "Insert SimpleName: LATE(371) into SwitchCase(372) at 0", "Insert SimpleName: gen(303) into MethodInvocation(305) at 0", "Insert SimpleName: writeStartArray(304) into MethodInvocation(305) at 1", "Insert SimpleName: reader(307) into MethodInvocation(309) at 0", "Insert SimpleName: next(308) into MethodInvocation(309) at 1", "Move ExpressionStatement(294) into Block(316) at 0", "Insert SimpleName: gen(318) into MethodInvocation(320) at 0", "Insert SimpleName: writeEndArray(319) into MethodInvocation(320) at 1"]}}, {"AbstractBaseReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.drill.exec.expr.holders.UnionHolder to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS QualifiedName: holder.reader to Assignment: = at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ThisExpression to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ConditionalExpression at 0", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS ExpressionStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: holder to SingleVariableDeclaration at 1", "INS SimpleType: UnionHolder to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: isSet to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: read to MethodDeclaration at 3", "INS NumberLiteral: 0 to ConditionalExpression at 2", "INS SimpleName: UnionHolder to SimpleType: UnionHolder at 0", "INS QualifiedName: holder.isSet to Assignment: = at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: holder to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: read to MethodDeclaration at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: UnionHolder to SingleVariableDeclaration at 0", "INS SimpleName: UnionHolder to SimpleType: UnionHolder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"The current reader doesn't support reading union type\" to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 6", "INS MethodDeclaration to TypeDeclaration: class at 15"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: UnionWriter to SimpleType: UnionWriter at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Block to MethodDeclaration at 5", "INS ThrowStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS StringLiteral: \"The current reader doesn't support reading union type\" to ClassInstanceCreation at 1", "INS SimpleName: copyAsValue to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: writer to SingleVariableDeclaration at 1", "INS SimpleType: UnionWriter to SingleVariableDeclaration at 0"]}]}}, {"AbstractBaseReader_diff": {"operations": ["Insert ImportDeclaration(24) into CompilationUnit(212) at 4", "Insert QualifiedName: org.apache.drill.exec.expr.holders.UnionHolder(23) into ImportDeclaration(24) at 0", "Insert MethodDeclaration(175) into TypeDeclaration: class(211) at 14", "Insert MethodDeclaration(194) into TypeDeclaration: class(211) at 15", "Insert MethodDeclaration(210) into TypeDeclaration: class(211) at 16", "Insert MarkerAnnotation(153) into MethodDeclaration(175) at 0", "Insert Modifier: public(154) into MethodDeclaration(175) at 1", "Insert PrimitiveType: void(155) into MethodDeclaration(175) at 2", "Insert SimpleName: read(156) into MethodDeclaration(175) at 3", "Insert SingleVariableDeclaration(160) into MethodDeclaration(175) at 4", "Insert Block(174) into MethodDeclaration(175) at 5", "Insert MarkerAnnotation(177) into MethodDeclaration(194) at 0", "Insert Modifier: public(178) into MethodDeclaration(194) at 1", "Insert PrimitiveType: void(179) into MethodDeclaration(194) at 2", "Insert SimpleName: read(180) into MethodDeclaration(194) at 3", "Insert SingleVariableDeclaration(183) into MethodDeclaration(194) at 4", "Insert SingleVariableDeclaration(187) into MethodDeclaration(194) at 5", "Insert Block(193) into MethodDeclaration(194) at 6", "Insert MarkerAnnotation(196) into MethodDeclaration(210) at 0", "Insert Modifier: public(197) into MethodDeclaration(210) at 1", "Insert PrimitiveType: void(198) into MethodDeclaration(210) at 2", "Insert SimpleName: copyAsValue(199) into MethodDeclaration(210) at 3", "Insert SingleVariableDeclaration(203) into MethodDeclaration(210) at 4", "Insert Block(209) into MethodDeclaration(210) at 5", "Insert SimpleName: Override(152) into MarkerAnnotation(153) at 0", "Insert SimpleType: UnionHolder(158) into SingleVariableDeclaration(160) at 0", "Insert SimpleName: holder(159) into SingleVariableDeclaration(160) at 1", "Insert ExpressionStatement(164) into Block(174) at 0", "Insert ExpressionStatement(173) into Block(174) at 1", "Insert SimpleName: Override(176) into MarkerAnnotation(177) at 0", "Insert PrimitiveType: int(181) into SingleVariableDeclaration(183) at 0", "Insert SimpleName: index(182) into SingleVariableDeclaration(183) at 1", "Insert SimpleType: UnionHolder(185) into SingleVariableDeclaration(187) at 0", "Insert SimpleName: holder(186) into SingleVariableDeclaration(187) at 1", "Insert ThrowStatement(192) into Block(193) at 0", "Insert SimpleName: Override(195) into MarkerAnnotation(196) at 0", "Insert SimpleType: UnionWriter(201) into SingleVariableDeclaration(203) at 0", "Insert SimpleName: writer(202) into SingleVariableDeclaration(203) at 1", "Insert ThrowStatement(208) into Block(209) at 0", "Insert SimpleName: UnionHolder(157) into SimpleType: UnionHolder(158) at 0", "Insert Assignment: =(163) into ExpressionStatement(164) at 0", "Insert Assignment: =(172) into ExpressionStatement(173) at 0", "Insert SimpleName: UnionHolder(184) into SimpleType: UnionHolder(185) at 0", "Insert ClassInstanceCreation(191) into ThrowStatement(192) at 0", "Insert SimpleName: UnionWriter(200) into SimpleType: UnionWriter(201) at 0", "Insert ClassInstanceCreation(207) into ThrowStatement(208) at 0", "Insert QualifiedName: holder.reader(161) into Assignment: =(163) at 0", "Insert ThisExpression(162) into Assignment: =(163) at 1", "Insert QualifiedName: holder.isSet(165) into Assignment: =(172) at 0", "Insert ConditionalExpression(171) into Assignment: =(172) at 1", "Insert SimpleType: IllegalStateException(189) into ClassInstanceCreation(191) at 0", "Insert StringLiteral: \"The current reader doesn't support reading union type\"(190) into ClassInstanceCreation(191) at 1", "Insert SimpleType: IllegalStateException(205) into ClassInstanceCreation(207) at 0", "Insert StringLiteral: \"The current reader doesn't support reading union type\"(206) into ClassInstanceCreation(207) at 1", "Insert MethodInvocation(168) into ConditionalExpression(171) at 0", "Insert NumberLiteral: 1(169) into ConditionalExpression(171) at 1", "Insert NumberLiteral: 0(170) into ConditionalExpression(171) at 2", "Insert SimpleName: IllegalStateException(188) into SimpleType: IllegalStateException(189) at 0", "Insert SimpleName: IllegalStateException(204) into SimpleType: IllegalStateException(205) at 0", "Insert ThisExpression(166) into MethodInvocation(168) at 0", "Insert SimpleName: isSet(167) into MethodInvocation(168) at 1"]}}, {"ComplexWriterImpl_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: unionEnabled to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: name to ConstructorInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS ConstructorInvocation to Block at 0", "INS SimpleName: container to ConstructorInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: MapVector to SingleVariableDeclaration at 0", "INS SimpleName: MapVector to SimpleType: MapVector at 0", "INS SimpleName: container to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ComplexWriterImpl to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: unionEnabled to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: unionEnabled to FieldAccess at 1", "INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: unionEnabled to Assignment: = at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SingleMapWriter to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: unionEnabled to ClassInstanceCreation at 4", "operations": ["INS SimpleName: unionEnabled to ClassInstanceCreation at 4"]}, {"root": "INS BooleanLiteral: false to ClassInstanceCreation at 5", "operations": ["INS BooleanLiteral: false to ClassInstanceCreation at 5"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SingleMapWriter to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: unionEnabled to ClassInstanceCreation at 3", "operations": ["INS SimpleName: unionEnabled to ClassInstanceCreation at 3"]}, {"root": "INS BooleanLiteral: false to ClassInstanceCreation at 4", "operations": ["INS BooleanLiteral: false to ClassInstanceCreation at 4"]}]}}, {"ComplexWriterImpl_diff": {"operations": ["Insert FieldDeclaration(80) into TypeDeclaration: class(595) at 9", "Insert MethodDeclaration(140) into TypeDeclaration: class(595) at 12", "Insert Modifier: private(75) into FieldDeclaration(80) at 0", "Insert Modifier: final(76) into FieldDeclaration(80) at 1", "Insert PrimitiveType: boolean(77) into FieldDeclaration(80) at 2", "Insert VariableDeclarationFragment(79) into FieldDeclaration(80) at 3", "Insert SingleVariableDeclaration(102) into MethodDeclaration(124) at 4", "Insert Modifier: public(125) into MethodDeclaration(140) at 0", "Insert SimpleName: ComplexWriterImpl(126) into MethodDeclaration(140) at 1", "Insert SingleVariableDeclaration(130) into MethodDeclaration(140) at 2", "Insert SingleVariableDeclaration(134) into MethodDeclaration(140) at 3", "Insert Block(139) into MethodDeclaration(140) at 4", "Insert SimpleName: unionEnabled(78) into VariableDeclarationFragment(79) at 0", "Insert PrimitiveType: boolean(100) into SingleVariableDeclaration(102) at 0", "Insert SimpleName: unionEnabled(101) into SingleVariableDeclaration(102) at 1", "Insert ExpressionStatement(122) into Block(123) at 3", "Insert SimpleType: String(128) into SingleVariableDeclaration(130) at 0", "Insert SimpleName: name(129) into SingleVariableDeclaration(130) at 1", "Insert SimpleType: MapVector(132) into SingleVariableDeclaration(134) at 0", "Insert SimpleName: container(133) into SingleVariableDeclaration(134) at 1", "Insert ConstructorInvocation(138) into Block(139) at 0", "Insert Assignment: =(121) into ExpressionStatement(122) at 0", "Insert SimpleName: String(127) into SimpleType: String(128) at 0", "Insert SimpleName: MapVector(131) into SimpleType: MapVector(132) at 0", "Insert SimpleName: name(135) into ConstructorInvocation(138) at 0", "Insert SimpleName: container(136) into ConstructorInvocation(138) at 1", "Insert BooleanLiteral: false(137) into ConstructorInvocation(138) at 2", "Insert FieldAccess(119) into Assignment: =(121) at 0", "Insert SimpleName: unionEnabled(120) into Assignment: =(121) at 1", "Insert ThisExpression(117) into FieldAccess(119) at 0", "Insert SimpleName: unionEnabled(118) into FieldAccess(119) at 1", "Move SimpleType: SingleMapWriter(350) into ClassInstanceCreation(328) at 0", "Insert SimpleName: unionEnabled(326) into ClassInstanceCreation(328) at 3", "Insert BooleanLiteral: false(327) into ClassInstanceCreation(328) at 4", "Move SimpleType: SingleMapWriter(292) into ClassInstanceCreation(388) at 0", "Insert SimpleName: unionEnabled(386) into ClassInstanceCreation(388) at 3", "Insert BooleanLiteral: false(387) into ClassInstanceCreation(388) at 4"]}}, {"VectorContainerWriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: OutputMutator to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: mutator to SingleVariableDeclaration at 1", "INS SimpleName: OutputMutator to SimpleType: OutputMutator at 0", "INS SimpleName: VectorContainerWriter to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 1", "INS SimpleName: mutator to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: unionEnabled to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: unionEnabled to ClassInstanceCreation at 3", "operations": ["INS SimpleName: unionEnabled to ClassInstanceCreation at 3"]}, {"root": "INS BooleanLiteral: false to ClassInstanceCreation at 4", "operations": ["INS BooleanLiteral: false to ClassInstanceCreation at 4"]}]}}, {"VectorContainerWriter_diff": {"operations": ["Insert MethodDeclaration(108) into TypeDeclaration: class(341) at 8", "Insert SingleVariableDeclaration(68) into MethodDeclaration(97) at 3", "Insert Modifier: public(98) into MethodDeclaration(108) at 0", "Insert SimpleName: VectorContainerWriter(99) into MethodDeclaration(108) at 1", "Insert SingleVariableDeclaration(103) into MethodDeclaration(108) at 2", "Insert Block(107) into MethodDeclaration(108) at 3", "Insert PrimitiveType: boolean(66) into SingleVariableDeclaration(68) at 0", "Insert SimpleName: unionEnabled(67) into SingleVariableDeclaration(68) at 1", "Insert SimpleType: OutputMutator(101) into SingleVariableDeclaration(103) at 0", "Insert SimpleName: mutator(102) into SingleVariableDeclaration(103) at 1", "Insert ConstructorInvocation(106) into Block(107) at 0", "Insert SimpleName: OutputMutator(100) into SimpleType: OutputMutator(101) at 0", "Insert SimpleName: mutator(104) into ConstructorInvocation(106) at 0", "Insert BooleanLiteral: false(105) into ConstructorInvocation(106) at 1", "Insert SimpleName: unionEnabled(91) into ClassInstanceCreation(93) at 3", "Insert BooleanLiteral: false(92) into ClassInstanceCreation(93) at 4"]}}], "commit_stats": [{"total_files": 55, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}