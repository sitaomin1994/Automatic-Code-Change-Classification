{"application": "google-closure-compiler", "csha": "e1a2d4be4f1867895e291c87c030335f20c1b915", "files": [{"DisambiguateProperties_cluster": {"actions": [{"root": "UPDATE from getTypeRegistry to getTypeIRegistry", "operations": ["UPD SimpleName: getTypeRegistry from getTypeRegistry to getTypeIRegistry"]}]}}, {"DisambiguateProperties_diff": {"operations": ["Update SimpleName: getTypeRegistry(916) to getTypeIRegistry"]}}, {"EnumType_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 3", "INS SimpleName: qname to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS SimpleName: declaredType to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS MethodDeclaration to TypeDeclaration: class at 33", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS ParameterizedType: Collection<JSType> to MethodDeclaration at 2", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5"]}]}}, {"EnumType_diff": {"operations": ["Insert MethodDeclaration(797) into TypeDeclaration: class(798) at 33", "Insert MarkerAnnotation(779) into MethodDeclaration(797) at 0", "Insert Modifier: public(780) into MethodDeclaration(797) at 1", "Insert ParameterizedType: Collection<JSType>(785) into MethodDeclaration(797) at 2", "Insert SimpleName: getSubtypesWithProperty(786) into MethodDeclaration(797) at 3", "Insert SingleVariableDeclaration(790) into MethodDeclaration(797) at 4", "Insert Block(796) into MethodDeclaration(797) at 5", "Insert SimpleName: Override(778) into MarkerAnnotation(779) at 0", "Insert SimpleType: Collection(782) into ParameterizedType: Collection<JSType>(785) at 0", "Insert SimpleType: JSType(784) into ParameterizedType: Collection<JSType>(785) at 1", "Insert SimpleType: QualifiedName(788) into SingleVariableDeclaration(790) at 0", "Insert SimpleName: qname(789) into SingleVariableDeclaration(790) at 1", "Insert ReturnStatement(795) into Block(796) at 0", "Insert SimpleName: Collection(781) into SimpleType: Collection(782) at 0", "Insert SimpleName: JSType(783) into SimpleType: JSType(784) at 0", "Insert SimpleName: QualifiedName(787) into SimpleType: QualifiedName(788) at 0", "Insert MethodInvocation(794) into ReturnStatement(795) at 0", "Insert SimpleName: declaredType(791) into MethodInvocation(794) at 0", "Insert SimpleName: getSubtypesWithProperty(792) into MethodInvocation(794) at 1", "Insert SimpleName: qname(793) into MethodInvocation(794) at 2"]}}, {"JSType_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 201", "operations": ["INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: typesWithProp to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS ParameterizedType: Collection<JSType> to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: TypeWithPropertiesStatics to MethodInvocation at 0", "INS SimpleName: getEnums to MethodInvocation at 0", "INS SimpleName: typesWithProp to MethodInvocation at 0", "INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 1", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 201", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS SimpleName: TypeWithPropertiesStatics to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: Collection<JSType> to MethodDeclaration at 0", "INS SimpleName: qname to MethodInvocation at 3", "INS SimpleName: typesWithProp to ReturnStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS SimpleName: qname to MethodInvocation at 3", "INS SimpleName: getObjs to MethodInvocation at 0", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: Collection to SimpleType: Collection at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getObjTypeIfSingletonObj to MethodInvocation at 0", "INS SimpleType: ObjectType to VariableDeclarationStatement at 0", "INS SimpleName: obj to VariableDeclarationFragment at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: obj to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS SimpleName: obj to MethodInvocation at 0", "INS SimpleName: isEnumObject to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: NominalType to VariableDeclarationStatement at 0", "INS SimpleName: getNominalTypeIfSingletonObj to MethodInvocation at 0", "INS SimpleName: nt to VariableDeclarationFragment at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS SimpleName: nt to InfixExpression: != at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: nt to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: isGeneric to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: funType to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getFunTypeIfSingletonObj to MethodInvocation at 0", "INS SimpleType: FunctionType to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 0", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: isInterfaceDefinition to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: funType to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ImmutableSet to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: of to MethodInvocation at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: funType to MethodInvocation at 0", "INS SimpleName: isUniqueConstructor to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: NominalType to SimpleType: NominalType at 0", "INS SimpleName: nt to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: NominalType to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getNominalTypeIfSingletonObj to MethodInvocation at 1", "INS SimpleName: funType to MethodInvocation at 0", "INS SimpleName: getInstanceTypeOfCtor to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: ObjectTypeI to ParameterizedType: ImmutableSet.Builder<ObjectTypeI> at 1", "INS ParameterizedType: ImmutableSet.Builder<> to ClassInstanceCreation at 0", "INS QualifiedName: ImmutableSet.Builder to SimpleType: ImmutableSet.Builder at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ImmutableSet.Builder to ParameterizedType: ImmutableSet.Builder<ObjectTypeI> at 0", "INS ParameterizedType: ImmutableSet.Builder<ObjectTypeI> to VariableDeclarationStatement at 0", "INS SimpleName: ObjectTypeI to SimpleType: ObjectTypeI at 0", "INS SimpleType: ImmutableSet.Builder to ParameterizedType: ImmutableSet.Builder<> at 0", "INS QualifiedName: ImmutableSet.Builder to SimpleType: ImmutableSet.Builder at 0"]}, {"root": "INS EnhancedForStatement to Block at 4", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: i to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getConstructorFunction to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: NominalType to SingleVariableDeclaration at 0", "INS SimpleName: nt to MethodInvocation at 0", "INS SimpleName: NominalType to SimpleType: NominalType at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS SimpleName: commonTypes to FieldAccess at 1", "INS EnhancedForStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getInstantiatedInterfaces to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: fromFunctionType to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS ReturnStatement to Block at 5", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: getNominalTypeIfSingletonObj to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: NominalType to VariableDeclarationStatement at 0", "INS SimpleName: nt to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: nt to InfixExpression: != at 0", "INS SimpleName: isStructuralInterface to MethodInvocation at 1", "INS SimpleName: nt to MethodInvocation at 0", "INS InfixExpression: && to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: ObjectType to SimpleType: ObjectType at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ObjectType to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getObjTypeIfSingletonObj to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: obj to VariableDeclarationFragment at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS SimpleName: obj to InfixExpression: != at 0", "INS SimpleName: obj to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: hasOwnPropery to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: propertyName to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: && to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: NominalType to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getNominalTypeIfSingletonObj to MethodInvocation at 0", "INS SimpleName: nt to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ConditionalExpression to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: nt to MethodInvocation at 0", "INS SimpleName: isGeneric to MethodInvocation at 1", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS SimpleName: nt to MethodInvocation at 0", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: getRawNominalTypeAfterTypeChecking to MethodInvocation at 1"]}, {"root": "UPDATE from propName to pname", "operations": ["UPD SimpleName: propName from propName to pname"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: BOTTOM to FieldAccess at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: commonTypes to FieldAccess at 1", "INS SimpleType: JSType to VariableDeclarationStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS FieldAccess to FieldAccess at 0", "INS FieldAccess to VariableDeclarationFragment at 1"]}, {"root": "INS EnhancedForStatement to Block at 1", "operations": ["INS SimpleName: result to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 1", "INS SimpleName: pname to ClassInstanceCreation at 1", "INS SimpleType: JSType to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 1", "INS SimpleName: join to MethodInvocation at 0", "INS SimpleName: t to MethodInvocation at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: result to Assignment: = at 0"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 2", "INS SimpleName: result to ReturnStatement at 0"]}, {"root": "UPDATE from UnsupportedOperationException to ObjectType", "operations": ["UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to ObjectType"]}, {"root": "MOVE from SimpleType: ObjectType", "operations": ["MOV SimpleName: UnsupportedOperationException to SimpleType: ObjectType at 0"]}, {"root": "INS StringLiteral: \"Expected newtypes.JSType but found %s\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"Expected newtypes.JSType but found %s\" to MethodInvocation at 3"]}, {"root": "INS SimpleName: o to MethodInvocation at 4", "operations": ["INS SimpleName: o to MethodInvocation at 4"]}, {"root": "UPDATE from UnsupportedOperationException to NominalType", "operations": ["UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to NominalType", "UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to NominalType", "UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to NominalType"]}, {"root": "MOVE from SimpleType: NominalType", "operations": ["MOV SimpleName: UnsupportedOperationException to SimpleType: NominalType at 0"]}, {"root": "UPDATE from UnsupportedOperationException to FunctionType", "operations": ["UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to FunctionType"]}, {"root": "MOVE from SimpleType: FunctionType", "operations": ["MOV SimpleName: UnsupportedOperationException to SimpleType: FunctionType at 0"]}, {"root": "MOVE from SimpleType: NominalType", "operations": ["MOV SimpleName: UnsupportedOperationException to SimpleType: NominalType at 0"]}, {"root": "MOVE from SimpleType: NominalType", "operations": ["MOV SimpleName: UnsupportedOperationException to SimpleType: NominalType at 0"]}, {"root": "UPDATE from UnsupportedOperationException to QualifiedName", "operations": ["UPD SimpleType: UnsupportedOperationException from UnsupportedOperationException to QualifiedName", "UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to QualifiedName", "UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to QualifiedName", "UPD SimpleType: UnsupportedOperationException from UnsupportedOperationException to QualifiedName"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: UnsupportedOperationException"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: UnsupportedOperationException", "DEL ThrowStatement"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleType: UnsupportedOperationException", "DEL ThrowStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleType: UnsupportedOperationException", "DEL ThrowStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: UnsupportedOperationException"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL ClassInstanceCreation"]}]}}, {"JSType_diff": {"operations": ["Insert MethodDeclaration(8100) into TypeDeclaration: class(8199) at 201", "Move MarkerAnnotation(7900) into MethodDeclaration(7983) at 0", "Move MarkerAnnotation(7874) into MethodDeclaration(8039) at 0", "Insert ParameterizedType: Collection<JSType>(8067) into MethodDeclaration(8100) at 0", "Insert SimpleName: getSubtypesWithProperty(8068) into MethodDeclaration(8100) at 1", "Insert SingleVariableDeclaration(8072) into MethodDeclaration(8100) at 2", "Insert Block(8099) into MethodDeclaration(8100) at 3", "Insert VariableDeclarationStatement(1794) into Block(1803) at 0", "Insert ReturnStatement(1802) into Block(1803) at 1", "Insert VariableDeclarationStatement(7871) into Block(7880) at 0", "Insert ReturnStatement(7879) into Block(7880) at 1", "Insert VariableDeclarationStatement(7897) into Block(7960) at 0", "Insert IfStatement(7912) into Block(7960) at 1", "Insert VariableDeclarationStatement(7922) into Block(7960) at 2", "Insert VariableDeclarationStatement(7934) into Block(7960) at 3", "Insert EnhancedForStatement(7955) into Block(7960) at 4", "Insert ReturnStatement(7959) into Block(7960) at 5", "Insert VariableDeclarationStatement(7973) into Block(7982) at 0", "Insert ReturnStatement(7981) into Block(7982) at 1", "Insert VariableDeclarationStatement(7999) into Block(8012) at 0", "Insert ReturnStatement(8011) into Block(8012) at 1", "Insert VariableDeclarationStatement(8026) into Block(8038) at 0", "Insert ReturnStatement(8037) into Block(8038) at 1", "Insert SimpleType: Collection(8064) into ParameterizedType: Collection<JSType>(8067) at 0", "Insert SimpleType: JSType(8066) into ParameterizedType: Collection<JSType>(8067) at 1", "Insert SimpleType: QualifiedName(8070) into SingleVariableDeclaration(8072) at 0", "Insert SimpleName: qname(8071) into SingleVariableDeclaration(8072) at 1", "Insert VariableDeclarationStatement(8086) into Block(8099) at 0", "Insert ExpressionStatement(8096) into Block(8099) at 1", "Insert ReturnStatement(8098) into Block(8099) at 2", "Update SimpleName: propName(7942) to pname", "Insert VariableDeclarationStatement(8120) into Block(8142) at 0", "Insert EnhancedForStatement(8139) into Block(8142) at 1", "Insert ReturnStatement(8141) into Block(8142) at 2", "Insert SimpleType: ObjectType(1789) into VariableDeclarationStatement(1794) at 0", "Insert VariableDeclarationFragment(1793) into VariableDeclarationStatement(1794) at 1", "Insert InfixExpression: &&(1801) into ReturnStatement(1802) at 0", "Insert SimpleType: NominalType(7866) into VariableDeclarationStatement(7871) at 0", "Insert VariableDeclarationFragment(7870) into VariableDeclarationStatement(7871) at 1", "Insert InfixExpression: &&(7878) into ReturnStatement(7879) at 0", "Insert SimpleType: FunctionType(7892) into VariableDeclarationStatement(7897) at 0", "Insert VariableDeclarationFragment(7896) into VariableDeclarationStatement(7897) at 1", "Insert InfixExpression: &&(7906) into IfStatement(7912) at 0", "Insert Block(7911) into IfStatement(7912) at 1", "Insert SimpleType: NominalType(7914) into VariableDeclarationStatement(7922) at 0", "Insert VariableDeclarationFragment(7921) into VariableDeclarationStatement(7922) at 1", "Insert ParameterizedType: ImmutableSet.Builder<ObjectTypeI>(7927) into VariableDeclarationStatement(7934) at 0", "Insert VariableDeclarationFragment(7933) into VariableDeclarationStatement(7934) at 1", "Insert SingleVariableDeclaration(7938) into EnhancedForStatement(7955) at 0", "Insert MethodInvocation(7941) into EnhancedForStatement(7955) at 1", "Insert Block(7954) into EnhancedForStatement(7955) at 2", "Insert MethodInvocation(7958) into ReturnStatement(7959) at 0", "Insert SimpleType: NominalType(7968) into VariableDeclarationStatement(7973) at 0", "Insert VariableDeclarationFragment(7972) into VariableDeclarationStatement(7973) at 1", "Insert InfixExpression: &&(7980) into ReturnStatement(7981) at 0", "Insert SimpleType: ObjectType(7994) into VariableDeclarationStatement(7999) at 0", "Insert VariableDeclarationFragment(7998) into VariableDeclarationStatement(7999) at 1", "Insert InfixExpression: &&(8010) into ReturnStatement(8011) at 0", "Insert SimpleType: NominalType(8021) into VariableDeclarationStatement(8026) at 0", "Insert VariableDeclarationFragment(8025) into VariableDeclarationStatement(8026) at 1", "Insert ConditionalExpression(8036) into ReturnStatement(8037) at 0", "Insert SimpleName: Collection(8063) into SimpleType: Collection(8064) at 0", "Insert SimpleName: JSType(8065) into SimpleType: JSType(8066) at 0", "Insert SimpleName: QualifiedName(8069) into SimpleType: QualifiedName(8070) at 0", "Insert ParameterizedType: Collection<JSType>(8077) into VariableDeclarationStatement(8086) at 0", "Insert VariableDeclarationFragment(8085) into VariableDeclarationStatement(8086) at 1", "Insert MethodInvocation(8095) into ExpressionStatement(8096) at 0", "Insert SimpleName: typesWithProp(8097) into ReturnStatement(8098) at 0", "Insert SimpleType: JSType(8112) into VariableDeclarationStatement(8120) at 0", "Insert VariableDeclarationFragment(8119) into VariableDeclarationStatement(8120) at 1", "Insert SingleVariableDeclaration(8124) into EnhancedForStatement(8139) at 0", "Insert MethodInvocation(8130) into EnhancedForStatement(8139) at 1", "Insert Block(8138) into EnhancedForStatement(8139) at 2", "Insert SimpleName: result(8140) into ReturnStatement(8141) at 0", "Update SimpleName: UnsupportedOperationException(1788) to ObjectType", "Move SimpleName: UnsupportedOperationException(1788) into SimpleType: ObjectType(1789) at 0", "Insert SimpleName: obj(1790) into VariableDeclarationFragment(1793) at 0", "Insert MethodInvocation(1792) into VariableDeclarationFragment(1793) at 1", "Insert InfixExpression: !=(1797) into InfixExpression: &&(1801) at 0", "Insert MethodInvocation(1800) into InfixExpression: &&(1801) at 1", "Insert StringLiteral: \"Expected newtypes.JSType but found %s\"(6875) into MethodInvocation(6877) at 3", "Insert SimpleName: o(6876) into MethodInvocation(6877) at 4", "Update SimpleName: UnsupportedOperationException(7852) to NominalType", "Move SimpleName: UnsupportedOperationException(7852) into SimpleType: NominalType(7866) at 0", "Insert SimpleName: nt(7867) into VariableDeclarationFragment(7870) at 0", "Insert MethodInvocation(7869) into VariableDeclarationFragment(7870) at 1", "Insert InfixExpression: !=(7874) into InfixExpression: &&(7878) at 0", "Insert MethodInvocation(7877) into InfixExpression: &&(7878) at 1", "Update SimpleName: UnsupportedOperationException(7867) to FunctionType", "Move SimpleName: UnsupportedOperationException(7867) into SimpleType: FunctionType(7892) at 0", "Insert SimpleName: funType(7893) into VariableDeclarationFragment(7896) at 0", "Insert MethodInvocation(7895) into VariableDeclarationFragment(7896) at 1", "Insert PrefixExpression: !(7901) into InfixExpression: &&(7906) at 0", "Insert PrefixExpression: !(7905) into InfixExpression: &&(7906) at 1", "Insert ReturnStatement(7910) into Block(7911) at 0", "Insert SimpleName: NominalType(7913) into SimpleType: NominalType(7914) at 0", "Insert SimpleName: nt(7915) into VariableDeclarationFragment(7921) at 0", "Insert MethodInvocation(7920) into VariableDeclarationFragment(7921) at 1", "Insert SimpleType: ImmutableSet.Builder(7924) into ParameterizedType: ImmutableSet.Builder<ObjectTypeI>(7927) at 0", "Insert SimpleType: ObjectTypeI(7926) into ParameterizedType: ImmutableSet.Builder<ObjectTypeI>(7927) at 1", "Insert SimpleName: builder(7928) into VariableDeclarationFragment(7933) at 0", "Insert ClassInstanceCreation(7932) into VariableDeclarationFragment(7933) at 1", "Insert SimpleType: NominalType(7936) into SingleVariableDeclaration(7938) at 0", "Insert SimpleName: i(7937) into SingleVariableDeclaration(7938) at 1", "Insert SimpleName: nt(7939) into MethodInvocation(7941) at 0", "Insert SimpleName: getInstantiatedInterfaces(7940) into MethodInvocation(7941) at 1", "Insert ExpressionStatement(7953) into Block(7954) at 0", "Insert SimpleName: builder(7956) into MethodInvocation(7958) at 0", "Insert SimpleName: build(7957) into MethodInvocation(7958) at 1", "Update SimpleName: UnsupportedOperationException(7878) to NominalType", "Move SimpleName: UnsupportedOperationException(7878) into SimpleType: NominalType(7968) at 0", "Insert SimpleName: nt(7969) into VariableDeclarationFragment(7972) at 0", "Insert MethodInvocation(7971) into VariableDeclarationFragment(7972) at 1", "Insert InfixExpression: !=(7976) into InfixExpression: &&(7980) at 0", "Insert MethodInvocation(7979) into InfixExpression: &&(7980) at 1", "Insert SimpleName: ObjectType(7993) into SimpleType: ObjectType(7994) at 0", "Insert SimpleName: obj(7995) into VariableDeclarationFragment(7998) at 0", "Insert MethodInvocation(7997) into VariableDeclarationFragment(7998) at 1", "Insert InfixExpression: !=(8002) into InfixExpression: &&(8010) at 0", "Insert MethodInvocation(8009) into InfixExpression: &&(8010) at 1", "Update SimpleName: UnsupportedOperationException(7905) to NominalType", "Move SimpleName: UnsupportedOperationException(7905) into SimpleType: NominalType(8021) at 0", "Insert SimpleName: nt(8022) into VariableDeclarationFragment(8025) at 0", "Insert MethodInvocation(8024) into VariableDeclarationFragment(8025) at 1", "Insert MethodInvocation(8029) into ConditionalExpression(8036) at 0", "Insert MethodInvocation(8034) into ConditionalExpression(8036) at 1", "Insert NullLiteral(8035) into ConditionalExpression(8036) at 2", "Insert SimpleType: Collection(8074) into ParameterizedType: Collection<JSType>(8077) at 0", "Insert SimpleType: JSType(8076) into ParameterizedType: Collection<JSType>(8077) at 1", "Insert SimpleName: typesWithProp(8078) into VariableDeclarationFragment(8085) at 0", "Insert MethodInvocation(8084) into VariableDeclarationFragment(8085) at 1", "Insert SimpleName: typesWithProp(8087) into MethodInvocation(8095) at 0", "Insert SimpleName: addAll(8088) into MethodInvocation(8095) at 1", "Insert MethodInvocation(8094) into MethodInvocation(8095) at 2", "Insert SimpleName: JSType(8111) into SimpleType: JSType(8112) at 0", "Insert SimpleName: result(8113) into VariableDeclarationFragment(8119) at 0", "Insert FieldAccess(8118) into VariableDeclarationFragment(8119) at 1", "Insert SimpleType: JSType(8122) into SingleVariableDeclaration(8124) at 0", "Insert SimpleName: t(8123) into SingleVariableDeclaration(8124) at 1", "Insert SimpleName: getSubtypesWithProperty(8125) into MethodInvocation(8130) at 0", "Insert ClassInstanceCreation(8129) into MethodInvocation(8130) at 1", "Insert ExpressionStatement(8137) into Block(8138) at 0", "Insert SimpleName: getObjTypeIfSingletonObj(1791) into MethodInvocation(1792) at 0", "Insert SimpleName: obj(1795) into InfixExpression: !=(1797) at 0", "Insert NullLiteral(1796) into InfixExpression: !=(1797) at 1", "Insert SimpleName: obj(1798) into MethodInvocation(1800) at 0", "Insert SimpleName: isEnumObject(1799) into MethodInvocation(1800) at 1", "Insert SimpleName: getNominalTypeIfSingletonObj(7868) into MethodInvocation(7869) at 0", "Insert SimpleName: nt(7872) into InfixExpression: !=(7874) at 0", "Insert NullLiteral(7873) into InfixExpression: !=(7874) at 1", "Insert SimpleName: nt(7875) into MethodInvocation(7877) at 0", "Insert SimpleName: isGeneric(7876) into MethodInvocation(7877) at 1", "Insert SimpleName: getFunTypeIfSingletonObj(7894) into MethodInvocation(7895) at 0", "Insert MethodInvocation(7900) into PrefixExpression: !(7901) at 0", "Insert MethodInvocation(7904) into PrefixExpression: !(7905) at 0", "Insert MethodInvocation(7909) into ReturnStatement(7910) at 0", "Insert MethodInvocation(7918) into MethodInvocation(7920) at 0", "Insert SimpleName: getNominalTypeIfSingletonObj(7919) into MethodInvocation(7920) at 1", "Insert QualifiedName: ImmutableSet.Builder(7923) into SimpleType: ImmutableSet.Builder(7924) at 0", "Insert SimpleName: ObjectTypeI(7925) into SimpleType: ObjectTypeI(7926) at 0", "Insert ParameterizedType: ImmutableSet.Builder<>(7931) into ClassInstanceCreation(7932) at 0", "Insert SimpleName: NominalType(7935) into SimpleType: NominalType(7936) at 0", "Insert MethodInvocation(7952) into ExpressionStatement(7953) at 0", "Insert SimpleName: getNominalTypeIfSingletonObj(7970) into MethodInvocation(7971) at 0", "Insert SimpleName: nt(7974) into InfixExpression: !=(7976) at 0", "Insert NullLiteral(7975) into InfixExpression: !=(7976) at 1", "Insert SimpleName: nt(7977) into MethodInvocation(7979) at 0", "Insert SimpleName: isStructuralInterface(7978) into MethodInvocation(7979) at 1", "Insert SimpleName: getObjTypeIfSingletonObj(7996) into MethodInvocation(7997) at 0", "Insert SimpleName: obj(8000) into InfixExpression: !=(8002) at 0", "Insert NullLiteral(8001) into InfixExpression: !=(8002) at 1", "Insert SimpleName: obj(8003) into MethodInvocation(8009) at 0", "Insert SimpleName: hasOwnPropery(8004) into MethodInvocation(8009) at 1", "Insert ClassInstanceCreation(8008) into MethodInvocation(8009) at 2", "Insert SimpleName: getNominalTypeIfSingletonObj(8023) into MethodInvocation(8024) at 0", "Insert SimpleName: nt(8027) into MethodInvocation(8029) at 0", "Insert SimpleName: isGeneric(8028) into MethodInvocation(8029) at 1", "Insert MethodInvocation(8032) into MethodInvocation(8034) at 0", "Insert SimpleName: getInstanceAsJSType(8033) into MethodInvocation(8034) at 1", "Insert SimpleName: Collection(8073) into SimpleType: Collection(8074) at 0", "Insert SimpleName: JSType(8075) into SimpleType: JSType(8076) at 0", "Insert SimpleName: TypeWithPropertiesStatics(8079) into MethodInvocation(8084) at 0", "Insert SimpleName: getSubtypesWithProperty(8080) into MethodInvocation(8084) at 1", "Insert MethodInvocation(8082) into MethodInvocation(8084) at 2", "Insert SimpleName: qname(8083) into MethodInvocation(8084) at 3", "Insert SimpleName: TypeWithPropertiesStatics(8089) into MethodInvocation(8094) at 0", "Insert SimpleName: getSubtypesWithProperty(8090) into MethodInvocation(8094) at 1", "Insert MethodInvocation(8092) into MethodInvocation(8094) at 2", "Insert SimpleName: qname(8093) into MethodInvocation(8094) at 3", "Insert FieldAccess(8116) into FieldAccess(8118) at 0", "Insert SimpleName: BOTTOM(8117) into FieldAccess(8118) at 1", "Insert SimpleName: JSType(8121) into SimpleType: JSType(8122) at 0", "Update SimpleType: UnsupportedOperationException(7945) to QualifiedName", "Move SimpleType: UnsupportedOperationException(7945) into ClassInstanceCreation(8129) at 0", "Insert SimpleName: pname(8128) into ClassInstanceCreation(8129) at 1", "Insert Assignment: =(8136) into ExpressionStatement(8137) at 0", "Insert SimpleName: funType(7898) into MethodInvocation(7900) at 0", "Insert SimpleName: isUniqueConstructor(7899) into MethodInvocation(7900) at 1", "Insert SimpleName: funType(7902) into MethodInvocation(7904) at 0", "Insert SimpleName: isInterfaceDefinition(7903) into MethodInvocation(7904) at 1", "Insert SimpleName: ImmutableSet(7907) into MethodInvocation(7909) at 0", "Insert SimpleName: of(7908) into MethodInvocation(7909) at 1", "Insert SimpleName: funType(7916) into MethodInvocation(7918) at 0", "Insert SimpleName: getInstanceTypeOfCtor(7917) into MethodInvocation(7918) at 1", "Insert SimpleType: ImmutableSet.Builder(7930) into ParameterizedType: ImmutableSet.Builder<>(7931) at 0", "Insert SimpleName: builder(7942) into MethodInvocation(7952) at 0", "Insert SimpleName: add(7943) into MethodInvocation(7952) at 1", "Insert MethodInvocation(7951) into MethodInvocation(7952) at 2", "Update SimpleType: UnsupportedOperationException(7894) to QualifiedName", "Move SimpleType: UnsupportedOperationException(7894) into ClassInstanceCreation(8008) at 0", "Insert SimpleName: propertyName(8007) into ClassInstanceCreation(8008) at 1", "Insert SimpleName: nt(8030) into MethodInvocation(8032) at 0", "Insert SimpleName: getRawNominalTypeAfterTypeChecking(8031) into MethodInvocation(8032) at 1", "Insert SimpleName: getEnums(8081) into MethodInvocation(8082) at 0", "Insert SimpleName: getObjs(8091) into MethodInvocation(8092) at 0", "Insert ThisExpression(8114) into FieldAccess(8116) at 0", "Insert SimpleName: commonTypes(8115) into FieldAccess(8116) at 1", "Update SimpleName: UnsupportedOperationException(7944) to QualifiedName", "Insert SimpleName: result(8131) into Assignment: =(8136) at 0", "Insert MethodInvocation(8135) into Assignment: =(8136) at 1", "Insert QualifiedName: ImmutableSet.Builder(7929) into SimpleType: ImmutableSet.Builder(7930) at 0", "Insert FieldAccess(7946) into MethodInvocation(7951) at 0", "Insert SimpleName: fromFunctionType(7947) into MethodInvocation(7951) at 1", "Insert MethodInvocation(7950) into MethodInvocation(7951) at 2", "Update SimpleName: UnsupportedOperationException(7893) to QualifiedName", "Insert SimpleName: join(8132) into MethodInvocation(8135) at 0", "Insert SimpleName: result(8133) into MethodInvocation(8135) at 1", "Insert SimpleName: t(8134) into MethodInvocation(8135) at 2", "Insert ThisExpression(7944) into FieldAccess(7946) at 0", "Insert SimpleName: commonTypes(7945) into FieldAccess(7946) at 1", "Insert SimpleName: i(7948) into MethodInvocation(7950) at 0", "Insert SimpleName: getConstructorFunction(7949) into MethodInvocation(7950) at 1", "Delete SimpleType: UnsupportedOperationException(1789)", "Delete ClassInstanceCreation(1790)", "Delete ThrowStatement(1791)", "Delete SimpleType: UnsupportedOperationException(7853)", "Delete ClassInstanceCreation(7854)", "Delete ThrowStatement(7855)", "Delete SimpleType: UnsupportedOperationException(7868)", "Delete ClassInstanceCreation(7869)", "Delete ThrowStatement(7870)", "Delete SimpleType: UnsupportedOperationException(7879)", "Delete ClassInstanceCreation(7880)", "Delete ThrowStatement(7881)", "Delete ClassInstanceCreation(7895)", "Delete ThrowStatement(7896)", "Delete SimpleType: UnsupportedOperationException(7906)", "Delete ClassInstanceCreation(7907)", "Delete ThrowStatement(7908)", "Delete ClassInstanceCreation(7946)", "Delete ThrowStatement(7947)"]}}, {"JSTypes_cluster": {"actions": [{"root": "INS ReturnStatement to SwitchStatement at 28", "operations": ["INS SimpleName: JSType to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getBottomObject to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: fromObjectType to MethodInvocation at 1", "INS ReturnStatement to SwitchStatement at 28"]}, {"root": "INS SwitchCase to SwitchStatement at 29", "operations": ["INS SwitchCase to SwitchStatement at 29", "INS SimpleName: FUNCTION_PROTOTYPE to SwitchCase at 0"]}, {"root": "INS ReturnStatement to SwitchStatement at 30", "operations": ["INS SimpleName: getFunctionType to MethodInvocation at 0", "INS ReturnStatement to SwitchStatement at 30", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getPrototypePropertyOfCtor to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 31", "operations": ["INS SwitchCase to SwitchStatement at 31", "INS SimpleName: FUNCTION_INSTANCE_TYPE to SwitchCase at 0"]}, {"root": "INS ReturnStatement to SwitchStatement at 32", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS SimpleName: getFunctionType to MethodInvocation at 0", "INS ReturnStatement to SwitchStatement at 32", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 33", "operations": ["INS SimpleName: OBJECT_PROTOTYPE to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 33"]}, {"root": "INS SwitchCase to SwitchStatement at 34", "operations": ["INS SwitchCase to SwitchStatement at 34", "INS SimpleName: TOP_LEVEL_PROTOTYPE to SwitchCase at 0"]}, {"root": "INS ReturnStatement to SwitchStatement at 35", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getNominalTypeIfSingletonObj to MethodInvocation at 1", "INS SimpleName: getTopObject to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 35", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getPrototypePropertyOfCtor to MethodInvocation at 1"]}, {"root": "INS SwitchCase to SwitchStatement at 36", "operations": ["INS SwitchCase to SwitchStatement at 36"]}, {"root": "INS SimpleName: NO_OBJECT_TYPE to SwitchCase at 0", "operations": ["INS SimpleName: NO_OBJECT_TYPE to SwitchCase at 0"]}]}}, {"JSTypes_diff": {"operations": ["Insert ReturnStatement(1600) into SwitchStatement(1637) at 28", "Insert SwitchCase(1602) into SwitchStatement(1637) at 29", "Insert ReturnStatement(1607) into SwitchStatement(1637) at 30", "Insert SwitchCase(1609) into SwitchStatement(1637) at 31", "Insert ReturnStatement(1614) into SwitchStatement(1637) at 32", "Insert SwitchCase(1616) into SwitchStatement(1637) at 33", "Insert SwitchCase(1618) into SwitchStatement(1637) at 34", "Insert ReturnStatement(1625) into SwitchStatement(1637) at 35", "Insert SwitchCase(1626) into SwitchStatement(1637) at 36", "Insert SimpleName: NO_OBJECT_TYPE(1593) into SwitchCase(1594) at 0", "Insert MethodInvocation(1599) into ReturnStatement(1600) at 0", "Insert SimpleName: FUNCTION_PROTOTYPE(1601) into SwitchCase(1602) at 0", "Insert MethodInvocation(1606) into ReturnStatement(1607) at 0", "Insert SimpleName: FUNCTION_INSTANCE_TYPE(1608) into SwitchCase(1609) at 0", "Insert MethodInvocation(1613) into ReturnStatement(1614) at 0", "Insert SimpleName: OBJECT_PROTOTYPE(1615) into SwitchCase(1616) at 0", "Insert SimpleName: TOP_LEVEL_PROTOTYPE(1617) into SwitchCase(1618) at 0", "Insert MethodInvocation(1624) into ReturnStatement(1625) at 0", "Insert SimpleName: JSType(1595) into MethodInvocation(1599) at 0", "Insert SimpleName: fromObjectType(1596) into MethodInvocation(1599) at 1", "Insert MethodInvocation(1598) into MethodInvocation(1599) at 2", "Insert MethodInvocation(1604) into MethodInvocation(1606) at 0", "Insert SimpleName: getPrototypePropertyOfCtor(1605) into MethodInvocation(1606) at 1", "Insert MethodInvocation(1611) into MethodInvocation(1613) at 0", "Insert SimpleName: getInstanceAsJSType(1612) into MethodInvocation(1613) at 1", "Insert MethodInvocation(1622) into MethodInvocation(1624) at 0", "Insert SimpleName: getPrototypePropertyOfCtor(1623) into MethodInvocation(1624) at 1", "Insert SimpleName: getBottomObject(1597) into MethodInvocation(1598) at 0", "Insert SimpleName: getFunctionType(1603) into MethodInvocation(1604) at 0", "Insert SimpleName: getFunctionType(1610) into MethodInvocation(1611) at 0", "Insert MethodInvocation(1620) into MethodInvocation(1622) at 0", "Insert SimpleName: getNominalTypeIfSingletonObj(1621) into MethodInvocation(1622) at 1", "Insert SimpleName: getTopObject(1619) into MethodInvocation(1620) at 0"]}}, {"NominalType_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleType: RawNominalType to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: getRawNominalTypeAfterTypeChecking to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: RawNominalType to SimpleType: RawNominalType at 0", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: rawType to FieldAccess at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 69", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 69", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleType: JSType to ParameterizedType: Set<JSType> at 1", "INS SimpleName: rawType to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: pname to MethodInvocation at 0", "INS SimpleName: pname to MethodInvocation at 0", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS SimpleName: getLeftmostName to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleName: pname to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 1", "INS SimpleName: isIdentifier to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: Set to ParameterizedType: Set<JSType> at 0", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS SimpleName: checkArgument to MethodInvocation at 1", "INS ParameterizedType: Set<JSType> to MethodDeclaration at 0"]}]}}, {"NominalType_diff": {"operations": ["Insert MethodDeclaration(149) into TypeDeclaration: class(2692) at 9", "Insert MethodDeclaration(2481) into TypeDeclaration: class(2692) at 69", "Insert Modifier: public(140) into MethodDeclaration(149) at 0", "Insert SimpleType: RawNominalType(142) into MethodDeclaration(149) at 1", "Insert SimpleName: getRawNominalTypeAfterTypeChecking(143) into MethodDeclaration(149) at 2", "Insert Block(148) into MethodDeclaration(149) at 3", "Insert ParameterizedType: Set<JSType>(2458) into MethodDeclaration(2481) at 0", "Insert SimpleName: getSubtypesWithProperty(2459) into MethodDeclaration(2481) at 1", "Insert SingleVariableDeclaration(2463) into MethodDeclaration(2481) at 2", "Insert Block(2480) into MethodDeclaration(2481) at 3", "Insert SimpleName: RawNominalType(141) into SimpleType: RawNominalType(142) at 0", "Insert ReturnStatement(147) into Block(148) at 0", "Insert SimpleType: Set(2455) into ParameterizedType: Set<JSType>(2458) at 0", "Insert SimpleType: JSType(2457) into ParameterizedType: Set<JSType>(2458) at 1", "Insert SimpleType: QualifiedName(2461) into SingleVariableDeclaration(2463) at 0", "Insert SimpleName: pname(2462) into SingleVariableDeclaration(2463) at 1", "Insert ExpressionStatement(2470) into Block(2480) at 0", "Insert ReturnStatement(2479) into Block(2480) at 1", "Insert FieldAccess(146) into ReturnStatement(147) at 0", "Insert SimpleName: Set(2454) into SimpleType: Set(2455) at 0", "Insert SimpleName: JSType(2456) into SimpleType: JSType(2457) at 0", "Insert SimpleName: QualifiedName(2460) into SimpleType: QualifiedName(2461) at 0", "Insert MethodInvocation(2469) into ExpressionStatement(2470) at 0", "Insert MethodInvocation(2478) into ReturnStatement(2479) at 0", "Insert ThisExpression(144) into FieldAccess(146) at 0", "Insert SimpleName: rawType(145) into FieldAccess(146) at 1", "Insert SimpleName: Preconditions(2464) into MethodInvocation(2469) at 0", "Insert SimpleName: checkArgument(2465) into MethodInvocation(2469) at 1", "Insert MethodInvocation(2468) into MethodInvocation(2469) at 2", "Insert FieldAccess(2473) into MethodInvocation(2478) at 0", "Insert SimpleName: getSubtypesWithProperty(2474) into MethodInvocation(2478) at 1", "Insert MethodInvocation(2477) into MethodInvocation(2478) at 2", "Insert SimpleName: pname(2466) into MethodInvocation(2468) at 0", "Insert SimpleName: isIdentifier(2467) into MethodInvocation(2468) at 1", "Insert ThisExpression(2471) into FieldAccess(2473) at 0", "Insert SimpleName: rawType(2472) into FieldAccess(2473) at 1", "Insert SimpleName: pname(2475) into MethodInvocation(2477) at 0", "Insert SimpleName: getLeftmostName(2476) into MethodInvocation(2477) at 1"]}}, {"ObjectType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.common.collect.Iterables to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: java.util.Collection to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 62", "operations": ["INS SimpleName: getOnlyElement to MethodInvocation at 1", "INS EnhancedForStatement to Block at 2", "INS SimpleName: Property to SimpleType: Property at 0", "INS SimpleType: EnumType to VariableDeclarationStatement at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: p to SingleVariableDeclaration at 1", "INS SimpleType: JSType to VariableDeclarationStatement at 0", "INS SimpleName: e to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 62", "INS SimpleName: values to MethodInvocation at 1", "INS Block to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS SimpleName: isLiteralObject to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: t to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleName: isEnumElement to MethodInvocation at 1", "INS SimpleName: p to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Property to SingleVariableDeclaration at 0", "INS SimpleName: e to InfixExpression: != at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: e to Assignment: = at 0", "INS SimpleName: getEnums to MethodInvocation at 1", "INS SimpleName: isEnumObject to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BreakStatement to Block at 1", "INS SimpleName: toJSType to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: props to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: e to VariableDeclarationFragment at 0", "INS ThisExpression to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: t to VariableDeclarationFragment at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to MethodInvocation at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: EnumType to SimpleType: EnumType at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: t to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 3", "INS SimpleName: nominalType to FieldAccess at 1", "INS SimpleName: Iterables to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: getObjTypeIfSingletonObj to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 81", "operations": ["INS Block to MethodDeclaration at 3", "INS SimpleName: checkArgument to MethodInvocation at 1", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS MethodDeclaration to TypeDeclaration: class at 81", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: qname to MethodInvocation at 0", "INS SimpleName: hasOwnPropery to MethodDeclaration at 1", "INS SimpleName: getLeftmostOwnProp to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: qname to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ReturnStatement to Block at 1", "INS SimpleName: isIdentifier to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 92", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: Collection<JSType> to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 92", "INS Block to MethodDeclaration at 5", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: nominalType to FieldAccess at 1", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS FieldAccess to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: qname to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}]}}, {"ObjectType_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(6496) at 3", "Insert ImportDeclaration(21) into CompilationUnit(6496) at 10", "Insert QualifiedName: com.google.common.collect.Iterables(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.Collection(20) into ImportDeclaration(21) at 0", "Insert MethodDeclaration(4160) into TypeDeclaration: class(6495) at 62", "Insert MethodDeclaration(5439) into TypeDeclaration: class(6495) at 81", "Insert MethodDeclaration(6494) into TypeDeclaration: class(6495) at 92", "Insert PrimitiveType: boolean(4094) into MethodDeclaration(4160) at 0", "Insert SimpleName: isEnumObject(4095) into MethodDeclaration(4160) at 1", "Insert Block(4159) into MethodDeclaration(4160) at 2", "Insert PrimitiveType: boolean(5419) into MethodDeclaration(5439) at 0", "Insert SimpleName: hasOwnPropery(5420) into MethodDeclaration(5439) at 1", "Insert SingleVariableDeclaration(5424) into MethodDeclaration(5439) at 2", "Insert Block(5438) into MethodDeclaration(5439) at 3", "Insert MarkerAnnotation(6474) into MethodDeclaration(6494) at 0", "Insert Modifier: public(6475) into MethodDeclaration(6494) at 1", "Insert ParameterizedType: Collection<JSType>(6480) into MethodDeclaration(6494) at 2", "Insert SimpleName: getSubtypesWithProperty(6481) into MethodDeclaration(6494) at 3", "Insert SingleVariableDeclaration(6485) into MethodDeclaration(6494) at 4", "Insert Block(6493) into MethodDeclaration(6494) at 5", "Insert IfStatement(4105) into Block(4159) at 0", "Insert VariableDeclarationStatement(4111) into Block(4159) at 1", "Insert EnhancedForStatement(4145) into Block(4159) at 2", "Insert ReturnStatement(4158) into Block(4159) at 3", "Insert SimpleType: QualifiedName(5422) into SingleVariableDeclaration(5424) at 0", "Insert SimpleName: qname(5423) into SingleVariableDeclaration(5424) at 1", "Insert ExpressionStatement(5431) into Block(5438) at 0", "Insert ReturnStatement(5437) into Block(5438) at 1", "Insert SimpleName: Override(6473) into MarkerAnnotation(6474) at 0", "Insert SimpleType: Collection(6477) into ParameterizedType: Collection<JSType>(6480) at 0", "Insert SimpleType: JSType(6479) into ParameterizedType: Collection<JSType>(6480) at 1", "Insert SimpleType: QualifiedName(6483) into SingleVariableDeclaration(6485) at 0", "Insert SimpleName: qname(6484) into SingleVariableDeclaration(6485) at 1", "Insert ReturnStatement(6492) into Block(6493) at 0", "Insert PrefixExpression: !(4101) into IfStatement(4105) at 0", "Insert Block(4104) into IfStatement(4105) at 1", "Insert SimpleType: EnumType(4107) into VariableDeclarationStatement(4111) at 0", "Insert VariableDeclarationFragment(4110) into VariableDeclarationStatement(4111) at 1", "Insert SingleVariableDeclaration(4115) into EnhancedForStatement(4145) at 0", "Insert MethodInvocation(4120) into EnhancedForStatement(4145) at 1", "Insert Block(4144) into EnhancedForStatement(4145) at 2", "Insert InfixExpression: &&(4157) into ReturnStatement(4158) at 0", "Insert SimpleName: QualifiedName(5421) into SimpleType: QualifiedName(5422) at 0", "Insert MethodInvocation(5430) into ExpressionStatement(5431) at 0", "Insert InfixExpression: !=(5436) into ReturnStatement(5437) at 0", "Insert SimpleName: Collection(6476) into SimpleType: Collection(6477) at 0", "Insert SimpleName: JSType(6478) into SimpleType: JSType(6479) at 0", "Insert SimpleName: QualifiedName(6482) into SimpleType: QualifiedName(6483) at 0", "Insert MethodInvocation(6491) into ReturnStatement(6492) at 0", "Insert MethodInvocation(4100) into PrefixExpression: !(4101) at 0", "Insert ReturnStatement(4103) into Block(4104) at 0", "Insert SimpleName: EnumType(4106) into SimpleType: EnumType(4107) at 0", "Insert SimpleName: e(4108) into VariableDeclarationFragment(4110) at 0", "Insert NullLiteral(4109) into VariableDeclarationFragment(4110) at 1", "Insert SimpleType: Property(4113) into SingleVariableDeclaration(4115) at 0", "Insert SimpleName: p(4114) into SingleVariableDeclaration(4115) at 1", "Insert FieldAccess(4118) into MethodInvocation(4120) at 0", "Insert SimpleName: values(4119) into MethodInvocation(4120) at 1", "Insert VariableDeclarationStatement(4128) into Block(4144) at 0", "Insert IfStatement(4143) into Block(4144) at 1", "Insert InfixExpression: !=(4148) into InfixExpression: &&(4157) at 0", "Insert MethodInvocation(4156) into InfixExpression: &&(4157) at 1", "Insert SimpleName: Preconditions(5425) into MethodInvocation(5430) at 0", "Insert SimpleName: checkArgument(5426) into MethodInvocation(5430) at 1", "Insert MethodInvocation(5429) into MethodInvocation(5430) at 2", "Insert MethodInvocation(5434) into InfixExpression: !=(5436) at 0", "Insert NullLiteral(5435) into InfixExpression: !=(5436) at 1", "Insert FieldAccess(6488) into MethodInvocation(6491) at 0", "Insert SimpleName: getSubtypesWithProperty(6489) into MethodInvocation(6491) at 1", "Insert SimpleName: qname(6490) into MethodInvocation(6491) at 2", "Insert FieldAccess(4098) into MethodInvocation(4100) at 0", "Insert SimpleName: isLiteralObject(4099) into MethodInvocation(4100) at 1", "Insert BooleanLiteral: false(4102) into ReturnStatement(4103) at 0", "Insert SimpleName: Property(4112) into SimpleType: Property(4113) at 0", "Insert ThisExpression(4116) into FieldAccess(4118) at 0", "Insert SimpleName: props(4117) into FieldAccess(4118) at 1", "Insert SimpleType: JSType(4122) into VariableDeclarationStatement(4128) at 0", "Insert VariableDeclarationFragment(4127) into VariableDeclarationStatement(4128) at 1", "Insert MethodInvocation(4131) into IfStatement(4143) at 0", "Insert Block(4142) into IfStatement(4143) at 1", "Insert SimpleName: e(4146) into InfixExpression: !=(4148) at 0", "Insert NullLiteral(4147) into InfixExpression: !=(4148) at 1", "Insert ThisExpression(4149) into MethodInvocation(4156) at 0", "Insert SimpleName: equals(4150) into MethodInvocation(4156) at 1", "Insert MethodInvocation(4155) into MethodInvocation(4156) at 2", "Insert SimpleName: qname(5427) into MethodInvocation(5429) at 0", "Insert SimpleName: isIdentifier(5428) into MethodInvocation(5429) at 1", "Insert SimpleName: getLeftmostOwnProp(5432) into MethodInvocation(5434) at 0", "Insert SimpleName: qname(5433) into MethodInvocation(5434) at 1", "Insert ThisExpression(6486) into FieldAccess(6488) at 0", "Insert SimpleName: nominalType(6487) into FieldAccess(6488) at 1", "Insert ThisExpression(4096) into FieldAccess(4098) at 0", "Insert SimpleName: nominalType(4097) into FieldAccess(4098) at 1", "Insert SimpleName: JSType(4121) into SimpleType: JSType(4122) at 0", "Insert SimpleName: t(4123) into VariableDeclarationFragment(4127) at 0", "Insert MethodInvocation(4126) into VariableDeclarationFragment(4127) at 1", "Insert SimpleName: t(4129) into MethodInvocation(4131) at 0", "Insert SimpleName: isEnumElement(4130) into MethodInvocation(4131) at 1", "Insert ExpressionStatement(4140) into Block(4142) at 0", "Insert BreakStatement(4141) into Block(4142) at 1", "Insert MethodInvocation(4153) into MethodInvocation(4155) at 0", "Insert SimpleName: getObjTypeIfSingletonObj(4154) into MethodInvocation(4155) at 1", "Insert SimpleName: p(4124) into MethodInvocation(4126) at 0", "Insert SimpleName: getType(4125) into MethodInvocation(4126) at 1", "Insert Assignment: =(4139) into ExpressionStatement(4140) at 0", "Insert SimpleName: e(4151) into MethodInvocation(4153) at 0", "Insert SimpleName: toJSType(4152) into MethodInvocation(4153) at 1", "Insert SimpleName: e(4132) into Assignment: =(4139) at 0", "Insert MethodInvocation(4138) into Assignment: =(4139) at 1", "Insert SimpleName: Iterables(4133) into MethodInvocation(4138) at 0", "Insert SimpleName: getOnlyElement(4134) into MethodInvocation(4138) at 1", "Insert MethodInvocation(4137) into MethodInvocation(4138) at 2", "Insert SimpleName: t(4135) into MethodInvocation(4137) at 0", "Insert SimpleName: getEnums(4136) into MethodInvocation(4137) at 1"]}}, {"RawNominalType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: java.util.HashSet to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS SimpleName: isPropDefinedOnSubtype to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: pname to SingleVariableDeclaration at 1", "INS SimpleName: pname to MethodInvocation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS PrefixExpression: ! to ReturnStatement at 0"]}, {"root": "INS ParameterizedType: Set<JSType> to MethodDeclaration at 0", "operations": ["INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleType: Set to ParameterizedType: Set<JSType> at 0", "INS SimpleType: JSType to ParameterizedType: Set<JSType> at 1", "INS ParameterizedType: Set<JSType> to MethodDeclaration at 0"]}, {"root": "UPDATE from isPropDefinedOnSubtype to getSubtypesWithProperty", "operations": ["UPD SimpleName: isPropDefinedOnSubtype from isPropDefinedOnSubtype to getSubtypesWithProperty", "UPD SimpleName: isPropDefinedOnSubtype from isPropDefinedOnSubtype to getSubtypesWithProperty"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HashSet to ParameterizedType: HashSet<> at 0", "INS ParameterizedType: HashSet<JSType> to VariableDeclarationStatement at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<JSType> at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS ParameterizedType: HashSet<> to ClassInstanceCreation at 0", "INS SimpleType: JSType to ParameterizedType: HashSet<JSType> at 1", "INS SimpleName: typesWithProp to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleName: typesWithProp to ReturnStatement at 0", "operations": ["INS SimpleName: typesWithProp to ReturnStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: typesWithProp to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ImmutableSet to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pname to MethodInvocation at 2", "MOV SimpleName: isPropDefinedOnSubtype to MethodInvocation at 1", "MOV SimpleName: subtype to MethodInvocation at 0"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL IfStatement"]}, {"root": "DEL BooleanLiteral: false", "operations": ["DEL BooleanLiteral: false"]}]}}, {"RawNominalType_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(2852) at 9", "Insert QualifiedName: java.util.HashSet(18) into ImportDeclaration(19) at 0", "Insert MethodDeclaration(988) into TypeDeclaration: class(2851) at 47", "Insert ParameterizedType: Set<JSType>(924) into MethodDeclaration(973) at 0", "Update SimpleName: isPropDefinedOnSubtype(919) to getSubtypesWithProperty", "Insert PrimitiveType: boolean(974) into MethodDeclaration(988) at 0", "Insert SimpleName: isPropDefinedOnSubtype(975) into MethodDeclaration(988) at 1", "Insert SingleVariableDeclaration(979) into MethodDeclaration(988) at 2", "Insert Block(987) into MethodDeclaration(988) at 3", "Insert SimpleType: Set(921) into ParameterizedType: Set<JSType>(924) at 0", "Insert SimpleType: JSType(923) into ParameterizedType: Set<JSType>(924) at 1", "Insert VariableDeclarationStatement(952) into Block(972) at 1", "Insert SimpleType: String(977) into SingleVariableDeclaration(979) at 0", "Insert SimpleName: pname(978) into SingleVariableDeclaration(979) at 1", "Insert ReturnStatement(986) into Block(987) at 0", "Insert SimpleName: Set(920) into SimpleType: Set(921) at 0", "Insert SimpleName: JSType(922) into SimpleType: JSType(923) at 0", "Insert ParameterizedType: HashSet<JSType>(945) into VariableDeclarationStatement(952) at 0", "Insert VariableDeclarationFragment(951) into VariableDeclarationStatement(952) at 1", "Insert SimpleName: typesWithProp(970) into ReturnStatement(971) at 0", "Insert SimpleName: String(976) into SimpleType: String(977) at 0", "Insert PrefixExpression: !(985) into ReturnStatement(986) at 0", "Insert SimpleType: HashSet(942) into ParameterizedType: HashSet<JSType>(945) at 0", "Insert SimpleType: JSType(944) into ParameterizedType: HashSet<JSType>(945) at 1", "Insert SimpleName: typesWithProp(946) into VariableDeclarationFragment(951) at 0", "Insert ClassInstanceCreation(950) into VariableDeclarationFragment(951) at 1", "Insert ExpressionStatement(967) into Block(968) at 0", "Insert MethodInvocation(984) into PrefixExpression: !(985) at 0", "Insert MethodInvocation(937) into ReturnStatement(938) at 0", "Insert SimpleName: HashSet(941) into SimpleType: HashSet(942) at 0", "Insert SimpleName: JSType(943) into SimpleType: JSType(944) at 0", "Insert ParameterizedType: HashSet<>(949) into ClassInstanceCreation(950) at 0", "Insert MethodInvocation(966) into ExpressionStatement(967) at 0", "Insert MethodInvocation(982) into MethodInvocation(984) at 0", "Insert SimpleName: isEmpty(983) into MethodInvocation(984) at 1", "Insert SimpleName: ImmutableSet(933) into MethodInvocation(937) at 0", "Insert SimpleName: of(934) into MethodInvocation(937) at 1", "Insert MethodInvocation(936) into MethodInvocation(937) at 2", "Insert SimpleType: HashSet(948) into ParameterizedType: HashSet<>(949) at 0", "Insert SimpleName: typesWithProp(960) into MethodInvocation(966) at 0", "Insert SimpleName: addAll(961) into MethodInvocation(966) at 1", "Insert MethodInvocation(965) into MethodInvocation(966) at 2", "Insert SimpleName: getSubtypesWithProperty(980) into MethodInvocation(982) at 0", "Insert SimpleName: pname(981) into MethodInvocation(982) at 1", "Insert SimpleName: getInstanceAsJSType(935) into MethodInvocation(936) at 0", "Insert SimpleName: HashSet(947) into SimpleType: HashSet(948) at 0", "Move SimpleName: subtype(938) into MethodInvocation(965) at 0", "Update SimpleName: isPropDefinedOnSubtype(939) to getSubtypesWithProperty", "Move SimpleName: isPropDefinedOnSubtype(939) into MethodInvocation(965) at 1", "Move SimpleName: pname(940) into MethodInvocation(965) at 2", "Delete PrimitiveType: boolean(918)", "Delete BooleanLiteral: true(927)", "Delete MethodInvocation(941)", "Delete BooleanLiteral: true(942)", "Delete ReturnStatement(943)", "Delete Block(944)", "Delete IfStatement(945)", "Delete BooleanLiteral: false(948)"]}}, {"TypeWithProperties_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.util.Collection to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 7", "operations": ["INS TextElement: Return all topmost subtypes of this type that have the given property. to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS ParameterizedType: Collection<JSType> to MethodDeclaration at 1", "INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS TextElement: If the type itself has the property then only this type is included in the result. to TagElement at 1", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 2"]}]}}, {"TypeWithProperties_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(77) at 1", "Insert QualifiedName: java.util.Collection(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(75) into TypeDeclaration: interface(76) at 7", "Insert Javadoc(64) into MethodDeclaration(75) at 0", "Insert ParameterizedType: Collection<JSType>(69) into MethodDeclaration(75) at 1", "Insert SimpleName: getSubtypesWithProperty(70) into MethodDeclaration(75) at 2", "Insert SingleVariableDeclaration(74) into MethodDeclaration(75) at 3", "Insert TagElement(63) into Javadoc(64) at 0", "Insert SimpleType: Collection(66) into ParameterizedType: Collection<JSType>(69) at 0", "Insert SimpleType: JSType(68) into ParameterizedType: Collection<JSType>(69) at 1", "Insert SimpleType: QualifiedName(72) into SingleVariableDeclaration(74) at 0", "Insert SimpleName: qname(73) into SingleVariableDeclaration(74) at 1", "Insert TextElement: Return all topmost subtypes of this type that have the given property.(61) into TagElement(63) at 0", "Insert TextElement: If the type itself has the property then only this type is included in the result.(62) into TagElement(63) at 1", "Insert SimpleName: Collection(65) into SimpleType: Collection(66) at 0", "Insert SimpleName: JSType(67) into SimpleType: JSType(68) at 0", "Insert SimpleName: QualifiedName(71) into SimpleType: QualifiedName(72) at 0"]}}, {"TypeWithPropertiesStatics_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Collection to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.util.HashSet to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.Set to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleType: Set to ParameterizedType: Set<JSType> at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ParameterizedType: Set<JSType> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: ImmutableSet to SimpleType: ImmutableSet at 0", "INS Modifier: static to MethodDeclaration at 0", "INS ParameterizedType: ImmutableSet<? extends TypeWithProperties> to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 3", "INS SimpleName: types to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getSubtypesWithProperty to MethodInvocation at 1", "INS SimpleName: types to SingleVariableDeclaration at 1", "INS SimpleName: qname to MethodInvocation at 2", "INS SimpleType: JSType to ParameterizedType: Set<JSType> at 1", "INS SimpleName: qname to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Collection to ParameterizedType: Collection<JSType> at 0", "INS SimpleType: ImmutableSet to ParameterizedType: ImmutableSet<? extends TypeWithProperties> at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<> at 0", "INS SimpleName: TypeWithProperties to SimpleType: TypeWithProperties at 0", "INS EnhancedForStatement to Block at 2", "INS WildcardType: ? extends TypeWithProperties to ParameterizedType: ImmutableSet<? extends TypeWithProperties> at 1", "INS SimpleName: types to InfixExpression: == at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: typesWithProp to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: TypeWithProperties to SimpleType: TypeWithProperties at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS SimpleType: TypeWithProperties to WildcardType: ? extends TypeWithProperties at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS ParameterizedType: Collection<JSType> to MethodDeclaration at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParameterizedType: HashSet<> to ClassInstanceCreation at 0", "INS SimpleName: QualifiedName to SimpleType: QualifiedName at 0", "INS SimpleName: t to MethodInvocation at 0", "INS SimpleName: ImmutableSet to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleType: QualifiedName to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleType: TypeWithProperties to SingleVariableDeclaration at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: getSubtypesWithProperty to MethodDeclaration at 2", "INS SimpleName: typesWithProp to MethodInvocation at 0", "INS SimpleType: JSType to ParameterizedType: Collection<JSType> at 1", "INS SimpleName: typesWithProp to ReturnStatement at 0", "INS ExpressionStatement to Block at 0"]}]}}, {"TypeWithPropertiesStatics_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(347) at 2", "Insert ImportDeclaration(7) into CompilationUnit(347) at 3", "Insert ImportDeclaration(9) into CompilationUnit(347) at 4", "Insert QualifiedName: java.util.Collection(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.util.HashSet(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.Set(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(221) into TypeDeclaration: class(346) at 6", "Insert Modifier: static(163) into MethodDeclaration(221) at 0", "Insert ParameterizedType: Collection<JSType>(168) into MethodDeclaration(221) at 1", "Insert SimpleName: getSubtypesWithProperty(169) into MethodDeclaration(221) at 2", "Insert SingleVariableDeclaration(177) into MethodDeclaration(221) at 3", "Insert SingleVariableDeclaration(181) into MethodDeclaration(221) at 4", "Insert Block(220) into MethodDeclaration(221) at 5", "Insert SimpleType: Collection(165) into ParameterizedType: Collection<JSType>(168) at 0", "Insert SimpleType: JSType(167) into ParameterizedType: Collection<JSType>(168) at 1", "Insert ParameterizedType: ImmutableSet<? extends TypeWithProperties>(175) into SingleVariableDeclaration(177) at 0", "Insert SimpleName: types(176) into SingleVariableDeclaration(177) at 1", "Insert SimpleType: QualifiedName(179) into SingleVariableDeclaration(181) at 0", "Insert SimpleName: qname(180) into SingleVariableDeclaration(181) at 1", "Insert IfStatement(190) into Block(220) at 0", "Insert VariableDeclarationStatement(202) into Block(220) at 1", "Insert EnhancedForStatement(217) into Block(220) at 2", "Insert ReturnStatement(219) into Block(220) at 3", "Insert SimpleName: Collection(164) into SimpleType: Collection(165) at 0", "Insert SimpleName: JSType(166) into SimpleType: JSType(167) at 0", "Insert SimpleType: ImmutableSet(171) into ParameterizedType: ImmutableSet<? extends TypeWithProperties>(175) at 0", "Insert WildcardType: ? extends TypeWithProperties(174) into ParameterizedType: ImmutableSet<? extends TypeWithProperties>(175) at 1", "Insert SimpleName: QualifiedName(178) into SimpleType: QualifiedName(179) at 0", "Insert InfixExpression: ==(184) into IfStatement(190) at 0", "Insert Block(189) into IfStatement(190) at 1", "Insert ParameterizedType: Set<JSType>(195) into VariableDeclarationStatement(202) at 0", "Insert VariableDeclarationFragment(201) into VariableDeclarationStatement(202) at 1", "Insert SingleVariableDeclaration(206) into EnhancedForStatement(217) at 0", "Insert SimpleName: types(207) into EnhancedForStatement(217) at 1", "Insert Block(216) into EnhancedForStatement(217) at 2", "Insert SimpleName: typesWithProp(218) into ReturnStatement(219) at 0", "Insert SimpleName: ImmutableSet(170) into SimpleType: ImmutableSet(171) at 0", "Insert SimpleType: TypeWithProperties(173) into WildcardType: ? extends TypeWithProperties(174) at 0", "Insert SimpleName: types(182) into InfixExpression: ==(184) at 0", "Insert NullLiteral(183) into InfixExpression: ==(184) at 1", "Insert ReturnStatement(188) into Block(189) at 0", "Insert SimpleType: Set(192) into ParameterizedType: Set<JSType>(195) at 0", "Insert SimpleType: JSType(194) into ParameterizedType: Set<JSType>(195) at 1", "Insert SimpleName: typesWithProp(196) into VariableDeclarationFragment(201) at 0", "Insert ClassInstanceCreation(200) into VariableDeclarationFragment(201) at 1", "Insert SimpleType: TypeWithProperties(204) into SingleVariableDeclaration(206) at 0", "Insert SimpleName: t(205) into SingleVariableDeclaration(206) at 1", "Insert ExpressionStatement(215) into Block(216) at 0", "Insert SimpleName: TypeWithProperties(172) into SimpleType: TypeWithProperties(173) at 0", "Insert MethodInvocation(187) into ReturnStatement(188) at 0", "Insert SimpleName: Set(191) into SimpleType: Set(192) at 0", "Insert SimpleName: JSType(193) into SimpleType: JSType(194) at 0", "Insert ParameterizedType: HashSet<>(199) into ClassInstanceCreation(200) at 0", "Insert SimpleName: TypeWithProperties(203) into SimpleType: TypeWithProperties(204) at 0", "Insert MethodInvocation(214) into ExpressionStatement(215) at 0", "Insert SimpleName: ImmutableSet(185) into MethodInvocation(187) at 0", "Insert SimpleName: of(186) into MethodInvocation(187) at 1", "Insert SimpleType: HashSet(198) into ParameterizedType: HashSet<>(199) at 0", "Insert SimpleName: typesWithProp(208) into MethodInvocation(214) at 0", "Insert SimpleName: addAll(209) into MethodInvocation(214) at 1", "Insert MethodInvocation(213) into MethodInvocation(214) at 2", "Insert SimpleName: HashSet(197) into SimpleType: HashSet(198) at 0", "Insert SimpleName: t(210) into MethodInvocation(213) at 0", "Insert SimpleName: getSubtypesWithProperty(211) into MethodInvocation(213) at 1", "Insert SimpleName: qname(212) into MethodInvocation(213) at 2"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}