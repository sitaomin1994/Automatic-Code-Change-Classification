{"application": "apache-nutch", "csha": "9714c446cf881f45188e46a0c9ae3f7f4336fcdc", "files": [{"CrawlDatum_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: this work for additional information regarding copyright ownership.", "DEL TextElement: The ASF licenses this file to You under the Apache License, Version 2.0", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: contributor license agreements.  See the NOTICE file distributed with", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: (the \"License\"); you may not use this file except in compliance with", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and", "DEL QualifiedName: org.apache.nutch.crawl", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one or more"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map.Entry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.nutch.util"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL SimpleName: CrawlDatum", "DEL SimpleName: buf", "DEL SimpleName: CrawlDatum", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL Modifier: private", "DEL SimpleName: Entry", "DEL Assignment: +=", "DEL ClassInstanceCreation", "DEL SimpleName: status", "DEL ExpressionStatement", "DEL Block", "DEL SimpleType: CrawlDatum", "DEL SimpleName: o", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL SimpleName: CrawlDatum", "DEL Modifier: public", "DEL SimpleName: set2", "DEL SimpleName: result", "DEL SimpleName: key", "DEL TextElement: Page temporarily redirects to other page. ", "DEL SimpleName: STATUS_DB_FETCHED", "DEL MethodDeclaration", "DEL SimpleName: i", "DEL Block", "DEL TagElement", "DEL PrimitiveType: float", "DEL SimpleName: String", "DEL ThisExpression", "DEL NumberLiteral: 1", "DEL Javadoc", "DEL NumberLiteral: 8", "DEL SimpleName: set", "DEL TagElement", "DEL FieldAccess", "DEL SimpleName: writeByte", "DEL SimpleType: Writable", "DEL NumberLiteral: 4", "DEL MethodInvocation", "DEL Modifier: final", "DEL PrimitiveType: byte", "DEL Modifier: private", "DEL SimpleName: STATUS_LINKED", "DEL Modifier: static", "DEL Modifier: public", "DEL SimpleName: HashSet", "DEL NumberLiteral: 7", "DEL SimpleName: retries", "DEL PrimitiveType: int", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: out", "DEL MethodInvocation", "DEL SimpleType: HashSet", "DEL Modifier: static", "DEL QualifiedName: that.fetchTime", "DEL ExpressionStatement", "DEL SimpleName: readFloat", "DEL NumberLiteral: 0x3f", "DEL ExpressionStatement", "DEL Dimension", "DEL QualifiedName: that.modifiedTime", "DEL SimpleName: in", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL InfixExpression: >", "DEL FieldAccess", "DEL PrimitiveType: void", "DEL BooleanLiteral: true", "DEL FieldDeclaration", "DEL SimpleType: DataInput", "DEL Modifier: final", "DEL SimpleName: HashSet", "DEL MethodInvocation", "DEL SimpleName: STATUS_DB_REDIR_TEMP", "DEL Javadoc", "DEL Block", "DEL SimpleName: containsKey", "DEL FieldAccess", "DEL ConditionalExpression", "DEL SimpleName: signature", "DEL BooleanLiteral: true", "DEL Block", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL SimpleName: append", "DEL SimpleName: res", "DEL MethodInvocation", "DEL SimpleName: WritableComparable", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: writeLong", "DEL ArrayAccess", "DEL FieldAccess", "DEL TryStatement", "DEL SimpleName: put", "DEL SimpleName: score", "DEL ParameterizedType: HashMap<Byte,Byte>", "DEL SimpleName: compare", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL Modifier: public", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL CastExpression", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: System", "DEL NumberLiteral: 1", "DEL SimpleName: status", "DEL ExpressionStatement", "DEL QualifiedName: that.fetchTime", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: append", "DEL InfixExpression: +", "DEL SimpleName: modifiedTime1", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"signature\"", "DEL Javadoc", "DEL Block", "DEL SimpleName: status2", "DEL CastExpression", "DEL Block", "DEL SimpleName: oldToNew", "DEL SimpleName: getFetchInterval", "DEL SimpleName: result", "DEL MethodDeclaration", "DEL SimpleName: getMetaData", "DEL Block", "DEL SimpleName: s2", "DEL VariableDeclarationFragment", "DEL TextElement: Page permanently redirects to other page. ", "DEL SimpleName: HashMap", "DEL StringLiteral: \"fetch_redir_temp\"", "DEL SimpleName: SignatureComparator", "DEL ConditionalExpression", "DEL NumberLiteral: 0x21", "DEL Javadoc", "DEL TextElement: Fetching temporarily redirected to other page. ", "DEL Block", "DEL SimpleName: modifiedTime", "DEL ArrayAccess", "DEL Javadoc", "DEL SimpleName: version", "DEL Block", "DEL SimpleName: OLD_STATUS_FETCH_GONE", "DEL SimpleName: statNames", "DEL SimpleName: STATUS_DB_REDIR_PERM", "DEL ParenthesizedExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: STATUS_SIGNATURE", "DEL FieldAccess", "DEL Modifier: public", "DEL PrimitiveType: byte", "DEL SimpleName: put", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: metaData", "DEL QualifiedName: that.signature", "DEL SimpleName: STATUS_FETCH_GONE", "DEL SimpleName: put", "DEL TextElement: Page signature. ", "DEL IfStatement", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL FieldDeclaration", "DEL SimpleName: append", "DEL FieldDeclaration", "DEL StringLiteral: \"Max signature length (256) exceeded: \"", "DEL SimpleName: score", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: retries", "DEL Modifier: public", "DEL QualifiedName: signature.length", "DEL NumberLiteral: 1", "DEL SimpleName: STATUS_DB_UNFETCHED", "DEL ThrowStatement", "DEL NumberLiteral: 1", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: status", "DEL SimpleName: Writable", "DEL NumberLiteral: 1", "DEL NumberLiteral: 1", "DEL ConditionalExpression", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: readFloat", "DEL ReturnStatement", "DEL Assignment: =", "DEL SimpleName: STATUS_FETCH_RETRY", "DEL SimpleName: put", "DEL ThisExpression", "DEL SimpleName: statNames", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: size", "DEL InfixExpression: +", "DEL SimpleName: fetchTime1", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL SimpleName: out", "DEL SimpleName: s2", "DEL PrimitiveType: long", "DEL SimpleName: getSignature", "DEL ThisExpression", "DEL FieldDeclaration", "DEL SimpleName: writeByte", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: status", "DEL TextElement: depending on whether Fetcher or CrawlDbReducer set the time.", "DEL ExpressionStatement", "DEL QualifiedName: that.metaData", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: in", "DEL SimpleName: SCORE_OFFSET", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL SimpleName: readFields", "DEL SimpleName: metaData", "DEL SimpleName: s1", "DEL Javadoc", "DEL SimpleName: metaData", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: CrawlDatum", "DEL SimpleName: writeByte", "DEL Modifier: final", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL StringLiteral: \" (\"", "DEL FieldDeclaration", "DEL TagElement", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL SimpleName: out", "DEL TagElement", "DEL SimpleName: fetchTime", "DEL SimpleName: String", "DEL SimpleType: CrawlDatum", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL SimpleName: otherMetaData", "DEL FieldAccess", "DEL Javadoc", "DEL SimpleName: sigl1", "DEL NumberLiteral: 0", "DEL QualifiedName: other.signature", "DEL ExpressionStatement", "DEL Modifier: public", "DEL Modifier: public", "DEL InfixExpression: ==", "DEL SimpleName: oldToNew", "DEL SimpleName: append", "DEL StringLiteral: \"db_fetched\"", "DEL SimpleName: status", "DEL SimpleName: STATUS_FETCH_MAX", "DEL SimpleName: entrySet", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL StringLiteral: \"\\n\"", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: oldToNew", "DEL VariableDeclarationExpression", "DEL SimpleName: score1", "DEL MethodInvocation", "DEL SimpleName: buf", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 3", "DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: that.fetchTime", "DEL ParenthesizedExpression", "DEL Block", "DEL SimpleName: String", "DEL IfStatement", "DEL Block", "DEL FieldAccess", "DEL SimpleName: retries1", "DEL TextElement: Page was not fetched yet. ", "DEL TagElement", "DEL PrimitiveType: byte", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: score", "DEL BooleanLiteral: false", "DEL Block", "DEL SimpleName: statNames", "DEL VariableDeclarationStatement", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: statNames", "DEL TextElement: Fetching successful - page is not modified. ", "DEL InfixExpression: +", "DEL SimpleName: status", "DEL InfixExpression: &&", "DEL Assignment: =", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL InfixExpression: >", "DEL ConditionalExpression", "DEL ParameterizedType: WritableComparable<CrawlDatum>", "DEL PrimitiveType: int", "DEL NumberLiteral: 0", "DEL SimpleName: STATUS_DB_NOTMODIFIED", "DEL SimpleName: b1", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL InfixExpression: -", "DEL FieldAccess", "DEL InfixExpression: +", "DEL SimpleName: i", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: status", "DEL InfixExpression: ==", "DEL SimpleName: metadataEquals", "DEL SimpleName: out", "DEL InfixExpression: <", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL Modifier: public", "DEL Modifier: public", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL InfixExpression: +", "DEL SimpleName: o", "DEL Modifier: final", "DEL QualifiedName: signature.length", "DEL NumberLiteral: 4", "DEL SimpleName: in", "DEL Modifier: final", "DEL MethodDeclaration", "DEL FieldAccess", "DEL Block", "DEL SimpleType: CrawlDatum", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL FieldDeclaration", "DEL SimpleType: Writable", "DEL ParameterizedType: HashMap<Byte,String>", "DEL SimpleName: l2", "DEL TextElement: Fetching unsuccessful - page is gone. ", "DEL SimpleName: oldToNew", "DEL MethodInvocation", "DEL SimpleName: retries", "DEL MethodInvocation", "DEL ThisExpression", "DEL PrimitiveType: long", "DEL MethodInvocation", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL SimpleName: e", "DEL Modifier: public", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: IOException", "DEL TextElement: Add all metadata from other CrawlDatum to this CrawlDatum.", "DEL SimpleName: fetchInterval", "DEL PrimitiveType: int", "DEL PrimitiveType: boolean", "DEL SimpleName: STATUS_DB_UNFETCHED", "DEL SimpleName: out", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"Score: \"", "DEL SimpleName: SIG_OFFSET", "DEL MethodDeclaration", "DEL TextElement: Copy the contents of another instance into this instance. ", "DEL Assignment: =", "DEL SimpleName: StringUtil", "DEL SimpleName: modifiedTime1", "DEL ParenthesizedExpression", "DEL SimpleName: status", "DEL SimpleName: e", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: put", "DEL FieldDeclaration", "DEL SimpleName: res", "DEL Modifier: final", "DEL FieldAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: HashSet", "DEL Block", "DEL SimpleName: STATUS_FETCH_REDIR_PERM", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL SimpleName: score1", "DEL SimpleName: hasFetchStatus", "DEL NumberLiteral: 0", "DEL SimpleName: fetchInterval", "DEL VariableDeclarationFragment", "DEL SimpleName: OLD_STATUS_FETCH_GONE", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: OLD_STATUS_FETCH_SUCCESS", "DEL SimpleType: CloneNotSupportedException", "DEL SimpleName: signature", "DEL VariableDeclarationFragment", "DEL SimpleName: buf", "DEL SimpleName: Writable", "DEL InfixExpression: -", "DEL SimpleName: STATUS_SIGNATURE", "DEL PrimitiveType: int", "DEL StringLiteral: \"linked\"", "DEL Modifier: public", "DEL NumberLiteral: 16", "DEL Initializer", "DEL SimpleName: OLD_STATUS_LINKED", "DEL NumberLiteral: 0x01", "DEL SimpleName: SCORE_OFFSET", "DEL NumberLiteral: 1", "DEL Block", "DEL IfStatement", "DEL InfixExpression: <", "DEL SimpleName: STATUS_DB_NOTMODIFIED", "DEL Modifier: static", "DEL ParameterizedType: HashSet<Entry<Writable,Writable>>", "DEL SimpleName: put", "DEL Assignment: =", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL SimpleName: status", "DEL SimpleName: StringBuilder", "DEL NumberLiteral: 1.0f", "DEL SimpleName: Byte", "DEL InfixExpression: +", "DEL SimpleName: signature", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleType: Writable", "DEL SimpleName: put", "DEL SimpleName: s2", "DEL SimpleName: getScore", "DEL SimpleName: o", "DEL Block", "DEL SimpleName: fetchTime", "DEL MethodInvocation", "DEL SimpleName: metaData", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: retries1", "DEL SimpleName: in", "DEL Modifier: private", "DEL StringLiteral: \"\\n\"", "DEL SingleVariableDeclaration", "DEL CastExpression", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: buf", "DEL ArrayType: byte[]", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL SimpleName: getValue", "DEL SimpleName: SignatureComparator", "DEL NullLiteral", "DEL Modifier: public", "DEL SimpleType: Object", "DEL SimpleName: set2", "DEL SimpleType: Entry", "DEL PrimitiveType: void", "DEL StringLiteral: \"fetch_redir_perm\"", "DEL ExpressionStatement", "DEL SimpleType: CrawlDatum", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ConditionalExpression", "DEL SimpleName: write", "DEL ReturnStatement", "DEL SimpleName: cnt", "DEL SimpleName: version", "DEL QualifiedName: other.fetchTime", "DEL SimpleName: STATUS_FETCH_RETRY", "DEL ExpressionStatement", "DEL StringLiteral: \"crawl_fetch\"", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: other", "DEL InfixExpression: >", "DEL SimpleName: sigl2", "DEL PrimitiveType: byte", "DEL SimpleName: round", "DEL MethodInvocation", "DEL SimpleName: RuntimeException", "DEL SimpleName: CloneNotSupportedException", "DEL Modifier: public", "DEL SimpleType: String", "DEL MethodDeclaration", "DEL SimpleName: define", "DEL SimpleName: readBoolean", "DEL TextElement: The number of bytes into a CrawlDatum that the score is stored. ", "DEL SimpleType: IOException", "DEL SimpleName: writeByte", "DEL SimpleName: cnt", "DEL SimpleName: Writable", "DEL ThisExpression", "DEL SimpleName: writeInt", "DEL MethodInvocation", "DEL NumberLiteral: 0x1f", "DEL QualifiedName: that.signature", "DEL SimpleName: signature", "DEL SimpleName: fetchInterval2", "DEL Assignment: =", "DEL FieldAccess", "DEL MethodDeclaration", "DEL StringLiteral: \"unknown\"", "DEL InfixExpression: &&", "DEL NumberLiteral: 4", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL Modifier: public", "DEL TagElement", "DEL ExpressionStatement", "DEL TextElement: Fetching permanently redirected to other page. ", "DEL SimpleName: out", "DEL SimpleName: STATUS_FETCH_SUCCESS", "DEL ThisExpression", "DEL SimpleName: b2", "DEL InfixExpression: !=", "DEL PrimitiveType: byte", "DEL SimpleName: modifiedTime", "DEL SimpleName: fetchTime2", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL Modifier: final", "DEL MethodInvocation", "DEL ThrowStatement", "DEL PrimitiveType: byte", "DEL SimpleName: fetchInterval", "DEL ThisExpression", "DEL StringLiteral: \"db_unfetched\"", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: readLong", "DEL SimpleName: i", "DEL PrimitiveType: byte", "DEL ParameterizedType: HashMap<Byte,Byte>", "DEL NumberLiteral: 1", "DEL PrimitiveType: int", "DEL SimpleName: s2", "DEL InfixExpression: <<", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL TypeLiteral", "DEL SimpleType: StringBuilder", "DEL SimpleName: s2", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL SimpleName: OLD_STATUS_DB_UNFETCHED", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL SimpleName: put", "DEL NumberLiteral: 4", "DEL SimpleName: score2", "DEL CatchClause", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL SimpleName: fetchInterval", "DEL SimpleName: b2", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SuperConstructorInvocation", "DEL Modifier: static", "DEL NullLiteral", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: getRetriesSinceFetch", "DEL Modifier: static", "DEL SimpleType: CrawlDatum", "DEL NumberLiteral: 5", "DEL MethodInvocation", "DEL SimpleName: score2", "DEL ParenthesizedExpression", "DEL SimpleName: STATUS_FETCH_RETRY", "DEL ExpressionStatement", "DEL SimpleName: score", "DEL SimpleName: CrawlDatum", "DEL SimpleName: HashSet", "DEL SingleVariableDeclaration", "DEL SimpleType: CrawlDatum", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL ParenthesizedExpression", "DEL SimpleName: Byte", "DEL StringLiteral: \"Modified time: \"", "DEL SimpleType: HashSet", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL PrimitiveType: int", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL SimpleName: CUR_VERSION", "DEL SimpleName: STATUS_DB_GONE", "DEL MethodInvocation", "DEL Modifier: public", "DEL Javadoc", "DEL SimpleName: Comparator", "DEL MethodInvocation", "DEL SimpleName: s1", "DEL SimpleName: readLong", "DEL SimpleName: setFetchTime", "DEL Modifier: final", "DEL SimpleName: put", "DEL ClassInstanceCreation", "DEL ArrayType: byte[]", "DEL SimpleName: Comparator", "DEL Assignment: =", "DEL FieldDeclaration", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: other", "DEL SimpleName: fetchInterval", "DEL SimpleName: append", "DEL SimpleName: res", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: STATUS_DB_MAX", "DEL SimpleName: version", "DEL SimpleName: setMetaData", "DEL SimpleName: b1", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: STATUS_DB_MAX", "DEL ForStatement", "DEL SimpleName: in", "DEL SimpleName: String", "DEL PrimitiveType: byte", "DEL FieldAccess", "DEL ExpressionStatement", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: PARSE_DIR_NAME", "DEL SimpleName: out", "DEL SimpleName: in", "DEL ArrayType: byte[]", "DEL FieldDeclaration", "DEL NumberLiteral: 4", "DEL Modifier: static", "DEL InfixExpression: >", "DEL SimpleName: Math", "DEL SimpleName: readInt", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL InfixExpression: !=", "DEL SimpleType: HashMap", "DEL TextElement: Page was successfully fetched and found not modified. ", "DEL SimpleType: Writable", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: mapWritable", "DEL NumberLiteral: 8", "DEL SimpleName: status", "DEL MethodDeclaration", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: modifiedTime", "DEL SimpleName: STATUS_INJECTED", "DEL MethodInvocation", "DEL SimpleName: s1", "DEL SimpleType: CrawlDatum", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL Modifier: final", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: fetchInterval1", "DEL SimpleType: String", "DEL NumberLiteral: 8", "DEL IfStatement", "DEL SimpleName: STATUS_DB_REDIR_TEMP", "DEL SimpleName: signature", "DEL Assignment: =", "DEL MethodDeclaration", "DEL PrimitiveType: long", "DEL SimpleName: oldToNew", "DEL FieldAccess", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL Modifier: final", "DEL ThisExpression", "DEL SimpleType: Byte", "DEL SimpleName: equals", "DEL TextElement: Fetching was successful. ", "DEL BooleanLiteral: false", "DEL SimpleName: CrawlDatum", "DEL SimpleName: fetchInterval", "DEL SimpleName: status", "DEL InfixExpression: <<", "DEL SimpleName: e", "DEL MethodDeclaration", "DEL Modifier: static", "DEL SimpleName: fetchInterval", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: metaData", "DEL QualifiedName: that.score", "DEL VariableDeclarationFragment", "DEL SimpleName: status", "DEL PrimitiveType: long", "DEL SimpleName: status", "DEL InfixExpression: -", "DEL SimpleType: RuntimeException", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: score", "DEL InfixExpression: ^", "DEL StringLiteral: \"\\n\"", "DEL TagElement", "DEL SimpleName: fetchTime2", "DEL PrefixExpression: -", "DEL SimpleName: s1", "DEL MethodInvocation", "DEL FieldAccess", "DEL ClassInstanceCreation", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleType: CrawlDatum", "DEL TextElement: Compatibility values for on-the-fly conversion from versions < 5. ", "DEL FieldAccess", "DEL NumberLiteral: 0x05", "DEL PrimitiveType: float", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: OLD_STATUS_FETCH_SUCCESS", "DEL InfixExpression: +", "DEL InfixExpression: >", "DEL MethodDeclaration", "DEL StringLiteral: \"Signature: \"", "DEL Modifier: final", "DEL Modifier: public", "DEL SimpleName: out", "DEL Assignment: =", "DEL SimpleName: retries1", "DEL SimpleName: in", "DEL Assignment: =", "DEL SimpleName: put", "DEL SimpleType: Entry", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL InfixExpression: >", "DEL SimpleName: score", "DEL SimpleName: MapWritable", "DEL ConditionalExpression", "DEL Modifier: public", "DEL ArrayAccess", "DEL FieldDeclaration", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL SimpleName: retries", "DEL TagElement", "DEL InfixExpression: <=", "DEL SimpleName: metaData", "DEL Modifier: public", "DEL Modifier: static", "DEL PrimitiveType: byte", "DEL SimpleName: STATUS_FETCH_MAX", "DEL SimpleName: Object", "DEL SimpleName: DataInput", "DEL NumberLiteral: 8", "DEL InfixExpression: <=", "DEL SingleVariableDeclaration", "DEL SimpleName: setModifiedTime", "DEL SimpleName: that", "DEL QualifiedName: other.fetchInterval", "DEL SimpleName: score", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: retries", "DEL FieldDeclaration", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL Modifier: final", "DEL SimpleName: sigl1", "DEL IfStatement", "DEL SimpleName: signature", "DEL SimpleName: signature", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL Block", "DEL ReturnStatement", "DEL Modifier: static", "DEL TagElement", "DEL MethodDeclaration", "DEL StringLiteral: \"crawl_parse\"", "DEL SimpleName: b2", "DEL TypeDeclaration: class", "DEL SimpleName: get", "DEL SimpleName: statNames", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: compare", "DEL NumberLiteral: 5", "DEL ThisExpression", "DEL SimpleName: DataOutput", "DEL Block", "DEL SimpleName: get", "DEL InfixExpression: >", "DEL IfStatement", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL SimpleName: out", "DEL ExpressionStatement", "DEL StringLiteral: \"Retry interval: \"", "DEL SimpleName: clone", "DEL SimpleName: getKey", "DEL SimpleName: STATUS_FETCH_NOTMODIFIED", "DEL VariableDeclarationStatement", "DEL SimpleName: status", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: Writable", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: fetchTime", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: IOException", "DEL FieldAccess", "DEL SimpleName: i", "DEL FieldAccess", "DEL MethodInvocation", "DEL Modifier: public", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: StringBuilder", "DEL Modifier: private", "DEL SimpleName: fetchInterval", "DEL InfixExpression: ==", "DEL Javadoc", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL TagElement", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: compare", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL StringLiteral: \" days)\\n\"", "DEL Modifier: static", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleType: Writable", "DEL SimpleName: status1", "DEL NumberLiteral: 0x22", "DEL NumberLiteral: 1", "DEL Modifier: private", "DEL PrimitiveType: long", "DEL SimpleName: retries2", "DEL CastExpression", "DEL InfixExpression: +", "DEL NumberLiteral: 0", "DEL SimpleName: version", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: round", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL Modifier: final", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: Entry", "DEL SimpleName: signature", "DEL SimpleName: OLD_STATUS_LINKED", "DEL Javadoc", "DEL SimpleName: floatToIntBits", "DEL PrimitiveType: byte", "DEL InfixExpression: &&", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL QualifiedName: datum.status", "DEL Block", "DEL FieldDeclaration", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL SimpleName: getFetchTime", "DEL TextElement: Sort by decreasing score. ", "DEL SimpleName: readFields", "DEL SimpleName: readLong", "DEL VariableDeclarationFragment", "DEL SimpleName: fetchInterval", "DEL SimpleName: getFetchInterval", "DEL Block", "DEL SimpleName: append", "DEL SimpleType: Writable", "DEL SimpleType: Comparator", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL TagElement", "DEL MethodInvocation", "DEL SimpleName: res", "DEL InfixExpression: +", "DEL SimpleName: entrySet", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL NumberLiteral: 1", "DEL SimpleName: STATUS_DB_GONE", "DEL SimpleName: retries", "DEL ParenthesizedExpression", "DEL QualifiedName: other.score", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleName: oldMetaData", "DEL Modifier: public", "DEL SimpleName: score", "DEL FieldAccess", "DEL SimpleName: readByte", "DEL Javadoc", "DEL TagElement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getFetchInterval", "DEL ConditionalExpression", "DEL SimpleType: Byte", "DEL ThisExpression", "DEL PrefixExpression: -", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL SimpleName: STATUS_DB_UNFETCHED", "DEL SimpleName: SCORE_OFFSET", "DEL FieldDeclaration", "DEL SimpleName: modifiedTime2", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: statNames", "DEL StringLiteral: \"db_gone\"", "DEL QualifiedName: that.retries", "DEL SimpleName: e", "DEL TextElement: Sets either the time of the last fetch or the next fetch time,", "DEL SimpleName: readInt", "DEL IfStatement", "DEL InfixExpression: +", "DEL StringLiteral: \"Fetch time: \"", "DEL SimpleName: out", "DEL TagElement", "DEL ExpressionStatement", "DEL InfixExpression: -", "DEL NumberLiteral: 1", "DEL PrimitiveType: int", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL SimpleName: SCORE_OFFSET", "DEL TextElement: Maximum value of DB-related status. ", "DEL ParenthesizedExpression", "DEL SimpleName: Entry", "DEL SimpleName: put", "DEL PrimitiveType: byte", "DEL Modifier: public", "DEL SimpleName: signature", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: writeByte", "DEL InfixExpression: +", "DEL PrimitiveType: int", "DEL TagElement", "DEL NumberLiteral: 1", "DEL SimpleName: retries", "DEL ThisExpression", "DEL Modifier: static", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL Assignment: =", "DEL MethodInvocation", "DEL TagElement", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: statNames", "DEL SimpleName: status", "DEL PrimitiveType: int", "DEL IfStatement", "DEL InfixExpression: !=", "DEL QualifiedName: that.status", "DEL SimpleName: retries2", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: in", "DEL Modifier: public", "DEL Modifier: static", "DEL Modifier: static", "DEL QualifiedName: that.score", "DEL SimpleName: fetchInterval", "DEL Modifier: static", "DEL SimpleName: SIG_OFFSET", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: Object", "DEL ClassInstanceCreation", "DEL Assignment: ^=", "DEL SimpleName: getStatus", "DEL SimpleName: fetchTime", "DEL FieldDeclaration", "DEL Javadoc", "DEL SimpleName: score", "DEL SimpleName: Writable", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL SimpleName: buf", "DEL SimpleName: out", "DEL Dimension", "DEL SimpleType: CrawlDatum", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: buf", "DEL IfStatement", "DEL SimpleName: append", "DEL SimpleName: res", "DEL SimpleName: Byte", "DEL SimpleName: signature", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL SimpleName: SIG_OFFSET", "DEL NumberLiteral: 2", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: WritableComparable", "DEL SimpleName: res", "DEL NumberLiteral: 8", "DEL Modifier: private", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL SimpleType: Writable", "DEL ReturnStatement", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleType: CrawlDatum", "DEL PrimitiveType: long", "DEL SimpleName: STATUS_FETCH_SUCCESS", "DEL SimpleType: HashSet", "DEL MethodDeclaration", "DEL QualifiedName: other.status", "DEL NumberLiteral: 1", "DEL PrimitiveType: byte", "DEL InfixExpression: +", "DEL SimpleName: mapWritable", "DEL SimpleName: getKey", "DEL ConstructorInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: b1", "DEL SimpleName: retries", "DEL InfixExpression: !=", "DEL Block", "DEL TagElement", "DEL NumberLiteral: 0", "DEL ThisExpression", "DEL MethodInvocation", "DEL IfStatement", "DEL Block", "DEL SimpleName: b2", "DEL SimpleName: Entry", "DEL PrimitiveType: float", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL Modifier: final", "DEL SimpleName: CrawlDatum", "DEL SimpleName: b2", "DEL IfStatement", "DEL SimpleName: status1", "DEL Javadoc", "DEL SimpleName: metaData", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: e", "DEL SimpleName: readByte", "DEL PrefixExpression: -", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: in", "DEL SimpleName: signature", "DEL Assignment: =", "DEL Assignment: =", "DEL NumberLiteral: 1", "DEL NumberLiteral: 4", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleName: fetchInterval1", "DEL NumberLiteral: 1", "DEL SimpleName: score", "DEL MethodInvocation", "DEL SimpleName: res", "DEL Modifier: static", "DEL Modifier: static", "DEL InfixExpression: !=", "DEL SimpleName: e", "DEL ConstructorInvocation", "DEL ArrayAccess", "DEL MethodInvocation", "DEL SimpleType: CrawlDatum", "DEL ExpressionStatement", "DEL SimpleName: Date", "DEL SimpleName: readFields", "DEL NumberLiteral: 1", "DEL NumberLiteral: 0x04", "DEL SimpleName: in", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: Writable", "DEL Modifier: public", "DEL Modifier: private", "DEL SimpleName: statNames", "DEL TextElement:  CrawlDatum", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: in", "DEL ArrayAccess", "DEL SimpleName: buf", "DEL Modifier: final", "DEL Modifier: final", "DEL InfixExpression: +", "DEL SimpleName: FETCH_DIR_NAME", "DEL TagElement", "DEL SimpleName: fetchInterval", "DEL MethodInvocation", "DEL QualifiedName: that.retries", "DEL NumberLiteral: 4", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL SimpleName: putAllMetaData", "DEL IfStatement", "DEL SimpleName: WritableComparator", "DEL SimpleName: toString", "DEL SimpleName: set1", "DEL SimpleType: Date", "DEL SimpleName: CrawlDatum", "DEL SimpleName: hashCode", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: metaData", "DEL ThisExpression", "DEL SimpleName: statNames", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL InfixExpression: -", "DEL SimpleName: Cloneable", "DEL NullLiteral", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: STATUS_DB_REDIR_PERM", "DEL SimpleName: l1", "DEL NumberLiteral: 8", "DEL SimpleType: Writable", "DEL SimpleType: DataOutput", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"Metadata: \"", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleType: MapWritable", "DEL SimpleName: e", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL ClassInstanceCreation", "DEL PrimitiveType: byte", "DEL SimpleName: modifiedTime2", "DEL Assignment: =", "DEL SimpleName: modifiedTime", "DEL Modifier: public", "DEL PrimitiveType: byte", "DEL SimpleName: buf", "DEL SimpleName: fetchInterval2", "DEL TagElement", "DEL SimpleName: append", "DEL Modifier: private", "DEL IfStatement", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: put", "DEL ReturnStatement", "DEL StringLiteral: \"Retries since fetch: \"", "DEL Modifier: final", "DEL ExpressionStatement", "DEL TextElement: Page discovered through a link. ", "DEL Assignment: =", "DEL ExpressionStatement", "DEL StringLiteral: \"Status: \"", "DEL VariableDeclarationFragment", "DEL SimpleName: writeBoolean", "DEL PrimitiveType: long", "DEL SimpleName: statNames", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL ArrayAccess", "DEL SimpleName: fetchInterval", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL Modifier: final", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL Assignment: ^=", "DEL InfixExpression: !=", "DEL SimpleName: signature", "DEL SimpleName: buf", "DEL SimpleName: getStatusName", "DEL SimpleName: fetchTime", "DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: readBoolean", "DEL ThisExpression", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL Block", "DEL QualifiedName: that.score", "DEL VariableDeclarationFragment", "DEL SimpleType: HashMap", "DEL SimpleName: version", "DEL SimpleName: metaData", "DEL Block", "DEL SimpleName: in", "DEL SimpleName: i", "DEL PrimitiveType: float", "DEL FieldAccess", "DEL SimpleName: keySet", "DEL ExpressionStatement", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleName: CUR_VERSION", "DEL ThisExpression", "DEL SimpleName: CUR_VERSION", "DEL InfixExpression: -", "DEL FieldDeclaration", "DEL SimpleName: fetchTime2", "DEL SimpleName: put", "DEL QualifiedName: other.modifiedTime", "DEL InfixExpression: -", "DEL FieldDeclaration", "DEL NumberLiteral: 0x03", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: SignatureComparator", "DEL SimpleName: Entry", "DEL Modifier: static", "DEL SimpleName: DataInput", "DEL Modifier: public", "DEL SimpleName: readFully", "DEL NumberLiteral: 0", "DEL NumberLiteral: 2", "DEL PrefixExpression: -", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL ThisExpression", "DEL SimpleName: getStatus", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL MethodDeclaration", "DEL QualifiedName: that.fetchInterval", "DEL ThisExpression", "DEL ParameterizedType: HashSet<Entry<Writable,Writable>>", "DEL NullLiteral", "DEL Assignment: =", "DEL QualifiedName: signature.length", "DEL ParenthesizedExpression", "DEL SimpleName: fetchTime", "DEL SimpleName: status", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL Assignment: =", "DEL Javadoc", "DEL SimpleName: fetchInterval", "DEL MethodDeclaration", "DEL SimpleName: OLD_STATUS_FETCH_RETRY", "DEL SimpleName: STATUS_FETCH_SUCCESS", "DEL FieldAccess", "DEL NumberLiteral: 256", "DEL ParenthesizedExpression", "DEL FieldDeclaration", "DEL Modifier: public", "DEL StringLiteral: \" seconds (\"", "DEL QualifiedName: that.status", "DEL PrimitiveType: int", "DEL IfStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL SimpleName: put", "DEL Modifier: private", "DEL SimpleName: CrawlDatum", "DEL SimpleName: res", "DEL SimpleName: status1", "DEL VariableDeclarationStatement", "DEL SimpleName: s1", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: status", "DEL SimpleName: entrySet", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL EnhancedForStatement", "DEL SimpleName: put", "DEL QualifiedName: other.metaData", "DEL Modifier: public", "DEL FieldAccess", "DEL ExpressionStatement", "DEL NumberLiteral: 3", "DEL ReturnStatement", "DEL NumberLiteral: 1", "DEL SimpleType: Byte", "DEL SimpleType: String", "DEL SimpleName: oldMetaData", "DEL SimpleName: readByte", "DEL Modifier: static", "DEL SimpleName: HashMap", "DEL ExpressionStatement", "DEL Modifier: static", "DEL InfixExpression: +", "DEL Javadoc", "DEL InfixExpression: -", "DEL SimpleName: STATUS_FETCH_GONE", "DEL Block", "DEL Dimension", "DEL MethodInvocation", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL Block", "DEL SimpleName: RuntimeException", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL TextElement: Returns either the time of the last fetch, or the next fetch time,", "DEL SimpleType: StringBuilder", "DEL StringLiteral: \"fetch_gone\"", "DEL NumberLiteral: 0x25", "DEL SimpleName: b1", "DEL SimpleName: OLD_STATUS_FETCH_RETRY", "DEL StringLiteral: \"fetch_notmodified\"", "DEL SimpleName: statNames", "DEL InfixExpression: ==", "DEL SimpleName: key", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL SimpleName: getSignature", "DEL TextElement: Page was successfully fetched. ", "DEL SimpleName: fetchInterval", "DEL PrimitiveType: boolean", "DEL SimpleName: status", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL QualifiedName: signature.length", "DEL SimpleName: modifiedTime", "DEL ReturnStatement", "DEL NumberLiteral: 0", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: Entry", "DEL SimpleName: readFloat", "DEL Initializer", "DEL NumberLiteral: 0x24", "DEL SimpleName: compareTo", "DEL SimpleType: Entry", "DEL SimpleName: CrawlDatum", "DEL SimpleName: STATUS_DB_FETCHED", "DEL Assignment: =", "DEL SimpleType: Entry", "DEL SimpleName: out", "DEL SimpleName: e", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL MethodInvocation", "DEL Block", "DEL ArrayAccess", "DEL NumberLiteral: 7", "DEL PrimitiveType: boolean", "DEL ThrowStatement", "DEL NumberLiteral: 8", "DEL SimpleName: s2", "DEL MethodInvocation", "DEL InstanceofExpression", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL Modifier: public", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: score", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL Modifier: public", "DEL Assignment: =", "DEL ThisExpression", "DEL NumberLiteral: 1", "DEL CastExpression", "DEL NumberLiteral: 1", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: WritableComparator", "DEL SimpleName: result", "DEL InfixExpression: >", "DEL TextElement: Page was newly injected. ", "DEL SimpleName: getModifiedTime", "DEL InfixExpression: !=", "DEL FieldAccess", "DEL NumberLiteral: 24", "DEL SingleVariableDeclaration", "DEL PrimitiveType: byte", "DEL StringLiteral: \"db_redir_perm\"", "DEL QualifiedName: FetchSchedule.SECONDS_PER_DAY", "DEL SimpleName: put", "DEL PrimitiveType: byte", "DEL Block", "DEL ThisExpression", "DEL SimpleName: MapWritable", "DEL QualifiedName: datum.status", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleType: HashMap", "DEL SimpleName: SCORE_OFFSET", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: score", "DEL TextElement: returns a MapWritable if it was set or read in @see readFields(DataInput), ", "DEL InfixExpression: !=", "DEL SimpleName: put", "DEL ReturnStatement", "DEL SimpleName: score1", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: fetchInterval", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: public", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL SimpleName: b1", "DEL SimpleName: get", "DEL ClassInstanceCreation", "DEL SimpleName: signature", "DEL IfStatement", "DEL Modifier: private", "DEL SimpleType: Writable", "DEL Assignment: =", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: Byte", "DEL SimpleName: oldToNew", "DEL StringLiteral: \"fetch_success\"", "DEL QualifiedName: that.fetchInterval", "DEL SimpleName: b2", "DEL SimpleType: CrawlDatum", "DEL SimpleType: String", "DEL SimpleName: statNames", "DEL SimpleType: Byte", "DEL MethodInvocation", "DEL SimpleType: VersionMismatchException", "DEL SimpleName: b1", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL NumberLiteral: 1", "DEL SimpleName: fetchInterval", "DEL SimpleName: getScore", "DEL Modifier: static", "DEL SimpleName: STATUS_FETCH_NOTMODIFIED", "DEL IfStatement", "DEL NumberLiteral: 1", "DEL FieldDeclaration", "DEL Block", "DEL SimpleName: statNames", "DEL InfixExpression: >", "DEL SimpleName: modifiedTime", "DEL SimpleName: oldToNew", "DEL SimpleName: res", "DEL Block", "DEL SimpleName: status", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: oldToNew", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL Javadoc", "DEL SimpleName: metaData", "DEL SimpleName: signature", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL FieldAccess", "DEL Modifier: final", "DEL SimpleName: buf", "DEL MethodDeclaration", "DEL SimpleName: datum", "DEL InfixExpression: !=", "DEL ThisExpression", "DEL SimpleName: b2", "DEL NumberLiteral: 1", "DEL SimpleName: STATUS_DB_MAX", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL SimpleName: signature", "DEL SimpleType: Writable", "DEL Modifier: static", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL EnhancedForStatement", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL SimpleName: append", "DEL MethodDeclaration", "DEL Modifier: final", "DEL InfixExpression: /", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 1", "DEL NullLiteral", "DEL SimpleName: oldToNew", "DEL Modifier: static", "DEL SimpleName: CUR_VERSION", "DEL NumberLiteral: 1", "DEL Assignment: =", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL SimpleName: fetchTime", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL SimpleName: s1", "DEL Block", "DEL SimpleName: s1", "DEL NumberLiteral: 1", "DEL SimpleName: in", "DEL PrimitiveType: int", "DEL SimpleName: getMetaData", "DEL PrimitiveType: void", "DEL NumberLiteral: 5", "DEL SimpleName: HashMap", "DEL SimpleName: entrySet", "DEL FieldAccess", "DEL SimpleType: Date", "DEL MethodDeclaration", "DEL SimpleName: append", "DEL SimpleName: modifiedTime2", "DEL StringLiteral: \"injected\"", "DEL SimpleName: fetchInterval", "DEL NumberLiteral: 1", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL SimpleName: OLD_STATUS_DB_FETCHED", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: SIG_OFFSET", "DEL Modifier: public", "DEL SimpleName: OLD_STATUS_SIGNATURE", "DEL SimpleName: modifiedTime", "DEL Modifier: private", "DEL InfixExpression: >", "DEL FieldAccess", "DEL Javadoc", "DEL Modifier: private", "DEL Block", "DEL SimpleName: status", "DEL SimpleType: WritableComparator", "DEL Modifier: static", "DEL SimpleName: that", "DEL CastExpression", "DEL Javadoc", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: public", "DEL ParameterizedType: Entry<Writable,Writable>", "DEL TextElement: returns empty map in case CrawlDatum was freshly created (lazily instantiated).", "DEL ReturnStatement", "DEL ThisExpression", "DEL SimpleName: metaData", "DEL SimpleName: signature", "DEL SimpleName: STATUS_LINKED", "DEL StringLiteral: \"db_redir_temp\"", "DEL InfixExpression: ==", "DEL NumberLiteral: 3", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL TagElement", "DEL SimpleName: fetchTime", "DEL SimpleName: res", "DEL SimpleName: signature", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: score", "DEL FieldDeclaration", "DEL Javadoc", "DEL SimpleName: status", "DEL SimpleName: CrawlDatum", "DEL SimpleName: statNames", "DEL Javadoc", "DEL SimpleName: readFloat", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: buf", "DEL StringLiteral: \": \"", "DEL Modifier: static", "DEL SimpleType: DataInput", "DEL SimpleName: Writable", "DEL PrimitiveType: void", "DEL ArrayAccess", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: out", "DEL IfStatement", "DEL Block", "DEL SimpleName: in", "DEL NumberLiteral: 0x23", "DEL SimpleName: s1", "DEL Block", "DEL SimpleName: value", "DEL FieldAccess", "DEL SimpleName: status2", "DEL SimpleName: b2", "DEL SimpleName: toHexString", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL Block", "DEL NumberLiteral: 0x42", "DEL SimpleName: in", "DEL SimpleName: Writable", "DEL Modifier: static", "DEL SimpleName: IOException", "DEL InfixExpression: >", "DEL SimpleName: getStatusName", "DEL FieldDeclaration", "DEL InfixExpression: +", "DEL InfixExpression: >", "DEL Block", "DEL StringLiteral: \"fetch_retry\"", "DEL SimpleName: oldToNew", "DEL SimpleType: MapWritable", "DEL SimpleName: fetchTime", "DEL Javadoc", "DEL ArrayAccess", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: res", "DEL Block", "DEL MethodInvocation", "DEL Modifier: final", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: version", "DEL ParameterizedType: HashSet<Entry<Writable,Writable>>", "DEL FieldAccess", "DEL SimpleName: fetchInterval", "DEL SimpleName: getValue", "DEL SimpleName: metadataEquals", "DEL PrimitiveType: byte", "DEL Modifier: private", "DEL InfixExpression: ==", "DEL PrimitiveType: void", "DEL SimpleName: fetchInterval", "DEL Modifier: public", "DEL QualifiedName: that.retries", "DEL PrefixExpression: !", "DEL SimpleName: OLD_STATUS_DB_FETCHED", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: getModifiedTime", "DEL ExpressionStatement", "DEL SimpleName: fetchTime1", "DEL ConditionalExpression", "DEL SimpleName: buf", "DEL ExpressionStatement", "DEL StringLiteral: \")\\n\"", "DEL ReturnStatement", "DEL SimpleName: readLong", "DEL SimpleName: writeLong", "DEL ClassInstanceCreation", "DEL SimpleName: readLong", "DEL SimpleName: readFields", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL TextElement: Page no longer exists. ", "DEL Assignment: =", "DEL PrimitiveType: byte", "DEL SimpleName: modifiedTime", "DEL ArrayType: byte[]", "DEL InfixExpression: !=", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleType: HashSet", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: CrawlDatum", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: put", "DEL IfStatement", "DEL InfixExpression: ==", "DEL ReturnStatement", "DEL Modifier: final", "DEL IfStatement", "DEL SimpleName: SCORE_OFFSET", "DEL TagElement: @param", "DEL SimpleName: version", "DEL SingleVariableDeclaration", "DEL PrefixExpression: !", "DEL SimpleName: signature", "DEL BooleanLiteral: true", "DEL Modifier: private", "DEL NumberLiteral: 0x06", "DEL SimpleName: put", "DEL PrimitiveType: float", "DEL InfixExpression: -", "DEL SimpleName: fetchInterval2", "DEL ThisExpression", "DEL SimpleName: fetchTime", "DEL InfixExpression: !=", "DEL PrimitiveType: byte", "DEL SuperMethodInvocation", "DEL SimpleName: CrawlDatum", "DEL SimpleName: CrawlDatum", "DEL MethodInvocation", "DEL SimpleName: out", "DEL SimpleName: setScore", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Modifier: private", "DEL QualifiedName: other.retries", "DEL NumberLiteral: 7", "DEL Assignment: =", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: version", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: b2", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL FieldAccess", "DEL NumberLiteral: 0x02", "DEL ExpressionStatement", "DEL SimpleName: set1", "DEL PrimitiveType: void", "DEL IfStatement", "DEL ExpressionStatement", "DEL InfixExpression: >", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL SimpleName: sigl2", "DEL FieldDeclaration", "DEL ThisExpression", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL PrefixExpression: -", "DEL Modifier: public", "DEL SimpleName: STATUS_LINKED", "DEL Modifier: public", "DEL SimpleName: b1", "DEL PrimitiveType: void", "DEL TagElement", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL MethodDeclaration", "DEL NullLiteral", "DEL FieldDeclaration", "DEL SimpleName: metaData", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL NumberLiteral: 0x26", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL CharacterLiteral: '\\n'", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: append", "DEL Modifier: final", "DEL PrefixExpression: -", "DEL PrimitiveType: byte", "DEL SimpleName: STATUS_DB_FETCHED", "DEL SimpleName: readLong", "DEL SimpleName: append", "DEL InfixExpression: >", "DEL NumberLiteral: 0", "DEL SimpleType: Writable", "DEL SimpleName: getFetchTime", "DEL ArrayCreation", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL Dimension", "DEL Modifier: final", "DEL SimpleType: Byte", "DEL SimpleName: _compare", "DEL ReturnStatement", "DEL SimpleName: STATUS_DB_GONE", "DEL SimpleName: s2", "DEL PrimitiveType: int", "DEL Modifier: static", "DEL PrimitiveType: int", "DEL SimpleName: Writable", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"Version: \"", "DEL SimpleName: retries", "DEL SimpleName: cnt", "DEL SimpleName: GENERATE_DIR_NAME", "DEL SimpleName: VersionMismatchException", "DEL SimpleName: STATUS_FETCH_GONE", "DEL SimpleName: fetchInterval", "DEL MethodInvocation", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL Modifier: static", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: b1", "DEL Dimension", "DEL ThisExpression", "DEL SimpleName: setSignature", "DEL QualifiedName: that.modifiedTime", "DEL MethodDeclaration", "DEL SimpleName: retries", "DEL SimpleName: fetchTime1", "DEL VariableDeclarationFragment", "DEL Dimension", "DEL ParenthesizedExpression", "DEL SimpleName: equals", "DEL Assignment: =", "DEL PrimitiveType: boolean", "DEL SimpleName: retries", "DEL SimpleName: write", "DEL ExpressionStatement", "DEL InfixExpression: <<", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL SimpleType: CrawlDatum", "DEL SimpleName: fetchInterval1", "DEL InfixExpression: !=", "DEL SimpleName: b1", "DEL MethodDeclaration", "DEL SimpleName: currentTimeMillis", "DEL PrimitiveType: float", "DEL SimpleName: OLD_STATUS_DB_UNFETCHED", "DEL SimpleName: modifiedTime", "DEL SimpleName: entrySet", "DEL PrimitiveType: int", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: fetchTime", "DEL SimpleName: OLD_STATUS_DB_GONE", "DEL SimpleName: writeBoolean", "DEL SimpleName: CrawlDatum", "DEL ArrayType: byte[]", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: String", "DEL PrimitiveType: byte", "DEL SimpleName: value", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL MethodInvocation", "DEL SimpleName: Byte", "DEL NumberLiteral: 1", "DEL VariableDeclarationFragment", "DEL SimpleName: Float", "DEL PrimitiveType: byte", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: statNames", "DEL NumberLiteral: 0x43", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: metaData", "DEL MethodInvocation", "DEL SimpleName: buf", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: statNames", "DEL SimpleName: writeFloat", "DEL FieldAccess", "DEL PrimitiveType: void", "DEL SimpleType: Object", "DEL ThisExpression", "DEL IfStatement", "DEL MethodInvocation", "DEL StringLiteral: \"crawl_generate\"", "DEL FieldAccess", "DEL ThisExpression", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: SIG_OFFSET", "DEL SimpleName: modifiedTime", "DEL SimpleType: Byte", "DEL QualifiedName: that.modifiedTime", "DEL SimpleName: STATUS_FETCH_REDIR_PERM", "DEL Modifier: final", "DEL SimpleName: buf", "DEL Assignment: =", "DEL SimpleName: CUR_VERSION", "DEL Modifier: static", "DEL Block", "DEL SimpleName: hashCode", "DEL PrimitiveType: byte", "DEL SimpleName: setFetchInterval", "DEL PrimitiveType: boolean", "DEL SimpleName: Entry", "DEL PrimitiveType: byte", "DEL SimpleName: HashMap", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL PrimitiveType: byte", "DEL IfStatement", "DEL SimpleName: score", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: signature", "DEL Block", "DEL SimpleName: STATUS_INJECTED", "DEL ParenthesizedExpression", "DEL NumberLiteral: 6", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL SimpleName: status2", "DEL SimpleType: RuntimeException", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL TextElement: Fetching unsuccessful, needs to be retried (transient errors). ", "DEL SimpleName: OLD_STATUS_DB_GONE", "DEL SimpleName: readByte", "DEL IfStatement", "DEL TextElement: depending on whether Fetcher or CrawlDbReducer set the time.", "DEL Modifier: public", "DEL SimpleName: score", "DEL SimpleName: readInt", "DEL SimpleName: CrawlDatum", "DEL NumberLiteral: 0x41", "DEL SimpleName: metaData", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL NumberLiteral: 0", "DEL InfixExpression: -", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL SimpleName: Date", "DEL FieldAccess", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: getStatus", "DEL TagElement", "DEL SimpleName: otherMetaData", "DEL Modifier: static", "DEL QualifiedName: that.status", "DEL SimpleName: modifiedTime", "DEL MethodDeclaration", "DEL SimpleName: setFetchInterval", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: STATUS_DB_UNFETCHED", "DEL SimpleName: key", "DEL SimpleName: Comparator", "DEL VariableDeclarationStatement", "DEL InfixExpression: /", "DEL PrefixExpression: -", "DEL SimpleType: Cloneable", "DEL MethodInvocation", "DEL SimpleName: Math", "DEL SimpleName: STATUS_FETCH_REDIR_TEMP", "DEL SingleVariableDeclaration", "DEL SimpleName: read", "DEL SimpleName: STATUS_FETCH_REDIR_TEMP", "DEL PrimitiveType: float", "DEL ParameterizedType: HashSet<Entry<Writable,Writable>>", "DEL Modifier: public", "DEL ParameterizedType: HashMap<Byte,String>", "DEL ThisExpression", "DEL ExpressionStatement", "DEL PrimitiveType: long", "DEL SimpleName: fetchInterval", "DEL VariableDeclarationFragment", "DEL SimpleName: clone", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: retries2", "DEL SimpleName: retries", "DEL SimpleName: in", "DEL SimpleName: getRetriesSinceFetch", "DEL SimpleName: OLD_STATUS_SIGNATURE", "DEL SimpleName: statNames", "DEL StringLiteral: \"db_notmodified\"", "DEL QualifiedName: that.fetchInterval", "DEL MethodInvocation", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: hasDbStatus", "DEL Block", "DEL SimpleName: fetchTime", "DEL SimpleName: modifiedTime1", "DEL SimpleName: score2", "DEL SimpleName: metaData", "DEL SimpleName: modifiedTime", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleType: org.apache.hadoop.io.MapWritable", "DEL SimpleName: write", "DEL SimpleName: STATUS_SIGNATURE", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL SimpleName: other", "DEL Javadoc", "DEL NumberLiteral: 2", "DEL PrefixExpression: -", "DEL SimpleName: in", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL SimpleName: Byte", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: metaData", "DEL SimpleName: Writable", "DEL SimpleName: datum", "DEL SimpleType: CrawlDatum", "DEL SimpleName: i", "DEL SimpleName: setRetriesSinceFetch", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleType: Entry", "DEL TextElement: A Comparator optimized for CrawlDatum. ", "DEL ThisExpression", "DEL SimpleName: CrawlDatum", "DEL ArrayAccess", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL SimpleType: HashMap", "DEL VariableDeclarationFragment", "DEL SimpleName: Writable", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: s2", "DEL PrimitiveType: byte", "DEL SimpleName: oldToNew", "DEL SimpleName: CrawlDatum", "DEL QualifiedName: datum.status", "DEL TextElement: Maximum value of fetch-related status. ", "DEL SimpleName: buf", "DEL ParenthesizedExpression", "DEL InfixExpression: >", "DEL SimpleName: oldMetaData", "DEL Block", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: oldMetaData", "DEL SimpleName: setStatus", "DEL ThisExpression", "DEL SimpleName: put", "DEL SimpleName: other", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleName: append"]}]}}, {"CrawlDatum_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one or more(0)", "Delete TextElement: contributor license agreements.  See the NOTICE file distributed with(1)", "Delete TextElement: this work for additional information regarding copyright ownership.(2)", "Delete TextElement: The ASF licenses this file to You under the Apache License, Version 2.0(3)", "Delete TextElement: (the \"License\"); you may not use this file except in compliance with(4)", "Delete TextElement: the License.  You may obtain a copy of the License at(5)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(6)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(7)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(8)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(9)", "Delete TextElement: See the License for the specific language governing permissions and(10)", "Delete TextElement: limitations under the License.(11)", "Delete TagElement(12)", "Delete Javadoc(13)", "Delete QualifiedName: org.apache.nutch.crawl(14)", "Delete PackageDeclaration(15)", "Delete QualifiedName: java.io(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.util(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Map.Entry(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.io(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.nutch.util(24)", "Delete ImportDeclaration(25)", "Delete Modifier: public(26)", "Delete SimpleName: CrawlDatum(27)", "Delete SimpleName: WritableComparable(28)", "Delete SimpleType: WritableComparable(29)", "Delete SimpleName: CrawlDatum(30)", "Delete SimpleType: CrawlDatum(31)", "Delete ParameterizedType: WritableComparable<CrawlDatum>(32)", "Delete SimpleName: Cloneable(33)", "Delete SimpleType: Cloneable(34)", "Delete Modifier: public(35)", "Delete Modifier: static(36)", "Delete Modifier: final(37)", "Delete SimpleName: String(38)", "Delete SimpleType: String(39)", "Delete SimpleName: GENERATE_DIR_NAME(40)", "Delete StringLiteral: \"crawl_generate\"(41)", "Delete VariableDeclarationFragment(42)", "Delete FieldDeclaration(43)", "Delete Modifier: public(44)", "Delete Modifier: static(45)", "Delete Modifier: final(46)", "Delete SimpleName: String(47)", "Delete SimpleType: String(48)", "Delete SimpleName: FETCH_DIR_NAME(49)", "Delete StringLiteral: \"crawl_fetch\"(50)", "Delete VariableDeclarationFragment(51)", "Delete FieldDeclaration(52)", "Delete Modifier: public(53)", "Delete Modifier: static(54)", "Delete Modifier: final(55)", "Delete SimpleName: String(56)", "Delete SimpleType: String(57)", "Delete SimpleName: PARSE_DIR_NAME(58)", "Delete StringLiteral: \"crawl_parse\"(59)", "Delete VariableDeclarationFragment(60)", "Delete FieldDeclaration(61)", "Delete Modifier: private(62)", "Delete Modifier: final(63)", "Delete Modifier: static(64)", "Delete PrimitiveType: byte(65)", "Delete SimpleName: CUR_VERSION(66)", "Delete NumberLiteral: 7(67)", "Delete VariableDeclarationFragment(68)", "Delete FieldDeclaration(69)", "Delete TextElement: Compatibility values for on-the-fly conversion from versions < 5. (70)", "Delete TagElement(71)", "Delete Javadoc(72)", "Delete Modifier: private(73)", "Delete Modifier: static(74)", "Delete Modifier: final(75)", "Delete PrimitiveType: byte(76)", "Delete SimpleName: OLD_STATUS_SIGNATURE(77)", "Delete NumberLiteral: 0(78)", "Delete VariableDeclarationFragment(79)", "Delete FieldDeclaration(80)", "Delete Modifier: private(81)", "Delete Modifier: static(82)", "Delete Modifier: final(83)", "Delete PrimitiveType: byte(84)", "Delete SimpleName: OLD_STATUS_DB_UNFETCHED(85)", "Delete NumberLiteral: 1(86)", "Delete VariableDeclarationFragment(87)", "Delete FieldDeclaration(88)", "Delete Modifier: private(89)", "Delete Modifier: static(90)", "Delete Modifier: final(91)", "Delete PrimitiveType: byte(92)", "Delete SimpleName: OLD_STATUS_DB_FETCHED(93)", "Delete NumberLiteral: 2(94)", "Delete VariableDeclarationFragment(95)", "Delete FieldDeclaration(96)", "Delete Modifier: private(97)", "Delete Modifier: static(98)", "Delete Modifier: final(99)", "Delete PrimitiveType: byte(100)", "Delete SimpleName: OLD_STATUS_DB_GONE(101)", "Delete NumberLiteral: 3(102)", "Delete VariableDeclarationFragment(103)", "Delete FieldDeclaration(104)", "Delete Modifier: private(105)", "Delete Modifier: static(106)", "Delete Modifier: final(107)", "Delete PrimitiveType: byte(108)", "Delete SimpleName: OLD_STATUS_LINKED(109)", "Delete NumberLiteral: 4(110)", "Delete VariableDeclarationFragment(111)", "Delete FieldDeclaration(112)", "Delete Modifier: private(113)", "Delete Modifier: static(114)", "Delete Modifier: final(115)", "Delete PrimitiveType: byte(116)", "Delete SimpleName: OLD_STATUS_FETCH_SUCCESS(117)", "Delete NumberLiteral: 5(118)", "Delete VariableDeclarationFragment(119)", "Delete FieldDeclaration(120)", "Delete Modifier: private(121)", "Delete Modifier: static(122)", "Delete Modifier: final(123)", "Delete PrimitiveType: byte(124)", "Delete SimpleName: OLD_STATUS_FETCH_RETRY(125)", "Delete NumberLiteral: 6(126)", "Delete VariableDeclarationFragment(127)", "Delete FieldDeclaration(128)", "Delete Modifier: private(129)", "Delete Modifier: static(130)", "Delete Modifier: final(131)", "Delete PrimitiveType: byte(132)", "Delete SimpleName: OLD_STATUS_FETCH_GONE(133)", "Delete NumberLiteral: 7(134)", "Delete VariableDeclarationFragment(135)", "Delete FieldDeclaration(136)", "Delete Modifier: private(137)", "Delete Modifier: static(138)", "Delete SimpleName: HashMap(139)", "Delete SimpleType: HashMap(140)", "Delete SimpleName: Byte(141)", "Delete SimpleType: Byte(142)", "Delete SimpleName: Byte(143)", "Delete SimpleType: Byte(144)", "Delete ParameterizedType: HashMap<Byte,Byte>(145)", "Delete SimpleName: oldToNew(146)", "Delete SimpleName: HashMap(147)", "Delete SimpleType: HashMap(148)", "Delete SimpleName: Byte(149)", "Delete SimpleType: Byte(150)", "Delete SimpleName: Byte(151)", "Delete SimpleType: Byte(152)", "Delete ParameterizedType: HashMap<Byte,Byte>(153)", "Delete ClassInstanceCreation(154)", "Delete VariableDeclarationFragment(155)", "Delete FieldDeclaration(156)", "Delete TextElement: Page was not fetched yet. (157)", "Delete TagElement(158)", "Delete Javadoc(159)", "Delete Modifier: public(160)", "Delete Modifier: static(161)", "Delete Modifier: final(162)", "Delete PrimitiveType: byte(163)", "Delete SimpleName: STATUS_DB_UNFETCHED(164)", "Delete NumberLiteral: 0x01(165)", "Delete VariableDeclarationFragment(166)", "Delete FieldDeclaration(167)", "Delete TextElement: Page was successfully fetched. (168)", "Delete TagElement(169)", "Delete Javadoc(170)", "Delete Modifier: public(171)", "Delete Modifier: static(172)", "Delete Modifier: final(173)", "Delete PrimitiveType: byte(174)", "Delete SimpleName: STATUS_DB_FETCHED(175)", "Delete NumberLiteral: 0x02(176)", "Delete VariableDeclarationFragment(177)", "Delete FieldDeclaration(178)", "Delete TextElement: Page no longer exists. (179)", "Delete TagElement(180)", "Delete Javadoc(181)", "Delete Modifier: public(182)", "Delete Modifier: static(183)", "Delete Modifier: final(184)", "Delete PrimitiveType: byte(185)", "Delete SimpleName: STATUS_DB_GONE(186)", "Delete NumberLiteral: 0x03(187)", "Delete VariableDeclarationFragment(188)", "Delete FieldDeclaration(189)", "Delete TextElement: Page temporarily redirects to other page. (190)", "Delete TagElement(191)", "Delete Javadoc(192)", "Delete Modifier: public(193)", "Delete Modifier: static(194)", "Delete Modifier: final(195)", "Delete PrimitiveType: byte(196)", "Delete SimpleName: STATUS_DB_REDIR_TEMP(197)", "Delete NumberLiteral: 0x04(198)", "Delete VariableDeclarationFragment(199)", "Delete FieldDeclaration(200)", "Delete TextElement: Page permanently redirects to other page. (201)", "Delete TagElement(202)", "Delete Javadoc(203)", "Delete Modifier: public(204)", "Delete Modifier: static(205)", "Delete Modifier: final(206)", "Delete PrimitiveType: byte(207)", "Delete SimpleName: STATUS_DB_REDIR_PERM(208)", "Delete NumberLiteral: 0x05(209)", "Delete VariableDeclarationFragment(210)", "Delete FieldDeclaration(211)", "Delete TextElement: Page was successfully fetched and found not modified. (212)", "Delete TagElement(213)", "Delete Javadoc(214)", "Delete Modifier: public(215)", "Delete Modifier: static(216)", "Delete Modifier: final(217)", "Delete PrimitiveType: byte(218)", "Delete SimpleName: STATUS_DB_NOTMODIFIED(219)", "Delete NumberLiteral: 0x06(220)", "Delete VariableDeclarationFragment(221)", "Delete FieldDeclaration(222)", "Delete TextElement: Maximum value of DB-related status. (223)", "Delete TagElement(224)", "Delete Javadoc(225)", "Delete Modifier: public(226)", "Delete Modifier: static(227)", "Delete Modifier: final(228)", "Delete PrimitiveType: byte(229)", "Delete SimpleName: STATUS_DB_MAX(230)", "Delete NumberLiteral: 0x1f(231)", "Delete VariableDeclarationFragment(232)", "Delete FieldDeclaration(233)", "Delete TextElement: Fetching was successful. (234)", "Delete TagElement(235)", "Delete Javadoc(236)", "Delete Modifier: public(237)", "Delete Modifier: static(238)", "Delete Modifier: final(239)", "Delete PrimitiveType: byte(240)", "Delete SimpleName: STATUS_FETCH_SUCCESS(241)", "Delete NumberLiteral: 0x21(242)", "Delete VariableDeclarationFragment(243)", "Delete FieldDeclaration(244)", "Delete TextElement: Fetching unsuccessful, needs to be retried (transient errors). (245)", "Delete TagElement(246)", "Delete Javadoc(247)", "Delete Modifier: public(248)", "Delete Modifier: static(249)", "Delete Modifier: final(250)", "Delete PrimitiveType: byte(251)", "Delete SimpleName: STATUS_FETCH_RETRY(252)", "Delete NumberLiteral: 0x22(253)", "Delete VariableDeclarationFragment(254)", "Delete FieldDeclaration(255)", "Delete TextElement: Fetching temporarily redirected to other page. (256)", "Delete TagElement(257)", "Delete Javadoc(258)", "Delete Modifier: public(259)", "Delete Modifier: static(260)", "Delete Modifier: final(261)", "Delete PrimitiveType: byte(262)", "Delete SimpleName: STATUS_FETCH_REDIR_TEMP(263)", "Delete NumberLiteral: 0x23(264)", "Delete VariableDeclarationFragment(265)", "Delete FieldDeclaration(266)", "Delete TextElement: Fetching permanently redirected to other page. (267)", "Delete TagElement(268)", "Delete Javadoc(269)", "Delete Modifier: public(270)", "Delete Modifier: static(271)", "Delete Modifier: final(272)", "Delete PrimitiveType: byte(273)", "Delete SimpleName: STATUS_FETCH_REDIR_PERM(274)", "Delete NumberLiteral: 0x24(275)", "Delete VariableDeclarationFragment(276)", "Delete FieldDeclaration(277)", "Delete TextElement: Fetching unsuccessful - page is gone. (278)", "Delete TagElement(279)", "Delete Javadoc(280)", "Delete Modifier: public(281)", "Delete Modifier: static(282)", "Delete Modifier: final(283)", "Delete PrimitiveType: byte(284)", "Delete SimpleName: STATUS_FETCH_GONE(285)", "Delete NumberLiteral: 0x25(286)", "Delete VariableDeclarationFragment(287)", "Delete FieldDeclaration(288)", "Delete TextElement: Fetching successful - page is not modified. (289)", "Delete TagElement(290)", "Delete Javadoc(291)", "Delete Modifier: public(292)", "Delete Modifier: static(293)", "Delete Modifier: final(294)", "Delete PrimitiveType: byte(295)", "Delete SimpleName: STATUS_FETCH_NOTMODIFIED(296)", "Delete NumberLiteral: 0x26(297)", "Delete VariableDeclarationFragment(298)", "Delete FieldDeclaration(299)", "Delete TextElement: Maximum value of fetch-related status. (300)", "Delete TagElement(301)", "Delete Javadoc(302)", "Delete Modifier: public(303)", "Delete Modifier: static(304)", "Delete Modifier: final(305)", "Delete PrimitiveType: byte(306)", "Delete SimpleName: STATUS_FETCH_MAX(307)", "Delete NumberLiteral: 0x3f(308)", "Delete VariableDeclarationFragment(309)", "Delete FieldDeclaration(310)", "Delete TextElement: Page signature. (311)", "Delete TagElement(312)", "Delete Javadoc(313)", "Delete Modifier: public(314)", "Delete Modifier: static(315)", "Delete Modifier: final(316)", "Delete PrimitiveType: byte(317)", "Delete SimpleName: STATUS_SIGNATURE(318)", "Delete NumberLiteral: 0x41(319)", "Delete VariableDeclarationFragment(320)", "Delete FieldDeclaration(321)", "Delete TextElement: Page was newly injected. (322)", "Delete TagElement(323)", "Delete Javadoc(324)", "Delete Modifier: public(325)", "Delete Modifier: static(326)", "Delete Modifier: final(327)", "Delete PrimitiveType: byte(328)", "Delete SimpleName: STATUS_INJECTED(329)", "Delete NumberLiteral: 0x42(330)", "Delete VariableDeclarationFragment(331)", "Delete FieldDeclaration(332)", "Delete TextElement: Page discovered through a link. (333)", "Delete TagElement(334)", "Delete Javadoc(335)", "Delete Modifier: public(336)", "Delete Modifier: static(337)", "Delete Modifier: final(338)", "Delete PrimitiveType: byte(339)", "Delete SimpleName: STATUS_LINKED(340)", "Delete NumberLiteral: 0x43(341)", "Delete VariableDeclarationFragment(342)", "Delete FieldDeclaration(343)", "Delete Modifier: public(344)", "Delete Modifier: static(345)", "Delete Modifier: final(346)", "Delete SimpleName: HashMap(347)", "Delete SimpleType: HashMap(348)", "Delete SimpleName: Byte(349)", "Delete SimpleType: Byte(350)", "Delete SimpleName: String(351)", "Delete SimpleType: String(352)", "Delete ParameterizedType: HashMap<Byte,String>(353)", "Delete SimpleName: statNames(354)", "Delete SimpleName: HashMap(355)", "Delete SimpleType: HashMap(356)", "Delete SimpleName: Byte(357)", "Delete SimpleType: Byte(358)", "Delete SimpleName: String(359)", "Delete SimpleType: String(360)", "Delete ParameterizedType: HashMap<Byte,String>(361)", "Delete ClassInstanceCreation(362)", "Delete VariableDeclarationFragment(363)", "Delete FieldDeclaration(364)", "Delete Modifier: static(365)", "Delete SimpleName: statNames(366)", "Delete SimpleName: put(367)", "Delete SimpleName: STATUS_DB_UNFETCHED(368)", "Delete StringLiteral: \"db_unfetched\"(369)", "Delete MethodInvocation(370)", "Delete ExpressionStatement(371)", "Delete SimpleName: statNames(372)", "Delete SimpleName: put(373)", "Delete SimpleName: STATUS_DB_FETCHED(374)", "Delete StringLiteral: \"db_fetched\"(375)", "Delete MethodInvocation(376)", "Delete ExpressionStatement(377)", "Delete SimpleName: statNames(378)", "Delete SimpleName: put(379)", "Delete SimpleName: STATUS_DB_GONE(380)", "Delete StringLiteral: \"db_gone\"(381)", "Delete MethodInvocation(382)", "Delete ExpressionStatement(383)", "Delete SimpleName: statNames(384)", "Delete SimpleName: put(385)", "Delete SimpleName: STATUS_DB_REDIR_TEMP(386)", "Delete StringLiteral: \"db_redir_temp\"(387)", "Delete MethodInvocation(388)", "Delete ExpressionStatement(389)", "Delete SimpleName: statNames(390)", "Delete SimpleName: put(391)", "Delete SimpleName: STATUS_DB_REDIR_PERM(392)", "Delete StringLiteral: \"db_redir_perm\"(393)", "Delete MethodInvocation(394)", "Delete ExpressionStatement(395)", "Delete SimpleName: statNames(396)", "Delete SimpleName: put(397)", "Delete SimpleName: STATUS_DB_NOTMODIFIED(398)", "Delete StringLiteral: \"db_notmodified\"(399)", "Delete MethodInvocation(400)", "Delete ExpressionStatement(401)", "Delete SimpleName: statNames(402)", "Delete SimpleName: put(403)", "Delete SimpleName: STATUS_SIGNATURE(404)", "Delete StringLiteral: \"signature\"(405)", "Delete MethodInvocation(406)", "Delete ExpressionStatement(407)", "Delete SimpleName: statNames(408)", "Delete SimpleName: put(409)", "Delete SimpleName: STATUS_INJECTED(410)", "Delete StringLiteral: \"injected\"(411)", "Delete MethodInvocation(412)", "Delete ExpressionStatement(413)", "Delete SimpleName: statNames(414)", "Delete SimpleName: put(415)", "Delete SimpleName: STATUS_LINKED(416)", "Delete StringLiteral: \"linked\"(417)", "Delete MethodInvocation(418)", "Delete ExpressionStatement(419)", "Delete SimpleName: statNames(420)", "Delete SimpleName: put(421)", "Delete SimpleName: STATUS_FETCH_SUCCESS(422)", "Delete StringLiteral: \"fetch_success\"(423)", "Delete MethodInvocation(424)", "Delete ExpressionStatement(425)", "Delete SimpleName: statNames(426)", "Delete SimpleName: put(427)", "Delete SimpleName: STATUS_FETCH_RETRY(428)", "Delete StringLiteral: \"fetch_retry\"(429)", "Delete MethodInvocation(430)", "Delete ExpressionStatement(431)", "Delete SimpleName: statNames(432)", "Delete SimpleName: put(433)", "Delete SimpleName: STATUS_FETCH_REDIR_TEMP(434)", "Delete StringLiteral: \"fetch_redir_temp\"(435)", "Delete MethodInvocation(436)", "Delete ExpressionStatement(437)", "Delete SimpleName: statNames(438)", "Delete SimpleName: put(439)", "Delete SimpleName: STATUS_FETCH_REDIR_PERM(440)", "Delete StringLiteral: \"fetch_redir_perm\"(441)", "Delete MethodInvocation(442)", "Delete ExpressionStatement(443)", "Delete SimpleName: statNames(444)", "Delete SimpleName: put(445)", "Delete SimpleName: STATUS_FETCH_GONE(446)", "Delete StringLiteral: \"fetch_gone\"(447)", "Delete MethodInvocation(448)", "Delete ExpressionStatement(449)", "Delete SimpleName: statNames(450)", "Delete SimpleName: put(451)", "Delete SimpleName: STATUS_FETCH_NOTMODIFIED(452)", "Delete StringLiteral: \"fetch_notmodified\"(453)", "Delete MethodInvocation(454)", "Delete ExpressionStatement(455)", "Delete SimpleName: oldToNew(456)", "Delete SimpleName: put(457)", "Delete SimpleName: OLD_STATUS_DB_UNFETCHED(458)", "Delete SimpleName: STATUS_DB_UNFETCHED(459)", "Delete MethodInvocation(460)", "Delete ExpressionStatement(461)", "Delete SimpleName: oldToNew(462)", "Delete SimpleName: put(463)", "Delete SimpleName: OLD_STATUS_DB_FETCHED(464)", "Delete SimpleName: STATUS_DB_FETCHED(465)", "Delete MethodInvocation(466)", "Delete ExpressionStatement(467)", "Delete SimpleName: oldToNew(468)", "Delete SimpleName: put(469)", "Delete SimpleName: OLD_STATUS_DB_GONE(470)", "Delete SimpleName: STATUS_DB_GONE(471)", "Delete MethodInvocation(472)", "Delete ExpressionStatement(473)", "Delete SimpleName: oldToNew(474)", "Delete SimpleName: put(475)", "Delete SimpleName: OLD_STATUS_FETCH_GONE(476)", "Delete SimpleName: STATUS_FETCH_GONE(477)", "Delete MethodInvocation(478)", "Delete ExpressionStatement(479)", "Delete SimpleName: oldToNew(480)", "Delete SimpleName: put(481)", "Delete SimpleName: OLD_STATUS_FETCH_SUCCESS(482)", "Delete SimpleName: STATUS_FETCH_SUCCESS(483)", "Delete MethodInvocation(484)", "Delete ExpressionStatement(485)", "Delete SimpleName: oldToNew(486)", "Delete SimpleName: put(487)", "Delete SimpleName: OLD_STATUS_FETCH_RETRY(488)", "Delete SimpleName: STATUS_FETCH_RETRY(489)", "Delete MethodInvocation(490)", "Delete ExpressionStatement(491)", "Delete SimpleName: oldToNew(492)", "Delete SimpleName: put(493)", "Delete SimpleName: OLD_STATUS_LINKED(494)", "Delete SimpleName: STATUS_LINKED(495)", "Delete MethodInvocation(496)", "Delete ExpressionStatement(497)", "Delete SimpleName: oldToNew(498)", "Delete SimpleName: put(499)", "Delete SimpleName: OLD_STATUS_SIGNATURE(500)", "Delete SimpleName: STATUS_SIGNATURE(501)", "Delete MethodInvocation(502)", "Delete ExpressionStatement(503)", "Delete Block(504)", "Delete Initializer(505)", "Delete Modifier: private(506)", "Delete PrimitiveType: byte(507)", "Delete SimpleName: status(508)", "Delete VariableDeclarationFragment(509)", "Delete FieldDeclaration(510)", "Delete Modifier: private(511)", "Delete PrimitiveType: long(512)", "Delete SimpleName: fetchTime(513)", "Delete SimpleName: System(514)", "Delete SimpleName: currentTimeMillis(515)", "Delete MethodInvocation(516)", "Delete VariableDeclarationFragment(517)", "Delete FieldDeclaration(518)", "Delete Modifier: private(519)", "Delete PrimitiveType: byte(520)", "Delete SimpleName: retries(521)", "Delete VariableDeclarationFragment(522)", "Delete FieldDeclaration(523)", "Delete Modifier: private(524)", "Delete PrimitiveType: int(525)", "Delete SimpleName: fetchInterval(526)", "Delete VariableDeclarationFragment(527)", "Delete FieldDeclaration(528)", "Delete Modifier: private(529)", "Delete PrimitiveType: float(530)", "Delete SimpleName: score(531)", "Delete NumberLiteral: 1.0f(532)", "Delete VariableDeclarationFragment(533)", "Delete FieldDeclaration(534)", "Delete Modifier: private(535)", "Delete PrimitiveType: byte(536)", "Delete Dimension(537)", "Delete ArrayType: byte[](538)", "Delete SimpleName: signature(539)", "Delete NullLiteral(540)", "Delete VariableDeclarationFragment(541)", "Delete FieldDeclaration(542)", "Delete Modifier: private(543)", "Delete PrimitiveType: long(544)", "Delete SimpleName: modifiedTime(545)", "Delete VariableDeclarationFragment(546)", "Delete FieldDeclaration(547)", "Delete Modifier: private(548)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(549)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(550)", "Delete SimpleName: metaData(551)", "Delete VariableDeclarationFragment(552)", "Delete FieldDeclaration(553)", "Delete Modifier: public(554)", "Delete Modifier: static(555)", "Delete PrimitiveType: boolean(556)", "Delete SimpleName: hasDbStatus(557)", "Delete SimpleName: CrawlDatum(558)", "Delete SimpleType: CrawlDatum(559)", "Delete SimpleName: datum(560)", "Delete SingleVariableDeclaration(561)", "Delete QualifiedName: datum.status(562)", "Delete SimpleName: STATUS_DB_MAX(563)", "Delete InfixExpression: <=(564)", "Delete BooleanLiteral: true(565)", "Delete ReturnStatement(566)", "Delete IfStatement(567)", "Delete BooleanLiteral: false(568)", "Delete ReturnStatement(569)", "Delete Block(570)", "Delete MethodDeclaration(571)", "Delete Modifier: public(572)", "Delete Modifier: static(573)", "Delete PrimitiveType: boolean(574)", "Delete SimpleName: hasFetchStatus(575)", "Delete SimpleName: CrawlDatum(576)", "Delete SimpleType: CrawlDatum(577)", "Delete SimpleName: datum(578)", "Delete SingleVariableDeclaration(579)", "Delete QualifiedName: datum.status(580)", "Delete SimpleName: STATUS_DB_MAX(581)", "Delete InfixExpression: >(582)", "Delete QualifiedName: datum.status(583)", "Delete SimpleName: STATUS_FETCH_MAX(584)", "Delete InfixExpression: <=(585)", "Delete InfixExpression: &&(586)", "Delete BooleanLiteral: true(587)", "Delete ReturnStatement(588)", "Delete IfStatement(589)", "Delete BooleanLiteral: false(590)", "Delete ReturnStatement(591)", "Delete Block(592)", "Delete MethodDeclaration(593)", "Delete Modifier: public(594)", "Delete SimpleName: CrawlDatum(595)", "Delete SimpleName: metaData(596)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(597)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(598)", "Delete ClassInstanceCreation(599)", "Delete Assignment: =(600)", "Delete ExpressionStatement(601)", "Delete Block(602)", "Delete MethodDeclaration(603)", "Delete Modifier: public(604)", "Delete SimpleName: CrawlDatum(605)", "Delete PrimitiveType: int(606)", "Delete SimpleName: status(607)", "Delete SingleVariableDeclaration(608)", "Delete PrimitiveType: int(609)", "Delete SimpleName: fetchInterval(610)", "Delete SingleVariableDeclaration(611)", "Delete ConstructorInvocation(612)", "Delete ThisExpression(613)", "Delete SimpleName: status(614)", "Delete FieldAccess(615)", "Delete PrimitiveType: byte(616)", "Delete SimpleName: status(617)", "Delete CastExpression(618)", "Delete Assignment: =(619)", "Delete ExpressionStatement(620)", "Delete ThisExpression(621)", "Delete SimpleName: fetchInterval(622)", "Delete FieldAccess(623)", "Delete SimpleName: fetchInterval(624)", "Delete Assignment: =(625)", "Delete ExpressionStatement(626)", "Delete Block(627)", "Delete MethodDeclaration(628)", "Delete Modifier: public(629)", "Delete SimpleName: CrawlDatum(630)", "Delete PrimitiveType: int(631)", "Delete SimpleName: status(632)", "Delete SingleVariableDeclaration(633)", "Delete PrimitiveType: int(634)", "Delete SimpleName: fetchInterval(635)", "Delete SingleVariableDeclaration(636)", "Delete PrimitiveType: float(637)", "Delete SimpleName: score(638)", "Delete SingleVariableDeclaration(639)", "Delete SimpleName: status(640)", "Delete SimpleName: fetchInterval(641)", "Delete ConstructorInvocation(642)", "Delete ThisExpression(643)", "Delete SimpleName: score(644)", "Delete FieldAccess(645)", "Delete SimpleName: score(646)", "Delete Assignment: =(647)", "Delete ExpressionStatement(648)", "Delete Block(649)", "Delete MethodDeclaration(650)", "Delete Modifier: public(651)", "Delete PrimitiveType: byte(652)", "Delete SimpleName: getStatus(653)", "Delete SimpleName: status(654)", "Delete ReturnStatement(655)", "Delete Block(656)", "Delete MethodDeclaration(657)", "Delete Modifier: public(658)", "Delete Modifier: static(659)", "Delete SimpleName: String(660)", "Delete SimpleType: String(661)", "Delete SimpleName: getStatusName(662)", "Delete PrimitiveType: byte(663)", "Delete SimpleName: value(664)", "Delete SingleVariableDeclaration(665)", "Delete SimpleName: String(666)", "Delete SimpleType: String(667)", "Delete SimpleName: res(668)", "Delete SimpleName: statNames(669)", "Delete SimpleName: get(670)", "Delete SimpleName: value(671)", "Delete MethodInvocation(672)", "Delete VariableDeclarationFragment(673)", "Delete VariableDeclarationStatement(674)", "Delete SimpleName: res(675)", "Delete NullLiteral(676)", "Delete InfixExpression: ==(677)", "Delete SimpleName: res(678)", "Delete StringLiteral: \"unknown\"(679)", "Delete Assignment: =(680)", "Delete ExpressionStatement(681)", "Delete IfStatement(682)", "Delete SimpleName: res(683)", "Delete ReturnStatement(684)", "Delete Block(685)", "Delete MethodDeclaration(686)", "Delete Modifier: public(687)", "Delete PrimitiveType: void(688)", "Delete SimpleName: setStatus(689)", "Delete PrimitiveType: int(690)", "Delete SimpleName: status(691)", "Delete SingleVariableDeclaration(692)", "Delete ThisExpression(693)", "Delete SimpleName: status(694)", "Delete FieldAccess(695)", "Delete PrimitiveType: byte(696)", "Delete SimpleName: status(697)", "Delete CastExpression(698)", "Delete Assignment: =(699)", "Delete ExpressionStatement(700)", "Delete Block(701)", "Delete MethodDeclaration(702)", "Delete TextElement: Returns either the time of the last fetch, or the next fetch time,(703)", "Delete TextElement: depending on whether Fetcher or CrawlDbReducer set the time.(704)", "Delete TagElement(705)", "Delete Javadoc(706)", "Delete Modifier: public(707)", "Delete PrimitiveType: long(708)", "Delete SimpleName: getFetchTime(709)", "Delete SimpleName: fetchTime(710)", "Delete ReturnStatement(711)", "Delete Block(712)", "Delete MethodDeclaration(713)", "Delete TextElement: Sets either the time of the last fetch or the next fetch time,(714)", "Delete TextElement: depending on whether Fetcher or CrawlDbReducer set the time.(715)", "Delete TagElement(716)", "Delete Javadoc(717)", "Delete Modifier: public(718)", "Delete PrimitiveType: void(719)", "Delete SimpleName: setFetchTime(720)", "Delete PrimitiveType: long(721)", "Delete SimpleName: fetchTime(722)", "Delete SingleVariableDeclaration(723)", "Delete ThisExpression(724)", "Delete SimpleName: fetchTime(725)", "Delete FieldAccess(726)", "Delete SimpleName: fetchTime(727)", "Delete Assignment: =(728)", "Delete ExpressionStatement(729)", "Delete Block(730)", "Delete MethodDeclaration(731)", "Delete Modifier: public(732)", "Delete PrimitiveType: long(733)", "Delete SimpleName: getModifiedTime(734)", "Delete SimpleName: modifiedTime(735)", "Delete ReturnStatement(736)", "Delete Block(737)", "Delete MethodDeclaration(738)", "Delete Modifier: public(739)", "Delete PrimitiveType: void(740)", "Delete SimpleName: setModifiedTime(741)", "Delete PrimitiveType: long(742)", "Delete SimpleName: modifiedTime(743)", "Delete SingleVariableDeclaration(744)", "Delete ThisExpression(745)", "Delete SimpleName: modifiedTime(746)", "Delete FieldAccess(747)", "Delete SimpleName: modifiedTime(748)", "Delete Assignment: =(749)", "Delete ExpressionStatement(750)", "Delete Block(751)", "Delete MethodDeclaration(752)", "Delete Modifier: public(753)", "Delete PrimitiveType: byte(754)", "Delete SimpleName: getRetriesSinceFetch(755)", "Delete SimpleName: retries(756)", "Delete ReturnStatement(757)", "Delete Block(758)", "Delete MethodDeclaration(759)", "Delete Modifier: public(760)", "Delete PrimitiveType: void(761)", "Delete SimpleName: setRetriesSinceFetch(762)", "Delete PrimitiveType: int(763)", "Delete SimpleName: retries(764)", "Delete SingleVariableDeclaration(765)", "Delete ThisExpression(766)", "Delete SimpleName: retries(767)", "Delete FieldAccess(768)", "Delete PrimitiveType: byte(769)", "Delete SimpleName: retries(770)", "Delete CastExpression(771)", "Delete Assignment: =(772)", "Delete ExpressionStatement(773)", "Delete Block(774)", "Delete MethodDeclaration(775)", "Delete Modifier: public(776)", "Delete PrimitiveType: int(777)", "Delete SimpleName: getFetchInterval(778)", "Delete SimpleName: fetchInterval(779)", "Delete ReturnStatement(780)", "Delete Block(781)", "Delete MethodDeclaration(782)", "Delete Modifier: public(783)", "Delete PrimitiveType: void(784)", "Delete SimpleName: setFetchInterval(785)", "Delete PrimitiveType: int(786)", "Delete SimpleName: fetchInterval(787)", "Delete SingleVariableDeclaration(788)", "Delete ThisExpression(789)", "Delete SimpleName: fetchInterval(790)", "Delete FieldAccess(791)", "Delete SimpleName: fetchInterval(792)", "Delete Assignment: =(793)", "Delete ExpressionStatement(794)", "Delete Block(795)", "Delete MethodDeclaration(796)", "Delete Modifier: public(797)", "Delete PrimitiveType: void(798)", "Delete SimpleName: setFetchInterval(799)", "Delete PrimitiveType: float(800)", "Delete SimpleName: fetchInterval(801)", "Delete SingleVariableDeclaration(802)", "Delete ThisExpression(803)", "Delete SimpleName: fetchInterval(804)", "Delete FieldAccess(805)", "Delete SimpleName: Math(806)", "Delete SimpleName: round(807)", "Delete SimpleName: fetchInterval(808)", "Delete MethodInvocation(809)", "Delete Assignment: =(810)", "Delete ExpressionStatement(811)", "Delete Block(812)", "Delete MethodDeclaration(813)", "Delete Modifier: public(814)", "Delete PrimitiveType: float(815)", "Delete SimpleName: getScore(816)", "Delete SimpleName: score(817)", "Delete ReturnStatement(818)", "Delete Block(819)", "Delete MethodDeclaration(820)", "Delete Modifier: public(821)", "Delete PrimitiveType: void(822)", "Delete SimpleName: setScore(823)", "Delete PrimitiveType: float(824)", "Delete SimpleName: score(825)", "Delete SingleVariableDeclaration(826)", "Delete ThisExpression(827)", "Delete SimpleName: score(828)", "Delete FieldAccess(829)", "Delete SimpleName: score(830)", "Delete Assignment: =(831)", "Delete ExpressionStatement(832)", "Delete Block(833)", "Delete MethodDeclaration(834)", "Delete Modifier: public(835)", "Delete PrimitiveType: byte(836)", "Delete Dimension(837)", "Delete ArrayType: byte[](838)", "Delete SimpleName: getSignature(839)", "Delete SimpleName: signature(840)", "Delete ReturnStatement(841)", "Delete Block(842)", "Delete MethodDeclaration(843)", "Delete Modifier: public(844)", "Delete PrimitiveType: void(845)", "Delete SimpleName: setSignature(846)", "Delete PrimitiveType: byte(847)", "Delete Dimension(848)", "Delete ArrayType: byte[](849)", "Delete SimpleName: signature(850)", "Delete SingleVariableDeclaration(851)", "Delete SimpleName: signature(852)", "Delete NullLiteral(853)", "Delete InfixExpression: !=(854)", "Delete QualifiedName: signature.length(855)", "Delete NumberLiteral: 256(856)", "Delete InfixExpression: >(857)", "Delete InfixExpression: &&(858)", "Delete SimpleName: RuntimeException(859)", "Delete SimpleType: RuntimeException(860)", "Delete StringLiteral: \"Max signature length (256) exceeded: \"(861)", "Delete QualifiedName: signature.length(862)", "Delete InfixExpression: +(863)", "Delete ClassInstanceCreation(864)", "Delete ThrowStatement(865)", "Delete IfStatement(866)", "Delete ThisExpression(867)", "Delete SimpleName: signature(868)", "Delete FieldAccess(869)", "Delete SimpleName: signature(870)", "Delete Assignment: =(871)", "Delete ExpressionStatement(872)", "Delete Block(873)", "Delete MethodDeclaration(874)", "Delete Modifier: public(875)", "Delete PrimitiveType: void(876)", "Delete SimpleName: setMetaData(877)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(878)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(879)", "Delete SimpleName: mapWritable(880)", "Delete SingleVariableDeclaration(881)", "Delete ThisExpression(882)", "Delete SimpleName: metaData(883)", "Delete FieldAccess(884)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(885)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(886)", "Delete SimpleName: mapWritable(887)", "Delete ClassInstanceCreation(888)", "Delete Assignment: =(889)", "Delete ExpressionStatement(890)", "Delete Block(891)", "Delete MethodDeclaration(892)", "Delete TextElement: Add all metadata from other CrawlDatum to this CrawlDatum.(893)", "Delete TagElement(894)", "Delete SimpleName: other(895)", "Delete TextElement:  CrawlDatum(896)", "Delete TagElement: @param(897)", "Delete Javadoc(898)", "Delete Modifier: public(899)", "Delete PrimitiveType: void(900)", "Delete SimpleName: putAllMetaData(901)", "Delete SimpleName: CrawlDatum(902)", "Delete SimpleType: CrawlDatum(903)", "Delete SimpleName: other(904)", "Delete SingleVariableDeclaration(905)", "Delete SimpleName: Entry(906)", "Delete SimpleType: Entry(907)", "Delete SimpleName: Writable(908)", "Delete SimpleType: Writable(909)", "Delete SimpleName: Writable(910)", "Delete SimpleType: Writable(911)", "Delete ParameterizedType: Entry<Writable,Writable>(912)", "Delete SimpleName: e(913)", "Delete SingleVariableDeclaration(914)", "Delete SimpleName: other(915)", "Delete SimpleName: getMetaData(916)", "Delete MethodInvocation(917)", "Delete SimpleName: entrySet(918)", "Delete MethodInvocation(919)", "Delete SimpleName: metaData(920)", "Delete SimpleName: put(921)", "Delete SimpleName: e(922)", "Delete SimpleName: getKey(923)", "Delete MethodInvocation(924)", "Delete SimpleName: e(925)", "Delete SimpleName: getValue(926)", "Delete MethodInvocation(927)", "Delete MethodInvocation(928)", "Delete ExpressionStatement(929)", "Delete Block(930)", "Delete EnhancedForStatement(931)", "Delete Block(932)", "Delete MethodDeclaration(933)", "Delete TextElement: returns a MapWritable if it was set or read in @see readFields(DataInput), (934)", "Delete TextElement: returns empty map in case CrawlDatum was freshly created (lazily instantiated).(935)", "Delete TagElement(936)", "Delete Javadoc(937)", "Delete Modifier: public(938)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(939)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(940)", "Delete SimpleName: getMetaData(941)", "Delete ThisExpression(942)", "Delete SimpleName: metaData(943)", "Delete FieldAccess(944)", "Delete NullLiteral(945)", "Delete InfixExpression: ==(946)", "Delete ThisExpression(947)", "Delete SimpleName: metaData(948)", "Delete FieldAccess(949)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(950)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(951)", "Delete ClassInstanceCreation(952)", "Delete Assignment: =(953)", "Delete ExpressionStatement(954)", "Delete IfStatement(955)", "Delete ThisExpression(956)", "Delete SimpleName: metaData(957)", "Delete FieldAccess(958)", "Delete ReturnStatement(959)", "Delete Block(960)", "Delete MethodDeclaration(961)", "Delete Modifier: public(962)", "Delete Modifier: static(963)", "Delete SimpleName: CrawlDatum(964)", "Delete SimpleType: CrawlDatum(965)", "Delete SimpleName: read(966)", "Delete SimpleName: DataInput(967)", "Delete SimpleType: DataInput(968)", "Delete SimpleName: in(969)", "Delete SingleVariableDeclaration(970)", "Delete SimpleName: IOException(971)", "Delete SimpleType: IOException(972)", "Delete SimpleName: CrawlDatum(973)", "Delete SimpleType: CrawlDatum(974)", "Delete SimpleName: result(975)", "Delete SimpleName: CrawlDatum(976)", "Delete SimpleType: CrawlDatum(977)", "Delete ClassInstanceCreation(978)", "Delete VariableDeclarationFragment(979)", "Delete VariableDeclarationStatement(980)", "Delete SimpleName: result(981)", "Delete SimpleName: readFields(982)", "Delete SimpleName: in(983)", "Delete MethodInvocation(984)", "Delete ExpressionStatement(985)", "Delete SimpleName: result(986)", "Delete ReturnStatement(987)", "Delete Block(988)", "Delete MethodDeclaration(989)", "Delete Modifier: public(990)", "Delete PrimitiveType: void(991)", "Delete SimpleName: readFields(992)", "Delete SimpleName: DataInput(993)", "Delete SimpleType: DataInput(994)", "Delete SimpleName: in(995)", "Delete SingleVariableDeclaration(996)", "Delete SimpleName: IOException(997)", "Delete SimpleType: IOException(998)", "Delete PrimitiveType: byte(999)", "Delete SimpleName: version(1000)", "Delete SimpleName: in(1001)", "Delete SimpleName: readByte(1002)", "Delete MethodInvocation(1003)", "Delete VariableDeclarationFragment(1004)", "Delete VariableDeclarationStatement(1005)", "Delete SimpleName: version(1006)", "Delete SimpleName: CUR_VERSION(1007)", "Delete InfixExpression: >(1008)", "Delete SimpleName: VersionMismatchException(1009)", "Delete SimpleType: VersionMismatchException(1010)", "Delete SimpleName: CUR_VERSION(1011)", "Delete SimpleName: version(1012)", "Delete ClassInstanceCreation(1013)", "Delete ThrowStatement(1014)", "Delete IfStatement(1015)", "Delete SimpleName: status(1016)", "Delete SimpleName: in(1017)", "Delete SimpleName: readByte(1018)", "Delete MethodInvocation(1019)", "Delete Assignment: =(1020)", "Delete ExpressionStatement(1021)", "Delete SimpleName: fetchTime(1022)", "Delete SimpleName: in(1023)", "Delete SimpleName: readLong(1024)", "Delete MethodInvocation(1025)", "Delete Assignment: =(1026)", "Delete ExpressionStatement(1027)", "Delete SimpleName: retries(1028)", "Delete SimpleName: in(1029)", "Delete SimpleName: readByte(1030)", "Delete MethodInvocation(1031)", "Delete Assignment: =(1032)", "Delete ExpressionStatement(1033)", "Delete SimpleName: version(1034)", "Delete NumberLiteral: 5(1035)", "Delete InfixExpression: >(1036)", "Delete SimpleName: fetchInterval(1037)", "Delete SimpleName: in(1038)", "Delete SimpleName: readInt(1039)", "Delete MethodInvocation(1040)", "Delete Assignment: =(1041)", "Delete ExpressionStatement(1042)", "Delete Block(1043)", "Delete SimpleName: fetchInterval(1044)", "Delete SimpleName: Math(1045)", "Delete SimpleName: round(1046)", "Delete SimpleName: in(1047)", "Delete SimpleName: readFloat(1048)", "Delete MethodInvocation(1049)", "Delete MethodInvocation(1050)", "Delete Assignment: =(1051)", "Delete ExpressionStatement(1052)", "Delete IfStatement(1053)", "Delete SimpleName: score(1054)", "Delete SimpleName: in(1055)", "Delete SimpleName: readFloat(1056)", "Delete MethodInvocation(1057)", "Delete Assignment: =(1058)", "Delete ExpressionStatement(1059)", "Delete SimpleName: version(1060)", "Delete NumberLiteral: 2(1061)", "Delete InfixExpression: >(1062)", "Delete SimpleName: modifiedTime(1063)", "Delete SimpleName: in(1064)", "Delete SimpleName: readLong(1065)", "Delete MethodInvocation(1066)", "Delete Assignment: =(1067)", "Delete ExpressionStatement(1068)", "Delete PrimitiveType: int(1069)", "Delete SimpleName: cnt(1070)", "Delete SimpleName: in(1071)", "Delete SimpleName: readByte(1072)", "Delete MethodInvocation(1073)", "Delete VariableDeclarationFragment(1074)", "Delete VariableDeclarationStatement(1075)", "Delete SimpleName: cnt(1076)", "Delete NumberLiteral: 0(1077)", "Delete InfixExpression: >(1078)", "Delete SimpleName: signature(1079)", "Delete PrimitiveType: byte(1080)", "Delete Dimension(1081)", "Delete ArrayType: byte[](1082)", "Delete SimpleName: cnt(1083)", "Delete ArrayCreation(1084)", "Delete Assignment: =(1085)", "Delete ExpressionStatement(1086)", "Delete SimpleName: in(1087)", "Delete SimpleName: readFully(1088)", "Delete SimpleName: signature(1089)", "Delete MethodInvocation(1090)", "Delete ExpressionStatement(1091)", "Delete Block(1092)", "Delete SimpleName: signature(1093)", "Delete NullLiteral(1094)", "Delete Assignment: =(1095)", "Delete ExpressionStatement(1096)", "Delete IfStatement(1097)", "Delete Block(1098)", "Delete IfStatement(1099)", "Delete SimpleName: metaData(1100)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(1101)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(1102)", "Delete ClassInstanceCreation(1103)", "Delete Assignment: =(1104)", "Delete ExpressionStatement(1105)", "Delete SimpleName: version(1106)", "Delete NumberLiteral: 3(1107)", "Delete InfixExpression: >(1108)", "Delete SimpleName: version(1109)", "Delete NumberLiteral: 7(1110)", "Delete InfixExpression: <(1111)", "Delete SimpleName: MapWritable(1112)", "Delete SimpleType: MapWritable(1113)", "Delete SimpleName: oldMetaData(1114)", "Delete SimpleName: MapWritable(1115)", "Delete SimpleType: MapWritable(1116)", "Delete ClassInstanceCreation(1117)", "Delete VariableDeclarationFragment(1118)", "Delete VariableDeclarationStatement(1119)", "Delete SimpleName: in(1120)", "Delete SimpleName: readBoolean(1121)", "Delete MethodInvocation(1122)", "Delete SimpleName: oldMetaData(1123)", "Delete SimpleName: readFields(1124)", "Delete SimpleName: in(1125)", "Delete MethodInvocation(1126)", "Delete ExpressionStatement(1127)", "Delete Block(1128)", "Delete IfStatement(1129)", "Delete SimpleName: Writable(1130)", "Delete SimpleType: Writable(1131)", "Delete SimpleName: key(1132)", "Delete SingleVariableDeclaration(1133)", "Delete SimpleName: oldMetaData(1134)", "Delete SimpleName: keySet(1135)", "Delete MethodInvocation(1136)", "Delete SimpleName: metaData(1137)", "Delete SimpleName: put(1138)", "Delete SimpleName: key(1139)", "Delete SimpleName: oldMetaData(1140)", "Delete SimpleName: get(1141)", "Delete SimpleName: key(1142)", "Delete MethodInvocation(1143)", "Delete MethodInvocation(1144)", "Delete ExpressionStatement(1145)", "Delete Block(1146)", "Delete EnhancedForStatement(1147)", "Delete Block(1148)", "Delete SimpleName: in(1149)", "Delete SimpleName: readBoolean(1150)", "Delete MethodInvocation(1151)", "Delete SimpleName: metaData(1152)", "Delete SimpleName: readFields(1153)", "Delete SimpleName: in(1154)", "Delete MethodInvocation(1155)", "Delete ExpressionStatement(1156)", "Delete Block(1157)", "Delete IfStatement(1158)", "Delete Block(1159)", "Delete IfStatement(1160)", "Delete Block(1161)", "Delete IfStatement(1162)", "Delete SimpleName: version(1163)", "Delete NumberLiteral: 5(1164)", "Delete InfixExpression: <(1165)", "Delete SimpleName: oldToNew(1166)", "Delete SimpleName: containsKey(1167)", "Delete SimpleName: status(1168)", "Delete MethodInvocation(1169)", "Delete SimpleName: status(1170)", "Delete SimpleName: oldToNew(1171)", "Delete SimpleName: get(1172)", "Delete SimpleName: status(1173)", "Delete MethodInvocation(1174)", "Delete Assignment: =(1175)", "Delete ExpressionStatement(1176)", "Delete SimpleName: status(1177)", "Delete SimpleName: STATUS_DB_UNFETCHED(1178)", "Delete Assignment: =(1179)", "Delete ExpressionStatement(1180)", "Delete IfStatement(1181)", "Delete Block(1182)", "Delete IfStatement(1183)", "Delete Block(1184)", "Delete MethodDeclaration(1185)", "Delete TextElement: The number of bytes into a CrawlDatum that the score is stored. (1186)", "Delete TagElement(1187)", "Delete Javadoc(1188)", "Delete Modifier: private(1189)", "Delete Modifier: static(1190)", "Delete Modifier: final(1191)", "Delete PrimitiveType: int(1192)", "Delete SimpleName: SCORE_OFFSET(1193)", "Delete NumberLiteral: 1(1194)", "Delete NumberLiteral: 1(1195)", "Delete NumberLiteral: 8(1196)", "Delete NumberLiteral: 1(1197)", "Delete NumberLiteral: 4(1198)", "Delete InfixExpression: +(1199)", "Delete VariableDeclarationFragment(1200)", "Delete FieldDeclaration(1201)", "Delete Modifier: private(1202)", "Delete Modifier: static(1203)", "Delete Modifier: final(1204)", "Delete PrimitiveType: int(1205)", "Delete SimpleName: SIG_OFFSET(1206)", "Delete SimpleName: SCORE_OFFSET(1207)", "Delete NumberLiteral: 4(1208)", "Delete NumberLiteral: 8(1209)", "Delete InfixExpression: +(1210)", "Delete VariableDeclarationFragment(1211)", "Delete FieldDeclaration(1212)", "Delete Modifier: public(1213)", "Delete PrimitiveType: void(1214)", "Delete SimpleName: write(1215)", "Delete SimpleName: DataOutput(1216)", "Delete SimpleType: DataOutput(1217)", "Delete SimpleName: out(1218)", "Delete SingleVariableDeclaration(1219)", "Delete SimpleName: IOException(1220)", "Delete SimpleType: IOException(1221)", "Delete SimpleName: out(1222)", "Delete SimpleName: writeByte(1223)", "Delete SimpleName: CUR_VERSION(1224)", "Delete MethodInvocation(1225)", "Delete ExpressionStatement(1226)", "Delete SimpleName: out(1227)", "Delete SimpleName: writeByte(1228)", "Delete SimpleName: status(1229)", "Delete MethodInvocation(1230)", "Delete ExpressionStatement(1231)", "Delete SimpleName: out(1232)", "Delete SimpleName: writeLong(1233)", "Delete SimpleName: fetchTime(1234)", "Delete MethodInvocation(1235)", "Delete ExpressionStatement(1236)", "Delete SimpleName: out(1237)", "Delete SimpleName: writeByte(1238)", "Delete SimpleName: retries(1239)", "Delete MethodInvocation(1240)", "Delete ExpressionStatement(1241)", "Delete SimpleName: out(1242)", "Delete SimpleName: writeInt(1243)", "Delete SimpleName: fetchInterval(1244)", "Delete MethodInvocation(1245)", "Delete ExpressionStatement(1246)", "Delete SimpleName: out(1247)", "Delete SimpleName: writeFloat(1248)", "Delete SimpleName: score(1249)", "Delete MethodInvocation(1250)", "Delete ExpressionStatement(1251)", "Delete SimpleName: out(1252)", "Delete SimpleName: writeLong(1253)", "Delete SimpleName: modifiedTime(1254)", "Delete MethodInvocation(1255)", "Delete ExpressionStatement(1256)", "Delete SimpleName: signature(1257)", "Delete NullLiteral(1258)", "Delete InfixExpression: ==(1259)", "Delete SimpleName: out(1260)", "Delete SimpleName: writeByte(1261)", "Delete NumberLiteral: 0(1262)", "Delete MethodInvocation(1263)", "Delete ExpressionStatement(1264)", "Delete Block(1265)", "Delete SimpleName: out(1266)", "Delete SimpleName: writeByte(1267)", "Delete QualifiedName: signature.length(1268)", "Delete MethodInvocation(1269)", "Delete ExpressionStatement(1270)", "Delete SimpleName: out(1271)", "Delete SimpleName: write(1272)", "Delete SimpleName: signature(1273)", "Delete MethodInvocation(1274)", "Delete ExpressionStatement(1275)", "Delete Block(1276)", "Delete IfStatement(1277)", "Delete SimpleName: metaData(1278)", "Delete SimpleName: size(1279)", "Delete MethodInvocation(1280)", "Delete NumberLiteral: 0(1281)", "Delete InfixExpression: >(1282)", "Delete SimpleName: out(1283)", "Delete SimpleName: writeBoolean(1284)", "Delete BooleanLiteral: true(1285)", "Delete MethodInvocation(1286)", "Delete ExpressionStatement(1287)", "Delete SimpleName: metaData(1288)", "Delete SimpleName: write(1289)", "Delete SimpleName: out(1290)", "Delete MethodInvocation(1291)", "Delete ExpressionStatement(1292)", "Delete Block(1293)", "Delete SimpleName: out(1294)", "Delete SimpleName: writeBoolean(1295)", "Delete BooleanLiteral: false(1296)", "Delete MethodInvocation(1297)", "Delete ExpressionStatement(1298)", "Delete Block(1299)", "Delete IfStatement(1300)", "Delete Block(1301)", "Delete MethodDeclaration(1302)", "Delete TextElement: Copy the contents of another instance into this instance. (1303)", "Delete TagElement(1304)", "Delete Javadoc(1305)", "Delete Modifier: public(1306)", "Delete PrimitiveType: void(1307)", "Delete SimpleName: set(1308)", "Delete SimpleName: CrawlDatum(1309)", "Delete SimpleType: CrawlDatum(1310)", "Delete SimpleName: that(1311)", "Delete SingleVariableDeclaration(1312)", "Delete ThisExpression(1313)", "Delete SimpleName: status(1314)", "Delete FieldAccess(1315)", "Delete QualifiedName: that.status(1316)", "Delete Assignment: =(1317)", "Delete ExpressionStatement(1318)", "Delete ThisExpression(1319)", "Delete SimpleName: fetchTime(1320)", "Delete FieldAccess(1321)", "Delete QualifiedName: that.fetchTime(1322)", "Delete Assignment: =(1323)", "Delete ExpressionStatement(1324)", "Delete ThisExpression(1325)", "Delete SimpleName: retries(1326)", "Delete FieldAccess(1327)", "Delete QualifiedName: that.retries(1328)", "Delete Assignment: =(1329)", "Delete ExpressionStatement(1330)", "Delete ThisExpression(1331)", "Delete SimpleName: fetchInterval(1332)", "Delete FieldAccess(1333)", "Delete QualifiedName: that.fetchInterval(1334)", "Delete Assignment: =(1335)", "Delete ExpressionStatement(1336)", "Delete ThisExpression(1337)", "Delete SimpleName: score(1338)", "Delete FieldAccess(1339)", "Delete QualifiedName: that.score(1340)", "Delete Assignment: =(1341)", "Delete ExpressionStatement(1342)", "Delete ThisExpression(1343)", "Delete SimpleName: modifiedTime(1344)", "Delete FieldAccess(1345)", "Delete QualifiedName: that.modifiedTime(1346)", "Delete Assignment: =(1347)", "Delete ExpressionStatement(1348)", "Delete ThisExpression(1349)", "Delete SimpleName: signature(1350)", "Delete FieldAccess(1351)", "Delete QualifiedName: that.signature(1352)", "Delete Assignment: =(1353)", "Delete ExpressionStatement(1354)", "Delete ThisExpression(1355)", "Delete SimpleName: metaData(1356)", "Delete FieldAccess(1357)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(1358)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(1359)", "Delete QualifiedName: that.metaData(1360)", "Delete ClassInstanceCreation(1361)", "Delete Assignment: =(1362)", "Delete ExpressionStatement(1363)", "Delete Block(1364)", "Delete MethodDeclaration(1365)", "Delete TextElement: Sort by decreasing score. (1366)", "Delete TagElement(1367)", "Delete Javadoc(1368)", "Delete Modifier: public(1369)", "Delete PrimitiveType: int(1370)", "Delete SimpleName: compareTo(1371)", "Delete SimpleName: CrawlDatum(1372)", "Delete SimpleType: CrawlDatum(1373)", "Delete SimpleName: that(1374)", "Delete SingleVariableDeclaration(1375)", "Delete QualifiedName: that.score(1376)", "Delete ThisExpression(1377)", "Delete SimpleName: score(1378)", "Delete FieldAccess(1379)", "Delete InfixExpression: !=(1380)", "Delete QualifiedName: that.score(1381)", "Delete ThisExpression(1382)", "Delete SimpleName: score(1383)", "Delete FieldAccess(1384)", "Delete InfixExpression: -(1385)", "Delete ParenthesizedExpression(1386)", "Delete NumberLiteral: 0(1387)", "Delete InfixExpression: >(1388)", "Delete NumberLiteral: 1(1389)", "Delete NumberLiteral: 1(1390)", "Delete PrefixExpression: -(1391)", "Delete ConditionalExpression(1392)", "Delete ReturnStatement(1393)", "Delete IfStatement(1394)", "Delete QualifiedName: that.status(1395)", "Delete ThisExpression(1396)", "Delete SimpleName: status(1397)", "Delete FieldAccess(1398)", "Delete InfixExpression: !=(1399)", "Delete ThisExpression(1400)", "Delete SimpleName: status(1401)", "Delete FieldAccess(1402)", "Delete QualifiedName: that.status(1403)", "Delete InfixExpression: -(1404)", "Delete ReturnStatement(1405)", "Delete IfStatement(1406)", "Delete QualifiedName: that.fetchTime(1407)", "Delete ThisExpression(1408)", "Delete SimpleName: fetchTime(1409)", "Delete FieldAccess(1410)", "Delete InfixExpression: !=(1411)", "Delete QualifiedName: that.fetchTime(1412)", "Delete ThisExpression(1413)", "Delete SimpleName: fetchTime(1414)", "Delete FieldAccess(1415)", "Delete InfixExpression: -(1416)", "Delete ParenthesizedExpression(1417)", "Delete NumberLiteral: 0(1418)", "Delete InfixExpression: >(1419)", "Delete NumberLiteral: 1(1420)", "Delete NumberLiteral: 1(1421)", "Delete PrefixExpression: -(1422)", "Delete ConditionalExpression(1423)", "Delete ReturnStatement(1424)", "Delete IfStatement(1425)", "Delete QualifiedName: that.retries(1426)", "Delete ThisExpression(1427)", "Delete SimpleName: retries(1428)", "Delete FieldAccess(1429)", "Delete InfixExpression: !=(1430)", "Delete QualifiedName: that.retries(1431)", "Delete ThisExpression(1432)", "Delete SimpleName: retries(1433)", "Delete FieldAccess(1434)", "Delete InfixExpression: -(1435)", "Delete ReturnStatement(1436)", "Delete IfStatement(1437)", "Delete QualifiedName: that.fetchInterval(1438)", "Delete ThisExpression(1439)", "Delete SimpleName: fetchInterval(1440)", "Delete FieldAccess(1441)", "Delete InfixExpression: !=(1442)", "Delete QualifiedName: that.fetchInterval(1443)", "Delete ThisExpression(1444)", "Delete SimpleName: fetchInterval(1445)", "Delete FieldAccess(1446)", "Delete InfixExpression: -(1447)", "Delete ParenthesizedExpression(1448)", "Delete NumberLiteral: 0(1449)", "Delete InfixExpression: >(1450)", "Delete NumberLiteral: 1(1451)", "Delete NumberLiteral: 1(1452)", "Delete PrefixExpression: -(1453)", "Delete ConditionalExpression(1454)", "Delete ReturnStatement(1455)", "Delete IfStatement(1456)", "Delete QualifiedName: that.modifiedTime(1457)", "Delete ThisExpression(1458)", "Delete SimpleName: modifiedTime(1459)", "Delete FieldAccess(1460)", "Delete InfixExpression: !=(1461)", "Delete QualifiedName: that.modifiedTime(1462)", "Delete ThisExpression(1463)", "Delete SimpleName: modifiedTime(1464)", "Delete FieldAccess(1465)", "Delete InfixExpression: -(1466)", "Delete ParenthesizedExpression(1467)", "Delete NumberLiteral: 0(1468)", "Delete InfixExpression: >(1469)", "Delete NumberLiteral: 1(1470)", "Delete NumberLiteral: 1(1471)", "Delete PrefixExpression: -(1472)", "Delete ConditionalExpression(1473)", "Delete ReturnStatement(1474)", "Delete IfStatement(1475)", "Delete SimpleName: SignatureComparator(1476)", "Delete SimpleName: compare(1477)", "Delete ThisExpression(1478)", "Delete SimpleName: signature(1479)", "Delete FieldAccess(1480)", "Delete QualifiedName: that.signature(1481)", "Delete MethodInvocation(1482)", "Delete ReturnStatement(1483)", "Delete Block(1484)", "Delete MethodDeclaration(1485)", "Delete TextElement: A Comparator optimized for CrawlDatum. (1486)", "Delete TagElement(1487)", "Delete Javadoc(1488)", "Delete Modifier: public(1489)", "Delete Modifier: static(1490)", "Delete SimpleName: Comparator(1491)", "Delete SimpleName: WritableComparator(1492)", "Delete SimpleType: WritableComparator(1493)", "Delete Modifier: public(1494)", "Delete SimpleName: Comparator(1495)", "Delete SimpleName: CrawlDatum(1496)", "Delete SimpleType: CrawlDatum(1497)", "Delete TypeLiteral(1498)", "Delete SuperConstructorInvocation(1499)", "Delete Block(1500)", "Delete MethodDeclaration(1501)", "Delete Modifier: public(1502)", "Delete PrimitiveType: int(1503)", "Delete SimpleName: compare(1504)", "Delete PrimitiveType: byte(1505)", "Delete Dimension(1506)", "Delete ArrayType: byte[](1507)", "Delete SimpleName: b1(1508)", "Delete SingleVariableDeclaration(1509)", "Delete PrimitiveType: int(1510)", "Delete SimpleName: s1(1511)", "Delete SingleVariableDeclaration(1512)", "Delete PrimitiveType: int(1513)", "Delete SimpleName: l1(1514)", "Delete SingleVariableDeclaration(1515)", "Delete PrimitiveType: byte(1516)", "Delete Dimension(1517)", "Delete ArrayType: byte[](1518)", "Delete SimpleName: b2(1519)", "Delete SingleVariableDeclaration(1520)", "Delete PrimitiveType: int(1521)", "Delete SimpleName: s2(1522)", "Delete SingleVariableDeclaration(1523)", "Delete PrimitiveType: int(1524)", "Delete SimpleName: l2(1525)", "Delete SingleVariableDeclaration(1526)", "Delete PrimitiveType: float(1527)", "Delete SimpleName: score1(1528)", "Delete SimpleName: readFloat(1529)", "Delete SimpleName: b1(1530)", "Delete SimpleName: s1(1531)", "Delete SimpleName: SCORE_OFFSET(1532)", "Delete InfixExpression: +(1533)", "Delete MethodInvocation(1534)", "Delete VariableDeclarationFragment(1535)", "Delete VariableDeclarationStatement(1536)", "Delete PrimitiveType: float(1537)", "Delete SimpleName: score2(1538)", "Delete SimpleName: readFloat(1539)", "Delete SimpleName: b2(1540)", "Delete SimpleName: s2(1541)", "Delete SimpleName: SCORE_OFFSET(1542)", "Delete InfixExpression: +(1543)", "Delete MethodInvocation(1544)", "Delete VariableDeclarationFragment(1545)", "Delete VariableDeclarationStatement(1546)", "Delete SimpleName: score2(1547)", "Delete SimpleName: score1(1548)", "Delete InfixExpression: !=(1549)", "Delete SimpleName: score2(1550)", "Delete SimpleName: score1(1551)", "Delete InfixExpression: -(1552)", "Delete ParenthesizedExpression(1553)", "Delete NumberLiteral: 0(1554)", "Delete InfixExpression: >(1555)", "Delete NumberLiteral: 1(1556)", "Delete NumberLiteral: 1(1557)", "Delete PrefixExpression: -(1558)", "Delete ConditionalExpression(1559)", "Delete ReturnStatement(1560)", "Delete Block(1561)", "Delete IfStatement(1562)", "Delete PrimitiveType: int(1563)", "Delete SimpleName: status1(1564)", "Delete SimpleName: b1(1565)", "Delete SimpleName: s1(1566)", "Delete NumberLiteral: 1(1567)", "Delete InfixExpression: +(1568)", "Delete ArrayAccess(1569)", "Delete VariableDeclarationFragment(1570)", "Delete VariableDeclarationStatement(1571)", "Delete PrimitiveType: int(1572)", "Delete SimpleName: status2(1573)", "Delete SimpleName: b2(1574)", "Delete SimpleName: s2(1575)", "Delete NumberLiteral: 1(1576)", "Delete InfixExpression: +(1577)", "Delete ArrayAccess(1578)", "Delete VariableDeclarationFragment(1579)", "Delete VariableDeclarationStatement(1580)", "Delete SimpleName: status2(1581)", "Delete SimpleName: status1(1582)", "Delete InfixExpression: !=(1583)", "Delete SimpleName: status1(1584)", "Delete SimpleName: status2(1585)", "Delete InfixExpression: -(1586)", "Delete ReturnStatement(1587)", "Delete IfStatement(1588)", "Delete PrimitiveType: long(1589)", "Delete SimpleName: fetchTime1(1590)", "Delete SimpleName: readLong(1591)", "Delete SimpleName: b1(1592)", "Delete SimpleName: s1(1593)", "Delete NumberLiteral: 1(1594)", "Delete NumberLiteral: 1(1595)", "Delete InfixExpression: +(1596)", "Delete MethodInvocation(1597)", "Delete VariableDeclarationFragment(1598)", "Delete VariableDeclarationStatement(1599)", "Delete PrimitiveType: long(1600)", "Delete SimpleName: fetchTime2(1601)", "Delete SimpleName: readLong(1602)", "Delete SimpleName: b2(1603)", "Delete SimpleName: s2(1604)", "Delete NumberLiteral: 1(1605)", "Delete NumberLiteral: 1(1606)", "Delete InfixExpression: +(1607)", "Delete MethodInvocation(1608)", "Delete VariableDeclarationFragment(1609)", "Delete VariableDeclarationStatement(1610)", "Delete SimpleName: fetchTime2(1611)", "Delete SimpleName: fetchTime1(1612)", "Delete InfixExpression: !=(1613)", "Delete SimpleName: fetchTime2(1614)", "Delete SimpleName: fetchTime1(1615)", "Delete InfixExpression: -(1616)", "Delete ParenthesizedExpression(1617)", "Delete NumberLiteral: 0(1618)", "Delete InfixExpression: >(1619)", "Delete NumberLiteral: 1(1620)", "Delete NumberLiteral: 1(1621)", "Delete PrefixExpression: -(1622)", "Delete ConditionalExpression(1623)", "Delete ReturnStatement(1624)", "Delete IfStatement(1625)", "Delete PrimitiveType: int(1626)", "Delete SimpleName: retries1(1627)", "Delete SimpleName: b1(1628)", "Delete SimpleName: s1(1629)", "Delete NumberLiteral: 1(1630)", "Delete NumberLiteral: 1(1631)", "Delete NumberLiteral: 8(1632)", "Delete InfixExpression: +(1633)", "Delete ArrayAccess(1634)", "Delete VariableDeclarationFragment(1635)", "Delete VariableDeclarationStatement(1636)", "Delete PrimitiveType: int(1637)", "Delete SimpleName: retries2(1638)", "Delete SimpleName: b2(1639)", "Delete SimpleName: s2(1640)", "Delete NumberLiteral: 1(1641)", "Delete NumberLiteral: 1(1642)", "Delete NumberLiteral: 8(1643)", "Delete InfixExpression: +(1644)", "Delete ArrayAccess(1645)", "Delete VariableDeclarationFragment(1646)", "Delete VariableDeclarationStatement(1647)", "Delete SimpleName: retries2(1648)", "Delete SimpleName: retries1(1649)", "Delete InfixExpression: !=(1650)", "Delete SimpleName: retries2(1651)", "Delete SimpleName: retries1(1652)", "Delete InfixExpression: -(1653)", "Delete ReturnStatement(1654)", "Delete IfStatement(1655)", "Delete PrimitiveType: int(1656)", "Delete SimpleName: fetchInterval1(1657)", "Delete SimpleName: readInt(1658)", "Delete SimpleName: b1(1659)", "Delete SimpleName: s1(1660)", "Delete NumberLiteral: 1(1661)", "Delete NumberLiteral: 1(1662)", "Delete NumberLiteral: 8(1663)", "Delete NumberLiteral: 1(1664)", "Delete InfixExpression: +(1665)", "Delete MethodInvocation(1666)", "Delete VariableDeclarationFragment(1667)", "Delete VariableDeclarationStatement(1668)", "Delete PrimitiveType: int(1669)", "Delete SimpleName: fetchInterval2(1670)", "Delete SimpleName: readInt(1671)", "Delete SimpleName: b2(1672)", "Delete SimpleName: s2(1673)", "Delete NumberLiteral: 1(1674)", "Delete NumberLiteral: 1(1675)", "Delete NumberLiteral: 8(1676)", "Delete NumberLiteral: 1(1677)", "Delete InfixExpression: +(1678)", "Delete MethodInvocation(1679)", "Delete VariableDeclarationFragment(1680)", "Delete VariableDeclarationStatement(1681)", "Delete SimpleName: fetchInterval2(1682)", "Delete SimpleName: fetchInterval1(1683)", "Delete InfixExpression: !=(1684)", "Delete SimpleName: fetchInterval2(1685)", "Delete SimpleName: fetchInterval1(1686)", "Delete InfixExpression: -(1687)", "Delete ParenthesizedExpression(1688)", "Delete NumberLiteral: 0(1689)", "Delete InfixExpression: >(1690)", "Delete NumberLiteral: 1(1691)", "Delete NumberLiteral: 1(1692)", "Delete PrefixExpression: -(1693)", "Delete ConditionalExpression(1694)", "Delete ReturnStatement(1695)", "Delete IfStatement(1696)", "Delete PrimitiveType: long(1697)", "Delete SimpleName: modifiedTime1(1698)", "Delete SimpleName: readLong(1699)", "Delete SimpleName: b1(1700)", "Delete SimpleName: s1(1701)", "Delete SimpleName: SCORE_OFFSET(1702)", "Delete NumberLiteral: 4(1703)", "Delete InfixExpression: +(1704)", "Delete MethodInvocation(1705)", "Delete VariableDeclarationFragment(1706)", "Delete VariableDeclarationStatement(1707)", "Delete PrimitiveType: long(1708)", "Delete SimpleName: modifiedTime2(1709)", "Delete SimpleName: readLong(1710)", "Delete SimpleName: b2(1711)", "Delete SimpleName: s2(1712)", "Delete SimpleName: SCORE_OFFSET(1713)", "Delete NumberLiteral: 4(1714)", "Delete InfixExpression: +(1715)", "Delete MethodInvocation(1716)", "Delete VariableDeclarationFragment(1717)", "Delete VariableDeclarationStatement(1718)", "Delete SimpleName: modifiedTime2(1719)", "Delete SimpleName: modifiedTime1(1720)", "Delete InfixExpression: !=(1721)", "Delete SimpleName: modifiedTime2(1722)", "Delete SimpleName: modifiedTime1(1723)", "Delete InfixExpression: -(1724)", "Delete ParenthesizedExpression(1725)", "Delete NumberLiteral: 0(1726)", "Delete InfixExpression: >(1727)", "Delete NumberLiteral: 1(1728)", "Delete NumberLiteral: 1(1729)", "Delete PrefixExpression: -(1730)", "Delete ConditionalExpression(1731)", "Delete ReturnStatement(1732)", "Delete IfStatement(1733)", "Delete PrimitiveType: int(1734)", "Delete SimpleName: sigl1(1735)", "Delete SimpleName: b1(1736)", "Delete SimpleName: s1(1737)", "Delete SimpleName: SIG_OFFSET(1738)", "Delete InfixExpression: +(1739)", "Delete ArrayAccess(1740)", "Delete VariableDeclarationFragment(1741)", "Delete VariableDeclarationStatement(1742)", "Delete PrimitiveType: int(1743)", "Delete SimpleName: sigl2(1744)", "Delete SimpleName: b2(1745)", "Delete SimpleName: s2(1746)", "Delete SimpleName: SIG_OFFSET(1747)", "Delete InfixExpression: +(1748)", "Delete ArrayAccess(1749)", "Delete VariableDeclarationFragment(1750)", "Delete VariableDeclarationStatement(1751)", "Delete SimpleName: SignatureComparator(1752)", "Delete SimpleName: _compare(1753)", "Delete SimpleName: b1(1754)", "Delete SimpleName: SIG_OFFSET(1755)", "Delete SimpleName: sigl1(1756)", "Delete SimpleName: b2(1757)", "Delete SimpleName: SIG_OFFSET(1758)", "Delete SimpleName: sigl2(1759)", "Delete MethodInvocation(1760)", "Delete ReturnStatement(1761)", "Delete Block(1762)", "Delete MethodDeclaration(1763)", "Delete TypeDeclaration: class(1764)", "Delete Modifier: static(1765)", "Delete SimpleName: WritableComparator(1766)", "Delete SimpleName: define(1767)", "Delete SimpleName: CrawlDatum(1768)", "Delete SimpleType: CrawlDatum(1769)", "Delete TypeLiteral(1770)", "Delete SimpleName: Comparator(1771)", "Delete SimpleType: Comparator(1772)", "Delete ClassInstanceCreation(1773)", "Delete MethodInvocation(1774)", "Delete ExpressionStatement(1775)", "Delete Block(1776)", "Delete Initializer(1777)", "Delete Modifier: public(1778)", "Delete SimpleName: String(1779)", "Delete SimpleType: String(1780)", "Delete SimpleName: toString(1781)", "Delete SimpleName: StringBuilder(1782)", "Delete SimpleType: StringBuilder(1783)", "Delete SimpleName: buf(1784)", "Delete SimpleName: StringBuilder(1785)", "Delete SimpleType: StringBuilder(1786)", "Delete ClassInstanceCreation(1787)", "Delete VariableDeclarationFragment(1788)", "Delete VariableDeclarationStatement(1789)", "Delete SimpleName: buf(1790)", "Delete SimpleName: append(1791)", "Delete StringLiteral: \"Version: \"(1792)", "Delete SimpleName: CUR_VERSION(1793)", "Delete StringLiteral: \"\\n\"(1794)", "Delete InfixExpression: +(1795)", "Delete MethodInvocation(1796)", "Delete ExpressionStatement(1797)", "Delete SimpleName: buf(1798)", "Delete SimpleName: append(1799)", "Delete StringLiteral: \"Status: \"(1800)", "Delete SimpleName: getStatus(1801)", "Delete MethodInvocation(1802)", "Delete StringLiteral: \" (\"(1803)", "Delete SimpleName: getStatusName(1804)", "Delete SimpleName: getStatus(1805)", "Delete MethodInvocation(1806)", "Delete MethodInvocation(1807)", "Delete StringLiteral: \")\\n\"(1808)", "Delete InfixExpression: +(1809)", "Delete MethodInvocation(1810)", "Delete ExpressionStatement(1811)", "Delete SimpleName: buf(1812)", "Delete SimpleName: append(1813)", "Delete StringLiteral: \"Fetch time: \"(1814)", "Delete SimpleName: Date(1815)", "Delete SimpleType: Date(1816)", "Delete SimpleName: getFetchTime(1817)", "Delete MethodInvocation(1818)", "Delete ClassInstanceCreation(1819)", "Delete StringLiteral: \"\\n\"(1820)", "Delete InfixExpression: +(1821)", "Delete MethodInvocation(1822)", "Delete ExpressionStatement(1823)", "Delete SimpleName: buf(1824)", "Delete SimpleName: append(1825)", "Delete StringLiteral: \"Modified time: \"(1826)", "Delete SimpleName: Date(1827)", "Delete SimpleType: Date(1828)", "Delete SimpleName: getModifiedTime(1829)", "Delete MethodInvocation(1830)", "Delete ClassInstanceCreation(1831)", "Delete StringLiteral: \"\\n\"(1832)", "Delete InfixExpression: +(1833)", "Delete MethodInvocation(1834)", "Delete ExpressionStatement(1835)", "Delete SimpleName: buf(1836)", "Delete SimpleName: append(1837)", "Delete StringLiteral: \"Retries since fetch: \"(1838)", "Delete SimpleName: getRetriesSinceFetch(1839)", "Delete MethodInvocation(1840)", "Delete StringLiteral: \"\\n\"(1841)", "Delete InfixExpression: +(1842)", "Delete MethodInvocation(1843)", "Delete ExpressionStatement(1844)", "Delete SimpleName: buf(1845)", "Delete SimpleName: append(1846)", "Delete StringLiteral: \"Retry interval: \"(1847)", "Delete SimpleName: getFetchInterval(1848)", "Delete MethodInvocation(1849)", "Delete StringLiteral: \" seconds (\"(1850)", "Delete SimpleName: getFetchInterval(1851)", "Delete MethodInvocation(1852)", "Delete QualifiedName: FetchSchedule.SECONDS_PER_DAY(1853)", "Delete InfixExpression: /(1854)", "Delete ParenthesizedExpression(1855)", "Delete StringLiteral: \" days)\\n\"(1856)", "Delete InfixExpression: +(1857)", "Delete MethodInvocation(1858)", "Delete ExpressionStatement(1859)", "Delete SimpleName: buf(1860)", "Delete SimpleName: append(1861)", "Delete StringLiteral: \"Score: \"(1862)", "Delete SimpleName: getScore(1863)", "Delete MethodInvocation(1864)", "Delete StringLiteral: \"\\n\"(1865)", "Delete InfixExpression: +(1866)", "Delete MethodInvocation(1867)", "Delete ExpressionStatement(1868)", "Delete SimpleName: buf(1869)", "Delete SimpleName: append(1870)", "Delete StringLiteral: \"Signature: \"(1871)", "Delete SimpleName: StringUtil(1872)", "Delete SimpleName: toHexString(1873)", "Delete SimpleName: getSignature(1874)", "Delete MethodInvocation(1875)", "Delete MethodInvocation(1876)", "Delete StringLiteral: \"\\n\"(1877)", "Delete InfixExpression: +(1878)", "Delete MethodInvocation(1879)", "Delete ExpressionStatement(1880)", "Delete SimpleName: buf(1881)", "Delete SimpleName: append(1882)", "Delete StringLiteral: \"Metadata: \"(1883)", "Delete MethodInvocation(1884)", "Delete ExpressionStatement(1885)", "Delete SimpleName: Entry(1886)", "Delete SimpleType: Entry(1887)", "Delete SimpleName: Writable(1888)", "Delete SimpleType: Writable(1889)", "Delete SimpleName: Writable(1890)", "Delete SimpleType: Writable(1891)", "Delete ParameterizedType: Entry<Writable,Writable>(1892)", "Delete SimpleName: e(1893)", "Delete SingleVariableDeclaration(1894)", "Delete SimpleName: metaData(1895)", "Delete SimpleName: entrySet(1896)", "Delete MethodInvocation(1897)", "Delete SimpleName: buf(1898)", "Delete SimpleName: append(1899)", "Delete SimpleName: e(1900)", "Delete SimpleName: getKey(1901)", "Delete MethodInvocation(1902)", "Delete MethodInvocation(1903)", "Delete ExpressionStatement(1904)", "Delete SimpleName: buf(1905)", "Delete SimpleName: append(1906)", "Delete StringLiteral: \": \"(1907)", "Delete MethodInvocation(1908)", "Delete ExpressionStatement(1909)", "Delete SimpleName: buf(1910)", "Delete SimpleName: append(1911)", "Delete SimpleName: e(1912)", "Delete SimpleName: getValue(1913)", "Delete MethodInvocation(1914)", "Delete MethodInvocation(1915)", "Delete ExpressionStatement(1916)", "Delete Block(1917)", "Delete EnhancedForStatement(1918)", "Delete SimpleName: buf(1919)", "Delete SimpleName: append(1920)", "Delete CharacterLiteral: '\\n'(1921)", "Delete MethodInvocation(1922)", "Delete ExpressionStatement(1923)", "Delete SimpleName: buf(1924)", "Delete SimpleName: toString(1925)", "Delete MethodInvocation(1926)", "Delete ReturnStatement(1927)", "Delete Block(1928)", "Delete MethodDeclaration(1929)", "Delete Modifier: private(1930)", "Delete PrimitiveType: boolean(1931)", "Delete SimpleName: metadataEquals(1932)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(1933)", "Delete SimpleType: org.apache.hadoop.io.MapWritable(1934)", "Delete SimpleName: otherMetaData(1935)", "Delete SingleVariableDeclaration(1936)", "Delete SimpleName: HashSet(1937)", "Delete SimpleType: HashSet(1938)", "Delete SimpleName: Entry(1939)", "Delete SimpleType: Entry(1940)", "Delete SimpleName: Writable(1941)", "Delete SimpleType: Writable(1942)", "Delete SimpleName: Writable(1943)", "Delete SimpleType: Writable(1944)", "Delete ParameterizedType: Entry<Writable,Writable>(1945)", "Delete ParameterizedType: HashSet<Entry<Writable,Writable>>(1946)", "Delete SimpleName: set1(1947)", "Delete SimpleName: HashSet(1948)", "Delete SimpleType: HashSet(1949)", "Delete SimpleName: Entry(1950)", "Delete SimpleType: Entry(1951)", "Delete SimpleName: Writable(1952)", "Delete SimpleType: Writable(1953)", "Delete SimpleName: Writable(1954)", "Delete SimpleType: Writable(1955)", "Delete ParameterizedType: Entry<Writable,Writable>(1956)", "Delete ParameterizedType: HashSet<Entry<Writable,Writable>>(1957)", "Delete SimpleName: metaData(1958)", "Delete SimpleName: entrySet(1959)", "Delete MethodInvocation(1960)", "Delete ClassInstanceCreation(1961)", "Delete VariableDeclarationFragment(1962)", "Delete VariableDeclarationStatement(1963)", "Delete SimpleName: HashSet(1964)", "Delete SimpleType: HashSet(1965)", "Delete SimpleName: Entry(1966)", "Delete SimpleType: Entry(1967)", "Delete SimpleName: Writable(1968)", "Delete SimpleType: Writable(1969)", "Delete SimpleName: Writable(1970)", "Delete SimpleType: Writable(1971)", "Delete ParameterizedType: Entry<Writable,Writable>(1972)", "Delete ParameterizedType: HashSet<Entry<Writable,Writable>>(1973)", "Delete SimpleName: set2(1974)", "Delete SimpleName: HashSet(1975)", "Delete SimpleType: HashSet(1976)", "Delete SimpleName: Entry(1977)", "Delete SimpleType: Entry(1978)", "Delete SimpleName: Writable(1979)", "Delete SimpleType: Writable(1980)", "Delete SimpleName: Writable(1981)", "Delete SimpleType: Writable(1982)", "Delete ParameterizedType: Entry<Writable,Writable>(1983)", "Delete ParameterizedType: HashSet<Entry<Writable,Writable>>(1984)", "Delete SimpleName: otherMetaData(1985)", "Delete SimpleName: entrySet(1986)", "Delete MethodInvocation(1987)", "Delete ClassInstanceCreation(1988)", "Delete VariableDeclarationFragment(1989)", "Delete VariableDeclarationStatement(1990)", "Delete SimpleName: set1(1991)", "Delete SimpleName: equals(1992)", "Delete SimpleName: set2(1993)", "Delete MethodInvocation(1994)", "Delete ReturnStatement(1995)", "Delete Block(1996)", "Delete MethodDeclaration(1997)", "Delete Modifier: public(1998)", "Delete PrimitiveType: boolean(1999)", "Delete SimpleName: equals(2000)", "Delete SimpleName: Object(2001)", "Delete SimpleType: Object(2002)", "Delete SimpleName: o(2003)", "Delete SingleVariableDeclaration(2004)", "Delete SimpleName: o(2005)", "Delete SimpleName: CrawlDatum(2006)", "Delete SimpleType: CrawlDatum(2007)", "Delete InstanceofExpression(2008)", "Delete ParenthesizedExpression(2009)", "Delete PrefixExpression: !(2010)", "Delete BooleanLiteral: false(2011)", "Delete ReturnStatement(2012)", "Delete IfStatement(2013)", "Delete SimpleName: CrawlDatum(2014)", "Delete SimpleType: CrawlDatum(2015)", "Delete SimpleName: other(2016)", "Delete SimpleName: CrawlDatum(2017)", "Delete SimpleType: CrawlDatum(2018)", "Delete SimpleName: o(2019)", "Delete CastExpression(2020)", "Delete VariableDeclarationFragment(2021)", "Delete VariableDeclarationStatement(2022)", "Delete PrimitiveType: boolean(2023)", "Delete SimpleName: res(2024)", "Delete ThisExpression(2025)", "Delete SimpleName: status(2026)", "Delete FieldAccess(2027)", "Delete QualifiedName: other.status(2028)", "Delete InfixExpression: ==(2029)", "Delete ParenthesizedExpression(2030)", "Delete ThisExpression(2031)", "Delete SimpleName: fetchTime(2032)", "Delete FieldAccess(2033)", "Delete QualifiedName: other.fetchTime(2034)", "Delete InfixExpression: ==(2035)", "Delete ParenthesizedExpression(2036)", "Delete ThisExpression(2037)", "Delete SimpleName: modifiedTime(2038)", "Delete FieldAccess(2039)", "Delete QualifiedName: other.modifiedTime(2040)", "Delete InfixExpression: ==(2041)", "Delete ParenthesizedExpression(2042)", "Delete ThisExpression(2043)", "Delete SimpleName: retries(2044)", "Delete FieldAccess(2045)", "Delete QualifiedName: other.retries(2046)", "Delete InfixExpression: ==(2047)", "Delete ParenthesizedExpression(2048)", "Delete ThisExpression(2049)", "Delete SimpleName: fetchInterval(2050)", "Delete FieldAccess(2051)", "Delete QualifiedName: other.fetchInterval(2052)", "Delete InfixExpression: ==(2053)", "Delete ParenthesizedExpression(2054)", "Delete SimpleName: SignatureComparator(2055)", "Delete SimpleName: compare(2056)", "Delete ThisExpression(2057)", "Delete SimpleName: signature(2058)", "Delete FieldAccess(2059)", "Delete QualifiedName: other.signature(2060)", "Delete MethodInvocation(2061)", "Delete NumberLiteral: 0(2062)", "Delete InfixExpression: ==(2063)", "Delete ParenthesizedExpression(2064)", "Delete ThisExpression(2065)", "Delete SimpleName: score(2066)", "Delete FieldAccess(2067)", "Delete QualifiedName: other.score(2068)", "Delete InfixExpression: ==(2069)", "Delete ParenthesizedExpression(2070)", "Delete InfixExpression: &&(2071)", "Delete VariableDeclarationFragment(2072)", "Delete VariableDeclarationStatement(2073)", "Delete SimpleName: res(2074)", "Delete PrefixExpression: !(2075)", "Delete SimpleName: res(2076)", "Delete ReturnStatement(2077)", "Delete IfStatement(2078)", "Delete SimpleName: metadataEquals(2079)", "Delete QualifiedName: other.metaData(2080)", "Delete MethodInvocation(2081)", "Delete ReturnStatement(2082)", "Delete Block(2083)", "Delete MethodDeclaration(2084)", "Delete Modifier: public(2085)", "Delete PrimitiveType: int(2086)", "Delete SimpleName: hashCode(2087)", "Delete PrimitiveType: int(2088)", "Delete SimpleName: res(2089)", "Delete NumberLiteral: 0(2090)", "Delete VariableDeclarationFragment(2091)", "Delete VariableDeclarationStatement(2092)", "Delete SimpleName: signature(2093)", "Delete NullLiteral(2094)", "Delete InfixExpression: !=(2095)", "Delete PrimitiveType: int(2096)", "Delete SimpleName: i(2097)", "Delete NumberLiteral: 0(2098)", "Delete VariableDeclarationFragment(2099)", "Delete VariableDeclarationExpression(2100)", "Delete SimpleName: i(2101)", "Delete QualifiedName: signature.length(2102)", "Delete NumberLiteral: 4(2103)", "Delete InfixExpression: /(2104)", "Delete InfixExpression: <(2105)", "Delete SimpleName: i(2106)", "Delete NumberLiteral: 4(2107)", "Delete Assignment: +=(2108)", "Delete SimpleName: res(2109)", "Delete PrimitiveType: int(2110)", "Delete SimpleName: signature(2111)", "Delete SimpleName: i(2112)", "Delete ArrayAccess(2113)", "Delete NumberLiteral: 24(2114)", "Delete SimpleName: signature(2115)", "Delete SimpleName: i(2116)", "Delete NumberLiteral: 1(2117)", "Delete InfixExpression: +(2118)", "Delete ArrayAccess(2119)", "Delete InfixExpression: +(2120)", "Delete InfixExpression: <<(2121)", "Delete NumberLiteral: 16(2122)", "Delete SimpleName: signature(2123)", "Delete SimpleName: i(2124)", "Delete NumberLiteral: 2(2125)", "Delete InfixExpression: +(2126)", "Delete ArrayAccess(2127)", "Delete InfixExpression: +(2128)", "Delete InfixExpression: <<(2129)", "Delete NumberLiteral: 8(2130)", "Delete SimpleName: signature(2131)", "Delete SimpleName: i(2132)", "Delete NumberLiteral: 3(2133)", "Delete InfixExpression: +(2134)", "Delete ArrayAccess(2135)", "Delete InfixExpression: +(2136)", "Delete InfixExpression: <<(2137)", "Delete ParenthesizedExpression(2138)", "Delete CastExpression(2139)", "Delete Assignment: ^=(2140)", "Delete ExpressionStatement(2141)", "Delete Block(2142)", "Delete ForStatement(2143)", "Delete Block(2144)", "Delete IfStatement(2145)", "Delete SimpleName: res(2146)", "Delete SimpleName: metaData(2147)", "Delete SimpleName: entrySet(2148)", "Delete MethodInvocation(2149)", "Delete SimpleName: hashCode(2150)", "Delete MethodInvocation(2151)", "Delete Assignment: ^=(2152)", "Delete ExpressionStatement(2153)", "Delete SimpleName: res(2154)", "Delete SimpleName: status(2155)", "Delete PrimitiveType: int(2156)", "Delete SimpleName: fetchTime(2157)", "Delete CastExpression(2158)", "Delete ParenthesizedExpression(2159)", "Delete PrimitiveType: int(2160)", "Delete SimpleName: modifiedTime(2161)", "Delete CastExpression(2162)", "Delete ParenthesizedExpression(2163)", "Delete SimpleName: retries(2164)", "Delete SimpleName: fetchInterval(2165)", "Delete SimpleName: Float(2166)", "Delete SimpleName: floatToIntBits(2167)", "Delete SimpleName: score(2168)", "Delete MethodInvocation(2169)", "Delete InfixExpression: ^(2170)", "Delete ReturnStatement(2171)", "Delete Block(2172)", "Delete MethodDeclaration(2173)", "Delete Modifier: public(2174)", "Delete SimpleName: Object(2175)", "Delete SimpleType: Object(2176)", "Delete SimpleName: clone(2177)", "Delete SimpleName: clone(2178)", "Delete SuperMethodInvocation(2179)", "Delete ReturnStatement(2180)", "Delete Block(2181)", "Delete SimpleName: CloneNotSupportedException(2182)", "Delete SimpleType: CloneNotSupportedException(2183)", "Delete SimpleName: e(2184)", "Delete SingleVariableDeclaration(2185)", "Delete SimpleName: RuntimeException(2186)", "Delete SimpleType: RuntimeException(2187)", "Delete SimpleName: e(2188)", "Delete ClassInstanceCreation(2189)", "Delete ThrowStatement(2190)", "Delete Block(2191)", "Delete CatchClause(2192)", "Delete TryStatement(2193)", "Delete Block(2194)", "Delete MethodDeclaration(2195)", "Delete TypeDeclaration: class(2196)"]}}, {"CrawlDb_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL Javadoc", "DEL TextElement: this work for additional information regarding copyright ownership.", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one or more", "DEL TextElement: the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: limitations under the License.", "DEL TextElement: contributor license agreements.  See the NOTICE file distributed with", "DEL TextElement: The ASF licenses this file to You under the Apache License, Version 2.0", "DEL QualifiedName: org.apache.nutch.crawl", "DEL TextElement: (the \"License\"); you may not use this file except in compliance with", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TagElement", "DEL TextElement: See the License for the specific language governing permissions and"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL FieldDeclaration", "DEL SimpleName: CRAWLDB_ADDITIONS_ALLOWED", "DEL SimpleName: String", "DEL Modifier: static", "DEL Modifier: static", "DEL Modifier: final", "DEL SimpleType: String", "DEL Modifier: public", "DEL Modifier: final", "DEL StringLiteral: \"db.update.additions.allowed\"", "DEL Modifier: public", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL StringLiteral: \".locked\"", "DEL SimpleType: String", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: CrawlDb", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleType: String", "DEL StringLiteral: \"current\"", "DEL SimpleName: String", "DEL SimpleName: LOCK_NAME", "DEL SimpleName: CURRENT_NAME", "DEL TypeDeclaration: interface", "DEL SimpleName: String"]}]}}, {"CrawlDb_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one or more(0)", "Delete TextElement: contributor license agreements.  See the NOTICE file distributed with(1)", "Delete TextElement: this work for additional information regarding copyright ownership.(2)", "Delete TextElement: The ASF licenses this file to You under the Apache License, Version 2.0(3)", "Delete TextElement: (the \"License\"); you may not use this file except in compliance with(4)", "Delete TextElement: the License.  You may obtain a copy of the License at(5)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(6)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(7)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(8)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(9)", "Delete TextElement: See the License for the specific language governing permissions and(10)", "Delete TextElement: limitations under the License.(11)", "Delete TagElement(12)", "Delete Javadoc(13)", "Delete QualifiedName: org.apache.nutch.crawl(14)", "Delete PackageDeclaration(15)", "Delete Modifier: public(16)", "Delete SimpleName: CrawlDb(17)", "Delete Modifier: public(18)", "Delete Modifier: static(19)", "Delete Modifier: final(20)", "Delete SimpleName: String(21)", "Delete SimpleType: String(22)", "Delete SimpleName: CRAWLDB_ADDITIONS_ALLOWED(23)", "Delete StringLiteral: \"db.update.additions.allowed\"(24)", "Delete VariableDeclarationFragment(25)", "Delete FieldDeclaration(26)", "Delete Modifier: public(27)", "Delete Modifier: static(28)", "Delete Modifier: final(29)", "Delete SimpleName: String(30)", "Delete SimpleType: String(31)", "Delete SimpleName: CURRENT_NAME(32)", "Delete StringLiteral: \"current\"(33)", "Delete VariableDeclarationFragment(34)", "Delete FieldDeclaration(35)", "Delete Modifier: public(36)", "Delete Modifier: static(37)", "Delete Modifier: final(38)", "Delete SimpleName: String(39)", "Delete SimpleType: String(40)", "Delete SimpleName: LOCK_NAME(41)", "Delete StringLiteral: \".locked\"(42)", "Delete VariableDeclarationFragment(43)", "Delete FieldDeclaration(44)", "Delete TypeDeclaration: interface(45)"]}}, {"DbUpdateReducer_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: CRAWLDB_ADDITIONS_ALLOWED to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"db.update.additions.allowed\" to VariableDeclarationFragment at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 3"]}, {"root": "INS SimpleName: CRAWLDB_ADDITIONS_ALLOWED to MethodInvocation at 2", "operations": ["INS SimpleName: CRAWLDB_ADDITIONS_ALLOWED to MethodInvocation at 2"]}, {"root": "DEL QualifiedName: CrawlDb.CRAWLDB_ADDITIONS_ALLOWED", "operations": ["DEL QualifiedName: CrawlDb.CRAWLDB_ADDITIONS_ALLOWED"]}]}}, {"DbUpdateReducer_diff": {"operations": ["Insert FieldDeclaration(59) into TypeDeclaration: class(637) at 3", "Insert Modifier: public(51) into FieldDeclaration(59) at 0", "Insert Modifier: static(52) into FieldDeclaration(59) at 1", "Insert Modifier: final(53) into FieldDeclaration(59) at 2", "Insert SimpleType: String(55) into FieldDeclaration(59) at 3", "Insert VariableDeclarationFragment(58) into FieldDeclaration(59) at 4", "Insert SimpleName: String(54) into SimpleType: String(55) at 0", "Insert SimpleName: CRAWLDB_ADDITIONS_ALLOWED(56) into VariableDeclarationFragment(58) at 0", "Insert StringLiteral: \"db.update.additions.allowed\"(57) into VariableDeclarationFragment(58) at 1", "Insert SimpleName: CRAWLDB_ADDITIONS_ALLOWED(143) into MethodInvocation(145) at 2", "Delete QualifiedName: CrawlDb.CRAWLDB_ADDITIONS_ALLOWED(134)"]}}, {"MapWritable_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: The ASF licenses this file to You under the Apache License, Version 2.0", "DEL TextElement: limitations under the License.", "DEL TextElement: the License.  You may obtain a copy of the License at", "DEL TextElement: contributor license agreements.  See the NOTICE file distributed with", "DEL TextElement: (the \"License\"); you may not use this file except in compliance with", "DEL QualifiedName: org.apache.nutch.crawl", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL PackageDeclaration", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one or more", "DEL Javadoc", "DEL TextElement: this work for additional information regarding copyright ownership.", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.LinkedList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Set", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.Log", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.logging.LogFactory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.BytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DataInputBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DataOutputBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.FloatWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.LongWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MD5Hash", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.NullWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.ObjectWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Text", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.util.StringUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.nutch.protocol.ProtocolStatus", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: isEmpty", "DEL ExpressionStatement", "DEL SimpleName: fIdFirst", "DEL SimpleName: id", "DEL SimpleName: fLast", "DEL SimpleName: DataInput", "DEL SimpleType: IllegalArgumentException", "DEL TypeLiteral", "DEL Block", "DEL SimpleName: KeyValueEntry", "DEL PrefixExpression: ++", "DEL ReturnStatement", "DEL CastExpression", "DEL SimpleType: StringBuffer", "DEL Block", "DEL Assignment: =", "DEL SimpleType: Writable", "DEL VariableDeclarationStatement", "DEL SimpleName: oldValue", "DEL MethodInvocation", "DEL Assignment: =", "DEL QualifiedName: fLast.fNextEntry", "DEL SimpleName: addIdEntry", "DEL ExpressionStatement", "DEL SimpleType: Writable", "DEL VariableDeclarationFragment", "DEL SimpleName: obj", "DEL SimpleName: HashMap", "DEL SimpleName: newEntry", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleName: id", "DEL SimpleName: put", "DEL SimpleType: IOException", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: Writable", "DEL IfStatement", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Block", "DEL FieldDeclaration", "DEL PrefixExpression: -", "DEL SimpleName: Text", "DEL SimpleName: entry", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: fSize", "DEL Modifier: public", "DEL SimpleName: predecessor", "DEL SimpleName: Log", "DEL SimpleType: Writable", "DEL SimpleName: fFirst", "DEL SimpleName: out", "DEL TagElement: @author", "DEL SimpleName: fFirst", "DEL QualifiedName: org.apache.nutch.protocol.Content", "DEL PrefixExpression: -", "DEL SimpleName: e1", "DEL SimpleName: get", "DEL SimpleName: fIdCount", "DEL TypeLiteral", "DEL QualifiedName: map.fFirst", "DEL SimpleName: CLASS_ID_MAP", "DEL ExpressionStatement", "DEL PrimitiveType: byte", "DEL SimpleName: i", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: getClass", "DEL SimpleName: oldValue", "DEL TypeLiteral", "DEL CastExpression", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: getClassId", "DEL Modifier: public", "DEL SimpleName: Byte", "DEL SimpleName: write", "DEL SimpleName: oldValue", "DEL SimpleName: addToMap", "DEL SimpleName: KeyValueEntry", "DEL NullLiteral", "DEL SimpleType: MapWritable", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: toString", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL NullLiteral", "DEL SimpleName: newEntry", "DEL SimpleName: fFirst", "DEL SimpleName: clazz", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: entry.fValue", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Class", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: ProtocolStatus", "DEL ExpressionStatement", "DEL TextElement: into the header of each MapWritable that uses these types.", "DEL ExpressionStatement", "DEL SimpleType: Writable", "DEL ExpressionStatement", "DEL TagElement: @deprecated", "DEL SimpleName: readByte", "DEL MethodDeclaration", "DEL QualifiedName: org.apache.nutch.parse.ParseData", "DEL VariableDeclarationFragment", "DEL SimpleName: Byte", "DEL SimpleName: containsKey", "DEL MethodInvocation", "DEL SimpleName: out", "DEL SingleVariableDeclaration", "DEL SimpleName: predecessor", "DEL InfixExpression: !=", "DEL SimpleName: obj", "DEL SimpleName: MapWritable", "DEL SimpleType: DataInputBuffer", "DEL TextElement: 255 different class types can be used for key and value objects.", "DEL WhileStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: writeByte", "DEL SimpleType: Byte", "DEL QualifiedName: entry.fValue", "DEL SimpleName: getClass", "DEL ExpressionStatement", "DEL Modifier: private", "DEL MethodInvocation", "DEL QualifiedName: entry.fNextEntry", "DEL Assignment: =", "DEL SimpleName: Class", "DEL IfStatement", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: MapWritable", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleType: Writable", "DEL CastExpression", "DEL SimpleType: org.apache.nutch.parse.ParseText", "DEL Block", "DEL NullLiteral", "DEL ThrowStatement", "DEL SimpleType: ClassIdEntry", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Modifier: final", "DEL Modifier: static", "DEL SimpleName: Writable", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: set1", "DEL MethodDeclaration", "DEL SimpleType: Writable", "DEL SimpleName: fLast", "DEL SimpleName: MapWritable", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL TypeLiteral", "DEL SingleVariableDeclaration", "DEL SimpleName: fIdCount", "DEL SimpleName: toString", "DEL SimpleName: e2", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleType: Byte", "DEL WhileStatement", "DEL Assignment: =", "DEL SimpleName: StringBuffer", "DEL Block", "DEL SimpleType: IOException", "DEL PrimitiveType: byte", "DEL NullLiteral", "DEL ParenthesizedExpression", "DEL SimpleName: set", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL SimpleName: append", "DEL SimpleName: Byte", "DEL SimpleName: readByte", "DEL InstanceofExpression", "DEL Block", "DEL Assignment: =", "DEL InfixExpression: !=", "DEL QualifiedName: map.fSize", "DEL SimpleName: writeByte", "DEL SimpleName: i", "DEL SimpleName: writeInt", "DEL Assignment: =", "DEL SimpleName: ClassIdEntry", "DEL QualifiedName: entry.fValue", "DEL SimpleName: clazz", "DEL SimpleName: getClass", "DEL SimpleName: MapWritable", "DEL PrefixExpression: -", "DEL MethodDeclaration", "DEL ParameterizedType: HashMap<Byte,Class>", "DEL SimpleName: readByte", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL SimpleName: fFirst", "DEL SimpleName: valueId", "DEL SimpleName: fValue", "DEL SimpleName: equals", "DEL WhileStatement", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL SimpleName: entry", "DEL ExpressionStatement", "DEL SimpleType: org.apache.nutch.parse.ParseData", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: Byte", "DEL ReturnStatement", "DEL NumberLiteral: 124", "DEL ReturnStatement", "DEL TextElement: A writable map, with a similar behavior as <code>java.util.HashMap</code>.", "DEL Assignment: =", "DEL Modifier: private", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: readFields", "DEL SimpleType: Object", "DEL TypeLiteral", "DEL SimpleName: last", "DEL MethodDeclaration", "DEL SimpleName: entry", "DEL InfixExpression: !=", "DEL Assignment: =", "DEL SimpleName: entry", "DEL Block", "DEL SimpleName: Byte", "DEL ParameterizedType: LinkedList<Writable>", "DEL PrefixExpression: -", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL Block", "DEL CastExpression", "DEL InfixExpression: ==", "DEL SimpleType: Byte", "DEL ExpressionStatement", "DEL PrimitiveType: boolean", "DEL SimpleName: id", "DEL VariableDeclarationFragment", "DEL SimpleName: entry", "DEL SimpleType: FloatWritable", "DEL MethodInvocation", "DEL SimpleName: addToMap", "DEL SimpleName: KeyValueEntry", "DEL SimpleType: Byte", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: fIdLast", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: fValueClassId", "DEL Modifier: public", "DEL Block", "DEL SimpleType: Writable", "DEL PrimitiveType: byte", "DEL SimpleName: add", "DEL MethodInvocation", "DEL NumberLiteral: 23", "DEL SimpleName: KeyValueEntry", "DEL QualifiedName: entry.fKey", "DEL QualifiedName: entry.fNextEntry", "DEL PrimitiveType: void", "DEL ForStatement", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: HashSet", "DEL Block", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL StringLiteral: \":\"", "DEL Assignment: =", "DEL PrimitiveType: boolean", "DEL ClassInstanceCreation", "DEL TextElement: In addition to the size of key and value writable tuple two additional bytes", "DEL SimpleType: NullWritable", "DEL Block", "DEL SimpleName: createInternalIdClassEntries", "DEL VariableDeclarationStatement", "DEL Block", "DEL Block", "DEL SimpleType: KeyValueEntry", "DEL MethodInvocation", "DEL Assignment: =", "DEL BooleanLiteral: false", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Initializer", "DEL SimpleName: IOException", "DEL NullLiteral", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: clazz", "DEL SimpleType: Writable", "DEL TextElement:  Use org.apache.hadoop.io.MapWritable instead.", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL Javadoc", "DEL SimpleName: out", "DEL SimpleName: entry", "DEL NumberLiteral: 115", "DEL SimpleName: fclazz", "DEL SimpleName: Writable", "DEL Block", "DEL SimpleName: Class", "DEL SimpleType: KeyValueEntry", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleType: Writable", "DEL SimpleName: value", "DEL InfixExpression: ==", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: Writable", "DEL SimpleName: set2", "DEL VariableDeclarationFragment", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL SimpleName: fKeyClassId", "DEL SimpleType: Writable", "DEL ExpressionStatement", "DEL SimpleName: entry", "DEL SimpleType: Object", "DEL NullLiteral", "DEL Modifier: private", "DEL SimpleName: entry", "DEL SimpleName: readByte", "DEL SimpleName: ObjectWritable", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleType: Text", "DEL IfStatement", "DEL SimpleName: isWarnEnabled", "DEL SimpleName: addIdEntry", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: Byte", "DEL VariableDeclarationFragment", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: KeyValueEntry", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: Class", "DEL SimpleName: KeyValueEntry", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: id", "DEL VariableDeclarationFragment", "DEL QualifiedName: entry.fNextEntry", "DEL InfixExpression: >", "DEL SimpleName: map", "DEL SimpleName: e2", "DEL ExpressionStatement", "DEL Modifier: public", "DEL InfixExpression: >", "DEL Assignment: =", "DEL SimpleName: readFields", "DEL SimpleName: forName", "DEL VariableDeclarationExpression", "DEL VariableDeclarationStatement", "DEL Modifier: private", "DEL SimpleName: LongWritable", "DEL Assignment: =", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: map", "DEL InfixExpression: >", "DEL SimpleName: fOld", "DEL PrefixExpression: -", "DEL QualifiedName: entry.fKey", "DEL Assignment: +=", "DEL WhileStatement", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL IfStatement", "DEL Block", "DEL SimpleName: BytesWritable", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: predecessor", "DEL QualifiedName: entry.fValue", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: dib", "DEL MethodInvocation", "DEL NumberLiteral: 118", "DEL TagElement", "DEL Modifier: public", "DEL QualifiedName: entry.fKeyClassId", "DEL VariableDeclarationFragment", "DEL SimpleName: id", "DEL StringLiteral: \"Unable to load internal map entry\"", "DEL SimpleName: fLast", "DEL ExpressionStatement", "DEL SimpleName: fFirst", "DEL VariableDeclarationFragment", "DEL SimpleName: byteId", "DEL SimpleName: clazz", "DEL SimpleName: i", "DEL InfixExpression: ==", "DEL SimpleName: Byte", "DEL SimpleName: KeyValueEntry", "DEL ClassInstanceCreation", "DEL SimpleName: fLast", "DEL IfStatement", "DEL SimpleName: clazz", "DEL SimpleName: toString", "DEL Assignment: =", "DEL SimpleType: LongWritable", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL SimpleType: String", "DEL SimpleName: readInt", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: out", "DEL TypeLiteral", "DEL ReturnStatement", "DEL SimpleName: get", "DEL SimpleName: LOG", "DEL SimpleName: getClass", "DEL NullLiteral", "DEL TypeLiteral", "DEL IfStatement", "DEL SimpleName: entry", "DEL Modifier: private", "DEL SimpleName: createInternalIdClassEntries", "DEL SimpleType: MapWritable", "DEL SingleVariableDeclaration", "DEL SimpleName: entry", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: warn", "DEL SimpleType: Map", "DEL SimpleName: hashCode", "DEL SimpleName: fIdFirst", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL TextElement: are stored to identify the Writable classes. This means that a maximum of", "DEL VariableDeclarationFragment", "DEL QualifiedName: entry.fNextIdEntry", "DEL CastExpression", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleType: IOException", "DEL SimpleName: fIdFirst", "DEL SimpleType: MapWritable", "DEL SimpleName: clazz", "DEL PrefixExpression: -", "DEL SimpleName: keyClass", "DEL NumberLiteral: 117", "DEL QualifiedName: entry.fValue", "DEL SimpleName: MapWritable", "DEL SimpleName: LOG", "DEL Modifier: final", "DEL QualifiedName: entry.fNextEntry", "DEL Block", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: fId", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: id", "DEL Modifier: private", "DEL TextElement:  map to copy from", "DEL Modifier: public", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"Unable to load meta data entry, ignoring.. : \"", "DEL SimpleName: stringifyException", "DEL SimpleName: Class", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: entry", "DEL ParameterizedType: HashSet<KeyValueEntry>", "DEL SimpleName: addToMap", "DEL SimpleName: id", "DEL SimpleName: oldValue", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: ProtocolStatus", "DEL SimpleName: entryValueId", "DEL WhileStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: next", "DEL ReturnStatement", "DEL SimpleName: entry", "DEL TryStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \" \"", "DEL SimpleName: getClass", "DEL Block", "DEL SimpleName: predecessor", "DEL SimpleName: fKey", "DEL SimpleName: fSize", "DEL Block", "DEL SimpleName: in", "DEL NullLiteral", "DEL QualifiedName: entry.fId", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: fValue", "DEL SimpleName: size", "DEL SingleVariableDeclaration", "DEL QualifiedName: entry.fValue", "DEL QualifiedName: entry.fNextIdEntry", "DEL SimpleName: value", "DEL SimpleName: hashCode", "DEL ReturnStatement", "DEL SimpleName: in", "DEL IfStatement", "DEL NullLiteral", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: iterator", "DEL SimpleName: clazz", "DEL SimpleType: ClassIdEntry", "DEL QualifiedName: entry.fValue", "DEL SimpleName: equals", "DEL Assignment: =", "DEL SimpleName: Class", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleName: in", "DEL SimpleName: IOException", "DEL PostfixExpression: --", "DEL ReturnStatement", "DEL SimpleName: equals", "DEL SimpleName: equals", "DEL SimpleName: addToMap", "DEL SimpleName: put", "DEL SimpleName: LOG", "DEL ParameterizedType: HashMap<Class,Byte>", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: size", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: fFirst", "DEL VariableDeclarationFragment", "DEL SimpleName: entry", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL Block", "DEL Block", "DEL SimpleName: hasNext", "DEL CastExpression", "DEL NullLiteral", "DEL SimpleName: out", "DEL Block", "DEL SimpleName: fKey", "DEL PrimitiveType: int", "DEL SimpleName: entry", "DEL SimpleName: fSize", "DEL SimpleType: Writable", "DEL SimpleName: ClassIdEntry", "DEL VariableDeclarationFragment", "DEL SimpleName: Byte", "DEL SimpleName: fIdCount", "DEL Modifier: private", "DEL FieldDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: MapWritable", "DEL MethodDeclaration", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL Assignment: =", "DEL SimpleName: entry", "DEL SimpleType: Iterator", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: set", "DEL SimpleName: in", "DEL FieldDeclaration", "DEL SimpleType: Writable", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: clazz", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: hashCode", "DEL SimpleType: Class", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: Byte", "DEL NumberLiteral: 125", "DEL VariableDeclarationStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: in", "DEL SimpleType: Byte", "DEL SimpleType: BytesWritable", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL ReturnStatement", "DEL InfixExpression: !=", "DEL NullLiteral", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: Byte", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: addToMap", "DEL Block", "DEL SimpleName: Writable", "DEL Javadoc", "DEL MethodInvocation", "DEL ParameterizedType: LinkedList<Writable>", "DEL Block", "DEL SimpleName: ClassIdEntry", "DEL SimpleName: Byte", "DEL ParameterizedType: Map<Class,Byte>", "DEL QualifiedName: entry.fValueClassId", "DEL SimpleName: addToMap", "DEL SimpleName: fSize", "DEL CatchClause", "DEL QualifiedName: entry.fId", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: get", "DEL Modifier: static", "DEL QualifiedName: predecessor.fNextEntry", "DEL SimpleName: Object", "DEL SimpleType: Exception", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: getLog", "DEL SimpleName: getClass", "DEL SimpleName: fFirst", "DEL SimpleName: entry", "DEL SimpleName: String", "DEL SimpleName: Class", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: KeyValueEntry", "DEL ForStatement", "DEL SimpleName: CLASS_ID_MAP", "DEL SimpleName: Exception", "DEL ReturnStatement", "DEL SimpleName: seed", "DEL MethodInvocation", "DEL SimpleName: write", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL SimpleName: ClassIdEntry", "DEL NullLiteral", "DEL SimpleName: entry", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL CastExpression", "DEL SimpleName: clear", "DEL SimpleName: Set", "DEL Assignment: =", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: KeyValueEntry", "DEL NumberLiteral: 127", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: ClassIdEntry", "DEL MethodDeclaration", "DEL SimpleName: fNextEntry", "DEL SimpleName: id", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL Modifier: private", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: HashMap", "DEL SimpleName: KeyValueEntry", "DEL WhileStatement", "DEL Block", "DEL InfixExpression: <", "DEL SimpleName: valueId", "DEL SimpleType: HashSet", "DEL InfixExpression: ==", "DEL SimpleName: valueClass", "DEL SimpleName: e2", "DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: clazz", "DEL ExpressionStatement", "DEL QualifiedName: entry.fKey", "DEL ClassInstanceCreation", "DEL SimpleType: ClassIdEntry", "DEL ThrowStatement", "DEL SimpleName: id", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL SimpleName: e", "DEL ClassInstanceCreation", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL SimpleName: getKeyValueEntry", "DEL QualifiedName: fFirst.fNextEntry", "DEL ExpressionStatement", "DEL SimpleName: clazz", "DEL ParameterizedType: Iterator<Writable>", "DEL SimpleName: key", "DEL Block", "DEL SimpleType: KeyValueEntry", "DEL Modifier: public", "DEL SimpleType: KeyValueEntry", "DEL Assignment: =", "DEL Block", "DEL Javadoc", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleType: Writable", "DEL SimpleName: obj", "DEL QualifiedName: entry.fValue", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleType: Byte", "DEL SimpleType: MD5Hash", "DEL SimpleName: remove", "DEL SimpleName: fNextIdEntry", "DEL VariableDeclarationFragment", "DEL SimpleName: ClassIdEntry", "DEL SimpleType: ClassIdEntry", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: entryKeyId", "DEL ReturnStatement", "DEL SimpleName: Map", "DEL SimpleName: entry", "DEL Modifier: public", "DEL SimpleName: id", "DEL SimpleName: key", "DEL SimpleName: fIdFirst", "DEL MethodInvocation", "DEL SimpleName: list", "DEL SingleVariableDeclaration", "DEL SimpleType: Class", "DEL SimpleName: ClassIdEntry", "DEL TypeLiteral", "DEL ReturnStatement", "DEL SimpleName: hashCode", "DEL SimpleName: set", "DEL TypeDeclaration: class", "DEL SimpleType: Byte", "DEL ParameterizedType: HashSet<KeyValueEntry>", "DEL VariableDeclarationFragment", "DEL SimpleName: hash", "DEL SimpleName: in", "DEL QualifiedName: entry.fNextEntry", "DEL FieldDeclaration", "DEL StringLiteral: \"this map cannot be copied: \"", "DEL SimpleName: HashSet", "DEL Block", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL Block", "DEL NumberLiteral: 123", "DEL SingleVariableDeclaration", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: byteId", "DEL SimpleName: Class", "DEL MethodInvocation", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL MethodDeclaration", "DEL SimpleType: Byte", "DEL VariableDeclarationFragment", "DEL SimpleType: Class", "DEL SimpleType: KeyValueEntry", "DEL QualifiedName: entry.fValue", "DEL SimpleType: Writable", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SimpleName: KeyValueEntry", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Iterator", "DEL SimpleName: key", "DEL SimpleName: id", "DEL MethodInvocation", "DEL SimpleName: getClassId", "DEL SimpleName: toString", "DEL SimpleName: value", "DEL SimpleName: byteValue", "DEL QualifiedName: last.fNextEntry", "DEL SimpleName: i", "DEL SimpleName: entry", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL SimpleName: hash", "DEL SimpleType: Class", "DEL SimpleName: clazz", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleType: DataOutputBuffer", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: entry", "DEL SimpleName: fFirst", "DEL SimpleName: Writable", "DEL QualifiedName: entry.fclazz", "DEL ParameterizedType: Collection<Writable>", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: KeyValueEntry", "DEL Modifier: public", "DEL SimpleName: Class", "DEL FieldDeclaration", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: KeyValueEntry", "DEL VariableDeclarationFragment", "DEL TextElement: an entry holds writable key and value ", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: fFirst", "DEL NumberLiteral: 120", "DEL SimpleType: MapWritable", "DEL InfixExpression: <", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL NullLiteral", "DEL QualifiedName: entry.fValue", "DEL SimpleName: KeyValueEntry", "DEL InfixExpression: !=", "DEL SimpleName: put", "DEL NullLiteral", "DEL SimpleName: id", "DEL Assignment: =", "DEL ReturnStatement", "DEL TextElement:  Stefan Groschupf", "DEL NullLiteral", "DEL MethodDeclaration", "DEL SimpleName: StringUtils", "DEL SimpleName: KeyValueEntry", "DEL SimpleType: org.apache.nutch.protocol.Content", "DEL PrimitiveType: int", "DEL SimpleName: addToMap", "DEL SimpleName: Writable", "DEL SimpleType: Byte", "DEL SimpleName: hashCode", "DEL Assignment: =", "DEL SimpleName: KeyValueEntry", "DEL MethodInvocation", "DEL QualifiedName: entry.fKey", "DEL SimpleType: IOException", "DEL Block", "DEL PrefixExpression: -", "DEL PrimitiveType: byte", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL PrimitiveType: byte", "DEL SimpleName: KeyValueEntry", "DEL ExpressionStatement", "DEL WhileStatement", "DEL CastExpression", "DEL SimpleName: entry", "DEL VariableDeclarationFragment", "DEL SimpleName: fFirst", "DEL MethodInvocation", "DEL IfStatement", "DEL ReturnStatement", "DEL CastExpression", "DEL SimpleName: Writable", "DEL SimpleName: fIdCount", "DEL ClassInstanceCreation", "DEL TypeLiteral", "DEL Block", "DEL InfixExpression: !=", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SimpleName: e", "DEL SimpleName: oldValue", "DEL SimpleType: Byte", "DEL InfixExpression: *", "DEL SimpleName: buffer", "DEL SimpleName: readFields", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: Writable", "DEL SimpleName: Writable", "DEL SimpleName: map", "DEL Assignment: =", "DEL InfixExpression: *", "DEL SimpleName: HashSet", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL QualifiedName: entry.fNextEntry", "DEL SimpleName: readString", "DEL NullLiteral", "DEL Block", "DEL SimpleName: keyClass", "DEL SimpleName: entry", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL WhileStatement", "DEL SimpleName: toString", "DEL SimpleName: Writable", "DEL SimpleName: id", "DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: key", "DEL QualifiedName: e2.fNextEntry", "DEL ParameterizedType: Map<Byte,Class>", "DEL MethodInvocation", "DEL SimpleName: fOld", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL QualifiedName: entry.fNextEntry", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: MapWritable", "DEL SimpleName: key", "DEL Block", "DEL MethodDeclaration", "DEL TypeLiteral", "DEL SimpleType: Byte", "DEL PrefixExpression: -", "DEL PrefixExpression: -", "DEL TryStatement", "DEL CatchClause", "DEL SimpleName: getClass", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleType: KeyValueEntry", "DEL SingleVariableDeclaration", "DEL SimpleType: Set", "DEL NumberLiteral: 0", "DEL SimpleName: Byte", "DEL SimpleName: clear", "DEL Modifier: private", "DEL Block", "DEL NullLiteral", "DEL ReturnStatement", "DEL SimpleType: Writable", "DEL ReturnStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: entryKeyId", "DEL CatchClause", "DEL SimpleName: last", "DEL Assignment: +=", "DEL QualifiedName: entry.fNextIdEntry", "DEL SimpleName: Class", "DEL SimpleName: writeByte", "DEL IfStatement", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleType: ClassIdEntry", "DEL SimpleName: warn", "DEL SimpleName: iterator", "DEL SimpleType: LinkedList", "DEL NumberLiteral: 114", "DEL SimpleName: readFields", "DEL Block", "DEL SimpleName: key", "DEL SimpleName: IOException", "DEL SimpleType: Byte", "DEL IfStatement", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: add", "DEL ReturnStatement", "DEL SimpleName: list", "DEL VariableDeclarationStatement", "DEL InfixExpression: &&", "DEL SimpleName: entry", "DEL Block", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: entry", "DEL NumberLiteral: 116", "DEL SimpleName: dib", "DEL PrimitiveType: byte", "DEL SimpleName: Map", "DEL SimpleType: Byte", "DEL SimpleType: IOException", "DEL NullLiteral", "DEL SimpleType: Writable", "DEL SimpleName: KeyValueEntry", "DEL NumberLiteral: 0", "DEL SimpleName: entry", "DEL SimpleName: fIdFirst", "DEL VariableDeclarationStatement", "DEL SimpleName: KeyValueEntry", "DEL Block", "DEL SimpleName: valueId", "DEL SimpleName: last", "DEL Assignment: =", "DEL MethodInvocation", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: fFirst", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleType: Byte", "DEL SimpleName: map", "DEL SimpleType: KeyValueEntry", "DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleName: seed", "DEL SimpleName: hash", "DEL Block", "DEL SimpleType: Class", "DEL ParameterizedType: HashSet<Writable>", "DEL SimpleName: equals", "DEL VariableDeclarationStatement", "DEL SimpleName: fKey", "DEL MethodDeclaration", "DEL SimpleName: e1", "DEL FieldDeclaration", "DEL IfStatement", "DEL SimpleType: org.apache.nutch.fetcher.FetcherOutput", "DEL SimpleName: fLast", "DEL FieldDeclaration", "DEL WhileStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: entryValueId", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL ExpressionStatement", "DEL SimpleName: StringBuffer", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: toString", "DEL Modifier: private", "DEL SimpleName: Writable", "DEL SimpleName: LinkedList", "DEL SimpleName: ClassIdEntry", "DEL VariableDeclarationStatement", "DEL SimpleName: out", "DEL SimpleName: LOG", "DEL PrefixExpression: -", "DEL BooleanLiteral: false", "DEL SimpleName: keyId", "DEL VariableDeclarationStatement", "DEL SimpleName: getClass", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: map", "DEL SimpleName: obj", "DEL SimpleType: Map", "DEL SimpleType: ObjectWritable", "DEL PrimitiveType: byte", "DEL SimpleName: hash", "DEL MethodInvocation", "DEL QualifiedName: fLast.fNextEntry", "DEL NullLiteral", "DEL NumberLiteral: 128", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: Byte", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL IfStatement", "DEL SimpleName: KeyValueEntry", "DEL ParameterizedType: Set<Writable>", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL SimpleName: id", "DEL NumberLiteral: 0", "DEL InfixExpression: +", "DEL ClassInstanceCreation", "DEL SimpleType: KeyValueEntry", "DEL ExpressionStatement", "DEL SimpleName: ID_CLASS_MAP", "DEL SimpleName: getLength", "DEL SimpleType: Writable", "DEL SimpleName: entry", "DEL SimpleName: id", "DEL SimpleName: in", "DEL SimpleName: size", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Writable", "DEL PrimitiveType: byte", "DEL SimpleName: Class", "DEL SimpleType: Class", "DEL SimpleName: findEntryByKey", "DEL ExpressionStatement", "DEL SimpleName: Collection", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleName: CLASS_ID_MAP", "DEL SimpleName: Writable", "DEL SimpleType: ClassIdEntry", "DEL SimpleType: Writable", "DEL Assignment: =", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"unable to load class for id: \"", "DEL WhileStatement", "DEL SimpleType: HashSet", "DEL SingleVariableDeclaration", "DEL QualifiedName: entry.fNextEntry", "DEL Assignment: =", "DEL SimpleType: Writable", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: IntWritable", "DEL NullLiteral", "DEL QualifiedName: entry.fKey", "DEL StringLiteral: \"unable to instantiate class: \"", "DEL IfStatement", "DEL SimpleName: KeyValueEntry", "DEL SimpleType: Writable", "DEL SimpleName: e", "DEL VariableDeclarationStatement", "DEL SimpleName: equals", "DEL Block", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: entry", "DEL InstanceofExpression", "DEL InfixExpression: ==", "DEL InfixExpression: !=", "DEL CastExpression", "DEL SimpleName: e1", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL SimpleName: write", "DEL Modifier: private", "DEL MethodInvocation", "DEL QualifiedName: entry.fclazz", "DEL SimpleName: value", "DEL SimpleName: i", "DEL QualifiedName: fFirst.fKey", "DEL SimpleName: fIdCount", "DEL ReturnStatement", "DEL ParameterizedType: HashSet<Writable>", "DEL PrefixExpression: -", "DEL PrefixExpression: ++", "DEL WhileStatement", "DEL SimpleName: fIdCount", "DEL SimpleName: value", "DEL SimpleName: fLast", "DEL SimpleName: buffer", "DEL NumberLiteral: 121", "DEL SimpleName: addToMap", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL SimpleName: fIdCount", "DEL QualifiedName: entry.fNextEntry", "DEL SimpleName: fLast", "DEL SimpleName: buffer", "DEL FieldAccess", "DEL SimpleName: e", "DEL IfStatement", "DEL SimpleType: KeyValueEntry", "DEL Assignment: =", "DEL SimpleName: map", "DEL WhileStatement", "DEL InfixExpression: ==", "DEL SimpleName: e1", "DEL ReturnStatement", "DEL Modifier: static", "DEL TextElement: deserialization to break any possible references to contained objects.", "DEL Assignment: =", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: ID_CLASS_MAP", "DEL InfixExpression: !=", "DEL SimpleType: ClassIdEntry", "DEL SimpleType: KeyValueEntry", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: DataOutputBuffer", "DEL SimpleName: KeyValueEntry", "DEL MethodInvocation", "DEL SimpleName: DataInputBuffer", "DEL QualifiedName: e1.fNextEntry", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: fLast", "DEL SimpleType: ClassIdEntry", "DEL NumberLiteral: 0", "DEL SimpleName: key", "DEL PrimitiveType: byte", "DEL SimpleName: clazz", "DEL ExpressionStatement", "DEL NumberLiteral: 122", "DEL SimpleType: Byte", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleName: addToMap", "DEL PrefixExpression: -", "DEL SimpleName: getData", "DEL VariableDeclarationStatement", "DEL SimpleName: entry", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: entry", "DEL Block", "DEL InfixExpression: +", "DEL SimpleName: entryValueId", "DEL SimpleName: addToMap", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: seed", "DEL SimpleType: Writable", "DEL Assignment: =", "DEL SimpleName: FloatWritable", "DEL Modifier: private", "DEL SimpleName: entry", "DEL InfixExpression: !=", "DEL MethodDeclaration", "DEL SimpleName: key", "DEL SimpleType: LinkedList", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleType: KeyValueEntry", "DEL SimpleType: MapWritable", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SimpleName: e", "DEL SimpleName: Writable", "DEL Assignment: =", "DEL Assignment: =", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL CastExpression", "DEL MethodDeclaration", "DEL SimpleName: size", "DEL SimpleName: key", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: addToMap", "DEL SimpleName: Writable", "DEL QualifiedName: entry.fValue", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL SimpleName: set1", "DEL SimpleName: toString", "DEL SimpleType: Writable", "DEL MethodInvocation", "DEL Assignment: =", "DEL ExpressionStatement", "DEL IfStatement", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL SimpleName: fLast", "DEL SimpleName: clazz", "DEL SimpleName: dob", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: fOld", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL SimpleName: id", "DEL SimpleName: e", "DEL PrimitiveType: byte", "DEL ReturnStatement", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleName: equals", "DEL SimpleName: IOException", "DEL QualifiedName: entry.fNextEntry", "DEL Block", "DEL Modifier: static", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleName: entry", "DEL QualifiedName: entry.fNextEntry", "DEL SimpleName: writeByte", "DEL PrimitiveType: void", "DEL CastExpression", "DEL QualifiedName: entry.fNextEntry", "DEL SimpleType: DataOutput", "DEL VariableDeclarationStatement", "DEL SimpleType: IntWritable", "DEL SimpleName: newInstance", "DEL SimpleType: Writable", "DEL SimpleName: MapWritable", "DEL Modifier: private", "DEL Assignment: =", "DEL InfixExpression: !=", "DEL SimpleName: Class", "DEL SimpleName: set2", "DEL InfixExpression: &&", "DEL SimpleName: add", "DEL SingleVariableDeclaration", "DEL InfixExpression: ==", "DEL PrimitiveType: byte", "DEL SimpleType: Class", "DEL VariableDeclarationFragment", "DEL SimpleName: fIdLast", "DEL InfixExpression: ||", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: i", "DEL SimpleName: values", "DEL SimpleName: CLASS_ID_MAP", "DEL VariableDeclarationStatement", "DEL SimpleName: getClassId", "DEL SimpleName: key", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: HashMap", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL CastExpression", "DEL SimpleName: Writable", "DEL QualifiedName: entry.fKey", "DEL Block", "DEL SimpleName: fIdCount", "DEL InfixExpression: !=", "DEL SimpleName: fValue", "DEL SimpleName: Writable", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: addToMap", "DEL SimpleName: value", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: iterator", "DEL Modifier: public", "DEL CastExpression", "DEL SimpleName: size", "DEL SimpleName: entry", "DEL SimpleName: getKeyValueEntry", "DEL TypeDeclaration: class", "DEL Modifier: private", "DEL SimpleName: keyId", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL SimpleType: Byte", "DEL SimpleName: Writable", "DEL SimpleName: entry", "DEL SimpleName: KeyValueEntry", "DEL Block", "DEL MethodInvocation", "DEL Modifier: private", "DEL Modifier: final", "DEL QualifiedName: entry.fValueClassId", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL SimpleName: id", "DEL SimpleName: entryKeyId", "DEL SimpleName: Byte", "DEL SimpleType: StringBuffer", "DEL Block", "DEL SimpleName: isEmpty", "DEL SimpleName: clazz", "DEL InfixExpression: &&", "DEL SimpleName: Class", "DEL SimpleType: Byte", "DEL SimpleType: Class", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: oldValue", "DEL SimpleName: id", "DEL SimpleName: DataOutputBuffer", "DEL SimpleName: getClassId", "DEL TextElement: Copy constructor. This constructor makes a deep copy, using serialization /", "DEL TextElement: For these custom Writables we write the byte id - utf class name tuple", "DEL ExpressionStatement", "DEL WhileStatement", "DEL Assignment: =", "DEL Modifier: static", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: fFirst", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL TryStatement", "DEL SimpleName: fId", "DEL SimpleName: fFirst", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL PrefixExpression: -", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleType: Writable", "DEL BooleanLiteral: false", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: fSize", "DEL SimpleType: DataInputBuffer", "DEL SimpleName: fSize", "DEL FieldAccess", "DEL SimpleType: Class", "DEL SimpleType: Class", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL PostfixExpression: --", "DEL SimpleName: out", "DEL SimpleName: key", "DEL Modifier: private", "DEL InfixExpression: !=", "DEL SimpleName: clazz", "DEL ExpressionStatement", "DEL Block", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: fSize", "DEL VariableDeclarationFragment", "DEL SimpleName: equals", "DEL SingleVariableDeclaration", "DEL QualifiedName: entry.fKey", "DEL SimpleType: Exception", "DEL SimpleName: dib", "DEL SimpleType: HashSet", "DEL FieldDeclaration", "DEL Assignment: =", "DEL NumberLiteral: 128", "DEL Block", "DEL PrimitiveType: byte", "DEL SimpleName: set2", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL Block", "DEL SimpleName: Byte", "DEL QualifiedName: entry.fclazz", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: keySet", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL Modifier: private", "DEL SimpleName: DataInputBuffer", "DEL SimpleName: entry", "DEL Assignment: =", "DEL SimpleName: set1", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: toString", "DEL SimpleName: map", "DEL SimpleName: isWarnEnabled", "DEL Assignment: =", "DEL SimpleName: write", "DEL SimpleType: HashSet", "DEL VariableDeclarationFragment", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: LogFactory", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL Block", "DEL QualifiedName: entry.fId", "DEL Modifier: public", "DEL SimpleType: KeyValueEntry", "DEL Modifier: final", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: NullWritable", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL SimpleName: fclazz", "DEL TypeLiteral", "DEL Block", "DEL SimpleName: entry", "DEL VariableDeclarationFragment", "DEL SimpleType: KeyValueEntry", "DEL SimpleType: Class", "DEL ExpressionStatement", "DEL Modifier: public", "DEL QualifiedName: fIdLast.fNextIdEntry", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL PrefixExpression: -", "DEL Block", "DEL SimpleName: classId", "DEL SimpleName: findEntryByKey", "DEL SimpleName: out", "DEL QualifiedName: entry.fValue", "DEL TypeDeclaration: class", "DEL SimpleType: DataOutputBuffer", "DEL SimpleName: value", "DEL SimpleName: fIdFirst", "DEL ExpressionStatement", "DEL SimpleName: Writable", "DEL PrimitiveType: void", "DEL SimpleName: fOld", "DEL SimpleName: ClassIdEntry", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: writeString", "DEL MethodInvocation", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: Exception", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleName: keyId", "DEL PrimitiveType: byte", "DEL InfixExpression: !=", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL TextElement: However it is possible to use custom implementations of Writable.", "DEL QualifiedName: entry.fNextEntry", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: classId", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL PrimitiveType: byte", "DEL SimpleName: containsValue", "DEL SimpleName: fIdLast", "DEL Modifier: public", "DEL IfStatement", "DEL SimpleName: keySet", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: clazz", "DEL ReturnStatement", "DEL SimpleName: entry", "DEL SimpleName: Class", "DEL FieldDeclaration", "DEL SimpleType: Class", "DEL SimpleName: entry", "DEL SimpleType: KeyValueEntry", "DEL QualifiedName: entry.fNextEntry", "DEL NullLiteral", "DEL SimpleName: fFirst", "DEL SimpleName: add", "DEL Block", "DEL SimpleName: getClass", "DEL QualifiedName: entry.fKey", "DEL Modifier: private", "DEL ThrowStatement", "DEL SimpleName: set", "DEL SimpleName: LinkedList", "DEL Block", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: IOException", "DEL SimpleName: fFirst", "DEL ExpressionStatement", "DEL SimpleName: HashSet", "DEL ExpressionStatement", "DEL SimpleName: id", "DEL Assignment: =", "DEL SimpleName: reset", "DEL SimpleType: Writable", "DEL PrimitiveType: boolean", "DEL SimpleName: key", "DEL SimpleName: map", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL Modifier: public", "DEL Block", "DEL Block", "DEL NumberLiteral: 128", "DEL PrimitiveType: void", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleType: Writable", "DEL SimpleName: list", "DEL SimpleName: id", "DEL ExpressionStatement", "DEL SimpleName: ID_CLASS_MAP", "DEL InfixExpression: ==", "DEL SimpleType: MapWritable", "DEL SimpleName: valueClass", "DEL ExpressionStatement", "DEL QualifiedName: entry.fValue", "DEL QualifiedName: entry.fKey", "DEL SimpleName: MD5Hash", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL SimpleName: DataOutput", "DEL VariableDeclarationFragment", "DEL SimpleName: newInstance", "DEL Assignment: =", "DEL FieldDeclaration", "DEL SimpleType: KeyValueEntry", "DEL SimpleType: Byte", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL SimpleName: iterator", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL QualifiedName: entry.fKeyClassId", "DEL SimpleName: Byte", "DEL VariableDeclarationStatement", "DEL SimpleName: CLASS_ID_MAP", "DEL MethodDeclaration", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: addIdEntry", "DEL NumberLiteral: 0", "DEL Block", "DEL SimpleName: addToMap", "DEL SimpleName: entry", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: KeyValueEntry", "DEL InfixExpression: ==", "DEL SimpleName: Writable", "DEL VariableDeclarationFragment", "DEL SimpleName: fFirst", "DEL MethodInvocation", "DEL SimpleName: putAll", "DEL SimpleType: KeyValueEntry", "DEL QualifiedName: org.apache.nutch.parse.ParseText", "DEL SimpleType: IOException", "DEL WhileStatement", "DEL Block", "DEL SimpleType: Log", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: newEntry", "DEL SimpleName: dob", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: Byte", "DEL SimpleName: buffer", "DEL SimpleName: fSize", "DEL WhileStatement", "DEL SimpleName: findEntryByKey", "DEL FieldDeclaration", "DEL TextElement: container for Id class tuples ", "DEL SimpleName: entry", "DEL SimpleName: map", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: in", "DEL SimpleName: id", "DEL SimpleName: dob", "DEL SimpleType: IOException", "DEL SimpleName: entry", "DEL SimpleName: fFirst", "DEL SimpleName: HashSet", "DEL ParameterizedType: HashSet<KeyValueEntry>", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL Block", "DEL NumberLiteral: 119", "DEL InfixExpression: +", "DEL SimpleName: entry", "DEL SimpleName: equals", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleType: KeyValueEntry", "DEL SimpleName: fSize", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: KeyValueEntry", "DEL SimpleName: key", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: HashSet", "DEL SimpleName: Text", "DEL VariableDeclarationFragment", "DEL SimpleName: set", "DEL PrefixExpression: !", "DEL QualifiedName: entry.fKey", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL Assignment: =", "DEL WhileStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: getName", "DEL SimpleType: Writable", "DEL SimpleName: addToMap", "DEL SimpleType: KeyValueEntry", "DEL ParenthesizedExpression", "DEL PrimitiveType: byte", "DEL TypeLiteral", "DEL SimpleName: Text", "DEL SimpleName: Byte", "DEL SimpleName: e2", "DEL PrimitiveType: int", "DEL CastExpression", "DEL CastExpression", "DEL Modifier: public", "DEL Block", "DEL SimpleName: dob", "DEL BooleanLiteral: true", "DEL SimpleName: entry", "DEL SimpleType: HashMap", "DEL PostfixExpression: ++", "DEL Modifier: public", "DEL SimpleName: KeyValueEntry", "DEL Block", "DEL QualifiedName: org.apache.nutch.fetcher.FetcherOutput", "DEL PrimitiveType: boolean", "DEL SimpleName: map", "DEL SimpleName: Class", "DEL MethodInvocation", "DEL ParameterizedType: HashSet<KeyValueEntry>", "DEL SimpleType: Byte", "DEL SimpleType: KeyValueEntry", "DEL NumberLiteral: 128", "DEL PrimitiveType: byte", "DEL TextElement: A binary-id to class mapping is defined in a static block of this class.", "DEL SimpleName: byteId", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleType: DataInput", "DEL SimpleName: fKey", "DEL NullLiteral", "DEL SimpleName: Byte", "DEL SimpleName: addToMap", "DEL SimpleName: fFirst", "DEL SimpleType: KeyValueEntry", "DEL PrefixExpression: -", "DEL Block", "DEL SimpleName: clazz", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: HashSet", "DEL SimpleName: ClassIdEntry", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleName: append", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL SimpleName: fValue", "DEL SimpleType: Byte", "DEL SimpleName: key", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleName: entry", "DEL SimpleName: entry", "DEL SimpleName: key", "DEL PrimitiveType: int", "DEL SimpleType: Class", "DEL Modifier: private", "DEL MethodInvocation", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: entry", "DEL NumberLiteral: 0", "DEL SimpleName: fSize", "DEL ExpressionStatement", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleType: HashSet", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: entry", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL Block", "DEL NullLiteral", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL ExpressionStatement", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: in", "DEL SimpleName: id", "DEL SimpleName: Byte", "DEL NumberLiteral: 128", "DEL SimpleName: KeyValueEntry", "DEL SimpleType: Class", "DEL SimpleName: findEntryByKey", "DEL Assignment: =", "DEL NumberLiteral: 126", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleType: Collection", "DEL SimpleName: fFirst", "DEL TagElement", "DEL SimpleName: e", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL SimpleName: out", "DEL Assignment: =", "DEL SimpleName: addIdEntry", "DEL SimpleType: KeyValueEntry", "DEL SimpleType: MapWritable", "DEL SimpleName: classId", "DEL SimpleName: KeyValueEntry", "DEL CastExpression", "DEL InfixExpression: +", "DEL SimpleName: Byte", "DEL SimpleName: Byte", "DEL SimpleName: Writable", "DEL PostfixExpression: --", "DEL NumberLiteral: 0", "DEL Modifier: final", "DEL SimpleName: Writable", "DEL SimpleName: getClassId", "DEL MethodInvocation"]}]}}, {"MapWritable_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one or more(0)", "Delete TextElement: contributor license agreements.  See the NOTICE file distributed with(1)", "Delete TextElement: this work for additional information regarding copyright ownership.(2)", "Delete TextElement: The ASF licenses this file to You under the Apache License, Version 2.0(3)", "Delete TextElement: (the \"License\"); you may not use this file except in compliance with(4)", "Delete TextElement: the License.  You may obtain a copy of the License at(5)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(6)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(7)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(8)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(9)", "Delete TextElement: See the License for the specific language governing permissions and(10)", "Delete TextElement: limitations under the License.(11)", "Delete TagElement(12)", "Delete Javadoc(13)", "Delete QualifiedName: org.apache.nutch.crawl(14)", "Delete PackageDeclaration(15)", "Delete QualifiedName: java.io.DataInput(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.io.DataOutput(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.IOException(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.Collection(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.HashMap(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.util.HashSet(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.util.Iterator(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: java.util.LinkedList(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.util.Map(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.util.Set(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.commons.logging.Log(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.commons.logging.LogFactory(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.io.BytesWritable(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.io.DataInputBuffer(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.io.DataOutputBuffer(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.io.FloatWritable(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hadoop.io.LongWritable(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hadoop.io.MD5Hash(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hadoop.io.NullWritable(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hadoop.io.ObjectWritable(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hadoop.io.Text(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hadoop.io.Writable(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: org.apache.hadoop.util.StringUtils(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: org.apache.nutch.protocol.ProtocolStatus(64)", "Delete ImportDeclaration(65)", "Delete TextElement: A writable map, with a similar behavior as <code>java.util.HashMap</code>.(66)", "Delete TextElement: In addition to the size of key and value writable tuple two additional bytes(67)", "Delete TextElement: are stored to identify the Writable classes. This means that a maximum of(68)", "Delete TextElement: 255 different class types can be used for key and value objects.(69)", "Delete TextElement: A binary-id to class mapping is defined in a static block of this class.(70)", "Delete TextElement: However it is possible to use custom implementations of Writable.(71)", "Delete TextElement: For these custom Writables we write the byte id - utf class name tuple(72)", "Delete TextElement: into the header of each MapWritable that uses these types.(73)", "Delete TagElement(74)", "Delete TextElement:  Stefan Groschupf(75)", "Delete TagElement: @author(76)", "Delete TextElement:  Use org.apache.hadoop.io.MapWritable instead.(77)", "Delete TagElement: @deprecated(78)", "Delete Javadoc(79)", "Delete Modifier: public(80)", "Delete SimpleName: MapWritable(81)", "Delete SimpleName: Writable(82)", "Delete SimpleType: Writable(83)", "Delete Modifier: public(84)", "Delete Modifier: static(85)", "Delete Modifier: final(86)", "Delete SimpleName: Log(87)", "Delete SimpleType: Log(88)", "Delete SimpleName: LOG(89)", "Delete SimpleName: LogFactory(90)", "Delete SimpleName: getLog(91)", "Delete SimpleName: MapWritable(92)", "Delete SimpleType: MapWritable(93)", "Delete TypeLiteral(94)", "Delete MethodInvocation(95)", "Delete VariableDeclarationFragment(96)", "Delete FieldDeclaration(97)", "Delete Modifier: private(98)", "Delete SimpleName: KeyValueEntry(99)", "Delete SimpleType: KeyValueEntry(100)", "Delete SimpleName: fFirst(101)", "Delete VariableDeclarationFragment(102)", "Delete FieldDeclaration(103)", "Delete Modifier: private(104)", "Delete SimpleName: KeyValueEntry(105)", "Delete SimpleType: KeyValueEntry(106)", "Delete SimpleName: fLast(107)", "Delete VariableDeclarationFragment(108)", "Delete FieldDeclaration(109)", "Delete Modifier: private(110)", "Delete SimpleName: KeyValueEntry(111)", "Delete SimpleType: KeyValueEntry(112)", "Delete SimpleName: fOld(113)", "Delete VariableDeclarationFragment(114)", "Delete FieldDeclaration(115)", "Delete Modifier: private(116)", "Delete PrimitiveType: int(117)", "Delete SimpleName: fSize(118)", "Delete NumberLiteral: 0(119)", "Delete VariableDeclarationFragment(120)", "Delete FieldDeclaration(121)", "Delete Modifier: private(122)", "Delete PrimitiveType: int(123)", "Delete SimpleName: fIdCount(124)", "Delete NumberLiteral: 0(125)", "Delete VariableDeclarationFragment(126)", "Delete FieldDeclaration(127)", "Delete Modifier: private(128)", "Delete SimpleName: ClassIdEntry(129)", "Delete SimpleType: ClassIdEntry(130)", "Delete SimpleName: fIdLast(131)", "Delete VariableDeclarationFragment(132)", "Delete FieldDeclaration(133)", "Delete Modifier: private(134)", "Delete SimpleName: ClassIdEntry(135)", "Delete SimpleType: ClassIdEntry(136)", "Delete SimpleName: fIdFirst(137)", "Delete VariableDeclarationFragment(138)", "Delete FieldDeclaration(139)", "Delete Modifier: private(140)", "Delete Modifier: static(141)", "Delete SimpleName: Map(142)", "Delete SimpleType: Map(143)", "Delete SimpleName: Class(144)", "Delete SimpleType: Class(145)", "Delete SimpleName: Byte(146)", "Delete SimpleType: Byte(147)", "Delete ParameterizedType: Map<Class,Byte>(148)", "Delete SimpleName: CLASS_ID_MAP(149)", "Delete SimpleName: HashMap(150)", "Delete SimpleType: HashMap(151)", "Delete SimpleName: Class(152)", "Delete SimpleType: Class(153)", "Delete SimpleName: Byte(154)", "Delete SimpleType: Byte(155)", "Delete ParameterizedType: HashMap<Class,Byte>(156)", "Delete ClassInstanceCreation(157)", "Delete VariableDeclarationFragment(158)", "Delete FieldDeclaration(159)", "Delete Modifier: private(160)", "Delete Modifier: static(161)", "Delete SimpleName: Map(162)", "Delete SimpleType: Map(163)", "Delete SimpleName: Byte(164)", "Delete SimpleType: Byte(165)", "Delete SimpleName: Class(166)", "Delete SimpleType: Class(167)", "Delete ParameterizedType: Map<Byte,Class>(168)", "Delete SimpleName: ID_CLASS_MAP(169)", "Delete SimpleName: HashMap(170)", "Delete SimpleType: HashMap(171)", "Delete SimpleName: Byte(172)", "Delete SimpleType: Byte(173)", "Delete SimpleName: Class(174)", "Delete SimpleType: Class(175)", "Delete ParameterizedType: HashMap<Byte,Class>(176)", "Delete ClassInstanceCreation(177)", "Delete VariableDeclarationFragment(178)", "Delete FieldDeclaration(179)", "Delete Modifier: static(180)", "Delete SimpleName: addToMap(181)", "Delete SimpleName: NullWritable(182)", "Delete SimpleType: NullWritable(183)", "Delete TypeLiteral(184)", "Delete SimpleName: Byte(185)", "Delete SimpleType: Byte(186)", "Delete PrimitiveType: byte(187)", "Delete NumberLiteral: 127(188)", "Delete PrefixExpression: -(189)", "Delete CastExpression(190)", "Delete ClassInstanceCreation(191)", "Delete MethodInvocation(192)", "Delete ExpressionStatement(193)", "Delete SimpleName: addToMap(194)", "Delete SimpleName: LongWritable(195)", "Delete SimpleType: LongWritable(196)", "Delete TypeLiteral(197)", "Delete SimpleName: Byte(198)", "Delete SimpleType: Byte(199)", "Delete PrimitiveType: byte(200)", "Delete NumberLiteral: 126(201)", "Delete PrefixExpression: -(202)", "Delete CastExpression(203)", "Delete ClassInstanceCreation(204)", "Delete MethodInvocation(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: addToMap(207)", "Delete SimpleName: Text(208)", "Delete SimpleType: Text(209)", "Delete TypeLiteral(210)", "Delete SimpleName: Byte(211)", "Delete SimpleType: Byte(212)", "Delete PrimitiveType: byte(213)", "Delete NumberLiteral: 125(214)", "Delete PrefixExpression: -(215)", "Delete CastExpression(216)", "Delete ClassInstanceCreation(217)", "Delete MethodInvocation(218)", "Delete ExpressionStatement(219)", "Delete SimpleName: addToMap(220)", "Delete SimpleName: MD5Hash(221)", "Delete SimpleType: MD5Hash(222)", "Delete TypeLiteral(223)", "Delete SimpleName: Byte(224)", "Delete SimpleType: Byte(225)", "Delete PrimitiveType: byte(226)", "Delete NumberLiteral: 124(227)", "Delete PrefixExpression: -(228)", "Delete CastExpression(229)", "Delete ClassInstanceCreation(230)", "Delete MethodInvocation(231)", "Delete ExpressionStatement(232)", "Delete SimpleName: addToMap(233)", "Delete QualifiedName: org.apache.nutch.fetcher.FetcherOutput(234)", "Delete SimpleType: org.apache.nutch.fetcher.FetcherOutput(235)", "Delete TypeLiteral(236)", "Delete SimpleName: Byte(237)", "Delete SimpleType: Byte(238)", "Delete PrimitiveType: byte(239)", "Delete NumberLiteral: 123(240)", "Delete PrefixExpression: -(241)", "Delete CastExpression(242)", "Delete ClassInstanceCreation(243)", "Delete MethodInvocation(244)", "Delete ExpressionStatement(245)", "Delete SimpleName: addToMap(246)", "Delete QualifiedName: org.apache.nutch.protocol.Content(247)", "Delete SimpleType: org.apache.nutch.protocol.Content(248)", "Delete TypeLiteral(249)", "Delete SimpleName: Byte(250)", "Delete SimpleType: Byte(251)", "Delete PrimitiveType: byte(252)", "Delete NumberLiteral: 122(253)", "Delete PrefixExpression: -(254)", "Delete CastExpression(255)", "Delete ClassInstanceCreation(256)", "Delete MethodInvocation(257)", "Delete ExpressionStatement(258)", "Delete SimpleName: addToMap(259)", "Delete QualifiedName: org.apache.nutch.parse.ParseText(260)", "Delete SimpleType: org.apache.nutch.parse.ParseText(261)", "Delete TypeLiteral(262)", "Delete SimpleName: Byte(263)", "Delete SimpleType: Byte(264)", "Delete PrimitiveType: byte(265)", "Delete NumberLiteral: 121(266)", "Delete PrefixExpression: -(267)", "Delete CastExpression(268)", "Delete ClassInstanceCreation(269)", "Delete MethodInvocation(270)", "Delete ExpressionStatement(271)", "Delete SimpleName: addToMap(272)", "Delete QualifiedName: org.apache.nutch.parse.ParseData(273)", "Delete SimpleType: org.apache.nutch.parse.ParseData(274)", "Delete TypeLiteral(275)", "Delete SimpleName: Byte(276)", "Delete SimpleType: Byte(277)", "Delete PrimitiveType: byte(278)", "Delete NumberLiteral: 120(279)", "Delete PrefixExpression: -(280)", "Delete CastExpression(281)", "Delete ClassInstanceCreation(282)", "Delete MethodInvocation(283)", "Delete ExpressionStatement(284)", "Delete SimpleName: addToMap(285)", "Delete SimpleName: MapWritable(286)", "Delete SimpleType: MapWritable(287)", "Delete TypeLiteral(288)", "Delete SimpleName: Byte(289)", "Delete SimpleType: Byte(290)", "Delete PrimitiveType: byte(291)", "Delete NumberLiteral: 119(292)", "Delete PrefixExpression: -(293)", "Delete CastExpression(294)", "Delete ClassInstanceCreation(295)", "Delete MethodInvocation(296)", "Delete ExpressionStatement(297)", "Delete SimpleName: addToMap(298)", "Delete SimpleName: BytesWritable(299)", "Delete SimpleType: BytesWritable(300)", "Delete TypeLiteral(301)", "Delete SimpleName: Byte(302)", "Delete SimpleType: Byte(303)", "Delete PrimitiveType: byte(304)", "Delete NumberLiteral: 118(305)", "Delete PrefixExpression: -(306)", "Delete CastExpression(307)", "Delete ClassInstanceCreation(308)", "Delete MethodInvocation(309)", "Delete ExpressionStatement(310)", "Delete SimpleName: addToMap(311)", "Delete SimpleName: FloatWritable(312)", "Delete SimpleType: FloatWritable(313)", "Delete TypeLiteral(314)", "Delete SimpleName: Byte(315)", "Delete SimpleType: Byte(316)", "Delete PrimitiveType: byte(317)", "Delete NumberLiteral: 117(318)", "Delete PrefixExpression: -(319)", "Delete CastExpression(320)", "Delete ClassInstanceCreation(321)", "Delete MethodInvocation(322)", "Delete ExpressionStatement(323)", "Delete SimpleName: addToMap(324)", "Delete SimpleName: IntWritable(325)", "Delete SimpleType: IntWritable(326)", "Delete TypeLiteral(327)", "Delete SimpleName: Byte(328)", "Delete SimpleType: Byte(329)", "Delete PrimitiveType: byte(330)", "Delete NumberLiteral: 116(331)", "Delete PrefixExpression: -(332)", "Delete CastExpression(333)", "Delete ClassInstanceCreation(334)", "Delete MethodInvocation(335)", "Delete ExpressionStatement(336)", "Delete SimpleName: addToMap(337)", "Delete SimpleName: ObjectWritable(338)", "Delete SimpleType: ObjectWritable(339)", "Delete TypeLiteral(340)", "Delete SimpleName: Byte(341)", "Delete SimpleType: Byte(342)", "Delete PrimitiveType: byte(343)", "Delete NumberLiteral: 115(344)", "Delete PrefixExpression: -(345)", "Delete CastExpression(346)", "Delete ClassInstanceCreation(347)", "Delete MethodInvocation(348)", "Delete ExpressionStatement(349)", "Delete SimpleName: addToMap(350)", "Delete SimpleName: ProtocolStatus(351)", "Delete SimpleType: ProtocolStatus(352)", "Delete TypeLiteral(353)", "Delete SimpleName: Byte(354)", "Delete SimpleType: Byte(355)", "Delete PrimitiveType: byte(356)", "Delete NumberLiteral: 114(357)", "Delete PrefixExpression: -(358)", "Delete CastExpression(359)", "Delete ClassInstanceCreation(360)", "Delete MethodInvocation(361)", "Delete ExpressionStatement(362)", "Delete Block(363)", "Delete Initializer(364)", "Delete Modifier: private(365)", "Delete Modifier: static(366)", "Delete PrimitiveType: void(367)", "Delete SimpleName: addToMap(368)", "Delete SimpleName: Class(369)", "Delete SimpleType: Class(370)", "Delete SimpleName: clazz(371)", "Delete SingleVariableDeclaration(372)", "Delete SimpleName: Byte(373)", "Delete SimpleType: Byte(374)", "Delete SimpleName: byteId(375)", "Delete SingleVariableDeclaration(376)", "Delete SimpleName: CLASS_ID_MAP(377)", "Delete SimpleName: put(378)", "Delete SimpleName: clazz(379)", "Delete SimpleName: byteId(380)", "Delete MethodInvocation(381)", "Delete ExpressionStatement(382)", "Delete SimpleName: ID_CLASS_MAP(383)", "Delete SimpleName: put(384)", "Delete SimpleName: byteId(385)", "Delete SimpleName: clazz(386)", "Delete MethodInvocation(387)", "Delete ExpressionStatement(388)", "Delete Block(389)", "Delete MethodDeclaration(390)", "Delete Modifier: public(391)", "Delete SimpleName: MapWritable(392)", "Delete Block(393)", "Delete MethodDeclaration(394)", "Delete TextElement: Copy constructor. This constructor makes a deep copy, using serialization /(395)", "Delete TextElement: deserialization to break any possible references to contained objects.(396)", "Delete TagElement(397)", "Delete SimpleName: map(398)", "Delete TextElement:  map to copy from(399)", "Delete TagElement: @param(400)", "Delete Javadoc(401)", "Delete Modifier: public(402)", "Delete SimpleName: MapWritable(403)", "Delete SimpleName: MapWritable(404)", "Delete SimpleType: MapWritable(405)", "Delete SimpleName: map(406)", "Delete SingleVariableDeclaration(407)", "Delete SimpleName: map(408)", "Delete NullLiteral(409)", "Delete InfixExpression: !=(410)", "Delete SimpleName: DataOutputBuffer(411)", "Delete SimpleType: DataOutputBuffer(412)", "Delete SimpleName: dob(413)", "Delete SimpleName: DataOutputBuffer(414)", "Delete SimpleType: DataOutputBuffer(415)", "Delete ClassInstanceCreation(416)", "Delete VariableDeclarationFragment(417)", "Delete VariableDeclarationStatement(418)", "Delete SimpleName: map(419)", "Delete SimpleName: write(420)", "Delete SimpleName: dob(421)", "Delete MethodInvocation(422)", "Delete ExpressionStatement(423)", "Delete SimpleName: DataInputBuffer(424)", "Delete SimpleType: DataInputBuffer(425)", "Delete SimpleName: dib(426)", "Delete SimpleName: DataInputBuffer(427)", "Delete SimpleType: DataInputBuffer(428)", "Delete ClassInstanceCreation(429)", "Delete VariableDeclarationFragment(430)", "Delete VariableDeclarationStatement(431)", "Delete SimpleName: dib(432)", "Delete SimpleName: reset(433)", "Delete SimpleName: dob(434)", "Delete SimpleName: getData(435)", "Delete MethodInvocation(436)", "Delete SimpleName: dob(437)", "Delete SimpleName: getLength(438)", "Delete MethodInvocation(439)", "Delete MethodInvocation(440)", "Delete ExpressionStatement(441)", "Delete SimpleName: readFields(442)", "Delete SimpleName: dib(443)", "Delete MethodInvocation(444)", "Delete ExpressionStatement(445)", "Delete Block(446)", "Delete SimpleName: IOException(447)", "Delete SimpleType: IOException(448)", "Delete SimpleName: e(449)", "Delete SingleVariableDeclaration(450)", "Delete SimpleName: IllegalArgumentException(451)", "Delete SimpleType: IllegalArgumentException(452)", "Delete StringLiteral: \"this map cannot be copied: \"(453)", "Delete SimpleName: StringUtils(454)", "Delete SimpleName: stringifyException(455)", "Delete SimpleName: e(456)", "Delete MethodInvocation(457)", "Delete InfixExpression: +(458)", "Delete ClassInstanceCreation(459)", "Delete ThrowStatement(460)", "Delete Block(461)", "Delete CatchClause(462)", "Delete TryStatement(463)", "Delete Block(464)", "Delete IfStatement(465)", "Delete Block(466)", "Delete MethodDeclaration(467)", "Delete Modifier: public(468)", "Delete PrimitiveType: void(469)", "Delete SimpleName: clear(470)", "Delete SimpleName: fOld(471)", "Delete SimpleName: fFirst(472)", "Delete Assignment: =(473)", "Delete ExpressionStatement(474)", "Delete SimpleName: fFirst(475)", "Delete SimpleName: fLast(476)", "Delete NullLiteral(477)", "Delete Assignment: =(478)", "Delete Assignment: =(479)", "Delete ExpressionStatement(480)", "Delete SimpleName: fSize(481)", "Delete NumberLiteral: 0(482)", "Delete Assignment: =(483)", "Delete ExpressionStatement(484)", "Delete Block(485)", "Delete MethodDeclaration(486)", "Delete Modifier: public(487)", "Delete PrimitiveType: boolean(488)", "Delete SimpleName: containsKey(489)", "Delete SimpleName: Writable(490)", "Delete SimpleType: Writable(491)", "Delete SimpleName: key(492)", "Delete SingleVariableDeclaration(493)", "Delete SimpleName: findEntryByKey(494)", "Delete SimpleName: key(495)", "Delete MethodInvocation(496)", "Delete NullLiteral(497)", "Delete InfixExpression: !=(498)", "Delete ReturnStatement(499)", "Delete Block(500)", "Delete MethodDeclaration(501)", "Delete Modifier: public(502)", "Delete PrimitiveType: boolean(503)", "Delete SimpleName: containsValue(504)", "Delete SimpleName: Writable(505)", "Delete SimpleType: Writable(506)", "Delete SimpleName: value(507)", "Delete SingleVariableDeclaration(508)", "Delete SimpleName: KeyValueEntry(509)", "Delete SimpleType: KeyValueEntry(510)", "Delete SimpleName: entry(511)", "Delete SimpleName: fFirst(512)", "Delete VariableDeclarationFragment(513)", "Delete VariableDeclarationStatement(514)", "Delete SimpleName: entry(515)", "Delete NullLiteral(516)", "Delete InfixExpression: !=(517)", "Delete QualifiedName: entry.fValue(518)", "Delete SimpleName: equals(519)", "Delete SimpleName: value(520)", "Delete MethodInvocation(521)", "Delete BooleanLiteral: true(522)", "Delete ReturnStatement(523)", "Delete Block(524)", "Delete IfStatement(525)", "Delete SimpleName: entry(526)", "Delete QualifiedName: entry.fNextEntry(527)", "Delete Assignment: =(528)", "Delete ExpressionStatement(529)", "Delete Block(530)", "Delete WhileStatement(531)", "Delete BooleanLiteral: false(532)", "Delete ReturnStatement(533)", "Delete Block(534)", "Delete MethodDeclaration(535)", "Delete Modifier: public(536)", "Delete SimpleName: Writable(537)", "Delete SimpleType: Writable(538)", "Delete SimpleName: get(539)", "Delete SimpleName: Writable(540)", "Delete SimpleType: Writable(541)", "Delete SimpleName: key(542)", "Delete SingleVariableDeclaration(543)", "Delete SimpleName: KeyValueEntry(544)", "Delete SimpleType: KeyValueEntry(545)", "Delete SimpleName: entry(546)", "Delete SimpleName: findEntryByKey(547)", "Delete SimpleName: key(548)", "Delete MethodInvocation(549)", "Delete VariableDeclarationFragment(550)", "Delete VariableDeclarationStatement(551)", "Delete SimpleName: entry(552)", "Delete NullLiteral(553)", "Delete InfixExpression: !=(554)", "Delete QualifiedName: entry.fValue(555)", "Delete ReturnStatement(556)", "Delete Block(557)", "Delete IfStatement(558)", "Delete NullLiteral(559)", "Delete ReturnStatement(560)", "Delete Block(561)", "Delete MethodDeclaration(562)", "Delete Modifier: public(563)", "Delete PrimitiveType: int(564)", "Delete SimpleName: hashCode(565)", "Delete Modifier: final(566)", "Delete PrimitiveType: int(567)", "Delete SimpleName: seed(568)", "Delete NumberLiteral: 23(569)", "Delete VariableDeclarationFragment(570)", "Delete VariableDeclarationStatement(571)", "Delete PrimitiveType: int(572)", "Delete SimpleName: hash(573)", "Delete NumberLiteral: 0(574)", "Delete VariableDeclarationFragment(575)", "Delete VariableDeclarationStatement(576)", "Delete SimpleName: KeyValueEntry(577)", "Delete SimpleType: KeyValueEntry(578)", "Delete SimpleName: entry(579)", "Delete SimpleName: fFirst(580)", "Delete VariableDeclarationFragment(581)", "Delete VariableDeclarationStatement(582)", "Delete SimpleName: entry(583)", "Delete NullLiteral(584)", "Delete InfixExpression: !=(585)", "Delete SimpleName: hash(586)", "Delete QualifiedName: entry.fKey(587)", "Delete SimpleName: hashCode(588)", "Delete MethodInvocation(589)", "Delete SimpleName: seed(590)", "Delete InfixExpression: *(591)", "Delete Assignment: +=(592)", "Delete ExpressionStatement(593)", "Delete SimpleName: hash(594)", "Delete QualifiedName: entry.fValue(595)", "Delete SimpleName: hashCode(596)", "Delete MethodInvocation(597)", "Delete SimpleName: seed(598)", "Delete InfixExpression: *(599)", "Delete Assignment: +=(600)", "Delete ExpressionStatement(601)", "Delete SimpleName: entry(602)", "Delete QualifiedName: entry.fNextEntry(603)", "Delete Assignment: =(604)", "Delete ExpressionStatement(605)", "Delete Block(606)", "Delete WhileStatement(607)", "Delete SimpleName: hash(608)", "Delete ReturnStatement(609)", "Delete Block(610)", "Delete MethodDeclaration(611)", "Delete Modifier: public(612)", "Delete PrimitiveType: boolean(613)", "Delete SimpleName: isEmpty(614)", "Delete SimpleName: fFirst(615)", "Delete NullLiteral(616)", "Delete InfixExpression: ==(617)", "Delete ReturnStatement(618)", "Delete Block(619)", "Delete MethodDeclaration(620)", "Delete Modifier: public(621)", "Delete SimpleName: Set(622)", "Delete SimpleType: Set(623)", "Delete SimpleName: Writable(624)", "Delete SimpleType: Writable(625)", "Delete ParameterizedType: Set<Writable>(626)", "Delete SimpleName: keySet(627)", "Delete SimpleName: HashSet(628)", "Delete SimpleType: HashSet(629)", "Delete SimpleName: Writable(630)", "Delete SimpleType: Writable(631)", "Delete ParameterizedType: HashSet<Writable>(632)", "Delete SimpleName: set(633)", "Delete SimpleName: HashSet(634)", "Delete SimpleType: HashSet(635)", "Delete SimpleName: Writable(636)", "Delete SimpleType: Writable(637)", "Delete ParameterizedType: HashSet<Writable>(638)", "Delete ClassInstanceCreation(639)", "Delete VariableDeclarationFragment(640)", "Delete VariableDeclarationStatement(641)", "Delete SimpleName: isEmpty(642)", "Delete MethodInvocation(643)", "Delete SimpleName: set(644)", "Delete ReturnStatement(645)", "Delete IfStatement(646)", "Delete SimpleName: set(647)", "Delete SimpleName: add(648)", "Delete QualifiedName: fFirst.fKey(649)", "Delete MethodInvocation(650)", "Delete ExpressionStatement(651)", "Delete SimpleName: KeyValueEntry(652)", "Delete SimpleType: KeyValueEntry(653)", "Delete SimpleName: entry(654)", "Delete SimpleName: fFirst(655)", "Delete VariableDeclarationFragment(656)", "Delete VariableDeclarationStatement(657)", "Delete SimpleName: entry(658)", "Delete QualifiedName: entry.fNextEntry(659)", "Delete Assignment: =(660)", "Delete ParenthesizedExpression(661)", "Delete NullLiteral(662)", "Delete InfixExpression: !=(663)", "Delete SimpleName: set(664)", "Delete SimpleName: add(665)", "Delete QualifiedName: entry.fKey(666)", "Delete MethodInvocation(667)", "Delete ExpressionStatement(668)", "Delete Block(669)", "Delete WhileStatement(670)", "Delete SimpleName: set(671)", "Delete ReturnStatement(672)", "Delete Block(673)", "Delete MethodDeclaration(674)", "Delete Modifier: public(675)", "Delete SimpleName: Writable(676)", "Delete SimpleType: Writable(677)", "Delete SimpleName: put(678)", "Delete SimpleName: Writable(679)", "Delete SimpleType: Writable(680)", "Delete SimpleName: key(681)", "Delete SingleVariableDeclaration(682)", "Delete SimpleName: Writable(683)", "Delete SimpleType: Writable(684)", "Delete SimpleName: value(685)", "Delete SingleVariableDeclaration(686)", "Delete SimpleName: KeyValueEntry(687)", "Delete SimpleType: KeyValueEntry(688)", "Delete SimpleName: entry(689)", "Delete SimpleName: findEntryByKey(690)", "Delete SimpleName: key(691)", "Delete MethodInvocation(692)", "Delete VariableDeclarationFragment(693)", "Delete VariableDeclarationStatement(694)", "Delete SimpleName: entry(695)", "Delete NullLiteral(696)", "Delete InfixExpression: !=(697)", "Delete SimpleName: Writable(698)", "Delete SimpleType: Writable(699)", "Delete SimpleName: oldValue(700)", "Delete QualifiedName: entry.fValue(701)", "Delete VariableDeclarationFragment(702)", "Delete VariableDeclarationStatement(703)", "Delete QualifiedName: entry.fValue(704)", "Delete SimpleName: value(705)", "Delete Assignment: =(706)", "Delete ExpressionStatement(707)", "Delete SimpleName: oldValue(708)", "Delete ReturnStatement(709)", "Delete Block(710)", "Delete IfStatement(711)", "Delete SimpleName: KeyValueEntry(712)", "Delete SimpleType: KeyValueEntry(713)", "Delete SimpleName: newEntry(714)", "Delete SimpleName: KeyValueEntry(715)", "Delete SimpleType: KeyValueEntry(716)", "Delete SimpleName: key(717)", "Delete SimpleName: value(718)", "Delete ClassInstanceCreation(719)", "Delete VariableDeclarationFragment(720)", "Delete VariableDeclarationStatement(721)", "Delete SimpleName: fSize(722)", "Delete PostfixExpression: ++(723)", "Delete ExpressionStatement(724)", "Delete SimpleName: fLast(725)", "Delete NullLiteral(726)", "Delete InfixExpression: !=(727)", "Delete SimpleName: fLast(728)", "Delete QualifiedName: fLast.fNextEntry(729)", "Delete SimpleName: newEntry(730)", "Delete Assignment: =(731)", "Delete Assignment: =(732)", "Delete ExpressionStatement(733)", "Delete NullLiteral(734)", "Delete ReturnStatement(735)", "Delete Block(736)", "Delete IfStatement(737)", "Delete SimpleName: fLast(738)", "Delete SimpleName: fFirst(739)", "Delete SimpleName: newEntry(740)", "Delete Assignment: =(741)", "Delete Assignment: =(742)", "Delete ExpressionStatement(743)", "Delete NullLiteral(744)", "Delete ReturnStatement(745)", "Delete Block(746)", "Delete MethodDeclaration(747)", "Delete Modifier: public(748)", "Delete PrimitiveType: void(749)", "Delete SimpleName: putAll(750)", "Delete SimpleName: MapWritable(751)", "Delete SimpleType: MapWritable(752)", "Delete SimpleName: map(753)", "Delete SingleVariableDeclaration(754)", "Delete SimpleName: map(755)", "Delete NullLiteral(756)", "Delete InfixExpression: ==(757)", "Delete SimpleName: map(758)", "Delete SimpleName: size(759)", "Delete MethodInvocation(760)", "Delete NumberLiteral: 0(761)", "Delete InfixExpression: ==(762)", "Delete InfixExpression: ||(763)", "Delete ReturnStatement(764)", "Delete Block(765)", "Delete IfStatement(766)", "Delete SimpleName: Iterator(767)", "Delete SimpleType: Iterator(768)", "Delete SimpleName: Writable(769)", "Delete SimpleType: Writable(770)", "Delete ParameterizedType: Iterator<Writable>(771)", "Delete SimpleName: iterator(772)", "Delete SimpleName: map(773)", "Delete SimpleName: keySet(774)", "Delete MethodInvocation(775)", "Delete SimpleName: iterator(776)", "Delete MethodInvocation(777)", "Delete VariableDeclarationFragment(778)", "Delete VariableDeclarationStatement(779)", "Delete SimpleName: iterator(780)", "Delete SimpleName: hasNext(781)", "Delete MethodInvocation(782)", "Delete SimpleName: Writable(783)", "Delete SimpleType: Writable(784)", "Delete SimpleName: key(785)", "Delete SimpleName: iterator(786)", "Delete SimpleName: next(787)", "Delete MethodInvocation(788)", "Delete VariableDeclarationFragment(789)", "Delete VariableDeclarationStatement(790)", "Delete SimpleName: Writable(791)", "Delete SimpleType: Writable(792)", "Delete SimpleName: value(793)", "Delete SimpleName: map(794)", "Delete SimpleName: get(795)", "Delete SimpleName: key(796)", "Delete MethodInvocation(797)", "Delete VariableDeclarationFragment(798)", "Delete VariableDeclarationStatement(799)", "Delete SimpleName: put(800)", "Delete SimpleName: key(801)", "Delete SimpleName: value(802)", "Delete MethodInvocation(803)", "Delete ExpressionStatement(804)", "Delete Block(805)", "Delete WhileStatement(806)", "Delete Block(807)", "Delete MethodDeclaration(808)", "Delete Modifier: public(809)", "Delete SimpleName: Writable(810)", "Delete SimpleType: Writable(811)", "Delete SimpleName: remove(812)", "Delete SimpleName: Writable(813)", "Delete SimpleType: Writable(814)", "Delete SimpleName: key(815)", "Delete SingleVariableDeclaration(816)", "Delete SimpleName: Writable(817)", "Delete SimpleType: Writable(818)", "Delete SimpleName: oldValue(819)", "Delete NullLiteral(820)", "Delete VariableDeclarationFragment(821)", "Delete VariableDeclarationStatement(822)", "Delete SimpleName: KeyValueEntry(823)", "Delete SimpleType: KeyValueEntry(824)", "Delete SimpleName: entry(825)", "Delete SimpleName: fFirst(826)", "Delete VariableDeclarationFragment(827)", "Delete VariableDeclarationStatement(828)", "Delete SimpleName: KeyValueEntry(829)", "Delete SimpleType: KeyValueEntry(830)", "Delete SimpleName: predecessor(831)", "Delete NullLiteral(832)", "Delete VariableDeclarationFragment(833)", "Delete VariableDeclarationStatement(834)", "Delete SimpleName: entry(835)", "Delete NullLiteral(836)", "Delete InfixExpression: !=(837)", "Delete QualifiedName: entry.fKey(838)", "Delete SimpleName: equals(839)", "Delete SimpleName: key(840)", "Delete MethodInvocation(841)", "Delete SimpleName: oldValue(842)", "Delete QualifiedName: entry.fValue(843)", "Delete Assignment: =(844)", "Delete ExpressionStatement(845)", "Delete SimpleName: predecessor(846)", "Delete NullLiteral(847)", "Delete InfixExpression: ==(848)", "Delete SimpleName: fFirst(849)", "Delete QualifiedName: fFirst.fNextEntry(850)", "Delete Assignment: =(851)", "Delete ExpressionStatement(852)", "Delete Block(853)", "Delete QualifiedName: predecessor.fNextEntry(854)", "Delete QualifiedName: entry.fNextEntry(855)", "Delete Assignment: =(856)", "Delete ExpressionStatement(857)", "Delete Block(858)", "Delete IfStatement(859)", "Delete SimpleName: fLast(860)", "Delete SimpleName: equals(861)", "Delete SimpleName: entry(862)", "Delete MethodInvocation(863)", "Delete SimpleName: fLast(864)", "Delete SimpleName: predecessor(865)", "Delete Assignment: =(866)", "Delete ExpressionStatement(867)", "Delete Block(868)", "Delete IfStatement(869)", "Delete SimpleName: fSize(870)", "Delete PostfixExpression: --(871)", "Delete ExpressionStatement(872)", "Delete SimpleName: oldValue(873)", "Delete ReturnStatement(874)", "Delete Block(875)", "Delete IfStatement(876)", "Delete SimpleName: predecessor(877)", "Delete SimpleName: entry(878)", "Delete Assignment: =(879)", "Delete ExpressionStatement(880)", "Delete SimpleName: entry(881)", "Delete QualifiedName: entry.fNextEntry(882)", "Delete Assignment: =(883)", "Delete ExpressionStatement(884)", "Delete Block(885)", "Delete WhileStatement(886)", "Delete SimpleName: oldValue(887)", "Delete ReturnStatement(888)", "Delete Block(889)", "Delete MethodDeclaration(890)", "Delete Modifier: public(891)", "Delete PrimitiveType: int(892)", "Delete SimpleName: size(893)", "Delete SimpleName: fSize(894)", "Delete ReturnStatement(895)", "Delete Block(896)", "Delete MethodDeclaration(897)", "Delete Modifier: public(898)", "Delete SimpleName: Collection(899)", "Delete SimpleType: Collection(900)", "Delete SimpleName: Writable(901)", "Delete SimpleType: Writable(902)", "Delete ParameterizedType: Collection<Writable>(903)", "Delete SimpleName: values(904)", "Delete SimpleName: LinkedList(905)", "Delete SimpleType: LinkedList(906)", "Delete SimpleName: Writable(907)", "Delete SimpleType: Writable(908)", "Delete ParameterizedType: LinkedList<Writable>(909)", "Delete SimpleName: list(910)", "Delete SimpleName: LinkedList(911)", "Delete SimpleType: LinkedList(912)", "Delete SimpleName: Writable(913)", "Delete SimpleType: Writable(914)", "Delete ParameterizedType: LinkedList<Writable>(915)", "Delete ClassInstanceCreation(916)", "Delete VariableDeclarationFragment(917)", "Delete VariableDeclarationStatement(918)", "Delete SimpleName: KeyValueEntry(919)", "Delete SimpleType: KeyValueEntry(920)", "Delete SimpleName: entry(921)", "Delete SimpleName: fFirst(922)", "Delete VariableDeclarationFragment(923)", "Delete VariableDeclarationStatement(924)", "Delete SimpleName: entry(925)", "Delete NullLiteral(926)", "Delete InfixExpression: !=(927)", "Delete SimpleName: list(928)", "Delete SimpleName: add(929)", "Delete QualifiedName: entry.fValue(930)", "Delete MethodInvocation(931)", "Delete ExpressionStatement(932)", "Delete SimpleName: entry(933)", "Delete QualifiedName: entry.fNextEntry(934)", "Delete Assignment: =(935)", "Delete ExpressionStatement(936)", "Delete Block(937)", "Delete WhileStatement(938)", "Delete SimpleName: list(939)", "Delete ReturnStatement(940)", "Delete Block(941)", "Delete MethodDeclaration(942)", "Delete Modifier: public(943)", "Delete PrimitiveType: boolean(944)", "Delete SimpleName: equals(945)", "Delete SimpleName: Object(946)", "Delete SimpleType: Object(947)", "Delete SimpleName: obj(948)", "Delete SingleVariableDeclaration(949)", "Delete SimpleName: obj(950)", "Delete SimpleName: MapWritable(951)", "Delete SimpleType: MapWritable(952)", "Delete InstanceofExpression(953)", "Delete SimpleName: MapWritable(954)", "Delete SimpleType: MapWritable(955)", "Delete SimpleName: map(956)", "Delete SimpleName: MapWritable(957)", "Delete SimpleType: MapWritable(958)", "Delete SimpleName: obj(959)", "Delete CastExpression(960)", "Delete VariableDeclarationFragment(961)", "Delete VariableDeclarationStatement(962)", "Delete SimpleName: fSize(963)", "Delete QualifiedName: map.fSize(964)", "Delete InfixExpression: !=(965)", "Delete BooleanLiteral: false(966)", "Delete ReturnStatement(967)", "Delete IfStatement(968)", "Delete SimpleName: HashSet(969)", "Delete SimpleType: HashSet(970)", "Delete SimpleName: KeyValueEntry(971)", "Delete SimpleType: KeyValueEntry(972)", "Delete ParameterizedType: HashSet<KeyValueEntry>(973)", "Delete SimpleName: set1(974)", "Delete SimpleName: HashSet(975)", "Delete SimpleType: HashSet(976)", "Delete SimpleName: KeyValueEntry(977)", "Delete SimpleType: KeyValueEntry(978)", "Delete ParameterizedType: HashSet<KeyValueEntry>(979)", "Delete ClassInstanceCreation(980)", "Delete VariableDeclarationFragment(981)", "Delete VariableDeclarationStatement(982)", "Delete SimpleName: KeyValueEntry(983)", "Delete SimpleType: KeyValueEntry(984)", "Delete SimpleName: e1(985)", "Delete SimpleName: fFirst(986)", "Delete VariableDeclarationFragment(987)", "Delete VariableDeclarationStatement(988)", "Delete SimpleName: e1(989)", "Delete NullLiteral(990)", "Delete InfixExpression: !=(991)", "Delete SimpleName: set1(992)", "Delete SimpleName: add(993)", "Delete SimpleName: e1(994)", "Delete MethodInvocation(995)", "Delete ExpressionStatement(996)", "Delete SimpleName: e1(997)", "Delete QualifiedName: e1.fNextEntry(998)", "Delete Assignment: =(999)", "Delete ExpressionStatement(1000)", "Delete Block(1001)", "Delete WhileStatement(1002)", "Delete SimpleName: HashSet(1003)", "Delete SimpleType: HashSet(1004)", "Delete SimpleName: KeyValueEntry(1005)", "Delete SimpleType: KeyValueEntry(1006)", "Delete ParameterizedType: HashSet<KeyValueEntry>(1007)", "Delete SimpleName: set2(1008)", "Delete SimpleName: HashSet(1009)", "Delete SimpleType: HashSet(1010)", "Delete SimpleName: KeyValueEntry(1011)", "Delete SimpleType: KeyValueEntry(1012)", "Delete ParameterizedType: HashSet<KeyValueEntry>(1013)", "Delete ClassInstanceCreation(1014)", "Delete VariableDeclarationFragment(1015)", "Delete VariableDeclarationStatement(1016)", "Delete SimpleName: KeyValueEntry(1017)", "Delete SimpleType: KeyValueEntry(1018)", "Delete SimpleName: e2(1019)", "Delete QualifiedName: map.fFirst(1020)", "Delete VariableDeclarationFragment(1021)", "Delete VariableDeclarationStatement(1022)", "Delete SimpleName: e2(1023)", "Delete NullLiteral(1024)", "Delete InfixExpression: !=(1025)", "Delete SimpleName: set2(1026)", "Delete SimpleName: add(1027)", "Delete SimpleName: e2(1028)", "Delete MethodInvocation(1029)", "Delete ExpressionStatement(1030)", "Delete SimpleName: e2(1031)", "Delete QualifiedName: e2.fNextEntry(1032)", "Delete Assignment: =(1033)", "Delete ExpressionStatement(1034)", "Delete Block(1035)", "Delete WhileStatement(1036)", "Delete SimpleName: set1(1037)", "Delete SimpleName: equals(1038)", "Delete SimpleName: set2(1039)", "Delete MethodInvocation(1040)", "Delete ReturnStatement(1041)", "Delete Block(1042)", "Delete IfStatement(1043)", "Delete BooleanLiteral: false(1044)", "Delete ReturnStatement(1045)", "Delete Block(1046)", "Delete MethodDeclaration(1047)", "Delete Modifier: public(1048)", "Delete SimpleName: String(1049)", "Delete SimpleType: String(1050)", "Delete SimpleName: toString(1051)", "Delete SimpleName: fFirst(1052)", "Delete NullLiteral(1053)", "Delete InfixExpression: !=(1054)", "Delete SimpleName: StringBuffer(1055)", "Delete SimpleType: StringBuffer(1056)", "Delete SimpleName: buffer(1057)", "Delete SimpleName: StringBuffer(1058)", "Delete SimpleType: StringBuffer(1059)", "Delete ClassInstanceCreation(1060)", "Delete VariableDeclarationFragment(1061)", "Delete VariableDeclarationStatement(1062)", "Delete SimpleName: KeyValueEntry(1063)", "Delete SimpleType: KeyValueEntry(1064)", "Delete SimpleName: entry(1065)", "Delete SimpleName: fFirst(1066)", "Delete VariableDeclarationFragment(1067)", "Delete VariableDeclarationStatement(1068)", "Delete SimpleName: entry(1069)", "Delete NullLiteral(1070)", "Delete InfixExpression: !=(1071)", "Delete SimpleName: buffer(1072)", "Delete SimpleName: append(1073)", "Delete SimpleName: entry(1074)", "Delete SimpleName: toString(1075)", "Delete MethodInvocation(1076)", "Delete MethodInvocation(1077)", "Delete ExpressionStatement(1078)", "Delete SimpleName: buffer(1079)", "Delete SimpleName: append(1080)", "Delete StringLiteral: \" \"(1081)", "Delete MethodInvocation(1082)", "Delete ExpressionStatement(1083)", "Delete SimpleName: entry(1084)", "Delete QualifiedName: entry.fNextEntry(1085)", "Delete Assignment: =(1086)", "Delete ExpressionStatement(1087)", "Delete Block(1088)", "Delete WhileStatement(1089)", "Delete SimpleName: buffer(1090)", "Delete SimpleName: toString(1091)", "Delete MethodInvocation(1092)", "Delete ReturnStatement(1093)", "Delete Block(1094)", "Delete IfStatement(1095)", "Delete NullLiteral(1096)", "Delete ReturnStatement(1097)", "Delete Block(1098)", "Delete MethodDeclaration(1099)", "Delete Modifier: private(1100)", "Delete SimpleName: KeyValueEntry(1101)", "Delete SimpleType: KeyValueEntry(1102)", "Delete SimpleName: findEntryByKey(1103)", "Delete Modifier: final(1104)", "Delete SimpleName: Writable(1105)", "Delete SimpleType: Writable(1106)", "Delete SimpleName: key(1107)", "Delete SingleVariableDeclaration(1108)", "Delete SimpleName: KeyValueEntry(1109)", "Delete SimpleType: KeyValueEntry(1110)", "Delete SimpleName: entry(1111)", "Delete SimpleName: fFirst(1112)", "Delete VariableDeclarationFragment(1113)", "Delete VariableDeclarationStatement(1114)", "Delete SimpleName: entry(1115)", "Delete NullLiteral(1116)", "Delete InfixExpression: !=(1117)", "Delete QualifiedName: entry.fKey(1118)", "Delete SimpleName: equals(1119)", "Delete SimpleName: key(1120)", "Delete MethodInvocation(1121)", "Delete PrefixExpression: !(1122)", "Delete InfixExpression: &&(1123)", "Delete SimpleName: entry(1124)", "Delete QualifiedName: entry.fNextEntry(1125)", "Delete Assignment: =(1126)", "Delete ExpressionStatement(1127)", "Delete Block(1128)", "Delete WhileStatement(1129)", "Delete SimpleName: entry(1130)", "Delete ReturnStatement(1131)", "Delete Block(1132)", "Delete MethodDeclaration(1133)", "Delete Modifier: public(1134)", "Delete PrimitiveType: void(1135)", "Delete SimpleName: write(1136)", "Delete SimpleName: DataOutput(1137)", "Delete SimpleType: DataOutput(1138)", "Delete SimpleName: out(1139)", "Delete SingleVariableDeclaration(1140)", "Delete SimpleName: IOException(1141)", "Delete SimpleType: IOException(1142)", "Delete SimpleName: out(1143)", "Delete SimpleName: writeInt(1144)", "Delete SimpleName: size(1145)", "Delete MethodInvocation(1146)", "Delete MethodInvocation(1147)", "Delete ExpressionStatement(1148)", "Delete SimpleName: size(1149)", "Delete MethodInvocation(1150)", "Delete NumberLiteral: 0(1151)", "Delete InfixExpression: >(1152)", "Delete SimpleName: createInternalIdClassEntries(1153)", "Delete MethodInvocation(1154)", "Delete ExpressionStatement(1155)", "Delete SimpleName: out(1156)", "Delete SimpleName: writeByte(1157)", "Delete SimpleName: fIdCount(1158)", "Delete MethodInvocation(1159)", "Delete ExpressionStatement(1160)", "Delete SimpleName: fIdCount(1161)", "Delete NumberLiteral: 0(1162)", "Delete InfixExpression: >(1163)", "Delete SimpleName: ClassIdEntry(1164)", "Delete SimpleType: ClassIdEntry(1165)", "Delete SimpleName: entry(1166)", "Delete SimpleName: fIdFirst(1167)", "Delete VariableDeclarationFragment(1168)", "Delete VariableDeclarationStatement(1169)", "Delete SimpleName: entry(1170)", "Delete NullLiteral(1171)", "Delete InfixExpression: !=(1172)", "Delete SimpleName: out(1173)", "Delete SimpleName: writeByte(1174)", "Delete QualifiedName: entry.fId(1175)", "Delete MethodInvocation(1176)", "Delete ExpressionStatement(1177)", "Delete SimpleName: Text(1178)", "Delete SimpleName: writeString(1179)", "Delete SimpleName: out(1180)", "Delete QualifiedName: entry.fclazz(1181)", "Delete SimpleName: getName(1182)", "Delete MethodInvocation(1183)", "Delete MethodInvocation(1184)", "Delete ExpressionStatement(1185)", "Delete SimpleName: entry(1186)", "Delete QualifiedName: entry.fNextIdEntry(1187)", "Delete Assignment: =(1188)", "Delete ExpressionStatement(1189)", "Delete Block(1190)", "Delete WhileStatement(1191)", "Delete Block(1192)", "Delete IfStatement(1193)", "Delete SimpleName: KeyValueEntry(1194)", "Delete SimpleType: KeyValueEntry(1195)", "Delete SimpleName: entry(1196)", "Delete SimpleName: fFirst(1197)", "Delete VariableDeclarationFragment(1198)", "Delete VariableDeclarationStatement(1199)", "Delete SimpleName: entry(1200)", "Delete NullLiteral(1201)", "Delete InfixExpression: !=(1202)", "Delete SimpleName: out(1203)", "Delete SimpleName: writeByte(1204)", "Delete QualifiedName: entry.fKeyClassId(1205)", "Delete MethodInvocation(1206)", "Delete ExpressionStatement(1207)", "Delete SimpleName: out(1208)", "Delete SimpleName: writeByte(1209)", "Delete QualifiedName: entry.fValueClassId(1210)", "Delete MethodInvocation(1211)", "Delete ExpressionStatement(1212)", "Delete QualifiedName: entry.fKey(1213)", "Delete SimpleName: write(1214)", "Delete SimpleName: out(1215)", "Delete MethodInvocation(1216)", "Delete ExpressionStatement(1217)", "Delete QualifiedName: entry.fValue(1218)", "Delete SimpleName: write(1219)", "Delete SimpleName: out(1220)", "Delete MethodInvocation(1221)", "Delete ExpressionStatement(1222)", "Delete SimpleName: entry(1223)", "Delete QualifiedName: entry.fNextEntry(1224)", "Delete Assignment: =(1225)", "Delete ExpressionStatement(1226)", "Delete Block(1227)", "Delete WhileStatement(1228)", "Delete Block(1229)", "Delete IfStatement(1230)", "Delete Block(1231)", "Delete MethodDeclaration(1232)", "Delete Modifier: public(1233)", "Delete PrimitiveType: void(1234)", "Delete SimpleName: readFields(1235)", "Delete SimpleName: DataInput(1236)", "Delete SimpleType: DataInput(1237)", "Delete SimpleName: in(1238)", "Delete SingleVariableDeclaration(1239)", "Delete SimpleName: IOException(1240)", "Delete SimpleType: IOException(1241)", "Delete SimpleName: clear(1242)", "Delete MethodInvocation(1243)", "Delete ExpressionStatement(1244)", "Delete SimpleName: fSize(1245)", "Delete SimpleName: in(1246)", "Delete SimpleName: readInt(1247)", "Delete MethodInvocation(1248)", "Delete Assignment: =(1249)", "Delete ExpressionStatement(1250)", "Delete SimpleName: fSize(1251)", "Delete NumberLiteral: 0(1252)", "Delete InfixExpression: >(1253)", "Delete SimpleName: fIdCount(1254)", "Delete SimpleName: in(1255)", "Delete SimpleName: readByte(1256)", "Delete MethodInvocation(1257)", "Delete Assignment: =(1258)", "Delete ExpressionStatement(1259)", "Delete PrimitiveType: byte(1260)", "Delete SimpleName: id(1261)", "Delete VariableDeclarationFragment(1262)", "Delete VariableDeclarationStatement(1263)", "Delete SimpleName: Class(1264)", "Delete SimpleType: Class(1265)", "Delete SimpleName: clazz(1266)", "Delete VariableDeclarationFragment(1267)", "Delete VariableDeclarationStatement(1268)", "Delete PrimitiveType: int(1269)", "Delete SimpleName: i(1270)", "Delete NumberLiteral: 0(1271)", "Delete VariableDeclarationFragment(1272)", "Delete VariableDeclarationExpression(1273)", "Delete SimpleName: i(1274)", "Delete SimpleName: fIdCount(1275)", "Delete InfixExpression: <(1276)", "Delete SimpleName: i(1277)", "Delete PostfixExpression: ++(1278)", "Delete SimpleName: id(1279)", "Delete SimpleName: in(1280)", "Delete SimpleName: readByte(1281)", "Delete MethodInvocation(1282)", "Delete Assignment: =(1283)", "Delete ExpressionStatement(1284)", "Delete SimpleName: clazz(1285)", "Delete SimpleName: Class(1286)", "Delete SimpleName: forName(1287)", "Delete SimpleName: Text(1288)", "Delete SimpleName: readString(1289)", "Delete SimpleName: in(1290)", "Delete MethodInvocation(1291)", "Delete MethodInvocation(1292)", "Delete Assignment: =(1293)", "Delete ExpressionStatement(1294)", "Delete SimpleName: addIdEntry(1295)", "Delete SimpleName: id(1296)", "Delete SimpleName: clazz(1297)", "Delete MethodInvocation(1298)", "Delete ExpressionStatement(1299)", "Delete Block(1300)", "Delete SimpleName: Exception(1301)", "Delete SimpleType: Exception(1302)", "Delete SimpleName: e(1303)", "Delete SingleVariableDeclaration(1304)", "Delete SimpleName: LOG(1305)", "Delete SimpleName: isWarnEnabled(1306)", "Delete MethodInvocation(1307)", "Delete SimpleName: LOG(1308)", "Delete SimpleName: warn(1309)", "Delete StringLiteral: \"Unable to load internal map entry\"(1310)", "Delete SimpleName: e(1311)", "Delete SimpleName: toString(1312)", "Delete MethodInvocation(1313)", "Delete InfixExpression: +(1314)", "Delete MethodInvocation(1315)", "Delete ExpressionStatement(1316)", "Delete Block(1317)", "Delete IfStatement(1318)", "Delete SimpleName: fIdCount(1319)", "Delete PostfixExpression: --(1320)", "Delete ExpressionStatement(1321)", "Delete Block(1322)", "Delete CatchClause(1323)", "Delete TryStatement(1324)", "Delete Block(1325)", "Delete ForStatement(1326)", "Delete SimpleName: KeyValueEntry(1327)", "Delete SimpleType: KeyValueEntry(1328)", "Delete SimpleName: entry(1329)", "Delete VariableDeclarationFragment(1330)", "Delete VariableDeclarationStatement(1331)", "Delete PrimitiveType: int(1332)", "Delete SimpleName: i(1333)", "Delete NumberLiteral: 0(1334)", "Delete VariableDeclarationFragment(1335)", "Delete VariableDeclarationExpression(1336)", "Delete SimpleName: i(1337)", "Delete SimpleName: fSize(1338)", "Delete InfixExpression: <(1339)", "Delete SimpleName: i(1340)", "Delete PostfixExpression: ++(1341)", "Delete SimpleName: entry(1342)", "Delete SimpleName: getKeyValueEntry(1343)", "Delete SimpleName: in(1344)", "Delete SimpleName: readByte(1345)", "Delete MethodInvocation(1346)", "Delete SimpleName: in(1347)", "Delete SimpleName: readByte(1348)", "Delete MethodInvocation(1349)", "Delete MethodInvocation(1350)", "Delete Assignment: =(1351)", "Delete ExpressionStatement(1352)", "Delete QualifiedName: entry.fKey(1353)", "Delete SimpleName: readFields(1354)", "Delete SimpleName: in(1355)", "Delete MethodInvocation(1356)", "Delete ExpressionStatement(1357)", "Delete QualifiedName: entry.fValue(1358)", "Delete SimpleName: readFields(1359)", "Delete SimpleName: in(1360)", "Delete MethodInvocation(1361)", "Delete ExpressionStatement(1362)", "Delete SimpleName: fFirst(1363)", "Delete NullLiteral(1364)", "Delete InfixExpression: ==(1365)", "Delete SimpleName: fFirst(1366)", "Delete SimpleName: fLast(1367)", "Delete SimpleName: entry(1368)", "Delete Assignment: =(1369)", "Delete Assignment: =(1370)", "Delete ExpressionStatement(1371)", "Delete Block(1372)", "Delete SimpleName: fLast(1373)", "Delete QualifiedName: fLast.fNextEntry(1374)", "Delete SimpleName: entry(1375)", "Delete Assignment: =(1376)", "Delete Assignment: =(1377)", "Delete ExpressionStatement(1378)", "Delete Block(1379)", "Delete IfStatement(1380)", "Delete Block(1381)", "Delete SimpleName: IOException(1382)", "Delete SimpleType: IOException(1383)", "Delete SimpleName: e(1384)", "Delete SingleVariableDeclaration(1385)", "Delete SimpleName: LOG(1386)", "Delete SimpleName: isWarnEnabled(1387)", "Delete MethodInvocation(1388)", "Delete SimpleName: LOG(1389)", "Delete SimpleName: warn(1390)", "Delete StringLiteral: \"Unable to load meta data entry, ignoring.. : \"(1391)", "Delete SimpleName: e(1392)", "Delete SimpleName: toString(1393)", "Delete MethodInvocation(1394)", "Delete InfixExpression: +(1395)", "Delete MethodInvocation(1396)", "Delete ExpressionStatement(1397)", "Delete Block(1398)", "Delete IfStatement(1399)", "Delete SimpleName: fSize(1400)", "Delete PostfixExpression: --(1401)", "Delete ExpressionStatement(1402)", "Delete Block(1403)", "Delete CatchClause(1404)", "Delete TryStatement(1405)", "Delete Block(1406)", "Delete ForStatement(1407)", "Delete Block(1408)", "Delete IfStatement(1409)", "Delete Block(1410)", "Delete MethodDeclaration(1411)", "Delete Modifier: private(1412)", "Delete PrimitiveType: void(1413)", "Delete SimpleName: createInternalIdClassEntries(1414)", "Delete SimpleName: KeyValueEntry(1415)", "Delete SimpleType: KeyValueEntry(1416)", "Delete SimpleName: entry(1417)", "Delete SimpleName: fFirst(1418)", "Delete VariableDeclarationFragment(1419)", "Delete VariableDeclarationStatement(1420)", "Delete PrimitiveType: byte(1421)", "Delete SimpleName: id(1422)", "Delete VariableDeclarationFragment(1423)", "Delete VariableDeclarationStatement(1424)", "Delete SimpleName: entry(1425)", "Delete NullLiteral(1426)", "Delete InfixExpression: !=(1427)", "Delete SimpleName: id(1428)", "Delete SimpleName: getClassId(1429)", "Delete QualifiedName: entry.fKey(1430)", "Delete SimpleName: getClass(1431)", "Delete MethodInvocation(1432)", "Delete MethodInvocation(1433)", "Delete Assignment: =(1434)", "Delete ExpressionStatement(1435)", "Delete SimpleName: id(1436)", "Delete NumberLiteral: 128(1437)", "Delete PrefixExpression: -(1438)", "Delete InfixExpression: ==(1439)", "Delete SimpleName: id(1440)", "Delete SimpleName: addIdEntry(1441)", "Delete PrimitiveType: byte(1442)", "Delete NumberLiteral: 128(1443)", "Delete PrefixExpression: -(1444)", "Delete SimpleName: CLASS_ID_MAP(1445)", "Delete SimpleName: size(1446)", "Delete MethodInvocation(1447)", "Delete SimpleName: fIdCount(1448)", "Delete PrefixExpression: ++(1449)", "Delete InfixExpression: +(1450)", "Delete ParenthesizedExpression(1451)", "Delete CastExpression(1452)", "Delete QualifiedName: entry.fKey(1453)", "Delete SimpleName: getClass(1454)", "Delete MethodInvocation(1455)", "Delete MethodInvocation(1456)", "Delete Assignment: =(1457)", "Delete ExpressionStatement(1458)", "Delete Block(1459)", "Delete IfStatement(1460)", "Delete QualifiedName: entry.fKeyClassId(1461)", "Delete SimpleName: id(1462)", "Delete Assignment: =(1463)", "Delete ExpressionStatement(1464)", "Delete SimpleName: id(1465)", "Delete SimpleName: getClassId(1466)", "Delete QualifiedName: entry.fValue(1467)", "Delete SimpleName: getClass(1468)", "Delete MethodInvocation(1469)", "Delete MethodInvocation(1470)", "Delete Assignment: =(1471)", "Delete ExpressionStatement(1472)", "Delete SimpleName: id(1473)", "Delete NumberLiteral: 128(1474)", "Delete PrefixExpression: -(1475)", "Delete InfixExpression: ==(1476)", "Delete SimpleName: id(1477)", "Delete SimpleName: addIdEntry(1478)", "Delete PrimitiveType: byte(1479)", "Delete NumberLiteral: 128(1480)", "Delete PrefixExpression: -(1481)", "Delete SimpleName: CLASS_ID_MAP(1482)", "Delete SimpleName: size(1483)", "Delete MethodInvocation(1484)", "Delete SimpleName: fIdCount(1485)", "Delete PrefixExpression: ++(1486)", "Delete InfixExpression: +(1487)", "Delete ParenthesizedExpression(1488)", "Delete CastExpression(1489)", "Delete QualifiedName: entry.fValue(1490)", "Delete SimpleName: getClass(1491)", "Delete MethodInvocation(1492)", "Delete MethodInvocation(1493)", "Delete Assignment: =(1494)", "Delete ExpressionStatement(1495)", "Delete Block(1496)", "Delete IfStatement(1497)", "Delete QualifiedName: entry.fValueClassId(1498)", "Delete SimpleName: id(1499)", "Delete Assignment: =(1500)", "Delete ExpressionStatement(1501)", "Delete SimpleName: entry(1502)", "Delete QualifiedName: entry.fNextEntry(1503)", "Delete Assignment: =(1504)", "Delete ExpressionStatement(1505)", "Delete Block(1506)", "Delete WhileStatement(1507)", "Delete Block(1508)", "Delete MethodDeclaration(1509)", "Delete Modifier: private(1510)", "Delete PrimitiveType: byte(1511)", "Delete SimpleName: addIdEntry(1512)", "Delete PrimitiveType: byte(1513)", "Delete SimpleName: id(1514)", "Delete SingleVariableDeclaration(1515)", "Delete SimpleName: Class(1516)", "Delete SimpleType: Class(1517)", "Delete SimpleName: clazz(1518)", "Delete SingleVariableDeclaration(1519)", "Delete SimpleName: fIdFirst(1520)", "Delete NullLiteral(1521)", "Delete InfixExpression: ==(1522)", "Delete SimpleName: fIdFirst(1523)", "Delete SimpleName: fIdLast(1524)", "Delete SimpleName: ClassIdEntry(1525)", "Delete SimpleType: ClassIdEntry(1526)", "Delete SimpleName: id(1527)", "Delete SimpleName: clazz(1528)", "Delete ClassInstanceCreation(1529)", "Delete Assignment: =(1530)", "Delete Assignment: =(1531)", "Delete ExpressionStatement(1532)", "Delete Block(1533)", "Delete QualifiedName: fIdLast.fNextIdEntry(1534)", "Delete SimpleName: fIdLast(1535)", "Delete SimpleName: ClassIdEntry(1536)", "Delete SimpleType: ClassIdEntry(1537)", "Delete SimpleName: id(1538)", "Delete SimpleName: clazz(1539)", "Delete ClassInstanceCreation(1540)", "Delete Assignment: =(1541)", "Delete Assignment: =(1542)", "Delete ExpressionStatement(1543)", "Delete Block(1544)", "Delete IfStatement(1545)", "Delete SimpleName: id(1546)", "Delete ReturnStatement(1547)", "Delete Block(1548)", "Delete MethodDeclaration(1549)", "Delete Modifier: private(1550)", "Delete PrimitiveType: byte(1551)", "Delete SimpleName: getClassId(1552)", "Delete SimpleName: Class(1553)", "Delete SimpleType: Class(1554)", "Delete SimpleName: clazz(1555)", "Delete SingleVariableDeclaration(1556)", "Delete SimpleName: Byte(1557)", "Delete SimpleType: Byte(1558)", "Delete SimpleName: classId(1559)", "Delete SimpleName: CLASS_ID_MAP(1560)", "Delete SimpleName: get(1561)", "Delete SimpleName: clazz(1562)", "Delete MethodInvocation(1563)", "Delete VariableDeclarationFragment(1564)", "Delete VariableDeclarationStatement(1565)", "Delete SimpleName: classId(1566)", "Delete NullLiteral(1567)", "Delete InfixExpression: !=(1568)", "Delete SimpleName: classId(1569)", "Delete SimpleName: byteValue(1570)", "Delete MethodInvocation(1571)", "Delete ReturnStatement(1572)", "Delete Block(1573)", "Delete IfStatement(1574)", "Delete SimpleName: ClassIdEntry(1575)", "Delete SimpleType: ClassIdEntry(1576)", "Delete SimpleName: entry(1577)", "Delete SimpleName: fIdFirst(1578)", "Delete VariableDeclarationFragment(1579)", "Delete VariableDeclarationStatement(1580)", "Delete SimpleName: entry(1581)", "Delete NullLiteral(1582)", "Delete InfixExpression: !=(1583)", "Delete QualifiedName: entry.fclazz(1584)", "Delete SimpleName: equals(1585)", "Delete SimpleName: clazz(1586)", "Delete MethodInvocation(1587)", "Delete QualifiedName: entry.fId(1588)", "Delete ReturnStatement(1589)", "Delete Block(1590)", "Delete IfStatement(1591)", "Delete SimpleName: entry(1592)", "Delete QualifiedName: entry.fNextIdEntry(1593)", "Delete Assignment: =(1594)", "Delete ExpressionStatement(1595)", "Delete Block(1596)", "Delete WhileStatement(1597)", "Delete NumberLiteral: 128(1598)", "Delete PrefixExpression: -(1599)", "Delete ReturnStatement(1600)", "Delete Block(1601)", "Delete MethodDeclaration(1602)", "Delete Modifier: private(1603)", "Delete SimpleName: KeyValueEntry(1604)", "Delete SimpleType: KeyValueEntry(1605)", "Delete SimpleName: getKeyValueEntry(1606)", "Delete Modifier: final(1607)", "Delete PrimitiveType: byte(1608)", "Delete SimpleName: keyId(1609)", "Delete SingleVariableDeclaration(1610)", "Delete Modifier: final(1611)", "Delete PrimitiveType: byte(1612)", "Delete SimpleName: valueId(1613)", "Delete SingleVariableDeclaration(1614)", "Delete SimpleName: IOException(1615)", "Delete SimpleType: IOException(1616)", "Delete SimpleName: KeyValueEntry(1617)", "Delete SimpleType: KeyValueEntry(1618)", "Delete SimpleName: entry(1619)", "Delete SimpleName: fOld(1620)", "Delete VariableDeclarationFragment(1621)", "Delete VariableDeclarationStatement(1622)", "Delete SimpleName: KeyValueEntry(1623)", "Delete SimpleType: KeyValueEntry(1624)", "Delete SimpleName: last(1625)", "Delete NullLiteral(1626)", "Delete VariableDeclarationFragment(1627)", "Delete VariableDeclarationStatement(1628)", "Delete PrimitiveType: byte(1629)", "Delete SimpleName: entryKeyId(1630)", "Delete VariableDeclarationFragment(1631)", "Delete VariableDeclarationStatement(1632)", "Delete PrimitiveType: byte(1633)", "Delete SimpleName: entryValueId(1634)", "Delete VariableDeclarationFragment(1635)", "Delete VariableDeclarationStatement(1636)", "Delete SimpleName: entry(1637)", "Delete NullLiteral(1638)", "Delete InfixExpression: !=(1639)", "Delete SimpleName: entryKeyId(1640)", "Delete SimpleName: getClassId(1641)", "Delete QualifiedName: entry.fKey(1642)", "Delete SimpleName: getClass(1643)", "Delete MethodInvocation(1644)", "Delete MethodInvocation(1645)", "Delete Assignment: =(1646)", "Delete ExpressionStatement(1647)", "Delete SimpleName: entryValueId(1648)", "Delete SimpleName: getClassId(1649)", "Delete QualifiedName: entry.fValue(1650)", "Delete SimpleName: getClass(1651)", "Delete MethodInvocation(1652)", "Delete MethodInvocation(1653)", "Delete Assignment: =(1654)", "Delete ExpressionStatement(1655)", "Delete SimpleName: entryKeyId(1656)", "Delete SimpleName: keyId(1657)", "Delete InfixExpression: ==(1658)", "Delete SimpleName: entryValueId(1659)", "Delete SimpleName: valueId(1660)", "Delete InfixExpression: ==(1661)", "Delete InfixExpression: &&(1662)", "Delete SimpleName: last(1663)", "Delete NullLiteral(1664)", "Delete InfixExpression: !=(1665)", "Delete QualifiedName: last.fNextEntry(1666)", "Delete QualifiedName: entry.fNextEntry(1667)", "Delete Assignment: =(1668)", "Delete ExpressionStatement(1669)", "Delete Block(1670)", "Delete SimpleName: fOld(1671)", "Delete QualifiedName: entry.fNextEntry(1672)", "Delete Assignment: =(1673)", "Delete ExpressionStatement(1674)", "Delete Block(1675)", "Delete IfStatement(1676)", "Delete QualifiedName: entry.fNextEntry(1677)", "Delete NullLiteral(1678)", "Delete Assignment: =(1679)", "Delete ExpressionStatement(1680)", "Delete SimpleName: entry(1681)", "Delete ReturnStatement(1682)", "Delete Block(1683)", "Delete IfStatement(1684)", "Delete SimpleName: last(1685)", "Delete SimpleName: entry(1686)", "Delete Assignment: =(1687)", "Delete ExpressionStatement(1688)", "Delete SimpleName: entry(1689)", "Delete QualifiedName: entry.fNextEntry(1690)", "Delete Assignment: =(1691)", "Delete ExpressionStatement(1692)", "Delete Block(1693)", "Delete WhileStatement(1694)", "Delete SimpleName: Class(1695)", "Delete SimpleType: Class(1696)", "Delete SimpleName: keyClass(1697)", "Delete SimpleName: getClass(1698)", "Delete SimpleName: keyId(1699)", "Delete MethodInvocation(1700)", "Delete VariableDeclarationFragment(1701)", "Delete VariableDeclarationStatement(1702)", "Delete SimpleName: Class(1703)", "Delete SimpleType: Class(1704)", "Delete SimpleName: valueClass(1705)", "Delete SimpleName: getClass(1706)", "Delete SimpleName: valueId(1707)", "Delete MethodInvocation(1708)", "Delete VariableDeclarationFragment(1709)", "Delete VariableDeclarationStatement(1710)", "Delete SimpleName: KeyValueEntry(1711)", "Delete SimpleType: KeyValueEntry(1712)", "Delete SimpleName: Writable(1713)", "Delete SimpleType: Writable(1714)", "Delete SimpleName: keyClass(1715)", "Delete SimpleName: newInstance(1716)", "Delete MethodInvocation(1717)", "Delete CastExpression(1718)", "Delete SimpleName: Writable(1719)", "Delete SimpleType: Writable(1720)", "Delete SimpleName: valueClass(1721)", "Delete SimpleName: newInstance(1722)", "Delete MethodInvocation(1723)", "Delete CastExpression(1724)", "Delete ClassInstanceCreation(1725)", "Delete ReturnStatement(1726)", "Delete Block(1727)", "Delete SimpleName: Exception(1728)", "Delete SimpleType: Exception(1729)", "Delete SimpleName: e(1730)", "Delete SingleVariableDeclaration(1731)", "Delete SimpleName: IOException(1732)", "Delete SimpleType: IOException(1733)", "Delete StringLiteral: \"unable to instantiate class: \"(1734)", "Delete SimpleName: e(1735)", "Delete SimpleName: toString(1736)", "Delete MethodInvocation(1737)", "Delete InfixExpression: +(1738)", "Delete ClassInstanceCreation(1739)", "Delete ThrowStatement(1740)", "Delete Block(1741)", "Delete CatchClause(1742)", "Delete TryStatement(1743)", "Delete Block(1744)", "Delete MethodDeclaration(1745)", "Delete Modifier: private(1746)", "Delete SimpleName: Class(1747)", "Delete SimpleType: Class(1748)", "Delete SimpleName: getClass(1749)", "Delete Modifier: final(1750)", "Delete PrimitiveType: byte(1751)", "Delete SimpleName: id(1752)", "Delete SingleVariableDeclaration(1753)", "Delete SimpleName: IOException(1754)", "Delete SimpleType: IOException(1755)", "Delete SimpleName: Class(1756)", "Delete SimpleType: Class(1757)", "Delete SimpleName: clazz(1758)", "Delete SimpleName: ID_CLASS_MAP(1759)", "Delete SimpleName: get(1760)", "Delete SimpleName: Byte(1761)", "Delete SimpleType: Byte(1762)", "Delete SimpleName: id(1763)", "Delete ClassInstanceCreation(1764)", "Delete MethodInvocation(1765)", "Delete VariableDeclarationFragment(1766)", "Delete VariableDeclarationStatement(1767)", "Delete SimpleName: clazz(1768)", "Delete NullLiteral(1769)", "Delete InfixExpression: ==(1770)", "Delete SimpleName: ClassIdEntry(1771)", "Delete SimpleType: ClassIdEntry(1772)", "Delete SimpleName: entry(1773)", "Delete SimpleName: fIdFirst(1774)", "Delete VariableDeclarationFragment(1775)", "Delete VariableDeclarationStatement(1776)", "Delete SimpleName: entry(1777)", "Delete NullLiteral(1778)", "Delete InfixExpression: !=(1779)", "Delete QualifiedName: entry.fId(1780)", "Delete SimpleName: id(1781)", "Delete InfixExpression: ==(1782)", "Delete QualifiedName: entry.fclazz(1783)", "Delete ReturnStatement(1784)", "Delete Block(1785)", "Delete IfStatement(1786)", "Delete SimpleName: entry(1787)", "Delete QualifiedName: entry.fNextIdEntry(1788)", "Delete Assignment: =(1789)", "Delete ExpressionStatement(1790)", "Delete Block(1791)", "Delete WhileStatement(1792)", "Delete Block(1793)", "Delete SimpleName: clazz(1794)", "Delete ReturnStatement(1795)", "Delete Block(1796)", "Delete IfStatement(1797)", "Delete SimpleName: IOException(1798)", "Delete SimpleType: IOException(1799)", "Delete StringLiteral: \"unable to load class for id: \"(1800)", "Delete SimpleName: id(1801)", "Delete InfixExpression: +(1802)", "Delete ClassInstanceCreation(1803)", "Delete ThrowStatement(1804)", "Delete Block(1805)", "Delete MethodDeclaration(1806)", "Delete TextElement: an entry holds writable key and value (1807)", "Delete TagElement(1808)", "Delete Javadoc(1809)", "Delete Modifier: private(1810)", "Delete SimpleName: KeyValueEntry(1811)", "Delete Modifier: private(1812)", "Delete PrimitiveType: byte(1813)", "Delete SimpleName: fKeyClassId(1814)", "Delete VariableDeclarationFragment(1815)", "Delete FieldDeclaration(1816)", "Delete Modifier: private(1817)", "Delete PrimitiveType: byte(1818)", "Delete SimpleName: fValueClassId(1819)", "Delete VariableDeclarationFragment(1820)", "Delete FieldDeclaration(1821)", "Delete Modifier: private(1822)", "Delete SimpleName: Writable(1823)", "Delete SimpleType: Writable(1824)", "Delete SimpleName: fKey(1825)", "Delete VariableDeclarationFragment(1826)", "Delete FieldDeclaration(1827)", "Delete Modifier: private(1828)", "Delete SimpleName: Writable(1829)", "Delete SimpleType: Writable(1830)", "Delete SimpleName: fValue(1831)", "Delete VariableDeclarationFragment(1832)", "Delete FieldDeclaration(1833)", "Delete Modifier: private(1834)", "Delete SimpleName: KeyValueEntry(1835)", "Delete SimpleType: KeyValueEntry(1836)", "Delete SimpleName: fNextEntry(1837)", "Delete VariableDeclarationFragment(1838)", "Delete FieldDeclaration(1839)", "Delete Modifier: public(1840)", "Delete SimpleName: KeyValueEntry(1841)", "Delete SimpleName: Writable(1842)", "Delete SimpleType: Writable(1843)", "Delete SimpleName: key(1844)", "Delete SingleVariableDeclaration(1845)", "Delete SimpleName: Writable(1846)", "Delete SimpleType: Writable(1847)", "Delete SimpleName: value(1848)", "Delete SingleVariableDeclaration(1849)", "Delete ThisExpression(1850)", "Delete SimpleName: fKey(1851)", "Delete FieldAccess(1852)", "Delete SimpleName: key(1853)", "Delete Assignment: =(1854)", "Delete ExpressionStatement(1855)", "Delete ThisExpression(1856)", "Delete SimpleName: fValue(1857)", "Delete FieldAccess(1858)", "Delete SimpleName: value(1859)", "Delete Assignment: =(1860)", "Delete ExpressionStatement(1861)", "Delete Block(1862)", "Delete MethodDeclaration(1863)", "Delete Modifier: public(1864)", "Delete SimpleName: String(1865)", "Delete SimpleType: String(1866)", "Delete SimpleName: toString(1867)", "Delete SimpleName: fKey(1868)", "Delete SimpleName: toString(1869)", "Delete MethodInvocation(1870)", "Delete StringLiteral: \":\"(1871)", "Delete SimpleName: fValue(1872)", "Delete SimpleName: toString(1873)", "Delete MethodInvocation(1874)", "Delete InfixExpression: +(1875)", "Delete ReturnStatement(1876)", "Delete Block(1877)", "Delete MethodDeclaration(1878)", "Delete Modifier: public(1879)", "Delete PrimitiveType: boolean(1880)", "Delete SimpleName: equals(1881)", "Delete SimpleName: Object(1882)", "Delete SimpleType: Object(1883)", "Delete SimpleName: obj(1884)", "Delete SingleVariableDeclaration(1885)", "Delete SimpleName: obj(1886)", "Delete SimpleName: KeyValueEntry(1887)", "Delete SimpleType: KeyValueEntry(1888)", "Delete InstanceofExpression(1889)", "Delete SimpleName: KeyValueEntry(1890)", "Delete SimpleType: KeyValueEntry(1891)", "Delete SimpleName: entry(1892)", "Delete SimpleName: KeyValueEntry(1893)", "Delete SimpleType: KeyValueEntry(1894)", "Delete SimpleName: obj(1895)", "Delete CastExpression(1896)", "Delete VariableDeclarationFragment(1897)", "Delete VariableDeclarationStatement(1898)", "Delete QualifiedName: entry.fKey(1899)", "Delete SimpleName: equals(1900)", "Delete SimpleName: fKey(1901)", "Delete MethodInvocation(1902)", "Delete QualifiedName: entry.fValue(1903)", "Delete SimpleName: equals(1904)", "Delete SimpleName: fValue(1905)", "Delete MethodInvocation(1906)", "Delete InfixExpression: &&(1907)", "Delete ReturnStatement(1908)", "Delete Block(1909)", "Delete IfStatement(1910)", "Delete BooleanLiteral: false(1911)", "Delete ReturnStatement(1912)", "Delete Block(1913)", "Delete MethodDeclaration(1914)", "Delete Modifier: public(1915)", "Delete PrimitiveType: int(1916)", "Delete SimpleName: hashCode(1917)", "Delete SimpleName: toString(1918)", "Delete MethodInvocation(1919)", "Delete SimpleName: hashCode(1920)", "Delete MethodInvocation(1921)", "Delete ReturnStatement(1922)", "Delete Block(1923)", "Delete MethodDeclaration(1924)", "Delete TypeDeclaration: class(1925)", "Delete TextElement: container for Id class tuples (1926)", "Delete TagElement(1927)", "Delete Javadoc(1928)", "Delete Modifier: private(1929)", "Delete SimpleName: ClassIdEntry(1930)", "Delete Modifier: public(1931)", "Delete SimpleName: ClassIdEntry(1932)", "Delete PrimitiveType: byte(1933)", "Delete SimpleName: id(1934)", "Delete SingleVariableDeclaration(1935)", "Delete SimpleName: Class(1936)", "Delete SimpleType: Class(1937)", "Delete SimpleName: clazz(1938)", "Delete SingleVariableDeclaration(1939)", "Delete SimpleName: fId(1940)", "Delete SimpleName: id(1941)", "Delete Assignment: =(1942)", "Delete ExpressionStatement(1943)", "Delete SimpleName: fclazz(1944)", "Delete SimpleName: clazz(1945)", "Delete Assignment: =(1946)", "Delete ExpressionStatement(1947)", "Delete Block(1948)", "Delete MethodDeclaration(1949)", "Delete Modifier: private(1950)", "Delete PrimitiveType: byte(1951)", "Delete SimpleName: fId(1952)", "Delete VariableDeclarationFragment(1953)", "Delete FieldDeclaration(1954)", "Delete Modifier: private(1955)", "Delete SimpleName: Class(1956)", "Delete SimpleType: Class(1957)", "Delete SimpleName: fclazz(1958)", "Delete VariableDeclarationFragment(1959)", "Delete FieldDeclaration(1960)", "Delete Modifier: private(1961)", "Delete SimpleName: ClassIdEntry(1962)", "Delete SimpleType: ClassIdEntry(1963)", "Delete SimpleName: fNextIdEntry(1964)", "Delete VariableDeclarationFragment(1965)", "Delete FieldDeclaration(1966)", "Delete TypeDeclaration: class(1967)", "Delete TypeDeclaration: class(1968)"]}}, {"NutchWritable_cluster": {"actions": [{"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.hadoop.io.NullWritable", "DEL TypeLiteral", "DEL SimpleType: org.apache.hadoop.io.NullWritable"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.hadoop.io.LongWritable", "DEL TypeLiteral", "DEL QualifiedName: org.apache.hadoop.io.LongWritable"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.hadoop.io.BytesWritable", "DEL SimpleType: org.apache.hadoop.io.BytesWritable", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.hadoop.io.FloatWritable", "DEL TypeLiteral", "DEL SimpleType: org.apache.hadoop.io.FloatWritable"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL SimpleType: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Text", "DEL SimpleType: org.apache.hadoop.io.Text", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL QualifiedName: org.apache.hadoop.io.MD5Hash", "DEL SimpleType: org.apache.hadoop.io.MD5Hash"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.nutch.crawl.CrawlDatum", "DEL TypeLiteral", "DEL SimpleType: org.apache.nutch.crawl.CrawlDatum"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.nutch.crawl.Inlink", "DEL QualifiedName: org.apache.nutch.crawl.Inlink", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL SimpleType: org.apache.nutch.crawl.Inlinks", "DEL QualifiedName: org.apache.nutch.crawl.Inlinks"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.nutch.crawl.MapWritable", "DEL TypeLiteral", "DEL QualifiedName: org.apache.nutch.crawl.MapWritable"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.nutch.fetcher.FetcherOutput", "DEL QualifiedName: org.apache.nutch.fetcher.FetcherOutput", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL SimpleType: org.apache.nutch.metadata.Metadata", "DEL QualifiedName: org.apache.nutch.metadata.Metadata"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.nutch.parse.Outlink", "DEL QualifiedName: org.apache.nutch.parse.Outlink", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL QualifiedName: org.apache.nutch.parse.ParseText", "DEL SimpleType: org.apache.nutch.parse.ParseText"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: org.apache.nutch.parse.ParseData", "DEL QualifiedName: org.apache.nutch.parse.ParseData", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL SimpleType: org.apache.nutch.parse.ParseStatus", "DEL QualifiedName: org.apache.nutch.parse.ParseStatus"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.nutch.protocol.Content", "DEL SimpleType: org.apache.nutch.protocol.Content", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL QualifiedName: org.apache.nutch.protocol.ProtocolStatus", "DEL SimpleType: org.apache.nutch.protocol.ProtocolStatus", "DEL TypeLiteral"]}]}}, {"NutchWritable_diff": {"operations": ["Delete QualifiedName: org.apache.hadoop.io.NullWritable(30)", "Delete SimpleType: org.apache.hadoop.io.NullWritable(31)", "Delete TypeLiteral(32)", "Delete QualifiedName: org.apache.hadoop.io.LongWritable(33)", "Delete SimpleType: org.apache.hadoop.io.LongWritable(34)", "Delete TypeLiteral(35)", "Delete QualifiedName: org.apache.hadoop.io.BytesWritable(36)", "Delete SimpleType: org.apache.hadoop.io.BytesWritable(37)", "Delete TypeLiteral(38)", "Delete QualifiedName: org.apache.hadoop.io.FloatWritable(39)", "Delete SimpleType: org.apache.hadoop.io.FloatWritable(40)", "Delete TypeLiteral(41)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(42)", "Delete SimpleType: org.apache.hadoop.io.IntWritable(43)", "Delete TypeLiteral(44)", "Delete QualifiedName: org.apache.hadoop.io.Text(45)", "Delete SimpleType: org.apache.hadoop.io.Text(46)", "Delete TypeLiteral(47)", "Delete QualifiedName: org.apache.hadoop.io.MD5Hash(48)", "Delete SimpleType: org.apache.hadoop.io.MD5Hash(49)", "Delete TypeLiteral(50)", "Delete QualifiedName: org.apache.nutch.crawl.CrawlDatum(51)", "Delete SimpleType: org.apache.nutch.crawl.CrawlDatum(52)", "Delete TypeLiteral(53)", "Delete QualifiedName: org.apache.nutch.crawl.Inlink(54)", "Delete SimpleType: org.apache.nutch.crawl.Inlink(55)", "Delete TypeLiteral(56)", "Delete QualifiedName: org.apache.nutch.crawl.Inlinks(57)", "Delete SimpleType: org.apache.nutch.crawl.Inlinks(58)", "Delete TypeLiteral(59)", "Delete QualifiedName: org.apache.nutch.crawl.MapWritable(60)", "Delete SimpleType: org.apache.nutch.crawl.MapWritable(61)", "Delete TypeLiteral(62)", "Delete QualifiedName: org.apache.nutch.fetcher.FetcherOutput(63)", "Delete SimpleType: org.apache.nutch.fetcher.FetcherOutput(64)", "Delete TypeLiteral(65)", "Delete QualifiedName: org.apache.nutch.metadata.Metadata(66)", "Delete SimpleType: org.apache.nutch.metadata.Metadata(67)", "Delete TypeLiteral(68)", "Delete QualifiedName: org.apache.nutch.parse.Outlink(69)", "Delete SimpleType: org.apache.nutch.parse.Outlink(70)", "Delete TypeLiteral(71)", "Delete QualifiedName: org.apache.nutch.parse.ParseText(72)", "Delete SimpleType: org.apache.nutch.parse.ParseText(73)", "Delete TypeLiteral(74)", "Delete QualifiedName: org.apache.nutch.parse.ParseData(75)", "Delete SimpleType: org.apache.nutch.parse.ParseData(76)", "Delete TypeLiteral(77)", "Delete QualifiedName: org.apache.nutch.parse.ParseStatus(78)", "Delete SimpleType: org.apache.nutch.parse.ParseStatus(79)", "Delete TypeLiteral(80)", "Delete QualifiedName: org.apache.nutch.protocol.Content(81)", "Delete SimpleType: org.apache.nutch.protocol.Content(82)", "Delete TypeLiteral(83)", "Delete QualifiedName: org.apache.nutch.protocol.ProtocolStatus(84)", "Delete SimpleType: org.apache.nutch.protocol.ProtocolStatus(85)", "Delete TypeLiteral(86)"]}}, {"WebTableReader_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 37"]}, {"root": "UPDATE from CrawlDatum to CrawlStatus", "operations": ["UPD SimpleName: CrawlDatum from CrawlDatum to CrawlStatus"]}, {"root": "UPDATE from getStatusName to getName", "operations": ["UPD SimpleName: getStatusName from getStatusName to getName"]}]}}, {"WebTableReader_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(2311) at 37", "Update SimpleName: CrawlDatum(1374) to CrawlStatus", "Update SimpleName: getStatusName(1375) to getName"]}}, {"FetcherOutput_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: the License.  You may obtain a copy of the License at", "DEL TextElement: limitations under the License.", "DEL TextElement: The ASF licenses this file to You under the Apache License, Version 2.0", "DEL PackageDeclaration", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL QualifiedName: org.apache.nutch.fetcher", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: this work for additional information regarding copyright ownership.", "DEL TagElement", "DEL TextElement: contributor license agreements.  See the NOTICE file distributed with", "DEL TextElement: (the \"License\"); you may not use this file except in compliance with", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one or more", "DEL TextElement: See the License for the specific language governing permissions and"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL SimpleName: out", "DEL SimpleName: in", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: DataInput", "DEL MethodDeclaration", "DEL SimpleName: FetcherOutput", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL SimpleType: Writable", "DEL SimpleName: Writable", "DEL Modifier: final", "DEL TypeDeclaration: class", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL Modifier: final", "DEL Modifier: final", "DEL SimpleName: readFields", "DEL PrimitiveType: void", "DEL PrimitiveType: void", "DEL SimpleName: DataOutput", "DEL MethodDeclaration", "DEL Block", "DEL SimpleType: DataInput", "DEL SimpleType: DataOutput", "DEL Modifier: public", "DEL SimpleName: write"]}]}}, {"FetcherOutput_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one or more(0)", "Delete TextElement: contributor license agreements.  See the NOTICE file distributed with(1)", "Delete TextElement: this work for additional information regarding copyright ownership.(2)", "Delete TextElement: The ASF licenses this file to You under the Apache License, Version 2.0(3)", "Delete TextElement: (the \"License\"); you may not use this file except in compliance with(4)", "Delete TextElement: the License.  You may obtain a copy of the License at(5)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(6)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(7)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(8)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(9)", "Delete TextElement: See the License for the specific language governing permissions and(10)", "Delete TextElement: limitations under the License.(11)", "Delete TagElement(12)", "Delete Javadoc(13)", "Delete QualifiedName: org.apache.nutch.fetcher(14)", "Delete PackageDeclaration(15)", "Delete QualifiedName: java.io.DataInput(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.io.DataOutput(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.IOException(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.io.Writable(22)", "Delete ImportDeclaration(23)", "Delete Modifier: public(24)", "Delete Modifier: final(25)", "Delete SimpleName: FetcherOutput(26)", "Delete SimpleName: Writable(27)", "Delete SimpleType: Writable(28)", "Delete Modifier: public(29)", "Delete Modifier: final(30)", "Delete PrimitiveType: void(31)", "Delete SimpleName: readFields(32)", "Delete SimpleName: DataInput(33)", "Delete SimpleType: DataInput(34)", "Delete SimpleName: in(35)", "Delete SingleVariableDeclaration(36)", "Delete SimpleName: IOException(37)", "Delete SimpleType: IOException(38)", "Delete Block(39)", "Delete MethodDeclaration(40)", "Delete Modifier: public(41)", "Delete Modifier: final(42)", "Delete PrimitiveType: void(43)", "Delete SimpleName: write(44)", "Delete SimpleName: DataOutput(45)", "Delete SimpleType: DataOutput(46)", "Delete SimpleName: out(47)", "Delete SingleVariableDeclaration(48)", "Delete SimpleName: IOException(49)", "Delete SimpleType: IOException(50)", "Delete Block(51)", "Delete MethodDeclaration(52)", "Delete TypeDeclaration: class(53)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 4, "testing": "False", "maintenance": "False", "build": "False"}]}