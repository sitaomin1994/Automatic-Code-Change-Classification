{"application": "apache-phoenix", "csha": "7827178b7addbd336d5a5c3b12a4e1b764f0f74a", "files": [{"AggregateQueryIT_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: rs to Assignment: = at 0", "INS SimpleName: query to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: query to Assignment: = at 0", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS SimpleName: query to Assignment: = at 0", "INS ExpressionStatement to Block at 7", "INS Block to TryStatement at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 22", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS ExpressionStatement to Block at 16", "INS NullLiteral to MethodInvocation at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: query to Assignment: = at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: ts to InfixExpression: + at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS ExpressionStatement to Block at 18", "INS ExpressionStatement to Block at 8", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: query to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS SimpleName: rs to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 12", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: rs to Assignment: = at 0", "INS StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id' limit 1 offset 1\" to Assignment: = at 1", "INS SimpleName: PropertiesUtil to MethodInvocation at 0", "INS SimpleName: rs to Assignment: = at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id'\" to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: rs to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getBigDecimal to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: getLong to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"SELECT count(1),sum(x_decimal) FROM aTable WHERE organization_id = 'not_existing_organization_id'\" to Assignment: = at 1", "INS ExpressionStatement to Block at 20", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id' having count(*)>0\" to Assignment: = at 1", "INS ExpressionStatement to Block at 9", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: TEST_PROPERTIES to MethodInvocation at 2", "INS ExpressionStatement to Block at 17", "INS ExpressionStatement to Block at 19", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS StringLiteral: \"123\" to MethodInvocation at 1", "INS SimpleName: statement to MethodInvocation at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: deepCopy to MethodInvocation at 1", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: props to MethodInvocation at 3", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS StringLiteral: \"SELECT count(1),123 FROM aTable WHERE organization_id = 'not_existing_organization_id'\" to Assignment: = at 1", "INS SimpleName: query to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: next to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: testCountWithNoScanRanges to MethodDeclaration at 3", "INS SimpleName: getConnection to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: next to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: query to Assignment: = at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS SimpleName: getLong to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 13", "INS SimpleName: props to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ExpressionStatement to Block at 15", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS SimpleName: query to MethodInvocation at 2", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS TryStatement to Block at 4", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 10", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: next to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getString to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: getLong to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS ExpressionStatement to Block at 21", "INS SimpleName: query to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 11", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS SimpleName: executeQuery to MethodInvocation at 1"]}]}}, {"AggregateQueryIT_diff": {"operations": ["Insert MethodDeclaration(1141) into TypeDeclaration: class(1340) at 8", "Insert MarkerAnnotation(933) into MethodDeclaration(1141) at 0", "Insert Modifier: public(934) into MethodDeclaration(1141) at 1", "Insert PrimitiveType: void(935) into MethodDeclaration(1141) at 2", "Insert SimpleName: testCountWithNoScanRanges(936) into MethodDeclaration(1141) at 3", "Insert SimpleType: Exception(938) into MethodDeclaration(1141) at 4", "Insert Block(1140) into MethodDeclaration(1141) at 5", "Insert SimpleName: Test(932) into MarkerAnnotation(933) at 0", "Insert SimpleName: Exception(937) into SimpleType: Exception(938) at 0", "Insert VariableDeclarationStatement(944) into Block(1140) at 0", "Insert VariableDeclarationStatement(953) into Block(1140) at 1", "Insert ExpressionStatement(964) into Block(1140) at 2", "Insert VariableDeclarationStatement(975) into Block(1140) at 3", "Insert TryStatement(1139) into Block(1140) at 4", "Insert SimpleType: String(940) into VariableDeclarationStatement(944) at 0", "Insert VariableDeclarationFragment(943) into VariableDeclarationStatement(944) at 1", "Insert SimpleType: Properties(946) into VariableDeclarationStatement(953) at 0", "Insert VariableDeclarationFragment(952) into VariableDeclarationStatement(953) at 1", "Insert MethodInvocation(963) into ExpressionStatement(964) at 0", "Insert SimpleType: Connection(966) into VariableDeclarationStatement(975) at 0", "Insert VariableDeclarationFragment(974) into VariableDeclarationStatement(975) at 1", "Insert Block(1133) into TryStatement(1139) at 0", "Insert Block(1138) into TryStatement(1139) at 1", "Insert SimpleName: String(939) into SimpleType: String(940) at 0", "Insert SimpleName: query(941) into VariableDeclarationFragment(943) at 0", "Insert StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id'\"(942) into VariableDeclarationFragment(943) at 1", "Insert SimpleName: Properties(945) into SimpleType: Properties(946) at 0", "Insert SimpleName: props(947) into VariableDeclarationFragment(952) at 0", "Insert MethodInvocation(951) into VariableDeclarationFragment(952) at 1", "Insert SimpleName: props(954) into MethodInvocation(963) at 0", "Insert SimpleName: setProperty(955) into MethodInvocation(963) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(956) into MethodInvocation(963) at 2", "Insert MethodInvocation(962) into MethodInvocation(963) at 3", "Insert SimpleName: Connection(965) into SimpleType: Connection(966) at 0", "Insert SimpleName: conn(967) into VariableDeclarationFragment(974) at 0", "Insert MethodInvocation(973) into VariableDeclarationFragment(974) at 1", "Insert VariableDeclarationStatement(984) into Block(1133) at 0", "Insert VariableDeclarationStatement(992) into Block(1133) at 1", "Insert ExpressionStatement(998) into Block(1133) at 2", "Insert ExpressionStatement(1006) into Block(1133) at 3", "Insert ExpressionStatement(1012) into Block(1133) at 4", "Insert ExpressionStatement(1016) into Block(1133) at 5", "Insert ExpressionStatement(1025) into Block(1133) at 6", "Insert ExpressionStatement(1031) into Block(1133) at 7", "Insert ExpressionStatement(1035) into Block(1133) at 8", "Insert ExpressionStatement(1044) into Block(1133) at 9", "Insert ExpressionStatement(1050) into Block(1133) at 10", "Insert ExpressionStatement(1054) into Block(1133) at 11", "Insert ExpressionStatement(1063) into Block(1133) at 12", "Insert ExpressionStatement(1069) into Block(1133) at 13", "Insert ExpressionStatement(1077) into Block(1133) at 14", "Insert ExpressionStatement(1085) into Block(1133) at 15", "Insert ExpressionStatement(1091) into Block(1133) at 16", "Insert ExpressionStatement(1095) into Block(1133) at 17", "Insert ExpressionStatement(1104) into Block(1133) at 18", "Insert ExpressionStatement(1110) into Block(1133) at 19", "Insert ExpressionStatement(1118) into Block(1133) at 20", "Insert ExpressionStatement(1126) into Block(1133) at 21", "Insert ExpressionStatement(1132) into Block(1133) at 22", "Insert ExpressionStatement(1137) into Block(1138) at 0", "Insert SimpleName: PropertiesUtil(948) into MethodInvocation(951) at 0", "Insert SimpleName: deepCopy(949) into MethodInvocation(951) at 1", "Insert SimpleName: TEST_PROPERTIES(950) into MethodInvocation(951) at 2", "Insert SimpleName: Long(957) into MethodInvocation(962) at 0", "Insert SimpleName: toString(958) into MethodInvocation(962) at 1", "Insert InfixExpression: +(961) into MethodInvocation(962) at 2", "Insert SimpleName: DriverManager(968) into MethodInvocation(973) at 0", "Insert SimpleName: getConnection(969) into MethodInvocation(973) at 1", "Insert MethodInvocation(971) into MethodInvocation(973) at 2", "Insert SimpleName: props(972) into MethodInvocation(973) at 3", "Insert SimpleType: PreparedStatement(977) into VariableDeclarationStatement(984) at 0", "Insert VariableDeclarationFragment(983) into VariableDeclarationStatement(984) at 1", "Insert SimpleType: ResultSet(986) into VariableDeclarationStatement(992) at 0", "Insert VariableDeclarationFragment(991) into VariableDeclarationStatement(992) at 1", "Insert MethodInvocation(997) into ExpressionStatement(998) at 0", "Insert MethodInvocation(1005) into ExpressionStatement(1006) at 0", "Insert MethodInvocation(1011) into ExpressionStatement(1012) at 0", "Insert Assignment: =(1015) into ExpressionStatement(1016) at 0", "Insert Assignment: =(1024) into ExpressionStatement(1025) at 0", "Insert MethodInvocation(1030) into ExpressionStatement(1031) at 0", "Insert Assignment: =(1034) into ExpressionStatement(1035) at 0", "Insert Assignment: =(1043) into ExpressionStatement(1044) at 0", "Insert MethodInvocation(1049) into ExpressionStatement(1050) at 0", "Insert Assignment: =(1053) into ExpressionStatement(1054) at 0", "Insert Assignment: =(1062) into ExpressionStatement(1063) at 0", "Insert MethodInvocation(1068) into ExpressionStatement(1069) at 0", "Insert MethodInvocation(1076) into ExpressionStatement(1077) at 0", "Insert MethodInvocation(1084) into ExpressionStatement(1085) at 0", "Insert MethodInvocation(1090) into ExpressionStatement(1091) at 0", "Insert Assignment: =(1094) into ExpressionStatement(1095) at 0", "Insert Assignment: =(1103) into ExpressionStatement(1104) at 0", "Insert MethodInvocation(1109) into ExpressionStatement(1110) at 0", "Insert MethodInvocation(1117) into ExpressionStatement(1118) at 0", "Insert MethodInvocation(1125) into ExpressionStatement(1126) at 0", "Insert MethodInvocation(1131) into ExpressionStatement(1132) at 0", "Insert MethodInvocation(1136) into ExpressionStatement(1137) at 0", "Insert SimpleName: ts(959) into InfixExpression: +(961) at 0", "Insert NumberLiteral: 2(960) into InfixExpression: +(961) at 1", "Insert SimpleName: getUrl(970) into MethodInvocation(971) at 0", "Insert SimpleName: PreparedStatement(976) into SimpleType: PreparedStatement(977) at 0", "Insert SimpleName: statement(978) into VariableDeclarationFragment(983) at 0", "Insert MethodInvocation(982) into VariableDeclarationFragment(983) at 1", "Insert SimpleName: ResultSet(985) into SimpleType: ResultSet(986) at 0", "Insert SimpleName: rs(987) into VariableDeclarationFragment(991) at 0", "Insert MethodInvocation(990) into VariableDeclarationFragment(991) at 1", "Insert SimpleName: assertTrue(993) into MethodInvocation(997) at 0", "Insert MethodInvocation(996) into MethodInvocation(997) at 1", "Insert SimpleName: assertEquals(999) into MethodInvocation(1005) at 0", "Insert NumberLiteral: 0(1000) into MethodInvocation(1005) at 1", "Insert MethodInvocation(1004) into MethodInvocation(1005) at 2", "Insert SimpleName: assertFalse(1007) into MethodInvocation(1011) at 0", "Insert MethodInvocation(1010) into MethodInvocation(1011) at 1", "Insert SimpleName: query(1013) into Assignment: =(1015) at 0", "Insert StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id' having count(*)>0\"(1014) into Assignment: =(1015) at 1", "Insert SimpleName: rs(1017) into Assignment: =(1024) at 0", "Insert MethodInvocation(1023) into Assignment: =(1024) at 1", "Insert SimpleName: assertFalse(1026) into MethodInvocation(1030) at 0", "Insert MethodInvocation(1029) into MethodInvocation(1030) at 1", "Insert SimpleName: query(1032) into Assignment: =(1034) at 0", "Insert StringLiteral: \"SELECT count(1) FROM aTable WHERE organization_id = 'not_existing_organization_id' limit 1 offset 1\"(1033) into Assignment: =(1034) at 1", "Insert SimpleName: rs(1036) into Assignment: =(1043) at 0", "Insert MethodInvocation(1042) into Assignment: =(1043) at 1", "Insert SimpleName: assertFalse(1045) into MethodInvocation(1049) at 0", "Insert MethodInvocation(1048) into MethodInvocation(1049) at 1", "Insert SimpleName: query(1051) into Assignment: =(1053) at 0", "Insert StringLiteral: \"SELECT count(1),123 FROM aTable WHERE organization_id = 'not_existing_organization_id'\"(1052) into Assignment: =(1053) at 1", "Insert SimpleName: rs(1055) into Assignment: =(1062) at 0", "Insert MethodInvocation(1061) into Assignment: =(1062) at 1", "Insert SimpleName: assertTrue(1064) into MethodInvocation(1068) at 0", "Insert MethodInvocation(1067) into MethodInvocation(1068) at 1", "Insert SimpleName: assertEquals(1070) into MethodInvocation(1076) at 0", "Insert NumberLiteral: 0(1071) into MethodInvocation(1076) at 1", "Insert MethodInvocation(1075) into MethodInvocation(1076) at 2", "Insert SimpleName: assertEquals(1078) into MethodInvocation(1084) at 0", "Insert StringLiteral: \"123\"(1079) into MethodInvocation(1084) at 1", "Insert MethodInvocation(1083) into MethodInvocation(1084) at 2", "Insert SimpleName: assertFalse(1086) into MethodInvocation(1090) at 0", "Insert MethodInvocation(1089) into MethodInvocation(1090) at 1", "Insert SimpleName: query(1092) into Assignment: =(1094) at 0", "Insert StringLiteral: \"SELECT count(1),sum(x_decimal) FROM aTable WHERE organization_id = 'not_existing_organization_id'\"(1093) into Assignment: =(1094) at 1", "Insert SimpleName: rs(1096) into Assignment: =(1103) at 0", "Insert MethodInvocation(1102) into Assignment: =(1103) at 1", "Insert SimpleName: assertTrue(1105) into MethodInvocation(1109) at 0", "Insert MethodInvocation(1108) into MethodInvocation(1109) at 1", "Insert SimpleName: assertEquals(1111) into MethodInvocation(1117) at 0", "Insert NumberLiteral: 0(1112) into MethodInvocation(1117) at 1", "Insert MethodInvocation(1116) into MethodInvocation(1117) at 2", "Insert SimpleName: assertEquals(1119) into MethodInvocation(1125) at 0", "Insert NullLiteral(1120) into MethodInvocation(1125) at 1", "Insert MethodInvocation(1124) into MethodInvocation(1125) at 2", "Insert SimpleName: assertFalse(1127) into MethodInvocation(1131) at 0", "Insert MethodInvocation(1130) into MethodInvocation(1131) at 1", "Insert SimpleName: conn(1134) into MethodInvocation(1136) at 0", "Insert SimpleName: close(1135) into MethodInvocation(1136) at 1", "Insert SimpleName: conn(979) into MethodInvocation(982) at 0", "Insert SimpleName: prepareStatement(980) into MethodInvocation(982) at 1", "Insert SimpleName: query(981) into MethodInvocation(982) at 2", "Insert SimpleName: statement(988) into MethodInvocation(990) at 0", "Insert SimpleName: executeQuery(989) into MethodInvocation(990) at 1", "Insert SimpleName: rs(994) into MethodInvocation(996) at 0", "Insert SimpleName: next(995) into MethodInvocation(996) at 1", "Insert SimpleName: rs(1001) into MethodInvocation(1004) at 0", "Insert SimpleName: getLong(1002) into MethodInvocation(1004) at 1", "Insert NumberLiteral: 1(1003) into MethodInvocation(1004) at 2", "Insert SimpleName: rs(1008) into MethodInvocation(1010) at 0", "Insert SimpleName: next(1009) into MethodInvocation(1010) at 1", "Insert MethodInvocation(1021) into MethodInvocation(1023) at 0", "Insert SimpleName: executeQuery(1022) into MethodInvocation(1023) at 1", "Insert SimpleName: rs(1027) into MethodInvocation(1029) at 0", "Insert SimpleName: next(1028) into MethodInvocation(1029) at 1", "Insert MethodInvocation(1040) into MethodInvocation(1042) at 0", "Insert SimpleName: executeQuery(1041) into MethodInvocation(1042) at 1", "Insert SimpleName: rs(1046) into MethodInvocation(1048) at 0", "Insert SimpleName: next(1047) into MethodInvocation(1048) at 1", "Insert MethodInvocation(1059) into MethodInvocation(1061) at 0", "Insert SimpleName: executeQuery(1060) into MethodInvocation(1061) at 1", "Insert SimpleName: rs(1065) into MethodInvocation(1067) at 0", "Insert SimpleName: next(1066) into MethodInvocation(1067) at 1", "Insert SimpleName: rs(1072) into MethodInvocation(1075) at 0", "Insert SimpleName: getLong(1073) into MethodInvocation(1075) at 1", "Insert NumberLiteral: 1(1074) into MethodInvocation(1075) at 2", "Insert SimpleName: rs(1080) into MethodInvocation(1083) at 0", "Insert SimpleName: getString(1081) into MethodInvocation(1083) at 1", "Insert NumberLiteral: 2(1082) into MethodInvocation(1083) at 2", "Insert SimpleName: rs(1087) into MethodInvocation(1089) at 0", "Insert SimpleName: next(1088) into MethodInvocation(1089) at 1", "Insert MethodInvocation(1100) into MethodInvocation(1102) at 0", "Insert SimpleName: executeQuery(1101) into MethodInvocation(1102) at 1", "Insert SimpleName: rs(1106) into MethodInvocation(1108) at 0", "Insert SimpleName: next(1107) into MethodInvocation(1108) at 1", "Insert SimpleName: rs(1113) into MethodInvocation(1116) at 0", "Insert SimpleName: getLong(1114) into MethodInvocation(1116) at 1", "Insert NumberLiteral: 1(1115) into MethodInvocation(1116) at 2", "Insert SimpleName: rs(1121) into MethodInvocation(1124) at 0", "Insert SimpleName: getBigDecimal(1122) into MethodInvocation(1124) at 1", "Insert NumberLiteral: 2(1123) into MethodInvocation(1124) at 2", "Insert SimpleName: rs(1128) into MethodInvocation(1130) at 0", "Insert SimpleName: next(1129) into MethodInvocation(1130) at 1", "Insert SimpleName: conn(1018) into MethodInvocation(1021) at 0", "Insert SimpleName: prepareStatement(1019) into MethodInvocation(1021) at 1", "Insert SimpleName: query(1020) into MethodInvocation(1021) at 2", "Insert SimpleName: conn(1037) into MethodInvocation(1040) at 0", "Insert SimpleName: prepareStatement(1038) into MethodInvocation(1040) at 1", "Insert SimpleName: query(1039) into MethodInvocation(1040) at 2", "Insert SimpleName: conn(1056) into MethodInvocation(1059) at 0", "Insert SimpleName: prepareStatement(1057) into MethodInvocation(1059) at 1", "Insert SimpleName: query(1058) into MethodInvocation(1059) at 2", "Insert SimpleName: conn(1097) into MethodInvocation(1100) at 0", "Insert SimpleName: prepareStatement(1098) into MethodInvocation(1100) at 1", "Insert SimpleName: query(1099) into MethodInvocation(1100) at 2"]}}, {"BaseQueryPlan_cluster": {"actions": [{"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getStatement to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: isAggregate to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: == to InfixExpression: && at 0"]}]}}, {"BaseQueryPlan_diff": {"operations": ["Insert InfixExpression: &&(619) into IfStatement(623) at 0", "Move InfixExpression: ==(613) into InfixExpression: &&(619) at 0", "Insert PrefixExpression: !(618) into InfixExpression: &&(619) at 1", "Insert MethodInvocation(617) into PrefixExpression: !(618) at 0", "Insert MethodInvocation(615) into MethodInvocation(617) at 0", "Insert SimpleName: isAggregate(616) into MethodInvocation(617) at 1", "Insert SimpleName: getStatement(614) into MethodInvocation(615) at 0"]}}, {"MergeSortResultIterator_cluster": {"actions": [{"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: max to MethodInvocation at 1", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: Math to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}]}}, {"MergeSortResultIterator_diff": {"operations": ["Insert MethodInvocation(218) into ClassInstanceCreation(219) at 1", "Insert SimpleName: Math(212) into MethodInvocation(218) at 0", "Insert SimpleName: max(213) into MethodInvocation(218) at 1", "Insert NumberLiteral: 1(214) into MethodInvocation(218) at 2", "Move MethodInvocation(214) into MethodInvocation(218) at 3"]}}, {"ViewIndexIT_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 13"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: isNamespaceMapped to PrefixExpression: ! at 0", "INS VariableDeclarationStatement to Block at 15", "INS PrefixExpression: ! to MethodInvocation at 2", "INS SimpleName: seqSchemaName to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from ResultSet to String", "operations": ["UPD SimpleType: ResultSet from ResultSet to String", "UPD SimpleName: ResultSet from ResultSet to String"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from isNamespaceMapped to sequenceName", "operations": ["UPD SimpleName: isNamespaceMapped from isNamespaceMapped to sequenceName", "UPD SimpleName: query from query to sequenceName"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: getViewIndexSequenceName to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to MethodInvocation at 2", "INS SimpleName: isNamespaceMapped to MethodInvocation at 3"]}, {"root": "UPDATE from rs to seqName", "operations": ["UPD SimpleName: rs from rs to seqName", "UPD SimpleName: rs from rs to seqName"]}, {"root": "UPDATE from assertFalse to verifySequence", "operations": ["UPD SimpleName: assertFalse from assertFalse to verifySequence", "UPD SimpleName: getViewIndexSequenceName from getViewIndexSequenceName to verifySequence"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1", "MOV SimpleName: getViewIndexSequenceName to MethodInvocation at 0", "MOV NullLiteral to MethodInvocation at 1", "MOV SimpleName: isNamespaceMapped to MethodInvocation at 2"]}, {"root": "UPDATE from rs to sequenceSchemaName", "operations": ["UPD SimpleName: rs from rs to sequenceSchemaName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rs to MethodInvocation at 3"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 4", "operations": ["INS BooleanLiteral: true to MethodInvocation at 4"]}, {"root": "INS NullLiteral to MethodInvocation at 1", "operations": ["INS NullLiteral to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rs to MethodInvocation at 2", "MOV SimpleName: next to MethodInvocation at 3"]}, {"root": "UPDATE from next to seqSchemaName", "operations": ["UPD SimpleName: next from next to seqSchemaName"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 4", "operations": ["INS BooleanLiteral: false to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1", "MOV SimpleName: getViewIndexSequenceSchemaName to MethodInvocation at 0"]}, {"root": "UPDATE from query to getViewIndexSequenceName", "operations": ["UPD SimpleName: query from query to getViewIndexSequenceName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: query to MethodInvocation at 0"]}, {"root": "INS NullLiteral to MethodInvocation at 2", "operations": ["INS NullLiteral to MethodInvocation at 2"]}, {"root": "INS PrefixExpression: ! to MethodInvocation at 3", "operations": ["INS PrefixExpression: ! to MethodInvocation at 3", "INS SimpleName: isNamespaceMapped to PrefixExpression: ! at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.jdbc.PhoenixDatabaseMetaData"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.util.MetaDataUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.junit.Ignore", "DEL ImportDeclaration"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL StringLiteral: \"SELECT sequence_schema, sequence_name, current_value, increment_by FROM SYSTEM.\\\"SEQUENCE\\\" WHERE sequence_schema like '%\"", "DEL StringLiteral: \"%'\"", "DEL InfixExpression: +", "DEL SimpleName: schemaName"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: prepareStatement", "DEL MethodInvocation", "DEL SimpleName: conn1"]}, {"root": "DEL SimpleName: executeQuery", "operations": ["DEL SimpleName: executeQuery"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: rs", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: assertTrue", "DEL SimpleName: next", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: isNamespaceMapped", "DEL SimpleName: rs", "DEL MethodInvocation", "DEL SimpleName: MetaDataUtil", "DEL SimpleName: assertEquals", "DEL SimpleName: getString", "DEL MethodInvocation", "DEL StringLiteral: \"sequence_schema\""]}, {"root": "DEL SimpleName: assertEquals", "operations": ["DEL SimpleName: assertEquals"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: MetaDataUtil"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"sequence_name\"", "DEL SimpleName: getString", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getInt", "DEL MethodInvocation", "DEL SimpleName: assertEquals", "DEL NumberLiteral: 32767", "DEL StringLiteral: \"current_value\"", "DEL SimpleName: rs", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: getInt", "DEL StringLiteral: \"increment_by\"", "DEL SimpleName: assertEquals", "DEL NumberLiteral: 1", "DEL SimpleName: rs", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: getViewIndexSequenceName", "DEL SimpleName: isNamespaceMapped", "DEL StringLiteral: \"a\"", "DEL SimpleName: sequenceName", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: PNameFactory", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: newName"]}]}}, {"ViewIndexIT_diff": {"operations": ["Move VariableDeclarationStatement(615) into Block(575) at 13", "Insert VariableDeclarationStatement(500) into Block(575) at 15", "Update SimpleType: ResultSet(465) to String", "Move SimpleType: String(589) into VariableDeclarationStatement(500) at 0", "Insert VariableDeclarationFragment(499) into VariableDeclarationStatement(500) at 1", "Update SimpleName: query(457) to sequenceName", "Insert MethodInvocation(459) into VariableDeclarationFragment(460) at 1", "Update SimpleName: ResultSet(464) to String", "Update SimpleName: rs(466) to seqName", "Insert SimpleName: seqSchemaName(490) into VariableDeclarationFragment(499) at 0", "Insert MethodInvocation(498) into VariableDeclarationFragment(499) at 1", "Update SimpleName: getViewIndexSequenceName(498) to verifySequence", "Move SimpleName: getViewIndexSequenceName(498) into MethodInvocation(506) at 0", "Move NullLiteral(503) into MethodInvocation(506) at 1", "Update SimpleName: isNamespaceMapped(504) to sequenceName", "Move SimpleName: isNamespaceMapped(504) into MethodInvocation(506) at 2", "Update SimpleName: rs(506) to sequenceSchemaName", "Move SimpleName: rs(506) into MethodInvocation(506) at 3", "Insert BooleanLiteral: true(505) into MethodInvocation(506) at 4", "Update SimpleName: assertFalse(529) to verifySequence", "Insert NullLiteral(509) into MethodInvocation(513) at 1", "Update SimpleName: rs(530) to seqName", "Move SimpleName: rs(530) into MethodInvocation(513) at 2", "Update SimpleName: next(531) to seqSchemaName", "Move SimpleName: next(531) into MethodInvocation(513) at 3", "Insert BooleanLiteral: false(512) into MethodInvocation(513) at 4", "Insert SimpleName: getViewIndexSequenceName(452) into MethodInvocation(459) at 0", "Move MethodInvocation(487) into MethodInvocation(459) at 1", "Insert NullLiteral(457) into MethodInvocation(459) at 2", "Insert SimpleName: isNamespaceMapped(458) into MethodInvocation(459) at 3", "Update SimpleName: query(469) to getViewIndexSequenceName", "Move SimpleName: query(469) into MethodInvocation(485) at 0", "Move MethodInvocation(502) into MethodInvocation(485) at 1", "Insert NullLiteral(482) into MethodInvocation(485) at 2", "Insert PrefixExpression: !(484) into MethodInvocation(485) at 3", "Move SimpleName: getViewIndexSequenceSchemaName(483) into MethodInvocation(498) at 0", "Move MethodInvocation(595) into MethodInvocation(498) at 1", "Insert PrefixExpression: !(497) into MethodInvocation(498) at 2", "Insert SimpleName: isNamespaceMapped(483) into PrefixExpression: !(484) at 0", "Insert SimpleName: isNamespaceMapped(496) into PrefixExpression: !(497) at 0", "Delete QualifiedName: org.apache.phoenix.jdbc.PhoenixDatabaseMetaData(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.phoenix.util.MetaDataUtil(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.junit.Ignore(62)", "Delete ImportDeclaration(63)", "Delete StringLiteral: \"SELECT sequence_schema, sequence_name, current_value, increment_by FROM SYSTEM.\\\"SEQUENCE\\\" WHERE sequence_schema like '%\"(458)", "Delete SimpleName: schemaName(459)", "Delete StringLiteral: \"%'\"(460)", "Delete InfixExpression: +(461)", "Delete SimpleName: conn1(467)", "Delete SimpleName: prepareStatement(468)", "Delete MethodInvocation(470)", "Delete SimpleName: executeQuery(471)", "Delete SimpleName: assertTrue(475)", "Delete SimpleName: rs(476)", "Delete SimpleName: next(477)", "Delete MethodInvocation(478)", "Delete MethodInvocation(479)", "Delete ExpressionStatement(480)", "Delete SimpleName: assertEquals(481)", "Delete SimpleName: MetaDataUtil(482)", "Delete SimpleName: isNamespaceMapped(488)", "Delete MethodInvocation(489)", "Delete SimpleName: rs(490)", "Delete SimpleName: getString(491)", "Delete StringLiteral: \"sequence_schema\"(492)", "Delete MethodInvocation(493)", "Delete MethodInvocation(494)", "Delete ExpressionStatement(495)", "Delete SimpleName: assertEquals(496)", "Delete SimpleName: MetaDataUtil(497)", "Delete MethodInvocation(505)", "Delete SimpleName: getString(507)", "Delete StringLiteral: \"sequence_name\"(508)", "Delete MethodInvocation(509)", "Delete SimpleName: assertEquals(512)", "Delete NumberLiteral: 32767(513)", "Delete PrefixExpression: -(514)", "Delete SimpleName: rs(515)", "Delete SimpleName: getInt(516)", "Delete StringLiteral: \"current_value\"(517)", "Delete MethodInvocation(518)", "Delete MethodInvocation(519)", "Delete ExpressionStatement(520)", "Delete SimpleName: assertEquals(521)", "Delete NumberLiteral: 1(522)", "Delete SimpleName: rs(523)", "Delete SimpleName: getInt(524)", "Delete StringLiteral: \"increment_by\"(525)", "Delete MethodInvocation(526)", "Delete MethodInvocation(527)", "Delete ExpressionStatement(528)", "Delete MethodInvocation(532)", "Delete SimpleName: sequenceName(590)", "Delete SimpleName: getViewIndexSequenceName(591)", "Delete SimpleName: PNameFactory(596)", "Delete SimpleName: newName(597)", "Delete StringLiteral: \"a\"(598)", "Delete MethodInvocation(599)", "Delete SimpleName: isNamespaceMapped(600)", "Delete MethodInvocation(601)", "Delete VariableDeclarationFragment(602)", "Delete VariableDeclarationStatement(603)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}