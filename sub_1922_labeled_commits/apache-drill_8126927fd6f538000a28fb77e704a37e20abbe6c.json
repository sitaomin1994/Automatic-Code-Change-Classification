{"application": "apache-drill", "csha": "8126927fd6f538000a28fb77e704a37e20abbe6c", "files": [{"DrillClient_cluster": {"actions": [{"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleType: IOException from IOException to Exception", "UPD SimpleName: IOException from IOException to Exception"]}]}}, {"DrillClient_diff": {"operations": ["Update SimpleType: IOException(1044) to Exception", "Update SimpleName: IOException(1043) to Exception"]}}, {"CodeCompiler_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.server.DrillbitContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.server.options.SystemOptionManager", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.local.LocalPStoreProvider", "DEL ImportDeclaration"]}]}}, {"CodeCompiler_diff": {"operations": ["Delete QualifiedName: org.apache.drill.exec.server.DrillbitContext(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.drill.exec.server.options.SystemOptionManager(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.drill.exec.store.sys.local.LocalPStoreProvider(37)", "Delete ImportDeclaration(38)"]}}, {"ClusterCoordinator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.drill.exec.coord.store.TransientStore to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig to ImportDeclaration at 0"]}, {"root": "UPDATE from Closeable to AutoCloseable", "operations": ["UPD SimpleName: Closeable from Closeable to AutoCloseable", "UPD SimpleType: Closeable from Closeable to AutoCloseable"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleType: V to ParameterizedType: TransientStore<V> at 1", "INS TextElement:  store to TagElement: @link at 1", "INS TypeParameter to MethodDeclaration at 3", "INS TextElement:  instance with the given  to TagElement at 2", "INS TextElement: . to TagElement at 4", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: V to TypeParameter at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: TransientStore to TagElement: @link at 0", "INS SimpleType: TransientStoreConfig to ParameterizedType: TransientStoreConfig<V> at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 1", "INS TextElement: < to TagElement: @param at 0", "INS SimpleName: TransientStore to SimpleType: TransientStore at 0", "INS TextElement:  configuration to TagElement: @link at 1", "INS SimpleName: getOrCreateTransientStore to MethodDeclaration at 5", "INS SimpleName: TransientStoreConfig to SimpleType: TransientStoreConfig at 0", "INS ParameterizedType: TransientStore<V> to MethodDeclaration at 4", "INS SimpleName: config to TagElement: @param at 0", "INS SimpleName: V to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS TextElement: Returns a  to TagElement at 0", "INS TagElement: @link to TagElement at 3", "INS TextElement: Note that implementor might cache the instance so new instance creation is not guaranteed. to TagElement at 5", "INS TextElement:   store configuration to TagElement: @param at 1", "INS Modifier: abstract to MethodDeclaration at 2", "INS TextElement: > to TagElement: @param at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: TransientStoreConfig to TagElement: @link at 0", "INS TextElement:   value type for this store to TagElement: @param at 3", "INS SimpleType: V to ParameterizedType: TransientStoreConfig<V> at 1", "INS SimpleName: V to SimpleType: V at 0", "INS ParameterizedType: TransientStoreConfig<V> to SingleVariableDeclaration at 0", "INS SimpleType: TransientStore to ParameterizedType: TransientStore<V> at 0", "INS TagElement: @param to Javadoc at 2", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected", "UPD Modifier: public from public to protected"]}]}}, {"ClusterCoordinator_diff": {"operations": ["Insert ImportDeclaration(26) into CompilationUnit(277) at 5", "Insert ImportDeclaration(28) into CompilationUnit(277) at 6", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStore(25) into ImportDeclaration(26) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig(27) into ImportDeclaration(28) at 0", "Update SimpleType: Closeable(37) to AutoCloseable", "Insert MethodDeclaration(178) into TypeDeclaration: class(276) at 13", "Update SimpleName: Closeable(36) to AutoCloseable", "Insert Javadoc(160) into MethodDeclaration(178) at 0", "Insert Modifier: public(161) into MethodDeclaration(178) at 1", "Insert Modifier: abstract(162) into MethodDeclaration(178) at 2", "Insert TypeParameter(164) into MethodDeclaration(178) at 3", "Insert ParameterizedType: TransientStore<V>(169) into MethodDeclaration(178) at 4", "Insert SimpleName: getOrCreateTransientStore(170) into MethodDeclaration(178) at 5", "Insert SingleVariableDeclaration(177) into MethodDeclaration(178) at 6", "Update Modifier: public(142) to protected", "Update Modifier: public(168) to protected", "Insert TagElement(151) into Javadoc(160) at 0", "Insert TagElement: @param(154) into Javadoc(160) at 1", "Insert TagElement: @param(159) into Javadoc(160) at 2", "Insert SimpleName: V(163) into TypeParameter(164) at 0", "Insert SimpleType: TransientStore(166) into ParameterizedType: TransientStore<V>(169) at 0", "Insert SimpleType: V(168) into ParameterizedType: TransientStore<V>(169) at 1", "Insert ParameterizedType: TransientStoreConfig<V>(175) into SingleVariableDeclaration(177) at 0", "Insert SimpleName: config(176) into SingleVariableDeclaration(177) at 1", "Insert TextElement: Returns a (141) into TagElement(151) at 0", "Insert TagElement: @link(144) into TagElement(151) at 1", "Insert TextElement:  instance with the given (145) into TagElement(151) at 2", "Insert TagElement: @link(148) into TagElement(151) at 3", "Insert TextElement: .(149) into TagElement(151) at 4", "Insert TextElement: Note that implementor might cache the instance so new instance creation is not guaranteed.(150) into TagElement(151) at 5", "Insert SimpleName: config(152) into TagElement: @param(154) at 0", "Insert TextElement:   store configuration(153) into TagElement: @param(154) at 1", "Insert TextElement: <(155) into TagElement: @param(159) at 0", "Insert SimpleName: V(156) into TagElement: @param(159) at 1", "Insert TextElement: >(157) into TagElement: @param(159) at 2", "Insert TextElement:   value type for this store(158) into TagElement: @param(159) at 3", "Insert SimpleName: TransientStore(165) into SimpleType: TransientStore(166) at 0", "Insert SimpleName: V(167) into SimpleType: V(168) at 0", "Insert SimpleType: TransientStoreConfig(172) into ParameterizedType: TransientStoreConfig<V>(175) at 0", "Insert SimpleType: V(174) into ParameterizedType: TransientStoreConfig<V>(175) at 1", "Insert SimpleName: TransientStore(142) into TagElement: @link(144) at 0", "Insert TextElement:  store(143) into TagElement: @link(144) at 1", "Insert SimpleName: TransientStoreConfig(146) into TagElement: @link(148) at 0", "Insert TextElement:  configuration(147) into TagElement: @link(148) at 1", "Insert SimpleName: TransientStoreConfig(171) into SimpleType: TransientStoreConfig(172) at 0", "Insert SimpleName: V(173) into SimpleType: V(174) at 0"]}}, {"Drillbit_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.CachingStoreProvider to org.apache.drill.exec.store.sys.store.provider.CachingPersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.CachingStoreProvider from org.apache.drill.exec.store.sys.CachingStoreProvider to org.apache.drill.exec.store.sys.store.provider.CachingPersistentStoreProvider"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreRegistry to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry from org.apache.drill.exec.store.sys.PStoreRegistry to org.apache.drill.exec.store.sys.PersistentStoreRegistry"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.local.LocalPStoreProvider to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.local.LocalPStoreProvider from org.apache.drill.exec.store.sys.local.LocalPStoreProvider to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from CachingStoreProvider to CachingPersistentStoreProvider", "operations": ["UPD SimpleType: CachingStoreProvider from CachingStoreProvider to CachingPersistentStoreProvider", "UPD SimpleName: CachingStoreProvider from CachingStoreProvider to CachingPersistentStoreProvider"]}, {"root": "UPDATE from LocalPStoreProvider to LocalPersistentStoreProvider", "operations": ["UPD SimpleName: LocalPStoreProvider from LocalPStoreProvider to LocalPersistentStoreProvider", "UPD SimpleType: LocalPStoreProvider from LocalPStoreProvider to LocalPersistentStoreProvider"]}, {"root": "UPDATE from PStoreRegistry to PersistentStoreRegistry", "operations": ["UPD SimpleName: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry", "UPD SimpleType: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry"]}]}}, {"Drillbit_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.CachingStoreProvider(55) to org.apache.drill.exec.store.sys.store.provider.CachingPersistentStoreProvider", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(57) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry(59) to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "Update QualifiedName: org.apache.drill.exec.store.sys.local.LocalPStoreProvider(61) to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider", "Update SimpleType: PStoreProvider(133) to PersistentStoreProvider", "Update SimpleName: PStoreProvider(132) to PersistentStoreProvider", "Update SimpleType: CachingStoreProvider(294) to CachingPersistentStoreProvider", "Update SimpleName: CachingStoreProvider(293) to CachingPersistentStoreProvider", "Update SimpleType: LocalPStoreProvider(296) to LocalPersistentStoreProvider", "Update SimpleType: PStoreRegistry(312) to PersistentStoreRegistry", "Update SimpleName: LocalPStoreProvider(295) to LocalPersistentStoreProvider", "Update SimpleName: PStoreRegistry(311) to PersistentStoreRegistry"]}}, {"DrillbitContext_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "INS SimpleType: AutoCloseable to TypeDeclaration: class at 2", "operations": ["INS SimpleType: AutoCloseable to TypeDeclaration: class at 2", "INS SimpleName: AutoCloseable to SimpleType: AutoCloseable at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: getOptionManager to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: close to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from getPersistentStoreProvider to getStoreProvider", "operations": ["UPD SimpleName: getPersistentStoreProvider from getPersistentStoreProvider to getStoreProvider"]}]}}, {"DrillbitContext_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(57) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Insert SimpleType: AutoCloseable(64) into TypeDeclaration: class(551) at 2", "Insert MethodDeclaration(550) into TypeDeclaration: class(551) at 40", "Insert SimpleName: AutoCloseable(63) into SimpleType: AutoCloseable(64) at 0", "Update SimpleType: PStoreProvider(143) to PersistentStoreProvider", "Update SimpleType: PStoreProvider(477) to PersistentStoreProvider", "Update SimpleName: getPersistentStoreProvider(478) to getStoreProvider", "Insert MarkerAnnotation(538) into MethodDeclaration(550) at 0", "Insert Modifier: public(539) into MethodDeclaration(550) at 1", "Insert PrimitiveType: void(540) into MethodDeclaration(550) at 2", "Insert SimpleName: close(541) into MethodDeclaration(550) at 3", "Insert SimpleType: Exception(543) into MethodDeclaration(550) at 4", "Insert Block(549) into MethodDeclaration(550) at 5", "Update SimpleName: PStoreProvider(142) to PersistentStoreProvider", "Update SimpleType: PStoreProvider(195) to PersistentStoreProvider", "Update SimpleName: PStoreProvider(476) to PersistentStoreProvider", "Insert SimpleName: Override(537) into MarkerAnnotation(538) at 0", "Insert SimpleName: Exception(542) into SimpleType: Exception(543) at 0", "Insert ExpressionStatement(548) into Block(549) at 0", "Update SimpleName: PStoreProvider(194) to PersistentStoreProvider", "Insert MethodInvocation(547) into ExpressionStatement(548) at 0", "Insert MethodInvocation(545) into MethodInvocation(547) at 0", "Insert SimpleName: close(546) into MethodInvocation(547) at 1", "Insert SimpleName: getOptionManager(544) into MethodInvocation(545) at 0"]}}, {"RemoteServiceSet_cluster": {"actions": [{"root": "UPDATE from Closeable to AutoCloseable", "operations": ["UPD SimpleType: Closeable from Closeable to AutoCloseable", "UPD SimpleName: Closeable from Closeable to AutoCloseable"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleType: IOException from IOException to Exception", "UPD SimpleName: IOException from IOException to Exception"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.Closeable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}]}}, {"RemoteServiceSet_diff": {"operations": ["Update SimpleType: Closeable(32) to AutoCloseable", "Update SimpleName: Closeable(31) to AutoCloseable", "Update SimpleType: IOException(82) to Exception", "Update SimpleName: IOException(81) to Exception", "Delete QualifiedName: java.io.Closeable(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.io.IOException(19)", "Delete ImportDeclaration(20)"]}}, {"StoragePluginRegistry_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore"]}, {"root": "UPDATE from PStore<StoragePluginConfig> to PersistentStore<StoragePluginConfig>", "operations": ["UPD ParameterizedType: PStore<StoragePluginConfig> from PStore<StoragePluginConfig> to PersistentStore<StoragePluginConfig>"]}, {"root": "UPDATE from PStore to PersistentStore", "operations": ["UPD SimpleType: PStore from PStore to PersistentStore", "UPD SimpleName: PStore from PStore to PersistentStore"]}]}}, {"StoragePluginRegistry_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStore(33) to org.apache.drill.exec.store.sys.PersistentStore", "Update ParameterizedType: PStore<StoragePluginConfig>(227) to PersistentStore<StoragePluginConfig>", "Update SimpleType: PStore(224) to PersistentStore", "Update SimpleName: PStore(223) to PersistentStore"]}}, {"StoragePluginRegistryImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 28", "operations": ["INS QualifiedName: org.apache.drill.exec.exception.StoreException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 28"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig"]}, {"root": "UPDATE from PStore<StoragePluginConfig> to PersistentStore<StoragePluginConfig>", "operations": ["UPD ParameterizedType: PStore<StoragePluginConfig> from PStore<StoragePluginConfig> to PersistentStore<StoragePluginConfig>", "UPD ParameterizedType: PStore<StoragePluginConfig> from PStore<StoragePluginConfig> to PersistentStore<StoragePluginConfig>"]}, {"root": "UPDATE from PStore to PersistentStore", "operations": ["UPD SimpleName: PStore from PStore to PersistentStore", "UPD SimpleName: PStore from PStore to PersistentStore", "UPD SimpleType: PStore from PStore to PersistentStore", "UPD SimpleType: PStore from PStore to PersistentStore"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pluginSystemTable to MethodInvocation at 0", "INS SimpleName: close to MethodInvocation at 1"]}, {"root": "UPDATE from IOException|RuntimeException to StoreException|RuntimeException", "operations": ["UPD UnionType: IOException|RuntimeException from IOException|RuntimeException to StoreException|RuntimeException"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: getAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: pluginSystemTable to MethodInvocation at 0"]}, {"root": "UPDATE from IOException to StoreException", "operations": ["UPD SimpleName: IOException from IOException to StoreException", "UPD SimpleType: IOException from IOException to StoreException"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: pluginSystemTable to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getAll to MethodInvocation at 1", "INS SimpleName: Lists to MethodInvocation at 0"]}, {"root": "UPDATE from getStore to getOrCreateStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateStore"]}, {"root": "UPDATE from getPersistentStoreProvider to getStoreProvider", "operations": ["UPD SimpleName: getPersistentStoreProvider from getPersistentStoreProvider to getStoreProvider"]}, {"root": "UPDATE from iterator to getAll", "operations": ["UPD SimpleName: iterator from iterator to getAll"]}, {"root": "UPDATE from PStoreConfig to PersistentStoreConfig", "operations": ["UPD SimpleName: PStoreConfig from PStoreConfig to PersistentStoreConfig"]}, {"root": "DEL SimpleName: pluginSystemTable", "operations": ["DEL SimpleName: pluginSystemTable"]}, {"root": "DEL SimpleName: pluginSystemTable", "operations": ["DEL SimpleName: pluginSystemTable"]}]}}, {"StoragePluginRegistryImpl_diff": {"operations": ["Insert ImportDeclaration(72) into CompilationUnit(1972) at 28", "Insert QualifiedName: org.apache.drill.exec.exception.StoreException(71) into ImportDeclaration(72) at 0", "Update QualifiedName: org.apache.drill.exec.store.sys.PStore(87) to org.apache.drill.exec.store.sys.PersistentStore", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(89) to org.apache.drill.exec.store.sys.PersistentStoreConfig", "Update ParameterizedType: PStore<StoragePluginConfig>(191) to PersistentStore<StoragePluginConfig>", "Update ParameterizedType: PStore<StoragePluginConfig>(385) to PersistentStore<StoragePluginConfig>", "Update SimpleType: PStore(188) to PersistentStore", "Update SimpleType: PStore(382) to PersistentStore", "Insert ExpressionStatement(1745) into Block(1746) at 2", "Update SimpleName: PStore(187) to PersistentStore", "Update SimpleName: PStore(381) to PersistentStore", "Insert MethodInvocation(1744) into ExpressionStatement(1745) at 0", "Insert SimpleName: pluginSystemTable(1742) into MethodInvocation(1744) at 0", "Insert SimpleName: close(1743) into MethodInvocation(1744) at 1", "Update UnionType: IOException|RuntimeException(284) to StoreException|RuntimeException", "Insert MethodInvocation(599) into EnhancedForStatement(663) at 1", "Update SimpleType: IOException(281) to StoreException", "Insert SimpleName: Lists(594) into MethodInvocation(599) at 0", "Insert SimpleName: newArrayList(595) into MethodInvocation(599) at 1", "Insert MethodInvocation(598) into MethodInvocation(599) at 2", "Insert MethodInvocation(1535) into EnhancedForStatement(1557) at 1", "Update SimpleName: getStore(261) to getOrCreateStore", "Update SimpleName: IOException(280) to StoreException", "Insert SimpleName: pluginSystemTable(596) into MethodInvocation(598) at 0", "Insert SimpleName: getAll(597) into MethodInvocation(598) at 1", "Insert SimpleName: Lists(1530) into MethodInvocation(1535) at 0", "Insert SimpleName: newArrayList(1531) into MethodInvocation(1535) at 1", "Insert MethodInvocation(1534) into MethodInvocation(1535) at 2", "Update SimpleName: getPersistentStoreProvider(259) to getStoreProvider", "Update SimpleName: iterator(424) to getAll", "Insert SimpleName: pluginSystemTable(1532) into MethodInvocation(1534) at 0", "Insert SimpleName: getAll(1533) into MethodInvocation(1534) at 1", "Update SimpleName: PStoreConfig(262) to PersistentStoreConfig", "Delete SimpleName: pluginSystemTable(592)", "Delete SimpleName: pluginSystemTable(1523)"]}}, {"WorkManager_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getContext to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1"]}]}}, {"WorkManager_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(59) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Update SimpleType: PStoreProvider(280) to PersistentStoreProvider", "Insert ExpressionStatement(451) into Block(452) at 2", "Update SimpleName: PStoreProvider(279) to PersistentStoreProvider", "Insert MethodInvocation(450) into ExpressionStatement(451) at 0", "Insert MethodInvocation(448) into MethodInvocation(450) at 0", "Insert SimpleName: close(449) into MethodInvocation(450) at 1", "Insert SimpleName: getContext(447) into MethodInvocation(448) at 0"]}}, {"LocalClusterCoordinator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.drill.exec.coord.store.CachingTransientStoreFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStore to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleType: MapBackedStore to ParameterizedType: MapBackedStore<> at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: V to ParameterizedType: TransientStore<V> at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: TransientStoreConfig to ParameterizedType: TransientStoreConfig<V> at 0", "INS ParameterizedType: MapBackedStore<> to ClassInstanceCreation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: config to ClassInstanceCreation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: V to TypeParameter at 0", "INS SimpleType: V to ParameterizedType: TransientStoreConfig<V> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: TransientStore to ParameterizedType: TransientStore<V> at 0", "INS SimpleName: CachingTransientStoreFactory to MethodInvocation at 0", "INS SimpleType: TransientStoreFactory to FieldDeclaration at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: of to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: TransientStoreFactory to SimpleType: TransientStoreFactory at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: factory to VariableDeclarationFragment at 0", "INS SimpleName: TransientStoreConfig to SimpleType: TransientStoreConfig at 0", "INS SimpleName: V to SimpleType: V at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: TransientStoreFactory to ClassInstanceCreation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS ParameterizedType: TransientStoreConfig<V> to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: MapBackedStore to SimpleType: MapBackedStore at 0", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: getOrCreateStore to MethodDeclaration at 4", "INS ParameterizedType: TransientStore<V> to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: TransientStoreFactory to SimpleType: TransientStoreFactory at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: TransientStore to SimpleType: TransientStore at 0", "INS SimpleName: V to SimpleType: V at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: close to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleType: V to ParameterizedType: TransientStore<V> at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: TransientStoreConfig to ParameterizedType: TransientStoreConfig<V> at 0", "INS SimpleName: TransientStoreConfig to SimpleType: TransientStoreConfig at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleType: TransientStore to ParameterizedType: TransientStore<V> at 0", "INS SimpleName: V to TypeParameter at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getOrCreateStore to MethodInvocation at 1", "INS ParameterizedType: TransientStore<V> to MethodDeclaration at 3", "INS SimpleName: TransientStore to SimpleType: TransientStore at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: factory to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: V to ParameterizedType: TransientStoreConfig<V> at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: getOrCreateTransientStore to MethodDeclaration at 4", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: config to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: V to SimpleType: V at 0", "INS ParameterizedType: TransientStoreConfig<V> to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleType: IOException to MethodDeclaration at 4", "MOV SimpleName: close to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 5", "MOV PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: factory to MethodInvocation at 0", "INS SimpleName: close to MethodInvocation at 1"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleType: IOException from IOException to Exception", "UPD SimpleName: IOException from IOException to Exception"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration"]}]}}, {"LocalClusterCoordinator_diff": {"operations": ["Insert ImportDeclaration(38) into CompilationUnit(561) at 11", "Insert ImportDeclaration(40) into CompilationUnit(561) at 12", "Insert ImportDeclaration(42) into CompilationUnit(561) at 13", "Insert ImportDeclaration(44) into CompilationUnit(561) at 14", "Insert QualifiedName: org.apache.drill.exec.coord.store.CachingTransientStoreFactory(37) into ImportDeclaration(38) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStore(39) into ImportDeclaration(40) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig(41) into ImportDeclaration(42) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreFactory(43) into ImportDeclaration(44) at 0", "Insert FieldDeclaration(146) into TypeDeclaration: class(560) at 6", "Insert MethodDeclaration(163) into TypeDeclaration: class(560) at 7", "Insert MethodDeclaration(472) into TypeDeclaration: class(560) at 14", "Insert Modifier: private(98) into FieldDeclaration(146) at 0", "Insert Modifier: final(99) into FieldDeclaration(146) at 1", "Insert SimpleType: TransientStoreFactory(101) into FieldDeclaration(146) at 2", "Insert VariableDeclarationFragment(145) into FieldDeclaration(146) at 3", "Move MarkerAnnotation(91) into MethodDeclaration(163) at 0", "Insert Modifier: public(149) into MethodDeclaration(163) at 1", "Insert PrimitiveType: void(150) into MethodDeclaration(163) at 2", "Insert SimpleName: close(151) into MethodDeclaration(163) at 3", "Insert SimpleType: Exception(153) into MethodDeclaration(163) at 4", "Move Block(101) into MethodDeclaration(163) at 5", "Insert MarkerAnnotation(448) into MethodDeclaration(472) at 0", "Insert Modifier: public(449) into MethodDeclaration(472) at 1", "Insert TypeParameter(451) into MethodDeclaration(472) at 2", "Insert ParameterizedType: TransientStore<V>(456) into MethodDeclaration(472) at 3", "Insert SimpleName: getOrCreateTransientStore(457) into MethodDeclaration(472) at 4", "Insert SingleVariableDeclaration(465) into MethodDeclaration(472) at 5", "Insert Block(471) into MethodDeclaration(472) at 6", "Insert SimpleName: TransientStoreFactory(100) into SimpleType: TransientStoreFactory(101) at 0", "Insert SimpleName: factory(102) into VariableDeclarationFragment(145) at 0", "Insert MethodInvocation(144) into VariableDeclarationFragment(145) at 1", "Insert SimpleName: Exception(152) into SimpleType: Exception(153) at 0", "Insert ExpressionStatement(157) into Block(162) at 0", "Insert SimpleName: Override(447) into MarkerAnnotation(448) at 0", "Insert SimpleName: V(450) into TypeParameter(451) at 0", "Insert SimpleType: TransientStore(453) into ParameterizedType: TransientStore<V>(456) at 0", "Insert SimpleType: V(455) into ParameterizedType: TransientStore<V>(456) at 1", "Insert Modifier: final(458) into SingleVariableDeclaration(465) at 0", "Insert ParameterizedType: TransientStoreConfig<V>(463) into SingleVariableDeclaration(465) at 1", "Insert SimpleName: config(464) into SingleVariableDeclaration(465) at 2", "Insert ReturnStatement(470) into Block(471) at 0", "Insert SimpleName: CachingTransientStoreFactory(103) into MethodInvocation(144) at 0", "Insert SimpleName: of(104) into MethodInvocation(144) at 1", "Insert ClassInstanceCreation(143) into MethodInvocation(144) at 2", "Insert MethodInvocation(156) into ExpressionStatement(157) at 0", "Insert SimpleName: TransientStore(452) into SimpleType: TransientStore(453) at 0", "Insert SimpleName: V(454) into SimpleType: V(455) at 0", "Insert SimpleType: TransientStoreConfig(460) into ParameterizedType: TransientStoreConfig<V>(463) at 0", "Insert SimpleType: V(462) into ParameterizedType: TransientStoreConfig<V>(463) at 1", "Insert MethodInvocation(469) into ReturnStatement(470) at 0", "Insert SimpleType: TransientStoreFactory(106) into ClassInstanceCreation(143) at 0", "Insert AnonymousClassDeclaration(142) into ClassInstanceCreation(143) at 1", "Insert SimpleName: factory(154) into MethodInvocation(156) at 0", "Insert SimpleName: close(155) into MethodInvocation(156) at 1", "Insert SimpleName: TransientStoreConfig(459) into SimpleType: TransientStoreConfig(460) at 0", "Insert SimpleName: V(461) into SimpleType: V(462) at 0", "Insert SimpleName: factory(466) into MethodInvocation(469) at 0", "Insert SimpleName: getOrCreateStore(467) into MethodInvocation(469) at 1", "Insert SimpleName: config(468) into MethodInvocation(469) at 2", "Insert SimpleName: TransientStoreFactory(105) into SimpleType: TransientStoreFactory(106) at 0", "Insert MethodDeclaration(132) into AnonymousClassDeclaration(142) at 0", "Insert MethodDeclaration(141) into AnonymousClassDeclaration(142) at 1", "Insert MarkerAnnotation(108) into MethodDeclaration(132) at 0", "Insert Modifier: public(109) into MethodDeclaration(132) at 1", "Insert TypeParameter(111) into MethodDeclaration(132) at 2", "Insert ParameterizedType: TransientStore<V>(116) into MethodDeclaration(132) at 3", "Insert SimpleName: getOrCreateStore(117) into MethodDeclaration(132) at 4", "Insert SingleVariableDeclaration(124) into MethodDeclaration(132) at 5", "Insert Block(131) into MethodDeclaration(132) at 6", "Insert MarkerAnnotation(134) into MethodDeclaration(141) at 0", "Move Modifier: public(92) into MethodDeclaration(141) at 1", "Move PrimitiveType: void(93) into MethodDeclaration(141) at 2", "Move SimpleName: close(94) into MethodDeclaration(141) at 3", "Update SimpleType: IOException(96) to Exception", "Move SimpleType: IOException(96) into MethodDeclaration(141) at 4", "Insert Block(140) into MethodDeclaration(141) at 5", "Insert SimpleName: Override(107) into MarkerAnnotation(108) at 0", "Insert SimpleName: V(110) into TypeParameter(111) at 0", "Insert SimpleType: TransientStore(113) into ParameterizedType: TransientStore<V>(116) at 0", "Insert SimpleType: V(115) into ParameterizedType: TransientStore<V>(116) at 1", "Insert ParameterizedType: TransientStoreConfig<V>(122) into SingleVariableDeclaration(124) at 0", "Insert SimpleName: config(123) into SingleVariableDeclaration(124) at 1", "Insert ReturnStatement(130) into Block(131) at 0", "Insert SimpleName: Override(133) into MarkerAnnotation(134) at 0", "Update SimpleName: IOException(95) to Exception", "Insert SimpleName: TransientStore(112) into SimpleType: TransientStore(113) at 0", "Insert SimpleName: V(114) into SimpleType: V(115) at 0", "Insert SimpleType: TransientStoreConfig(119) into ParameterizedType: TransientStoreConfig<V>(122) at 0", "Insert SimpleType: V(121) into ParameterizedType: TransientStoreConfig<V>(122) at 1", "Insert ClassInstanceCreation(129) into ReturnStatement(130) at 0", "Insert SimpleName: TransientStoreConfig(118) into SimpleType: TransientStoreConfig(119) at 0", "Insert SimpleName: V(120) into SimpleType: V(121) at 0", "Insert ParameterizedType: MapBackedStore<>(127) into ClassInstanceCreation(129) at 0", "Insert SimpleName: config(128) into ClassInstanceCreation(129) at 1", "Insert SimpleType: MapBackedStore(126) into ParameterizedType: MapBackedStore<>(127) at 0", "Insert SimpleName: MapBackedStore(125) into SimpleType: MapBackedStore(126) at 0", "Delete MethodDeclaration(102)"]}}, {"ZKClusterCoordinator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 29", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: org.apache.drill.common.AutoCloseables to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: org.apache.drill.exec.coord.store.CachingTransientStoreFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 33"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS ImportDeclaration to CompilationUnit at 34", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreFactory to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "UPDATE from java.util.concurrent.ConcurrentHashMap to java.util.List", "operations": ["UPD QualifiedName: java.util.concurrent.ConcurrentHashMap from java.util.concurrent.ConcurrentHashMap to java.util.List"]}, {"root": "UPDATE from org.apache.drill.exec.work.foreman.DrillbitStatusListener to org.apache.drill.exec.coord.store.TransientStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.work.foreman.DrillbitStatusListener from org.apache.drill.exec.work.foreman.DrillbitStatusListener to org.apache.drill.exec.coord.store.TransientStore"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: factory to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: TransientStoreFactory to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: TransientStoreFactory to SimpleType: TransientStoreFactory at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 19"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to MethodDeclaration at 6", "INS ParameterizedType: ZkEphemeralStore<V> to VariableDeclarationStatement at 1", "INS SimpleType: V to ParameterizedType: ZkEphemeralStore<V> at 1", "INS SimpleName: V to TypeParameter at 0", "INS SimpleName: getOrCreateStore to MethodInvocation at 1", "INS SimpleType: V to ParameterizedType: TransientStore<V> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: TransientStoreConfig to SimpleType: TransientStoreConfig at 0", "INS SimpleType: V to ParameterizedType: ZkEphemeralStore<V> at 1", "INS SimpleName: TransientStore to SimpleType: TransientStore at 0", "INS MethodInvocation to CastExpression at 1", "INS ParameterizedType: TransientStore<V> to MethodDeclaration at 3", "INS SimpleType: TransientStore to ParameterizedType: TransientStore<V> at 0", "INS SimpleName: store to ReturnStatement at 0", "INS SimpleName: V to SimpleType: V at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleType: TransientStoreConfig to ParameterizedType: TransientStoreConfig<V> at 0", "INS SimpleType: V to ParameterizedType: TransientStoreConfig<V> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: V to SimpleType: V at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ZkEphemeralStore to SimpleType: ZkEphemeralStore at 0", "INS ParameterizedType: TransientStoreConfig<V> to SingleVariableDeclaration at 1", "INS SimpleType: ZkEphemeralStore to ParameterizedType: ZkEphemeralStore<V> at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: store to VariableDeclarationFragment at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: ZkEphemeralStore to ParameterizedType: ZkEphemeralStore<V> at 0", "INS SimpleName: ZkEphemeralStore to SimpleType: ZkEphemeralStore at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ParameterizedType: ZkEphemeralStore<V> to CastExpression at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: getOrCreateTransientStore to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 5"]}, {"root": "UPDATE from ZKListener to EndpointListener", "operations": ["UPD SimpleType: ZKListener from ZKListener to EndpointListener", "UPD SimpleName: ZKListener from ZKListener to EndpointListener", "UPD SimpleName: ZKListener from ZKListener to EndpointListener"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV SimpleName: close to MethodDeclaration at 2", "MOV SimpleType: IOException to MethodDeclaration at 3"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleName: IOException from IOException to Exception", "UPD SimpleType: IOException from IOException to Exception"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected", "UPD Modifier: public from public to protected"]}, {"root": "UPDATE from getServiceInstance to newServiceInstance", "operations": ["UPD SimpleName: getServiceInstance from getServiceInstance to newServiceInstance", "UPD SimpleName: getServiceInstance from getServiceInstance to newServiceInstance"]}, {"root": "UPDATE from getDiscovery to newDiscovery", "operations": ["UPD SimpleName: getDiscovery from getDiscovery to newDiscovery", "UPD SimpleName: getDiscovery from getDiscovery to newDiscovery"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: curator to ClassInstanceCreation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleType: ZkTransientStoreFactory to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 12", "INS SimpleName: ZkTransientStoreFactory to SimpleType: ZkTransientStoreFactory at 0", "INS SimpleName: CachingTransientStoreFactory to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: factory to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: AutoCloseables to MethodInvocation at 0", "operations": ["INS SimpleName: AutoCloseables to MethodInvocation at 0"]}, {"root": "INS SimpleName: close to MethodInvocation at 1", "operations": ["INS SimpleName: close to MethodInvocation at 1"]}, {"root": "INS SimpleName: discovery to MethodInvocation at 3", "operations": ["INS SimpleName: discovery to MethodInvocation at 3"]}, {"root": "UPDATE from close to curator", "operations": ["UPD SimpleName: close from close to curator"]}, {"root": "INS SimpleName: factory to MethodInvocation at 5", "operations": ["INS SimpleName: factory to MethodInvocation at 5"]}, {"root": "UPDATE from \"Cache changed, updating.\" to \"Got cache changed --> updating endpoints\"", "operations": ["UPD StringLiteral: \"Cache changed, updating.\" from \"Cache changed, updating.\" to \"Got cache changed --> updating endpoints\""]}, {"root": "UPDATE from curator to factory", "operations": ["UPD SimpleName: curator from curator to factory"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: curator to MethodInvocation at 0", "MOV SimpleName: close to MethodInvocation at 2"]}, {"root": "UPDATE from close to config", "operations": ["UPD SimpleName: close from close to config"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodInvocation", "DEL SimpleName: close", "DEL MethodInvocation", "DEL SimpleName: discovery", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL ExpressionStatement"]}]}}, {"ZKClusterCoordinator_diff": {"operations": ["Move ImportDeclaration(30) into CompilationUnit(1009) at 9", "Move ImportDeclaration(78) into CompilationUnit(1009) at 29", "Insert ImportDeclaration(42) into CompilationUnit(1009) at 13", "Insert ImportDeclaration(66) into CompilationUnit(1009) at 25", "Insert ImportDeclaration(78) into CompilationUnit(1009) at 31", "Insert ImportDeclaration(82) into CompilationUnit(1009) at 33", "Insert ImportDeclaration(84) into CompilationUnit(1009) at 34", "Move FieldDeclaration(122) into TypeDeclaration: class(1008) at 11", "Update QualifiedName: java.util.concurrent.ConcurrentHashMap(31) to java.util.List", "Insert QualifiedName: com.google.common.collect.Lists(41) into ImportDeclaration(42) at 0", "Insert QualifiedName: org.apache.drill.common.AutoCloseables(65) into ImportDeclaration(66) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.CachingTransientStoreFactory(77) into ImportDeclaration(78) at 0", "Update QualifiedName: org.apache.drill.exec.work.foreman.DrillbitStatusListener(77) to org.apache.drill.exec.coord.store.TransientStore", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig(81) into ImportDeclaration(82) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreFactory(83) into ImportDeclaration(84) at 0", "Insert FieldDeclaration(161) into TypeDeclaration: class(1008) at 10", "Insert MethodDeclaration(539) into TypeDeclaration: class(1008) at 19", "Insert MethodDeclaration(756) into TypeDeclaration: class(1008) at 24", "Insert Modifier: private(155) into FieldDeclaration(161) at 0", "Insert Modifier: final(156) into FieldDeclaration(161) at 1", "Insert SimpleType: TransientStoreFactory(158) into FieldDeclaration(161) at 2", "Insert VariableDeclarationFragment(160) into FieldDeclaration(161) at 3", "Move ExpressionStatement(375) into Block(449) at 5", "Move ExpressionStatement(382) into Block(449) at 4", "Update SimpleName: ZKListener(464) to EndpointListener", "Move Modifier: public(498) into MethodDeclaration(539) at 0", "Move PrimitiveType: void(499) into MethodDeclaration(539) at 1", "Move SimpleName: close(500) into MethodDeclaration(539) at 2", "Update SimpleType: IOException(502) to Exception", "Move SimpleType: IOException(502) into MethodDeclaration(539) at 3", "Insert Block(538) into MethodDeclaration(539) at 4", "Insert MarkerAnnotation(716) into MethodDeclaration(756) at 0", "Insert Modifier: public(717) into MethodDeclaration(756) at 1", "Insert TypeParameter(719) into MethodDeclaration(756) at 2", "Insert ParameterizedType: TransientStore<V>(724) into MethodDeclaration(756) at 3", "Insert SimpleName: getOrCreateTransientStore(725) into MethodDeclaration(756) at 4", "Insert SingleVariableDeclaration(733) into MethodDeclaration(756) at 5", "Insert Block(755) into MethodDeclaration(756) at 6", "Update Modifier: private(887) to protected", "Update SimpleName: getServiceInstance(893) to newServiceInstance", "Update Modifier: public(916) to protected", "Update SimpleName: getDiscovery(922) to newDiscovery", "Insert SimpleName: TransientStoreFactory(157) into SimpleType: TransientStoreFactory(158) at 0", "Insert SimpleName: factory(159) into VariableDeclarationFragment(160) at 0", "Insert ExpressionStatement(358) into Block(359) at 12", "Move ExpressionStatement(342) into Block(449) at 3", "Update SimpleName: IOException(501) to Exception", "Move ExpressionStatement(506) into Block(538) at 0", "Insert SimpleName: Override(715) into MarkerAnnotation(716) at 0", "Insert SimpleName: V(718) into TypeParameter(719) at 0", "Insert SimpleType: TransientStore(721) into ParameterizedType: TransientStore<V>(724) at 0", "Insert SimpleType: V(723) into ParameterizedType: TransientStore<V>(724) at 1", "Insert Modifier: final(726) into SingleVariableDeclaration(733) at 0", "Insert ParameterizedType: TransientStoreConfig<V>(731) into SingleVariableDeclaration(733) at 1", "Insert SimpleName: config(732) into SingleVariableDeclaration(733) at 2", "Insert VariableDeclarationStatement(752) into Block(755) at 0", "Insert ReturnStatement(754) into Block(755) at 1", "Insert Assignment: =(357) into ExpressionStatement(358) at 0", "Insert SimpleName: TransientStore(720) into SimpleType: TransientStore(721) at 0", "Insert SimpleName: V(722) into SimpleType: V(723) at 0", "Insert SimpleType: TransientStoreConfig(728) into ParameterizedType: TransientStoreConfig<V>(731) at 0", "Insert SimpleType: V(730) into ParameterizedType: TransientStoreConfig<V>(731) at 1", "Insert Modifier: final(734) into VariableDeclarationStatement(752) at 0", "Insert ParameterizedType: ZkEphemeralStore<V>(739) into VariableDeclarationStatement(752) at 1", "Insert VariableDeclarationFragment(751) into VariableDeclarationStatement(752) at 2", "Insert SimpleName: store(753) into ReturnStatement(754) at 0", "Insert SimpleName: factory(349) into Assignment: =(357) at 0", "Insert MethodInvocation(356) into Assignment: =(357) at 1", "Insert SimpleName: AutoCloseables(530) into MethodInvocation(536) at 0", "Insert SimpleName: close(531) into MethodInvocation(536) at 1", "Insert SimpleName: discovery(533) into MethodInvocation(536) at 3", "Update SimpleName: close(504) to curator", "Insert SimpleName: factory(535) into MethodInvocation(536) at 5", "Insert SimpleName: TransientStoreConfig(727) into SimpleType: TransientStoreConfig(728) at 0", "Insert SimpleName: V(729) into SimpleType: V(730) at 0", "Insert SimpleType: ZkEphemeralStore(736) into ParameterizedType: ZkEphemeralStore<V>(739) at 0", "Insert SimpleType: V(738) into ParameterizedType: ZkEphemeralStore<V>(739) at 1", "Insert SimpleName: store(740) into VariableDeclarationFragment(751) at 0", "Insert CastExpression(750) into VariableDeclarationFragment(751) at 1", "Update SimpleName: getDiscovery(328) to newDiscovery", "Insert SimpleName: CachingTransientStoreFactory(350) into MethodInvocation(356) at 0", "Insert SimpleName: of(351) into MethodInvocation(356) at 1", "Insert ClassInstanceCreation(355) into MethodInvocation(356) at 2", "Update SimpleType: ZKListener(379) to EndpointListener", "Update StringLiteral: \"Cache changed, updating.\"(489) to \"Got cache changed --> updating endpoints\"", "Insert SimpleName: ZkEphemeralStore(735) into SimpleType: ZkEphemeralStore(736) at 0", "Insert SimpleName: V(737) into SimpleType: V(738) at 0", "Insert ParameterizedType: ZkEphemeralStore<V>(745) into CastExpression(750) at 0", "Insert MethodInvocation(749) into CastExpression(750) at 1", "Insert SimpleType: ZkTransientStoreFactory(353) into ClassInstanceCreation(355) at 0", "Insert SimpleName: curator(354) into ClassInstanceCreation(355) at 1", "Update SimpleName: ZKListener(378) to EndpointListener", "Insert SimpleType: ZkEphemeralStore(742) into ParameterizedType: ZkEphemeralStore<V>(745) at 0", "Insert SimpleType: V(744) into ParameterizedType: ZkEphemeralStore<V>(745) at 1", "Update SimpleName: curator(511) to factory", "Move SimpleName: curator(511) into MethodInvocation(749) at 0", "Insert SimpleName: getOrCreateStore(747) into MethodInvocation(749) at 1", "Update SimpleName: close(512) to config", "Move SimpleName: close(512) into MethodInvocation(749) at 2", "Insert SimpleName: ZkTransientStoreFactory(352) into SimpleType: ZkTransientStoreFactory(353) at 0", "Update SimpleName: getServiceInstance(533) to newServiceInstance", "Insert SimpleName: ZkEphemeralStore(741) into SimpleType: ZkEphemeralStore(742) at 0", "Insert SimpleName: V(743) into SimpleType: V(744) at 0", "Delete SimpleName: discovery(507)", "Delete SimpleName: close(508)", "Delete MethodInvocation(509)", "Delete ExpressionStatement(510)", "Delete MethodInvocation(513)", "Delete ExpressionStatement(514)", "Delete Block(515)", "Delete MethodDeclaration(516)"]}}, {"OptionValue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.drill.exec.store.sys.PersistentStore to ImportDeclaration at 0"]}, {"root": "INS SimpleName: PersistentStore to TagElement: @link at 0", "operations": ["INS SimpleName: PersistentStore to TagElement: @link at 0"]}, {"root": "DEL QualifiedName: org.apache.drill.exec.store.sys.PStore", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.PStore"]}]}}, {"OptionValue_diff": {"operations": ["Insert ImportDeclaration(30) into CompilationUnit(834) at 7", "Insert QualifiedName: org.apache.drill.exec.store.sys.PersistentStore(29) into ImportDeclaration(30) at 0", "Insert SimpleName: PersistentStore(41) into TagElement: @link(43) at 0", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStore(39)"]}}, {"SystemOptionManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "INS SimpleType: AutoCloseable to TypeDeclaration: class at 4", "operations": ["INS SimpleType: AutoCloseable to TypeDeclaration: class at 4", "INS SimpleName: AutoCloseable to SimpleType: AutoCloseable at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: options to MethodInvocation at 0", "INS SimpleName: close to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "UPDATE from PStoreConfig<OptionValue> to PersistentStoreConfig<OptionValue>", "operations": ["UPD ParameterizedType: PStoreConfig<OptionValue> from PStoreConfig<OptionValue> to PersistentStoreConfig<OptionValue>"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from PStore<OptionValue> to PersistentStore<OptionValue>", "operations": ["UPD ParameterizedType: PStore<OptionValue> from PStore<OptionValue> to PersistentStore<OptionValue>"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleName: IOException from IOException to Exception", "UPD SimpleType: IOException from IOException to Exception"]}, {"root": "UPDATE from PStoreConfig to PersistentStoreConfig", "operations": ["UPD SimpleType: PStoreConfig from PStoreConfig to PersistentStoreConfig", "UPD SimpleName: PStoreConfig from PStoreConfig to PersistentStoreConfig", "UPD SimpleName: PStoreConfig from PStoreConfig to PersistentStoreConfig"]}, {"root": "UPDATE from PStore to PersistentStore", "operations": ["UPD SimpleType: PStore from PStore to PersistentStore", "UPD SimpleName: PStore from PStore to PersistentStore"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: getAll to MethodInvocation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: options to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getAll to MethodInvocation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: options to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: options to MethodInvocation at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getAll to MethodInvocation at 1"]}, {"root": "UPDATE from getStore to getOrCreateStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateStore"]}, {"root": "DEL SimpleName: options", "operations": ["DEL SimpleName: options"]}, {"root": "DEL SimpleName: options", "operations": ["DEL SimpleName: options"]}, {"root": "DEL SimpleName: options", "operations": ["DEL SimpleName: options"]}]}}, {"SystemOptionManager_diff": {"operations": ["Insert ImportDeclaration(30) into CompilationUnit(822) at 7", "Insert QualifiedName: com.google.common.collect.Lists(29) into ImportDeclaration(30) at 0", "Update QualifiedName: org.apache.drill.exec.store.sys.PStore(49) to org.apache.drill.exec.store.sys.PersistentStore", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(51) to org.apache.drill.exec.store.sys.PersistentStoreConfig", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(53) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Insert SimpleType: AutoCloseable(76) into TypeDeclaration: class(821) at 4", "Insert MethodDeclaration(820) into TypeDeclaration: class(821) at 20", "Insert SimpleName: AutoCloseable(75) into SimpleType: AutoCloseable(76) at 0", "Update ParameterizedType: PStoreConfig<OptionValue>(249) to PersistentStoreConfig<OptionValue>", "Update SimpleType: PStoreProvider(256) to PersistentStoreProvider", "Update ParameterizedType: PStore<OptionValue>(269) to PersistentStore<OptionValue>", "Update SimpleType: IOException(323) to Exception", "Insert MarkerAnnotation(809) into MethodDeclaration(820) at 0", "Insert Modifier: public(810) into MethodDeclaration(820) at 1", "Insert PrimitiveType: void(811) into MethodDeclaration(820) at 2", "Insert SimpleName: close(812) into MethodDeclaration(820) at 3", "Insert SimpleType: Exception(814) into MethodDeclaration(820) at 4", "Insert Block(819) into MethodDeclaration(820) at 5", "Update SimpleType: PStoreConfig(246) to PersistentStoreConfig", "Update SimpleName: PStoreProvider(255) to PersistentStoreProvider", "Update SimpleType: PStore(266) to PersistentStore", "Update SimpleType: PStoreProvider(281) to PersistentStoreProvider", "Update SimpleName: IOException(322) to Exception", "Insert SimpleName: Override(808) into MarkerAnnotation(809) at 0", "Insert SimpleName: Exception(813) into SimpleType: Exception(814) at 0", "Insert ExpressionStatement(818) into Block(819) at 0", "Update SimpleName: PStoreConfig(245) to PersistentStoreConfig", "Update SimpleName: PStore(265) to PersistentStore", "Update SimpleName: PStoreProvider(280) to PersistentStoreProvider", "Insert MethodInvocation(350) into EnhancedForStatement(432) at 1", "Insert MethodInvocation(559) into EnhancedForStatement(571) at 1", "Insert MethodInvocation(766) into EnhancedForStatement(775) at 1", "Insert MethodInvocation(817) into ExpressionStatement(818) at 0", "Insert SimpleName: Lists(345) into MethodInvocation(350) at 0", "Insert SimpleName: newArrayList(346) into MethodInvocation(350) at 1", "Insert MethodInvocation(349) into MethodInvocation(350) at 2", "Insert SimpleName: Lists(554) into MethodInvocation(559) at 0", "Insert SimpleName: newArrayList(555) into MethodInvocation(559) at 1", "Insert MethodInvocation(558) into MethodInvocation(559) at 2", "Insert SimpleName: Lists(761) into MethodInvocation(766) at 0", "Insert SimpleName: newArrayList(762) into MethodInvocation(766) at 1", "Insert MethodInvocation(765) into MethodInvocation(766) at 2", "Insert SimpleName: options(815) into MethodInvocation(817) at 0", "Insert SimpleName: close(816) into MethodInvocation(817) at 1", "Update SimpleName: getStore(326) to getOrCreateStore", "Insert SimpleName: options(347) into MethodInvocation(349) at 0", "Insert SimpleName: getAll(348) into MethodInvocation(349) at 1", "Insert SimpleName: options(556) into MethodInvocation(558) at 0", "Insert SimpleName: getAll(557) into MethodInvocation(558) at 1", "Insert SimpleName: options(763) into MethodInvocation(765) at 0", "Insert SimpleName: getAll(764) into MethodInvocation(765) at 1", "Update SimpleName: PStoreConfig(293) to PersistentStoreConfig", "Delete SimpleName: options(341)", "Delete SimpleName: options(545)", "Delete SimpleName: options(747)"]}}, {"DrillRestServer_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from getPersistentStoreProvider to getStoreProvider", "operations": ["UPD SimpleName: getPersistentStoreProvider from getPersistentStoreProvider to getStoreProvider"]}]}}, {"DrillRestServer_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(27) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Update SimpleType: PStoreProvider(273) to PersistentStoreProvider", "Update SimpleName: getPersistentStoreProvider(268) to getStoreProvider", "Update SimpleName: PStoreProvider(272) to PersistentStoreProvider"]}}, {"StorageResources_cluster": {"actions": [{"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: getAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}]}}, {"StorageResources_diff": {"operations": ["Insert MethodInvocation(201) into EnhancedForStatement(222) at 1", "Insert SimpleName: Lists(194) into MethodInvocation(201) at 0", "Insert SimpleName: newArrayList(195) into MethodInvocation(201) at 1", "Insert MethodInvocation(200) into MethodInvocation(201) at 2", "Move MethodInvocation(196) into MethodInvocation(200) at 0", "Insert SimpleName: getAll(199) into MethodInvocation(200) at 1"]}}, {"CachingStoreProvider_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL QualifiedName: org.apache.drill.exec.store.sys", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ConcurrentMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig.Mode", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.Maps", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: get", "DEL SimpleName: PStoreProvider", "DEL SimpleName: V", "DEL SimpleName: config", "DEL SimpleName: storeCache", "DEL StringLiteral: \"unchecked\"", "DEL SimpleType: PStoreConfig", "DEL ParameterizedType: PStore<?>", "DEL SimpleName: PStoreProvider", "DEL SimpleName: newStore", "DEL SimpleName: V", "DEL SimpleName: getLogger", "DEL MethodInvocation", "DEL WildcardType: ?", "DEL SimpleName: CachingStoreProvider", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL NullLiteral", "DEL SimpleName: close", "DEL QualifiedName: org.slf4j.Logger", "DEL SimpleName: clear", "DEL SimpleName: V", "DEL SimpleName: values", "DEL VariableDeclarationFragment", "DEL SimpleName: close", "DEL SimpleType: ConcurrentMap", "DEL SimpleType: Exception", "DEL ParameterizedType: PStoreConfig<?>", "DEL ThisExpression", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: CachingStoreProvider", "DEL SimpleType: IOException", "DEL SimpleName: Exception", "DEL SimpleName: AutoCloseable", "DEL SimpleName: SuppressWarnings", "DEL SimpleType: PStore", "DEL SimpleName: config", "DEL SimpleName: provider", "DEL SimpleName: provider", "DEL Modifier: final", "DEL Block", "DEL ParameterizedType: PStore<V>", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleName: Maps", "DEL SimpleName: store", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: logger", "DEL EnhancedForStatement", "DEL SimpleType: AutoCloseable", "DEL TypeParameter", "DEL SimpleName: putIfAbsent", "DEL MarkerAnnotation", "DEL SimpleName: s", "DEL SimpleName: s", "DEL InfixExpression: ==", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SuperConstructorInvocation", "DEL ExpressionStatement", "DEL SimpleName: newStore", "DEL MethodInvocation", "DEL SimpleName: s", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: getStore", "DEL SimpleName: newStore", "DEL MethodInvocation", "DEL SimpleType: PStoreConfig", "DEL VariableDeclarationFragment", "DEL SimpleName: PStoreConfig", "DEL SimpleName: provider", "DEL SimpleName: getStore", "DEL SimpleName: storeCache", "DEL SimpleName: newConcurrentMap", "DEL SimpleName: newStore", "DEL SimpleName: start", "DEL SingleVariableDeclaration", "DEL SingleMemberAnnotation", "DEL SimpleName: storeCache", "DEL SimpleName: storeCache", "DEL ParameterizedType: PStore<?>", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleType: PStore", "DEL ParameterizedType: PStore<?>", "DEL WildcardType: ?", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: s", "DEL IfStatement", "DEL ExpressionStatement", "DEL NullLiteral", "DEL Modifier: public", "DEL ParameterizedType: PStore<?>", "DEL SimpleName: Override", "DEL SimpleName: close", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: V", "DEL SimpleName: config", "DEL Modifier: public", "DEL WildcardType: ?", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Modifier: public", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL SimpleName: PStore", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: PStore", "DEL SimpleName: provider", "DEL SimpleName: PStore", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: IOException", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: PStoreConfig", "DEL PrimitiveType: void", "DEL PrimitiveType: void", "DEL WildcardType: ?", "DEL ParameterizedType: ConcurrentMap<PStoreConfig<?>,PStore<?>>", "DEL Modifier: public", "DEL Assignment: =", "DEL Block", "DEL ExpressionStatement", "DEL SimpleType: PStore", "DEL ParameterizedType: PStore<V>", "DEL SimpleName: PStore", "DEL SimpleName: PStore", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleType: CachingStoreProvider", "DEL SimpleName: CachingStoreProvider", "DEL Modifier: private", "DEL SimpleName: PStore", "DEL SimpleType: PStore", "DEL SimpleName: storeCache", "DEL Block", "DEL WildcardType: ?", "DEL Assignment: =", "DEL Block", "DEL MethodInvocation", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SimpleType: PStoreProvider", "DEL SimpleName: provider", "DEL InfixExpression: ==", "DEL SimpleName: provider", "DEL CastExpression", "DEL FieldDeclaration", "DEL Block", "DEL SimpleType: PStoreProvider", "DEL SimpleType: PStoreProvider", "DEL MethodInvocation", "DEL SimpleName: ConcurrentMap", "DEL SingleVariableDeclaration", "DEL SimpleName: provider", "DEL FieldAccess", "DEL SimpleType: PStore", "DEL Modifier: final", "DEL SimpleName: config", "DEL MethodInvocation", "DEL Block", "DEL IfStatement", "DEL SimpleType: V", "DEL MarkerAnnotation", "DEL SimpleType: V", "DEL SimpleType: PStore", "DEL VariableDeclarationStatement", "DEL SimpleName: close", "DEL SimpleName: store", "DEL SimpleName: PStoreProvider", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: start"]}]}}, {"CachingStoreProvider_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.util.concurrent.ConcurrentMap(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig.Mode(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: com.google.common.base.Preconditions(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: com.google.common.collect.Maps(25)", "Delete ImportDeclaration(26)", "Delete Modifier: public(27)", "Delete SimpleName: CachingStoreProvider(28)", "Delete SimpleName: PStoreProvider(29)", "Delete SimpleType: PStoreProvider(30)", "Delete SimpleName: AutoCloseable(31)", "Delete SimpleType: AutoCloseable(32)", "Delete Modifier: static(33)", "Delete Modifier: final(34)", "Delete QualifiedName: org.slf4j.Logger(35)", "Delete SimpleType: org.slf4j.Logger(36)", "Delete SimpleName: logger(37)", "Delete QualifiedName: org.slf4j.LoggerFactory(38)", "Delete SimpleName: getLogger(39)", "Delete SimpleName: CachingStoreProvider(40)", "Delete SimpleType: CachingStoreProvider(41)", "Delete TypeLiteral(42)", "Delete MethodInvocation(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete Modifier: private(46)", "Delete Modifier: final(47)", "Delete SimpleName: ConcurrentMap(48)", "Delete SimpleType: ConcurrentMap(49)", "Delete SimpleName: PStoreConfig(50)", "Delete SimpleType: PStoreConfig(51)", "Delete WildcardType: ?(52)", "Delete ParameterizedType: PStoreConfig<?>(53)", "Delete SimpleName: PStore(54)", "Delete SimpleType: PStore(55)", "Delete WildcardType: ?(56)", "Delete ParameterizedType: PStore<?>(57)", "Delete ParameterizedType: ConcurrentMap<PStoreConfig<?>,PStore<?>>(58)", "Delete SimpleName: storeCache(59)", "Delete SimpleName: Maps(60)", "Delete SimpleName: newConcurrentMap(61)", "Delete MethodInvocation(62)", "Delete VariableDeclarationFragment(63)", "Delete FieldDeclaration(64)", "Delete Modifier: private(65)", "Delete Modifier: final(66)", "Delete SimpleName: PStoreProvider(67)", "Delete SimpleType: PStoreProvider(68)", "Delete SimpleName: provider(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete Modifier: public(72)", "Delete SimpleName: CachingStoreProvider(73)", "Delete SimpleName: PStoreProvider(74)", "Delete SimpleType: PStoreProvider(75)", "Delete SimpleName: provider(76)", "Delete SingleVariableDeclaration(77)", "Delete SuperConstructorInvocation(78)", "Delete ThisExpression(79)", "Delete SimpleName: provider(80)", "Delete FieldAccess(81)", "Delete SimpleName: provider(82)", "Delete Assignment: =(83)", "Delete ExpressionStatement(84)", "Delete Block(85)", "Delete MethodDeclaration(86)", "Delete SimpleName: SuppressWarnings(87)", "Delete StringLiteral: \"unchecked\"(88)", "Delete SingleMemberAnnotation(89)", "Delete Modifier: public(90)", "Delete SimpleName: V(91)", "Delete TypeParameter(92)", "Delete SimpleName: PStore(93)", "Delete SimpleType: PStore(94)", "Delete SimpleName: V(95)", "Delete SimpleType: V(96)", "Delete ParameterizedType: PStore<V>(97)", "Delete SimpleName: getStore(98)", "Delete SimpleName: PStoreConfig(99)", "Delete SimpleType: PStoreConfig(100)", "Delete SimpleName: V(101)", "Delete SimpleType: V(102)", "Delete ParameterizedType: PStoreConfig<V>(103)", "Delete SimpleName: config(104)", "Delete SingleVariableDeclaration(105)", "Delete SimpleName: IOException(106)", "Delete SimpleType: IOException(107)", "Delete SimpleName: PStore(108)", "Delete SimpleType: PStore(109)", "Delete WildcardType: ?(110)", "Delete ParameterizedType: PStore<?>(111)", "Delete SimpleName: s(112)", "Delete SimpleName: storeCache(113)", "Delete SimpleName: get(114)", "Delete SimpleName: config(115)", "Delete MethodInvocation(116)", "Delete VariableDeclarationFragment(117)", "Delete VariableDeclarationStatement(118)", "Delete SimpleName: s(119)", "Delete NullLiteral(120)", "Delete InfixExpression: ==(121)", "Delete SimpleName: PStore(122)", "Delete SimpleType: PStore(123)", "Delete WildcardType: ?(124)", "Delete ParameterizedType: PStore<?>(125)", "Delete SimpleName: newStore(126)", "Delete SimpleName: provider(127)", "Delete SimpleName: getStore(128)", "Delete SimpleName: config(129)", "Delete MethodInvocation(130)", "Delete VariableDeclarationFragment(131)", "Delete VariableDeclarationStatement(132)", "Delete SimpleName: s(133)", "Delete SimpleName: storeCache(134)", "Delete SimpleName: putIfAbsent(135)", "Delete SimpleName: config(136)", "Delete SimpleName: newStore(137)", "Delete MethodInvocation(138)", "Delete Assignment: =(139)", "Delete ExpressionStatement(140)", "Delete SimpleName: s(141)", "Delete NullLiteral(142)", "Delete InfixExpression: ==(143)", "Delete SimpleName: s(144)", "Delete SimpleName: newStore(145)", "Delete Assignment: =(146)", "Delete ExpressionStatement(147)", "Delete Block(148)", "Delete SimpleName: newStore(149)", "Delete SimpleName: close(150)", "Delete MethodInvocation(151)", "Delete ExpressionStatement(152)", "Delete Block(153)", "Delete IfStatement(154)", "Delete Block(155)", "Delete IfStatement(156)", "Delete SimpleName: PStore(157)", "Delete SimpleType: PStore(158)", "Delete SimpleName: V(159)", "Delete SimpleType: V(160)", "Delete ParameterizedType: PStore<V>(161)", "Delete SimpleName: s(162)", "Delete CastExpression(163)", "Delete ReturnStatement(164)", "Delete Block(165)", "Delete MethodDeclaration(166)", "Delete SimpleName: Override(167)", "Delete MarkerAnnotation(168)", "Delete Modifier: public(169)", "Delete PrimitiveType: void(170)", "Delete SimpleName: start(171)", "Delete SimpleName: IOException(172)", "Delete SimpleType: IOException(173)", "Delete SimpleName: provider(174)", "Delete SimpleName: start(175)", "Delete MethodInvocation(176)", "Delete ExpressionStatement(177)", "Delete Block(178)", "Delete MethodDeclaration(179)", "Delete SimpleName: Override(180)", "Delete MarkerAnnotation(181)", "Delete Modifier: public(182)", "Delete PrimitiveType: void(183)", "Delete SimpleName: close(184)", "Delete SimpleName: Exception(185)", "Delete SimpleType: Exception(186)", "Delete SimpleName: PStore(187)", "Delete SimpleType: PStore(188)", "Delete WildcardType: ?(189)", "Delete ParameterizedType: PStore<?>(190)", "Delete SimpleName: store(191)", "Delete SingleVariableDeclaration(192)", "Delete SimpleName: storeCache(193)", "Delete SimpleName: values(194)", "Delete MethodInvocation(195)", "Delete SimpleName: store(196)", "Delete SimpleName: close(197)", "Delete MethodInvocation(198)", "Delete ExpressionStatement(199)", "Delete Block(200)", "Delete EnhancedForStatement(201)", "Delete SimpleName: storeCache(202)", "Delete SimpleName: clear(203)", "Delete MethodInvocation(204)", "Delete ExpressionStatement(205)", "Delete SimpleName: provider(206)", "Delete SimpleName: close(207)", "Delete MethodInvocation(208)", "Delete ExpressionStatement(209)", "Delete Block(210)", "Delete MethodDeclaration(211)", "Delete TypeDeclaration: class(212)"]}}, {"OptionIterator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 5"]}]}}, {"OptionIterator_diff": {"operations": ["Move ImportDeclaration(36) into CompilationUnit(428) at 4", "Move ImportDeclaration(38) into CompilationUnit(428) at 5"]}}, {"PStoreConfig_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TagElement", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL QualifiedName: org.apache.drill.exec.store.sys", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.serialize.JacksonSerializer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.serialize.PClassSerializer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.serialize.ProtoSerializer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.dyuproject.protostuff.Schema"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.fasterxml.jackson.databind.ObjectMapper"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.protobuf.Message", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.protobuf.Message.Builder", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: persist", "DEL MethodDeclaration", "DEL SimpleType: PStoreConfig", "DEL Block", "DEL SimpleName: size", "DEL Block", "DEL InfixExpression: !=", "DEL TypeParameter", "DEL SimpleName: maxIteratorSize", "DEL NumberLiteral: 0", "DEL FieldAccess", "DEL ReturnStatement", "DEL NullLiteral", "DEL SimpleName: V", "DEL SimpleName: V", "DEL SimpleType: PClassSerializer", "DEL SimpleType: PStoreConfigBuilder", "DEL Block", "DEL SimpleType: X", "DEL Block", "DEL ThisExpression", "DEL SimpleName: String", "DEL SimpleName: X", "DEL SimpleType: PStoreConfig", "DEL InfixExpression: ==", "DEL SimpleName: ObjectMapper", "DEL MethodInvocation", "DEL FieldAccess", "DEL Block", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: mode", "DEL SimpleName: result", "DEL FieldAccess", "DEL SimpleName: build", "DEL ParenthesizedExpression", "DEL SimpleName: getClass", "DEL Block", "DEL FieldAccess", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: mode", "DEL IfStatement", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: readSchema", "DEL SimpleName: valueSerializer", "DEL FieldAccess", "DEL QualifiedName: Mode.PERSISTENT", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL SimpleName: String", "DEL SimpleName: equals", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL SimpleName: prime", "DEL MethodInvocation", "DEL SimpleName: PStoreConfigBuilder", "DEL SimpleType: JacksonSerializer", "DEL Block", "DEL SimpleName: V", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL NumberLiteral: 31", "DEL Modifier: private", "DEL SimpleType: PClassSerializer", "DEL SimpleType: PStoreConfigBuilder", "DEL ParenthesizedExpression", "DEL SimpleName: getName", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL Modifier: public", "DEL SimpleName: result", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL FieldAccess", "DEL SimpleName: name", "DEL Modifier: public", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL ParenthesizedExpression", "DEL QualifiedName: Mode.PERSISTENT", "DEL ParameterizedType: PClassSerializer<V>", "DEL Block", "DEL SimpleName: prime", "DEL SimpleName: PStoreConfigBuilder", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Modifier: final", "DEL SimpleType: PClassSerializer", "DEL SimpleName: name", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: PStoreConfigBuilder", "DEL SimpleName: hashCode", "DEL SingleVariableDeclaration", "DEL InfixExpression: !=", "DEL Modifier: final", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: result", "DEL SimpleName: valueSerializer", "DEL ThisExpression", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL TypeParameter", "DEL ReturnStatement", "DEL PrefixExpression: !", "DEL SingleVariableDeclaration", "DEL QualifiedName: other.valueSerializer", "DEL SimpleName: PStoreConfigBuilder", "DEL ConditionalExpression", "DEL SimpleName: mode", "DEL SimpleType: Builder", "DEL SimpleName: mode", "DEL ThisExpression", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL SimpleType: V", "DEL IfStatement", "DEL SimpleName: mode", "DEL SimpleName: hashCode", "DEL SimpleType: PStoreConfigBuilder", "DEL Modifier: public", "DEL CastExpression", "DEL EnumConstantDeclaration", "DEL ReturnStatement", "DEL SimpleType: PClassSerializer", "DEL Modifier: private", "DEL SimpleName: mode", "DEL SimpleType: ProtoSerializer", "DEL ParenthesizedExpression", "DEL SimpleName: maxIteratorSize", "DEL SimpleName: readSchema", "DEL SimpleName: Mode", "DEL InfixExpression: ==", "DEL SimpleName: PClassSerializer", "DEL ReturnStatement", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: size", "DEL SimpleName: result", "DEL SimpleType: String", "DEL PrimitiveType: int", "DEL SimpleName: Mode", "DEL SimpleName: PStoreConfigBuilder", "DEL QualifiedName: Integer.MAX_VALUE", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL SimpleName: name", "DEL SimpleName: Mode", "DEL SimpleName: Message", "DEL SimpleName: checkNotNull", "DEL SimpleName: V", "DEL InfixExpression: *", "DEL ParameterizedType: PClassSerializer<V>", "DEL TypeDeclaration: class", "DEL SimpleName: X", "DEL InfixExpression: ==", "DEL PrefixExpression: !", "DEL SimpleName: other", "DEL ParameterizedType: PStoreConfig<V>", "DEL Modifier: public", "DEL SimpleType: PStoreConfigBuilder", "DEL Block", "DEL SimpleName: result", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL ThisExpression", "DEL ThisExpression", "DEL Block", "DEL ReturnStatement", "DEL SimpleType: Message", "DEL ThisExpression", "DEL TextElement: Set the maximum size of the iterator.  Positive numbers start from the start of the list.  Negative numbers start from the end of the list.", "DEL SimpleName: serializer", "DEL MarkerAnnotation", "DEL SimpleName: V", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL SimpleName: V", "DEL ClassInstanceCreation", "DEL SimpleName: V", "DEL Modifier: final", "DEL ConditionalExpression", "DEL Assignment: =", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleType: V", "DEL SimpleType: V", "DEL IfStatement", "DEL SimpleName: name", "DEL SimpleType: Mode", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: BLOB_PERSISTENT", "DEL SimpleName: mode", "DEL SimpleType: Mode", "DEL Modifier: public", "DEL SimpleName: String", "DEL SimpleName: name", "DEL ReturnStatement", "DEL Modifier: static", "DEL SimpleName: prime", "DEL SimpleName: valueSerializer", "DEL SimpleName: newProtoBuilder", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleType: String", "DEL SimpleName: getSerializer", "DEL ReturnStatement", "DEL SimpleName: PClassSerializer", "DEL ParameterizedType: JacksonSerializer<V>", "DEL InfixExpression: *", "DEL BooleanLiteral: false", "DEL SimpleName: name", "DEL ParameterizedType: PClassSerializer<V>", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL Block", "DEL SimpleName: PClassSerializer", "DEL SimpleType: V", "DEL Modifier: static", "DEL FieldDeclaration", "DEL ThisExpression", "DEL EnumDeclaration", "DEL Block", "DEL SimpleType: V", "DEL SimpleName: Schema", "DEL SimpleName: Mode", "DEL Assignment: =", "DEL MethodInvocation", "DEL ReturnStatement", "DEL TagElement: @return", "DEL MarkerAnnotation", "DEL SimpleName: mapper", "DEL SimpleName: clazz", "DEL SimpleType: V", "DEL InfixExpression: +", "DEL SimpleName: name", "DEL NullLiteral", "DEL SimpleName: clazz", "DEL ReturnStatement", "DEL SimpleName: maxIteratorSize", "DEL SimpleName: PStoreConfigBuilder", "DEL SimpleName: PStoreConfig", "DEL BooleanLiteral: true", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL Assignment: =", "DEL SimpleType: V", "DEL MethodDeclaration", "DEL SimpleName: maxIteratorSize", "DEL SimpleName: result", "DEL FieldDeclaration", "DEL Assignment: =", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: Class", "DEL ThisExpression", "DEL Block", "DEL SimpleName: writeSchema", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL ReturnStatement", "DEL ParameterizedType: PClassSerializer<V>", "DEL BooleanLiteral: false", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: PStoreConfig", "DEL SimpleName: mode", "DEL MethodDeclaration", "DEL QualifiedName: other.valueSerializer", "DEL SimpleName: Builder", "DEL QualifiedName: other.name", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL SimpleName: valueSerializer", "DEL Block", "DEL FieldDeclaration", "DEL SimpleName: equals", "DEL SimpleName: ephemeral", "DEL InfixExpression: ==", "DEL SimpleName: V", "DEL SimpleName: ProtoSerializer", "DEL Block", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: name", "DEL SimpleType: V", "DEL SimpleName: result", "DEL NullLiteral", "DEL SuperConstructorInvocation", "DEL SimpleName: V", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL SimpleName: name", "DEL SimpleName: name", "DEL Block", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: blob", "DEL FieldDeclaration", "DEL InfixExpression: ==", "DEL SimpleName: result", "DEL SimpleName: getMode", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL SimpleName: equals", "DEL SimpleName: V", "DEL SimpleName: abs", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleType: V", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL SimpleName: valueSerializer", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL TypeDeclaration: class", "DEL SimpleName: V", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: name", "DEL SimpleType: V", "DEL SimpleName: mode", "DEL Assignment: =", "DEL Modifier: final", "DEL SimpleName: size", "DEL Block", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL SimpleType: PStoreConfigBuilder", "DEL SimpleName: maxIteratorSize", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL SimpleName: serializer", "DEL MethodDeclaration", "DEL SimpleName: maxIteratorSize", "DEL SimpleName: PERSISTENT", "DEL SimpleName: PClassSerializer", "DEL SimpleName: V", "DEL QualifiedName: other.name", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: getMaxIteratorSize", "DEL SimpleType: String", "DEL IfStatement", "DEL QualifiedName: Mode.BLOB_PERSISTENT", "DEL SimpleName: valueSerializer", "DEL SimpleName: obj", "DEL SimpleType: V", "DEL BooleanLiteral: false", "DEL SimpleName: PClassSerializer", "DEL ExpressionStatement", "DEL SimpleType: PClassSerializer", "DEL InfixExpression: *", "DEL PrimitiveType: int", "DEL SimpleName: mode", "DEL MethodDeclaration", "DEL ParameterizedType: Schema<V>", "DEL SimpleName: PStoreConfig", "DEL Modifier: public", "DEL Block", "DEL BooleanLiteral: true", "DEL SimpleName: serializer", "DEL ParameterizedType: PClassSerializer<V>", "DEL SimpleType: V", "DEL Modifier: private", "DEL Javadoc", "DEL SimpleName: Math", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: PStoreConfig", "DEL MethodInvocation", "DEL ReturnStatement", "DEL Assignment: =", "DEL Modifier: static", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL SimpleType: Mode", "DEL FieldDeclaration", "DEL ParameterizedType: PStoreConfigBuilder<V>", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL SimpleName: maxIteratorSize", "DEL Modifier: public", "DEL SimpleName: valueSerializer", "DEL SimpleName: name", "DEL SimpleName: EPHEMERAL", "DEL ParameterizedType: ProtoSerializer<V,X>", "DEL SimpleName: name", "DEL SimpleName: Override", "DEL NullLiteral", "DEL SimpleName: maxIteratorSize", "DEL VariableDeclarationFragment", "DEL SimpleType: PStoreConfigBuilder", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL SimpleName: JacksonSerializer", "DEL Modifier: final", "DEL SimpleName: Mode", "DEL FieldAccess", "DEL SimpleName: obj", "DEL SimpleName: maxIteratorSize", "DEL Assignment: =", "DEL SimpleName: hashCode", "DEL SimpleName: V", "DEL EnumConstantDeclaration", "DEL QualifiedName: Mode.EPHEMERAL", "DEL PrimitiveType: boolean", "DEL ReturnStatement", "DEL SimpleName: V", "DEL ThisExpression", "DEL SimpleName: serializer", "DEL SimpleName: mapper", "DEL IfStatement", "DEL SimpleType: Mode", "DEL SimpleName: String", "DEL SimpleName: V", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: mode", "DEL ParameterizedType: Schema<X>", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL Modifier: static", "DEL IfStatement", "DEL ThisExpression", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: obj", "DEL ReturnStatement", "DEL SimpleName: PStoreConfigBuilder", "DEL BooleanLiteral: false", "DEL PrimitiveType: int", "DEL EnumConstantDeclaration", "DEL SimpleName: name", "DEL SimpleName: V", "DEL Block", "DEL SimpleName: serializer", "DEL SimpleName: name", "DEL MethodDeclaration", "DEL SimpleName: PStoreConfigBuilder", "DEL NumberLiteral: 0", "DEL SimpleName: writeSchema", "DEL SimpleName: PStoreConfig", "DEL SimpleType: PStoreConfigBuilder", "DEL MethodInvocation", "DEL TypeParameter", "DEL SimpleName: V", "DEL ParameterizedType: Class<V>", "DEL Block", "DEL SimpleType: String", "DEL NullLiteral", "DEL SimpleName: V", "DEL SimpleName: valueSerializer", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: V", "DEL ExpressionStatement", "DEL SimpleName: PStoreConfigBuilder", "DEL ReturnStatement", "DEL SimpleType: V", "DEL SimpleName: Preconditions", "DEL SimpleName: mode", "DEL Modifier: public", "DEL MethodDeclaration", "DEL BooleanLiteral: false", "DEL SuperConstructorInvocation", "DEL Modifier: public", "DEL ConditionalExpression", "DEL SimpleType: X", "DEL FieldAccess", "DEL Modifier: public", "DEL QualifiedName: other.mode", "DEL SimpleName: obj", "DEL SimpleType: V", "DEL SimpleName: hashCode", "DEL SingleVariableDeclaration", "DEL SimpleName: Class", "DEL BooleanLiteral: false", "DEL VariableDeclarationFragment", "DEL ParameterizedType: PStoreConfig<V>", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleType: V", "DEL SimpleName: String", "DEL Block", "DEL TypeParameter", "DEL SimpleType: Schema", "DEL Assignment: =", "DEL SimpleName: PStoreConfigBuilder", "DEL NullLiteral", "DEL SimpleType: V", "DEL ExpressionStatement", "DEL SimpleName: Schema", "DEL VariableDeclarationFragment", "DEL SimpleType: Schema", "DEL SimpleName: maxIteratorSize", "DEL InfixExpression: +", "DEL SimpleName: obj", "DEL Modifier: public", "DEL SimpleName: mode", "DEL SimpleName: prime", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL SimpleType: PStoreConfig", "DEL NullLiteral", "DEL SimpleName: newJacksonBuilder", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL InfixExpression: !=", "DEL SimpleName: max", "DEL Block", "DEL SimpleType: PStoreConfig", "DEL SimpleName: Override", "DEL SimpleName: X", "DEL Block", "DEL Block", "DEL SimpleName: name", "DEL SimpleName: V", "DEL SimpleType: ObjectMapper", "DEL SimpleType: String", "DEL FieldAccess", "DEL SimpleName: getClass", "DEL Block", "DEL Block", "DEL SimpleName: prime", "DEL SimpleName: PStoreConfigBuilder", "DEL SimpleName: PStoreConfig", "DEL NumberLiteral: 1", "DEL Assignment: =", "DEL Modifier: private", "DEL SimpleType: Object", "DEL SimpleName: V", "DEL SimpleType: PStoreConfigBuilder", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL QualifiedName: other.maxIteratorSize", "DEL SimpleType: PStoreConfigBuilder", "DEL ClassInstanceCreation", "DEL TypeParameter", "DEL FieldAccess", "DEL SimpleName: valueSerializer", "DEL InfixExpression: !=", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL ThisExpression", "DEL MethodDeclaration", "DEL NumberLiteral: 0", "DEL MethodDeclaration", "DEL ThisExpression"]}]}}, {"PStoreConfig_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: org.apache.drill.exec.store.sys.serialize.JacksonSerializer(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: org.apache.drill.exec.store.sys.serialize.PClassSerializer(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.exec.store.sys.serialize.ProtoSerializer(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: com.dyuproject.protostuff.Schema(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: com.fasterxml.jackson.databind.ObjectMapper(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: com.google.common.base.Preconditions(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: com.google.protobuf.Message(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: com.google.protobuf.Message.Builder(31)", "Delete ImportDeclaration(32)", "Delete Modifier: public(33)", "Delete SimpleName: PStoreConfig(34)", "Delete SimpleName: V(35)", "Delete TypeParameter(36)", "Delete Modifier: private(37)", "Delete Modifier: final(38)", "Delete SimpleName: String(39)", "Delete SimpleType: String(40)", "Delete SimpleName: name(41)", "Delete VariableDeclarationFragment(42)", "Delete FieldDeclaration(43)", "Delete Modifier: private(44)", "Delete Modifier: final(45)", "Delete SimpleName: PClassSerializer(46)", "Delete SimpleType: PClassSerializer(47)", "Delete SimpleName: V(48)", "Delete SimpleType: V(49)", "Delete ParameterizedType: PClassSerializer<V>(50)", "Delete SimpleName: valueSerializer(51)", "Delete VariableDeclarationFragment(52)", "Delete FieldDeclaration(53)", "Delete Modifier: private(54)", "Delete Modifier: final(55)", "Delete SimpleName: Mode(56)", "Delete SimpleType: Mode(57)", "Delete SimpleName: mode(58)", "Delete VariableDeclarationFragment(59)", "Delete FieldDeclaration(60)", "Delete Modifier: private(61)", "Delete Modifier: final(62)", "Delete PrimitiveType: int(63)", "Delete SimpleName: maxIteratorSize(64)", "Delete VariableDeclarationFragment(65)", "Delete FieldDeclaration(66)", "Delete Modifier: public(67)", "Delete Modifier: static(68)", "Delete SimpleName: Mode(69)", "Delete SimpleName: PERSISTENT(70)", "Delete EnumConstantDeclaration(71)", "Delete SimpleName: EPHEMERAL(72)", "Delete EnumConstantDeclaration(73)", "Delete SimpleName: BLOB_PERSISTENT(74)", "Delete EnumConstantDeclaration(75)", "Delete EnumDeclaration(76)", "Delete Modifier: private(77)", "Delete SimpleName: PStoreConfig(78)", "Delete SimpleName: String(79)", "Delete SimpleType: String(80)", "Delete SimpleName: name(81)", "Delete SingleVariableDeclaration(82)", "Delete SimpleName: PClassSerializer(83)", "Delete SimpleType: PClassSerializer(84)", "Delete SimpleName: V(85)", "Delete SimpleType: V(86)", "Delete ParameterizedType: PClassSerializer<V>(87)", "Delete SimpleName: valueSerializer(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: Mode(90)", "Delete SimpleType: Mode(91)", "Delete SimpleName: mode(92)", "Delete SingleVariableDeclaration(93)", "Delete PrimitiveType: int(94)", "Delete SimpleName: maxIteratorSize(95)", "Delete SingleVariableDeclaration(96)", "Delete SuperConstructorInvocation(97)", "Delete ThisExpression(98)", "Delete SimpleName: name(99)", "Delete FieldAccess(100)", "Delete SimpleName: name(101)", "Delete Assignment: =(102)", "Delete ExpressionStatement(103)", "Delete ThisExpression(104)", "Delete SimpleName: valueSerializer(105)", "Delete FieldAccess(106)", "Delete SimpleName: valueSerializer(107)", "Delete Assignment: =(108)", "Delete ExpressionStatement(109)", "Delete ThisExpression(110)", "Delete SimpleName: mode(111)", "Delete FieldAccess(112)", "Delete SimpleName: mode(113)", "Delete Assignment: =(114)", "Delete ExpressionStatement(115)", "Delete ThisExpression(116)", "Delete SimpleName: maxIteratorSize(117)", "Delete FieldAccess(118)", "Delete SimpleName: Math(119)", "Delete SimpleName: abs(120)", "Delete SimpleName: maxIteratorSize(121)", "Delete MethodInvocation(122)", "Delete Assignment: =(123)", "Delete ExpressionStatement(124)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete Modifier: public(127)", "Delete SimpleName: Mode(128)", "Delete SimpleType: Mode(129)", "Delete SimpleName: getMode(130)", "Delete SimpleName: mode(131)", "Delete ReturnStatement(132)", "Delete Block(133)", "Delete MethodDeclaration(134)", "Delete Modifier: public(135)", "Delete PrimitiveType: int(136)", "Delete SimpleName: getMaxIteratorSize(137)", "Delete SimpleName: maxIteratorSize(138)", "Delete ReturnStatement(139)", "Delete Block(140)", "Delete MethodDeclaration(141)", "Delete Modifier: public(142)", "Delete SimpleName: String(143)", "Delete SimpleType: String(144)", "Delete SimpleName: getName(145)", "Delete SimpleName: name(146)", "Delete ReturnStatement(147)", "Delete Block(148)", "Delete MethodDeclaration(149)", "Delete Modifier: public(150)", "Delete SimpleName: PClassSerializer(151)", "Delete SimpleType: PClassSerializer(152)", "Delete SimpleName: V(153)", "Delete SimpleType: V(154)", "Delete ParameterizedType: PClassSerializer<V>(155)", "Delete SimpleName: getSerializer(156)", "Delete SimpleName: valueSerializer(157)", "Delete ReturnStatement(158)", "Delete Block(159)", "Delete MethodDeclaration(160)", "Delete Modifier: public(161)", "Delete Modifier: static(162)", "Delete SimpleName: V(163)", "Delete SimpleName: Message(164)", "Delete SimpleType: Message(165)", "Delete TypeParameter(166)", "Delete SimpleName: X(167)", "Delete SimpleName: Builder(168)", "Delete SimpleType: Builder(169)", "Delete TypeParameter(170)", "Delete SimpleName: PStoreConfigBuilder(171)", "Delete SimpleType: PStoreConfigBuilder(172)", "Delete SimpleName: V(173)", "Delete SimpleType: V(174)", "Delete ParameterizedType: PStoreConfigBuilder<V>(175)", "Delete SimpleName: newProtoBuilder(176)", "Delete SimpleName: Schema(177)", "Delete SimpleType: Schema(178)", "Delete SimpleName: V(179)", "Delete SimpleType: V(180)", "Delete ParameterizedType: Schema<V>(181)", "Delete SimpleName: writeSchema(182)", "Delete SingleVariableDeclaration(183)", "Delete SimpleName: Schema(184)", "Delete SimpleType: Schema(185)", "Delete SimpleName: X(186)", "Delete SimpleType: X(187)", "Delete ParameterizedType: Schema<X>(188)", "Delete SimpleName: readSchema(189)", "Delete SingleVariableDeclaration(190)", "Delete SimpleName: PStoreConfigBuilder(191)", "Delete SimpleType: PStoreConfigBuilder(192)", "Delete SimpleName: V(193)", "Delete SimpleType: V(194)", "Delete ParameterizedType: PStoreConfigBuilder<V>(195)", "Delete SimpleName: ProtoSerializer(196)", "Delete SimpleType: ProtoSerializer(197)", "Delete SimpleName: V(198)", "Delete SimpleType: V(199)", "Delete SimpleName: X(200)", "Delete SimpleType: X(201)", "Delete ParameterizedType: ProtoSerializer<V,X>(202)", "Delete SimpleName: writeSchema(203)", "Delete SimpleName: readSchema(204)", "Delete ClassInstanceCreation(205)", "Delete ClassInstanceCreation(206)", "Delete ReturnStatement(207)", "Delete Block(208)", "Delete MethodDeclaration(209)", "Delete Modifier: public(210)", "Delete Modifier: static(211)", "Delete SimpleName: V(212)", "Delete TypeParameter(213)", "Delete SimpleName: PStoreConfigBuilder(214)", "Delete SimpleType: PStoreConfigBuilder(215)", "Delete SimpleName: V(216)", "Delete SimpleType: V(217)", "Delete ParameterizedType: PStoreConfigBuilder<V>(218)", "Delete SimpleName: newJacksonBuilder(219)", "Delete SimpleName: ObjectMapper(220)", "Delete SimpleType: ObjectMapper(221)", "Delete SimpleName: mapper(222)", "Delete SingleVariableDeclaration(223)", "Delete SimpleName: Class(224)", "Delete SimpleType: Class(225)", "Delete SimpleName: V(226)", "Delete SimpleType: V(227)", "Delete ParameterizedType: Class<V>(228)", "Delete SimpleName: clazz(229)", "Delete SingleVariableDeclaration(230)", "Delete SimpleName: PStoreConfigBuilder(231)", "Delete SimpleType: PStoreConfigBuilder(232)", "Delete SimpleName: V(233)", "Delete SimpleType: V(234)", "Delete ParameterizedType: PStoreConfigBuilder<V>(235)", "Delete SimpleName: JacksonSerializer(236)", "Delete SimpleType: JacksonSerializer(237)", "Delete SimpleName: V(238)", "Delete SimpleType: V(239)", "Delete ParameterizedType: JacksonSerializer<V>(240)", "Delete SimpleName: mapper(241)", "Delete SimpleName: clazz(242)", "Delete ClassInstanceCreation(243)", "Delete ClassInstanceCreation(244)", "Delete ReturnStatement(245)", "Delete Block(246)", "Delete MethodDeclaration(247)", "Delete Modifier: public(248)", "Delete Modifier: static(249)", "Delete SimpleName: PStoreConfigBuilder(250)", "Delete SimpleName: V(251)", "Delete TypeParameter(252)", "Delete SimpleName: String(253)", "Delete SimpleType: String(254)", "Delete SimpleName: name(255)", "Delete VariableDeclarationFragment(256)", "Delete FieldDeclaration(257)", "Delete SimpleName: PClassSerializer(258)", "Delete SimpleType: PClassSerializer(259)", "Delete SimpleName: V(260)", "Delete SimpleType: V(261)", "Delete ParameterizedType: PClassSerializer<V>(262)", "Delete SimpleName: serializer(263)", "Delete VariableDeclarationFragment(264)", "Delete FieldDeclaration(265)", "Delete SimpleName: Mode(266)", "Delete SimpleType: Mode(267)", "Delete SimpleName: mode(268)", "Delete QualifiedName: Mode.PERSISTENT(269)", "Delete VariableDeclarationFragment(270)", "Delete FieldDeclaration(271)", "Delete PrimitiveType: int(272)", "Delete SimpleName: maxIteratorSize(273)", "Delete QualifiedName: Integer.MAX_VALUE(274)", "Delete VariableDeclarationFragment(275)", "Delete FieldDeclaration(276)", "Delete SimpleName: PStoreConfigBuilder(277)", "Delete SimpleName: PClassSerializer(278)", "Delete SimpleType: PClassSerializer(279)", "Delete SimpleName: V(280)", "Delete SimpleType: V(281)", "Delete ParameterizedType: PClassSerializer<V>(282)", "Delete SimpleName: serializer(283)", "Delete SingleVariableDeclaration(284)", "Delete SuperConstructorInvocation(285)", "Delete ThisExpression(286)", "Delete SimpleName: serializer(287)", "Delete FieldAccess(288)", "Delete SimpleName: serializer(289)", "Delete Assignment: =(290)", "Delete ExpressionStatement(291)", "Delete Block(292)", "Delete MethodDeclaration(293)", "Delete Modifier: public(294)", "Delete SimpleName: PStoreConfigBuilder(295)", "Delete SimpleType: PStoreConfigBuilder(296)", "Delete SimpleName: V(297)", "Delete SimpleType: V(298)", "Delete ParameterizedType: PStoreConfigBuilder<V>(299)", "Delete SimpleName: name(300)", "Delete SimpleName: String(301)", "Delete SimpleType: String(302)", "Delete SimpleName: name(303)", "Delete SingleVariableDeclaration(304)", "Delete ThisExpression(305)", "Delete SimpleName: name(306)", "Delete FieldAccess(307)", "Delete SimpleName: name(308)", "Delete Assignment: =(309)", "Delete ExpressionStatement(310)", "Delete ThisExpression(311)", "Delete ReturnStatement(312)", "Delete Block(313)", "Delete MethodDeclaration(314)", "Delete Modifier: public(315)", "Delete SimpleName: PStoreConfigBuilder(316)", "Delete SimpleType: PStoreConfigBuilder(317)", "Delete SimpleName: V(318)", "Delete SimpleType: V(319)", "Delete ParameterizedType: PStoreConfigBuilder<V>(320)", "Delete SimpleName: persist(321)", "Delete ThisExpression(322)", "Delete SimpleName: mode(323)", "Delete FieldAccess(324)", "Delete QualifiedName: Mode.PERSISTENT(325)", "Delete Assignment: =(326)", "Delete ExpressionStatement(327)", "Delete ThisExpression(328)", "Delete ReturnStatement(329)", "Delete Block(330)", "Delete MethodDeclaration(331)", "Delete Modifier: public(332)", "Delete SimpleName: PStoreConfigBuilder(333)", "Delete SimpleType: PStoreConfigBuilder(334)", "Delete SimpleName: V(335)", "Delete SimpleType: V(336)", "Delete ParameterizedType: PStoreConfigBuilder<V>(337)", "Delete SimpleName: ephemeral(338)", "Delete ThisExpression(339)", "Delete SimpleName: mode(340)", "Delete FieldAccess(341)", "Delete QualifiedName: Mode.EPHEMERAL(342)", "Delete Assignment: =(343)", "Delete ExpressionStatement(344)", "Delete ThisExpression(345)", "Delete ReturnStatement(346)", "Delete Block(347)", "Delete MethodDeclaration(348)", "Delete Modifier: public(349)", "Delete SimpleName: PStoreConfigBuilder(350)", "Delete SimpleType: PStoreConfigBuilder(351)", "Delete SimpleName: V(352)", "Delete SimpleType: V(353)", "Delete ParameterizedType: PStoreConfigBuilder<V>(354)", "Delete SimpleName: blob(355)", "Delete ThisExpression(356)", "Delete SimpleName: mode(357)", "Delete FieldAccess(358)", "Delete QualifiedName: Mode.BLOB_PERSISTENT(359)", "Delete Assignment: =(360)", "Delete ExpressionStatement(361)", "Delete ThisExpression(362)", "Delete ReturnStatement(363)", "Delete Block(364)", "Delete MethodDeclaration(365)", "Delete TextElement: Set the maximum size of the iterator.  Positive numbers start from the start of the list.  Negative numbers start from the end of the list.(366)", "Delete TagElement(367)", "Delete SimpleName: size(368)", "Delete TagElement: @param(369)", "Delete TagElement: @return(370)", "Delete Javadoc(371)", "Delete Modifier: public(372)", "Delete SimpleName: PStoreConfigBuilder(373)", "Delete SimpleType: PStoreConfigBuilder(374)", "Delete SimpleName: V(375)", "Delete SimpleType: V(376)", "Delete ParameterizedType: PStoreConfigBuilder<V>(377)", "Delete SimpleName: max(378)", "Delete PrimitiveType: int(379)", "Delete SimpleName: size(380)", "Delete SingleVariableDeclaration(381)", "Delete ThisExpression(382)", "Delete SimpleName: maxIteratorSize(383)", "Delete FieldAccess(384)", "Delete SimpleName: size(385)", "Delete Assignment: =(386)", "Delete ExpressionStatement(387)", "Delete ThisExpression(388)", "Delete ReturnStatement(389)", "Delete Block(390)", "Delete MethodDeclaration(391)", "Delete Modifier: public(392)", "Delete SimpleName: PStoreConfig(393)", "Delete SimpleType: PStoreConfig(394)", "Delete SimpleName: V(395)", "Delete SimpleType: V(396)", "Delete ParameterizedType: PStoreConfig<V>(397)", "Delete SimpleName: build(398)", "Delete SimpleName: Preconditions(399)", "Delete SimpleName: checkNotNull(400)", "Delete SimpleName: name(401)", "Delete MethodInvocation(402)", "Delete ExpressionStatement(403)", "Delete SimpleName: PStoreConfig(404)", "Delete SimpleType: PStoreConfig(405)", "Delete SimpleName: V(406)", "Delete SimpleType: V(407)", "Delete ParameterizedType: PStoreConfig<V>(408)", "Delete SimpleName: name(409)", "Delete SimpleName: serializer(410)", "Delete SimpleName: mode(411)", "Delete SimpleName: maxIteratorSize(412)", "Delete ClassInstanceCreation(413)", "Delete ReturnStatement(414)", "Delete Block(415)", "Delete MethodDeclaration(416)", "Delete TypeDeclaration: class(417)", "Delete SimpleName: Override(418)", "Delete MarkerAnnotation(419)", "Delete Modifier: public(420)", "Delete PrimitiveType: int(421)", "Delete SimpleName: hashCode(422)", "Delete Modifier: final(423)", "Delete PrimitiveType: int(424)", "Delete SimpleName: prime(425)", "Delete NumberLiteral: 31(426)", "Delete VariableDeclarationFragment(427)", "Delete VariableDeclarationStatement(428)", "Delete PrimitiveType: int(429)", "Delete SimpleName: result(430)", "Delete NumberLiteral: 1(431)", "Delete VariableDeclarationFragment(432)", "Delete VariableDeclarationStatement(433)", "Delete SimpleName: result(434)", "Delete SimpleName: prime(435)", "Delete SimpleName: result(436)", "Delete InfixExpression: *(437)", "Delete SimpleName: maxIteratorSize(438)", "Delete InfixExpression: +(439)", "Delete Assignment: =(440)", "Delete ExpressionStatement(441)", "Delete SimpleName: result(442)", "Delete SimpleName: prime(443)", "Delete SimpleName: result(444)", "Delete InfixExpression: *(445)", "Delete SimpleName: mode(446)", "Delete NullLiteral(447)", "Delete InfixExpression: ==(448)", "Delete ParenthesizedExpression(449)", "Delete NumberLiteral: 0(450)", "Delete SimpleName: mode(451)", "Delete SimpleName: hashCode(452)", "Delete MethodInvocation(453)", "Delete ConditionalExpression(454)", "Delete ParenthesizedExpression(455)", "Delete InfixExpression: +(456)", "Delete Assignment: =(457)", "Delete ExpressionStatement(458)", "Delete SimpleName: result(459)", "Delete SimpleName: prime(460)", "Delete SimpleName: result(461)", "Delete InfixExpression: *(462)", "Delete SimpleName: name(463)", "Delete NullLiteral(464)", "Delete InfixExpression: ==(465)", "Delete ParenthesizedExpression(466)", "Delete NumberLiteral: 0(467)", "Delete SimpleName: name(468)", "Delete SimpleName: hashCode(469)", "Delete MethodInvocation(470)", "Delete ConditionalExpression(471)", "Delete ParenthesizedExpression(472)", "Delete InfixExpression: +(473)", "Delete Assignment: =(474)", "Delete ExpressionStatement(475)", "Delete SimpleName: result(476)", "Delete SimpleName: prime(477)", "Delete SimpleName: result(478)", "Delete InfixExpression: *(479)", "Delete SimpleName: valueSerializer(480)", "Delete NullLiteral(481)", "Delete InfixExpression: ==(482)", "Delete ParenthesizedExpression(483)", "Delete NumberLiteral: 0(484)", "Delete SimpleName: valueSerializer(485)", "Delete SimpleName: hashCode(486)", "Delete MethodInvocation(487)", "Delete ConditionalExpression(488)", "Delete ParenthesizedExpression(489)", "Delete InfixExpression: +(490)", "Delete Assignment: =(491)", "Delete ExpressionStatement(492)", "Delete SimpleName: result(493)", "Delete ReturnStatement(494)", "Delete Block(495)", "Delete MethodDeclaration(496)", "Delete SimpleName: Override(497)", "Delete MarkerAnnotation(498)", "Delete Modifier: public(499)", "Delete PrimitiveType: boolean(500)", "Delete SimpleName: equals(501)", "Delete SimpleName: Object(502)", "Delete SimpleType: Object(503)", "Delete SimpleName: obj(504)", "Delete SingleVariableDeclaration(505)", "Delete ThisExpression(506)", "Delete SimpleName: obj(507)", "Delete InfixExpression: ==(508)", "Delete BooleanLiteral: true(509)", "Delete ReturnStatement(510)", "Delete Block(511)", "Delete IfStatement(512)", "Delete SimpleName: obj(513)", "Delete NullLiteral(514)", "Delete InfixExpression: ==(515)", "Delete BooleanLiteral: false(516)", "Delete ReturnStatement(517)", "Delete Block(518)", "Delete IfStatement(519)", "Delete SimpleName: getClass(520)", "Delete MethodInvocation(521)", "Delete SimpleName: obj(522)", "Delete SimpleName: getClass(523)", "Delete MethodInvocation(524)", "Delete InfixExpression: !=(525)", "Delete BooleanLiteral: false(526)", "Delete ReturnStatement(527)", "Delete Block(528)", "Delete IfStatement(529)", "Delete SimpleName: PStoreConfig(530)", "Delete SimpleType: PStoreConfig(531)", "Delete SimpleName: other(532)", "Delete SimpleName: PStoreConfig(533)", "Delete SimpleType: PStoreConfig(534)", "Delete SimpleName: obj(535)", "Delete CastExpression(536)", "Delete VariableDeclarationFragment(537)", "Delete VariableDeclarationStatement(538)", "Delete SimpleName: maxIteratorSize(539)", "Delete QualifiedName: other.maxIteratorSize(540)", "Delete InfixExpression: !=(541)", "Delete BooleanLiteral: false(542)", "Delete ReturnStatement(543)", "Delete Block(544)", "Delete IfStatement(545)", "Delete SimpleName: mode(546)", "Delete QualifiedName: other.mode(547)", "Delete InfixExpression: !=(548)", "Delete BooleanLiteral: false(549)", "Delete ReturnStatement(550)", "Delete Block(551)", "Delete IfStatement(552)", "Delete SimpleName: name(553)", "Delete NullLiteral(554)", "Delete InfixExpression: ==(555)", "Delete QualifiedName: other.name(556)", "Delete NullLiteral(557)", "Delete InfixExpression: !=(558)", "Delete BooleanLiteral: false(559)", "Delete ReturnStatement(560)", "Delete Block(561)", "Delete IfStatement(562)", "Delete Block(563)", "Delete SimpleName: name(564)", "Delete SimpleName: equals(565)", "Delete QualifiedName: other.name(566)", "Delete MethodInvocation(567)", "Delete PrefixExpression: !(568)", "Delete BooleanLiteral: false(569)", "Delete ReturnStatement(570)", "Delete Block(571)", "Delete IfStatement(572)", "Delete IfStatement(573)", "Delete SimpleName: valueSerializer(574)", "Delete NullLiteral(575)", "Delete InfixExpression: ==(576)", "Delete QualifiedName: other.valueSerializer(577)", "Delete NullLiteral(578)", "Delete InfixExpression: !=(579)", "Delete BooleanLiteral: false(580)", "Delete ReturnStatement(581)", "Delete Block(582)", "Delete IfStatement(583)", "Delete Block(584)", "Delete SimpleName: valueSerializer(585)", "Delete SimpleName: equals(586)", "Delete QualifiedName: other.valueSerializer(587)", "Delete MethodInvocation(588)", "Delete PrefixExpression: !(589)", "Delete BooleanLiteral: false(590)", "Delete ReturnStatement(591)", "Delete Block(592)", "Delete IfStatement(593)", "Delete IfStatement(594)", "Delete BooleanLiteral: true(595)", "Delete ReturnStatement(596)", "Delete Block(597)", "Delete MethodDeclaration(598)", "Delete TypeDeclaration: class(599)"]}}, {"StaticDrillTable_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.pojo.PojoDataType", "DEL ImportDeclaration"]}]}}, {"StaticDrillTable_diff": {"operations": ["Move ImportDeclaration(26) into CompilationUnit(96) at 1", "Move ImportDeclaration(28) into CompilationUnit(96) at 2", "Delete QualifiedName: org.apache.drill.exec.store.pojo.PojoDataType(23)", "Delete ImportDeclaration(24)"]}}, {"SystemTablePlugin_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 19"]}]}}, {"SystemTablePlugin_diff": {"operations": ["Move ImportDeclaration(50) into CompilationUnit(366) at 19"]}}, {"SystemTableScan_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 4"]}]}}, {"SystemTableScan_diff": {"operations": ["Move ImportDeclaration(52) into CompilationUnit(422) at 4", "Move ImportDeclaration(54) into CompilationUnit(422) at 6", "Move ImportDeclaration(56) into CompilationUnit(422) at 7", "Move ImportDeclaration(58) into CompilationUnit(422) at 8"]}}, {"ThreadsIterator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 6"]}]}}, {"ThreadsIterator_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(181) at 6", "Move ImportDeclaration(20) into CompilationUnit(181) at 6"]}}, {"VersionIterator_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Enumeration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.jar.Manifest", "DEL ImportDeclaration"]}]}}, {"VersionIterator_diff": {"operations": ["Delete QualifiedName: java.util.Enumeration(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: java.util.jar.Manifest(27)", "Delete ImportDeclaration(28)"]}}, {"Foreman_cluster": {"actions": [{"root": "INS TryStatement to Block at 17", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS TryStatement to Block at 17", "INS Block to TryStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 1", "INS StringLiteral: \"unable to close query manager\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: queryManager to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 4", "operations": ["INS MethodInvocation to ClassInstanceCreation at 4", "INS SimpleName: drillbitContext to MethodInvocation at 0", "INS SimpleName: getClusterCoordinator to MethodInvocation at 1"]}, {"root": "UPDATE from getPersistentStoreProvider to getStoreProvider", "operations": ["UPD SimpleName: getPersistentStoreProvider from getPersistentStoreProvider to getStoreProvider"]}]}}, {"Foreman_diff": {"operations": ["Insert TryStatement(2501) into Block(2512) at 17", "Insert Block(2487) into TryStatement(2501) at 0", "Insert CatchClause(2500) into TryStatement(2501) at 1", "Insert MethodInvocation(506) into ClassInstanceCreation(509) at 4", "Insert ExpressionStatement(2486) into Block(2487) at 0", "Insert SingleVariableDeclaration(2492) into CatchClause(2500) at 0", "Insert Block(2499) into CatchClause(2500) at 1", "Update SimpleName: getPersistentStoreProvider(502) to getStoreProvider", "Insert SimpleName: drillbitContext(504) into MethodInvocation(506) at 0", "Insert SimpleName: getClusterCoordinator(505) into MethodInvocation(506) at 1", "Insert MethodInvocation(2485) into ExpressionStatement(2486) at 0", "Insert Modifier: final(2488) into SingleVariableDeclaration(2492) at 0", "Insert SimpleType: Exception(2490) into SingleVariableDeclaration(2492) at 1", "Insert SimpleName: e(2491) into SingleVariableDeclaration(2492) at 2", "Insert ExpressionStatement(2498) into Block(2499) at 0", "Insert SimpleName: queryManager(2483) into MethodInvocation(2485) at 0", "Insert SimpleName: close(2484) into MethodInvocation(2485) at 1", "Insert SimpleName: Exception(2489) into SimpleType: Exception(2490) at 0", "Insert MethodInvocation(2497) into ExpressionStatement(2498) at 0", "Insert SimpleName: logger(2493) into MethodInvocation(2497) at 0", "Insert SimpleName: warn(2494) into MethodInvocation(2497) at 1", "Insert StringLiteral: \"unable to close query manager\"(2495) into MethodInvocation(2497) at 2", "Insert SimpleName: e(2496) into MethodInvocation(2497) at 3"]}}, {"QueryManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStore to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "UPDATE from java.io.IOException to org.apache.drill.common.AutoCloseables", "operations": ["UPD QualifiedName: java.io.IOException from java.io.IOException to org.apache.drill.common.AutoCloseables"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreConfig"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "INS SimpleType: AutoCloseable to TypeDeclaration: class at 3", "operations": ["INS SimpleName: AutoCloseable to SimpleType: AutoCloseable at 0", "INS SimpleType: AutoCloseable to TypeDeclaration: class at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: e to SingleVariableDeclaration at 2", "INS SimpleType: Exception to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: ClusterCoordinator to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: coordinator to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: ClusterCoordinator to SimpleType: ClusterCoordinator at 0", "INS CatchClause to TryStatement at 1", "INS Block to MethodDeclaration at 8", "INS TryStatement to Block at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 32", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: close to MethodDeclaration at 3"]}, {"root": "UPDATE from PStoreConfig<QueryProfile> to PersistentStoreConfig<QueryProfile>", "operations": ["UPD ParameterizedType: PStoreConfig<QueryProfile> from PStoreConfig<QueryProfile> to PersistentStoreConfig<QueryProfile>"]}, {"root": "UPDATE from PStoreConfig<QueryInfo> to TransientStoreConfig<QueryInfo>", "operations": ["UPD ParameterizedType: PStoreConfig<QueryInfo> from PStoreConfig<QueryInfo> to TransientStoreConfig<QueryInfo>"]}, {"root": "UPDATE from PStore<QueryProfile> to PersistentStore<QueryProfile>", "operations": ["UPD ParameterizedType: PStore<QueryProfile> from PStore<QueryProfile> to PersistentStore<QueryProfile>"]}, {"root": "UPDATE from PStore<QueryInfo> to TransientStore<QueryInfo>", "operations": ["UPD ParameterizedType: PStore<QueryInfo> from PStore<QueryInfo> to TransientStore<QueryInfo>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV SimpleName: QueryManager to MethodDeclaration at 1"]}, {"root": "UPDATE from PStoreConfig to PersistentStoreConfig", "operations": ["UPD SimpleName: PStoreConfig from PStoreConfig to PersistentStoreConfig", "UPD SimpleType: PStoreConfig from PStoreConfig to PersistentStoreConfig", "UPD SimpleName: PStoreConfig from PStoreConfig to PersistentStoreConfig"]}, {"root": "UPDATE from PStoreConfig to TransientStoreConfig", "operations": ["UPD SimpleName: PStoreConfig from PStoreConfig to TransientStoreConfig", "UPD SimpleName: PStoreConfig from PStoreConfig to TransientStoreConfig", "UPD SimpleType: PStoreConfig from PStoreConfig to TransientStoreConfig"]}, {"root": "UPDATE from PStore to PersistentStore", "operations": ["UPD SimpleName: PStore from PStore to PersistentStore", "UPD SimpleType: PStore from PStore to PersistentStore"]}, {"root": "UPDATE from profilePStore to profileStore", "operations": ["UPD SimpleName: profilePStore from profilePStore to profileStore", "UPD SimpleName: profilePStore from profilePStore to profileStore", "UPD SimpleName: profilePStore from profilePStore to profileStore"]}, {"root": "UPDATE from PStore to TransientStore", "operations": ["UPD SimpleName: PStore from PStore to TransientStore", "UPD SimpleType: PStore from PStore to TransientStore"]}, {"root": "UPDATE from profileEStore to transientProfiles", "operations": ["UPD SimpleName: profileEStore from profileEStore to transientProfiles", "UPD SimpleName: profileEStore from profileEStore to transientProfiles", "UPD SimpleName: profileEStore from profileEStore to transientProfiles", "UPD SimpleName: profileEStore from profileEStore to transientProfiles"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from pStoreProvider to storeProvider", "operations": ["UPD SimpleName: pStoreProvider from pStoreProvider to storeProvider", "UPD SimpleName: pStoreProvider from pStoreProvider to storeProvider"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleName: IOException from IOException to Exception"]}, {"root": "MOVE from SimpleType: Exception", "operations": ["MOV SimpleName: IOException to SimpleType: Exception at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV Block to CatchClause at 1"]}, {"root": "UPDATE from pStoreProvider to coordinator", "operations": ["UPD SimpleName: pStoreProvider from pStoreProvider to coordinator"]}, {"root": "UPDATE from getStore to getOrCreateTransientStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateTransientStore"]}, {"root": "UPDATE from getStore to getOrCreateStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateStore"]}, {"root": "UPDATE from delete to remove", "operations": ["UPD SimpleName: delete from delete to remove"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: max", "DEL NumberLiteral: 100"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: ephemeral", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: IOException", "DEL TryStatement", "DEL Block", "DEL SimpleName: e", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL Block", "DEL Modifier: final"]}]}}, {"QueryManager_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(1869) at 7", "Insert ImportDeclaration(36) into CompilationUnit(1869) at 10", "Insert ImportDeclaration(38) into CompilationUnit(1869) at 11", "Insert ImportDeclaration(40) into CompilationUnit(1869) at 12", "Update QualifiedName: java.io.IOException(19) to org.apache.drill.common.AutoCloseables", "Insert QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator(35) into ImportDeclaration(36) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStore(37) into ImportDeclaration(38) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStoreConfig(39) into ImportDeclaration(40) at 0", "Update QualifiedName: org.apache.drill.exec.store.sys.PStore(69) to org.apache.drill.exec.store.sys.PersistentStore", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(71) to org.apache.drill.exec.store.sys.PersistentStoreConfig", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(73) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Insert SimpleType: AutoCloseable(99) into TypeDeclaration: class(1868) at 3", "Insert MethodDeclaration(391) into TypeDeclaration: class(1868) at 22", "Insert MethodDeclaration(882) into TypeDeclaration: class(1868) at 31", "Insert SimpleName: AutoCloseable(98) into SimpleType: AutoCloseable(99) at 0", "Update ParameterizedType: PStoreConfig<QueryProfile>(113) to PersistentStoreConfig<QueryProfile>", "Update ParameterizedType: PStoreConfig<QueryInfo>(139) to TransientStoreConfig<QueryInfo>", "Update ParameterizedType: PStore<QueryProfile>(241) to PersistentStore<QueryProfile>", "Update ParameterizedType: PStore<QueryInfo>(251) to TransientStore<QueryInfo>", "Move Modifier: public(296) into MethodDeclaration(391) at 0", "Move SimpleName: QueryManager(297) into MethodDeclaration(391) at 1", "Move SingleVariableDeclaration(302) into MethodDeclaration(391) at 2", "Move SingleVariableDeclaration(307) into MethodDeclaration(391) at 3", "Move SingleVariableDeclaration(312) into MethodDeclaration(391) at 4", "Insert SingleVariableDeclaration(320) into MethodDeclaration(391) at 5", "Move SingleVariableDeclaration(317) into MethodDeclaration(391) at 6", "Move SingleVariableDeclaration(322) into MethodDeclaration(391) at 7", "Insert Block(390) into MethodDeclaration(391) at 8", "Insert MarkerAnnotation(875) into MethodDeclaration(882) at 0", "Insert Modifier: public(876) into MethodDeclaration(882) at 1", "Insert PrimitiveType: void(877) into MethodDeclaration(882) at 2", "Insert SimpleName: close(878) into MethodDeclaration(882) at 3", "Insert SimpleType: Exception(880) into MethodDeclaration(882) at 4", "Insert Block(881) into MethodDeclaration(882) at 5", "Update SimpleType: PStoreConfig(110) to PersistentStoreConfig", "Update SimpleType: PStoreConfig(136) to TransientStoreConfig", "Update SimpleType: PStore(238) to PersistentStore", "Update SimpleName: profilePStore(242) to profileStore", "Update SimpleType: PStore(248) to TransientStore", "Update SimpleName: profileEStore(252) to transientProfiles", "Update SimpleType: PStoreProvider(310) to PersistentStoreProvider", "Update SimpleName: pStoreProvider(311) to storeProvider", "Insert Modifier: final(316) into SingleVariableDeclaration(320) at 0", "Insert SimpleType: ClusterCoordinator(318) into SingleVariableDeclaration(320) at 1", "Insert SimpleName: coordinator(319) into SingleVariableDeclaration(320) at 2", "Move ExpressionStatement(328) into Block(390) at 0", "Move ExpressionStatement(334) into Block(390) at 1", "Move ExpressionStatement(340) into Block(390) at 2", "Move ExpressionStatement(346) into Block(390) at 3", "Move ExpressionStatement(353) into Block(390) at 4", "Insert TryStatement(382) into Block(390) at 5", "Move ExpressionStatement(367) into Block(390) at 6", "Insert SimpleName: Override(874) into MarkerAnnotation(875) at 0", "Update SimpleName: IOException(370) to Exception", "Move SimpleName: IOException(370) into SimpleType: Exception(880) at 0", "Update SimpleName: PStoreConfig(109) to PersistentStoreConfig", "Move MethodInvocation(124) into MethodInvocation(134) at 0", "Update SimpleName: PStoreConfig(135) to TransientStoreConfig", "Move MethodInvocation(148) into MethodInvocation(155) at 0", "Update SimpleName: PStore(237) to PersistentStore", "Update SimpleName: PStore(247) to TransientStore", "Update SimpleName: PStoreProvider(309) to PersistentStoreProvider", "Insert SimpleName: ClusterCoordinator(317) into SimpleType: ClusterCoordinator(318) at 0", "Insert Block(369) into TryStatement(382) at 0", "Insert CatchClause(381) into TryStatement(382) at 1", "Move ExpressionStatement(360) into Block(369) at 0", "Insert SingleVariableDeclaration(374) into CatchClause(381) at 0", "Move Block(379) into CatchClause(381) at 1", "Update SimpleName: profileEStore(361) to transientProfiles", "Update SimpleName: PStoreConfig(141) to TransientStoreConfig", "Insert Modifier: final(370) into SingleVariableDeclaration(374) at 0", "Insert SimpleType: Exception(372) into SingleVariableDeclaration(374) at 1", "Insert SimpleName: e(373) into SingleVariableDeclaration(374) at 2", "Update SimpleName: pStoreProvider(362) to coordinator", "Update SimpleName: getStore(363) to getOrCreateTransientStore", "Update SimpleName: profileEStore(1019) to transientProfiles", "Update SimpleName: PStoreConfig(115) to PersistentStoreConfig", "Update SimpleName: profilePStore(354) to profileStore", "Insert SimpleName: Exception(371) into SimpleType: Exception(372) at 0", "Update SimpleName: profilePStore(1073) to profileStore", "Update SimpleName: pStoreProvider(355) to storeProvider", "Update SimpleName: getStore(356) to getOrCreateStore", "Update SimpleName: profileEStore(1033) to transientProfiles", "Update SimpleName: delete(1034) to remove", "Delete SimpleName: max(125)", "Delete NumberLiteral: 100(126)", "Delete MethodInvocation(127)", "Delete SimpleName: ephemeral(149)", "Delete MethodInvocation(150)", "Delete Block(368)", "Delete Modifier: final(369)", "Delete SimpleType: IOException(371)", "Delete SimpleName: e(372)", "Delete SingleVariableDeclaration(373)", "Delete CatchClause(380)", "Delete TryStatement(381)", "Delete Block(382)", "Delete MethodDeclaration(383)"]}}, {"HBasePStoreProvider_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreRegistry to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry from org.apache.drill.exec.store.sys.PStoreRegistry to org.apache.drill.exec.store.sys.PersistentStoreRegistry"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TextElement:  will be removed in 1.7 to TagElement: @deprecated at 0", "INS TextElement: use  to TagElement: @deprecated at 1", "INS TagElement: @link to TagElement: @deprecated at 2", "INS SimpleName: HBasePersistentStoreProvider to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement:  instead. to TagElement: @deprecated at 3", "INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: Kept for possible references to old class name in configuration. to TagElement at 0"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 1", "operations": ["INS Modifier: public to TypeDeclaration: class at 1"]}, {"root": "INS SimpleName: HBasePStoreProvider to TypeDeclaration: class at 2", "operations": ["INS SimpleName: HBasePStoreProvider to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: HBasePersistentStoreProvider to TypeDeclaration: class at 3", "operations": ["INS SimpleType: HBasePersistentStoreProvider to TypeDeclaration: class at 3"]}, {"root": "UPDATE from ZkEStoreProvider to HBasePersistentStoreProvider", "operations": ["UPD SimpleName: ZkEStoreProvider from ZkEStoreProvider to HBasePersistentStoreProvider"]}, {"root": "MOVE from SimpleType: HBasePersistentStoreProvider", "operations": ["MOV SimpleName: ZkEStoreProvider to SimpleType: HBasePersistentStoreProvider at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: registry to SuperConstructorInvocation at 0"]}, {"root": "INS TextElement: <p/> to TagElement at 7", "operations": ["INS TextElement: <p/> to TagElement at 7"]}, {"root": "INS TextElement: <p/> to TagElement at 9", "operations": ["INS TextElement: <p/> to TagElement at 9"]}, {"root": "UPDATE from PStoreRegistry to PersistentStoreRegistry", "operations": ["UPD SimpleType: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry", "UPD SimpleName: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.common.exceptions.DrillRuntimeException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.coord.zk.ZKClusterCoordinator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.hbase.DrillHBaseConstants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.local.LocalEStoreProvider"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.zk.ZkEStoreProvider", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configuration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HConstants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HTableDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HConnection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HConnectionManager", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HTableInterface"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.annotations.VisibleForTesting", "DEL ImportDeclaration"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: HBasePStoreProvider", "operations": ["DEL SimpleName: HBasePStoreProvider"]}, {"root": "DEL SimpleType: PStoreProvider", "operations": ["DEL SimpleName: PStoreProvider", "DEL SimpleType: PStoreProvider"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SimpleName: getLogger", "DEL SimpleName: HBasePStoreProvider", "DEL TypeLiteral", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: logger", "DEL QualifiedName: org.slf4j.Logger", "DEL Modifier: static", "DEL FieldDeclaration", "DEL SimpleType: HBasePStoreProvider", "DEL Modifier: final", "DEL SimpleType: org.slf4j.Logger"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: toBytes", "DEL StringLiteral: \"s\"", "DEL Modifier: static", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL Dimension", "DEL FieldDeclaration", "DEL ArrayType: byte[]", "DEL SimpleName: FAMILY"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL ArrayType: byte[]", "DEL Modifier: static", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \"d\"", "DEL PrimitiveType: byte", "DEL SimpleName: QUALIFIER", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL Dimension"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: String", "DEL FieldDeclaration", "DEL Modifier: final", "DEL Modifier: private", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: storeTableName"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: Configuration", "DEL FieldDeclaration", "DEL SimpleName: hbaseConf", "DEL SimpleName: Configuration", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: connection", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleType: HConnection", "DEL SimpleName: HConnection", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: HTableInterface", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: HTableInterface", "DEL SimpleName: table", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: boolean", "DEL Modifier: private", "DEL Modifier: final", "DEL SimpleName: zkAvailable", "DEL VariableDeclarationFragment", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: LocalEStoreProvider", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL FieldDeclaration", "DEL SimpleName: LocalEStoreProvider", "DEL SimpleName: localEStoreProvider", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: ZkEStoreProvider", "DEL SimpleName: zkEStoreProvider", "DEL FieldDeclaration", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL Modifier: final"]}, {"root": "DEL Block", "operations": ["DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleType: ZKClusterCoordinator", "DEL Assignment: =", "DEL SimpleType: ClusterCoordinator", "DEL ExpressionStatement", "DEL SimpleType: ZkEStoreProvider", "DEL FieldAccess", "DEL ExpressionStatement", "DEL CastExpression", "DEL ParameterizedType: Map<String,Object>", "DEL SimpleType: String", "DEL SimpleName: coord", "DEL SimpleName: hbaseConf", "DEL ThisExpression", "DEL SimpleName: config", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: LocalEStoreProvider", "DEL SimpleName: getValue", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL SimpleName: Map", "DEL IfStatement", "DEL SimpleName: localEStoreProvider", "DEL SimpleName: registry", "DEL ThisExpression", "DEL FieldAccess", "DEL StringLiteral: \"drill-hbase-persistent-store-client\"", "DEL Assignment: =", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleType: Object", "DEL StringLiteral: \"unchecked\"", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleType: LocalEStoreProvider", "DEL SimpleName: zkAvailable", "DEL Assignment: =", "DEL SimpleType: String", "DEL SimpleName: create", "DEL SimpleName: Map", "DEL ParenthesizedExpression", "DEL SimpleName: hbaseConf", "DEL SimpleType: Map", "DEL SimpleName: valueOf", "DEL FieldAccess", "DEL ClassInstanceCreation", "DEL SimpleName: entry", "DEL BooleanLiteral: false", "DEL SimpleName: Object", "DEL SimpleName: entry", "DEL Assignment: =", "DEL FieldAccess", "DEL Block", "DEL SimpleName: getConfig", "DEL SimpleName: entry", "DEL NullLiteral", "DEL Block", "DEL SimpleType: Object", "DEL SimpleName: registry", "DEL QualifiedName: DrillHBaseConstants.SYS_STORE_PROVIDER_HBASE_CONFIG", "DEL SimpleName: set", "DEL ParameterizedType: Map<String,Object>", "DEL SingleMemberAnnotation", "DEL FieldAccess", "DEL Block", "DEL IfStatement", "DEL ThisExpression", "DEL ParameterizedType: Map.Entry<String,Object>", "DEL SimpleName: localEStoreProvider", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: !=", "DEL SimpleName: HBaseConfiguration", "DEL VariableDeclarationFragment", "DEL QualifiedName: HConstants.HBASE_CLIENT_INSTANCE_ID", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: Object", "DEL SimpleType: Map.Entry", "DEL SimpleName: config", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: config", "DEL SimpleName: getClusterCoordinator", "DEL ThisExpression", "DEL SimpleType: ZKClusterCoordinator", "DEL FieldAccess", "DEL SimpleName: Object", "DEL SimpleName: String", "DEL SimpleName: getString", "DEL SimpleName: getClusterCoordinator", "DEL SimpleName: zkEStoreProvider", "DEL ExpressionStatement", "DEL SimpleName: zkAvailable", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleName: getKey", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL Assignment: =", "DEL QualifiedName: Map.Entry", "DEL SimpleName: entrySet", "DEL SimpleName: String", "DEL SimpleName: getCurator", "DEL SimpleName: registry", "DEL Assignment: =", "DEL SimpleName: getAnyRef", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: storeTableName", "DEL SimpleName: coord", "DEL Block", "DEL ExpressionStatement", "DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: String", "DEL SimpleName: hbaseConf", "DEL SimpleName: ClusterCoordinator", "DEL SimpleName: getConfig", "DEL ClassInstanceCreation", "DEL SimpleName: ZKClusterCoordinator", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: zkEStoreProvider", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: registry", "DEL ParenthesizedExpression", "DEL QualifiedName: DrillHBaseConstants.SYS_STORE_PROVIDER_HBASE_TABLE", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: ZKClusterCoordinator", "DEL Assignment: =", "DEL MethodInvocation", "DEL ThisExpression", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InstanceofExpression", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: ZkEStoreProvider", "DEL ThisExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: VisibleForTesting", "DEL SimpleName: hbaseConf", "DEL SimpleName: zkAvailable", "DEL SimpleName: HBasePStoreProvider", "DEL ThisExpression", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ThisExpression", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL FieldAccess", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleType: Configuration", "DEL SimpleName: storeTableName", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL FieldAccess", "DEL FieldAccess", "DEL SimpleName: localEStoreProvider", "DEL Assignment: =", "DEL SimpleName: conf", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: zkEStoreProvider", "DEL BooleanLiteral: false", "DEL SimpleName: conf", "DEL SimpleType: String", "DEL FieldAccess", "DEL SimpleType: LocalEStoreProvider", "DEL SimpleName: storeTableName", "DEL ThisExpression", "DEL SimpleName: LocalEStoreProvider", "DEL Assignment: =", "DEL NullLiteral", "DEL SimpleName: Configuration", "DEL FieldAccess", "DEL Block", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: storeTableName", "DEL SimpleName: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: localEStoreProvider", "DEL MethodInvocation", "DEL SwitchCase", "DEL SimpleName: V", "DEL TypeParameter", "DEL ReturnStatement", "DEL Block", "DEL FieldAccess", "DEL SimpleName: getStore", "DEL SimpleType: PStore", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleType: V", "DEL ParameterizedType: PStore<V>", "DEL ThrowStatement", "DEL SimpleName: IOException", "DEL SimpleType: V", "DEL SimpleName: V", "DEL IfStatement", "DEL SwitchCase", "DEL SimpleName: PStore", "DEL SimpleName: PStoreConfig", "DEL SimpleName: EPHEMERAL", "DEL SingleVariableDeclaration", "DEL ParameterizedType: HBasePStore<V>", "DEL SimpleType: PStoreConfig", "DEL Block", "DEL SimpleName: config", "DEL SimpleName: config", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleType: HBasePStore", "DEL SimpleName: IllegalStateException", "DEL SwitchStatement", "DEL SwitchCase", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: config", "DEL SimpleType: V", "DEL SimpleName: getStore", "DEL SimpleName: table", "DEL MethodInvocation", "DEL SimpleName: zkAvailable", "DEL SwitchCase", "DEL FieldAccess", "DEL SimpleName: BLOB_PERSISTENT", "DEL SimpleName: zkEStoreProvider", "DEL ReturnStatement", "DEL SimpleName: PERSISTENT", "DEL SimpleName: HBasePStore", "DEL SimpleName: config", "DEL ThisExpression", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL SimpleName: getStore", "DEL SimpleName: V", "DEL SimpleName: V", "DEL ThisExpression", "DEL SimpleName: getMode", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL SimpleName: config", "DEL SimpleType: IllegalStateException", "DEL MarkerAnnotation", "DEL SimpleType: IOException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: desc", "DEL SimpleName: tableExists", "DEL ExpressionStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: desc", "DEL SimpleName: connection", "DEL MethodDeclaration", "DEL NumberLiteral: 1", "DEL SimpleName: table", "DEL SimpleName: HTableDescriptor", "DEL SimpleName: Bytes", "DEL ThisExpression", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: storeTableName", "DEL SingleMemberAnnotation", "DEL SimpleName: setMaxVersions", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL SimpleType: HTableDescriptor", "DEL ExpressionStatement", "DEL Block", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: HTableDescriptor", "DEL SimpleName: getTableDescriptor", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL PrefixExpression: !", "DEL Modifier: public", "DEL SimpleName: createConnection", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: addFamily", "DEL MethodInvocation", "DEL SimpleType: HBaseAdmin", "DEL StringLiteral: \"deprecation\"", "DEL PrefixExpression: !", "DEL VariableDeclarationExpression", "DEL SimpleName: SuppressWarnings", "DEL IfStatement", "DEL StringLiteral: \" specified as persistent store exists but does not contain column family: \"", "DEL SimpleName: storeTableName", "DEL SimpleName: hasFamily", "DEL SimpleName: connection", "DEL ExpressionStatement", "DEL SimpleType: HColumnDescriptor", "DEL SimpleName: admin", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: getTable", "DEL SimpleName: FAMILY", "DEL ExpressionStatement", "DEL StringLiteral: \"The HBase table \"", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL MarkerAnnotation", "DEL TryStatement", "DEL SimpleName: HTableDescriptor", "DEL SimpleName: connection", "DEL SimpleName: table", "DEL SimpleName: Bytes", "DEL Assignment: =", "DEL SimpleName: FAMILY", "DEL SimpleName: admin", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL SimpleName: admin", "DEL SimpleName: toString", "DEL ThrowStatement", "DEL SimpleName: DrillRuntimeException", "DEL SimpleName: HConnectionManager", "DEL SimpleName: storeTableName", "DEL Block", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: FAMILY", "DEL SimpleName: desc", "DEL SimpleName: storeTableName", "DEL SimpleType: HTableDescriptor", "DEL SimpleName: HColumnDescriptor", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: admin", "DEL SimpleName: HTableDescriptor", "DEL PrimitiveType: void", "DEL SimpleName: desc", "DEL SimpleName: setAutoFlush", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: desc", "DEL SimpleName: Override", "DEL SimpleName: start", "DEL IfStatement", "DEL FieldAccess", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleType: IOException", "DEL SimpleName: storeTableName", "DEL SimpleName: createTable", "DEL SimpleName: hbaseConf", "DEL SimpleType: DrillRuntimeException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL ThisExpression", "DEL PrefixExpression: !", "DEL SimpleType: IOException", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL Block", "DEL Block", "DEL SimpleName: logger", "DEL TryStatement", "DEL MethodInvocation", "DEL CatchClause", "DEL ThisExpression", "DEL FieldAccess", "DEL StringLiteral: \"Caught exception while closing HBase table.\"", "DEL SimpleName: close", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: IOException", "DEL FieldAccess", "DEL SimpleName: logger", "DEL SimpleName: isClosed", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: connection", "DEL StringLiteral: \"Caught exception while closing HBase connection.\"", "DEL FieldAccess", "DEL Block", "DEL SimpleName: table", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL SimpleName: connection", "DEL ThisExpression", "DEL SimpleName: warn", "DEL ThisExpression", "DEL FieldAccess", "DEL TryStatement", "DEL Modifier: synchronized", "DEL SimpleName: warn", "DEL MarkerAnnotation", "DEL InfixExpression: !=", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: connection", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: connection", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL Block", "DEL NullLiteral", "DEL NullLiteral", "DEL ThisExpression", "DEL Block", "DEL SimpleName: e", "DEL Modifier: public", "DEL Block", "DEL FieldAccess", "DEL SimpleName: table", "DEL SimpleName: IOException", "DEL CatchClause", "DEL SimpleName: table", "DEL SimpleName: close", "DEL IfStatement", "DEL InfixExpression: !=", "DEL SimpleName: close", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL FieldAccess", "DEL ThisExpression", "DEL MethodInvocation"]}]}}, {"HBasePStoreProvider_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry(35) to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "Insert Javadoc(29) into TypeDeclaration: class(44) at 0", "Insert Modifier: public(30) into TypeDeclaration: class(44) at 1", "Insert SimpleName: HBasePStoreProvider(31) into TypeDeclaration: class(44) at 2", "Insert SimpleType: HBasePersistentStoreProvider(33) into TypeDeclaration: class(44) at 3", "Insert TagElement(22) into Javadoc(29) at 0", "Insert TagElement: @deprecated(28) into Javadoc(29) at 1", "Update SimpleName: ZkEStoreProvider(144) to HBasePersistentStoreProvider", "Move SimpleName: ZkEStoreProvider(144) into SimpleType: HBasePersistentStoreProvider(33) at 0", "Insert Block(42) into MethodDeclaration(43) at 3", "Insert TextElement: <p/>(7) into TagElement(15) at 7", "Insert TextElement: <p/>(9) into TagElement(15) at 9", "Insert TextElement: Kept for possible references to old class name in configuration.(21) into TagElement(22) at 0", "Insert TextElement:  will be removed in 1.7(23) into TagElement: @deprecated(28) at 0", "Insert TextElement: use (24) into TagElement: @deprecated(28) at 1", "Insert TagElement: @link(26) into TagElement: @deprecated(28) at 2", "Insert TextElement:  instead.(27) into TagElement: @deprecated(28) at 3", "Update SimpleType: PStoreRegistry(152) to PersistentStoreRegistry", "Insert SuperConstructorInvocation(41) into Block(42) at 0", "Insert SimpleName: HBasePersistentStoreProvider(25) into TagElement: @link(26) at 0", "Update SimpleName: PStoreRegistry(151) to PersistentStoreRegistry", "Insert SimpleName: registry(40) into SuperConstructorInvocation(41) at 0", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.util.Map(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.common.exceptions.DrillRuntimeException(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.drill.exec.coord.zk.ZKClusterCoordinator(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: org.apache.drill.exec.store.hbase.DrillHBaseConstants(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStore(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.drill.exec.store.sys.local.LocalEStoreProvider(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.drill.exec.store.sys.zk.ZkEStoreProvider(39)", "Delete ImportDeclaration(40)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.hadoop.hbase.HConstants(47)", "Delete ImportDeclaration(48)", "Delete QualifiedName: org.apache.hadoop.hbase.HTableDescriptor(49)", "Delete ImportDeclaration(50)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin(51)", "Delete ImportDeclaration(52)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HConnection(53)", "Delete ImportDeclaration(54)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HConnectionManager(55)", "Delete ImportDeclaration(56)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTableInterface(57)", "Delete ImportDeclaration(58)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(59)", "Delete ImportDeclaration(60)", "Delete QualifiedName: com.google.common.annotations.VisibleForTesting(61)", "Delete ImportDeclaration(62)", "Delete Modifier: public(63)", "Delete SimpleName: HBasePStoreProvider(64)", "Delete SimpleName: PStoreProvider(65)", "Delete SimpleType: PStoreProvider(66)", "Delete Modifier: static(67)", "Delete Modifier: final(68)", "Delete QualifiedName: org.slf4j.Logger(69)", "Delete SimpleType: org.slf4j.Logger(70)", "Delete SimpleName: logger(71)", "Delete QualifiedName: org.slf4j.LoggerFactory(72)", "Delete SimpleName: getLogger(73)", "Delete SimpleName: HBasePStoreProvider(74)", "Delete SimpleType: HBasePStoreProvider(75)", "Delete TypeLiteral(76)", "Delete MethodInvocation(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete Modifier: static(80)", "Delete Modifier: final(81)", "Delete PrimitiveType: byte(82)", "Delete Dimension(83)", "Delete ArrayType: byte[](84)", "Delete SimpleName: FAMILY(85)", "Delete SimpleName: Bytes(86)", "Delete SimpleName: toBytes(87)", "Delete StringLiteral: \"s\"(88)", "Delete MethodInvocation(89)", "Delete VariableDeclarationFragment(90)", "Delete FieldDeclaration(91)", "Delete Modifier: static(92)", "Delete Modifier: final(93)", "Delete PrimitiveType: byte(94)", "Delete Dimension(95)", "Delete ArrayType: byte[](96)", "Delete SimpleName: QUALIFIER(97)", "Delete SimpleName: Bytes(98)", "Delete SimpleName: toBytes(99)", "Delete StringLiteral: \"d\"(100)", "Delete MethodInvocation(101)", "Delete VariableDeclarationFragment(102)", "Delete FieldDeclaration(103)", "Delete Modifier: private(104)", "Delete Modifier: final(105)", "Delete SimpleName: String(106)", "Delete SimpleType: String(107)", "Delete SimpleName: storeTableName(108)", "Delete VariableDeclarationFragment(109)", "Delete FieldDeclaration(110)", "Delete Modifier: private(111)", "Delete SimpleName: Configuration(112)", "Delete SimpleType: Configuration(113)", "Delete SimpleName: hbaseConf(114)", "Delete VariableDeclarationFragment(115)", "Delete FieldDeclaration(116)", "Delete Modifier: private(117)", "Delete SimpleName: HConnection(118)", "Delete SimpleType: HConnection(119)", "Delete SimpleName: connection(120)", "Delete VariableDeclarationFragment(121)", "Delete FieldDeclaration(122)", "Delete Modifier: private(123)", "Delete SimpleName: HTableInterface(124)", "Delete SimpleType: HTableInterface(125)", "Delete SimpleName: table(126)", "Delete VariableDeclarationFragment(127)", "Delete FieldDeclaration(128)", "Delete Modifier: private(129)", "Delete Modifier: final(130)", "Delete PrimitiveType: boolean(131)", "Delete SimpleName: zkAvailable(132)", "Delete VariableDeclarationFragment(133)", "Delete FieldDeclaration(134)", "Delete Modifier: private(135)", "Delete Modifier: final(136)", "Delete SimpleName: LocalEStoreProvider(137)", "Delete SimpleType: LocalEStoreProvider(138)", "Delete SimpleName: localEStoreProvider(139)", "Delete VariableDeclarationFragment(140)", "Delete FieldDeclaration(141)", "Delete Modifier: private(142)", "Delete Modifier: final(143)", "Delete SimpleType: ZkEStoreProvider(145)", "Delete SimpleName: zkEStoreProvider(146)", "Delete VariableDeclarationFragment(147)", "Delete FieldDeclaration(148)", "Delete SimpleName: SuppressWarnings(155)", "Delete StringLiteral: \"unchecked\"(156)", "Delete SingleMemberAnnotation(157)", "Delete SimpleName: Map(158)", "Delete SimpleType: Map(159)", "Delete SimpleName: String(160)", "Delete SimpleType: String(161)", "Delete SimpleName: Object(162)", "Delete SimpleType: Object(163)", "Delete ParameterizedType: Map<String,Object>(164)", "Delete SimpleName: config(165)", "Delete SimpleName: Map(166)", "Delete SimpleType: Map(167)", "Delete SimpleName: String(168)", "Delete SimpleType: String(169)", "Delete SimpleName: Object(170)", "Delete SimpleType: Object(171)", "Delete ParameterizedType: Map<String,Object>(172)", "Delete SimpleName: registry(173)", "Delete SimpleName: getConfig(174)", "Delete MethodInvocation(175)", "Delete SimpleName: getAnyRef(176)", "Delete QualifiedName: DrillHBaseConstants.SYS_STORE_PROVIDER_HBASE_CONFIG(177)", "Delete MethodInvocation(178)", "Delete CastExpression(179)", "Delete VariableDeclarationFragment(180)", "Delete VariableDeclarationStatement(181)", "Delete ThisExpression(182)", "Delete SimpleName: hbaseConf(183)", "Delete FieldAccess(184)", "Delete SimpleName: HBaseConfiguration(185)", "Delete SimpleName: create(186)", "Delete MethodInvocation(187)", "Delete Assignment: =(188)", "Delete ExpressionStatement(189)", "Delete ThisExpression(190)", "Delete SimpleName: hbaseConf(191)", "Delete FieldAccess(192)", "Delete SimpleName: set(193)", "Delete QualifiedName: HConstants.HBASE_CLIENT_INSTANCE_ID(194)", "Delete StringLiteral: \"drill-hbase-persistent-store-client\"(195)", "Delete MethodInvocation(196)", "Delete ExpressionStatement(197)", "Delete SimpleName: config(198)", "Delete NullLiteral(199)", "Delete InfixExpression: !=(200)", "Delete QualifiedName: Map.Entry(201)", "Delete SimpleType: Map.Entry(202)", "Delete SimpleName: String(203)", "Delete SimpleType: String(204)", "Delete SimpleName: Object(205)", "Delete SimpleType: Object(206)", "Delete ParameterizedType: Map.Entry<String,Object>(207)", "Delete SimpleName: entry(208)", "Delete SingleVariableDeclaration(209)", "Delete SimpleName: config(210)", "Delete SimpleName: entrySet(211)", "Delete MethodInvocation(212)", "Delete ThisExpression(213)", "Delete SimpleName: hbaseConf(214)", "Delete FieldAccess(215)", "Delete SimpleName: set(216)", "Delete SimpleName: entry(217)", "Delete SimpleName: getKey(218)", "Delete MethodInvocation(219)", "Delete SimpleName: String(220)", "Delete SimpleName: valueOf(221)", "Delete SimpleName: entry(222)", "Delete SimpleName: getValue(223)", "Delete MethodInvocation(224)", "Delete MethodInvocation(225)", "Delete MethodInvocation(226)", "Delete ExpressionStatement(227)", "Delete Block(228)", "Delete EnhancedForStatement(229)", "Delete Block(230)", "Delete IfStatement(231)", "Delete ThisExpression(232)", "Delete SimpleName: storeTableName(233)", "Delete FieldAccess(234)", "Delete SimpleName: registry(235)", "Delete SimpleName: getConfig(236)", "Delete MethodInvocation(237)", "Delete SimpleName: getString(238)", "Delete QualifiedName: DrillHBaseConstants.SYS_STORE_PROVIDER_HBASE_TABLE(239)", "Delete MethodInvocation(240)", "Delete Assignment: =(241)", "Delete ExpressionStatement(242)", "Delete SimpleName: ClusterCoordinator(243)", "Delete SimpleType: ClusterCoordinator(244)", "Delete SimpleName: coord(245)", "Delete SimpleName: registry(246)", "Delete SimpleName: getClusterCoordinator(247)", "Delete MethodInvocation(248)", "Delete VariableDeclarationFragment(249)", "Delete VariableDeclarationStatement(250)", "Delete SimpleName: coord(251)", "Delete SimpleName: ZKClusterCoordinator(252)", "Delete SimpleType: ZKClusterCoordinator(253)", "Delete InstanceofExpression(254)", "Delete ParenthesizedExpression(255)", "Delete ThisExpression(256)", "Delete SimpleName: localEStoreProvider(257)", "Delete FieldAccess(258)", "Delete NullLiteral(259)", "Delete Assignment: =(260)", "Delete ExpressionStatement(261)", "Delete ThisExpression(262)", "Delete SimpleName: zkEStoreProvider(263)", "Delete FieldAccess(264)", "Delete SimpleName: ZkEStoreProvider(265)", "Delete SimpleType: ZkEStoreProvider(266)", "Delete SimpleName: ZKClusterCoordinator(267)", "Delete SimpleType: ZKClusterCoordinator(268)", "Delete SimpleName: registry(269)", "Delete SimpleName: getClusterCoordinator(270)", "Delete MethodInvocation(271)", "Delete CastExpression(272)", "Delete ParenthesizedExpression(273)", "Delete SimpleName: getCurator(274)", "Delete MethodInvocation(275)", "Delete ClassInstanceCreation(276)", "Delete Assignment: =(277)", "Delete ExpressionStatement(278)", "Delete ThisExpression(279)", "Delete SimpleName: zkAvailable(280)", "Delete FieldAccess(281)", "Delete BooleanLiteral: true(282)", "Delete Assignment: =(283)", "Delete ExpressionStatement(284)", "Delete Block(285)", "Delete ThisExpression(286)", "Delete SimpleName: localEStoreProvider(287)", "Delete FieldAccess(288)", "Delete SimpleName: LocalEStoreProvider(289)", "Delete SimpleType: LocalEStoreProvider(290)", "Delete ClassInstanceCreation(291)", "Delete Assignment: =(292)", "Delete ExpressionStatement(293)", "Delete ThisExpression(294)", "Delete SimpleName: zkEStoreProvider(295)", "Delete FieldAccess(296)", "Delete NullLiteral(297)", "Delete Assignment: =(298)", "Delete ExpressionStatement(299)", "Delete ThisExpression(300)", "Delete SimpleName: zkAvailable(301)", "Delete FieldAccess(302)", "Delete BooleanLiteral: false(303)", "Delete Assignment: =(304)", "Delete ExpressionStatement(305)", "Delete Block(306)", "Delete IfStatement(307)", "Delete Block(308)", "Delete SimpleName: VisibleForTesting(310)", "Delete MarkerAnnotation(311)", "Delete Modifier: public(312)", "Delete SimpleName: HBasePStoreProvider(313)", "Delete SimpleName: Configuration(314)", "Delete SimpleType: Configuration(315)", "Delete SimpleName: conf(316)", "Delete SingleVariableDeclaration(317)", "Delete SimpleName: String(318)", "Delete SimpleType: String(319)", "Delete SimpleName: storeTableName(320)", "Delete SingleVariableDeclaration(321)", "Delete ThisExpression(322)", "Delete SimpleName: hbaseConf(323)", "Delete FieldAccess(324)", "Delete SimpleName: conf(325)", "Delete Assignment: =(326)", "Delete ExpressionStatement(327)", "Delete ThisExpression(328)", "Delete SimpleName: storeTableName(329)", "Delete FieldAccess(330)", "Delete SimpleName: storeTableName(331)", "Delete Assignment: =(332)", "Delete ExpressionStatement(333)", "Delete ThisExpression(334)", "Delete SimpleName: localEStoreProvider(335)", "Delete FieldAccess(336)", "Delete SimpleName: LocalEStoreProvider(337)", "Delete SimpleType: LocalEStoreProvider(338)", "Delete ClassInstanceCreation(339)", "Delete Assignment: =(340)", "Delete ExpressionStatement(341)", "Delete ThisExpression(342)", "Delete SimpleName: zkEStoreProvider(343)", "Delete FieldAccess(344)", "Delete NullLiteral(345)", "Delete Assignment: =(346)", "Delete ExpressionStatement(347)", "Delete ThisExpression(348)", "Delete SimpleName: zkAvailable(349)", "Delete FieldAccess(350)", "Delete BooleanLiteral: false(351)", "Delete Assignment: =(352)", "Delete ExpressionStatement(353)", "Delete Block(354)", "Delete MethodDeclaration(355)", "Delete SimpleName: Override(356)", "Delete MarkerAnnotation(357)", "Delete Modifier: public(358)", "Delete SimpleName: V(359)", "Delete TypeParameter(360)", "Delete SimpleName: PStore(361)", "Delete SimpleType: PStore(362)", "Delete SimpleName: V(363)", "Delete SimpleType: V(364)", "Delete ParameterizedType: PStore<V>(365)", "Delete SimpleName: getStore(366)", "Delete SimpleName: PStoreConfig(367)", "Delete SimpleType: PStoreConfig(368)", "Delete SimpleName: V(369)", "Delete SimpleType: V(370)", "Delete ParameterizedType: PStoreConfig<V>(371)", "Delete SimpleName: config(372)", "Delete SingleVariableDeclaration(373)", "Delete SimpleName: IOException(374)", "Delete SimpleType: IOException(375)", "Delete SimpleName: config(376)", "Delete SimpleName: getMode(377)", "Delete MethodInvocation(378)", "Delete SimpleName: EPHEMERAL(379)", "Delete SwitchCase(380)", "Delete ThisExpression(381)", "Delete SimpleName: zkAvailable(382)", "Delete FieldAccess(383)", "Delete SimpleName: zkEStoreProvider(384)", "Delete SimpleName: getStore(385)", "Delete SimpleName: config(386)", "Delete MethodInvocation(387)", "Delete ReturnStatement(388)", "Delete Block(389)", "Delete SimpleName: localEStoreProvider(390)", "Delete SimpleName: getStore(391)", "Delete SimpleName: config(392)", "Delete MethodInvocation(393)", "Delete ReturnStatement(394)", "Delete Block(395)", "Delete IfStatement(396)", "Delete SimpleName: BLOB_PERSISTENT(397)", "Delete SwitchCase(398)", "Delete SimpleName: PERSISTENT(399)", "Delete SwitchCase(400)", "Delete SimpleName: HBasePStore(401)", "Delete SimpleType: HBasePStore(402)", "Delete SimpleName: V(403)", "Delete SimpleType: V(404)", "Delete ParameterizedType: HBasePStore<V>(405)", "Delete SimpleName: config(406)", "Delete ThisExpression(407)", "Delete SimpleName: table(408)", "Delete FieldAccess(409)", "Delete ClassInstanceCreation(410)", "Delete ReturnStatement(411)", "Delete SwitchCase(412)", "Delete SimpleName: IllegalStateException(413)", "Delete SimpleType: IllegalStateException(414)", "Delete ClassInstanceCreation(415)", "Delete ThrowStatement(416)", "Delete SwitchStatement(417)", "Delete Block(418)", "Delete MethodDeclaration(419)", "Delete SimpleName: Override(420)", "Delete MarkerAnnotation(421)", "Delete SimpleName: SuppressWarnings(422)", "Delete StringLiteral: \"deprecation\"(423)", "Delete SingleMemberAnnotation(424)", "Delete Modifier: public(425)", "Delete PrimitiveType: void(426)", "Delete SimpleName: start(427)", "Delete SimpleName: IOException(428)", "Delete SimpleType: IOException(429)", "Delete ThisExpression(430)", "Delete SimpleName: connection(431)", "Delete FieldAccess(432)", "Delete SimpleName: HConnectionManager(433)", "Delete SimpleName: createConnection(434)", "Delete SimpleName: hbaseConf(435)", "Delete MethodInvocation(436)", "Delete Assignment: =(437)", "Delete ExpressionStatement(438)", "Delete SimpleName: HBaseAdmin(439)", "Delete SimpleType: HBaseAdmin(440)", "Delete SimpleName: admin(441)", "Delete SimpleName: HBaseAdmin(442)", "Delete SimpleType: HBaseAdmin(443)", "Delete SimpleName: connection(444)", "Delete ClassInstanceCreation(445)", "Delete VariableDeclarationFragment(446)", "Delete VariableDeclarationExpression(447)", "Delete SimpleName: admin(448)", "Delete SimpleName: tableExists(449)", "Delete SimpleName: storeTableName(450)", "Delete MethodInvocation(451)", "Delete PrefixExpression: !(452)", "Delete SimpleName: HTableDescriptor(453)", "Delete SimpleType: HTableDescriptor(454)", "Delete SimpleName: desc(455)", "Delete SimpleName: HTableDescriptor(456)", "Delete SimpleType: HTableDescriptor(457)", "Delete SimpleName: storeTableName(458)", "Delete ClassInstanceCreation(459)", "Delete VariableDeclarationFragment(460)", "Delete VariableDeclarationStatement(461)", "Delete SimpleName: desc(462)", "Delete SimpleName: addFamily(463)", "Delete SimpleName: HColumnDescriptor(464)", "Delete SimpleType: HColumnDescriptor(465)", "Delete SimpleName: FAMILY(466)", "Delete ClassInstanceCreation(467)", "Delete SimpleName: setMaxVersions(468)", "Delete NumberLiteral: 1(469)", "Delete MethodInvocation(470)", "Delete MethodInvocation(471)", "Delete ExpressionStatement(472)", "Delete SimpleName: admin(473)", "Delete SimpleName: createTable(474)", "Delete SimpleName: desc(475)", "Delete MethodInvocation(476)", "Delete ExpressionStatement(477)", "Delete Block(478)", "Delete SimpleName: HTableDescriptor(479)", "Delete SimpleType: HTableDescriptor(480)", "Delete SimpleName: desc(481)", "Delete SimpleName: admin(482)", "Delete SimpleName: getTableDescriptor(483)", "Delete SimpleName: Bytes(484)", "Delete SimpleName: toBytes(485)", "Delete SimpleName: storeTableName(486)", "Delete MethodInvocation(487)", "Delete MethodInvocation(488)", "Delete VariableDeclarationFragment(489)", "Delete VariableDeclarationStatement(490)", "Delete SimpleName: desc(491)", "Delete SimpleName: hasFamily(492)", "Delete SimpleName: FAMILY(493)", "Delete MethodInvocation(494)", "Delete PrefixExpression: !(495)", "Delete SimpleName: DrillRuntimeException(496)", "Delete SimpleType: DrillRuntimeException(497)", "Delete StringLiteral: \"The HBase table \"(498)", "Delete SimpleName: storeTableName(499)", "Delete StringLiteral: \" specified as persistent store exists but does not contain column family: \"(500)", "Delete SimpleName: Bytes(501)", "Delete SimpleName: toString(502)", "Delete SimpleName: FAMILY(503)", "Delete MethodInvocation(504)", "Delete ParenthesizedExpression(505)", "Delete InfixExpression: +(506)", "Delete ClassInstanceCreation(507)", "Delete ThrowStatement(508)", "Delete Block(509)", "Delete IfStatement(510)", "Delete Block(511)", "Delete IfStatement(512)", "Delete Block(513)", "Delete TryStatement(514)", "Delete ThisExpression(515)", "Delete SimpleName: table(516)", "Delete FieldAccess(517)", "Delete SimpleName: connection(518)", "Delete SimpleName: getTable(519)", "Delete SimpleName: storeTableName(520)", "Delete MethodInvocation(521)", "Delete Assignment: =(522)", "Delete ExpressionStatement(523)", "Delete ThisExpression(524)", "Delete SimpleName: table(525)", "Delete FieldAccess(526)", "Delete SimpleName: setAutoFlush(527)", "Delete BooleanLiteral: true(528)", "Delete MethodInvocation(529)", "Delete ExpressionStatement(530)", "Delete Block(531)", "Delete MethodDeclaration(532)", "Delete SimpleName: Override(533)", "Delete MarkerAnnotation(534)", "Delete Modifier: public(535)", "Delete Modifier: synchronized(536)", "Delete PrimitiveType: void(537)", "Delete SimpleName: close(538)", "Delete ThisExpression(539)", "Delete SimpleName: table(540)", "Delete FieldAccess(541)", "Delete NullLiteral(542)", "Delete InfixExpression: !=(543)", "Delete ThisExpression(544)", "Delete SimpleName: table(545)", "Delete FieldAccess(546)", "Delete SimpleName: close(547)", "Delete MethodInvocation(548)", "Delete ExpressionStatement(549)", "Delete ThisExpression(550)", "Delete SimpleName: table(551)", "Delete FieldAccess(552)", "Delete NullLiteral(553)", "Delete Assignment: =(554)", "Delete ExpressionStatement(555)", "Delete Block(556)", "Delete SimpleName: IOException(557)", "Delete SimpleType: IOException(558)", "Delete SimpleName: e(559)", "Delete SingleVariableDeclaration(560)", "Delete SimpleName: logger(561)", "Delete SimpleName: warn(562)", "Delete StringLiteral: \"Caught exception while closing HBase table.\"(563)", "Delete SimpleName: e(564)", "Delete MethodInvocation(565)", "Delete ExpressionStatement(566)", "Delete Block(567)", "Delete CatchClause(568)", "Delete TryStatement(569)", "Delete Block(570)", "Delete IfStatement(571)", "Delete ThisExpression(572)", "Delete SimpleName: connection(573)", "Delete FieldAccess(574)", "Delete NullLiteral(575)", "Delete InfixExpression: !=(576)", "Delete ThisExpression(577)", "Delete SimpleName: connection(578)", "Delete FieldAccess(579)", "Delete SimpleName: isClosed(580)", "Delete MethodInvocation(581)", "Delete PrefixExpression: !(582)", "Delete InfixExpression: &&(583)", "Delete ThisExpression(584)", "Delete SimpleName: connection(585)", "Delete FieldAccess(586)", "Delete SimpleName: close(587)", "Delete MethodInvocation(588)", "Delete ExpressionStatement(589)", "Delete Block(590)", "Delete SimpleName: IOException(591)", "Delete SimpleType: IOException(592)", "Delete SimpleName: e(593)", "Delete SingleVariableDeclaration(594)", "Delete SimpleName: logger(595)", "Delete SimpleName: warn(596)", "Delete StringLiteral: \"Caught exception while closing HBase connection.\"(597)", "Delete SimpleName: e(598)", "Delete MethodInvocation(599)", "Delete ExpressionStatement(600)", "Delete Block(601)", "Delete CatchClause(602)", "Delete TryStatement(603)", "Delete ThisExpression(604)", "Delete SimpleName: connection(605)", "Delete FieldAccess(606)", "Delete NullLiteral(607)", "Delete Assignment: =(608)", "Delete ExpressionStatement(609)", "Delete Block(610)", "Delete IfStatement(611)", "Delete Block(612)", "Delete MethodDeclaration(613)"]}}, {"ProfileResources_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.drill.exec.coord.store.TransientStore to ImportDeclaration at 0"]}, {"root": "UPDATE from java.io.IOException to org.apache.drill.common.exceptions.DrillRuntimeException", "operations": ["UPD QualifiedName: java.io.IOException from java.io.IOException to org.apache.drill.common.exceptions.DrillRuntimeException"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStore"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.PersistentStoreProvider"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS NumberLiteral: 100 to VariableDeclarationFragment at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: MAX_PROFILES to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: protected to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: getClusterCoordinator to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: ClusterCoordinator to MethodDeclaration at 1", "INS SimpleName: ClusterCoordinator to SimpleType: ClusterCoordinator at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: work to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getContext to MethodInvocation at 1", "INS SimpleName: getCoordinator to MethodDeclaration at 2"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "UPDATE from PStoreProvider to PersistentStoreProvider", "operations": ["UPD SimpleName: PStoreProvider from PStoreProvider to PersistentStoreProvider", "UPD SimpleType: PStoreProvider from PStoreProvider to PersistentStoreProvider"]}, {"root": "UPDATE from provider to getProvider", "operations": ["UPD SimpleName: provider from provider to getProvider", "UPD SimpleName: provider from provider to getProvider", "UPD SimpleName: provider from provider to getProvider"]}, {"root": "INS TryStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to TryStatement at 0", "INS SimpleName: TransientStore to SimpleType: TransientStore at 0", "INS TryStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ParameterizedType: TransientStore<QueryInfo> to VariableDeclarationStatement at 1", "INS SimpleName: running to VariableDeclarationFragment at 0", "INS SimpleType: TransientStore to ParameterizedType: TransientStore<QueryInfo> at 0"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS ThrowStatement to Block at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: e to SingleVariableDeclaration at 2", "INS SimpleType: Exception to SingleVariableDeclaration at 1", "INS StringLiteral: \"error while retrieving profile\" to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS SimpleName: DrillRuntimeException to SimpleType: DrillRuntimeException at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS TryStatement to Block at 4", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleType: DrillRuntimeException to ClassInstanceCreation at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "UPDATE from getPersistentStoreProvider to getStoreProvider", "operations": ["UPD SimpleName: getPersistentStoreProvider from getPersistentStoreProvider to getStoreProvider"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV EnhancedForStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 5", "MOV EnhancedForStatement to Block at 6", "MOV ReturnStatement to Block at 7"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "UPDATE from PStore<QueryProfile> to PersistentStore<QueryProfile>", "operations": ["UPD ParameterizedType: PStore<QueryProfile> from PStore<QueryProfile> to PersistentStore<QueryProfile>", "UPD ParameterizedType: PStore<QueryProfile> from PStore<QueryProfile> to PersistentStore<QueryProfile>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: PStore<QueryProfile> to VariableDeclarationStatement at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: entries to MethodInvocation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: running to MethodInvocation at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: completed to MethodInvocation at 0", "INS SimpleName: MAX_PROFILES to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 2", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: getRange to MethodInvocation at 1"]}, {"root": "UPDATE from IOException to Exception", "operations": ["UPD SimpleName: IOException from IOException to Exception", "UPD SimpleType: IOException from IOException to Exception", "UPD SimpleType: IOException from IOException to Exception", "UPD SimpleName: IOException from IOException to Exception"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from PStore<QueryInfo> to TransientStore<QueryInfo>", "operations": ["UPD ParameterizedType: PStore<QueryInfo> from PStore<QueryInfo> to TransientStore<QueryInfo>", "UPD ParameterizedType: PStore<QueryInfo> from PStore<QueryInfo> to TransientStore<QueryInfo>"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from PStore to PersistentStore", "operations": ["UPD SimpleType: PStore from PStore to PersistentStore", "UPD SimpleName: PStore from PStore to PersistentStore", "UPD SimpleType: PStore from PStore to PersistentStore", "UPD SimpleName: PStore from PStore to PersistentStore"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: completed to VariableDeclarationFragment at 0"]}, {"root": "MOVE from ParameterizedType: TransientStore<QueryInfo>", "operations": ["MOV SimpleType: QueryInfo to ParameterizedType: TransientStore<QueryInfo> at 1"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from PStore to TransientStore", "operations": ["UPD SimpleName: PStore from PStore to TransientStore", "UPD SimpleName: PStore from PStore to TransientStore", "UPD SimpleType: PStore from PStore to TransientStore", "UPD SimpleType: PStore from PStore to TransientStore"]}, {"root": "UPDATE from runningQueries to running", "operations": ["UPD SimpleName: runningQueries from runningQueries to running", "UPD SimpleName: runningQueries from runningQueries to running", "UPD SimpleName: runningQueries from runningQueries to running", "UPD SimpleName: runningQueries from runningQueries to running"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStore to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0", "MOV QualifiedName: QueryManager.QUERY_PROFILE to MethodInvocation at 2"]}, {"root": "UPDATE from getStore to getOrCreateStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateStore", "UPD SimpleName: getStore from getStore to getOrCreateStore"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV QualifiedName: QueryManager.RUNNING_QUERY_INFO to MethodInvocation at 2", "MOV SimpleName: getStore to MethodInvocation at 1"]}, {"root": "UPDATE from getStore to getOrCreateTransientStore", "operations": ["UPD SimpleName: getStore from getStore to getOrCreateTransientStore", "UPD SimpleName: getStore from getStore to getOrCreateTransientStore", "UPD SimpleName: getStore from getStore to getOrCreateTransientStore"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from provider to getCoordinator", "operations": ["UPD SimpleName: provider from provider to getCoordinator", "UPD SimpleName: provider from provider to getCoordinator", "UPD SimpleName: provider from provider to getCoordinator"]}, {"root": "DEL SimpleName: running", "operations": ["DEL SimpleName: running"]}, {"root": "DEL SimpleName: completed", "operations": ["DEL SimpleName: completed"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL NullLiteral"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: PStore", "DEL SimpleName: running", "DEL ParameterizedType: PStore<QueryInfo>", "DEL VariableDeclarationStatement", "DEL SimpleName: PStore", "DEL NullLiteral"]}, {"root": "DEL TryStatement", "operations": ["DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: completed", "DEL SimpleName: running", "DEL Assignment: =", "DEL TryStatement", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}]}}, {"ProfileResources_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(1228) at 18", "Insert ImportDeclaration(54) into CompilationUnit(1228) at 19", "Insert ImportDeclaration(56) into CompilationUnit(1228) at 20", "Update QualifiedName: java.io.IOException(17) to org.apache.drill.common.exceptions.DrillRuntimeException", "Insert QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator(53) into ImportDeclaration(54) at 0", "Insert QualifiedName: org.apache.drill.exec.coord.store.TransientStore(55) into ImportDeclaration(56) at 0", "Update QualifiedName: org.apache.drill.exec.store.sys.PStore(67) to org.apache.drill.exec.store.sys.PersistentStore", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(69) to org.apache.drill.exec.store.sys.PersistentStoreProvider", "Insert FieldDeclaration(113) into TypeDeclaration: class(1227) at 5", "Insert MethodDeclaration(383) into TypeDeclaration: class(1227) at 11", "Insert Modifier: public(106) into FieldDeclaration(113) at 0", "Insert Modifier: final(107) into FieldDeclaration(113) at 1", "Insert Modifier: static(108) into FieldDeclaration(113) at 2", "Insert PrimitiveType: int(109) into FieldDeclaration(113) at 3", "Insert VariableDeclarationFragment(112) into FieldDeclaration(113) at 4", "Update Modifier: private(348) to protected", "Update SimpleType: PStoreProvider(350) to PersistentStoreProvider", "Update SimpleName: provider(351) to getProvider", "Insert Modifier: protected(372) into MethodDeclaration(383) at 0", "Insert SimpleType: ClusterCoordinator(374) into MethodDeclaration(383) at 1", "Insert SimpleName: getCoordinator(375) into MethodDeclaration(383) at 2", "Insert Block(382) into MethodDeclaration(383) at 3", "Insert SimpleName: MAX_PROFILES(110) into VariableDeclarationFragment(112) at 0", "Insert NumberLiteral: 100(111) into VariableDeclarationFragment(112) at 1", "Update SimpleName: PStoreProvider(349) to PersistentStoreProvider", "Insert SimpleName: ClusterCoordinator(373) into SimpleType: ClusterCoordinator(374) at 0", "Insert ReturnStatement(381) into Block(382) at 0", "Insert TryStatement(692) into Block(693) at 0", "Insert TryStatement(892) into Block(904) at 4", "Insert MethodInvocation(380) into ReturnStatement(381) at 0", "Insert Block(664) into TryStatement(692) at 0", "Move CatchClause(508) into TryStatement(692) at 1", "Insert Block(878) into TryStatement(892) at 0", "Insert CatchClause(891) into TryStatement(892) at 1", "Update SimpleName: getPersistentStoreProvider(355) to getStoreProvider", "Insert MethodInvocation(378) into MethodInvocation(380) at 0", "Insert SimpleName: getClusterCoordinator(379) into MethodInvocation(380) at 1", "Insert VariableDeclarationStatement(484) into Block(664) at 0", "Insert VariableDeclarationStatement(498) into Block(664) at 1", "Move VariableDeclarationStatement(520) into Block(664) at 2", "Move EnhancedForStatement(577) into Block(664) at 3", "Move ExpressionStatement(585) into Block(664) at 4", "Move VariableDeclarationStatement(596) into Block(664) at 5", "Move EnhancedForStatement(653) into Block(664) at 6", "Move ReturnStatement(659) into Block(664) at 7", "Move VariableDeclarationStatement(822) into Block(878) at 0", "Move VariableDeclarationStatement(831) into Block(878) at 1", "Move IfStatement(842) into Block(878) at 2", "Insert SingleVariableDeclaration(883) into CatchClause(891) at 0", "Insert Block(890) into CatchClause(891) at 1", "Insert SimpleName: work(376) into MethodInvocation(378) at 0", "Insert SimpleName: getContext(377) into MethodInvocation(378) at 1", "Insert Modifier: final(471) into VariableDeclarationStatement(484) at 0", "Update ParameterizedType: PStore<QueryProfile>(451) to PersistentStore<QueryProfile>", "Move ParameterizedType: PStore<QueryProfile>(451) into VariableDeclarationStatement(484) at 1", "Insert VariableDeclarationFragment(483) into VariableDeclarationStatement(484) at 2", "Insert Modifier: final(485) into VariableDeclarationStatement(498) at 0", "Insert ParameterizedType: TransientStore<QueryInfo>(490) into VariableDeclarationStatement(498) at 1", "Insert VariableDeclarationFragment(497) into VariableDeclarationStatement(498) at 2", "Insert Modifier: final(499) into VariableDeclarationStatement(510) at 0", "Insert MethodInvocation(526) into EnhancedForStatement(574) at 1", "Insert MethodInvocation(610) into EnhancedForStatement(657) at 1", "Update SimpleType: IOException(483) to Exception", "Insert Modifier: final(772) into VariableDeclarationStatement(785) at 0", "Update ParameterizedType: PStore<QueryInfo>(745) to TransientStore<QueryInfo>", "Insert Modifier: final(786) into VariableDeclarationStatement(795) at 0", "Insert Modifier: final(843) into VariableDeclarationStatement(856) at 0", "Update ParameterizedType: PStore<QueryProfile>(814) to PersistentStore<QueryProfile>", "Insert Modifier: final(857) into VariableDeclarationStatement(866) at 0", "Insert Modifier: final(879) into SingleVariableDeclaration(883) at 0", "Insert SimpleType: Exception(881) into SingleVariableDeclaration(883) at 1", "Insert SimpleName: e(882) into SingleVariableDeclaration(883) at 2", "Insert ThrowStatement(889) into Block(890) at 0", "Update SimpleType: IOException(889) to Exception", "Insert Modifier: final(1059) into VariableDeclarationStatement(1072) at 0", "Update ParameterizedType: PStore<QueryInfo>(1017) to TransientStore<QueryInfo>", "Insert Modifier: final(1073) into VariableDeclarationStatement(1082) at 0", "Update SimpleType: PStore(448) to PersistentStore", "Move SimpleName: completed(452) into VariableDeclarationFragment(483) at 0", "Insert MethodInvocation(482) into VariableDeclarationFragment(483) at 1", "Insert SimpleType: TransientStore(487) into ParameterizedType: TransientStore<QueryInfo>(490) at 0", "Move SimpleType: QueryInfo(459) into ParameterizedType: TransientStore<QueryInfo>(490) at 1", "Insert SimpleName: running(491) into VariableDeclarationFragment(497) at 0", "Insert MethodInvocation(496) into VariableDeclarationFragment(497) at 1", "Insert Modifier: final(511) into SingleVariableDeclaration(520) at 0", "Insert SimpleName: Lists(521) into MethodInvocation(526) at 0", "Insert SimpleName: newArrayList(522) into MethodInvocation(526) at 1", "Insert MethodInvocation(525) into MethodInvocation(526) at 2", "Insert SimpleName: Lists(603) into MethodInvocation(610) at 0", "Insert SimpleName: newArrayList(604) into MethodInvocation(610) at 1", "Insert MethodInvocation(609) into MethodInvocation(610) at 2", "Update SimpleName: IOException(482) to Exception", "Update SimpleType: PStore(742) to TransientStore", "Update SimpleName: runningQueries(746) to running", "Update SimpleType: PStore(811) to PersistentStore", "Insert SimpleName: Exception(880) into SimpleType: Exception(881) at 0", "Insert ClassInstanceCreation(888) into ThrowStatement(889) at 0", "Update SimpleName: IOException(888) to Exception", "Update SimpleType: PStore(1014) to TransientStore", "Update SimpleName: runningQueries(1018) to running", "Update SimpleName: PStore(447) to PersistentStore", "Move MethodInvocation(467) into MethodInvocation(482) at 0", "Update SimpleName: getStore(468) to getOrCreateStore", "Move SimpleName: getStore(468) into MethodInvocation(482) at 1", "Move QualifiedName: QueryManager.QUERY_PROFILE(469) into MethodInvocation(482) at 2", "Insert SimpleName: TransientStore(486) into SimpleType: TransientStore(487) at 0", "Move MethodInvocation(475) into MethodInvocation(496) at 0", "Update SimpleName: getStore(476) to getOrCreateTransientStore", "Move SimpleName: getStore(476) into MethodInvocation(496) at 1", "Move QualifiedName: QueryManager.RUNNING_QUERY_INFO(477) into MethodInvocation(496) at 2", "Insert SimpleName: running(523) into MethodInvocation(525) at 0", "Insert SimpleName: entries(524) into MethodInvocation(525) at 1", "Insert Modifier: final(527) into VariableDeclarationStatement(535) at 0", "Insert SimpleName: completed(605) into MethodInvocation(609) at 0", "Insert SimpleName: getRange(606) into MethodInvocation(609) at 1", "Insert NumberLiteral: 0(607) into MethodInvocation(609) at 2", "Insert SimpleName: MAX_PROFILES(608) into MethodInvocation(609) at 3", "Update SimpleName: PStore(741) to TransientStore", "Update SimpleName: getStore(749) to getOrCreateTransientStore", "Update SimpleName: runningQueries(757) to running", "Update SimpleName: PStore(810) to PersistentStore", "Update SimpleName: getStore(818) to getOrCreateStore", "Insert SimpleType: DrillRuntimeException(885) into ClassInstanceCreation(888) at 0", "Insert StringLiteral: \"error while retrieving profile\"(886) into ClassInstanceCreation(888) at 1", "Insert SimpleName: e(887) into ClassInstanceCreation(888) at 2", "Update SimpleName: PStore(1013) to TransientStore", "Update SimpleName: getStore(1021) to getOrCreateTransientStore", "Update SimpleName: runningQueries(1029) to running", "Update SimpleName: provider(466) to getProvider", "Update SimpleName: provider(474) to getCoordinator", "Update SimpleName: provider(747) to getCoordinator", "Update SimpleName: provider(816) to getProvider", "Insert SimpleName: DrillRuntimeException(884) into SimpleType: DrillRuntimeException(885) at 0", "Update SimpleName: provider(1019) to getCoordinator", "Delete SimpleName: running(530)", "Delete SimpleName: completed(606)", "Delete NullLiteral(453)", "Delete VariableDeclarationFragment(454)", "Delete VariableDeclarationStatement(455)", "Delete SimpleName: PStore(456)", "Delete SimpleType: PStore(457)", "Delete ParameterizedType: PStore<QueryInfo>(460)", "Delete SimpleName: running(461)", "Delete NullLiteral(462)", "Delete VariableDeclarationFragment(463)", "Delete VariableDeclarationStatement(464)", "Delete SimpleName: completed(465)", "Delete MethodInvocation(470)", "Delete Assignment: =(471)", "Delete ExpressionStatement(472)", "Delete SimpleName: running(473)", "Delete MethodInvocation(478)", "Delete Assignment: =(479)", "Delete ExpressionStatement(480)", "Delete Block(481)", "Delete TryStatement(509)", "Delete SimpleName: IOException(698)", "Delete SimpleType: IOException(699)", "Delete SimpleName: IOException(926)", "Delete SimpleType: IOException(927)", "Delete SimpleName: IOException(967)", "Delete SimpleType: IOException(968)"]}}, {"LocalPStoreProvider_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.exception.StoreException", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.exception.StoreException"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig from org.apache.drill.exec.store.sys.PStoreConfig to org.apache.drill.exec.store.sys.PersistentStoreRegistry"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement: @deprecated to Javadoc at 1", "INS TextElement: use  to TagElement: @deprecated at 1", "INS QualifiedName: org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider to TagElement: @link at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS TagElement: @link to TagElement: @deprecated at 2", "INS TextElement:  will be removed in 1.7 to TagElement: @deprecated at 0", "INS TextElement:  instead. to TagElement: @deprecated at 3"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 1", "operations": ["INS Modifier: public to TypeDeclaration: class at 1"]}, {"root": "INS SimpleName: LocalPStoreProvider to TypeDeclaration: class at 2", "operations": ["INS SimpleName: LocalPStoreProvider to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: LocalPersistentStoreProvider to TypeDeclaration: class at 3", "operations": ["INS SimpleType: LocalPersistentStoreProvider to TypeDeclaration: class at 3"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0"]}, {"root": "UPDATE from LocalEStoreProvider to LocalPersistentStoreProvider", "operations": ["UPD SimpleName: LocalEStoreProvider from LocalEStoreProvider to LocalPersistentStoreProvider"]}, {"root": "MOVE from SimpleType: LocalPersistentStoreProvider", "operations": ["MOV SimpleName: LocalEStoreProvider to SimpleType: LocalPersistentStoreProvider at 0"]}, {"root": "UPDATE from IOException to StoreException", "operations": ["UPD SimpleName: IOException from IOException to StoreException", "UPD SimpleType: IOException from IOException to StoreException"]}, {"root": "INS TextElement: <p/> to TagElement at 7", "operations": ["INS TextElement: <p/> to TagElement at 7"]}, {"root": "INS TextElement: <p/> to TagElement at 9", "operations": ["INS TextElement: <p/> to TagElement at 9"]}, {"root": "UPDATE from A really simple provider that stores data in the local file system, one value per file. to Kept for possible references to old class name in configuration.", "operations": ["UPD TextElement: A really simple provider that stores data in the local file system, one value per file. from A really simple provider that stores data in the local file system, one value per file. to Kept for possible references to old class name in configuration."]}, {"root": "UPDATE from PStoreRegistry to PersistentStoreRegistry", "operations": ["UPD SimpleName: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry", "UPD SimpleType: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS SimpleName: registry to SuperConstructorInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ConcurrentHashMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ConcurrentMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.common.config.DrillConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.ExecConstants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.dfs.DrillFileSystem", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.fs.Path", "DEL ImportDeclaration"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: LocalPStoreProvider", "operations": ["DEL SimpleName: LocalPStoreProvider"]}, {"root": "DEL SimpleType: PStoreProvider", "operations": ["DEL SimpleName: PStoreProvider", "DEL SimpleType: PStoreProvider"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: org.slf4j.Logger", "DEL TypeLiteral", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL Modifier: final", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL SimpleName: logger", "DEL SimpleName: getLogger", "DEL QualifiedName: org.slf4j.Logger", "DEL SimpleName: LocalPStoreProvider", "DEL SimpleType: LocalPStoreProvider"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: path", "DEL SimpleType: Path", "DEL SimpleName: Path"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean", "DEL Modifier: private", "DEL SimpleName: enableWrite", "DEL FieldDeclaration", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: ConcurrentMap", "DEL ParameterizedType: PStore<?>", "DEL SimpleType: PStoreConfig", "DEL ParameterizedType: ConcurrentMap<PStoreConfig<?>,PStore<?>>", "DEL SimpleName: PStore", "DEL VariableDeclarationFragment", "DEL WildcardType: ?", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: ConcurrentMap", "DEL WildcardType: ?", "DEL Modifier: private", "DEL SimpleName: PStoreConfig", "DEL SimpleName: pstores", "DEL SimpleType: PStore", "DEL ParameterizedType: PStoreConfig<?>"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL Modifier: private", "DEL SimpleType: LocalEStoreProvider", "DEL SimpleName: LocalEStoreProvider", "DEL VariableDeclarationFragment", "DEL SimpleName: estoreProvider", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: DrillFileSystem", "DEL SimpleName: fs", "DEL Modifier: private", "DEL Modifier: final", "DEL FieldDeclaration", "DEL SimpleType: DrillFileSystem", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getFileSystem", "DEL SimpleName: PStoreConfig", "DEL ThisExpression", "DEL ParameterizedType: PStoreConfig<?>", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleType: PStoreConfig", "DEL SimpleType: PStore", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleType: Path", "DEL ClassInstanceCreation", "DEL SimpleName: ConcurrentHashMap", "DEL SimpleName: config", "DEL WildcardType: ?", "DEL SimpleType: LocalEStoreProvider", "DEL SimpleName: DrillConfig", "DEL Assignment: =", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL QualifiedName: ExecConstants.SYS_STORE_PROVIDER_LOCAL_PATH", "DEL SimpleName: path", "DEL SimpleName: enableWrite", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL WildcardType: ?", "DEL SimpleName: estoreProvider", "DEL ThisExpression", "DEL SimpleName: LocalPStoreProvider", "DEL ExpressionStatement", "DEL SimpleName: config", "DEL SimpleName: PStore", "DEL SimpleType: IOException", "DEL SimpleName: FilePStore", "DEL FieldAccess", "DEL SimpleName: config", "DEL SimpleName: enableWrite", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL Assignment: =", "DEL Block", "DEL ExpressionStatement", "DEL FieldAccess", "DEL ThisExpression", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleType: ConcurrentHashMap", "DEL ConditionalExpression", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL SimpleName: config", "DEL SimpleName: Path", "DEL SimpleName: path", "DEL ParameterizedType: PStore<?>", "DEL ParameterizedType: ConcurrentHashMap<PStoreConfig<?>,PStore<?>>", "DEL SimpleName: getString", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL QualifiedName: ExecConstants.SYS_STORE_PROVIDER_LOCAL_ENABLE_WRITE", "DEL FieldAccess", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleType: DrillConfig", "DEL SimpleName: pstores", "DEL NullLiteral", "DEL SimpleName: getBoolean"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getConfig", "DEL SimpleName: registry", "DEL ConstructorInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL Block", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL SimpleName: close", "DEL MarkerAnnotation", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: storeConfig", "DEL SimpleName: getPStore", "DEL Modifier: public", "DEL SimpleType: V", "DEL SimpleType: V", "DEL SimpleName: EPHEMERAL", "DEL ClassInstanceCreation", "DEL SimpleName: IllegalStateException", "DEL TypeParameter", "DEL MethodInvocation", "DEL SimpleName: getStore", "DEL SimpleName: PERSISTENT", "DEL SimpleName: getMode", "DEL SimpleType: PStore", "DEL SimpleName: storeConfig", "DEL SwitchCase", "DEL MethodDeclaration", "DEL SimpleName: V", "DEL SimpleType: IOException", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL ParameterizedType: PStore<V>", "DEL SimpleName: estoreProvider", "DEL SwitchCase", "DEL SwitchStatement", "DEL SimpleName: getStore", "DEL SimpleName: V", "DEL SimpleName: V", "DEL SingleVariableDeclaration", "DEL SimpleName: BLOB_PERSISTENT", "DEL SimpleName: PStore", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ThrowStatement", "DEL SimpleType: IllegalStateException", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleType: PStoreConfig", "DEL SimpleName: storeConfig", "DEL SimpleName: PStoreConfig", "DEL SwitchCase", "DEL SwitchCase", "DEL SimpleName: storeConfig", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: p2", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleType: PStore", "DEL SimpleName: enableWrite", "DEL SimpleName: PStore", "DEL SimpleType: V", "DEL ParameterizedType: PStore<V>", "DEL SimpleType: PStore", "DEL SimpleName: path", "DEL SimpleType: V", "DEL ClassInstanceCreation", "DEL SimpleName: pstores", "DEL CastExpression", "DEL SimpleName: storeConfig", "DEL SimpleName: PStore", "DEL NullLiteral", "DEL SimpleName: V", "DEL SimpleName: p2", "DEL SimpleName: putIfAbsent", "DEL MethodDeclaration", "DEL InfixExpression: !=", "DEL SimpleType: PStore", "DEL SimpleName: PStore", "DEL Modifier: private", "DEL ReturnStatement", "DEL SimpleType: IOException", "DEL ParameterizedType: PStore<V>", "DEL SimpleName: IOException", "DEL SimpleName: V", "DEL ParameterizedType: PStore<?>", "DEL SimpleType: V", "DEL ParameterizedType: NoWriteLocalPStore<V>", "DEL TypeParameter", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: p", "DEL Block", "DEL SimpleName: storeConfig", "DEL IfStatement", "DEL WildcardType: ?", "DEL SimpleName: getPStore", "DEL SimpleName: V", "DEL SimpleName: p", "DEL SimpleName: storeConfig", "DEL SimpleType: PStore", "DEL SimpleName: V", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL SingleVariableDeclaration", "DEL Block", "DEL ParameterizedType: PStore<V>", "DEL SimpleType: PStoreConfig", "DEL SimpleName: FilePStore", "DEL ParameterizedType: FilePStore<V>", "DEL SimpleName: PStore", "DEL SimpleType: V", "DEL SimpleType: FilePStore", "DEL SimpleType: NoWriteLocalPStore", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: NoWriteLocalPStore", "DEL VariableDeclarationFragment", "DEL SimpleName: PStoreConfig", "DEL SimpleType: V", "DEL SimpleName: p", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: p2", "DEL ClassInstanceCreation", "DEL Block", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: V", "DEL SimpleName: V"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: start", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL Block"]}]}}, {"LocalPStoreProvider_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.store.sys.PStore(29) to org.apache.drill.exec.exception.StoreException", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(31) to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(33) to org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider", "Insert Javadoc(33) into TypeDeclaration: class(50) at 0", "Insert Modifier: public(34) into TypeDeclaration: class(50) at 1", "Insert SimpleName: LocalPStoreProvider(35) into TypeDeclaration: class(50) at 2", "Insert SimpleType: LocalPersistentStoreProvider(37) into TypeDeclaration: class(50) at 3", "Move TagElement(40) into Javadoc(33) at 0", "Insert TagElement: @deprecated(32) into Javadoc(33) at 1", "Update SimpleName: LocalEStoreProvider(154) to LocalPersistentStoreProvider", "Move SimpleName: LocalEStoreProvider(154) into SimpleType: LocalPersistentStoreProvider(37) at 0", "Update SimpleType: IOException(178) to StoreException", "Insert TextElement: <p/>(7) into TagElement(15) at 7", "Insert TextElement: <p/>(9) into TagElement(15) at 9", "Update TextElement: A really simple provider that stores data in the local file system, one value per file.(39) to Kept for possible references to old class name in configuration.", "Insert TextElement:  will be removed in 1.7(27) into TagElement: @deprecated(32) at 0", "Insert TextElement: use (28) into TagElement: @deprecated(32) at 1", "Insert TagElement: @link(30) into TagElement: @deprecated(32) at 2", "Insert TextElement:  instead.(31) into TagElement: @deprecated(32) at 3", "Update SimpleType: PStoreRegistry(174) to PersistentStoreRegistry", "Update SimpleName: IOException(177) to StoreException", "Insert SuperConstructorInvocation(47) into Block(48) at 0", "Insert QualifiedName: org.apache.drill.exec.store.sys.store.provider.LocalPersistentStoreProvider(29) into TagElement: @link(30) at 0", "Update SimpleName: PStoreRegistry(173) to PersistentStoreRegistry", "Insert SimpleName: registry(46) into SuperConstructorInvocation(47) at 0", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.util.concurrent.ConcurrentHashMap(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.util.concurrent.ConcurrentMap(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.common.config.DrillConfig(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.drill.exec.ExecConstants(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: org.apache.drill.exec.store.dfs.DrillFileSystem(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.hadoop.fs.Path(37)", "Delete ImportDeclaration(38)", "Delete Javadoc(41)", "Delete Modifier: public(42)", "Delete SimpleName: LocalPStoreProvider(43)", "Delete SimpleName: PStoreProvider(44)", "Delete SimpleType: PStoreProvider(45)", "Delete Modifier: static(46)", "Delete Modifier: final(47)", "Delete QualifiedName: org.slf4j.Logger(48)", "Delete SimpleType: org.slf4j.Logger(49)", "Delete SimpleName: logger(50)", "Delete QualifiedName: org.slf4j.LoggerFactory(51)", "Delete SimpleName: getLogger(52)", "Delete SimpleName: LocalPStoreProvider(53)", "Delete SimpleType: LocalPStoreProvider(54)", "Delete TypeLiteral(55)", "Delete MethodInvocation(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete Modifier: private(59)", "Delete Modifier: final(60)", "Delete SimpleName: Path(61)", "Delete SimpleType: Path(62)", "Delete SimpleName: path(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete Modifier: private(66)", "Delete Modifier: final(67)", "Delete PrimitiveType: boolean(68)", "Delete SimpleName: enableWrite(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete Modifier: private(72)", "Delete Modifier: final(73)", "Delete SimpleName: ConcurrentMap(74)", "Delete SimpleType: ConcurrentMap(75)", "Delete SimpleName: PStoreConfig(76)", "Delete SimpleType: PStoreConfig(77)", "Delete WildcardType: ?(78)", "Delete ParameterizedType: PStoreConfig<?>(79)", "Delete SimpleName: PStore(80)", "Delete SimpleType: PStore(81)", "Delete WildcardType: ?(82)", "Delete ParameterizedType: PStore<?>(83)", "Delete ParameterizedType: ConcurrentMap<PStoreConfig<?>,PStore<?>>(84)", "Delete SimpleName: pstores(85)", "Delete VariableDeclarationFragment(86)", "Delete FieldDeclaration(87)", "Delete Modifier: private(88)", "Delete Modifier: final(89)", "Delete SimpleName: LocalEStoreProvider(90)", "Delete SimpleType: LocalEStoreProvider(91)", "Delete SimpleName: estoreProvider(92)", "Delete VariableDeclarationFragment(93)", "Delete FieldDeclaration(94)", "Delete Modifier: private(95)", "Delete Modifier: final(96)", "Delete SimpleName: DrillFileSystem(97)", "Delete SimpleType: DrillFileSystem(98)", "Delete SimpleName: fs(99)", "Delete VariableDeclarationFragment(100)", "Delete FieldDeclaration(101)", "Delete Modifier: public(102)", "Delete SimpleName: LocalPStoreProvider(103)", "Delete SimpleName: DrillConfig(104)", "Delete SimpleType: DrillConfig(105)", "Delete SimpleName: config(106)", "Delete SingleVariableDeclaration(107)", "Delete SimpleName: IOException(108)", "Delete SimpleType: IOException(109)", "Delete ThisExpression(110)", "Delete SimpleName: path(111)", "Delete FieldAccess(112)", "Delete SimpleName: Path(113)", "Delete SimpleType: Path(114)", "Delete SimpleName: config(115)", "Delete SimpleName: getString(116)", "Delete QualifiedName: ExecConstants.SYS_STORE_PROVIDER_LOCAL_PATH(117)", "Delete MethodInvocation(118)", "Delete ClassInstanceCreation(119)", "Delete Assignment: =(120)", "Delete ExpressionStatement(121)", "Delete ThisExpression(122)", "Delete SimpleName: enableWrite(123)", "Delete FieldAccess(124)", "Delete SimpleName: config(125)", "Delete SimpleName: getBoolean(126)", "Delete QualifiedName: ExecConstants.SYS_STORE_PROVIDER_LOCAL_ENABLE_WRITE(127)", "Delete MethodInvocation(128)", "Delete Assignment: =(129)", "Delete ExpressionStatement(130)", "Delete ThisExpression(131)", "Delete SimpleName: pstores(132)", "Delete FieldAccess(133)", "Delete SimpleName: enableWrite(134)", "Delete NullLiteral(135)", "Delete SimpleName: ConcurrentHashMap(136)", "Delete SimpleType: ConcurrentHashMap(137)", "Delete SimpleName: PStoreConfig(138)", "Delete SimpleType: PStoreConfig(139)", "Delete WildcardType: ?(140)", "Delete ParameterizedType: PStoreConfig<?>(141)", "Delete SimpleName: PStore(142)", "Delete SimpleType: PStore(143)", "Delete WildcardType: ?(144)", "Delete ParameterizedType: PStore<?>(145)", "Delete ParameterizedType: ConcurrentHashMap<PStoreConfig<?>,PStore<?>>(146)", "Delete ClassInstanceCreation(147)", "Delete ConditionalExpression(148)", "Delete Assignment: =(149)", "Delete ExpressionStatement(150)", "Delete ThisExpression(151)", "Delete SimpleName: estoreProvider(152)", "Delete FieldAccess(153)", "Delete SimpleType: LocalEStoreProvider(155)", "Delete ClassInstanceCreation(156)", "Delete Assignment: =(157)", "Delete ExpressionStatement(158)", "Delete ThisExpression(159)", "Delete SimpleName: fs(160)", "Delete FieldAccess(161)", "Delete SimpleName: FilePStore(162)", "Delete SimpleName: getFileSystem(163)", "Delete SimpleName: config(164)", "Delete SimpleName: path(165)", "Delete MethodInvocation(166)", "Delete Assignment: =(167)", "Delete ExpressionStatement(168)", "Delete Block(169)", "Delete MethodDeclaration(170)", "Delete SimpleName: registry(179)", "Delete SimpleName: getConfig(180)", "Delete MethodInvocation(181)", "Delete ConstructorInvocation(182)", "Delete SimpleName: Override(185)", "Delete MarkerAnnotation(186)", "Delete Modifier: public(187)", "Delete PrimitiveType: void(188)", "Delete SimpleName: close(189)", "Delete Block(190)", "Delete MethodDeclaration(191)", "Delete SimpleName: Override(192)", "Delete MarkerAnnotation(193)", "Delete Modifier: public(194)", "Delete SimpleName: V(195)", "Delete TypeParameter(196)", "Delete SimpleName: PStore(197)", "Delete SimpleType: PStore(198)", "Delete SimpleName: V(199)", "Delete SimpleType: V(200)", "Delete ParameterizedType: PStore<V>(201)", "Delete SimpleName: getStore(202)", "Delete SimpleName: PStoreConfig(203)", "Delete SimpleType: PStoreConfig(204)", "Delete SimpleName: V(205)", "Delete SimpleType: V(206)", "Delete ParameterizedType: PStoreConfig<V>(207)", "Delete SimpleName: storeConfig(208)", "Delete SingleVariableDeclaration(209)", "Delete SimpleName: IOException(210)", "Delete SimpleType: IOException(211)", "Delete SimpleName: storeConfig(212)", "Delete SimpleName: getMode(213)", "Delete MethodInvocation(214)", "Delete SimpleName: EPHEMERAL(215)", "Delete SwitchCase(216)", "Delete SimpleName: estoreProvider(217)", "Delete SimpleName: getStore(218)", "Delete SimpleName: storeConfig(219)", "Delete MethodInvocation(220)", "Delete ReturnStatement(221)", "Delete SimpleName: BLOB_PERSISTENT(222)", "Delete SwitchCase(223)", "Delete SimpleName: PERSISTENT(224)", "Delete SwitchCase(225)", "Delete SimpleName: getPStore(226)", "Delete SimpleName: storeConfig(227)", "Delete MethodInvocation(228)", "Delete ReturnStatement(229)", "Delete SwitchCase(230)", "Delete SimpleName: IllegalStateException(231)", "Delete SimpleType: IllegalStateException(232)", "Delete ClassInstanceCreation(233)", "Delete ThrowStatement(234)", "Delete SwitchStatement(235)", "Delete Block(236)", "Delete MethodDeclaration(237)", "Delete Modifier: private(238)", "Delete SimpleName: V(239)", "Delete TypeParameter(240)", "Delete SimpleName: PStore(241)", "Delete SimpleType: PStore(242)", "Delete SimpleName: V(243)", "Delete SimpleType: V(244)", "Delete ParameterizedType: PStore<V>(245)", "Delete SimpleName: getPStore(246)", "Delete SimpleName: PStoreConfig(247)", "Delete SimpleType: PStoreConfig(248)", "Delete SimpleName: V(249)", "Delete SimpleType: V(250)", "Delete ParameterizedType: PStoreConfig<V>(251)", "Delete SimpleName: storeConfig(252)", "Delete SingleVariableDeclaration(253)", "Delete SimpleName: IOException(254)", "Delete SimpleType: IOException(255)", "Delete SimpleName: enableWrite(256)", "Delete SimpleName: FilePStore(257)", "Delete SimpleType: FilePStore(258)", "Delete SimpleName: V(259)", "Delete SimpleType: V(260)", "Delete ParameterizedType: FilePStore<V>(261)", "Delete SimpleName: fs(262)", "Delete SimpleName: path(263)", "Delete SimpleName: storeConfig(264)", "Delete ClassInstanceCreation(265)", "Delete ReturnStatement(266)", "Delete Block(267)", "Delete SimpleName: PStore(268)", "Delete SimpleType: PStore(269)", "Delete SimpleName: V(270)", "Delete SimpleType: V(271)", "Delete ParameterizedType: PStore<V>(272)", "Delete SimpleName: p(273)", "Delete SimpleName: NoWriteLocalPStore(274)", "Delete SimpleType: NoWriteLocalPStore(275)", "Delete SimpleName: V(276)", "Delete SimpleType: V(277)", "Delete ParameterizedType: NoWriteLocalPStore<V>(278)", "Delete ClassInstanceCreation(279)", "Delete VariableDeclarationFragment(280)", "Delete VariableDeclarationStatement(281)", "Delete SimpleName: PStore(282)", "Delete SimpleType: PStore(283)", "Delete WildcardType: ?(284)", "Delete ParameterizedType: PStore<?>(285)", "Delete SimpleName: p2(286)", "Delete SimpleName: pstores(287)", "Delete SimpleName: putIfAbsent(288)", "Delete SimpleName: storeConfig(289)", "Delete SimpleName: p(290)", "Delete MethodInvocation(291)", "Delete VariableDeclarationFragment(292)", "Delete VariableDeclarationStatement(293)", "Delete SimpleName: p2(294)", "Delete NullLiteral(295)", "Delete InfixExpression: !=(296)", "Delete SimpleName: PStore(297)", "Delete SimpleType: PStore(298)", "Delete SimpleName: V(299)", "Delete SimpleType: V(300)", "Delete ParameterizedType: PStore<V>(301)", "Delete SimpleName: p2(302)", "Delete CastExpression(303)", "Delete ReturnStatement(304)", "Delete Block(305)", "Delete IfStatement(306)", "Delete SimpleName: p(307)", "Delete ReturnStatement(308)", "Delete Block(309)", "Delete IfStatement(310)", "Delete Block(311)", "Delete MethodDeclaration(312)", "Delete SimpleName: Override(313)", "Delete MarkerAnnotation(314)", "Delete Modifier: public(315)", "Delete PrimitiveType: void(316)", "Delete SimpleName: start(317)", "Delete Block(318)", "Delete MethodDeclaration(319)"]}}, {"NoWriteLocalPStore_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL Javadoc", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL QualifiedName: org.apache.drill.exec.store.sys.local", "DEL TagElement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map.Entry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ConcurrentMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.Maps", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ExpressionStatement", "DEL NullLiteral", "DEL QualifiedName: org.slf4j.Logger", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL ReturnStatement", "DEL SimpleName: V", "DEL SimpleType: String", "DEL SimpleName: blobMap", "DEL Block", "DEL SingleVariableDeclaration", "DEL InfixExpression: ==", "DEL Modifier: private", "DEL ParameterizedType: ConcurrentMap<String,V>", "DEL SimpleName: key", "DEL SimpleName: put", "DEL Modifier: public", "DEL ParameterizedType: PStore<V>", "DEL PrimitiveType: void", "DEL SimpleName: entrySet", "DEL SimpleName: value", "DEL SimpleName: key", "DEL SimpleType: Iterator", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleType: V", "DEL SimpleName: key", "DEL SimpleName: String", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: remove", "DEL SimpleName: String", "DEL SimpleName: putIfAbsent", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL PrimitiveType: void", "DEL ReturnStatement", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SuperConstructorInvocation", "DEL Modifier: final", "DEL SimpleName: map", "DEL SimpleName: put", "DEL SimpleName: Maps", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: Override", "DEL SimpleName: remove", "DEL TypeParameter", "DEL SimpleName: V", "DEL SimpleName: V", "DEL MarkerAnnotation", "DEL MarkerAnnotation", "DEL SimpleName: logger", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleType: V", "DEL SimpleName: iterator", "DEL SimpleName: ConcurrentMap", "DEL PrimitiveType: void", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SimpleName: map", "DEL SimpleName: key", "DEL SimpleName: getLogger", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: V", "DEL SimpleType: String", "DEL SimpleType: V", "DEL SimpleName: Iterator", "DEL SimpleName: String", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: V", "DEL ParameterizedType: Iterator<Entry<String,V>>", "DEL PrimitiveType: boolean", "DEL SimpleName: ConcurrentMap", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleType: V", "DEL SimpleName: Override", "DEL Modifier: private", "DEL SimpleType: Entry", "DEL SingleVariableDeclaration", "DEL SimpleName: blobMap", "DEL Block", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: NoWriteLocalPStore", "DEL Modifier: public", "DEL SimpleType: String", "DEL SimpleName: Entry", "DEL MethodInvocation", "DEL SimpleName: get", "DEL FieldDeclaration", "DEL SimpleName: value", "DEL SimpleName: String", "DEL SimpleType: PStore", "DEL Modifier: public", "DEL SimpleName: map", "DEL SimpleName: Override", "DEL Block", "DEL SimpleType: V", "DEL ExpressionStatement", "DEL SimpleName: map", "DEL SimpleName: key", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: V", "DEL SimpleName: newConcurrentMap", "DEL SimpleName: V", "DEL SimpleType: ConcurrentMap", "DEL SimpleName: NoWriteLocalPStore", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: Maps", "DEL SimpleName: putIfAbsent", "DEL SimpleType: ConcurrentMap", "DEL ParameterizedType: Entry<String,V>", "DEL MethodInvocation", "DEL SimpleType: NoWriteLocalPStore", "DEL Modifier: public", "DEL MethodDeclaration", "DEL Modifier: static", "DEL SimpleType: V", "DEL SimpleName: Override", "DEL TypeLiteral", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL SimpleName: map", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: V", "DEL Modifier: public", "DEL Block", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SimpleName: map", "DEL SimpleName: iterator", "DEL SimpleName: value", "DEL MethodDeclaration", "DEL SimpleName: PStore", "DEL SimpleName: NoWriteLocalPStore", "DEL ReturnStatement", "DEL Block", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: get", "DEL SimpleName: delete", "DEL MarkerAnnotation", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL SimpleName: close", "DEL SimpleName: V", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: newConcurrentMap", "DEL ParameterizedType: ConcurrentMap<String,V>"]}]}}, {"NoWriteLocalPStore_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.local(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.util.Iterator(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.util.Map.Entry(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.util.concurrent.ConcurrentMap(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStore(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: com.google.common.collect.Maps(25)", "Delete ImportDeclaration(26)", "Delete Modifier: public(27)", "Delete SimpleName: NoWriteLocalPStore(28)", "Delete SimpleName: V(29)", "Delete TypeParameter(30)", "Delete SimpleName: PStore(31)", "Delete SimpleType: PStore(32)", "Delete SimpleName: V(33)", "Delete SimpleType: V(34)", "Delete ParameterizedType: PStore<V>(35)", "Delete Modifier: static(36)", "Delete Modifier: final(37)", "Delete QualifiedName: org.slf4j.Logger(38)", "Delete SimpleType: org.slf4j.Logger(39)", "Delete SimpleName: logger(40)", "Delete QualifiedName: org.slf4j.LoggerFactory(41)", "Delete SimpleName: getLogger(42)", "Delete SimpleName: NoWriteLocalPStore(43)", "Delete SimpleType: NoWriteLocalPStore(44)", "Delete TypeLiteral(45)", "Delete MethodInvocation(46)", "Delete VariableDeclarationFragment(47)", "Delete FieldDeclaration(48)", "Delete Modifier: private(49)", "Delete SimpleName: ConcurrentMap(50)", "Delete SimpleType: ConcurrentMap(51)", "Delete SimpleName: String(52)", "Delete SimpleType: String(53)", "Delete SimpleName: V(54)", "Delete SimpleType: V(55)", "Delete ParameterizedType: ConcurrentMap<String,V>(56)", "Delete SimpleName: map(57)", "Delete SimpleName: Maps(58)", "Delete SimpleName: newConcurrentMap(59)", "Delete MethodInvocation(60)", "Delete VariableDeclarationFragment(61)", "Delete FieldDeclaration(62)", "Delete Modifier: private(63)", "Delete SimpleName: ConcurrentMap(64)", "Delete SimpleType: ConcurrentMap(65)", "Delete SimpleName: String(66)", "Delete SimpleType: String(67)", "Delete SimpleName: V(68)", "Delete SimpleType: V(69)", "Delete ParameterizedType: ConcurrentMap<String,V>(70)", "Delete SimpleName: blobMap(71)", "Delete SimpleName: Maps(72)", "Delete SimpleName: newConcurrentMap(73)", "Delete MethodInvocation(74)", "Delete VariableDeclarationFragment(75)", "Delete FieldDeclaration(76)", "Delete Modifier: public(77)", "Delete SimpleName: NoWriteLocalPStore(78)", "Delete SuperConstructorInvocation(79)", "Delete Block(80)", "Delete MethodDeclaration(81)", "Delete SimpleName: Override(82)", "Delete MarkerAnnotation(83)", "Delete Modifier: public(84)", "Delete SimpleName: Iterator(85)", "Delete SimpleType: Iterator(86)", "Delete SimpleName: Entry(87)", "Delete SimpleType: Entry(88)", "Delete SimpleName: String(89)", "Delete SimpleType: String(90)", "Delete SimpleName: V(91)", "Delete SimpleType: V(92)", "Delete ParameterizedType: Entry<String,V>(93)", "Delete ParameterizedType: Iterator<Entry<String,V>>(94)", "Delete SimpleName: iterator(95)", "Delete SimpleName: map(96)", "Delete SimpleName: entrySet(97)", "Delete MethodInvocation(98)", "Delete SimpleName: iterator(99)", "Delete MethodInvocation(100)", "Delete ReturnStatement(101)", "Delete Block(102)", "Delete MethodDeclaration(103)", "Delete SimpleName: Override(104)", "Delete MarkerAnnotation(105)", "Delete Modifier: public(106)", "Delete SimpleName: V(107)", "Delete SimpleType: V(108)", "Delete SimpleName: get(109)", "Delete SimpleName: String(110)", "Delete SimpleType: String(111)", "Delete SimpleName: key(112)", "Delete SingleVariableDeclaration(113)", "Delete SimpleName: map(114)", "Delete SimpleName: get(115)", "Delete SimpleName: key(116)", "Delete MethodInvocation(117)", "Delete ReturnStatement(118)", "Delete Block(119)", "Delete MethodDeclaration(120)", "Delete SimpleName: Override(121)", "Delete MarkerAnnotation(122)", "Delete Modifier: public(123)", "Delete PrimitiveType: void(124)", "Delete SimpleName: put(125)", "Delete SimpleName: String(126)", "Delete SimpleType: String(127)", "Delete SimpleName: key(128)", "Delete SingleVariableDeclaration(129)", "Delete SimpleName: V(130)", "Delete SimpleType: V(131)", "Delete SimpleName: value(132)", "Delete SingleVariableDeclaration(133)", "Delete SimpleName: map(134)", "Delete SimpleName: put(135)", "Delete SimpleName: key(136)", "Delete SimpleName: value(137)", "Delete MethodInvocation(138)", "Delete ExpressionStatement(139)", "Delete Block(140)", "Delete MethodDeclaration(141)", "Delete SimpleName: Override(142)", "Delete MarkerAnnotation(143)", "Delete Modifier: public(144)", "Delete PrimitiveType: boolean(145)", "Delete SimpleName: putIfAbsent(146)", "Delete SimpleName: String(147)", "Delete SimpleType: String(148)", "Delete SimpleName: key(149)", "Delete SingleVariableDeclaration(150)", "Delete SimpleName: V(151)", "Delete SimpleType: V(152)", "Delete SimpleName: value(153)", "Delete SingleVariableDeclaration(154)", "Delete NullLiteral(155)", "Delete SimpleName: map(156)", "Delete SimpleName: putIfAbsent(157)", "Delete SimpleName: key(158)", "Delete SimpleName: value(159)", "Delete MethodInvocation(160)", "Delete InfixExpression: ==(161)", "Delete ReturnStatement(162)", "Delete Block(163)", "Delete MethodDeclaration(164)", "Delete SimpleName: Override(165)", "Delete MarkerAnnotation(166)", "Delete Modifier: public(167)", "Delete PrimitiveType: void(168)", "Delete SimpleName: delete(169)", "Delete SimpleName: String(170)", "Delete SimpleType: String(171)", "Delete SimpleName: key(172)", "Delete SingleVariableDeclaration(173)", "Delete SimpleName: map(174)", "Delete SimpleName: remove(175)", "Delete SimpleName: key(176)", "Delete MethodInvocation(177)", "Delete ExpressionStatement(178)", "Delete SimpleName: blobMap(179)", "Delete SimpleName: remove(180)", "Delete SimpleName: key(181)", "Delete MethodInvocation(182)", "Delete ExpressionStatement(183)", "Delete Block(184)", "Delete MethodDeclaration(185)", "Delete SimpleName: Override(186)", "Delete MarkerAnnotation(187)", "Delete Modifier: public(188)", "Delete PrimitiveType: void(189)", "Delete SimpleName: close(190)", "Delete Block(191)", "Delete MethodDeclaration(192)", "Delete TypeDeclaration: class(193)"]}}, {"JacksonSerializer_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TagElement", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL QualifiedName: org.apache.drill.exec.store.sys.serialize", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL PackageDeclaration", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.fasterxml.jackson.databind.ObjectMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.fasterxml.jackson.databind.ObjectReader"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.fasterxml.jackson.databind.ObjectWriter", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: Class", "DEL SimpleName: val", "DEL MarkerAnnotation", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL Block", "DEL Modifier: private", "DEL SimpleName: reader", "DEL SimpleName: readValue", "DEL SimpleName: ObjectMapper", "DEL SimpleName: reader", "DEL QualifiedName: other.reader", "DEL PrimitiveType: byte", "DEL SimpleName: JacksonSerializer", "DEL SimpleName: JacksonSerializer", "DEL SimpleName: ObjectWriter", "DEL InfixExpression: +", "DEL SimpleType: ObjectWriter", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL SimpleName: result", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: hashCode", "DEL IfStatement", "DEL SimpleName: writeValueAsBytes", "DEL NullLiteral", "DEL Block", "DEL SimpleName: result", "DEL ArrayType: byte[]", "DEL SimpleName: deserialize", "DEL SimpleName: X", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: result", "DEL SimpleName: reader", "DEL SimpleType: X", "DEL IfStatement", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL NullLiteral", "DEL ParameterizedType: PClassSerializer<X>", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL ThisExpression", "DEL InfixExpression: +", "DEL SimpleName: mapper", "DEL BooleanLiteral: false", "DEL ConditionalExpression", "DEL ReturnStatement", "DEL InfixExpression: !=", "DEL PrimitiveType: int", "DEL SimpleName: writer", "DEL Block", "DEL SimpleName: logger", "DEL SimpleName: clazz", "DEL NumberLiteral: 31", "DEL ReturnStatement", "DEL SimpleName: prime", "DEL SimpleName: writer", "DEL Block", "DEL BooleanLiteral: false", "DEL InfixExpression: *", "DEL SimpleName: result", "DEL Modifier: final", "DEL Modifier: private", "DEL InfixExpression: ==", "DEL SimpleName: getClass", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: serialize", "DEL SimpleName: writer", "DEL SimpleName: mapper", "DEL SimpleName: writer", "DEL MethodDeclaration", "DEL BooleanLiteral: false", "DEL NullLiteral", "DEL SimpleType: ObjectReader", "DEL ReturnStatement", "DEL SimpleName: IOException", "DEL MarkerAnnotation", "DEL PrefixExpression: !", "DEL Modifier: final", "DEL BooleanLiteral: true", "DEL SimpleName: obj", "DEL IfStatement", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL Assignment: =", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: result", "DEL SimpleType: ObjectMapper", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL SimpleType: JacksonSerializer", "DEL ArrayType: byte[]", "DEL SimpleName: reader", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL InfixExpression: ==", "DEL IfStatement", "DEL SimpleName: hashCode", "DEL SimpleName: prime", "DEL SimpleType: Object", "DEL Block", "DEL SimpleName: writer", "DEL QualifiedName: org.slf4j.Logger", "DEL SimpleType: Class", "DEL ThisExpression", "DEL BooleanLiteral: true", "DEL SimpleType: X", "DEL SimpleName: obj", "DEL SimpleName: reader", "DEL SimpleType: IOException", "DEL Block", "DEL SimpleName: other", "DEL SimpleName: obj", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL SimpleName: equals", "DEL SimpleName: result", "DEL ThisExpression", "DEL SimpleName: hashCode", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL CastExpression", "DEL BooleanLiteral: false", "DEL SimpleName: X", "DEL InfixExpression: ==", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL Block", "DEL PrefixExpression: !", "DEL PrimitiveType: int", "DEL QualifiedName: other.reader", "DEL NullLiteral", "DEL SimpleType: JacksonSerializer", "DEL QualifiedName: other.writer", "DEL Modifier: public", "DEL PrimitiveType: boolean", "DEL Modifier: public", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: getClass", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ParameterizedType: Class<X>", "DEL BooleanLiteral: false", "DEL SimpleName: reader", "DEL Block", "DEL Modifier: static", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleName: Override", "DEL TypeLiteral", "DEL QualifiedName: other.writer", "DEL TypeParameter", "DEL InfixExpression: !=", "DEL SimpleName: bytes", "DEL Block", "DEL SingleVariableDeclaration", "DEL InfixExpression: *", "DEL InfixExpression: !=", "DEL SimpleName: Object", "DEL NullLiteral", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleType: JacksonSerializer", "DEL MethodInvocation", "DEL SimpleName: JacksonSerializer", "DEL SimpleName: writer", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: X", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL NumberLiteral: 0", "DEL SimpleName: val", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: X", "DEL Modifier: public", "DEL SimpleName: ObjectReader", "DEL MethodInvocation", "DEL SimpleName: mapper", "DEL ReturnStatement", "DEL SimpleType: PClassSerializer", "DEL NullLiteral", "DEL SimpleName: JacksonSerializer", "DEL ReturnStatement", "DEL SimpleName: reader", "DEL SimpleName: clazz", "DEL NumberLiteral: 1", "DEL SimpleName: writer", "DEL SimpleName: prime", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL Assignment: =", "DEL SimpleName: bytes", "DEL IfStatement", "DEL SimpleName: reader", "DEL ConditionalExpression", "DEL SimpleName: equals", "DEL SimpleName: writer", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleType: org.slf4j.Logger", "DEL Dimension", "DEL SimpleName: JacksonSerializer", "DEL SimpleName: getLogger", "DEL SimpleName: X", "DEL InfixExpression: ==", "DEL SimpleType: X", "DEL SimpleName: obj", "DEL NumberLiteral: 0", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: PClassSerializer", "DEL SimpleName: X", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: IOException", "DEL TypeDeclaration: class"]}]}}, {"JacksonSerializer_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.serialize(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: com.fasterxml.jackson.databind.ObjectMapper(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: com.fasterxml.jackson.databind.ObjectReader(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: com.fasterxml.jackson.databind.ObjectWriter(23)", "Delete ImportDeclaration(24)", "Delete Modifier: public(25)", "Delete SimpleName: JacksonSerializer(26)", "Delete SimpleName: X(27)", "Delete TypeParameter(28)", "Delete SimpleName: PClassSerializer(29)", "Delete SimpleType: PClassSerializer(30)", "Delete SimpleName: X(31)", "Delete SimpleType: X(32)", "Delete ParameterizedType: PClassSerializer<X>(33)", "Delete Modifier: static(34)", "Delete Modifier: final(35)", "Delete QualifiedName: org.slf4j.Logger(36)", "Delete SimpleType: org.slf4j.Logger(37)", "Delete SimpleName: logger(38)", "Delete QualifiedName: org.slf4j.LoggerFactory(39)", "Delete SimpleName: getLogger(40)", "Delete SimpleName: JacksonSerializer(41)", "Delete SimpleType: JacksonSerializer(42)", "Delete TypeLiteral(43)", "Delete MethodInvocation(44)", "Delete VariableDeclarationFragment(45)", "Delete FieldDeclaration(46)", "Delete Modifier: private(47)", "Delete SimpleName: ObjectWriter(48)", "Delete SimpleType: ObjectWriter(49)", "Delete SimpleName: writer(50)", "Delete VariableDeclarationFragment(51)", "Delete FieldDeclaration(52)", "Delete Modifier: private(53)", "Delete SimpleName: ObjectReader(54)", "Delete SimpleType: ObjectReader(55)", "Delete SimpleName: reader(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete Modifier: public(59)", "Delete SimpleName: JacksonSerializer(60)", "Delete SimpleName: ObjectMapper(61)", "Delete SimpleType: ObjectMapper(62)", "Delete SimpleName: mapper(63)", "Delete SingleVariableDeclaration(64)", "Delete SimpleName: Class(65)", "Delete SimpleType: Class(66)", "Delete SimpleName: X(67)", "Delete SimpleType: X(68)", "Delete ParameterizedType: Class<X>(69)", "Delete SimpleName: clazz(70)", "Delete SingleVariableDeclaration(71)", "Delete ThisExpression(72)", "Delete SimpleName: reader(73)", "Delete FieldAccess(74)", "Delete SimpleName: mapper(75)", "Delete SimpleName: reader(76)", "Delete SimpleName: clazz(77)", "Delete MethodInvocation(78)", "Delete Assignment: =(79)", "Delete ExpressionStatement(80)", "Delete ThisExpression(81)", "Delete SimpleName: writer(82)", "Delete FieldAccess(83)", "Delete SimpleName: mapper(84)", "Delete SimpleName: writer(85)", "Delete MethodInvocation(86)", "Delete Assignment: =(87)", "Delete ExpressionStatement(88)", "Delete Block(89)", "Delete MethodDeclaration(90)", "Delete SimpleName: Override(91)", "Delete MarkerAnnotation(92)", "Delete Modifier: public(93)", "Delete PrimitiveType: byte(94)", "Delete Dimension(95)", "Delete ArrayType: byte[](96)", "Delete SimpleName: serialize(97)", "Delete SimpleName: X(98)", "Delete SimpleType: X(99)", "Delete SimpleName: val(100)", "Delete SingleVariableDeclaration(101)", "Delete SimpleName: IOException(102)", "Delete SimpleType: IOException(103)", "Delete SimpleName: writer(104)", "Delete SimpleName: writeValueAsBytes(105)", "Delete SimpleName: val(106)", "Delete MethodInvocation(107)", "Delete ReturnStatement(108)", "Delete Block(109)", "Delete MethodDeclaration(110)", "Delete SimpleName: Override(111)", "Delete MarkerAnnotation(112)", "Delete Modifier: public(113)", "Delete SimpleName: X(114)", "Delete SimpleType: X(115)", "Delete SimpleName: deserialize(116)", "Delete PrimitiveType: byte(117)", "Delete Dimension(118)", "Delete ArrayType: byte[](119)", "Delete SimpleName: bytes(120)", "Delete SingleVariableDeclaration(121)", "Delete SimpleName: IOException(122)", "Delete SimpleType: IOException(123)", "Delete SimpleName: reader(124)", "Delete SimpleName: readValue(125)", "Delete SimpleName: bytes(126)", "Delete MethodInvocation(127)", "Delete ReturnStatement(128)", "Delete Block(129)", "Delete MethodDeclaration(130)", "Delete SimpleName: Override(131)", "Delete MarkerAnnotation(132)", "Delete Modifier: public(133)", "Delete PrimitiveType: int(134)", "Delete SimpleName: hashCode(135)", "Delete Modifier: final(136)", "Delete PrimitiveType: int(137)", "Delete SimpleName: prime(138)", "Delete NumberLiteral: 31(139)", "Delete VariableDeclarationFragment(140)", "Delete VariableDeclarationStatement(141)", "Delete PrimitiveType: int(142)", "Delete SimpleName: result(143)", "Delete NumberLiteral: 1(144)", "Delete VariableDeclarationFragment(145)", "Delete VariableDeclarationStatement(146)", "Delete SimpleName: result(147)", "Delete SimpleName: prime(148)", "Delete SimpleName: result(149)", "Delete InfixExpression: *(150)", "Delete SimpleName: reader(151)", "Delete NullLiteral(152)", "Delete InfixExpression: ==(153)", "Delete ParenthesizedExpression(154)", "Delete NumberLiteral: 0(155)", "Delete SimpleName: reader(156)", "Delete SimpleName: hashCode(157)", "Delete MethodInvocation(158)", "Delete ConditionalExpression(159)", "Delete ParenthesizedExpression(160)", "Delete InfixExpression: +(161)", "Delete Assignment: =(162)", "Delete ExpressionStatement(163)", "Delete SimpleName: result(164)", "Delete SimpleName: prime(165)", "Delete SimpleName: result(166)", "Delete InfixExpression: *(167)", "Delete SimpleName: writer(168)", "Delete NullLiteral(169)", "Delete InfixExpression: ==(170)", "Delete ParenthesizedExpression(171)", "Delete NumberLiteral: 0(172)", "Delete SimpleName: writer(173)", "Delete SimpleName: hashCode(174)", "Delete MethodInvocation(175)", "Delete ConditionalExpression(176)", "Delete ParenthesizedExpression(177)", "Delete InfixExpression: +(178)", "Delete Assignment: =(179)", "Delete ExpressionStatement(180)", "Delete SimpleName: result(181)", "Delete ReturnStatement(182)", "Delete Block(183)", "Delete MethodDeclaration(184)", "Delete SimpleName: Override(185)", "Delete MarkerAnnotation(186)", "Delete Modifier: public(187)", "Delete PrimitiveType: boolean(188)", "Delete SimpleName: equals(189)", "Delete SimpleName: Object(190)", "Delete SimpleType: Object(191)", "Delete SimpleName: obj(192)", "Delete SingleVariableDeclaration(193)", "Delete ThisExpression(194)", "Delete SimpleName: obj(195)", "Delete InfixExpression: ==(196)", "Delete BooleanLiteral: true(197)", "Delete ReturnStatement(198)", "Delete Block(199)", "Delete IfStatement(200)", "Delete SimpleName: obj(201)", "Delete NullLiteral(202)", "Delete InfixExpression: ==(203)", "Delete BooleanLiteral: false(204)", "Delete ReturnStatement(205)", "Delete Block(206)", "Delete IfStatement(207)", "Delete SimpleName: getClass(208)", "Delete MethodInvocation(209)", "Delete SimpleName: obj(210)", "Delete SimpleName: getClass(211)", "Delete MethodInvocation(212)", "Delete InfixExpression: !=(213)", "Delete BooleanLiteral: false(214)", "Delete ReturnStatement(215)", "Delete Block(216)", "Delete IfStatement(217)", "Delete SimpleName: JacksonSerializer(218)", "Delete SimpleType: JacksonSerializer(219)", "Delete SimpleName: other(220)", "Delete SimpleName: JacksonSerializer(221)", "Delete SimpleType: JacksonSerializer(222)", "Delete SimpleName: obj(223)", "Delete CastExpression(224)", "Delete VariableDeclarationFragment(225)", "Delete VariableDeclarationStatement(226)", "Delete SimpleName: reader(227)", "Delete NullLiteral(228)", "Delete InfixExpression: ==(229)", "Delete QualifiedName: other.reader(230)", "Delete NullLiteral(231)", "Delete InfixExpression: !=(232)", "Delete BooleanLiteral: false(233)", "Delete ReturnStatement(234)", "Delete Block(235)", "Delete IfStatement(236)", "Delete Block(237)", "Delete SimpleName: reader(238)", "Delete SimpleName: equals(239)", "Delete QualifiedName: other.reader(240)", "Delete MethodInvocation(241)", "Delete PrefixExpression: !(242)", "Delete BooleanLiteral: false(243)", "Delete ReturnStatement(244)", "Delete Block(245)", "Delete IfStatement(246)", "Delete IfStatement(247)", "Delete SimpleName: writer(248)", "Delete NullLiteral(249)", "Delete InfixExpression: ==(250)", "Delete QualifiedName: other.writer(251)", "Delete NullLiteral(252)", "Delete InfixExpression: !=(253)", "Delete BooleanLiteral: false(254)", "Delete ReturnStatement(255)", "Delete Block(256)", "Delete IfStatement(257)", "Delete Block(258)", "Delete SimpleName: writer(259)", "Delete SimpleName: equals(260)", "Delete QualifiedName: other.writer(261)", "Delete MethodInvocation(262)", "Delete PrefixExpression: !(263)", "Delete BooleanLiteral: false(264)", "Delete ReturnStatement(265)", "Delete Block(266)", "Delete IfStatement(267)", "Delete IfStatement(268)", "Delete BooleanLiteral: true(269)", "Delete ReturnStatement(270)", "Delete Block(271)", "Delete MethodDeclaration(272)", "Delete TypeDeclaration: class(273)"]}}, {"ProtoSerializer_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL QualifiedName: org.apache.drill.exec.store.sys.serialize", "DEL TextElement: limitations under the License.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: See the License for the specific language governing permissions and"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.io.output.ByteArrayOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.dyuproject.protostuff.JsonIOUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.dyuproject.protostuff.Schema", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.protobuf.Message"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: X", "DEL SingleVariableDeclaration", "DEL SimpleName: toByteArray", "DEL ReturnStatement", "DEL QualifiedName: Message.Builder", "DEL SimpleName: X", "DEL Block", "DEL SimpleName: readSchema", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: readSchema", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: writeTo", "DEL ReturnStatement", "DEL SimpleType: Schema", "DEL ParameterizedType: Schema<B>", "DEL FieldAccess", "DEL InfixExpression: +", "DEL SimpleType: B", "DEL FieldDeclaration", "DEL SimpleName: B", "DEL SimpleName: readSchema", "DEL SimpleType: X", "DEL SimpleName: prime", "DEL NumberLiteral: 0", "DEL QualifiedName: other.writeSchema", "DEL SimpleName: ProtoSerializer", "DEL SimpleName: X", "DEL ParenthesizedExpression", "DEL ParameterizedType: Schema<B>", "DEL Assignment: =", "DEL SimpleName: equals", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: Schema", "DEL SimpleName: readSchema", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: equals", "DEL NumberLiteral: 0", "DEL SimpleName: Object", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: prime", "DEL IfStatement", "DEL Modifier: public", "DEL ParameterizedType: Schema<X>", "DEL FieldAccess", "DEL MethodDeclaration", "DEL SimpleName: writeSchema", "DEL SimpleName: obj", "DEL SimpleName: Schema", "DEL MethodInvocation", "DEL SimpleType: Schema", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL SimpleName: ByteArrayOutputStream", "DEL ExpressionStatement", "DEL SimpleName: readSchema", "DEL InfixExpression: ==", "DEL NumberLiteral: 31", "DEL TypeParameter", "DEL InfixExpression: ==", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL CastExpression", "DEL Block", "DEL SimpleName: B", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL TypeParameter", "DEL SimpleType: X", "DEL PrimitiveType: int", "DEL SimpleName: X", "DEL MethodDeclaration", "DEL SimpleName: obj", "DEL SimpleName: Schema", "DEL InfixExpression: ==", "DEL ParameterizedType: PClassSerializer<X>", "DEL InfixExpression: !=", "DEL SimpleName: ProtoSerializer", "DEL SimpleName: B", "DEL ParenthesizedExpression", "DEL SimpleName: val", "DEL ExpressionStatement", "DEL CastExpression", "DEL PrefixExpression: !", "DEL SimpleName: mergeFrom", "DEL NullLiteral", "DEL ReturnStatement", "DEL PrimitiveType: byte", "DEL MarkerAnnotation", "DEL SimpleName: b", "DEL SimpleName: prime", "DEL Block", "DEL SimpleName: result", "DEL MethodInvocation", "DEL SimpleName: hashCode", "DEL Block", "DEL IfStatement", "DEL BooleanLiteral: false", "DEL SimpleName: build", "DEL SimpleName: readSchema", "DEL MarkerAnnotation", "DEL SimpleName: val", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleName: obj", "DEL Block", "DEL SimpleName: writeSchema", "DEL SuperConstructorInvocation", "DEL SimpleName: writeSchema", "DEL MethodDeclaration", "DEL SimpleName: result", "DEL QualifiedName: other.readSchema", "DEL ThisExpression", "DEL SimpleName: readSchema", "DEL BooleanLiteral: false", "DEL SimpleName: PClassSerializer", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SimpleName: baos", "DEL InfixExpression: ==", "DEL MarkerAnnotation", "DEL SimpleType: Message.Builder", "DEL MarkerAnnotation", "DEL BooleanLiteral: true", "DEL BooleanLiteral: false", "DEL StringLiteral: \"unchecked\"", "DEL Block", "DEL ConditionalExpression", "DEL ExpressionStatement", "DEL SimpleName: bytes", "DEL ParameterizedType: Schema<X>", "DEL SimpleName: readSchema", "DEL InfixExpression: +", "DEL ThisExpression", "DEL SimpleType: ByteArrayOutputStream", "DEL MethodDeclaration", "DEL NullLiteral", "DEL SimpleName: other", "DEL ReturnStatement", "DEL Block", "DEL SimpleType: ProtoSerializer", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL SimpleName: JsonIOUtil", "DEL SimpleName: ProtoSerializer", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: readSchema", "DEL Modifier: public", "DEL IfStatement", "DEL SimpleName: Override", "DEL SimpleName: Override", "DEL SimpleName: writeSchema", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL SimpleName: baos", "DEL SimpleName: Schema", "DEL NullLiteral", "DEL SimpleName: result", "DEL SimpleName: newMessage", "DEL MethodInvocation", "DEL SimpleName: hashCode", "DEL SingleVariableDeclaration", "DEL SimpleName: JsonIOUtil", "DEL SimpleName: result", "DEL SimpleName: deserialize", "DEL SimpleName: X", "DEL SimpleName: X", "DEL SimpleName: X", "DEL VariableDeclarationStatement", "DEL SimpleType: B", "DEL PrimitiveType: boolean", "DEL SimpleName: writeSchema", "DEL QualifiedName: other.writeSchema", "DEL SimpleName: B", "DEL SimpleName: Override", "DEL ParenthesizedExpression", "DEL InfixExpression: *", "DEL SimpleType: IOException", "DEL Block", "DEL IfStatement", "DEL Modifier: private", "DEL SimpleType: Schema", "DEL MethodInvocation", "DEL SimpleType: ProtoSerializer", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: final", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL SimpleName: getClass", "DEL SimpleName: baos", "DEL SimpleName: obj", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL SimpleName: b", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleType: ByteArrayOutputStream", "DEL SimpleName: obj", "DEL FieldDeclaration", "DEL Block", "DEL IfStatement", "DEL ExpressionStatement", "DEL PrefixExpression: !", "DEL SimpleName: ProtoSerializer", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL BooleanLiteral: false", "DEL PrimitiveType: int", "DEL SimpleName: hashCode", "DEL QualifiedName: other.readSchema", "DEL SimpleName: writeSchema", "DEL IfStatement", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL SimpleName: equals", "DEL SimpleType: X", "DEL Modifier: public", "DEL BooleanLiteral: false", "DEL SimpleName: X", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: writeSchema", "DEL SimpleName: writeSchema", "DEL SimpleName: readSchema", "DEL Block", "DEL ParenthesizedExpression", "DEL SimpleName: getClass", "DEL NullLiteral", "DEL PrimitiveType: byte", "DEL BooleanLiteral: false", "DEL VariableDeclarationFragment", "DEL InfixExpression: *", "DEL TypeDeclaration: class", "DEL SimpleName: serialize", "DEL SimpleType: PClassSerializer", "DEL Modifier: private", "DEL SimpleName: IOException", "DEL SimpleType: B", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL InfixExpression: ==", "DEL BooleanLiteral: false", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL SimpleType: X", "DEL Block", "DEL SimpleName: bytes", "DEL ReturnStatement", "DEL Modifier: public", "DEL Dimension", "DEL ConditionalExpression", "DEL SingleMemberAnnotation", "DEL SimpleName: result", "DEL InfixExpression: !=", "DEL BooleanLiteral: false", "DEL VariableDeclarationFragment", "DEL SimpleType: X", "DEL Modifier: public", "DEL SimpleName: writeSchema", "DEL SimpleType: Schema", "DEL SingleVariableDeclaration", "DEL SimpleName: SuppressWarnings", "DEL ArrayType: byte[]", "DEL SimpleType: Object", "DEL ReturnStatement", "DEL NullLiteral", "DEL SimpleName: b", "DEL SimpleName: result", "DEL Assignment: =", "DEL ReturnStatement", "DEL Block"]}]}}, {"ProtoSerializer_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.serialize(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: org.apache.commons.io.output.ByteArrayOutputStream(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: com.dyuproject.protostuff.JsonIOUtil(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: com.dyuproject.protostuff.Schema(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: com.google.protobuf.Message(25)", "Delete ImportDeclaration(26)", "Delete Modifier: public(27)", "Delete SimpleName: ProtoSerializer(28)", "Delete SimpleName: X(29)", "Delete TypeParameter(30)", "Delete SimpleName: B(31)", "Delete QualifiedName: Message.Builder(32)", "Delete SimpleType: Message.Builder(33)", "Delete TypeParameter(34)", "Delete SimpleName: PClassSerializer(35)", "Delete SimpleType: PClassSerializer(36)", "Delete SimpleName: X(37)", "Delete SimpleType: X(38)", "Delete ParameterizedType: PClassSerializer<X>(39)", "Delete Modifier: private(40)", "Delete Modifier: final(41)", "Delete SimpleName: Schema(42)", "Delete SimpleType: Schema(43)", "Delete SimpleName: X(44)", "Delete SimpleType: X(45)", "Delete ParameterizedType: Schema<X>(46)", "Delete SimpleName: writeSchema(47)", "Delete VariableDeclarationFragment(48)", "Delete FieldDeclaration(49)", "Delete Modifier: private(50)", "Delete Modifier: final(51)", "Delete SimpleName: Schema(52)", "Delete SimpleType: Schema(53)", "Delete SimpleName: B(54)", "Delete SimpleType: B(55)", "Delete ParameterizedType: Schema<B>(56)", "Delete SimpleName: readSchema(57)", "Delete VariableDeclarationFragment(58)", "Delete FieldDeclaration(59)", "Delete Modifier: public(60)", "Delete SimpleName: ProtoSerializer(61)", "Delete SimpleName: Schema(62)", "Delete SimpleType: Schema(63)", "Delete SimpleName: X(64)", "Delete SimpleType: X(65)", "Delete ParameterizedType: Schema<X>(66)", "Delete SimpleName: writeSchema(67)", "Delete SingleVariableDeclaration(68)", "Delete SimpleName: Schema(69)", "Delete SimpleType: Schema(70)", "Delete SimpleName: B(71)", "Delete SimpleType: B(72)", "Delete ParameterizedType: Schema<B>(73)", "Delete SimpleName: readSchema(74)", "Delete SingleVariableDeclaration(75)", "Delete SuperConstructorInvocation(76)", "Delete ThisExpression(77)", "Delete SimpleName: writeSchema(78)", "Delete FieldAccess(79)", "Delete SimpleName: writeSchema(80)", "Delete Assignment: =(81)", "Delete ExpressionStatement(82)", "Delete ThisExpression(83)", "Delete SimpleName: readSchema(84)", "Delete FieldAccess(85)", "Delete SimpleName: readSchema(86)", "Delete Assignment: =(87)", "Delete ExpressionStatement(88)", "Delete Block(89)", "Delete MethodDeclaration(90)", "Delete SimpleName: Override(91)", "Delete MarkerAnnotation(92)", "Delete Modifier: public(93)", "Delete PrimitiveType: byte(94)", "Delete Dimension(95)", "Delete ArrayType: byte[](96)", "Delete SimpleName: serialize(97)", "Delete SimpleName: X(98)", "Delete SimpleType: X(99)", "Delete SimpleName: val(100)", "Delete SingleVariableDeclaration(101)", "Delete SimpleName: IOException(102)", "Delete SimpleType: IOException(103)", "Delete SimpleName: ByteArrayOutputStream(104)", "Delete SimpleType: ByteArrayOutputStream(105)", "Delete SimpleName: baos(106)", "Delete SimpleName: ByteArrayOutputStream(107)", "Delete SimpleType: ByteArrayOutputStream(108)", "Delete ClassInstanceCreation(109)", "Delete VariableDeclarationFragment(110)", "Delete VariableDeclarationStatement(111)", "Delete SimpleName: JsonIOUtil(112)", "Delete SimpleName: writeTo(113)", "Delete SimpleName: baos(114)", "Delete SimpleName: val(115)", "Delete SimpleName: writeSchema(116)", "Delete BooleanLiteral: false(117)", "Delete MethodInvocation(118)", "Delete ExpressionStatement(119)", "Delete SimpleName: baos(120)", "Delete SimpleName: toByteArray(121)", "Delete MethodInvocation(122)", "Delete ReturnStatement(123)", "Delete Block(124)", "Delete MethodDeclaration(125)", "Delete SimpleName: SuppressWarnings(126)", "Delete StringLiteral: \"unchecked\"(127)", "Delete SingleMemberAnnotation(128)", "Delete SimpleName: Override(129)", "Delete MarkerAnnotation(130)", "Delete Modifier: public(131)", "Delete SimpleName: X(132)", "Delete SimpleType: X(133)", "Delete SimpleName: deserialize(134)", "Delete PrimitiveType: byte(135)", "Delete Dimension(136)", "Delete ArrayType: byte[](137)", "Delete SimpleName: bytes(138)", "Delete SingleVariableDeclaration(139)", "Delete SimpleName: IOException(140)", "Delete SimpleType: IOException(141)", "Delete SimpleName: B(142)", "Delete SimpleType: B(143)", "Delete SimpleName: b(144)", "Delete SimpleName: readSchema(145)", "Delete SimpleName: newMessage(146)", "Delete MethodInvocation(147)", "Delete VariableDeclarationFragment(148)", "Delete VariableDeclarationStatement(149)", "Delete SimpleName: JsonIOUtil(150)", "Delete SimpleName: mergeFrom(151)", "Delete SimpleName: bytes(152)", "Delete SimpleName: b(153)", "Delete SimpleName: readSchema(154)", "Delete BooleanLiteral: false(155)", "Delete MethodInvocation(156)", "Delete ExpressionStatement(157)", "Delete SimpleName: X(158)", "Delete SimpleType: X(159)", "Delete SimpleName: b(160)", "Delete SimpleName: build(161)", "Delete MethodInvocation(162)", "Delete CastExpression(163)", "Delete ReturnStatement(164)", "Delete Block(165)", "Delete MethodDeclaration(166)", "Delete SimpleName: Override(167)", "Delete MarkerAnnotation(168)", "Delete Modifier: public(169)", "Delete PrimitiveType: int(170)", "Delete SimpleName: hashCode(171)", "Delete Modifier: final(172)", "Delete PrimitiveType: int(173)", "Delete SimpleName: prime(174)", "Delete NumberLiteral: 31(175)", "Delete VariableDeclarationFragment(176)", "Delete VariableDeclarationStatement(177)", "Delete PrimitiveType: int(178)", "Delete SimpleName: result(179)", "Delete NumberLiteral: 1(180)", "Delete VariableDeclarationFragment(181)", "Delete VariableDeclarationStatement(182)", "Delete SimpleName: result(183)", "Delete SimpleName: prime(184)", "Delete SimpleName: result(185)", "Delete InfixExpression: *(186)", "Delete SimpleName: readSchema(187)", "Delete NullLiteral(188)", "Delete InfixExpression: ==(189)", "Delete ParenthesizedExpression(190)", "Delete NumberLiteral: 0(191)", "Delete SimpleName: readSchema(192)", "Delete SimpleName: hashCode(193)", "Delete MethodInvocation(194)", "Delete ConditionalExpression(195)", "Delete ParenthesizedExpression(196)", "Delete InfixExpression: +(197)", "Delete Assignment: =(198)", "Delete ExpressionStatement(199)", "Delete SimpleName: result(200)", "Delete SimpleName: prime(201)", "Delete SimpleName: result(202)", "Delete InfixExpression: *(203)", "Delete SimpleName: writeSchema(204)", "Delete NullLiteral(205)", "Delete InfixExpression: ==(206)", "Delete ParenthesizedExpression(207)", "Delete NumberLiteral: 0(208)", "Delete SimpleName: writeSchema(209)", "Delete SimpleName: hashCode(210)", "Delete MethodInvocation(211)", "Delete ConditionalExpression(212)", "Delete ParenthesizedExpression(213)", "Delete InfixExpression: +(214)", "Delete Assignment: =(215)", "Delete ExpressionStatement(216)", "Delete SimpleName: result(217)", "Delete ReturnStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete SimpleName: Override(221)", "Delete MarkerAnnotation(222)", "Delete Modifier: public(223)", "Delete PrimitiveType: boolean(224)", "Delete SimpleName: equals(225)", "Delete SimpleName: Object(226)", "Delete SimpleType: Object(227)", "Delete SimpleName: obj(228)", "Delete SingleVariableDeclaration(229)", "Delete ThisExpression(230)", "Delete SimpleName: obj(231)", "Delete InfixExpression: ==(232)", "Delete BooleanLiteral: true(233)", "Delete ReturnStatement(234)", "Delete Block(235)", "Delete IfStatement(236)", "Delete SimpleName: obj(237)", "Delete NullLiteral(238)", "Delete InfixExpression: ==(239)", "Delete BooleanLiteral: false(240)", "Delete ReturnStatement(241)", "Delete Block(242)", "Delete IfStatement(243)", "Delete SimpleName: getClass(244)", "Delete MethodInvocation(245)", "Delete SimpleName: obj(246)", "Delete SimpleName: getClass(247)", "Delete MethodInvocation(248)", "Delete InfixExpression: !=(249)", "Delete BooleanLiteral: false(250)", "Delete ReturnStatement(251)", "Delete Block(252)", "Delete IfStatement(253)", "Delete SimpleName: ProtoSerializer(254)", "Delete SimpleType: ProtoSerializer(255)", "Delete SimpleName: other(256)", "Delete SimpleName: ProtoSerializer(257)", "Delete SimpleType: ProtoSerializer(258)", "Delete SimpleName: obj(259)", "Delete CastExpression(260)", "Delete VariableDeclarationFragment(261)", "Delete VariableDeclarationStatement(262)", "Delete SimpleName: readSchema(263)", "Delete NullLiteral(264)", "Delete InfixExpression: ==(265)", "Delete QualifiedName: other.readSchema(266)", "Delete NullLiteral(267)", "Delete InfixExpression: !=(268)", "Delete BooleanLiteral: false(269)", "Delete ReturnStatement(270)", "Delete Block(271)", "Delete IfStatement(272)", "Delete Block(273)", "Delete SimpleName: readSchema(274)", "Delete SimpleName: equals(275)", "Delete QualifiedName: other.readSchema(276)", "Delete MethodInvocation(277)", "Delete PrefixExpression: !(278)", "Delete BooleanLiteral: false(279)", "Delete ReturnStatement(280)", "Delete Block(281)", "Delete IfStatement(282)", "Delete IfStatement(283)", "Delete SimpleName: writeSchema(284)", "Delete NullLiteral(285)", "Delete InfixExpression: ==(286)", "Delete QualifiedName: other.writeSchema(287)", "Delete NullLiteral(288)", "Delete InfixExpression: !=(289)", "Delete BooleanLiteral: false(290)", "Delete ReturnStatement(291)", "Delete Block(292)", "Delete IfStatement(293)", "Delete Block(294)", "Delete SimpleName: writeSchema(295)", "Delete SimpleName: equals(296)", "Delete QualifiedName: other.writeSchema(297)", "Delete MethodInvocation(298)", "Delete PrefixExpression: !(299)", "Delete BooleanLiteral: false(300)", "Delete ReturnStatement(301)", "Delete Block(302)", "Delete IfStatement(303)", "Delete IfStatement(304)", "Delete BooleanLiteral: true(305)", "Delete ReturnStatement(306)", "Delete Block(307)", "Delete MethodDeclaration(308)", "Delete TypeDeclaration: class(309)"]}}, {"ZkAbstractStore_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TagElement", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL PackageDeclaration", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL QualifiedName: org.apache.drill.exec.store.sys.zk"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collections"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Comparator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map.Entry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.Lists"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.curator.framework.CuratorFramework"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.curator.framework.api.ACLBackgroundPathAndBytesable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.curator.framework.recipes.cache.ChildData", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.curator.framework.recipes.cache.PathChildrenCache", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.curator.framework.recipes.cache.PathChildrenCache.StartMode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.CreateMode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.KeeperException", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: Exception", "DEL SimpleName: withPrefix", "DEL NullLiteral", "DEL SimpleName: e", "DEL SimpleName: path", "DEL MethodInvocation", "DEL TypeLiteral", "DEL Assignment: =", "DEL TextElement: Note that if the node exists, its mode will not be changed.", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL SimpleType: String", "DEL SimpleType: ChildData", "DEL SimpleType: DeferredEntry", "DEL ConditionalExpression", "DEL NullLiteral", "DEL SimpleName: createOrUpdate", "DEL TagElement: @see", "DEL ThrowStatement", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: final", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: String", "DEL Modifier: public", "DEL MethodRefParameter", "DEL Dimension", "DEL SimpleType: String", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ReturnStatement", "DEL SimpleType: Object", "DEL SimpleName: checkExists", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: e", "DEL Modifier: public", "DEL TextElement: Internally, the method suppresses ", "DEL SimpleName: ChildData", "DEL SimpleName: setData", "DEL SimpleName: getName", "DEL TextElement: Creates a node in zookeeper with the ", "DEL SimpleName: Collections", "DEL VariableDeclarationStatement", "DEL SimpleName: key", "DEL SimpleName: Lists", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL Modifier: private", "DEL SimpleName: warn", "DEL SimpleName: d", "DEL SimpleName: getLogger", "DEL TryStatement", "DEL TextElement:  create mode", "DEL FieldDeclaration", "DEL SimpleName: value", "DEL SimpleName: withPrefix", "DEL InfixExpression: !=", "DEL SimpleName: Override", "DEL SimpleType: ChildData", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: rebuildNode", "DEL SimpleName: V", "DEL SingleVariableDeclaration", "DEL TagElement: @see", "DEL SimpleName: sortedChildren", "DEL MarkerAnnotation", "DEL ParameterizedType: Iterator<ChildData>", "DEL TagElement: @link", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: withPrefix", "DEL SimpleName: String", "DEL SimpleName: serialize", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \"You cannot use keys that have slashes in them when using the Zookeeper SystemTable storage interface.\"", "DEL SimpleName: e", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: e", "DEL TagElement: @link", "DEL TagElement: @param", "DEL Modifier: public", "DEL SimpleName: prefix", "DEL SimpleType: String", "DEL SimpleType: V", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: o2", "DEL SimpleName: V", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: CreateMode", "DEL SimpleName: Object", "DEL SimpleName: withPrefix", "DEL SimpleName: key", "DEL MethodRef", "DEL SimpleName: path", "DEL SimpleName: setData", "DEL SimpleName: Entry", "DEL MethodInvocation", "DEL SuperConstructorInvocation", "DEL SimpleName: String", "DEL SimpleName: valueInBytes", "DEL SimpleType: IOException", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: value", "DEL PrimitiveType: int", "DEL PrimitiveType: byte", "DEL SimpleName: valueInBytes", "DEL SimpleType: V", "DEL SimpleName: compareTo", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL TryStatement", "DEL SimpleType: RuntimeException", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: ChildData", "DEL Modifier: private", "DEL SimpleName: ChildData", "DEL TypeDeclaration: class", "DEL SimpleName: logger", "DEL MethodDeclaration", "DEL Javadoc", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL ThisExpression", "DEL TypeDeclaration: class", "DEL SimpleName: ChildData", "DEL QualifiedName: org.slf4j.Logger", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL MarkerAnnotation", "DEL SimpleName: data", "DEL SimpleName: value", "DEL SimpleName: config", "DEL SimpleType: RuntimeException", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: warn", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Iter", "DEL MethodRef", "DEL MethodInvocation", "DEL SimpleName: isUpdate", "DEL SimpleType: Object", "DEL MethodDeclaration", "DEL MethodRefParameter", "DEL SimpleName: close", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ThrowStatement", "DEL SimpleName: compare", "DEL SimpleName: framework", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL Block", "DEL TagElement: @see", "DEL TagElement", "DEL SimpleType: Entry", "DEL ThrowStatement", "DEL MethodRefParameter", "DEL SimpleName: e", "DEL SimpleName: getCurrentData", "DEL SimpleType: String", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: rebuildNode", "DEL SimpleName: data", "DEL SimpleName: keyFromPath", "DEL NullLiteral", "DEL QualifiedName: KeeperException.NodeExistsException", "DEL SimpleName: data", "DEL SimpleName: key", "DEL SimpleName: V", "DEL Assignment: =", "DEL SimpleName: getKey", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodRefParameter", "DEL Javadoc", "DEL TextElement: Creates a node in zookeeper with the given mode and sets its value if supplied or updates its value if the node", "DEL Block", "DEL SimpleName: createWithPrefix", "DEL TagElement: @link", "DEL SimpleType: String", "DEL QualifiedName: CreateMode.PERSISTENT", "DEL SimpleName: ChildData", "DEL MethodInvocation", "DEL SimpleName: childrenCache", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: getSerializer", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL SimpleName: framework", "DEL VariableDeclarationFragment", "DEL SimpleName: childrenCache", "DEL MethodDeclaration", "DEL MethodRefParameter", "DEL VariableDeclarationFragment", "DEL TextElement:  wrapping the root cause.", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: Exception", "DEL VariableDeclarationStatement", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: key", "DEL SimpleName: path", "DEL MethodInvocation", "DEL TryStatement", "DEL SimpleName: framework", "DEL StringLiteral: \"Failure while closing out abstract store.\"", "DEL SimpleName: Entry", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL TryStatement", "DEL SimpleType: Iterator", "DEL ThisExpression", "DEL SimpleName: PStoreConfig", "DEL SimpleName: keyFromPath", "DEL SimpleName: RuntimeException", "DEL SimpleName: ZkAbstractStore", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL MethodRef", "DEL SimpleType: V", "DEL InfixExpression: !=", "DEL SimpleName: Comparator", "DEL SimpleName: String", "DEL SimpleName: creator", "DEL TryStatement", "DEL SimpleName: path", "DEL SimpleName: getData", "DEL SimpleName: key", "DEL SimpleName: String", "DEL SimpleName: createWithPrefix", "DEL MethodDeclaration", "DEL SimpleName: current", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: CreateMode", "DEL AnonymousClassDeclaration", "DEL SimpleName: keys", "DEL SimpleName: getPath", "DEL SimpleName: data", "DEL Modifier: private", "DEL SimpleName: withPrefix", "DEL MethodInvocation", "DEL SimpleName: path", "DEL MethodRef", "DEL SimpleName: d", "DEL StringLiteral: \"Failure while accessing Zookeeper. \"", "DEL SimpleName: config", "DEL SimpleType: ChildData", "DEL SimpleName: data", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: isUpdate", "DEL SimpleName: String", "DEL Block", "DEL SimpleType: String", "DEL ThisExpression", "DEL SimpleType: String", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleName: IOException", "DEL SimpleName: keys", "DEL SimpleName: ChildData", "DEL SimpleType: ChildData", "DEL TextElement:     creation mode", "DEL TryStatement", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleType: V", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: CuratorFramework", "DEL MethodDeclaration", "DEL TagElement: @link", "DEL FieldAccess", "DEL SimpleName: createOrUpdate", "DEL MethodInvocation", "DEL SimpleName: deserialize", "DEL MethodRef", "DEL SimpleName: framework", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL Modifier: final", "DEL Modifier: abstract", "DEL SimpleName: getPath", "DEL Block", "DEL TextElement:  that will be used in create operations referred in the see also section.", "DEL Block", "DEL SimpleName: ex", "DEL SimpleName: ZkAbstractStore", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: +", "DEL TagElement: @see", "DEL SingleVariableDeclaration", "DEL SimpleType: CreateMode", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL Javadoc", "DEL SimpleName: childrenCache", "DEL SimpleName: String", "DEL ThrowStatement", "DEL SimpleName: Iterator", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: setValue", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SimpleName: keys", "DEL SimpleName: mode", "DEL ReturnStatement", "DEL SimpleName: getCreateMode", "DEL SimpleType: V", "DEL FieldAccess", "DEL PrimitiveType: boolean", "DEL SimpleName: withPrefix", "DEL SimpleName: current", "DEL SingleVariableDeclaration", "DEL TextElement:  and sets its value if supplied", "DEL SimpleName: serialize", "DEL MarkerAnnotation", "DEL SimpleName: creator", "DEL PrimitiveType: boolean", "DEL Modifier: private", "DEL ArrayType: byte[]", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL TagElement", "DEL Modifier: public", "DEL SimpleName: logger", "DEL SimpleName: path", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL CatchClause", "DEL SimpleName: prefix", "DEL SimpleName: String", "DEL SimpleName: e", "DEL SimpleType: V", "DEL SimpleType: V", "DEL SimpleName: Exception", "DEL SimpleType: ChildData", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: keys", "DEL SimpleName: key", "DEL Block", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: ChildData", "DEL StringLiteral: \"Failure while initializing Zookeeper for PStore\"", "DEL SimpleName: childrenCache", "DEL TextElement: Note that if node exists, its mode will not be changed.", "DEL SimpleType: Exception", "DEL Block", "DEL SimpleName: Override", "DEL SimpleName: V", "DEL SimpleType: AutoCloseable", "DEL CatchClause", "DEL SimpleName: create", "DEL TagElement", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL SimpleName: PStoreConfig", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodRef", "DEL SimpleName: path", "DEL SimpleName: String", "DEL SimpleName: sortedChildren", "DEL SingleVariableDeclaration", "DEL SimpleName: d", "DEL Assignment: =", "DEL SimpleName: getMessage", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: String", "DEL ParameterizedType: Entry<String,V>", "DEL SimpleType: Entry", "DEL SimpleName: putIfAbsent", "DEL SimpleName: Entry", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL TextElement:  default create mode", "DEL ThisExpression", "DEL SimpleName: e", "DEL SimpleName: forPath", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: key", "DEL MarkerAnnotation", "DEL IfStatement", "DEL ParameterizedType: Entry<String,V>", "DEL SimpleName: isUpdate", "DEL MethodInvocation", "DEL SimpleType: V", "DEL SimpleName: Object", "DEL SimpleName: sortedChildren", "DEL TagElement: @see", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleType: RuntimeException", "DEL SimpleType: Iterator", "DEL SingleVariableDeclaration", "DEL Block", "DEL Block", "DEL SimpleName: String", "DEL PrimitiveType: boolean", "DEL SimpleType: String", "DEL SimpleName: getCurrentData", "DEL SimpleName: V", "DEL Block", "DEL SimpleName: RuntimeException", "DEL Modifier: final", "DEL SimpleName: e", "DEL SimpleType: Entry", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL StringLiteral: \"Failure while accessing Zookeeper. \"", "DEL SimpleName: getCreateMode", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL SimpleName: getCreateMode", "DEL StringLiteral: \"Failure while accessing Zookeeper. \"", "DEL Modifier: public", "DEL Block", "DEL Assignment: =", "DEL IfStatement", "DEL SimpleName: createWithPrefix", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleType: V", "DEL MethodRef", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: framework", "DEL VariableDeclarationFragment", "DEL SimpleName: withPrefix", "DEL TagElement: @param", "DEL Block", "DEL Block", "DEL SimpleName: PathChildrenCache", "DEL SimpleType: List", "DEL SimpleName: mode", "DEL SimpleName: withPrefix", "DEL MethodInvocation", "DEL SimpleName: String", "DEL Modifier: protected", "DEL SimpleName: path", "DEL NullLiteral", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"/\"", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: protected", "DEL Modifier: final", "DEL MethodDeclaration", "DEL ThrowStatement", "DEL SimpleType: String", "DEL SimpleName: Entry", "DEL QualifiedName: org.apache.zookeeper.KeeperException.NodeExistsException", "DEL SimpleName: prefix", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleType: Exception", "DEL TagElement: @see", "DEL SimpleType: Exception", "DEL ParameterizedType: ACLBackgroundPathAndBytesable<String>", "DEL SimpleName: path", "DEL SimpleName: AutoCloseable", "DEL SimpleType: String", "DEL SimpleType: CuratorFramework", "DEL SimpleName: key", "DEL Block", "DEL SimpleName: value", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: getMessage", "DEL Block", "DEL SimpleName: e", "DEL TextElement:  and sets its value if supplied.", "DEL MarkerAnnotation", "DEL NullLiteral", "DEL TextElement:     target path", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: e", "DEL PrimitiveType: void", "DEL SimpleName: forPath", "DEL CatchClause", "DEL MethodRefParameter", "DEL MethodInvocation", "DEL SimpleType: ChildData", "DEL TextElement: <", "DEL VariableDeclarationStatement", "DEL SimpleName: forPath", "DEL ReturnStatement", "DEL SimpleName: ChildData", "DEL SimpleName: o1", "DEL SimpleName: ChildData", "DEL SimpleName: delete", "DEL MethodInvocation", "DEL SimpleName: delete", "DEL SingleVariableDeclaration", "DEL TextElement:     target path", "DEL Dimension", "DEL StringLiteral: \"Failure while accessing Zookeeper\"", "DEL SimpleName: nodeExists", "DEL ThrowStatement", "DEL SimpleName: getCurrentData", "DEL SimpleName: value", "DEL SimpleName: String", "DEL SimpleName: forPath", "DEL ExpressionStatement", "DEL SimpleName: Exception", "DEL SimpleName: RuntimeException", "DEL VariableDeclarationFragment", "DEL SimpleType: Exception", "DEL MethodRef", "DEL MethodRefParameter", "DEL Block", "DEL SimpleName: path", "DEL SimpleType: String", "DEL InfixExpression: ||", "DEL SimpleType: V", "DEL SimpleType: Object", "DEL SimpleName: createOrUpdate", "DEL MethodInvocation", "DEL SimpleName: createWithPrefix", "DEL Block", "DEL StringLiteral: \"/\"", "DEL SimpleName: framework", "DEL SimpleName: d", "DEL MethodRefParameter", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleName: getMessage", "DEL SuperConstructorInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Exception", "DEL MethodDeclaration", "DEL Block", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL SimpleType: Iterator", "DEL ExpressionStatement", "DEL SimpleName: getSerializer", "DEL ThisExpression", "DEL NullLiteral", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: config", "DEL SimpleName: bytes", "DEL SimpleType: PStoreConfig", "DEL MethodInvocation", "DEL SimpleType: String", "DEL PrimitiveType: void", "DEL Modifier: protected", "DEL Assignment: =", "DEL SimpleType: String", "DEL SimpleName: createOrUpdate", "DEL SimpleName: rebuildNode", "DEL SimpleName: createOrUpdate", "DEL SimpleType: Exception", "DEL CatchClause", "DEL SimpleType: ChildData", "DEL SimpleName: children", "DEL TagElement: @param", "DEL SimpleName: Iterator", "DEL SimpleName: childrenCache", "DEL SimpleName: substring", "DEL Modifier: private", "DEL BooleanLiteral: true", "DEL InfixExpression: +", "DEL SimpleName: Object", "DEL Modifier: private", "DEL SimpleName: contains", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL SimpleType: RuntimeException", "DEL SimpleName: withPrefix", "DEL TextElement: . It is", "DEL Block", "DEL Modifier: private", "DEL Block", "DEL SimpleType: ChildData", "DEL SimpleName: createOrUpdate", "DEL NullLiteral", "DEL SimpleName: String", "DEL SimpleName: ACLBackgroundPathAndBytesable", "DEL VariableDeclarationFragment", "DEL SimpleName: parent", "DEL TextElement: or updates its value if the node already exists.", "DEL MethodInvocation", "DEL TextElement: This is the abstract class that is shared by ZkPStore (Persistent store) and ZkEStore (Ephemeral Store)", "DEL MethodInvocation", "DEL SimpleName: parent", "DEL TypeDeclaration: class", "DEL Block", "DEL InfixExpression: +", "DEL SimpleName: Preconditions", "DEL ParameterizedType: PStoreConfig<V>", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL SimpleName: mode", "DEL SimpleName: key", "DEL SimpleName: value", "DEL SimpleName: withPrefix", "DEL Block", "DEL SimpleName: V", "DEL Modifier: public", "DEL SimpleName: e", "DEL SimpleName: V", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL IfStatement", "DEL SimpleName: DeferredEntry", "DEL ParameterizedType: Comparator<ChildData>", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: createOrUpdate", "DEL SimpleName: e", "DEL SimpleType: KeeperException.NodeExistsException", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleName: iterator", "DEL VariableDeclarationFragment", "DEL SimpleName: framework", "DEL SimpleName: Exception", "DEL SimpleName: RuntimeException", "DEL TextElement:   throws a ", "DEL SimpleName: String", "DEL NullLiteral", "DEL SimpleName: logger", "DEL ParameterizedType: Iterator<Entry<String,V>>", "DEL SimpleName: e", "DEL SimpleName: value", "DEL InfixExpression: +", "DEL SimpleName: CuratorFramework", "DEL SimpleName: config", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleType: CreateMode", "DEL ParameterizedType: Entry<String,V>", "DEL Assignment: =", "DEL CatchClause", "DEL ReturnStatement", "DEL SimpleName: withMode", "DEL SimpleName: framework", "DEL SimpleType: List", "DEL StringLiteral: \"/\"", "DEL ClassInstanceCreation", "DEL SimpleName: length", "DEL SimpleName: IOException", "DEL MethodRefParameter", "DEL ParameterizedType: List<ChildData>", "DEL SimpleName: childrenCache", "DEL TypeParameter", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleType: String", "DEL SimpleName: getData", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleType: RuntimeException", "DEL Assignment: =", "DEL SimpleName: creator", "DEL SimpleName: children", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: protected", "DEL SimpleName: key", "DEL SimpleType: PathChildrenCache", "DEL SimpleName: List", "DEL VariableDeclarationFragment", "DEL SimpleName: RuntimeException", "DEL VariableDeclarationStatement", "DEL InfixExpression: !=", "DEL SimpleName: Iter", "DEL MethodDeclaration", "DEL SimpleName: getCurrentData", "DEL SimpleName: mode", "DEL SimpleName: close", "DEL SimpleName: Exception", "DEL SimpleName: config", "DEL SimpleName: msg", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleName: RuntimeException", "DEL Modifier: public", "DEL Modifier: final", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: ChildData", "DEL FieldDeclaration", "DEL SimpleType: ZkAbstractStore", "DEL SimpleName: path", "DEL MarkerAnnotation", "DEL SimpleName: e", "DEL SimpleName: ZkAbstractStore", "DEL MethodInvocation", "DEL SimpleName: V", "DEL SimpleType: Object", "DEL FieldDeclaration", "DEL TextElement: safe to do so since the implementation is idempotent.", "DEL MethodInvocation", "DEL SimpleType: CreateMode", "DEL SimpleName: V", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleName: CreateMode", "DEL PrefixExpression: !", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL TryStatement", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: delete", "DEL SimpleName: forPath", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: config", "DEL SimpleName: RuntimeException", "DEL SimpleName: iterator", "DEL ReturnStatement", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleName: Override", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: createOrUpdate", "DEL Block", "DEL SimpleName: RuntimeException", "DEL SimpleName: DeferredEntry", "DEL SimpleName: String", "DEL TagElement: @param", "DEL SimpleName: getCreateMode", "DEL Modifier: private", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: parent", "DEL SimpleName: valueInBytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodRefParameter", "DEL TextElement:     target path", "DEL SimpleName: CreateMode", "DEL SimpleName: path", "DEL ParameterizedType: Entry<String,V>", "DEL ParameterizedType: Iterator<Entry<String,V>>", "DEL SimpleName: getSerializer", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: childrenCache", "DEL SimpleName: List", "DEL SimpleName: String", "DEL SimpleName: CuratorFramework", "DEL ThrowStatement", "DEL SimpleName: V", "DEL FieldAccess", "DEL Modifier: protected", "DEL SimpleName: path", "DEL SimpleName: newArrayList", "DEL SimpleType: RuntimeException", "DEL TextElement: >", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL TextElement:    value to set, null if none available", "DEL SimpleName: keyFromPath", "DEL Block", "DEL SimpleName: childrenCache", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: V", "DEL PrimitiveType: boolean", "DEL TagElement: @param", "DEL MethodInvocation", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: hasNext", "DEL SimpleType: Comparator", "DEL VariableDeclarationFragment", "DEL SimpleName: current", "DEL SimpleName: config", "DEL SimpleName: data", "DEL StringLiteral: \"Failed to create/update Zookeeper node. [path: %s, mode: %s]\"", "DEL SimpleName: V", "DEL SimpleName: V", "DEL SimpleName: getPath", "DEL SimpleName: childrenCache", "DEL TryStatement", "DEL StringLiteral: \"Failure while accessing Zookeeper.\"", "DEL SimpleName: o1", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleType: String", "DEL TextElement: Creates a node in zookeeper with the ", "DEL ThrowStatement", "DEL SimpleType: Iter", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: Exception", "DEL Modifier: final", "DEL SimpleName: value", "DEL SimpleName: V", "DEL VariableDeclarationStatement", "DEL SimpleType: V", "DEL SimpleName: DeferredEntry", "DEL Block", "DEL SimpleName: withPrefix", "DEL SimpleName: ChildData", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: String", "DEL SimpleName: V", "DEL SimpleName: V", "DEL SimpleName: msg", "DEL SimpleName: key", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: RuntimeException", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: childrenCache", "DEL Modifier: protected", "DEL SimpleName: current", "DEL SimpleName: withPrefix", "DEL SimpleType: V", "DEL TextElement:    value to set, null if none available", "DEL IfStatement", "DEL SimpleName: e", "DEL TagElement: @see", "DEL ClassInstanceCreation", "DEL TextElement: already exists.", "DEL Block", "DEL ArrayType: byte[]", "DEL IfStatement", "DEL SimpleType: Entry", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL SimpleName: data", "DEL TextElement:  default create mode", "DEL SimpleName: key", "DEL SimpleName: remove", "DEL MethodInvocation", "DEL SimpleName: RuntimeException", "DEL SimpleName: value", "DEL SimpleName: path", "DEL Modifier: public", "DEL MethodRef", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: PathChildrenCache", "DEL TextElement: Default ", "DEL ReturnStatement", "DEL SimpleName: data", "DEL SimpleType: ACLBackgroundPathAndBytesable", "DEL TextElement:    value to set, null if none available", "DEL Block", "DEL SimpleName: getCreateMode", "DEL SimpleName: start", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleName: checkExists", "DEL CatchClause", "DEL Modifier: abstract", "DEL SimpleName: getSerializer", "DEL MethodInvocation", "DEL Block", "DEL CatchClause", "DEL SimpleName: Iterator", "DEL SimpleType: RuntimeException", "DEL SimpleName: config", "DEL ExpressionStatement", "DEL SimpleType: ChildData", "DEL Modifier: final", "DEL SimpleName: value", "DEL SimpleName: Iter", "DEL SimpleName: PathChildrenCache", "DEL Modifier: protected", "DEL SimpleName: framework", "DEL Block", "DEL SimpleName: value", "DEL SimpleName: path", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SimpleType: RuntimeException", "DEL TagElement: @param", "DEL TagElement", "DEL SimpleName: get", "DEL SimpleName: Object", "DEL ThrowStatement", "DEL MethodInvocation", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL ExpressionStatement", "DEL Modifier: final", "DEL InfixExpression: +", "DEL SimpleName: parent", "DEL SimpleName: forPath", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: sort", "DEL SimpleName: framework", "DEL SimpleName: parent", "DEL MethodInvocation", "DEL CatchClause", "DEL Block", "DEL SimpleName: forPath", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL Block", "DEL SimpleType: ChildData", "DEL SimpleName: nodeExists", "DEL StringLiteral: \"Node already exists in Zookeeper. Skipping... -- [path: {}, mode: {}]\"", "DEL SimpleName: bytes", "DEL TryStatement", "DEL SimpleType: V", "DEL ThisExpression", "DEL SimpleName: deserialize", "DEL SimpleName: value", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: String", "DEL Block", "DEL TagElement: @param", "DEL SimpleName: config", "DEL SimpleName: framework", "DEL SimpleName: Override", "DEL SimpleName: length", "DEL SimpleName: path", "DEL SimpleName: path", "DEL Block", "DEL SimpleType: PStoreConfig", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: childrenCache", "DEL TagElement: @throws", "DEL SimpleName: checkArgument", "DEL SimpleName: o2", "DEL SimpleName: next", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleName: String", "DEL QualifiedName: StartMode.BUILD_INITIAL_CACHE", "DEL Modifier: final", "DEL SimpleName: mode", "DEL SimpleName: format", "DEL SimpleName: String", "DEL SimpleType: Exception", "DEL CatchClause", "DEL SimpleName: next", "DEL SimpleName: getData", "DEL TagElement: @link", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: isUpdate", "DEL MethodInvocation", "DEL ParameterizedType: List<ChildData>", "DEL Modifier: public", "DEL FieldAccess", "DEL ClassInstanceCreation", "DEL Modifier: final", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: ChildData", "DEL SimpleName: prefix", "DEL MethodInvocation", "DEL SimpleName: getCreateMode", "DEL SimpleType: V", "DEL BooleanLiteral: true", "DEL Block", "DEL SimpleName: e"]}]}}, {"ZkAbstractStore_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.zk(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: java.util.Collections(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.util.Comparator(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: java.util.Iterator(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: java.util.List(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: java.util.Map.Entry(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: com.google.common.base.Preconditions(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: com.google.common.collect.Lists(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.curator.framework.CuratorFramework(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.curator.framework.api.ACLBackgroundPathAndBytesable(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.curator.framework.recipes.cache.ChildData(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.curator.framework.recipes.cache.PathChildrenCache(39)", "Delete ImportDeclaration(40)", "Delete QualifiedName: org.apache.curator.framework.recipes.cache.PathChildrenCache.StartMode(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.zookeeper.CreateMode(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.zookeeper.KeeperException(47)", "Delete ImportDeclaration(48)", "Delete TextElement: This is the abstract class that is shared by ZkPStore (Persistent store) and ZkEStore (Ephemeral Store)(49)", "Delete TagElement(50)", "Delete TextElement: <(51)", "Delete SimpleName: V(52)", "Delete TextElement: >(53)", "Delete TagElement: @param(54)", "Delete Javadoc(55)", "Delete Modifier: public(56)", "Delete Modifier: abstract(57)", "Delete SimpleName: ZkAbstractStore(58)", "Delete SimpleName: V(59)", "Delete TypeParameter(60)", "Delete SimpleName: AutoCloseable(61)", "Delete SimpleType: AutoCloseable(62)", "Delete Modifier: private(63)", "Delete Modifier: static(64)", "Delete Modifier: final(65)", "Delete QualifiedName: org.slf4j.Logger(66)", "Delete SimpleType: org.slf4j.Logger(67)", "Delete SimpleName: logger(68)", "Delete QualifiedName: org.slf4j.LoggerFactory(69)", "Delete SimpleName: getLogger(70)", "Delete SimpleName: ZkAbstractStore(71)", "Delete SimpleType: ZkAbstractStore(72)", "Delete TypeLiteral(73)", "Delete MethodInvocation(74)", "Delete VariableDeclarationFragment(75)", "Delete FieldDeclaration(76)", "Delete Modifier: protected(77)", "Delete Modifier: final(78)", "Delete SimpleName: CuratorFramework(79)", "Delete SimpleType: CuratorFramework(80)", "Delete SimpleName: framework(81)", "Delete VariableDeclarationFragment(82)", "Delete FieldDeclaration(83)", "Delete Modifier: protected(84)", "Delete Modifier: final(85)", "Delete SimpleName: PStoreConfig(86)", "Delete SimpleType: PStoreConfig(87)", "Delete SimpleName: V(88)", "Delete SimpleType: V(89)", "Delete ParameterizedType: PStoreConfig<V>(90)", "Delete SimpleName: config(91)", "Delete VariableDeclarationFragment(92)", "Delete FieldDeclaration(93)", "Delete Modifier: private(94)", "Delete Modifier: final(95)", "Delete SimpleName: PathChildrenCache(96)", "Delete SimpleType: PathChildrenCache(97)", "Delete SimpleName: childrenCache(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete Modifier: private(101)", "Delete Modifier: final(102)", "Delete SimpleName: String(103)", "Delete SimpleType: String(104)", "Delete SimpleName: prefix(105)", "Delete VariableDeclarationFragment(106)", "Delete FieldDeclaration(107)", "Delete Modifier: private(108)", "Delete Modifier: final(109)", "Delete SimpleName: String(110)", "Delete SimpleType: String(111)", "Delete SimpleName: parent(112)", "Delete VariableDeclarationFragment(113)", "Delete FieldDeclaration(114)", "Delete Modifier: public(115)", "Delete SimpleName: ZkAbstractStore(116)", "Delete SimpleName: CuratorFramework(117)", "Delete SimpleType: CuratorFramework(118)", "Delete SimpleName: framework(119)", "Delete SingleVariableDeclaration(120)", "Delete SimpleName: PStoreConfig(121)", "Delete SimpleType: PStoreConfig(122)", "Delete SimpleName: V(123)", "Delete SimpleType: V(124)", "Delete ParameterizedType: PStoreConfig<V>(125)", "Delete SimpleName: config(126)", "Delete SingleVariableDeclaration(127)", "Delete SimpleName: IOException(128)", "Delete SimpleType: IOException(129)", "Delete ThisExpression(130)", "Delete SimpleName: parent(131)", "Delete FieldAccess(132)", "Delete StringLiteral: \"/\"(133)", "Delete SimpleName: config(134)", "Delete SimpleName: getName(135)", "Delete MethodInvocation(136)", "Delete InfixExpression: +(137)", "Delete Assignment: =(138)", "Delete ExpressionStatement(139)", "Delete ThisExpression(140)", "Delete SimpleName: prefix(141)", "Delete FieldAccess(142)", "Delete SimpleName: parent(143)", "Delete StringLiteral: \"/\"(144)", "Delete InfixExpression: +(145)", "Delete Assignment: =(146)", "Delete ExpressionStatement(147)", "Delete ThisExpression(148)", "Delete SimpleName: framework(149)", "Delete FieldAccess(150)", "Delete SimpleName: framework(151)", "Delete Assignment: =(152)", "Delete ExpressionStatement(153)", "Delete ThisExpression(154)", "Delete SimpleName: config(155)", "Delete FieldAccess(156)", "Delete SimpleName: config(157)", "Delete Assignment: =(158)", "Delete ExpressionStatement(159)", "Delete ThisExpression(160)", "Delete SimpleName: childrenCache(161)", "Delete FieldAccess(162)", "Delete SimpleName: PathChildrenCache(163)", "Delete SimpleType: PathChildrenCache(164)", "Delete SimpleName: framework(165)", "Delete SimpleName: parent(166)", "Delete BooleanLiteral: true(167)", "Delete ClassInstanceCreation(168)", "Delete Assignment: =(169)", "Delete ExpressionStatement(170)", "Delete SimpleName: createOrUpdate(171)", "Delete SimpleName: parent(172)", "Delete NullLiteral(173)", "Delete QualifiedName: CreateMode.PERSISTENT(174)", "Delete MethodInvocation(175)", "Delete ExpressionStatement(176)", "Delete SimpleName: childrenCache(177)", "Delete SimpleName: start(178)", "Delete QualifiedName: StartMode.BUILD_INITIAL_CACHE(179)", "Delete MethodInvocation(180)", "Delete ExpressionStatement(181)", "Delete Block(182)", "Delete SimpleName: Exception(183)", "Delete SimpleType: Exception(184)", "Delete SimpleName: e(185)", "Delete SingleVariableDeclaration(186)", "Delete SimpleName: RuntimeException(187)", "Delete SimpleType: RuntimeException(188)", "Delete StringLiteral: \"Failure while initializing Zookeeper for PStore\"(189)", "Delete SimpleName: e(190)", "Delete ClassInstanceCreation(191)", "Delete ThrowStatement(192)", "Delete Block(193)", "Delete CatchClause(194)", "Delete TryStatement(195)", "Delete Block(196)", "Delete MethodDeclaration(197)", "Delete Modifier: public(198)", "Delete SimpleName: Iterator(199)", "Delete SimpleType: Iterator(200)", "Delete SimpleName: Entry(201)", "Delete SimpleType: Entry(202)", "Delete SimpleName: String(203)", "Delete SimpleType: String(204)", "Delete SimpleName: V(205)", "Delete SimpleType: V(206)", "Delete ParameterizedType: Entry<String,V>(207)", "Delete ParameterizedType: Iterator<Entry<String,V>>(208)", "Delete SimpleName: iterator(209)", "Delete SimpleName: Iter(210)", "Delete SimpleType: Iter(211)", "Delete SimpleName: childrenCache(212)", "Delete SimpleName: getCurrentData(213)", "Delete MethodInvocation(214)", "Delete ClassInstanceCreation(215)", "Delete ReturnStatement(216)", "Delete Block(217)", "Delete SimpleName: Exception(218)", "Delete SimpleType: Exception(219)", "Delete SimpleName: e(220)", "Delete SingleVariableDeclaration(221)", "Delete SimpleName: RuntimeException(222)", "Delete SimpleType: RuntimeException(223)", "Delete StringLiteral: \"Failure while accessing Zookeeper.\"(224)", "Delete SimpleName: e(225)", "Delete ClassInstanceCreation(226)", "Delete ThrowStatement(227)", "Delete Block(228)", "Delete CatchClause(229)", "Delete TryStatement(230)", "Delete Block(231)", "Delete MethodDeclaration(232)", "Delete Modifier: protected(233)", "Delete SimpleName: String(234)", "Delete SimpleType: String(235)", "Delete SimpleName: withPrefix(236)", "Delete SimpleName: String(237)", "Delete SimpleType: String(238)", "Delete SimpleName: key(239)", "Delete SingleVariableDeclaration(240)", "Delete SimpleName: Preconditions(241)", "Delete SimpleName: checkArgument(242)", "Delete SimpleName: key(243)", "Delete SimpleName: contains(244)", "Delete StringLiteral: \"/\"(245)", "Delete MethodInvocation(246)", "Delete PrefixExpression: !(247)", "Delete StringLiteral: \"You cannot use keys that have slashes in them when using the Zookeeper SystemTable storage interface.\"(248)", "Delete MethodInvocation(249)", "Delete ExpressionStatement(250)", "Delete SimpleName: prefix(251)", "Delete SimpleName: key(252)", "Delete InfixExpression: +(253)", "Delete ReturnStatement(254)", "Delete Block(255)", "Delete MethodDeclaration(256)", "Delete Modifier: public(257)", "Delete SimpleName: V(258)", "Delete SimpleType: V(259)", "Delete SimpleName: get(260)", "Delete SimpleName: String(261)", "Delete SimpleType: String(262)", "Delete SimpleName: key(263)", "Delete SingleVariableDeclaration(264)", "Delete SimpleName: ChildData(265)", "Delete SimpleType: ChildData(266)", "Delete SimpleName: d(267)", "Delete SimpleName: childrenCache(268)", "Delete SimpleName: getCurrentData(269)", "Delete SimpleName: withPrefix(270)", "Delete SimpleName: key(271)", "Delete MethodInvocation(272)", "Delete MethodInvocation(273)", "Delete VariableDeclarationFragment(274)", "Delete VariableDeclarationStatement(275)", "Delete SimpleName: d(276)", "Delete NullLiteral(277)", "Delete InfixExpression: ==(278)", "Delete SimpleName: d(279)", "Delete SimpleName: getData(280)", "Delete MethodInvocation(281)", "Delete NullLiteral(282)", "Delete InfixExpression: ==(283)", "Delete InfixExpression: ||(284)", "Delete NullLiteral(285)", "Delete ReturnStatement(286)", "Delete Block(287)", "Delete IfStatement(288)", "Delete PrimitiveType: byte(289)", "Delete Dimension(290)", "Delete ArrayType: byte[](291)", "Delete SimpleName: bytes(292)", "Delete SimpleName: d(293)", "Delete SimpleName: getData(294)", "Delete MethodInvocation(295)", "Delete VariableDeclarationFragment(296)", "Delete VariableDeclarationStatement(297)", "Delete SimpleName: config(298)", "Delete SimpleName: getSerializer(299)", "Delete MethodInvocation(300)", "Delete SimpleName: deserialize(301)", "Delete SimpleName: bytes(302)", "Delete MethodInvocation(303)", "Delete ReturnStatement(304)", "Delete Block(305)", "Delete SimpleName: Exception(306)", "Delete SimpleType: Exception(307)", "Delete SimpleName: e(308)", "Delete SingleVariableDeclaration(309)", "Delete SimpleName: RuntimeException(310)", "Delete SimpleType: RuntimeException(311)", "Delete StringLiteral: \"Failure while accessing Zookeeper. \"(312)", "Delete SimpleName: e(313)", "Delete SimpleName: getMessage(314)", "Delete MethodInvocation(315)", "Delete InfixExpression: +(316)", "Delete SimpleName: e(317)", "Delete ClassInstanceCreation(318)", "Delete ThrowStatement(319)", "Delete Block(320)", "Delete CatchClause(321)", "Delete TryStatement(322)", "Delete Block(323)", "Delete MethodDeclaration(324)", "Delete Modifier: public(325)", "Delete PrimitiveType: void(326)", "Delete SimpleName: put(327)", "Delete SimpleName: String(328)", "Delete SimpleType: String(329)", "Delete SimpleName: key(330)", "Delete SingleVariableDeclaration(331)", "Delete SimpleName: V(332)", "Delete SimpleType: V(333)", "Delete SimpleName: value(334)", "Delete SingleVariableDeclaration(335)", "Delete SimpleName: childrenCache(336)", "Delete SimpleName: getCurrentData(337)", "Delete SimpleName: withPrefix(338)", "Delete SimpleName: key(339)", "Delete MethodInvocation(340)", "Delete MethodInvocation(341)", "Delete NullLiteral(342)", "Delete InfixExpression: !=(343)", "Delete SimpleName: framework(344)", "Delete SimpleName: setData(345)", "Delete MethodInvocation(346)", "Delete SimpleName: forPath(347)", "Delete SimpleName: withPrefix(348)", "Delete SimpleName: key(349)", "Delete MethodInvocation(350)", "Delete SimpleName: config(351)", "Delete SimpleName: getSerializer(352)", "Delete MethodInvocation(353)", "Delete SimpleName: serialize(354)", "Delete SimpleName: value(355)", "Delete MethodInvocation(356)", "Delete MethodInvocation(357)", "Delete ExpressionStatement(358)", "Delete Block(359)", "Delete SimpleName: createWithPrefix(360)", "Delete SimpleName: key(361)", "Delete SimpleName: value(362)", "Delete MethodInvocation(363)", "Delete ExpressionStatement(364)", "Delete Block(365)", "Delete IfStatement(366)", "Delete SimpleName: childrenCache(367)", "Delete SimpleName: rebuildNode(368)", "Delete SimpleName: withPrefix(369)", "Delete SimpleName: key(370)", "Delete MethodInvocation(371)", "Delete MethodInvocation(372)", "Delete ExpressionStatement(373)", "Delete Block(374)", "Delete SimpleName: Exception(375)", "Delete SimpleType: Exception(376)", "Delete SimpleName: e(377)", "Delete SingleVariableDeclaration(378)", "Delete SimpleName: RuntimeException(379)", "Delete SimpleType: RuntimeException(380)", "Delete StringLiteral: \"Failure while accessing Zookeeper. \"(381)", "Delete SimpleName: e(382)", "Delete SimpleName: getMessage(383)", "Delete MethodInvocation(384)", "Delete InfixExpression: +(385)", "Delete SimpleName: e(386)", "Delete ClassInstanceCreation(387)", "Delete ThrowStatement(388)", "Delete Block(389)", "Delete CatchClause(390)", "Delete TryStatement(391)", "Delete Block(392)", "Delete MethodDeclaration(393)", "Delete Modifier: public(394)", "Delete PrimitiveType: void(395)", "Delete SimpleName: delete(396)", "Delete SimpleName: String(397)", "Delete SimpleType: String(398)", "Delete SimpleName: key(399)", "Delete SingleVariableDeclaration(400)", "Delete SimpleName: framework(401)", "Delete SimpleName: checkExists(402)", "Delete MethodInvocation(403)", "Delete SimpleName: forPath(404)", "Delete SimpleName: withPrefix(405)", "Delete SimpleName: key(406)", "Delete MethodInvocation(407)", "Delete MethodInvocation(408)", "Delete NullLiteral(409)", "Delete InfixExpression: !=(410)", "Delete SimpleName: framework(411)", "Delete SimpleName: delete(412)", "Delete MethodInvocation(413)", "Delete SimpleName: forPath(414)", "Delete SimpleName: withPrefix(415)", "Delete SimpleName: key(416)", "Delete MethodInvocation(417)", "Delete MethodInvocation(418)", "Delete ExpressionStatement(419)", "Delete SimpleName: childrenCache(420)", "Delete SimpleName: rebuildNode(421)", "Delete SimpleName: withPrefix(422)", "Delete SimpleName: key(423)", "Delete MethodInvocation(424)", "Delete MethodInvocation(425)", "Delete ExpressionStatement(426)", "Delete Block(427)", "Delete IfStatement(428)", "Delete Block(429)", "Delete SimpleName: Exception(430)", "Delete SimpleType: Exception(431)", "Delete SimpleName: e(432)", "Delete SingleVariableDeclaration(433)", "Delete SimpleName: RuntimeException(434)", "Delete SimpleType: RuntimeException(435)", "Delete StringLiteral: \"Failure while accessing Zookeeper. \"(436)", "Delete SimpleName: e(437)", "Delete SimpleName: getMessage(438)", "Delete MethodInvocation(439)", "Delete InfixExpression: +(440)", "Delete SimpleName: e(441)", "Delete ClassInstanceCreation(442)", "Delete ThrowStatement(443)", "Delete Block(444)", "Delete CatchClause(445)", "Delete TryStatement(446)", "Delete Block(447)", "Delete MethodDeclaration(448)", "Delete Modifier: public(449)", "Delete PrimitiveType: boolean(450)", "Delete SimpleName: putIfAbsent(451)", "Delete SimpleName: String(452)", "Delete SimpleType: String(453)", "Delete SimpleName: key(454)", "Delete SingleVariableDeclaration(455)", "Delete SimpleName: V(456)", "Delete SimpleType: V(457)", "Delete SimpleName: value(458)", "Delete SingleVariableDeclaration(459)", "Delete SimpleName: childrenCache(460)", "Delete SimpleName: getCurrentData(461)", "Delete SimpleName: withPrefix(462)", "Delete SimpleName: key(463)", "Delete MethodInvocation(464)", "Delete MethodInvocation(465)", "Delete NullLiteral(466)", "Delete InfixExpression: !=(467)", "Delete BooleanLiteral: false(468)", "Delete ReturnStatement(469)", "Delete Block(470)", "Delete SimpleName: createWithPrefix(471)", "Delete SimpleName: key(472)", "Delete SimpleName: value(473)", "Delete MethodInvocation(474)", "Delete ExpressionStatement(475)", "Delete SimpleName: childrenCache(476)", "Delete SimpleName: rebuildNode(477)", "Delete SimpleName: withPrefix(478)", "Delete SimpleName: key(479)", "Delete MethodInvocation(480)", "Delete MethodInvocation(481)", "Delete ExpressionStatement(482)", "Delete BooleanLiteral: true(483)", "Delete ReturnStatement(484)", "Delete Block(485)", "Delete IfStatement(486)", "Delete Block(487)", "Delete SimpleName: Exception(488)", "Delete SimpleType: Exception(489)", "Delete SimpleName: e(490)", "Delete SingleVariableDeclaration(491)", "Delete SimpleName: RuntimeException(492)", "Delete SimpleType: RuntimeException(493)", "Delete StringLiteral: \"Failure while accessing Zookeeper\"(494)", "Delete SimpleName: e(495)", "Delete ClassInstanceCreation(496)", "Delete ThrowStatement(497)", "Delete Block(498)", "Delete CatchClause(499)", "Delete TryStatement(500)", "Delete Block(501)", "Delete MethodDeclaration(502)", "Delete TextElement: Default (503)", "Delete SimpleName: CreateMode(504)", "Delete TextElement:  create mode(505)", "Delete TagElement: @link(506)", "Delete TextElement:  that will be used in create operations referred in the see also section.(507)", "Delete TagElement(508)", "Delete SimpleName: createOrUpdate(509)", "Delete SimpleName: String(510)", "Delete SimpleType: String(511)", "Delete MethodRefParameter(512)", "Delete SimpleName: Object(513)", "Delete SimpleType: Object(514)", "Delete MethodRefParameter(515)", "Delete MethodRef(516)", "Delete TagElement: @see(517)", "Delete SimpleName: createWithPrefix(518)", "Delete SimpleName: String(519)", "Delete SimpleType: String(520)", "Delete MethodRefParameter(521)", "Delete SimpleName: Object(522)", "Delete SimpleType: Object(523)", "Delete MethodRefParameter(524)", "Delete MethodRef(525)", "Delete TagElement: @see(526)", "Delete Javadoc(527)", "Delete Modifier: protected(528)", "Delete Modifier: abstract(529)", "Delete SimpleName: CreateMode(530)", "Delete SimpleType: CreateMode(531)", "Delete SimpleName: getCreateMode(532)", "Delete MethodDeclaration(533)", "Delete TextElement: Creates a node in zookeeper with the (534)", "Delete SimpleName: getCreateMode(535)", "Delete MethodRef(536)", "Delete TextElement:  default create mode(537)", "Delete TagElement: @link(538)", "Delete TextElement:  and sets its value if supplied.(539)", "Delete TagElement(540)", "Delete SimpleName: path(541)", "Delete TextElement:     target path(542)", "Delete TagElement: @param(543)", "Delete SimpleName: value(544)", "Delete TextElement:    value to set, null if none available(545)", "Delete TagElement: @param(546)", "Delete SimpleName: getCreateMode(547)", "Delete MethodRef(548)", "Delete TagElement: @see(549)", "Delete SimpleName: createOrUpdate(550)", "Delete SimpleName: String(551)", "Delete SimpleType: String(552)", "Delete MethodRefParameter(553)", "Delete SimpleName: Object(554)", "Delete SimpleType: Object(555)", "Delete MethodRefParameter(556)", "Delete MethodRef(557)", "Delete TagElement: @see(558)", "Delete SimpleName: withPrefix(559)", "Delete SimpleName: String(560)", "Delete SimpleType: String(561)", "Delete MethodRefParameter(562)", "Delete MethodRef(563)", "Delete TagElement: @see(564)", "Delete Javadoc(565)", "Delete Modifier: protected(566)", "Delete PrimitiveType: void(567)", "Delete SimpleName: createWithPrefix(568)", "Delete SimpleName: String(569)", "Delete SimpleType: String(570)", "Delete SimpleName: path(571)", "Delete SingleVariableDeclaration(572)", "Delete SimpleName: V(573)", "Delete SimpleType: V(574)", "Delete SimpleName: value(575)", "Delete SingleVariableDeclaration(576)", "Delete SimpleName: createOrUpdate(577)", "Delete SimpleName: withPrefix(578)", "Delete SimpleName: path(579)", "Delete MethodInvocation(580)", "Delete SimpleName: value(581)", "Delete MethodInvocation(582)", "Delete ExpressionStatement(583)", "Delete Block(584)", "Delete MethodDeclaration(585)", "Delete TextElement: Creates a node in zookeeper with the (586)", "Delete SimpleName: getCreateMode(587)", "Delete MethodRef(588)", "Delete TextElement:  default create mode(589)", "Delete TagElement: @link(590)", "Delete TextElement:  and sets its value if supplied(591)", "Delete TextElement: or updates its value if the node already exists.(592)", "Delete TextElement: Note that if node exists, its mode will not be changed.(593)", "Delete TagElement(594)", "Delete SimpleName: path(595)", "Delete TextElement:     target path(596)", "Delete TagElement: @param(597)", "Delete SimpleName: value(598)", "Delete TextElement:    value to set, null if none available(599)", "Delete TagElement: @param(600)", "Delete SimpleName: getCreateMode(601)", "Delete MethodRef(602)", "Delete TagElement: @see(603)", "Delete SimpleName: createOrUpdate(604)", "Delete SimpleName: String(605)", "Delete SimpleType: String(606)", "Delete MethodRefParameter(607)", "Delete SimpleName: Object(608)", "Delete SimpleType: Object(609)", "Delete MethodRefParameter(610)", "Delete SimpleName: CreateMode(611)", "Delete SimpleType: CreateMode(612)", "Delete MethodRefParameter(613)", "Delete MethodRef(614)", "Delete TagElement: @see(615)", "Delete Javadoc(616)", "Delete Modifier: protected(617)", "Delete PrimitiveType: void(618)", "Delete SimpleName: createOrUpdate(619)", "Delete SimpleName: String(620)", "Delete SimpleType: String(621)", "Delete SimpleName: path(622)", "Delete SingleVariableDeclaration(623)", "Delete SimpleName: V(624)", "Delete SimpleType: V(625)", "Delete SimpleName: value(626)", "Delete SingleVariableDeclaration(627)", "Delete SimpleName: createOrUpdate(628)", "Delete SimpleName: path(629)", "Delete SimpleName: value(630)", "Delete SimpleName: getCreateMode(631)", "Delete MethodInvocation(632)", "Delete MethodInvocation(633)", "Delete ExpressionStatement(634)", "Delete Block(635)", "Delete MethodDeclaration(636)", "Delete TextElement: Creates a node in zookeeper with the given mode and sets its value if supplied or updates its value if the node(637)", "Delete TextElement: already exists.(638)", "Delete TextElement: Note that if the node exists, its mode will not be changed.(639)", "Delete TextElement: Internally, the method suppresses (640)", "Delete QualifiedName: org.apache.zookeeper.KeeperException.NodeExistsException(641)", "Delete TagElement: @link(642)", "Delete TextElement: . It is(643)", "Delete TextElement: safe to do so since the implementation is idempotent.(644)", "Delete TagElement(645)", "Delete SimpleName: path(646)", "Delete TextElement:     target path(647)", "Delete TagElement: @param(648)", "Delete SimpleName: value(649)", "Delete TextElement:    value to set, null if none available(650)", "Delete TagElement: @param(651)", "Delete SimpleName: mode(652)", "Delete TextElement:     creation mode(653)", "Delete TagElement: @param(654)", "Delete SimpleName: RuntimeException(655)", "Delete TextElement:   throws a (656)", "Delete SimpleName: RuntimeException(657)", "Delete TagElement: @link(658)", "Delete TextElement:  wrapping the root cause.(659)", "Delete TagElement: @throws(660)", "Delete Javadoc(661)", "Delete Modifier: protected(662)", "Delete PrimitiveType: void(663)", "Delete SimpleName: createOrUpdate(664)", "Delete SimpleName: String(665)", "Delete SimpleType: String(666)", "Delete SimpleName: path(667)", "Delete SingleVariableDeclaration(668)", "Delete SimpleName: V(669)", "Delete SimpleType: V(670)", "Delete SimpleName: value(671)", "Delete SingleVariableDeclaration(672)", "Delete SimpleName: CreateMode(673)", "Delete SimpleType: CreateMode(674)", "Delete SimpleName: mode(675)", "Delete SingleVariableDeclaration(676)", "Delete Modifier: final(677)", "Delete PrimitiveType: boolean(678)", "Delete SimpleName: isUpdate(679)", "Delete SimpleName: value(680)", "Delete NullLiteral(681)", "Delete InfixExpression: !=(682)", "Delete VariableDeclarationFragment(683)", "Delete VariableDeclarationStatement(684)", "Delete Modifier: final(685)", "Delete PrimitiveType: byte(686)", "Delete Dimension(687)", "Delete ArrayType: byte[](688)", "Delete SimpleName: valueInBytes(689)", "Delete SimpleName: isUpdate(690)", "Delete SimpleName: config(691)", "Delete SimpleName: getSerializer(692)", "Delete MethodInvocation(693)", "Delete SimpleName: serialize(694)", "Delete SimpleName: value(695)", "Delete MethodInvocation(696)", "Delete NullLiteral(697)", "Delete ConditionalExpression(698)", "Delete VariableDeclarationFragment(699)", "Delete VariableDeclarationStatement(700)", "Delete Modifier: final(701)", "Delete PrimitiveType: boolean(702)", "Delete SimpleName: nodeExists(703)", "Delete SimpleName: framework(704)", "Delete SimpleName: checkExists(705)", "Delete MethodInvocation(706)", "Delete SimpleName: forPath(707)", "Delete SimpleName: path(708)", "Delete MethodInvocation(709)", "Delete NullLiteral(710)", "Delete InfixExpression: !=(711)", "Delete VariableDeclarationFragment(712)", "Delete VariableDeclarationStatement(713)", "Delete SimpleName: nodeExists(714)", "Delete PrefixExpression: !(715)", "Delete Modifier: final(716)", "Delete SimpleName: ACLBackgroundPathAndBytesable(717)", "Delete SimpleType: ACLBackgroundPathAndBytesable(718)", "Delete SimpleName: String(719)", "Delete SimpleType: String(720)", "Delete ParameterizedType: ACLBackgroundPathAndBytesable<String>(721)", "Delete SimpleName: creator(722)", "Delete SimpleName: framework(723)", "Delete SimpleName: create(724)", "Delete MethodInvocation(725)", "Delete SimpleName: withMode(726)", "Delete SimpleName: mode(727)", "Delete MethodInvocation(728)", "Delete VariableDeclarationFragment(729)", "Delete VariableDeclarationStatement(730)", "Delete SimpleName: isUpdate(731)", "Delete SimpleName: creator(732)", "Delete SimpleName: forPath(733)", "Delete SimpleName: path(734)", "Delete SimpleName: valueInBytes(735)", "Delete MethodInvocation(736)", "Delete ExpressionStatement(737)", "Delete Block(738)", "Delete SimpleName: creator(739)", "Delete SimpleName: forPath(740)", "Delete SimpleName: path(741)", "Delete MethodInvocation(742)", "Delete ExpressionStatement(743)", "Delete Block(744)", "Delete IfStatement(745)", "Delete Block(746)", "Delete SimpleName: isUpdate(747)", "Delete SimpleName: framework(748)", "Delete SimpleName: setData(749)", "Delete MethodInvocation(750)", "Delete SimpleName: forPath(751)", "Delete SimpleName: path(752)", "Delete SimpleName: valueInBytes(753)", "Delete MethodInvocation(754)", "Delete ExpressionStatement(755)", "Delete Block(756)", "Delete IfStatement(757)", "Delete IfStatement(758)", "Delete Block(759)", "Delete QualifiedName: KeeperException.NodeExistsException(760)", "Delete SimpleType: KeeperException.NodeExistsException(761)", "Delete SimpleName: ex(762)", "Delete SingleVariableDeclaration(763)", "Delete SimpleName: logger(764)", "Delete SimpleName: warn(765)", "Delete StringLiteral: \"Node already exists in Zookeeper. Skipping... -- [path: {}, mode: {}]\"(766)", "Delete SimpleName: path(767)", "Delete SimpleName: mode(768)", "Delete MethodInvocation(769)", "Delete ExpressionStatement(770)", "Delete Block(771)", "Delete CatchClause(772)", "Delete SimpleName: Exception(773)", "Delete SimpleType: Exception(774)", "Delete SimpleName: e(775)", "Delete SingleVariableDeclaration(776)", "Delete Modifier: final(777)", "Delete SimpleName: String(778)", "Delete SimpleType: String(779)", "Delete SimpleName: msg(780)", "Delete SimpleName: String(781)", "Delete SimpleName: format(782)", "Delete StringLiteral: \"Failed to create/update Zookeeper node. [path: %s, mode: %s]\"(783)", "Delete SimpleName: path(784)", "Delete SimpleName: mode(785)", "Delete MethodInvocation(786)", "Delete VariableDeclarationFragment(787)", "Delete VariableDeclarationStatement(788)", "Delete SimpleName: RuntimeException(789)", "Delete SimpleType: RuntimeException(790)", "Delete SimpleName: msg(791)", "Delete SimpleName: e(792)", "Delete ClassInstanceCreation(793)", "Delete ThrowStatement(794)", "Delete Block(795)", "Delete CatchClause(796)", "Delete TryStatement(797)", "Delete Block(798)", "Delete MethodDeclaration(799)", "Delete Modifier: private(800)", "Delete SimpleName: Iter(801)", "Delete SimpleName: Iterator(802)", "Delete SimpleType: Iterator(803)", "Delete SimpleName: Entry(804)", "Delete SimpleType: Entry(805)", "Delete SimpleName: String(806)", "Delete SimpleType: String(807)", "Delete SimpleName: V(808)", "Delete SimpleType: V(809)", "Delete ParameterizedType: Entry<String,V>(810)", "Delete ParameterizedType: Iterator<Entry<String,V>>(811)", "Delete Modifier: private(812)", "Delete SimpleName: Iterator(813)", "Delete SimpleType: Iterator(814)", "Delete SimpleName: ChildData(815)", "Delete SimpleType: ChildData(816)", "Delete ParameterizedType: Iterator<ChildData>(817)", "Delete SimpleName: keys(818)", "Delete VariableDeclarationFragment(819)", "Delete FieldDeclaration(820)", "Delete Modifier: private(821)", "Delete SimpleName: ChildData(822)", "Delete SimpleType: ChildData(823)", "Delete SimpleName: current(824)", "Delete VariableDeclarationFragment(825)", "Delete FieldDeclaration(826)", "Delete Modifier: public(827)", "Delete SimpleName: Iter(828)", "Delete SimpleName: List(829)", "Delete SimpleType: List(830)", "Delete SimpleName: ChildData(831)", "Delete SimpleType: ChildData(832)", "Delete ParameterizedType: List<ChildData>(833)", "Delete SimpleName: children(834)", "Delete SingleVariableDeclaration(835)", "Delete SuperConstructorInvocation(836)", "Delete SimpleName: List(837)", "Delete SimpleType: List(838)", "Delete SimpleName: ChildData(839)", "Delete SimpleType: ChildData(840)", "Delete ParameterizedType: List<ChildData>(841)", "Delete SimpleName: sortedChildren(842)", "Delete SimpleName: Lists(843)", "Delete SimpleName: newArrayList(844)", "Delete SimpleName: children(845)", "Delete MethodInvocation(846)", "Delete VariableDeclarationFragment(847)", "Delete VariableDeclarationStatement(848)", "Delete SimpleName: Collections(849)", "Delete SimpleName: sort(850)", "Delete SimpleName: sortedChildren(851)", "Delete SimpleName: Comparator(852)", "Delete SimpleType: Comparator(853)", "Delete SimpleName: ChildData(854)", "Delete SimpleType: ChildData(855)", "Delete ParameterizedType: Comparator<ChildData>(856)", "Delete SimpleName: Override(857)", "Delete MarkerAnnotation(858)", "Delete Modifier: public(859)", "Delete PrimitiveType: int(860)", "Delete SimpleName: compare(861)", "Delete SimpleName: ChildData(862)", "Delete SimpleType: ChildData(863)", "Delete SimpleName: o1(864)", "Delete SingleVariableDeclaration(865)", "Delete SimpleName: ChildData(866)", "Delete SimpleType: ChildData(867)", "Delete SimpleName: o2(868)", "Delete SingleVariableDeclaration(869)", "Delete SimpleName: o1(870)", "Delete SimpleName: getPath(871)", "Delete MethodInvocation(872)", "Delete SimpleName: compareTo(873)", "Delete SimpleName: o2(874)", "Delete SimpleName: getPath(875)", "Delete MethodInvocation(876)", "Delete MethodInvocation(877)", "Delete ReturnStatement(878)", "Delete Block(879)", "Delete MethodDeclaration(880)", "Delete AnonymousClassDeclaration(881)", "Delete ClassInstanceCreation(882)", "Delete MethodInvocation(883)", "Delete ExpressionStatement(884)", "Delete ThisExpression(885)", "Delete SimpleName: keys(886)", "Delete FieldAccess(887)", "Delete SimpleName: sortedChildren(888)", "Delete SimpleName: iterator(889)", "Delete MethodInvocation(890)", "Delete Assignment: =(891)", "Delete ExpressionStatement(892)", "Delete Block(893)", "Delete MethodDeclaration(894)", "Delete SimpleName: Override(895)", "Delete MarkerAnnotation(896)", "Delete Modifier: public(897)", "Delete PrimitiveType: boolean(898)", "Delete SimpleName: hasNext(899)", "Delete SimpleName: keys(900)", "Delete SimpleName: hasNext(901)", "Delete MethodInvocation(902)", "Delete ReturnStatement(903)", "Delete Block(904)", "Delete MethodDeclaration(905)", "Delete SimpleName: Override(906)", "Delete MarkerAnnotation(907)", "Delete Modifier: public(908)", "Delete SimpleName: Entry(909)", "Delete SimpleType: Entry(910)", "Delete SimpleName: String(911)", "Delete SimpleType: String(912)", "Delete SimpleName: V(913)", "Delete SimpleType: V(914)", "Delete ParameterizedType: Entry<String,V>(915)", "Delete SimpleName: next(916)", "Delete SimpleName: current(917)", "Delete SimpleName: keys(918)", "Delete SimpleName: next(919)", "Delete MethodInvocation(920)", "Delete Assignment: =(921)", "Delete ExpressionStatement(922)", "Delete SimpleName: DeferredEntry(923)", "Delete SimpleType: DeferredEntry(924)", "Delete SimpleName: current(925)", "Delete ClassInstanceCreation(926)", "Delete ReturnStatement(927)", "Delete Block(928)", "Delete MethodDeclaration(929)", "Delete SimpleName: Override(930)", "Delete MarkerAnnotation(931)", "Delete Modifier: public(932)", "Delete PrimitiveType: void(933)", "Delete SimpleName: remove(934)", "Delete SimpleName: delete(935)", "Delete SimpleName: keyFromPath(936)", "Delete SimpleName: current(937)", "Delete MethodInvocation(938)", "Delete MethodInvocation(939)", "Delete ExpressionStatement(940)", "Delete Block(941)", "Delete MethodDeclaration(942)", "Delete Modifier: private(943)", "Delete SimpleName: String(944)", "Delete SimpleType: String(945)", "Delete SimpleName: keyFromPath(946)", "Delete SimpleName: ChildData(947)", "Delete SimpleType: ChildData(948)", "Delete SimpleName: data(949)", "Delete SingleVariableDeclaration(950)", "Delete SimpleName: String(951)", "Delete SimpleType: String(952)", "Delete SimpleName: path(953)", "Delete SimpleName: data(954)", "Delete SimpleName: getPath(955)", "Delete MethodInvocation(956)", "Delete VariableDeclarationFragment(957)", "Delete VariableDeclarationStatement(958)", "Delete SimpleName: path(959)", "Delete SimpleName: substring(960)", "Delete SimpleName: prefix(961)", "Delete SimpleName: length(962)", "Delete MethodInvocation(963)", "Delete SimpleName: path(964)", "Delete SimpleName: length(965)", "Delete MethodInvocation(966)", "Delete MethodInvocation(967)", "Delete ReturnStatement(968)", "Delete Block(969)", "Delete MethodDeclaration(970)", "Delete Modifier: private(971)", "Delete SimpleName: DeferredEntry(972)", "Delete SimpleName: Entry(973)", "Delete SimpleType: Entry(974)", "Delete SimpleName: String(975)", "Delete SimpleType: String(976)", "Delete SimpleName: V(977)", "Delete SimpleType: V(978)", "Delete ParameterizedType: Entry<String,V>(979)", "Delete Modifier: private(980)", "Delete SimpleName: ChildData(981)", "Delete SimpleType: ChildData(982)", "Delete SimpleName: data(983)", "Delete VariableDeclarationFragment(984)", "Delete FieldDeclaration(985)", "Delete Modifier: public(986)", "Delete SimpleName: DeferredEntry(987)", "Delete SimpleName: ChildData(988)", "Delete SimpleType: ChildData(989)", "Delete SimpleName: data(990)", "Delete SingleVariableDeclaration(991)", "Delete SuperConstructorInvocation(992)", "Delete ThisExpression(993)", "Delete SimpleName: data(994)", "Delete FieldAccess(995)", "Delete SimpleName: data(996)", "Delete Assignment: =(997)", "Delete ExpressionStatement(998)", "Delete Block(999)", "Delete MethodDeclaration(1000)", "Delete SimpleName: Override(1001)", "Delete MarkerAnnotation(1002)", "Delete Modifier: public(1003)", "Delete SimpleName: String(1004)", "Delete SimpleType: String(1005)", "Delete SimpleName: getKey(1006)", "Delete SimpleName: keyFromPath(1007)", "Delete SimpleName: data(1008)", "Delete MethodInvocation(1009)", "Delete ReturnStatement(1010)", "Delete Block(1011)", "Delete MethodDeclaration(1012)", "Delete SimpleName: Override(1013)", "Delete MarkerAnnotation(1014)", "Delete Modifier: public(1015)", "Delete SimpleName: V(1016)", "Delete SimpleType: V(1017)", "Delete SimpleName: getValue(1018)", "Delete SimpleName: config(1019)", "Delete SimpleName: getSerializer(1020)", "Delete MethodInvocation(1021)", "Delete SimpleName: deserialize(1022)", "Delete SimpleName: data(1023)", "Delete SimpleName: getData(1024)", "Delete MethodInvocation(1025)", "Delete MethodInvocation(1026)", "Delete ReturnStatement(1027)", "Delete Block(1028)", "Delete SimpleName: IOException(1029)", "Delete SimpleType: IOException(1030)", "Delete SimpleName: e(1031)", "Delete SingleVariableDeclaration(1032)", "Delete SimpleName: RuntimeException(1033)", "Delete SimpleType: RuntimeException(1034)", "Delete SimpleName: e(1035)", "Delete ClassInstanceCreation(1036)", "Delete ThrowStatement(1037)", "Delete Block(1038)", "Delete CatchClause(1039)", "Delete TryStatement(1040)", "Delete Block(1041)", "Delete MethodDeclaration(1042)", "Delete SimpleName: Override(1043)", "Delete MarkerAnnotation(1044)", "Delete Modifier: public(1045)", "Delete SimpleName: V(1046)", "Delete SimpleType: V(1047)", "Delete SimpleName: setValue(1048)", "Delete SimpleName: V(1049)", "Delete SimpleType: V(1050)", "Delete SimpleName: value(1051)", "Delete SingleVariableDeclaration(1052)", "Delete SimpleName: UnsupportedOperationException(1053)", "Delete SimpleType: UnsupportedOperationException(1054)", "Delete ClassInstanceCreation(1055)", "Delete ThrowStatement(1056)", "Delete Block(1057)", "Delete MethodDeclaration(1058)", "Delete TypeDeclaration: class(1059)", "Delete TypeDeclaration: class(1060)", "Delete SimpleName: Override(1061)", "Delete MarkerAnnotation(1062)", "Delete Modifier: public(1063)", "Delete PrimitiveType: void(1064)", "Delete SimpleName: close(1065)", "Delete SimpleName: childrenCache(1066)", "Delete SimpleName: close(1067)", "Delete MethodInvocation(1068)", "Delete ExpressionStatement(1069)", "Delete Block(1070)", "Delete SimpleName: IOException(1071)", "Delete SimpleType: IOException(1072)", "Delete SimpleName: e(1073)", "Delete SingleVariableDeclaration(1074)", "Delete SimpleName: logger(1075)", "Delete SimpleName: warn(1076)", "Delete StringLiteral: \"Failure while closing out abstract store.\"(1077)", "Delete SimpleName: e(1078)", "Delete MethodInvocation(1079)", "Delete ExpressionStatement(1080)", "Delete Block(1081)", "Delete CatchClause(1082)", "Delete TryStatement(1083)", "Delete Block(1084)", "Delete MethodDeclaration(1085)", "Delete TypeDeclaration: class(1086)"]}}, {"ZkEStore_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TagElement", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL QualifiedName: org.apache.drill.exec.store.sys.zk", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.curator.framework.CuratorFramework"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.EStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.CreateMode", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ParameterizedType: ZkAbstractStore<V>", "DEL TypeParameter", "DEL SimpleName: config", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL SimpleName: CreateMode", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL TextElement: Implementation of EStore using Zookeeper's EPHEMERAL node.", "DEL SimpleName: Override", "DEL SimpleName: ZkEStore", "DEL SimpleType: ZkAbstractStore", "DEL SimpleName: EStore", "DEL SimpleName: V", "DEL SimpleName: framework", "DEL SimpleName: config", "DEL SimpleName: ZkEStore", "DEL Javadoc", "DEL SimpleType: CreateMode", "DEL SimpleType: CuratorFramework", "DEL ReturnStatement", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: V", "DEL SimpleName: PStoreConfig", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: V", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: ZkAbstractStore", "DEL SimpleType: PStoreConfig", "DEL MarkerAnnotation", "DEL TextElement: >", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleType: EStore", "DEL SimpleName: framework", "DEL Modifier: protected", "DEL SimpleType: IOException", "DEL SimpleName: CuratorFramework", "DEL Block", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: getCreateMode", "DEL ParameterizedType: EStore<V>", "DEL SimpleType: V", "DEL SuperConstructorInvocation", "DEL MethodDeclaration", "DEL TextElement: <", "DEL QualifiedName: CreateMode.EPHEMERAL", "DEL SimpleName: V"]}]}}, {"ZkEStore_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.zk(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: org.apache.curator.framework.CuratorFramework(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.exec.store.sys.EStore(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.zookeeper.CreateMode(25)", "Delete ImportDeclaration(26)", "Delete TextElement: Implementation of EStore using Zookeeper's EPHEMERAL node.(27)", "Delete TagElement(28)", "Delete TextElement: <(29)", "Delete SimpleName: V(30)", "Delete TextElement: >(31)", "Delete TagElement: @param(32)", "Delete Javadoc(33)", "Delete Modifier: public(34)", "Delete SimpleName: ZkEStore(35)", "Delete SimpleName: V(36)", "Delete TypeParameter(37)", "Delete SimpleName: ZkAbstractStore(38)", "Delete SimpleType: ZkAbstractStore(39)", "Delete SimpleName: V(40)", "Delete SimpleType: V(41)", "Delete ParameterizedType: ZkAbstractStore<V>(42)", "Delete SimpleName: EStore(43)", "Delete SimpleType: EStore(44)", "Delete SimpleName: V(45)", "Delete SimpleType: V(46)", "Delete ParameterizedType: EStore<V>(47)", "Delete Modifier: public(48)", "Delete SimpleName: ZkEStore(49)", "Delete SimpleName: CuratorFramework(50)", "Delete SimpleType: CuratorFramework(51)", "Delete SimpleName: framework(52)", "Delete SingleVariableDeclaration(53)", "Delete SimpleName: PStoreConfig(54)", "Delete SimpleType: PStoreConfig(55)", "Delete SimpleName: V(56)", "Delete SimpleType: V(57)", "Delete ParameterizedType: PStoreConfig<V>(58)", "Delete SimpleName: config(59)", "Delete SingleVariableDeclaration(60)", "Delete SimpleName: IOException(61)", "Delete SimpleType: IOException(62)", "Delete SimpleName: framework(63)", "Delete SimpleName: config(64)", "Delete SuperConstructorInvocation(65)", "Delete Block(66)", "Delete MethodDeclaration(67)", "Delete SimpleName: Override(68)", "Delete MarkerAnnotation(69)", "Delete Modifier: protected(70)", "Delete SimpleName: CreateMode(71)", "Delete SimpleType: CreateMode(72)", "Delete SimpleName: getCreateMode(73)", "Delete QualifiedName: CreateMode.EPHEMERAL(74)", "Delete ReturnStatement(75)", "Delete Block(76)", "Delete MethodDeclaration(77)", "Delete TypeDeclaration: class(78)"]}}, {"ZkPStore_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TagElement", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL QualifiedName: org.apache.drill.exec.store.sys.zk", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.curator.framework.CuratorFramework"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.CreateMode", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ParameterizedType: ZkAbstractStore<V>", "DEL TypeParameter", "DEL SimpleName: config", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL SimpleName: CreateMode", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL TextElement: Implementation of PStore using Zookeeper's PERSISTENT node.", "DEL SimpleName: Override", "DEL SimpleName: ZkPStore", "DEL SimpleType: ZkAbstractStore", "DEL SimpleName: PStore", "DEL SimpleName: V", "DEL SimpleName: framework", "DEL SimpleName: config", "DEL SimpleName: ZkPStore", "DEL Javadoc", "DEL SimpleType: CreateMode", "DEL SimpleType: CuratorFramework", "DEL ReturnStatement", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: V", "DEL SimpleName: PStoreConfig", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: V", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: ZkAbstractStore", "DEL SimpleType: PStoreConfig", "DEL MarkerAnnotation", "DEL TextElement: >", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleType: PStore", "DEL SimpleName: framework", "DEL Modifier: protected", "DEL SimpleType: IOException", "DEL SimpleName: CuratorFramework", "DEL Block", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: getCreateMode", "DEL ParameterizedType: PStore<V>", "DEL SimpleType: V", "DEL SuperConstructorInvocation", "DEL MethodDeclaration", "DEL TextElement: <", "DEL QualifiedName: CreateMode.PERSISTENT", "DEL SimpleName: V"]}]}}, {"ZkPStore_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.store.sys.zk(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: org.apache.curator.framework.CuratorFramework(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStore(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.zookeeper.CreateMode(25)", "Delete ImportDeclaration(26)", "Delete TextElement: Implementation of PStore using Zookeeper's PERSISTENT node.(27)", "Delete TagElement(28)", "Delete TextElement: <(29)", "Delete SimpleName: V(30)", "Delete TextElement: >(31)", "Delete TagElement: @param(32)", "Delete Javadoc(33)", "Delete Modifier: public(34)", "Delete SimpleName: ZkPStore(35)", "Delete SimpleName: V(36)", "Delete TypeParameter(37)", "Delete SimpleName: ZkAbstractStore(38)", "Delete SimpleType: ZkAbstractStore(39)", "Delete SimpleName: V(40)", "Delete SimpleType: V(41)", "Delete ParameterizedType: ZkAbstractStore<V>(42)", "Delete SimpleName: PStore(43)", "Delete SimpleType: PStore(44)", "Delete SimpleName: V(45)", "Delete SimpleType: V(46)", "Delete ParameterizedType: PStore<V>(47)", "Delete Modifier: public(48)", "Delete SimpleName: ZkPStore(49)", "Delete SimpleName: CuratorFramework(50)", "Delete SimpleType: CuratorFramework(51)", "Delete SimpleName: framework(52)", "Delete SingleVariableDeclaration(53)", "Delete SimpleName: PStoreConfig(54)", "Delete SimpleType: PStoreConfig(55)", "Delete SimpleName: V(56)", "Delete SimpleType: V(57)", "Delete ParameterizedType: PStoreConfig<V>(58)", "Delete SimpleName: config(59)", "Delete SingleVariableDeclaration(60)", "Delete SimpleName: IOException(61)", "Delete SimpleType: IOException(62)", "Delete SimpleName: framework(63)", "Delete SimpleName: config(64)", "Delete SuperConstructorInvocation(65)", "Delete Block(66)", "Delete MethodDeclaration(67)", "Delete SimpleName: Override(68)", "Delete MarkerAnnotation(69)", "Delete Modifier: protected(70)", "Delete SimpleName: CreateMode(71)", "Delete SimpleType: CreateMode(72)", "Delete SimpleName: getCreateMode(73)", "Delete QualifiedName: CreateMode.PERSISTENT(74)", "Delete ReturnStatement(75)", "Delete Block(76)", "Delete MethodDeclaration(77)", "Delete TypeDeclaration: class(78)"]}}, {"ZkPStoreProvider_cluster": {"actions": [{"root": "UPDATE from org.apache.drill.exec.exception.DrillbitStartupException to org.apache.drill.exec.exception.StoreException", "operations": ["UPD QualifiedName: org.apache.drill.exec.exception.DrillbitStartupException from org.apache.drill.exec.exception.DrillbitStartupException to org.apache.drill.exec.exception.StoreException"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStore from org.apache.drill.exec.store.sys.PStore to org.apache.drill.exec.store.sys.PersistentStoreRegistry"]}, {"root": "UPDATE from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.store.provider.ZookeeperPersistentStoreProvider", "operations": ["UPD QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider from org.apache.drill.exec.store.sys.PStoreProvider to org.apache.drill.exec.store.sys.store.provider.ZookeeperPersistentStoreProvider"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TextElement:  will be removed in 1.7 to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: ZookeeperPersistentStoreProvider to TagElement: @link at 0", "INS TextElement: use  to TagElement: @deprecated at 1", "INS Javadoc to TypeDeclaration: class at 0", "INS TextElement:  instead. to TagElement: @deprecated at 3", "INS TagElement: @deprecated to Javadoc at 1", "INS TextElement: Kept for possible references to old class name in configuration. to TagElement at 0"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 1", "operations": ["INS Modifier: public to TypeDeclaration: class at 1"]}, {"root": "INS SimpleName: ZkPStoreProvider to TypeDeclaration: class at 2", "operations": ["INS SimpleName: ZkPStoreProvider to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: ZookeeperPersistentStoreProvider to TypeDeclaration: class at 3", "operations": ["INS SimpleType: ZookeeperPersistentStoreProvider to TypeDeclaration: class at 3"]}, {"root": "UPDATE from EStoreProvider to ZookeeperPersistentStoreProvider", "operations": ["UPD SimpleName: EStoreProvider from EStoreProvider to ZookeeperPersistentStoreProvider"]}, {"root": "MOVE from SimpleType: ZookeeperPersistentStoreProvider", "operations": ["MOV SimpleName: EStoreProvider to SimpleType: ZookeeperPersistentStoreProvider at 0"]}, {"root": "UPDATE from DrillbitStartupException to StoreException", "operations": ["UPD SimpleType: DrillbitStartupException from DrillbitStartupException to StoreException", "UPD SimpleName: DrillbitStartupException from DrillbitStartupException to StoreException"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: registry to SuperConstructorInvocation at 0"]}, {"root": "INS TextElement: <p/> to TagElement at 7", "operations": ["INS TextElement: <p/> to TagElement at 7"]}, {"root": "INS TextElement: <p/> to TagElement at 9", "operations": ["INS TextElement: <p/> to TagElement at 9"]}, {"root": "INS ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: PersistentStoreRegistry to ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator> at 0", "INS ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator>", "operations": ["MOV SimpleType: ZKClusterCoordinator to ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator> at 1"]}, {"root": "UPDATE from PStoreRegistry to PersistentStoreRegistry", "operations": ["UPD SimpleName: PStoreRegistry from PStoreRegistry to PersistentStoreRegistry"]}, {"root": "MOVE from SimpleType: PersistentStoreRegistry", "operations": ["MOV SimpleName: PStoreRegistry to SimpleType: PersistentStoreRegistry at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.annotations.VisibleForTesting"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.curator.framework.CuratorFramework", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.common.config.DrillConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.dfs.DrillFileSystem"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.EStoreProvider"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.store.sys.local.FilePStore", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.Path"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: ZkPStoreProvider", "operations": ["DEL SimpleName: ZkPStoreProvider"]}, {"root": "DEL SimpleType: PStoreProvider", "operations": ["DEL SimpleType: PStoreProvider", "DEL SimpleName: PStoreProvider"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleType: org.slf4j.Logger", "DEL QualifiedName: org.slf4j.Logger", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SimpleName: getLogger", "DEL SimpleName: logger", "DEL SimpleName: ZkPStoreProvider", "DEL TypeLiteral", "DEL SimpleType: ZkPStoreProvider", "DEL Modifier: static", "DEL MethodInvocation", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL StringLiteral: \"drill.exec.sys.store.provider.zk.blobroot\"", "DEL SimpleType: String", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT", "DEL Modifier: final", "DEL SimpleName: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: CuratorFramework", "DEL Modifier: final", "DEL SimpleName: curator", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleType: CuratorFramework"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: fs", "DEL SimpleName: DrillFileSystem", "DEL SimpleType: DrillFileSystem", "DEL FieldDeclaration", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleType: Path", "DEL SimpleName: blobRoot", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: Path", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: zkEStoreProvider", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleType: EStoreProvider"]}, {"root": "DEL SimpleType: PStoreRegistry", "operations": ["DEL SimpleType: PStoreRegistry"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL Block", "DEL SimpleName: getClusterCoordinator", "DEL Assignment: =", "DEL SimpleName: Path", "DEL FieldAccess", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: getConfig", "DEL TryStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleType: ClusterCoordinator", "DEL SimpleType: ZKClusterCoordinator", "DEL SimpleName: ZkEStoreProvider", "DEL FieldAccess", "DEL SimpleName: getConfig", "DEL ExpressionStatement", "DEL IfStatement", "DEL Block", "DEL SimpleType: IOException", "DEL SimpleType: Path", "DEL ThisExpression", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: curator", "DEL SimpleName: FilePStore", "DEL SimpleName: coord", "DEL ClassInstanceCreation", "DEL SimpleName: ZKClusterCoordinator", "DEL SimpleName: e", "DEL StringLiteral: \"Failure while attempting to set up blob store.\"", "DEL ExpressionStatement", "DEL SimpleName: fs", "DEL VariableDeclarationFragment", "DEL SimpleName: getFileSystem", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: registry", "DEL SimpleName: registry", "DEL SimpleName: blobRoot", "DEL SimpleName: DrillbitStartupException", "DEL SimpleType: DrillbitStartupException", "DEL SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: DrillbitStartupException", "DEL Block", "DEL Assignment: =", "DEL SimpleName: FilePStore", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: getClusterCoordinator", "DEL SimpleName: blobRoot", "DEL SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT", "DEL SimpleName: zkEStoreProvider", "DEL MethodInvocation", "DEL SimpleType: DrillbitStartupException", "DEL SimpleName: coord", "DEL SimpleName: curator", "DEL SimpleName: hasPath", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: registry", "DEL ThrowStatement", "DEL ParenthesizedExpression", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: registry", "DEL SimpleName: getConfig", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getString", "DEL SimpleName: ClusterCoordinator", "DEL SimpleName: getLogDir", "DEL IfStatement", "DEL ThrowStatement", "DEL SimpleName: blobRoot", "DEL Block", "DEL SimpleName: getCurator", "DEL SimpleName: e", "DEL SimpleType: ZkEStoreProvider", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: registry", "DEL StringLiteral: \"A ZkPStoreProvider was created without a ZKClusterCoordinator.\"", "DEL Block", "DEL PrefixExpression: !", "DEL InstanceofExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: blobRoot", "DEL SimpleName: FilePStore", "DEL ExpressionStatement", "DEL SimpleName: config", "DEL SingleVariableDeclaration", "DEL SimpleName: config", "DEL Assignment: =", "DEL SimpleName: CuratorFramework", "DEL FieldAccess", "DEL SimpleName: getFileSystem", "DEL ExpressionStatement", "DEL SimpleName: getLogDir", "DEL SimpleName: curator", "DEL SimpleName: FilePStore", "DEL SimpleName: ZkEStoreProvider", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleName: VisibleForTesting", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleName: zkEStoreProvider", "DEL SimpleType: IOException", "DEL SimpleType: DrillConfig", "DEL ExpressionStatement", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ThisExpression", "DEL ThisExpression", "DEL MarkerAnnotation", "DEL SimpleName: curator", "DEL ClassInstanceCreation", "DEL SimpleType: ZkEStoreProvider", "DEL MethodDeclaration", "DEL SimpleName: fs", "DEL SimpleName: DrillConfig", "DEL MethodInvocation", "DEL SimpleName: curator", "DEL SimpleName: ZkPStoreProvider", "DEL SimpleType: CuratorFramework", "DEL Modifier: public", "DEL FieldAccess", "DEL SimpleName: curator", "DEL SimpleName: blobRoot", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: blobRoot", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleType: V", "DEL ParameterizedType: FilePStore<V>", "DEL SimpleName: config", "DEL SimpleName: BLOB_PERSISTENT", "DEL SwitchCase", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL ParameterizedType: PStore<V>", "DEL ReturnStatement", "DEL SimpleName: config", "DEL Modifier: public", "DEL SwitchCase", "DEL SimpleName: config", "DEL SimpleType: FilePStore", "DEL SimpleName: V", "DEL SimpleName: getMode", "DEL SimpleName: Override", "DEL ReturnStatement", "DEL SimpleType: ZkPStore", "DEL SimpleName: FilePStore", "DEL SimpleName: fs", "DEL MarkerAnnotation", "DEL SimpleName: IllegalStateException", "DEL SwitchCase", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL SimpleName: config", "DEL SwitchCase", "DEL SingleVariableDeclaration", "DEL SimpleName: V", "DEL SimpleType: IllegalStateException", "DEL SimpleType: PStoreConfig", "DEL ParameterizedType: PStoreConfig<V>", "DEL SimpleName: PStore", "DEL SimpleName: ZkPStore", "DEL ClassInstanceCreation", "DEL SimpleName: V", "DEL SimpleName: getStore", "DEL SimpleName: config", "DEL SimpleName: getStore", "DEL SimpleType: V", "DEL SwitchStatement", "DEL SimpleName: zkEStoreProvider", "DEL SimpleType: V", "DEL ParameterizedType: ZkPStore<V>", "DEL MethodInvocation", "DEL SimpleName: PStoreConfig", "DEL SimpleName: curator", "DEL TypeParameter", "DEL SimpleName: EPHEMERAL", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL SimpleType: PStore", "DEL SimpleName: PERSISTENT", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: V"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: start", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL Modifier: public"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL SimpleName: close", "DEL PrimitiveType: void", "DEL MarkerAnnotation"]}]}}, {"ZkPStoreProvider_diff": {"operations": ["Update QualifiedName: org.apache.drill.exec.exception.DrillbitStartupException(29) to org.apache.drill.exec.exception.StoreException", "Update QualifiedName: org.apache.drill.exec.store.sys.PStore(35) to org.apache.drill.exec.store.sys.PersistentStoreRegistry", "Update QualifiedName: org.apache.drill.exec.store.sys.PStoreProvider(39) to org.apache.drill.exec.store.sys.store.provider.ZookeeperPersistentStoreProvider", "Insert Javadoc(35) into TypeDeclaration: class(55) at 0", "Insert Modifier: public(36) into TypeDeclaration: class(55) at 1", "Insert SimpleName: ZkPStoreProvider(37) into TypeDeclaration: class(55) at 2", "Insert SimpleType: ZookeeperPersistentStoreProvider(39) into TypeDeclaration: class(55) at 3", "Insert TagElement(28) into Javadoc(35) at 0", "Insert TagElement: @deprecated(34) into Javadoc(35) at 1", "Update SimpleName: EStoreProvider(96) to ZookeeperPersistentStoreProvider", "Move SimpleName: EStoreProvider(96) into SimpleType: ZookeeperPersistentStoreProvider(39) at 0", "Update SimpleType: DrillbitStartupException(108) to StoreException", "Insert Block(53) into MethodDeclaration(54) at 4", "Insert TextElement: <p/>(7) into TagElement(15) at 7", "Insert TextElement: <p/>(9) into TagElement(15) at 9", "Insert TextElement: Kept for possible references to old class name in configuration.(27) into TagElement(28) at 0", "Insert TextElement:  will be removed in 1.7(29) into TagElement: @deprecated(34) at 0", "Insert TextElement: use (30) into TagElement: @deprecated(34) at 1", "Insert TagElement: @link(32) into TagElement: @deprecated(34) at 2", "Insert TextElement:  instead.(33) into TagElement: @deprecated(34) at 3", "Insert ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator>(46) into SingleVariableDeclaration(48) at 0", "Update SimpleName: DrillbitStartupException(107) to StoreException", "Insert SuperConstructorInvocation(52) into Block(53) at 0", "Insert SimpleName: ZookeeperPersistentStoreProvider(31) into TagElement: @link(32) at 0", "Insert SimpleType: PersistentStoreRegistry(43) into ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator>(46) at 0", "Move SimpleType: ZKClusterCoordinator(119) into ParameterizedType: PersistentStoreRegistry<ZKClusterCoordinator>(46) at 1", "Insert SimpleName: registry(51) into SuperConstructorInvocation(52) at 0", "Update SimpleName: PStoreRegistry(103) to PersistentStoreRegistry", "Move SimpleName: PStoreRegistry(103) into SimpleType: PersistentStoreRegistry(43) at 0", "Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: com.google.common.annotations.VisibleForTesting(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: org.apache.curator.framework.CuratorFramework(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.common.config.DrillConfig(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.drill.exec.coord.ClusterCoordinator(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: org.apache.drill.exec.store.dfs.DrillFileSystem(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: org.apache.drill.exec.store.sys.EStoreProvider(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreConfig(37)", "Delete ImportDeclaration(38)", "Delete QualifiedName: org.apache.drill.exec.store.sys.PStoreRegistry(41)", "Delete ImportDeclaration(42)", "Delete QualifiedName: org.apache.drill.exec.store.sys.local.FilePStore(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.hadoop.fs.Path(45)", "Delete ImportDeclaration(46)", "Delete Modifier: public(47)", "Delete SimpleName: ZkPStoreProvider(48)", "Delete SimpleName: PStoreProvider(49)", "Delete SimpleType: PStoreProvider(50)", "Delete Modifier: static(51)", "Delete Modifier: final(52)", "Delete QualifiedName: org.slf4j.Logger(53)", "Delete SimpleType: org.slf4j.Logger(54)", "Delete SimpleName: logger(55)", "Delete QualifiedName: org.slf4j.LoggerFactory(56)", "Delete SimpleName: getLogger(57)", "Delete SimpleName: ZkPStoreProvider(58)", "Delete SimpleType: ZkPStoreProvider(59)", "Delete TypeLiteral(60)", "Delete MethodInvocation(61)", "Delete VariableDeclarationFragment(62)", "Delete FieldDeclaration(63)", "Delete Modifier: private(64)", "Delete Modifier: static(65)", "Delete Modifier: final(66)", "Delete SimpleName: String(67)", "Delete SimpleType: String(68)", "Delete SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT(69)", "Delete StringLiteral: \"drill.exec.sys.store.provider.zk.blobroot\"(70)", "Delete VariableDeclarationFragment(71)", "Delete FieldDeclaration(72)", "Delete Modifier: private(73)", "Delete Modifier: final(74)", "Delete SimpleName: CuratorFramework(75)", "Delete SimpleType: CuratorFramework(76)", "Delete SimpleName: curator(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete Modifier: private(80)", "Delete Modifier: final(81)", "Delete SimpleName: DrillFileSystem(82)", "Delete SimpleType: DrillFileSystem(83)", "Delete SimpleName: fs(84)", "Delete VariableDeclarationFragment(85)", "Delete FieldDeclaration(86)", "Delete Modifier: private(87)", "Delete Modifier: final(88)", "Delete SimpleName: Path(89)", "Delete SimpleType: Path(90)", "Delete SimpleName: blobRoot(91)", "Delete VariableDeclarationFragment(92)", "Delete FieldDeclaration(93)", "Delete Modifier: private(94)", "Delete Modifier: final(95)", "Delete SimpleType: EStoreProvider(97)", "Delete SimpleName: zkEStoreProvider(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete SimpleType: PStoreRegistry(104)", "Delete SimpleName: ClusterCoordinator(109)", "Delete SimpleType: ClusterCoordinator(110)", "Delete SimpleName: coord(111)", "Delete SimpleName: registry(112)", "Delete SimpleName: getClusterCoordinator(113)", "Delete MethodInvocation(114)", "Delete VariableDeclarationFragment(115)", "Delete VariableDeclarationStatement(116)", "Delete SimpleName: coord(117)", "Delete InstanceofExpression(120)", "Delete ParenthesizedExpression(121)", "Delete PrefixExpression: !(122)", "Delete SimpleName: DrillbitStartupException(123)", "Delete SimpleType: DrillbitStartupException(124)", "Delete StringLiteral: \"A ZkPStoreProvider was created without a ZKClusterCoordinator.\"(125)", "Delete ClassInstanceCreation(126)", "Delete ThrowStatement(127)", "Delete Block(128)", "Delete IfStatement(129)", "Delete ThisExpression(130)", "Delete SimpleName: curator(131)", "Delete FieldAccess(132)", "Delete SimpleName: ZKClusterCoordinator(133)", "Delete SimpleType: ZKClusterCoordinator(134)", "Delete SimpleName: registry(135)", "Delete SimpleName: getClusterCoordinator(136)", "Delete MethodInvocation(137)", "Delete CastExpression(138)", "Delete ParenthesizedExpression(139)", "Delete SimpleName: getCurator(140)", "Delete MethodInvocation(141)", "Delete Assignment: =(142)", "Delete ExpressionStatement(143)", "Delete SimpleName: registry(144)", "Delete SimpleName: getConfig(145)", "Delete MethodInvocation(146)", "Delete SimpleName: hasPath(147)", "Delete SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT(148)", "Delete MethodInvocation(149)", "Delete SimpleName: blobRoot(150)", "Delete SimpleName: Path(151)", "Delete SimpleType: Path(152)", "Delete SimpleName: registry(153)", "Delete SimpleName: getConfig(154)", "Delete MethodInvocation(155)", "Delete SimpleName: getString(156)", "Delete SimpleName: DRILL_EXEC_SYS_STORE_PROVIDER_ZK_BLOBROOT(157)", "Delete MethodInvocation(158)", "Delete ClassInstanceCreation(159)", "Delete Assignment: =(160)", "Delete ExpressionStatement(161)", "Delete Block(162)", "Delete SimpleName: blobRoot(163)", "Delete SimpleName: FilePStore(164)", "Delete SimpleName: getLogDir(165)", "Delete MethodInvocation(166)", "Delete Assignment: =(167)", "Delete ExpressionStatement(168)", "Delete Block(169)", "Delete IfStatement(170)", "Delete ThisExpression(171)", "Delete SimpleName: fs(172)", "Delete FieldAccess(173)", "Delete SimpleName: FilePStore(174)", "Delete SimpleName: getFileSystem(175)", "Delete SimpleName: registry(176)", "Delete SimpleName: getConfig(177)", "Delete MethodInvocation(178)", "Delete SimpleName: blobRoot(179)", "Delete MethodInvocation(180)", "Delete Assignment: =(181)", "Delete ExpressionStatement(182)", "Delete Block(183)", "Delete SimpleName: IOException(184)", "Delete SimpleType: IOException(185)", "Delete SimpleName: e(186)", "Delete SingleVariableDeclaration(187)", "Delete SimpleName: DrillbitStartupException(188)", "Delete SimpleType: DrillbitStartupException(189)", "Delete StringLiteral: \"Failure while attempting to set up blob store.\"(190)", "Delete SimpleName: e(191)", "Delete ClassInstanceCreation(192)", "Delete ThrowStatement(193)", "Delete Block(194)", "Delete CatchClause(195)", "Delete TryStatement(196)", "Delete ThisExpression(197)", "Delete SimpleName: zkEStoreProvider(198)", "Delete FieldAccess(199)", "Delete SimpleName: ZkEStoreProvider(200)", "Delete SimpleType: ZkEStoreProvider(201)", "Delete SimpleName: curator(202)", "Delete ClassInstanceCreation(203)", "Delete Assignment: =(204)", "Delete ExpressionStatement(205)", "Delete Block(206)", "Delete SimpleName: VisibleForTesting(208)", "Delete MarkerAnnotation(209)", "Delete Modifier: public(210)", "Delete SimpleName: ZkPStoreProvider(211)", "Delete SimpleName: DrillConfig(212)", "Delete SimpleType: DrillConfig(213)", "Delete SimpleName: config(214)", "Delete SingleVariableDeclaration(215)", "Delete SimpleName: CuratorFramework(216)", "Delete SimpleType: CuratorFramework(217)", "Delete SimpleName: curator(218)", "Delete SingleVariableDeclaration(219)", "Delete SimpleName: IOException(220)", "Delete SimpleType: IOException(221)", "Delete ThisExpression(222)", "Delete SimpleName: curator(223)", "Delete FieldAccess(224)", "Delete SimpleName: curator(225)", "Delete Assignment: =(226)", "Delete ExpressionStatement(227)", "Delete ThisExpression(228)", "Delete SimpleName: blobRoot(229)", "Delete FieldAccess(230)", "Delete SimpleName: FilePStore(231)", "Delete SimpleName: getLogDir(232)", "Delete MethodInvocation(233)", "Delete Assignment: =(234)", "Delete ExpressionStatement(235)", "Delete ThisExpression(236)", "Delete SimpleName: fs(237)", "Delete FieldAccess(238)", "Delete SimpleName: FilePStore(239)", "Delete SimpleName: getFileSystem(240)", "Delete SimpleName: config(241)", "Delete SimpleName: blobRoot(242)", "Delete MethodInvocation(243)", "Delete Assignment: =(244)", "Delete ExpressionStatement(245)", "Delete ThisExpression(246)", "Delete SimpleName: zkEStoreProvider(247)", "Delete FieldAccess(248)", "Delete SimpleName: ZkEStoreProvider(249)", "Delete SimpleType: ZkEStoreProvider(250)", "Delete SimpleName: curator(251)", "Delete ClassInstanceCreation(252)", "Delete Assignment: =(253)", "Delete ExpressionStatement(254)", "Delete Block(255)", "Delete MethodDeclaration(256)", "Delete SimpleName: Override(257)", "Delete MarkerAnnotation(258)", "Delete Modifier: public(259)", "Delete SimpleName: V(260)", "Delete TypeParameter(261)", "Delete SimpleName: PStore(262)", "Delete SimpleType: PStore(263)", "Delete SimpleName: V(264)", "Delete SimpleType: V(265)", "Delete ParameterizedType: PStore<V>(266)", "Delete SimpleName: getStore(267)", "Delete SimpleName: PStoreConfig(268)", "Delete SimpleType: PStoreConfig(269)", "Delete SimpleName: V(270)", "Delete SimpleType: V(271)", "Delete ParameterizedType: PStoreConfig<V>(272)", "Delete SimpleName: config(273)", "Delete SingleVariableDeclaration(274)", "Delete SimpleName: IOException(275)", "Delete SimpleType: IOException(276)", "Delete SimpleName: config(277)", "Delete SimpleName: getMode(278)", "Delete MethodInvocation(279)", "Delete SimpleName: BLOB_PERSISTENT(280)", "Delete SwitchCase(281)", "Delete SimpleName: FilePStore(282)", "Delete SimpleType: FilePStore(283)", "Delete SimpleName: V(284)", "Delete SimpleType: V(285)", "Delete ParameterizedType: FilePStore<V>(286)", "Delete SimpleName: fs(287)", "Delete SimpleName: blobRoot(288)", "Delete SimpleName: config(289)", "Delete ClassInstanceCreation(290)", "Delete ReturnStatement(291)", "Delete SimpleName: EPHEMERAL(292)", "Delete SwitchCase(293)", "Delete SimpleName: zkEStoreProvider(294)", "Delete SimpleName: getStore(295)", "Delete SimpleName: config(296)", "Delete MethodInvocation(297)", "Delete ReturnStatement(298)", "Delete SimpleName: PERSISTENT(299)", "Delete SwitchCase(300)", "Delete SimpleName: ZkPStore(301)", "Delete SimpleType: ZkPStore(302)", "Delete SimpleName: V(303)", "Delete SimpleType: V(304)", "Delete ParameterizedType: ZkPStore<V>(305)", "Delete SimpleName: curator(306)", "Delete SimpleName: config(307)", "Delete ClassInstanceCreation(308)", "Delete ReturnStatement(309)", "Delete SwitchCase(310)", "Delete SimpleName: IllegalStateException(311)", "Delete SimpleType: IllegalStateException(312)", "Delete ClassInstanceCreation(313)", "Delete ThrowStatement(314)", "Delete SwitchStatement(315)", "Delete Block(316)", "Delete MethodDeclaration(317)", "Delete SimpleName: Override(318)", "Delete MarkerAnnotation(319)", "Delete Modifier: public(320)", "Delete PrimitiveType: void(321)", "Delete SimpleName: start(322)", "Delete Block(323)", "Delete MethodDeclaration(324)", "Delete SimpleName: Override(325)", "Delete MarkerAnnotation(326)", "Delete Modifier: public(327)", "Delete PrimitiveType: void(328)", "Delete SimpleName: close(329)", "Delete Block(330)", "Delete MethodDeclaration(331)"]}}], "commit_stats": [{"total_files": 88, "deleted_files": 21, "testing": "True", "maintenance": "True", "build": "True"}]}