{"application": "google-closure-compiler", "csha": "e6e4313941289d17b135901145fd1be90735ccf9", "files": [{"Es6RewriteModules_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleName: n to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS SimpleName: n to MethodInvocation at 2", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: Node to SimpleType: Node at 0", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: fixShorthandObjLit to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: addChildToBack to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: useSourceInfoIfMissingFromForTree to MethodInvocation at 1", "INS SimpleType: Node to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: newNode to MethodInvocation at 0", "INS TextElement: value names. Eg: {foo} becomes {foo: module$imported.foo}. to TagElement at 1", "INS SimpleName: newNode to SingleVariableDeclaration at 1", "INS SimpleType: Node to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to MethodInvocation at 2", "INS TextElement: Replace shorthand object literal references to module imports with fully qualified to TagElement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: isImportStar to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS SimpleName: IR to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: isShorthandObjLitKey to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: fixShorthandObjLit to MethodInvocation at 0", "INS SimpleName: moduleAccess to MethodInvocation at 2", "INS SimpleName: n to MethodInvocation at 2", "INS SimpleName: n to MethodInvocation at 1", "INS SimpleName: string to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: pair.originalName to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getprop to MethodInvocation at 1", "INS SimpleName: IR to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: moduleAccess to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: t to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: reportCodeChange to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS Block to IfStatement at 1", "INS SimpleName: fixShorthandObjLit to MethodInvocation at 0", "INS SimpleName: n to MethodInvocation at 1", "INS SimpleName: isImportStar to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from useSourceInfoIfMissingFrom to fixShorthandObjLit", "operations": ["UPD SimpleName: useSourceInfoIfMissingFrom from useSourceInfoIfMissingFrom to fixShorthandObjLit"]}, {"root": "INS SimpleName: isImportStar to IfStatement at 0", "operations": ["INS SimpleName: isImportStar to IfStatement at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: n", "DEL MethodInvocation", "DEL SimpleName: addChildToBack"]}]}}, {"Es6RewriteModules_diff": {"operations": ["Insert MethodDeclaration(2264) into TypeDeclaration: class(2610) at 7", "Insert Javadoc(2243) into MethodDeclaration(2264) at 0", "Insert Modifier: private(2244) into MethodDeclaration(2264) at 1", "Insert PrimitiveType: void(2245) into MethodDeclaration(2264) at 2", "Insert SimpleName: fixShorthandObjLit(2246) into MethodDeclaration(2264) at 3", "Insert SingleVariableDeclaration(2250) into MethodDeclaration(2264) at 4", "Insert SingleVariableDeclaration(2254) into MethodDeclaration(2264) at 5", "Insert Block(2263) into MethodDeclaration(2264) at 6", "Insert TagElement(2242) into Javadoc(2243) at 0", "Insert SimpleType: Node(2248) into SingleVariableDeclaration(2250) at 0", "Insert SimpleName: n(2249) into SingleVariableDeclaration(2250) at 1", "Insert SimpleType: Node(2252) into SingleVariableDeclaration(2254) at 0", "Insert SimpleName: newNode(2253) into SingleVariableDeclaration(2254) at 1", "Insert ExpressionStatement(2262) into Block(2263) at 0", "Insert TextElement: Replace shorthand object literal references to module imports with fully qualified(2240) into TagElement(2242) at 0", "Insert TextElement: value names. Eg: {foo} becomes {foo: module$imported.foo}.(2241) into TagElement(2242) at 1", "Insert SimpleName: Node(2247) into SimpleType: Node(2248) at 0", "Insert SimpleName: Node(2251) into SimpleType: Node(2252) at 0", "Insert MethodInvocation(2261) into ExpressionStatement(2262) at 0", "Insert SimpleName: n(2255) into MethodInvocation(2261) at 0", "Insert SimpleName: addChildToBack(2256) into MethodInvocation(2261) at 1", "Insert MethodInvocation(2260) into MethodInvocation(2261) at 2", "Insert SimpleName: newNode(2257) into MethodInvocation(2260) at 0", "Insert SimpleName: useSourceInfoIfMissingFromForTree(2258) into MethodInvocation(2260) at 1", "Insert SimpleName: n(2259) into MethodInvocation(2260) at 2", "Insert VariableDeclarationStatement(2170) into Block(2233) at 3", "Insert IfStatement(2232) into Block(2233) at 4", "Insert PrimitiveType: boolean(2164) into VariableDeclarationStatement(2170) at 0", "Insert VariableDeclarationFragment(2169) into VariableDeclarationStatement(2170) at 1", "Insert SimpleName: isShorthandObjLitKey(2171) into IfStatement(2232) at 0", "Insert Block(2198) into IfStatement(2232) at 1", "Insert Block(2231) into IfStatement(2232) at 2", "Move MethodInvocation(2101) into ExpressionStatement(2100) at 0", "Move MethodInvocation(2098) into MethodInvocation(2099) at 3", "Insert SimpleName: isImportStar(2165) into VariableDeclarationFragment(2169) at 0", "Move MethodInvocation(2169) into VariableDeclarationFragment(2169) at 1", "Insert IfStatement(2192) into Block(2198) at 0", "Insert ExpressionStatement(2197) into Block(2198) at 1", "Move IfStatement(2195) into Block(2231) at 0", "Move ExpressionStatement(2200) into Block(2231) at 1", "Update SimpleName: useSourceInfoIfMissingFrom(2099) to fixShorthandObjLit", "Insert SimpleName: isImportStar(2172) into IfStatement(2192) at 0", "Insert Block(2178) into IfStatement(2192) at 1", "Insert Block(2191) into IfStatement(2192) at 2", "Insert MethodInvocation(2196) into ExpressionStatement(2197) at 0", "Insert SimpleName: isImportStar(2199) into IfStatement(2225) at 0", "Insert ExpressionStatement(2177) into Block(2178) at 0", "Insert ExpressionStatement(2190) into Block(2191) at 0", "Insert SimpleName: t(2193) into MethodInvocation(2196) at 0", "Insert SimpleName: reportCodeChange(2194) into MethodInvocation(2196) at 1", "Insert SimpleName: n(2195) into MethodInvocation(2196) at 2", "Insert MethodInvocation(2176) into ExpressionStatement(2177) at 0", "Insert MethodInvocation(2189) into ExpressionStatement(2190) at 0", "Insert SimpleName: fixShorthandObjLit(2173) into MethodInvocation(2176) at 0", "Insert SimpleName: n(2174) into MethodInvocation(2176) at 1", "Insert SimpleName: moduleAccess(2175) into MethodInvocation(2176) at 2", "Insert SimpleName: fixShorthandObjLit(2179) into MethodInvocation(2189) at 0", "Insert SimpleName: n(2180) into MethodInvocation(2189) at 1", "Insert MethodInvocation(2188) into MethodInvocation(2189) at 2", "Insert SimpleName: IR(2181) into MethodInvocation(2188) at 0", "Insert SimpleName: getprop(2182) into MethodInvocation(2188) at 1", "Insert SimpleName: moduleAccess(2183) into MethodInvocation(2188) at 2", "Insert MethodInvocation(2187) into MethodInvocation(2188) at 3", "Insert SimpleName: IR(2184) into MethodInvocation(2187) at 0", "Insert SimpleName: string(2185) into MethodInvocation(2187) at 1", "Insert QualifiedName: pair.originalName(2186) into MethodInvocation(2187) at 2", "Delete SimpleName: n(2093)", "Delete SimpleName: addChildToBack(2094)", "Delete MethodInvocation(2102)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}