{"application": "apache-drill", "csha": "b075bf6102e1561ee3755b483e1d1e6018d7e505", "files": [{"DrillMetrics_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 12", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "UPDATE from java.util.Map.Entry to com.codahale.metrics.jvm.FileDescriptorRatioGauge", "operations": ["UPD QualifiedName: java.util.Map.Entry from java.util.Map.Entry to com.codahale.metrics.jvm.FileDescriptorRatioGauge"]}, {"root": "UPDATE from org.apache.drill.common.config.DrillConfig to org.apache.drill.exec.util.SystemPropertyUtil", "operations": ["UPD QualifiedName: org.apache.drill.common.config.DrillConfig from org.apache.drill.common.config.DrillConfig to org.apache.drill.exec.util.SystemPropertyUtil"]}, {"root": "INS Modifier: final to TypeDeclaration: class at 1", "operations": ["INS Modifier: final to TypeDeclaration: class at 1"]}, {"root": "INS Modifier: private to FieldDeclaration at 0", "operations": ["INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS PrimitiveType: boolean to FieldDeclaration at 3", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 3"]}, {"root": "INS PrimitiveType: boolean to FieldDeclaration at 3", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 3"]}, {"root": "INS PrimitiveType: int to FieldDeclaration at 3", "operations": ["INS PrimitiveType: int to FieldDeclaration at 3"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: name to TagElement: @param at 0", "INS TagElement: @link to TagElement at 3", "INS QualifiedName: com.codahale.metrics.Gauge to TagElement: @link at 0", "INS SimpleName: getRegistry to MemberRef at 0", "INS TextElement: metric implementations use this method. The registry does not allow registering multiple metrics with to TagElement at 7", "INS TextElement:  the to TagElement: @link at 1", "INS TextElement:  or custom to TagElement at 6", "INS SimpleName: counter to MemberRef at 1", "INS TextElement:  metric type to TagElement: @param at 3", "INS TagElement: @link to TagElement at 5", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: metric to TagElement: @param at 0", "INS TextElement: > to TagElement: @param at 2", "INS TextElement:  (e.g.  to TagElement at 2", "INS TextElement:  metric name to TagElement: @param at 1", "INS TextElement:  metric instance to TagElement: @param at 1", "INS MemberRef to TagElement: @link at 0", "INS TextElement: < to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: MetricRegistry to MemberRef at 0", "INS TextElement:  gauges to TagElement: @link at 1", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: T to TagElement: @param at 1", "INS TextElement: registry to TagElement: @link at 2", "INS MemberRef to TagElement: @link at 0", "INS TextElement: Note: For counters, histograms, meters and timers, use get or create methods on  to TagElement at 0", "INS TextElement: the same name, which is a problem when multiple drillbits are started in the same JVM (e.g. unit tests). to TagElement at 8", "INS TextElement: ). For  to TagElement at 4", "INS TagElement: @link to TagElement at 1"]}, {"root": "UPDATE from getInstance to getRegistry", "operations": ["UPD SimpleName: getInstance from getInstance to getRegistry"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS StringLiteral: \"drill.metrics.jmx.enabled\" to MethodInvocation at 2", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SimpleName: SystemPropertyUtil to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getBoolean to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: SystemPropertyUtil to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getBoolean to MethodInvocation at 1", "INS StringLiteral: \"drill.metrics.log.enabled\" to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 60 to MethodInvocation at 3", "INS SimpleName: getInt to MethodInvocation at 1", "INS StringLiteral: \"drill.metrics.log.interval\" to MethodInvocation at 2", "INS SimpleName: SystemPropertyUtil to MethodInvocation at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from registerSysStats to registerSystemMetrics", "operations": ["UPD SimpleName: registerSysStats from registerSysStats to registerSystemMetrics", "UPD SimpleName: registerSysStats from registerSysStats to registerSystemMetrics", "UPD SimpleName: registerSysStats from registerSysStats to registerSystemMetrics"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: FileDescriptorRatioGauge to SimpleType: FileDescriptorRatioGauge at 0", "INS SimpleType: FileDescriptorRatioGauge to ClassInstanceCreation at 0", "INS SimpleName: register to MethodInvocation at 0", "INS StringLiteral: \"fd.usage\" to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS SimpleName: METRICS_JMX_OUTPUT_ENABLED to IfStatement at 0", "operations": ["INS SimpleName: METRICS_JMX_OUTPUT_ENABLED to IfStatement at 0"]}, {"root": "INS SimpleName: METRICS_LOG_OUTPUT_ENABLED to IfStatement at 0", "operations": ["INS SimpleName: METRICS_LOG_OUTPUT_ENABLED to IfStatement at 0"]}, {"root": "INS QualifiedName: MetricFilter.ALL to MethodInvocation at 2", "operations": ["INS QualifiedName: MetricFilter.ALL to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: METRICS_LOG_OUTPUT_INTERVAL to MethodInvocation at 2"]}, {"root": "UPDATE from getInstance to REGISTRY", "operations": ["UPD SimpleName: getInstance from getInstance to REGISTRY", "UPD SimpleName: getInstance from getInstance to REGISTRY"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getInstance to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getInstance to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.codahale.metrics.MetricSet", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL StringLiteral: \"drill.metrics.jmx.enabled\"", "operations": ["DEL StringLiteral: \"drill.metrics.jmx.enabled\""]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL StringLiteral: \"drill.metrics.log.enabled\"", "operations": ["DEL StringLiteral: \"drill.metrics.log.enabled\""]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL StringLiteral: \"drill.metrics.log.interval\"", "operations": ["DEL StringLiteral: \"drill.metrics.log.interval\""]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: DrillConfig", "DEL SimpleName: create", "DEL SimpleName: DrillConfig", "DEL MethodInvocation", "DEL Modifier: final", "DEL FieldDeclaration", "DEL SimpleName: config", "DEL Modifier: static", "DEL SimpleType: DrillConfig", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: config", "DEL SimpleName: getBoolean", "DEL SimpleName: METRICS_JMX_OUTPUT_ENABLED", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: METRICS_LOG_OUTPUT_ENABLED", "DEL SimpleName: getBoolean", "DEL MethodInvocation", "DEL SimpleName: config"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: config", "DEL SimpleName: getInt", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: entry", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: getMetrics", "DEL SimpleName: registry", "DEL ParameterizedType: Entry<String,Metric>", "DEL SimpleType: Entry", "DEL InstanceofExpression", "DEL SimpleName: entry", "DEL SimpleName: entry", "DEL SimpleName: getValue", "DEL SimpleName: MetricSet", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: Metric", "DEL SimpleName: registry", "DEL SimpleType: MetricSet", "DEL SimpleType: MetricRegistry", "DEL SimpleName: entry", "DEL SimpleName: metricSet", "DEL SimpleName: getValue", "DEL StringLiteral: \".\"", "DEL SimpleName: prefix", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL Block", "DEL ExpressionStatement", "DEL Modifier: private", "DEL InfixExpression: +", "DEL EnhancedForStatement", "DEL SimpleName: registerAll", "DEL SingleVariableDeclaration", "DEL SimpleName: prefix", "DEL SimpleName: String", "DEL SimpleName: register", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleType: MetricSet", "DEL SimpleName: Entry", "DEL MethodInvocation", "DEL SimpleName: metricSet", "DEL SimpleName: registry", "DEL CastExpression", "DEL Block", "DEL SimpleType: MetricSet", "DEL MethodDeclaration", "DEL SimpleName: registerAll", "DEL MethodInvocation", "DEL SimpleName: MetricSet", "DEL SimpleType: Metric", "DEL SimpleName: prefix", "DEL SimpleType: String", "DEL SimpleName: MetricRegistry", "DEL SimpleName: entrySet", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: getKey", "DEL SimpleName: getKey", "DEL SimpleName: MetricSet", "DEL Modifier: static", "DEL SimpleName: String", "DEL MethodInvocation", "DEL StringLiteral: \".\"", "DEL IfStatement"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: name", "DEL SimpleName: metric", "DEL SimpleName: matches", "DEL SimpleName: String", "DEL AnonymousClassDeclaration", "DEL ReturnStatement", "DEL SimpleName: MetricFilter", "DEL PrimitiveType: boolean", "DEL ClassInstanceCreation", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleName: Metric", "DEL SimpleType: Metric", "DEL BooleanLiteral: true", "DEL SimpleType: MetricFilter", "DEL MethodDeclaration", "DEL Block"]}]}}, {"DrillMetrics_diff": {"operations": ["Move ImportDeclaration(20) into CompilationUnit(361) at 12", "Move ImportDeclaration(24) into CompilationUnit(361) at 15", "Move MethodDeclaration(100) into TypeDeclaration: class(360) at 13", "Update QualifiedName: java.util.Map.Entry(19) to com.codahale.metrics.jvm.FileDescriptorRatioGauge", "Update QualifiedName: org.apache.drill.common.config.DrillConfig(23) to org.apache.drill.exec.util.SystemPropertyUtil", "Insert Modifier: final(44) into TypeDeclaration: class(360) at 1", "Insert Modifier: private(46) into FieldDeclaration(59) at 0", "Insert PrimitiveType: boolean(63) into FieldDeclaration(71) at 3", "Insert PrimitiveType: boolean(75) into FieldDeclaration(83) at 3", "Insert PrimitiveType: int(87) into FieldDeclaration(95) at 3", "Insert Javadoc(289) into MethodDeclaration(331) at 0", "Update SimpleName: getInstance(388) to getRegistry", "Insert MethodInvocation(69) into VariableDeclarationFragment(70) at 1", "Insert MethodInvocation(81) into VariableDeclarationFragment(82) at 1", "Insert MethodInvocation(93) into VariableDeclarationFragment(94) at 1", "Update Modifier: public(104) to private", "Update SimpleName: registerSysStats(153) to registerSystemMetrics", "Insert TagElement(277) into Javadoc(289) at 0", "Insert TagElement: @param(280) into Javadoc(289) at 1", "Insert TagElement: @param(283) into Javadoc(289) at 2", "Insert TagElement: @param(288) into Javadoc(289) at 3", "Insert SimpleName: SystemPropertyUtil(65) into MethodInvocation(69) at 0", "Insert SimpleName: getBoolean(66) into MethodInvocation(69) at 1", "Insert StringLiteral: \"drill.metrics.jmx.enabled\"(67) into MethodInvocation(69) at 2", "Insert BooleanLiteral: true(68) into MethodInvocation(69) at 3", "Insert SimpleName: SystemPropertyUtil(77) into MethodInvocation(81) at 0", "Insert SimpleName: getBoolean(78) into MethodInvocation(81) at 1", "Insert StringLiteral: \"drill.metrics.log.enabled\"(79) into MethodInvocation(81) at 2", "Insert BooleanLiteral: false(80) into MethodInvocation(81) at 3", "Insert SimpleName: SystemPropertyUtil(89) into MethodInvocation(93) at 0", "Insert SimpleName: getInt(90) into MethodInvocation(93) at 1", "Insert StringLiteral: \"drill.metrics.log.interval\"(91) into MethodInvocation(93) at 2", "Insert NumberLiteral: 60(92) into MethodInvocation(93) at 3", "Insert ExpressionStatement(186) into Block(187) at 4", "Move ReturnStatement(216) into Block(216) at 1", "Move ReturnStatement(264) into Block(256) at 1", "Insert TextElement: Note: For counters, histograms, meters and timers, use get or create methods on (259) into TagElement(277) at 0", "Insert TagElement: @link(264) into TagElement(277) at 1", "Insert TextElement:  (e.g. (265) into TagElement(277) at 2", "Insert TagElement: @link(269) into TagElement(277) at 3", "Insert TextElement: ). For (270) into TagElement(277) at 4", "Insert TagElement: @link(273) into TagElement(277) at 5", "Insert TextElement:  or custom(274) into TagElement(277) at 6", "Insert TextElement: metric implementations use this method. The registry does not allow registering multiple metrics with(275) into TagElement(277) at 7", "Insert TextElement: the same name, which is a problem when multiple drillbits are started in the same JVM (e.g. unit tests).(276) into TagElement(277) at 8", "Insert SimpleName: name(278) into TagElement: @param(280) at 0", "Insert TextElement:  metric name(279) into TagElement: @param(280) at 1", "Insert SimpleName: metric(281) into TagElement: @param(283) at 0", "Insert TextElement:  metric instance(282) into TagElement: @param(283) at 1", "Insert TextElement: <(284) into TagElement: @param(288) at 0", "Insert SimpleName: T(285) into TagElement: @param(288) at 1", "Insert TextElement: >(286) into TagElement: @param(288) at 2", "Insert TextElement:  metric type(287) into TagElement: @param(288) at 3", "Insert MethodInvocation(185) into ExpressionStatement(186) at 0", "Insert SimpleName: METRICS_JMX_OUTPUT_ENABLED(194) into IfStatement(213) at 0", "Insert SimpleName: METRICS_LOG_OUTPUT_ENABLED(223) into IfStatement(253) at 0", "Insert MemberRef(261) into TagElement: @link(264) at 0", "Insert TextElement:  the(262) into TagElement: @link(264) at 1", "Insert TextElement: registry(263) into TagElement: @link(264) at 2", "Insert MemberRef(268) into TagElement: @link(269) at 0", "Insert QualifiedName: com.codahale.metrics.Gauge(271) into TagElement: @link(273) at 0", "Insert TextElement:  gauges(272) into TagElement: @link(273) at 1", "Insert QualifiedName: MetricFilter.ALL(347) into MethodInvocation(348) at 2", "Update SimpleName: registerSysStats(423) to registerSystemMetrics", "Update SimpleName: registerSysStats(135) to registerSystemMetrics", "Insert SimpleName: register(180) into MethodInvocation(185) at 0", "Insert StringLiteral: \"fd.usage\"(181) into MethodInvocation(185) at 1", "Insert ClassInstanceCreation(184) into MethodInvocation(185) at 2", "Insert SimpleName: getRegistry(260) into MemberRef(261) at 0", "Insert SimpleName: MetricRegistry(266) into MemberRef(268) at 0", "Insert SimpleName: counter(267) into MemberRef(268) at 1", "Insert SimpleType: FileDescriptorRatioGauge(183) into ClassInstanceCreation(184) at 0", "Insert SimpleName: FileDescriptorRatioGauge(182) into SimpleType: FileDescriptorRatioGauge(183) at 0", "Move SimpleName: METRICS_LOG_OUTPUT_INTERVAL(255) into MethodInvocation(248) at 2", "Update SimpleName: getInstance(201) to REGISTRY", "Move SimpleName: getInstance(201) into MethodInvocation(201) at 2", "Update SimpleName: getInstance(235) to REGISTRY", "Move SimpleName: getInstance(235) into MethodInvocation(230) at 2", "Delete QualifiedName: com.codahale.metrics.MetricSet(33)", "Delete ImportDeclaration(34)", "Delete SimpleName: String(63)", "Delete SimpleType: String(64)", "Delete StringLiteral: \"drill.metrics.jmx.enabled\"(66)", "Delete SimpleName: String(72)", "Delete SimpleType: String(73)", "Delete StringLiteral: \"drill.metrics.log.enabled\"(75)", "Delete SimpleName: String(81)", "Delete SimpleType: String(82)", "Delete StringLiteral: \"drill.metrics.log.interval\"(84)", "Delete Modifier: static(87)", "Delete Modifier: final(88)", "Delete SimpleName: DrillConfig(89)", "Delete SimpleType: DrillConfig(90)", "Delete SimpleName: config(91)", "Delete SimpleName: DrillConfig(92)", "Delete SimpleName: create(93)", "Delete MethodInvocation(94)", "Delete VariableDeclarationFragment(95)", "Delete FieldDeclaration(96)", "Delete SimpleName: config(192)", "Delete SimpleName: getBoolean(193)", "Delete SimpleName: METRICS_JMX_OUTPUT_ENABLED(194)", "Delete MethodInvocation(195)", "Delete MethodInvocation(202)", "Delete Block(217)", "Delete SimpleName: config(226)", "Delete SimpleName: getBoolean(227)", "Delete SimpleName: METRICS_LOG_OUTPUT_ENABLED(228)", "Delete MethodInvocation(229)", "Delete MethodInvocation(236)", "Delete SimpleName: config(253)", "Delete SimpleName: getInt(254)", "Delete MethodInvocation(256)", "Delete Block(265)", "Delete Modifier: private(312)", "Delete Modifier: static(313)", "Delete PrimitiveType: void(314)", "Delete SimpleName: registerAll(315)", "Delete SimpleName: String(316)", "Delete SimpleType: String(317)", "Delete SimpleName: prefix(318)", "Delete SingleVariableDeclaration(319)", "Delete SimpleName: MetricSet(320)", "Delete SimpleType: MetricSet(321)", "Delete SimpleName: metricSet(322)", "Delete SingleVariableDeclaration(323)", "Delete SimpleName: MetricRegistry(324)", "Delete SimpleType: MetricRegistry(325)", "Delete SimpleName: registry(326)", "Delete SingleVariableDeclaration(327)", "Delete SimpleName: Entry(328)", "Delete SimpleType: Entry(329)", "Delete SimpleName: String(330)", "Delete SimpleType: String(331)", "Delete SimpleName: Metric(332)", "Delete SimpleType: Metric(333)", "Delete ParameterizedType: Entry<String,Metric>(334)", "Delete SimpleName: entry(335)", "Delete SingleVariableDeclaration(336)", "Delete SimpleName: metricSet(337)", "Delete SimpleName: getMetrics(338)", "Delete MethodInvocation(339)", "Delete SimpleName: entrySet(340)", "Delete MethodInvocation(341)", "Delete SimpleName: entry(342)", "Delete SimpleName: getValue(343)", "Delete MethodInvocation(344)", "Delete SimpleName: MetricSet(345)", "Delete SimpleType: MetricSet(346)", "Delete InstanceofExpression(347)", "Delete SimpleName: registerAll(348)", "Delete SimpleName: prefix(349)", "Delete StringLiteral: \".\"(350)", "Delete SimpleName: entry(351)", "Delete SimpleName: getKey(352)", "Delete MethodInvocation(353)", "Delete InfixExpression: +(354)", "Delete SimpleName: MetricSet(355)", "Delete SimpleType: MetricSet(356)", "Delete SimpleName: entry(357)", "Delete SimpleName: getValue(358)", "Delete MethodInvocation(359)", "Delete CastExpression(360)", "Delete SimpleName: registry(361)", "Delete MethodInvocation(362)", "Delete ExpressionStatement(363)", "Delete Block(364)", "Delete SimpleName: registry(365)", "Delete SimpleName: register(366)", "Delete SimpleName: prefix(367)", "Delete StringLiteral: \".\"(368)", "Delete SimpleName: entry(369)", "Delete SimpleName: getKey(370)", "Delete MethodInvocation(371)", "Delete InfixExpression: +(372)", "Delete SimpleName: entry(373)", "Delete SimpleName: getValue(374)", "Delete MethodInvocation(375)", "Delete MethodInvocation(376)", "Delete ExpressionStatement(377)", "Delete Block(378)", "Delete IfStatement(379)", "Delete Block(380)", "Delete EnhancedForStatement(381)", "Delete Block(382)", "Delete MethodDeclaration(383)", "Delete SimpleName: MetricFilter(399)", "Delete SimpleType: MetricFilter(400)", "Delete SimpleName: Override(401)", "Delete MarkerAnnotation(402)", "Delete Modifier: public(403)", "Delete PrimitiveType: boolean(404)", "Delete SimpleName: matches(405)", "Delete SimpleName: String(406)", "Delete SimpleType: String(407)", "Delete SimpleName: name(408)", "Delete SingleVariableDeclaration(409)", "Delete SimpleName: Metric(410)", "Delete SimpleType: Metric(411)", "Delete SimpleName: metric(412)", "Delete SingleVariableDeclaration(413)", "Delete BooleanLiteral: true(414)", "Delete ReturnStatement(415)", "Delete Block(416)", "Delete MethodDeclaration(417)", "Delete AnonymousClassDeclaration(418)", "Delete ClassInstanceCreation(419)"]}}, {"VectorAccessibleSerializable_cluster": {"actions": [{"root": "UPDATE from getInstance to getRegistry", "operations": ["UPD SimpleName: getInstance from getInstance to getRegistry"]}]}}, {"VectorAccessibleSerializable_diff": {"operations": ["Update SimpleName: getInstance(71) to getRegistry"]}}, {"FragmentContext_cluster": {"actions": [{"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getMetrics", "DEL SimpleName: dbContext", "DEL MethodInvocation"]}]}}, {"FragmentContext_diff": {"operations": ["Delete SimpleName: dbContext(638)", "Delete SimpleName: getMetrics(639)", "Delete MethodInvocation(640)"]}}, {"FragmentStats_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.codahale.metrics.MetricRegistry"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: MetricRegistry", "DEL SimpleName: metrics", "DEL SimpleType: MetricRegistry"]}]}}, {"FragmentStats_diff": {"operations": ["Delete QualifiedName: com.codahale.metrics.MetricRegistry(25)", "Delete ImportDeclaration(26)", "Delete SimpleName: MetricRegistry(72)", "Delete SimpleType: MetricRegistry(73)", "Delete SimpleName: metrics(74)", "Delete SingleVariableDeclaration(75)"]}}, {"BootStrapContext_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from getInstance to getRegistry", "operations": ["UPD SimpleName: getInstance from getInstance to getRegistry"]}]}}, {"BootStrapContext_diff": {"operations": ["Move ImportDeclaration(46) into CompilationUnit(389) at 1", "Update SimpleName: getInstance(166) to getRegistry"]}}, {"ServiceEngine_cluster": {"actions": [{"root": "UPDATE from \"user.current\" to \"user.used\"", "operations": ["UPD StringLiteral: \"user.current\" from \"user.current\" to \"user.used\""]}, {"root": "UPDATE from \"bit.control.current\" to \"bit.control.used\"", "operations": ["UPD StringLiteral: \"bit.control.current\" from \"bit.control.current\" to \"bit.control.used\""]}, {"root": "UPDATE from \"bit.data.current\" to \"bit.data.used\"", "operations": ["UPD StringLiteral: \"bit.data.current\" from \"bit.data.current\" to \"bit.data.used\""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.lang3.StringUtils", "DEL ImportDeclaration"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}]}}, {"ServiceEngine_diff": {"operations": ["Update StringLiteral: \"user.current\"(327) to \"user.used\"", "Update StringLiteral: \"bit.control.current\"(379) to \"bit.control.used\"", "Update StringLiteral: \"bit.data.current\"(431) to \"bit.data.used\"", "Delete QualifiedName: org.apache.commons.lang3.StringUtils(35)", "Delete ImportDeclaration(36)", "Delete Modifier: final(307)"]}}, {"WorkManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.drill.exec.metrics.DrillMetrics to ImportDeclaration at 0"]}, {"root": "UPDATE from com.codahale.metrics.MetricRegistry to com.codahale.metrics.Counter", "operations": ["UPD QualifiedName: com.codahale.metrics.MetricRegistry from com.codahale.metrics.MetricRegistry to com.codahale.metrics.Counter"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS PrimitiveType: long to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: numRunningFragments to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS SimpleName: numRunningFragments to InfixExpression: != at 0"]}, {"root": "UPDATE from getMetrics to DrillMetrics", "operations": ["UPD SimpleName: getMetrics from getMetrics to DrillMetrics"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getMetrics to MethodInvocation at 0"]}, {"root": "INS StringLiteral: \"drill.fragments.running\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"drill.fragments.running\" to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: numRunningFragments to MethodInvocation at 3", "operations": ["INS SimpleName: numRunningFragments to MethodInvocation at 3"]}, {"root": "UPDATE from org.apache.drill.exec.rpc.data.DataResponseHandlerImpl to org.apache.drill.exec.rpc.data.DataServer", "operations": ["UPD QualifiedName: org.apache.drill.exec.rpc.data.DataResponseHandlerImpl from org.apache.drill.exec.rpc.data.DataResponseHandlerImpl to org.apache.drill.exec.rpc.data.DataServer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: dContext", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: MetricRegistry", "DEL MethodInvocation", "DEL SimpleName: dContext", "DEL SimpleName: getUserPort", "DEL SimpleName: getEndpoint", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL StringLiteral: \"drill.exec.work.running_fragments.\"", "DEL SimpleName: name", "DEL MethodInvocation"]}, {"root": "DEL TryStatement", "operations": ["DEL TryStatement", "DEL CatchClause", "DEL Modifier: final", "DEL StringLiteral: \"Exception while registering metrics\"", "DEL SimpleName: logger", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: IllegalArgumentException", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL Block", "DEL SimpleType: IllegalArgumentException", "DEL SimpleName: warn"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL MethodInvocation", "DEL SimpleName: isEmpty", "DEL PrefixExpression: !", "DEL SimpleName: runningFragments"]}]}}, {"WorkManager_diff": {"operations": ["Move ImportDeclaration(76) into CompilationUnit(949) at 6", "Insert ImportDeclaration(36) into CompilationUnit(949) at 10", "Update QualifiedName: com.codahale.metrics.MetricRegistry(75) to com.codahale.metrics.Counter", "Insert QualifiedName: org.apache.drill.exec.metrics.DrillMetrics(35) into ImportDeclaration(36) at 0", "Move ExpressionStatement(334) into Block(326) at 2", "Insert VariableDeclarationStatement(386) into Block(433) at 1", "Insert Modifier: final(379) into VariableDeclarationStatement(386) at 0", "Insert PrimitiveType: long(380) into VariableDeclarationStatement(386) at 1", "Insert VariableDeclarationFragment(385) into VariableDeclarationStatement(386) at 2", "Insert InfixExpression: !=(389) into IfStatement(427) at 0", "Update SimpleName: getMetrics(301) to DrillMetrics", "Move SimpleName: getMetrics(301) into MethodInvocation(324) at 0", "Insert StringLiteral: \"drill.fragments.running\"(304) into MethodInvocation(324) at 2", "Insert SimpleName: numRunningFragments(381) into VariableDeclarationFragment(385) at 0", "Move MethodInvocation(412) into VariableDeclarationFragment(385) at 1", "Insert SimpleName: numRunningFragments(387) into InfixExpression: !=(389) at 0", "Insert NumberLiteral: 0(388) into InfixExpression: !=(389) at 1", "Insert SimpleName: numRunningFragments(393) into MethodInvocation(394) at 3", "Update QualifiedName: org.apache.drill.exec.rpc.data.DataResponseHandlerImpl(711) to org.apache.drill.exec.rpc.data.DataServer", "Delete SimpleName: dContext(300)", "Delete MethodInvocation(302)", "Delete SimpleName: MetricRegistry(304)", "Delete SimpleName: name(305)", "Delete StringLiteral: \"drill.exec.work.running_fragments.\"(306)", "Delete SimpleName: dContext(307)", "Delete SimpleName: getEndpoint(308)", "Delete MethodInvocation(309)", "Delete SimpleName: getUserPort(310)", "Delete MethodInvocation(311)", "Delete InfixExpression: +(312)", "Delete MethodInvocation(313)", "Delete Block(335)", "Delete Modifier: final(336)", "Delete SimpleName: IllegalArgumentException(337)", "Delete SimpleType: IllegalArgumentException(338)", "Delete SimpleName: e(339)", "Delete SingleVariableDeclaration(340)", "Delete SimpleName: logger(341)", "Delete SimpleName: warn(342)", "Delete StringLiteral: \"Exception while registering metrics\"(343)", "Delete SimpleName: e(344)", "Delete MethodInvocation(345)", "Delete ExpressionStatement(346)", "Delete Block(347)", "Delete CatchClause(348)", "Delete TryStatement(349)", "Delete SimpleName: runningFragments(403)", "Delete SimpleName: isEmpty(404)", "Delete MethodInvocation(405)", "Delete PrefixExpression: !(406)"]}}, {"TransportCheck_cluster": {"actions": [{"root": "UPDATE from io.netty.util.internal.SystemPropertyUtil to org.apache.drill.exec.util.SystemPropertyUtil", "operations": ["UPD QualifiedName: io.netty.util.internal.SystemPropertyUtil from io.netty.util.internal.SystemPropertyUtil to org.apache.drill.exec.util.SystemPropertyUtil"]}]}}, {"TransportCheck_diff": {"operations": ["Update QualifiedName: io.netty.util.internal.SystemPropertyUtil(35) to org.apache.drill.exec.util.SystemPropertyUtil"]}}, {"BlockMapBuilder_cluster": {"actions": [{"root": "UPDATE from getInstance to getRegistry", "operations": ["UPD SimpleName: getInstance from getInstance to getRegistry"]}]}}, {"BlockMapBuilder_diff": {"operations": ["Update SimpleName: getInstance(88) to getRegistry"]}}, {"Foreman_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.codahale.metrics.Counter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS ImportDeclaration to CompilationUnit at 27", "INS QualifiedName: org.apache.drill.exec.metrics.DrillMetrics to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: counter to MethodInvocation at 1", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: enqueuedQueries to VariableDeclarationFragment at 0", "INS StringLiteral: \"drill.queries.enqueued\" to MethodInvocation at 2", "INS SimpleName: DrillMetrics to MethodInvocation at 0", "INS SimpleName: getRegistry to MethodInvocation at 1", "INS SimpleType: Counter to FieldDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Counter to SimpleType: Counter at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: Counter to SimpleType: Counter at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS SimpleName: getRegistry to MethodInvocation at 1", "INS StringLiteral: \"drill.queries.running\" to MethodInvocation at 2", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: runningQueries to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: counter to MethodInvocation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Counter to FieldDeclaration at 3", "INS SimpleName: DrillMetrics to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: Counter to SimpleType: Counter at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: Counter to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: completedQueries to VariableDeclarationFragment at 0", "INS SimpleName: counter to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS StringLiteral: \"drill.queries.completed\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getRegistry to MethodInvocation at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: DrillMetrics to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: enqueuedQueries to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 14", "INS SimpleName: inc to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: enqueuedQueries to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: dec to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: inc to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: runningQueries to MethodInvocation at 0", "INS ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 18", "operations": ["INS SimpleName: dec to MethodInvocation at 1", "INS SimpleName: runningQueries to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 18"]}, {"root": "INS ExpressionStatement to Block at 19", "operations": ["INS ExpressionStatement to Block at 19", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: inc to MethodInvocation at 1", "INS SimpleName: completedQueries to MethodInvocation at 0"]}]}}, {"Foreman_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(4119) at 1", "Insert ImportDeclaration(70) into CompilationUnit(4119) at 27", "Insert QualifiedName: com.codahale.metrics.Counter(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: org.apache.drill.exec.metrics.DrillMetrics(69) into ImportDeclaration(70) at 0", "Insert FieldDeclaration(252) into TypeDeclaration: class(4118) at 9", "Insert FieldDeclaration(266) into TypeDeclaration: class(4118) at 10", "Insert FieldDeclaration(280) into TypeDeclaration: class(4118) at 11", "Insert Modifier: private(239) into FieldDeclaration(252) at 0", "Insert Modifier: static(240) into FieldDeclaration(252) at 1", "Insert Modifier: final(241) into FieldDeclaration(252) at 2", "Insert SimpleType: Counter(243) into FieldDeclaration(252) at 3", "Insert VariableDeclarationFragment(251) into FieldDeclaration(252) at 4", "Insert Modifier: private(253) into FieldDeclaration(266) at 0", "Insert Modifier: static(254) into FieldDeclaration(266) at 1", "Insert Modifier: final(255) into FieldDeclaration(266) at 2", "Insert SimpleType: Counter(257) into FieldDeclaration(266) at 3", "Insert VariableDeclarationFragment(265) into FieldDeclaration(266) at 4", "Insert Modifier: private(267) into FieldDeclaration(280) at 0", "Insert Modifier: static(268) into FieldDeclaration(280) at 1", "Insert Modifier: final(269) into FieldDeclaration(280) at 2", "Insert SimpleType: Counter(271) into FieldDeclaration(280) at 3", "Insert VariableDeclarationFragment(279) into FieldDeclaration(280) at 4", "Insert SimpleName: Counter(242) into SimpleType: Counter(243) at 0", "Insert SimpleName: enqueuedQueries(244) into VariableDeclarationFragment(251) at 0", "Insert MethodInvocation(250) into VariableDeclarationFragment(251) at 1", "Insert SimpleName: Counter(256) into SimpleType: Counter(257) at 0", "Insert SimpleName: runningQueries(258) into VariableDeclarationFragment(265) at 0", "Insert MethodInvocation(264) into VariableDeclarationFragment(265) at 1", "Insert SimpleName: Counter(270) into SimpleType: Counter(271) at 0", "Insert SimpleName: completedQueries(272) into VariableDeclarationFragment(279) at 0", "Insert MethodInvocation(278) into VariableDeclarationFragment(279) at 1", "Insert ExpressionStatement(589) into Block(590) at 14", "Insert ExpressionStatement(729) into Block(915) at 4", "Insert ExpressionStatement(733) into Block(915) at 5", "Insert MethodInvocation(247) into MethodInvocation(250) at 0", "Insert SimpleName: counter(248) into MethodInvocation(250) at 1", "Insert StringLiteral: \"drill.queries.enqueued\"(249) into MethodInvocation(250) at 2", "Insert MethodInvocation(261) into MethodInvocation(264) at 0", "Insert SimpleName: counter(262) into MethodInvocation(264) at 1", "Insert StringLiteral: \"drill.queries.running\"(263) into MethodInvocation(264) at 2", "Insert MethodInvocation(275) into MethodInvocation(278) at 0", "Insert SimpleName: counter(276) into MethodInvocation(278) at 1", "Insert StringLiteral: \"drill.queries.completed\"(277) into MethodInvocation(278) at 2", "Insert MethodInvocation(588) into ExpressionStatement(589) at 0", "Insert MethodInvocation(728) into ExpressionStatement(729) at 0", "Insert MethodInvocation(732) into ExpressionStatement(733) at 0", "Insert ExpressionStatement(2667) into Block(2682) at 18", "Insert ExpressionStatement(2671) into Block(2682) at 19", "Insert SimpleName: DrillMetrics(245) into MethodInvocation(247) at 0", "Insert SimpleName: getRegistry(246) into MethodInvocation(247) at 1", "Insert SimpleName: DrillMetrics(259) into MethodInvocation(261) at 0", "Insert SimpleName: getRegistry(260) into MethodInvocation(261) at 1", "Insert SimpleName: DrillMetrics(273) into MethodInvocation(275) at 0", "Insert SimpleName: getRegistry(274) into MethodInvocation(275) at 1", "Insert SimpleName: enqueuedQueries(586) into MethodInvocation(588) at 0", "Insert SimpleName: inc(587) into MethodInvocation(588) at 1", "Insert SimpleName: enqueuedQueries(726) into MethodInvocation(728) at 0", "Insert SimpleName: dec(727) into MethodInvocation(728) at 1", "Insert SimpleName: runningQueries(730) into MethodInvocation(732) at 0", "Insert SimpleName: inc(731) into MethodInvocation(732) at 1", "Insert MethodInvocation(2666) into ExpressionStatement(2667) at 0", "Insert MethodInvocation(2670) into ExpressionStatement(2671) at 0", "Insert SimpleName: runningQueries(2664) into MethodInvocation(2666) at 0", "Insert SimpleName: dec(2665) into MethodInvocation(2666) at 1", "Insert SimpleName: completedQueries(2668) into MethodInvocation(2670) at 0", "Insert SimpleName: inc(2669) into MethodInvocation(2670) at 1"]}}, {"AllocationManager_cluster": {"actions": [{"root": "UPDATE from getInstance to getRegistry", "operations": ["UPD SimpleName: getInstance from getInstance to getRegistry"]}]}}, {"AllocationManager_diff": {"operations": ["Update SimpleName: getInstance(94) to getRegistry"]}}, {"RootAllocator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.codahale.metrics.Gauge to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.drill.exec.metrics.DrillMetrics to ImportDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: Gauge to SimpleType: Gauge at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS ParameterizedType: Gauge<Long> to ClassInstanceCreation at 0", "INS SimpleType: Long to ParameterizedType: Gauge<Long> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: DrillMetrics to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: register to MethodInvocation at 1", "INS SimpleType: Long to MethodDeclaration at 2", "INS SimpleName: getValue to MethodDeclaration at 3", "INS SimpleName: getPeakMemoryAllocation to MethodInvocation at 0", "INS SimpleName: Gauge to SimpleType: Gauge at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Gauge to ParameterizedType: Gauge<Long> at 0", "INS SimpleType: Long to ParameterizedType: Gauge<Long> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: DrillMetrics to MethodInvocation at 0", "INS ParameterizedType: Gauge<Long> to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Gauge to ParameterizedType: Gauge<Long> at 0", "INS SimpleType: Long to MethodDeclaration at 2", "INS SimpleName: Long to SimpleType: Long at 0", "INS StringLiteral: \"drill.allocator.root.peak\" to MethodInvocation at 2", "INS StringLiteral: \"drill.allocator.root.used\" to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: getValue to MethodDeclaration at 3", "INS ClassInstanceCreation to MethodInvocation at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: register to MethodInvocation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: getAllocatedMemory to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0"]}]}}, {"RootAllocator_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(104) at 1", "Insert ImportDeclaration(22) into CompilationUnit(104) at 3", "Insert QualifiedName: com.codahale.metrics.Gauge(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: org.apache.drill.exec.metrics.DrillMetrics(21) into ImportDeclaration(22) at 0", "Insert Block(88) into MethodDeclaration(89) at 3", "Move SuperConstructorInvocation(37) into Block(88) at 0", "Insert ExpressionStatement(64) into Block(88) at 1", "Insert ExpressionStatement(87) into Block(88) at 2", "Insert MethodInvocation(63) into ExpressionStatement(64) at 0", "Insert MethodInvocation(86) into ExpressionStatement(87) at 0", "Insert SimpleName: DrillMetrics(42) into MethodInvocation(63) at 0", "Insert SimpleName: register(43) into MethodInvocation(63) at 1", "Insert StringLiteral: \"drill.allocator.root.used\"(44) into MethodInvocation(63) at 2", "Insert ClassInstanceCreation(62) into MethodInvocation(63) at 3", "Insert SimpleName: DrillMetrics(65) into MethodInvocation(86) at 0", "Insert SimpleName: register(66) into MethodInvocation(86) at 1", "Insert StringLiteral: \"drill.allocator.root.peak\"(67) into MethodInvocation(86) at 2", "Insert ClassInstanceCreation(85) into MethodInvocation(86) at 3", "Insert ParameterizedType: Gauge<Long>(49) into ClassInstanceCreation(62) at 0", "Insert AnonymousClassDeclaration(61) into ClassInstanceCreation(62) at 1", "Insert ParameterizedType: Gauge<Long>(72) into ClassInstanceCreation(85) at 0", "Insert AnonymousClassDeclaration(84) into ClassInstanceCreation(85) at 1", "Insert SimpleType: Gauge(46) into ParameterizedType: Gauge<Long>(49) at 0", "Insert SimpleType: Long(48) into ParameterizedType: Gauge<Long>(49) at 1", "Insert MethodDeclaration(60) into AnonymousClassDeclaration(61) at 0", "Insert SimpleType: Gauge(69) into ParameterizedType: Gauge<Long>(72) at 0", "Insert SimpleType: Long(71) into ParameterizedType: Gauge<Long>(72) at 1", "Insert MethodDeclaration(83) into AnonymousClassDeclaration(84) at 0", "Insert SimpleName: Gauge(45) into SimpleType: Gauge(46) at 0", "Insert SimpleName: Long(47) into SimpleType: Long(48) at 0", "Insert MarkerAnnotation(51) into MethodDeclaration(60) at 0", "Insert Modifier: public(52) into MethodDeclaration(60) at 1", "Insert SimpleType: Long(54) into MethodDeclaration(60) at 2", "Insert SimpleName: getValue(55) into MethodDeclaration(60) at 3", "Move Block(38) into MethodDeclaration(60) at 4", "Insert SimpleName: Gauge(68) into SimpleType: Gauge(69) at 0", "Insert SimpleName: Long(70) into SimpleType: Long(71) at 0", "Insert MarkerAnnotation(74) into MethodDeclaration(83) at 0", "Insert Modifier: public(75) into MethodDeclaration(83) at 1", "Insert SimpleType: Long(77) into MethodDeclaration(83) at 2", "Insert SimpleName: getValue(78) into MethodDeclaration(83) at 3", "Insert Block(82) into MethodDeclaration(83) at 4", "Insert SimpleName: Override(50) into MarkerAnnotation(51) at 0", "Insert SimpleName: Long(53) into SimpleType: Long(54) at 0", "Insert ReturnStatement(58) into Block(59) at 0", "Insert SimpleName: Override(73) into MarkerAnnotation(74) at 0", "Insert SimpleName: Long(76) into SimpleType: Long(77) at 0", "Insert ReturnStatement(81) into Block(82) at 0", "Insert MethodInvocation(57) into ReturnStatement(58) at 0", "Insert MethodInvocation(80) into ReturnStatement(81) at 0", "Insert SimpleName: getAllocatedMemory(56) into MethodInvocation(57) at 0", "Insert SimpleName: getPeakMemoryAllocation(79) into MethodInvocation(80) at 0"]}}], "commit_stats": [{"total_files": 14, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}