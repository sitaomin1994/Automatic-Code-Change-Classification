{"application": "google-turbine", "csha": "ccf23a609c01ce08a79f56353a1750f1067749c6", "files": [{"ClassPathBinder_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from com.google.common.io.ByteStreams to com.google.common.base.Function", "operations": ["UPD QualifiedName: com.google.common.io.ByteStreams from com.google.common.io.ByteStreams to com.google.common.base.Function"]}, {"root": "UPDATE from java.io.IOError to com.google.turbine.zip.Zip", "operations": ["UPD QualifiedName: java.io.IOError from java.io.IOError to com.google.turbine.zip.Zip"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS QualifiedName: Zip.Entry to SimpleType: Zip.Entry at 0", "INS EnhancedForStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: ze to SingleVariableDeclaration at 1", "INS SimpleName: path to ClassInstanceCreation at 1", "INS ClassInstanceCreation to EnhancedForStatement at 1", "INS SimpleType: Zip.Entry to SingleVariableDeclaration at 0", "INS Block to EnhancedForStatement at 2"]}, {"root": "UPDATE from JarEntry to Zip.Entry", "operations": ["UPD SimpleType: JarEntry from JarEntry to Zip.Entry"]}, {"root": "UPDATE from je to ze", "operations": ["UPD SimpleName: je from je to ze", "UPD SimpleName: je from je to ze", "UPD SimpleName: je from je to ze", "UPD SimpleName: jf from jf to ze", "UPD SimpleName: je from je to ze"]}, {"root": "INS QualifiedName: Zip.Entry to SimpleType: JarEntry at 0", "operations": ["INS QualifiedName: Zip.Entry to SimpleType: JarEntry at 0"]}, {"root": "UPDATE from JarFile to Zip.ZipIterable", "operations": ["UPD SimpleType: JarFile from JarFile to Zip.ZipIterable"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: JarFile to ClassInstanceCreation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 1", "MOV IfStatement to Block at 2", "MOV IfStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "INS QualifiedName: Zip.ZipIterable to SimpleType: JarFile at 0", "operations": ["INS QualifiedName: Zip.ZipIterable to SimpleType: JarFile at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleType: ClassSymbol to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: ClassSymbol to ParameterizedType: Function<ClassSymbol,BytecodeBoundClass> at 1", "INS SimpleName: Function to SimpleType: Function at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: BytecodeBoundClass to MethodDeclaration at 2", "INS ParameterizedType: Function<ClassSymbol,BytecodeBoundClass> to ClassInstanceCreation at 0", "INS SimpleName: BytecodeBoundClass to SimpleType: BytecodeBoundClass at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: BytecodeBoundClass to SimpleType: BytecodeBoundClass at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: BytecodeBoundClass to ParameterizedType: Function<ClassSymbol,BytecodeBoundClass> at 2", "INS SimpleType: Function to ParameterizedType: Function<ClassSymbol,BytecodeBoundClass> at 0", "INS SimpleName: apply to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sym to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from getName to name", "operations": ["UPD SimpleName: getName from getName to name"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: transitive to MethodInvocation at 0", "MOV SimpleName: containsKey to MethodInvocation at 1", "MOV SimpleName: sym to MethodInvocation at 2"]}, {"root": "UPDATE from containsKey to computeIfAbsent", "operations": ["UPD SimpleName: containsKey from containsKey to computeIfAbsent"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: jf to MethodInvocation at 0", "MOV SimpleName: getInputStream to MethodInvocation at 1"]}, {"root": "UPDATE from getInputStream to data", "operations": ["UPD SimpleName: getInputStream from getInputStream to data"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: sym to ClassInstanceCreation at 1", "MOV SimpleType: BytecodeBoundClass to ClassInstanceCreation at 0", "MOV SimpleName: benv to ClassInstanceCreation at 3", "MOV MethodInvocation to ClassInstanceCreation at 2", "MOV MethodInvocation to ClassInstanceCreation at 4"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Enumeration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.jar.JarEntry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.jar.JarFile"]}, {"root": "DEL SimpleName: JarFile", "operations": ["DEL SimpleName: JarFile"]}, {"root": "DEL SimpleName: jf", "operations": ["DEL SimpleName: jf"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL Block", "DEL SimpleName: transitive", "DEL SimpleName: put", "DEL SimpleName: sym", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL PrefixExpression: !", "DEL ExpressionStatement", "DEL IfStatement"]}, {"root": "DEL SimpleName: jf", "operations": ["DEL SimpleName: jf"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL Modifier: final", "DEL SimpleType: JarFile", "DEL SimpleName: jf", "DEL VariableDeclarationStatement", "DEL SimpleName: path", "DEL VariableDeclarationFragment", "DEL SimpleName: JarFile", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: toFile"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: entries", "DEL SimpleName: jf", "DEL SimpleType: JarEntry", "DEL SimpleName: JarEntry", "DEL VariableDeclarationFragment", "DEL SimpleName: Enumeration", "DEL SimpleName: entries", "DEL MethodInvocation", "DEL ParameterizedType: Enumeration<JarEntry>", "DEL VariableDeclarationStatement", "DEL SimpleType: Enumeration"]}, {"root": "DEL WhileStatement", "operations": ["DEL Block", "DEL SimpleName: JarEntry", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: je", "DEL SimpleName: nextElement", "DEL SimpleName: hasMoreElements", "DEL SimpleType: JarEntry", "DEL SimpleName: entries", "DEL WhileStatement", "DEL MethodInvocation", "DEL SimpleName: entries"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: jf", "DEL SimpleName: JarFile", "DEL SimpleType: JarFile", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: JarEntry", "operations": ["DEL SimpleName: JarEntry"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: je", "DEL MethodInvocation", "DEL SimpleName: toByteArray", "DEL MethodInvocation", "DEL SimpleName: ByteStreams"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: IOError", "DEL TryStatement", "DEL Block", "DEL SimpleName: e", "DEL SimpleType: IOException", "DEL SimpleName: e", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL Block", "DEL Block", "DEL SimpleName: IOException", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: IOError"]}]}}, {"ClassPathBinder_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(522) at 1", "Update QualifiedName: com.google.common.io.ByteStreams(8) to com.google.common.base.Function", "Update QualifiedName: java.io.IOError(22) to com.google.turbine.zip.Zip", "Insert EnhancedForStatement(478) into Block(479) at 0", "Update SimpleType: JarEntry(515) to Zip.Entry", "Update SimpleName: je(516) to ze", "Insert SingleVariableDeclaration(343) into EnhancedForStatement(478) at 0", "Insert ClassInstanceCreation(347) into EnhancedForStatement(478) at 1", "Insert Block(477) into EnhancedForStatement(478) at 2", "Insert QualifiedName: Zip.Entry(490) into SimpleType: Zip.Entry(491) at 0", "Insert SimpleType: Zip.Entry(341) into SingleVariableDeclaration(343) at 0", "Insert SimpleName: ze(342) into SingleVariableDeclaration(343) at 1", "Update SimpleType: JarFile(351) to Zip.ZipIterable", "Move SimpleType: JarFile(351) into ClassInstanceCreation(347) at 0", "Insert SimpleName: path(346) into ClassInstanceCreation(347) at 1", "Move VariableDeclarationStatement(388) into Block(477) at 0", "Move IfStatement(396) into Block(477) at 1", "Move IfStatement(448) into Block(477) at 2", "Move VariableDeclarationStatement(467) into Block(477) at 3", "Move IfStatement(496) into Block(477) at 4", "Insert QualifiedName: Zip.Entry(340) into SimpleType: Zip.Entry(341) at 0", "Insert QualifiedName: Zip.ZipIterable(344) into SimpleType: Zip.ZipIterable(345) at 0", "Insert ExpressionStatement(426) into Block(428) at 1", "Update SimpleName: je(384) to ze", "Update SimpleName: getName(385) to name", "Insert MethodInvocation(425) into ExpressionStatement(426) at 0", "Insert Block(513) into MethodDeclaration(514) at 4", "Move SimpleName: transitive(422) into MethodInvocation(425) at 0", "Update SimpleName: containsKey(423) to computeIfAbsent", "Move SimpleName: containsKey(423) into MethodInvocation(425) at 1", "Move SimpleName: sym(424) into MethodInvocation(425) at 2", "Insert ClassInstanceCreation(424) into MethodInvocation(425) at 3", "Move ReturnStatement(540) into Block(513) at 0", "Insert ParameterizedType: Function<ClassSymbol,BytecodeBoundClass>(398) into ClassInstanceCreation(424) at 0", "Insert AnonymousClassDeclaration(423) into ClassInstanceCreation(424) at 1", "Insert MethodInvocation(511) into ReturnStatement(512) at 0", "Insert SimpleType: Function(393) into ParameterizedType: Function<ClassSymbol,BytecodeBoundClass>(398) at 0", "Insert SimpleType: ClassSymbol(395) into ParameterizedType: Function<ClassSymbol,BytecodeBoundClass>(398) at 1", "Insert SimpleType: BytecodeBoundClass(397) into ParameterizedType: Function<ClassSymbol,BytecodeBoundClass>(398) at 2", "Insert MethodDeclaration(422) into AnonymousClassDeclaration(423) at 0", "Update SimpleName: je(481) to ze", "Update SimpleName: jf(535) to ze", "Move SimpleName: jf(535) into MethodInvocation(511) at 0", "Update SimpleName: getInputStream(536) to data", "Move SimpleName: getInputStream(536) into MethodInvocation(511) at 1", "Insert SimpleName: Function(392) into SimpleType: Function(393) at 0", "Insert SimpleName: ClassSymbol(394) into SimpleType: ClassSymbol(395) at 0", "Insert SimpleName: BytecodeBoundClass(396) into SimpleType: BytecodeBoundClass(397) at 0", "Insert MarkerAnnotation(400) into MethodDeclaration(422) at 0", "Insert Modifier: public(401) into MethodDeclaration(422) at 1", "Insert SimpleType: BytecodeBoundClass(403) into MethodDeclaration(422) at 2", "Insert SimpleName: apply(404) into MethodDeclaration(422) at 3", "Insert SingleVariableDeclaration(408) into MethodDeclaration(422) at 4", "Insert Block(421) into MethodDeclaration(422) at 5", "Insert SimpleName: Override(399) into MarkerAnnotation(400) at 0", "Insert SimpleName: BytecodeBoundClass(402) into SimpleType: BytecodeBoundClass(403) at 0", "Insert SimpleType: ClassSymbol(406) into SingleVariableDeclaration(408) at 0", "Insert SimpleName: sym(407) into SingleVariableDeclaration(408) at 1", "Insert ReturnStatement(420) into Block(421) at 0", "Insert SimpleName: ClassSymbol(405) into SimpleType: ClassSymbol(406) at 0", "Insert ClassInstanceCreation(419) into ReturnStatement(420) at 0", "Move SimpleType: BytecodeBoundClass(431) into ClassInstanceCreation(419) at 0", "Move SimpleName: sym(432) into ClassInstanceCreation(419) at 1", "Move MethodInvocation(436) into ClassInstanceCreation(419) at 2", "Move SimpleName: benv(437) into ClassInstanceCreation(419) at 3", "Move MethodInvocation(440) into ClassInstanceCreation(419) at 4", "Update SimpleName: je(435) to ze", "Delete QualifiedName: java.util.Enumeration(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.util.jar.JarEntry(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: java.util.jar.JarFile(40)", "Delete ImportDeclaration(41)", "Delete SimpleName: JarFile(350)", "Delete SimpleName: jf(434)", "Delete MethodInvocation(425)", "Delete PrefixExpression: !(426)", "Delete SimpleName: transitive(427)", "Delete SimpleName: put(428)", "Delete SimpleName: sym(429)", "Delete ClassInstanceCreation(441)", "Delete MethodInvocation(442)", "Delete ExpressionStatement(443)", "Delete Block(444)", "Delete IfStatement(445)", "Delete SimpleName: jf(480)", "Delete Modifier: final(346)", "Delete SimpleName: JarFile(347)", "Delete SimpleType: JarFile(348)", "Delete SimpleName: jf(349)", "Delete SimpleName: path(352)", "Delete SimpleName: toFile(353)", "Delete MethodInvocation(354)", "Delete ClassInstanceCreation(355)", "Delete VariableDeclarationFragment(356)", "Delete VariableDeclarationStatement(357)", "Delete SimpleName: Enumeration(358)", "Delete SimpleType: Enumeration(359)", "Delete SimpleName: JarEntry(360)", "Delete SimpleType: JarEntry(361)", "Delete ParameterizedType: Enumeration<JarEntry>(362)", "Delete SimpleName: entries(363)", "Delete SimpleName: jf(364)", "Delete SimpleName: entries(365)", "Delete MethodInvocation(366)", "Delete VariableDeclarationFragment(367)", "Delete VariableDeclarationStatement(368)", "Delete SimpleName: entries(369)", "Delete SimpleName: hasMoreElements(370)", "Delete MethodInvocation(371)", "Delete Modifier: final(372)", "Delete SimpleName: JarEntry(373)", "Delete SimpleType: JarEntry(374)", "Delete SimpleName: je(375)", "Delete SimpleName: entries(376)", "Delete SimpleName: nextElement(377)", "Delete MethodInvocation(378)", "Delete VariableDeclarationFragment(379)", "Delete VariableDeclarationStatement(380)", "Delete Block(497)", "Delete WhileStatement(498)", "Delete SimpleName: JarFile(510)", "Delete SimpleType: JarFile(511)", "Delete SimpleName: jf(512)", "Delete SingleVariableDeclaration(513)", "Delete SimpleName: JarEntry(514)", "Delete SimpleName: ByteStreams(533)", "Delete SimpleName: toByteArray(534)", "Delete SimpleName: je(537)", "Delete MethodInvocation(538)", "Delete MethodInvocation(539)", "Delete Block(541)", "Delete SimpleName: IOException(542)", "Delete SimpleType: IOException(543)", "Delete SimpleName: e(544)", "Delete SingleVariableDeclaration(545)", "Delete SimpleName: IOError(546)", "Delete SimpleType: IOError(547)", "Delete SimpleName: e(548)", "Delete ClassInstanceCreation(549)", "Delete ThrowStatement(550)", "Delete Block(551)", "Delete CatchClause(552)", "Delete TryStatement(553)", "Delete Block(554)"]}}, {"Main_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 18"]}, {"root": "UPDATE from com.google.common.io.ByteStreams to com.google.turbine.zip.Zip", "operations": ["UPD QualifiedName: com.google.common.io.ByteStreams from com.google.common.io.ByteStreams to com.google.turbine.zip.Zip"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS QualifiedName: Zip.ZipIterable to SimpleType: Zip.ZipIterable at 0", "INS SimpleType: Zip.Entry to SingleVariableDeclaration at 0", "INS SimpleName: ze to SingleVariableDeclaration at 1", "INS SimpleType: Zip.ZipIterable to ClassInstanceCreation at 0", "INS QualifiedName: Zip.Entry to SimpleType: Zip.Entry at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS EnhancedForStatement to Block at 0", "INS ClassInstanceCreation to EnhancedForStatement at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: Paths to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "UPDATE from jf to get", "operations": ["UPD SimpleName: jf from jf to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: entries to MethodInvocation at 2", "MOV SimpleName: jf to MethodInvocation at 1"]}, {"root": "UPDATE from entries to sourceJar", "operations": ["UPD SimpleName: entries from entries to sourceJar"]}, {"root": "UPDATE from je to ze", "operations": ["UPD SimpleName: je from je to ze", "UPD SimpleName: je from je to ze", "UPD SimpleName: jf from jf to ze"]}, {"root": "UPDATE from getName to name", "operations": ["UPD SimpleName: getName from getName to name", "UPD SimpleName: getName from getName to name"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: String to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: jf to MethodInvocation at 0", "MOV SimpleName: getInputStream to MethodInvocation at 1"]}, {"root": "UPDATE from getInputStream to data", "operations": ["UPD SimpleName: getInputStream from getInputStream to data"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Enumeration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.jar.JarFile", "DEL ImportDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: ByteStreams", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: je", "DEL SimpleName: toByteArray"]}, {"root": "DEL TryStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: JarFile", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: entries", "DEL SimpleName: hasMoreElements", "DEL MethodInvocation", "DEL SimpleName: sourceJar", "DEL SimpleName: Enumeration", "DEL WhileStatement", "DEL SimpleName: JarEntry", "DEL TryStatement", "DEL SimpleType: JarFile", "DEL Block", "DEL SimpleName: entries", "DEL Block", "DEL SimpleName: entries", "DEL SimpleName: nextElement", "DEL SimpleName: JarFile", "DEL SimpleType: JarFile", "DEL SimpleType: Enumeration", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleType: JarEntry", "DEL SimpleType: JarEntry", "DEL SimpleName: JarEntry", "DEL SimpleName: je", "DEL ParameterizedType: Enumeration<JarEntry>", "DEL VariableDeclarationExpression", "DEL SimpleName: jf"]}]}}, {"Main_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(643) at 18", "Update QualifiedName: com.google.common.io.ByteStreams(8) to com.google.turbine.zip.Zip", "Insert EnhancedForStatement(399) into Block(400) at 0", "Insert SingleVariableDeclaration(356) into EnhancedForStatement(399) at 0", "Insert ClassInstanceCreation(363) into EnhancedForStatement(399) at 1", "Insert Block(398) into EnhancedForStatement(399) at 2", "Insert SimpleType: Zip.Entry(354) into SingleVariableDeclaration(356) at 0", "Insert SimpleName: ze(355) into SingleVariableDeclaration(356) at 1", "Insert SimpleType: Zip.ZipIterable(358) into ClassInstanceCreation(363) at 0", "Insert MethodInvocation(362) into ClassInstanceCreation(363) at 1", "Move IfStatement(425) into Block(398) at 0", "Insert QualifiedName: Zip.Entry(353) into SimpleType: Zip.Entry(354) at 0", "Insert QualifiedName: Zip.ZipIterable(357) into SimpleType: Zip.ZipIterable(358) at 0", "Insert SimpleName: Paths(359) into MethodInvocation(362) at 0", "Update SimpleName: jf(372) to get", "Move SimpleName: jf(372) into MethodInvocation(362) at 1", "Update SimpleName: entries(373) to sourceJar", "Move SimpleName: entries(373) into MethodInvocation(362) at 2", "Update SimpleName: je(388) to ze", "Update SimpleName: getName(389) to name", "Move SimpleType: String(398) into VariableDeclarationStatement(381) at 0", "Move SimpleType: String(395) into ClassInstanceCreation(379) at 0", "Insert MethodInvocation(377) into ClassInstanceCreation(379) at 1", "Update SimpleName: jf(401) to ze", "Move SimpleName: jf(401) into MethodInvocation(377) at 0", "Update SimpleName: getInputStream(402) to data", "Move SimpleName: getInputStream(402) into MethodInvocation(377) at 1", "Update SimpleName: je(416) to ze", "Update SimpleName: getName(417) to name", "Delete QualifiedName: java.util.Enumeration(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: java.util.jar.JarFile(58)", "Delete ImportDeclaration(59)", "Delete SimpleName: ByteStreams(399)", "Delete SimpleName: toByteArray(400)", "Delete SimpleName: je(403)", "Delete MethodInvocation(404)", "Delete MethodInvocation(405)", "Delete SimpleName: JarFile(357)", "Delete SimpleType: JarFile(358)", "Delete SimpleName: jf(359)", "Delete SimpleName: JarFile(360)", "Delete SimpleType: JarFile(361)", "Delete SimpleName: sourceJar(362)", "Delete ClassInstanceCreation(363)", "Delete VariableDeclarationFragment(364)", "Delete VariableDeclarationExpression(365)", "Delete SimpleName: Enumeration(366)", "Delete SimpleType: Enumeration(367)", "Delete SimpleName: JarEntry(368)", "Delete SimpleType: JarEntry(369)", "Delete ParameterizedType: Enumeration<JarEntry>(370)", "Delete SimpleName: entries(371)", "Delete MethodInvocation(374)", "Delete VariableDeclarationFragment(375)", "Delete VariableDeclarationStatement(376)", "Delete SimpleName: entries(377)", "Delete SimpleName: hasMoreElements(378)", "Delete MethodInvocation(379)", "Delete SimpleName: JarEntry(380)", "Delete SimpleType: JarEntry(381)", "Delete SimpleName: je(382)", "Delete SimpleName: entries(383)", "Delete SimpleName: nextElement(384)", "Delete MethodInvocation(385)", "Delete VariableDeclarationFragment(386)", "Delete VariableDeclarationStatement(387)", "Delete Block(426)", "Delete WhileStatement(427)", "Delete Block(428)", "Delete TryStatement(429)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}