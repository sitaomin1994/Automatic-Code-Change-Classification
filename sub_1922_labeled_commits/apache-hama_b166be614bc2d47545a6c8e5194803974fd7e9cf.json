{"application": "apache-hama", "csha": "b166be614bc2d47545a6c8e5194803974fd7e9cf", "files": [{"Constants_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV FieldDeclaration to TypeDeclaration: interface at 8"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Text"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Dimension", "DEL TextElement: An empty instance.", "DEL TagElement", "DEL Dimension", "DEL Javadoc", "DEL ArrayType: byte[]", "DEL Modifier: public", "DEL ArrayType: byte[]", "DEL PrimitiveType: byte", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: EMPTY_BYTE_ARRAY", "DEL PrimitiveType: byte", "DEL ArrayCreation", "DEL NumberLiteral: 0", "DEL FieldDeclaration", "DEL Modifier: static"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: public", "DEL StringLiteral: \"metadata\"", "DEL VariableDeclarationFragment", "DEL SimpleName: METADATA", "DEL Javadoc", "DEL TagElement", "DEL TextElement: Meta-columnFamily to store the matrix-info ", "DEL Modifier: final", "DEL SimpleName: String", "DEL Modifier: static", "DEL FieldDeclaration", "DEL SimpleType: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL Javadoc", "DEL FieldDeclaration", "DEL StringLiteral: \"cIndex\"", "DEL Modifier: static", "DEL SimpleName: String", "DEL TextElement: Column index & attributes ", "DEL TagElement", "DEL Modifier: public", "DEL SimpleName: CINDEX", "DEL SimpleType: String", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL StringLiteral: \"attribute\"", "DEL Modifier: public", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL Modifier: static", "DEL TagElement", "DEL ArrayType: byte[]", "DEL SimpleName: Bytes", "DEL TextElement: The attribute column family ", "DEL SimpleName: ATTRIBUTE", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: METADATA_TYPE", "DEL SimpleName: String", "DEL Modifier: public", "DEL SimpleType: String", "DEL Javadoc", "DEL TextElement: The type of the matrix ", "DEL TagElement", "DEL Modifier: final", "DEL StringLiteral: \"type\"", "DEL Modifier: static", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: 1) if the matrix table is aliased, we should not delete the table.", "DEL SimpleType: String", "DEL TextElement: the reference of the table will be decremented.", "DEL SimpleName: METADATA_REFERENCE", "DEL VariableDeclarationFragment", "DEL TextElement: i)  if the reference of the table is not zero:", "DEL TextElement: we should not delete the table, because some other matrix object", "DEL TextElement: connect to the table.", "DEL TagElement", "DEL TextElement: the reference of the table will be incremented.", "DEL TextElement: we need to know if the matrix table is aliased.", "DEL TextElement: 2) if the matrix table is not aliased, we need to delete the table.", "DEL Javadoc", "DEL TextElement: (2) when we close a Matrix object, we disconnect the hbase table, ", "DEL TextElement: ii) if the reference of the table is zero:", "DEL FieldDeclaration", "DEL Modifier: static", "DEL Modifier: final", "DEL StringLiteral: \"reference\"", "DEL TextElement: (1) when we create a Matrix object, we set up a connection to hbase table,", "DEL Modifier: public", "DEL SimpleName: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL Modifier: static", "DEL SimpleName: ALIASEFAMILY", "DEL Modifier: public", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL TextElement: The aliase names column family ", "DEL StringLiteral: \"aliase\"", "DEL SimpleType: String", "DEL Javadoc", "DEL FieldDeclaration", "DEL SimpleName: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL StringLiteral: \"column\"", "DEL TextElement: Default columnFamily name ", "DEL TagElement", "DEL Javadoc", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL Dimension", "DEL Modifier: static", "DEL SimpleName: COLUMNFAMILY", "DEL MethodInvocation", "DEL Modifier: public", "DEL PrimitiveType: byte", "DEL SimpleName: Bytes", "DEL FieldDeclaration", "DEL ArrayType: byte[]"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL SimpleName: RANDOM", "DEL StringLiteral: \"rand\"", "DEL TextElement: Temporary random matrices name prefix ", "DEL Javadoc", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Modifier: static", "DEL TagElement", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleType: String", "DEL StringLiteral: \"hama.admin.table\"", "DEL Javadoc", "DEL TextElement: Admin table name ", "DEL SimpleName: ADMINTABLE"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: PATHCOLUMN", "DEL Modifier: final", "DEL SimpleType: String", "DEL TagElement", "DEL StringLiteral: \"path\"", "DEL Modifier: static", "DEL SimpleName: String", "DEL TextElement: Matrix path columnFamily ", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL Modifier: public"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL TagElement", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: static", "DEL TextElement: Temporary Aliase name prefix in Hama Shell ", "DEL Modifier: final", "DEL Modifier: public", "DEL SimpleName: RANDOMALIASE", "DEL StringLiteral: \"_\"", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: int", "DEL Javadoc", "DEL Modifier: static", "DEL NumberLiteral: 5", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL TextElement: default matrix's path length (tablename length) ", "DEL FieldDeclaration", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleName: DEFAULT_PATH_LENGTH"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TagElement", "DEL Javadoc", "DEL TextElement: default matrix's max path length (tablename length) ", "DEL Modifier: public", "DEL FieldDeclaration", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL Modifier: static", "DEL SimpleName: DEFAULT_MAXPATHLEN", "DEL NumberLiteral: 10000"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 10000000", "DEL Modifier: final", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL Javadoc", "DEL Modifier: public", "DEL TextElement: default try times to generate a suitable tablename ", "DEL SimpleName: DEFAULT_TRY_TIMES", "DEL TagElement"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: BLOCK", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleType: String", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL StringLiteral: \"block\"", "DEL TextElement: block data column ", "DEL Javadoc", "DEL Modifier: static"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: Text", "DEL Modifier: public", "DEL StringLiteral: \"row\"", "DEL SimpleName: Text", "DEL Modifier: final", "DEL FieldDeclaration", "DEL SimpleType: Text", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL SimpleName: ROWCOUNT", "DEL ClassInstanceCreation", "DEL SimpleName: Text"]}]}}, {"Constants_diff": {"operations": ["Move FieldDeclaration(457) into TypeDeclaration: interface(232) at 8", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.io.Text(20)", "Delete ImportDeclaration(21)", "Delete TextElement: An empty instance.(227)", "Delete TagElement(228)", "Delete Javadoc(229)", "Delete Modifier: public(230)", "Delete Modifier: static(231)", "Delete Modifier: final(232)", "Delete PrimitiveType: byte(233)", "Delete Dimension(234)", "Delete ArrayType: byte[](235)", "Delete SimpleName: EMPTY_BYTE_ARRAY(236)", "Delete PrimitiveType: byte(237)", "Delete Dimension(238)", "Delete ArrayType: byte[](239)", "Delete NumberLiteral: 0(240)", "Delete ArrayCreation(241)", "Delete VariableDeclarationFragment(242)", "Delete FieldDeclaration(243)", "Delete TextElement: Meta-columnFamily to store the matrix-info (244)", "Delete TagElement(245)", "Delete Javadoc(246)", "Delete Modifier: public(247)", "Delete Modifier: final(248)", "Delete Modifier: static(249)", "Delete SimpleName: String(250)", "Delete SimpleType: String(251)", "Delete SimpleName: METADATA(252)", "Delete StringLiteral: \"metadata\"(253)", "Delete VariableDeclarationFragment(254)", "Delete FieldDeclaration(255)", "Delete TextElement: Column index & attributes (256)", "Delete TagElement(257)", "Delete Javadoc(258)", "Delete Modifier: public(259)", "Delete Modifier: final(260)", "Delete Modifier: static(261)", "Delete SimpleName: String(262)", "Delete SimpleType: String(263)", "Delete SimpleName: CINDEX(264)", "Delete StringLiteral: \"cIndex\"(265)", "Delete VariableDeclarationFragment(266)", "Delete FieldDeclaration(267)", "Delete TextElement: The attribute column family (268)", "Delete TagElement(269)", "Delete Javadoc(270)", "Delete Modifier: public(271)", "Delete Modifier: static(272)", "Delete PrimitiveType: byte(273)", "Delete Dimension(274)", "Delete ArrayType: byte[](275)", "Delete SimpleName: ATTRIBUTE(276)", "Delete SimpleName: Bytes(277)", "Delete SimpleName: toBytes(278)", "Delete StringLiteral: \"attribute\"(279)", "Delete MethodInvocation(280)", "Delete VariableDeclarationFragment(281)", "Delete FieldDeclaration(282)", "Delete TextElement: The type of the matrix (283)", "Delete TagElement(284)", "Delete Javadoc(285)", "Delete Modifier: public(286)", "Delete Modifier: final(287)", "Delete Modifier: static(288)", "Delete SimpleName: String(289)", "Delete SimpleType: String(290)", "Delete SimpleName: METADATA_TYPE(291)", "Delete StringLiteral: \"type\"(292)", "Delete VariableDeclarationFragment(293)", "Delete FieldDeclaration(294)", "Delete TextElement: (1) when we create a Matrix object, we set up a connection to hbase table,(295)", "Delete TextElement: the reference of the table will be incremented.(296)", "Delete TextElement: (2) when we close a Matrix object, we disconnect the hbase table, (297)", "Delete TextElement: the reference of the table will be decremented.(298)", "Delete TextElement: i)  if the reference of the table is not zero:(299)", "Delete TextElement: we should not delete the table, because some other matrix object(300)", "Delete TextElement: connect to the table.(301)", "Delete TextElement: ii) if the reference of the table is zero:(302)", "Delete TextElement: we need to know if the matrix table is aliased.(303)", "Delete TextElement: 1) if the matrix table is aliased, we should not delete the table.(304)", "Delete TextElement: 2) if the matrix table is not aliased, we need to delete the table.(305)", "Delete TagElement(306)", "Delete Javadoc(307)", "Delete Modifier: public(308)", "Delete Modifier: final(309)", "Delete Modifier: static(310)", "Delete SimpleName: String(311)", "Delete SimpleType: String(312)", "Delete SimpleName: METADATA_REFERENCE(313)", "Delete StringLiteral: \"reference\"(314)", "Delete VariableDeclarationFragment(315)", "Delete FieldDeclaration(316)", "Delete TextElement: The aliase names column family (317)", "Delete TagElement(318)", "Delete Javadoc(319)", "Delete Modifier: public(320)", "Delete Modifier: final(321)", "Delete Modifier: static(322)", "Delete SimpleName: String(323)", "Delete SimpleType: String(324)", "Delete SimpleName: ALIASEFAMILY(325)", "Delete StringLiteral: \"aliase\"(326)", "Delete VariableDeclarationFragment(327)", "Delete FieldDeclaration(328)", "Delete TextElement: Default columnFamily name (329)", "Delete TagElement(330)", "Delete Javadoc(331)", "Delete Modifier: public(332)", "Delete Modifier: static(333)", "Delete PrimitiveType: byte(334)", "Delete Dimension(335)", "Delete ArrayType: byte[](336)", "Delete SimpleName: COLUMNFAMILY(337)", "Delete SimpleName: Bytes(338)", "Delete SimpleName: toBytes(339)", "Delete StringLiteral: \"column\"(340)", "Delete MethodInvocation(341)", "Delete VariableDeclarationFragment(342)", "Delete FieldDeclaration(343)", "Delete TextElement: Temporary random matrices name prefix (344)", "Delete TagElement(345)", "Delete Javadoc(346)", "Delete Modifier: public(347)", "Delete Modifier: final(348)", "Delete Modifier: static(349)", "Delete SimpleName: String(350)", "Delete SimpleType: String(351)", "Delete SimpleName: RANDOM(352)", "Delete StringLiteral: \"rand\"(353)", "Delete VariableDeclarationFragment(354)", "Delete FieldDeclaration(355)", "Delete TextElement: Admin table name (356)", "Delete TagElement(357)", "Delete Javadoc(358)", "Delete Modifier: public(359)", "Delete Modifier: final(360)", "Delete Modifier: static(361)", "Delete SimpleName: String(362)", "Delete SimpleType: String(363)", "Delete SimpleName: ADMINTABLE(364)", "Delete StringLiteral: \"hama.admin.table\"(365)", "Delete VariableDeclarationFragment(366)", "Delete FieldDeclaration(367)", "Delete TextElement: Matrix path columnFamily (368)", "Delete TagElement(369)", "Delete Javadoc(370)", "Delete Modifier: public(371)", "Delete Modifier: static(372)", "Delete Modifier: final(373)", "Delete SimpleName: String(374)", "Delete SimpleType: String(375)", "Delete SimpleName: PATHCOLUMN(376)", "Delete StringLiteral: \"path\"(377)", "Delete VariableDeclarationFragment(378)", "Delete FieldDeclaration(379)", "Delete TextElement: Temporary Aliase name prefix in Hama Shell (380)", "Delete TagElement(381)", "Delete Javadoc(382)", "Delete Modifier: public(383)", "Delete Modifier: static(384)", "Delete Modifier: final(385)", "Delete SimpleName: String(386)", "Delete SimpleType: String(387)", "Delete SimpleName: RANDOMALIASE(388)", "Delete StringLiteral: \"_\"(389)", "Delete VariableDeclarationFragment(390)", "Delete FieldDeclaration(391)", "Delete TextElement: default matrix's path length (tablename length) (392)", "Delete TagElement(393)", "Delete Javadoc(394)", "Delete Modifier: public(395)", "Delete Modifier: static(396)", "Delete Modifier: final(397)", "Delete PrimitiveType: int(398)", "Delete SimpleName: DEFAULT_PATH_LENGTH(399)", "Delete NumberLiteral: 5(400)", "Delete VariableDeclarationFragment(401)", "Delete FieldDeclaration(402)", "Delete TextElement: default matrix's max path length (tablename length) (403)", "Delete TagElement(404)", "Delete Javadoc(405)", "Delete Modifier: public(406)", "Delete Modifier: static(407)", "Delete Modifier: final(408)", "Delete PrimitiveType: int(409)", "Delete SimpleName: DEFAULT_MAXPATHLEN(410)", "Delete NumberLiteral: 10000(411)", "Delete VariableDeclarationFragment(412)", "Delete FieldDeclaration(413)", "Delete TextElement: default try times to generate a suitable tablename (414)", "Delete TagElement(415)", "Delete Javadoc(416)", "Delete Modifier: public(417)", "Delete Modifier: static(418)", "Delete Modifier: final(419)", "Delete PrimitiveType: int(420)", "Delete SimpleName: DEFAULT_TRY_TIMES(421)", "Delete NumberLiteral: 10000000(422)", "Delete VariableDeclarationFragment(423)", "Delete FieldDeclaration(424)", "Delete TextElement: block data column (425)", "Delete TagElement(426)", "Delete Javadoc(427)", "Delete Modifier: public(428)", "Delete Modifier: static(429)", "Delete Modifier: final(430)", "Delete SimpleName: String(431)", "Delete SimpleType: String(432)", "Delete SimpleName: BLOCK(433)", "Delete StringLiteral: \"block\"(434)", "Delete VariableDeclarationFragment(435)", "Delete FieldDeclaration(436)", "Delete Modifier: public(437)", "Delete Modifier: static(438)", "Delete Modifier: final(439)", "Delete SimpleName: Text(440)", "Delete SimpleType: Text(441)", "Delete SimpleName: ROWCOUNT(442)", "Delete SimpleName: Text(443)", "Delete SimpleType: Text(444)", "Delete StringLiteral: \"row\"(445)", "Delete ClassInstanceCreation(446)", "Delete VariableDeclarationFragment(447)", "Delete FieldDeclaration(448)"]}}, {"HamaAdmin_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TagElement", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.Matrix", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL Modifier: public", "DEL SimpleName: String", "DEL TagElement: @param", "DEL TypeDeclaration: interface", "DEL SingleVariableDeclaration", "DEL TextElement: Deletes matrix", "DEL SimpleType: IOException", "DEL SimpleName: aliaseName", "DEL SimpleName: IOException", "DEL SimpleName: matrixName", "DEL SimpleName: String", "DEL TextElement:  the matrix", "DEL Javadoc", "DEL SimpleType: String", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: matrixName", "DEL SingleVariableDeclaration", "DEL SimpleName: matrix", "DEL PrimitiveType: boolean", "DEL SimpleName: aliaseName", "DEL Javadoc", "DEL SimpleName: name", "DEL SimpleName: matrixName", "DEL SimpleName: getMatrix", "DEL TagElement: @param", "DEL TagElement: @throws", "DEL MethodDeclaration", "DEL TextElement: Saves matrix as name 'AliaseName'", "DEL SimpleType: String", "DEL SimpleName: IOException", "DEL SimpleName: save", "DEL SimpleName: getPath", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleName: Matrix", "DEL SimpleType: String", "DEL SimpleType: String", "DEL TagElement: @return", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: matrixName", "DEL TextElement: A administration interface to manage the matrix's namespace, and table", "DEL SimpleName: HamaAdmin", "DEL TagElement", "DEL TextElement: Load matrix", "DEL SimpleType: String", "DEL SimpleName: Matrix", "DEL TagElement", "DEL SimpleName: matrixName", "DEL TextElement:  return a physical path of matrix", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL TagElement: @throws", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL TagElement: @return", "DEL Modifier: public", "DEL SimpleName: String", "DEL TagElement", "DEL SimpleName: String", "DEL Modifier: public", "DEL Modifier: public", "DEL Javadoc", "DEL SimpleType: String", "DEL SimpleName: matrixExists", "DEL TagElement: @return", "DEL TextElement:  true if it saved", "DEL PrimitiveType: boolean", "DEL TagElement", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: matrix", "DEL TextElement:  ", "DEL Modifier: public", "DEL SimpleType: Matrix", "DEL SimpleName: delete", "DEL TextElement:  true if matrix is exist", "DEL SimpleName: matrixName", "DEL SimpleType: Matrix", "DEL TextElement: allocation & garbage collection.", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: name", "DEL TagElement: @param", "DEL SimpleName: String"]}]}}, {"HamaAdmin_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(20)", "Delete ImportDeclaration(21)", "Delete TextElement: A administration interface to manage the matrix's namespace, and table(22)", "Delete TextElement: allocation & garbage collection.(23)", "Delete TagElement(24)", "Delete Javadoc(25)", "Delete Modifier: public(26)", "Delete SimpleName: HamaAdmin(27)", "Delete TextElement: Saves matrix as name 'AliaseName'(28)", "Delete TagElement(29)", "Delete SimpleName: matrix(30)", "Delete TagElement: @param(31)", "Delete SimpleName: aliaseName(32)", "Delete TagElement: @param(33)", "Delete TextElement:  true if it saved(34)", "Delete TagElement: @return(35)", "Delete Javadoc(36)", "Delete Modifier: public(37)", "Delete PrimitiveType: boolean(38)", "Delete SimpleName: save(39)", "Delete SimpleName: Matrix(40)", "Delete SimpleType: Matrix(41)", "Delete SimpleName: matrix(42)", "Delete SingleVariableDeclaration(43)", "Delete SimpleName: String(44)", "Delete SimpleType: String(45)", "Delete SimpleName: aliaseName(46)", "Delete SingleVariableDeclaration(47)", "Delete MethodDeclaration(48)", "Delete SimpleName: name(49)", "Delete TagElement: @param(50)", "Delete TextElement:  return a physical path of matrix(51)", "Delete TagElement: @return(52)", "Delete Javadoc(53)", "Delete Modifier: public(54)", "Delete SimpleName: String(55)", "Delete SimpleType: String(56)", "Delete SimpleName: getPath(57)", "Delete SimpleName: String(58)", "Delete SimpleType: String(59)", "Delete SimpleName: name(60)", "Delete SingleVariableDeclaration(61)", "Delete MethodDeclaration(62)", "Delete SimpleName: matrixName(63)", "Delete TagElement: @param(64)", "Delete TextElement:  true if matrix is exist(65)", "Delete TagElement: @return(66)", "Delete Javadoc(67)", "Delete Modifier: public(68)", "Delete PrimitiveType: boolean(69)", "Delete SimpleName: matrixExists(70)", "Delete SimpleName: String(71)", "Delete SimpleType: String(72)", "Delete SimpleName: matrixName(73)", "Delete SingleVariableDeclaration(74)", "Delete MethodDeclaration(75)", "Delete TextElement: Deletes matrix(76)", "Delete TagElement(77)", "Delete SimpleName: matrixName(78)", "Delete TagElement: @param(79)", "Delete SimpleName: IOException(80)", "Delete TagElement: @throws(81)", "Delete Javadoc(82)", "Delete Modifier: public(83)", "Delete PrimitiveType: void(84)", "Delete SimpleName: delete(85)", "Delete SimpleName: String(86)", "Delete SimpleType: String(87)", "Delete SimpleName: matrixName(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: IOException(90)", "Delete SimpleType: IOException(91)", "Delete MethodDeclaration(92)", "Delete TextElement: Load matrix(93)", "Delete TagElement(94)", "Delete SimpleName: matrixName(95)", "Delete TagElement: @param(96)", "Delete TextElement:  the matrix(97)", "Delete TagElement: @return(98)", "Delete SimpleName: IOException(99)", "Delete TextElement:  (100)", "Delete TagElement: @throws(101)", "Delete Javadoc(102)", "Delete Modifier: public(103)", "Delete SimpleName: Matrix(104)", "Delete SimpleType: Matrix(105)", "Delete SimpleName: getMatrix(106)", "Delete SimpleName: String(107)", "Delete SimpleType: String(108)", "Delete SimpleName: matrixName(109)", "Delete SingleVariableDeclaration(110)", "Delete SimpleName: IOException(111)", "Delete SimpleType: IOException(112)", "Delete MethodDeclaration(113)", "Delete TypeDeclaration: interface(114)"]}}, {"HamaAdminImpl_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TagElement", "DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HTableDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.MasterNotRunningException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.RegionException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Delete", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Get", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HTable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Put"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.Matrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SparseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.log4j.Logger", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TextElement: store in matrix table. And check the reference of the matrix table:", "DEL ParenthesizedExpression", "DEL TextElement: remove the entry of 'matrixName' in admin table. * ", "DEL SimpleName: matrixName", "DEL SimpleName: del", "DEL SimpleName: getPath", "DEL SimpleType: IOException", "DEL TagElement", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: Put", "DEL SimpleType: HamaConfiguration", "DEL CatchClause", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: toBytes", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL Modifier: public", "DEL SimpleName: admin", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL SimpleName: e", "DEL Assignment: =", "DEL StringLiteral: \"SparseMatrix\"", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleType: Delete", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: admin", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: RegionException", "DEL TextElement: reference the table to do the garbage collection.", "DEL TagElement: @param", "DEL NumberLiteral: 0", "DEL SimpleName: get", "DEL Modifier: private", "DEL SimpleType: Delete", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL SimpleName: result", "DEL Block", "DEL SimpleName: aliaseName", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL CatchClause", "DEL SimpleName: conf", "DEL ReturnStatement", "DEL SimpleName: printStackTrace", "DEL SimpleName: path", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL Modifier: static", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: getPath", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: conf", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL TagElement: @link", "DEL Modifier: private", "DEL NullLiteral", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleType: Matrix", "DEL SimpleName: path", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: getType", "DEL SimpleType: Get", "DEL Assignment: =", "DEL SimpleType: String", "DEL Block", "DEL IfStatement", "DEL SimpleName: toBytes", "DEL SimpleType: Get", "DEL SimpleName: e", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleName: HBaseAdmin", "DEL InfixExpression: <=", "DEL SimpleName: conf", "DEL Block", "DEL SimpleName: HTable", "DEL VariableDeclarationStatement", "DEL SimpleName: tablename", "DEL SimpleName: result", "DEL SimpleName: add", "DEL SimpleName: IOException", "DEL SimpleName: Bytes", "DEL SimpleName: table", "DEL ExpressionStatement", "DEL TextElement:  to manage the matrix's", "DEL SimpleName: toBytes", "DEL SimpleName: matrixExists", "DEL SimpleName: clearAliaseInfo", "DEL ExpressionStatement", "DEL SimpleName: Get", "DEL QualifiedName: Constants.METADATA", "DEL SimpleName: HTable", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Javadoc", "DEL TextElement:  real table name", "DEL Block", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: admin", "DEL MethodDeclaration", "DEL StringLiteral: \"type\"", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: mat", "DEL SingleVariableDeclaration", "DEL SimpleName: Bytes", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL TryStatement", "DEL SimpleName: getPath", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL ReturnStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: matrixName", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: HTable", "DEL Block", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: getValue", "DEL Modifier: final", "DEL SimpleName: LOG", "DEL SimpleName: getValue", "DEL IfStatement", "DEL Block", "DEL SimpleName: result", "DEL BooleanLiteral: false", "DEL Block", "DEL Javadoc", "DEL SimpleName: equals", "DEL SimpleType: IOException", "DEL Block", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL SimpleName: matrix", "DEL SimpleType: HTable", "DEL SimpleType: HTable", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL SimpleName: Get", "DEL SimpleName: toBytes", "DEL PrimitiveType: byte", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: e", "DEL TagElement: @throws", "DEL SimpleName: tablename", "DEL SimpleName: admin", "DEL SimpleName: conf", "DEL VariableDeclarationFragment", "DEL QualifiedName: Constants.METADATA", "DEL PrimitiveType: void", "DEL Block", "DEL ExpressionStatement", "DEL SimpleType: MasterNotRunningException", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"name\"", "DEL SimpleName: get", "DEL SimpleName: Exception", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: put", "DEL Javadoc", "DEL TagElement", "DEL SimpleType: Delete", "DEL SimpleName: admin", "DEL TextElement: Constructor", "DEL SimpleName: removeEntry", "DEL TryStatement", "DEL SimpleName: mat", "DEL SimpleName: String", "DEL PrimitiveType: byte", "DEL SimpleType: IOException", "DEL SimpleName: HamaAdminImpl", "DEL NullLiteral", "DEL Modifier: public", "DEL SimpleType: Logger", "DEL SimpleName: get", "DEL SimpleType: Get", "DEL SimpleName: toBytes", "DEL FieldAccess", "DEL SimpleType: String", "DEL TextElement: Constructor", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: IOException", "DEL SimpleName: getValue", "DEL SimpleName: Bytes", "DEL SimpleName: HTableDescriptor", "DEL SimpleName: admin", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: HColumnDescriptor", "DEL SimpleName: Logger", "DEL TagElement", "DEL Block", "DEL Assignment: =", "DEL SimpleName: get", "DEL TagElement", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: get", "DEL SimpleName: tablename", "DEL SimpleType: Put", "DEL SimpleName: table", "DEL SimpleName: admin", "DEL Modifier: protected", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleType: HTable", "DEL SimpleName: Bytes", "DEL SimpleName: result", "DEL SimpleName: printStackTrace", "DEL SimpleName: del", "DEL Dimension", "DEL SimpleName: LOG", "DEL PrimitiveType: boolean", "DEL VariableDeclarationStatement", "DEL SimpleName: path", "DEL NullLiteral", "DEL SimpleName: tableExists", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: matrixName", "DEL SimpleName: String", "DEL SimpleName: delete", "DEL SimpleName: admin", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL SimpleName: del", "DEL MethodInvocation", "DEL SimpleName: matrix", "DEL SimpleName: e", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: initialJob", "DEL TagElement: @return", "DEL SimpleName: warn", "DEL TagElement", "DEL SimpleType: HTableDescriptor", "DEL Javadoc", "DEL SimpleName: get", "DEL SimpleName: del", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: SparseMatrix", "DEL SimpleName: getPath", "DEL SimpleType: String", "DEL SimpleName: name", "DEL QualifiedName: Constants.ADMINTABLE", "DEL Modifier: public", "DEL SimpleName: MasterNotRunningException", "DEL SimpleType: HBaseAdmin", "DEL VariableDeclarationFragment", "DEL SimpleName: admin", "DEL SimpleName: printStackTrace", "DEL InfixExpression: ==", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: conf", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL SimpleType: IOException", "DEL SimpleName: conf", "DEL SimpleName: isTableEnabled", "DEL SimpleType: IOException", "DEL TryStatement", "DEL SimpleType: Get", "DEL Modifier: protected", "DEL TextElement: Initializing the admin.", "DEL VariableDeclarationFragment", "DEL SimpleName: Matrix", "DEL Assignment: =", "DEL SimpleName: admin", "DEL MethodInvocation", "DEL SimpleName: getReference", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: delete", "DEL SimpleName: setAutoFlush", "DEL SimpleName: HTable", "DEL SimpleName: Delete", "DEL SimpleName: Delete", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL SimpleName: String", "DEL SimpleName: HamaAdmin", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: HTable", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: result", "DEL SimpleName: conf", "DEL SimpleName: get", "DEL SimpleName: e", "DEL QualifiedName: Constants.METADATA", "DEL SimpleType: HTable", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: put", "DEL SimpleName: HTable", "DEL SimpleName: matrixName", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL QualifiedName: Constants.ADMINTABLE", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: addFamily", "DEL SimpleName: conf", "DEL ClassInstanceCreation", "DEL SimpleType: HColumnDescriptor", "DEL SingleVariableDeclaration", "DEL SimpleName: getReference", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL SimpleName: result", "DEL SimpleName: get", "DEL SimpleName: Get", "DEL Block", "DEL SimpleName: Bytes", "DEL SimpleType: HTable", "DEL SimpleName: HamaConfiguration", "DEL VariableDeclarationStatement", "DEL SimpleName: tablename", "DEL MethodInvocation", "DEL SimpleName: toInt", "DEL SingleVariableDeclaration", "DEL SimpleName: Bytes", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: Get", "DEL ClassInstanceCreation", "DEL SimpleName: tablename", "DEL SimpleName: matrixName", "DEL ExpressionStatement", "DEL BooleanLiteral: true", "DEL SimpleName: Put", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: admin", "DEL MarkerAnnotation", "DEL SimpleName: getType", "DEL SimpleName: conf", "DEL SimpleName: tableDesc", "DEL SimpleType: String", "DEL MethodDeclaration", "DEL SimpleName: path", "DEL SingleVariableDeclaration", "DEL SimpleName: Bytes", "DEL VariableDeclarationStatement", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL SimpleName: conf", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL FieldDeclaration", "DEL Javadoc", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: Bytes", "DEL PrefixExpression: !", "DEL SimpleName: toBytes", "DEL SimpleName: table", "DEL SimpleName: tablename", "DEL SimpleName: get", "DEL SimpleName: getLogger", "DEL SimpleName: toBytes", "DEL ClassInstanceCreation", "DEL SimpleType: HamaAdminImpl", "DEL ConditionalExpression", "DEL SimpleType: Exception", "DEL Block", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: result", "DEL Modifier: public", "DEL SimpleType: String", "DEL Block", "DEL TryStatement", "DEL TextElement: we remove the aliase entry store in Admin table, and clear the aliase info", "DEL SimpleType: HTable", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: HTable", "DEL SimpleName: clearAliaseInfo", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL ReturnStatement", "DEL ArrayType: byte[]", "DEL SimpleName: tablename", "DEL ArrayType: byte[]", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL Modifier: protected", "DEL SimpleName: Bytes", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleType: DenseMatrix", "DEL SimpleName: del", "DEL SimpleName: tablename", "DEL SimpleType: Get", "DEL Block", "DEL SimpleName: Bytes", "DEL SimpleName: printStackTrace", "DEL VariableDeclarationStatement", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL WhileStatement", "DEL PrimitiveType: void", "DEL FieldAccess", "DEL SimpleName: matrix", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: conf", "DEL SimpleName: matrixName", "DEL SimpleName: path", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL TextElement: the reference of the matrix table is not zero: we let the matrix who still", "DEL QualifiedName: Constants.ADMINTABLE", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: MasterNotRunningException", "DEL SimpleType: String", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL SimpleName: name", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL SimpleName: String", "DEL SimpleName: delete", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL NullLiteral", "DEL Block", "DEL SimpleType: Delete", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL TextElement: An Implementation of ", "DEL ExpressionStatement", "DEL Dimension", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: admin", "DEL ThisExpression", "DEL SimpleName: Delete", "DEL SimpleName: Get", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: result", "DEL ClassInstanceCreation", "DEL SimpleType: Get", "DEL SimpleName: Delete", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL IfStatement", "DEL SimpleName: matrixName", "DEL MethodInvocation", "DEL TextElement: 1) if the reference of the matrix table is zero: we delete the table. 2) if", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL Block", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL SimpleName: tableDesc", "DEL SimpleName: Get", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: toBytes", "DEL Modifier: public", "DEL Block", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: matrixName", "DEL VariableDeclarationStatement", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL SimpleName: aliaseName", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL TypeDeclaration: class", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL MethodInvocation", "DEL Block", "DEL BooleanLiteral: false", "DEL SimpleName: matrixName", "DEL Dimension", "DEL SimpleName: IOException", "DEL SimpleType: Get", "DEL QualifiedName: Constants.METADATA_REFERENCE", "DEL TryStatement", "DEL SimpleName: Logger", "DEL MethodInvocation", "DEL SimpleName: path", "DEL SimpleName: put", "DEL SimpleName: isTableEnabled", "DEL SimpleName: initialJob", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: tableDesc", "DEL SimpleName: conf", "DEL SimpleName: toBytes", "DEL SimpleName: deleteTable", "DEL PrimitiveType: int", "DEL SimpleName: toString", "DEL SimpleName: addFamily", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL NullLiteral", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: table", "DEL TypeLiteral", "DEL SimpleName: tableName", "DEL MethodInvocation", "DEL SimpleName: tableExists", "DEL SimpleName: HBaseAdmin", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL InfixExpression: ==", "DEL SimpleName: initialJob", "DEL ExpressionStatement", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL SimpleName: tablename", "DEL SimpleName: matrixExists", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleType: IOException", "DEL Block", "DEL SimpleName: String", "DEL SimpleType: SparseMatrix", "DEL SimpleName: String", "DEL QualifiedName: org.apache.hama.HamaAdmin", "DEL SimpleName: get", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL SimpleName: admin", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: toBytes", "DEL SimpleName: table", "DEL ReturnStatement", "DEL SimpleName: RegionException", "DEL MethodDeclaration", "DEL Block", "DEL PrimitiveType: byte", "DEL Javadoc", "DEL ExpressionStatement", "DEL SimpleType: HTable", "DEL SimpleType: Matrix", "DEL SimpleName: result", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: String", "DEL TagElement", "DEL SimpleName: matrix", "DEL SimpleName: save", "DEL SimpleName: tableName", "DEL SimpleName: createTable", "DEL SimpleName: Bytes", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: tableName", "DEL SimpleName: matrixName", "DEL SimpleName: HTable", "DEL SimpleName: result", "DEL SimpleName: addFamily", "DEL SimpleName: tableName", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL SimpleName: conf", "DEL NullLiteral", "DEL ReturnStatement", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: removeEntry", "DEL PrimitiveType: boolean", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL Block", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: addFamily", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL SimpleName: Get", "DEL SimpleName: DenseMatrix", "DEL MethodInvocation", "DEL Modifier: private", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL PrimitiveType: byte", "DEL SimpleType: HTableDescriptor", "DEL FieldDeclaration", "DEL SimpleName: disableTable", "DEL IfStatement", "DEL SimpleName: deleteColumns", "DEL SimpleName: Bytes", "DEL Javadoc", "DEL TryStatement", "DEL SimpleName: toBytes", "DEL SimpleName: getMatrix", "DEL SimpleType: HamaAdmin", "DEL Block", "DEL Block", "DEL TagElement: @param", "DEL SimpleName: Bytes", "DEL SimpleName: HTableDescriptor", "DEL InfixExpression: ==", "DEL SimpleName: name", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL TextElement: namespace, and table allocation & garbage collection.", "DEL CatchClause", "DEL SimpleName: result", "DEL SimpleType: HamaConfiguration", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: printStackTrace", "DEL SimpleName: String", "DEL BooleanLiteral: true", "DEL SimpleName: Get", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL SimpleName: toString", "DEL ThisExpression", "DEL QualifiedName: Constants.PATHCOLUMN", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: table", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL VariableDeclarationStatement"]}]}}, {"HamaAdminImpl_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.HTableDescriptor(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.MasterNotRunningException(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.RegionException(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Delete(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hama.matrix.SparseMatrix(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.log4j.Logger(46)", "Delete ImportDeclaration(47)", "Delete TextElement: An Implementation of (48)", "Delete QualifiedName: org.apache.hama.HamaAdmin(49)", "Delete TagElement: @link(50)", "Delete TextElement:  to manage the matrix's(51)", "Delete TextElement: namespace, and table allocation & garbage collection.(52)", "Delete TagElement(53)", "Delete Javadoc(54)", "Delete Modifier: public(55)", "Delete SimpleName: HamaAdminImpl(56)", "Delete SimpleName: HamaAdmin(57)", "Delete SimpleType: HamaAdmin(58)", "Delete Modifier: static(59)", "Delete Modifier: final(60)", "Delete SimpleName: Logger(61)", "Delete SimpleType: Logger(62)", "Delete SimpleName: LOG(63)", "Delete SimpleName: Logger(64)", "Delete SimpleName: getLogger(65)", "Delete SimpleName: HamaAdminImpl(66)", "Delete SimpleType: HamaAdminImpl(67)", "Delete TypeLiteral(68)", "Delete MethodInvocation(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete Modifier: protected(72)", "Delete SimpleName: HamaConfiguration(73)", "Delete SimpleType: HamaConfiguration(74)", "Delete SimpleName: conf(75)", "Delete VariableDeclarationFragment(76)", "Delete FieldDeclaration(77)", "Delete Modifier: protected(78)", "Delete SimpleName: HBaseAdmin(79)", "Delete SimpleType: HBaseAdmin(80)", "Delete SimpleName: admin(81)", "Delete VariableDeclarationFragment(82)", "Delete FieldDeclaration(83)", "Delete Modifier: protected(84)", "Delete SimpleName: HTable(85)", "Delete SimpleType: HTable(86)", "Delete SimpleName: table(87)", "Delete VariableDeclarationFragment(88)", "Delete FieldDeclaration(89)", "Delete TextElement: Constructor(90)", "Delete TagElement(91)", "Delete SimpleName: conf(92)", "Delete TagElement: @param(93)", "Delete SimpleName: MasterNotRunningException(94)", "Delete TagElement: @throws(95)", "Delete Javadoc(96)", "Delete Modifier: public(97)", "Delete SimpleName: HamaAdminImpl(98)", "Delete SimpleName: HamaConfiguration(99)", "Delete SimpleType: HamaConfiguration(100)", "Delete SimpleName: conf(101)", "Delete SingleVariableDeclaration(102)", "Delete SimpleName: MasterNotRunningException(103)", "Delete SimpleType: MasterNotRunningException(104)", "Delete ThisExpression(105)", "Delete SimpleName: conf(106)", "Delete FieldAccess(107)", "Delete SimpleName: conf(108)", "Delete Assignment: =(109)", "Delete ExpressionStatement(110)", "Delete ThisExpression(111)", "Delete SimpleName: admin(112)", "Delete FieldAccess(113)", "Delete SimpleName: HBaseAdmin(114)", "Delete SimpleType: HBaseAdmin(115)", "Delete SimpleName: conf(116)", "Delete ClassInstanceCreation(117)", "Delete Assignment: =(118)", "Delete ExpressionStatement(119)", "Delete SimpleName: initialJob(120)", "Delete MethodInvocation(121)", "Delete ExpressionStatement(122)", "Delete Block(123)", "Delete MethodDeclaration(124)", "Delete TextElement: Constructor(125)", "Delete TagElement(126)", "Delete SimpleName: conf(127)", "Delete TagElement: @param(128)", "Delete SimpleName: admin(129)", "Delete TagElement: @param(130)", "Delete Javadoc(131)", "Delete Modifier: public(132)", "Delete SimpleName: HamaAdminImpl(133)", "Delete SimpleName: HamaConfiguration(134)", "Delete SimpleType: HamaConfiguration(135)", "Delete SimpleName: conf(136)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: HBaseAdmin(138)", "Delete SimpleType: HBaseAdmin(139)", "Delete SimpleName: admin(140)", "Delete SingleVariableDeclaration(141)", "Delete ThisExpression(142)", "Delete SimpleName: conf(143)", "Delete FieldAccess(144)", "Delete SimpleName: conf(145)", "Delete Assignment: =(146)", "Delete ExpressionStatement(147)", "Delete ThisExpression(148)", "Delete SimpleName: admin(149)", "Delete FieldAccess(150)", "Delete SimpleName: admin(151)", "Delete Assignment: =(152)", "Delete ExpressionStatement(153)", "Delete SimpleName: initialJob(154)", "Delete MethodInvocation(155)", "Delete ExpressionStatement(156)", "Delete Block(157)", "Delete MethodDeclaration(158)", "Delete TextElement: Initializing the admin.(159)", "Delete TagElement(160)", "Delete Javadoc(161)", "Delete Modifier: private(162)", "Delete PrimitiveType: void(163)", "Delete SimpleName: initialJob(164)", "Delete SimpleName: admin(165)", "Delete SimpleName: tableExists(166)", "Delete QualifiedName: Constants.ADMINTABLE(167)", "Delete MethodInvocation(168)", "Delete PrefixExpression: !(169)", "Delete SimpleName: HTableDescriptor(170)", "Delete SimpleType: HTableDescriptor(171)", "Delete SimpleName: tableDesc(172)", "Delete SimpleName: HTableDescriptor(173)", "Delete SimpleType: HTableDescriptor(174)", "Delete QualifiedName: Constants.ADMINTABLE(175)", "Delete ClassInstanceCreation(176)", "Delete VariableDeclarationFragment(177)", "Delete VariableDeclarationStatement(178)", "Delete SimpleName: tableDesc(179)", "Delete SimpleName: addFamily(180)", "Delete SimpleName: HColumnDescriptor(181)", "Delete SimpleType: HColumnDescriptor(182)", "Delete QualifiedName: Constants.PATHCOLUMN(183)", "Delete ClassInstanceCreation(184)", "Delete MethodInvocation(185)", "Delete ExpressionStatement(186)", "Delete SimpleName: admin(187)", "Delete SimpleName: createTable(188)", "Delete SimpleName: tableDesc(189)", "Delete MethodInvocation(190)", "Delete ExpressionStatement(191)", "Delete Block(192)", "Delete IfStatement(193)", "Delete SimpleName: table(194)", "Delete SimpleName: HTable(195)", "Delete SimpleType: HTable(196)", "Delete SimpleName: conf(197)", "Delete QualifiedName: Constants.ADMINTABLE(198)", "Delete ClassInstanceCreation(199)", "Delete Assignment: =(200)", "Delete ExpressionStatement(201)", "Delete SimpleName: table(202)", "Delete SimpleName: setAutoFlush(203)", "Delete BooleanLiteral: true(204)", "Delete MethodInvocation(205)", "Delete ExpressionStatement(206)", "Delete Block(207)", "Delete SimpleName: Exception(208)", "Delete SimpleType: Exception(209)", "Delete SimpleName: e(210)", "Delete SingleVariableDeclaration(211)", "Delete SimpleName: e(212)", "Delete SimpleName: printStackTrace(213)", "Delete MethodInvocation(214)", "Delete ExpressionStatement(215)", "Delete Block(216)", "Delete CatchClause(217)", "Delete TryStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete SimpleName: name(221)", "Delete TagElement: @param(222)", "Delete TextElement:  real table name(223)", "Delete TagElement: @return(224)", "Delete Javadoc(225)", "Delete Modifier: public(226)", "Delete SimpleName: String(227)", "Delete SimpleType: String(228)", "Delete SimpleName: getPath(229)", "Delete SimpleName: String(230)", "Delete SimpleType: String(231)", "Delete SimpleName: name(232)", "Delete SingleVariableDeclaration(233)", "Delete SimpleName: Get(234)", "Delete SimpleType: Get(235)", "Delete SimpleName: get(236)", "Delete SimpleName: Get(237)", "Delete SimpleType: Get(238)", "Delete SimpleName: Bytes(239)", "Delete SimpleName: toBytes(240)", "Delete SimpleName: name(241)", "Delete MethodInvocation(242)", "Delete ClassInstanceCreation(243)", "Delete VariableDeclarationFragment(244)", "Delete VariableDeclarationStatement(245)", "Delete SimpleName: get(246)", "Delete SimpleName: addFamily(247)", "Delete SimpleName: Bytes(248)", "Delete SimpleName: toBytes(249)", "Delete QualifiedName: Constants.PATHCOLUMN(250)", "Delete MethodInvocation(251)", "Delete MethodInvocation(252)", "Delete ExpressionStatement(253)", "Delete PrimitiveType: byte(254)", "Delete Dimension(255)", "Delete ArrayType: byte[](256)", "Delete SimpleName: result(257)", "Delete SimpleName: table(258)", "Delete SimpleName: get(259)", "Delete SimpleName: get(260)", "Delete MethodInvocation(261)", "Delete SimpleName: getValue(262)", "Delete SimpleName: Bytes(263)", "Delete SimpleName: toBytes(264)", "Delete QualifiedName: Constants.PATHCOLUMN(265)", "Delete MethodInvocation(266)", "Delete NullLiteral(267)", "Delete MethodInvocation(268)", "Delete VariableDeclarationFragment(269)", "Delete VariableDeclarationStatement(270)", "Delete SimpleName: Bytes(271)", "Delete SimpleName: toString(272)", "Delete SimpleName: result(273)", "Delete MethodInvocation(274)", "Delete ReturnStatement(275)", "Delete Block(276)", "Delete SimpleName: IOException(277)", "Delete SimpleType: IOException(278)", "Delete SimpleName: e(279)", "Delete SingleVariableDeclaration(280)", "Delete SimpleName: e(281)", "Delete SimpleName: printStackTrace(282)", "Delete MethodInvocation(283)", "Delete ExpressionStatement(284)", "Delete NullLiteral(285)", "Delete ReturnStatement(286)", "Delete Block(287)", "Delete CatchClause(288)", "Delete TryStatement(289)", "Delete Block(290)", "Delete MethodDeclaration(291)", "Delete Modifier: public(292)", "Delete PrimitiveType: boolean(293)", "Delete SimpleName: matrixExists(294)", "Delete SimpleName: String(295)", "Delete SimpleType: String(296)", "Delete SimpleName: matrixName(297)", "Delete SingleVariableDeclaration(298)", "Delete SimpleName: Get(299)", "Delete SimpleType: Get(300)", "Delete SimpleName: get(301)", "Delete SimpleName: Get(302)", "Delete SimpleType: Get(303)", "Delete SimpleName: Bytes(304)", "Delete SimpleName: toBytes(305)", "Delete SimpleName: matrixName(306)", "Delete MethodInvocation(307)", "Delete ClassInstanceCreation(308)", "Delete VariableDeclarationFragment(309)", "Delete VariableDeclarationStatement(310)", "Delete SimpleName: get(311)", "Delete SimpleName: addFamily(312)", "Delete SimpleName: Bytes(313)", "Delete SimpleName: toBytes(314)", "Delete QualifiedName: Constants.PATHCOLUMN(315)", "Delete MethodInvocation(316)", "Delete MethodInvocation(317)", "Delete ExpressionStatement(318)", "Delete PrimitiveType: byte(319)", "Delete Dimension(320)", "Delete ArrayType: byte[](321)", "Delete SimpleName: result(322)", "Delete SimpleName: table(323)", "Delete SimpleName: get(324)", "Delete SimpleName: get(325)", "Delete MethodInvocation(326)", "Delete SimpleName: getValue(327)", "Delete SimpleName: Bytes(328)", "Delete SimpleName: toBytes(329)", "Delete QualifiedName: Constants.PATHCOLUMN(330)", "Delete MethodInvocation(331)", "Delete NullLiteral(332)", "Delete MethodInvocation(333)", "Delete VariableDeclarationFragment(334)", "Delete VariableDeclarationStatement(335)", "Delete SimpleName: result(336)", "Delete NullLiteral(337)", "Delete InfixExpression: ==(338)", "Delete ParenthesizedExpression(339)", "Delete BooleanLiteral: false(340)", "Delete BooleanLiteral: true(341)", "Delete ConditionalExpression(342)", "Delete ReturnStatement(343)", "Delete Block(344)", "Delete SimpleName: IOException(345)", "Delete SimpleType: IOException(346)", "Delete SimpleName: e(347)", "Delete SingleVariableDeclaration(348)", "Delete SimpleName: e(349)", "Delete SimpleName: printStackTrace(350)", "Delete MethodInvocation(351)", "Delete ExpressionStatement(352)", "Delete BooleanLiteral: false(353)", "Delete ReturnStatement(354)", "Delete Block(355)", "Delete CatchClause(356)", "Delete TryStatement(357)", "Delete Block(358)", "Delete MethodDeclaration(359)", "Delete Modifier: public(360)", "Delete PrimitiveType: boolean(361)", "Delete SimpleName: save(362)", "Delete SimpleName: Matrix(363)", "Delete SimpleType: Matrix(364)", "Delete SimpleName: mat(365)", "Delete SingleVariableDeclaration(366)", "Delete SimpleName: String(367)", "Delete SimpleType: String(368)", "Delete SimpleName: aliaseName(369)", "Delete SingleVariableDeclaration(370)", "Delete PrimitiveType: boolean(371)", "Delete SimpleName: result(372)", "Delete BooleanLiteral: false(373)", "Delete VariableDeclarationFragment(374)", "Delete VariableDeclarationStatement(375)", "Delete SimpleName: Put(376)", "Delete SimpleType: Put(377)", "Delete SimpleName: put(378)", "Delete SimpleName: Put(379)", "Delete SimpleType: Put(380)", "Delete SimpleName: Bytes(381)", "Delete SimpleName: toBytes(382)", "Delete SimpleName: aliaseName(383)", "Delete MethodInvocation(384)", "Delete ClassInstanceCreation(385)", "Delete VariableDeclarationFragment(386)", "Delete VariableDeclarationStatement(387)", "Delete SimpleName: put(388)", "Delete SimpleName: add(389)", "Delete SimpleName: Bytes(390)", "Delete SimpleName: toBytes(391)", "Delete QualifiedName: Constants.PATHCOLUMN(392)", "Delete MethodInvocation(393)", "Delete NullLiteral(394)", "Delete SimpleName: Bytes(395)", "Delete SimpleName: toBytes(396)", "Delete SimpleName: mat(397)", "Delete SimpleName: getPath(398)", "Delete MethodInvocation(399)", "Delete MethodInvocation(400)", "Delete MethodInvocation(401)", "Delete ExpressionStatement(402)", "Delete SimpleName: table(403)", "Delete SimpleName: put(404)", "Delete SimpleName: put(405)", "Delete MethodInvocation(406)", "Delete ExpressionStatement(407)", "Delete SimpleName: result(408)", "Delete BooleanLiteral: true(409)", "Delete Assignment: =(410)", "Delete ExpressionStatement(411)", "Delete Block(412)", "Delete SimpleName: IOException(413)", "Delete SimpleType: IOException(414)", "Delete SimpleName: e(415)", "Delete SingleVariableDeclaration(416)", "Delete SimpleName: e(417)", "Delete SimpleName: printStackTrace(418)", "Delete MethodInvocation(419)", "Delete ExpressionStatement(420)", "Delete Block(421)", "Delete CatchClause(422)", "Delete TryStatement(423)", "Delete SimpleName: result(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete TextElement: remove the entry of 'matrixName' in admin table. * (428)", "Delete TagElement(429)", "Delete Javadoc(430)", "Delete Modifier: private(431)", "Delete PrimitiveType: void(432)", "Delete SimpleName: removeEntry(433)", "Delete SimpleName: String(434)", "Delete SimpleType: String(435)", "Delete SimpleName: matrixName(436)", "Delete SingleVariableDeclaration(437)", "Delete SimpleName: IOException(438)", "Delete SimpleType: IOException(439)", "Delete SimpleName: Delete(440)", "Delete SimpleType: Delete(441)", "Delete SimpleName: del(442)", "Delete SimpleName: Delete(443)", "Delete SimpleType: Delete(444)", "Delete SimpleName: Bytes(445)", "Delete SimpleName: toBytes(446)", "Delete SimpleName: matrixName(447)", "Delete MethodInvocation(448)", "Delete ClassInstanceCreation(449)", "Delete VariableDeclarationFragment(450)", "Delete VariableDeclarationStatement(451)", "Delete SimpleName: table(452)", "Delete SimpleName: delete(453)", "Delete SimpleName: del(454)", "Delete MethodInvocation(455)", "Delete ExpressionStatement(456)", "Delete Block(457)", "Delete MethodDeclaration(458)", "Delete Modifier: private(459)", "Delete PrimitiveType: int(460)", "Delete SimpleName: getReference(461)", "Delete SimpleName: String(462)", "Delete SimpleType: String(463)", "Delete SimpleName: tableName(464)", "Delete SingleVariableDeclaration(465)", "Delete SimpleName: IOException(466)", "Delete SimpleType: IOException(467)", "Delete SimpleName: HTable(468)", "Delete SimpleType: HTable(469)", "Delete SimpleName: matrix(470)", "Delete SimpleName: HTable(471)", "Delete SimpleType: HTable(472)", "Delete SimpleName: conf(473)", "Delete SimpleName: tableName(474)", "Delete ClassInstanceCreation(475)", "Delete VariableDeclarationFragment(476)", "Delete VariableDeclarationStatement(477)", "Delete SimpleName: Get(478)", "Delete SimpleType: Get(479)", "Delete SimpleName: get(480)", "Delete SimpleName: Get(481)", "Delete SimpleType: Get(482)", "Delete SimpleName: Bytes(483)", "Delete SimpleName: toBytes(484)", "Delete QualifiedName: Constants.METADATA(485)", "Delete MethodInvocation(486)", "Delete ClassInstanceCreation(487)", "Delete VariableDeclarationFragment(488)", "Delete VariableDeclarationStatement(489)", "Delete SimpleName: get(490)", "Delete SimpleName: addFamily(491)", "Delete QualifiedName: Constants.ATTRIBUTE(492)", "Delete MethodInvocation(493)", "Delete ExpressionStatement(494)", "Delete PrimitiveType: byte(495)", "Delete Dimension(496)", "Delete ArrayType: byte[](497)", "Delete SimpleName: result(498)", "Delete SimpleName: matrix(499)", "Delete SimpleName: get(500)", "Delete SimpleName: get(501)", "Delete MethodInvocation(502)", "Delete SimpleName: getValue(503)", "Delete QualifiedName: Constants.ATTRIBUTE(504)", "Delete SimpleName: Bytes(505)", "Delete SimpleName: toBytes(506)", "Delete QualifiedName: Constants.METADATA_REFERENCE(507)", "Delete MethodInvocation(508)", "Delete MethodInvocation(509)", "Delete VariableDeclarationFragment(510)", "Delete VariableDeclarationStatement(511)", "Delete SimpleName: result(512)", "Delete NullLiteral(513)", "Delete InfixExpression: ==(514)", "Delete ParenthesizedExpression(515)", "Delete NumberLiteral: 0(516)", "Delete SimpleName: Bytes(517)", "Delete SimpleName: toInt(518)", "Delete SimpleName: result(519)", "Delete MethodInvocation(520)", "Delete ConditionalExpression(521)", "Delete ReturnStatement(522)", "Delete Block(523)", "Delete MethodDeclaration(524)", "Delete Modifier: private(525)", "Delete PrimitiveType: void(526)", "Delete SimpleName: clearAliaseInfo(527)", "Delete SimpleName: String(528)", "Delete SimpleType: String(529)", "Delete SimpleName: tableName(530)", "Delete SingleVariableDeclaration(531)", "Delete SimpleName: IOException(532)", "Delete SimpleType: IOException(533)", "Delete SimpleName: HTable(534)", "Delete SimpleType: HTable(535)", "Delete SimpleName: matrix(536)", "Delete SimpleName: HTable(537)", "Delete SimpleType: HTable(538)", "Delete SimpleName: conf(539)", "Delete SimpleName: tableName(540)", "Delete ClassInstanceCreation(541)", "Delete VariableDeclarationFragment(542)", "Delete VariableDeclarationStatement(543)", "Delete SimpleName: Delete(544)", "Delete SimpleType: Delete(545)", "Delete SimpleName: del(546)", "Delete SimpleName: Delete(547)", "Delete SimpleType: Delete(548)", "Delete SimpleName: Bytes(549)", "Delete SimpleName: toBytes(550)", "Delete QualifiedName: Constants.METADATA(551)", "Delete MethodInvocation(552)", "Delete ClassInstanceCreation(553)", "Delete VariableDeclarationFragment(554)", "Delete VariableDeclarationStatement(555)", "Delete SimpleName: del(556)", "Delete SimpleName: deleteColumns(557)", "Delete SimpleName: Bytes(558)", "Delete SimpleName: toBytes(559)", "Delete QualifiedName: Constants.ALIASEFAMILY(560)", "Delete MethodInvocation(561)", "Delete SimpleName: Bytes(562)", "Delete SimpleName: toBytes(563)", "Delete StringLiteral: \"name\"(564)", "Delete MethodInvocation(565)", "Delete MethodInvocation(566)", "Delete ExpressionStatement(567)", "Delete SimpleName: matrix(568)", "Delete SimpleName: delete(569)", "Delete SimpleName: del(570)", "Delete MethodInvocation(571)", "Delete ExpressionStatement(572)", "Delete Block(573)", "Delete MethodDeclaration(574)", "Delete TextElement: we remove the aliase entry store in Admin table, and clear the aliase info(575)", "Delete TextElement: store in matrix table. And check the reference of the matrix table:(576)", "Delete TextElement: 1) if the reference of the matrix table is zero: we delete the table. 2) if(577)", "Delete TextElement: the reference of the matrix table is not zero: we let the matrix who still(578)", "Delete TextElement: reference the table to do the garbage collection.(579)", "Delete TagElement(580)", "Delete Javadoc(581)", "Delete Modifier: public(582)", "Delete PrimitiveType: void(583)", "Delete SimpleName: delete(584)", "Delete SimpleName: String(585)", "Delete SimpleType: String(586)", "Delete SimpleName: matrixName(587)", "Delete SingleVariableDeclaration(588)", "Delete SimpleName: IOException(589)", "Delete SimpleType: IOException(590)", "Delete SimpleName: matrixExists(591)", "Delete SimpleName: matrixName(592)", "Delete MethodInvocation(593)", "Delete SimpleName: String(594)", "Delete SimpleType: String(595)", "Delete SimpleName: tablename(596)", "Delete SimpleName: getPath(597)", "Delete SimpleName: matrixName(598)", "Delete MethodInvocation(599)", "Delete VariableDeclarationFragment(600)", "Delete VariableDeclarationStatement(601)", "Delete SimpleName: removeEntry(602)", "Delete SimpleName: matrixName(603)", "Delete MethodInvocation(604)", "Delete ExpressionStatement(605)", "Delete SimpleName: tablename(606)", "Delete NullLiteral(607)", "Delete InfixExpression: ==(608)", "Delete ReturnStatement(609)", "Delete Block(610)", "Delete IfStatement(611)", "Delete SimpleName: admin(612)", "Delete SimpleName: tableExists(613)", "Delete SimpleName: tablename(614)", "Delete MethodInvocation(615)", "Delete PrefixExpression: !(616)", "Delete ReturnStatement(617)", "Delete Block(618)", "Delete IfStatement(619)", "Delete SimpleName: clearAliaseInfo(620)", "Delete SimpleName: tablename(621)", "Delete MethodInvocation(622)", "Delete ExpressionStatement(623)", "Delete SimpleName: getReference(624)", "Delete SimpleName: tablename(625)", "Delete MethodInvocation(626)", "Delete NumberLiteral: 0(627)", "Delete InfixExpression: <=(628)", "Delete SimpleName: admin(629)", "Delete SimpleName: isTableEnabled(630)", "Delete SimpleName: tablename(631)", "Delete MethodInvocation(632)", "Delete SimpleName: admin(633)", "Delete SimpleName: isTableEnabled(634)", "Delete SimpleName: tablename(635)", "Delete MethodInvocation(636)", "Delete SimpleName: admin(637)", "Delete SimpleName: disableTable(638)", "Delete SimpleName: tablename(639)", "Delete MethodInvocation(640)", "Delete ExpressionStatement(641)", "Delete Block(642)", "Delete SimpleName: RegionException(643)", "Delete SimpleType: RegionException(644)", "Delete SimpleName: e(645)", "Delete SingleVariableDeclaration(646)", "Delete SimpleName: LOG(647)", "Delete SimpleName: warn(648)", "Delete SimpleName: e(649)", "Delete MethodInvocation(650)", "Delete ExpressionStatement(651)", "Delete Block(652)", "Delete CatchClause(653)", "Delete TryStatement(654)", "Delete Block(655)", "Delete WhileStatement(656)", "Delete SimpleName: admin(657)", "Delete SimpleName: deleteTable(658)", "Delete SimpleName: tablename(659)", "Delete MethodInvocation(660)", "Delete ExpressionStatement(661)", "Delete Block(662)", "Delete IfStatement(663)", "Delete Block(664)", "Delete IfStatement(665)", "Delete Block(666)", "Delete IfStatement(667)", "Delete Block(668)", "Delete MethodDeclaration(669)", "Delete SimpleName: Override(670)", "Delete MarkerAnnotation(671)", "Delete Modifier: public(672)", "Delete SimpleName: Matrix(673)", "Delete SimpleType: Matrix(674)", "Delete SimpleName: getMatrix(675)", "Delete SimpleName: String(676)", "Delete SimpleType: String(677)", "Delete SimpleName: matrixName(678)", "Delete SingleVariableDeclaration(679)", "Delete SimpleName: IOException(680)", "Delete SimpleType: IOException(681)", "Delete SimpleName: String(682)", "Delete SimpleType: String(683)", "Delete SimpleName: path(684)", "Delete SimpleName: getPath(685)", "Delete SimpleName: matrixName(686)", "Delete MethodInvocation(687)", "Delete VariableDeclarationFragment(688)", "Delete VariableDeclarationStatement(689)", "Delete SimpleName: getType(690)", "Delete SimpleName: path(691)", "Delete MethodInvocation(692)", "Delete SimpleName: equals(693)", "Delete StringLiteral: \"SparseMatrix\"(694)", "Delete MethodInvocation(695)", "Delete SimpleName: SparseMatrix(696)", "Delete SimpleType: SparseMatrix(697)", "Delete SimpleName: conf(698)", "Delete SimpleName: path(699)", "Delete ClassInstanceCreation(700)", "Delete ReturnStatement(701)", "Delete SimpleName: DenseMatrix(702)", "Delete SimpleType: DenseMatrix(703)", "Delete SimpleName: conf(704)", "Delete SimpleName: path(705)", "Delete ClassInstanceCreation(706)", "Delete ReturnStatement(707)", "Delete IfStatement(708)", "Delete Block(709)", "Delete MethodDeclaration(710)", "Delete Modifier: private(711)", "Delete SimpleName: String(712)", "Delete SimpleType: String(713)", "Delete SimpleName: getType(714)", "Delete SimpleName: String(715)", "Delete SimpleType: String(716)", "Delete SimpleName: path(717)", "Delete SingleVariableDeclaration(718)", "Delete SimpleName: HTable(719)", "Delete SimpleType: HTable(720)", "Delete SimpleName: table(721)", "Delete SimpleName: HTable(722)", "Delete SimpleType: HTable(723)", "Delete SimpleName: conf(724)", "Delete SimpleName: path(725)", "Delete ClassInstanceCreation(726)", "Delete VariableDeclarationFragment(727)", "Delete VariableDeclarationStatement(728)", "Delete SimpleName: Get(729)", "Delete SimpleType: Get(730)", "Delete SimpleName: get(731)", "Delete SimpleName: Get(732)", "Delete SimpleType: Get(733)", "Delete SimpleName: Bytes(734)", "Delete SimpleName: toBytes(735)", "Delete QualifiedName: Constants.METADATA(736)", "Delete MethodInvocation(737)", "Delete ClassInstanceCreation(738)", "Delete VariableDeclarationFragment(739)", "Delete VariableDeclarationStatement(740)", "Delete SimpleName: get(741)", "Delete SimpleName: addFamily(742)", "Delete QualifiedName: Constants.ATTRIBUTE(743)", "Delete MethodInvocation(744)", "Delete ExpressionStatement(745)", "Delete PrimitiveType: byte(746)", "Delete Dimension(747)", "Delete ArrayType: byte[](748)", "Delete SimpleName: result(749)", "Delete SimpleName: table(750)", "Delete SimpleName: get(751)", "Delete SimpleName: get(752)", "Delete MethodInvocation(753)", "Delete SimpleName: getValue(754)", "Delete QualifiedName: Constants.ATTRIBUTE(755)", "Delete SimpleName: Bytes(756)", "Delete SimpleName: toBytes(757)", "Delete StringLiteral: \"type\"(758)", "Delete MethodInvocation(759)", "Delete MethodInvocation(760)", "Delete VariableDeclarationFragment(761)", "Delete VariableDeclarationStatement(762)", "Delete SimpleName: Bytes(763)", "Delete SimpleName: toString(764)", "Delete SimpleName: result(765)", "Delete MethodInvocation(766)", "Delete ReturnStatement(767)", "Delete Block(768)", "Delete SimpleName: IOException(769)", "Delete SimpleType: IOException(770)", "Delete SimpleName: e(771)", "Delete SingleVariableDeclaration(772)", "Delete SimpleName: e(773)", "Delete SimpleName: printStackTrace(774)", "Delete MethodInvocation(775)", "Delete ExpressionStatement(776)", "Delete NullLiteral(777)", "Delete ReturnStatement(778)", "Delete Block(779)", "Delete CatchClause(780)", "Delete TryStatement(781)", "Delete Block(782)", "Delete MethodDeclaration(783)", "Delete TypeDeclaration: class(784)"]}}, {"AbstractExample_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TagElement", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: See the License for the specific language governing permissions and", "DEL PackageDeclaration", "DEL TextElement: limitations under the License.", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: with the License.  You may obtain a copy of the License at"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaConfiguration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Assignment: =", "DEL SimpleType: ArrayList", "DEL PrimitiveType: void", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: HamaConfiguration", "DEL ArrayAccess", "DEL InfixExpression: -", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL VariableDeclarationFragment", "DEL ParameterizedType: List<String>", "DEL StringLiteral: \"ERROR: Required parameter missing from \"", "DEL ParameterizedType: List<String>", "DEL ExpressionStatement", "DEL SimpleName: ARGS", "DEL ArrayAccess", "DEL Block", "DEL SimpleName: setNumMapTasks", "DEL Modifier: static", "DEL Modifier: static", "DEL ArrayAccess", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: except", "DEL SimpleName: conf", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: args", "DEL SimpleName: i", "DEL SimpleName: conf", "DEL SimpleName: ArrayList", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL Modifier: protected", "DEL Block", "DEL SingleVariableDeclaration", "DEL QualifiedName: System.out", "DEL SimpleName: except", "DEL SingleVariableDeclaration", "DEL SimpleName: println", "DEL SimpleName: args", "DEL SimpleName: args", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SimpleType: HamaConfiguration", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL ArrayAccess", "DEL SimpleName: parseInt", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL PrefixExpression: ++", "DEL SimpleName: String", "DEL ArrayAccess", "DEL StringLiteral: \"ERROR: Integer expected instead of \"", "DEL SimpleName: i", "DEL PrefixExpression: ++", "DEL SimpleType: String", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleName: String", "DEL QualifiedName: System.out", "DEL MethodInvocation", "DEL SimpleName: parseArgs", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleType: List", "DEL NumberLiteral: 0", "DEL ArrayType: String[]", "DEL Block", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Block", "DEL InfixExpression: <", "DEL SimpleType: List", "DEL ArrayAccess", "DEL FieldDeclaration", "DEL SimpleName: args", "DEL SimpleName: parseInt", "DEL SimpleName: NumberFormatException", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleName: i", "DEL StringLiteral: \"-r\"", "DEL SimpleName: args", "DEL SimpleName: other_args", "DEL MethodInvocation", "DEL SimpleName: i", "DEL FieldDeclaration", "DEL QualifiedName: args.length", "DEL SimpleName: args", "DEL SimpleName: ARGS", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL SimpleType: String", "DEL SimpleName: other_args", "DEL MethodDeclaration", "DEL StringLiteral: \"-m\"", "DEL PrimitiveType: int", "DEL Modifier: static", "DEL SimpleType: NumberFormatException", "DEL InfixExpression: +", "DEL TryStatement", "DEL CatchClause", "DEL Modifier: protected", "DEL SimpleName: args", "DEL Modifier: public", "DEL Modifier: abstract", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: AbstractExample", "DEL PrefixExpression: ++", "DEL SimpleName: i", "DEL SimpleName: setNumReduceTasks", "DEL NumberLiteral: 1", "DEL IfStatement", "DEL SimpleName: List", "DEL SimpleName: Integer", "DEL VariableDeclarationFragment", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleType: String", "DEL SimpleName: args", "DEL Modifier: public", "DEL TypeDeclaration: class", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: println", "DEL IfStatement", "DEL InfixExpression: +", "DEL SimpleName: other_args", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL SimpleName: equals", "DEL SimpleType: HamaConfiguration", "DEL ArrayAccess", "DEL SimpleName: List", "DEL SimpleName: equals"]}]}}, {"AbstractExample_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.util.ArrayList(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.List(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(22)", "Delete ImportDeclaration(23)", "Delete Modifier: public(24)", "Delete Modifier: abstract(25)", "Delete SimpleName: AbstractExample(26)", "Delete Modifier: protected(27)", "Delete Modifier: static(28)", "Delete Modifier: final(29)", "Delete SimpleName: HamaConfiguration(30)", "Delete SimpleType: HamaConfiguration(31)", "Delete SimpleName: conf(32)", "Delete SimpleName: HamaConfiguration(33)", "Delete SimpleType: HamaConfiguration(34)", "Delete ClassInstanceCreation(35)", "Delete VariableDeclarationFragment(36)", "Delete FieldDeclaration(37)", "Delete Modifier: protected(38)", "Delete Modifier: static(39)", "Delete SimpleName: List(40)", "Delete SimpleType: List(41)", "Delete SimpleName: String(42)", "Delete SimpleType: String(43)", "Delete ParameterizedType: List<String>(44)", "Delete SimpleName: ARGS(45)", "Delete VariableDeclarationFragment(46)", "Delete FieldDeclaration(47)", "Delete Modifier: public(48)", "Delete Modifier: static(49)", "Delete PrimitiveType: void(50)", "Delete SimpleName: parseArgs(51)", "Delete SimpleName: String(52)", "Delete SimpleType: String(53)", "Delete Dimension(54)", "Delete ArrayType: String[](55)", "Delete SimpleName: args(56)", "Delete SingleVariableDeclaration(57)", "Delete SimpleName: List(58)", "Delete SimpleType: List(59)", "Delete SimpleName: String(60)", "Delete SimpleType: String(61)", "Delete ParameterizedType: List<String>(62)", "Delete SimpleName: other_args(63)", "Delete SimpleName: ArrayList(64)", "Delete SimpleType: ArrayList(65)", "Delete SimpleName: String(66)", "Delete SimpleType: String(67)", "Delete ParameterizedType: ArrayList<String>(68)", "Delete ClassInstanceCreation(69)", "Delete VariableDeclarationFragment(70)", "Delete VariableDeclarationStatement(71)", "Delete PrimitiveType: int(72)", "Delete SimpleName: i(73)", "Delete NumberLiteral: 0(74)", "Delete VariableDeclarationFragment(75)", "Delete VariableDeclarationExpression(76)", "Delete SimpleName: i(77)", "Delete QualifiedName: args.length(78)", "Delete InfixExpression: <(79)", "Delete SimpleName: i(80)", "Delete PrefixExpression: ++(81)", "Delete StringLiteral: \"-m\"(82)", "Delete SimpleName: equals(83)", "Delete SimpleName: args(84)", "Delete SimpleName: i(85)", "Delete ArrayAccess(86)", "Delete MethodInvocation(87)", "Delete SimpleName: conf(88)", "Delete SimpleName: setNumMapTasks(89)", "Delete SimpleName: Integer(90)", "Delete SimpleName: parseInt(91)", "Delete SimpleName: args(92)", "Delete SimpleName: i(93)", "Delete PrefixExpression: ++(94)", "Delete ArrayAccess(95)", "Delete MethodInvocation(96)", "Delete MethodInvocation(97)", "Delete ExpressionStatement(98)", "Delete Block(99)", "Delete StringLiteral: \"-r\"(100)", "Delete SimpleName: equals(101)", "Delete SimpleName: args(102)", "Delete SimpleName: i(103)", "Delete ArrayAccess(104)", "Delete MethodInvocation(105)", "Delete SimpleName: conf(106)", "Delete SimpleName: setNumReduceTasks(107)", "Delete SimpleName: Integer(108)", "Delete SimpleName: parseInt(109)", "Delete SimpleName: args(110)", "Delete SimpleName: i(111)", "Delete PrefixExpression: ++(112)", "Delete ArrayAccess(113)", "Delete MethodInvocation(114)", "Delete MethodInvocation(115)", "Delete ExpressionStatement(116)", "Delete Block(117)", "Delete SimpleName: other_args(118)", "Delete SimpleName: add(119)", "Delete SimpleName: args(120)", "Delete SimpleName: i(121)", "Delete ArrayAccess(122)", "Delete MethodInvocation(123)", "Delete ExpressionStatement(124)", "Delete Block(125)", "Delete IfStatement(126)", "Delete IfStatement(127)", "Delete Block(128)", "Delete SimpleName: NumberFormatException(129)", "Delete SimpleType: NumberFormatException(130)", "Delete SimpleName: except(131)", "Delete SingleVariableDeclaration(132)", "Delete QualifiedName: System.out(133)", "Delete SimpleName: println(134)", "Delete StringLiteral: \"ERROR: Integer expected instead of \"(135)", "Delete SimpleName: args(136)", "Delete SimpleName: i(137)", "Delete ArrayAccess(138)", "Delete InfixExpression: +(139)", "Delete MethodInvocation(140)", "Delete ExpressionStatement(141)", "Delete Block(142)", "Delete CatchClause(143)", "Delete SimpleName: ArrayIndexOutOfBoundsException(144)", "Delete SimpleType: ArrayIndexOutOfBoundsException(145)", "Delete SimpleName: except(146)", "Delete SingleVariableDeclaration(147)", "Delete QualifiedName: System.out(148)", "Delete SimpleName: println(149)", "Delete StringLiteral: \"ERROR: Required parameter missing from \"(150)", "Delete SimpleName: args(151)", "Delete SimpleName: i(152)", "Delete NumberLiteral: 1(153)", "Delete InfixExpression: -(154)", "Delete ArrayAccess(155)", "Delete InfixExpression: +(156)", "Delete MethodInvocation(157)", "Delete ExpressionStatement(158)", "Delete Block(159)", "Delete CatchClause(160)", "Delete TryStatement(161)", "Delete Block(162)", "Delete ForStatement(163)", "Delete SimpleName: ARGS(164)", "Delete SimpleName: other_args(165)", "Delete Assignment: =(166)", "Delete ExpressionStatement(167)", "Delete Block(168)", "Delete MethodDeclaration(169)", "Delete TypeDeclaration: class(170)"]}}, {"CosineSimilarityMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configurable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configuration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Scan"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.Job"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaAdminImpl"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseVector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL SimpleName: conf", "DEL SimpleName: args", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: dot", "DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL ThisExpression", "DEL SimpleType: Configuration", "DEL ArrayAccess", "DEL SimpleType: HamaAdminImpl", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: args", "DEL SimpleName: ImmutableBytesWritable", "DEL TagElement: @throws", "DEL TextElement: <input matrix> <output similarity matrix>", "DEL SimpleName: matrix", "DEL Block", "DEL VariableDeclarationFragment", "DEL TypeDeclaration: class", "DEL SimpleType: Result", "DEL SimpleName: admin", "DEL SimpleName: Job", "DEL SimpleName: scan", "DEL SimpleType: IOException", "DEL SimpleName: put", "DEL SimpleType: Configuration", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: e", "DEL SimpleName: conf", "DEL Modifier: public", "DEL QualifiedName: args.length", "DEL Javadoc", "DEL SimpleType: Context", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: IOException", "DEL SimpleName: i", "DEL SimpleName: i", "DEL SimpleName: job", "DEL SingleVariableDeclaration", "DEL SimpleName: matrix", "DEL SimpleType: Job", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL ConditionalExpression", "DEL Modifier: private", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleType: DenseVector", "DEL SimpleName: DenseVector", "DEL Assignment: =", "DEL TextElement: Cosine Similarity MapReduce", "DEL SimpleName: addFamily", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleType: Configuration", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: Scan", "DEL SimpleType: HamaAdmin", "DEL SimpleName: conf", "DEL SimpleName: initTableMapperJob", "DEL MethodInvocation", "DEL SimpleName: i", "DEL QualifiedName: System.out", "DEL NumberLiteral: 1", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL IfStatement", "DEL Block", "DEL SimpleName: System", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: initTableReducerJob", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL ClassInstanceCreation", "DEL SimpleType: ComputeSimilarityMapper", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL StringLiteral: \"set MR job test\"", "DEL SimpleName: put", "DEL TypeDeclaration: class", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL SimpleName: Configuration", "DEL SimpleName: conf", "DEL SimpleName: Bytes", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: conf", "DEL SimpleName: Scan", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: conf", "DEL SimpleType: TableMapper", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: Override", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: waitForCompletion", "DEL Modifier: static", "DEL SimpleName: matrix", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL SimpleName: ComputeSimilarityMapper", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: v", "DEL SimpleType: Scan", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: Job", "DEL TextElement: ./bin/hama examples similarity INPUT_MATRIX OUTPUT_NAME", "DEL StringLiteral: \"Usage:  <input matrix> <output similarity matrix>\"", "DEL SimpleName: setNumReduceTasks", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleType: Put", "DEL BooleanLiteral: true", "DEL SimpleName: Put", "DEL MethodDeclaration", "DEL ArrayType: String[]", "DEL SimpleName: Put", "DEL SingleVariableDeclaration", "DEL SimpleName: getConf", "DEL InfixExpression: <", "DEL SimpleName: key", "DEL ExpressionStatement", "DEL SimpleName: configureJob", "DEL MethodInvocation", "DEL SimpleName: CosineSimilarityMatrix", "DEL SimpleName: job", "DEL SimpleName: ImmutableBytesWritable", "DEL StringLiteral: \"input.matrix\"", "DEL VariableDeclarationFragment", "DEL SimpleType: Job", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL NumberLiteral: 2", "DEL ReturnStatement", "DEL ArrayAccess", "DEL SimpleName: getRows", "DEL SimpleName: admin", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL TagElement", "DEL SimpleName: HamaConfiguration", "DEL ClassInstanceCreation", "DEL SimpleType: Scan", "DEL TypeLiteral", "DEL SimpleType: InterruptedException", "DEL SimpleName: job", "DEL Modifier: static", "DEL Dimension", "DEL SimpleName: write", "DEL SimpleName: get", "DEL SimpleName: Configuration", "DEL SimpleName: IdentityTableReducer", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL SimpleName: args", "DEL FieldDeclaration", "DEL SimpleType: Put", "DEL IfStatement", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: ComputeSimilarityMapper", "DEL SimpleType: String", "DEL SimpleName: Result", "DEL SimpleName: DenseMatrix", "DEL NumberLiteral: 0", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL NumberLiteral: 0", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL TextElement: <p>", "DEL SimpleType: Job", "DEL ExpressionStatement", "DEL SimpleName: context", "DEL Block", "DEL TextElement: </pre>", "DEL Assignment: =", "DEL TypeLiteral", "DEL SimpleName: i", "DEL SimpleName: getRow", "DEL SimpleName: exit", "DEL VariableDeclarationStatement", "DEL SimpleName: conf", "DEL SimpleName: add", "DEL SimpleName: getRowIndex", "DEL MethodInvocation", "DEL SimpleType: Job", "DEL ArrayAccess", "DEL SimpleName: Exception", "DEL SimpleName: i", "DEL SimpleName: v", "DEL Modifier: static", "DEL SimpleType: HamaConfiguration", "DEL NumberLiteral: 1", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleType: IdentityTableReducer", "DEL SimpleType: Exception", "DEL ArrayType: String[]", "DEL SimpleName: args", "DEL Modifier: public", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0", "DEL Block", "DEL SimpleName: Configuration", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL SimpleType: ImmutableBytesWritable", "DEL MethodInvocation", "DEL ParameterizedType: TableMapper<ImmutableBytesWritable,Put>", "DEL Block", "DEL CatchClause", "DEL SimpleName: context", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: getConfiguration", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL SimpleName: map", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: admin", "DEL SimpleType: DenseMatrix", "DEL PrimitiveType: void", "DEL SimpleType: DenseMatrix", "DEL SimpleName: dotProduct", "DEL SimpleName: Configurable", "DEL TagElement", "DEL SimpleName: println", "DEL StringLiteral: \"input.matrix\"", "DEL ClassInstanceCreation", "DEL SimpleName: getPath", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: Job", "DEL SimpleName: dotProduct", "DEL SimpleName: Put", "DEL SimpleName: conf", "DEL SimpleName: conf", "DEL TextElement: <p>", "DEL SimpleName: job", "DEL SimpleName: key", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: Override", "DEL TextElement: This is EXAMPLE code. You will need to change it to work for your context.", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleType: DenseVector", "DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: Context", "DEL MethodInvocation", "DEL SimpleType: Configurable", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleType: HamaConfiguration", "DEL Block", "DEL SimpleName: key", "DEL SimpleName: args", "DEL SimpleName: Exception", "DEL SimpleName: HamaAdmin", "DEL SimpleName: e", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: setConf", "DEL Dimension", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL SimpleName: Put", "DEL SimpleName: job", "DEL NullLiteral", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL SimpleName: DenseMatrix", "DEL VariableDeclarationExpression", "DEL SimpleName: configureJob", "DEL SimpleName: dotProduct", "DEL MarkerAnnotation", "DEL SimpleName: value", "DEL SimpleName: args", "DEL SimpleType: String", "DEL SimpleName: valueOf", "DEL Modifier: public", "DEL SimpleName: DenseVector", "DEL SimpleName: String", "DEL SimpleName: main", "DEL SimpleType: ImmutableBytesWritable", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL SimpleName: job", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL TryStatement", "DEL SimpleName: i", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: put", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: args", "DEL TextElement: <pre>", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: TableMapper", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: conf", "DEL SimpleName: String", "DEL SimpleName: InterruptedException", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleType: Put", "DEL MethodDeclaration", "DEL SimpleName: printStackTrace", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL InfixExpression: ==", "DEL SimpleName: matrix", "DEL SimpleType: HamaConfiguration"]}]}}, {"CosineSimilarityMatrix_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hama.Constants(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hama.HamaAdmin(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hama.HamaAdminImpl(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(38)", "Delete ImportDeclaration(39)", "Delete TextElement: Cosine Similarity MapReduce(40)", "Delete TextElement: <p>(41)", "Delete TextElement: This is EXAMPLE code. You will need to change it to work for your context.(42)", "Delete TextElement: <p>(43)", "Delete TextElement: <pre>(44)", "Delete TextElement: ./bin/hama examples similarity INPUT_MATRIX OUTPUT_NAME(45)", "Delete TextElement: </pre>(46)", "Delete TagElement(47)", "Delete Javadoc(48)", "Delete Modifier: public(49)", "Delete SimpleName: CosineSimilarityMatrix(50)", "Delete Modifier: public(51)", "Delete Modifier: static(52)", "Delete SimpleName: ComputeSimilarityMapper(53)", "Delete SimpleName: TableMapper(54)", "Delete SimpleType: TableMapper(55)", "Delete SimpleName: ImmutableBytesWritable(56)", "Delete SimpleType: ImmutableBytesWritable(57)", "Delete SimpleName: Put(58)", "Delete SimpleType: Put(59)", "Delete ParameterizedType: TableMapper<ImmutableBytesWritable,Put>(60)", "Delete SimpleName: Configurable(61)", "Delete SimpleType: Configurable(62)", "Delete Modifier: private(63)", "Delete SimpleName: Configuration(64)", "Delete SimpleType: Configuration(65)", "Delete SimpleName: conf(66)", "Delete NullLiteral(67)", "Delete VariableDeclarationFragment(68)", "Delete FieldDeclaration(69)", "Delete Modifier: private(70)", "Delete SimpleName: DenseMatrix(71)", "Delete SimpleType: DenseMatrix(72)", "Delete SimpleName: matrix(73)", "Delete VariableDeclarationFragment(74)", "Delete FieldDeclaration(75)", "Delete Modifier: public(76)", "Delete PrimitiveType: void(77)", "Delete SimpleName: map(78)", "Delete SimpleName: ImmutableBytesWritable(79)", "Delete SimpleType: ImmutableBytesWritable(80)", "Delete SimpleName: key(81)", "Delete SingleVariableDeclaration(82)", "Delete SimpleName: Result(83)", "Delete SimpleType: Result(84)", "Delete SimpleName: value(85)", "Delete SingleVariableDeclaration(86)", "Delete SimpleName: Context(87)", "Delete SimpleType: Context(88)", "Delete SimpleName: context(89)", "Delete SingleVariableDeclaration(90)", "Delete SimpleName: IOException(91)", "Delete SimpleType: IOException(92)", "Delete SimpleName: InterruptedException(93)", "Delete SimpleType: InterruptedException(94)", "Delete SimpleName: DenseVector(95)", "Delete SimpleType: DenseVector(96)", "Delete SimpleName: v(97)", "Delete SimpleName: DenseVector(98)", "Delete SimpleType: DenseVector(99)", "Delete SimpleName: value(100)", "Delete ClassInstanceCreation(101)", "Delete VariableDeclarationFragment(102)", "Delete VariableDeclarationStatement(103)", "Delete SimpleName: Put(104)", "Delete SimpleType: Put(105)", "Delete SimpleName: put(106)", "Delete SimpleName: Put(107)", "Delete SimpleType: Put(108)", "Delete SimpleName: key(109)", "Delete SimpleName: get(110)", "Delete MethodInvocation(111)", "Delete ClassInstanceCreation(112)", "Delete VariableDeclarationFragment(113)", "Delete VariableDeclarationStatement(114)", "Delete PrimitiveType: int(115)", "Delete SimpleName: i(116)", "Delete NumberLiteral: 0(117)", "Delete VariableDeclarationFragment(118)", "Delete VariableDeclarationExpression(119)", "Delete SimpleName: i(120)", "Delete SimpleName: matrix(121)", "Delete SimpleName: getRows(122)", "Delete MethodInvocation(123)", "Delete InfixExpression: <(124)", "Delete SimpleName: i(125)", "Delete PostfixExpression: ++(126)", "Delete PrimitiveType: double(127)", "Delete SimpleName: dotProduct(128)", "Delete SimpleName: matrix(129)", "Delete SimpleName: getRow(130)", "Delete SimpleName: i(131)", "Delete MethodInvocation(132)", "Delete SimpleName: dot(133)", "Delete SimpleName: v(134)", "Delete MethodInvocation(135)", "Delete VariableDeclarationFragment(136)", "Delete VariableDeclarationStatement(137)", "Delete SimpleName: BytesUtil(138)", "Delete SimpleName: getRowIndex(139)", "Delete SimpleName: key(140)", "Delete SimpleName: get(141)", "Delete MethodInvocation(142)", "Delete MethodInvocation(143)", "Delete SimpleName: i(144)", "Delete InfixExpression: ==(145)", "Delete SimpleName: dotProduct(146)", "Delete NumberLiteral: 0(147)", "Delete Assignment: =(148)", "Delete ExpressionStatement(149)", "Delete Block(150)", "Delete IfStatement(151)", "Delete SimpleName: put(152)", "Delete SimpleName: add(153)", "Delete QualifiedName: Constants.COLUMNFAMILY(154)", "Delete SimpleName: Bytes(155)", "Delete SimpleName: toBytes(156)", "Delete SimpleName: String(157)", "Delete SimpleName: valueOf(158)", "Delete SimpleName: i(159)", "Delete MethodInvocation(160)", "Delete MethodInvocation(161)", "Delete SimpleName: Bytes(162)", "Delete SimpleName: toBytes(163)", "Delete SimpleName: dotProduct(164)", "Delete MethodInvocation(165)", "Delete MethodInvocation(166)", "Delete ExpressionStatement(167)", "Delete Block(168)", "Delete ForStatement(169)", "Delete SimpleName: context(170)", "Delete SimpleName: write(171)", "Delete SimpleName: key(172)", "Delete SimpleName: put(173)", "Delete MethodInvocation(174)", "Delete ExpressionStatement(175)", "Delete Block(176)", "Delete MethodDeclaration(177)", "Delete SimpleName: Override(178)", "Delete MarkerAnnotation(179)", "Delete Modifier: public(180)", "Delete SimpleName: Configuration(181)", "Delete SimpleType: Configuration(182)", "Delete SimpleName: getConf(183)", "Delete SimpleName: conf(184)", "Delete ReturnStatement(185)", "Delete Block(186)", "Delete MethodDeclaration(187)", "Delete SimpleName: Override(188)", "Delete MarkerAnnotation(189)", "Delete Modifier: public(190)", "Delete PrimitiveType: void(191)", "Delete SimpleName: setConf(192)", "Delete SimpleName: Configuration(193)", "Delete SimpleType: Configuration(194)", "Delete SimpleName: conf(195)", "Delete SingleVariableDeclaration(196)", "Delete ThisExpression(197)", "Delete SimpleName: conf(198)", "Delete FieldAccess(199)", "Delete SimpleName: conf(200)", "Delete Assignment: =(201)", "Delete ExpressionStatement(202)", "Delete SimpleName: matrix(203)", "Delete SimpleName: DenseMatrix(204)", "Delete SimpleType: DenseMatrix(205)", "Delete SimpleName: HamaConfiguration(206)", "Delete SimpleType: HamaConfiguration(207)", "Delete SimpleName: conf(208)", "Delete ClassInstanceCreation(209)", "Delete SimpleName: conf(210)", "Delete SimpleName: get(211)", "Delete StringLiteral: \"input.matrix\"(212)", "Delete MethodInvocation(213)", "Delete ClassInstanceCreation(214)", "Delete Assignment: =(215)", "Delete ExpressionStatement(216)", "Delete Block(217)", "Delete SimpleName: IOException(218)", "Delete SimpleType: IOException(219)", "Delete SimpleName: e(220)", "Delete SingleVariableDeclaration(221)", "Delete SimpleName: e(222)", "Delete SimpleName: printStackTrace(223)", "Delete MethodInvocation(224)", "Delete ExpressionStatement(225)", "Delete Block(226)", "Delete CatchClause(227)", "Delete TryStatement(228)", "Delete Block(229)", "Delete MethodDeclaration(230)", "Delete TypeDeclaration: class(231)", "Delete Modifier: private(232)", "Delete Modifier: static(233)", "Delete SimpleName: Job(234)", "Delete SimpleType: Job(235)", "Delete SimpleName: configureJob(236)", "Delete SimpleName: HamaConfiguration(237)", "Delete SimpleType: HamaConfiguration(238)", "Delete SimpleName: conf(239)", "Delete SingleVariableDeclaration(240)", "Delete SimpleName: String(241)", "Delete SimpleType: String(242)", "Delete Dimension(243)", "Delete ArrayType: String[](244)", "Delete SimpleName: args(245)", "Delete SingleVariableDeclaration(246)", "Delete SimpleName: IOException(247)", "Delete SimpleType: IOException(248)", "Delete SimpleName: HamaAdmin(249)", "Delete SimpleType: HamaAdmin(250)", "Delete SimpleName: admin(251)", "Delete SimpleName: HamaAdminImpl(252)", "Delete SimpleType: HamaAdminImpl(253)", "Delete SimpleName: conf(254)", "Delete ClassInstanceCreation(255)", "Delete VariableDeclarationFragment(256)", "Delete VariableDeclarationStatement(257)", "Delete SimpleName: Job(258)", "Delete SimpleType: Job(259)", "Delete SimpleName: job(260)", "Delete SimpleName: Job(261)", "Delete SimpleType: Job(262)", "Delete SimpleName: conf(263)", "Delete StringLiteral: \"set MR job test\"(264)", "Delete ClassInstanceCreation(265)", "Delete VariableDeclarationFragment(266)", "Delete VariableDeclarationStatement(267)", "Delete SimpleName: job(268)", "Delete SimpleName: getConfiguration(269)", "Delete MethodInvocation(270)", "Delete SimpleName: set(271)", "Delete StringLiteral: \"input.matrix\"(272)", "Delete SimpleName: admin(273)", "Delete SimpleName: getPath(274)", "Delete SimpleName: args(275)", "Delete NumberLiteral: 0(276)", "Delete ArrayAccess(277)", "Delete MethodInvocation(278)", "Delete MethodInvocation(279)", "Delete ExpressionStatement(280)", "Delete SimpleName: Scan(281)", "Delete SimpleType: Scan(282)", "Delete SimpleName: scan(283)", "Delete SimpleName: Scan(284)", "Delete SimpleType: Scan(285)", "Delete ClassInstanceCreation(286)", "Delete VariableDeclarationFragment(287)", "Delete VariableDeclarationStatement(288)", "Delete SimpleName: scan(289)", "Delete SimpleName: addFamily(290)", "Delete QualifiedName: Constants.COLUMNFAMILY(291)", "Delete MethodInvocation(292)", "Delete ExpressionStatement(293)", "Delete SimpleName: TableMapReduceUtil(294)", "Delete SimpleName: initTableMapperJob(295)", "Delete SimpleName: admin(296)", "Delete SimpleName: getPath(297)", "Delete SimpleName: args(298)", "Delete NumberLiteral: 0(299)", "Delete ArrayAccess(300)", "Delete MethodInvocation(301)", "Delete SimpleName: scan(302)", "Delete SimpleName: ComputeSimilarityMapper(303)", "Delete SimpleType: ComputeSimilarityMapper(304)", "Delete TypeLiteral(305)", "Delete SimpleName: ImmutableBytesWritable(306)", "Delete SimpleType: ImmutableBytesWritable(307)", "Delete TypeLiteral(308)", "Delete SimpleName: Put(309)", "Delete SimpleType: Put(310)", "Delete TypeLiteral(311)", "Delete SimpleName: job(312)", "Delete MethodInvocation(313)", "Delete ExpressionStatement(314)", "Delete SimpleName: TableMapReduceUtil(315)", "Delete SimpleName: initTableReducerJob(316)", "Delete SimpleName: args(317)", "Delete NumberLiteral: 1(318)", "Delete ArrayAccess(319)", "Delete SimpleName: IdentityTableReducer(320)", "Delete SimpleType: IdentityTableReducer(321)", "Delete TypeLiteral(322)", "Delete SimpleName: job(323)", "Delete MethodInvocation(324)", "Delete ExpressionStatement(325)", "Delete SimpleName: job(326)", "Delete SimpleName: setNumReduceTasks(327)", "Delete NumberLiteral: 0(328)", "Delete MethodInvocation(329)", "Delete ExpressionStatement(330)", "Delete SimpleName: job(331)", "Delete ReturnStatement(332)", "Delete Block(333)", "Delete MethodDeclaration(334)", "Delete TextElement: <input matrix> <output similarity matrix>(335)", "Delete TagElement(336)", "Delete SimpleName: args(337)", "Delete TagElement: @param(338)", "Delete SimpleName: Exception(339)", "Delete TagElement: @throws(340)", "Delete Javadoc(341)", "Delete Modifier: public(342)", "Delete Modifier: static(343)", "Delete PrimitiveType: void(344)", "Delete SimpleName: main(345)", "Delete SimpleName: String(346)", "Delete SimpleType: String(347)", "Delete Dimension(348)", "Delete ArrayType: String[](349)", "Delete SimpleName: args(350)", "Delete SingleVariableDeclaration(351)", "Delete SimpleName: Exception(352)", "Delete SimpleType: Exception(353)", "Delete QualifiedName: args.length(354)", "Delete NumberLiteral: 2(355)", "Delete InfixExpression: <(356)", "Delete QualifiedName: System.out(357)", "Delete SimpleName: println(358)", "Delete StringLiteral: \"Usage:  <input matrix> <output similarity matrix>\"(359)", "Delete MethodInvocation(360)", "Delete ExpressionStatement(361)", "Delete Block(362)", "Delete IfStatement(363)", "Delete SimpleName: HamaConfiguration(364)", "Delete SimpleType: HamaConfiguration(365)", "Delete SimpleName: conf(366)", "Delete SimpleName: HamaConfiguration(367)", "Delete SimpleType: HamaConfiguration(368)", "Delete ClassInstanceCreation(369)", "Delete VariableDeclarationFragment(370)", "Delete VariableDeclarationStatement(371)", "Delete SimpleName: Job(372)", "Delete SimpleType: Job(373)", "Delete SimpleName: job(374)", "Delete SimpleName: configureJob(375)", "Delete SimpleName: conf(376)", "Delete SimpleName: args(377)", "Delete MethodInvocation(378)", "Delete VariableDeclarationFragment(379)", "Delete VariableDeclarationStatement(380)", "Delete SimpleName: System(381)", "Delete SimpleName: exit(382)", "Delete SimpleName: job(383)", "Delete SimpleName: waitForCompletion(384)", "Delete BooleanLiteral: true(385)", "Delete MethodInvocation(386)", "Delete NumberLiteral: 0(387)", "Delete NumberLiteral: 1(388)", "Delete ConditionalExpression(389)", "Delete MethodInvocation(390)", "Delete ExpressionStatement(391)", "Delete Block(392)", "Delete MethodDeclaration(393)", "Delete TypeDeclaration: class(394)"]}}, {"ExampleDriver_cluster": {"actions": []}}, {"ExampleDriver_diff": {"operations": []}}, {"JacobiEigen_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.fs.FileSystem", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.fs.Path", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Get", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HTable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Scan", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.NullWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.SequenceFile"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Job", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.lib.output.NullOutputFormat"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaAdmin"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdminImpl", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.DummyMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.JacobiInitMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce.Pair"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce.PivotInputFormat"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.PivotMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.RotationInputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.Matrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.BytesUtil", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: y", "DEL StringLiteral: \"changed\"", "DEL PrimitiveType: double", "DEL SimpleName: i", "DEL SimpleName: ev", "DEL ExpressionStatement", "DEL SimpleName: e2", "DEL TypeLiteral", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: pivot", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: put", "DEL IfStatement", "DEL SimpleName: table", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: EIVEC", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: toBytes", "DEL SimpleName: setInt", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: imax", "DEL SimpleName: setMapOutputKeyClass", "DEL SimpleName: toBytes", "DEL SimpleName: max", "DEL SimpleName: reader", "DEL SimpleName: Bytes", "DEL InfixExpression: <", "DEL SimpleName: getRowIndex", "DEL Dimension", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL SimpleType: Matrix", "DEL ClassInstanceCreation", "DEL SimpleName: set", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL Modifier: final", "DEL ClassInstanceCreation", "DEL SimpleName: getValue", "DEL SimpleName: job", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL PrefixExpression: !", "DEL TextElement: a matrix copy of the original copy collected in \"eicol\" family * ", "DEL SimpleName: put", "DEL SimpleType: Pair", "DEL VariableDeclarationFragment", "DEL SimpleName: pivot_col", "DEL VariableDeclarationFragment", "DEL SimpleName: y", "DEL SimpleName: EIVAL", "DEL PrefixExpression: !", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: row", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL SimpleName: e1", "DEL SimpleName: valueOf", "DEL Modifier: static", "DEL SimpleName: Integer", "DEL SimpleName: Bytes", "DEL SimpleName: Job", "DEL SimpleName: scan", "DEL Assignment: =", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL TryStatement", "DEL SimpleName: t", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: pivot", "DEL SimpleName: t", "DEL ClassInstanceCreation", "DEL SimpleName: ev", "DEL MethodInvocation", "DEL ForStatement", "DEL ExpressionStatement", "DEL PrefixExpression: -", "DEL SimpleName: job", "DEL SimpleName: get", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: EI", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL VariableDeclarationStatement", "DEL SimpleType: Get", "DEL Block", "DEL SimpleName: toBytes", "DEL SimpleName: setOutputValueClass", "DEL SimpleName: PIVOTCOL", "DEL SimpleName: getPath", "DEL SimpleName: scan", "DEL SimpleType: Job", "DEL SimpleType: SequenceFile.Reader", "DEL SimpleName: Pair", "DEL ParenthesizedExpression", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SimpleName: pivot_col", "DEL SimpleName: ClassNotFoundException", "DEL ExpressionStatement", "DEL SimpleName: close", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: row", "DEL SimpleName: Bytes", "DEL SimpleName: String", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleType: NullWritable", "DEL Modifier: public", "DEL TextElement: a matrix collect all the eigen vectors * ", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: state", "DEL TagElement: @param", "DEL SimpleName: pivotPair", "DEL SimpleName: setMapperClass", "DEL SimpleName: job", "DEL ReturnStatement", "DEL InfixExpression: /", "DEL FieldDeclaration", "DEL NumberLiteral: .0000001", "DEL VariableDeclarationStatement", "DEL SimpleName: ARGS", "DEL SimpleName: IOException", "DEL SimpleName: IdentityTableReducer", "DEL Modifier: public", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL SimpleName: DenseMatrix", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: SequenceFileOutputFormat", "DEL QualifiedName: e.length", "DEL SimpleName: getRowIndex", "DEL SimpleName: Bytes", "DEL SimpleName: DenseMatrix", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: pivotPair", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: abs", "DEL SimpleName: valueOf", "DEL SimpleName: y", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: c", "DEL InfixExpression: +", "DEL SimpleName: getRows", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: Job", "DEL SimpleName: EIVEC", "DEL StringLiteral: \"eivec\"", "DEL BooleanLiteral: true", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL Assignment: =", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: EIVAL", "DEL VariableDeclarationFragment", "DEL SimpleName: state", "DEL ExpressionStatement", "DEL StringLiteral: \"add [-m maps] [-r reduces] <matrix A> [max_iteration]\"", "DEL SimpleName: E", "DEL SimpleName: success", "DEL StringLiteral: \"_TMP_FindPivot_dir_\"", "DEL VariableDeclarationFragment", "DEL SimpleName: update", "DEL Modifier: public", "DEL SimpleName: s", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: getRowIndex", "DEL Modifier: static", "DEL TextElement: parameters for pivot * ", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: job", "DEL PrimitiveType: double", "DEL NumberLiteral: 2", "DEL SimpleName: EI", "DEL SimpleName: E", "DEL Javadoc", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: pivot_row", "DEL SimpleName: E", "DEL QualifiedName: PivotInputFormat.SCAN", "DEL SimpleName: Scan", "DEL SimpleName: m", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: t", "DEL SimpleName: addFamily", "DEL SimpleName: PivotInputFormat", "DEL PrimitiveType: double", "DEL SimpleName: Math", "DEL ExpressionStatement", "DEL SimpleName: pivot", "DEL SimpleName: pivot_row", "DEL SimpleName: success", "DEL SimpleName: EI", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL ArrayType: double[]", "DEL SimpleName: printStackTrace", "DEL SimpleType: String", "DEL InfixExpression: *", "DEL SimpleName: pivotR", "DEL InfixExpression: /", "DEL SimpleType: DenseMatrix", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL SimpleType: Path", "DEL SimpleName: printStackTrace", "DEL SimpleName: IOException", "DEL SimpleType: Path", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: outDir", "DEL MethodInvocation", "DEL SimpleName: PIVOTSIN", "DEL Dimension", "DEL SimpleName: InterruptedException", "DEL TextElement:  limit the loops of the computation", "DEL SimpleName: DoubleWritable", "DEL TypeLiteral", "DEL SimpleType: PivotMap", "DEL VariableDeclarationStatement", "DEL VariableDeclarationExpression", "DEL BooleanLiteral: true", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: BytesUtil", "DEL SimpleName: outDir", "DEL SimpleName: e", "DEL SimpleName: set", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: Put", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: PivotInputFormat", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: Put", "DEL SimpleName: put", "DEL MethodInvocation", "DEL Assignment: =", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL SimpleName: job", "DEL SimpleName: e1", "DEL SimpleType: Path", "DEL SimpleName: Scan", "DEL SimpleName: icount", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: t", "DEL SimpleName: addFamily", "DEL SimpleName: valueOf", "DEL SimpleName: Put", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleType: DummyMapper", "DEL SimpleName: EIIND", "DEL SimpleName: getPath", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL PostfixExpression: --", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: s", "DEL Assignment: =", "DEL SimpleName: BytesUtil", "DEL SimpleName: pivot_row", "DEL SimpleName: getRowIndex", "DEL SimpleName: InterruptedException", "DEL SimpleName: currentTimeMillis", "DEL Block", "DEL SimpleName: pivot", "DEL ReturnStatement", "DEL SimpleName: val", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: i", "DEL SimpleType: String", "DEL TagElement", "DEL SimpleName: c", "DEL SingleVariableDeclaration", "DEL PrimitiveType: double", "DEL VariableDeclarationFragment", "DEL SimpleName: Get", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: changed", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 0", "DEL SimpleName: pivot", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: setOutputKeyClass", "DEL SimpleName: abs", "DEL SimpleName: job", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: j", "DEL StringLiteral: \"eicol\"", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: final", "DEL Dimension", "DEL SimpleName: e", "DEL InfixExpression: *", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL Assignment: =", "DEL SimpleName: j", "DEL InfixExpression: +", "DEL Assignment: =", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: ImmutableBytesWritable", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleType: Pair", "DEL Assignment: &=", "DEL PostfixExpression: ++", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleType: InterruptedException", "DEL SimpleName: getConfiguration", "DEL SimpleName: Bytes", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: pivot_row", "DEL ExpressionStatement", "DEL SimpleName: sqrt", "DEL SimpleName: Math", "DEL InfixExpression: <", "DEL VariableDeclarationStatement", "DEL TextElement: the \"eival:value\" column, and the eigen vector of a specified eigen value", "DEL SimpleName: pivot_col", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: ev", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: SequenceFileOutputFormat", "DEL MethodInvocation", "DEL SimpleName: add", "DEL SimpleName: m", "DEL SimpleType: String", "DEL SimpleName: args", "DEL SimpleName: i", "DEL SimpleName: t", "DEL SimpleName: pivot_row", "DEL SimpleName: job", "DEL VariableDeclarationStatement", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL SimpleName: MATRIX", "DEL SimpleName: EIVEC", "DEL QualifiedName: SequenceFile.Reader", "DEL VariableDeclarationExpression", "DEL SimpleName: toBytes", "DEL SimpleName: convertScanToString", "DEL SimpleType: ClassNotFoundException", "DEL PrimitiveType: double", "DEL SimpleName: Bytes", "DEL SimpleName: m", "DEL MethodInvocation", "DEL SimpleName: Pair", "DEL Block", "DEL SimpleName: toDouble", "DEL SimpleName: FileSystem", "DEL SimpleName: Math", "DEL SimpleName: getPath", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleType: String", "DEL PrimitiveType: int", "DEL SimpleName: pivot_row", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: a", "DEL SimpleName: put", "DEL SimpleName: matrixA", "DEL TypeLiteral", "DEL SimpleName: getRowIndex", "DEL ParenthesizedExpression", "DEL SimpleName: println", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: admin", "DEL MethodInvocation", "DEL TextElement: TODO: we may need to expose the interface to access the eigen values and", "DEL SimpleName: pivot_col", "DEL SimpleName: Bytes", "DEL InfixExpression: /", "DEL SimpleName: put", "DEL SimpleName: pivot_col", "DEL SimpleType: IOException", "DEL SimpleName: conf", "DEL Assignment: =", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL Assignment: =", "DEL CastExpression", "DEL Block", "DEL SimpleName: table", "DEL SimpleName: changed", "DEL Block", "DEL SimpleType: Get", "DEL SimpleName: pivotWritable", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL SimpleName: m", "DEL SimpleName: toBytes", "DEL TextElement: is collected in the \"eivec:\" column family in the same row.", "DEL SimpleName: e2", "DEL SimpleName: EIVEC", "DEL InfixExpression: +", "DEL SimpleName: table", "DEL SimpleName: getValue", "DEL SimpleType: NullWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: value", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: DoubleWritable", "DEL TryStatement", "DEL SimpleName: pivot_row", "DEL ClassInstanceCreation", "DEL SimpleName: EI", "DEL InfixExpression: <", "DEL SimpleName: job", "DEL BooleanLiteral: true", "DEL NumberLiteral: .0000001", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: val", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: EIVEC", "DEL SimpleType: HamaAdminImpl", "DEL SimpleName: getRow", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleType: FileSystem", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: waitForCompletion", "DEL SimpleName: state", "DEL SimpleName: i", "DEL SimpleName: valueOf", "DEL Javadoc", "DEL Modifier: static", "DEL SimpleType: Get", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL CatchClause", "DEL InfixExpression: >", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: outDir", "DEL VariableDeclarationFragment", "DEL PostfixExpression: ++", "DEL SimpleName: table", "DEL StringLiteral: \"part-r-00000\"", "DEL SimpleName: fs", "DEL SimpleName: pivot_row", "DEL SingleVariableDeclaration", "DEL SimpleName: BytesUtil", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: state", "DEL QualifiedName: PivotInputFormat.INPUT_TABLE", "DEL SimpleName: Get", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: s", "DEL SimpleName: imax", "DEL SimpleName: get", "DEL SimpleName: NullWritable", "DEL SimpleName: max", "DEL SimpleName: getValue", "DEL SimpleName: EI", "DEL ExpressionStatement", "DEL SimpleName: changed", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: delete", "DEL Modifier: final", "DEL TextElement: Compute all the eigen values. Note: all the eigen values are collected in", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleName: changed", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: String", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL SimpleName: m", "DEL SimpleName: String", "DEL SimpleName: job", "DEL NumberLiteral: 0", "DEL SimpleName: reader", "DEL ReturnStatement", "DEL SimpleName: BytesUtil", "DEL SimpleName: e", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: getConfiguration", "DEL PrimitiveType: int", "DEL SimpleName: getRowIndex", "DEL SimpleName: get", "DEL SimpleName: job", "DEL Block", "DEL SimpleName: valueOf", "DEL SimpleType: IdentityTableReducer", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL SimpleName: toBytes", "DEL SimpleName: EIVAL", "DEL TypeLiteral", "DEL StringLiteral: \"hama.jacobi.pivot.col\"", "DEL SimpleName: getRowIndex", "DEL SimpleName: EI", "DEL SimpleName: IOException", "DEL SimpleName: initTableMapperJob", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL SimpleName: Bytes", "DEL SimpleType: Pair", "DEL SimpleName: Bytes", "DEL NumberLiteral: 0", "DEL SimpleName: e", "DEL SimpleName: initTableReducerJob", "DEL SimpleName: getPath", "DEL ExpressionStatement", "DEL SimpleName: Get", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL SimpleName: BytesUtil", "DEL Block", "DEL SimpleName: e1", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleName: Bytes", "DEL SimpleName: String", "DEL SimpleName: get", "DEL BooleanLiteral: true", "DEL SimpleName: JacobiInitMap", "DEL SimpleName: getParent", "DEL SimpleName: Bytes", "DEL Modifier: public", "DEL TypeLiteral", "DEL SimpleName: String", "DEL SimpleType: IOException", "DEL SimpleName: get", "DEL VariableDeclarationStatement", "DEL SimpleName: pivotPair", "DEL ExpressionStatement", "DEL SimpleType: Get", "DEL SimpleName: add", "DEL SimpleName: success", "DEL TagElement: @throws", "DEL Modifier: final", "DEL SimpleType: Put", "DEL SimpleName: size", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL ReturnStatement", "DEL SimpleName: Bytes", "DEL SimpleType: Scan", "DEL SimpleName: PIVOTROW", "DEL ExpressionStatement", "DEL SimpleName: Put", "DEL SimpleName: job", "DEL SimpleName: EI", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL NullLiteral", "DEL Modifier: static", "DEL SimpleName: toBytes", "DEL PrimitiveType: void", "DEL SimpleName: job", "DEL SimpleName: Get", "DEL SimpleName: RotationInputFormat", "DEL BreakStatement", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL InfixExpression: <", "DEL SimpleName: job", "DEL SimpleName: t", "DEL SimpleName: get", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: Result", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL SimpleType: Get", "DEL SimpleName: Path", "DEL FieldDeclaration", "DEL SimpleName: row", "DEL SimpleName: Bytes", "DEL SimpleName: DoubleWritable", "DEL Modifier: public", "DEL SimpleName: fs", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL SimpleName: table", "DEL SimpleType: Result", "DEL NumberLiteral: 1", "DEL SimpleName: toDouble", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: row", "DEL SimpleName: getRowIndex", "DEL InfixExpression: <", "DEL SimpleName: toDouble", "DEL ForStatement", "DEL MethodInvocation", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL SimpleName: success", "DEL IfStatement", "DEL SimpleName: valueOf", "DEL SimpleType: Job", "DEL SimpleName: toBytes", "DEL StringLiteral: \"value\"", "DEL MethodInvocation", "DEL SimpleName: m", "DEL StringLiteral: \"eival\"", "DEL SimpleName: getConfiguration", "DEL MethodInvocation", "DEL SimpleName: reader", "DEL SimpleType: Put", "DEL SimpleName: toBytes", "DEL SimpleName: Bytes", "DEL SimpleName: admin", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationStatement", "DEL SimpleName: NullWritable", "DEL ExpressionStatement", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: jacobiEigenValue", "DEL PrimitiveType: int", "DEL SimpleName: Bytes", "DEL SimpleName: put", "DEL MethodInvocation", "DEL Assignment: &=", "DEL VariableDeclarationStatement", "DEL Modifier: static", "DEL SimpleName: e1", "DEL MethodInvocation", "DEL SimpleName: String", "DEL StringLiteral: \"hama.jacobi.pivot.cos\"", "DEL VariableDeclarationFragment", "DEL SimpleName: update", "DEL Modifier: static", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleType: Put", "DEL ClassInstanceCreation", "DEL SimpleName: set", "DEL StringLiteral: \"hama.jacobi.pivot.row\"", "DEL SimpleName: Job", "DEL SimpleName: PivotInputFormat", "DEL SimpleName: Bytes", "DEL InfixExpression: *", "DEL InfixExpression: *", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL SimpleName: i", "DEL SimpleName: Path", "DEL SimpleName: toBytes", "DEL SimpleType: Pair", "DEL SimpleName: getValue", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleName: state", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: setMapOutputValueClass", "DEL SimpleName: EICOL", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL SimpleName: EICHANGED", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: Pair", "DEL SimpleName: Bytes", "DEL SimpleName: getConfiguration", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: get", "DEL PrimitiveType: double", "DEL SimpleType: Get", "DEL SimpleName: IOException", "DEL IfStatement", "DEL SimpleName: size", "DEL SimpleName: setMapOutputKeyClass", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: r", "DEL SimpleName: BytesUtil", "DEL SimpleName: Bytes", "DEL SimpleName: put", "DEL SimpleName: jacobiEigenValue", "DEL ExpressionStatement", "DEL SimpleName: m", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: static", "DEL SimpleName: setOutputFormatClass", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL SimpleName: parseArgs", "DEL SimpleType: Get", "DEL SimpleName: pivotR", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: table", "DEL InfixExpression: +", "DEL SimpleName: row", "DEL SimpleName: put", "DEL SimpleName: printStackTrace", "DEL ExpressionStatement", "DEL SimpleName: setInt", "DEL SimpleName: table", "DEL TypeLiteral", "DEL SimpleName: toDouble", "DEL SimpleName: String", "DEL SimpleName: toBytes", "DEL SimpleName: pivot", "DEL SimpleName: m", "DEL SimpleType: String", "DEL SimpleName: job", "DEL SimpleName: EICOL", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: Put", "DEL SimpleName: get", "DEL SimpleName: s", "DEL SimpleName: valueOf", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL SimpleName: size", "DEL ClassInstanceCreation", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: Bytes", "DEL SimpleName: maxind", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: abs", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: pivot", "DEL SimpleName: size", "DEL SimpleName: j", "DEL SimpleName: fs", "DEL SimpleName: e1", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: addFamily", "DEL SimpleName: imax", "DEL SimpleName: i", "DEL SimpleType: HTable", "DEL SimpleName: scan", "DEL SimpleName: toBytes", "DEL SimpleType: Get", "DEL SimpleName: EICOL", "DEL SimpleName: get", "DEL CatchClause", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: String", "DEL SimpleName: Get", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL SimpleName: getPath", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: Get", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: table", "DEL SimpleName: success", "DEL FieldDeclaration", "DEL Assignment: =", "DEL Modifier: public", "DEL CatchClause", "DEL SimpleName: Bytes", "DEL SimpleName: setMapOutputValueClass", "DEL QualifiedName: args.length", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleName: getPath", "DEL MethodInvocation", "DEL SimpleName: s", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: RotationInputFormat.SCAN", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: HamaAdmin", "DEL SimpleName: DoubleWritable", "DEL SimpleName: toBytes", "DEL SimpleName: e2", "DEL SimpleName: e1", "DEL SimpleName: valueOf", "DEL NumberLiteral: 0", "DEL SimpleName: JacobiEigen", "DEL ArrayType: double[][]", "DEL StringLiteral: \"Find Pivot MR job\"", "DEL SimpleName: toBytes", "DEL InfixExpression: *", "DEL StringLiteral: \"Rotation Matrix MR job\"", "DEL SimpleName: toBytes", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: PIVOTCOS", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: getColumn", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL Block", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: ARGS", "DEL VariableDeclarationExpression", "DEL TextElement: a column identify the index of the max absolute value each row * ", "DEL Assignment: =", "DEL SimpleName: toBytes", "DEL SimpleName: BytesUtil", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: EI", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL TryStatement", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: table", "DEL SimpleName: FileSystem", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"ind\"", "DEL InfixExpression: -", "DEL SimpleName: get", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL PrefixExpression: -", "DEL SimpleName: toBytes", "DEL SimpleName: job", "DEL SimpleName: row", "DEL SimpleType: NullOutputFormat", "DEL StringLiteral: \"changed\"", "DEL SimpleName: Matrix", "DEL SimpleName: r", "DEL SimpleName: size", "DEL SimpleType: Put", "DEL SimpleName: outDir", "DEL SimpleName: getPath", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: update", "DEL PrimitiveType: double", "DEL SimpleName: valueOf", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: put", "DEL SimpleName: table", "DEL CatchClause", "DEL SimpleName: conf", "DEL SimpleName: m", "DEL SimpleName: inFile", "DEL Modifier: static", "DEL VariableDeclarationExpression", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL SimpleName: i", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL SimpleName: inFile", "DEL SimpleName: pivot", "DEL SimpleName: conf", "DEL SimpleName: Bytes", "DEL SimpleName: icount", "DEL Block", "DEL SimpleName: toDouble", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL SimpleName: outDir", "DEL SimpleName: abs", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: job", "DEL SimpleName: addFamily", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: y", "DEL VariableDeclarationFragment", "DEL ArrayType: String[]", "DEL ArrayAccess", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL StringLiteral: \"JacobiEigen initialization MR job\"", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: Job", "DEL SimpleName: m", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL CatchClause", "DEL Modifier: static", "DEL SimpleName: DummyMapper", "DEL SimpleName: put", "DEL SimpleName: t", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL CastExpression", "DEL TypeLiteral", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleType: IOException", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL PrimitiveType: double", "DEL SimpleName: i", "DEL SimpleName: EI", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL FieldDeclaration", "DEL SimpleName: toBytes", "DEL SimpleName: String", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL NumberLiteral: .0000001", "DEL InfixExpression: *", "DEL Block", "DEL SimpleName: String", "DEL SimpleType: ClassNotFoundException", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: e2", "DEL SimpleName: job", "DEL SimpleType: Scan", "DEL SimpleName: EI", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ParenthesizedExpression", "DEL SimpleName: PIVOTCOS", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL Modifier: final", "DEL InfixExpression: -", "DEL Javadoc", "DEL SimpleName: convertScanToString", "DEL SimpleName: getMatrix", "DEL SimpleName: val", "DEL SimpleName: abs", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL SimpleName: get", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL Assignment: =", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: SequenceFile.Reader", "DEL SimpleName: toBytes", "DEL Block", "DEL SimpleName: setInputFormatClass", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPath", "DEL VariableDeclarationStatement", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: t", "DEL InfixExpression: <", "DEL InfixExpression: +", "DEL Assignment: +=", "DEL Assignment: =", "DEL Assignment: =", "DEL SimpleType: String", "DEL SimpleName: eivC", "DEL SimpleName: BytesUtil", "DEL SimpleName: get", "DEL Modifier: static", "DEL IfStatement", "DEL SimpleName: BytesUtil", "DEL SimpleName: getRowIndex", "DEL InfixExpression: <", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: set", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL Assignment: =", "DEL SimpleName: max", "DEL StringLiteral: \"hama.jacobi.pivot.sin\"", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: t", "DEL SimpleType: Put", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL Modifier: static", "DEL Assignment: =", "DEL Modifier: final", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: y", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: System", "DEL PrimitiveType: double", "DEL SimpleName: Put", "DEL SimpleName: get", "DEL TagElement", "DEL SimpleType: AbstractExample", "DEL PrimitiveType: int", "DEL SimpleName: HTable", "DEL SimpleName: waitForCompletion", "DEL SimpleName: Math", "DEL PrimitiveType: double", "DEL SimpleName: e", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL SimpleName: valueOf", "DEL MethodInvocation", "DEL SimpleType: RotationInputFormat", "DEL VariableDeclarationFragment", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: Put", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleName: success", "DEL SimpleName: PIVOTSIN", "DEL MethodInvocation", "DEL Assignment: =", "DEL TypeLiteral", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: getValue", "DEL SimpleName: verifyEigenValue", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: setOutputPath", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL Assignment: =", "DEL SimpleName: a", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: printStackTrace", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: EICHANGED", "DEL SimpleName: Math", "DEL VariableDeclarationFragment", "DEL QualifiedName: RotationInputFormat.INPUT_TABLE", "DEL SimpleName: i", "DEL SimpleName: size", "DEL SimpleName: toDouble", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: t", "DEL SimpleName: EIVAL", "DEL SimpleName: Bytes", "DEL SimpleName: Math", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ArrayAccess", "DEL SimpleName: row", "DEL SimpleType: Path", "DEL SimpleName: job", "DEL SimpleName: setInputFormatClass", "DEL Assignment: =", "DEL SimpleName: toBytes", "DEL SimpleName: next", "DEL SimpleName: EI", "DEL VariableDeclarationFragment", "DEL NumberLiteral: .0000001", "DEL SimpleName: getConfiguration", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleName: ARGS", "DEL ParenthesizedExpression", "DEL SimpleName: c", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: NullOutputFormat", "DEL SimpleName: get", "DEL SimpleName: EI", "DEL ExpressionStatement", "DEL SimpleName: EI", "DEL SimpleName: BytesUtil", "DEL SimpleName: outDir", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: Math", "DEL SimpleName: IOException", "DEL SimpleType: DenseMatrix", "DEL MethodInvocation", "DEL SimpleType: DenseMatrix", "DEL SimpleName: main", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL SimpleName: HTable", "DEL SimpleName: pivotPair", "DEL SimpleName: getRowIndex", "DEL MethodInvocation", "DEL QualifiedName: SequenceFile.Reader", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL Modifier: private", "DEL SimpleName: r", "DEL SimpleName: changed", "DEL SimpleName: maxind", "DEL SimpleName: pivot_col", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL SimpleName: DenseMatrix", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL Modifier: public", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: valueOf", "DEL SimpleName: state", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: e1", "DEL SimpleName: Bytes", "DEL SimpleName: delete", "DEL PrimitiveType: double", "DEL QualifiedName: System.out", "DEL SimpleName: EICOL", "DEL SimpleName: Bytes", "DEL Modifier: final", "DEL SimpleType: Put", "DEL SimpleName: r", "DEL InfixExpression: >", "DEL SimpleType: IOException", "DEL SimpleName: success", "DEL SimpleName: changed", "DEL TypeLiteral", "DEL SimpleName: val", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: valueOf", "DEL Javadoc", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: scan", "DEL Block", "DEL FieldAccess", "DEL ArrayAccess", "DEL SimpleName: m", "DEL PrimitiveType: boolean", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: Pair", "DEL SimpleName: abs", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Block", "DEL ArrayAccess", "DEL SimpleName: Path", "DEL SimpleName: delete", "DEL Modifier: static", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: scan", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: Scan", "DEL SimpleName: fs", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleName: job", "DEL NumberLiteral: 0", "DEL InfixExpression: +", "DEL SimpleName: i", "DEL SimpleName: Bytes", "DEL SimpleName: e", "DEL Modifier: public", "DEL SimpleName: e1", "DEL SimpleName: m", "DEL SimpleName: EIVAL", "DEL PostfixExpression: ++", "DEL SimpleName: y", "DEL SimpleName: changed", "DEL InfixExpression: -", "DEL SimpleName: state", "DEL MethodInvocation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: success", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: printStackTrace", "DEL SimpleType: SequenceFileOutputFormat", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL NumberLiteral: 2", "DEL SimpleName: i", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: Bytes", "DEL SimpleType: InterruptedException", "DEL SimpleType: PivotInputFormat", "DEL SimpleName: toBytes", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: getRowIndex", "DEL BooleanLiteral: true", "DEL TextElement: vectors", "DEL MethodInvocation", "DEL SimpleName: icount", "DEL SimpleName: Scan", "DEL SimpleName: parseInt", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: pivotWritable", "DEL SimpleName: getRowIndex", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleType: DoubleWritable", "DEL SimpleType: Job", "DEL NumberLiteral: 0.0", "DEL FieldDeclaration", "DEL TypeLiteral", "DEL ParenthesizedExpression", "DEL SimpleName: get", "DEL SimpleType: String", "DEL SimpleName: state", "DEL FieldDeclaration", "DEL SimpleName: pivot_col", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: getValue", "DEL SimpleName: PivotMap", "DEL SimpleName: set", "DEL SimpleName: m", "DEL PrimitiveType: double", "DEL SimpleName: args", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: setMapperClass", "DEL SimpleName: e", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL SimpleName: Bytes", "DEL NumberLiteral: 2", "DEL SimpleName: row", "DEL SimpleName: jacobiEigenValue", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: m", "DEL Modifier: static", "DEL SimpleName: Put", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationFragment", "DEL SimpleName: state", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL Javadoc", "DEL SimpleName: getValue", "DEL SimpleName: exists", "DEL SimpleName: e", "DEL SimpleName: job", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: e", "DEL SimpleName: toBytes", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleType: Path", "DEL SimpleName: String", "DEL StringLiteral: \"ind\"", "DEL SimpleName: PIVOTCOL", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL SimpleType: Scan", "DEL SimpleName: toDouble", "DEL SimpleName: row", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL SimpleName: get", "DEL TryStatement", "DEL SimpleName: BytesUtil", "DEL SimpleName: s", "DEL SimpleName: toDouble", "DEL SimpleName: job", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: add", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: maxind", "DEL MethodInvocation", "DEL SimpleName: ClassNotFoundException", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL Block", "DEL SimpleName: BytesUtil", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: printStackTrace", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL SimpleName: Get", "DEL SimpleName: get", "DEL SimpleName: icount", "DEL SimpleType: Put", "DEL SimpleName: Bytes", "DEL TextElement: a column family collect all values and statuses used during computation * ", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SimpleName: scan", "DEL SimpleName: length", "DEL VariableDeclarationStatement", "DEL InfixExpression: <", "DEL SimpleName: Get", "DEL NumberLiteral: 0", "DEL Assignment: =", "DEL Assignment: =", "DEL SimpleName: state", "DEL SimpleName: AbstractExample", "DEL StringLiteral: \"out\"", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL SimpleName: pivot_row", "DEL Modifier: static", "DEL SimpleName: addFamily", "DEL VariableDeclarationFragment", "DEL SimpleType: HamaAdmin", "DEL SimpleType: Get", "DEL SimpleName: String", "DEL SimpleName: setOutputFormatClass", "DEL SimpleName: e", "DEL SimpleName: c", "DEL InfixExpression: >", "DEL SimpleName: EICHANGED", "DEL SimpleName: e2", "DEL SimpleName: getConfiguration", "DEL NumberLiteral: 1", "DEL SimpleName: getType", "DEL MethodInvocation", "DEL SimpleName: put", "DEL SimpleType: Job", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: s", "DEL SimpleName: job", "DEL SimpleName: a", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: Math", "DEL SimpleName: m", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL SimpleName: bytesToInt", "DEL Assignment: =", "DEL SimpleName: pivot_row", "DEL SimpleName: String", "DEL SimpleName: y", "DEL SimpleName: pivot_col", "DEL SimpleName: eivC", "DEL PrimitiveType: void", "DEL InfixExpression: &&", "DEL SimpleName: toBytes", "DEL Block", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL Block", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: EIVEC", "DEL FieldDeclaration", "DEL SimpleName: toBytes", "DEL PrimitiveType: double", "DEL SimpleName: matrixA", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: &&", "DEL ExpressionStatement", "DEL SimpleName: getValue", "DEL SimpleName: EI", "DEL MethodInvocation", "DEL SimpleName: y", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL InfixExpression: ==", "DEL SimpleName: Math", "DEL SimpleName: size", "DEL SimpleName: sqrt", "DEL SimpleName: EIVAL", "DEL SimpleName: e", "DEL SimpleName: t", "DEL VariableDeclarationStatement", "DEL SimpleName: pivot_col", "DEL SimpleName: getConfiguration", "DEL SimpleType: InterruptedException", "DEL SimpleName: pivotWritable", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleType: JacobiInitMap", "DEL SimpleName: toDouble", "DEL MethodInvocation", "DEL SimpleType: DoubleWritable", "DEL SimpleName: put", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: add", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: BytesUtil", "DEL Block", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: Get", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL InfixExpression: /", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: Put", "DEL ExpressionStatement", "DEL SimpleName: c", "DEL Block", "DEL SimpleName: Get", "DEL SimpleName: get", "DEL MethodInvocation", "DEL WhileStatement", "DEL SimpleName: y", "DEL Assignment: =", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL SimpleName: outDir", "DEL SimpleName: exit", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: PIVOTROW", "DEL MethodInvocation", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL InfixExpression: ==", "DEL PrimitiveType: int", "DEL SimpleName: Bytes", "DEL SimpleName: put", "DEL Assignment: =", "DEL SimpleName: abs", "DEL ParenthesizedExpression", "DEL SimpleName: get", "DEL SimpleName: System", "DEL SimpleName: job", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: s", "DEL SimpleName: String", "DEL IfStatement", "DEL FieldDeclaration", "DEL SimpleName: pivot", "DEL SimpleName: put", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleType: DoubleWritable", "DEL StringLiteral: \"hama.jacobieigenvalue.matrix\"", "DEL SimpleName: getRowIndex", "DEL SimpleName: Bytes", "DEL SimpleName: Bytes", "DEL SimpleName: pivot_col", "DEL SimpleName: getConfiguration", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL SimpleName: fs", "DEL Block", "DEL SimpleType: Scan", "DEL SimpleName: scan", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: waitForCompletion", "DEL ForStatement"]}]}}, {"JacobiEigen_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.fs.FileSystem(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.fs.Path(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.NullWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.SequenceFile(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.mapreduce.lib.output.NullOutputFormat(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.Constants(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.HamaAdmin(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hama.HamaAdminImpl(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.DummyMapper(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.JacobiInitMap(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.Pair(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.PivotInputFormat(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.PivotMap(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.RotationInputFormat(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(60)", "Delete ImportDeclaration(61)", "Delete Modifier: public(62)", "Delete SimpleName: JacobiEigen(63)", "Delete SimpleName: AbstractExample(64)", "Delete SimpleType: AbstractExample(65)", "Delete TextElement: a matrix copy of the original copy collected in \"eicol\" family * (66)", "Delete TagElement(67)", "Delete Javadoc(68)", "Delete Modifier: public(69)", "Delete Modifier: static(70)", "Delete Modifier: final(71)", "Delete SimpleName: String(72)", "Delete SimpleType: String(73)", "Delete SimpleName: EICOL(74)", "Delete StringLiteral: \"eicol\"(75)", "Delete VariableDeclarationFragment(76)", "Delete FieldDeclaration(77)", "Delete TextElement: a column family collect all values and statuses used during computation * (78)", "Delete TagElement(79)", "Delete Javadoc(80)", "Delete Modifier: public(81)", "Delete Modifier: static(82)", "Delete Modifier: final(83)", "Delete SimpleName: String(84)", "Delete SimpleType: String(85)", "Delete SimpleName: EI(86)", "Delete StringLiteral: \"eival\"(87)", "Delete VariableDeclarationFragment(88)", "Delete FieldDeclaration(89)", "Delete Modifier: public(90)", "Delete Modifier: static(91)", "Delete Modifier: final(92)", "Delete SimpleName: String(93)", "Delete SimpleType: String(94)", "Delete SimpleName: EIVAL(95)", "Delete StringLiteral: \"value\"(96)", "Delete VariableDeclarationFragment(97)", "Delete FieldDeclaration(98)", "Delete Modifier: public(99)", "Delete Modifier: static(100)", "Delete Modifier: final(101)", "Delete SimpleName: String(102)", "Delete SimpleType: String(103)", "Delete SimpleName: EICHANGED(104)", "Delete StringLiteral: \"changed\"(105)", "Delete VariableDeclarationFragment(106)", "Delete FieldDeclaration(107)", "Delete TextElement: a column identify the index of the max absolute value each row * (108)", "Delete TagElement(109)", "Delete Javadoc(110)", "Delete Modifier: public(111)", "Delete Modifier: static(112)", "Delete Modifier: final(113)", "Delete SimpleName: String(114)", "Delete SimpleType: String(115)", "Delete SimpleName: EIIND(116)", "Delete StringLiteral: \"ind\"(117)", "Delete VariableDeclarationFragment(118)", "Delete FieldDeclaration(119)", "Delete TextElement: a matrix collect all the eigen vectors * (120)", "Delete TagElement(121)", "Delete Javadoc(122)", "Delete Modifier: public(123)", "Delete Modifier: static(124)", "Delete Modifier: final(125)", "Delete SimpleName: String(126)", "Delete SimpleType: String(127)", "Delete SimpleName: EIVEC(128)", "Delete StringLiteral: \"eivec\"(129)", "Delete VariableDeclarationFragment(130)", "Delete FieldDeclaration(131)", "Delete Modifier: public(132)", "Delete Modifier: static(133)", "Delete Modifier: final(134)", "Delete SimpleName: String(135)", "Delete SimpleType: String(136)", "Delete SimpleName: MATRIX(137)", "Delete StringLiteral: \"hama.jacobieigenvalue.matrix\"(138)", "Delete VariableDeclarationFragment(139)", "Delete FieldDeclaration(140)", "Delete TextElement: parameters for pivot * (141)", "Delete TagElement(142)", "Delete Javadoc(143)", "Delete Modifier: public(144)", "Delete Modifier: static(145)", "Delete Modifier: final(146)", "Delete SimpleName: String(147)", "Delete SimpleType: String(148)", "Delete SimpleName: PIVOTROW(149)", "Delete StringLiteral: \"hama.jacobi.pivot.row\"(150)", "Delete VariableDeclarationFragment(151)", "Delete FieldDeclaration(152)", "Delete Modifier: public(153)", "Delete Modifier: static(154)", "Delete Modifier: final(155)", "Delete SimpleName: String(156)", "Delete SimpleType: String(157)", "Delete SimpleName: PIVOTCOL(158)", "Delete StringLiteral: \"hama.jacobi.pivot.col\"(159)", "Delete VariableDeclarationFragment(160)", "Delete FieldDeclaration(161)", "Delete Modifier: public(162)", "Delete Modifier: static(163)", "Delete Modifier: final(164)", "Delete SimpleName: String(165)", "Delete SimpleType: String(166)", "Delete SimpleName: PIVOTSIN(167)", "Delete StringLiteral: \"hama.jacobi.pivot.sin\"(168)", "Delete VariableDeclarationFragment(169)", "Delete FieldDeclaration(170)", "Delete Modifier: public(171)", "Delete Modifier: static(172)", "Delete Modifier: final(173)", "Delete SimpleName: String(174)", "Delete SimpleType: String(175)", "Delete SimpleName: PIVOTCOS(176)", "Delete StringLiteral: \"hama.jacobi.pivot.cos\"(177)", "Delete VariableDeclarationFragment(178)", "Delete FieldDeclaration(179)", "Delete Modifier: private(180)", "Delete Modifier: static(181)", "Delete SimpleName: HTable(182)", "Delete SimpleType: HTable(183)", "Delete SimpleName: table(184)", "Delete VariableDeclarationFragment(185)", "Delete FieldDeclaration(186)", "Delete Modifier: public(187)", "Delete Modifier: static(188)", "Delete PrimitiveType: void(189)", "Delete SimpleName: main(190)", "Delete SimpleName: String(191)", "Delete SimpleType: String(192)", "Delete Dimension(193)", "Delete ArrayType: String[](194)", "Delete SimpleName: args(195)", "Delete SingleVariableDeclaration(196)", "Delete SimpleName: IOException(197)", "Delete SimpleType: IOException(198)", "Delete QualifiedName: args.length(199)", "Delete NumberLiteral: 2(200)", "Delete InfixExpression: <(201)", "Delete QualifiedName: System.out(202)", "Delete SimpleName: println(203)", "Delete StringLiteral: \"add [-m maps] [-r reduces] <matrix A> [max_iteration]\"(204)", "Delete MethodInvocation(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: System(207)", "Delete SimpleName: exit(208)", "Delete NumberLiteral: 1(209)", "Delete PrefixExpression: -(210)", "Delete MethodInvocation(211)", "Delete ExpressionStatement(212)", "Delete Block(213)", "Delete SimpleName: parseArgs(214)", "Delete SimpleName: args(215)", "Delete MethodInvocation(216)", "Delete ExpressionStatement(217)", "Delete Block(218)", "Delete IfStatement(219)", "Delete SimpleName: String(220)", "Delete SimpleType: String(221)", "Delete SimpleName: matrixA(222)", "Delete SimpleName: ARGS(223)", "Delete SimpleName: get(224)", "Delete NumberLiteral: 0(225)", "Delete MethodInvocation(226)", "Delete VariableDeclarationFragment(227)", "Delete VariableDeclarationStatement(228)", "Delete SimpleName: HamaAdmin(229)", "Delete SimpleType: HamaAdmin(230)", "Delete SimpleName: admin(231)", "Delete SimpleName: HamaAdminImpl(232)", "Delete SimpleType: HamaAdminImpl(233)", "Delete SimpleName: conf(234)", "Delete ClassInstanceCreation(235)", "Delete VariableDeclarationFragment(236)", "Delete VariableDeclarationStatement(237)", "Delete SimpleName: Matrix(238)", "Delete SimpleType: Matrix(239)", "Delete SimpleName: a(240)", "Delete SimpleName: admin(241)", "Delete SimpleName: getMatrix(242)", "Delete SimpleName: matrixA(243)", "Delete MethodInvocation(244)", "Delete VariableDeclarationFragment(245)", "Delete VariableDeclarationStatement(246)", "Delete SimpleName: ARGS(247)", "Delete SimpleName: size(248)", "Delete MethodInvocation(249)", "Delete NumberLiteral: 1(250)", "Delete InfixExpression: >(251)", "Delete SimpleName: jacobiEigenValue(252)", "Delete SimpleName: DenseMatrix(253)", "Delete SimpleType: DenseMatrix(254)", "Delete SimpleName: a(255)", "Delete CastExpression(256)", "Delete SimpleName: Integer(257)", "Delete SimpleName: parseInt(258)", "Delete SimpleName: ARGS(259)", "Delete SimpleName: get(260)", "Delete NumberLiteral: 1(261)", "Delete MethodInvocation(262)", "Delete MethodInvocation(263)", "Delete MethodInvocation(264)", "Delete ExpressionStatement(265)", "Delete Block(266)", "Delete SimpleName: jacobiEigenValue(267)", "Delete SimpleName: DenseMatrix(268)", "Delete SimpleType: DenseMatrix(269)", "Delete SimpleName: a(270)", "Delete CastExpression(271)", "Delete QualifiedName: Integer.MAX_VALUE(272)", "Delete MethodInvocation(273)", "Delete ExpressionStatement(274)", "Delete Block(275)", "Delete IfStatement(276)", "Delete Block(277)", "Delete MethodDeclaration(278)", "Delete TextElement: Compute all the eigen values. Note: all the eigen values are collected in(279)", "Delete TextElement: the \"eival:value\" column, and the eigen vector of a specified eigen value(280)", "Delete TextElement: is collected in the \"eivec:\" column family in the same row.(281)", "Delete TextElement: TODO: we may need to expose the interface to access the eigen values and(282)", "Delete TextElement: vectors(283)", "Delete TagElement(284)", "Delete SimpleName: imax(285)", "Delete TextElement:  limit the loops of the computation(286)", "Delete TagElement: @param(287)", "Delete SimpleName: IOException(288)", "Delete TagElement: @throws(289)", "Delete Javadoc(290)", "Delete Modifier: public(291)", "Delete Modifier: static(292)", "Delete PrimitiveType: void(293)", "Delete SimpleName: jacobiEigenValue(294)", "Delete SimpleName: DenseMatrix(295)", "Delete SimpleType: DenseMatrix(296)", "Delete SimpleName: m(297)", "Delete SingleVariableDeclaration(298)", "Delete PrimitiveType: int(299)", "Delete SimpleName: imax(300)", "Delete SingleVariableDeclaration(301)", "Delete SimpleName: IOException(302)", "Delete SimpleType: IOException(303)", "Delete SimpleName: table(304)", "Delete SimpleName: HTable(305)", "Delete SimpleType: HTable(306)", "Delete SimpleName: conf(307)", "Delete SimpleName: m(308)", "Delete SimpleName: getPath(309)", "Delete MethodInvocation(310)", "Delete ClassInstanceCreation(311)", "Delete Assignment: =(312)", "Delete ExpressionStatement(313)", "Delete SimpleName: Job(314)", "Delete SimpleType: Job(315)", "Delete SimpleName: job(316)", "Delete SimpleName: Job(317)", "Delete SimpleType: Job(318)", "Delete SimpleName: conf(319)", "Delete StringLiteral: \"JacobiEigen initialization MR job\"(320)", "Delete SimpleName: m(321)", "Delete SimpleName: getPath(322)", "Delete MethodInvocation(323)", "Delete InfixExpression: +(324)", "Delete ClassInstanceCreation(325)", "Delete VariableDeclarationFragment(326)", "Delete VariableDeclarationStatement(327)", "Delete SimpleName: Scan(328)", "Delete SimpleType: Scan(329)", "Delete SimpleName: scan(330)", "Delete SimpleName: Scan(331)", "Delete SimpleType: Scan(332)", "Delete ClassInstanceCreation(333)", "Delete VariableDeclarationFragment(334)", "Delete VariableDeclarationStatement(335)", "Delete SimpleName: scan(336)", "Delete SimpleName: addFamily(337)", "Delete QualifiedName: Constants.COLUMNFAMILY(338)", "Delete MethodInvocation(339)", "Delete ExpressionStatement(340)", "Delete SimpleName: TableMapReduceUtil(341)", "Delete SimpleName: initTableMapperJob(342)", "Delete SimpleName: m(343)", "Delete SimpleName: getPath(344)", "Delete MethodInvocation(345)", "Delete SimpleName: scan(346)", "Delete SimpleName: JacobiInitMap(347)", "Delete SimpleType: JacobiInitMap(348)", "Delete TypeLiteral(349)", "Delete SimpleName: ImmutableBytesWritable(350)", "Delete SimpleType: ImmutableBytesWritable(351)", "Delete TypeLiteral(352)", "Delete SimpleName: Put(353)", "Delete SimpleType: Put(354)", "Delete TypeLiteral(355)", "Delete SimpleName: job(356)", "Delete MethodInvocation(357)", "Delete ExpressionStatement(358)", "Delete SimpleName: TableMapReduceUtil(359)", "Delete SimpleName: initTableReducerJob(360)", "Delete SimpleName: m(361)", "Delete SimpleName: getPath(362)", "Delete MethodInvocation(363)", "Delete SimpleName: IdentityTableReducer(364)", "Delete SimpleType: IdentityTableReducer(365)", "Delete TypeLiteral(366)", "Delete SimpleName: job(367)", "Delete MethodInvocation(368)", "Delete ExpressionStatement(369)", "Delete SimpleName: job(370)", "Delete SimpleName: waitForCompletion(371)", "Delete BooleanLiteral: true(372)", "Delete MethodInvocation(373)", "Delete ExpressionStatement(374)", "Delete Block(375)", "Delete SimpleName: InterruptedException(376)", "Delete SimpleType: InterruptedException(377)", "Delete SimpleName: e(378)", "Delete SingleVariableDeclaration(379)", "Delete SimpleName: e(380)", "Delete SimpleName: printStackTrace(381)", "Delete MethodInvocation(382)", "Delete ExpressionStatement(383)", "Delete Block(384)", "Delete CatchClause(385)", "Delete SimpleName: ClassNotFoundException(386)", "Delete SimpleType: ClassNotFoundException(387)", "Delete SimpleName: e(388)", "Delete SingleVariableDeclaration(389)", "Delete SimpleName: e(390)", "Delete SimpleName: printStackTrace(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete Block(394)", "Delete CatchClause(395)", "Delete TryStatement(396)", "Delete Modifier: final(397)", "Delete SimpleName: FileSystem(398)", "Delete SimpleType: FileSystem(399)", "Delete SimpleName: fs(400)", "Delete SimpleName: FileSystem(401)", "Delete SimpleName: get(402)", "Delete SimpleName: conf(403)", "Delete MethodInvocation(404)", "Delete VariableDeclarationFragment(405)", "Delete VariableDeclarationStatement(406)", "Delete SimpleName: Pair(407)", "Delete SimpleType: Pair(408)", "Delete SimpleName: pivotPair(409)", "Delete SimpleName: Pair(410)", "Delete SimpleType: Pair(411)", "Delete ClassInstanceCreation(412)", "Delete VariableDeclarationFragment(413)", "Delete VariableDeclarationStatement(414)", "Delete SimpleName: DoubleWritable(415)", "Delete SimpleType: DoubleWritable(416)", "Delete SimpleName: pivotWritable(417)", "Delete SimpleName: DoubleWritable(418)", "Delete SimpleType: DoubleWritable(419)", "Delete ClassInstanceCreation(420)", "Delete VariableDeclarationFragment(421)", "Delete VariableDeclarationStatement(422)", "Delete SimpleName: Put(423)", "Delete SimpleType: Put(424)", "Delete SimpleName: put(425)", "Delete VariableDeclarationFragment(426)", "Delete VariableDeclarationStatement(427)", "Delete PrimitiveType: int(428)", "Delete SimpleName: size(429)", "Delete SimpleName: m(430)", "Delete SimpleName: getRows(431)", "Delete MethodInvocation(432)", "Delete VariableDeclarationFragment(433)", "Delete VariableDeclarationStatement(434)", "Delete PrimitiveType: int(435)", "Delete SimpleName: state(436)", "Delete SimpleName: size(437)", "Delete VariableDeclarationFragment(438)", "Delete VariableDeclarationStatement(439)", "Delete PrimitiveType: int(440)", "Delete SimpleName: pivot_row(441)", "Delete VariableDeclarationFragment(442)", "Delete SimpleName: pivot_col(443)", "Delete VariableDeclarationFragment(444)", "Delete VariableDeclarationStatement(445)", "Delete PrimitiveType: double(446)", "Delete SimpleName: pivot(447)", "Delete VariableDeclarationFragment(448)", "Delete VariableDeclarationStatement(449)", "Delete PrimitiveType: double(450)", "Delete SimpleName: s(451)", "Delete VariableDeclarationFragment(452)", "Delete SimpleName: c(453)", "Delete VariableDeclarationFragment(454)", "Delete SimpleName: t(455)", "Delete VariableDeclarationFragment(456)", "Delete SimpleName: y(457)", "Delete VariableDeclarationFragment(458)", "Delete VariableDeclarationStatement(459)", "Delete PrimitiveType: int(460)", "Delete SimpleName: icount(461)", "Delete NumberLiteral: 0(462)", "Delete VariableDeclarationFragment(463)", "Delete VariableDeclarationStatement(464)", "Delete SimpleName: state(465)", "Delete NumberLiteral: 0(466)", "Delete InfixExpression: !=(467)", "Delete SimpleName: icount(468)", "Delete SimpleName: imax(469)", "Delete InfixExpression: <(470)", "Delete InfixExpression: &&(471)", "Delete SimpleName: icount(472)", "Delete SimpleName: icount(473)", "Delete NumberLiteral: 1(474)", "Delete InfixExpression: +(475)", "Delete Assignment: =(476)", "Delete ExpressionStatement(477)", "Delete SimpleName: Path(478)", "Delete SimpleType: Path(479)", "Delete SimpleName: outDir(480)", "Delete SimpleName: Path(481)", "Delete SimpleType: Path(482)", "Delete SimpleName: Path(483)", "Delete SimpleType: Path(484)", "Delete SimpleName: m(485)", "Delete SimpleName: getType(486)", "Delete MethodInvocation(487)", "Delete StringLiteral: \"_TMP_FindPivot_dir_\"(488)", "Delete SimpleName: System(489)", "Delete SimpleName: currentTimeMillis(490)", "Delete MethodInvocation(491)", "Delete InfixExpression: +(492)", "Delete ClassInstanceCreation(493)", "Delete StringLiteral: \"out\"(494)", "Delete ClassInstanceCreation(495)", "Delete VariableDeclarationFragment(496)", "Delete VariableDeclarationStatement(497)", "Delete SimpleName: fs(498)", "Delete SimpleName: exists(499)", "Delete SimpleName: outDir(500)", "Delete MethodInvocation(501)", "Delete SimpleName: fs(502)", "Delete SimpleName: delete(503)", "Delete SimpleName: outDir(504)", "Delete BooleanLiteral: true(505)", "Delete MethodInvocation(506)", "Delete ExpressionStatement(507)", "Delete IfStatement(508)", "Delete SimpleName: job(509)", "Delete SimpleName: Job(510)", "Delete SimpleType: Job(511)", "Delete SimpleName: conf(512)", "Delete StringLiteral: \"Find Pivot MR job\"(513)", "Delete SimpleName: m(514)", "Delete SimpleName: getPath(515)", "Delete MethodInvocation(516)", "Delete InfixExpression: +(517)", "Delete ClassInstanceCreation(518)", "Delete Assignment: =(519)", "Delete ExpressionStatement(520)", "Delete SimpleName: scan(521)", "Delete SimpleName: Scan(522)", "Delete SimpleType: Scan(523)", "Delete ClassInstanceCreation(524)", "Delete Assignment: =(525)", "Delete ExpressionStatement(526)", "Delete SimpleName: scan(527)", "Delete SimpleName: addFamily(528)", "Delete SimpleName: Bytes(529)", "Delete SimpleName: toBytes(530)", "Delete SimpleName: EI(531)", "Delete MethodInvocation(532)", "Delete MethodInvocation(533)", "Delete ExpressionStatement(534)", "Delete SimpleName: job(535)", "Delete SimpleName: setInputFormatClass(536)", "Delete SimpleName: PivotInputFormat(537)", "Delete SimpleType: PivotInputFormat(538)", "Delete TypeLiteral(539)", "Delete MethodInvocation(540)", "Delete ExpressionStatement(541)", "Delete SimpleName: job(542)", "Delete SimpleName: setMapOutputKeyClass(543)", "Delete SimpleName: Pair(544)", "Delete SimpleType: Pair(545)", "Delete TypeLiteral(546)", "Delete MethodInvocation(547)", "Delete ExpressionStatement(548)", "Delete SimpleName: job(549)", "Delete SimpleName: setMapOutputValueClass(550)", "Delete SimpleName: DoubleWritable(551)", "Delete SimpleType: DoubleWritable(552)", "Delete TypeLiteral(553)", "Delete MethodInvocation(554)", "Delete ExpressionStatement(555)", "Delete SimpleName: job(556)", "Delete SimpleName: setMapperClass(557)", "Delete SimpleName: PivotMap(558)", "Delete SimpleType: PivotMap(559)", "Delete TypeLiteral(560)", "Delete MethodInvocation(561)", "Delete ExpressionStatement(562)", "Delete SimpleName: job(563)", "Delete SimpleName: getConfiguration(564)", "Delete MethodInvocation(565)", "Delete SimpleName: set(566)", "Delete QualifiedName: PivotInputFormat.INPUT_TABLE(567)", "Delete SimpleName: m(568)", "Delete SimpleName: getPath(569)", "Delete MethodInvocation(570)", "Delete MethodInvocation(571)", "Delete ExpressionStatement(572)", "Delete SimpleName: job(573)", "Delete SimpleName: getConfiguration(574)", "Delete MethodInvocation(575)", "Delete SimpleName: set(576)", "Delete QualifiedName: PivotInputFormat.SCAN(577)", "Delete SimpleName: PivotInputFormat(578)", "Delete SimpleName: convertScanToString(579)", "Delete SimpleName: scan(580)", "Delete MethodInvocation(581)", "Delete MethodInvocation(582)", "Delete ExpressionStatement(583)", "Delete SimpleName: job(584)", "Delete SimpleName: setOutputKeyClass(585)", "Delete SimpleName: Pair(586)", "Delete SimpleType: Pair(587)", "Delete TypeLiteral(588)", "Delete MethodInvocation(589)", "Delete ExpressionStatement(590)", "Delete SimpleName: job(591)", "Delete SimpleName: setOutputValueClass(592)", "Delete SimpleName: DoubleWritable(593)", "Delete SimpleType: DoubleWritable(594)", "Delete TypeLiteral(595)", "Delete MethodInvocation(596)", "Delete ExpressionStatement(597)", "Delete SimpleName: job(598)", "Delete SimpleName: setOutputFormatClass(599)", "Delete SimpleName: SequenceFileOutputFormat(600)", "Delete SimpleType: SequenceFileOutputFormat(601)", "Delete TypeLiteral(602)", "Delete MethodInvocation(603)", "Delete ExpressionStatement(604)", "Delete SimpleName: SequenceFileOutputFormat(605)", "Delete SimpleName: setOutputPath(606)", "Delete SimpleName: job(607)", "Delete SimpleName: outDir(608)", "Delete MethodInvocation(609)", "Delete ExpressionStatement(610)", "Delete SimpleName: job(611)", "Delete SimpleName: waitForCompletion(612)", "Delete BooleanLiteral: true(613)", "Delete MethodInvocation(614)", "Delete ExpressionStatement(615)", "Delete Block(616)", "Delete SimpleName: InterruptedException(617)", "Delete SimpleType: InterruptedException(618)", "Delete SimpleName: e(619)", "Delete SingleVariableDeclaration(620)", "Delete SimpleName: e(621)", "Delete SimpleName: printStackTrace(622)", "Delete MethodInvocation(623)", "Delete ExpressionStatement(624)", "Delete Block(625)", "Delete CatchClause(626)", "Delete SimpleName: ClassNotFoundException(627)", "Delete SimpleType: ClassNotFoundException(628)", "Delete SimpleName: e(629)", "Delete SingleVariableDeclaration(630)", "Delete SimpleName: e(631)", "Delete SimpleName: printStackTrace(632)", "Delete MethodInvocation(633)", "Delete ExpressionStatement(634)", "Delete Block(635)", "Delete CatchClause(636)", "Delete TryStatement(637)", "Delete SimpleName: Path(638)", "Delete SimpleType: Path(639)", "Delete SimpleName: inFile(640)", "Delete SimpleName: Path(641)", "Delete SimpleType: Path(642)", "Delete SimpleName: outDir(643)", "Delete StringLiteral: \"part-r-00000\"(644)", "Delete ClassInstanceCreation(645)", "Delete VariableDeclarationFragment(646)", "Delete VariableDeclarationStatement(647)", "Delete QualifiedName: SequenceFile.Reader(648)", "Delete SimpleType: SequenceFile.Reader(649)", "Delete SimpleName: reader(650)", "Delete QualifiedName: SequenceFile.Reader(651)", "Delete SimpleType: SequenceFile.Reader(652)", "Delete SimpleName: fs(653)", "Delete SimpleName: inFile(654)", "Delete SimpleName: conf(655)", "Delete ClassInstanceCreation(656)", "Delete VariableDeclarationFragment(657)", "Delete VariableDeclarationStatement(658)", "Delete SimpleName: reader(659)", "Delete SimpleName: next(660)", "Delete SimpleName: pivotPair(661)", "Delete SimpleName: pivotWritable(662)", "Delete MethodInvocation(663)", "Delete ExpressionStatement(664)", "Delete SimpleName: pivot_row(665)", "Delete SimpleName: pivotPair(666)", "Delete SimpleName: getRow(667)", "Delete MethodInvocation(668)", "Delete Assignment: =(669)", "Delete ExpressionStatement(670)", "Delete SimpleName: pivot_col(671)", "Delete SimpleName: pivotPair(672)", "Delete SimpleName: getColumn(673)", "Delete MethodInvocation(674)", "Delete Assignment: =(675)", "Delete ExpressionStatement(676)", "Delete SimpleName: pivot(677)", "Delete SimpleName: pivotWritable(678)", "Delete SimpleName: get(679)", "Delete MethodInvocation(680)", "Delete Assignment: =(681)", "Delete ExpressionStatement(682)", "Delete Block(683)", "Delete SimpleName: reader(684)", "Delete SimpleName: close(685)", "Delete MethodInvocation(686)", "Delete ExpressionStatement(687)", "Delete Block(688)", "Delete TryStatement(689)", "Delete SimpleName: fs(690)", "Delete SimpleName: delete(691)", "Delete SimpleName: outDir(692)", "Delete BooleanLiteral: true(693)", "Delete MethodInvocation(694)", "Delete ExpressionStatement(695)", "Delete SimpleName: fs(696)", "Delete SimpleName: delete(697)", "Delete SimpleName: outDir(698)", "Delete SimpleName: getParent(699)", "Delete MethodInvocation(700)", "Delete BooleanLiteral: true(701)", "Delete MethodInvocation(702)", "Delete ExpressionStatement(703)", "Delete SimpleName: pivot_row(704)", "Delete NumberLiteral: 0(705)", "Delete InfixExpression: ==(706)", "Delete SimpleName: pivot_col(707)", "Delete NumberLiteral: 0(708)", "Delete InfixExpression: ==(709)", "Delete InfixExpression: &&(710)", "Delete BreakStatement(711)", "Delete IfStatement(712)", "Delete SimpleName: Get(713)", "Delete SimpleType: Get(714)", "Delete SimpleName: get(715)", "Delete SimpleName: Get(716)", "Delete SimpleType: Get(717)", "Delete SimpleName: BytesUtil(718)", "Delete SimpleName: getRowIndex(719)", "Delete SimpleName: pivot_row(720)", "Delete MethodInvocation(721)", "Delete ClassInstanceCreation(722)", "Delete VariableDeclarationFragment(723)", "Delete VariableDeclarationStatement(724)", "Delete SimpleName: get(725)", "Delete SimpleName: addFamily(726)", "Delete SimpleName: Bytes(727)", "Delete SimpleName: toBytes(728)", "Delete SimpleName: EI(729)", "Delete MethodInvocation(730)", "Delete MethodInvocation(731)", "Delete ExpressionStatement(732)", "Delete SimpleName: Result(733)", "Delete SimpleType: Result(734)", "Delete SimpleName: r(735)", "Delete SimpleName: table(736)", "Delete SimpleName: get(737)", "Delete SimpleName: get(738)", "Delete MethodInvocation(739)", "Delete VariableDeclarationFragment(740)", "Delete VariableDeclarationStatement(741)", "Delete PrimitiveType: double(742)", "Delete SimpleName: e1(743)", "Delete SimpleName: Bytes(744)", "Delete SimpleName: toDouble(745)", "Delete SimpleName: r(746)", "Delete SimpleName: getValue(747)", "Delete SimpleName: Bytes(748)", "Delete SimpleName: toBytes(749)", "Delete SimpleName: EI(750)", "Delete MethodInvocation(751)", "Delete SimpleName: Bytes(752)", "Delete SimpleName: toBytes(753)", "Delete SimpleName: EIVAL(754)", "Delete MethodInvocation(755)", "Delete MethodInvocation(756)", "Delete MethodInvocation(757)", "Delete VariableDeclarationFragment(758)", "Delete VariableDeclarationStatement(759)", "Delete SimpleName: get(760)", "Delete SimpleName: Get(761)", "Delete SimpleType: Get(762)", "Delete SimpleName: BytesUtil(763)", "Delete SimpleName: getRowIndex(764)", "Delete SimpleName: pivot_col(765)", "Delete MethodInvocation(766)", "Delete ClassInstanceCreation(767)", "Delete Assignment: =(768)", "Delete ExpressionStatement(769)", "Delete SimpleName: get(770)", "Delete SimpleName: addFamily(771)", "Delete SimpleName: Bytes(772)", "Delete SimpleName: toBytes(773)", "Delete SimpleName: EI(774)", "Delete MethodInvocation(775)", "Delete MethodInvocation(776)", "Delete ExpressionStatement(777)", "Delete SimpleName: r(778)", "Delete SimpleName: table(779)", "Delete SimpleName: get(780)", "Delete SimpleName: get(781)", "Delete MethodInvocation(782)", "Delete Assignment: =(783)", "Delete ExpressionStatement(784)", "Delete PrimitiveType: double(785)", "Delete SimpleName: e2(786)", "Delete SimpleName: Bytes(787)", "Delete SimpleName: toDouble(788)", "Delete SimpleName: r(789)", "Delete SimpleName: getValue(790)", "Delete SimpleName: Bytes(791)", "Delete SimpleName: toBytes(792)", "Delete SimpleName: EI(793)", "Delete MethodInvocation(794)", "Delete SimpleName: Bytes(795)", "Delete SimpleName: toBytes(796)", "Delete SimpleName: EIVAL(797)", "Delete MethodInvocation(798)", "Delete MethodInvocation(799)", "Delete MethodInvocation(800)", "Delete VariableDeclarationFragment(801)", "Delete VariableDeclarationStatement(802)", "Delete SimpleName: y(803)", "Delete SimpleName: e2(804)", "Delete SimpleName: e1(805)", "Delete InfixExpression: -(806)", "Delete ParenthesizedExpression(807)", "Delete NumberLiteral: 2(808)", "Delete InfixExpression: /(809)", "Delete Assignment: =(810)", "Delete ExpressionStatement(811)", "Delete SimpleName: t(812)", "Delete SimpleName: Math(813)", "Delete SimpleName: abs(814)", "Delete SimpleName: y(815)", "Delete MethodInvocation(816)", "Delete SimpleName: Math(817)", "Delete SimpleName: sqrt(818)", "Delete SimpleName: pivot(819)", "Delete SimpleName: pivot(820)", "Delete InfixExpression: *(821)", "Delete SimpleName: y(822)", "Delete SimpleName: y(823)", "Delete InfixExpression: *(824)", "Delete InfixExpression: +(825)", "Delete MethodInvocation(826)", "Delete InfixExpression: +(827)", "Delete Assignment: =(828)", "Delete ExpressionStatement(829)", "Delete SimpleName: s(830)", "Delete SimpleName: Math(831)", "Delete SimpleName: sqrt(832)", "Delete SimpleName: pivot(833)", "Delete SimpleName: pivot(834)", "Delete InfixExpression: *(835)", "Delete SimpleName: t(836)", "Delete SimpleName: t(837)", "Delete InfixExpression: *(838)", "Delete InfixExpression: +(839)", "Delete MethodInvocation(840)", "Delete Assignment: =(841)", "Delete ExpressionStatement(842)", "Delete SimpleName: c(843)", "Delete SimpleName: t(844)", "Delete SimpleName: s(845)", "Delete InfixExpression: /(846)", "Delete Assignment: =(847)", "Delete ExpressionStatement(848)", "Delete SimpleName: s(849)", "Delete SimpleName: pivot(850)", "Delete SimpleName: s(851)", "Delete InfixExpression: /(852)", "Delete Assignment: =(853)", "Delete ExpressionStatement(854)", "Delete SimpleName: t(855)", "Delete SimpleName: pivot(856)", "Delete SimpleName: pivot(857)", "Delete InfixExpression: *(858)", "Delete ParenthesizedExpression(859)", "Delete SimpleName: t(860)", "Delete InfixExpression: /(861)", "Delete Assignment: =(862)", "Delete ExpressionStatement(863)", "Delete SimpleName: y(864)", "Delete NumberLiteral: 0(865)", "Delete InfixExpression: <(866)", "Delete SimpleName: s(867)", "Delete SimpleName: s(868)", "Delete PrefixExpression: -(869)", "Delete Assignment: =(870)", "Delete ExpressionStatement(871)", "Delete SimpleName: t(872)", "Delete SimpleName: t(873)", "Delete PrefixExpression: -(874)", "Delete Assignment: =(875)", "Delete ExpressionStatement(876)", "Delete Block(877)", "Delete IfStatement(878)", "Delete SimpleName: put(879)", "Delete SimpleName: Put(880)", "Delete SimpleType: Put(881)", "Delete SimpleName: BytesUtil(882)", "Delete SimpleName: getRowIndex(883)", "Delete SimpleName: pivot_row(884)", "Delete MethodInvocation(885)", "Delete ClassInstanceCreation(886)", "Delete Assignment: =(887)", "Delete ExpressionStatement(888)", "Delete SimpleName: put(889)", "Delete SimpleName: add(890)", "Delete SimpleName: Bytes(891)", "Delete SimpleName: toBytes(892)", "Delete SimpleName: EICOL(893)", "Delete MethodInvocation(894)", "Delete SimpleName: Bytes(895)", "Delete SimpleName: toBytes(896)", "Delete SimpleName: String(897)", "Delete SimpleName: valueOf(898)", "Delete SimpleName: pivot_col(899)", "Delete MethodInvocation(900)", "Delete MethodInvocation(901)", "Delete SimpleName: Bytes(902)", "Delete SimpleName: toBytes(903)", "Delete NumberLiteral: 0.0(904)", "Delete MethodInvocation(905)", "Delete MethodInvocation(906)", "Delete ExpressionStatement(907)", "Delete SimpleName: table(908)", "Delete SimpleName: put(909)", "Delete SimpleName: put(910)", "Delete MethodInvocation(911)", "Delete ExpressionStatement(912)", "Delete SimpleName: state(913)", "Delete SimpleName: update(914)", "Delete SimpleName: pivot_row(915)", "Delete SimpleName: t(916)", "Delete PrefixExpression: -(917)", "Delete SimpleName: state(918)", "Delete MethodInvocation(919)", "Delete Assignment: =(920)", "Delete ExpressionStatement(921)", "Delete SimpleName: state(922)", "Delete SimpleName: update(923)", "Delete SimpleName: pivot_col(924)", "Delete SimpleName: t(925)", "Delete SimpleName: state(926)", "Delete MethodInvocation(927)", "Delete Assignment: =(928)", "Delete ExpressionStatement(929)", "Delete SimpleName: job(930)", "Delete SimpleName: Job(931)", "Delete SimpleType: Job(932)", "Delete SimpleName: conf(933)", "Delete StringLiteral: \"Rotation Matrix MR job\"(934)", "Delete SimpleName: m(935)", "Delete SimpleName: getPath(936)", "Delete MethodInvocation(937)", "Delete InfixExpression: +(938)", "Delete ClassInstanceCreation(939)", "Delete Assignment: =(940)", "Delete ExpressionStatement(941)", "Delete SimpleName: scan(942)", "Delete SimpleName: Scan(943)", "Delete SimpleType: Scan(944)", "Delete ClassInstanceCreation(945)", "Delete Assignment: =(946)", "Delete ExpressionStatement(947)", "Delete SimpleName: scan(948)", "Delete SimpleName: addFamily(949)", "Delete SimpleName: Bytes(950)", "Delete SimpleName: toBytes(951)", "Delete SimpleName: EI(952)", "Delete MethodInvocation(953)", "Delete MethodInvocation(954)", "Delete ExpressionStatement(955)", "Delete SimpleName: job(956)", "Delete SimpleName: getConfiguration(957)", "Delete MethodInvocation(958)", "Delete SimpleName: setInt(959)", "Delete SimpleName: PIVOTROW(960)", "Delete SimpleName: pivot_row(961)", "Delete MethodInvocation(962)", "Delete ExpressionStatement(963)", "Delete SimpleName: job(964)", "Delete SimpleName: getConfiguration(965)", "Delete MethodInvocation(966)", "Delete SimpleName: setInt(967)", "Delete SimpleName: PIVOTCOL(968)", "Delete SimpleName: pivot_col(969)", "Delete MethodInvocation(970)", "Delete ExpressionStatement(971)", "Delete SimpleName: job(972)", "Delete SimpleName: getConfiguration(973)", "Delete MethodInvocation(974)", "Delete SimpleName: set(975)", "Delete SimpleName: PIVOTSIN(976)", "Delete SimpleName: String(977)", "Delete SimpleName: valueOf(978)", "Delete SimpleName: s(979)", "Delete MethodInvocation(980)", "Delete MethodInvocation(981)", "Delete ExpressionStatement(982)", "Delete SimpleName: job(983)", "Delete SimpleName: getConfiguration(984)", "Delete MethodInvocation(985)", "Delete SimpleName: set(986)", "Delete SimpleName: PIVOTCOS(987)", "Delete SimpleName: String(988)", "Delete SimpleName: valueOf(989)", "Delete SimpleName: c(990)", "Delete MethodInvocation(991)", "Delete MethodInvocation(992)", "Delete ExpressionStatement(993)", "Delete SimpleName: job(994)", "Delete SimpleName: setInputFormatClass(995)", "Delete SimpleName: RotationInputFormat(996)", "Delete SimpleType: RotationInputFormat(997)", "Delete TypeLiteral(998)", "Delete MethodInvocation(999)", "Delete ExpressionStatement(1000)", "Delete SimpleName: job(1001)", "Delete SimpleName: setMapOutputKeyClass(1002)", "Delete SimpleName: NullWritable(1003)", "Delete SimpleType: NullWritable(1004)", "Delete TypeLiteral(1005)", "Delete MethodInvocation(1006)", "Delete ExpressionStatement(1007)", "Delete SimpleName: job(1008)", "Delete SimpleName: setMapOutputValueClass(1009)", "Delete SimpleName: NullWritable(1010)", "Delete SimpleType: NullWritable(1011)", "Delete TypeLiteral(1012)", "Delete MethodInvocation(1013)", "Delete ExpressionStatement(1014)", "Delete SimpleName: job(1015)", "Delete SimpleName: setMapperClass(1016)", "Delete SimpleName: DummyMapper(1017)", "Delete SimpleType: DummyMapper(1018)", "Delete TypeLiteral(1019)", "Delete MethodInvocation(1020)", "Delete ExpressionStatement(1021)", "Delete SimpleName: job(1022)", "Delete SimpleName: getConfiguration(1023)", "Delete MethodInvocation(1024)", "Delete SimpleName: set(1025)", "Delete QualifiedName: RotationInputFormat.INPUT_TABLE(1026)", "Delete SimpleName: m(1027)", "Delete SimpleName: getPath(1028)", "Delete MethodInvocation(1029)", "Delete MethodInvocation(1030)", "Delete ExpressionStatement(1031)", "Delete SimpleName: job(1032)", "Delete SimpleName: getConfiguration(1033)", "Delete MethodInvocation(1034)", "Delete SimpleName: set(1035)", "Delete QualifiedName: RotationInputFormat.SCAN(1036)", "Delete SimpleName: PivotInputFormat(1037)", "Delete SimpleName: convertScanToString(1038)", "Delete SimpleName: scan(1039)", "Delete MethodInvocation(1040)", "Delete MethodInvocation(1041)", "Delete ExpressionStatement(1042)", "Delete SimpleName: job(1043)", "Delete SimpleName: setOutputFormatClass(1044)", "Delete SimpleName: NullOutputFormat(1045)", "Delete SimpleType: NullOutputFormat(1046)", "Delete TypeLiteral(1047)", "Delete MethodInvocation(1048)", "Delete ExpressionStatement(1049)", "Delete SimpleName: job(1050)", "Delete SimpleName: waitForCompletion(1051)", "Delete BooleanLiteral: true(1052)", "Delete MethodInvocation(1053)", "Delete ExpressionStatement(1054)", "Delete Block(1055)", "Delete SimpleName: InterruptedException(1056)", "Delete SimpleType: InterruptedException(1057)", "Delete SimpleName: e(1058)", "Delete SingleVariableDeclaration(1059)", "Delete SimpleName: e(1060)", "Delete SimpleName: printStackTrace(1061)", "Delete MethodInvocation(1062)", "Delete ExpressionStatement(1063)", "Delete Block(1064)", "Delete CatchClause(1065)", "Delete SimpleName: ClassNotFoundException(1066)", "Delete SimpleType: ClassNotFoundException(1067)", "Delete SimpleName: e(1068)", "Delete SingleVariableDeclaration(1069)", "Delete SimpleName: e(1070)", "Delete SimpleName: printStackTrace(1071)", "Delete MethodInvocation(1072)", "Delete ExpressionStatement(1073)", "Delete Block(1074)", "Delete CatchClause(1075)", "Delete TryStatement(1076)", "Delete PrimitiveType: int(1077)", "Delete SimpleName: i(1078)", "Delete NumberLiteral: 0(1079)", "Delete VariableDeclarationFragment(1080)", "Delete VariableDeclarationExpression(1081)", "Delete SimpleName: i(1082)", "Delete SimpleName: size(1083)", "Delete InfixExpression: <(1084)", "Delete SimpleName: i(1085)", "Delete PostfixExpression: ++(1086)", "Delete SimpleName: get(1087)", "Delete SimpleName: Get(1088)", "Delete SimpleType: Get(1089)", "Delete SimpleName: BytesUtil(1090)", "Delete SimpleName: getRowIndex(1091)", "Delete SimpleName: pivot_row(1092)", "Delete MethodInvocation(1093)", "Delete ClassInstanceCreation(1094)", "Delete Assignment: =(1095)", "Delete ExpressionStatement(1096)", "Delete SimpleName: e1(1097)", "Delete SimpleName: Bytes(1098)", "Delete SimpleName: toDouble(1099)", "Delete SimpleName: table(1100)", "Delete SimpleName: get(1101)", "Delete SimpleName: get(1102)", "Delete MethodInvocation(1103)", "Delete SimpleName: getValue(1104)", "Delete SimpleName: Bytes(1105)", "Delete SimpleName: toBytes(1106)", "Delete SimpleName: EIVEC(1107)", "Delete MethodInvocation(1108)", "Delete SimpleName: Bytes(1109)", "Delete SimpleName: toBytes(1110)", "Delete SimpleName: String(1111)", "Delete SimpleName: valueOf(1112)", "Delete SimpleName: i(1113)", "Delete MethodInvocation(1114)", "Delete MethodInvocation(1115)", "Delete MethodInvocation(1116)", "Delete MethodInvocation(1117)", "Delete Assignment: =(1118)", "Delete ExpressionStatement(1119)", "Delete SimpleName: get(1120)", "Delete SimpleName: Get(1121)", "Delete SimpleType: Get(1122)", "Delete SimpleName: BytesUtil(1123)", "Delete SimpleName: getRowIndex(1124)", "Delete SimpleName: pivot_col(1125)", "Delete MethodInvocation(1126)", "Delete ClassInstanceCreation(1127)", "Delete Assignment: =(1128)", "Delete ExpressionStatement(1129)", "Delete SimpleName: e2(1130)", "Delete SimpleName: Bytes(1131)", "Delete SimpleName: toDouble(1132)", "Delete SimpleName: table(1133)", "Delete SimpleName: get(1134)", "Delete SimpleName: get(1135)", "Delete MethodInvocation(1136)", "Delete SimpleName: getValue(1137)", "Delete SimpleName: Bytes(1138)", "Delete SimpleName: toBytes(1139)", "Delete SimpleName: EIVEC(1140)", "Delete MethodInvocation(1141)", "Delete SimpleName: Bytes(1142)", "Delete SimpleName: toBytes(1143)", "Delete SimpleName: String(1144)", "Delete SimpleName: valueOf(1145)", "Delete SimpleName: i(1146)", "Delete MethodInvocation(1147)", "Delete MethodInvocation(1148)", "Delete MethodInvocation(1149)", "Delete MethodInvocation(1150)", "Delete Assignment: =(1151)", "Delete ExpressionStatement(1152)", "Delete PrimitiveType: double(1153)", "Delete SimpleName: pivotR(1154)", "Delete SimpleName: c(1155)", "Delete SimpleName: e1(1156)", "Delete InfixExpression: *(1157)", "Delete SimpleName: s(1158)", "Delete SimpleName: e2(1159)", "Delete InfixExpression: *(1160)", "Delete InfixExpression: -(1161)", "Delete ParenthesizedExpression(1162)", "Delete VariableDeclarationFragment(1163)", "Delete VariableDeclarationStatement(1164)", "Delete SimpleName: put(1165)", "Delete SimpleName: Put(1166)", "Delete SimpleType: Put(1167)", "Delete SimpleName: BytesUtil(1168)", "Delete SimpleName: getRowIndex(1169)", "Delete SimpleName: pivot_row(1170)", "Delete MethodInvocation(1171)", "Delete ClassInstanceCreation(1172)", "Delete Assignment: =(1173)", "Delete ExpressionStatement(1174)", "Delete SimpleName: put(1175)", "Delete SimpleName: add(1176)", "Delete SimpleName: Bytes(1177)", "Delete SimpleName: toBytes(1178)", "Delete SimpleName: EIVEC(1179)", "Delete MethodInvocation(1180)", "Delete SimpleName: Bytes(1181)", "Delete SimpleName: toBytes(1182)", "Delete SimpleName: String(1183)", "Delete SimpleName: valueOf(1184)", "Delete SimpleName: i(1185)", "Delete MethodInvocation(1186)", "Delete MethodInvocation(1187)", "Delete SimpleName: Bytes(1188)", "Delete SimpleName: toBytes(1189)", "Delete SimpleName: pivotR(1190)", "Delete MethodInvocation(1191)", "Delete MethodInvocation(1192)", "Delete ExpressionStatement(1193)", "Delete SimpleName: table(1194)", "Delete SimpleName: put(1195)", "Delete SimpleName: put(1196)", "Delete MethodInvocation(1197)", "Delete ExpressionStatement(1198)", "Delete PrimitiveType: double(1199)", "Delete SimpleName: eivC(1200)", "Delete SimpleName: s(1201)", "Delete SimpleName: e1(1202)", "Delete InfixExpression: *(1203)", "Delete SimpleName: c(1204)", "Delete SimpleName: e2(1205)", "Delete InfixExpression: *(1206)", "Delete InfixExpression: +(1207)", "Delete ParenthesizedExpression(1208)", "Delete VariableDeclarationFragment(1209)", "Delete VariableDeclarationStatement(1210)", "Delete SimpleName: put(1211)", "Delete SimpleName: Put(1212)", "Delete SimpleType: Put(1213)", "Delete SimpleName: BytesUtil(1214)", "Delete SimpleName: getRowIndex(1215)", "Delete SimpleName: pivot_col(1216)", "Delete MethodInvocation(1217)", "Delete ClassInstanceCreation(1218)", "Delete Assignment: =(1219)", "Delete ExpressionStatement(1220)", "Delete SimpleName: put(1221)", "Delete SimpleName: add(1222)", "Delete SimpleName: Bytes(1223)", "Delete SimpleName: toBytes(1224)", "Delete SimpleName: EIVEC(1225)", "Delete MethodInvocation(1226)", "Delete SimpleName: Bytes(1227)", "Delete SimpleName: toBytes(1228)", "Delete SimpleName: String(1229)", "Delete SimpleName: valueOf(1230)", "Delete SimpleName: i(1231)", "Delete MethodInvocation(1232)", "Delete MethodInvocation(1233)", "Delete SimpleName: Bytes(1234)", "Delete SimpleName: toBytes(1235)", "Delete SimpleName: eivC(1236)", "Delete MethodInvocation(1237)", "Delete MethodInvocation(1238)", "Delete ExpressionStatement(1239)", "Delete SimpleName: table(1240)", "Delete SimpleName: put(1241)", "Delete SimpleName: put(1242)", "Delete MethodInvocation(1243)", "Delete ExpressionStatement(1244)", "Delete Block(1245)", "Delete ForStatement(1246)", "Delete SimpleName: maxind(1247)", "Delete SimpleName: pivot_row(1248)", "Delete SimpleName: size(1249)", "Delete MethodInvocation(1250)", "Delete ExpressionStatement(1251)", "Delete SimpleName: maxind(1252)", "Delete SimpleName: pivot_col(1253)", "Delete SimpleName: size(1254)", "Delete MethodInvocation(1255)", "Delete ExpressionStatement(1256)", "Delete Block(1257)", "Delete WhileStatement(1258)", "Delete Block(1259)", "Delete MethodDeclaration(1260)", "Delete Modifier: static(1261)", "Delete PrimitiveType: void(1262)", "Delete SimpleName: maxind(1263)", "Delete PrimitiveType: int(1264)", "Delete SimpleName: row(1265)", "Delete SingleVariableDeclaration(1266)", "Delete PrimitiveType: int(1267)", "Delete SimpleName: size(1268)", "Delete SingleVariableDeclaration(1269)", "Delete SimpleName: IOException(1270)", "Delete SimpleType: IOException(1271)", "Delete PrimitiveType: int(1272)", "Delete SimpleName: m(1273)", "Delete SimpleName: row(1274)", "Delete NumberLiteral: 1(1275)", "Delete InfixExpression: +(1276)", "Delete VariableDeclarationFragment(1277)", "Delete VariableDeclarationStatement(1278)", "Delete SimpleName: Get(1279)", "Delete SimpleType: Get(1280)", "Delete SimpleName: get(1281)", "Delete NullLiteral(1282)", "Delete VariableDeclarationFragment(1283)", "Delete VariableDeclarationStatement(1284)", "Delete SimpleName: row(1285)", "Delete NumberLiteral: 2(1286)", "Delete InfixExpression: +(1287)", "Delete SimpleName: size(1288)", "Delete InfixExpression: <(1289)", "Delete SimpleName: get(1290)", "Delete SimpleName: Get(1291)", "Delete SimpleType: Get(1292)", "Delete SimpleName: BytesUtil(1293)", "Delete SimpleName: getRowIndex(1294)", "Delete SimpleName: row(1295)", "Delete MethodInvocation(1296)", "Delete ClassInstanceCreation(1297)", "Delete Assignment: =(1298)", "Delete ExpressionStatement(1299)", "Delete PrimitiveType: double(1300)", "Delete SimpleName: max(1301)", "Delete SimpleName: Bytes(1302)", "Delete SimpleName: toDouble(1303)", "Delete SimpleName: table(1304)", "Delete SimpleName: get(1305)", "Delete SimpleName: get(1306)", "Delete MethodInvocation(1307)", "Delete SimpleName: getValue(1308)", "Delete SimpleName: Bytes(1309)", "Delete SimpleName: toBytes(1310)", "Delete SimpleName: EICOL(1311)", "Delete MethodInvocation(1312)", "Delete SimpleName: Bytes(1313)", "Delete SimpleName: toBytes(1314)", "Delete SimpleName: String(1315)", "Delete SimpleName: valueOf(1316)", "Delete SimpleName: m(1317)", "Delete MethodInvocation(1318)", "Delete MethodInvocation(1319)", "Delete MethodInvocation(1320)", "Delete MethodInvocation(1321)", "Delete VariableDeclarationFragment(1322)", "Delete VariableDeclarationStatement(1323)", "Delete PrimitiveType: double(1324)", "Delete SimpleName: val(1325)", "Delete VariableDeclarationFragment(1326)", "Delete VariableDeclarationStatement(1327)", "Delete PrimitiveType: int(1328)", "Delete SimpleName: i(1329)", "Delete SimpleName: row(1330)", "Delete NumberLiteral: 2(1331)", "Delete InfixExpression: +(1332)", "Delete VariableDeclarationFragment(1333)", "Delete VariableDeclarationExpression(1334)", "Delete SimpleName: i(1335)", "Delete SimpleName: size(1336)", "Delete InfixExpression: <(1337)", "Delete SimpleName: i(1338)", "Delete PostfixExpression: ++(1339)", "Delete SimpleName: get(1340)", "Delete SimpleName: Get(1341)", "Delete SimpleType: Get(1342)", "Delete SimpleName: BytesUtil(1343)", "Delete SimpleName: getRowIndex(1344)", "Delete SimpleName: row(1345)", "Delete MethodInvocation(1346)", "Delete ClassInstanceCreation(1347)", "Delete Assignment: =(1348)", "Delete ExpressionStatement(1349)", "Delete SimpleName: val(1350)", "Delete SimpleName: Bytes(1351)", "Delete SimpleName: toDouble(1352)", "Delete SimpleName: table(1353)", "Delete SimpleName: get(1354)", "Delete SimpleName: get(1355)", "Delete MethodInvocation(1356)", "Delete SimpleName: getValue(1357)", "Delete SimpleName: Bytes(1358)", "Delete SimpleName: toBytes(1359)", "Delete SimpleName: EICOL(1360)", "Delete MethodInvocation(1361)", "Delete SimpleName: Bytes(1362)", "Delete SimpleName: toBytes(1363)", "Delete SimpleName: String(1364)", "Delete SimpleName: valueOf(1365)", "Delete SimpleName: i(1366)", "Delete MethodInvocation(1367)", "Delete MethodInvocation(1368)", "Delete MethodInvocation(1369)", "Delete MethodInvocation(1370)", "Delete Assignment: =(1371)", "Delete ExpressionStatement(1372)", "Delete SimpleName: Math(1373)", "Delete SimpleName: abs(1374)", "Delete SimpleName: val(1375)", "Delete MethodInvocation(1376)", "Delete SimpleName: Math(1377)", "Delete SimpleName: abs(1378)", "Delete SimpleName: max(1379)", "Delete MethodInvocation(1380)", "Delete InfixExpression: >(1381)", "Delete SimpleName: m(1382)", "Delete SimpleName: i(1383)", "Delete Assignment: =(1384)", "Delete ExpressionStatement(1385)", "Delete SimpleName: max(1386)", "Delete SimpleName: val(1387)", "Delete Assignment: =(1388)", "Delete ExpressionStatement(1389)", "Delete Block(1390)", "Delete IfStatement(1391)", "Delete Block(1392)", "Delete ForStatement(1393)", "Delete Block(1394)", "Delete IfStatement(1395)", "Delete SimpleName: Put(1396)", "Delete SimpleType: Put(1397)", "Delete SimpleName: put(1398)", "Delete SimpleName: Put(1399)", "Delete SimpleType: Put(1400)", "Delete SimpleName: BytesUtil(1401)", "Delete SimpleName: getRowIndex(1402)", "Delete SimpleName: row(1403)", "Delete MethodInvocation(1404)", "Delete ClassInstanceCreation(1405)", "Delete VariableDeclarationFragment(1406)", "Delete VariableDeclarationStatement(1407)", "Delete SimpleName: put(1408)", "Delete SimpleName: add(1409)", "Delete SimpleName: Bytes(1410)", "Delete SimpleName: toBytes(1411)", "Delete SimpleName: EI(1412)", "Delete MethodInvocation(1413)", "Delete SimpleName: Bytes(1414)", "Delete SimpleName: toBytes(1415)", "Delete StringLiteral: \"ind\"(1416)", "Delete MethodInvocation(1417)", "Delete SimpleName: Bytes(1418)", "Delete SimpleName: toBytes(1419)", "Delete SimpleName: String(1420)", "Delete SimpleName: valueOf(1421)", "Delete SimpleName: m(1422)", "Delete MethodInvocation(1423)", "Delete MethodInvocation(1424)", "Delete MethodInvocation(1425)", "Delete ExpressionStatement(1426)", "Delete SimpleName: table(1427)", "Delete SimpleName: put(1428)", "Delete SimpleName: put(1429)", "Delete MethodInvocation(1430)", "Delete ExpressionStatement(1431)", "Delete Block(1432)", "Delete MethodDeclaration(1433)", "Delete Modifier: static(1434)", "Delete PrimitiveType: int(1435)", "Delete SimpleName: update(1436)", "Delete PrimitiveType: int(1437)", "Delete SimpleName: row(1438)", "Delete SingleVariableDeclaration(1439)", "Delete PrimitiveType: double(1440)", "Delete SimpleName: value(1441)", "Delete SingleVariableDeclaration(1442)", "Delete PrimitiveType: int(1443)", "Delete SimpleName: state(1444)", "Delete SingleVariableDeclaration(1445)", "Delete SimpleName: IOException(1446)", "Delete SimpleType: IOException(1447)", "Delete SimpleName: Get(1448)", "Delete SimpleType: Get(1449)", "Delete SimpleName: get(1450)", "Delete SimpleName: Get(1451)", "Delete SimpleType: Get(1452)", "Delete SimpleName: BytesUtil(1453)", "Delete SimpleName: getRowIndex(1454)", "Delete SimpleName: row(1455)", "Delete MethodInvocation(1456)", "Delete ClassInstanceCreation(1457)", "Delete VariableDeclarationFragment(1458)", "Delete VariableDeclarationStatement(1459)", "Delete PrimitiveType: double(1460)", "Delete SimpleName: e(1461)", "Delete SimpleName: Bytes(1462)", "Delete SimpleName: toDouble(1463)", "Delete SimpleName: table(1464)", "Delete SimpleName: get(1465)", "Delete SimpleName: get(1466)", "Delete MethodInvocation(1467)", "Delete SimpleName: getValue(1468)", "Delete SimpleName: Bytes(1469)", "Delete SimpleName: toBytes(1470)", "Delete SimpleName: EI(1471)", "Delete MethodInvocation(1472)", "Delete SimpleName: Bytes(1473)", "Delete SimpleName: toBytes(1474)", "Delete SimpleName: EIVAL(1475)", "Delete MethodInvocation(1476)", "Delete MethodInvocation(1477)", "Delete MethodInvocation(1478)", "Delete VariableDeclarationFragment(1479)", "Delete VariableDeclarationStatement(1480)", "Delete PrimitiveType: int(1481)", "Delete SimpleName: changed(1482)", "Delete SimpleName: BytesUtil(1483)", "Delete SimpleName: bytesToInt(1484)", "Delete SimpleName: table(1485)", "Delete SimpleName: get(1486)", "Delete SimpleName: get(1487)", "Delete MethodInvocation(1488)", "Delete SimpleName: getValue(1489)", "Delete SimpleName: Bytes(1490)", "Delete SimpleName: toBytes(1491)", "Delete SimpleName: EI(1492)", "Delete MethodInvocation(1493)", "Delete SimpleName: Bytes(1494)", "Delete SimpleName: toBytes(1495)", "Delete StringLiteral: \"changed\"(1496)", "Delete MethodInvocation(1497)", "Delete MethodInvocation(1498)", "Delete MethodInvocation(1499)", "Delete VariableDeclarationFragment(1500)", "Delete VariableDeclarationStatement(1501)", "Delete PrimitiveType: double(1502)", "Delete SimpleName: y(1503)", "Delete SimpleName: e(1504)", "Delete VariableDeclarationFragment(1505)", "Delete VariableDeclarationStatement(1506)", "Delete SimpleName: e(1507)", "Delete SimpleName: value(1508)", "Delete Assignment: +=(1509)", "Delete ExpressionStatement(1510)", "Delete SimpleName: Put(1511)", "Delete SimpleType: Put(1512)", "Delete SimpleName: put(1513)", "Delete SimpleName: Put(1514)", "Delete SimpleType: Put(1515)", "Delete SimpleName: BytesUtil(1516)", "Delete SimpleName: getRowIndex(1517)", "Delete SimpleName: row(1518)", "Delete MethodInvocation(1519)", "Delete ClassInstanceCreation(1520)", "Delete VariableDeclarationFragment(1521)", "Delete VariableDeclarationStatement(1522)", "Delete SimpleName: put(1523)", "Delete SimpleName: add(1524)", "Delete SimpleName: Bytes(1525)", "Delete SimpleName: toBytes(1526)", "Delete SimpleName: EI(1527)", "Delete MethodInvocation(1528)", "Delete SimpleName: Bytes(1529)", "Delete SimpleName: toBytes(1530)", "Delete SimpleName: EIVAL(1531)", "Delete MethodInvocation(1532)", "Delete SimpleName: Bytes(1533)", "Delete SimpleName: toBytes(1534)", "Delete SimpleName: e(1535)", "Delete MethodInvocation(1536)", "Delete MethodInvocation(1537)", "Delete ExpressionStatement(1538)", "Delete SimpleName: changed(1539)", "Delete NumberLiteral: 1(1540)", "Delete InfixExpression: ==(1541)", "Delete SimpleName: Math(1542)", "Delete SimpleName: abs(1543)", "Delete SimpleName: y(1544)", "Delete SimpleName: e(1545)", "Delete InfixExpression: -(1546)", "Delete MethodInvocation(1547)", "Delete NumberLiteral: .0000001(1548)", "Delete InfixExpression: <(1549)", "Delete ParenthesizedExpression(1550)", "Delete InfixExpression: &&(1551)", "Delete SimpleName: changed(1552)", "Delete NumberLiteral: 0(1553)", "Delete Assignment: =(1554)", "Delete ExpressionStatement(1555)", "Delete SimpleName: put(1556)", "Delete SimpleName: add(1557)", "Delete SimpleName: Bytes(1558)", "Delete SimpleName: toBytes(1559)", "Delete SimpleName: EI(1560)", "Delete MethodInvocation(1561)", "Delete SimpleName: Bytes(1562)", "Delete SimpleName: toBytes(1563)", "Delete SimpleName: EICHANGED(1564)", "Delete MethodInvocation(1565)", "Delete SimpleName: Bytes(1566)", "Delete SimpleName: toBytes(1567)", "Delete SimpleName: String(1568)", "Delete SimpleName: valueOf(1569)", "Delete SimpleName: changed(1570)", "Delete MethodInvocation(1571)", "Delete MethodInvocation(1572)", "Delete MethodInvocation(1573)", "Delete ExpressionStatement(1574)", "Delete SimpleName: state(1575)", "Delete PostfixExpression: --(1576)", "Delete ExpressionStatement(1577)", "Delete Block(1578)", "Delete SimpleName: changed(1579)", "Delete NumberLiteral: 0(1580)", "Delete InfixExpression: ==(1581)", "Delete SimpleName: Math(1582)", "Delete SimpleName: abs(1583)", "Delete SimpleName: y(1584)", "Delete SimpleName: e(1585)", "Delete InfixExpression: -(1586)", "Delete MethodInvocation(1587)", "Delete NumberLiteral: .0000001(1588)", "Delete InfixExpression: >(1589)", "Delete ParenthesizedExpression(1590)", "Delete InfixExpression: &&(1591)", "Delete SimpleName: changed(1592)", "Delete NumberLiteral: 1(1593)", "Delete Assignment: =(1594)", "Delete ExpressionStatement(1595)", "Delete SimpleName: put(1596)", "Delete SimpleName: add(1597)", "Delete SimpleName: Bytes(1598)", "Delete SimpleName: toBytes(1599)", "Delete SimpleName: EI(1600)", "Delete MethodInvocation(1601)", "Delete SimpleName: Bytes(1602)", "Delete SimpleName: toBytes(1603)", "Delete SimpleName: EICHANGED(1604)", "Delete MethodInvocation(1605)", "Delete SimpleName: Bytes(1606)", "Delete SimpleName: toBytes(1607)", "Delete SimpleName: String(1608)", "Delete SimpleName: valueOf(1609)", "Delete SimpleName: changed(1610)", "Delete MethodInvocation(1611)", "Delete MethodInvocation(1612)", "Delete MethodInvocation(1613)", "Delete ExpressionStatement(1614)", "Delete SimpleName: state(1615)", "Delete PostfixExpression: ++(1616)", "Delete ExpressionStatement(1617)", "Delete Block(1618)", "Delete IfStatement(1619)", "Delete IfStatement(1620)", "Delete SimpleName: table(1621)", "Delete SimpleName: put(1622)", "Delete SimpleName: put(1623)", "Delete MethodInvocation(1624)", "Delete ExpressionStatement(1625)", "Delete SimpleName: state(1626)", "Delete ReturnStatement(1627)", "Delete Block(1628)", "Delete MethodDeclaration(1629)", "Delete Modifier: static(1630)", "Delete PrimitiveType: boolean(1631)", "Delete SimpleName: verifyEigenValue(1632)", "Delete PrimitiveType: double(1633)", "Delete Dimension(1634)", "Delete ArrayType: double[](1635)", "Delete SimpleName: e(1636)", "Delete SingleVariableDeclaration(1637)", "Delete PrimitiveType: double(1638)", "Delete Dimension(1639)", "Delete Dimension(1640)", "Delete ArrayType: double[][](1641)", "Delete SimpleName: E(1642)", "Delete SingleVariableDeclaration(1643)", "Delete SimpleName: IOException(1644)", "Delete SimpleType: IOException(1645)", "Delete PrimitiveType: boolean(1646)", "Delete SimpleName: success(1647)", "Delete BooleanLiteral: true(1648)", "Delete VariableDeclarationFragment(1649)", "Delete VariableDeclarationStatement(1650)", "Delete PrimitiveType: double(1651)", "Delete SimpleName: e1(1652)", "Delete VariableDeclarationFragment(1653)", "Delete SimpleName: ev(1654)", "Delete VariableDeclarationFragment(1655)", "Delete VariableDeclarationStatement(1656)", "Delete SimpleName: Get(1657)", "Delete SimpleType: Get(1658)", "Delete SimpleName: get(1659)", "Delete NullLiteral(1660)", "Delete VariableDeclarationFragment(1661)", "Delete VariableDeclarationStatement(1662)", "Delete PrimitiveType: int(1663)", "Delete SimpleName: i(1664)", "Delete NumberLiteral: 0(1665)", "Delete VariableDeclarationFragment(1666)", "Delete VariableDeclarationExpression(1667)", "Delete SimpleName: i(1668)", "Delete QualifiedName: e.length(1669)", "Delete InfixExpression: <(1670)", "Delete SimpleName: i(1671)", "Delete PostfixExpression: ++(1672)", "Delete SimpleName: get(1673)", "Delete SimpleName: Get(1674)", "Delete SimpleType: Get(1675)", "Delete SimpleName: BytesUtil(1676)", "Delete SimpleName: getRowIndex(1677)", "Delete SimpleName: i(1678)", "Delete MethodInvocation(1679)", "Delete ClassInstanceCreation(1680)", "Delete Assignment: =(1681)", "Delete ExpressionStatement(1682)", "Delete SimpleName: e1(1683)", "Delete SimpleName: Bytes(1684)", "Delete SimpleName: toDouble(1685)", "Delete SimpleName: table(1686)", "Delete SimpleName: get(1687)", "Delete SimpleName: get(1688)", "Delete MethodInvocation(1689)", "Delete SimpleName: getValue(1690)", "Delete SimpleName: Bytes(1691)", "Delete SimpleName: toBytes(1692)", "Delete SimpleName: EI(1693)", "Delete MethodInvocation(1694)", "Delete SimpleName: Bytes(1695)", "Delete SimpleName: toBytes(1696)", "Delete SimpleName: EIVAL(1697)", "Delete MethodInvocation(1698)", "Delete MethodInvocation(1699)", "Delete MethodInvocation(1700)", "Delete Assignment: =(1701)", "Delete ExpressionStatement(1702)", "Delete SimpleName: success(1703)", "Delete SimpleName: Math(1704)", "Delete SimpleName: abs(1705)", "Delete SimpleName: e1(1706)", "Delete SimpleName: e(1707)", "Delete SimpleName: i(1708)", "Delete ArrayAccess(1709)", "Delete InfixExpression: -(1710)", "Delete MethodInvocation(1711)", "Delete NumberLiteral: .0000001(1712)", "Delete InfixExpression: <(1713)", "Delete ParenthesizedExpression(1714)", "Delete ParenthesizedExpression(1715)", "Delete Assignment: &=(1716)", "Delete ExpressionStatement(1717)", "Delete SimpleName: success(1718)", "Delete PrefixExpression: !(1719)", "Delete SimpleName: success(1720)", "Delete ReturnStatement(1721)", "Delete IfStatement(1722)", "Delete PrimitiveType: int(1723)", "Delete SimpleName: j(1724)", "Delete NumberLiteral: 0(1725)", "Delete VariableDeclarationFragment(1726)", "Delete VariableDeclarationExpression(1727)", "Delete SimpleName: j(1728)", "Delete SimpleName: E(1729)", "Delete SimpleName: i(1730)", "Delete ArrayAccess(1731)", "Delete SimpleName: length(1732)", "Delete FieldAccess(1733)", "Delete InfixExpression: <(1734)", "Delete SimpleName: j(1735)", "Delete PostfixExpression: ++(1736)", "Delete SimpleName: get(1737)", "Delete SimpleName: Get(1738)", "Delete SimpleType: Get(1739)", "Delete SimpleName: BytesUtil(1740)", "Delete SimpleName: getRowIndex(1741)", "Delete SimpleName: i(1742)", "Delete MethodInvocation(1743)", "Delete ClassInstanceCreation(1744)", "Delete Assignment: =(1745)", "Delete ExpressionStatement(1746)", "Delete SimpleName: ev(1747)", "Delete SimpleName: Bytes(1748)", "Delete SimpleName: toDouble(1749)", "Delete SimpleName: table(1750)", "Delete SimpleName: get(1751)", "Delete SimpleName: get(1752)", "Delete MethodInvocation(1753)", "Delete SimpleName: getValue(1754)", "Delete SimpleName: Bytes(1755)", "Delete SimpleName: toBytes(1756)", "Delete SimpleName: EIVEC(1757)", "Delete MethodInvocation(1758)", "Delete SimpleName: Bytes(1759)", "Delete SimpleName: toBytes(1760)", "Delete SimpleName: String(1761)", "Delete SimpleName: valueOf(1762)", "Delete SimpleName: j(1763)", "Delete MethodInvocation(1764)", "Delete MethodInvocation(1765)", "Delete MethodInvocation(1766)", "Delete MethodInvocation(1767)", "Delete Assignment: =(1768)", "Delete ExpressionStatement(1769)", "Delete SimpleName: success(1770)", "Delete SimpleName: Math(1771)", "Delete SimpleName: abs(1772)", "Delete SimpleName: ev(1773)", "Delete SimpleName: E(1774)", "Delete SimpleName: i(1775)", "Delete ArrayAccess(1776)", "Delete SimpleName: j(1777)", "Delete ArrayAccess(1778)", "Delete InfixExpression: -(1779)", "Delete MethodInvocation(1780)", "Delete NumberLiteral: .0000001(1781)", "Delete InfixExpression: <(1782)", "Delete ParenthesizedExpression(1783)", "Delete ParenthesizedExpression(1784)", "Delete Assignment: &=(1785)", "Delete ExpressionStatement(1786)", "Delete SimpleName: success(1787)", "Delete PrefixExpression: !(1788)", "Delete SimpleName: success(1789)", "Delete ReturnStatement(1790)", "Delete IfStatement(1791)", "Delete Block(1792)", "Delete ForStatement(1793)", "Delete Block(1794)", "Delete ForStatement(1795)", "Delete SimpleName: success(1796)", "Delete ReturnStatement(1797)", "Delete Block(1798)", "Delete MethodDeclaration(1799)", "Delete TypeDeclaration: class(1800)"]}}, {"MatrixMultiplication_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: limitations under the License.", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TagElement", "DEL PackageDeclaration", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: distributed with this work for additional information", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: to you under the Apache License, Version 2.0 (the"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Iterator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HTableDescriptor"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Scan", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.BytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Job", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaAdmin"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdminImpl", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce.BlockID"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.BlockMultMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce.BlockMultReduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.DenseMatrixVectorMultMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.DenseMatrixVectorMultReduce", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.Matrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.RandomVariable"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TextElement:  C", "DEL TextElement: C = A*B using iterative method", "DEL SimpleName: Job", "DEL SimpleType: List", "DEL PrimitiveType: boolean", "DEL SimpleName: A", "DEL TypeLiteral", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: matrixA", "DEL VariableDeclarationFragment", "DEL SimpleName: getPath", "DEL InfixExpression: ==", "DEL PrefixExpression: !", "DEL SimpleName: setBoolean", "DEL TagElement: @throws", "DEL VariableDeclarationStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: println", "DEL SimpleName: result", "DEL SimpleName: mult", "DEL SimpleName: getConfiguration", "DEL SimpleName: a", "DEL SimpleType: BlockID", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: blocks", "DEL SimpleType: Matrix", "DEL Block", "DEL SimpleName: matrixA", "DEL SimpleName: columns", "DEL SimpleType: List", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: Job", "DEL SimpleName: String", "DEL SimpleName: IOException", "DEL SimpleName: e", "DEL SimpleName: List", "DEL SimpleName: job", "DEL SimpleName: allTrue", "DEL SimpleName: result", "DEL SimpleName: e", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: TableMapReduceUtil", "DEL ExpressionStatement", "DEL SimpleType: HamaAdminImpl", "DEL PostfixExpression: ++", "DEL SimpleType: Job", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleType: AbstractExample", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleName: getConfiguration", "DEL SimpleName: valueOf", "DEL SimpleName: getColumns", "DEL PrefixExpression: -", "DEL Block", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Iterator", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL SimpleName: TableMapReduceUtil", "DEL VariableDeclarationFragment", "DEL SimpleName: jobId", "DEL SimpleType: DenseMatrix", "DEL SimpleName: blockNum", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL NumberLiteral: 2", "DEL MethodInvocation", "DEL SimpleName: println", "DEL SimpleName: admin", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: HamaAdminImpl", "DEL SimpleType: Job", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: jobId", "DEL Javadoc", "DEL SimpleType: Matrix", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SimpleName: block_size", "DEL QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksMapper", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: i", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: DenseMatrix", "DEL TryStatement", "DEL SimpleName: waitForCompletion", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL TextElement:  the number of blocks", "DEL Modifier: public", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL SimpleType: Scan", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL SimpleName: DenseMatrix", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: printStackTrace", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: args", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleType: org.apache.hama.examples.mapreduce.CollectBlocksMapper", "DEL TypeLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: ARGS", "DEL QualifiedName: System.out", "DEL SimpleName: checkAllJobs", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleType: String", "DEL SimpleType: IOException", "DEL Block", "DEL SimpleName: job", "DEL TryStatement", "DEL VariableDeclarationStatement", "DEL CatchClause", "DEL SimpleName: next", "DEL SimpleType: IOException", "DEL QualifiedName: CollectBlocksMapper.MATRIX_POS", "DEL SimpleType: HTableDescriptor", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL BooleanLiteral: true", "DEL SimpleName: mult", "DEL MethodInvocation", "DEL SimpleName: pow", "DEL SimpleName: DenseMatrixVectorMultReduce", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: InterruptedException", "DEL SimpleName: parseInt", "DEL SimpleName: conf", "DEL SimpleName: delete", "DEL TryStatement", "DEL StringLiteral: \"...\"", "DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean", "DEL ParameterizedType: List<Job>", "DEL SimpleType: Iterator", "DEL SimpleName: isComplete", "DEL SimpleName: bool", "DEL CatchClause", "DEL SimpleName: BlockMultReduce", "DEL Block", "DEL SimpleType: ClassNotFoundException", "DEL MethodInvocation", "DEL SimpleName: Scan", "DEL SimpleName: Job", "DEL ExpressionStatement", "DEL SimpleType: DenseMatrix", "DEL VariableDeclarationStatement", "DEL BooleanLiteral: false", "DEL SimpleType: MapWritable", "DEL SimpleType: DenseMatrix", "DEL SimpleName: e", "DEL SimpleName: toBytes", "DEL SimpleName: job", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL SimpleName: m", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: b", "DEL SimpleName: getConfiguration", "DEL StringLiteral: \"A's columns should equal with B's rows while A*B.\"", "DEL SimpleName: collectBlocksMapRed", "DEL SimpleName: IOException", "DEL SimpleName: jobId", "DEL SimpleName: parseArgs", "DEL TextElement: C = A * B using Blocking algorithm", "DEL Assignment: =", "DEL SimpleName: printStackTrace", "DEL SimpleName: initTableMapperJob", "DEL SimpleName: collectionTable", "DEL SimpleName: columns", "DEL SimpleType: Scan", "DEL TagElement: @throws", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: addFamily", "DEL SimpleName: main", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleName: A", "DEL SimpleName: conf", "DEL SimpleName: m", "DEL SimpleType: Job", "DEL SimpleName: a", "DEL SimpleName: m", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: getRows", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: DenseMatrix", "DEL IfStatement", "DEL SimpleName: ClassNotFoundException", "DEL Modifier: static", "DEL SimpleType: InterruptedException", "DEL SimpleName: valueOf", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL SimpleName: e", "DEL SimpleName: printStackTrace", "DEL SimpleName: Matrix", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL SimpleName: blocks", "DEL SimpleName: result", "DEL SimpleName: setInt", "DEL SimpleName: Matrix", "DEL SimpleName: getRows", "DEL ExpressionStatement", "DEL WhileStatement", "DEL ExpressionStatement", "DEL QualifiedName: System.out", "DEL SimpleName: e", "DEL SimpleName: jobId", "DEL SimpleName: BytesWritable", "DEL QualifiedName: CollectBlocksMapper.ROWS", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleType: MapWritable", "DEL MethodInvocation", "DEL TagElement", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL BooleanLiteral: false", "DEL SimpleType: String", "DEL TypeLiteral", "DEL SimpleName: blocks", "DEL SimpleName: initTableMapperJob", "DEL VariableDeclarationExpression", "DEL Dimension", "DEL ExpressionStatement", "DEL SimpleName: matrixB", "DEL SimpleName: TableMapReduceUtil", "DEL TypeLiteral", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL SimpleName: B", "DEL SimpleName: initTableMapperJob", "DEL SimpleName: randMatrixPath", "DEL TagElement: @throws", "DEL SimpleName: collectionTable", "DEL SimpleName: HColumnDescriptor", "DEL SimpleName: scan", "DEL SimpleName: initTableReducerJob", "DEL NullLiteral", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: blocks", "DEL SimpleType: Matrix", "DEL ClassInstanceCreation", "DEL TextElement:  C", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: B", "DEL SimpleName: IOException", "DEL SimpleName: job", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: result", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: getRows", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL Block", "DEL PrefixExpression: !", "DEL SimpleName: job", "DEL SimpleName: Math", "DEL SimpleName: HBaseAdmin", "DEL Modifier: static", "DEL SimpleName: scan", "DEL SimpleName: HamaAdminImpl", "DEL TagElement: @param", "DEL TagElement: @return", "DEL SimpleName: IOException", "DEL Modifier: static", "DEL SimpleName: scan", "DEL VariableDeclarationStatement", "DEL SimpleName: job", "DEL SimpleName: collectBlocksMapRed", "DEL SimpleName: job", "DEL SimpleName: job", "DEL SimpleName: InterruptedException", "DEL ParameterizedType: ArrayList<Job>", "DEL SimpleName: TableMapReduceUtil", "DEL ExpressionStatement", "DEL SimpleName: B", "DEL SimpleType: Scan", "DEL NumberLiteral: 1", "DEL SimpleName: collectionTable", "DEL PrimitiveType: int", "DEL SimpleName: m", "DEL SimpleName: blockNum", "DEL ForStatement", "DEL SimpleName: e", "DEL QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksReducer", "DEL CastExpression", "DEL PrimitiveType: double", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL SimpleType: Matrix", "DEL PrimitiveType: int", "DEL SimpleName: println", "DEL SingleVariableDeclaration", "DEL SimpleName: ensureForMultiplication", "DEL SimpleName: bool", "DEL QualifiedName: args.length", "DEL SimpleName: scan", "DEL SimpleName: InterruptedException", "DEL Block", "DEL StringLiteral: \"can't divide.\"", "DEL SimpleName: endsWith", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: collectionTable", "DEL ClassInstanceCreation", "DEL SimpleName: job", "DEL SimpleType: HTableDescriptor", "DEL SimpleType: DenseMatrixVectorMultReduce", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleName: IOException", "DEL TextElement:  a input path", "DEL MethodDeclaration", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL SimpleName: System", "DEL SimpleName: HamaAdmin", "DEL SimpleName: Job", "DEL SimpleName: BlockMultMap", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL Block", "DEL SimpleName: result", "DEL StringLiteral: \".0\"", "DEL SimpleName: job", "DEL MethodInvocation", "DEL TypeLiteral", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: A", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Scan", "DEL SimpleName: e", "DEL TypeDeclaration: class", "DEL NumberLiteral: 1", "DEL SimpleType: Scan", "DEL MethodInvocation", "DEL TextElement:  the collection table", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL Javadoc", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL SimpleName: createTable", "DEL SimpleName: result", "DEL SimpleName: waitForCompletion", "DEL ExpressionStatement", "DEL SimpleType: IntWritable", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: size", "DEL SimpleName: IOException", "DEL Modifier: static", "DEL SimpleName: a", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: c", "DEL SimpleType: Matrix", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL ArrayType: String[]", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: ArrayList", "DEL TypeLiteral", "DEL SimpleName: ARGS", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL SimpleName: blockNum", "DEL InfixExpression: +", "DEL SimpleType: Matrix", "DEL SimpleType: Job", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: InterruptedException", "DEL ClassInstanceCreation", "DEL StringLiteral: \"multiplication MR job : \"", "DEL SimpleName: getPath", "DEL VariableDeclarationFragment", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL InfixExpression: ||", "DEL PrimitiveType: void", "DEL TypeLiteral", "DEL WhileStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: Scan", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: collectionTable", "DEL VariableDeclarationFragment", "DEL SimpleName: valueOf", "DEL SimpleName: i", "DEL SimpleName: AbstractExample", "DEL Block", "DEL SimpleName: collectionTable", "DEL ExpressionStatement", "DEL SimpleName: A", "DEL SimpleName: i", "DEL PrefixExpression: -", "DEL StringLiteral: \"multiplication MR job : \"", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleType: HamaAdmin", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL IfStatement", "DEL CatchClause", "DEL SimpleName: c", "DEL SimpleName: valueOf", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: block_size", "DEL ExpressionStatement", "DEL PrefixExpression: -", "DEL TextElement:  the number of blocks", "DEL SimpleName: printStackTrace", "DEL SimpleName: m", "DEL ReturnStatement", "DEL SimpleName: Job", "DEL StringLiteral: \" != \"", "DEL SimpleType: Scan", "DEL SimpleName: args", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: matrixB", "DEL SimpleName: conf", "DEL SimpleName: checkAllJobs", "DEL SimpleType: DenseMatrix", "DEL SimpleType: Job", "DEL SimpleName: exit", "DEL SimpleName: A", "DEL IfStatement", "DEL SimpleName: DenseMatrixVectorMultMap", "DEL SimpleName: Scan", "DEL SimpleName: desc", "DEL SimpleName: B", "DEL SimpleType: Job", "DEL SimpleName: ensureForMultiplication", "DEL SimpleName: Job", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Iterator<Job>", "DEL PrimitiveType: boolean", "DEL ExpressionStatement", "DEL SimpleType: Matrix", "DEL SimpleName: getType", "DEL SimpleName: e", "DEL SimpleName: equals", "DEL SimpleName: println", "DEL SimpleName: addFamily", "DEL Block", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL ClassInstanceCreation", "DEL SimpleName: printStackTrace", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: e", "DEL StringLiteral: \" \"", "DEL ThrowStatement", "DEL SimpleName: blocks", "DEL ExpressionStatement", "DEL SimpleName: IntWritable", "DEL SimpleName: set", "DEL SimpleName: DenseMatrix", "DEL NumberLiteral: 0", "DEL SimpleType: Matrix", "DEL VariableDeclarationStatement", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: getType", "DEL Modifier: static", "DEL SimpleType: ArrayList", "DEL ExpressionStatement", "DEL SimpleType: Matrix", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleName: i", "DEL Block", "DEL QualifiedName: System.out", "DEL SimpleName: DenseMatrix", "DEL Block", "DEL TagElement: @param", "DEL TryStatement", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: scan", "DEL ForStatement", "DEL Block", "DEL BooleanLiteral: true", "DEL TextElement: Collect Blocks", "DEL SimpleName: System", "DEL SimpleName: columns", "DEL PrimitiveType: int", "DEL SimpleName: e", "DEL SimpleName: getRows", "DEL SimpleName: addFamily", "DEL SimpleName: getType", "DEL SimpleType: IOException", "DEL SimpleName: Matrix", "DEL SimpleName: collectionTable", "DEL NumberLiteral: 0.5", "DEL MethodInvocation", "DEL SimpleType: HBaseAdmin", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL StringLiteral: \"c(\"", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: Scan", "DEL SimpleName: allTrue", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPath", "DEL TagElement: @return", "DEL SimpleName: getConfiguration", "DEL SimpleType: BlockID", "DEL MethodInvocation", "DEL SimpleType: InterruptedException", "DEL SingleVariableDeclaration", "DEL SimpleName: job", "DEL SimpleName: A", "DEL SimpleName: getRows", "DEL TagElement: @param", "DEL IfStatement", "DEL SimpleName: A", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: B", "DEL SimpleName: IOException", "DEL SimpleName: A", "DEL TagElement", "DEL SimpleName: A", "DEL VariableDeclarationFragment", "DEL Block", "DEL QualifiedName: System.out", "DEL SimpleName: job", "DEL QualifiedName: Constants.BLOCK", "DEL SimpleName: m", "DEL SimpleName: e", "DEL Modifier: public", "DEL Block", "DEL NumberLiteral: 1", "DEL SimpleName: println", "DEL QualifiedName: System.out", "DEL SimpleName: columns", "DEL SimpleName: getType", "DEL SimpleName: job", "DEL QualifiedName: CollectBlocksMapper.BLOCK_SIZE", "DEL SimpleName: MapWritable", "DEL SimpleName: String", "DEL SimpleName: b", "DEL SimpleName: MapWritable", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: i", "DEL SimpleName: DenseMatrix", "DEL ClassInstanceCreation", "DEL SimpleName: bool", "DEL ParameterizedType: List<Job>", "DEL SimpleName: A", "DEL SimpleName: b", "DEL InfixExpression: +", "DEL PrimitiveType: void", "DEL SimpleName: List", "DEL NumberLiteral: 1000", "DEL SimpleName: job", "DEL Javadoc", "DEL Modifier: static", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: initTableReducerJob", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \") : \"", "DEL Block", "DEL SimpleName: A", "DEL StringLiteral: \"SparseMatrix\"", "DEL TagElement: @param", "DEL VariableDeclarationFragment", "DEL QualifiedName: DenseMatrixVectorMultMap.MATRIX_A", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL TypeLiteral", "DEL Block", "DEL SimpleName: BlockID", "DEL SimpleType: IOException", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL TypeLiteral", "DEL SimpleName: admin", "DEL SimpleName: getColumns", "DEL MethodInvocation", "DEL SimpleName: Matrix", "DEL SimpleName: getMatrix", "DEL SimpleType: BlockMultMap", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL StringLiteral: \"mult [-m maps] [-r reduces] <matrix A> <matrix B> [blocks]\"", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: Job", "DEL SimpleType: InterruptedException", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: it", "DEL SimpleName: A", "DEL SimpleName: i", "DEL SimpleName: result", "DEL SimpleType: DenseMatrixVectorMultMap", "DEL Modifier: public", "DEL SimpleName: Matrix", "DEL SimpleName: it", "DEL SimpleName: scan", "DEL SimpleType: Job", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: B", "DEL SimpleName: set", "DEL SimpleType: String", "DEL SimpleName: it", "DEL SimpleName: A", "DEL SimpleName: mult", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: job", "DEL PrefixExpression: !", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: getPath", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: b", "DEL StringLiteral: \"Blocking MR job\"", "DEL MethodDeclaration", "DEL IfStatement", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: getMatrix", "DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL CatchClause", "DEL SimpleName: c", "DEL SimpleName: c", "DEL SimpleName: getPath", "DEL SimpleName: waitForCompletion", "DEL SimpleName: job", "DEL SimpleName: HTableDescriptor", "DEL MethodInvocation", "DEL SimpleName: B", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL IfStatement", "DEL InfixExpression: <", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: A", "DEL SimpleName: jobId", "DEL StringLiteral: \"NOTE: Not implemented M/R based sparse matrix multiplication.\"", "DEL MethodInvocation", "DEL SimpleName: TableMapReduceUtil", "DEL StringLiteral: \", \"", "DEL SimpleName: ensureForMultiplication", "DEL SimpleName: getConfiguration", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: set", "DEL QualifiedName: Constants.BLOCK", "DEL ExpressionStatement", "DEL SimpleType: Job", "DEL ClassInstanceCreation", "DEL NumberLiteral: 1", "DEL StringLiteral: \"collect_\"", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: e", "DEL SimpleName: i", "DEL SimpleName: equals", "DEL SimpleType: BlockMultReduce", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL BooleanLiteral: true", "DEL SimpleName: collectionTable", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: ARGS", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleType: DenseMatrix", "DEL SimpleName: blocks", "DEL Modifier: public", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: m", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: HamaAdminImpl", "DEL Block", "DEL Modifier: public", "DEL SimpleName: BlockID", "DEL SimpleType: IOException", "DEL SimpleName: Matrix", "DEL SimpleName: printStackTrace", "DEL SimpleName: getColumns", "DEL SimpleName: get", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: B", "DEL SimpleName: initTableReducerJob", "DEL SingleVariableDeclaration", "DEL SimpleName: Scan", "DEL SimpleType: ClassNotFoundException", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL SimpleName: path", "DEL SimpleName: Matrix", "DEL NumberLiteral: 1", "DEL SimpleName: Thread", "DEL SimpleName: b", "DEL SimpleName: getPath", "DEL TypeLiteral", "DEL SimpleName: a", "DEL SimpleType: HColumnDescriptor", "DEL VariableDeclarationStatement", "DEL QualifiedName: DenseMatrixVectorMultMap.ITH_ROW", "DEL NumberLiteral: 1", "DEL SimpleType: Matrix", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: desc", "DEL ThrowStatement", "DEL InfixExpression: <", "DEL SimpleName: admin", "DEL SimpleName: job", "DEL SimpleName: a", "DEL BooleanLiteral: false", "DEL SimpleName: Job", "DEL SimpleType: BytesWritable", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL SimpleName: exit", "DEL SimpleName: String", "DEL SimpleName: blocks", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: Scan", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: CollectBlocksMapper.COLUMNS", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: desc", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: sleep", "DEL SimpleName: addFamily", "DEL SimpleName: MatrixMultiplication", "DEL ReturnStatement", "DEL SimpleName: allTrue", "DEL ExpressionStatement", "DEL SimpleName: iterator", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: job", "DEL VariableDeclarationFragment", "DEL SimpleType: HBaseAdmin", "DEL Block", "DEL SimpleName: collectBlocksMapRed", "DEL SimpleName: HTableDescriptor", "DEL SimpleName: System", "DEL SimpleName: e", "DEL TagElement: @param", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: exit", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: scan", "DEL SimpleType: org.apache.hama.examples.mapreduce.CollectBlocksReducer", "DEL SimpleName: getColumns", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: mult", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL SimpleName: ARGS", "DEL SimpleName: RandomVariable", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: collectionTable", "DEL SimpleName: hasNext", "DEL ExpressionStatement", "DEL SimpleType: Job", "DEL SimpleName: Integer", "DEL SimpleName: getConfiguration", "DEL SimpleName: B", "DEL SimpleName: DenseMatrix"]}]}}, {"MatrixMultiplication_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.ArrayList(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.Iterator(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.List(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.HTableDescriptor(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.io.BytesWritable(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hama.Constants(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.HamaAdmin(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.HamaAdminImpl(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.BlockID(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.BlockMultMap(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.BlockMultReduce(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksMapper(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.DenseMatrixVectorMultMap(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.DenseMatrixVectorMultReduce(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(64)", "Delete ImportDeclaration(65)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(66)", "Delete ImportDeclaration(67)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(68)", "Delete ImportDeclaration(69)", "Delete Modifier: public(70)", "Delete SimpleName: MatrixMultiplication(71)", "Delete SimpleName: AbstractExample(72)", "Delete SimpleType: AbstractExample(73)", "Delete Modifier: public(74)", "Delete Modifier: static(75)", "Delete PrimitiveType: void(76)", "Delete SimpleName: main(77)", "Delete SimpleName: String(78)", "Delete SimpleType: String(79)", "Delete Dimension(80)", "Delete ArrayType: String[](81)", "Delete SimpleName: args(82)", "Delete SingleVariableDeclaration(83)", "Delete SimpleName: IOException(84)", "Delete SimpleType: IOException(85)", "Delete QualifiedName: args.length(86)", "Delete NumberLiteral: 2(87)", "Delete InfixExpression: <(88)", "Delete QualifiedName: System.out(89)", "Delete SimpleName: println(90)", "Delete StringLiteral: \"mult [-m maps] [-r reduces] <matrix A> <matrix B> [blocks]\"(91)", "Delete MethodInvocation(92)", "Delete ExpressionStatement(93)", "Delete SimpleName: System(94)", "Delete SimpleName: exit(95)", "Delete NumberLiteral: 1(96)", "Delete PrefixExpression: -(97)", "Delete MethodInvocation(98)", "Delete ExpressionStatement(99)", "Delete Block(100)", "Delete SimpleName: parseArgs(101)", "Delete SimpleName: args(102)", "Delete MethodInvocation(103)", "Delete ExpressionStatement(104)", "Delete Block(105)", "Delete IfStatement(106)", "Delete SimpleName: String(107)", "Delete SimpleType: String(108)", "Delete SimpleName: matrixA(109)", "Delete SimpleName: ARGS(110)", "Delete SimpleName: get(111)", "Delete NumberLiteral: 0(112)", "Delete MethodInvocation(113)", "Delete VariableDeclarationFragment(114)", "Delete VariableDeclarationStatement(115)", "Delete SimpleName: String(116)", "Delete SimpleType: String(117)", "Delete SimpleName: matrixB(118)", "Delete SimpleName: ARGS(119)", "Delete SimpleName: get(120)", "Delete NumberLiteral: 1(121)", "Delete MethodInvocation(122)", "Delete VariableDeclarationFragment(123)", "Delete VariableDeclarationStatement(124)", "Delete SimpleName: HamaAdmin(125)", "Delete SimpleType: HamaAdmin(126)", "Delete SimpleName: admin(127)", "Delete SimpleName: HamaAdminImpl(128)", "Delete SimpleType: HamaAdminImpl(129)", "Delete SimpleName: conf(130)", "Delete ClassInstanceCreation(131)", "Delete VariableDeclarationFragment(132)", "Delete VariableDeclarationStatement(133)", "Delete SimpleName: Matrix(134)", "Delete SimpleType: Matrix(135)", "Delete SimpleName: a(136)", "Delete SimpleName: admin(137)", "Delete SimpleName: getMatrix(138)", "Delete SimpleName: matrixA(139)", "Delete MethodInvocation(140)", "Delete VariableDeclarationFragment(141)", "Delete VariableDeclarationStatement(142)", "Delete SimpleName: Matrix(143)", "Delete SimpleType: Matrix(144)", "Delete SimpleName: b(145)", "Delete SimpleName: admin(146)", "Delete SimpleName: getMatrix(147)", "Delete SimpleName: matrixB(148)", "Delete MethodInvocation(149)", "Delete VariableDeclarationFragment(150)", "Delete VariableDeclarationStatement(151)", "Delete SimpleName: a(152)", "Delete SimpleName: getType(153)", "Delete MethodInvocation(154)", "Delete SimpleName: equals(155)", "Delete SimpleName: b(156)", "Delete SimpleName: getType(157)", "Delete MethodInvocation(158)", "Delete MethodInvocation(159)", "Delete PrefixExpression: !(160)", "Delete QualifiedName: System.out(161)", "Delete SimpleName: println(162)", "Delete SimpleName: a(163)", "Delete SimpleName: getType(164)", "Delete MethodInvocation(165)", "Delete StringLiteral: \" != \"(166)", "Delete SimpleName: b(167)", "Delete SimpleName: getType(168)", "Delete MethodInvocation(169)", "Delete InfixExpression: +(170)", "Delete MethodInvocation(171)", "Delete ExpressionStatement(172)", "Delete SimpleName: System(173)", "Delete SimpleName: exit(174)", "Delete NumberLiteral: 1(175)", "Delete PrefixExpression: -(176)", "Delete MethodInvocation(177)", "Delete ExpressionStatement(178)", "Delete Block(179)", "Delete IfStatement(180)", "Delete SimpleName: Matrix(181)", "Delete SimpleType: Matrix(182)", "Delete SimpleName: c(183)", "Delete NullLiteral(184)", "Delete VariableDeclarationFragment(185)", "Delete VariableDeclarationStatement(186)", "Delete SimpleName: a(187)", "Delete SimpleName: getType(188)", "Delete MethodInvocation(189)", "Delete SimpleName: equals(190)", "Delete StringLiteral: \"SparseMatrix\"(191)", "Delete MethodInvocation(192)", "Delete QualifiedName: System.out(193)", "Delete SimpleName: println(194)", "Delete StringLiteral: \"NOTE: Not implemented M/R based sparse matrix multiplication.\"(195)", "Delete MethodInvocation(196)", "Delete ExpressionStatement(197)", "Delete SimpleName: System(198)", "Delete SimpleName: exit(199)", "Delete NumberLiteral: 1(200)", "Delete PrefixExpression: -(201)", "Delete MethodInvocation(202)", "Delete ExpressionStatement(203)", "Delete Block(204)", "Delete SimpleName: ARGS(205)", "Delete SimpleName: size(206)", "Delete MethodInvocation(207)", "Delete NumberLiteral: 2(208)", "Delete InfixExpression: >(209)", "Delete SimpleName: c(210)", "Delete SimpleName: mult(211)", "Delete SimpleName: a(212)", "Delete SimpleName: b(213)", "Delete SimpleName: Integer(214)", "Delete SimpleName: parseInt(215)", "Delete SimpleName: ARGS(216)", "Delete SimpleName: get(217)", "Delete NumberLiteral: 2(218)", "Delete MethodInvocation(219)", "Delete MethodInvocation(220)", "Delete MethodInvocation(221)", "Delete Assignment: =(222)", "Delete ExpressionStatement(223)", "Delete Block(224)", "Delete SimpleName: c(225)", "Delete SimpleName: mult(226)", "Delete SimpleName: a(227)", "Delete SimpleName: b(228)", "Delete MethodInvocation(229)", "Delete Assignment: =(230)", "Delete ExpressionStatement(231)", "Delete Block(232)", "Delete IfStatement(233)", "Delete Block(234)", "Delete IfStatement(235)", "Delete PrimitiveType: int(236)", "Delete SimpleName: i(237)", "Delete NumberLiteral: 0(238)", "Delete VariableDeclarationFragment(239)", "Delete VariableDeclarationExpression(240)", "Delete SimpleName: i(241)", "Delete NumberLiteral: 2(242)", "Delete InfixExpression: <(243)", "Delete SimpleName: i(244)", "Delete PostfixExpression: ++(245)", "Delete QualifiedName: System.out(246)", "Delete SimpleName: println(247)", "Delete StringLiteral: \"c(\"(248)", "Delete NumberLiteral: 0(249)", "Delete StringLiteral: \", \"(250)", "Delete SimpleName: i(251)", "Delete StringLiteral: \") : \"(252)", "Delete SimpleName: c(253)", "Delete SimpleName: get(254)", "Delete NumberLiteral: 0(255)", "Delete SimpleName: i(256)", "Delete MethodInvocation(257)", "Delete InfixExpression: +(258)", "Delete MethodInvocation(259)", "Delete ExpressionStatement(260)", "Delete Block(261)", "Delete ForStatement(262)", "Delete QualifiedName: System.out(263)", "Delete SimpleName: println(264)", "Delete StringLiteral: \"...\"(265)", "Delete MethodInvocation(266)", "Delete ExpressionStatement(267)", "Delete Block(268)", "Delete MethodDeclaration(269)", "Delete TextElement: C = A*B using iterative method(270)", "Delete TagElement(271)", "Delete SimpleName: B(272)", "Delete TagElement: @param(273)", "Delete TextElement:  C(274)", "Delete TagElement: @return(275)", "Delete SimpleName: IOException(276)", "Delete TagElement: @throws(277)", "Delete Javadoc(278)", "Delete Modifier: public(279)", "Delete Modifier: static(280)", "Delete SimpleName: DenseMatrix(281)", "Delete SimpleType: DenseMatrix(282)", "Delete SimpleName: mult(283)", "Delete SimpleName: Matrix(284)", "Delete SimpleType: Matrix(285)", "Delete SimpleName: A(286)", "Delete SingleVariableDeclaration(287)", "Delete SimpleName: Matrix(288)", "Delete SimpleType: Matrix(289)", "Delete SimpleName: B(290)", "Delete SingleVariableDeclaration(291)", "Delete SimpleName: IOException(292)", "Delete SimpleType: IOException(293)", "Delete SimpleName: ensureForMultiplication(294)", "Delete SimpleName: A(295)", "Delete SimpleName: B(296)", "Delete MethodInvocation(297)", "Delete ExpressionStatement(298)", "Delete PrimitiveType: int(299)", "Delete SimpleName: columns(300)", "Delete NumberLiteral: 0(301)", "Delete VariableDeclarationFragment(302)", "Delete VariableDeclarationStatement(303)", "Delete SimpleName: B(304)", "Delete SimpleName: getColumns(305)", "Delete MethodInvocation(306)", "Delete NumberLiteral: 1(307)", "Delete InfixExpression: ==(308)", "Delete SimpleName: A(309)", "Delete SimpleName: getColumns(310)", "Delete MethodInvocation(311)", "Delete NumberLiteral: 1(312)", "Delete InfixExpression: ==(313)", "Delete InfixExpression: ||(314)", "Delete SimpleName: columns(315)", "Delete NumberLiteral: 1(316)", "Delete Assignment: =(317)", "Delete ExpressionStatement(318)", "Delete SimpleName: columns(319)", "Delete SimpleName: A(320)", "Delete SimpleName: getColumns(321)", "Delete MethodInvocation(322)", "Delete Assignment: =(323)", "Delete ExpressionStatement(324)", "Delete IfStatement(325)", "Delete SimpleName: DenseMatrix(326)", "Delete SimpleType: DenseMatrix(327)", "Delete SimpleName: result(328)", "Delete SimpleName: DenseMatrix(329)", "Delete SimpleType: DenseMatrix(330)", "Delete SimpleName: conf(331)", "Delete SimpleName: A(332)", "Delete SimpleName: getRows(333)", "Delete MethodInvocation(334)", "Delete SimpleName: columns(335)", "Delete ClassInstanceCreation(336)", "Delete VariableDeclarationFragment(337)", "Delete VariableDeclarationStatement(338)", "Delete SimpleName: List(339)", "Delete SimpleType: List(340)", "Delete SimpleName: Job(341)", "Delete SimpleType: Job(342)", "Delete ParameterizedType: List<Job>(343)", "Delete SimpleName: jobId(344)", "Delete SimpleName: ArrayList(345)", "Delete SimpleType: ArrayList(346)", "Delete SimpleName: Job(347)", "Delete SimpleType: Job(348)", "Delete ParameterizedType: ArrayList<Job>(349)", "Delete ClassInstanceCreation(350)", "Delete VariableDeclarationFragment(351)", "Delete VariableDeclarationStatement(352)", "Delete PrimitiveType: int(353)", "Delete SimpleName: i(354)", "Delete NumberLiteral: 0(355)", "Delete VariableDeclarationFragment(356)", "Delete VariableDeclarationExpression(357)", "Delete SimpleName: i(358)", "Delete SimpleName: A(359)", "Delete SimpleName: getRows(360)", "Delete MethodInvocation(361)", "Delete InfixExpression: <(362)", "Delete SimpleName: i(363)", "Delete PostfixExpression: ++(364)", "Delete SimpleName: Job(365)", "Delete SimpleType: Job(366)", "Delete SimpleName: job(367)", "Delete SimpleName: Job(368)", "Delete SimpleType: Job(369)", "Delete SimpleName: conf(370)", "Delete StringLiteral: \"multiplication MR job : \"(371)", "Delete SimpleName: result(372)", "Delete SimpleName: getPath(373)", "Delete MethodInvocation(374)", "Delete StringLiteral: \" \"(375)", "Delete SimpleName: i(376)", "Delete InfixExpression: +(377)", "Delete ClassInstanceCreation(378)", "Delete VariableDeclarationFragment(379)", "Delete VariableDeclarationStatement(380)", "Delete SimpleName: Scan(381)", "Delete SimpleType: Scan(382)", "Delete SimpleName: scan(383)", "Delete SimpleName: Scan(384)", "Delete SimpleType: Scan(385)", "Delete ClassInstanceCreation(386)", "Delete VariableDeclarationFragment(387)", "Delete VariableDeclarationStatement(388)", "Delete SimpleName: scan(389)", "Delete SimpleName: addFamily(390)", "Delete QualifiedName: Constants.COLUMNFAMILY(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: job(394)", "Delete SimpleName: getConfiguration(395)", "Delete MethodInvocation(396)", "Delete SimpleName: set(397)", "Delete QualifiedName: DenseMatrixVectorMultMap.MATRIX_A(398)", "Delete SimpleName: A(399)", "Delete SimpleName: getPath(400)", "Delete MethodInvocation(401)", "Delete MethodInvocation(402)", "Delete ExpressionStatement(403)", "Delete SimpleName: job(404)", "Delete SimpleName: getConfiguration(405)", "Delete MethodInvocation(406)", "Delete SimpleName: setInt(407)", "Delete QualifiedName: DenseMatrixVectorMultMap.ITH_ROW(408)", "Delete SimpleName: i(409)", "Delete MethodInvocation(410)", "Delete ExpressionStatement(411)", "Delete SimpleName: TableMapReduceUtil(412)", "Delete SimpleName: initTableMapperJob(413)", "Delete SimpleName: B(414)", "Delete SimpleName: getPath(415)", "Delete MethodInvocation(416)", "Delete SimpleName: scan(417)", "Delete SimpleName: DenseMatrixVectorMultMap(418)", "Delete SimpleType: DenseMatrixVectorMultMap(419)", "Delete TypeLiteral(420)", "Delete SimpleName: IntWritable(421)", "Delete SimpleType: IntWritable(422)", "Delete TypeLiteral(423)", "Delete SimpleName: MapWritable(424)", "Delete SimpleType: MapWritable(425)", "Delete TypeLiteral(426)", "Delete SimpleName: job(427)", "Delete MethodInvocation(428)", "Delete ExpressionStatement(429)", "Delete SimpleName: TableMapReduceUtil(430)", "Delete SimpleName: initTableReducerJob(431)", "Delete SimpleName: result(432)", "Delete SimpleName: getPath(433)", "Delete MethodInvocation(434)", "Delete SimpleName: DenseMatrixVectorMultReduce(435)", "Delete SimpleType: DenseMatrixVectorMultReduce(436)", "Delete TypeLiteral(437)", "Delete SimpleName: job(438)", "Delete MethodInvocation(439)", "Delete ExpressionStatement(440)", "Delete SimpleName: job(441)", "Delete SimpleName: waitForCompletion(442)", "Delete BooleanLiteral: false(443)", "Delete MethodInvocation(444)", "Delete ExpressionStatement(445)", "Delete SimpleName: jobId(446)", "Delete SimpleName: add(447)", "Delete SimpleName: job(448)", "Delete MethodInvocation(449)", "Delete ExpressionStatement(450)", "Delete Block(451)", "Delete SimpleName: InterruptedException(452)", "Delete SimpleType: InterruptedException(453)", "Delete SimpleName: e(454)", "Delete SingleVariableDeclaration(455)", "Delete SimpleName: e(456)", "Delete SimpleName: printStackTrace(457)", "Delete MethodInvocation(458)", "Delete ExpressionStatement(459)", "Delete Block(460)", "Delete CatchClause(461)", "Delete SimpleName: ClassNotFoundException(462)", "Delete SimpleType: ClassNotFoundException(463)", "Delete SimpleName: e(464)", "Delete SingleVariableDeclaration(465)", "Delete SimpleName: e(466)", "Delete SimpleName: printStackTrace(467)", "Delete MethodInvocation(468)", "Delete ExpressionStatement(469)", "Delete Block(470)", "Delete CatchClause(471)", "Delete TryStatement(472)", "Delete Block(473)", "Delete ForStatement(474)", "Delete SimpleName: checkAllJobs(475)", "Delete SimpleName: jobId(476)", "Delete MethodInvocation(477)", "Delete BooleanLiteral: false(478)", "Delete InfixExpression: ==(479)", "Delete SimpleName: Thread(480)", "Delete SimpleName: sleep(481)", "Delete NumberLiteral: 1000(482)", "Delete MethodInvocation(483)", "Delete ExpressionStatement(484)", "Delete Block(485)", "Delete SimpleName: InterruptedException(486)", "Delete SimpleType: InterruptedException(487)", "Delete SimpleName: e(488)", "Delete SingleVariableDeclaration(489)", "Delete SimpleName: e(490)", "Delete SimpleName: printStackTrace(491)", "Delete MethodInvocation(492)", "Delete ExpressionStatement(493)", "Delete Block(494)", "Delete CatchClause(495)", "Delete TryStatement(496)", "Delete Block(497)", "Delete WhileStatement(498)", "Delete SimpleName: result(499)", "Delete ReturnStatement(500)", "Delete Block(501)", "Delete MethodDeclaration(502)", "Delete TextElement: C = A * B using Blocking algorithm(503)", "Delete TagElement(504)", "Delete SimpleName: B(505)", "Delete TagElement: @param(506)", "Delete SimpleName: blocks(507)", "Delete TextElement:  the number of blocks(508)", "Delete TagElement: @param(509)", "Delete TextElement:  C(510)", "Delete TagElement: @return(511)", "Delete SimpleName: IOException(512)", "Delete TagElement: @throws(513)", "Delete Javadoc(514)", "Delete Modifier: public(515)", "Delete Modifier: static(516)", "Delete SimpleName: DenseMatrix(517)", "Delete SimpleType: DenseMatrix(518)", "Delete SimpleName: mult(519)", "Delete SimpleName: Matrix(520)", "Delete SimpleType: Matrix(521)", "Delete SimpleName: A(522)", "Delete SingleVariableDeclaration(523)", "Delete SimpleName: Matrix(524)", "Delete SimpleType: Matrix(525)", "Delete SimpleName: B(526)", "Delete SingleVariableDeclaration(527)", "Delete PrimitiveType: int(528)", "Delete SimpleName: blocks(529)", "Delete SingleVariableDeclaration(530)", "Delete SimpleName: IOException(531)", "Delete SimpleType: IOException(532)", "Delete SimpleName: ensureForMultiplication(533)", "Delete SimpleName: A(534)", "Delete SimpleName: B(535)", "Delete MethodInvocation(536)", "Delete ExpressionStatement(537)", "Delete SimpleName: String(538)", "Delete SimpleType: String(539)", "Delete SimpleName: collectionTable(540)", "Delete StringLiteral: \"collect_\"(541)", "Delete SimpleName: RandomVariable(542)", "Delete SimpleName: randMatrixPath(543)", "Delete MethodInvocation(544)", "Delete InfixExpression: +(545)", "Delete VariableDeclarationFragment(546)", "Delete VariableDeclarationStatement(547)", "Delete SimpleName: HTableDescriptor(548)", "Delete SimpleType: HTableDescriptor(549)", "Delete SimpleName: desc(550)", "Delete SimpleName: HTableDescriptor(551)", "Delete SimpleType: HTableDescriptor(552)", "Delete SimpleName: collectionTable(553)", "Delete ClassInstanceCreation(554)", "Delete VariableDeclarationFragment(555)", "Delete VariableDeclarationStatement(556)", "Delete SimpleName: desc(557)", "Delete SimpleName: addFamily(558)", "Delete SimpleName: HColumnDescriptor(559)", "Delete SimpleType: HColumnDescriptor(560)", "Delete SimpleName: Bytes(561)", "Delete SimpleName: toBytes(562)", "Delete QualifiedName: Constants.BLOCK(563)", "Delete MethodInvocation(564)", "Delete ClassInstanceCreation(565)", "Delete MethodInvocation(566)", "Delete ExpressionStatement(567)", "Delete SimpleName: HBaseAdmin(568)", "Delete SimpleType: HBaseAdmin(569)", "Delete SimpleName: conf(570)", "Delete ClassInstanceCreation(571)", "Delete SimpleName: createTable(572)", "Delete SimpleName: desc(573)", "Delete MethodInvocation(574)", "Delete ExpressionStatement(575)", "Delete SimpleName: collectBlocksMapRed(576)", "Delete SimpleName: A(577)", "Delete SimpleName: collectionTable(578)", "Delete SimpleName: blocks(579)", "Delete BooleanLiteral: true(580)", "Delete MethodInvocation(581)", "Delete ExpressionStatement(582)", "Delete SimpleName: collectBlocksMapRed(583)", "Delete SimpleName: B(584)", "Delete SimpleName: collectionTable(585)", "Delete SimpleName: blocks(586)", "Delete BooleanLiteral: false(587)", "Delete MethodInvocation(588)", "Delete ExpressionStatement(589)", "Delete SimpleName: DenseMatrix(590)", "Delete SimpleType: DenseMatrix(591)", "Delete SimpleName: result(592)", "Delete SimpleName: DenseMatrix(593)", "Delete SimpleType: DenseMatrix(594)", "Delete SimpleName: conf(595)", "Delete SimpleName: A(596)", "Delete SimpleName: getRows(597)", "Delete MethodInvocation(598)", "Delete SimpleName: A(599)", "Delete SimpleName: getColumns(600)", "Delete MethodInvocation(601)", "Delete ClassInstanceCreation(602)", "Delete VariableDeclarationFragment(603)", "Delete VariableDeclarationStatement(604)", "Delete SimpleName: Job(605)", "Delete SimpleType: Job(606)", "Delete SimpleName: job(607)", "Delete SimpleName: Job(608)", "Delete SimpleType: Job(609)", "Delete SimpleName: conf(610)", "Delete StringLiteral: \"multiplication MR job : \"(611)", "Delete SimpleName: result(612)", "Delete SimpleName: getPath(613)", "Delete MethodInvocation(614)", "Delete InfixExpression: +(615)", "Delete ClassInstanceCreation(616)", "Delete VariableDeclarationFragment(617)", "Delete VariableDeclarationStatement(618)", "Delete SimpleName: Scan(619)", "Delete SimpleType: Scan(620)", "Delete SimpleName: scan(621)", "Delete SimpleName: Scan(622)", "Delete SimpleType: Scan(623)", "Delete ClassInstanceCreation(624)", "Delete VariableDeclarationFragment(625)", "Delete VariableDeclarationStatement(626)", "Delete SimpleName: scan(627)", "Delete SimpleName: addFamily(628)", "Delete SimpleName: Bytes(629)", "Delete SimpleName: toBytes(630)", "Delete QualifiedName: Constants.BLOCK(631)", "Delete MethodInvocation(632)", "Delete MethodInvocation(633)", "Delete ExpressionStatement(634)", "Delete SimpleName: TableMapReduceUtil(635)", "Delete SimpleName: initTableMapperJob(636)", "Delete SimpleName: collectionTable(637)", "Delete SimpleName: scan(638)", "Delete SimpleName: BlockMultMap(639)", "Delete SimpleType: BlockMultMap(640)", "Delete TypeLiteral(641)", "Delete SimpleName: BlockID(642)", "Delete SimpleType: BlockID(643)", "Delete TypeLiteral(644)", "Delete SimpleName: BytesWritable(645)", "Delete SimpleType: BytesWritable(646)", "Delete TypeLiteral(647)", "Delete SimpleName: job(648)", "Delete MethodInvocation(649)", "Delete ExpressionStatement(650)", "Delete SimpleName: TableMapReduceUtil(651)", "Delete SimpleName: initTableReducerJob(652)", "Delete SimpleName: result(653)", "Delete SimpleName: getPath(654)", "Delete MethodInvocation(655)", "Delete SimpleName: BlockMultReduce(656)", "Delete SimpleType: BlockMultReduce(657)", "Delete TypeLiteral(658)", "Delete SimpleName: job(659)", "Delete MethodInvocation(660)", "Delete ExpressionStatement(661)", "Delete SimpleName: job(662)", "Delete SimpleName: waitForCompletion(663)", "Delete BooleanLiteral: true(664)", "Delete MethodInvocation(665)", "Delete ExpressionStatement(666)", "Delete Block(667)", "Delete SimpleName: InterruptedException(668)", "Delete SimpleType: InterruptedException(669)", "Delete SimpleName: e(670)", "Delete SingleVariableDeclaration(671)", "Delete SimpleName: e(672)", "Delete SimpleName: printStackTrace(673)", "Delete MethodInvocation(674)", "Delete ExpressionStatement(675)", "Delete Block(676)", "Delete CatchClause(677)", "Delete SimpleName: ClassNotFoundException(678)", "Delete SimpleType: ClassNotFoundException(679)", "Delete SimpleName: e(680)", "Delete SingleVariableDeclaration(681)", "Delete SimpleName: e(682)", "Delete SimpleName: printStackTrace(683)", "Delete MethodInvocation(684)", "Delete ExpressionStatement(685)", "Delete Block(686)", "Delete CatchClause(687)", "Delete TryStatement(688)", "Delete SimpleName: HamaAdminImpl(689)", "Delete SimpleType: HamaAdminImpl(690)", "Delete SimpleName: conf(691)", "Delete SimpleName: HBaseAdmin(692)", "Delete SimpleType: HBaseAdmin(693)", "Delete SimpleName: conf(694)", "Delete ClassInstanceCreation(695)", "Delete ClassInstanceCreation(696)", "Delete SimpleName: delete(697)", "Delete SimpleName: collectionTable(698)", "Delete MethodInvocation(699)", "Delete ExpressionStatement(700)", "Delete SimpleName: result(701)", "Delete ReturnStatement(702)", "Delete Block(703)", "Delete MethodDeclaration(704)", "Delete TextElement: Collect Blocks(705)", "Delete TagElement(706)", "Delete SimpleName: path(707)", "Delete TextElement:  a input path(708)", "Delete TagElement: @param(709)", "Delete SimpleName: collectionTable(710)", "Delete TextElement:  the collection table(711)", "Delete TagElement: @param(712)", "Delete SimpleName: blockNum(713)", "Delete TextElement:  the number of blocks(714)", "Delete TagElement: @param(715)", "Delete SimpleName: bool(716)", "Delete TagElement: @param(717)", "Delete SimpleName: IOException(718)", "Delete TagElement: @throws(719)", "Delete Javadoc(720)", "Delete Modifier: public(721)", "Delete Modifier: static(722)", "Delete PrimitiveType: void(723)", "Delete SimpleName: collectBlocksMapRed(724)", "Delete SimpleName: Matrix(725)", "Delete SimpleType: Matrix(726)", "Delete SimpleName: m(727)", "Delete SingleVariableDeclaration(728)", "Delete SimpleName: String(729)", "Delete SimpleType: String(730)", "Delete SimpleName: collectionTable(731)", "Delete SingleVariableDeclaration(732)", "Delete PrimitiveType: int(733)", "Delete SimpleName: blockNum(734)", "Delete SingleVariableDeclaration(735)", "Delete PrimitiveType: boolean(736)", "Delete SimpleName: bool(737)", "Delete SingleVariableDeclaration(738)", "Delete SimpleName: IOException(739)", "Delete SimpleType: IOException(740)", "Delete PrimitiveType: double(741)", "Delete SimpleName: blocks(742)", "Delete SimpleName: Math(743)", "Delete SimpleName: pow(744)", "Delete SimpleName: blockNum(745)", "Delete NumberLiteral: 0.5(746)", "Delete MethodInvocation(747)", "Delete VariableDeclarationFragment(748)", "Delete VariableDeclarationStatement(749)", "Delete SimpleName: String(750)", "Delete SimpleName: valueOf(751)", "Delete SimpleName: blocks(752)", "Delete MethodInvocation(753)", "Delete SimpleName: endsWith(754)", "Delete StringLiteral: \".0\"(755)", "Delete MethodInvocation(756)", "Delete PrefixExpression: !(757)", "Delete SimpleName: IOException(758)", "Delete SimpleType: IOException(759)", "Delete StringLiteral: \"can't divide.\"(760)", "Delete ClassInstanceCreation(761)", "Delete ThrowStatement(762)", "Delete IfStatement(763)", "Delete PrimitiveType: int(764)", "Delete SimpleName: block_size(765)", "Delete PrimitiveType: int(766)", "Delete SimpleName: blocks(767)", "Delete CastExpression(768)", "Delete VariableDeclarationFragment(769)", "Delete VariableDeclarationStatement(770)", "Delete SimpleName: Job(771)", "Delete SimpleType: Job(772)", "Delete SimpleName: job(773)", "Delete SimpleName: Job(774)", "Delete SimpleType: Job(775)", "Delete SimpleName: conf(776)", "Delete StringLiteral: \"Blocking MR job\"(777)", "Delete SimpleName: m(778)", "Delete SimpleName: getPath(779)", "Delete MethodInvocation(780)", "Delete InfixExpression: +(781)", "Delete ClassInstanceCreation(782)", "Delete VariableDeclarationFragment(783)", "Delete VariableDeclarationStatement(784)", "Delete SimpleName: Scan(785)", "Delete SimpleType: Scan(786)", "Delete SimpleName: scan(787)", "Delete SimpleName: Scan(788)", "Delete SimpleType: Scan(789)", "Delete ClassInstanceCreation(790)", "Delete VariableDeclarationFragment(791)", "Delete VariableDeclarationStatement(792)", "Delete SimpleName: scan(793)", "Delete SimpleName: addFamily(794)", "Delete QualifiedName: Constants.COLUMNFAMILY(795)", "Delete MethodInvocation(796)", "Delete ExpressionStatement(797)", "Delete SimpleName: job(798)", "Delete SimpleName: getConfiguration(799)", "Delete MethodInvocation(800)", "Delete SimpleName: set(801)", "Delete QualifiedName: CollectBlocksMapper.BLOCK_SIZE(802)", "Delete SimpleName: String(803)", "Delete SimpleName: valueOf(804)", "Delete SimpleName: block_size(805)", "Delete MethodInvocation(806)", "Delete MethodInvocation(807)", "Delete ExpressionStatement(808)", "Delete SimpleName: job(809)", "Delete SimpleName: getConfiguration(810)", "Delete MethodInvocation(811)", "Delete SimpleName: set(812)", "Delete QualifiedName: CollectBlocksMapper.ROWS(813)", "Delete SimpleName: String(814)", "Delete SimpleName: valueOf(815)", "Delete SimpleName: m(816)", "Delete SimpleName: getRows(817)", "Delete MethodInvocation(818)", "Delete MethodInvocation(819)", "Delete MethodInvocation(820)", "Delete ExpressionStatement(821)", "Delete SimpleName: job(822)", "Delete SimpleName: getConfiguration(823)", "Delete MethodInvocation(824)", "Delete SimpleName: set(825)", "Delete QualifiedName: CollectBlocksMapper.COLUMNS(826)", "Delete SimpleName: String(827)", "Delete SimpleName: valueOf(828)", "Delete SimpleName: m(829)", "Delete SimpleName: getColumns(830)", "Delete MethodInvocation(831)", "Delete MethodInvocation(832)", "Delete MethodInvocation(833)", "Delete ExpressionStatement(834)", "Delete SimpleName: job(835)", "Delete SimpleName: getConfiguration(836)", "Delete MethodInvocation(837)", "Delete SimpleName: setBoolean(838)", "Delete QualifiedName: CollectBlocksMapper.MATRIX_POS(839)", "Delete SimpleName: bool(840)", "Delete MethodInvocation(841)", "Delete ExpressionStatement(842)", "Delete SimpleName: TableMapReduceUtil(843)", "Delete SimpleName: initTableMapperJob(844)", "Delete SimpleName: m(845)", "Delete SimpleName: getPath(846)", "Delete MethodInvocation(847)", "Delete SimpleName: scan(848)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksMapper(849)", "Delete SimpleType: org.apache.hama.examples.mapreduce.CollectBlocksMapper(850)", "Delete TypeLiteral(851)", "Delete SimpleName: BlockID(852)", "Delete SimpleType: BlockID(853)", "Delete TypeLiteral(854)", "Delete SimpleName: MapWritable(855)", "Delete SimpleType: MapWritable(856)", "Delete TypeLiteral(857)", "Delete SimpleName: job(858)", "Delete MethodInvocation(859)", "Delete ExpressionStatement(860)", "Delete SimpleName: TableMapReduceUtil(861)", "Delete SimpleName: initTableReducerJob(862)", "Delete SimpleName: collectionTable(863)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.CollectBlocksReducer(864)", "Delete SimpleType: org.apache.hama.examples.mapreduce.CollectBlocksReducer(865)", "Delete TypeLiteral(866)", "Delete SimpleName: job(867)", "Delete MethodInvocation(868)", "Delete ExpressionStatement(869)", "Delete SimpleName: job(870)", "Delete SimpleName: waitForCompletion(871)", "Delete BooleanLiteral: true(872)", "Delete MethodInvocation(873)", "Delete ExpressionStatement(874)", "Delete Block(875)", "Delete SimpleName: InterruptedException(876)", "Delete SimpleType: InterruptedException(877)", "Delete SimpleName: e(878)", "Delete SingleVariableDeclaration(879)", "Delete SimpleName: e(880)", "Delete SimpleName: printStackTrace(881)", "Delete MethodInvocation(882)", "Delete ExpressionStatement(883)", "Delete Block(884)", "Delete CatchClause(885)", "Delete SimpleName: ClassNotFoundException(886)", "Delete SimpleType: ClassNotFoundException(887)", "Delete SimpleName: e(888)", "Delete SingleVariableDeclaration(889)", "Delete SimpleName: e(890)", "Delete SimpleName: printStackTrace(891)", "Delete MethodInvocation(892)", "Delete ExpressionStatement(893)", "Delete Block(894)", "Delete CatchClause(895)", "Delete TryStatement(896)", "Delete Block(897)", "Delete MethodDeclaration(898)", "Delete Modifier: public(899)", "Delete Modifier: static(900)", "Delete PrimitiveType: void(901)", "Delete SimpleName: ensureForMultiplication(902)", "Delete SimpleName: Matrix(903)", "Delete SimpleType: Matrix(904)", "Delete SimpleName: A(905)", "Delete SingleVariableDeclaration(906)", "Delete SimpleName: Matrix(907)", "Delete SimpleType: Matrix(908)", "Delete SimpleName: m(909)", "Delete SingleVariableDeclaration(910)", "Delete SimpleName: IOException(911)", "Delete SimpleType: IOException(912)", "Delete SimpleName: A(913)", "Delete SimpleName: getColumns(914)", "Delete MethodInvocation(915)", "Delete SimpleName: m(916)", "Delete SimpleName: getRows(917)", "Delete MethodInvocation(918)", "Delete InfixExpression: !=(919)", "Delete SimpleName: IOException(920)", "Delete SimpleType: IOException(921)", "Delete StringLiteral: \"A's columns should equal with B's rows while A*B.\"(922)", "Delete ClassInstanceCreation(923)", "Delete ThrowStatement(924)", "Delete Block(925)", "Delete IfStatement(926)", "Delete Block(927)", "Delete MethodDeclaration(928)", "Delete Modifier: public(929)", "Delete Modifier: static(930)", "Delete PrimitiveType: boolean(931)", "Delete SimpleName: checkAllJobs(932)", "Delete SimpleName: List(933)", "Delete SimpleType: List(934)", "Delete SimpleName: Job(935)", "Delete SimpleType: Job(936)", "Delete ParameterizedType: List<Job>(937)", "Delete SimpleName: jobId(938)", "Delete SingleVariableDeclaration(939)", "Delete SimpleName: IOException(940)", "Delete SimpleType: IOException(941)", "Delete SimpleName: Iterator(942)", "Delete SimpleType: Iterator(943)", "Delete SimpleName: Job(944)", "Delete SimpleType: Job(945)", "Delete ParameterizedType: Iterator<Job>(946)", "Delete SimpleName: it(947)", "Delete SimpleName: jobId(948)", "Delete SimpleName: iterator(949)", "Delete MethodInvocation(950)", "Delete VariableDeclarationFragment(951)", "Delete VariableDeclarationStatement(952)", "Delete PrimitiveType: boolean(953)", "Delete SimpleName: allTrue(954)", "Delete BooleanLiteral: true(955)", "Delete VariableDeclarationFragment(956)", "Delete VariableDeclarationStatement(957)", "Delete SimpleName: it(958)", "Delete SimpleName: hasNext(959)", "Delete MethodInvocation(960)", "Delete SimpleName: it(961)", "Delete SimpleName: next(962)", "Delete MethodInvocation(963)", "Delete SimpleName: isComplete(964)", "Delete MethodInvocation(965)", "Delete PrefixExpression: !(966)", "Delete SimpleName: allTrue(967)", "Delete BooleanLiteral: false(968)", "Delete Assignment: =(969)", "Delete ExpressionStatement(970)", "Delete Block(971)", "Delete IfStatement(972)", "Delete Block(973)", "Delete WhileStatement(974)", "Delete SimpleName: allTrue(975)", "Delete ReturnStatement(976)", "Delete Block(977)", "Delete MethodDeclaration(978)", "Delete TypeDeclaration: class(979)"]}}, {"MatrixNorm_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL Javadoc", "DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.FileSystem"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.Path"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Scan"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.SequenceFile"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.Job"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaAdminImpl"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce.MatrixNormMapReduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.Matrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.Matrix.Norm"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: get", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: setNumReduceTasks", "DEL BooleanLiteral: true", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL Modifier: public", "DEL SimpleType: FileSystem", "DEL SimpleName: printStackTrace", "DEL SimpleName: delete", "DEL ExpressionStatement", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: outDir", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: System", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: job", "DEL IfStatement", "DEL SimpleName: delete", "DEL SimpleName: println", "DEL VariableDeclarationStatement", "DEL SimpleName: ARGS", "DEL ExpressionStatement", "DEL SimpleName: System", "DEL SingleVariableDeclaration", "DEL SimpleName: setReducerClass", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: conf", "DEL SimpleName: waitForCompletion", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL SimpleName: IntWritable", "DEL QualifiedName: MatrixNormMapReduce.MatrixOneNormMapper", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL MethodInvocation", "DEL SimpleName: outDir", "DEL IfStatement", "DEL MethodInvocation", "DEL StringLiteral: \"The maximum absolute column sum of matrix '\"", "DEL SimpleName: Scan", "DEL SimpleName: getFrobenius", "DEL ClassInstanceCreation", "DEL SimpleName: getType", "DEL ReturnStatement", "DEL StringLiteral: \"out\"", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleType: DoubleWritable", "DEL BooleanLiteral: true", "DEL Modifier: final", "DEL SimpleName: main", "DEL QualifiedName: SequenceFile.Reader", "DEL VariableDeclarationStatement", "DEL SimpleName: result", "DEL SimpleName: Scan", "DEL SimpleType: Scan", "DEL SimpleType: Job", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL SimpleName: delete", "DEL TypeLiteral", "DEL StringLiteral: \"_TMP_normMaxValue_dir_\"", "DEL SimpleName: FileSystem", "DEL MethodInvocation", "DEL SimpleName: Path", "DEL SimpleType: InterruptedException", "DEL SimpleName: outDir", "DEL Block", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: setNumReduceTasks", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleName: job", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: Path", "DEL ExpressionStatement", "DEL SimpleName: fs", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL SimpleName: job", "DEL SimpleType: Scan", "DEL SimpleType: DoubleWritable", "DEL SimpleName: delete", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL MethodInvocation", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleType: FileSystem", "DEL SimpleName: fs", "DEL SimpleName: conf", "DEL SimpleType: Job", "DEL SimpleType: DoubleWritable", "DEL SimpleName: job", "DEL SimpleType: IntWritable", "DEL SimpleName: InterruptedException", "DEL SimpleName: outDir", "DEL MethodInvocation", "DEL SimpleName: e", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: delete", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: FileSystem", "DEL SimpleName: initTableMapperJob", "DEL StringLiteral: \"_TMP_normInifity_dir_\"", "DEL SimpleName: FileSystem", "DEL SimpleName: a", "DEL SimpleName: addFamily", "DEL SimpleName: conf", "DEL Block", "DEL InfixExpression: +", "DEL SimpleName: e", "DEL StringLiteral: \"The root of sum of squares of matrix '\"", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: outDir", "DEL SimpleName: DoubleWritable", "DEL SimpleName: getPath", "DEL Block", "DEL SimpleName: fs", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL StringLiteral: \"part-r-00000\"", "DEL SimpleType: AbstractExample", "DEL SimpleName: numInside", "DEL VariableDeclarationFragment", "DEL SimpleName: fs", "DEL SimpleName: get", "DEL InfixExpression: +", "DEL SimpleName: InterruptedException", "DEL SimpleName: fs", "DEL MethodInvocation", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL TryStatement", "DEL SimpleName: IntWritable", "DEL ExpressionStatement", "DEL SimpleName: waitForCompletion", "DEL SimpleName: System", "DEL SimpleName: getPath", "DEL Block", "DEL SimpleName: job", "DEL MethodDeclaration", "DEL InfixExpression: +", "DEL StringLiteral: \"MaxValue Norm MR job : \"", "DEL SimpleName: scan", "DEL SimpleName: a", "DEL SimpleType: IntWritable", "DEL SimpleType: Path", "DEL SimpleName: outDir", "DEL PrimitiveType: double", "DEL SimpleName: get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleType: Job", "DEL SimpleName: setReducerClass", "DEL TypeLiteral", "DEL PrimitiveType: double", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: job", "DEL Modifier: public", "DEL SimpleName: outDir", "DEL SimpleName: Scan", "DEL SimpleName: result", "DEL SimpleName: println", "DEL SimpleName: Job", "DEL SimpleName: HamaAdminImpl", "DEL SimpleType: MatrixNormMapReduce.MatrixOneNormCombiner", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL SimpleName: scan", "DEL SimpleName: setReducerClass", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: e", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: job", "DEL SimpleName: a", "DEL ClassInstanceCreation", "DEL BooleanLiteral: true", "DEL SimpleName: e", "DEL SimpleName: readOutput", "DEL MethodInvocation", "DEL SimpleType: DoubleWritable", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: Path", "DEL SimpleName: ARGS", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Path", "DEL SimpleName: outDir", "DEL SimpleType: FileSystem", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: Path", "DEL SimpleName: IntWritable", "DEL Modifier: static", "DEL SimpleName: getInfinity", "DEL SimpleName: args", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: Path", "DEL SimpleName: a", "DEL SimpleName: FileSystem", "DEL SimpleName: outDir", "DEL SimpleName: outDir", "DEL SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormReducer", "DEL SimpleName: a", "DEL SimpleName: job", "DEL SimpleName: getFrobenius", "DEL SimpleName: job", "DEL SimpleName: ARGS", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: setOutputPath", "DEL SimpleName: HamaConfiguration", "DEL Block", "DEL StringLiteral: \"' is \"", "DEL ExpressionStatement", "DEL SimpleName: DoubleWritable", "DEL SimpleName: exists", "DEL SimpleName: get", "DEL StringLiteral: \"' is \"", "DEL SimpleName: admin", "DEL SimpleName: InterruptedException", "DEL Modifier: static", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: a", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL SimpleType: SequenceFileOutputFormat", "DEL QualifiedName: System.out", "DEL SimpleName: a", "DEL SimpleType: Job", "DEL QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormCombiner", "DEL SimpleName: conf", "DEL SimpleType: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL SimpleName: type", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleType: IntWritable", "DEL SimpleName: System", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: get", "DEL SimpleName: InterruptedException", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: fs", "DEL SimpleType: Path", "DEL ExpressionStatement", "DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: job", "DEL SimpleType: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: conf", "DEL SimpleName: e", "DEL SimpleName: SequenceFileOutputFormat", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: outDir", "DEL NumberLiteral: 1", "DEL SimpleName: Path", "DEL SimpleType: InterruptedException", "DEL NumberLiteral: 1", "DEL SimpleName: IntWritable", "DEL StringLiteral: \"The max absolute cell value of matrix '\"", "DEL SimpleName: a", "DEL Block", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: setCombinerClass", "DEL SimpleName: ARGS", "DEL ExpressionStatement", "DEL SimpleName: Path", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: outDir", "DEL SimpleName: exists", "DEL SimpleName: job", "DEL SimpleType: MatrixNormMapReduce.MatrixInfinityNormReduce", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL SimpleName: Job", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleType: Job", "DEL MethodDeclaration", "DEL InfixExpression: +", "DEL SimpleType: IOException", "DEL TypeLiteral", "DEL SimpleName: get", "DEL PrimitiveType: double", "DEL SimpleName: fs", "DEL SimpleName: Path", "DEL TextElement: Computes the given norm of the matrix", "DEL QualifiedName: SequenceFile.Reader", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: setOutputKeyClass", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: Job", "DEL QualifiedName: Norm.Infinity", "DEL SimpleType: Scan", "DEL SimpleName: exists", "DEL ReturnStatement", "DEL SimpleType: Job", "DEL TypeLiteral", "DEL TryStatement", "DEL SimpleType: MatrixNormMapReduce.MatrixOneNormMapper", "DEL SimpleType: IntWritable", "DEL SimpleName: conf", "DEL IfStatement", "DEL SimpleName: scan", "DEL SimpleName: outDir", "DEL ExpressionStatement", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: result", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: reader", "DEL QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormReducer", "DEL SimpleName: getMaxvalue", "DEL SimpleName: e", "DEL SimpleName: setOutputFormatClass", "DEL SimpleName: HamaAdmin", "DEL SimpleName: a", "DEL SimpleType: Path", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: waitForCompletion", "DEL ClassInstanceCreation", "DEL SimpleName: a", "DEL SimpleName: IntWritable", "DEL SimpleName: fs", "DEL QualifiedName: System.out", "DEL SimpleName: job", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL SimpleName: job", "DEL QualifiedName: Norm.Frobenius", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL TypeLiteral", "DEL SimpleName: Matrix", "DEL SimpleName: Scan", "DEL SimpleName: addFamily", "DEL ExpressionStatement", "DEL SimpleName: getInfinity", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL SimpleName: ARGS", "DEL IfStatement", "DEL SimpleName: TableMapReduceUtil", "DEL SimpleName: ClassNotFoundException", "DEL SimpleType: Matrix", "DEL VariableDeclarationStatement", "DEL SimpleType: Path", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL SimpleName: Scan", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: job", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: FileSystem", "DEL SimpleName: println", "DEL SimpleName: setOutputValueClass", "DEL SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormMapper", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleType: Scan", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: result", "DEL SimpleType: FileSystem", "DEL SimpleName: outDir", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL SimpleName: ClassNotFoundException", "DEL CatchClause", "DEL SimpleName: DoubleWritable", "DEL SingleVariableDeclaration", "DEL SimpleName: getPath", "DEL SimpleName: outDir", "DEL SimpleType: IOException", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL SimpleName: a", "DEL SimpleType: DoubleWritable", "DEL SimpleType: HamaAdminImpl", "DEL SimpleType: InterruptedException", "DEL SimpleName: Path", "DEL SimpleName: scan", "DEL SimpleName: a", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL QualifiedName: System.out", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL SimpleType: SequenceFileOutputFormat", "DEL StringLiteral: \"The maximum absolute row sum of matrix '\"", "DEL SimpleType: Matrix", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL SimpleName: conf", "DEL SimpleName: Scan", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleName: Job", "DEL SimpleName: a", "DEL SimpleType: DoubleWritable", "DEL SimpleName: parseArgs", "DEL SimpleName: SequenceFileOutputFormat", "DEL TagElement", "DEL SimpleType: IntWritable", "DEL StringLiteral: \"' is \"", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL SimpleName: job", "DEL StringLiteral: \"norm [-m maps] [-r reduces] <matrix name> <type>\"", "DEL ExpressionStatement", "DEL Modifier: protected", "DEL SimpleName: IntWritable", "DEL SimpleType: HamaAdmin", "DEL ReturnStatement", "DEL SimpleType: Matrix", "DEL StringLiteral: \"norm1 MR job : \"", "DEL SimpleName: currentTimeMillis", "DEL StringLiteral: \"_TMP_normFrobenius_dir_\"", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL TypeLiteral", "DEL PrefixExpression: -", "DEL InfixExpression: +", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormCombiner", "DEL MethodInvocation", "DEL SimpleName: norm", "DEL SimpleType: DoubleWritable", "DEL StringLiteral: \"Infinity Norm MR job : \"", "DEL SimpleName: setOutputValueClass", "DEL ExpressionStatement", "DEL SimpleName: setOutputPath", "DEL SimpleType: SequenceFileOutputFormat", "DEL SimpleName: Scan", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL SimpleName: getMatrix", "DEL SimpleName: fs", "DEL SingleVariableDeclaration", "DEL SimpleName: setOutputKeyClass", "DEL VariableDeclarationFragment", "DEL SimpleType: IntWritable", "DEL QualifiedName: MatrixNormMapReduce.MatrixInfinityNormReduce", "DEL SimpleName: delete", "DEL MethodDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: scan", "DEL SimpleType: FileSystem", "DEL SimpleName: exists", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleName: IntWritable", "DEL ExpressionStatement", "DEL PrimitiveType: double", "DEL SimpleName: job", "DEL VariableDeclarationStatement", "DEL SimpleType: Path", "DEL PrimitiveType: double", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleType: Path", "DEL MethodInvocation", "DEL SimpleName: reader", "DEL TypeLiteral", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: getParent", "DEL SimpleType: Path", "DEL SimpleName: getType", "DEL SimpleName: a", "DEL ExpressionStatement", "DEL SimpleName: inFile", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: norm", "DEL VariableDeclarationFragment", "DEL SimpleName: outDir", "DEL MethodDeclaration", "DEL QualifiedName: System.out", "DEL TypeLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: DoubleWritable", "DEL SimpleName: job", "DEL SimpleType: MatrixNormMapReduce.MatrixInfinityNormMapper", "DEL Modifier: final", "DEL SimpleName: get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL ArrayType: String[]", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: type", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: setReducerClass", "DEL SimpleType: SequenceFileOutputFormat", "DEL ExpressionStatement", "DEL SimpleName: setOutputFormatClass", "DEL SimpleType: MatrixNormMapReduce.MatrixOneNormReducer", "DEL SimpleName: config", "DEL TryStatement", "DEL SimpleName: a", "DEL SimpleType: Path", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL StringLiteral: \"_TMP_norm1_dir_\"", "DEL Block", "DEL SimpleName: fs", "DEL SimpleName: getNorm1", "DEL SimpleName: delete", "DEL ExpressionStatement", "DEL SimpleName: Path", "DEL SimpleName: setOutputKeyClass", "DEL SimpleName: type", "DEL QualifiedName: System.out", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL SimpleName: close", "DEL SingleVariableDeclaration", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: printStackTrace", "DEL VariableDeclarationFragment", "DEL SimpleName: job", "DEL Block", "DEL CatchClause", "DEL SimpleName: fs", "DEL Block", "DEL CatchClause", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: setOutputFormatClass", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleType: ClassNotFoundException", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: SequenceFile.Reader", "DEL NumberLiteral: 1", "DEL IfStatement", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: setNumReduceTasks", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: a", "DEL QualifiedName: Norm.Infinity", "DEL TypeLiteral", "DEL SimpleName: FileSystem", "DEL SimpleName: fs", "DEL QualifiedName: Norm.One", "DEL SimpleName: inFile", "DEL InfixExpression: +", "DEL SimpleName: ARGS", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: type", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL SimpleName: setOutputPath", "DEL TypeLiteral", "DEL Modifier: static", "DEL SimpleName: a", "DEL SimpleName: e", "DEL SimpleName: Job", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: reduceProgress", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL SimpleName: setCombinerClass", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: job", "DEL SimpleType: MatrixNormMapReduce.MatrixMaxValueNormReducer", "DEL SimpleName: e", "DEL MethodInvocation", "DEL QualifiedName: MatrixNormMapReduce.MatrixInfinityNormReduce", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: conf", "DEL ClassInstanceCreation", "DEL SimpleType: Path", "DEL Modifier: protected", "DEL SimpleName: job", "DEL SimpleName: Job", "DEL Modifier: static", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: next", "DEL BooleanLiteral: true", "DEL QualifiedName: args.length", "DEL SimpleName: ARGS", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: delete", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: job", "DEL SimpleName: a", "DEL SimpleName: outDir", "DEL QualifiedName: System.out", "DEL Block", "DEL TypeLiteral", "DEL NumberLiteral: 1", "DEL Block", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"frobenius\"", "DEL SimpleName: IOException", "DEL SimpleType: DoubleWritable", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: FileSystem", "DEL SimpleName: get", "DEL ClassInstanceCreation", "DEL StringLiteral: \"out\"", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleType: Scan", "DEL MethodDeclaration", "DEL SimpleName: conf", "DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: fs", "DEL SimpleName: args", "DEL VariableDeclarationStatement", "DEL SimpleName: job", "DEL SimpleName: getType", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL MethodInvocation", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: IntWritable", "DEL SimpleName: type", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL CatchClause", "DEL TypeLiteral", "DEL SimpleName: norm", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPath", "DEL BooleanLiteral: true", "DEL SimpleName: println", "DEL SimpleType: String", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleName: outDir", "DEL TypeLiteral", "DEL SimpleName: exit", "DEL SimpleName: fs", "DEL SimpleName: outDir", "DEL SimpleName: Scan", "DEL QualifiedName: Norm.Maxvalue", "DEL SimpleName: MatrixNorm", "DEL TypeLiteral", "DEL VariableDeclarationStatement", "DEL TryStatement", "DEL QualifiedName: Norm.Frobenius", "DEL ExpressionStatement", "DEL SimpleName: printStackTrace", "DEL SimpleName: fs", "DEL SimpleName: Path", "DEL SimpleName: job", "DEL SimpleType: MatrixNormMapReduce.MatrixInfinityNormReduce", "DEL SimpleType: InterruptedException", "DEL SimpleName: waitForCompletion", "DEL QualifiedName: MatrixNormMapReduce.MatrixInfinityNormMapper", "DEL SimpleName: DoubleWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: getPath", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL CatchClause", "DEL CatchClause", "DEL SimpleName: readOutput", "DEL MethodInvocation", "DEL QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormMapper", "DEL SimpleName: printStackTrace", "DEL TypeLiteral", "DEL TypeLiteral", "DEL SimpleType: Norm", "DEL SimpleName: a", "DEL ExpressionStatement", "DEL SimpleName: setCombinerClass", "DEL MethodInvocation", "DEL SimpleName: System", "DEL SimpleName: ARGS", "DEL SimpleName: setCombinerClass", "DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleType: Job", "DEL SimpleName: setOutputValueClass", "DEL MethodInvocation", "DEL SimpleName: FileSystem", "DEL SimpleType: Scan", "DEL StringLiteral: \"out\"", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: FileSystem", "DEL SimpleName: setOutputValueClass", "DEL IfStatement", "DEL SimpleName: getParent", "DEL MethodInvocation", "DEL SimpleName: admin", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: get", "DEL SimpleName: IOException", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: a", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: norm", "DEL QualifiedName: MatrixNormMapReduce.MatrixOneNormCombiner", "DEL SingleVariableDeclaration", "DEL SimpleType: IntWritable", "DEL SimpleName: fs", "DEL SimpleName: outDir", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: Job", "DEL SimpleType: Matrix", "DEL VariableDeclarationFragment", "DEL SimpleName: println", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: println", "DEL SimpleName: fs", "DEL SimpleName: Path", "DEL SimpleName: scan", "DEL SimpleName: result", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL SimpleName: a", "DEL SimpleName: job", "DEL MethodInvocation", "DEL CatchClause", "DEL MethodInvocation", "DEL IfStatement", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"out\"", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL SimpleName: addFamily", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: ClassNotFoundException", "DEL Block", "DEL PrimitiveType: double", "DEL SimpleType: MatrixNormMapReduce.MatrixMaxValueNormMapper", "DEL SimpleType: Path", "DEL SimpleName: result", "DEL SimpleName: IntWritable", "DEL InfixExpression: +", "DEL SimpleType: Matrix", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: job", "DEL Modifier: final", "DEL StringLiteral: \"Frobenius Norm MR job : \"", "DEL SimpleName: a", "DEL SimpleName: initTableMapperJob", "DEL SimpleName: initTableMapperJob", "DEL ExpressionStatement", "DEL TextElement:  norm of the matrix", "DEL SimpleName: initTableMapperJob", "DEL SimpleName: getParent", "DEL Modifier: static", "DEL QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormReducer", "DEL SimpleName: conf", "DEL SimpleName: Path", "DEL SimpleName: outDir", "DEL VariableDeclarationStatement", "DEL Block", "DEL StringLiteral: \"' is \"", "DEL PrimitiveType: double", "DEL VariableDeclarationStatement", "DEL SimpleType: MatrixNormMapReduce.MatrixMaxValueNormReducer", "DEL ReturnStatement", "DEL SimpleName: setOutputKeyClass", "DEL SimpleType: IntWritable", "DEL SimpleName: outDir", "DEL ReturnStatement", "DEL SimpleName: job", "DEL SimpleName: outDir", "DEL SimpleType: IntWritable", "DEL SimpleName: getPath", "DEL ExpressionStatement", "DEL Modifier: protected", "DEL TypeLiteral", "DEL SimpleName: job", "DEL SimpleName: norm", "DEL ClassInstanceCreation", "DEL SimpleName: getParent", "DEL ClassInstanceCreation", "DEL SimpleName: setOutputPath", "DEL TypeLiteral", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Scan", "DEL SimpleName: job", "DEL SimpleType: Path", "DEL ExpressionStatement", "DEL SimpleName: reader", "DEL SimpleName: config", "DEL SimpleName: scan", "DEL SimpleName: fs", "DEL QualifiedName: MatrixNormMapReduce.MatrixOneNormReducer", "DEL MethodInvocation", "DEL SimpleName: setNumReduceTasks", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: equalsIgnoreCase", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleType: Path", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: Norm", "DEL InfixExpression: <", "DEL SimpleName: job", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL TagElement: @throws", "DEL SimpleName: DoubleWritable", "DEL SimpleName: outDir", "DEL SimpleName: getMaxvalue", "DEL ReturnStatement", "DEL SimpleName: job", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL InfixExpression: ==", "DEL SimpleName: get", "DEL ReturnStatement", "DEL SimpleName: SequenceFileOutputFormat", "DEL SimpleName: AbstractExample", "DEL SimpleName: get", "DEL StringLiteral: \"one\"", "DEL SimpleName: TableMapReduceUtil", "DEL QualifiedName: Norm.One", "DEL BooleanLiteral: true", "DEL SimpleName: Matrix", "DEL Block", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL VariableDeclarationFragment", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL SimpleName: Matrix", "DEL SimpleName: Job", "DEL BooleanLiteral: true", "DEL SimpleName: result", "DEL SimpleType: HamaConfiguration", "DEL VariableDeclarationFragment", "DEL SimpleName: job", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL SimpleType: Matrix", "DEL StringLiteral: \"arguments: type - one | infinity | frobenius | maxvalue\"", "DEL StringLiteral: \"infinity\"", "DEL SimpleName: currentTimeMillis", "DEL BooleanLiteral: true", "DEL SimpleName: outDir", "DEL SimpleName: scan", "DEL SimpleName: job", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: println", "DEL SimpleName: scan", "DEL SimpleName: setOutputFormatClass", "DEL MethodInvocation", "DEL SimpleName: job", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleType: Scan", "DEL TypeLiteral", "DEL SimpleName: numInside", "DEL SimpleName: Matrix", "DEL SimpleName: getNorm1", "DEL SimpleName: outDir", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL TagElement: @return", "DEL VariableDeclarationStatement", "DEL SimpleName: addFamily", "DEL SimpleName: job", "DEL QualifiedName: System.out", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormReducer", "DEL TagElement: @param", "DEL SimpleName: readOutput", "DEL SimpleName: scan", "DEL SimpleName: Path", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormMapper", "DEL SimpleName: Path", "DEL SimpleName: Matrix", "DEL ExpressionStatement", "DEL SimpleName: readOutput", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleType: Path", "DEL SimpleType: IOException", "DEL SimpleName: printStackTrace", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getPath", "DEL MethodInvocation", "DEL SimpleName: readOutput", "DEL SimpleType: SequenceFile.Reader", "DEL MethodInvocation"]}]}}, {"MatrixNorm_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.fs.FileSystem(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.fs.Path(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.SequenceFile(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.Constants(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.HamaAdmin(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hama.HamaAdminImpl(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.MatrixNormMapReduce(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.matrix.Matrix.Norm(50)", "Delete ImportDeclaration(51)", "Delete Modifier: public(52)", "Delete SimpleName: MatrixNorm(53)", "Delete SimpleName: AbstractExample(54)", "Delete SimpleType: AbstractExample(55)", "Delete Modifier: public(56)", "Delete Modifier: static(57)", "Delete PrimitiveType: void(58)", "Delete SimpleName: main(59)", "Delete SimpleName: String(60)", "Delete SimpleType: String(61)", "Delete Dimension(62)", "Delete ArrayType: String[](63)", "Delete SimpleName: args(64)", "Delete SingleVariableDeclaration(65)", "Delete SimpleName: IOException(66)", "Delete SimpleType: IOException(67)", "Delete QualifiedName: args.length(68)", "Delete NumberLiteral: 1(69)", "Delete InfixExpression: <(70)", "Delete QualifiedName: System.out(71)", "Delete SimpleName: println(72)", "Delete StringLiteral: \"norm [-m maps] [-r reduces] <matrix name> <type>\"(73)", "Delete MethodInvocation(74)", "Delete ExpressionStatement(75)", "Delete QualifiedName: System.out(76)", "Delete SimpleName: println(77)", "Delete StringLiteral: \"arguments: type - one | infinity | frobenius | maxvalue\"(78)", "Delete MethodInvocation(79)", "Delete ExpressionStatement(80)", "Delete SimpleName: System(81)", "Delete SimpleName: exit(82)", "Delete NumberLiteral: 1(83)", "Delete PrefixExpression: -(84)", "Delete MethodInvocation(85)", "Delete ExpressionStatement(86)", "Delete Block(87)", "Delete SimpleName: parseArgs(88)", "Delete SimpleName: args(89)", "Delete MethodInvocation(90)", "Delete ExpressionStatement(91)", "Delete Block(92)", "Delete IfStatement(93)", "Delete SimpleName: HamaAdmin(94)", "Delete SimpleType: HamaAdmin(95)", "Delete SimpleName: admin(96)", "Delete SimpleName: HamaAdminImpl(97)", "Delete SimpleType: HamaAdminImpl(98)", "Delete SimpleName: conf(99)", "Delete ClassInstanceCreation(100)", "Delete VariableDeclarationFragment(101)", "Delete VariableDeclarationStatement(102)", "Delete SimpleName: Matrix(103)", "Delete SimpleType: Matrix(104)", "Delete SimpleName: a(105)", "Delete SimpleName: admin(106)", "Delete SimpleName: getMatrix(107)", "Delete SimpleName: ARGS(108)", "Delete SimpleName: get(109)", "Delete NumberLiteral: 0(110)", "Delete MethodInvocation(111)", "Delete MethodInvocation(112)", "Delete VariableDeclarationFragment(113)", "Delete VariableDeclarationStatement(114)", "Delete SimpleName: ARGS(115)", "Delete SimpleName: get(116)", "Delete NumberLiteral: 1(117)", "Delete MethodInvocation(118)", "Delete SimpleName: equalsIgnoreCase(119)", "Delete StringLiteral: \"one\"(120)", "Delete MethodInvocation(121)", "Delete QualifiedName: System.out(122)", "Delete SimpleName: println(123)", "Delete StringLiteral: \"The maximum absolute column sum of matrix '\"(124)", "Delete SimpleName: ARGS(125)", "Delete SimpleName: get(126)", "Delete NumberLiteral: 0(127)", "Delete MethodInvocation(128)", "Delete StringLiteral: \"' is \"(129)", "Delete SimpleName: norm(130)", "Delete SimpleName: a(131)", "Delete QualifiedName: Norm.One(132)", "Delete MethodInvocation(133)", "Delete InfixExpression: +(134)", "Delete MethodInvocation(135)", "Delete ExpressionStatement(136)", "Delete Block(137)", "Delete SimpleName: ARGS(138)", "Delete SimpleName: get(139)", "Delete NumberLiteral: 1(140)", "Delete MethodInvocation(141)", "Delete SimpleName: equalsIgnoreCase(142)", "Delete StringLiteral: \"infinity\"(143)", "Delete MethodInvocation(144)", "Delete QualifiedName: System.out(145)", "Delete SimpleName: println(146)", "Delete StringLiteral: \"The maximum absolute row sum of matrix '\"(147)", "Delete SimpleName: ARGS(148)", "Delete SimpleName: get(149)", "Delete NumberLiteral: 0(150)", "Delete MethodInvocation(151)", "Delete StringLiteral: \"' is \"(152)", "Delete SimpleName: norm(153)", "Delete SimpleName: a(154)", "Delete QualifiedName: Norm.Infinity(155)", "Delete MethodInvocation(156)", "Delete InfixExpression: +(157)", "Delete MethodInvocation(158)", "Delete ExpressionStatement(159)", "Delete Block(160)", "Delete SimpleName: ARGS(161)", "Delete SimpleName: get(162)", "Delete NumberLiteral: 1(163)", "Delete MethodInvocation(164)", "Delete SimpleName: equalsIgnoreCase(165)", "Delete StringLiteral: \"frobenius\"(166)", "Delete MethodInvocation(167)", "Delete QualifiedName: System.out(168)", "Delete SimpleName: println(169)", "Delete StringLiteral: \"The root of sum of squares of matrix '\"(170)", "Delete SimpleName: ARGS(171)", "Delete SimpleName: get(172)", "Delete NumberLiteral: 0(173)", "Delete MethodInvocation(174)", "Delete StringLiteral: \"' is \"(175)", "Delete SimpleName: norm(176)", "Delete SimpleName: a(177)", "Delete QualifiedName: Norm.Frobenius(178)", "Delete MethodInvocation(179)", "Delete InfixExpression: +(180)", "Delete MethodInvocation(181)", "Delete ExpressionStatement(182)", "Delete Block(183)", "Delete QualifiedName: System.out(184)", "Delete SimpleName: println(185)", "Delete StringLiteral: \"The max absolute cell value of matrix '\"(186)", "Delete SimpleName: ARGS(187)", "Delete SimpleName: get(188)", "Delete NumberLiteral: 0(189)", "Delete MethodInvocation(190)", "Delete StringLiteral: \"' is \"(191)", "Delete SimpleName: norm(192)", "Delete SimpleName: a(193)", "Delete QualifiedName: Norm.Maxvalue(194)", "Delete MethodInvocation(195)", "Delete InfixExpression: +(196)", "Delete MethodInvocation(197)", "Delete ExpressionStatement(198)", "Delete Block(199)", "Delete IfStatement(200)", "Delete IfStatement(201)", "Delete IfStatement(202)", "Delete Block(203)", "Delete MethodDeclaration(204)", "Delete TextElement: Computes the given norm of the matrix(205)", "Delete TagElement(206)", "Delete SimpleName: type(207)", "Delete TagElement: @param(208)", "Delete TextElement:  norm of the matrix(209)", "Delete TagElement: @return(210)", "Delete SimpleName: IOException(211)", "Delete TagElement: @throws(212)", "Delete Javadoc(213)", "Delete Modifier: public(214)", "Delete Modifier: static(215)", "Delete PrimitiveType: double(216)", "Delete SimpleName: norm(217)", "Delete SimpleName: Matrix(218)", "Delete SimpleType: Matrix(219)", "Delete SimpleName: a(220)", "Delete SingleVariableDeclaration(221)", "Delete SimpleName: Norm(222)", "Delete SimpleType: Norm(223)", "Delete SimpleName: type(224)", "Delete SingleVariableDeclaration(225)", "Delete SimpleName: IOException(226)", "Delete SimpleType: IOException(227)", "Delete SimpleName: type(228)", "Delete QualifiedName: Norm.One(229)", "Delete InfixExpression: ==(230)", "Delete SimpleName: getNorm1(231)", "Delete SimpleName: a(232)", "Delete MethodInvocation(233)", "Delete ReturnStatement(234)", "Delete SimpleName: type(235)", "Delete QualifiedName: Norm.Frobenius(236)", "Delete InfixExpression: ==(237)", "Delete SimpleName: getFrobenius(238)", "Delete SimpleName: a(239)", "Delete MethodInvocation(240)", "Delete ReturnStatement(241)", "Delete SimpleName: type(242)", "Delete QualifiedName: Norm.Infinity(243)", "Delete InfixExpression: ==(244)", "Delete SimpleName: getInfinity(245)", "Delete SimpleName: a(246)", "Delete MethodInvocation(247)", "Delete ReturnStatement(248)", "Delete SimpleName: getMaxvalue(249)", "Delete SimpleName: a(250)", "Delete MethodInvocation(251)", "Delete ReturnStatement(252)", "Delete IfStatement(253)", "Delete IfStatement(254)", "Delete IfStatement(255)", "Delete Block(256)", "Delete MethodDeclaration(257)", "Delete Modifier: public(258)", "Delete Modifier: static(259)", "Delete PrimitiveType: double(260)", "Delete SimpleName: getNorm1(261)", "Delete SimpleName: Matrix(262)", "Delete SimpleType: Matrix(263)", "Delete SimpleName: a(264)", "Delete SingleVariableDeclaration(265)", "Delete SimpleName: IOException(266)", "Delete SimpleType: IOException(267)", "Delete Modifier: final(268)", "Delete SimpleName: FileSystem(269)", "Delete SimpleType: FileSystem(270)", "Delete SimpleName: fs(271)", "Delete SimpleName: FileSystem(272)", "Delete SimpleName: get(273)", "Delete SimpleName: conf(274)", "Delete MethodInvocation(275)", "Delete VariableDeclarationFragment(276)", "Delete VariableDeclarationStatement(277)", "Delete SimpleName: Path(278)", "Delete SimpleType: Path(279)", "Delete SimpleName: outDir(280)", "Delete SimpleName: Path(281)", "Delete SimpleType: Path(282)", "Delete SimpleName: Path(283)", "Delete SimpleType: Path(284)", "Delete SimpleName: a(285)", "Delete SimpleName: getType(286)", "Delete MethodInvocation(287)", "Delete StringLiteral: \"_TMP_norm1_dir_\"(288)", "Delete SimpleName: System(289)", "Delete SimpleName: currentTimeMillis(290)", "Delete MethodInvocation(291)", "Delete InfixExpression: +(292)", "Delete ClassInstanceCreation(293)", "Delete StringLiteral: \"out\"(294)", "Delete ClassInstanceCreation(295)", "Delete VariableDeclarationFragment(296)", "Delete VariableDeclarationStatement(297)", "Delete SimpleName: fs(298)", "Delete SimpleName: exists(299)", "Delete SimpleName: outDir(300)", "Delete MethodInvocation(301)", "Delete SimpleName: fs(302)", "Delete SimpleName: delete(303)", "Delete SimpleName: outDir(304)", "Delete BooleanLiteral: true(305)", "Delete MethodInvocation(306)", "Delete ExpressionStatement(307)", "Delete IfStatement(308)", "Delete SimpleName: Job(309)", "Delete SimpleType: Job(310)", "Delete SimpleName: job(311)", "Delete SimpleName: Job(312)", "Delete SimpleType: Job(313)", "Delete SimpleName: conf(314)", "Delete StringLiteral: \"norm1 MR job : \"(315)", "Delete SimpleName: a(316)", "Delete SimpleName: getPath(317)", "Delete MethodInvocation(318)", "Delete InfixExpression: +(319)", "Delete ClassInstanceCreation(320)", "Delete VariableDeclarationFragment(321)", "Delete VariableDeclarationStatement(322)", "Delete SimpleName: Scan(323)", "Delete SimpleType: Scan(324)", "Delete SimpleName: scan(325)", "Delete SimpleName: Scan(326)", "Delete SimpleType: Scan(327)", "Delete ClassInstanceCreation(328)", "Delete VariableDeclarationFragment(329)", "Delete VariableDeclarationStatement(330)", "Delete SimpleName: scan(331)", "Delete SimpleName: addFamily(332)", "Delete QualifiedName: Constants.COLUMNFAMILY(333)", "Delete MethodInvocation(334)", "Delete ExpressionStatement(335)", "Delete SimpleName: TableMapReduceUtil(336)", "Delete SimpleName: initTableMapperJob(337)", "Delete SimpleName: a(338)", "Delete SimpleName: getPath(339)", "Delete MethodInvocation(340)", "Delete SimpleName: scan(341)", "Delete QualifiedName: MatrixNormMapReduce.MatrixOneNormMapper(342)", "Delete SimpleType: MatrixNormMapReduce.MatrixOneNormMapper(343)", "Delete TypeLiteral(344)", "Delete SimpleName: IntWritable(345)", "Delete SimpleType: IntWritable(346)", "Delete TypeLiteral(347)", "Delete SimpleName: DoubleWritable(348)", "Delete SimpleType: DoubleWritable(349)", "Delete TypeLiteral(350)", "Delete SimpleName: job(351)", "Delete MethodInvocation(352)", "Delete ExpressionStatement(353)", "Delete SimpleName: job(354)", "Delete SimpleName: setCombinerClass(355)", "Delete QualifiedName: MatrixNormMapReduce.MatrixOneNormCombiner(356)", "Delete SimpleType: MatrixNormMapReduce.MatrixOneNormCombiner(357)", "Delete TypeLiteral(358)", "Delete MethodInvocation(359)", "Delete ExpressionStatement(360)", "Delete SimpleName: job(361)", "Delete SimpleName: setReducerClass(362)", "Delete QualifiedName: MatrixNormMapReduce.MatrixOneNormReducer(363)", "Delete SimpleType: MatrixNormMapReduce.MatrixOneNormReducer(364)", "Delete TypeLiteral(365)", "Delete MethodInvocation(366)", "Delete ExpressionStatement(367)", "Delete SimpleName: job(368)", "Delete SimpleName: setNumReduceTasks(369)", "Delete NumberLiteral: 1(370)", "Delete MethodInvocation(371)", "Delete ExpressionStatement(372)", "Delete SimpleName: job(373)", "Delete SimpleName: setOutputFormatClass(374)", "Delete SimpleName: SequenceFileOutputFormat(375)", "Delete SimpleType: SequenceFileOutputFormat(376)", "Delete TypeLiteral(377)", "Delete MethodInvocation(378)", "Delete ExpressionStatement(379)", "Delete SimpleName: job(380)", "Delete SimpleName: setOutputKeyClass(381)", "Delete SimpleName: IntWritable(382)", "Delete SimpleType: IntWritable(383)", "Delete TypeLiteral(384)", "Delete MethodInvocation(385)", "Delete ExpressionStatement(386)", "Delete SimpleName: job(387)", "Delete SimpleName: setOutputValueClass(388)", "Delete SimpleName: DoubleWritable(389)", "Delete SimpleType: DoubleWritable(390)", "Delete TypeLiteral(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: SequenceFileOutputFormat(394)", "Delete SimpleName: setOutputPath(395)", "Delete SimpleName: job(396)", "Delete SimpleName: outDir(397)", "Delete MethodInvocation(398)", "Delete ExpressionStatement(399)", "Delete SimpleName: job(400)", "Delete SimpleName: waitForCompletion(401)", "Delete BooleanLiteral: true(402)", "Delete MethodInvocation(403)", "Delete ExpressionStatement(404)", "Delete QualifiedName: System.out(405)", "Delete SimpleName: println(406)", "Delete SimpleName: job(407)", "Delete SimpleName: reduceProgress(408)", "Delete MethodInvocation(409)", "Delete MethodInvocation(410)", "Delete ExpressionStatement(411)", "Delete Block(412)", "Delete SimpleName: InterruptedException(413)", "Delete SimpleType: InterruptedException(414)", "Delete SimpleName: e(415)", "Delete SingleVariableDeclaration(416)", "Delete SimpleName: e(417)", "Delete SimpleName: printStackTrace(418)", "Delete MethodInvocation(419)", "Delete ExpressionStatement(420)", "Delete Block(421)", "Delete CatchClause(422)", "Delete SimpleName: ClassNotFoundException(423)", "Delete SimpleType: ClassNotFoundException(424)", "Delete SimpleName: e(425)", "Delete SingleVariableDeclaration(426)", "Delete SimpleName: e(427)", "Delete SimpleName: printStackTrace(428)", "Delete MethodInvocation(429)", "Delete ExpressionStatement(430)", "Delete Block(431)", "Delete CatchClause(432)", "Delete TryStatement(433)", "Delete PrimitiveType: double(434)", "Delete SimpleName: result(435)", "Delete SimpleName: readOutput(436)", "Delete SimpleName: conf(437)", "Delete SimpleName: fs(438)", "Delete SimpleName: outDir(439)", "Delete MethodInvocation(440)", "Delete VariableDeclarationFragment(441)", "Delete VariableDeclarationStatement(442)", "Delete SimpleName: fs(443)", "Delete SimpleName: delete(444)", "Delete SimpleName: outDir(445)", "Delete SimpleName: getParent(446)", "Delete MethodInvocation(447)", "Delete BooleanLiteral: true(448)", "Delete MethodInvocation(449)", "Delete ExpressionStatement(450)", "Delete SimpleName: result(451)", "Delete ReturnStatement(452)", "Delete Block(453)", "Delete MethodDeclaration(454)", "Delete Modifier: protected(455)", "Delete Modifier: static(456)", "Delete PrimitiveType: double(457)", "Delete SimpleName: getMaxvalue(458)", "Delete SimpleName: Matrix(459)", "Delete SimpleType: Matrix(460)", "Delete SimpleName: a(461)", "Delete SingleVariableDeclaration(462)", "Delete SimpleName: IOException(463)", "Delete SimpleType: IOException(464)", "Delete Modifier: final(465)", "Delete SimpleName: FileSystem(466)", "Delete SimpleType: FileSystem(467)", "Delete SimpleName: fs(468)", "Delete SimpleName: FileSystem(469)", "Delete SimpleName: get(470)", "Delete SimpleName: conf(471)", "Delete MethodInvocation(472)", "Delete VariableDeclarationFragment(473)", "Delete VariableDeclarationStatement(474)", "Delete SimpleName: Path(475)", "Delete SimpleType: Path(476)", "Delete SimpleName: outDir(477)", "Delete SimpleName: Path(478)", "Delete SimpleType: Path(479)", "Delete SimpleName: Path(480)", "Delete SimpleType: Path(481)", "Delete SimpleName: a(482)", "Delete SimpleName: getType(483)", "Delete MethodInvocation(484)", "Delete StringLiteral: \"_TMP_normMaxValue_dir_\"(485)", "Delete SimpleName: System(486)", "Delete SimpleName: currentTimeMillis(487)", "Delete MethodInvocation(488)", "Delete InfixExpression: +(489)", "Delete ClassInstanceCreation(490)", "Delete StringLiteral: \"out\"(491)", "Delete ClassInstanceCreation(492)", "Delete VariableDeclarationFragment(493)", "Delete VariableDeclarationStatement(494)", "Delete SimpleName: fs(495)", "Delete SimpleName: exists(496)", "Delete SimpleName: outDir(497)", "Delete MethodInvocation(498)", "Delete SimpleName: fs(499)", "Delete SimpleName: delete(500)", "Delete SimpleName: outDir(501)", "Delete BooleanLiteral: true(502)", "Delete MethodInvocation(503)", "Delete ExpressionStatement(504)", "Delete IfStatement(505)", "Delete SimpleName: Job(506)", "Delete SimpleType: Job(507)", "Delete SimpleName: job(508)", "Delete SimpleName: Job(509)", "Delete SimpleType: Job(510)", "Delete SimpleName: conf(511)", "Delete StringLiteral: \"MaxValue Norm MR job : \"(512)", "Delete SimpleName: a(513)", "Delete SimpleName: getPath(514)", "Delete MethodInvocation(515)", "Delete InfixExpression: +(516)", "Delete ClassInstanceCreation(517)", "Delete VariableDeclarationFragment(518)", "Delete VariableDeclarationStatement(519)", "Delete SimpleName: Scan(520)", "Delete SimpleType: Scan(521)", "Delete SimpleName: scan(522)", "Delete SimpleName: Scan(523)", "Delete SimpleType: Scan(524)", "Delete ClassInstanceCreation(525)", "Delete VariableDeclarationFragment(526)", "Delete VariableDeclarationStatement(527)", "Delete SimpleName: scan(528)", "Delete SimpleName: addFamily(529)", "Delete QualifiedName: Constants.COLUMNFAMILY(530)", "Delete MethodInvocation(531)", "Delete ExpressionStatement(532)", "Delete SimpleName: TableMapReduceUtil(533)", "Delete SimpleName: initTableMapperJob(534)", "Delete SimpleName: a(535)", "Delete SimpleName: getPath(536)", "Delete MethodInvocation(537)", "Delete SimpleName: scan(538)", "Delete QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormMapper(539)", "Delete SimpleType: MatrixNormMapReduce.MatrixMaxValueNormMapper(540)", "Delete TypeLiteral(541)", "Delete SimpleName: IntWritable(542)", "Delete SimpleType: IntWritable(543)", "Delete TypeLiteral(544)", "Delete SimpleName: DoubleWritable(545)", "Delete SimpleType: DoubleWritable(546)", "Delete TypeLiteral(547)", "Delete SimpleName: job(548)", "Delete MethodInvocation(549)", "Delete ExpressionStatement(550)", "Delete SimpleName: job(551)", "Delete SimpleName: setCombinerClass(552)", "Delete QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormReducer(553)", "Delete SimpleType: MatrixNormMapReduce.MatrixMaxValueNormReducer(554)", "Delete TypeLiteral(555)", "Delete MethodInvocation(556)", "Delete ExpressionStatement(557)", "Delete SimpleName: job(558)", "Delete SimpleName: setReducerClass(559)", "Delete QualifiedName: MatrixNormMapReduce.MatrixMaxValueNormReducer(560)", "Delete SimpleType: MatrixNormMapReduce.MatrixMaxValueNormReducer(561)", "Delete TypeLiteral(562)", "Delete MethodInvocation(563)", "Delete ExpressionStatement(564)", "Delete SimpleName: job(565)", "Delete SimpleName: setNumReduceTasks(566)", "Delete NumberLiteral: 1(567)", "Delete MethodInvocation(568)", "Delete ExpressionStatement(569)", "Delete SimpleName: job(570)", "Delete SimpleName: setOutputFormatClass(571)", "Delete SimpleName: SequenceFileOutputFormat(572)", "Delete SimpleType: SequenceFileOutputFormat(573)", "Delete TypeLiteral(574)", "Delete MethodInvocation(575)", "Delete ExpressionStatement(576)", "Delete SimpleName: job(577)", "Delete SimpleName: setOutputKeyClass(578)", "Delete SimpleName: IntWritable(579)", "Delete SimpleType: IntWritable(580)", "Delete TypeLiteral(581)", "Delete MethodInvocation(582)", "Delete ExpressionStatement(583)", "Delete SimpleName: job(584)", "Delete SimpleName: setOutputValueClass(585)", "Delete SimpleName: DoubleWritable(586)", "Delete SimpleType: DoubleWritable(587)", "Delete TypeLiteral(588)", "Delete MethodInvocation(589)", "Delete ExpressionStatement(590)", "Delete SimpleName: SequenceFileOutputFormat(591)", "Delete SimpleName: setOutputPath(592)", "Delete SimpleName: job(593)", "Delete SimpleName: outDir(594)", "Delete MethodInvocation(595)", "Delete ExpressionStatement(596)", "Delete SimpleName: job(597)", "Delete SimpleName: waitForCompletion(598)", "Delete BooleanLiteral: true(599)", "Delete MethodInvocation(600)", "Delete ExpressionStatement(601)", "Delete Block(602)", "Delete SimpleName: InterruptedException(603)", "Delete SimpleType: InterruptedException(604)", "Delete SimpleName: e(605)", "Delete SingleVariableDeclaration(606)", "Delete SimpleName: e(607)", "Delete SimpleName: printStackTrace(608)", "Delete MethodInvocation(609)", "Delete ExpressionStatement(610)", "Delete Block(611)", "Delete CatchClause(612)", "Delete SimpleName: ClassNotFoundException(613)", "Delete SimpleType: ClassNotFoundException(614)", "Delete SimpleName: e(615)", "Delete SingleVariableDeclaration(616)", "Delete SimpleName: e(617)", "Delete SimpleName: printStackTrace(618)", "Delete MethodInvocation(619)", "Delete ExpressionStatement(620)", "Delete Block(621)", "Delete CatchClause(622)", "Delete TryStatement(623)", "Delete PrimitiveType: double(624)", "Delete SimpleName: result(625)", "Delete SimpleName: readOutput(626)", "Delete SimpleName: conf(627)", "Delete SimpleName: fs(628)", "Delete SimpleName: outDir(629)", "Delete MethodInvocation(630)", "Delete VariableDeclarationFragment(631)", "Delete VariableDeclarationStatement(632)", "Delete SimpleName: fs(633)", "Delete SimpleName: delete(634)", "Delete SimpleName: outDir(635)", "Delete SimpleName: getParent(636)", "Delete MethodInvocation(637)", "Delete BooleanLiteral: true(638)", "Delete MethodInvocation(639)", "Delete ExpressionStatement(640)", "Delete SimpleName: result(641)", "Delete ReturnStatement(642)", "Delete Block(643)", "Delete MethodDeclaration(644)", "Delete Modifier: protected(645)", "Delete Modifier: static(646)", "Delete PrimitiveType: double(647)", "Delete SimpleName: getInfinity(648)", "Delete SimpleName: Matrix(649)", "Delete SimpleType: Matrix(650)", "Delete SimpleName: a(651)", "Delete SingleVariableDeclaration(652)", "Delete SimpleName: IOException(653)", "Delete SimpleType: IOException(654)", "Delete Modifier: final(655)", "Delete SimpleName: FileSystem(656)", "Delete SimpleType: FileSystem(657)", "Delete SimpleName: fs(658)", "Delete SimpleName: FileSystem(659)", "Delete SimpleName: get(660)", "Delete SimpleName: conf(661)", "Delete MethodInvocation(662)", "Delete VariableDeclarationFragment(663)", "Delete VariableDeclarationStatement(664)", "Delete SimpleName: Path(665)", "Delete SimpleType: Path(666)", "Delete SimpleName: outDir(667)", "Delete SimpleName: Path(668)", "Delete SimpleType: Path(669)", "Delete SimpleName: Path(670)", "Delete SimpleType: Path(671)", "Delete SimpleName: a(672)", "Delete SimpleName: getType(673)", "Delete MethodInvocation(674)", "Delete StringLiteral: \"_TMP_normInifity_dir_\"(675)", "Delete SimpleName: System(676)", "Delete SimpleName: currentTimeMillis(677)", "Delete MethodInvocation(678)", "Delete InfixExpression: +(679)", "Delete ClassInstanceCreation(680)", "Delete StringLiteral: \"out\"(681)", "Delete ClassInstanceCreation(682)", "Delete VariableDeclarationFragment(683)", "Delete VariableDeclarationStatement(684)", "Delete SimpleName: fs(685)", "Delete SimpleName: exists(686)", "Delete SimpleName: outDir(687)", "Delete MethodInvocation(688)", "Delete SimpleName: fs(689)", "Delete SimpleName: delete(690)", "Delete SimpleName: outDir(691)", "Delete BooleanLiteral: true(692)", "Delete MethodInvocation(693)", "Delete ExpressionStatement(694)", "Delete IfStatement(695)", "Delete SimpleName: Job(696)", "Delete SimpleType: Job(697)", "Delete SimpleName: job(698)", "Delete SimpleName: Job(699)", "Delete SimpleType: Job(700)", "Delete SimpleName: conf(701)", "Delete StringLiteral: \"Infinity Norm MR job : \"(702)", "Delete SimpleName: a(703)", "Delete SimpleName: getPath(704)", "Delete MethodInvocation(705)", "Delete InfixExpression: +(706)", "Delete ClassInstanceCreation(707)", "Delete VariableDeclarationFragment(708)", "Delete VariableDeclarationStatement(709)", "Delete SimpleName: Scan(710)", "Delete SimpleType: Scan(711)", "Delete SimpleName: scan(712)", "Delete SimpleName: Scan(713)", "Delete SimpleType: Scan(714)", "Delete ClassInstanceCreation(715)", "Delete VariableDeclarationFragment(716)", "Delete VariableDeclarationStatement(717)", "Delete SimpleName: scan(718)", "Delete SimpleName: addFamily(719)", "Delete QualifiedName: Constants.COLUMNFAMILY(720)", "Delete MethodInvocation(721)", "Delete ExpressionStatement(722)", "Delete SimpleName: TableMapReduceUtil(723)", "Delete SimpleName: initTableMapperJob(724)", "Delete SimpleName: a(725)", "Delete SimpleName: getPath(726)", "Delete MethodInvocation(727)", "Delete SimpleName: scan(728)", "Delete QualifiedName: MatrixNormMapReduce.MatrixInfinityNormMapper(729)", "Delete SimpleType: MatrixNormMapReduce.MatrixInfinityNormMapper(730)", "Delete TypeLiteral(731)", "Delete SimpleName: IntWritable(732)", "Delete SimpleType: IntWritable(733)", "Delete TypeLiteral(734)", "Delete SimpleName: DoubleWritable(735)", "Delete SimpleType: DoubleWritable(736)", "Delete TypeLiteral(737)", "Delete SimpleName: job(738)", "Delete MethodInvocation(739)", "Delete ExpressionStatement(740)", "Delete SimpleName: job(741)", "Delete SimpleName: setCombinerClass(742)", "Delete QualifiedName: MatrixNormMapReduce.MatrixInfinityNormReduce(743)", "Delete SimpleType: MatrixNormMapReduce.MatrixInfinityNormReduce(744)", "Delete TypeLiteral(745)", "Delete MethodInvocation(746)", "Delete ExpressionStatement(747)", "Delete SimpleName: job(748)", "Delete SimpleName: setReducerClass(749)", "Delete QualifiedName: MatrixNormMapReduce.MatrixInfinityNormReduce(750)", "Delete SimpleType: MatrixNormMapReduce.MatrixInfinityNormReduce(751)", "Delete TypeLiteral(752)", "Delete MethodInvocation(753)", "Delete ExpressionStatement(754)", "Delete SimpleName: job(755)", "Delete SimpleName: setNumReduceTasks(756)", "Delete NumberLiteral: 1(757)", "Delete MethodInvocation(758)", "Delete ExpressionStatement(759)", "Delete SimpleName: job(760)", "Delete SimpleName: setOutputFormatClass(761)", "Delete SimpleName: SequenceFileOutputFormat(762)", "Delete SimpleType: SequenceFileOutputFormat(763)", "Delete TypeLiteral(764)", "Delete MethodInvocation(765)", "Delete ExpressionStatement(766)", "Delete SimpleName: job(767)", "Delete SimpleName: setOutputKeyClass(768)", "Delete SimpleName: IntWritable(769)", "Delete SimpleType: IntWritable(770)", "Delete TypeLiteral(771)", "Delete MethodInvocation(772)", "Delete ExpressionStatement(773)", "Delete SimpleName: job(774)", "Delete SimpleName: setOutputValueClass(775)", "Delete SimpleName: DoubleWritable(776)", "Delete SimpleType: DoubleWritable(777)", "Delete TypeLiteral(778)", "Delete MethodInvocation(779)", "Delete ExpressionStatement(780)", "Delete SimpleName: SequenceFileOutputFormat(781)", "Delete SimpleName: setOutputPath(782)", "Delete SimpleName: job(783)", "Delete SimpleName: outDir(784)", "Delete MethodInvocation(785)", "Delete ExpressionStatement(786)", "Delete SimpleName: job(787)", "Delete SimpleName: waitForCompletion(788)", "Delete BooleanLiteral: true(789)", "Delete MethodInvocation(790)", "Delete ExpressionStatement(791)", "Delete Block(792)", "Delete SimpleName: InterruptedException(793)", "Delete SimpleType: InterruptedException(794)", "Delete SimpleName: e(795)", "Delete SingleVariableDeclaration(796)", "Delete SimpleName: e(797)", "Delete SimpleName: printStackTrace(798)", "Delete MethodInvocation(799)", "Delete ExpressionStatement(800)", "Delete Block(801)", "Delete CatchClause(802)", "Delete SimpleName: ClassNotFoundException(803)", "Delete SimpleType: ClassNotFoundException(804)", "Delete SimpleName: e(805)", "Delete SingleVariableDeclaration(806)", "Delete SimpleName: e(807)", "Delete SimpleName: printStackTrace(808)", "Delete MethodInvocation(809)", "Delete ExpressionStatement(810)", "Delete Block(811)", "Delete CatchClause(812)", "Delete TryStatement(813)", "Delete PrimitiveType: double(814)", "Delete SimpleName: result(815)", "Delete SimpleName: readOutput(816)", "Delete SimpleName: conf(817)", "Delete SimpleName: fs(818)", "Delete SimpleName: outDir(819)", "Delete MethodInvocation(820)", "Delete VariableDeclarationFragment(821)", "Delete VariableDeclarationStatement(822)", "Delete SimpleName: fs(823)", "Delete SimpleName: delete(824)", "Delete SimpleName: outDir(825)", "Delete SimpleName: getParent(826)", "Delete MethodInvocation(827)", "Delete BooleanLiteral: true(828)", "Delete MethodInvocation(829)", "Delete ExpressionStatement(830)", "Delete SimpleName: result(831)", "Delete ReturnStatement(832)", "Delete Block(833)", "Delete MethodDeclaration(834)", "Delete Modifier: protected(835)", "Delete Modifier: static(836)", "Delete PrimitiveType: double(837)", "Delete SimpleName: getFrobenius(838)", "Delete SimpleName: Matrix(839)", "Delete SimpleType: Matrix(840)", "Delete SimpleName: a(841)", "Delete SingleVariableDeclaration(842)", "Delete SimpleName: IOException(843)", "Delete SimpleType: IOException(844)", "Delete Modifier: final(845)", "Delete SimpleName: FileSystem(846)", "Delete SimpleType: FileSystem(847)", "Delete SimpleName: fs(848)", "Delete SimpleName: FileSystem(849)", "Delete SimpleName: get(850)", "Delete SimpleName: conf(851)", "Delete MethodInvocation(852)", "Delete VariableDeclarationFragment(853)", "Delete VariableDeclarationStatement(854)", "Delete SimpleName: Path(855)", "Delete SimpleType: Path(856)", "Delete SimpleName: outDir(857)", "Delete SimpleName: Path(858)", "Delete SimpleType: Path(859)", "Delete SimpleName: Path(860)", "Delete SimpleType: Path(861)", "Delete SimpleName: a(862)", "Delete SimpleName: getType(863)", "Delete MethodInvocation(864)", "Delete StringLiteral: \"_TMP_normFrobenius_dir_\"(865)", "Delete SimpleName: System(866)", "Delete SimpleName: currentTimeMillis(867)", "Delete MethodInvocation(868)", "Delete InfixExpression: +(869)", "Delete ClassInstanceCreation(870)", "Delete StringLiteral: \"out\"(871)", "Delete ClassInstanceCreation(872)", "Delete VariableDeclarationFragment(873)", "Delete VariableDeclarationStatement(874)", "Delete SimpleName: fs(875)", "Delete SimpleName: exists(876)", "Delete SimpleName: outDir(877)", "Delete MethodInvocation(878)", "Delete SimpleName: fs(879)", "Delete SimpleName: delete(880)", "Delete SimpleName: outDir(881)", "Delete BooleanLiteral: true(882)", "Delete MethodInvocation(883)", "Delete ExpressionStatement(884)", "Delete IfStatement(885)", "Delete SimpleName: Job(886)", "Delete SimpleType: Job(887)", "Delete SimpleName: job(888)", "Delete SimpleName: Job(889)", "Delete SimpleType: Job(890)", "Delete SimpleName: conf(891)", "Delete StringLiteral: \"Frobenius Norm MR job : \"(892)", "Delete SimpleName: a(893)", "Delete SimpleName: getPath(894)", "Delete MethodInvocation(895)", "Delete InfixExpression: +(896)", "Delete ClassInstanceCreation(897)", "Delete VariableDeclarationFragment(898)", "Delete VariableDeclarationStatement(899)", "Delete SimpleName: Scan(900)", "Delete SimpleType: Scan(901)", "Delete SimpleName: scan(902)", "Delete SimpleName: Scan(903)", "Delete SimpleType: Scan(904)", "Delete ClassInstanceCreation(905)", "Delete VariableDeclarationFragment(906)", "Delete VariableDeclarationStatement(907)", "Delete SimpleName: scan(908)", "Delete SimpleName: addFamily(909)", "Delete QualifiedName: Constants.COLUMNFAMILY(910)", "Delete MethodInvocation(911)", "Delete ExpressionStatement(912)", "Delete SimpleName: TableMapReduceUtil(913)", "Delete SimpleName: initTableMapperJob(914)", "Delete SimpleName: a(915)", "Delete SimpleName: getPath(916)", "Delete MethodInvocation(917)", "Delete SimpleName: scan(918)", "Delete QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormMapper(919)", "Delete SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormMapper(920)", "Delete TypeLiteral(921)", "Delete SimpleName: IntWritable(922)", "Delete SimpleType: IntWritable(923)", "Delete TypeLiteral(924)", "Delete SimpleName: DoubleWritable(925)", "Delete SimpleType: DoubleWritable(926)", "Delete TypeLiteral(927)", "Delete SimpleName: job(928)", "Delete MethodInvocation(929)", "Delete ExpressionStatement(930)", "Delete SimpleName: job(931)", "Delete SimpleName: setCombinerClass(932)", "Delete QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormCombiner(933)", "Delete SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormCombiner(934)", "Delete TypeLiteral(935)", "Delete MethodInvocation(936)", "Delete ExpressionStatement(937)", "Delete SimpleName: job(938)", "Delete SimpleName: setReducerClass(939)", "Delete QualifiedName: MatrixNormMapReduce.MatrixFrobeniusNormReducer(940)", "Delete SimpleType: MatrixNormMapReduce.MatrixFrobeniusNormReducer(941)", "Delete TypeLiteral(942)", "Delete MethodInvocation(943)", "Delete ExpressionStatement(944)", "Delete SimpleName: job(945)", "Delete SimpleName: setNumReduceTasks(946)", "Delete NumberLiteral: 1(947)", "Delete MethodInvocation(948)", "Delete ExpressionStatement(949)", "Delete SimpleName: job(950)", "Delete SimpleName: setOutputFormatClass(951)", "Delete SimpleName: SequenceFileOutputFormat(952)", "Delete SimpleType: SequenceFileOutputFormat(953)", "Delete TypeLiteral(954)", "Delete MethodInvocation(955)", "Delete ExpressionStatement(956)", "Delete SimpleName: job(957)", "Delete SimpleName: setOutputKeyClass(958)", "Delete SimpleName: IntWritable(959)", "Delete SimpleType: IntWritable(960)", "Delete TypeLiteral(961)", "Delete MethodInvocation(962)", "Delete ExpressionStatement(963)", "Delete SimpleName: job(964)", "Delete SimpleName: setOutputValueClass(965)", "Delete SimpleName: DoubleWritable(966)", "Delete SimpleType: DoubleWritable(967)", "Delete TypeLiteral(968)", "Delete MethodInvocation(969)", "Delete ExpressionStatement(970)", "Delete SimpleName: SequenceFileOutputFormat(971)", "Delete SimpleName: setOutputPath(972)", "Delete SimpleName: job(973)", "Delete SimpleName: outDir(974)", "Delete MethodInvocation(975)", "Delete ExpressionStatement(976)", "Delete SimpleName: job(977)", "Delete SimpleName: waitForCompletion(978)", "Delete BooleanLiteral: true(979)", "Delete MethodInvocation(980)", "Delete ExpressionStatement(981)", "Delete Block(982)", "Delete SimpleName: InterruptedException(983)", "Delete SimpleType: InterruptedException(984)", "Delete SimpleName: e(985)", "Delete SingleVariableDeclaration(986)", "Delete SimpleName: e(987)", "Delete SimpleName: printStackTrace(988)", "Delete MethodInvocation(989)", "Delete ExpressionStatement(990)", "Delete Block(991)", "Delete CatchClause(992)", "Delete SimpleName: ClassNotFoundException(993)", "Delete SimpleType: ClassNotFoundException(994)", "Delete SimpleName: e(995)", "Delete SingleVariableDeclaration(996)", "Delete SimpleName: e(997)", "Delete SimpleName: printStackTrace(998)", "Delete MethodInvocation(999)", "Delete ExpressionStatement(1000)", "Delete Block(1001)", "Delete CatchClause(1002)", "Delete TryStatement(1003)", "Delete PrimitiveType: double(1004)", "Delete SimpleName: result(1005)", "Delete SimpleName: readOutput(1006)", "Delete SimpleName: conf(1007)", "Delete SimpleName: fs(1008)", "Delete SimpleName: outDir(1009)", "Delete MethodInvocation(1010)", "Delete VariableDeclarationFragment(1011)", "Delete VariableDeclarationStatement(1012)", "Delete SimpleName: fs(1013)", "Delete SimpleName: delete(1014)", "Delete SimpleName: outDir(1015)", "Delete SimpleName: getParent(1016)", "Delete MethodInvocation(1017)", "Delete BooleanLiteral: true(1018)", "Delete MethodInvocation(1019)", "Delete ExpressionStatement(1020)", "Delete SimpleName: result(1021)", "Delete ReturnStatement(1022)", "Delete Block(1023)", "Delete MethodDeclaration(1024)", "Delete Modifier: public(1025)", "Delete Modifier: static(1026)", "Delete PrimitiveType: double(1027)", "Delete SimpleName: readOutput(1028)", "Delete SimpleName: HamaConfiguration(1029)", "Delete SimpleType: HamaConfiguration(1030)", "Delete SimpleName: config(1031)", "Delete SingleVariableDeclaration(1032)", "Delete SimpleName: FileSystem(1033)", "Delete SimpleType: FileSystem(1034)", "Delete SimpleName: fs(1035)", "Delete SingleVariableDeclaration(1036)", "Delete SimpleName: Path(1037)", "Delete SimpleType: Path(1038)", "Delete SimpleName: outDir(1039)", "Delete SingleVariableDeclaration(1040)", "Delete SimpleName: IOException(1041)", "Delete SimpleType: IOException(1042)", "Delete SimpleName: Path(1043)", "Delete SimpleType: Path(1044)", "Delete SimpleName: inFile(1045)", "Delete SimpleName: Path(1046)", "Delete SimpleType: Path(1047)", "Delete SimpleName: outDir(1048)", "Delete StringLiteral: \"part-r-00000\"(1049)", "Delete ClassInstanceCreation(1050)", "Delete VariableDeclarationFragment(1051)", "Delete VariableDeclarationStatement(1052)", "Delete SimpleName: IntWritable(1053)", "Delete SimpleType: IntWritable(1054)", "Delete SimpleName: numInside(1055)", "Delete SimpleName: IntWritable(1056)", "Delete SimpleType: IntWritable(1057)", "Delete ClassInstanceCreation(1058)", "Delete VariableDeclarationFragment(1059)", "Delete VariableDeclarationStatement(1060)", "Delete SimpleName: DoubleWritable(1061)", "Delete SimpleType: DoubleWritable(1062)", "Delete SimpleName: result(1063)", "Delete SimpleName: DoubleWritable(1064)", "Delete SimpleType: DoubleWritable(1065)", "Delete ClassInstanceCreation(1066)", "Delete VariableDeclarationFragment(1067)", "Delete VariableDeclarationStatement(1068)", "Delete QualifiedName: SequenceFile.Reader(1069)", "Delete SimpleType: SequenceFile.Reader(1070)", "Delete SimpleName: reader(1071)", "Delete QualifiedName: SequenceFile.Reader(1072)", "Delete SimpleType: SequenceFile.Reader(1073)", "Delete SimpleName: fs(1074)", "Delete SimpleName: inFile(1075)", "Delete SimpleName: config(1076)", "Delete ClassInstanceCreation(1077)", "Delete VariableDeclarationFragment(1078)", "Delete VariableDeclarationStatement(1079)", "Delete SimpleName: reader(1080)", "Delete SimpleName: next(1081)", "Delete SimpleName: numInside(1082)", "Delete SimpleName: result(1083)", "Delete MethodInvocation(1084)", "Delete ExpressionStatement(1085)", "Delete Block(1086)", "Delete SimpleName: reader(1087)", "Delete SimpleName: close(1088)", "Delete MethodInvocation(1089)", "Delete ExpressionStatement(1090)", "Delete Block(1091)", "Delete TryStatement(1092)", "Delete SimpleName: result(1093)", "Delete SimpleName: get(1094)", "Delete MethodInvocation(1095)", "Delete ReturnStatement(1096)", "Delete Block(1097)", "Delete MethodDeclaration(1098)", "Delete TypeDeclaration: class(1099)"]}}, {"PiEstimator_cluster": {"actions": [{"root": "UPDATE from \"slave.udanax.org\" to \"localhost\"", "operations": ["UPD StringLiteral: \"slave.udanax.org\" from \"slave.udanax.org\" to \"localhost\""]}]}}, {"PiEstimator_diff": {"operations": ["Update StringLiteral: \"slave.udanax.org\"(200) to \"localhost\""]}}, {"RandomMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TagElement", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.fs.FileSystem", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.Path"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableOutputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.MapWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.SequenceFile", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.SequenceFile.CompressionType"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Job", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.lib.input.FileInputFormat"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.RandomMatrixMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce.RandomMatrixReducer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseMatrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.Matrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SparseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL InfixExpression: -", "DEL SimpleName: e", "DEL StringLiteral: \"random matrix MR job : \"", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL Modifier: final", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: set", "DEL ExpressionStatement", "DEL SimpleName: a", "DEL SimpleName: i", "DEL SimpleName: ARGS", "DEL TextElement: Generate matrix with random elements using Map/Reduce", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: ClassNotFoundException", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleName: set", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: getConfiguration", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL IfStatement", "DEL Modifier: final", "DEL SimpleType: IntWritable", "DEL SimpleType: SparseMatrix", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: ClassNotFoundException", "DEL MethodInvocation", "DEL QualifiedName: System.out", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL PrimitiveType: void", "DEL SimpleType: Path", "DEL Dimension", "DEL SimpleName: start", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL StringLiteral: \"matrix.column\"", "DEL SimpleName: job", "DEL SimpleName: RandomMatrixMapper", "DEL Modifier: static", "DEL SimpleName: i", "DEL NumberLiteral: 1", "DEL SimpleType: Path", "DEL SingleVariableDeclaration", "DEL SimpleName: append", "DEL SimpleName: e", "DEL NumberLiteral: 0", "DEL SimpleName: exit", "DEL ExpressionStatement", "DEL SimpleName: RandomMatrixReducer", "DEL SimpleName: Path", "DEL InfixExpression: ==", "DEL Javadoc", "DEL SimpleName: fs", "DEL SimpleName: random_mapred", "DEL MethodInvocation", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL SimpleName: parseArgs", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL Assignment: =", "DEL FieldDeclaration", "DEL StringLiteral: \"ex) rand -m 10 -r 10 2000 2000 30.5% matrixA\"", "DEL NumberLiteral: 1", "DEL VariableDeclarationStatement", "DEL SimpleName: TMP_DIR", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: FileInputFormat", "DEL SimpleName: job", "DEL SimpleName: String", "DEL SimpleName: e", "DEL SimpleType: SequenceFile.Writer", "DEL ClassInstanceCreation", "DEL SimpleType: Writable", "DEL QualifiedName: CompressionType.NONE", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL ParenthesizedExpression", "DEL SimpleType: Path", "DEL StringLiteral: \"100\"", "DEL SimpleName: FileSystem", "DEL SimpleName: get", "DEL ForStatement", "DEL SimpleName: rand", "DEL SimpleName: fs", "DEL SimpleType: IntWritable", "DEL SimpleName: file", "DEL SimpleType: IntWritable", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: printStackTrace", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: AbstractExample", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: IntWritable", "DEL SimpleType: FileSystem", "DEL SimpleType: SparseMatrix", "DEL MethodInvocation", "DEL SimpleName: m", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL SimpleName: writer", "DEL SimpleName: inDir", "DEL NullLiteral", "DEL SimpleName: getNumMapTasks", "DEL SimpleName: DenseMatrix", "DEL SimpleType: HamaConfiguration", "DEL ExpressionStatement", "DEL SimpleName: n", "DEL SimpleName: getNumMapTasks", "DEL TypeLiteral", "DEL QualifiedName: System.out", "DEL MethodInvocation", "DEL SimpleType: Matrix", "DEL Block", "DEL StringLiteral: \"DenseMatrix\"", "DEL StringLiteral: \"Wrote input for Map #\"", "DEL SimpleType: SparseMatrix", "DEL Modifier: public", "DEL SimpleName: getNumMapTasks", "DEL Block", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: IntWritable", "DEL SimpleName: set", "DEL SimpleName: file", "DEL CatchClause", "DEL SimpleName: waitForCompletion", "DEL StringLiteral: \"SparseMatrix\"", "DEL SimpleName: m", "DEL VariableDeclarationFragment", "DEL SimpleType: IntWritable", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: SparseMatrix", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL StringLiteral: \"in\"", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: start", "DEL PrimitiveType: int", "DEL SimpleName: interval", "DEL SingleVariableDeclaration", "DEL SimpleName: setReducerClass", "DEL StringLiteral: \"part\"", "DEL StringLiteral: \"matrix.density\"", "DEL Assignment: =", "DEL SimpleType: IOException", "DEL BooleanLiteral: true", "DEL VariableDeclarationFragment", "DEL SimpleName: FileInputFormat", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: getConfiguration", "DEL SimpleType: HamaConfiguration", "DEL TypeLiteral", "DEL SimpleName: end", "DEL InfixExpression: +", "DEL SimpleType: Path", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: setOutputFormatClass", "DEL MethodInvocation", "DEL StringLiteral: \"Wrote input for Map #\"", "DEL Modifier: private", "DEL SimpleName: length", "DEL SimpleType: Path", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: setInt", "DEL SimpleName: setOutputKeyClass", "DEL TagElement: @param", "DEL TextElement:  the number of columns.", "DEL SimpleName: e", "DEL SimpleName: a", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleName: end", "DEL StringLiteral: \"matrix.column\"", "DEL TextElement:  the number of rows.", "DEL SimpleName: job", "DEL InfixExpression: <", "DEL SimpleName: row", "DEL SimpleName: TABLE_PREFIX", "DEL Modifier: public", "DEL SimpleName: a", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: +", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: FileSystem", "DEL SimpleName: Path", "DEL NumberLiteral: 0", "DEL SimpleName: MapWritable", "DEL SimpleName: InterruptedException", "DEL SimpleName: printStackTrace", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: TMP_DIR", "DEL SimpleName: getNumMapTasks", "DEL QualifiedName: TableOutputFormat.OUTPUT_TABLE", "DEL Modifier: final", "DEL SimpleType: InterruptedException", "DEL SimpleName: conf", "DEL PrimitiveType: int", "DEL SimpleName: System", "DEL ExpressionStatement", "DEL SimpleName: ImmutableBytesWritable", "DEL NumberLiteral: 1", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: percent", "DEL SimpleName: TMP_DIR", "DEL QualifiedName: CompressionType.NONE", "DEL TryStatement", "DEL TypeLiteral", "DEL SimpleName: FileSystem", "DEL SimpleName: TMP_DIR", "DEL SimpleName: getConfiguration", "DEL SimpleName: createWriter", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleType: Job", "DEL SimpleName: set", "DEL SimpleName: job", "DEL SimpleName: TMP_DIR", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: fs", "DEL SimpleType: Job", "DEL SimpleName: FileSystem", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL SimpleName: m", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: rand", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: Job", "DEL VariableDeclarationStatement", "DEL SimpleName: column", "DEL SimpleName: IntWritable", "DEL SimpleType: IntWritable", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleType: MapWritable", "DEL MethodInvocation", "DEL SimpleName: job", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: ARGS", "DEL SimpleType: IntWritable", "DEL SimpleName: job", "DEL SimpleName: getPath", "DEL SimpleName: setOutputFormatClass", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: m", "DEL SimpleType: SequenceFile.Writer", "DEL Modifier: public", "DEL BooleanLiteral: true", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: SparseMatrix", "DEL SimpleName: setMapOutputValueClass", "DEL SimpleName: setOutputKeyClass", "DEL SimpleName: getConfiguration", "DEL ArrayType: String[]", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleName: interval", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL SimpleName: start", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL SimpleName: createWriter", "DEL SimpleType: Path", "DEL SimpleName: conf", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: Job", "DEL SimpleName: Integer", "DEL SimpleName: IntWritable", "DEL SimpleName: IntWritable", "DEL SimpleName: job", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: setReducerClass", "DEL SimpleName: end", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: end", "DEL SimpleType: TableOutputFormat", "DEL SimpleName: conf", "DEL SimpleType: MapWritable", "DEL SimpleName: row", "DEL SimpleName: SequenceFileInputFormat", "DEL SimpleName: ARGS", "DEL SimpleName: i", "DEL SimpleName: IntWritable", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL CatchClause", "DEL SimpleName: getPath", "DEL SimpleName: MapWritable", "DEL InfixExpression: /", "DEL SimpleName: FileSystem", "DEL ReturnStatement", "DEL SimpleType: Job", "DEL SimpleName: substring", "DEL SimpleName: n", "DEL InfixExpression: <", "DEL SimpleName: percent", "DEL InfixExpression: +", "DEL TypeLiteral", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL SimpleName: i", "DEL TagElement: @throws", "DEL Modifier: static", "DEL SimpleName: TableOutputFormat", "DEL ExpressionStatement", "DEL TextElement:  configuration object", "DEL SimpleName: rand", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL SimpleName: Path", "DEL PrimitiveType: double", "DEL SimpleName: job", "DEL SimpleType: AbstractExample", "DEL SimpleName: m", "DEL SingleVariableDeclaration", "DEL SimpleName: Matrix", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: job", "DEL SimpleName: n", "DEL SimpleName: SequenceFile", "DEL SimpleName: inDir", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: getConfiguration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: start", "DEL SimpleName: close", "DEL PrefixExpression: ++", "DEL SimpleName: job", "DEL StringLiteral: \"_TMP_dir\"", "DEL SimpleName: SequenceFile", "DEL VariableDeclarationFragment", "DEL SimpleType: Writable", "DEL SimpleName: inDir", "DEL SimpleName: rand", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: TMP_DIR", "DEL ExpressionStatement", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: i", "DEL InfixExpression: +", "DEL SimpleName: interval", "DEL SimpleName: n", "DEL QualifiedName: SequenceFile.Writer", "DEL SingleVariableDeclaration", "DEL SimpleType: Path", "DEL NumberLiteral: 100", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: String", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL InfixExpression: -", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: fs", "DEL ClassInstanceCreation", "DEL NumberLiteral: 3", "DEL InfixExpression: *", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: i", "DEL ParenthesizedExpression", "DEL SimpleName: conf", "DEL SimpleName: job", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: main", "DEL SimpleName: TableOutputFormat", "DEL SimpleType: DenseMatrix", "DEL SimpleName: inDir", "DEL ClassInstanceCreation", "DEL SimpleType: RandomMatrixMapper", "DEL SimpleName: setInputFormatClass", "DEL MethodInvocation", "DEL SimpleName: job", "DEL StringLiteral: \"rand [-m maps] [-r reduces] <rows> <columns> <density> <matrix_name>\"", "DEL SimpleName: random_mapred", "DEL SimpleName: random_mapred", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: end", "DEL SimpleName: save", "DEL SimpleName: conf", "DEL SimpleName: SequenceFileInputFormat", "DEL InfixExpression: +", "DEL SimpleName: writer", "DEL TypeLiteral", "DEL TypeLiteral", "DEL SimpleName: waitForCompletion", "DEL SimpleName: IntWritable", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL TagElement: @param", "DEL ForStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL TypeLiteral", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL SimpleName: m", "DEL InfixExpression: -", "DEL Assignment: =", "DEL SimpleName: row", "DEL SimpleName: column", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TypeLiteral", "DEL Block", "DEL ClassInstanceCreation", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: /", "DEL SimpleName: m", "DEL SimpleName: interval", "DEL ExpressionStatement", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: Double", "DEL SimpleName: job", "DEL SimpleName: setOutputValueClass", "DEL VariableDeclarationStatement", "DEL TryStatement", "DEL SimpleName: RandomMatrixMapper", "DEL CatchClause", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: i", "DEL SimpleName: getConfiguration", "DEL SimpleName: SparseMatrix", "DEL SimpleName: getConfiguration", "DEL SimpleName: parseInt", "DEL TypeLiteral", "DEL TryStatement", "DEL SimpleType: DenseMatrix", "DEL NumberLiteral: 1", "DEL Modifier: final", "DEL SimpleName: parseDouble", "DEL SimpleName: getNumMapTasks", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL SimpleName: rand", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL SimpleName: Path", "DEL SimpleName: RandomMatrix", "DEL SimpleName: setMapOutputValueClass", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleName: conf", "DEL Block", "DEL SimpleName: conf", "DEL SimpleName: end", "DEL Modifier: final", "DEL Assignment: =", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: conf", "DEL SimpleName: IntWritable", "DEL SimpleName: conf", "DEL SimpleName: Path", "DEL Block", "DEL TypeLiteral", "DEL SimpleName: getConfiguration", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: job", "DEL SimpleType: ImmutableBytesWritable", "DEL QualifiedName: System.out", "DEL VariableDeclarationFragment", "DEL SimpleType: SequenceFileInputFormat", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: setInputPaths", "DEL Assignment: =", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: getConfiguration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: n", "DEL PrefixExpression: -", "DEL SimpleName: job", "DEL Block", "DEL SimpleName: HamaConfiguration", "DEL MethodInvocation", "DEL SimpleName: column", "DEL SimpleName: fs", "DEL MethodInvocation", "DEL StringLiteral: \"matrix.type\"", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: TMP_DIR", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL VariableDeclarationStatement", "DEL SimpleName: rand", "DEL ParenthesizedExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL SimpleName: args", "DEL InfixExpression: *", "DEL SimpleName: file", "DEL SimpleType: Path", "DEL SimpleName: random_mapred", "DEL SingleVariableDeclaration", "DEL SimpleName: println", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL SimpleName: ARGS", "DEL ExpressionStatement", "DEL SimpleName: end", "DEL SimpleName: setInputFormatClass", "DEL SimpleName: DenseMatrix", "DEL SimpleName: rand", "DEL TypeLiteral", "DEL InfixExpression: !=", "DEL SimpleType: String", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: get", "DEL SimpleName: IntWritable", "DEL SimpleName: set", "DEL SimpleName: conf", "DEL InfixExpression: +", "DEL SimpleName: setMapOutputKeyClass", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: close", "DEL SimpleType: Path", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL NumberLiteral: 1", "DEL Modifier: private", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: rand", "DEL SimpleName: job", "DEL SimpleName: setOutputValueClass", "DEL Modifier: static", "DEL SimpleName: IntWritable", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: getConfiguration", "DEL SimpleName: job", "DEL SimpleName: Path", "DEL SimpleType: TableOutputFormat", "DEL SimpleName: valueOf", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getConfiguration", "DEL SimpleName: setInputPaths", "DEL SimpleName: writer", "DEL StringLiteral: \"random matrix MR job : \"", "DEL MethodInvocation", "DEL QualifiedName: SequenceFile.Writer", "DEL TextElement:  an m-by-n matrix with uniformly distributed random elements.", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL TypeLiteral", "DEL CatchClause", "DEL SimpleName: delete", "DEL SimpleName: job", "DEL SimpleType: DenseMatrix", "DEL TypeLiteral", "DEL StringLiteral: \"matrix.type\"", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleName: percent", "DEL QualifiedName: args.length", "DEL SimpleName: i", "DEL IfStatement", "DEL SimpleName: inDir", "DEL SimpleType: IntWritable", "DEL PrimitiveType: double", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL SimpleName: percent", "DEL SimpleName: delete", "DEL SimpleName: args", "DEL SingleVariableDeclaration", "DEL SimpleName: n", "DEL SimpleName: writer", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: inDir", "DEL Assignment: =", "DEL SimpleName: printStackTrace", "DEL SimpleName: e", "DEL SimpleName: interval", "DEL SimpleName: println", "DEL ClassInstanceCreation", "DEL SimpleName: Path", "DEL SimpleName: writer", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: Path", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: n", "DEL SimpleName: get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: i", "DEL StringLiteral: \"part\"", "DEL ParenthesizedExpression", "DEL InfixExpression: +", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL SimpleName: fs", "DEL SimpleName: getPath", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: job", "DEL SimpleType: ImmutableBytesWritable", "DEL TypeLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: Job", "DEL SimpleName: writer", "DEL NumberLiteral: 2", "DEL SimpleName: interval", "DEL SimpleName: interval", "DEL SimpleName: setMapperClass", "DEL TryStatement", "DEL SimpleType: SequenceFileInputFormat", "DEL QualifiedName: System.out", "DEL SimpleType: Path", "DEL ExpressionStatement", "DEL SimpleName: getNumMapTasks", "DEL SimpleName: setInt", "DEL SimpleName: end", "DEL MethodInvocation", "DEL StringLiteral: \"in\"", "DEL SimpleName: IntWritable", "DEL SimpleName: IOException", "DEL InfixExpression: -", "DEL QualifiedName: TableOutputFormat.OUTPUT_TABLE", "DEL NumberLiteral: 2", "DEL SimpleType: IntWritable", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: file", "DEL TagElement: @return", "DEL SimpleType: RandomMatrixReducer", "DEL ExpressionStatement", "DEL SimpleName: Path", "DEL PrimitiveType: int", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: conf", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: parseInt", "DEL SimpleName: println", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleType: RandomMatrixReducer", "DEL ExpressionStatement", "DEL StringLiteral: \"matrix.density\"", "DEL SimpleName: percent", "DEL InfixExpression: *", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: m", "DEL SimpleName: ARGS", "DEL SimpleType: RandomMatrixMapper", "DEL SimpleName: Writable", "DEL InfixExpression: <", "DEL SimpleName: Path", "DEL SimpleName: i", "DEL SimpleName: DenseMatrix", "DEL MethodInvocation", "DEL NumberLiteral: 3", "DEL SimpleName: i", "DEL SimpleName: job", "DEL VariableDeclarationExpression", "DEL Block", "DEL Assignment: =", "DEL SimpleName: append", "DEL SimpleName: m", "DEL TagElement: @param", "DEL SimpleName: setMapperClass", "DEL SimpleName: interval", "DEL SimpleName: set", "DEL ClassInstanceCreation", "DEL SimpleName: getConfiguration", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleType: Path", "DEL Block", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: setMapOutputKeyClass", "DEL SimpleName: job", "DEL SimpleType: IntWritable", "DEL PrimitiveType: int", "DEL Block", "DEL VariableDeclarationFragment", "DEL PrefixExpression: ++", "DEL SimpleName: i", "DEL StringLiteral: \"_TMP_dir\"", "DEL TypeLiteral", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: RandomMatrixReducer", "DEL SimpleType: Job", "DEL SimpleName: println", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: conf", "DEL SimpleType: IntWritable"]}]}}, {"RandomMatrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.fs.FileSystem(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.fs.Path(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableOutputFormat(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.SequenceFile(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.io.Writable(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.io.SequenceFile.CompressionType(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.mapreduce.lib.input.FileInputFormat(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.RandomMatrixMapper(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.examples.mapreduce.RandomMatrixReducer(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.matrix.Matrix(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.matrix.SparseMatrix(54)", "Delete ImportDeclaration(55)", "Delete Modifier: public(56)", "Delete SimpleName: RandomMatrix(57)", "Delete SimpleName: AbstractExample(58)", "Delete SimpleType: AbstractExample(59)", "Delete Modifier: static(60)", "Delete Modifier: private(61)", "Delete SimpleName: String(62)", "Delete SimpleType: String(63)", "Delete SimpleName: TABLE_PREFIX(64)", "Delete VariableDeclarationFragment(65)", "Delete FieldDeclaration(66)", "Delete Modifier: static(67)", "Delete Modifier: private(68)", "Delete SimpleName: Path(69)", "Delete SimpleType: Path(70)", "Delete SimpleName: TMP_DIR(71)", "Delete VariableDeclarationFragment(72)", "Delete FieldDeclaration(73)", "Delete Modifier: public(74)", "Delete Modifier: static(75)", "Delete PrimitiveType: void(76)", "Delete SimpleName: main(77)", "Delete SimpleName: String(78)", "Delete SimpleType: String(79)", "Delete Dimension(80)", "Delete ArrayType: String[](81)", "Delete SimpleName: args(82)", "Delete SingleVariableDeclaration(83)", "Delete SimpleName: IOException(84)", "Delete SimpleType: IOException(85)", "Delete QualifiedName: args.length(86)", "Delete NumberLiteral: 3(87)", "Delete InfixExpression: <(88)", "Delete QualifiedName: System.out(89)", "Delete SimpleName: println(90)", "Delete StringLiteral: \"rand [-m maps] [-r reduces] <rows> <columns> <density> <matrix_name>\"(91)", "Delete MethodInvocation(92)", "Delete ExpressionStatement(93)", "Delete QualifiedName: System.out(94)", "Delete SimpleName: println(95)", "Delete StringLiteral: \"ex) rand -m 10 -r 10 2000 2000 30.5% matrixA\"(96)", "Delete MethodInvocation(97)", "Delete ExpressionStatement(98)", "Delete SimpleName: System(99)", "Delete SimpleName: exit(100)", "Delete NumberLiteral: 1(101)", "Delete PrefixExpression: -(102)", "Delete MethodInvocation(103)", "Delete ExpressionStatement(104)", "Delete Block(105)", "Delete SimpleName: parseArgs(106)", "Delete SimpleName: args(107)", "Delete MethodInvocation(108)", "Delete ExpressionStatement(109)", "Delete Block(110)", "Delete IfStatement(111)", "Delete PrimitiveType: int(112)", "Delete SimpleName: row(113)", "Delete SimpleName: Integer(114)", "Delete SimpleName: parseInt(115)", "Delete SimpleName: ARGS(116)", "Delete SimpleName: get(117)", "Delete NumberLiteral: 0(118)", "Delete MethodInvocation(119)", "Delete MethodInvocation(120)", "Delete VariableDeclarationFragment(121)", "Delete VariableDeclarationStatement(122)", "Delete PrimitiveType: int(123)", "Delete SimpleName: column(124)", "Delete SimpleName: Integer(125)", "Delete SimpleName: parseInt(126)", "Delete SimpleName: ARGS(127)", "Delete SimpleName: get(128)", "Delete NumberLiteral: 1(129)", "Delete MethodInvocation(130)", "Delete MethodInvocation(131)", "Delete VariableDeclarationFragment(132)", "Delete VariableDeclarationStatement(133)", "Delete PrimitiveType: double(134)", "Delete SimpleName: percent(135)", "Delete SimpleName: Double(136)", "Delete SimpleName: parseDouble(137)", "Delete SimpleName: ARGS(138)", "Delete SimpleName: get(139)", "Delete NumberLiteral: 2(140)", "Delete MethodInvocation(141)", "Delete SimpleName: substring(142)", "Delete NumberLiteral: 0(143)", "Delete SimpleName: ARGS(144)", "Delete SimpleName: get(145)", "Delete NumberLiteral: 2(146)", "Delete MethodInvocation(147)", "Delete SimpleName: length(148)", "Delete MethodInvocation(149)", "Delete NumberLiteral: 1(150)", "Delete InfixExpression: -(151)", "Delete MethodInvocation(152)", "Delete MethodInvocation(153)", "Delete VariableDeclarationFragment(154)", "Delete VariableDeclarationStatement(155)", "Delete SimpleName: Matrix(156)", "Delete SimpleType: Matrix(157)", "Delete SimpleName: a(158)", "Delete VariableDeclarationFragment(159)", "Delete VariableDeclarationStatement(160)", "Delete SimpleName: percent(161)", "Delete NumberLiteral: 100(162)", "Delete InfixExpression: ==(163)", "Delete SimpleName: a(164)", "Delete SimpleName: random_mapred(165)", "Delete SimpleName: conf(166)", "Delete SimpleName: row(167)", "Delete SimpleName: column(168)", "Delete MethodInvocation(169)", "Delete Assignment: =(170)", "Delete ExpressionStatement(171)", "Delete SimpleName: a(172)", "Delete SimpleName: random_mapred(173)", "Delete SimpleName: conf(174)", "Delete SimpleName: row(175)", "Delete SimpleName: column(176)", "Delete SimpleName: percent(177)", "Delete MethodInvocation(178)", "Delete Assignment: =(179)", "Delete ExpressionStatement(180)", "Delete IfStatement(181)", "Delete SimpleName: a(182)", "Delete SimpleName: save(183)", "Delete SimpleName: ARGS(184)", "Delete SimpleName: get(185)", "Delete NumberLiteral: 3(186)", "Delete MethodInvocation(187)", "Delete MethodInvocation(188)", "Delete ExpressionStatement(189)", "Delete Block(190)", "Delete MethodDeclaration(191)", "Delete TextElement: Generate matrix with random elements using Map/Reduce(192)", "Delete TagElement(193)", "Delete SimpleName: conf(194)", "Delete TextElement:  configuration object(195)", "Delete TagElement: @param(196)", "Delete SimpleName: m(197)", "Delete TextElement:  the number of rows.(198)", "Delete TagElement: @param(199)", "Delete SimpleName: n(200)", "Delete TextElement:  the number of columns.(201)", "Delete TagElement: @param(202)", "Delete TextElement:  an m-by-n matrix with uniformly distributed random elements.(203)", "Delete TagElement: @return(204)", "Delete SimpleName: IOException(205)", "Delete TagElement: @throws(206)", "Delete Javadoc(207)", "Delete Modifier: public(208)", "Delete Modifier: static(209)", "Delete SimpleName: DenseMatrix(210)", "Delete SimpleType: DenseMatrix(211)", "Delete SimpleName: random_mapred(212)", "Delete SimpleName: HamaConfiguration(213)", "Delete SimpleType: HamaConfiguration(214)", "Delete SimpleName: conf(215)", "Delete SingleVariableDeclaration(216)", "Delete PrimitiveType: int(217)", "Delete SimpleName: m(218)", "Delete SingleVariableDeclaration(219)", "Delete PrimitiveType: int(220)", "Delete SimpleName: n(221)", "Delete SingleVariableDeclaration(222)", "Delete SimpleName: IOException(223)", "Delete SimpleType: IOException(224)", "Delete SimpleName: TABLE_PREFIX(225)", "Delete StringLiteral: \"DenseMatrix\"(226)", "Delete Assignment: =(227)", "Delete ExpressionStatement(228)", "Delete SimpleName: TMP_DIR(229)", "Delete SimpleName: Path(230)", "Delete SimpleType: Path(231)", "Delete SimpleName: TABLE_PREFIX(232)", "Delete StringLiteral: \"_TMP_dir\"(233)", "Delete InfixExpression: +(234)", "Delete ClassInstanceCreation(235)", "Delete Assignment: =(236)", "Delete ExpressionStatement(237)", "Delete SimpleName: DenseMatrix(238)", "Delete SimpleType: DenseMatrix(239)", "Delete SimpleName: rand(240)", "Delete SimpleName: DenseMatrix(241)", "Delete SimpleType: DenseMatrix(242)", "Delete SimpleName: conf(243)", "Delete SimpleName: m(244)", "Delete SimpleName: n(245)", "Delete ClassInstanceCreation(246)", "Delete VariableDeclarationFragment(247)", "Delete VariableDeclarationStatement(248)", "Delete SimpleName: Job(249)", "Delete SimpleType: Job(250)", "Delete SimpleName: job(251)", "Delete SimpleName: Job(252)", "Delete SimpleType: Job(253)", "Delete SimpleName: conf(254)", "Delete StringLiteral: \"random matrix MR job : \"(255)", "Delete SimpleName: rand(256)", "Delete SimpleName: getPath(257)", "Delete MethodInvocation(258)", "Delete InfixExpression: +(259)", "Delete ClassInstanceCreation(260)", "Delete VariableDeclarationFragment(261)", "Delete VariableDeclarationStatement(262)", "Delete Modifier: final(263)", "Delete SimpleName: Path(264)", "Delete SimpleType: Path(265)", "Delete SimpleName: inDir(266)", "Delete SimpleName: Path(267)", "Delete SimpleType: Path(268)", "Delete SimpleName: TMP_DIR(269)", "Delete StringLiteral: \"in\"(270)", "Delete ClassInstanceCreation(271)", "Delete VariableDeclarationFragment(272)", "Delete VariableDeclarationStatement(273)", "Delete SimpleName: FileInputFormat(274)", "Delete SimpleName: setInputPaths(275)", "Delete SimpleName: job(276)", "Delete SimpleName: inDir(277)", "Delete MethodInvocation(278)", "Delete ExpressionStatement(279)", "Delete SimpleName: job(280)", "Delete SimpleName: setMapperClass(281)", "Delete SimpleName: RandomMatrixMapper(282)", "Delete SimpleType: RandomMatrixMapper(283)", "Delete TypeLiteral(284)", "Delete MethodInvocation(285)", "Delete ExpressionStatement(286)", "Delete SimpleName: job(287)", "Delete SimpleName: setMapOutputKeyClass(288)", "Delete SimpleName: IntWritable(289)", "Delete SimpleType: IntWritable(290)", "Delete TypeLiteral(291)", "Delete MethodInvocation(292)", "Delete ExpressionStatement(293)", "Delete SimpleName: job(294)", "Delete SimpleName: setMapOutputValueClass(295)", "Delete SimpleName: MapWritable(296)", "Delete SimpleType: MapWritable(297)", "Delete TypeLiteral(298)", "Delete MethodInvocation(299)", "Delete ExpressionStatement(300)", "Delete SimpleName: job(301)", "Delete SimpleName: getConfiguration(302)", "Delete MethodInvocation(303)", "Delete SimpleName: setInt(304)", "Delete StringLiteral: \"matrix.column\"(305)", "Delete SimpleName: n(306)", "Delete MethodInvocation(307)", "Delete ExpressionStatement(308)", "Delete SimpleName: job(309)", "Delete SimpleName: getConfiguration(310)", "Delete MethodInvocation(311)", "Delete SimpleName: set(312)", "Delete StringLiteral: \"matrix.type\"(313)", "Delete SimpleName: TABLE_PREFIX(314)", "Delete MethodInvocation(315)", "Delete ExpressionStatement(316)", "Delete SimpleName: job(317)", "Delete SimpleName: getConfiguration(318)", "Delete MethodInvocation(319)", "Delete SimpleName: set(320)", "Delete StringLiteral: \"matrix.density\"(321)", "Delete StringLiteral: \"100\"(322)", "Delete MethodInvocation(323)", "Delete ExpressionStatement(324)", "Delete SimpleName: job(325)", "Delete SimpleName: setInputFormatClass(326)", "Delete SimpleName: SequenceFileInputFormat(327)", "Delete SimpleType: SequenceFileInputFormat(328)", "Delete TypeLiteral(329)", "Delete MethodInvocation(330)", "Delete ExpressionStatement(331)", "Delete Modifier: final(332)", "Delete SimpleName: FileSystem(333)", "Delete SimpleType: FileSystem(334)", "Delete SimpleName: fs(335)", "Delete SimpleName: FileSystem(336)", "Delete SimpleName: get(337)", "Delete SimpleName: job(338)", "Delete SimpleName: getConfiguration(339)", "Delete MethodInvocation(340)", "Delete MethodInvocation(341)", "Delete VariableDeclarationFragment(342)", "Delete VariableDeclarationStatement(343)", "Delete PrimitiveType: int(344)", "Delete SimpleName: interval(345)", "Delete SimpleName: m(346)", "Delete SimpleName: conf(347)", "Delete SimpleName: getNumMapTasks(348)", "Delete MethodInvocation(349)", "Delete InfixExpression: /(350)", "Delete VariableDeclarationFragment(351)", "Delete VariableDeclarationStatement(352)", "Delete PrimitiveType: int(353)", "Delete SimpleName: i(354)", "Delete NumberLiteral: 0(355)", "Delete VariableDeclarationFragment(356)", "Delete VariableDeclarationExpression(357)", "Delete SimpleName: i(358)", "Delete SimpleName: conf(359)", "Delete SimpleName: getNumMapTasks(360)", "Delete MethodInvocation(361)", "Delete InfixExpression: <(362)", "Delete SimpleName: i(363)", "Delete PrefixExpression: ++(364)", "Delete Modifier: final(365)", "Delete SimpleName: Path(366)", "Delete SimpleType: Path(367)", "Delete SimpleName: file(368)", "Delete SimpleName: Path(369)", "Delete SimpleType: Path(370)", "Delete SimpleName: inDir(371)", "Delete StringLiteral: \"part\"(372)", "Delete SimpleName: i(373)", "Delete InfixExpression: +(374)", "Delete ClassInstanceCreation(375)", "Delete VariableDeclarationFragment(376)", "Delete VariableDeclarationStatement(377)", "Delete Modifier: final(378)", "Delete SimpleName: IntWritable(379)", "Delete SimpleType: IntWritable(380)", "Delete SimpleName: start(381)", "Delete SimpleName: IntWritable(382)", "Delete SimpleType: IntWritable(383)", "Delete SimpleName: i(384)", "Delete SimpleName: interval(385)", "Delete InfixExpression: *(386)", "Delete ClassInstanceCreation(387)", "Delete VariableDeclarationFragment(388)", "Delete VariableDeclarationStatement(389)", "Delete SimpleName: IntWritable(390)", "Delete SimpleType: IntWritable(391)", "Delete SimpleName: end(392)", "Delete NullLiteral(393)", "Delete VariableDeclarationFragment(394)", "Delete VariableDeclarationStatement(395)", "Delete SimpleName: i(396)", "Delete NumberLiteral: 1(397)", "Delete InfixExpression: +(398)", "Delete ParenthesizedExpression(399)", "Delete SimpleName: conf(400)", "Delete SimpleName: getNumMapTasks(401)", "Delete MethodInvocation(402)", "Delete InfixExpression: !=(403)", "Delete SimpleName: end(404)", "Delete SimpleName: IntWritable(405)", "Delete SimpleType: IntWritable(406)", "Delete SimpleName: i(407)", "Delete SimpleName: interval(408)", "Delete InfixExpression: *(409)", "Delete ParenthesizedExpression(410)", "Delete SimpleName: interval(411)", "Delete InfixExpression: +(412)", "Delete ParenthesizedExpression(413)", "Delete NumberLiteral: 1(414)", "Delete InfixExpression: -(415)", "Delete ClassInstanceCreation(416)", "Delete Assignment: =(417)", "Delete ExpressionStatement(418)", "Delete Block(419)", "Delete SimpleName: end(420)", "Delete SimpleName: IntWritable(421)", "Delete SimpleType: IntWritable(422)", "Delete SimpleName: m(423)", "Delete NumberLiteral: 1(424)", "Delete InfixExpression: -(425)", "Delete ClassInstanceCreation(426)", "Delete Assignment: =(427)", "Delete ExpressionStatement(428)", "Delete Block(429)", "Delete IfStatement(430)", "Delete Modifier: final(431)", "Delete QualifiedName: SequenceFile.Writer(432)", "Delete SimpleType: SequenceFile.Writer(433)", "Delete SimpleName: writer(434)", "Delete SimpleName: SequenceFile(435)", "Delete SimpleName: createWriter(436)", "Delete SimpleName: fs(437)", "Delete SimpleName: job(438)", "Delete SimpleName: getConfiguration(439)", "Delete MethodInvocation(440)", "Delete SimpleName: file(441)", "Delete SimpleName: IntWritable(442)", "Delete SimpleType: IntWritable(443)", "Delete TypeLiteral(444)", "Delete SimpleName: IntWritable(445)", "Delete SimpleType: IntWritable(446)", "Delete TypeLiteral(447)", "Delete QualifiedName: CompressionType.NONE(448)", "Delete MethodInvocation(449)", "Delete VariableDeclarationFragment(450)", "Delete VariableDeclarationStatement(451)", "Delete SimpleName: writer(452)", "Delete SimpleName: append(453)", "Delete SimpleName: start(454)", "Delete SimpleName: end(455)", "Delete MethodInvocation(456)", "Delete ExpressionStatement(457)", "Delete Block(458)", "Delete SimpleName: writer(459)", "Delete SimpleName: close(460)", "Delete MethodInvocation(461)", "Delete ExpressionStatement(462)", "Delete Block(463)", "Delete TryStatement(464)", "Delete QualifiedName: System.out(465)", "Delete SimpleName: println(466)", "Delete StringLiteral: \"Wrote input for Map #\"(467)", "Delete SimpleName: i(468)", "Delete InfixExpression: +(469)", "Delete MethodInvocation(470)", "Delete ExpressionStatement(471)", "Delete Block(472)", "Delete ForStatement(473)", "Delete SimpleName: job(474)", "Delete SimpleName: setOutputFormatClass(475)", "Delete SimpleName: TableOutputFormat(476)", "Delete SimpleType: TableOutputFormat(477)", "Delete TypeLiteral(478)", "Delete MethodInvocation(479)", "Delete ExpressionStatement(480)", "Delete SimpleName: job(481)", "Delete SimpleName: setReducerClass(482)", "Delete SimpleName: RandomMatrixReducer(483)", "Delete SimpleType: RandomMatrixReducer(484)", "Delete TypeLiteral(485)", "Delete MethodInvocation(486)", "Delete ExpressionStatement(487)", "Delete SimpleName: job(488)", "Delete SimpleName: getConfiguration(489)", "Delete MethodInvocation(490)", "Delete SimpleName: set(491)", "Delete QualifiedName: TableOutputFormat.OUTPUT_TABLE(492)", "Delete SimpleName: rand(493)", "Delete SimpleName: getPath(494)", "Delete MethodInvocation(495)", "Delete MethodInvocation(496)", "Delete ExpressionStatement(497)", "Delete SimpleName: job(498)", "Delete SimpleName: setOutputKeyClass(499)", "Delete SimpleName: ImmutableBytesWritable(500)", "Delete SimpleType: ImmutableBytesWritable(501)", "Delete TypeLiteral(502)", "Delete MethodInvocation(503)", "Delete ExpressionStatement(504)", "Delete SimpleName: job(505)", "Delete SimpleName: setOutputValueClass(506)", "Delete SimpleName: Writable(507)", "Delete SimpleType: Writable(508)", "Delete TypeLiteral(509)", "Delete MethodInvocation(510)", "Delete ExpressionStatement(511)", "Delete SimpleName: job(512)", "Delete SimpleName: waitForCompletion(513)", "Delete BooleanLiteral: true(514)", "Delete MethodInvocation(515)", "Delete ExpressionStatement(516)", "Delete Block(517)", "Delete SimpleName: InterruptedException(518)", "Delete SimpleType: InterruptedException(519)", "Delete SimpleName: e(520)", "Delete SingleVariableDeclaration(521)", "Delete SimpleName: e(522)", "Delete SimpleName: printStackTrace(523)", "Delete MethodInvocation(524)", "Delete ExpressionStatement(525)", "Delete Block(526)", "Delete CatchClause(527)", "Delete SimpleName: ClassNotFoundException(528)", "Delete SimpleType: ClassNotFoundException(529)", "Delete SimpleName: e(530)", "Delete SingleVariableDeclaration(531)", "Delete SimpleName: e(532)", "Delete SimpleName: printStackTrace(533)", "Delete MethodInvocation(534)", "Delete ExpressionStatement(535)", "Delete Block(536)", "Delete CatchClause(537)", "Delete TryStatement(538)", "Delete SimpleName: fs(539)", "Delete SimpleName: delete(540)", "Delete SimpleName: TMP_DIR(541)", "Delete BooleanLiteral: true(542)", "Delete MethodInvocation(543)", "Delete ExpressionStatement(544)", "Delete SimpleName: rand(545)", "Delete ReturnStatement(546)", "Delete Block(547)", "Delete MethodDeclaration(548)", "Delete Modifier: public(549)", "Delete Modifier: static(550)", "Delete SimpleName: SparseMatrix(551)", "Delete SimpleType: SparseMatrix(552)", "Delete SimpleName: random_mapred(553)", "Delete SimpleName: HamaConfiguration(554)", "Delete SimpleType: HamaConfiguration(555)", "Delete SimpleName: conf(556)", "Delete SingleVariableDeclaration(557)", "Delete PrimitiveType: int(558)", "Delete SimpleName: m(559)", "Delete SingleVariableDeclaration(560)", "Delete PrimitiveType: int(561)", "Delete SimpleName: n(562)", "Delete SingleVariableDeclaration(563)", "Delete PrimitiveType: double(564)", "Delete SimpleName: percent(565)", "Delete SingleVariableDeclaration(566)", "Delete SimpleName: IOException(567)", "Delete SimpleType: IOException(568)", "Delete SimpleName: TABLE_PREFIX(569)", "Delete StringLiteral: \"SparseMatrix\"(570)", "Delete Assignment: =(571)", "Delete ExpressionStatement(572)", "Delete SimpleName: TMP_DIR(573)", "Delete SimpleName: Path(574)", "Delete SimpleType: Path(575)", "Delete SimpleName: TABLE_PREFIX(576)", "Delete StringLiteral: \"_TMP_dir\"(577)", "Delete InfixExpression: +(578)", "Delete ClassInstanceCreation(579)", "Delete Assignment: =(580)", "Delete ExpressionStatement(581)", "Delete SimpleName: SparseMatrix(582)", "Delete SimpleType: SparseMatrix(583)", "Delete SimpleName: rand(584)", "Delete SimpleName: SparseMatrix(585)", "Delete SimpleType: SparseMatrix(586)", "Delete SimpleName: conf(587)", "Delete SimpleName: m(588)", "Delete SimpleName: n(589)", "Delete ClassInstanceCreation(590)", "Delete VariableDeclarationFragment(591)", "Delete VariableDeclarationStatement(592)", "Delete SimpleName: Job(593)", "Delete SimpleType: Job(594)", "Delete SimpleName: job(595)", "Delete SimpleName: Job(596)", "Delete SimpleType: Job(597)", "Delete SimpleName: conf(598)", "Delete StringLiteral: \"random matrix MR job : \"(599)", "Delete SimpleName: rand(600)", "Delete SimpleName: getPath(601)", "Delete MethodInvocation(602)", "Delete InfixExpression: +(603)", "Delete ClassInstanceCreation(604)", "Delete VariableDeclarationFragment(605)", "Delete VariableDeclarationStatement(606)", "Delete Modifier: final(607)", "Delete SimpleName: Path(608)", "Delete SimpleType: Path(609)", "Delete SimpleName: inDir(610)", "Delete SimpleName: Path(611)", "Delete SimpleType: Path(612)", "Delete SimpleName: TMP_DIR(613)", "Delete StringLiteral: \"in\"(614)", "Delete ClassInstanceCreation(615)", "Delete VariableDeclarationFragment(616)", "Delete VariableDeclarationStatement(617)", "Delete SimpleName: FileInputFormat(618)", "Delete SimpleName: setInputPaths(619)", "Delete SimpleName: job(620)", "Delete SimpleName: inDir(621)", "Delete MethodInvocation(622)", "Delete ExpressionStatement(623)", "Delete SimpleName: job(624)", "Delete SimpleName: setMapperClass(625)", "Delete SimpleName: RandomMatrixMapper(626)", "Delete SimpleType: RandomMatrixMapper(627)", "Delete TypeLiteral(628)", "Delete MethodInvocation(629)", "Delete ExpressionStatement(630)", "Delete SimpleName: job(631)", "Delete SimpleName: setMapOutputKeyClass(632)", "Delete SimpleName: IntWritable(633)", "Delete SimpleType: IntWritable(634)", "Delete TypeLiteral(635)", "Delete MethodInvocation(636)", "Delete ExpressionStatement(637)", "Delete SimpleName: job(638)", "Delete SimpleName: setMapOutputValueClass(639)", "Delete SimpleName: MapWritable(640)", "Delete SimpleType: MapWritable(641)", "Delete TypeLiteral(642)", "Delete MethodInvocation(643)", "Delete ExpressionStatement(644)", "Delete SimpleName: job(645)", "Delete SimpleName: getConfiguration(646)", "Delete MethodInvocation(647)", "Delete SimpleName: setInt(648)", "Delete StringLiteral: \"matrix.column\"(649)", "Delete SimpleName: n(650)", "Delete MethodInvocation(651)", "Delete ExpressionStatement(652)", "Delete SimpleName: job(653)", "Delete SimpleName: getConfiguration(654)", "Delete MethodInvocation(655)", "Delete SimpleName: set(656)", "Delete StringLiteral: \"matrix.type\"(657)", "Delete SimpleName: TABLE_PREFIX(658)", "Delete MethodInvocation(659)", "Delete ExpressionStatement(660)", "Delete SimpleName: job(661)", "Delete SimpleName: getConfiguration(662)", "Delete MethodInvocation(663)", "Delete SimpleName: set(664)", "Delete StringLiteral: \"matrix.density\"(665)", "Delete SimpleName: String(666)", "Delete SimpleName: valueOf(667)", "Delete SimpleName: percent(668)", "Delete MethodInvocation(669)", "Delete MethodInvocation(670)", "Delete ExpressionStatement(671)", "Delete SimpleName: job(672)", "Delete SimpleName: setInputFormatClass(673)", "Delete SimpleName: SequenceFileInputFormat(674)", "Delete SimpleType: SequenceFileInputFormat(675)", "Delete TypeLiteral(676)", "Delete MethodInvocation(677)", "Delete ExpressionStatement(678)", "Delete Modifier: final(679)", "Delete SimpleName: FileSystem(680)", "Delete SimpleType: FileSystem(681)", "Delete SimpleName: fs(682)", "Delete SimpleName: FileSystem(683)", "Delete SimpleName: get(684)", "Delete SimpleName: job(685)", "Delete SimpleName: getConfiguration(686)", "Delete MethodInvocation(687)", "Delete MethodInvocation(688)", "Delete VariableDeclarationFragment(689)", "Delete VariableDeclarationStatement(690)", "Delete PrimitiveType: int(691)", "Delete SimpleName: interval(692)", "Delete SimpleName: m(693)", "Delete SimpleName: conf(694)", "Delete SimpleName: getNumMapTasks(695)", "Delete MethodInvocation(696)", "Delete InfixExpression: /(697)", "Delete VariableDeclarationFragment(698)", "Delete VariableDeclarationStatement(699)", "Delete PrimitiveType: int(700)", "Delete SimpleName: i(701)", "Delete NumberLiteral: 0(702)", "Delete VariableDeclarationFragment(703)", "Delete VariableDeclarationExpression(704)", "Delete SimpleName: i(705)", "Delete SimpleName: conf(706)", "Delete SimpleName: getNumMapTasks(707)", "Delete MethodInvocation(708)", "Delete InfixExpression: <(709)", "Delete SimpleName: i(710)", "Delete PrefixExpression: ++(711)", "Delete Modifier: final(712)", "Delete SimpleName: Path(713)", "Delete SimpleType: Path(714)", "Delete SimpleName: file(715)", "Delete SimpleName: Path(716)", "Delete SimpleType: Path(717)", "Delete SimpleName: inDir(718)", "Delete StringLiteral: \"part\"(719)", "Delete SimpleName: i(720)", "Delete InfixExpression: +(721)", "Delete ClassInstanceCreation(722)", "Delete VariableDeclarationFragment(723)", "Delete VariableDeclarationStatement(724)", "Delete Modifier: final(725)", "Delete SimpleName: IntWritable(726)", "Delete SimpleType: IntWritable(727)", "Delete SimpleName: start(728)", "Delete SimpleName: IntWritable(729)", "Delete SimpleType: IntWritable(730)", "Delete SimpleName: i(731)", "Delete SimpleName: interval(732)", "Delete InfixExpression: *(733)", "Delete ClassInstanceCreation(734)", "Delete VariableDeclarationFragment(735)", "Delete VariableDeclarationStatement(736)", "Delete SimpleName: IntWritable(737)", "Delete SimpleType: IntWritable(738)", "Delete SimpleName: end(739)", "Delete NullLiteral(740)", "Delete VariableDeclarationFragment(741)", "Delete VariableDeclarationStatement(742)", "Delete SimpleName: i(743)", "Delete NumberLiteral: 1(744)", "Delete InfixExpression: +(745)", "Delete ParenthesizedExpression(746)", "Delete SimpleName: conf(747)", "Delete SimpleName: getNumMapTasks(748)", "Delete MethodInvocation(749)", "Delete InfixExpression: !=(750)", "Delete SimpleName: end(751)", "Delete SimpleName: IntWritable(752)", "Delete SimpleType: IntWritable(753)", "Delete SimpleName: i(754)", "Delete SimpleName: interval(755)", "Delete InfixExpression: *(756)", "Delete ParenthesizedExpression(757)", "Delete SimpleName: interval(758)", "Delete InfixExpression: +(759)", "Delete ParenthesizedExpression(760)", "Delete NumberLiteral: 1(761)", "Delete InfixExpression: -(762)", "Delete ClassInstanceCreation(763)", "Delete Assignment: =(764)", "Delete ExpressionStatement(765)", "Delete Block(766)", "Delete SimpleName: end(767)", "Delete SimpleName: IntWritable(768)", "Delete SimpleType: IntWritable(769)", "Delete SimpleName: m(770)", "Delete NumberLiteral: 1(771)", "Delete InfixExpression: -(772)", "Delete ClassInstanceCreation(773)", "Delete Assignment: =(774)", "Delete ExpressionStatement(775)", "Delete Block(776)", "Delete IfStatement(777)", "Delete Modifier: final(778)", "Delete QualifiedName: SequenceFile.Writer(779)", "Delete SimpleType: SequenceFile.Writer(780)", "Delete SimpleName: writer(781)", "Delete SimpleName: SequenceFile(782)", "Delete SimpleName: createWriter(783)", "Delete SimpleName: fs(784)", "Delete SimpleName: job(785)", "Delete SimpleName: getConfiguration(786)", "Delete MethodInvocation(787)", "Delete SimpleName: file(788)", "Delete SimpleName: IntWritable(789)", "Delete SimpleType: IntWritable(790)", "Delete TypeLiteral(791)", "Delete SimpleName: IntWritable(792)", "Delete SimpleType: IntWritable(793)", "Delete TypeLiteral(794)", "Delete QualifiedName: CompressionType.NONE(795)", "Delete MethodInvocation(796)", "Delete VariableDeclarationFragment(797)", "Delete VariableDeclarationStatement(798)", "Delete SimpleName: writer(799)", "Delete SimpleName: append(800)", "Delete SimpleName: start(801)", "Delete SimpleName: end(802)", "Delete MethodInvocation(803)", "Delete ExpressionStatement(804)", "Delete Block(805)", "Delete SimpleName: writer(806)", "Delete SimpleName: close(807)", "Delete MethodInvocation(808)", "Delete ExpressionStatement(809)", "Delete Block(810)", "Delete TryStatement(811)", "Delete QualifiedName: System.out(812)", "Delete SimpleName: println(813)", "Delete StringLiteral: \"Wrote input for Map #\"(814)", "Delete SimpleName: i(815)", "Delete InfixExpression: +(816)", "Delete MethodInvocation(817)", "Delete ExpressionStatement(818)", "Delete Block(819)", "Delete ForStatement(820)", "Delete SimpleName: job(821)", "Delete SimpleName: setOutputFormatClass(822)", "Delete SimpleName: TableOutputFormat(823)", "Delete SimpleType: TableOutputFormat(824)", "Delete TypeLiteral(825)", "Delete MethodInvocation(826)", "Delete ExpressionStatement(827)", "Delete SimpleName: job(828)", "Delete SimpleName: setReducerClass(829)", "Delete SimpleName: RandomMatrixReducer(830)", "Delete SimpleType: RandomMatrixReducer(831)", "Delete TypeLiteral(832)", "Delete MethodInvocation(833)", "Delete ExpressionStatement(834)", "Delete SimpleName: job(835)", "Delete SimpleName: getConfiguration(836)", "Delete MethodInvocation(837)", "Delete SimpleName: set(838)", "Delete QualifiedName: TableOutputFormat.OUTPUT_TABLE(839)", "Delete SimpleName: rand(840)", "Delete SimpleName: getPath(841)", "Delete MethodInvocation(842)", "Delete MethodInvocation(843)", "Delete ExpressionStatement(844)", "Delete SimpleName: job(845)", "Delete SimpleName: setOutputKeyClass(846)", "Delete SimpleName: ImmutableBytesWritable(847)", "Delete SimpleType: ImmutableBytesWritable(848)", "Delete TypeLiteral(849)", "Delete MethodInvocation(850)", "Delete ExpressionStatement(851)", "Delete SimpleName: job(852)", "Delete SimpleName: setOutputValueClass(853)", "Delete SimpleName: Writable(854)", "Delete SimpleType: Writable(855)", "Delete TypeLiteral(856)", "Delete MethodInvocation(857)", "Delete ExpressionStatement(858)", "Delete SimpleName: job(859)", "Delete SimpleName: waitForCompletion(860)", "Delete BooleanLiteral: true(861)", "Delete MethodInvocation(862)", "Delete ExpressionStatement(863)", "Delete Block(864)", "Delete SimpleName: InterruptedException(865)", "Delete SimpleType: InterruptedException(866)", "Delete SimpleName: e(867)", "Delete SingleVariableDeclaration(868)", "Delete SimpleName: e(869)", "Delete SimpleName: printStackTrace(870)", "Delete MethodInvocation(871)", "Delete ExpressionStatement(872)", "Delete Block(873)", "Delete CatchClause(874)", "Delete SimpleName: ClassNotFoundException(875)", "Delete SimpleType: ClassNotFoundException(876)", "Delete SimpleName: e(877)", "Delete SingleVariableDeclaration(878)", "Delete SimpleName: e(879)", "Delete SimpleName: printStackTrace(880)", "Delete MethodInvocation(881)", "Delete ExpressionStatement(882)", "Delete Block(883)", "Delete CatchClause(884)", "Delete TryStatement(885)", "Delete SimpleName: fs(886)", "Delete SimpleName: delete(887)", "Delete SimpleName: TMP_DIR(888)", "Delete BooleanLiteral: true(889)", "Delete MethodInvocation(890)", "Delete ExpressionStatement(891)", "Delete SimpleName: rand(892)", "Delete ReturnStatement(893)", "Delete Block(894)", "Delete MethodDeclaration(895)", "Delete TypeDeclaration: class(896)"]}}, {"AbstractMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL Javadoc", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Iterator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.NavigableMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configurable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HTableDescriptor"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.MasterNotRunningException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.RegionException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Get", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HTable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Scan", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.Job"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaAdminImpl", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.RandomVariable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.log4j.Logger", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: AbstractMatrix", "DEL SimpleName: Bytes", "DEL SimpleName: isComplete", "DEL SimpleName: e", "DEL QualifiedName: Constants.METADATA", "DEL SimpleName: Put", "DEL SimpleName: addFamily", "DEL SimpleName: get", "DEL SimpleName: setAutoFlush", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: addFamily", "DEL SimpleName: IOException", "DEL SimpleName: toBytes", "DEL InfixExpression: +", "DEL Assignment: =", "DEL Dimension", "DEL Javadoc", "DEL PrimitiveType: byte", "DEL BooleanLiteral: true", "DEL PrimitiveType: int", "DEL SimpleName: toBytes", "DEL SimpleName: toInt", "DEL SimpleName: b", "DEL TextElement:  ", "DEL SimpleName: val", "DEL ThisExpression", "DEL SimpleName: put", "DEL SimpleType: Put", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleType: Put", "DEL SimpleName: IOException", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL DoStatement", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL FieldAccess", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: matrixPath", "DEL SimpleName: toBytes", "DEL SimpleType: HamaAdmin", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: b", "DEL MethodInvocation", "DEL Dimension", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL TagElement: @throws", "DEL SimpleName: Bytes", "DEL StringLiteral: \"Initializing the matrix storage.\"", "DEL ThisExpression", "DEL SimpleName: conf", "DEL SimpleName: get", "DEL SimpleName: hamaAdmin", "DEL SimpleName: addFamily", "DEL MethodInvocation", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: getConfiguration", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: matrixPath", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL SimpleName: EI", "DEL BooleanLiteral: true", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: columns", "DEL SimpleName: getHTable", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: table_prefix", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleType: NavigableMap", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL SimpleName: Put", "DEL SimpleName: job", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleName: setReference", "DEL SimpleName: scan", "DEL ClassInstanceCreation", "DEL SimpleType: Map.Entry", "DEL SimpleName: matrixPath", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL TextElement: (Integer.MAX_VALUE - 4) * DEFAULT_TRY_TIMES;", "DEL SimpleName: table_prefix", "DEL SimpleName: matrixPath", "DEL Modifier: protected", "DEL Modifier: public", "DEL SimpleName: ImmutableBytesWritable", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: toString", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL SimpleName: getPath", "DEL ThisExpression", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: alpha", "DEL SimpleName: String", "DEL StringLiteral: \"columns\"", "DEL ExpressionStatement", "DEL SimpleName: result", "DEL InfixExpression: <=", "DEL MethodInvocation", "DEL TextElement: Create matrix space", "DEL PrimitiveType: byte", "DEL Javadoc", "DEL WhileStatement", "DEL SimpleType: Matrix", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: jobId", "DEL ExpressionStatement", "DEL SimpleName: HColumnDescriptor", "DEL Dimension", "DEL SimpleName: val", "DEL SimpleName: job", "DEL ExpressionStatement", "DEL SimpleName: family", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: Bytes", "DEL SimpleName: qualifier", "DEL StringLiteral: \"Create Matrix \"", "DEL Modifier: protected", "DEL Javadoc", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: tableDesc", "DEL SimpleName: column", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: Matrix", "DEL SimpleName: job", "DEL FieldAccess", "DEL SimpleName: EICOL", "DEL ClassInstanceCreation", "DEL Javadoc", "DEL SimpleName: matrixPath", "DEL SimpleName: name", "DEL StringLiteral: \"_\"", "DEL VariableDeclarationFragment", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL SimpleName: alpha", "DEL SimpleName: put", "DEL SimpleName: reference", "DEL SimpleName: MasterNotRunningException", "DEL TagElement: @inheritDoc", "DEL SimpleName: getSimpleName", "DEL PrimitiveType: int", "DEL TextElement:  ", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL PostfixExpression: ++", "DEL SimpleName: getValue", "DEL StringLiteral: \"string\"", "DEL FieldDeclaration", "DEL SimpleName: HColumnDescriptor", "DEL SingleVariableDeclaration", "DEL SimpleName: Bytes", "DEL Modifier: public", "DEL SimpleName: HColumnDescriptor", "DEL SimpleName: f", "DEL SimpleName: table", "DEL SimpleName: e", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: job", "DEL TextElement: Methods of the matrix classes", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL SimpleName: initTableMapperJob", "DEL SimpleName: HTableDescriptor", "DEL IfStatement", "DEL QualifiedName: Constants.METADATA", "DEL Block", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL TextElement:  ", "DEL SingleVariableDeclaration", "DEL SimpleName: table", "DEL ArrayType: byte[]", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: currVal", "DEL SimpleType: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer", "DEL SimpleName: create", "DEL SimpleName: IOException", "DEL SimpleName: table", "DEL MethodInvocation", "DEL SimpleName: write", "DEL SimpleName: EIVEC", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: EICOL", "DEL SimpleType: Put", "DEL SimpleName: admin", "DEL SimpleName: result", "DEL SimpleType: Job", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL SimpleName: toDouble", "DEL SimpleName: getClass", "DEL SingleVariableDeclaration", "DEL SimpleName: add", "DEL SimpleName: Configuration", "DEL MethodInvocation", "DEL SimpleName: next", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: Put", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL InfixExpression: *", "DEL SimpleName: get", "DEL SimpleName: addFamily", "DEL SimpleName: Put", "DEL TagElement", "DEL SimpleName: ScanMapper", "DEL SimpleName: setReference", "DEL SimpleName: toBytes", "DEL SimpleName: Bytes", "DEL SimpleName: alpha", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: HTable", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleType: HamaAdminImpl", "DEL ExpressionStatement", "DEL SimpleName: setConfiguration", "DEL ParenthesizedExpression", "DEL SimpleType: Get", "DEL SimpleName: config", "DEL SimpleName: setDimension", "DEL VariableDeclarationStatement", "DEL SimpleName: table", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: Scan", "DEL SimpleType: Iterator", "DEL Block", "DEL SimpleName: Bytes", "DEL SimpleType: Get", "DEL ExpressionStatement", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL SimpleType: IOException", "DEL StringLiteral: \"eival\"", "DEL SimpleName: val", "DEL SimpleName: Bytes", "DEL FieldDeclaration", "DEL Block", "DEL FieldAccess", "DEL Javadoc", "DEL TypeLiteral", "DEL SimpleName: setColumnLabel", "DEL SimpleName: matrixPath", "DEL ClassInstanceCreation", "DEL SimpleName: addFamily", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: EIVEC", "DEL PrimitiveType: void", "DEL SimpleName: Get", "DEL TypeLiteral", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: scan", "DEL SimpleName: toInt", "DEL MethodInvocation", "DEL Javadoc", "DEL PrimitiveType: int", "DEL StringLiteral: \"rows\"", "DEL SimpleName: table", "DEL Modifier: final", "DEL SimpleName: admin", "DEL PrimitiveType: void", "DEL TryStatement", "DEL TagElement: @throws", "DEL SimpleName: ClassNotFoundException", "DEL SimpleType: Get", "DEL FieldDeclaration", "DEL SimpleType: IOException", "DEL StringLiteral: \"rows\"", "DEL SimpleType: RegionException", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: key", "DEL SimpleName: family", "DEL SimpleName: String", "DEL SimpleName: InterruptedException", "DEL SimpleType: Put", "DEL SimpleName: set", "DEL VariableDeclarationFragment", "DEL SimpleName: closed", "DEL ReturnStatement", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleType: Job", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL SimpleName: addFamily", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL NullLiteral", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SingleVariableDeclaration", "DEL SimpleName: tableDesc", "DEL MethodInvocation", "DEL InfixExpression: <=", "DEL SimpleName: table", "DEL SimpleName: B", "DEL PrimitiveType: byte", "DEL SimpleName: table", "DEL IfStatement", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL SimpleType: Logger", "DEL SimpleName: admin", "DEL SimpleName: tryPathLength", "DEL SimpleName: addFamily", "DEL SimpleName: Bytes", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: put", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL SimpleName: Logger", "DEL Block", "DEL PrimitiveType: double", "DEL SimpleName: String", "DEL SimpleName: getPath", "DEL FieldDeclaration", "DEL QualifiedName: Constants.DEFAULT_PATH_LENGTH", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL IfStatement", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL TagElement", "DEL SimpleType: IOException", "DEL SimpleName: get", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: hamaAdmin", "DEL SimpleType: Scan", "DEL SimpleName: getLogger", "DEL InfixExpression: !=", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: matrixPath", "DEL SimpleName: column", "DEL SimpleName: scan", "DEL SimpleName: toBytes", "DEL SimpleType: IOException", "DEL Dimension", "DEL SimpleName: Bytes", "DEL SimpleType: Get", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL InfixExpression: +", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: job", "DEL SimpleName: aliasename", "DEL SimpleName: tableDesc", "DEL SimpleType: IOException", "DEL SimpleName: addFamily", "DEL SimpleType: Scan", "DEL SimpleName: result", "DEL SimpleName: result", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: RegionException", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: HBaseAdmin", "DEL Modifier: public", "DEL SimpleName: toBytes", "DEL SimpleName: addFamily", "DEL PrimitiveType: boolean", "DEL ReturnStatement", "DEL SimpleName: EI", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL TypeLiteral", "DEL SimpleName: HColumnDescriptor", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL ArrayType: byte[]", "DEL ExpressionStatement", "DEL QualifiedName: Constants.DEFAULT_TRY_TIMES", "DEL SimpleName: deleteTable", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: matrixPath", "DEL SimpleName: reference", "DEL SimpleName: InterruptedException", "DEL ClassInstanceCreation", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL TypeLiteral", "DEL SimpleName: rows", "DEL SimpleName: addFamily", "DEL VariableDeclarationFragment", "DEL QualifiedName: Constants.DEFAULT_MAXPATHLEN", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Assignment: =", "DEL PrimitiveType: byte", "DEL SimpleName: put", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL ThisExpression", "DEL SimpleName: map", "DEL TextElement:  configuration object", "DEL MethodInvocation", "DEL SimpleName: put", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL IfStatement", "DEL Assignment: =", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: getPath", "DEL TagElement: @inheritDoc", "DEL SimpleName: Bytes", "DEL SimpleName: IOException", "DEL SimpleName: getRowLabel", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: put", "DEL SimpleName: BytesUtil", "DEL ThrowStatement", "DEL SimpleName: admin", "DEL TextElement:  ", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: add", "DEL ThisExpression", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: Job", "DEL MethodInvocation", "DEL SimpleName: set", "DEL ClassInstanceCreation", "DEL ParameterizedType: TableMapper<ImmutableBytesWritable,Put>", "DEL SimpleName: Bytes", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL IfStatement", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL ArrayType: byte[]", "DEL StringLiteral: \"eicol\"", "DEL SimpleName: Bytes", "DEL SimpleName: row", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL SimpleName: reference", "DEL SimpleName: val", "DEL SimpleName: alpha", "DEL QualifiedName: Constants.CINDEX", "DEL SimpleType: Get", "DEL Javadoc", "DEL SimpleName: close", "DEL SingleVariableDeclaration", "DEL SimpleName: AbstractMatrix", "DEL Modifier: public", "DEL SimpleType: Put", "DEL SimpleName: Get", "DEL SimpleType: IOException", "DEL SimpleType: Matrix", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL StringLiteral: \"set MR job : \"", "DEL SimpleName: admin", "DEL SimpleName: reference", "DEL SimpleType: InterruptedException", "DEL SimpleName: matrixPath", "DEL SimpleName: family", "DEL ArrayType: byte[]", "DEL SimpleName: NavigableMap", "DEL SimpleName: LOG", "DEL SimpleName: Bytes", "DEL SimpleName: table", "DEL TextElement: Sets the job configuration", "DEL SimpleName: tableExists", "DEL VariableDeclarationStatement", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SimpleName: j", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SimpleName: aliasename", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL PrefixExpression: !", "DEL Modifier: public", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL SimpleName: add", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL SimpleName: TableMapper", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL ParameterizedType: Map.Entry<byte[],NavigableMap<byte[],byte[]>>", "DEL SimpleName: Get", "DEL QualifiedName: Constants.METADATA_REFERENCE", "DEL VariableDeclarationFragment", "DEL Block", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Block", "DEL Block", "DEL FieldDeclaration", "DEL QualifiedName: Constants.METADATA", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: put", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: toBytes", "DEL SimpleName: HBaseAdmin", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Configurable", "DEL ClassInstanceCreation", "DEL StringLiteral: \"set.alpha\"", "DEL SimpleName: toBytes", "DEL Modifier: protected", "DEL ExpressionStatement", "DEL TagElement", "DEL MethodDeclaration", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL SimpleName: put", "DEL SimpleName: conf", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: scan", "DEL SimpleName: EI", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleName: reference", "DEL SimpleName: toBytes", "DEL SimpleName: IOException", "DEL TagElement: @inheritDoc", "DEL SimpleName: Bytes", "DEL ThisExpression", "DEL SimpleName: setReference", "DEL SimpleType: Put", "DEL SimpleType: Matrix", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL StringLiteral: \"set.alpha\"", "DEL NullLiteral", "DEL SimpleType: HColumnDescriptor", "DEL IfStatement", "DEL SimpleName: scan", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Modifier: static", "DEL IfStatement", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL TagElement", "DEL SimpleType: Scan", "DEL SimpleName: tableDesc", "DEL Block", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL TagElement", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL MethodInvocation", "DEL SimpleName: isTableEnabled", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL SimpleName: put", "DEL MethodDeclaration", "DEL SimpleName: Job", "DEL BooleanLiteral: false", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: toInt", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL SimpleName: result", "DEL SimpleName: Bytes", "DEL TagElement: @param", "DEL TagElement", "DEL ArrayType: byte[]", "DEL ClassInstanceCreation", "DEL TextElement:  ", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: addFamily", "DEL SimpleType: TableMapper", "DEL SimpleName: Bytes", "DEL SimpleName: Double", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: table", "DEL SimpleName: key", "DEL TextElement: a matrix copy of the original copy collected in \"eicol\" family * ", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL SimpleName: reference", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL SimpleName: result", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: Context", "DEL Modifier: protected", "DEL SimpleName: add", "DEL SimpleName: equals", "DEL SimpleType: Job", "DEL SimpleName: Job", "DEL SimpleName: job", "DEL SimpleType: Configuration", "DEL MethodInvocation", "DEL SimpleName: save", "DEL ArrayType: byte[]", "DEL NumberLiteral: 1", "DEL SimpleType: Put", "DEL QualifiedName: Constants.METADATA_REFERENCE", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: setFloat", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL SimpleName: Put", "DEL SimpleType: IOException", "DEL SimpleName: result", "DEL QualifiedName: Map.Entry", "DEL ReturnStatement", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL SimpleName: Put", "DEL SimpleName: map", "DEL SimpleName: hasAliaseName", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL SimpleName: put", "DEL SimpleName: table", "DEL QualifiedName: Constants.METADATA_REFERENCE", "DEL MethodInvocation", "DEL SimpleName: tryToCreateTable", "DEL SimpleName: get", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: toBytes", "DEL NumberLiteral: 0", "DEL SimpleName: IOException", "DEL StringLiteral: \"columns\"", "DEL Modifier: public", "DEL Block", "DEL SimpleName: Logger", "DEL ThisExpression", "DEL SimpleName: addFamily", "DEL VariableDeclarationFragment", "DEL SimpleName: Result", "DEL Block", "DEL SimpleType: ClassNotFoundException", "DEL QualifiedName: Constants.DEFAULT_TRY_TIMES", "DEL SimpleName: String", "DEL SimpleType: Matrix", "DEL SimpleType: String", "DEL SimpleName: it", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL StringLiteral: \"Try too many times to create a table in hbase.\"", "DEL ExpressionStatement", "DEL SimpleName: Put", "DEL SimpleName: job", "DEL VariableDeclarationStatement", "DEL SimpleName: aliasename", "DEL SimpleName: Bytes", "DEL IfStatement", "DEL QualifiedName: Constants.BLOCK", "DEL SimpleName: Bytes", "DEL SimpleName: i", "DEL SimpleName: HColumnDescriptor", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL SimpleName: tableExists", "DEL FieldDeclaration", "DEL SimpleType: Put", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL Javadoc", "DEL TagElement: @inheritDoc", "DEL SimpleName: EIVEC", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL TagElement: @inheritDoc", "DEL Block", "DEL SimpleName: Bytes", "DEL Modifier: protected", "DEL ClassInstanceCreation", "DEL SimpleName: Put", "DEL SimpleName: HamaAdminImpl", "DEL SimpleName: put", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: addFamily", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL SimpleType: Put", "DEL SimpleName: conf", "DEL InfixExpression: >", "DEL SimpleType: Get", "DEL SimpleName: table", "DEL InfixExpression: +", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleName: get", "DEL SimpleName: config", "DEL VariableDeclarationStatement", "DEL SimpleName: Iterator", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL VariableDeclarationFragment", "DEL SimpleType: Put", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL PrimitiveType: boolean", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL ArrayType: byte[]", "DEL SimpleName: get", "DEL SimpleName: getValue", "DEL BooleanLiteral: false", "DEL SimpleName: EIVEC", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL QualifiedName: Constants.METADATA", "DEL SimpleName: put", "DEL PrimitiveType: void", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL Block", "DEL SimpleType: String", "DEL SimpleName: get", "DEL SimpleName: Put", "DEL SimpleName: currVal", "DEL TryStatement", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleType: HTableDescriptor", "DEL SimpleType: Configuration", "DEL TextElement:  ", "DEL SimpleType: String", "DEL SimpleName: decrementAndGetRef", "DEL SimpleName: add", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: result", "DEL SingleVariableDeclaration", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL Assignment: =", "DEL ArrayType: byte[]", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL SimpleName: admin", "DEL SimpleName: toString", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleType: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer", "DEL SimpleName: get", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: f", "DEL FieldAccess", "DEL SimpleName: Get", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: setConf", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL ArrayType: byte[]", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL Modifier: protected", "DEL ClassInstanceCreation", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: add", "DEL NumberLiteral: 1", "DEL SimpleName: add", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL SimpleType: Get", "DEL SimpleName: getRowIndex", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL PrimitiveType: int", "DEL SimpleName: HTable", "DEL SimpleType: Put", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL SimpleName: result", "DEL SimpleName: valueOf", "DEL SimpleName: Configuration", "DEL SimpleName: Get", "DEL SimpleName: valueOf", "DEL Javadoc", "DEL Assignment: =", "DEL ParenthesizedExpression", "DEL SimpleName: scan", "DEL SimpleName: toString", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: addFamily", "DEL NullLiteral", "DEL FieldDeclaration", "DEL SimpleName: B", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL TagElement: @inheritDoc", "DEL MethodInvocation", "DEL SimpleName: put", "DEL SimpleName: it", "DEL SimpleName: Bytes", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: getRowIndex", "DEL BooleanLiteral: true", "DEL SimpleName: Job", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: incrementAndGetRef", "DEL Modifier: abstract", "DEL MethodInvocation", "DEL TextElement: a column family collect all values and statuses used during computation * ", "DEL MethodInvocation", "DEL SimpleName: HColumnDescriptor", "DEL SimpleName: decrementAndGetRef", "DEL MethodInvocation", "DEL SimpleName: printStackTrace", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: context", "DEL PrimitiveType: byte", "DEL SimpleName: toBytes", "DEL SimpleName: name", "DEL InfixExpression: <=", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: Bytes", "DEL SimpleName: toString", "DEL SimpleName: toBytes", "DEL SimpleName: entrySet", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: checkAllJobs", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: e", "DEL SimpleName: column", "DEL SimpleType: IOException", "DEL SimpleName: Scan", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL Modifier: private", "DEL PrimitiveType: void", "DEL SimpleName: Bytes", "DEL SimpleName: IOException", "DEL Javadoc", "DEL SimpleName: put", "DEL Block", "DEL PrimitiveType: byte", "DEL SimpleName: getKey", "DEL Block", "DEL TagElement", "DEL SimpleName: put", "DEL Block", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: name", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL SimpleName: config", "DEL SimpleName: jobId", "DEL SimpleName: EICOL", "DEL SimpleName: Put", "DEL SimpleName: Bytes", "DEL FieldAccess", "DEL SimpleName: Bytes", "DEL SimpleName: f", "DEL SimpleType: Put", "DEL SimpleName: scan", "DEL TagElement: @inheritDoc", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL Modifier: static", "DEL FieldAccess", "DEL SimpleName: Bytes", "DEL ArrayType: byte[]", "DEL SingleVariableDeclaration", "DEL SimpleName: getFloat", "DEL SimpleName: value", "DEL SimpleName: getKey", "DEL SimpleName: reference", "DEL VariableDeclarationFragment", "DEL WhileStatement", "DEL SimpleType: InterruptedException", "DEL SimpleName: reference", "DEL SimpleName: admin", "DEL SimpleName: EI", "DEL SimpleName: it", "DEL SimpleName: reference", "DEL SimpleName: rows", "DEL ClassInstanceCreation", "DEL SimpleName: put", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: get", "DEL TextElement: a matrix collect all the eigen vectors * ", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL SimpleName: Bytes", "DEL SimpleName: Bytes", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ReturnStatement", "DEL SimpleName: get", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: addFamily", "DEL SimpleType: Put", "DEL SimpleName: tryPathLength", "DEL SimpleType: Map.Entry", "DEL SimpleName: add", "DEL SimpleName: closed", "DEL SimpleName: config", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: ImmutableBytesWritable", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL ClassInstanceCreation", "DEL Dimension", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: tryTimes", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: allTrue", "DEL SimpleName: toInt", "DEL ThisExpression", "DEL SimpleName: Put", "DEL SimpleName: Get", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: NavigableMap", "DEL SimpleName: Bytes", "DEL SimpleName: save", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: name", "DEL SimpleType: IOException", "DEL SimpleName: Put", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL IfStatement", "DEL SimpleName: Scan", "DEL SimpleName: hamaAdmin", "DEL SimpleType: Job", "DEL Assignment: =", "DEL ExpressionStatement", "DEL TextElement:  ", "DEL FieldDeclaration", "DEL SimpleName: reference", "DEL InfixExpression: !=", "DEL SimpleName: EICOL", "DEL BooleanLiteral: true", "DEL SimpleType: Put", "DEL MethodInvocation", "DEL QualifiedName: Constants.METADATA", "DEL MethodInvocation", "DEL SimpleType: AbstractMatrix", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL SimpleName: LOG", "DEL FieldAccess", "DEL SimpleName: family", "DEL SimpleName: entrySet", "DEL ParenthesizedExpression", "DEL Modifier: static", "DEL SimpleName: setReference", "DEL SimpleName: context", "DEL BooleanLiteral: true", "DEL Modifier: final", "DEL Javadoc", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: conf", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: iterator", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: get", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: Bytes", "DEL SimpleName: Get", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: admin", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL SimpleName: config", "DEL SimpleName: add", "DEL ParameterizedType: List<Job>", "DEL SimpleName: Bytes", "DEL ArrayType: byte[]", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Bytes", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: table", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Javadoc", "DEL SimpleType: Double", "DEL Assignment: =", "DEL SimpleName: Float", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL SimpleName: InterruptedException", "DEL SimpleName: addFamily", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: table", "DEL SimpleName: tableDesc", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: toBytes", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL Dimension", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: alpha", "DEL Modifier: public", "DEL SimpleName: setRowLabel", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleType: IOException", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL SimpleType: Put", "DEL SimpleName: tryPathLength", "DEL SimpleType: String", "DEL MethodInvocation", "DEL TextElement:  ", "DEL Dimension", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: table", "DEL PrimitiveType: byte", "DEL SimpleName: add", "DEL SimpleName: e", "DEL CatchClause", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: a", "DEL SimpleName: createTable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: conf", "DEL StringLiteral: \"name\"", "DEL QualifiedName: Constants.METADATA_TYPE", "DEL SimpleName: getPath", "DEL SimpleName: tableDesc", "DEL Dimension", "DEL Block", "DEL Modifier: private", "DEL SimpleType: String", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: scan", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL TryStatement", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleType: Matrix", "DEL MethodInvocation", "DEL QualifiedName: Constants.CINDEX", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL SimpleType: HTableDescriptor", "DEL InfixExpression: !=", "DEL SimpleType: Get", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: qualifier", "DEL SimpleName: isTableEnabled", "DEL MethodInvocation", "DEL SimpleName: j", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL TagElement", "DEL ExpressionStatement", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleType: HTable", "DEL PrimitiveType: byte", "DEL SimpleName: result", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: Matrix", "DEL SimpleType: Put", "DEL SimpleName: info", "DEL SimpleName: toBytes", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL VariableDeclarationStatement", "DEL CatchClause", "DEL Block", "DEL TypeLiteral", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL TagElement: @inheritDoc", "DEL SimpleName: tryTimes", "DEL SimpleName: config", "DEL Block", "DEL SimpleName: scan", "DEL SimpleName: Bytes", "DEL SimpleName: getPath", "DEL SimpleName: table", "DEL SimpleName: RandomVariable", "DEL SimpleName: i", "DEL SimpleName: Configuration", "DEL SimpleName: addFamily", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: initTableReducerJob", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: IOException", "DEL SimpleName: addFamily", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL TagElement", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: tableDesc", "DEL PrimitiveType: boolean", "DEL ThisExpression", "DEL SimpleName: table", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL SimpleName: Put", "DEL QualifiedName: Constants.METADATA", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL SimpleType: HColumnDescriptor", "DEL SimpleName: Job", "DEL Assignment: =", "DEL SimpleName: get", "DEL SimpleName: String", "DEL SimpleName: result", "DEL ExpressionStatement", "DEL Block", "DEL Javadoc", "DEL SimpleName: qualifier", "DEL Block", "DEL Javadoc", "DEL SimpleName: addFamily", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: row", "DEL SimpleName: tableDesc", "DEL MethodInvocation", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL SimpleName: alpha", "DEL StringLiteral: \"string\"", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL SimpleName: put", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: matrixPath", "DEL PrimitiveType: byte", "DEL TextElement:  ", "DEL ExpressionStatement", "DEL SimpleName: tableDesc", "DEL NullLiteral", "DEL SimpleName: put", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: Bytes", "DEL SimpleName: NavigableMap", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: List", "DEL PrimitiveType: byte", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: admin", "DEL SimpleName: ImmutableBytesWritable", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL SimpleName: IOException", "DEL SimpleName: getType", "DEL SimpleName: getValue", "DEL SimpleName: toBytes", "DEL SimpleName: warn", "DEL SimpleName: Get", "DEL VariableDeclarationStatement", "DEL SimpleType: HColumnDescriptor", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL Javadoc", "DEL ReturnStatement", "DEL SimpleName: scan", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: value", "DEL Modifier: public", "DEL SimpleName: map", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL TextElement: try to create a new matrix with a new random name. try times will be", "DEL ThisExpression", "DEL SimpleName: columns", "DEL SimpleName: toBytes", "DEL ThisExpression", "DEL SimpleType: Configurable", "DEL ParameterizedType: NavigableMap<byte[],NavigableMap<byte[],byte[]>>", "DEL Dimension", "DEL QualifiedName: Constants.METADATA", "DEL SimpleType: Job", "DEL SimpleName: Bytes", "DEL SimpleType: IOException", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: HTable", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: value", "DEL SimpleName: Bytes", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: scan", "DEL Javadoc", "DEL SimpleName: toBytes", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: scan", "DEL SimpleName: a", "DEL SimpleName: B", "DEL SimpleName: getValue", "DEL SimpleName: doubleValue", "DEL TypeDeclaration: class", "DEL Dimension", "DEL Modifier: protected", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL SimpleName: Float", "DEL Modifier: protected", "DEL VariableDeclarationFragment", "DEL SimpleName: initTableMapperJob", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL Modifier: protected", "DEL MethodInvocation", "DEL SimpleName: result", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL QualifiedName: Constants.METADATA", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: B", "DEL SimpleName: column", "DEL ReturnStatement", "DEL SimpleName: hasNext", "DEL SimpleName: Put", "DEL SimpleName: Put", "DEL SimpleName: HTableDescriptor", "DEL SimpleType: ImmutableBytesWritable", "DEL PrimitiveType: double", "DEL SimpleName: toBytes", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL ExpressionStatement", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: get", "DEL MethodInvocation", "DEL Modifier: protected", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: toBytes", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: printStackTrace", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL QualifiedName: Constants.ALIASEFAMILY", "DEL MethodDeclaration", "DEL Dimension", "DEL ExpressionStatement", "DEL SimpleName: matrixPath", "DEL StringLiteral: \"eivec\"", "DEL PrimitiveType: void", "DEL Block", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: HColumnDescriptor", "DEL SimpleName: conf", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Modifier: protected", "DEL Dimension", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: getPath", "DEL Dimension", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL IfStatement", "DEL Block", "DEL SimpleName: Put", "DEL ArrayType: byte[]", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: InterruptedException", "DEL TagElement", "DEL TextElement:  ", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: Put", "DEL SimpleName: qualifier", "DEL SimpleName: admin", "DEL Modifier: public", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleType: Context", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleType: MasterNotRunningException", "DEL SimpleName: result", "DEL PrimitiveType: byte", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer", "DEL SimpleName: tryTimes", "DEL TagElement", "DEL PostfixExpression: --", "DEL SimpleName: Get", "DEL PrimitiveType: boolean", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: conf", "DEL StringLiteral: \"name\"", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Dimension", "DEL Dimension", "DEL Modifier: public", "DEL SimpleName: toBytes", "DEL Block", "DEL Block", "DEL Modifier: protected", "DEL SimpleType: ScanMapper", "DEL TagElement: @inheritDoc", "DEL SimpleName: getConf", "DEL StringLiteral: \"set MR job : \"", "DEL MethodDeclaration", "DEL SimpleName: getValue", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: getRowIndex", "DEL SimpleName: b", "DEL SimpleName: addFamily", "DEL NullLiteral", "DEL SimpleName: row", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleType: Double", "DEL PrimitiveType: int", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: allTrue", "DEL MethodInvocation", "DEL SimpleName: Double", "DEL PrimitiveType: double", "DEL TagElement: @inheritDoc", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: tryPathLength", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleName: reference", "DEL SimpleName: put", "DEL QualifiedName: Map.Entry", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: family", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleName: Matrix", "DEL SimpleName: getColumnLabel", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: e", "DEL SimpleType: String", "DEL Block", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: initTableReducerJob", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL Modifier: public", "DEL PostfixExpression: --", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL SimpleName: toBytes", "DEL SimpleName: ScanMapper", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL ReturnStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: Float", "DEL ClassInstanceCreation", "DEL StringLiteral: \"type\"", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleName: Bytes", "DEL SimpleType: Float", "DEL SimpleName: scan", "DEL SimpleName: tableDesc", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleType: Scan", "DEL SimpleName: HamaAdmin", "DEL VariableDeclarationStatement", "DEL SimpleType: Result", "DEL SimpleName: result", "DEL SimpleName: put", "DEL SingleVariableDeclaration", "DEL SimpleName: add", "DEL CatchClause", "DEL SimpleName: info", "DEL SimpleName: Bytes", "DEL SimpleName: addFamily", "DEL MethodInvocation", "DEL SimpleName: tryTimes", "DEL Block", "DEL SimpleName: Bytes", "DEL SimpleName: scan", "DEL SimpleName: reference", "DEL ThisExpression", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL FieldDeclaration", "DEL SimpleName: j", "DEL SimpleName: getValue", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL ThisExpression", "DEL QualifiedName: Constants.BLOCK", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: toBytes", "DEL SimpleName: Get", "DEL SimpleName: randMatrixPath", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: table", "DEL SimpleType: NavigableMap", "DEL Block", "DEL SimpleName: row", "DEL IfStatement", "DEL MethodDeclaration", "DEL ThisExpression", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: add", "DEL SimpleName: Bytes", "DEL ConditionalExpression", "DEL SimpleName: Matrix", "DEL MethodInvocation", "DEL SimpleName: disableTable", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: Job", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL Modifier: protected", "DEL SingleVariableDeclaration", "DEL TagElement: @inheritDoc", "DEL SimpleName: put", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL Dimension", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: getPath", "DEL Block", "DEL SimpleName: valueOf", "DEL SimpleName: toBytes", "DEL Modifier: public", "DEL Modifier: static", "DEL SimpleName: put", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: HColumnDescriptor", "DEL TypeDeclaration: class", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL TagElement", "DEL PrimitiveType: byte", "DEL SimpleName: a", "DEL ClassInstanceCreation", "DEL Block", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL SimpleType: ImmutableBytesWritable", "DEL ParameterizedType: Iterator<Job>", "DEL FieldAccess", "DEL SimpleName: Bytes", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: get", "DEL SimpleName: create", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: job", "DEL SimpleName: Float", "DEL SimpleType: HColumnDescriptor", "DEL Block", "DEL SimpleName: reference", "DEL SimpleName: Bytes", "DEL Block", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL SimpleName: Bytes", "DEL Block", "DEL SimpleType: Get", "DEL SimpleName: getRows", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL TextElement:  ", "DEL ClassInstanceCreation", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL SimpleType: ScanMapper", "DEL SimpleName: allTrue", "DEL IfStatement", "DEL SimpleName: hasAliaseName", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL SimpleName: closed", "DEL SimpleName: scan", "DEL VariableDeclarationStatement", "DEL InfixExpression: !=", "DEL SimpleName: Bytes", "DEL SimpleName: result", "DEL SimpleType: HTable", "DEL SimpleName: result", "DEL QualifiedName: Constants.METADATA", "DEL SimpleName: toBytes", "DEL SimpleName: Scan", "DEL MethodInvocation", "DEL SimpleName: addFamily", "DEL SimpleName: addFamily", "DEL SimpleName: NavigableMap", "DEL SimpleName: f", "DEL Block", "DEL SimpleName: reference", "DEL MethodInvocation", "DEL SimpleName: matrixPath", "DEL FieldDeclaration", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL ThisExpression", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleType: Float", "DEL SimpleName: getValue", "DEL Javadoc", "DEL PrimitiveType: byte", "DEL ClassInstanceCreation", "DEL SimpleName: waitForCompletion", "DEL Block", "DEL SimpleName: ScanMapper", "DEL SimpleName: MasterNotRunningException", "DEL Javadoc", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL SimpleType: HColumnDescriptor", "DEL InfixExpression: +", "DEL SimpleName: toBytes", "DEL SimpleName: reference", "DEL SimpleName: Job", "DEL QualifiedName: Constants.BLOCK", "DEL SimpleType: HTable", "DEL SimpleName: getNoVersionMap", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL MethodInvocation", "DEL TagElement", "DEL MethodInvocation", "DEL TagElement", "DEL TypeLiteral", "DEL ThisExpression", "DEL SimpleName: BytesUtil", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: put", "DEL SimpleName: waitForCompletion", "DEL SimpleType: HColumnDescriptor", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL MethodInvocation"]}]}}, {"AbstractMatrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Iterator(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.List(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.Map(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.util.NavigableMap(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.HTableDescriptor(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.MasterNotRunningException(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.hbase.RegionException(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Job(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hama.Constants(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: org.apache.hama.HamaAdmin(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: org.apache.hama.HamaAdminImpl(64)", "Delete ImportDeclaration(65)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(66)", "Delete ImportDeclaration(67)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(68)", "Delete ImportDeclaration(69)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(70)", "Delete ImportDeclaration(71)", "Delete QualifiedName: org.apache.log4j.Logger(72)", "Delete ImportDeclaration(73)", "Delete TextElement: Methods of the matrix classes(74)", "Delete TagElement(75)", "Delete Javadoc(76)", "Delete Modifier: public(77)", "Delete Modifier: abstract(78)", "Delete SimpleName: AbstractMatrix(79)", "Delete SimpleName: Matrix(80)", "Delete SimpleType: Matrix(81)", "Delete Modifier: static(82)", "Delete PrimitiveType: int(83)", "Delete SimpleName: tryPathLength(84)", "Delete QualifiedName: Constants.DEFAULT_PATH_LENGTH(85)", "Delete VariableDeclarationFragment(86)", "Delete FieldDeclaration(87)", "Delete Modifier: static(88)", "Delete Modifier: final(89)", "Delete SimpleName: Logger(90)", "Delete SimpleType: Logger(91)", "Delete SimpleName: LOG(92)", "Delete SimpleName: Logger(93)", "Delete SimpleName: getLogger(94)", "Delete SimpleName: AbstractMatrix(95)", "Delete SimpleType: AbstractMatrix(96)", "Delete TypeLiteral(97)", "Delete MethodInvocation(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete Modifier: protected(101)", "Delete SimpleName: HamaConfiguration(102)", "Delete SimpleType: HamaConfiguration(103)", "Delete SimpleName: config(104)", "Delete VariableDeclarationFragment(105)", "Delete FieldDeclaration(106)", "Delete Modifier: protected(107)", "Delete SimpleName: HBaseAdmin(108)", "Delete SimpleType: HBaseAdmin(109)", "Delete SimpleName: admin(110)", "Delete VariableDeclarationFragment(111)", "Delete FieldDeclaration(112)", "Delete Modifier: protected(113)", "Delete SimpleName: String(114)", "Delete SimpleType: String(115)", "Delete SimpleName: matrixPath(116)", "Delete VariableDeclarationFragment(117)", "Delete FieldDeclaration(118)", "Delete Modifier: protected(119)", "Delete SimpleName: HTable(120)", "Delete SimpleType: HTable(121)", "Delete SimpleName: table(122)", "Delete VariableDeclarationFragment(123)", "Delete FieldDeclaration(124)", "Delete Modifier: protected(125)", "Delete SimpleName: HTableDescriptor(126)", "Delete SimpleType: HTableDescriptor(127)", "Delete SimpleName: tableDesc(128)", "Delete VariableDeclarationFragment(129)", "Delete FieldDeclaration(130)", "Delete Modifier: protected(131)", "Delete SimpleName: HamaAdmin(132)", "Delete SimpleType: HamaAdmin(133)", "Delete SimpleName: hamaAdmin(134)", "Delete VariableDeclarationFragment(135)", "Delete FieldDeclaration(136)", "Delete Modifier: protected(137)", "Delete PrimitiveType: boolean(138)", "Delete SimpleName: closed(139)", "Delete BooleanLiteral: true(140)", "Delete VariableDeclarationFragment(141)", "Delete FieldDeclaration(142)", "Delete TextElement: a matrix copy of the original copy collected in \"eicol\" family * (143)", "Delete TagElement(144)", "Delete Javadoc(145)", "Delete Modifier: public(146)", "Delete Modifier: static(147)", "Delete Modifier: final(148)", "Delete SimpleName: String(149)", "Delete SimpleType: String(150)", "Delete SimpleName: EICOL(151)", "Delete StringLiteral: \"eicol\"(152)", "Delete VariableDeclarationFragment(153)", "Delete FieldDeclaration(154)", "Delete TextElement: a column family collect all values and statuses used during computation * (155)", "Delete TagElement(156)", "Delete Javadoc(157)", "Delete Modifier: public(158)", "Delete Modifier: static(159)", "Delete Modifier: final(160)", "Delete SimpleName: String(161)", "Delete SimpleType: String(162)", "Delete SimpleName: EI(163)", "Delete StringLiteral: \"eival\"(164)", "Delete VariableDeclarationFragment(165)", "Delete FieldDeclaration(166)", "Delete TextElement: a matrix collect all the eigen vectors * (167)", "Delete TagElement(168)", "Delete Javadoc(169)", "Delete Modifier: public(170)", "Delete Modifier: static(171)", "Delete Modifier: final(172)", "Delete SimpleName: String(173)", "Delete SimpleType: String(174)", "Delete SimpleName: EIVEC(175)", "Delete StringLiteral: \"eivec\"(176)", "Delete VariableDeclarationFragment(177)", "Delete FieldDeclaration(178)", "Delete TextElement: Sets the job configuration(179)", "Delete TagElement(180)", "Delete SimpleName: conf(181)", "Delete TextElement:  configuration object(182)", "Delete TagElement: @param(183)", "Delete SimpleName: MasterNotRunningException(184)", "Delete TagElement: @throws(185)", "Delete Javadoc(186)", "Delete Modifier: public(187)", "Delete PrimitiveType: void(188)", "Delete SimpleName: setConfiguration(189)", "Delete SimpleName: HamaConfiguration(190)", "Delete SimpleType: HamaConfiguration(191)", "Delete SimpleName: conf(192)", "Delete SingleVariableDeclaration(193)", "Delete SimpleName: MasterNotRunningException(194)", "Delete SimpleType: MasterNotRunningException(195)", "Delete ThisExpression(196)", "Delete SimpleName: config(197)", "Delete FieldAccess(198)", "Delete SimpleName: conf(199)", "Delete Assignment: =(200)", "Delete ExpressionStatement(201)", "Delete ThisExpression(202)", "Delete SimpleName: admin(203)", "Delete FieldAccess(204)", "Delete SimpleName: HBaseAdmin(205)", "Delete SimpleType: HBaseAdmin(206)", "Delete SimpleName: config(207)", "Delete ClassInstanceCreation(208)", "Delete Assignment: =(209)", "Delete ExpressionStatement(210)", "Delete SimpleName: hamaAdmin(211)", "Delete SimpleName: HamaAdminImpl(212)", "Delete SimpleType: HamaAdminImpl(213)", "Delete SimpleName: conf(214)", "Delete SimpleName: admin(215)", "Delete ClassInstanceCreation(216)", "Delete Assignment: =(217)", "Delete ExpressionStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete TextElement: try to create a new matrix with a new random name. try times will be(221)", "Delete TextElement: (Integer.MAX_VALUE - 4) * DEFAULT_TRY_TIMES;(222)", "Delete TagElement(223)", "Delete SimpleName: IOException(224)", "Delete TagElement: @throws(225)", "Delete Javadoc(226)", "Delete Modifier: protected(227)", "Delete PrimitiveType: void(228)", "Delete SimpleName: tryToCreateTable(229)", "Delete SimpleName: String(230)", "Delete SimpleType: String(231)", "Delete SimpleName: table_prefix(232)", "Delete SingleVariableDeclaration(233)", "Delete SimpleName: IOException(234)", "Delete SimpleType: IOException(235)", "Delete PrimitiveType: int(236)", "Delete SimpleName: tryTimes(237)", "Delete QualifiedName: Constants.DEFAULT_TRY_TIMES(238)", "Delete VariableDeclarationFragment(239)", "Delete VariableDeclarationStatement(240)", "Delete SimpleName: matrixPath(241)", "Delete SimpleName: table_prefix(242)", "Delete StringLiteral: \"_\"(243)", "Delete SimpleName: RandomVariable(244)", "Delete SimpleName: randMatrixPath(245)", "Delete SimpleName: tryPathLength(246)", "Delete MethodInvocation(247)", "Delete InfixExpression: +(248)", "Delete Assignment: =(249)", "Delete ExpressionStatement(250)", "Delete SimpleName: admin(251)", "Delete SimpleName: tableExists(252)", "Delete SimpleName: matrixPath(253)", "Delete MethodInvocation(254)", "Delete PrefixExpression: !(255)", "Delete SimpleName: tableDesc(256)", "Delete SimpleName: HTableDescriptor(257)", "Delete SimpleType: HTableDescriptor(258)", "Delete SimpleName: matrixPath(259)", "Delete ClassInstanceCreation(260)", "Delete Assignment: =(261)", "Delete ExpressionStatement(262)", "Delete SimpleName: create(263)", "Delete MethodInvocation(264)", "Delete ExpressionStatement(265)", "Delete ReturnStatement(266)", "Delete Block(267)", "Delete IfStatement(268)", "Delete SimpleName: tryTimes(269)", "Delete PostfixExpression: --(270)", "Delete ExpressionStatement(271)", "Delete SimpleName: tryTimes(272)", "Delete NumberLiteral: 0(273)", "Delete InfixExpression: <=(274)", "Delete SimpleName: tryPathLength(275)", "Delete PostfixExpression: ++(276)", "Delete ExpressionStatement(277)", "Delete SimpleName: tryTimes(278)", "Delete QualifiedName: Constants.DEFAULT_TRY_TIMES(279)", "Delete Assignment: =(280)", "Delete ExpressionStatement(281)", "Delete Block(282)", "Delete IfStatement(283)", "Delete Block(284)", "Delete SimpleName: tryPathLength(285)", "Delete QualifiedName: Constants.DEFAULT_MAXPATHLEN(286)", "Delete InfixExpression: <=(287)", "Delete DoStatement(288)", "Delete SimpleName: IOException(289)", "Delete SimpleType: IOException(290)", "Delete StringLiteral: \"Try too many times to create a table in hbase.\"(291)", "Delete ClassInstanceCreation(292)", "Delete ThrowStatement(293)", "Delete Block(294)", "Delete MethodDeclaration(295)", "Delete TextElement: Create matrix space(296)", "Delete TagElement(297)", "Delete Javadoc(298)", "Delete Modifier: protected(299)", "Delete PrimitiveType: void(300)", "Delete SimpleName: create(301)", "Delete SimpleName: IOException(302)", "Delete SimpleType: IOException(303)", "Delete SimpleName: admin(304)", "Delete SimpleName: tableExists(305)", "Delete SimpleName: matrixPath(306)", "Delete MethodInvocation(307)", "Delete PrefixExpression: !(308)", "Delete ThisExpression(309)", "Delete SimpleName: tableDesc(310)", "Delete FieldAccess(311)", "Delete SimpleName: addFamily(312)", "Delete SimpleName: HColumnDescriptor(313)", "Delete SimpleType: HColumnDescriptor(314)", "Delete QualifiedName: Constants.COLUMNFAMILY(315)", "Delete ClassInstanceCreation(316)", "Delete MethodInvocation(317)", "Delete ExpressionStatement(318)", "Delete ThisExpression(319)", "Delete SimpleName: tableDesc(320)", "Delete FieldAccess(321)", "Delete SimpleName: addFamily(322)", "Delete SimpleName: HColumnDescriptor(323)", "Delete SimpleType: HColumnDescriptor(324)", "Delete QualifiedName: Constants.ATTRIBUTE(325)", "Delete ClassInstanceCreation(326)", "Delete MethodInvocation(327)", "Delete ExpressionStatement(328)", "Delete ThisExpression(329)", "Delete SimpleName: tableDesc(330)", "Delete FieldAccess(331)", "Delete SimpleName: addFamily(332)", "Delete SimpleName: HColumnDescriptor(333)", "Delete SimpleType: HColumnDescriptor(334)", "Delete SimpleName: Bytes(335)", "Delete SimpleName: toBytes(336)", "Delete QualifiedName: Constants.ALIASEFAMILY(337)", "Delete MethodInvocation(338)", "Delete ClassInstanceCreation(339)", "Delete MethodInvocation(340)", "Delete ExpressionStatement(341)", "Delete ThisExpression(342)", "Delete SimpleName: tableDesc(343)", "Delete FieldAccess(344)", "Delete SimpleName: addFamily(345)", "Delete SimpleName: HColumnDescriptor(346)", "Delete SimpleType: HColumnDescriptor(347)", "Delete SimpleName: Bytes(348)", "Delete SimpleName: toBytes(349)", "Delete QualifiedName: Constants.BLOCK(350)", "Delete MethodInvocation(351)", "Delete ClassInstanceCreation(352)", "Delete MethodInvocation(353)", "Delete ExpressionStatement(354)", "Delete ThisExpression(355)", "Delete SimpleName: tableDesc(356)", "Delete FieldAccess(357)", "Delete SimpleName: addFamily(358)", "Delete SimpleName: HColumnDescriptor(359)", "Delete SimpleType: HColumnDescriptor(360)", "Delete SimpleName: Bytes(361)", "Delete SimpleName: toBytes(362)", "Delete SimpleName: EI(363)", "Delete MethodInvocation(364)", "Delete ClassInstanceCreation(365)", "Delete MethodInvocation(366)", "Delete ExpressionStatement(367)", "Delete ThisExpression(368)", "Delete SimpleName: tableDesc(369)", "Delete FieldAccess(370)", "Delete SimpleName: addFamily(371)", "Delete SimpleName: HColumnDescriptor(372)", "Delete SimpleType: HColumnDescriptor(373)", "Delete SimpleName: Bytes(374)", "Delete SimpleName: toBytes(375)", "Delete SimpleName: EICOL(376)", "Delete MethodInvocation(377)", "Delete ClassInstanceCreation(378)", "Delete MethodInvocation(379)", "Delete ExpressionStatement(380)", "Delete ThisExpression(381)", "Delete SimpleName: tableDesc(382)", "Delete FieldAccess(383)", "Delete SimpleName: addFamily(384)", "Delete SimpleName: HColumnDescriptor(385)", "Delete SimpleType: HColumnDescriptor(386)", "Delete SimpleName: Bytes(387)", "Delete SimpleName: toBytes(388)", "Delete SimpleName: EIVEC(389)", "Delete MethodInvocation(390)", "Delete ClassInstanceCreation(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: LOG(394)", "Delete SimpleName: info(395)", "Delete StringLiteral: \"Initializing the matrix storage.\"(396)", "Delete MethodInvocation(397)", "Delete ExpressionStatement(398)", "Delete ThisExpression(399)", "Delete SimpleName: admin(400)", "Delete FieldAccess(401)", "Delete SimpleName: createTable(402)", "Delete ThisExpression(403)", "Delete SimpleName: tableDesc(404)", "Delete FieldAccess(405)", "Delete MethodInvocation(406)", "Delete ExpressionStatement(407)", "Delete SimpleName: LOG(408)", "Delete SimpleName: info(409)", "Delete StringLiteral: \"Create Matrix \"(410)", "Delete SimpleName: matrixPath(411)", "Delete InfixExpression: +(412)", "Delete MethodInvocation(413)", "Delete ExpressionStatement(414)", "Delete SimpleName: table(415)", "Delete SimpleName: HTable(416)", "Delete SimpleType: HTable(417)", "Delete SimpleName: config(418)", "Delete SimpleName: matrixPath(419)", "Delete ClassInstanceCreation(420)", "Delete Assignment: =(421)", "Delete ExpressionStatement(422)", "Delete SimpleName: table(423)", "Delete SimpleName: setAutoFlush(424)", "Delete BooleanLiteral: true(425)", "Delete MethodInvocation(426)", "Delete ExpressionStatement(427)", "Delete SimpleName: Put(428)", "Delete SimpleType: Put(429)", "Delete SimpleName: put(430)", "Delete SimpleName: Put(431)", "Delete SimpleType: Put(432)", "Delete SimpleName: Bytes(433)", "Delete SimpleName: toBytes(434)", "Delete QualifiedName: Constants.METADATA(435)", "Delete MethodInvocation(436)", "Delete ClassInstanceCreation(437)", "Delete VariableDeclarationFragment(438)", "Delete VariableDeclarationStatement(439)", "Delete SimpleName: put(440)", "Delete SimpleName: add(441)", "Delete QualifiedName: Constants.ATTRIBUTE(442)", "Delete SimpleName: Bytes(443)", "Delete SimpleName: toBytes(444)", "Delete QualifiedName: Constants.METADATA_TYPE(445)", "Delete MethodInvocation(446)", "Delete SimpleName: Bytes(447)", "Delete SimpleName: toBytes(448)", "Delete ThisExpression(449)", "Delete SimpleName: getClass(450)", "Delete MethodInvocation(451)", "Delete SimpleName: getSimpleName(452)", "Delete MethodInvocation(453)", "Delete MethodInvocation(454)", "Delete MethodInvocation(455)", "Delete ExpressionStatement(456)", "Delete SimpleName: table(457)", "Delete SimpleName: put(458)", "Delete SimpleName: put(459)", "Delete MethodInvocation(460)", "Delete ExpressionStatement(461)", "Delete SimpleName: setReference(462)", "Delete NumberLiteral: 1(463)", "Delete MethodInvocation(464)", "Delete ExpressionStatement(465)", "Delete Block(466)", "Delete IfStatement(467)", "Delete Block(468)", "Delete MethodDeclaration(469)", "Delete Modifier: public(470)", "Delete SimpleName: HTable(471)", "Delete SimpleType: HTable(472)", "Delete SimpleName: getHTable(473)", "Delete ThisExpression(474)", "Delete SimpleName: table(475)", "Delete FieldAccess(476)", "Delete ReturnStatement(477)", "Delete Block(478)", "Delete MethodDeclaration(479)", "Delete TagElement: @inheritDoc(480)", "Delete TextElement:  (481)", "Delete TagElement(482)", "Delete Javadoc(483)", "Delete Modifier: public(484)", "Delete PrimitiveType: int(485)", "Delete SimpleName: getRows(486)", "Delete SimpleName: IOException(487)", "Delete SimpleType: IOException(488)", "Delete SimpleName: Get(489)", "Delete SimpleType: Get(490)", "Delete SimpleName: get(491)", "Delete SimpleName: Get(492)", "Delete SimpleType: Get(493)", "Delete SimpleName: Bytes(494)", "Delete SimpleName: toBytes(495)", "Delete QualifiedName: Constants.METADATA(496)", "Delete MethodInvocation(497)", "Delete ClassInstanceCreation(498)", "Delete VariableDeclarationFragment(499)", "Delete VariableDeclarationStatement(500)", "Delete SimpleName: get(501)", "Delete SimpleName: addFamily(502)", "Delete QualifiedName: Constants.ATTRIBUTE(503)", "Delete MethodInvocation(504)", "Delete ExpressionStatement(505)", "Delete PrimitiveType: byte(506)", "Delete Dimension(507)", "Delete ArrayType: byte[](508)", "Delete SimpleName: result(509)", "Delete SimpleName: table(510)", "Delete SimpleName: get(511)", "Delete SimpleName: get(512)", "Delete MethodInvocation(513)", "Delete SimpleName: getValue(514)", "Delete QualifiedName: Constants.ATTRIBUTE(515)", "Delete SimpleName: Bytes(516)", "Delete SimpleName: toBytes(517)", "Delete StringLiteral: \"rows\"(518)", "Delete MethodInvocation(519)", "Delete MethodInvocation(520)", "Delete VariableDeclarationFragment(521)", "Delete VariableDeclarationStatement(522)", "Delete SimpleName: result(523)", "Delete NullLiteral(524)", "Delete InfixExpression: !=(525)", "Delete ParenthesizedExpression(526)", "Delete SimpleName: Bytes(527)", "Delete SimpleName: toInt(528)", "Delete SimpleName: result(529)", "Delete MethodInvocation(530)", "Delete NumberLiteral: 0(531)", "Delete ConditionalExpression(532)", "Delete ReturnStatement(533)", "Delete Block(534)", "Delete MethodDeclaration(535)", "Delete TagElement: @inheritDoc(536)", "Delete TextElement:  (537)", "Delete TagElement(538)", "Delete Javadoc(539)", "Delete Modifier: public(540)", "Delete PrimitiveType: int(541)", "Delete SimpleName: getColumns(542)", "Delete SimpleName: IOException(543)", "Delete SimpleType: IOException(544)", "Delete SimpleName: Get(545)", "Delete SimpleType: Get(546)", "Delete SimpleName: get(547)", "Delete SimpleName: Get(548)", "Delete SimpleType: Get(549)", "Delete SimpleName: Bytes(550)", "Delete SimpleName: toBytes(551)", "Delete QualifiedName: Constants.METADATA(552)", "Delete MethodInvocation(553)", "Delete ClassInstanceCreation(554)", "Delete VariableDeclarationFragment(555)", "Delete VariableDeclarationStatement(556)", "Delete SimpleName: get(557)", "Delete SimpleName: addFamily(558)", "Delete QualifiedName: Constants.ATTRIBUTE(559)", "Delete MethodInvocation(560)", "Delete ExpressionStatement(561)", "Delete PrimitiveType: byte(562)", "Delete Dimension(563)", "Delete ArrayType: byte[](564)", "Delete SimpleName: result(565)", "Delete SimpleName: table(566)", "Delete SimpleName: get(567)", "Delete SimpleName: get(568)", "Delete MethodInvocation(569)", "Delete SimpleName: getValue(570)", "Delete QualifiedName: Constants.ATTRIBUTE(571)", "Delete SimpleName: Bytes(572)", "Delete SimpleName: toBytes(573)", "Delete StringLiteral: \"columns\"(574)", "Delete MethodInvocation(575)", "Delete MethodInvocation(576)", "Delete VariableDeclarationFragment(577)", "Delete VariableDeclarationStatement(578)", "Delete SimpleName: Bytes(579)", "Delete SimpleName: toInt(580)", "Delete SimpleName: result(581)", "Delete MethodInvocation(582)", "Delete ReturnStatement(583)", "Delete Block(584)", "Delete MethodDeclaration(585)", "Delete TagElement: @inheritDoc(586)", "Delete TextElement:  (587)", "Delete TagElement(588)", "Delete Javadoc(589)", "Delete Modifier: public(590)", "Delete SimpleName: String(591)", "Delete SimpleType: String(592)", "Delete SimpleName: getRowLabel(593)", "Delete PrimitiveType: int(594)", "Delete SimpleName: row(595)", "Delete SingleVariableDeclaration(596)", "Delete SimpleName: IOException(597)", "Delete SimpleType: IOException(598)", "Delete SimpleName: Get(599)", "Delete SimpleType: Get(600)", "Delete SimpleName: get(601)", "Delete SimpleName: Get(602)", "Delete SimpleType: Get(603)", "Delete SimpleName: BytesUtil(604)", "Delete SimpleName: getRowIndex(605)", "Delete SimpleName: row(606)", "Delete MethodInvocation(607)", "Delete ClassInstanceCreation(608)", "Delete VariableDeclarationFragment(609)", "Delete VariableDeclarationStatement(610)", "Delete SimpleName: get(611)", "Delete SimpleName: addFamily(612)", "Delete QualifiedName: Constants.ATTRIBUTE(613)", "Delete MethodInvocation(614)", "Delete ExpressionStatement(615)", "Delete PrimitiveType: byte(616)", "Delete Dimension(617)", "Delete ArrayType: byte[](618)", "Delete SimpleName: result(619)", "Delete SimpleName: table(620)", "Delete SimpleName: get(621)", "Delete SimpleName: get(622)", "Delete MethodInvocation(623)", "Delete SimpleName: getValue(624)", "Delete QualifiedName: Constants.ATTRIBUTE(625)", "Delete SimpleName: Bytes(626)", "Delete SimpleName: toBytes(627)", "Delete StringLiteral: \"string\"(628)", "Delete MethodInvocation(629)", "Delete MethodInvocation(630)", "Delete VariableDeclarationFragment(631)", "Delete VariableDeclarationStatement(632)", "Delete SimpleName: result(633)", "Delete NullLiteral(634)", "Delete InfixExpression: !=(635)", "Delete ParenthesizedExpression(636)", "Delete SimpleName: Bytes(637)", "Delete SimpleName: toString(638)", "Delete SimpleName: result(639)", "Delete MethodInvocation(640)", "Delete NullLiteral(641)", "Delete ConditionalExpression(642)", "Delete ReturnStatement(643)", "Delete Block(644)", "Delete MethodDeclaration(645)", "Delete TagElement: @inheritDoc(646)", "Delete TextElement:  (647)", "Delete TagElement(648)", "Delete Javadoc(649)", "Delete Modifier: public(650)", "Delete PrimitiveType: void(651)", "Delete SimpleName: setColumnLabel(652)", "Delete PrimitiveType: int(653)", "Delete SimpleName: column(654)", "Delete SingleVariableDeclaration(655)", "Delete SimpleName: String(656)", "Delete SimpleType: String(657)", "Delete SimpleName: name(658)", "Delete SingleVariableDeclaration(659)", "Delete SimpleName: IOException(660)", "Delete SimpleType: IOException(661)", "Delete SimpleName: Put(662)", "Delete SimpleType: Put(663)", "Delete SimpleName: put(664)", "Delete SimpleName: Put(665)", "Delete SimpleType: Put(666)", "Delete SimpleName: Bytes(667)", "Delete SimpleName: toBytes(668)", "Delete QualifiedName: Constants.CINDEX(669)", "Delete MethodInvocation(670)", "Delete ClassInstanceCreation(671)", "Delete VariableDeclarationFragment(672)", "Delete VariableDeclarationStatement(673)", "Delete SimpleName: put(674)", "Delete SimpleName: add(675)", "Delete QualifiedName: Constants.ATTRIBUTE(676)", "Delete SimpleName: Bytes(677)", "Delete SimpleName: toBytes(678)", "Delete SimpleName: String(679)", "Delete SimpleName: valueOf(680)", "Delete SimpleName: column(681)", "Delete MethodInvocation(682)", "Delete MethodInvocation(683)", "Delete SimpleName: Bytes(684)", "Delete SimpleName: toBytes(685)", "Delete SimpleName: name(686)", "Delete MethodInvocation(687)", "Delete MethodInvocation(688)", "Delete ExpressionStatement(689)", "Delete SimpleName: table(690)", "Delete SimpleName: put(691)", "Delete SimpleName: put(692)", "Delete MethodInvocation(693)", "Delete ExpressionStatement(694)", "Delete Block(695)", "Delete MethodDeclaration(696)", "Delete TagElement: @inheritDoc(697)", "Delete TextElement:  (698)", "Delete TagElement(699)", "Delete Javadoc(700)", "Delete Modifier: public(701)", "Delete SimpleName: String(702)", "Delete SimpleType: String(703)", "Delete SimpleName: getColumnLabel(704)", "Delete PrimitiveType: int(705)", "Delete SimpleName: column(706)", "Delete SingleVariableDeclaration(707)", "Delete SimpleName: IOException(708)", "Delete SimpleType: IOException(709)", "Delete SimpleName: Get(710)", "Delete SimpleType: Get(711)", "Delete SimpleName: get(712)", "Delete SimpleName: Get(713)", "Delete SimpleType: Get(714)", "Delete SimpleName: Bytes(715)", "Delete SimpleName: toBytes(716)", "Delete QualifiedName: Constants.CINDEX(717)", "Delete MethodInvocation(718)", "Delete ClassInstanceCreation(719)", "Delete VariableDeclarationFragment(720)", "Delete VariableDeclarationStatement(721)", "Delete SimpleName: get(722)", "Delete SimpleName: addFamily(723)", "Delete QualifiedName: Constants.ATTRIBUTE(724)", "Delete MethodInvocation(725)", "Delete ExpressionStatement(726)", "Delete PrimitiveType: byte(727)", "Delete Dimension(728)", "Delete ArrayType: byte[](729)", "Delete SimpleName: result(730)", "Delete SimpleName: table(731)", "Delete SimpleName: get(732)", "Delete SimpleName: get(733)", "Delete MethodInvocation(734)", "Delete SimpleName: getValue(735)", "Delete QualifiedName: Constants.ATTRIBUTE(736)", "Delete SimpleName: Bytes(737)", "Delete SimpleName: toBytes(738)", "Delete SimpleName: String(739)", "Delete SimpleName: valueOf(740)", "Delete SimpleName: column(741)", "Delete MethodInvocation(742)", "Delete MethodInvocation(743)", "Delete MethodInvocation(744)", "Delete VariableDeclarationFragment(745)", "Delete VariableDeclarationStatement(746)", "Delete SimpleName: result(747)", "Delete NullLiteral(748)", "Delete InfixExpression: !=(749)", "Delete ParenthesizedExpression(750)", "Delete SimpleName: Bytes(751)", "Delete SimpleName: toString(752)", "Delete SimpleName: result(753)", "Delete MethodInvocation(754)", "Delete NullLiteral(755)", "Delete ConditionalExpression(756)", "Delete ReturnStatement(757)", "Delete Block(758)", "Delete MethodDeclaration(759)", "Delete TagElement: @inheritDoc(760)", "Delete TextElement:  (761)", "Delete TagElement(762)", "Delete Javadoc(763)", "Delete Modifier: public(764)", "Delete PrimitiveType: void(765)", "Delete SimpleName: setRowLabel(766)", "Delete PrimitiveType: int(767)", "Delete SimpleName: row(768)", "Delete SingleVariableDeclaration(769)", "Delete SimpleName: String(770)", "Delete SimpleType: String(771)", "Delete SimpleName: name(772)", "Delete SingleVariableDeclaration(773)", "Delete SimpleName: IOException(774)", "Delete SimpleType: IOException(775)", "Delete SimpleName: Put(776)", "Delete SimpleType: Put(777)", "Delete SimpleName: put(778)", "Delete SimpleName: Put(779)", "Delete SimpleType: Put(780)", "Delete SimpleName: BytesUtil(781)", "Delete SimpleName: getRowIndex(782)", "Delete SimpleName: row(783)", "Delete MethodInvocation(784)", "Delete ClassInstanceCreation(785)", "Delete VariableDeclarationFragment(786)", "Delete VariableDeclarationStatement(787)", "Delete SimpleName: put(788)", "Delete SimpleName: add(789)", "Delete QualifiedName: Constants.ATTRIBUTE(790)", "Delete SimpleName: Bytes(791)", "Delete SimpleName: toBytes(792)", "Delete StringLiteral: \"string\"(793)", "Delete MethodInvocation(794)", "Delete SimpleName: Bytes(795)", "Delete SimpleName: toBytes(796)", "Delete SimpleName: name(797)", "Delete MethodInvocation(798)", "Delete MethodInvocation(799)", "Delete ExpressionStatement(800)", "Delete SimpleName: table(801)", "Delete SimpleName: put(802)", "Delete SimpleName: put(803)", "Delete MethodInvocation(804)", "Delete ExpressionStatement(805)", "Delete Block(806)", "Delete MethodDeclaration(807)", "Delete TagElement: @inheritDoc(808)", "Delete TextElement:  (809)", "Delete TagElement(810)", "Delete Javadoc(811)", "Delete Modifier: public(812)", "Delete PrimitiveType: void(813)", "Delete SimpleName: setDimension(814)", "Delete PrimitiveType: int(815)", "Delete SimpleName: rows(816)", "Delete SingleVariableDeclaration(817)", "Delete PrimitiveType: int(818)", "Delete SimpleName: columns(819)", "Delete SingleVariableDeclaration(820)", "Delete SimpleName: IOException(821)", "Delete SimpleType: IOException(822)", "Delete SimpleName: Put(823)", "Delete SimpleType: Put(824)", "Delete SimpleName: put(825)", "Delete SimpleName: Put(826)", "Delete SimpleType: Put(827)", "Delete SimpleName: Bytes(828)", "Delete SimpleName: toBytes(829)", "Delete QualifiedName: Constants.METADATA(830)", "Delete MethodInvocation(831)", "Delete ClassInstanceCreation(832)", "Delete VariableDeclarationFragment(833)", "Delete VariableDeclarationStatement(834)", "Delete SimpleName: put(835)", "Delete SimpleName: add(836)", "Delete QualifiedName: Constants.ATTRIBUTE(837)", "Delete SimpleName: Bytes(838)", "Delete SimpleName: toBytes(839)", "Delete StringLiteral: \"rows\"(840)", "Delete MethodInvocation(841)", "Delete SimpleName: Bytes(842)", "Delete SimpleName: toBytes(843)", "Delete SimpleName: rows(844)", "Delete MethodInvocation(845)", "Delete MethodInvocation(846)", "Delete ExpressionStatement(847)", "Delete SimpleName: put(848)", "Delete SimpleName: add(849)", "Delete QualifiedName: Constants.ATTRIBUTE(850)", "Delete SimpleName: Bytes(851)", "Delete SimpleName: toBytes(852)", "Delete StringLiteral: \"columns\"(853)", "Delete MethodInvocation(854)", "Delete SimpleName: Bytes(855)", "Delete SimpleName: toBytes(856)", "Delete SimpleName: columns(857)", "Delete MethodInvocation(858)", "Delete MethodInvocation(859)", "Delete ExpressionStatement(860)", "Delete SimpleName: table(861)", "Delete SimpleName: put(862)", "Delete SimpleName: put(863)", "Delete MethodInvocation(864)", "Delete ExpressionStatement(865)", "Delete Block(866)", "Delete MethodDeclaration(867)", "Delete TagElement: @inheritDoc(868)", "Delete TextElement:  (869)", "Delete TagElement(870)", "Delete Javadoc(871)", "Delete Modifier: public(872)", "Delete PrimitiveType: void(873)", "Delete SimpleName: add(874)", "Delete PrimitiveType: int(875)", "Delete SimpleName: i(876)", "Delete SingleVariableDeclaration(877)", "Delete PrimitiveType: int(878)", "Delete SimpleName: j(879)", "Delete SingleVariableDeclaration(880)", "Delete PrimitiveType: double(881)", "Delete SimpleName: value(882)", "Delete SingleVariableDeclaration(883)", "Delete SimpleName: IOException(884)", "Delete SimpleType: IOException(885)", "Delete SimpleName: Put(886)", "Delete SimpleType: Put(887)", "Delete SimpleName: put(888)", "Delete SimpleName: Put(889)", "Delete SimpleType: Put(890)", "Delete SimpleName: BytesUtil(891)", "Delete SimpleName: getRowIndex(892)", "Delete SimpleName: i(893)", "Delete MethodInvocation(894)", "Delete ClassInstanceCreation(895)", "Delete VariableDeclarationFragment(896)", "Delete VariableDeclarationStatement(897)", "Delete SimpleName: put(898)", "Delete SimpleName: add(899)", "Delete QualifiedName: Constants.COLUMNFAMILY(900)", "Delete SimpleName: Bytes(901)", "Delete SimpleName: toBytes(902)", "Delete SimpleName: String(903)", "Delete SimpleName: valueOf(904)", "Delete SimpleName: j(905)", "Delete MethodInvocation(906)", "Delete MethodInvocation(907)", "Delete SimpleName: Bytes(908)", "Delete SimpleName: toBytes(909)", "Delete SimpleName: value(910)", "Delete ThisExpression(911)", "Delete SimpleName: get(912)", "Delete SimpleName: i(913)", "Delete SimpleName: j(914)", "Delete MethodInvocation(915)", "Delete InfixExpression: +(916)", "Delete MethodInvocation(917)", "Delete MethodInvocation(918)", "Delete ExpressionStatement(919)", "Delete SimpleName: table(920)", "Delete SimpleName: put(921)", "Delete SimpleName: put(922)", "Delete MethodInvocation(923)", "Delete ExpressionStatement(924)", "Delete Block(925)", "Delete MethodDeclaration(926)", "Delete Modifier: public(927)", "Delete Modifier: static(928)", "Delete SimpleName: ScanMapper(929)", "Delete SimpleName: TableMapper(930)", "Delete SimpleType: TableMapper(931)", "Delete SimpleName: ImmutableBytesWritable(932)", "Delete SimpleType: ImmutableBytesWritable(933)", "Delete SimpleName: Put(934)", "Delete SimpleType: Put(935)", "Delete ParameterizedType: TableMapper<ImmutableBytesWritable,Put>(936)", "Delete SimpleName: Configurable(937)", "Delete SimpleType: Configurable(938)", "Delete Modifier: private(939)", "Delete Modifier: static(940)", "Delete SimpleName: Double(941)", "Delete SimpleType: Double(942)", "Delete SimpleName: alpha(943)", "Delete NullLiteral(944)", "Delete VariableDeclarationFragment(945)", "Delete FieldDeclaration(946)", "Delete Modifier: private(947)", "Delete SimpleName: Configuration(948)", "Delete SimpleType: Configuration(949)", "Delete SimpleName: conf(950)", "Delete NullLiteral(951)", "Delete VariableDeclarationFragment(952)", "Delete FieldDeclaration(953)", "Delete Modifier: public(954)", "Delete PrimitiveType: void(955)", "Delete SimpleName: map(956)", "Delete SimpleName: ImmutableBytesWritable(957)", "Delete SimpleType: ImmutableBytesWritable(958)", "Delete SimpleName: key(959)", "Delete SingleVariableDeclaration(960)", "Delete SimpleName: Result(961)", "Delete SimpleType: Result(962)", "Delete SimpleName: value(963)", "Delete SingleVariableDeclaration(964)", "Delete SimpleName: Context(965)", "Delete SimpleType: Context(966)", "Delete SimpleName: context(967)", "Delete SingleVariableDeclaration(968)", "Delete SimpleName: IOException(969)", "Delete SimpleType: IOException(970)", "Delete SimpleName: InterruptedException(971)", "Delete SimpleType: InterruptedException(972)", "Delete SimpleName: Put(973)", "Delete SimpleType: Put(974)", "Delete SimpleName: put(975)", "Delete SimpleName: Put(976)", "Delete SimpleType: Put(977)", "Delete SimpleName: key(978)", "Delete SimpleName: get(979)", "Delete MethodInvocation(980)", "Delete ClassInstanceCreation(981)", "Delete VariableDeclarationFragment(982)", "Delete VariableDeclarationStatement(983)", "Delete SimpleName: NavigableMap(984)", "Delete SimpleType: NavigableMap(985)", "Delete PrimitiveType: byte(986)", "Delete Dimension(987)", "Delete ArrayType: byte[](988)", "Delete SimpleName: NavigableMap(989)", "Delete SimpleType: NavigableMap(990)", "Delete PrimitiveType: byte(991)", "Delete Dimension(992)", "Delete ArrayType: byte[](993)", "Delete PrimitiveType: byte(994)", "Delete Dimension(995)", "Delete ArrayType: byte[](996)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(997)", "Delete ParameterizedType: NavigableMap<byte[],NavigableMap<byte[],byte[]>>(998)", "Delete SimpleName: map(999)", "Delete SimpleName: value(1000)", "Delete SimpleName: getNoVersionMap(1001)", "Delete MethodInvocation(1002)", "Delete VariableDeclarationFragment(1003)", "Delete VariableDeclarationStatement(1004)", "Delete QualifiedName: Map.Entry(1005)", "Delete SimpleType: Map.Entry(1006)", "Delete PrimitiveType: byte(1007)", "Delete Dimension(1008)", "Delete ArrayType: byte[](1009)", "Delete SimpleName: NavigableMap(1010)", "Delete SimpleType: NavigableMap(1011)", "Delete PrimitiveType: byte(1012)", "Delete Dimension(1013)", "Delete ArrayType: byte[](1014)", "Delete PrimitiveType: byte(1015)", "Delete Dimension(1016)", "Delete ArrayType: byte[](1017)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(1018)", "Delete ParameterizedType: Map.Entry<byte[],NavigableMap<byte[],byte[]>>(1019)", "Delete SimpleName: a(1020)", "Delete SingleVariableDeclaration(1021)", "Delete SimpleName: map(1022)", "Delete SimpleName: entrySet(1023)", "Delete MethodInvocation(1024)", "Delete PrimitiveType: byte(1025)", "Delete Dimension(1026)", "Delete ArrayType: byte[](1027)", "Delete SimpleName: family(1028)", "Delete SimpleName: a(1029)", "Delete SimpleName: getKey(1030)", "Delete MethodInvocation(1031)", "Delete VariableDeclarationFragment(1032)", "Delete VariableDeclarationStatement(1033)", "Delete QualifiedName: Map.Entry(1034)", "Delete SimpleType: Map.Entry(1035)", "Delete PrimitiveType: byte(1036)", "Delete Dimension(1037)", "Delete ArrayType: byte[](1038)", "Delete PrimitiveType: byte(1039)", "Delete Dimension(1040)", "Delete ArrayType: byte[](1041)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(1042)", "Delete SimpleName: b(1043)", "Delete SingleVariableDeclaration(1044)", "Delete SimpleName: a(1045)", "Delete SimpleName: getValue(1046)", "Delete MethodInvocation(1047)", "Delete SimpleName: entrySet(1048)", "Delete MethodInvocation(1049)", "Delete PrimitiveType: byte(1050)", "Delete Dimension(1051)", "Delete ArrayType: byte[](1052)", "Delete SimpleName: qualifier(1053)", "Delete SimpleName: b(1054)", "Delete SimpleName: getKey(1055)", "Delete MethodInvocation(1056)", "Delete VariableDeclarationFragment(1057)", "Delete VariableDeclarationStatement(1058)", "Delete PrimitiveType: byte(1059)", "Delete Dimension(1060)", "Delete ArrayType: byte[](1061)", "Delete SimpleName: val(1062)", "Delete SimpleName: b(1063)", "Delete SimpleName: getValue(1064)", "Delete MethodInvocation(1065)", "Delete VariableDeclarationFragment(1066)", "Delete VariableDeclarationStatement(1067)", "Delete SimpleName: alpha(1068)", "Delete SimpleName: equals(1069)", "Delete SimpleName: Double(1070)", "Delete SimpleType: Double(1071)", "Delete NumberLiteral: 1(1072)", "Delete ClassInstanceCreation(1073)", "Delete MethodInvocation(1074)", "Delete SimpleName: put(1075)", "Delete SimpleName: add(1076)", "Delete SimpleName: family(1077)", "Delete SimpleName: qualifier(1078)", "Delete SimpleName: val(1079)", "Delete MethodInvocation(1080)", "Delete ExpressionStatement(1081)", "Delete Block(1082)", "Delete SimpleName: Bytes(1083)", "Delete SimpleName: toString(1084)", "Delete SimpleName: family(1085)", "Delete MethodInvocation(1086)", "Delete SimpleName: equals(1087)", "Delete SimpleName: Bytes(1088)", "Delete SimpleName: toString(1089)", "Delete QualifiedName: Constants.COLUMNFAMILY(1090)", "Delete MethodInvocation(1091)", "Delete MethodInvocation(1092)", "Delete PrimitiveType: double(1093)", "Delete SimpleName: currVal(1094)", "Delete SimpleName: Bytes(1095)", "Delete SimpleName: toDouble(1096)", "Delete SimpleName: val(1097)", "Delete MethodInvocation(1098)", "Delete VariableDeclarationFragment(1099)", "Delete VariableDeclarationStatement(1100)", "Delete SimpleName: put(1101)", "Delete SimpleName: add(1102)", "Delete SimpleName: family(1103)", "Delete SimpleName: qualifier(1104)", "Delete SimpleName: Bytes(1105)", "Delete SimpleName: toBytes(1106)", "Delete SimpleName: currVal(1107)", "Delete SimpleName: alpha(1108)", "Delete InfixExpression: *(1109)", "Delete MethodInvocation(1110)", "Delete MethodInvocation(1111)", "Delete ExpressionStatement(1112)", "Delete Block(1113)", "Delete SimpleName: put(1114)", "Delete SimpleName: add(1115)", "Delete SimpleName: family(1116)", "Delete SimpleName: qualifier(1117)", "Delete SimpleName: val(1118)", "Delete MethodInvocation(1119)", "Delete ExpressionStatement(1120)", "Delete Block(1121)", "Delete IfStatement(1122)", "Delete Block(1123)", "Delete IfStatement(1124)", "Delete Block(1125)", "Delete EnhancedForStatement(1126)", "Delete Block(1127)", "Delete EnhancedForStatement(1128)", "Delete SimpleName: context(1129)", "Delete SimpleName: write(1130)", "Delete SimpleName: key(1131)", "Delete SimpleName: put(1132)", "Delete MethodInvocation(1133)", "Delete ExpressionStatement(1134)", "Delete Block(1135)", "Delete MethodDeclaration(1136)", "Delete SimpleName: Override(1137)", "Delete MarkerAnnotation(1138)", "Delete Modifier: public(1139)", "Delete SimpleName: Configuration(1140)", "Delete SimpleType: Configuration(1141)", "Delete SimpleName: getConf(1142)", "Delete SimpleName: conf(1143)", "Delete ReturnStatement(1144)", "Delete Block(1145)", "Delete MethodDeclaration(1146)", "Delete SimpleName: Override(1147)", "Delete MarkerAnnotation(1148)", "Delete Modifier: public(1149)", "Delete PrimitiveType: void(1150)", "Delete SimpleName: setConf(1151)", "Delete SimpleName: Configuration(1152)", "Delete SimpleType: Configuration(1153)", "Delete SimpleName: conf(1154)", "Delete SingleVariableDeclaration(1155)", "Delete ThisExpression(1156)", "Delete SimpleName: conf(1157)", "Delete FieldAccess(1158)", "Delete SimpleName: conf(1159)", "Delete Assignment: =(1160)", "Delete ExpressionStatement(1161)", "Delete SimpleName: Float(1162)", "Delete SimpleType: Float(1163)", "Delete SimpleName: f(1164)", "Delete SimpleName: conf(1165)", "Delete SimpleName: getFloat(1166)", "Delete StringLiteral: \"set.alpha\"(1167)", "Delete NumberLiteral: 1(1168)", "Delete MethodInvocation(1169)", "Delete VariableDeclarationFragment(1170)", "Delete VariableDeclarationStatement(1171)", "Delete SimpleName: alpha(1172)", "Delete SimpleName: f(1173)", "Delete SimpleName: doubleValue(1174)", "Delete MethodInvocation(1175)", "Delete Assignment: =(1176)", "Delete ExpressionStatement(1177)", "Delete Block(1178)", "Delete MethodDeclaration(1179)", "Delete TypeDeclaration: class(1180)", "Delete TagElement: @inheritDoc(1181)", "Delete TextElement:  (1182)", "Delete TagElement(1183)", "Delete Javadoc(1184)", "Delete Modifier: public(1185)", "Delete SimpleName: Matrix(1186)", "Delete SimpleType: Matrix(1187)", "Delete SimpleName: set(1188)", "Delete SimpleName: Matrix(1189)", "Delete SimpleType: Matrix(1190)", "Delete SimpleName: B(1191)", "Delete SingleVariableDeclaration(1192)", "Delete SimpleName: IOException(1193)", "Delete SimpleType: IOException(1194)", "Delete SimpleName: Job(1195)", "Delete SimpleType: Job(1196)", "Delete SimpleName: job(1197)", "Delete SimpleName: Job(1198)", "Delete SimpleType: Job(1199)", "Delete SimpleName: config(1200)", "Delete StringLiteral: \"set MR job : \"(1201)", "Delete ThisExpression(1202)", "Delete SimpleName: getPath(1203)", "Delete MethodInvocation(1204)", "Delete InfixExpression: +(1205)", "Delete ClassInstanceCreation(1206)", "Delete VariableDeclarationFragment(1207)", "Delete VariableDeclarationStatement(1208)", "Delete SimpleName: Scan(1209)", "Delete SimpleType: Scan(1210)", "Delete SimpleName: scan(1211)", "Delete SimpleName: Scan(1212)", "Delete SimpleType: Scan(1213)", "Delete ClassInstanceCreation(1214)", "Delete VariableDeclarationFragment(1215)", "Delete VariableDeclarationStatement(1216)", "Delete SimpleName: scan(1217)", "Delete SimpleName: addFamily(1218)", "Delete QualifiedName: Constants.COLUMNFAMILY(1219)", "Delete MethodInvocation(1220)", "Delete ExpressionStatement(1221)", "Delete SimpleName: scan(1222)", "Delete SimpleName: addFamily(1223)", "Delete QualifiedName: Constants.ATTRIBUTE(1224)", "Delete MethodInvocation(1225)", "Delete ExpressionStatement(1226)", "Delete SimpleName: scan(1227)", "Delete SimpleName: addFamily(1228)", "Delete SimpleName: Bytes(1229)", "Delete SimpleName: toBytes(1230)", "Delete QualifiedName: Constants.ALIASEFAMILY(1231)", "Delete MethodInvocation(1232)", "Delete MethodInvocation(1233)", "Delete ExpressionStatement(1234)", "Delete SimpleName: scan(1235)", "Delete SimpleName: addFamily(1236)", "Delete SimpleName: Bytes(1237)", "Delete SimpleName: toBytes(1238)", "Delete QualifiedName: Constants.BLOCK(1239)", "Delete MethodInvocation(1240)", "Delete MethodInvocation(1241)", "Delete ExpressionStatement(1242)", "Delete SimpleName: scan(1243)", "Delete SimpleName: addFamily(1244)", "Delete SimpleName: Bytes(1245)", "Delete SimpleName: toBytes(1246)", "Delete SimpleName: EI(1247)", "Delete MethodInvocation(1248)", "Delete MethodInvocation(1249)", "Delete ExpressionStatement(1250)", "Delete SimpleName: scan(1251)", "Delete SimpleName: addFamily(1252)", "Delete SimpleName: Bytes(1253)", "Delete SimpleName: toBytes(1254)", "Delete SimpleName: EICOL(1255)", "Delete MethodInvocation(1256)", "Delete MethodInvocation(1257)", "Delete ExpressionStatement(1258)", "Delete SimpleName: scan(1259)", "Delete SimpleName: addFamily(1260)", "Delete SimpleName: Bytes(1261)", "Delete SimpleName: toBytes(1262)", "Delete SimpleName: EIVEC(1263)", "Delete MethodInvocation(1264)", "Delete MethodInvocation(1265)", "Delete ExpressionStatement(1266)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(1267)", "Delete SimpleName: initTableMapperJob(1268)", "Delete SimpleName: B(1269)", "Delete SimpleName: getPath(1270)", "Delete MethodInvocation(1271)", "Delete SimpleName: scan(1272)", "Delete SimpleName: ScanMapper(1273)", "Delete SimpleType: ScanMapper(1274)", "Delete TypeLiteral(1275)", "Delete SimpleName: ImmutableBytesWritable(1276)", "Delete SimpleType: ImmutableBytesWritable(1277)", "Delete TypeLiteral(1278)", "Delete SimpleName: Put(1279)", "Delete SimpleType: Put(1280)", "Delete TypeLiteral(1281)", "Delete SimpleName: job(1282)", "Delete MethodInvocation(1283)", "Delete ExpressionStatement(1284)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(1285)", "Delete SimpleName: initTableReducerJob(1286)", "Delete ThisExpression(1287)", "Delete SimpleName: getPath(1288)", "Delete MethodInvocation(1289)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(1290)", "Delete SimpleType: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(1291)", "Delete TypeLiteral(1292)", "Delete SimpleName: job(1293)", "Delete MethodInvocation(1294)", "Delete ExpressionStatement(1295)", "Delete SimpleName: job(1296)", "Delete SimpleName: waitForCompletion(1297)", "Delete BooleanLiteral: true(1298)", "Delete MethodInvocation(1299)", "Delete ExpressionStatement(1300)", "Delete Block(1301)", "Delete SimpleName: InterruptedException(1302)", "Delete SimpleType: InterruptedException(1303)", "Delete SimpleName: e(1304)", "Delete SingleVariableDeclaration(1305)", "Delete SimpleName: e(1306)", "Delete SimpleName: printStackTrace(1307)", "Delete MethodInvocation(1308)", "Delete ExpressionStatement(1309)", "Delete Block(1310)", "Delete CatchClause(1311)", "Delete SimpleName: ClassNotFoundException(1312)", "Delete SimpleType: ClassNotFoundException(1313)", "Delete SimpleName: e(1314)", "Delete SingleVariableDeclaration(1315)", "Delete SimpleName: e(1316)", "Delete SimpleName: printStackTrace(1317)", "Delete MethodInvocation(1318)", "Delete ExpressionStatement(1319)", "Delete Block(1320)", "Delete CatchClause(1321)", "Delete TryStatement(1322)", "Delete ThisExpression(1323)", "Delete ReturnStatement(1324)", "Delete Block(1325)", "Delete MethodDeclaration(1326)", "Delete TagElement: @inheritDoc(1327)", "Delete TextElement:  (1328)", "Delete TagElement(1329)", "Delete Javadoc(1330)", "Delete Modifier: public(1331)", "Delete SimpleName: Matrix(1332)", "Delete SimpleType: Matrix(1333)", "Delete SimpleName: set(1334)", "Delete PrimitiveType: double(1335)", "Delete SimpleName: alpha(1336)", "Delete SingleVariableDeclaration(1337)", "Delete SimpleName: Matrix(1338)", "Delete SimpleType: Matrix(1339)", "Delete SimpleName: B(1340)", "Delete SingleVariableDeclaration(1341)", "Delete SimpleName: IOException(1342)", "Delete SimpleType: IOException(1343)", "Delete SimpleName: Job(1344)", "Delete SimpleType: Job(1345)", "Delete SimpleName: job(1346)", "Delete SimpleName: Job(1347)", "Delete SimpleType: Job(1348)", "Delete SimpleName: config(1349)", "Delete StringLiteral: \"set MR job : \"(1350)", "Delete ThisExpression(1351)", "Delete SimpleName: getPath(1352)", "Delete MethodInvocation(1353)", "Delete InfixExpression: +(1354)", "Delete ClassInstanceCreation(1355)", "Delete VariableDeclarationFragment(1356)", "Delete VariableDeclarationStatement(1357)", "Delete SimpleName: Scan(1358)", "Delete SimpleType: Scan(1359)", "Delete SimpleName: scan(1360)", "Delete SimpleName: Scan(1361)", "Delete SimpleType: Scan(1362)", "Delete ClassInstanceCreation(1363)", "Delete VariableDeclarationFragment(1364)", "Delete VariableDeclarationStatement(1365)", "Delete SimpleName: scan(1366)", "Delete SimpleName: addFamily(1367)", "Delete QualifiedName: Constants.COLUMNFAMILY(1368)", "Delete MethodInvocation(1369)", "Delete ExpressionStatement(1370)", "Delete SimpleName: scan(1371)", "Delete SimpleName: addFamily(1372)", "Delete QualifiedName: Constants.ATTRIBUTE(1373)", "Delete MethodInvocation(1374)", "Delete ExpressionStatement(1375)", "Delete SimpleName: scan(1376)", "Delete SimpleName: addFamily(1377)", "Delete SimpleName: Bytes(1378)", "Delete SimpleName: toBytes(1379)", "Delete QualifiedName: Constants.ALIASEFAMILY(1380)", "Delete MethodInvocation(1381)", "Delete MethodInvocation(1382)", "Delete ExpressionStatement(1383)", "Delete SimpleName: scan(1384)", "Delete SimpleName: addFamily(1385)", "Delete SimpleName: Bytes(1386)", "Delete SimpleName: toBytes(1387)", "Delete QualifiedName: Constants.BLOCK(1388)", "Delete MethodInvocation(1389)", "Delete MethodInvocation(1390)", "Delete ExpressionStatement(1391)", "Delete SimpleName: scan(1392)", "Delete SimpleName: addFamily(1393)", "Delete SimpleName: Bytes(1394)", "Delete SimpleName: toBytes(1395)", "Delete SimpleName: EI(1396)", "Delete MethodInvocation(1397)", "Delete MethodInvocation(1398)", "Delete ExpressionStatement(1399)", "Delete SimpleName: scan(1400)", "Delete SimpleName: addFamily(1401)", "Delete SimpleName: Bytes(1402)", "Delete SimpleName: toBytes(1403)", "Delete SimpleName: EICOL(1404)", "Delete MethodInvocation(1405)", "Delete MethodInvocation(1406)", "Delete ExpressionStatement(1407)", "Delete SimpleName: scan(1408)", "Delete SimpleName: addFamily(1409)", "Delete SimpleName: Bytes(1410)", "Delete SimpleName: toBytes(1411)", "Delete SimpleName: EIVEC(1412)", "Delete MethodInvocation(1413)", "Delete MethodInvocation(1414)", "Delete ExpressionStatement(1415)", "Delete SimpleName: Float(1416)", "Delete SimpleType: Float(1417)", "Delete SimpleName: f(1418)", "Delete SimpleName: Float(1419)", "Delete SimpleType: Float(1420)", "Delete SimpleName: alpha(1421)", "Delete ClassInstanceCreation(1422)", "Delete VariableDeclarationFragment(1423)", "Delete VariableDeclarationStatement(1424)", "Delete SimpleName: job(1425)", "Delete SimpleName: getConfiguration(1426)", "Delete MethodInvocation(1427)", "Delete SimpleName: setFloat(1428)", "Delete StringLiteral: \"set.alpha\"(1429)", "Delete SimpleName: f(1430)", "Delete MethodInvocation(1431)", "Delete ExpressionStatement(1432)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(1433)", "Delete SimpleName: initTableMapperJob(1434)", "Delete SimpleName: B(1435)", "Delete SimpleName: getPath(1436)", "Delete MethodInvocation(1437)", "Delete SimpleName: scan(1438)", "Delete SimpleName: ScanMapper(1439)", "Delete SimpleType: ScanMapper(1440)", "Delete TypeLiteral(1441)", "Delete SimpleName: ImmutableBytesWritable(1442)", "Delete SimpleType: ImmutableBytesWritable(1443)", "Delete TypeLiteral(1444)", "Delete SimpleName: Put(1445)", "Delete SimpleType: Put(1446)", "Delete TypeLiteral(1447)", "Delete SimpleName: job(1448)", "Delete MethodInvocation(1449)", "Delete ExpressionStatement(1450)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(1451)", "Delete SimpleName: initTableReducerJob(1452)", "Delete ThisExpression(1453)", "Delete SimpleName: getPath(1454)", "Delete MethodInvocation(1455)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(1456)", "Delete SimpleType: org.apache.hadoop.hbase.mapreduce.IdentityTableReducer(1457)", "Delete TypeLiteral(1458)", "Delete SimpleName: job(1459)", "Delete MethodInvocation(1460)", "Delete ExpressionStatement(1461)", "Delete SimpleName: job(1462)", "Delete SimpleName: waitForCompletion(1463)", "Delete BooleanLiteral: true(1464)", "Delete MethodInvocation(1465)", "Delete ExpressionStatement(1466)", "Delete Block(1467)", "Delete SimpleName: InterruptedException(1468)", "Delete SimpleType: InterruptedException(1469)", "Delete SimpleName: e(1470)", "Delete SingleVariableDeclaration(1471)", "Delete SimpleName: e(1472)", "Delete SimpleName: printStackTrace(1473)", "Delete MethodInvocation(1474)", "Delete ExpressionStatement(1475)", "Delete Block(1476)", "Delete CatchClause(1477)", "Delete SimpleName: ClassNotFoundException(1478)", "Delete SimpleType: ClassNotFoundException(1479)", "Delete SimpleName: e(1480)", "Delete SingleVariableDeclaration(1481)", "Delete SimpleName: e(1482)", "Delete SimpleName: printStackTrace(1483)", "Delete MethodInvocation(1484)", "Delete ExpressionStatement(1485)", "Delete Block(1486)", "Delete CatchClause(1487)", "Delete TryStatement(1488)", "Delete ThisExpression(1489)", "Delete ReturnStatement(1490)", "Delete Block(1491)", "Delete MethodDeclaration(1492)", "Delete TagElement: @inheritDoc(1493)", "Delete TextElement:  (1494)", "Delete TagElement(1495)", "Delete Javadoc(1496)", "Delete Modifier: public(1497)", "Delete SimpleName: String(1498)", "Delete SimpleType: String(1499)", "Delete SimpleName: getPath(1500)", "Delete SimpleName: matrixPath(1501)", "Delete ReturnStatement(1502)", "Delete Block(1503)", "Delete MethodDeclaration(1504)", "Delete Modifier: protected(1505)", "Delete PrimitiveType: void(1506)", "Delete SimpleName: setReference(1507)", "Delete PrimitiveType: int(1508)", "Delete SimpleName: reference(1509)", "Delete SingleVariableDeclaration(1510)", "Delete SimpleName: IOException(1511)", "Delete SimpleType: IOException(1512)", "Delete SimpleName: Put(1513)", "Delete SimpleType: Put(1514)", "Delete SimpleName: put(1515)", "Delete SimpleName: Put(1516)", "Delete SimpleType: Put(1517)", "Delete SimpleName: Bytes(1518)", "Delete SimpleName: toBytes(1519)", "Delete QualifiedName: Constants.METADATA(1520)", "Delete MethodInvocation(1521)", "Delete ClassInstanceCreation(1522)", "Delete VariableDeclarationFragment(1523)", "Delete VariableDeclarationStatement(1524)", "Delete SimpleName: put(1525)", "Delete SimpleName: add(1526)", "Delete QualifiedName: Constants.ATTRIBUTE(1527)", "Delete SimpleName: Bytes(1528)", "Delete SimpleName: toBytes(1529)", "Delete QualifiedName: Constants.METADATA_REFERENCE(1530)", "Delete MethodInvocation(1531)", "Delete SimpleName: Bytes(1532)", "Delete SimpleName: toBytes(1533)", "Delete SimpleName: reference(1534)", "Delete MethodInvocation(1535)", "Delete MethodInvocation(1536)", "Delete ExpressionStatement(1537)", "Delete SimpleName: table(1538)", "Delete SimpleName: put(1539)", "Delete SimpleName: put(1540)", "Delete MethodInvocation(1541)", "Delete ExpressionStatement(1542)", "Delete Block(1543)", "Delete MethodDeclaration(1544)", "Delete Modifier: protected(1545)", "Delete PrimitiveType: int(1546)", "Delete SimpleName: incrementAndGetRef(1547)", "Delete SimpleName: IOException(1548)", "Delete SimpleType: IOException(1549)", "Delete PrimitiveType: int(1550)", "Delete SimpleName: reference(1551)", "Delete NumberLiteral: 1(1552)", "Delete VariableDeclarationFragment(1553)", "Delete VariableDeclarationStatement(1554)", "Delete SimpleName: Get(1555)", "Delete SimpleType: Get(1556)", "Delete SimpleName: get(1557)", "Delete SimpleName: Get(1558)", "Delete SimpleType: Get(1559)", "Delete SimpleName: Bytes(1560)", "Delete SimpleName: toBytes(1561)", "Delete QualifiedName: Constants.METADATA(1562)", "Delete MethodInvocation(1563)", "Delete ClassInstanceCreation(1564)", "Delete VariableDeclarationFragment(1565)", "Delete VariableDeclarationStatement(1566)", "Delete SimpleName: get(1567)", "Delete SimpleName: addFamily(1568)", "Delete QualifiedName: Constants.ATTRIBUTE(1569)", "Delete MethodInvocation(1570)", "Delete ExpressionStatement(1571)", "Delete PrimitiveType: byte(1572)", "Delete Dimension(1573)", "Delete ArrayType: byte[](1574)", "Delete SimpleName: result(1575)", "Delete SimpleName: table(1576)", "Delete SimpleName: get(1577)", "Delete SimpleName: get(1578)", "Delete MethodInvocation(1579)", "Delete SimpleName: getValue(1580)", "Delete QualifiedName: Constants.ATTRIBUTE(1581)", "Delete SimpleName: Bytes(1582)", "Delete SimpleName: toBytes(1583)", "Delete QualifiedName: Constants.METADATA_REFERENCE(1584)", "Delete MethodInvocation(1585)", "Delete MethodInvocation(1586)", "Delete VariableDeclarationFragment(1587)", "Delete VariableDeclarationStatement(1588)", "Delete SimpleName: result(1589)", "Delete NullLiteral(1590)", "Delete InfixExpression: !=(1591)", "Delete SimpleName: reference(1592)", "Delete SimpleName: Bytes(1593)", "Delete SimpleName: toInt(1594)", "Delete SimpleName: result(1595)", "Delete MethodInvocation(1596)", "Delete Assignment: =(1597)", "Delete ExpressionStatement(1598)", "Delete SimpleName: reference(1599)", "Delete PostfixExpression: ++(1600)", "Delete ExpressionStatement(1601)", "Delete Block(1602)", "Delete IfStatement(1603)", "Delete SimpleName: setReference(1604)", "Delete SimpleName: reference(1605)", "Delete MethodInvocation(1606)", "Delete ExpressionStatement(1607)", "Delete SimpleName: reference(1608)", "Delete ReturnStatement(1609)", "Delete Block(1610)", "Delete MethodDeclaration(1611)", "Delete Modifier: protected(1612)", "Delete PrimitiveType: int(1613)", "Delete SimpleName: decrementAndGetRef(1614)", "Delete SimpleName: IOException(1615)", "Delete SimpleType: IOException(1616)", "Delete PrimitiveType: int(1617)", "Delete SimpleName: reference(1618)", "Delete NumberLiteral: 0(1619)", "Delete VariableDeclarationFragment(1620)", "Delete VariableDeclarationStatement(1621)", "Delete SimpleName: Get(1622)", "Delete SimpleType: Get(1623)", "Delete SimpleName: get(1624)", "Delete SimpleName: Get(1625)", "Delete SimpleType: Get(1626)", "Delete SimpleName: Bytes(1627)", "Delete SimpleName: toBytes(1628)", "Delete QualifiedName: Constants.METADATA(1629)", "Delete MethodInvocation(1630)", "Delete ClassInstanceCreation(1631)", "Delete VariableDeclarationFragment(1632)", "Delete VariableDeclarationStatement(1633)", "Delete SimpleName: get(1634)", "Delete SimpleName: addFamily(1635)", "Delete QualifiedName: Constants.ATTRIBUTE(1636)", "Delete MethodInvocation(1637)", "Delete ExpressionStatement(1638)", "Delete PrimitiveType: byte(1639)", "Delete Dimension(1640)", "Delete ArrayType: byte[](1641)", "Delete SimpleName: result(1642)", "Delete SimpleName: table(1643)", "Delete SimpleName: get(1644)", "Delete SimpleName: get(1645)", "Delete MethodInvocation(1646)", "Delete SimpleName: getValue(1647)", "Delete QualifiedName: Constants.ATTRIBUTE(1648)", "Delete SimpleName: Bytes(1649)", "Delete SimpleName: toBytes(1650)", "Delete QualifiedName: Constants.METADATA_REFERENCE(1651)", "Delete MethodInvocation(1652)", "Delete MethodInvocation(1653)", "Delete VariableDeclarationFragment(1654)", "Delete VariableDeclarationStatement(1655)", "Delete SimpleName: result(1656)", "Delete NullLiteral(1657)", "Delete InfixExpression: !=(1658)", "Delete SimpleName: reference(1659)", "Delete SimpleName: Bytes(1660)", "Delete SimpleName: toInt(1661)", "Delete SimpleName: result(1662)", "Delete MethodInvocation(1663)", "Delete Assignment: =(1664)", "Delete ExpressionStatement(1665)", "Delete SimpleName: reference(1666)", "Delete NumberLiteral: 0(1667)", "Delete InfixExpression: >(1668)", "Delete SimpleName: reference(1669)", "Delete PostfixExpression: --(1670)", "Delete ExpressionStatement(1671)", "Delete IfStatement(1672)", "Delete Block(1673)", "Delete IfStatement(1674)", "Delete SimpleName: setReference(1675)", "Delete SimpleName: reference(1676)", "Delete MethodInvocation(1677)", "Delete ExpressionStatement(1678)", "Delete SimpleName: reference(1679)", "Delete ReturnStatement(1680)", "Delete Block(1681)", "Delete MethodDeclaration(1682)", "Delete Modifier: protected(1683)", "Delete PrimitiveType: boolean(1684)", "Delete SimpleName: hasAliaseName(1685)", "Delete SimpleName: IOException(1686)", "Delete SimpleType: IOException(1687)", "Delete SimpleName: Get(1688)", "Delete SimpleType: Get(1689)", "Delete SimpleName: get(1690)", "Delete SimpleName: Get(1691)", "Delete SimpleType: Get(1692)", "Delete SimpleName: Bytes(1693)", "Delete SimpleName: toBytes(1694)", "Delete QualifiedName: Constants.METADATA(1695)", "Delete MethodInvocation(1696)", "Delete ClassInstanceCreation(1697)", "Delete VariableDeclarationFragment(1698)", "Delete VariableDeclarationStatement(1699)", "Delete SimpleName: get(1700)", "Delete SimpleName: addFamily(1701)", "Delete SimpleName: Bytes(1702)", "Delete SimpleName: toBytes(1703)", "Delete QualifiedName: Constants.ALIASEFAMILY(1704)", "Delete MethodInvocation(1705)", "Delete MethodInvocation(1706)", "Delete ExpressionStatement(1707)", "Delete PrimitiveType: byte(1708)", "Delete Dimension(1709)", "Delete ArrayType: byte[](1710)", "Delete SimpleName: result(1711)", "Delete SimpleName: table(1712)", "Delete SimpleName: get(1713)", "Delete SimpleName: get(1714)", "Delete MethodInvocation(1715)", "Delete SimpleName: getValue(1716)", "Delete SimpleName: Bytes(1717)", "Delete SimpleName: toBytes(1718)", "Delete QualifiedName: Constants.ALIASEFAMILY(1719)", "Delete MethodInvocation(1720)", "Delete SimpleName: Bytes(1721)", "Delete SimpleName: toBytes(1722)", "Delete StringLiteral: \"name\"(1723)", "Delete MethodInvocation(1724)", "Delete MethodInvocation(1725)", "Delete VariableDeclarationFragment(1726)", "Delete VariableDeclarationStatement(1727)", "Delete SimpleName: result(1728)", "Delete NullLiteral(1729)", "Delete InfixExpression: !=(1730)", "Delete ParenthesizedExpression(1731)", "Delete BooleanLiteral: true(1732)", "Delete BooleanLiteral: false(1733)", "Delete ConditionalExpression(1734)", "Delete ReturnStatement(1735)", "Delete Block(1736)", "Delete MethodDeclaration(1737)", "Delete Modifier: public(1738)", "Delete PrimitiveType: void(1739)", "Delete SimpleName: close(1740)", "Delete SimpleName: IOException(1741)", "Delete SimpleType: IOException(1742)", "Delete SimpleName: closed(1743)", "Delete ReturnStatement(1744)", "Delete IfStatement(1745)", "Delete PrimitiveType: int(1746)", "Delete SimpleName: reference(1747)", "Delete SimpleName: decrementAndGetRef(1748)", "Delete MethodInvocation(1749)", "Delete VariableDeclarationFragment(1750)", "Delete VariableDeclarationStatement(1751)", "Delete SimpleName: reference(1752)", "Delete NumberLiteral: 0(1753)", "Delete InfixExpression: <=(1754)", "Delete SimpleName: hasAliaseName(1755)", "Delete MethodInvocation(1756)", "Delete PrefixExpression: !(1757)", "Delete SimpleName: admin(1758)", "Delete SimpleName: isTableEnabled(1759)", "Delete SimpleName: matrixPath(1760)", "Delete MethodInvocation(1761)", "Delete SimpleName: admin(1762)", "Delete SimpleName: isTableEnabled(1763)", "Delete SimpleName: matrixPath(1764)", "Delete MethodInvocation(1765)", "Delete SimpleName: admin(1766)", "Delete SimpleName: disableTable(1767)", "Delete SimpleName: matrixPath(1768)", "Delete MethodInvocation(1769)", "Delete ExpressionStatement(1770)", "Delete Block(1771)", "Delete SimpleName: RegionException(1772)", "Delete SimpleType: RegionException(1773)", "Delete SimpleName: e(1774)", "Delete SingleVariableDeclaration(1775)", "Delete SimpleName: LOG(1776)", "Delete SimpleName: warn(1777)", "Delete SimpleName: e(1778)", "Delete MethodInvocation(1779)", "Delete ExpressionStatement(1780)", "Delete Block(1781)", "Delete CatchClause(1782)", "Delete TryStatement(1783)", "Delete Block(1784)", "Delete WhileStatement(1785)", "Delete SimpleName: admin(1786)", "Delete SimpleName: deleteTable(1787)", "Delete SimpleName: matrixPath(1788)", "Delete MethodInvocation(1789)", "Delete ExpressionStatement(1790)", "Delete Block(1791)", "Delete IfStatement(1792)", "Delete Block(1793)", "Delete IfStatement(1794)", "Delete Block(1795)", "Delete IfStatement(1796)", "Delete SimpleName: closed(1797)", "Delete BooleanLiteral: true(1798)", "Delete Assignment: =(1799)", "Delete ExpressionStatement(1800)", "Delete Block(1801)", "Delete MethodDeclaration(1802)", "Delete Modifier: public(1803)", "Delete PrimitiveType: boolean(1804)", "Delete SimpleName: checkAllJobs(1805)", "Delete SimpleName: List(1806)", "Delete SimpleType: List(1807)", "Delete SimpleName: Job(1808)", "Delete SimpleType: Job(1809)", "Delete ParameterizedType: List<Job>(1810)", "Delete SimpleName: jobId(1811)", "Delete SingleVariableDeclaration(1812)", "Delete SimpleName: IOException(1813)", "Delete SimpleType: IOException(1814)", "Delete SimpleName: Iterator(1815)", "Delete SimpleType: Iterator(1816)", "Delete SimpleName: Job(1817)", "Delete SimpleType: Job(1818)", "Delete ParameterizedType: Iterator<Job>(1819)", "Delete SimpleName: it(1820)", "Delete SimpleName: jobId(1821)", "Delete SimpleName: iterator(1822)", "Delete MethodInvocation(1823)", "Delete VariableDeclarationFragment(1824)", "Delete VariableDeclarationStatement(1825)", "Delete PrimitiveType: boolean(1826)", "Delete SimpleName: allTrue(1827)", "Delete BooleanLiteral: true(1828)", "Delete VariableDeclarationFragment(1829)", "Delete VariableDeclarationStatement(1830)", "Delete SimpleName: it(1831)", "Delete SimpleName: hasNext(1832)", "Delete MethodInvocation(1833)", "Delete SimpleName: it(1834)", "Delete SimpleName: next(1835)", "Delete MethodInvocation(1836)", "Delete SimpleName: isComplete(1837)", "Delete MethodInvocation(1838)", "Delete PrefixExpression: !(1839)", "Delete SimpleName: allTrue(1840)", "Delete BooleanLiteral: false(1841)", "Delete Assignment: =(1842)", "Delete ExpressionStatement(1843)", "Delete Block(1844)", "Delete IfStatement(1845)", "Delete Block(1846)", "Delete WhileStatement(1847)", "Delete SimpleName: allTrue(1848)", "Delete ReturnStatement(1849)", "Delete Block(1850)", "Delete MethodDeclaration(1851)", "Delete Modifier: public(1852)", "Delete PrimitiveType: boolean(1853)", "Delete SimpleName: save(1854)", "Delete SimpleName: String(1855)", "Delete SimpleType: String(1856)", "Delete SimpleName: aliasename(1857)", "Delete SingleVariableDeclaration(1858)", "Delete SimpleName: IOException(1859)", "Delete SimpleType: IOException(1860)", "Delete SimpleName: Put(1861)", "Delete SimpleType: Put(1862)", "Delete SimpleName: put(1863)", "Delete SimpleName: Put(1864)", "Delete SimpleType: Put(1865)", "Delete SimpleName: Bytes(1866)", "Delete SimpleName: toBytes(1867)", "Delete QualifiedName: Constants.METADATA(1868)", "Delete MethodInvocation(1869)", "Delete ClassInstanceCreation(1870)", "Delete VariableDeclarationFragment(1871)", "Delete VariableDeclarationStatement(1872)", "Delete SimpleName: put(1873)", "Delete SimpleName: add(1874)", "Delete SimpleName: Bytes(1875)", "Delete SimpleName: toBytes(1876)", "Delete QualifiedName: Constants.ALIASEFAMILY(1877)", "Delete MethodInvocation(1878)", "Delete SimpleName: Bytes(1879)", "Delete SimpleName: toBytes(1880)", "Delete StringLiteral: \"name\"(1881)", "Delete MethodInvocation(1882)", "Delete SimpleName: Bytes(1883)", "Delete SimpleName: toBytes(1884)", "Delete SimpleName: aliasename(1885)", "Delete MethodInvocation(1886)", "Delete MethodInvocation(1887)", "Delete ExpressionStatement(1888)", "Delete SimpleName: put(1889)", "Delete SimpleName: add(1890)", "Delete QualifiedName: Constants.ATTRIBUTE(1891)", "Delete SimpleName: Bytes(1892)", "Delete SimpleName: toBytes(1893)", "Delete StringLiteral: \"type\"(1894)", "Delete MethodInvocation(1895)", "Delete SimpleName: Bytes(1896)", "Delete SimpleName: toBytes(1897)", "Delete ThisExpression(1898)", "Delete SimpleName: getType(1899)", "Delete MethodInvocation(1900)", "Delete MethodInvocation(1901)", "Delete MethodInvocation(1902)", "Delete ExpressionStatement(1903)", "Delete SimpleName: table(1904)", "Delete SimpleName: put(1905)", "Delete SimpleName: put(1906)", "Delete MethodInvocation(1907)", "Delete ExpressionStatement(1908)", "Delete SimpleName: hamaAdmin(1909)", "Delete SimpleName: save(1910)", "Delete ThisExpression(1911)", "Delete SimpleName: aliasename(1912)", "Delete MethodInvocation(1913)", "Delete ReturnStatement(1914)", "Delete Block(1915)", "Delete MethodDeclaration(1916)", "Delete TypeDeclaration: class(1917)"]}}, {"AbstractVector_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL Javadoc", "DEL TagElement", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed with this work for additional information", "DEL PackageDeclaration", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: to you under the Apache License, Version 2.0 (the"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Iterator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.NavigableMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Text"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL PrimitiveType: int", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Result", "DEL TypeLiteral", "DEL SimpleName: NavigableMap", "DEL ArrayType: byte[]", "DEL SimpleName: entrySet", "DEL SimpleName: getLogger", "DEL ClassInstanceCreation", "DEL TagElement", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL StringLiteral: \"row\"", "DEL InfixExpression: &&", "DEL VariableDeclarationFragment", "DEL SimpleName: IndexOutOfBoundsException", "DEL ThisExpression", "DEL MethodInvocation", "DEL TagElement", "DEL FieldAccess", "DEL SimpleName: entries", "DEL SimpleName: DoubleWritable", "DEL MethodDeclaration", "DEL SimpleName: bytesToInt", "DEL FieldAccess", "DEL SimpleName: size", "DEL InfixExpression: +", "DEL SimpleName: Result", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: entries", "DEL SimpleType: DoubleWritable", "DEL Modifier: protected", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL QualifiedName: Map.Entry", "DEL SimpleName: BytesUtil", "DEL EnhancedForStatement", "DEL TagElement", "DEL SimpleName: MapWritable", "DEL SimpleName: x", "DEL Assignment: =", "DEL SimpleName: size", "DEL SimpleName: IntWritable", "DEL SimpleType: Iterator", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: Iterator", "DEL SimpleType: Text", "DEL MethodInvocation", "DEL SimpleName: entries", "DEL Block", "DEL TagElement", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: e", "DEL MethodInvocation", "DEL ReturnStatement", "DEL TextElement: Methods of the vector classes", "DEL Dimension", "DEL SimpleName: v2", "DEL MethodDeclaration", "DEL ThisExpression", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleName: e", "DEL Dimension", "DEL ConditionalExpression", "DEL NullLiteral", "DEL Modifier: public", "DEL ThisExpression", "DEL TextElement: Checks for conformant sizes", "DEL SimpleName: MapWritable", "DEL TagElement: @return", "DEL SimpleName: initMap", "DEL TagElement", "DEL SimpleName: entries", "DEL SimpleName: checkComformantSize", "DEL Block", "DEL Modifier: public", "DEL Javadoc", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL PrimitiveType: byte", "DEL SimpleName: MapWritable", "DEL Block", "DEL SimpleType: MapWritable", "DEL Block", "DEL ThisExpression", "DEL Block", "DEL FieldAccess", "DEL SimpleName: x", "DEL Modifier: public", "DEL Javadoc", "DEL Javadoc", "DEL ExpressionStatement", "DEL ThisExpression", "DEL TextElement:  iterator", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"v1.size != v2.size (\"", "DEL SimpleType: NavigableMap", "DEL SimpleName: entries", "DEL PrimitiveType: byte", "DEL FieldAccess", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SimpleName: Text", "DEL IfStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Bytes", "DEL MethodDeclaration", "DEL SimpleName: iterator", "DEL ThisExpression", "DEL SimpleName: AbstractVector", "DEL SimpleName: size", "DEL Modifier: abstract", "DEL SimpleName: iterator", "DEL SimpleName: size", "DEL Assignment: =", "DEL SimpleName: values", "DEL PrimitiveType: void", "DEL TagElement: @return", "DEL SimpleName: size", "DEL InfixExpression: !=", "DEL SimpleType: Map.Entry", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: toDouble", "DEL FieldAccess", "DEL PrimitiveType: byte", "DEL SimpleName: entries", "DEL TagElement", "DEL PrimitiveType: void", "DEL SimpleName: rs", "DEL SimpleName: containsKey", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL TextElement: Returns the ", "DEL Block", "DEL ThrowStatement", "DEL TextElement:  the entries of vector", "DEL SimpleName: x", "DEL PrimitiveType: void", "DEL ThisExpression", "DEL ArrayType: byte[]", "DEL InfixExpression: !=", "DEL FieldAccess", "DEL ReturnStatement", "DEL NullLiteral", "DEL SimpleName: Writable", "DEL SimpleType: MapWritable", "DEL ClassInstanceCreation", "DEL SimpleName: Logger", "DEL SimpleType: AbstractVector", "DEL StringLiteral: \")\"", "DEL SimpleName: clear", "DEL PrimitiveType: int", "DEL SimpleName: e", "DEL SimpleName: getEntries", "DEL SimpleName: entries", "DEL ThisExpression", "DEL Modifier: protected", "DEL SingleVariableDeclaration", "DEL SimpleName: entries", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL Modifier: public", "DEL NumberLiteral: 0", "DEL Dimension", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL ArrayType: byte[]", "DEL SimpleName: e", "DEL NumberLiteral: 1", "DEL ParameterizedType: Iterator<Writable>", "DEL MethodDeclaration", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL SimpleType: Vector", "DEL SimpleName: v2", "DEL IfStatement", "DEL SimpleName: rs", "DEL SimpleName: Logger", "DEL TextElement: non-zero elements.", "DEL TagElement: @link", "DEL SimpleType: Logger", "DEL Dimension", "DEL SimpleName: Vector", "DEL ParenthesizedExpression", "DEL SimpleName: AbstractVector", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: entries", "DEL ThisExpression", "DEL SimpleName: v2", "DEL Modifier: final", "DEL SimpleName: entries", "DEL SingleVariableDeclaration", "DEL TextElement: Returns a size of vector. If vector is sparse, returns the number of only", "DEL FieldAccess", "DEL StringLiteral: \" != \"", "DEL TextElement:  a size of vector", "DEL SimpleName: map", "DEL InfixExpression: -", "DEL NullLiteral", "DEL TextElement: Returns an Iterator.", "DEL SimpleType: Writable", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL SimpleName: map", "DEL Javadoc", "DEL ArrayType: byte[]", "DEL SimpleName: getKey", "DEL Javadoc", "DEL SimpleName: getValue", "DEL FieldAccess", "DEL TypeDeclaration: class", "DEL InfixExpression: !=", "DEL ThisExpression", "DEL FieldDeclaration", "DEL SimpleType: IndexOutOfBoundsException", "DEL SimpleType: MapWritable", "DEL SimpleName: put", "DEL MethodDeclaration", "DEL SimpleType: IntWritable", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: size", "DEL SimpleName: getFamilyMap", "DEL ReturnStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL TextElement: Clears the entries.", "DEL Javadoc"]}]}}, {"AbstractVector_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.util.Iterator(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Map(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.NavigableMap(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.io.Text(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.io.Writable(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.Constants(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.log4j.Logger(42)", "Delete ImportDeclaration(43)", "Delete TextElement: Methods of the vector classes(44)", "Delete TagElement(45)", "Delete Javadoc(46)", "Delete Modifier: public(47)", "Delete Modifier: abstract(48)", "Delete SimpleName: AbstractVector(49)", "Delete Modifier: static(50)", "Delete Modifier: final(51)", "Delete SimpleName: Logger(52)", "Delete SimpleType: Logger(53)", "Delete SimpleName: LOG(54)", "Delete SimpleName: Logger(55)", "Delete SimpleName: getLogger(56)", "Delete SimpleName: AbstractVector(57)", "Delete SimpleType: AbstractVector(58)", "Delete TypeLiteral(59)", "Delete MethodInvocation(60)", "Delete VariableDeclarationFragment(61)", "Delete FieldDeclaration(62)", "Delete Modifier: protected(63)", "Delete SimpleName: MapWritable(64)", "Delete SimpleType: MapWritable(65)", "Delete SimpleName: entries(66)", "Delete VariableDeclarationFragment(67)", "Delete FieldDeclaration(68)", "Delete Modifier: public(69)", "Delete PrimitiveType: void(70)", "Delete SimpleName: initMap(71)", "Delete SimpleName: Result(72)", "Delete SimpleType: Result(73)", "Delete SimpleName: rs(74)", "Delete SingleVariableDeclaration(75)", "Delete ThisExpression(76)", "Delete SimpleName: entries(77)", "Delete FieldAccess(78)", "Delete SimpleName: MapWritable(79)", "Delete SimpleType: MapWritable(80)", "Delete ClassInstanceCreation(81)", "Delete Assignment: =(82)", "Delete ExpressionStatement(83)", "Delete SimpleName: NavigableMap(84)", "Delete SimpleType: NavigableMap(85)", "Delete PrimitiveType: byte(86)", "Delete Dimension(87)", "Delete ArrayType: byte[](88)", "Delete PrimitiveType: byte(89)", "Delete Dimension(90)", "Delete ArrayType: byte[](91)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(92)", "Delete SimpleName: map(93)", "Delete SimpleName: rs(94)", "Delete SimpleName: getFamilyMap(95)", "Delete QualifiedName: Constants.COLUMNFAMILY(96)", "Delete MethodInvocation(97)", "Delete VariableDeclarationFragment(98)", "Delete VariableDeclarationStatement(99)", "Delete QualifiedName: Map.Entry(100)", "Delete SimpleType: Map.Entry(101)", "Delete PrimitiveType: byte(102)", "Delete Dimension(103)", "Delete ArrayType: byte[](104)", "Delete PrimitiveType: byte(105)", "Delete Dimension(106)", "Delete ArrayType: byte[](107)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(108)", "Delete SimpleName: e(109)", "Delete SingleVariableDeclaration(110)", "Delete SimpleName: map(111)", "Delete SimpleName: entrySet(112)", "Delete MethodInvocation(113)", "Delete SimpleName: e(114)", "Delete NullLiteral(115)", "Delete InfixExpression: !=(116)", "Delete ThisExpression(117)", "Delete SimpleName: entries(118)", "Delete FieldAccess(119)", "Delete SimpleName: put(120)", "Delete SimpleName: IntWritable(121)", "Delete SimpleType: IntWritable(122)", "Delete SimpleName: BytesUtil(123)", "Delete SimpleName: bytesToInt(124)", "Delete SimpleName: e(125)", "Delete SimpleName: getKey(126)", "Delete MethodInvocation(127)", "Delete MethodInvocation(128)", "Delete ClassInstanceCreation(129)", "Delete SimpleName: DoubleWritable(130)", "Delete SimpleType: DoubleWritable(131)", "Delete SimpleName: Bytes(132)", "Delete SimpleName: toDouble(133)", "Delete SimpleName: e(134)", "Delete SimpleName: getValue(135)", "Delete MethodInvocation(136)", "Delete MethodInvocation(137)", "Delete ClassInstanceCreation(138)", "Delete MethodInvocation(139)", "Delete ExpressionStatement(140)", "Delete Block(141)", "Delete IfStatement(142)", "Delete Block(143)", "Delete EnhancedForStatement(144)", "Delete Block(145)", "Delete MethodDeclaration(146)", "Delete TextElement: Returns an Iterator.(147)", "Delete TagElement(148)", "Delete TextElement:  iterator(149)", "Delete TagElement: @return(150)", "Delete Javadoc(151)", "Delete Modifier: public(152)", "Delete SimpleName: Iterator(153)", "Delete SimpleType: Iterator(154)", "Delete SimpleName: Writable(155)", "Delete SimpleType: Writable(156)", "Delete ParameterizedType: Iterator<Writable>(157)", "Delete SimpleName: iterator(158)", "Delete ThisExpression(159)", "Delete SimpleName: entries(160)", "Delete FieldAccess(161)", "Delete SimpleName: values(162)", "Delete MethodInvocation(163)", "Delete SimpleName: iterator(164)", "Delete MethodInvocation(165)", "Delete ReturnStatement(166)", "Delete Block(167)", "Delete MethodDeclaration(168)", "Delete TextElement: Returns a size of vector. If vector is sparse, returns the number of only(169)", "Delete TextElement: non-zero elements.(170)", "Delete TagElement(171)", "Delete TextElement:  a size of vector(172)", "Delete TagElement: @return(173)", "Delete Javadoc(174)", "Delete Modifier: public(175)", "Delete PrimitiveType: int(176)", "Delete SimpleName: size(177)", "Delete PrimitiveType: int(178)", "Delete SimpleName: x(179)", "Delete NumberLiteral: 0(180)", "Delete VariableDeclarationFragment(181)", "Delete VariableDeclarationStatement(182)", "Delete ThisExpression(183)", "Delete SimpleName: entries(184)", "Delete FieldAccess(185)", "Delete NullLiteral(186)", "Delete InfixExpression: !=(187)", "Delete ThisExpression(188)", "Delete SimpleName: entries(189)", "Delete FieldAccess(190)", "Delete SimpleName: containsKey(191)", "Delete SimpleName: Text(192)", "Delete SimpleType: Text(193)", "Delete StringLiteral: \"row\"(194)", "Delete ClassInstanceCreation(195)", "Delete MethodInvocation(196)", "Delete InfixExpression: &&(197)", "Delete SimpleName: x(198)", "Delete NumberLiteral: 1(199)", "Delete Assignment: =(200)", "Delete ExpressionStatement(201)", "Delete IfStatement(202)", "Delete ThisExpression(203)", "Delete SimpleName: entries(204)", "Delete FieldAccess(205)", "Delete NullLiteral(206)", "Delete InfixExpression: !=(207)", "Delete ParenthesizedExpression(208)", "Delete ThisExpression(209)", "Delete SimpleName: entries(210)", "Delete FieldAccess(211)", "Delete SimpleName: size(212)", "Delete MethodInvocation(213)", "Delete SimpleName: x(214)", "Delete InfixExpression: -(215)", "Delete NumberLiteral: 0(216)", "Delete ConditionalExpression(217)", "Delete ReturnStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete TextElement: Returns the (221)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(222)", "Delete TagElement: @link(223)", "Delete TagElement(224)", "Delete TextElement:  the entries of vector(225)", "Delete TagElement: @return(226)", "Delete Javadoc(227)", "Delete Modifier: public(228)", "Delete SimpleName: MapWritable(229)", "Delete SimpleType: MapWritable(230)", "Delete SimpleName: getEntries(231)", "Delete ThisExpression(232)", "Delete SimpleName: entries(233)", "Delete FieldAccess(234)", "Delete ReturnStatement(235)", "Delete Block(236)", "Delete MethodDeclaration(237)", "Delete TextElement: Checks for conformant sizes(238)", "Delete TagElement(239)", "Delete Javadoc(240)", "Delete Modifier: protected(241)", "Delete PrimitiveType: void(242)", "Delete SimpleName: checkComformantSize(243)", "Delete SimpleName: Vector(244)", "Delete SimpleType: Vector(245)", "Delete SimpleName: v2(246)", "Delete SingleVariableDeclaration(247)", "Delete ThisExpression(248)", "Delete SimpleName: size(249)", "Delete MethodInvocation(250)", "Delete SimpleName: v2(251)", "Delete SimpleName: size(252)", "Delete MethodInvocation(253)", "Delete InfixExpression: !=(254)", "Delete SimpleName: IndexOutOfBoundsException(255)", "Delete SimpleType: IndexOutOfBoundsException(256)", "Delete StringLiteral: \"v1.size != v2.size (\"(257)", "Delete ThisExpression(258)", "Delete SimpleName: size(259)", "Delete MethodInvocation(260)", "Delete StringLiteral: \" != \"(261)", "Delete SimpleName: v2(262)", "Delete SimpleName: size(263)", "Delete MethodInvocation(264)", "Delete StringLiteral: \")\"(265)", "Delete InfixExpression: +(266)", "Delete ClassInstanceCreation(267)", "Delete ThrowStatement(268)", "Delete Block(269)", "Delete IfStatement(270)", "Delete Block(271)", "Delete MethodDeclaration(272)", "Delete TextElement: Clears the entries.(273)", "Delete TagElement(274)", "Delete Javadoc(275)", "Delete Modifier: public(276)", "Delete PrimitiveType: void(277)", "Delete SimpleName: clear(278)", "Delete ThisExpression(279)", "Delete SimpleName: entries(280)", "Delete FieldAccess(281)", "Delete NullLiteral(282)", "Delete Assignment: =(283)", "Delete ExpressionStatement(284)", "Delete Block(285)", "Delete MethodDeclaration(286)", "Delete TypeDeclaration: class(287)"]}}, {"DenseMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL Javadoc", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Iterator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Get"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HTable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Put"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.ResultScanner"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Scan"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.BytesUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.RandomVariable"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: j", "DEL Block", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleType: Scan", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL SimpleName: Bytes", "DEL SimpleType: Matrix", "DEL SimpleName: Bytes", "DEL SimpleName: TABLE_PREFIX", "DEL Block", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: row", "DEL SimpleName: IOException", "DEL SimpleName: n", "DEL SimpleType: HTable", "DEL TagElement: @throws", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: DenseMatrix", "DEL SimpleName: trunk", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL TextElement:  the number of rows.", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: put", "DEL SimpleName: DenseMatrix", "DEL TagElement: @param", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: identity", "DEL SimpleName: vector", "DEL SimpleType: IntWritable", "DEL TagElement: @param", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: HamaConfiguration", "DEL SimpleType: DenseVector", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL SimpleName: j0", "DEL Javadoc", "DEL MethodInvocation", "DEL Block", "DEL ThisExpression", "DEL SimpleName: getRowIndex", "DEL SimpleName: i", "DEL TextElement:  the vector of column", "DEL PrimitiveType: int", "DEL SimpleName: Matrix", "DEL SimpleType: MapWritable", "DEL SimpleName: get", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: DenseMatrix", "DEL SimpleName: identity", "DEL BooleanLiteral: false", "DEL VariableDeclarationExpression", "DEL SimpleName: setConfiguration", "DEL TagElement: @return", "DEL SimpleName: getRow", "DEL SimpleType: Writable", "DEL SimpleName: i", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: e", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: matrixPath", "DEL Block", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: i0", "DEL SimpleName: size", "DEL NullLiteral", "DEL SimpleName: i", "DEL SimpleName: row", "DEL NumberLiteral: 1", "DEL SimpleName: subMatrix", "DEL TextElement:  configuration object", "DEL SimpleName: scan", "DEL SimpleName: j", "DEL SimpleName: result", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL SimpleType: Put", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: size", "DEL SimpleName: n", "DEL ArrayType: byte[]", "DEL SimpleName: j", "DEL SimpleName: vector", "DEL TagElement: @param", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL SimpleName: valueOf", "DEL Block", "DEL TextElement:  fill the matrix with this scalar value.", "DEL SimpleName: hamaAdmin", "DEL SimpleName: getValue", "DEL SimpleType: Matrix", "DEL ExpressionStatement", "DEL TextElement:  jth column of the matrix", "DEL Modifier: public", "DEL SimpleName: i", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL InfixExpression: <", "DEL TagElement: @param", "DEL PrimitiveType: int", "DEL SimpleName: DenseVector", "DEL MethodInvocation", "DEL SimpleName: Vector", "DEL TextElement:  the start index of column", "DEL EnhancedForStatement", "DEL SimpleName: getEntries", "DEL SimpleName: Result", "DEL Block", "DEL SimpleName: getClass", "DEL VariableDeclarationStatement", "DEL SimpleType: Matrix", "DEL SimpleName: table", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL Block", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL PostfixExpression: ++", "DEL SimpleName: String", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL SimpleName: rs", "DEL SimpleName: IOException", "DEL SimpleName: String", "DEL SimpleName: result", "DEL SimpleName: jj", "DEL TagElement: @param", "DEL SimpleName: vector", "DEL SimpleType: Map.Entry", "DEL SimpleName: e", "DEL SimpleName: m", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: valueOf", "DEL SimpleName: set", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL NumberLiteral: 0.0", "DEL SimpleType: DenseVector", "DEL NumberLiteral: 0", "DEL SimpleName: row", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL Modifier: static", "DEL Modifier: public", "DEL SimpleName: random", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: getKey", "DEL TagElement: @param", "DEL SimpleName: DenseVector", "DEL VariableDeclarationExpression", "DEL ClassInstanceCreation", "DEL TagElement: @throws", "DEL SimpleName: Scan", "DEL TagElement: @return", "DEL Block", "DEL PostfixExpression: ++", "DEL SimpleType: DenseMatrix", "DEL SimpleName: jj", "DEL MethodInvocation", "DEL SimpleName: multAdd", "DEL SimpleName: rand", "DEL SimpleName: set", "DEL SimpleName: setDimension", "DEL MethodInvocation", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: addColumn", "DEL SimpleName: getType", "DEL SimpleName: table", "DEL SimpleName: getValue", "DEL Block", "DEL InfixExpression: <=", "DEL SimpleName: Put", "DEL SimpleName: getValue", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL ForStatement", "DEL ClassInstanceCreation", "DEL SimpleName: addColumn", "DEL SimpleType: HTable", "DEL SimpleName: IOException", "DEL InfixExpression: <", "DEL SimpleName: setColumn", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL SimpleName: rand", "DEL PrimitiveType: int", "DEL SimpleType: ResultScanner", "DEL SimpleName: conf", "DEL InfixExpression: <", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: BytesUtil", "DEL StringLiteral: \": \"", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL SimpleName: force", "DEL SimpleName: getRowIndex", "DEL SimpleType: Writable", "DEL SimpleType: IntWritable", "DEL TextElement: Create/load a matrix aliased as 'matrixName'.", "DEL SimpleName: valueOf", "DEL SimpleType: String", "DEL SimpleName: valueOf", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: Writable", "DEL SimpleName: m", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL StringLiteral: \" * \"", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL SimpleName: DoubleWritable", "DEL ParenthesizedExpression", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleType: Get", "DEL TagElement: @return", "DEL TextElement:  the vector of row", "DEL SimpleType: Put", "DEL SimpleName: LOG", "DEL SimpleName: j", "DEL PrimitiveType: double", "DEL TagElement: @param", "DEL SimpleName: i", "DEL TextElement:  the value of entry, or zero If entry is null", "DEL MethodInvocation", "DEL SimpleName: columnSize", "DEL SimpleName: add", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: DenseMatrix", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: Bytes", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL TagElement: @throws", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL InfixExpression: ||", "DEL Block", "DEL TextElement: Construct a raw matrix. Just create a table in HBase.", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"Create the \"", "DEL SimpleName: DoubleWritable", "DEL SimpleName: n", "DEL SimpleName: IOException", "DEL PrimitiveType: int", "DEL SimpleName: put", "DEL SimpleName: jj", "DEL SimpleName: i", "DEL SimpleName: j", "DEL PrimitiveType: byte", "DEL SimpleName: put", "DEL SimpleName: Put", "DEL Modifier: public", "DEL NumberLiteral: 1.0", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: SubMatrix", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: DenseVector", "DEL SimpleName: getKey", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: m", "DEL SimpleName: getSimpleName", "DEL TextElement:  the start index of row", "DEL StringLiteral: \" * \"", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: scan", "DEL SimpleName: get", "DEL TextElement: to load an existed matrix alised 'matrixName'.", "DEL SimpleName: incrementAndGetRef", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL SimpleName: info", "DEL SimpleName: Result", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: j", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL SimpleName: table", "DEL StringLiteral: \"Try to load non-existed matrix alised as \"", "DEL SimpleName: j", "DEL Block", "DEL VariableDeclarationExpression", "DEL SimpleName: identity", "DEL Modifier: public", "DEL Block", "DEL SimpleName: vector", "DEL SimpleType: Scan", "DEL MethodDeclaration", "DEL EnhancedForStatement", "DEL TextElement:  the number of columns.", "DEL SimpleName: m", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: i", "DEL SimpleName: getRowIndex", "DEL VariableDeclarationExpression", "DEL QualifiedName: Map.Entry", "DEL SimpleName: j0", "DEL SimpleName: IOException", "DEL InfixExpression: <", "DEL SimpleName: getRows", "DEL SimpleName: conf", "DEL SimpleName: n", "DEL SimpleType: HamaConfiguration", "DEL Assignment: =", "DEL SimpleName: scan", "DEL SimpleName: getColumns", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: BytesUtil", "DEL ExpressionStatement", "DEL SimpleName: DenseVector", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL SimpleName: n", "DEL SimpleName: j1", "DEL SimpleName: j", "DEL Block", "DEL SimpleName: get", "DEL TextElement:  the number of columns.", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL PrimitiveType: int", "DEL SimpleType: HamaConfiguration", "DEL TextElement:  the number of rows.", "DEL IfStatement", "DEL SimpleName: columnSize", "DEL VariableDeclarationFragment", "DEL TextElement: This class represents a dense matrix.", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: iterator", "DEL Assignment: =", "DEL SimpleName: IOException", "DEL SimpleName: IOException", "DEL SimpleName: rand", "DEL ThisExpression", "DEL SimpleName: j0", "DEL SimpleName: e", "DEL SimpleName: toBytes", "DEL TagElement: @return", "DEL IfStatement", "DEL TextElement:  the row index of the matrix", "DEL SimpleName: toBytes", "DEL SimpleName: matrixName", "DEL SimpleName: toBytes", "DEL SimpleName: get", "DEL PrimitiveType: int", "DEL SimpleName: getRows", "DEL SimpleName: put", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleType: IOException", "DEL WhileStatement", "DEL ExpressionStatement", "DEL SimpleName: LOG", "DEL SimpleName: conf", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL SimpleName: setConfiguration", "DEL TagElement: @return", "DEL SimpleName: trunk", "DEL SimpleName: matrixpath", "DEL SimpleName: BytesUtil", "DEL SimpleName: i", "DEL SimpleName: save", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL SimpleName: value", "DEL ParenthesizedExpression", "DEL SimpleName: Vector", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL TagElement: @param", "DEL MethodInvocation", "DEL SimpleName: m", "DEL SimpleName: BytesUtil", "DEL StringLiteral: \", \"", "DEL SimpleName: put", "DEL SimpleName: IntWritable", "DEL Javadoc", "DEL SimpleName: existed", "DEL SimpleName: j", "DEL NumberLiteral: 0", "DEL PostfixExpression: ++", "DEL InfixExpression: +", "DEL SimpleName: i", "DEL SimpleName: ResultScanner", "DEL SimpleType: Result", "DEL SimpleName: r", "DEL TextElement:  ith row of the matrix", "DEL SimpleName: j", "DEL ParenthesizedExpression", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: SubMatrix", "DEL Modifier: private", "DEL ForStatement", "DEL ExpressionStatement", "DEL SimpleType: HamaConfiguration", "DEL SimpleType: DenseVector", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: m", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL TextElement:  an m-by-n matrix with ones on the diagonal and zeros elsewhere.", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleType: Iterator", "DEL MethodDeclaration", "DEL SimpleType: Scan", "DEL SimpleName: result", "DEL SimpleName: toDouble", "DEL SimpleName: put", "DEL SimpleName: getEntries", "DEL CastExpression", "DEL PostfixExpression: ++", "DEL SimpleName: NullPointerException", "DEL Block", "DEL PostfixExpression: ++", "DEL SimpleName: conf", "DEL SimpleType: DenseMatrix", "DEL SimpleName: toBytes", "DEL SimpleName: column", "DEL SimpleType: DenseMatrix", "DEL FieldDeclaration", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: vector", "DEL TextElement: Set the column of a matrix to a given vector", "DEL SimpleName: setStopRow", "DEL TextElement:  the number of columns.", "DEL SingleVariableDeclaration", "DEL InfixExpression: -", "DEL SimpleName: HamaConfiguration", "DEL TagElement: @param", "DEL SimpleName: it", "DEL SimpleName: next", "DEL SimpleName: conf", "DEL SimpleType: DenseMatrix", "DEL TextElement:  the number of rows.", "DEL SimpleName: j1", "DEL VariableDeclarationExpression", "DEL ExpressionStatement", "DEL SimpleType: DoubleWritable", "DEL PrimitiveType: void", "DEL SimpleName: i", "DEL SimpleName: e", "DEL SimpleName: matrixPath", "DEL SimpleName: IOException", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleType: SubMatrix", "DEL SimpleName: valueOf", "DEL TextElement:  the column index of the matrix", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: toBytes", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL TextElement: Generate matrix with random elements", "DEL SimpleName: MapWritable", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: Matrix", "DEL SimpleName: vector", "DEL ThisExpression", "DEL SimpleName: setConfiguration", "DEL SimpleName: j", "DEL TextElement:  the sub matrix of matrix", "DEL SimpleName: SubMatrix", "DEL ExpressionStatement", "DEL SimpleType: DenseVector", "DEL Javadoc", "DEL SimpleName: IOException", "DEL Block", "DEL TagElement", "DEL SimpleName: vector", "DEL MethodDeclaration", "DEL TextElement: if we didn't create the matrix successfully.", "DEL SimpleName: BytesUtil", "DEL SimpleType: IOException", "DEL StringLiteral: \"Unexpected null\"", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL TextElement:  throw the exception to let the user know what happend,", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: j", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL InfixExpression: -", "DEL ClassInstanceCreation", "DEL SimpleName: j0", "DEL SimpleName: m", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: getRowIndex", "DEL ParenthesizedExpression", "DEL Block", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: delete", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleName: setConfiguration", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL SimpleName: info", "DEL SimpleName: IOException", "DEL SimpleName: value", "DEL SimpleName: table", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: r", "DEL SimpleName: entrySet", "DEL SimpleName: getRows", "DEL SimpleName: set", "DEL SimpleName: String", "DEL SimpleName: column", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: <", "DEL SimpleName: HTable", "DEL SimpleName: identity", "DEL SimpleName: getRowIndex", "DEL SimpleName: getRowIndex", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: j", "DEL SimpleName: BytesUtil", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL TagElement", "DEL InfixExpression: <", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: DenseMatrix", "DEL SimpleName: clear", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: n", "DEL SimpleName: DenseMatrix", "DEL TextElement: Set the row of a matrix to a given vector", "DEL MethodInvocation", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL TagElement: @param", "DEL SimpleType: DenseVector", "DEL ForStatement", "DEL TagElement: @throws", "DEL SimpleName: Bytes", "DEL InfixExpression: ||", "DEL SimpleName: j", "DEL SimpleName: C", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL SimpleName: DenseVector", "DEL VariableDeclarationFragment", "DEL SimpleName: Get", "DEL SimpleName: j", "DEL SimpleName: i1", "DEL SimpleType: Writable", "DEL SimpleName: jj", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL SimpleName: j", "DEL SimpleName: n", "DEL SimpleType: IOException", "DEL SimpleName: hamaAdmin", "DEL TagElement: @throws", "DEL SimpleName: vector", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleName: i0", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: conf", "DEL NumberLiteral: 0", "DEL SimpleName: getRow", "DEL SimpleName: entrySet", "DEL SimpleName: vv", "DEL ForStatement", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: DenseMatrix", "DEL TagElement: @param", "DEL SimpleName: n", "DEL TagElement", "DEL SimpleName: n", "DEL ExpressionStatement", "DEL SimpleName: valueOf", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: getColumns", "DEL TagElement: @param", "DEL SimpleType: Vector", "DEL SimpleName: n", "DEL VariableDeclarationFragment", "DEL SimpleName: identity", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL SimpleName: j", "DEL ExpressionStatement", "DEL SimpleName: i1", "DEL SimpleName: i", "DEL SimpleName: result", "DEL SimpleType: DenseVector", "DEL SimpleName: s", "DEL PrimitiveType: void", "DEL SimpleName: r", "DEL TextElement:  throw the exception to let the user know what happend,", "DEL PrimitiveType: double", "DEL SimpleName: Matrix", "DEL SimpleName: i", "DEL SimpleName: Scan", "DEL VariableDeclarationFragment", "DEL SimpleName: getPath", "DEL SimpleType: IntWritable", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: matrixExists", "DEL ParenthesizedExpression", "DEL SimpleName: j", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: Result", "DEL SimpleName: n", "DEL SimpleName: Bytes", "DEL SimpleName: conf", "DEL SimpleType: Vector", "DEL SimpleType: DenseMatrix", "DEL PostfixExpression: ++", "DEL Javadoc", "DEL TagElement: @throws", "DEL SimpleName: m", "DEL SimpleName: table", "DEL TypeDeclaration: class", "DEL TextElement: Returns the sub matrix formed by selecting certain rows and columns from a", "DEL Javadoc", "DEL InfixExpression: <", "DEL SimpleName: j", "DEL SimpleName: trunk", "DEL ExpressionStatement", "DEL SimpleName: valueOf", "DEL TextElement: Gets the double value of (i, j)", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: Writable", "DEL SimpleName: IOException", "DEL ThrowStatement", "DEL NumberLiteral: 0", "DEL TextElement: Gets the vector of column", "DEL Assignment: =", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleName: j", "DEL SimpleName: Bytes", "DEL SimpleName: vector", "DEL SimpleName: Bytes", "DEL SimpleName: s", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL SimpleName: getColumns", "DEL SimpleName: B", "DEL SimpleName: ResultScanner", "DEL SimpleName: s", "DEL Javadoc", "DEL SimpleType: Put", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: n", "DEL SimpleName: result", "DEL TextElement: C = alpha*A*B + C", "DEL SimpleName: matrixName", "DEL TextElement: !! It is an internal used for map/reduce.", "DEL ThrowStatement", "DEL SimpleName: j", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL SimpleName: rs", "DEL SimpleType: DenseMatrix", "DEL SimpleName: j", "DEL SimpleName: r", "DEL MethodInvocation", "DEL SimpleName: column", "DEL MethodInvocation", "DEL TextElement: bigger matrix. The sub matrix is a in-memory operation only.", "DEL TextElement:  the end index of row", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: getRows", "DEL ThisExpression", "DEL SimpleName: toDouble", "DEL SimpleName: DoubleWritable", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL SimpleName: getScanner", "DEL SimpleName: next", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL Assignment: =", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Block", "DEL TagElement: @param", "DEL SimpleType: Get", "DEL SimpleName: addColumn", "DEL SimpleType: DoubleWritable", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SimpleName: String", "DEL ThisExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL TagElement: @param", "DEL SimpleName: s", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: setStartRow", "DEL MethodInvocation", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: vector", "DEL NullLiteral", "DEL NullLiteral", "DEL SimpleName: toString", "DEL TextElement:  the number of rows.", "DEL SimpleName: column", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Javadoc", "DEL SimpleName: DenseMatrix", "DEL SingleVariableDeclaration", "DEL SimpleName: j1", "DEL SimpleType: Get", "DEL PrimitiveType: int", "DEL SimpleName: matrixpath", "DEL SimpleName: alpha", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: set", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL ThisExpression", "DEL SimpleName: RandomVariable", "DEL SingleVariableDeclaration", "DEL TextElement:  configuration object", "DEL NumberLiteral: 1", "DEL ThisExpression", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: Put", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL SimpleName: scan", "DEL SimpleName: DenseMatrix", "DEL SimpleName: tryToCreateTable", "DEL Block", "DEL VariableDeclarationStatement", "DEL WhileStatement", "DEL SimpleName: closed", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL Dimension", "DEL SimpleType: Map.Entry", "DEL PrimitiveType: int", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: String", "DEL TagElement", "DEL Javadoc", "DEL SimpleName: HamaConfiguration", "DEL SimpleType: NullPointerException", "DEL VariableDeclarationExpression", "DEL SimpleName: getValue", "DEL SimpleName: conf", "DEL IfStatement", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: matrixName", "DEL SimpleName: n", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleType: Get", "DEL ClassInstanceCreation", "DEL ThisExpression", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: j1", "DEL ExpressionStatement", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL SimpleName: put", "DEL SimpleName: Put", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TextElement:  an m-by-n matrix with uniformly distributed random elements.", "DEL Block", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: it", "DEL SimpleName: IOException", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: existed", "DEL SimpleName: row", "DEL SimpleType: Result", "DEL SimpleName: set", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL Javadoc", "DEL MethodInvocation", "DEL MethodInvocation", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL ThrowStatement", "DEL SimpleName: m", "DEL VariableDeclarationFragment", "DEL SimpleName: n", "DEL InfixExpression: ==", "DEL PrimitiveType: int", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: info", "DEL SimpleType: MapWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: table", "DEL SimpleName: IOException", "DEL SimpleName: put", "DEL SimpleName: getRow", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: getPath", "DEL SimpleName: matrixpath", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL TextElement: Returns type of matrix", "DEL SimpleName: i", "DEL SimpleType: DenseVector", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL PrimitiveType: boolean", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ArrayType: byte[]", "DEL SimpleName: rand", "DEL SimpleName: j", "DEL SimpleName: m", "DEL ClassInstanceCreation", "DEL PostfixExpression: ++", "DEL TextElement:  configuration object", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL TextElement:  if force is true, a new matrix will be created no matter", "DEL PrimitiveType: double", "DEL Block", "DEL SingleVariableDeclaration", "DEL InfixExpression: <", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL TagElement: @throws", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL InfixExpression: <", "DEL SimpleName: get", "DEL SimpleName: s", "DEL SimpleName: get", "DEL TagElement: @throws", "DEL PrimitiveType: int", "DEL SimpleName: key", "DEL TextElement:  C", "DEL VariableDeclarationFragment", "DEL SimpleName: n", "DEL SimpleName: setRow", "DEL SimpleName: table", "DEL InfixExpression: +", "DEL IfStatement", "DEL SimpleName: matrixPath", "DEL ClassInstanceCreation", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL InfixExpression: !=", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL SimpleName: m", "DEL ParameterizedType: Iterator<Result>", "DEL InfixExpression: <", "DEL SimpleType: Scan", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: Get", "DEL SimpleName: getScanner", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: table", "DEL InfixExpression: +", "DEL TagElement: @param", "DEL SimpleType: Put", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: IntWritable", "DEL SimpleName: j", "DEL TagElement: @throws", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: HTable", "DEL TagElement", "DEL ForStatement", "DEL SimpleName: String", "DEL SimpleName: BytesUtil", "DEL TagElement: @return", "DEL ExpressionStatement", "DEL SimpleName: i1", "DEL MethodInvocation", "DEL TextElement:  configuration object", "DEL NumberLiteral: 0", "DEL SimpleName: j0", "DEL SimpleName: getSimpleName", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: conf", "DEL SimpleName: matrixName", "DEL MethodInvocation", "DEL TextElement:  the number of columns.", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL StringLiteral: \", \"", "DEL SingleVariableDeclaration", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: vector", "DEL SimpleName: Put", "DEL InfixExpression: <=", "DEL SimpleName: s", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Iterator", "DEL SimpleName: m", "DEL SimpleName: r", "DEL ReturnStatement", "DEL ForStatement", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: valueOf", "DEL VariableDeclarationFragment", "DEL SimpleName: conf", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL SimpleName: key", "DEL Modifier: static", "DEL SimpleName: DenseVector", "DEL VariableDeclarationStatement", "DEL SimpleName: m", "DEL TextElement:  the end index of column", "DEL Block", "DEL TagElement: @return", "DEL ConditionalExpression", "DEL TagElement", "DEL SimpleName: s", "DEL ThisExpression", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: rand", "DEL TagElement", "DEL SimpleName: m", "DEL SimpleName: conf", "DEL SimpleName: Get", "DEL StringLiteral: \", \"", "DEL SimpleName: IOException", "DEL SimpleName: i1", "DEL SingleVariableDeclaration", "DEL TextElement:  configuration object", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: String", "DEL TextElement: Gets the vector of row", "DEL TextElement:  the name of the matrix", "DEL TagElement: @param", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: existed", "DEL SimpleName: Put", "DEL SimpleName: getColumn", "DEL PrimitiveType: int", "DEL SimpleName: m", "DEL ClassInstanceCreation", "DEL SimpleName: addFamily", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL SimpleName: j", "DEL SimpleName: conf", "DEL SimpleName: Get", "DEL SimpleName: Scan", "DEL SimpleName: i0", "DEL ForStatement", "DEL SimpleName: hamaAdmin", "DEL SimpleName: n", "DEL TextElement: if we didn't create the matrix successfully.", "DEL SimpleName: jj", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL SimpleName: force", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL SimpleName: value", "DEL TagElement", "DEL SimpleName: force", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL TextElement: Generate identity matrix", "DEL ForStatement", "DEL SimpleType: DoubleWritable", "DEL SimpleName: getRowIndex", "DEL SimpleName: DenseMatrix", "DEL SimpleName: setRow", "DEL SimpleName: m", "DEL Modifier: final", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: j", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: j1", "DEL SimpleName: Put", "DEL ClassInstanceCreation", "DEL Dimension", "DEL SimpleName: AbstractMatrix", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleType: AbstractMatrix", "DEL ClassInstanceCreation", "DEL SimpleName: Writable", "DEL SimpleName: vector", "DEL Javadoc", "DEL SimpleName: column", "DEL TagElement: @param", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL SimpleName: closed", "DEL SimpleName: e", "DEL QualifiedName: Map.Entry", "DEL PrimitiveType: int", "DEL SimpleName: setDimension", "DEL SimpleType: Result", "DEL SimpleName: r", "DEL SimpleName: Bytes", "DEL SimpleName: i", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleType: ResultScanner", "DEL SimpleName: j", "DEL PrimitiveType: int", "DEL SimpleName: getRowIndex", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL StringLiteral: \" random matrix : \"", "DEL SimpleName: i", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL Block", "DEL SimpleName: i", "DEL TagElement", "DEL SimpleType: SubMatrix", "DEL SimpleType: Result", "DEL TagElement: @throws", "DEL SimpleName: C", "DEL InfixExpression: +", "DEL InfixExpression: <", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: closed", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: scan", "DEL SimpleType: Put", "DEL ThrowStatement", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL SimpleName: value", "DEL SimpleName: value", "DEL ReturnStatement", "DEL SimpleName: i", "DEL SimpleName: matrixName", "DEL SimpleName: n", "DEL SimpleName: IntWritable", "DEL SimpleName: tryToCreateTable", "DEL SimpleName: B", "DEL SimpleName: matrixName", "DEL SimpleName: IOException", "DEL VariableDeclarationExpression", "DEL InfixExpression: ==", "DEL SimpleName: getColumns", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL TextElement:  configuration object", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL TagElement: @inheritDoc", "DEL MethodInvocation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: add", "DEL SimpleType: IOException", "DEL SimpleName: i", "DEL SimpleName: tryToCreateTable", "DEL SimpleName: Matrix", "DEL SimpleType: Writable", "DEL SimpleName: vv", "DEL TagElement: @throws", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL SimpleName: setRow", "DEL SimpleName: Result", "DEL TagElement", "DEL SimpleName: table", "DEL SimpleName: DenseVector", "DEL ExpressionStatement", "DEL TagElement: @throws", "DEL SimpleName: matrixName", "DEL Block", "DEL InfixExpression: <", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL TextElement: Create an m-by-n constant matrix.", "DEL SimpleName: i", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: j", "DEL SimpleName: get", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: Bytes", "DEL TextElement: 'matrixName' has aliased to an existed matrix; otherwise, just try", "DEL MethodDeclaration", "DEL SimpleName: i0", "DEL ThrowStatement", "DEL InfixExpression: <", "DEL PrimitiveType: int", "DEL TextElement:  ", "DEL SimpleName: get", "DEL TagElement: @throws", "DEL SimpleName: DenseMatrix", "DEL SimpleName: getPath", "DEL SimpleName: scan", "DEL SimpleName: IOException", "DEL SimpleName: getRows", "DEL Dimension", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL BooleanLiteral: false", "DEL NumberLiteral: 0", "DEL SimpleName: j", "DEL SimpleType: DenseVector", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL StringLiteral: \"Create the \"", "DEL SimpleType: SubMatrix", "DEL ReturnStatement", "DEL SimpleName: LOG", "DEL SimpleName: j", "DEL StringLiteral: \" identity matrix : \"", "DEL MethodInvocation", "DEL SimpleName: DenseMatrix", "DEL TagElement: @param", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL SimpleName: r", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: matrixPath", "DEL TypeLiteral", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL TagElement", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL TagElement", "DEL SimpleName: Scan", "DEL SimpleName: DenseVector", "DEL MethodInvocation", "DEL SimpleName: DenseMatrix", "DEL TagElement: @param", "DEL SimpleName: m", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: j", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: rs", "DEL SimpleName: put", "DEL TextElement: Load a matrix from an existed matrix table whose tablename is 'matrixpath'", "DEL SimpleType: Matrix", "DEL SingleVariableDeclaration", "DEL SimpleName: conf", "DEL Javadoc", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: alpha", "DEL TagElement: @throws", "DEL SimpleName: j", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: it", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL SimpleName: e"]}]}}, {"DenseMatrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Iterator(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.Map(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.client.ResultScanner(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.io.Writable(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hama.Constants(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(52)", "Delete ImportDeclaration(53)", "Delete TextElement: This class represents a dense matrix.(54)", "Delete TagElement(55)", "Delete Javadoc(56)", "Delete Modifier: public(57)", "Delete SimpleName: DenseMatrix(58)", "Delete SimpleName: AbstractMatrix(59)", "Delete SimpleType: AbstractMatrix(60)", "Delete SimpleName: Matrix(61)", "Delete SimpleType: Matrix(62)", "Delete Modifier: static(63)", "Delete Modifier: private(64)", "Delete Modifier: final(65)", "Delete SimpleName: String(66)", "Delete SimpleType: String(67)", "Delete SimpleName: TABLE_PREFIX(68)", "Delete SimpleName: DenseMatrix(69)", "Delete SimpleType: DenseMatrix(70)", "Delete TypeLiteral(71)", "Delete SimpleName: getSimpleName(72)", "Delete MethodInvocation(73)", "Delete VariableDeclarationFragment(74)", "Delete FieldDeclaration(75)", "Delete TextElement: Construct a raw matrix. Just create a table in HBase.(76)", "Delete TagElement(77)", "Delete SimpleName: conf(78)", "Delete TextElement:  configuration object(79)", "Delete TagElement: @param(80)", "Delete SimpleName: m(81)", "Delete TextElement:  the number of rows.(82)", "Delete TagElement: @param(83)", "Delete SimpleName: n(84)", "Delete TextElement:  the number of columns.(85)", "Delete TagElement: @param(86)", "Delete SimpleName: IOException(87)", "Delete TextElement:  throw the exception to let the user know what happend,(88)", "Delete TextElement: if we didn't create the matrix successfully.(89)", "Delete TagElement: @throws(90)", "Delete Javadoc(91)", "Delete Modifier: public(92)", "Delete SimpleName: DenseMatrix(93)", "Delete SimpleName: HamaConfiguration(94)", "Delete SimpleType: HamaConfiguration(95)", "Delete SimpleName: conf(96)", "Delete SingleVariableDeclaration(97)", "Delete PrimitiveType: int(98)", "Delete SimpleName: m(99)", "Delete SingleVariableDeclaration(100)", "Delete PrimitiveType: int(101)", "Delete SimpleName: n(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: IOException(104)", "Delete SimpleType: IOException(105)", "Delete SimpleName: setConfiguration(106)", "Delete SimpleName: conf(107)", "Delete MethodInvocation(108)", "Delete ExpressionStatement(109)", "Delete SimpleName: tryToCreateTable(110)", "Delete SimpleName: TABLE_PREFIX(111)", "Delete MethodInvocation(112)", "Delete ExpressionStatement(113)", "Delete SimpleName: closed(114)", "Delete BooleanLiteral: false(115)", "Delete Assignment: =(116)", "Delete ExpressionStatement(117)", "Delete ThisExpression(118)", "Delete SimpleName: setDimension(119)", "Delete SimpleName: m(120)", "Delete SimpleName: n(121)", "Delete MethodInvocation(122)", "Delete ExpressionStatement(123)", "Delete Block(124)", "Delete MethodDeclaration(125)", "Delete TextElement: Create/load a matrix aliased as 'matrixName'.(126)", "Delete TagElement(127)", "Delete SimpleName: conf(128)", "Delete TextElement:  configuration object(129)", "Delete TagElement: @param(130)", "Delete SimpleName: matrixName(131)", "Delete TextElement:  the name of the matrix(132)", "Delete TagElement: @param(133)", "Delete SimpleName: force(134)", "Delete TextElement:  if force is true, a new matrix will be created no matter(135)", "Delete TextElement: 'matrixName' has aliased to an existed matrix; otherwise, just try(136)", "Delete TextElement: to load an existed matrix alised 'matrixName'.(137)", "Delete TagElement: @param(138)", "Delete SimpleName: IOException(139)", "Delete TagElement: @throws(140)", "Delete Javadoc(141)", "Delete Modifier: public(142)", "Delete SimpleName: DenseMatrix(143)", "Delete SimpleName: HamaConfiguration(144)", "Delete SimpleType: HamaConfiguration(145)", "Delete SimpleName: conf(146)", "Delete SingleVariableDeclaration(147)", "Delete SimpleName: String(148)", "Delete SimpleType: String(149)", "Delete SimpleName: matrixName(150)", "Delete SingleVariableDeclaration(151)", "Delete PrimitiveType: boolean(152)", "Delete SimpleName: force(153)", "Delete SingleVariableDeclaration(154)", "Delete SimpleName: IOException(155)", "Delete SimpleType: IOException(156)", "Delete SimpleName: setConfiguration(157)", "Delete SimpleName: conf(158)", "Delete MethodInvocation(159)", "Delete ExpressionStatement(160)", "Delete PrimitiveType: boolean(161)", "Delete SimpleName: existed(162)", "Delete SimpleName: hamaAdmin(163)", "Delete SimpleName: matrixExists(164)", "Delete SimpleName: matrixName(165)", "Delete MethodInvocation(166)", "Delete VariableDeclarationFragment(167)", "Delete VariableDeclarationStatement(168)", "Delete SimpleName: force(169)", "Delete SimpleName: existed(170)", "Delete SimpleName: hamaAdmin(171)", "Delete SimpleName: delete(172)", "Delete SimpleName: matrixName(173)", "Delete MethodInvocation(174)", "Delete ExpressionStatement(175)", "Delete Block(176)", "Delete IfStatement(177)", "Delete SimpleName: tryToCreateTable(178)", "Delete SimpleName: TABLE_PREFIX(179)", "Delete MethodInvocation(180)", "Delete ExpressionStatement(181)", "Delete SimpleName: save(182)", "Delete SimpleName: matrixName(183)", "Delete MethodInvocation(184)", "Delete ExpressionStatement(185)", "Delete Block(186)", "Delete SimpleName: existed(187)", "Delete SimpleName: matrixPath(188)", "Delete SimpleName: hamaAdmin(189)", "Delete SimpleName: getPath(190)", "Delete SimpleName: matrixName(191)", "Delete MethodInvocation(192)", "Delete Assignment: =(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: table(195)", "Delete SimpleName: HTable(196)", "Delete SimpleType: HTable(197)", "Delete SimpleName: conf(198)", "Delete SimpleName: matrixPath(199)", "Delete ClassInstanceCreation(200)", "Delete Assignment: =(201)", "Delete ExpressionStatement(202)", "Delete SimpleName: incrementAndGetRef(203)", "Delete MethodInvocation(204)", "Delete ExpressionStatement(205)", "Delete Block(206)", "Delete SimpleName: IOException(207)", "Delete SimpleType: IOException(208)", "Delete StringLiteral: \"Try to load non-existed matrix alised as \"(209)", "Delete SimpleName: matrixName(210)", "Delete InfixExpression: +(211)", "Delete ClassInstanceCreation(212)", "Delete ThrowStatement(213)", "Delete Block(214)", "Delete IfStatement(215)", "Delete Block(216)", "Delete IfStatement(217)", "Delete SimpleName: closed(218)", "Delete BooleanLiteral: false(219)", "Delete Assignment: =(220)", "Delete ExpressionStatement(221)", "Delete Block(222)", "Delete MethodDeclaration(223)", "Delete TextElement: Load a matrix from an existed matrix table whose tablename is 'matrixpath'(224)", "Delete TextElement: !! It is an internal used for map/reduce.(225)", "Delete TagElement(226)", "Delete SimpleName: conf(227)", "Delete TextElement:  configuration object(228)", "Delete TagElement: @param(229)", "Delete SimpleName: matrixpath(230)", "Delete TagElement: @param(231)", "Delete SimpleName: IOException(232)", "Delete TagElement: @throws(233)", "Delete SimpleName: IOException(234)", "Delete TagElement: @throws(235)", "Delete Javadoc(236)", "Delete Modifier: public(237)", "Delete SimpleName: DenseMatrix(238)", "Delete SimpleName: HamaConfiguration(239)", "Delete SimpleType: HamaConfiguration(240)", "Delete SimpleName: conf(241)", "Delete SingleVariableDeclaration(242)", "Delete SimpleName: String(243)", "Delete SimpleType: String(244)", "Delete SimpleName: matrixpath(245)", "Delete SingleVariableDeclaration(246)", "Delete SimpleName: IOException(247)", "Delete SimpleType: IOException(248)", "Delete SimpleName: setConfiguration(249)", "Delete SimpleName: conf(250)", "Delete MethodInvocation(251)", "Delete ExpressionStatement(252)", "Delete SimpleName: matrixPath(253)", "Delete SimpleName: matrixpath(254)", "Delete Assignment: =(255)", "Delete ExpressionStatement(256)", "Delete SimpleName: table(257)", "Delete SimpleName: HTable(258)", "Delete SimpleType: HTable(259)", "Delete SimpleName: conf(260)", "Delete SimpleName: matrixPath(261)", "Delete ClassInstanceCreation(262)", "Delete Assignment: =(263)", "Delete ExpressionStatement(264)", "Delete Block(265)", "Delete MethodDeclaration(266)", "Delete TextElement: Create an m-by-n constant matrix.(267)", "Delete TagElement(268)", "Delete SimpleName: conf(269)", "Delete TextElement:  configuration object(270)", "Delete TagElement: @param(271)", "Delete SimpleName: m(272)", "Delete TextElement:  the number of rows.(273)", "Delete TagElement: @param(274)", "Delete SimpleName: n(275)", "Delete TextElement:  the number of columns.(276)", "Delete TagElement: @param(277)", "Delete SimpleName: s(278)", "Delete TextElement:  fill the matrix with this scalar value.(279)", "Delete TagElement: @param(280)", "Delete SimpleName: IOException(281)", "Delete TextElement:  throw the exception to let the user know what happend,(282)", "Delete TextElement: if we didn't create the matrix successfully.(283)", "Delete TagElement: @throws(284)", "Delete Javadoc(285)", "Delete Modifier: public(286)", "Delete SimpleName: DenseMatrix(287)", "Delete SimpleName: HamaConfiguration(288)", "Delete SimpleType: HamaConfiguration(289)", "Delete SimpleName: conf(290)", "Delete SingleVariableDeclaration(291)", "Delete PrimitiveType: int(292)", "Delete SimpleName: m(293)", "Delete SingleVariableDeclaration(294)", "Delete PrimitiveType: int(295)", "Delete SimpleName: n(296)", "Delete SingleVariableDeclaration(297)", "Delete PrimitiveType: double(298)", "Delete SimpleName: s(299)", "Delete SingleVariableDeclaration(300)", "Delete SimpleName: IOException(301)", "Delete SimpleType: IOException(302)", "Delete SimpleName: setConfiguration(303)", "Delete SimpleName: conf(304)", "Delete MethodInvocation(305)", "Delete ExpressionStatement(306)", "Delete SimpleName: tryToCreateTable(307)", "Delete SimpleName: TABLE_PREFIX(308)", "Delete MethodInvocation(309)", "Delete ExpressionStatement(310)", "Delete SimpleName: closed(311)", "Delete BooleanLiteral: false(312)", "Delete Assignment: =(313)", "Delete ExpressionStatement(314)", "Delete PrimitiveType: int(315)", "Delete SimpleName: i(316)", "Delete NumberLiteral: 0(317)", "Delete VariableDeclarationFragment(318)", "Delete VariableDeclarationExpression(319)", "Delete SimpleName: i(320)", "Delete SimpleName: m(321)", "Delete InfixExpression: <(322)", "Delete SimpleName: i(323)", "Delete PostfixExpression: ++(324)", "Delete PrimitiveType: int(325)", "Delete SimpleName: j(326)", "Delete NumberLiteral: 0(327)", "Delete VariableDeclarationFragment(328)", "Delete VariableDeclarationExpression(329)", "Delete SimpleName: j(330)", "Delete SimpleName: n(331)", "Delete InfixExpression: <(332)", "Delete SimpleName: j(333)", "Delete PostfixExpression: ++(334)", "Delete SimpleName: set(335)", "Delete SimpleName: i(336)", "Delete SimpleName: j(337)", "Delete SimpleName: s(338)", "Delete MethodInvocation(339)", "Delete ExpressionStatement(340)", "Delete Block(341)", "Delete ForStatement(342)", "Delete Block(343)", "Delete ForStatement(344)", "Delete SimpleName: setDimension(345)", "Delete SimpleName: m(346)", "Delete SimpleName: n(347)", "Delete MethodInvocation(348)", "Delete ExpressionStatement(349)", "Delete Block(350)", "Delete MethodDeclaration(351)", "Delete TextElement: Generate matrix with random elements(352)", "Delete TagElement(353)", "Delete SimpleName: conf(354)", "Delete TextElement:  configuration object(355)", "Delete TagElement: @param(356)", "Delete SimpleName: m(357)", "Delete TextElement:  the number of rows.(358)", "Delete TagElement: @param(359)", "Delete SimpleName: n(360)", "Delete TextElement:  the number of columns.(361)", "Delete TagElement: @param(362)", "Delete TextElement:  an m-by-n matrix with uniformly distributed random elements.(363)", "Delete TagElement: @return(364)", "Delete SimpleName: IOException(365)", "Delete TagElement: @throws(366)", "Delete Javadoc(367)", "Delete Modifier: public(368)", "Delete Modifier: static(369)", "Delete SimpleName: DenseMatrix(370)", "Delete SimpleType: DenseMatrix(371)", "Delete SimpleName: random(372)", "Delete SimpleName: HamaConfiguration(373)", "Delete SimpleType: HamaConfiguration(374)", "Delete SimpleName: conf(375)", "Delete SingleVariableDeclaration(376)", "Delete PrimitiveType: int(377)", "Delete SimpleName: m(378)", "Delete SingleVariableDeclaration(379)", "Delete PrimitiveType: int(380)", "Delete SimpleName: n(381)", "Delete SingleVariableDeclaration(382)", "Delete SimpleName: IOException(383)", "Delete SimpleType: IOException(384)", "Delete SimpleName: DenseMatrix(385)", "Delete SimpleType: DenseMatrix(386)", "Delete SimpleName: rand(387)", "Delete SimpleName: DenseMatrix(388)", "Delete SimpleType: DenseMatrix(389)", "Delete SimpleName: conf(390)", "Delete SimpleName: m(391)", "Delete SimpleName: n(392)", "Delete ClassInstanceCreation(393)", "Delete VariableDeclarationFragment(394)", "Delete VariableDeclarationStatement(395)", "Delete SimpleName: DenseVector(396)", "Delete SimpleType: DenseVector(397)", "Delete SimpleName: vector(398)", "Delete SimpleName: DenseVector(399)", "Delete SimpleType: DenseVector(400)", "Delete ClassInstanceCreation(401)", "Delete VariableDeclarationFragment(402)", "Delete VariableDeclarationStatement(403)", "Delete SimpleName: LOG(404)", "Delete SimpleName: info(405)", "Delete StringLiteral: \"Create the \"(406)", "Delete SimpleName: m(407)", "Delete StringLiteral: \" * \"(408)", "Delete SimpleName: n(409)", "Delete StringLiteral: \" random matrix : \"(410)", "Delete SimpleName: rand(411)", "Delete SimpleName: getPath(412)", "Delete MethodInvocation(413)", "Delete InfixExpression: +(414)", "Delete MethodInvocation(415)", "Delete ExpressionStatement(416)", "Delete PrimitiveType: int(417)", "Delete SimpleName: i(418)", "Delete NumberLiteral: 0(419)", "Delete VariableDeclarationFragment(420)", "Delete VariableDeclarationExpression(421)", "Delete SimpleName: i(422)", "Delete SimpleName: m(423)", "Delete InfixExpression: <(424)", "Delete SimpleName: i(425)", "Delete PostfixExpression: ++(426)", "Delete SimpleName: vector(427)", "Delete SimpleName: clear(428)", "Delete MethodInvocation(429)", "Delete ExpressionStatement(430)", "Delete PrimitiveType: int(431)", "Delete SimpleName: j(432)", "Delete NumberLiteral: 0(433)", "Delete VariableDeclarationFragment(434)", "Delete VariableDeclarationExpression(435)", "Delete SimpleName: j(436)", "Delete SimpleName: n(437)", "Delete InfixExpression: <(438)", "Delete SimpleName: j(439)", "Delete PostfixExpression: ++(440)", "Delete SimpleName: vector(441)", "Delete SimpleName: set(442)", "Delete SimpleName: j(443)", "Delete SimpleName: RandomVariable(444)", "Delete SimpleName: rand(445)", "Delete MethodInvocation(446)", "Delete MethodInvocation(447)", "Delete ExpressionStatement(448)", "Delete Block(449)", "Delete ForStatement(450)", "Delete SimpleName: rand(451)", "Delete SimpleName: setRow(452)", "Delete SimpleName: i(453)", "Delete SimpleName: vector(454)", "Delete MethodInvocation(455)", "Delete ExpressionStatement(456)", "Delete Block(457)", "Delete ForStatement(458)", "Delete SimpleName: rand(459)", "Delete ReturnStatement(460)", "Delete Block(461)", "Delete MethodDeclaration(462)", "Delete TextElement: Generate identity matrix(463)", "Delete TagElement(464)", "Delete SimpleName: conf(465)", "Delete TextElement:  configuration object(466)", "Delete TagElement: @param(467)", "Delete SimpleName: m(468)", "Delete TextElement:  the number of rows.(469)", "Delete TagElement: @param(470)", "Delete SimpleName: n(471)", "Delete TextElement:  the number of columns.(472)", "Delete TagElement: @param(473)", "Delete TextElement:  an m-by-n matrix with ones on the diagonal and zeros elsewhere.(474)", "Delete TagElement: @return(475)", "Delete SimpleName: IOException(476)", "Delete TagElement: @throws(477)", "Delete Javadoc(478)", "Delete Modifier: public(479)", "Delete Modifier: static(480)", "Delete SimpleName: DenseMatrix(481)", "Delete SimpleType: DenseMatrix(482)", "Delete SimpleName: identity(483)", "Delete SimpleName: HamaConfiguration(484)", "Delete SimpleType: HamaConfiguration(485)", "Delete SimpleName: conf(486)", "Delete SingleVariableDeclaration(487)", "Delete PrimitiveType: int(488)", "Delete SimpleName: m(489)", "Delete SingleVariableDeclaration(490)", "Delete PrimitiveType: int(491)", "Delete SimpleName: n(492)", "Delete SingleVariableDeclaration(493)", "Delete SimpleName: IOException(494)", "Delete SimpleType: IOException(495)", "Delete SimpleName: DenseMatrix(496)", "Delete SimpleType: DenseMatrix(497)", "Delete SimpleName: identity(498)", "Delete SimpleName: DenseMatrix(499)", "Delete SimpleType: DenseMatrix(500)", "Delete SimpleName: conf(501)", "Delete SimpleName: m(502)", "Delete SimpleName: n(503)", "Delete ClassInstanceCreation(504)", "Delete VariableDeclarationFragment(505)", "Delete VariableDeclarationStatement(506)", "Delete SimpleName: LOG(507)", "Delete SimpleName: info(508)", "Delete StringLiteral: \"Create the \"(509)", "Delete SimpleName: m(510)", "Delete StringLiteral: \" * \"(511)", "Delete SimpleName: n(512)", "Delete StringLiteral: \" identity matrix : \"(513)", "Delete SimpleName: identity(514)", "Delete SimpleName: getPath(515)", "Delete MethodInvocation(516)", "Delete InfixExpression: +(517)", "Delete MethodInvocation(518)", "Delete ExpressionStatement(519)", "Delete PrimitiveType: int(520)", "Delete SimpleName: i(521)", "Delete NumberLiteral: 0(522)", "Delete VariableDeclarationFragment(523)", "Delete VariableDeclarationExpression(524)", "Delete SimpleName: i(525)", "Delete SimpleName: m(526)", "Delete InfixExpression: <(527)", "Delete SimpleName: i(528)", "Delete PostfixExpression: ++(529)", "Delete SimpleName: DenseVector(530)", "Delete SimpleType: DenseVector(531)", "Delete SimpleName: vector(532)", "Delete SimpleName: DenseVector(533)", "Delete SimpleType: DenseVector(534)", "Delete ClassInstanceCreation(535)", "Delete VariableDeclarationFragment(536)", "Delete VariableDeclarationStatement(537)", "Delete PrimitiveType: int(538)", "Delete SimpleName: j(539)", "Delete NumberLiteral: 0(540)", "Delete VariableDeclarationFragment(541)", "Delete VariableDeclarationExpression(542)", "Delete SimpleName: j(543)", "Delete SimpleName: n(544)", "Delete InfixExpression: <(545)", "Delete SimpleName: j(546)", "Delete PostfixExpression: ++(547)", "Delete SimpleName: vector(548)", "Delete SimpleName: set(549)", "Delete SimpleName: j(550)", "Delete SimpleName: i(551)", "Delete SimpleName: j(552)", "Delete InfixExpression: ==(553)", "Delete NumberLiteral: 1.0(554)", "Delete NumberLiteral: 0.0(555)", "Delete ConditionalExpression(556)", "Delete ParenthesizedExpression(557)", "Delete MethodInvocation(558)", "Delete ExpressionStatement(559)", "Delete Block(560)", "Delete ForStatement(561)", "Delete SimpleName: identity(562)", "Delete SimpleName: setRow(563)", "Delete SimpleName: i(564)", "Delete SimpleName: vector(565)", "Delete MethodInvocation(566)", "Delete ExpressionStatement(567)", "Delete Block(568)", "Delete ForStatement(569)", "Delete SimpleName: identity(570)", "Delete ReturnStatement(571)", "Delete Block(572)", "Delete MethodDeclaration(573)", "Delete TextElement: Gets the double value of (i, j)(574)", "Delete TagElement(575)", "Delete SimpleName: i(576)", "Delete TextElement:  ith row of the matrix(577)", "Delete TagElement: @param(578)", "Delete SimpleName: j(579)", "Delete TextElement:  jth column of the matrix(580)", "Delete TagElement: @param(581)", "Delete TextElement:  the value of entry, or zero If entry is null(582)", "Delete TagElement: @return(583)", "Delete SimpleName: IOException(584)", "Delete TagElement: @throws(585)", "Delete Javadoc(586)", "Delete Modifier: public(587)", "Delete PrimitiveType: double(588)", "Delete SimpleName: get(589)", "Delete PrimitiveType: int(590)", "Delete SimpleName: i(591)", "Delete SingleVariableDeclaration(592)", "Delete PrimitiveType: int(593)", "Delete SimpleName: j(594)", "Delete SingleVariableDeclaration(595)", "Delete SimpleName: IOException(596)", "Delete SimpleType: IOException(597)", "Delete ThisExpression(598)", "Delete SimpleName: getRows(599)", "Delete MethodInvocation(600)", "Delete SimpleName: i(601)", "Delete InfixExpression: <(602)", "Delete ThisExpression(603)", "Delete SimpleName: getColumns(604)", "Delete MethodInvocation(605)", "Delete SimpleName: j(606)", "Delete InfixExpression: <(607)", "Delete InfixExpression: ||(608)", "Delete SimpleName: ArrayIndexOutOfBoundsException(609)", "Delete SimpleType: ArrayIndexOutOfBoundsException(610)", "Delete SimpleName: i(611)", "Delete StringLiteral: \", \"(612)", "Delete SimpleName: j(613)", "Delete InfixExpression: +(614)", "Delete ClassInstanceCreation(615)", "Delete ThrowStatement(616)", "Delete IfStatement(617)", "Delete SimpleName: Get(618)", "Delete SimpleType: Get(619)", "Delete SimpleName: get(620)", "Delete SimpleName: Get(621)", "Delete SimpleType: Get(622)", "Delete SimpleName: BytesUtil(623)", "Delete SimpleName: getRowIndex(624)", "Delete SimpleName: i(625)", "Delete MethodInvocation(626)", "Delete ClassInstanceCreation(627)", "Delete VariableDeclarationFragment(628)", "Delete VariableDeclarationStatement(629)", "Delete SimpleName: get(630)", "Delete SimpleName: addColumn(631)", "Delete QualifiedName: Constants.COLUMNFAMILY(632)", "Delete MethodInvocation(633)", "Delete ExpressionStatement(634)", "Delete PrimitiveType: byte(635)", "Delete Dimension(636)", "Delete ArrayType: byte[](637)", "Delete SimpleName: result(638)", "Delete SimpleName: table(639)", "Delete SimpleName: get(640)", "Delete SimpleName: get(641)", "Delete MethodInvocation(642)", "Delete SimpleName: getValue(643)", "Delete QualifiedName: Constants.COLUMNFAMILY(644)", "Delete SimpleName: Bytes(645)", "Delete SimpleName: toBytes(646)", "Delete SimpleName: String(647)", "Delete SimpleName: valueOf(648)", "Delete SimpleName: j(649)", "Delete MethodInvocation(650)", "Delete MethodInvocation(651)", "Delete MethodInvocation(652)", "Delete VariableDeclarationFragment(653)", "Delete VariableDeclarationStatement(654)", "Delete SimpleName: result(655)", "Delete NullLiteral(656)", "Delete InfixExpression: ==(657)", "Delete SimpleName: NullPointerException(658)", "Delete SimpleType: NullPointerException(659)", "Delete StringLiteral: \"Unexpected null\"(660)", "Delete ClassInstanceCreation(661)", "Delete ThrowStatement(662)", "Delete IfStatement(663)", "Delete SimpleName: Bytes(664)", "Delete SimpleName: toDouble(665)", "Delete SimpleName: result(666)", "Delete MethodInvocation(667)", "Delete ReturnStatement(668)", "Delete Block(669)", "Delete MethodDeclaration(670)", "Delete TextElement: Gets the vector of row(671)", "Delete TagElement(672)", "Delete SimpleName: i(673)", "Delete TextElement:  the row index of the matrix(674)", "Delete TagElement: @param(675)", "Delete TextElement:  the vector of row(676)", "Delete TagElement: @return(677)", "Delete SimpleName: IOException(678)", "Delete TagElement: @throws(679)", "Delete Javadoc(680)", "Delete Modifier: public(681)", "Delete SimpleName: DenseVector(682)", "Delete SimpleType: DenseVector(683)", "Delete SimpleName: getRow(684)", "Delete PrimitiveType: int(685)", "Delete SimpleName: i(686)", "Delete SingleVariableDeclaration(687)", "Delete SimpleName: IOException(688)", "Delete SimpleType: IOException(689)", "Delete SimpleName: Get(690)", "Delete SimpleType: Get(691)", "Delete SimpleName: get(692)", "Delete SimpleName: Get(693)", "Delete SimpleType: Get(694)", "Delete SimpleName: BytesUtil(695)", "Delete SimpleName: getRowIndex(696)", "Delete SimpleName: i(697)", "Delete MethodInvocation(698)", "Delete ClassInstanceCreation(699)", "Delete VariableDeclarationFragment(700)", "Delete VariableDeclarationStatement(701)", "Delete SimpleName: get(702)", "Delete SimpleName: addFamily(703)", "Delete QualifiedName: Constants.COLUMNFAMILY(704)", "Delete MethodInvocation(705)", "Delete ExpressionStatement(706)", "Delete SimpleName: Result(707)", "Delete SimpleType: Result(708)", "Delete SimpleName: r(709)", "Delete SimpleName: table(710)", "Delete SimpleName: get(711)", "Delete SimpleName: get(712)", "Delete MethodInvocation(713)", "Delete VariableDeclarationFragment(714)", "Delete VariableDeclarationStatement(715)", "Delete SimpleName: DenseVector(716)", "Delete SimpleType: DenseVector(717)", "Delete SimpleName: r(718)", "Delete ClassInstanceCreation(719)", "Delete ReturnStatement(720)", "Delete Block(721)", "Delete MethodDeclaration(722)", "Delete TextElement: Gets the vector of column(723)", "Delete TagElement(724)", "Delete SimpleName: j(725)", "Delete TextElement:  the column index of the matrix(726)", "Delete TagElement: @param(727)", "Delete TextElement:  the vector of column(728)", "Delete TagElement: @return(729)", "Delete SimpleName: IOException(730)", "Delete TagElement: @throws(731)", "Delete Javadoc(732)", "Delete Modifier: public(733)", "Delete SimpleName: DenseVector(734)", "Delete SimpleType: DenseVector(735)", "Delete SimpleName: getColumn(736)", "Delete PrimitiveType: int(737)", "Delete SimpleName: j(738)", "Delete SingleVariableDeclaration(739)", "Delete SimpleName: IOException(740)", "Delete SimpleType: IOException(741)", "Delete SimpleName: Scan(742)", "Delete SimpleType: Scan(743)", "Delete SimpleName: scan(744)", "Delete SimpleName: Scan(745)", "Delete SimpleType: Scan(746)", "Delete ClassInstanceCreation(747)", "Delete VariableDeclarationFragment(748)", "Delete VariableDeclarationStatement(749)", "Delete SimpleName: scan(750)", "Delete SimpleName: addColumn(751)", "Delete QualifiedName: Constants.COLUMNFAMILY(752)", "Delete SimpleName: Bytes(753)", "Delete SimpleName: toBytes(754)", "Delete SimpleName: String(755)", "Delete SimpleName: valueOf(756)", "Delete SimpleName: j(757)", "Delete MethodInvocation(758)", "Delete MethodInvocation(759)", "Delete MethodInvocation(760)", "Delete ExpressionStatement(761)", "Delete SimpleName: ResultScanner(762)", "Delete SimpleType: ResultScanner(763)", "Delete SimpleName: s(764)", "Delete SimpleName: table(765)", "Delete SimpleName: getScanner(766)", "Delete SimpleName: scan(767)", "Delete MethodInvocation(768)", "Delete VariableDeclarationFragment(769)", "Delete VariableDeclarationStatement(770)", "Delete SimpleName: Result(771)", "Delete SimpleType: Result(772)", "Delete SimpleName: r(773)", "Delete NullLiteral(774)", "Delete VariableDeclarationFragment(775)", "Delete VariableDeclarationStatement(776)", "Delete SimpleName: MapWritable(777)", "Delete SimpleType: MapWritable(778)", "Delete SimpleName: trunk(779)", "Delete SimpleName: MapWritable(780)", "Delete SimpleType: MapWritable(781)", "Delete ClassInstanceCreation(782)", "Delete VariableDeclarationFragment(783)", "Delete VariableDeclarationStatement(784)", "Delete SimpleName: r(785)", "Delete SimpleName: s(786)", "Delete SimpleName: next(787)", "Delete MethodInvocation(788)", "Delete Assignment: =(789)", "Delete ParenthesizedExpression(790)", "Delete NullLiteral(791)", "Delete InfixExpression: !=(792)", "Delete PrimitiveType: byte(793)", "Delete Dimension(794)", "Delete ArrayType: byte[](795)", "Delete SimpleName: value(796)", "Delete SimpleName: r(797)", "Delete SimpleName: getValue(798)", "Delete QualifiedName: Constants.COLUMNFAMILY(799)", "Delete SimpleName: Bytes(800)", "Delete SimpleName: toBytes(801)", "Delete SimpleName: String(802)", "Delete SimpleName: valueOf(803)", "Delete SimpleName: j(804)", "Delete MethodInvocation(805)", "Delete MethodInvocation(806)", "Delete MethodInvocation(807)", "Delete VariableDeclarationFragment(808)", "Delete VariableDeclarationStatement(809)", "Delete SimpleName: LOG(810)", "Delete SimpleName: info(811)", "Delete SimpleName: Bytes(812)", "Delete SimpleName: toString(813)", "Delete SimpleName: r(814)", "Delete SimpleName: getRow(815)", "Delete MethodInvocation(816)", "Delete MethodInvocation(817)", "Delete MethodInvocation(818)", "Delete ExpressionStatement(819)", "Delete SimpleName: trunk(820)", "Delete SimpleName: put(821)", "Delete SimpleName: IntWritable(822)", "Delete SimpleType: IntWritable(823)", "Delete SimpleName: BytesUtil(824)", "Delete SimpleName: getRowIndex(825)", "Delete SimpleName: r(826)", "Delete SimpleName: getRow(827)", "Delete MethodInvocation(828)", "Delete MethodInvocation(829)", "Delete ClassInstanceCreation(830)", "Delete SimpleName: DoubleWritable(831)", "Delete SimpleType: DoubleWritable(832)", "Delete SimpleName: Bytes(833)", "Delete SimpleName: toDouble(834)", "Delete SimpleName: value(835)", "Delete MethodInvocation(836)", "Delete ClassInstanceCreation(837)", "Delete MethodInvocation(838)", "Delete ExpressionStatement(839)", "Delete Block(840)", "Delete WhileStatement(841)", "Delete SimpleName: DenseVector(842)", "Delete SimpleType: DenseVector(843)", "Delete SimpleName: trunk(844)", "Delete ClassInstanceCreation(845)", "Delete ReturnStatement(846)", "Delete Block(847)", "Delete MethodDeclaration(848)", "Delete TagElement: @inheritDoc(849)", "Delete TextElement:  (850)", "Delete TagElement(851)", "Delete Javadoc(852)", "Delete Modifier: public(853)", "Delete PrimitiveType: void(854)", "Delete SimpleName: set(855)", "Delete PrimitiveType: int(856)", "Delete SimpleName: i(857)", "Delete SingleVariableDeclaration(858)", "Delete PrimitiveType: int(859)", "Delete SimpleName: j(860)", "Delete SingleVariableDeclaration(861)", "Delete PrimitiveType: double(862)", "Delete SimpleName: value(863)", "Delete SingleVariableDeclaration(864)", "Delete SimpleName: IOException(865)", "Delete SimpleType: IOException(866)", "Delete ThisExpression(867)", "Delete SimpleName: getRows(868)", "Delete MethodInvocation(869)", "Delete SimpleName: i(870)", "Delete InfixExpression: <(871)", "Delete ThisExpression(872)", "Delete SimpleName: getColumns(873)", "Delete MethodInvocation(874)", "Delete SimpleName: j(875)", "Delete InfixExpression: <(876)", "Delete InfixExpression: ||(877)", "Delete SimpleName: ArrayIndexOutOfBoundsException(878)", "Delete SimpleType: ArrayIndexOutOfBoundsException(879)", "Delete ThisExpression(880)", "Delete SimpleName: getRows(881)", "Delete MethodInvocation(882)", "Delete StringLiteral: \", \"(883)", "Delete ThisExpression(884)", "Delete SimpleName: getColumns(885)", "Delete MethodInvocation(886)", "Delete StringLiteral: \": \"(887)", "Delete SimpleName: i(888)", "Delete StringLiteral: \", \"(889)", "Delete SimpleName: j(890)", "Delete InfixExpression: +(891)", "Delete ClassInstanceCreation(892)", "Delete ThrowStatement(893)", "Delete IfStatement(894)", "Delete SimpleName: Put(895)", "Delete SimpleType: Put(896)", "Delete SimpleName: put(897)", "Delete SimpleName: Put(898)", "Delete SimpleType: Put(899)", "Delete SimpleName: BytesUtil(900)", "Delete SimpleName: getRowIndex(901)", "Delete SimpleName: i(902)", "Delete MethodInvocation(903)", "Delete ClassInstanceCreation(904)", "Delete VariableDeclarationFragment(905)", "Delete VariableDeclarationStatement(906)", "Delete SimpleName: put(907)", "Delete SimpleName: add(908)", "Delete QualifiedName: Constants.COLUMNFAMILY(909)", "Delete SimpleName: Bytes(910)", "Delete SimpleName: toBytes(911)", "Delete SimpleName: String(912)", "Delete SimpleName: valueOf(913)", "Delete SimpleName: j(914)", "Delete MethodInvocation(915)", "Delete MethodInvocation(916)", "Delete SimpleName: Bytes(917)", "Delete SimpleName: toBytes(918)", "Delete SimpleName: value(919)", "Delete MethodInvocation(920)", "Delete MethodInvocation(921)", "Delete ExpressionStatement(922)", "Delete SimpleName: table(923)", "Delete SimpleName: put(924)", "Delete SimpleName: put(925)", "Delete MethodInvocation(926)", "Delete ExpressionStatement(927)", "Delete Block(928)", "Delete MethodDeclaration(929)", "Delete TextElement: Set the row of a matrix to a given vector(930)", "Delete TagElement(931)", "Delete SimpleName: row(932)", "Delete TagElement: @param(933)", "Delete SimpleName: vector(934)", "Delete TagElement: @param(935)", "Delete SimpleName: IOException(936)", "Delete TagElement: @throws(937)", "Delete Javadoc(938)", "Delete Modifier: public(939)", "Delete PrimitiveType: void(940)", "Delete SimpleName: setRow(941)", "Delete PrimitiveType: int(942)", "Delete SimpleName: row(943)", "Delete SingleVariableDeclaration(944)", "Delete SimpleName: Vector(945)", "Delete SimpleType: Vector(946)", "Delete SimpleName: vector(947)", "Delete SingleVariableDeclaration(948)", "Delete SimpleName: IOException(949)", "Delete SimpleType: IOException(950)", "Delete ThisExpression(951)", "Delete SimpleName: getRows(952)", "Delete MethodInvocation(953)", "Delete SimpleName: row(954)", "Delete InfixExpression: <(955)", "Delete ThisExpression(956)", "Delete SimpleName: getColumns(957)", "Delete MethodInvocation(958)", "Delete SimpleName: vector(959)", "Delete SimpleName: size(960)", "Delete MethodInvocation(961)", "Delete InfixExpression: <(962)", "Delete InfixExpression: ||(963)", "Delete SimpleName: ArrayIndexOutOfBoundsException(964)", "Delete SimpleType: ArrayIndexOutOfBoundsException(965)", "Delete SimpleName: row(966)", "Delete ClassInstanceCreation(967)", "Delete ThrowStatement(968)", "Delete IfStatement(969)", "Delete SimpleName: Put(970)", "Delete SimpleType: Put(971)", "Delete SimpleName: put(972)", "Delete SimpleName: Put(973)", "Delete SimpleType: Put(974)", "Delete SimpleName: BytesUtil(975)", "Delete SimpleName: getRowIndex(976)", "Delete SimpleName: row(977)", "Delete MethodInvocation(978)", "Delete ClassInstanceCreation(979)", "Delete VariableDeclarationFragment(980)", "Delete VariableDeclarationStatement(981)", "Delete QualifiedName: Map.Entry(982)", "Delete SimpleType: Map.Entry(983)", "Delete SimpleName: Writable(984)", "Delete SimpleType: Writable(985)", "Delete SimpleName: Writable(986)", "Delete SimpleType: Writable(987)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(988)", "Delete SimpleName: e(989)", "Delete SingleVariableDeclaration(990)", "Delete SimpleName: vector(991)", "Delete SimpleName: getEntries(992)", "Delete MethodInvocation(993)", "Delete SimpleName: entrySet(994)", "Delete MethodInvocation(995)", "Delete SimpleName: put(996)", "Delete SimpleName: add(997)", "Delete QualifiedName: Constants.COLUMNFAMILY(998)", "Delete SimpleName: Bytes(999)", "Delete SimpleName: toBytes(1000)", "Delete SimpleName: String(1001)", "Delete SimpleName: valueOf(1002)", "Delete SimpleName: IntWritable(1003)", "Delete SimpleType: IntWritable(1004)", "Delete SimpleName: e(1005)", "Delete SimpleName: getKey(1006)", "Delete MethodInvocation(1007)", "Delete CastExpression(1008)", "Delete ParenthesizedExpression(1009)", "Delete SimpleName: get(1010)", "Delete MethodInvocation(1011)", "Delete MethodInvocation(1012)", "Delete MethodInvocation(1013)", "Delete SimpleName: Bytes(1014)", "Delete SimpleName: toBytes(1015)", "Delete SimpleName: DoubleWritable(1016)", "Delete SimpleType: DoubleWritable(1017)", "Delete SimpleName: e(1018)", "Delete SimpleName: getValue(1019)", "Delete MethodInvocation(1020)", "Delete CastExpression(1021)", "Delete ParenthesizedExpression(1022)", "Delete SimpleName: get(1023)", "Delete MethodInvocation(1024)", "Delete MethodInvocation(1025)", "Delete MethodInvocation(1026)", "Delete ExpressionStatement(1027)", "Delete Block(1028)", "Delete EnhancedForStatement(1029)", "Delete SimpleName: table(1030)", "Delete SimpleName: put(1031)", "Delete SimpleName: put(1032)", "Delete MethodInvocation(1033)", "Delete ExpressionStatement(1034)", "Delete Block(1035)", "Delete MethodDeclaration(1036)", "Delete TextElement: Set the column of a matrix to a given vector(1037)", "Delete TagElement(1038)", "Delete SimpleName: column(1039)", "Delete TagElement: @param(1040)", "Delete SimpleName: vector(1041)", "Delete TagElement: @param(1042)", "Delete SimpleName: IOException(1043)", "Delete TagElement: @throws(1044)", "Delete Javadoc(1045)", "Delete Modifier: public(1046)", "Delete PrimitiveType: void(1047)", "Delete SimpleName: setColumn(1048)", "Delete PrimitiveType: int(1049)", "Delete SimpleName: column(1050)", "Delete SingleVariableDeclaration(1051)", "Delete SimpleName: Vector(1052)", "Delete SimpleType: Vector(1053)", "Delete SimpleName: vector(1054)", "Delete SingleVariableDeclaration(1055)", "Delete SimpleName: IOException(1056)", "Delete SimpleType: IOException(1057)", "Delete ThisExpression(1058)", "Delete SimpleName: getColumns(1059)", "Delete MethodInvocation(1060)", "Delete SimpleName: column(1061)", "Delete InfixExpression: <(1062)", "Delete ThisExpression(1063)", "Delete SimpleName: getRows(1064)", "Delete MethodInvocation(1065)", "Delete SimpleName: vector(1066)", "Delete SimpleName: size(1067)", "Delete MethodInvocation(1068)", "Delete InfixExpression: <(1069)", "Delete InfixExpression: ||(1070)", "Delete SimpleName: ArrayIndexOutOfBoundsException(1071)", "Delete SimpleType: ArrayIndexOutOfBoundsException(1072)", "Delete SimpleName: column(1073)", "Delete ClassInstanceCreation(1074)", "Delete ThrowStatement(1075)", "Delete IfStatement(1076)", "Delete QualifiedName: Map.Entry(1077)", "Delete SimpleType: Map.Entry(1078)", "Delete SimpleName: Writable(1079)", "Delete SimpleType: Writable(1080)", "Delete SimpleName: Writable(1081)", "Delete SimpleType: Writable(1082)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(1083)", "Delete SimpleName: e(1084)", "Delete SingleVariableDeclaration(1085)", "Delete SimpleName: vector(1086)", "Delete SimpleName: getEntries(1087)", "Delete MethodInvocation(1088)", "Delete SimpleName: entrySet(1089)", "Delete MethodInvocation(1090)", "Delete PrimitiveType: int(1091)", "Delete SimpleName: key(1092)", "Delete SimpleName: IntWritable(1093)", "Delete SimpleType: IntWritable(1094)", "Delete SimpleName: e(1095)", "Delete SimpleName: getKey(1096)", "Delete MethodInvocation(1097)", "Delete CastExpression(1098)", "Delete ParenthesizedExpression(1099)", "Delete SimpleName: get(1100)", "Delete MethodInvocation(1101)", "Delete VariableDeclarationFragment(1102)", "Delete VariableDeclarationStatement(1103)", "Delete PrimitiveType: double(1104)", "Delete SimpleName: value(1105)", "Delete SimpleName: DoubleWritable(1106)", "Delete SimpleType: DoubleWritable(1107)", "Delete SimpleName: e(1108)", "Delete SimpleName: getValue(1109)", "Delete MethodInvocation(1110)", "Delete CastExpression(1111)", "Delete ParenthesizedExpression(1112)", "Delete SimpleName: get(1113)", "Delete MethodInvocation(1114)", "Delete VariableDeclarationFragment(1115)", "Delete VariableDeclarationStatement(1116)", "Delete SimpleName: Put(1117)", "Delete SimpleType: Put(1118)", "Delete SimpleName: put(1119)", "Delete SimpleName: Put(1120)", "Delete SimpleType: Put(1121)", "Delete SimpleName: BytesUtil(1122)", "Delete SimpleName: getRowIndex(1123)", "Delete SimpleName: key(1124)", "Delete MethodInvocation(1125)", "Delete ClassInstanceCreation(1126)", "Delete VariableDeclarationFragment(1127)", "Delete VariableDeclarationStatement(1128)", "Delete SimpleName: put(1129)", "Delete SimpleName: add(1130)", "Delete QualifiedName: Constants.COLUMNFAMILY(1131)", "Delete SimpleName: Bytes(1132)", "Delete SimpleName: toBytes(1133)", "Delete SimpleName: String(1134)", "Delete SimpleName: valueOf(1135)", "Delete SimpleName: column(1136)", "Delete MethodInvocation(1137)", "Delete MethodInvocation(1138)", "Delete SimpleName: Bytes(1139)", "Delete SimpleName: toBytes(1140)", "Delete SimpleName: value(1141)", "Delete MethodInvocation(1142)", "Delete MethodInvocation(1143)", "Delete ExpressionStatement(1144)", "Delete SimpleName: table(1145)", "Delete SimpleName: put(1146)", "Delete SimpleName: put(1147)", "Delete MethodInvocation(1148)", "Delete ExpressionStatement(1149)", "Delete Block(1150)", "Delete EnhancedForStatement(1151)", "Delete Block(1152)", "Delete MethodDeclaration(1153)", "Delete TextElement: C = alpha*A*B + C(1154)", "Delete TagElement(1155)", "Delete SimpleName: alpha(1156)", "Delete TagElement: @param(1157)", "Delete SimpleName: B(1158)", "Delete TagElement: @param(1159)", "Delete SimpleName: C(1160)", "Delete TagElement: @param(1161)", "Delete TextElement:  C(1162)", "Delete TagElement: @return(1163)", "Delete SimpleName: IOException(1164)", "Delete TagElement: @throws(1165)", "Delete Javadoc(1166)", "Delete Modifier: public(1167)", "Delete SimpleName: Matrix(1168)", "Delete SimpleType: Matrix(1169)", "Delete SimpleName: multAdd(1170)", "Delete PrimitiveType: double(1171)", "Delete SimpleName: alpha(1172)", "Delete SingleVariableDeclaration(1173)", "Delete SimpleName: Matrix(1174)", "Delete SimpleType: Matrix(1175)", "Delete SimpleName: B(1176)", "Delete SingleVariableDeclaration(1177)", "Delete SimpleName: Matrix(1178)", "Delete SimpleType: Matrix(1179)", "Delete SimpleName: C(1180)", "Delete SingleVariableDeclaration(1181)", "Delete SimpleName: IOException(1182)", "Delete SimpleType: IOException(1183)", "Delete NullLiteral(1184)", "Delete ReturnStatement(1185)", "Delete Block(1186)", "Delete MethodDeclaration(1187)", "Delete TextElement: Returns type of matrix(1188)", "Delete TagElement(1189)", "Delete Javadoc(1190)", "Delete Modifier: public(1191)", "Delete SimpleName: String(1192)", "Delete SimpleType: String(1193)", "Delete SimpleName: getType(1194)", "Delete ThisExpression(1195)", "Delete SimpleName: getClass(1196)", "Delete MethodInvocation(1197)", "Delete SimpleName: getSimpleName(1198)", "Delete MethodInvocation(1199)", "Delete ReturnStatement(1200)", "Delete Block(1201)", "Delete MethodDeclaration(1202)", "Delete TextElement: Returns the sub matrix formed by selecting certain rows and columns from a(1203)", "Delete TextElement: bigger matrix. The sub matrix is a in-memory operation only.(1204)", "Delete TagElement(1205)", "Delete SimpleName: i0(1206)", "Delete TextElement:  the start index of row(1207)", "Delete TagElement: @param(1208)", "Delete SimpleName: i1(1209)", "Delete TextElement:  the end index of row(1210)", "Delete TagElement: @param(1211)", "Delete SimpleName: j0(1212)", "Delete TextElement:  the start index of column(1213)", "Delete TagElement: @param(1214)", "Delete SimpleName: j1(1215)", "Delete TextElement:  the end index of column(1216)", "Delete TagElement: @param(1217)", "Delete TextElement:  the sub matrix of matrix(1218)", "Delete TagElement: @return(1219)", "Delete SimpleName: IOException(1220)", "Delete TagElement: @throws(1221)", "Delete Javadoc(1222)", "Delete Modifier: public(1223)", "Delete SimpleName: SubMatrix(1224)", "Delete SimpleType: SubMatrix(1225)", "Delete SimpleName: subMatrix(1226)", "Delete PrimitiveType: int(1227)", "Delete SimpleName: i0(1228)", "Delete SingleVariableDeclaration(1229)", "Delete PrimitiveType: int(1230)", "Delete SimpleName: i1(1231)", "Delete SingleVariableDeclaration(1232)", "Delete PrimitiveType: int(1233)", "Delete SimpleName: j0(1234)", "Delete SingleVariableDeclaration(1235)", "Delete PrimitiveType: int(1236)", "Delete SimpleName: j1(1237)", "Delete SingleVariableDeclaration(1238)", "Delete SimpleName: IOException(1239)", "Delete SimpleType: IOException(1240)", "Delete PrimitiveType: int(1241)", "Delete SimpleName: columnSize(1242)", "Delete SimpleName: j1(1243)", "Delete SimpleName: j0(1244)", "Delete InfixExpression: -(1245)", "Delete ParenthesizedExpression(1246)", "Delete NumberLiteral: 1(1247)", "Delete InfixExpression: +(1248)", "Delete VariableDeclarationFragment(1249)", "Delete VariableDeclarationStatement(1250)", "Delete SimpleName: SubMatrix(1251)", "Delete SimpleType: SubMatrix(1252)", "Delete SimpleName: result(1253)", "Delete SimpleName: SubMatrix(1254)", "Delete SimpleType: SubMatrix(1255)", "Delete SimpleName: i1(1256)", "Delete SimpleName: i0(1257)", "Delete InfixExpression: -(1258)", "Delete ParenthesizedExpression(1259)", "Delete NumberLiteral: 1(1260)", "Delete InfixExpression: +(1261)", "Delete SimpleName: columnSize(1262)", "Delete ClassInstanceCreation(1263)", "Delete VariableDeclarationFragment(1264)", "Delete VariableDeclarationStatement(1265)", "Delete SimpleName: Scan(1266)", "Delete SimpleType: Scan(1267)", "Delete SimpleName: scan(1268)", "Delete SimpleName: Scan(1269)", "Delete SimpleType: Scan(1270)", "Delete ClassInstanceCreation(1271)", "Delete VariableDeclarationFragment(1272)", "Delete VariableDeclarationStatement(1273)", "Delete PrimitiveType: int(1274)", "Delete SimpleName: j(1275)", "Delete SimpleName: j0(1276)", "Delete VariableDeclarationFragment(1277)", "Delete SimpleName: jj(1278)", "Delete NumberLiteral: 0(1279)", "Delete VariableDeclarationFragment(1280)", "Delete VariableDeclarationExpression(1281)", "Delete SimpleName: j(1282)", "Delete SimpleName: j1(1283)", "Delete InfixExpression: <=(1284)", "Delete SimpleName: j(1285)", "Delete PostfixExpression: ++(1286)", "Delete SimpleName: jj(1287)", "Delete PostfixExpression: ++(1288)", "Delete SimpleName: scan(1289)", "Delete SimpleName: addColumn(1290)", "Delete QualifiedName: Constants.COLUMNFAMILY(1291)", "Delete SimpleName: Bytes(1292)", "Delete SimpleName: toBytes(1293)", "Delete SimpleName: String(1294)", "Delete SimpleName: valueOf(1295)", "Delete SimpleName: j(1296)", "Delete MethodInvocation(1297)", "Delete MethodInvocation(1298)", "Delete MethodInvocation(1299)", "Delete ExpressionStatement(1300)", "Delete Block(1301)", "Delete ForStatement(1302)", "Delete SimpleName: scan(1303)", "Delete SimpleName: setStartRow(1304)", "Delete SimpleName: BytesUtil(1305)", "Delete SimpleName: getRowIndex(1306)", "Delete SimpleName: i0(1307)", "Delete MethodInvocation(1308)", "Delete MethodInvocation(1309)", "Delete ExpressionStatement(1310)", "Delete SimpleName: scan(1311)", "Delete SimpleName: setStopRow(1312)", "Delete SimpleName: BytesUtil(1313)", "Delete SimpleName: getRowIndex(1314)", "Delete SimpleName: i1(1315)", "Delete NumberLiteral: 1(1316)", "Delete InfixExpression: +(1317)", "Delete MethodInvocation(1318)", "Delete MethodInvocation(1319)", "Delete ExpressionStatement(1320)", "Delete SimpleName: ResultScanner(1321)", "Delete SimpleType: ResultScanner(1322)", "Delete SimpleName: s(1323)", "Delete SimpleName: table(1324)", "Delete SimpleName: getScanner(1325)", "Delete SimpleName: scan(1326)", "Delete MethodInvocation(1327)", "Delete VariableDeclarationFragment(1328)", "Delete VariableDeclarationStatement(1329)", "Delete SimpleName: Iterator(1330)", "Delete SimpleType: Iterator(1331)", "Delete SimpleName: Result(1332)", "Delete SimpleType: Result(1333)", "Delete ParameterizedType: Iterator<Result>(1334)", "Delete SimpleName: it(1335)", "Delete SimpleName: s(1336)", "Delete SimpleName: iterator(1337)", "Delete MethodInvocation(1338)", "Delete VariableDeclarationFragment(1339)", "Delete VariableDeclarationStatement(1340)", "Delete PrimitiveType: int(1341)", "Delete SimpleName: i(1342)", "Delete NumberLiteral: 0(1343)", "Delete VariableDeclarationFragment(1344)", "Delete VariableDeclarationStatement(1345)", "Delete SimpleName: Result(1346)", "Delete SimpleType: Result(1347)", "Delete SimpleName: rs(1348)", "Delete NullLiteral(1349)", "Delete VariableDeclarationFragment(1350)", "Delete VariableDeclarationStatement(1351)", "Delete SimpleName: it(1352)", "Delete SimpleName: hasNext(1353)", "Delete MethodInvocation(1354)", "Delete SimpleName: rs(1355)", "Delete SimpleName: it(1356)", "Delete SimpleName: next(1357)", "Delete MethodInvocation(1358)", "Delete Assignment: =(1359)", "Delete ExpressionStatement(1360)", "Delete PrimitiveType: int(1361)", "Delete SimpleName: j(1362)", "Delete SimpleName: j0(1363)", "Delete VariableDeclarationFragment(1364)", "Delete SimpleName: jj(1365)", "Delete NumberLiteral: 0(1366)", "Delete VariableDeclarationFragment(1367)", "Delete VariableDeclarationExpression(1368)", "Delete SimpleName: j(1369)", "Delete SimpleName: j1(1370)", "Delete InfixExpression: <=(1371)", "Delete SimpleName: j(1372)", "Delete PostfixExpression: ++(1373)", "Delete SimpleName: jj(1374)", "Delete PostfixExpression: ++(1375)", "Delete PrimitiveType: byte(1376)", "Delete Dimension(1377)", "Delete ArrayType: byte[](1378)", "Delete SimpleName: vv(1379)", "Delete SimpleName: rs(1380)", "Delete SimpleName: getValue(1381)", "Delete QualifiedName: Constants.COLUMNFAMILY(1382)", "Delete SimpleName: Bytes(1383)", "Delete SimpleName: toBytes(1384)", "Delete SimpleName: String(1385)", "Delete SimpleName: valueOf(1386)", "Delete SimpleName: j(1387)", "Delete MethodInvocation(1388)", "Delete MethodInvocation(1389)", "Delete MethodInvocation(1390)", "Delete VariableDeclarationFragment(1391)", "Delete VariableDeclarationStatement(1392)", "Delete SimpleName: result(1393)", "Delete SimpleName: set(1394)", "Delete SimpleName: i(1395)", "Delete SimpleName: jj(1396)", "Delete SimpleName: vv(1397)", "Delete MethodInvocation(1398)", "Delete ExpressionStatement(1399)", "Delete Block(1400)", "Delete ForStatement(1401)", "Delete SimpleName: i(1402)", "Delete PostfixExpression: ++(1403)", "Delete ExpressionStatement(1404)", "Delete Block(1405)", "Delete WhileStatement(1406)", "Delete SimpleName: result(1407)", "Delete ReturnStatement(1408)", "Delete Block(1409)", "Delete MethodDeclaration(1410)", "Delete TypeDeclaration: class(1411)"]}}, {"DenseVector_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL PackageDeclaration", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TagElement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Set", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: StringBuilder", "DEL Block", "DEL SimpleName: v", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: Math", "DEL Block", "DEL SimpleName: v", "DEL ForStatement", "DEL TagElement: @throws", "DEL SimpleName: Writable", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: max", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL TagElement: @return", "DEL ThisExpression", "DEL SimpleType: IntWritable", "DEL ForStatement", "DEL SimpleName: it", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL SimpleType: Map.Entry", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Javadoc", "DEL TextElement: x = alpha*v + x", "DEL ThisExpression", "DEL PrimitiveType: double", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL VariableDeclarationExpression", "DEL SimpleName: getNorm1", "DEL SimpleName: alpha", "DEL SimpleType: Vector", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: ssq", "DEL SimpleName: Set", "DEL SimpleType: MapWritable", "DEL MethodDeclaration", "DEL QualifiedName: Constants.ROWCOUNT", "DEL SimpleName: put", "DEL SimpleType: Writable", "DEL SingleVariableDeclaration", "DEL SimpleName: entries", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: index", "DEL TagElement: @param", "DEL SimpleType: Map.Entry", "DEL ReturnStatement", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: Result", "DEL SimpleName: Math", "DEL TagElement", "DEL ForStatement", "DEL Block", "DEL Javadoc", "DEL SimpleName: getNormInf", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: DoubleWritable", "DEL PrimitiveType: int", "DEL SimpleName: zeroFill", "DEL ThisExpression", "DEL SimpleName: keySet", "DEL SimpleName: IntWritable", "DEL ExpressionStatement", "DEL ThisExpression", "DEL Javadoc", "DEL TagElement: @param", "DEL SimpleType: Writable", "DEL SimpleType: Writable", "DEL SimpleName: v", "DEL SimpleName: IntWritable", "DEL SimpleName: it", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: v2", "DEL SimpleName: row", "DEL VariableDeclarationFragment", "DEL SimpleName: MapWritable", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL InfixExpression: *", "DEL MethodDeclaration", "DEL SimpleName: index", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: get", "DEL Block", "DEL QualifiedName: Norm.TwoRobust", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL SimpleName: alpha", "DEL PrimitiveType: double", "DEL InfixExpression: ==", "DEL SimpleName: v", "DEL VariableDeclarationStatement", "DEL Block", "DEL IfStatement", "DEL TryStatement", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL Block", "DEL SimpleName: q_i", "DEL SimpleName: DenseVector", "DEL SimpleName: DenseVector", "DEL InfixExpression: *", "DEL SimpleName: value", "DEL SimpleType: Result", "DEL Modifier: public", "DEL TagElement: @param", "DEL FieldAccess", "DEL FieldAccess", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: e", "DEL TagElement: @return", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: it", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL CastExpression", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL SimpleName: scale", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: type", "DEL MethodInvocation", "DEL SimpleName: val", "DEL TextElement: Computes the given norm of the vector", "DEL TagElement: @param", "DEL SimpleName: i", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL QualifiedName: Map.Entry", "DEL InfixExpression: ==", "DEL SimpleName: entries", "DEL ExpressionStatement", "DEL SimpleName: next", "DEL FieldAccess", "DEL SimpleName: entries", "DEL TextElement:  the index of the first element", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL PrimitiveType: double", "DEL Modifier: public", "DEL SimpleName: i", "DEL ReturnStatement", "DEL EnhancedForStatement", "DEL PrimitiveType: void", "DEL SimpleName: getRow", "DEL SimpleName: alpha", "DEL SimpleType: DenseVector", "DEL SimpleName: value", "DEL SimpleName: sum", "DEL SimpleName: DoubleWritable", "DEL ThisExpression", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: Logger", "DEL SimpleName: getKey", "DEL VariableDeclarationFragment", "DEL SimpleName: Writable", "DEL TagElement: @param", "DEL ThisExpression", "DEL SimpleType: IntWritable", "DEL ParameterizedType: Iterator<Writable>", "DEL FieldAccess", "DEL VariableDeclarationExpression", "DEL ThisExpression", "DEL SimpleName: value", "DEL ReturnStatement", "DEL SimpleName: value", "DEL ReturnStatement", "DEL Assignment: =", "DEL Assignment: =", "DEL Modifier: static", "DEL Javadoc", "DEL SimpleName: set", "DEL SimpleName: ssq", "DEL BooleanLiteral: false", "DEL SimpleName: value", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: value", "DEL PrimitiveType: double", "DEL SimpleName: Writable", "DEL ClassInstanceCreation", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: iterator", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: type", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: StringBuilder", "DEL TagElement: @param", "DEL Modifier: public", "DEL QualifiedName: Map.Entry", "DEL SingleVariableDeclaration", "DEL SimpleName: entries", "DEL CastExpression", "DEL TagElement", "DEL SimpleName: i0", "DEL SimpleType: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: alpha", "DEL SimpleName: v", "DEL Modifier: protected", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL SimpleName: absxi", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleType: Writable", "DEL ParenthesizedExpression", "DEL SimpleName: row", "DEL ThisExpression", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL TagElement", "DEL Modifier: public", "DEL SimpleType: Vector", "DEL SimpleName: keySet", "DEL ParenthesizedExpression", "DEL SimpleName: i1", "DEL SingleVariableDeclaration", "DEL SimpleType: MapWritable", "DEL SimpleName: set", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: cosine", "DEL SimpleType: Writable", "DEL Block", "DEL SimpleName: entries", "DEL Block", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL MethodInvocation", "DEL SimpleName: v", "DEL SimpleType: DoubleWritable", "DEL SimpleName: entries", "DEL FieldDeclaration", "DEL SimpleName: key", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: it", "DEL ConstructorInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ParameterizedType: Set<Writable>", "DEL Modifier: public", "DEL MethodInvocation", "DEL TextElement: Gets the value of index", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: max", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL Block", "DEL Block", "DEL StringLiteral: \"Unexpected null value : \"", "DEL SimpleName: pow", "DEL SimpleName: scale", "DEL SimpleName: initMap", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL SimpleName: alpha", "DEL SimpleType: DenseVector", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: true", "DEL SimpleName: get", "DEL SimpleName: IOException", "DEL SimpleName: setRow", "DEL SimpleName: pow", "DEL MethodDeclaration", "DEL VariableDeclarationExpression", "DEL Block", "DEL NumberLiteral: 0", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: getNorm2", "DEL SimpleName: DenseVector", "DEL SimpleName: IntWritable", "DEL ThisExpression", "DEL VariableDeclarationExpression", "DEL SimpleName: getNorm2Robust", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL ParenthesizedExpression", "DEL PrimitiveType: int", "DEL InfixExpression: <=", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL PrimitiveType: void", "DEL InfixExpression: <", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Block", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL NumberLiteral: 0.0", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleName: entrySet", "DEL SimpleName: IntWritable", "DEL SimpleName: index", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: row", "DEL SimpleName: entries", "DEL SimpleName: v", "DEL SimpleName: add", "DEL ReturnStatement", "DEL ThisExpression", "DEL NumberLiteral: 0", "DEL Modifier: protected", "DEL TextElement: This class represents a dense vector.", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: DenseVector", "DEL SimpleName: getNorm2", "DEL MethodInvocation", "DEL QualifiedName: Norm.One", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: i", "DEL SimpleName: index", "DEL MethodDeclaration", "DEL SimpleName: type", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL InfixExpression: /", "DEL SimpleName: index", "DEL ClassInstanceCreation", "DEL InfixExpression: *", "DEL SimpleType: Norm", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleName: res", "DEL MethodInvocation", "DEL Modifier: public", "DEL Assignment: +=", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL QualifiedName: Constants.ROWCOUNT", "DEL SimpleName: Math", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: getValue", "DEL SimpleName: i", "DEL SimpleName: DenseVector", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: Writable", "DEL SimpleType: Set", "DEL PrimitiveType: double", "DEL TagElement", "DEL TagElement", "DEL SimpleName: zeroFill", "DEL SimpleName: index", "DEL TextElement: x = v + x", "DEL VariableDeclarationFragment", "DEL SimpleName: Set", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL VariableDeclarationStatement", "DEL SimpleName: square_sum", "DEL TextElement: Returns the robust norm of the vector", "DEL CastExpression", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleType: NullPointerException", "DEL SimpleName: res", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: it", "DEL SimpleName: i", "DEL ThisExpression", "DEL SimpleName: DoubleWritable", "DEL SimpleType: IntWritable", "DEL IfStatement", "DEL SimpleName: DenseVector", "DEL SimpleName: i", "DEL SimpleName: abs", "DEL SimpleName: val", "DEL SimpleName: type", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: Vector", "DEL SimpleName: i", "DEL SimpleName: keySet", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: initMap", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL IfStatement", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL ForStatement", "DEL TagElement: @return", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL QualifiedName: Map.Entry", "DEL TextElement:  the robust norm of the vector", "DEL FieldAccess", "DEL SimpleType: Writable", "DEL SimpleName: e", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: Writable", "DEL IfStatement", "DEL TextElement: Sets the value of index", "DEL PrimitiveType: int", "DEL SimpleName: Writable", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleType: AbstractVector", "DEL ReturnStatement", "DEL SimpleName: get", "DEL SimpleName: d_i", "DEL FieldAccess", "DEL ClassInstanceCreation", "DEL Javadoc", "DEL SimpleName: zeroFill", "DEL SimpleName: value", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL TypeDeclaration: class", "DEL SimpleName: m", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL SimpleName: value", "DEL QualifiedName: Map.Entry", "DEL CastExpression", "DEL Assignment: +=", "DEL SimpleName: getNorm2Robust", "DEL TagElement: @return", "DEL InfixExpression: +", "DEL SimpleName: setRow", "DEL ClassInstanceCreation", "DEL SimpleName: m", "DEL SimpleName: Vector", "DEL SimpleName: alpha", "DEL TagElement", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: v", "DEL SimpleName: scale", "DEL SimpleName: key", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: DenseVector", "DEL SimpleName: getKey", "DEL SimpleName: max", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL SimpleName: v", "DEL MethodDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: i0", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: Math", "DEL TagElement: @param", "DEL SimpleType: IntWritable", "DEL Block", "DEL EnhancedForStatement", "DEL SimpleName: sqrt", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: sum", "DEL SimpleType: Writable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: Result", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleName: get", "DEL SimpleName: v", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TextElement:  the infinity norm of the vector", "DEL SingleVariableDeclaration", "DEL WhileStatement", "DEL TextElement:  x dot v", "DEL SimpleName: result", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleName: v2", "DEL SimpleName: NullPointerException", "DEL SimpleName: set", "DEL SimpleName: Vector", "DEL SimpleName: i", "DEL InfixExpression: <", "DEL SimpleName: dot", "DEL Modifier: public", "DEL SimpleType: IntWritable", "DEL PrimitiveType: double", "DEL SimpleName: e", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ForStatement", "DEL SimpleName: entrySet", "DEL CastExpression", "DEL SimpleType: Iterator", "DEL SimpleName: absxi", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL ThisExpression", "DEL StringLiteral: \" \"", "DEL TagElement: @param", "DEL SimpleName: getEntries", "DEL SimpleName: put", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: e", "DEL TagElement", "DEL CatchClause", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL SimpleName: m", "DEL SimpleName: key", "DEL ParenthesizedExpression", "DEL PrimitiveType: double", "DEL SimpleName: subVector", "DEL ThisExpression", "DEL SimpleName: entries", "DEL ExpressionStatement", "DEL SimpleName: checkComformantSize", "DEL SimpleName: row", "DEL SimpleName: get", "DEL SimpleName: DenseVector", "DEL SimpleName: getEntries", "DEL MethodInvocation", "DEL ParameterizedType: Set<Writable>", "DEL Block", "DEL SimpleType: Vector", "DEL FieldAccess", "DEL SimpleName: index", "DEL TextElement: Sets the vector", "DEL MethodDeclaration", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL SimpleName: ssq", "DEL PostfixExpression: ++", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleType: IntWritable", "DEL ThisExpression", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: res", "DEL SimpleName: IntWritable", "DEL Modifier: public", "DEL ThisExpression", "DEL SimpleName: append", "DEL SimpleType: DenseVector", "DEL SimpleName: DenseVector", "DEL InfixExpression: /", "DEL VariableDeclarationFragment", "DEL SimpleName: DenseVector", "DEL InfixExpression: +", "DEL SimpleName: add", "DEL NumberLiteral: 0", "DEL SimpleName: m", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL Javadoc", "DEL SimpleType: IntWritable", "DEL SimpleName: getNorm2", "DEL SimpleName: sum", "DEL VariableDeclarationStatement", "DEL SimpleName: set", "DEL ThrowStatement", "DEL Block", "DEL ThisExpression", "DEL ThisExpression", "DEL SimpleName: e", "DEL PrimitiveType: boolean", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL ReturnStatement", "DEL SimpleName: abs", "DEL ThisExpression", "DEL SimpleName: row", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: IntWritable", "DEL SimpleName: v2", "DEL PrimitiveType: int", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL EnhancedForStatement", "DEL SimpleName: checkComformantSize", "DEL SimpleName: scale", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleType: MapWritable", "DEL SimpleName: entries", "DEL TagElement: @param", "DEL SimpleName: d_i", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL IfStatement", "DEL ForStatement", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: getLogger", "DEL ExpressionStatement", "DEL SimpleName: type", "DEL SimpleName: Writable", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: i0", "DEL InfixExpression: ==", "DEL Block", "DEL ClassInstanceCreation", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: Vector", "DEL VariableDeclarationStatement", "DEL SimpleName: IntWritable", "DEL SimpleName: v", "DEL SimpleName: v", "DEL TextElement:  v[i0:i1]", "DEL SimpleName: cosine", "DEL SimpleName: checkComformantSize", "DEL SimpleName: key", "DEL TextElement:  norm of the vector", "DEL SimpleName: i", "DEL Javadoc", "DEL SimpleName: entrySet", "DEL SimpleType: MapWritable", "DEL ExpressionStatement", "DEL SimpleName: entries", "DEL PrimitiveType: double", "DEL SimpleName: getEntries", "DEL SimpleName: getKey", "DEL SimpleName: cosine", "DEL SingleVariableDeclaration", "DEL SimpleName: val", "DEL SimpleName: ssq", "DEL SimpleName: ssq", "DEL SimpleType: StringBuilder", "DEL SimpleName: entries", "DEL SimpleName: i", "DEL TagElement: @param", "DEL Javadoc", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL ParenthesizedExpression", "DEL SimpleName: alpha", "DEL PostfixExpression: ++", "DEL PrimitiveType: int", "DEL SimpleName: next", "DEL TextElement:  x = alpha*v + x", "DEL TagElement: @return", "DEL SimpleName: i", "DEL SimpleName: scale", "DEL SimpleName: keySet", "DEL SimpleName: get", "DEL SimpleName: Math", "DEL SimpleName: m", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL ParenthesizedExpression", "DEL SimpleType: StringBuilder", "DEL SimpleType: Writable", "DEL ReturnStatement", "DEL InfixExpression: *", "DEL FieldAccess", "DEL SimpleName: zeroFill", "DEL TagElement", "DEL SimpleName: absxi", "DEL TagElement", "DEL TextElement:  x = v", "DEL SimpleName: scale", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: keySet", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: get", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL SimpleName: Vector", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL TextElement:  x = v + x", "DEL SimpleName: key", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL SimpleName: iterator", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL SimpleType: IntWritable", "DEL ThisExpression", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: Math", "DEL ThisExpression", "DEL SimpleName: entries", "DEL InfixExpression: <", "DEL SimpleType: IntWritable", "DEL IfStatement", "DEL SimpleName: IntWritable", "DEL ThisExpression", "DEL InfixExpression: +", "DEL SimpleName: DenseVector", "DEL ParenthesizedExpression", "DEL Assignment: =", "DEL EnhancedForStatement", "DEL SimpleName: row", "DEL SingleVariableDeclaration", "DEL QualifiedName: Constants.ROWCOUNT", "DEL SimpleName: keySet", "DEL SimpleName: v", "DEL VariableDeclarationExpression", "DEL Block", "DEL SimpleName: i", "DEL Block", "DEL PrimitiveType: double", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL PrimitiveType: double", "DEL SimpleName: getNorm1", "DEL Modifier: public", "DEL ParameterizedType: Iterator<Writable>", "DEL PrimitiveType: double", "DEL SimpleName: getKey", "DEL SimpleName: norm", "DEL SimpleName: size", "DEL SimpleName: toString", "DEL SimpleName: Iterator", "DEL SimpleName: q_i", "DEL Assignment: +=", "DEL ThisExpression", "DEL SimpleName: Math", "DEL TypeLiteral", "DEL SimpleName: NullPointerException", "DEL SimpleName: alpha", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: protected", "DEL SimpleName: i1", "DEL SimpleType: Vector", "DEL MethodInvocation", "DEL TextElement: Adds the value to v(index)", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleName: res", "DEL SimpleName: alpha", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: Vector", "DEL MethodInvocation", "DEL SimpleName: entries", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL SimpleType: DenseVector", "DEL PrimitiveType: double", "DEL Assignment: =", "DEL SimpleType: Vector", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: v", "DEL MethodDeclaration", "DEL SimpleName: max", "DEL MethodInvocation", "DEL SimpleName: Iterator", "DEL SimpleType: Logger", "DEL Modifier: public", "DEL SimpleName: DoubleWritable", "DEL SimpleName: toString", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL InfixExpression: <", "DEL TagElement: @return", "DEL InfixExpression: *", "DEL SimpleName: i", "DEL ParenthesizedExpression", "DEL PrimitiveType: int", "DEL SimpleName: entries", "DEL NumberLiteral: 0", "DEL SimpleName: v", "DEL InfixExpression: ==", "DEL FieldAccess", "DEL Block", "DEL SimpleName: DenseVector", "DEL SimpleName: getNormInf", "DEL SimpleName: i", "DEL SimpleType: Writable", "DEL SimpleName: size", "DEL ThisExpression", "DEL SimpleName: get", "DEL ParenthesizedExpression", "DEL PrimitiveType: void", "DEL SimpleName: e", "DEL SimpleType: Vector", "DEL SimpleType: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: square_sum", "DEL ThisExpression", "DEL Javadoc", "DEL SimpleName: alpha", "DEL TextElement: x dot v", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: MapWritable", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: v2", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL InfixExpression: /", "DEL Modifier: public", "DEL NumberLiteral: 2", "DEL VariableDeclarationFragment", "DEL SimpleName: DenseVector", "DEL ReturnStatement", "DEL NumberLiteral: 0.0", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: sqrt", "DEL PrimitiveType: double", "DEL SimpleName: IntWritable", "DEL SimpleName: size", "DEL SimpleName: index", "DEL MethodInvocation", "DEL SimpleType: Iterator", "DEL MethodInvocation", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Modifier: protected", "DEL InfixExpression: ==", "DEL SimpleName: DenseVector", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: set", "DEL Modifier: final", "DEL SimpleName: getRow", "DEL SimpleName: result", "DEL SimpleType: Map.Entry", "DEL SimpleName: ssq", "DEL VariableDeclarationFragment", "DEL QualifiedName: Constants.ROWCOUNT", "DEL SimpleName: entries", "DEL TextElement: Returns the infinity norm of the vector", "DEL SimpleName: toString", "DEL InfixExpression: *", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: add", "DEL SimpleName: set", "DEL SimpleType: Set", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Norm", "DEL SimpleName: Writable", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL PrimitiveType: double", "DEL SimpleName: e", "DEL SimpleName: index", "DEL SimpleName: square_sum", "DEL CastExpression", "DEL TagElement", "DEL Block", "DEL ThisExpression", "DEL SimpleType: Writable", "DEL MethodDeclaration", "DEL SimpleName: absxi", "DEL VariableDeclarationFragment", "DEL SimpleName: MapWritable", "DEL TagElement: @return", "DEL MethodDeclaration", "DEL SimpleName: d_i", "DEL TagElement: @return", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL Block", "DEL Block", "DEL TagElement", "DEL SimpleName: Math", "DEL SimpleType: DenseVector", "DEL MethodDeclaration", "DEL TextElement: v = alpha*v", "DEL SimpleType: DenseVector", "DEL PrimitiveType: double", "DEL TagElement", "DEL SimpleName: DenseVector", "DEL MethodDeclaration", "DEL SimpleName: Vector", "DEL PrimitiveType: double", "DEL SimpleName: index", "DEL SimpleName: i1", "DEL VariableDeclarationFragment", "DEL TextElement:  the value of v(index)", "DEL TextElement: Returns a sub-vector.", "DEL Modifier: public", "DEL TagElement", "DEL SimpleName: absxi", "DEL QualifiedName: Constants.ROWCOUNT", "DEL Block", "DEL SimpleName: m", "DEL NumberLiteral: 2", "DEL ThisExpression", "DEL TagElement: @param", "DEL SimpleName: max", "DEL Javadoc", "DEL NullLiteral", "DEL SimpleName: MapWritable", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleName: scale", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL SimpleName: value", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: get", "DEL Block", "DEL TextElement:  v = alpha*v", "DEL SimpleName: q_i", "DEL SimpleType: Writable", "DEL SimpleName: size", "DEL PrimitiveType: int", "DEL SimpleName: Logger", "DEL SimpleName: DenseVector", "DEL SimpleName: entrySet", "DEL NumberLiteral: 0.0", "DEL SimpleName: key", "DEL Block", "DEL SimpleName: min", "DEL SimpleName: getNorm2", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL TagElement: @return", "DEL SimpleName: get", "DEL QualifiedName: Norm.Two", "DEL SimpleName: set", "DEL SimpleName: IntWritable", "DEL SimpleName: Vector", "DEL SingleVariableDeclaration", "DEL SimpleName: hasNext", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleName: checkComformantSize", "DEL SimpleName: size", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleType: DenseVector", "DEL SimpleName: getValue", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleName: AbstractVector", "DEL TextElement:  the index of the last element", "DEL SimpleName: add", "DEL SingleVariableDeclaration", "DEL WhileStatement", "DEL ThisExpression", "DEL SimpleType: DenseVector", "DEL SimpleName: v", "DEL SimpleName: it", "DEL Modifier: public", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: row", "DEL ReturnStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL NumberLiteral: 0.0", "DEL Block", "DEL Block", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: Result", "DEL SimpleType: Map.Entry", "DEL InfixExpression: *", "DEL VariableDeclarationExpression", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL SimpleName: result", "DEL SimpleType: NullPointerException", "DEL SimpleName: get", "DEL Block", "DEL SimpleType: IntWritable", "DEL PrimitiveType: double"]}]}}, {"DenseVector_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Iterator(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.Map(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.Set(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.io.Writable(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hama.Constants(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.log4j.Logger(38)", "Delete ImportDeclaration(39)", "Delete TextElement: This class represents a dense vector.(40)", "Delete TagElement(41)", "Delete Javadoc(42)", "Delete Modifier: public(43)", "Delete SimpleName: DenseVector(44)", "Delete SimpleName: AbstractVector(45)", "Delete SimpleType: AbstractVector(46)", "Delete SimpleName: Vector(47)", "Delete SimpleType: Vector(48)", "Delete Modifier: static(49)", "Delete Modifier: final(50)", "Delete SimpleName: Logger(51)", "Delete SimpleType: Logger(52)", "Delete SimpleName: LOG(53)", "Delete SimpleName: Logger(54)", "Delete SimpleName: getLogger(55)", "Delete SimpleName: DenseVector(56)", "Delete SimpleType: DenseVector(57)", "Delete TypeLiteral(58)", "Delete MethodInvocation(59)", "Delete VariableDeclarationFragment(60)", "Delete FieldDeclaration(61)", "Delete Modifier: public(62)", "Delete SimpleName: DenseVector(63)", "Delete SimpleName: MapWritable(64)", "Delete SimpleType: MapWritable(65)", "Delete ClassInstanceCreation(66)", "Delete ConstructorInvocation(67)", "Delete Block(68)", "Delete MethodDeclaration(69)", "Delete Modifier: public(70)", "Delete SimpleName: DenseVector(71)", "Delete SimpleName: MapWritable(72)", "Delete SimpleType: MapWritable(73)", "Delete SimpleName: m(74)", "Delete SingleVariableDeclaration(75)", "Delete ThisExpression(76)", "Delete SimpleName: entries(77)", "Delete FieldAccess(78)", "Delete SimpleName: m(79)", "Delete Assignment: =(80)", "Delete ExpressionStatement(81)", "Delete Block(82)", "Delete MethodDeclaration(83)", "Delete Modifier: public(84)", "Delete SimpleName: DenseVector(85)", "Delete SimpleName: Result(86)", "Delete SimpleType: Result(87)", "Delete SimpleName: row(88)", "Delete SingleVariableDeclaration(89)", "Delete ThisExpression(90)", "Delete SimpleName: initMap(91)", "Delete SimpleName: row(92)", "Delete MethodInvocation(93)", "Delete ExpressionStatement(94)", "Delete Block(95)", "Delete MethodDeclaration(96)", "Delete Modifier: public(97)", "Delete SimpleName: DenseVector(98)", "Delete PrimitiveType: int(99)", "Delete SimpleName: row(100)", "Delete SingleVariableDeclaration(101)", "Delete SimpleName: Result(102)", "Delete SimpleType: Result(103)", "Delete SimpleName: m(104)", "Delete SingleVariableDeclaration(105)", "Delete ThisExpression(106)", "Delete SimpleName: initMap(107)", "Delete SimpleName: m(108)", "Delete MethodInvocation(109)", "Delete ExpressionStatement(110)", "Delete ThisExpression(111)", "Delete SimpleName: entries(112)", "Delete FieldAccess(113)", "Delete SimpleName: put(114)", "Delete QualifiedName: Constants.ROWCOUNT(115)", "Delete SimpleName: IntWritable(116)", "Delete SimpleType: IntWritable(117)", "Delete SimpleName: row(118)", "Delete ClassInstanceCreation(119)", "Delete MethodInvocation(120)", "Delete ExpressionStatement(121)", "Delete Block(122)", "Delete MethodDeclaration(123)", "Delete Modifier: public(124)", "Delete SimpleName: DenseVector(125)", "Delete PrimitiveType: int(126)", "Delete SimpleName: row(127)", "Delete SingleVariableDeclaration(128)", "Delete SimpleName: MapWritable(129)", "Delete SimpleType: MapWritable(130)", "Delete SimpleName: m(131)", "Delete SingleVariableDeclaration(132)", "Delete ThisExpression(133)", "Delete SimpleName: entries(134)", "Delete FieldAccess(135)", "Delete SimpleName: m(136)", "Delete Assignment: =(137)", "Delete ExpressionStatement(138)", "Delete ThisExpression(139)", "Delete SimpleName: entries(140)", "Delete FieldAccess(141)", "Delete SimpleName: put(142)", "Delete QualifiedName: Constants.ROWCOUNT(143)", "Delete SimpleName: IntWritable(144)", "Delete SimpleType: IntWritable(145)", "Delete SimpleName: row(146)", "Delete ClassInstanceCreation(147)", "Delete MethodInvocation(148)", "Delete ExpressionStatement(149)", "Delete Block(150)", "Delete MethodDeclaration(151)", "Delete TextElement: Sets the value of index(152)", "Delete TagElement(153)", "Delete SimpleName: index(154)", "Delete TagElement: @param(155)", "Delete SimpleName: value(156)", "Delete TagElement: @param(157)", "Delete Javadoc(158)", "Delete Modifier: public(159)", "Delete PrimitiveType: void(160)", "Delete SimpleName: set(161)", "Delete PrimitiveType: int(162)", "Delete SimpleName: index(163)", "Delete SingleVariableDeclaration(164)", "Delete PrimitiveType: double(165)", "Delete SimpleName: value(166)", "Delete SingleVariableDeclaration(167)", "Delete ThisExpression(168)", "Delete SimpleName: entries(169)", "Delete FieldAccess(170)", "Delete NullLiteral(171)", "Delete InfixExpression: ==(172)", "Delete ThisExpression(173)", "Delete SimpleName: entries(174)", "Delete FieldAccess(175)", "Delete SimpleName: MapWritable(176)", "Delete SimpleType: MapWritable(177)", "Delete ClassInstanceCreation(178)", "Delete Assignment: =(179)", "Delete ExpressionStatement(180)", "Delete Block(181)", "Delete IfStatement(182)", "Delete ThisExpression(183)", "Delete SimpleName: entries(184)", "Delete FieldAccess(185)", "Delete SimpleName: put(186)", "Delete SimpleName: IntWritable(187)", "Delete SimpleType: IntWritable(188)", "Delete SimpleName: index(189)", "Delete ClassInstanceCreation(190)", "Delete SimpleName: DoubleWritable(191)", "Delete SimpleType: DoubleWritable(192)", "Delete SimpleName: value(193)", "Delete ClassInstanceCreation(194)", "Delete MethodInvocation(195)", "Delete ExpressionStatement(196)", "Delete Block(197)", "Delete MethodDeclaration(198)", "Delete TextElement: Sets the vector(199)", "Delete TagElement(200)", "Delete SimpleName: v(201)", "Delete TagElement: @param(202)", "Delete TextElement:  x = v(203)", "Delete TagElement: @return(204)", "Delete Javadoc(205)", "Delete Modifier: public(206)", "Delete SimpleName: DenseVector(207)", "Delete SimpleType: DenseVector(208)", "Delete SimpleName: set(209)", "Delete SimpleName: Vector(210)", "Delete SimpleType: Vector(211)", "Delete SimpleName: v(212)", "Delete SingleVariableDeclaration(213)", "Delete ThisExpression(214)", "Delete SimpleName: set(215)", "Delete NumberLiteral: 1(216)", "Delete SimpleName: v(217)", "Delete MethodInvocation(218)", "Delete ExpressionStatement(219)", "Delete ThisExpression(220)", "Delete ReturnStatement(221)", "Delete Block(222)", "Delete MethodDeclaration(223)", "Delete Modifier: public(224)", "Delete SimpleName: Vector(225)", "Delete SimpleType: Vector(226)", "Delete SimpleName: set(227)", "Delete PrimitiveType: double(228)", "Delete SimpleName: alpha(229)", "Delete SingleVariableDeclaration(230)", "Delete SimpleName: Vector(231)", "Delete SimpleType: Vector(232)", "Delete SimpleName: v(233)", "Delete SingleVariableDeclaration(234)", "Delete SimpleName: checkComformantSize(235)", "Delete SimpleName: v(236)", "Delete MethodInvocation(237)", "Delete ExpressionStatement(238)", "Delete PrimitiveType: boolean(239)", "Delete SimpleName: zeroFill(240)", "Delete BooleanLiteral: false(241)", "Delete VariableDeclarationFragment(242)", "Delete VariableDeclarationStatement(243)", "Delete SimpleName: alpha(244)", "Delete NumberLiteral: 0(245)", "Delete InfixExpression: ==(246)", "Delete SimpleName: zeroFill(247)", "Delete BooleanLiteral: true(248)", "Delete Assignment: =(249)", "Delete ExpressionStatement(250)", "Delete IfStatement(251)", "Delete QualifiedName: Map.Entry(252)", "Delete SimpleType: Map.Entry(253)", "Delete SimpleName: Writable(254)", "Delete SimpleType: Writable(255)", "Delete SimpleName: Writable(256)", "Delete SimpleType: Writable(257)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(258)", "Delete SimpleName: e(259)", "Delete SingleVariableDeclaration(260)", "Delete SimpleName: v(261)", "Delete SimpleName: getEntries(262)", "Delete MethodInvocation(263)", "Delete SimpleName: entrySet(264)", "Delete MethodInvocation(265)", "Delete PrimitiveType: int(266)", "Delete SimpleName: key(267)", "Delete SimpleName: IntWritable(268)", "Delete SimpleType: IntWritable(269)", "Delete SimpleName: e(270)", "Delete SimpleName: getKey(271)", "Delete MethodInvocation(272)", "Delete CastExpression(273)", "Delete ParenthesizedExpression(274)", "Delete SimpleName: get(275)", "Delete MethodInvocation(276)", "Delete VariableDeclarationFragment(277)", "Delete VariableDeclarationStatement(278)", "Delete SimpleName: zeroFill(279)", "Delete ThisExpression(280)", "Delete SimpleName: set(281)", "Delete SimpleName: key(282)", "Delete NumberLiteral: 0(283)", "Delete MethodInvocation(284)", "Delete ExpressionStatement(285)", "Delete ThisExpression(286)", "Delete SimpleName: set(287)", "Delete SimpleName: key(288)", "Delete SimpleName: alpha(289)", "Delete SimpleName: DoubleWritable(290)", "Delete SimpleType: DoubleWritable(291)", "Delete SimpleName: e(292)", "Delete SimpleName: getValue(293)", "Delete MethodInvocation(294)", "Delete CastExpression(295)", "Delete ParenthesizedExpression(296)", "Delete SimpleName: get(297)", "Delete MethodInvocation(298)", "Delete InfixExpression: *(299)", "Delete MethodInvocation(300)", "Delete ExpressionStatement(301)", "Delete IfStatement(302)", "Delete Block(303)", "Delete EnhancedForStatement(304)", "Delete ThisExpression(305)", "Delete ReturnStatement(306)", "Delete Block(307)", "Delete MethodDeclaration(308)", "Delete Modifier: public(309)", "Delete PrimitiveType: void(310)", "Delete SimpleName: setRow(311)", "Delete PrimitiveType: int(312)", "Delete SimpleName: row(313)", "Delete SingleVariableDeclaration(314)", "Delete ThisExpression(315)", "Delete SimpleName: entries(316)", "Delete FieldAccess(317)", "Delete SimpleName: put(318)", "Delete QualifiedName: Constants.ROWCOUNT(319)", "Delete SimpleName: IntWritable(320)", "Delete SimpleType: IntWritable(321)", "Delete SimpleName: row(322)", "Delete ClassInstanceCreation(323)", "Delete MethodInvocation(324)", "Delete ExpressionStatement(325)", "Delete Block(326)", "Delete MethodDeclaration(327)", "Delete TextElement: Gets the value of index(328)", "Delete TagElement(329)", "Delete SimpleName: index(330)", "Delete TagElement: @param(331)", "Delete TextElement:  the value of v(index)(332)", "Delete TagElement: @return(333)", "Delete SimpleName: IOException(334)", "Delete TagElement: @throws(335)", "Delete Javadoc(336)", "Delete Modifier: public(337)", "Delete PrimitiveType: double(338)", "Delete SimpleName: get(339)", "Delete PrimitiveType: int(340)", "Delete SimpleName: index(341)", "Delete SingleVariableDeclaration(342)", "Delete PrimitiveType: double(343)", "Delete SimpleName: value(344)", "Delete VariableDeclarationFragment(345)", "Delete VariableDeclarationStatement(346)", "Delete SimpleName: value(347)", "Delete SimpleName: DoubleWritable(348)", "Delete SimpleType: DoubleWritable(349)", "Delete ThisExpression(350)", "Delete SimpleName: entries(351)", "Delete FieldAccess(352)", "Delete SimpleName: get(353)", "Delete SimpleName: IntWritable(354)", "Delete SimpleType: IntWritable(355)", "Delete SimpleName: index(356)", "Delete ClassInstanceCreation(357)", "Delete MethodInvocation(358)", "Delete CastExpression(359)", "Delete ParenthesizedExpression(360)", "Delete SimpleName: get(361)", "Delete MethodInvocation(362)", "Delete Assignment: =(363)", "Delete ExpressionStatement(364)", "Delete Block(365)", "Delete SimpleName: NullPointerException(366)", "Delete SimpleType: NullPointerException(367)", "Delete SimpleName: e(368)", "Delete SingleVariableDeclaration(369)", "Delete SimpleName: NullPointerException(370)", "Delete SimpleType: NullPointerException(371)", "Delete StringLiteral: \"Unexpected null value : \"(372)", "Delete SimpleName: e(373)", "Delete SimpleName: toString(374)", "Delete MethodInvocation(375)", "Delete InfixExpression: +(376)", "Delete ClassInstanceCreation(377)", "Delete ThrowStatement(378)", "Delete Block(379)", "Delete CatchClause(380)", "Delete TryStatement(381)", "Delete SimpleName: value(382)", "Delete ReturnStatement(383)", "Delete Block(384)", "Delete MethodDeclaration(385)", "Delete Modifier: public(386)", "Delete PrimitiveType: int(387)", "Delete SimpleName: getRow(388)", "Delete SimpleName: IntWritable(389)", "Delete SimpleType: IntWritable(390)", "Delete ThisExpression(391)", "Delete SimpleName: entries(392)", "Delete FieldAccess(393)", "Delete SimpleName: get(394)", "Delete QualifiedName: Constants.ROWCOUNT(395)", "Delete MethodInvocation(396)", "Delete CastExpression(397)", "Delete ParenthesizedExpression(398)", "Delete SimpleName: get(399)", "Delete MethodInvocation(400)", "Delete ReturnStatement(401)", "Delete Block(402)", "Delete MethodDeclaration(403)", "Delete TextElement: Adds the value to v(index)(404)", "Delete TagElement(405)", "Delete SimpleName: index(406)", "Delete TagElement: @param(407)", "Delete SimpleName: value(408)", "Delete TagElement: @param(409)", "Delete Javadoc(410)", "Delete Modifier: public(411)", "Delete PrimitiveType: void(412)", "Delete SimpleName: add(413)", "Delete PrimitiveType: int(414)", "Delete SimpleName: index(415)", "Delete SingleVariableDeclaration(416)", "Delete PrimitiveType: double(417)", "Delete SimpleName: value(418)", "Delete SingleVariableDeclaration(419)", "Delete SimpleName: set(420)", "Delete SimpleName: index(421)", "Delete SimpleName: get(422)", "Delete SimpleName: index(423)", "Delete MethodInvocation(424)", "Delete SimpleName: value(425)", "Delete InfixExpression: +(426)", "Delete MethodInvocation(427)", "Delete ExpressionStatement(428)", "Delete Block(429)", "Delete MethodDeclaration(430)", "Delete TextElement: x = alpha*v + x(431)", "Delete TagElement(432)", "Delete SimpleName: alpha(433)", "Delete TagElement: @param(434)", "Delete SimpleName: v(435)", "Delete TagElement: @param(436)", "Delete TextElement:  x = alpha*v + x(437)", "Delete TagElement: @return(438)", "Delete Javadoc(439)", "Delete Modifier: public(440)", "Delete SimpleName: DenseVector(441)", "Delete SimpleType: DenseVector(442)", "Delete SimpleName: add(443)", "Delete PrimitiveType: double(444)", "Delete SimpleName: alpha(445)", "Delete SingleVariableDeclaration(446)", "Delete SimpleName: Vector(447)", "Delete SimpleType: Vector(448)", "Delete SimpleName: v(449)", "Delete SingleVariableDeclaration(450)", "Delete SimpleName: checkComformantSize(451)", "Delete SimpleName: v(452)", "Delete MethodInvocation(453)", "Delete ExpressionStatement(454)", "Delete SimpleName: alpha(455)", "Delete NumberLiteral: 0(456)", "Delete InfixExpression: ==(457)", "Delete ThisExpression(458)", "Delete ReturnStatement(459)", "Delete IfStatement(460)", "Delete QualifiedName: Map.Entry(461)", "Delete SimpleType: Map.Entry(462)", "Delete SimpleName: Writable(463)", "Delete SimpleType: Writable(464)", "Delete SimpleName: Writable(465)", "Delete SimpleType: Writable(466)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(467)", "Delete SimpleName: e(468)", "Delete SingleVariableDeclaration(469)", "Delete ThisExpression(470)", "Delete SimpleName: getEntries(471)", "Delete MethodInvocation(472)", "Delete SimpleName: entrySet(473)", "Delete MethodInvocation(474)", "Delete PrimitiveType: int(475)", "Delete SimpleName: key(476)", "Delete SimpleName: IntWritable(477)", "Delete SimpleType: IntWritable(478)", "Delete SimpleName: e(479)", "Delete SimpleName: getKey(480)", "Delete MethodInvocation(481)", "Delete CastExpression(482)", "Delete ParenthesizedExpression(483)", "Delete SimpleName: get(484)", "Delete MethodInvocation(485)", "Delete VariableDeclarationFragment(486)", "Delete VariableDeclarationStatement(487)", "Delete ThisExpression(488)", "Delete SimpleName: add(489)", "Delete SimpleName: key(490)", "Delete SimpleName: alpha(491)", "Delete SimpleName: v(492)", "Delete SimpleName: get(493)", "Delete SimpleName: key(494)", "Delete MethodInvocation(495)", "Delete InfixExpression: *(496)", "Delete MethodInvocation(497)", "Delete ExpressionStatement(498)", "Delete Block(499)", "Delete EnhancedForStatement(500)", "Delete ThisExpression(501)", "Delete ReturnStatement(502)", "Delete Block(503)", "Delete MethodDeclaration(504)", "Delete TextElement: x = v + x(505)", "Delete TagElement(506)", "Delete SimpleName: v2(507)", "Delete TagElement: @param(508)", "Delete TextElement:  x = v + x(509)", "Delete TagElement: @return(510)", "Delete Javadoc(511)", "Delete Modifier: public(512)", "Delete SimpleName: DenseVector(513)", "Delete SimpleType: DenseVector(514)", "Delete SimpleName: add(515)", "Delete SimpleName: Vector(516)", "Delete SimpleType: Vector(517)", "Delete SimpleName: v2(518)", "Delete SingleVariableDeclaration(519)", "Delete SimpleName: checkComformantSize(520)", "Delete SimpleName: v2(521)", "Delete MethodInvocation(522)", "Delete ExpressionStatement(523)", "Delete QualifiedName: Map.Entry(524)", "Delete SimpleType: Map.Entry(525)", "Delete SimpleName: Writable(526)", "Delete SimpleType: Writable(527)", "Delete SimpleName: Writable(528)", "Delete SimpleType: Writable(529)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(530)", "Delete SimpleName: e(531)", "Delete SingleVariableDeclaration(532)", "Delete ThisExpression(533)", "Delete SimpleName: getEntries(534)", "Delete MethodInvocation(535)", "Delete SimpleName: entrySet(536)", "Delete MethodInvocation(537)", "Delete PrimitiveType: int(538)", "Delete SimpleName: key(539)", "Delete SimpleName: IntWritable(540)", "Delete SimpleType: IntWritable(541)", "Delete SimpleName: e(542)", "Delete SimpleName: getKey(543)", "Delete MethodInvocation(544)", "Delete CastExpression(545)", "Delete ParenthesizedExpression(546)", "Delete SimpleName: get(547)", "Delete MethodInvocation(548)", "Delete VariableDeclarationFragment(549)", "Delete VariableDeclarationStatement(550)", "Delete ThisExpression(551)", "Delete SimpleName: add(552)", "Delete SimpleName: key(553)", "Delete SimpleName: v2(554)", "Delete SimpleName: get(555)", "Delete SimpleName: key(556)", "Delete MethodInvocation(557)", "Delete MethodInvocation(558)", "Delete ExpressionStatement(559)", "Delete Block(560)", "Delete EnhancedForStatement(561)", "Delete ThisExpression(562)", "Delete ReturnStatement(563)", "Delete Block(564)", "Delete MethodDeclaration(565)", "Delete TextElement: x dot v(566)", "Delete TagElement(567)", "Delete SimpleName: v(568)", "Delete TagElement: @param(569)", "Delete TextElement:  x dot v(570)", "Delete TagElement: @return(571)", "Delete Javadoc(572)", "Delete Modifier: public(573)", "Delete PrimitiveType: double(574)", "Delete SimpleName: dot(575)", "Delete SimpleName: Vector(576)", "Delete SimpleType: Vector(577)", "Delete SimpleName: v(578)", "Delete SingleVariableDeclaration(579)", "Delete SimpleName: checkComformantSize(580)", "Delete SimpleName: v(581)", "Delete MethodInvocation(582)", "Delete ExpressionStatement(583)", "Delete PrimitiveType: double(584)", "Delete SimpleName: cosine(585)", "Delete NumberLiteral: 0.0(586)", "Delete VariableDeclarationFragment(587)", "Delete VariableDeclarationStatement(588)", "Delete PrimitiveType: double(589)", "Delete SimpleName: q_i(590)", "Delete VariableDeclarationFragment(591)", "Delete SimpleName: d_i(592)", "Delete VariableDeclarationFragment(593)", "Delete VariableDeclarationStatement(594)", "Delete PrimitiveType: int(595)", "Delete SimpleName: i(596)", "Delete NumberLiteral: 0(597)", "Delete VariableDeclarationFragment(598)", "Delete VariableDeclarationExpression(599)", "Delete SimpleName: i(600)", "Delete SimpleName: Math(601)", "Delete SimpleName: min(602)", "Delete ThisExpression(603)", "Delete SimpleName: size(604)", "Delete MethodInvocation(605)", "Delete SimpleName: v(606)", "Delete SimpleName: size(607)", "Delete MethodInvocation(608)", "Delete MethodInvocation(609)", "Delete InfixExpression: <(610)", "Delete SimpleName: i(611)", "Delete PostfixExpression: ++(612)", "Delete SimpleName: q_i(613)", "Delete SimpleName: v(614)", "Delete SimpleName: get(615)", "Delete SimpleName: i(616)", "Delete MethodInvocation(617)", "Delete Assignment: =(618)", "Delete ExpressionStatement(619)", "Delete SimpleName: d_i(620)", "Delete ThisExpression(621)", "Delete SimpleName: get(622)", "Delete SimpleName: i(623)", "Delete MethodInvocation(624)", "Delete Assignment: =(625)", "Delete ExpressionStatement(626)", "Delete SimpleName: cosine(627)", "Delete SimpleName: q_i(628)", "Delete SimpleName: d_i(629)", "Delete InfixExpression: *(630)", "Delete Assignment: +=(631)", "Delete ExpressionStatement(632)", "Delete Block(633)", "Delete ForStatement(634)", "Delete SimpleName: cosine(635)", "Delete ThisExpression(636)", "Delete SimpleName: getNorm2(637)", "Delete MethodInvocation(638)", "Delete SimpleName: DenseVector(639)", "Delete SimpleType: DenseVector(640)", "Delete SimpleName: v(641)", "Delete CastExpression(642)", "Delete ParenthesizedExpression(643)", "Delete SimpleName: getNorm2(644)", "Delete MethodInvocation(645)", "Delete InfixExpression: *(646)", "Delete ParenthesizedExpression(647)", "Delete InfixExpression: /(648)", "Delete ReturnStatement(649)", "Delete Block(650)", "Delete MethodDeclaration(651)", "Delete TextElement: v = alpha*v(652)", "Delete TagElement(653)", "Delete SimpleName: alpha(654)", "Delete TagElement: @param(655)", "Delete TextElement:  v = alpha*v(656)", "Delete TagElement: @return(657)", "Delete Javadoc(658)", "Delete Modifier: public(659)", "Delete SimpleName: DenseVector(660)", "Delete SimpleType: DenseVector(661)", "Delete SimpleName: scale(662)", "Delete PrimitiveType: double(663)", "Delete SimpleName: alpha(664)", "Delete SingleVariableDeclaration(665)", "Delete QualifiedName: Map.Entry(666)", "Delete SimpleType: Map.Entry(667)", "Delete SimpleName: Writable(668)", "Delete SimpleType: Writable(669)", "Delete SimpleName: Writable(670)", "Delete SimpleType: Writable(671)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(672)", "Delete SimpleName: e(673)", "Delete SingleVariableDeclaration(674)", "Delete ThisExpression(675)", "Delete SimpleName: entries(676)", "Delete FieldAccess(677)", "Delete SimpleName: entrySet(678)", "Delete MethodInvocation(679)", "Delete ThisExpression(680)", "Delete SimpleName: entries(681)", "Delete FieldAccess(682)", "Delete SimpleName: put(683)", "Delete SimpleName: e(684)", "Delete SimpleName: getKey(685)", "Delete MethodInvocation(686)", "Delete SimpleName: DoubleWritable(687)", "Delete SimpleType: DoubleWritable(688)", "Delete SimpleName: DoubleWritable(689)", "Delete SimpleType: DoubleWritable(690)", "Delete SimpleName: e(691)", "Delete SimpleName: getValue(692)", "Delete MethodInvocation(693)", "Delete CastExpression(694)", "Delete ParenthesizedExpression(695)", "Delete SimpleName: get(696)", "Delete MethodInvocation(697)", "Delete SimpleName: alpha(698)", "Delete InfixExpression: *(699)", "Delete ClassInstanceCreation(700)", "Delete MethodInvocation(701)", "Delete ExpressionStatement(702)", "Delete Block(703)", "Delete EnhancedForStatement(704)", "Delete ThisExpression(705)", "Delete ReturnStatement(706)", "Delete Block(707)", "Delete MethodDeclaration(708)", "Delete TextElement: Computes the given norm of the vector(709)", "Delete TagElement(710)", "Delete SimpleName: type(711)", "Delete TagElement: @param(712)", "Delete TextElement:  norm of the vector(713)", "Delete TagElement: @return(714)", "Delete Javadoc(715)", "Delete Modifier: public(716)", "Delete PrimitiveType: double(717)", "Delete SimpleName: norm(718)", "Delete SimpleName: Norm(719)", "Delete SimpleType: Norm(720)", "Delete SimpleName: type(721)", "Delete SingleVariableDeclaration(722)", "Delete SimpleName: type(723)", "Delete QualifiedName: Norm.One(724)", "Delete InfixExpression: ==(725)", "Delete SimpleName: getNorm1(726)", "Delete MethodInvocation(727)", "Delete ReturnStatement(728)", "Delete SimpleName: type(729)", "Delete QualifiedName: Norm.Two(730)", "Delete InfixExpression: ==(731)", "Delete SimpleName: getNorm2(732)", "Delete MethodInvocation(733)", "Delete ReturnStatement(734)", "Delete SimpleName: type(735)", "Delete QualifiedName: Norm.TwoRobust(736)", "Delete InfixExpression: ==(737)", "Delete SimpleName: getNorm2Robust(738)", "Delete MethodInvocation(739)", "Delete ReturnStatement(740)", "Delete SimpleName: getNormInf(741)", "Delete MethodInvocation(742)", "Delete ReturnStatement(743)", "Delete IfStatement(744)", "Delete IfStatement(745)", "Delete IfStatement(746)", "Delete Block(747)", "Delete MethodDeclaration(748)", "Delete Modifier: protected(749)", "Delete PrimitiveType: double(750)", "Delete SimpleName: getNorm1(751)", "Delete PrimitiveType: double(752)", "Delete SimpleName: sum(753)", "Delete NumberLiteral: 0.0(754)", "Delete VariableDeclarationFragment(755)", "Delete VariableDeclarationStatement(756)", "Delete SimpleName: Set(757)", "Delete SimpleType: Set(758)", "Delete SimpleName: Writable(759)", "Delete SimpleType: Writable(760)", "Delete ParameterizedType: Set<Writable>(761)", "Delete SimpleName: keySet(762)", "Delete ThisExpression(763)", "Delete SimpleName: entries(764)", "Delete FieldAccess(765)", "Delete SimpleName: keySet(766)", "Delete MethodInvocation(767)", "Delete VariableDeclarationFragment(768)", "Delete VariableDeclarationStatement(769)", "Delete SimpleName: Iterator(770)", "Delete SimpleType: Iterator(771)", "Delete SimpleName: Writable(772)", "Delete SimpleType: Writable(773)", "Delete ParameterizedType: Iterator<Writable>(774)", "Delete SimpleName: it(775)", "Delete SimpleName: keySet(776)", "Delete SimpleName: iterator(777)", "Delete MethodInvocation(778)", "Delete VariableDeclarationFragment(779)", "Delete VariableDeclarationStatement(780)", "Delete SimpleName: it(781)", "Delete SimpleName: hasNext(782)", "Delete MethodInvocation(783)", "Delete SimpleName: sum(784)", "Delete SimpleName: get(785)", "Delete SimpleName: IntWritable(786)", "Delete SimpleType: IntWritable(787)", "Delete SimpleName: it(788)", "Delete SimpleName: next(789)", "Delete MethodInvocation(790)", "Delete CastExpression(791)", "Delete ParenthesizedExpression(792)", "Delete SimpleName: get(793)", "Delete MethodInvocation(794)", "Delete MethodInvocation(795)", "Delete Assignment: +=(796)", "Delete ExpressionStatement(797)", "Delete Block(798)", "Delete WhileStatement(799)", "Delete SimpleName: sum(800)", "Delete ReturnStatement(801)", "Delete Block(802)", "Delete MethodDeclaration(803)", "Delete Modifier: protected(804)", "Delete PrimitiveType: double(805)", "Delete SimpleName: getNorm2(806)", "Delete PrimitiveType: double(807)", "Delete SimpleName: square_sum(808)", "Delete NumberLiteral: 0.0(809)", "Delete VariableDeclarationFragment(810)", "Delete VariableDeclarationStatement(811)", "Delete SimpleName: Set(812)", "Delete SimpleType: Set(813)", "Delete SimpleName: Writable(814)", "Delete SimpleType: Writable(815)", "Delete ParameterizedType: Set<Writable>(816)", "Delete SimpleName: keySet(817)", "Delete SimpleName: entries(818)", "Delete SimpleName: keySet(819)", "Delete MethodInvocation(820)", "Delete VariableDeclarationFragment(821)", "Delete VariableDeclarationStatement(822)", "Delete SimpleName: Iterator(823)", "Delete SimpleType: Iterator(824)", "Delete SimpleName: Writable(825)", "Delete SimpleType: Writable(826)", "Delete ParameterizedType: Iterator<Writable>(827)", "Delete SimpleName: it(828)", "Delete SimpleName: keySet(829)", "Delete SimpleName: iterator(830)", "Delete MethodInvocation(831)", "Delete VariableDeclarationFragment(832)", "Delete VariableDeclarationStatement(833)", "Delete SimpleName: it(834)", "Delete SimpleName: hasNext(835)", "Delete MethodInvocation(836)", "Delete PrimitiveType: double(837)", "Delete SimpleName: value(838)", "Delete SimpleName: get(839)", "Delete SimpleName: IntWritable(840)", "Delete SimpleType: IntWritable(841)", "Delete SimpleName: it(842)", "Delete SimpleName: next(843)", "Delete MethodInvocation(844)", "Delete CastExpression(845)", "Delete ParenthesizedExpression(846)", "Delete SimpleName: get(847)", "Delete MethodInvocation(848)", "Delete MethodInvocation(849)", "Delete VariableDeclarationFragment(850)", "Delete VariableDeclarationStatement(851)", "Delete SimpleName: square_sum(852)", "Delete SimpleName: value(853)", "Delete SimpleName: value(854)", "Delete InfixExpression: *(855)", "Delete Assignment: +=(856)", "Delete ExpressionStatement(857)", "Delete Block(858)", "Delete WhileStatement(859)", "Delete SimpleName: Math(860)", "Delete SimpleName: sqrt(861)", "Delete SimpleName: square_sum(862)", "Delete MethodInvocation(863)", "Delete ReturnStatement(864)", "Delete Block(865)", "Delete MethodDeclaration(866)", "Delete TextElement: Returns the robust norm of the vector(867)", "Delete TagElement(868)", "Delete TextElement:  the robust norm of the vector(869)", "Delete TagElement: @return(870)", "Delete Javadoc(871)", "Delete Modifier: protected(872)", "Delete PrimitiveType: double(873)", "Delete SimpleName: getNorm2Robust(874)", "Delete PrimitiveType: double(875)", "Delete SimpleName: scale(876)", "Delete NumberLiteral: 0(877)", "Delete VariableDeclarationFragment(878)", "Delete SimpleName: ssq(879)", "Delete NumberLiteral: 1(880)", "Delete VariableDeclarationFragment(881)", "Delete VariableDeclarationStatement(882)", "Delete PrimitiveType: int(883)", "Delete SimpleName: i(884)", "Delete NumberLiteral: 0(885)", "Delete VariableDeclarationFragment(886)", "Delete VariableDeclarationExpression(887)", "Delete SimpleName: i(888)", "Delete ThisExpression(889)", "Delete SimpleName: size(890)", "Delete MethodInvocation(891)", "Delete InfixExpression: <(892)", "Delete SimpleName: i(893)", "Delete PostfixExpression: ++(894)", "Delete PrimitiveType: double(895)", "Delete SimpleName: val(896)", "Delete SimpleName: get(897)", "Delete SimpleName: i(898)", "Delete MethodInvocation(899)", "Delete VariableDeclarationFragment(900)", "Delete VariableDeclarationStatement(901)", "Delete SimpleName: val(902)", "Delete NumberLiteral: 0(903)", "Delete InfixExpression: !=(904)", "Delete PrimitiveType: double(905)", "Delete SimpleName: absxi(906)", "Delete SimpleName: Math(907)", "Delete SimpleName: abs(908)", "Delete SimpleName: val(909)", "Delete MethodInvocation(910)", "Delete VariableDeclarationFragment(911)", "Delete VariableDeclarationStatement(912)", "Delete SimpleName: scale(913)", "Delete SimpleName: absxi(914)", "Delete InfixExpression: <(915)", "Delete SimpleName: ssq(916)", "Delete NumberLiteral: 1(917)", "Delete SimpleName: ssq(918)", "Delete SimpleName: Math(919)", "Delete SimpleName: pow(920)", "Delete SimpleName: scale(921)", "Delete SimpleName: absxi(922)", "Delete InfixExpression: /(923)", "Delete NumberLiteral: 2(924)", "Delete MethodInvocation(925)", "Delete InfixExpression: *(926)", "Delete InfixExpression: +(927)", "Delete Assignment: =(928)", "Delete ExpressionStatement(929)", "Delete SimpleName: scale(930)", "Delete SimpleName: absxi(931)", "Delete Assignment: =(932)", "Delete ExpressionStatement(933)", "Delete Block(934)", "Delete SimpleName: ssq(935)", "Delete SimpleName: ssq(936)", "Delete SimpleName: Math(937)", "Delete SimpleName: pow(938)", "Delete SimpleName: absxi(939)", "Delete SimpleName: scale(940)", "Delete InfixExpression: /(941)", "Delete NumberLiteral: 2(942)", "Delete MethodInvocation(943)", "Delete InfixExpression: +(944)", "Delete Assignment: =(945)", "Delete ExpressionStatement(946)", "Delete IfStatement(947)", "Delete Block(948)", "Delete IfStatement(949)", "Delete Block(950)", "Delete ForStatement(951)", "Delete SimpleName: scale(952)", "Delete SimpleName: Math(953)", "Delete SimpleName: sqrt(954)", "Delete SimpleName: ssq(955)", "Delete MethodInvocation(956)", "Delete InfixExpression: *(957)", "Delete ReturnStatement(958)", "Delete Block(959)", "Delete MethodDeclaration(960)", "Delete TextElement: Returns the infinity norm of the vector(961)", "Delete TagElement(962)", "Delete TextElement:  the infinity norm of the vector(963)", "Delete TagElement: @return(964)", "Delete Javadoc(965)", "Delete Modifier: protected(966)", "Delete PrimitiveType: double(967)", "Delete SimpleName: getNormInf(968)", "Delete PrimitiveType: double(969)", "Delete SimpleName: max(970)", "Delete NumberLiteral: 0.0(971)", "Delete VariableDeclarationFragment(972)", "Delete VariableDeclarationStatement(973)", "Delete PrimitiveType: int(974)", "Delete SimpleName: i(975)", "Delete NumberLiteral: 0(976)", "Delete VariableDeclarationFragment(977)", "Delete VariableDeclarationExpression(978)", "Delete SimpleName: i(979)", "Delete ThisExpression(980)", "Delete SimpleName: size(981)", "Delete MethodInvocation(982)", "Delete InfixExpression: <(983)", "Delete SimpleName: i(984)", "Delete PostfixExpression: ++(985)", "Delete SimpleName: max(986)", "Delete SimpleName: Math(987)", "Delete SimpleName: max(988)", "Delete SimpleName: max(989)", "Delete SimpleName: Math(990)", "Delete SimpleName: abs(991)", "Delete SimpleName: get(992)", "Delete SimpleName: i(993)", "Delete MethodInvocation(994)", "Delete MethodInvocation(995)", "Delete MethodInvocation(996)", "Delete Assignment: =(997)", "Delete ExpressionStatement(998)", "Delete Block(999)", "Delete ForStatement(1000)", "Delete SimpleName: max(1001)", "Delete ReturnStatement(1002)", "Delete Block(1003)", "Delete MethodDeclaration(1004)", "Delete TextElement: Returns a sub-vector.(1005)", "Delete TagElement(1006)", "Delete SimpleName: i0(1007)", "Delete TextElement:  the index of the first element(1008)", "Delete TagElement: @param(1009)", "Delete SimpleName: i1(1010)", "Delete TextElement:  the index of the last element(1011)", "Delete TagElement: @param(1012)", "Delete TextElement:  v[i0:i1](1013)", "Delete TagElement: @return(1014)", "Delete Javadoc(1015)", "Delete Modifier: public(1016)", "Delete SimpleName: DenseVector(1017)", "Delete SimpleType: DenseVector(1018)", "Delete SimpleName: subVector(1019)", "Delete PrimitiveType: int(1020)", "Delete SimpleName: i0(1021)", "Delete SingleVariableDeclaration(1022)", "Delete PrimitiveType: int(1023)", "Delete SimpleName: i1(1024)", "Delete SingleVariableDeclaration(1025)", "Delete SimpleName: DenseVector(1026)", "Delete SimpleType: DenseVector(1027)", "Delete SimpleName: res(1028)", "Delete SimpleName: DenseVector(1029)", "Delete SimpleType: DenseVector(1030)", "Delete ClassInstanceCreation(1031)", "Delete VariableDeclarationFragment(1032)", "Delete VariableDeclarationStatement(1033)", "Delete ThisExpression(1034)", "Delete SimpleName: entries(1035)", "Delete FieldAccess(1036)", "Delete SimpleName: containsKey(1037)", "Delete QualifiedName: Constants.ROWCOUNT(1038)", "Delete MethodInvocation(1039)", "Delete SimpleName: res(1040)", "Delete SimpleName: setRow(1041)", "Delete ThisExpression(1042)", "Delete SimpleName: getRow(1043)", "Delete MethodInvocation(1044)", "Delete MethodInvocation(1045)", "Delete ExpressionStatement(1046)", "Delete IfStatement(1047)", "Delete PrimitiveType: int(1048)", "Delete SimpleName: i(1049)", "Delete SimpleName: i0(1050)", "Delete VariableDeclarationFragment(1051)", "Delete VariableDeclarationExpression(1052)", "Delete SimpleName: i(1053)", "Delete SimpleName: i1(1054)", "Delete InfixExpression: <=(1055)", "Delete SimpleName: i(1056)", "Delete PostfixExpression: ++(1057)", "Delete SimpleName: res(1058)", "Delete SimpleName: set(1059)", "Delete SimpleName: i(1060)", "Delete SimpleName: get(1061)", "Delete SimpleName: i(1062)", "Delete MethodInvocation(1063)", "Delete MethodInvocation(1064)", "Delete ExpressionStatement(1065)", "Delete Block(1066)", "Delete ForStatement(1067)", "Delete SimpleName: res(1068)", "Delete ReturnStatement(1069)", "Delete Block(1070)", "Delete MethodDeclaration(1071)", "Delete Modifier: public(1072)", "Delete PrimitiveType: void(1073)", "Delete SimpleName: zeroFill(1074)", "Delete PrimitiveType: int(1075)", "Delete SimpleName: size(1076)", "Delete SingleVariableDeclaration(1077)", "Delete PrimitiveType: int(1078)", "Delete SimpleName: i(1079)", "Delete NumberLiteral: 0(1080)", "Delete VariableDeclarationFragment(1081)", "Delete VariableDeclarationExpression(1082)", "Delete SimpleName: i(1083)", "Delete SimpleName: size(1084)", "Delete InfixExpression: <(1085)", "Delete SimpleName: i(1086)", "Delete PostfixExpression: ++(1087)", "Delete ThisExpression(1088)", "Delete SimpleName: set(1089)", "Delete SimpleName: i(1090)", "Delete NumberLiteral: 0(1091)", "Delete MethodInvocation(1092)", "Delete ExpressionStatement(1093)", "Delete Block(1094)", "Delete ForStatement(1095)", "Delete Block(1096)", "Delete MethodDeclaration(1097)", "Delete Modifier: public(1098)", "Delete SimpleName: String(1099)", "Delete SimpleType: String(1100)", "Delete SimpleName: toString(1101)", "Delete SimpleName: StringBuilder(1102)", "Delete SimpleType: StringBuilder(1103)", "Delete SimpleName: result(1104)", "Delete SimpleName: StringBuilder(1105)", "Delete SimpleType: StringBuilder(1106)", "Delete ClassInstanceCreation(1107)", "Delete VariableDeclarationFragment(1108)", "Delete VariableDeclarationStatement(1109)", "Delete PrimitiveType: int(1110)", "Delete SimpleName: i(1111)", "Delete NumberLiteral: 0(1112)", "Delete VariableDeclarationFragment(1113)", "Delete VariableDeclarationExpression(1114)", "Delete SimpleName: i(1115)", "Delete ThisExpression(1116)", "Delete SimpleName: size(1117)", "Delete MethodInvocation(1118)", "Delete InfixExpression: <(1119)", "Delete SimpleName: i(1120)", "Delete PostfixExpression: ++(1121)", "Delete SimpleName: result(1122)", "Delete SimpleName: append(1123)", "Delete ThisExpression(1124)", "Delete SimpleName: get(1125)", "Delete SimpleName: i(1126)", "Delete MethodInvocation(1127)", "Delete StringLiteral: \" \"(1128)", "Delete InfixExpression: +(1129)", "Delete MethodInvocation(1130)", "Delete ExpressionStatement(1131)", "Delete Block(1132)", "Delete ForStatement(1133)", "Delete SimpleName: result(1134)", "Delete SimpleName: toString(1135)", "Delete MethodInvocation(1136)", "Delete ReturnStatement(1137)", "Delete Block(1138)", "Delete MethodDeclaration(1139)", "Delete TypeDeclaration: class(1140)"]}}, {"Matrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL PackageDeclaration", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL Javadoc", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL QualifiedName: org.apache.hama.matrix", "DEL TagElement", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL PrimitiveType: void", "DEL SimpleType: IOException", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleName: B", "DEL TextElement: Gets the vector of row", "DEL SimpleName: row", "DEL SimpleName: column", "DEL SimpleName: i", "DEL SimpleType: IOException", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL SimpleName: j", "DEL PrimitiveType: double", "DEL PrimitiveType: double", "DEL SimpleName: IOException", "DEL SimpleName: name", "DEL MethodDeclaration", "DEL Javadoc", "DEL Javadoc", "DEL PrimitiveType: int", "DEL TextElement:  a number of columns of the matrix", "DEL TextElement: Gets the label of the column", "DEL TagElement: @param", "DEL SimpleName: Matrix", "DEL SimpleName: IOException", "DEL SimpleType: IOException", "DEL SimpleName: i0", "DEL SimpleName: String", "DEL Javadoc", "DEL SimpleName: Matrix", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL SimpleType: Matrix", "DEL EnumDeclaration", "DEL Javadoc", "DEL SimpleName: i", "DEL PrimitiveType: void", "DEL SimpleName: Frobenius", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleType: Vector", "DEL SimpleName: SubMatrix", "DEL SimpleName: IOException", "DEL SimpleName: setColumn", "DEL TagElement: @param", "DEL SimpleType: String", "DEL SimpleName: Infinity", "DEL Modifier: public", "DEL SimpleName: i0", "DEL SimpleName: IOException", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL TagElement", "DEL TextElement:  ith row of the matrix", "DEL Modifier: public", "DEL Javadoc", "DEL Javadoc", "DEL SimpleType: IOException", "DEL SimpleName: C", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL TextElement: Sets the dimension of matrix", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL TextElement:  the vector of column", "DEL TagElement: @throws", "DEL SimpleType: String", "DEL TagElement", "DEL TagElement: @param", "DEL TagElement: @return", "DEL TextElement: Supported matrix-norms.", "DEL TagElement", "DEL TextElement: The maximum absolute row sum ", "DEL TextElement:  the name of the matrix", "DEL TagElement: @throws", "DEL SimpleName: j1", "DEL TagElement", "DEL SimpleType: Matrix", "DEL PrimitiveType: void", "DEL SimpleType: String", "DEL SimpleName: value", "DEL PrimitiveType: int", "DEL SimpleName: getColumnLabel", "DEL TagElement: @return", "DEL TagElement: @throws", "DEL SimpleName: i", "DEL Javadoc", "DEL Javadoc", "DEL PrimitiveType: int", "DEL TagElement: @throws", "DEL SimpleName: getColumn", "DEL SimpleType: SubMatrix", "DEL MethodDeclaration", "DEL Modifier: public", "DEL TextElement: Basic matrix interface.", "DEL SimpleName: Matrix", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL SimpleName: Vector", "DEL TagElement", "DEL TagElement: @param", "DEL SimpleName: subMatrix", "DEL SimpleName: IOException", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: Maxvalue", "DEL TextElement: Sets the double value of (i, j)", "DEL TagElement: @param", "DEL SimpleName: i", "DEL TextElement: Returns the matrix type", "DEL SimpleName: path", "DEL PrimitiveType: int", "DEL TagElement: @throws", "DEL SimpleName: IOException", "DEL SimpleName: String", "DEL SimpleType: Matrix", "DEL TextElement:  true if saved", "DEL SimpleName: setRowLabel", "DEL SimpleName: vector", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleName: j", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL TagElement", "DEL TagElement", "DEL TextElement: Get the number of column of the matrix from the meta-data column", "DEL EnumConstantDeclaration", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: j", "DEL SingleVariableDeclaration", "DEL PrimitiveType: double", "DEL SimpleName: j0", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleName: j", "DEL SimpleName: Matrix", "DEL SimpleName: IOException", "DEL Javadoc", "DEL PrimitiveType: void", "DEL SimpleName: IOException", "DEL SimpleName: i", "DEL SimpleName: i1", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL TextElement:  the value of entry", "DEL Javadoc", "DEL Modifier: public", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL TagElement: @throws", "DEL SimpleName: i", "DEL SimpleName: j", "DEL SimpleName: rows", "DEL SimpleName: j", "DEL TagElement: @throws", "DEL SimpleName: String", "DEL SimpleName: IOException", "DEL SimpleName: Vector", "DEL SingleVariableDeclaration", "DEL TextElement: Gets the double value of (i, j)", "DEL TextElement:  the column index of the matrix", "DEL SimpleName: i", "DEL Modifier: public", "DEL TextElement: A=alpha*B", "DEL SimpleType: Matrix", "DEL SimpleName: multAdd", "DEL TagElement", "DEL Javadoc", "DEL PrimitiveType: boolean", "DEL PrimitiveType: void", "DEL SimpleType: String", "DEL TextElement: Set the row of a matrix to a given vector", "DEL TextElement:  jth column of the matrix", "DEL SimpleName: IOException", "DEL SimpleName: columns", "DEL TextElement:  A", "DEL SimpleType: IOException", "DEL SimpleName: set", "DEL TextElement: Gets the label of the row", "DEL SimpleName: j", "DEL TextElement: (in hbase, path is the tablename. in filesystem, path may be a file path.)", "DEL SimpleName: j", "DEL TagElement: @return", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL TagElement: @return", "DEL TagElement", "DEL SimpleName: Matrix", "DEL SimpleName: getType", "DEL TagElement", "DEL TextElement: Get the number of row of the matrix from the meta-data column", "DEL SimpleType: IOException", "DEL TagElement: @param", "DEL SimpleName: Vector", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL Javadoc", "DEL Modifier: public", "DEL TagElement", "DEL SimpleName: IOException", "DEL SimpleName: columns", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL TextElement: Maximum absolute column sum ", "DEL SimpleName: alpha", "DEL TextElement:  ith row of the matrix", "DEL Modifier: public", "DEL EnumConstantDeclaration", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: i", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL TextElement:  jth column of the matrix", "DEL SimpleName: Exception", "DEL TagElement: @throws", "DEL TagElement: @return", "DEL SimpleType: Matrix", "DEL SimpleName: alpha", "DEL TagElement: @throws", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: set", "DEL TextElement: A(i, j) += value", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL TagElement: @throws", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL SimpleName: column", "DEL SimpleName: C", "DEL TagElement", "DEL SimpleName: getRows", "DEL SimpleType: Vector", "DEL MethodDeclaration", "DEL SimpleName: i1", "DEL Javadoc", "DEL TagElement: @param", "DEL TextElement:  the number of rows", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL TagElement: @param", "DEL SimpleName: path", "DEL SimpleName: i", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL SimpleType: String", "DEL PrimitiveType: double", "DEL SimpleName: name", "DEL TagElement: @throws", "DEL SingleVariableDeclaration", "DEL TextElement:  the value of entry", "DEL TextElement:  A", "DEL Javadoc", "DEL TagElement: @return", "DEL SimpleName: set", "DEL Modifier: public", "DEL SimpleName: alpha", "DEL TextElement: C = alpha*A*B + C", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: name", "DEL Javadoc", "DEL TagElement: @return", "DEL TagElement: @throws", "DEL SimpleName: Norm", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL Javadoc", "DEL TextElement: Close current matrix.", "DEL SimpleName: j1", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL TagElement: @throws", "DEL SingleVariableDeclaration", "DEL TagElement: @return", "DEL TextElement:  the start index of row", "DEL TextElement: columns from a bigger matrix. The sub matrix is a in-memory operation only.", "DEL TagElement: @throws", "DEL PrimitiveType: int", "DEL SimpleName: getPath", "DEL TagElement", "DEL MethodDeclaration", "DEL Javadoc", "DEL SimpleName: j", "DEL TagElement", "DEL TagElement", "DEL TextElement:  the end index of column", "DEL SimpleName: IOException", "DEL TagElement: @throws", "DEL MethodDeclaration", "DEL SimpleName: name", "DEL MethodDeclaration", "DEL TextElement: Largest entry in absolute value.  ", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL TextElement: Sets the label of the column", "DEL TagElement: @param", "DEL TextElement:  C", "DEL MethodDeclaration", "DEL TextElement:  the row index of the matrix", "DEL PrimitiveType: void", "DEL SimpleName: IOException", "DEL SimpleName: IOException", "DEL SimpleName: rows", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: save", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL SimpleType: String", "DEL SimpleName: close", "DEL TextElement: Sets the label of the row", "DEL SimpleType: Vector", "DEL SimpleName: String", "DEL SimpleName: B", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL SimpleName: One", "DEL TagElement: @return", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: Vector", "DEL TagElement: @throws", "DEL SimpleName: IOException", "DEL TextElement:  the start index of column", "DEL TextElement:  the sub matrix of matrix", "DEL TagElement: @throws", "DEL SimpleName: IOException", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleType: Matrix", "DEL PrimitiveType: int", "DEL TagElement", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL PrimitiveType: double", "DEL EnumConstantDeclaration", "DEL SimpleName: getRow", "DEL TagElement: @param", "DEL SimpleType: IOException", "DEL SimpleName: j0", "DEL SimpleName: Matrix", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL SimpleName: vector", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL TextElement:  the matrix type", "DEL TagElement: @return", "DEL SimpleName: j", "DEL SimpleName: value", "DEL TextElement: Return the matrix path. ", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL TagElement: @throws", "DEL PrimitiveType: int", "DEL TextElement: Set the column of a matrix to a given vector", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL TagElement: @throws", "DEL Modifier: public", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL TextElement:  the vector of row", "DEL SimpleName: IOException", "DEL TagElement", "DEL SimpleName: j", "DEL SimpleName: setRow", "DEL TagElement: @return", "DEL Javadoc", "DEL SimpleName: i", "DEL Modifier: public", "DEL TextElement:  the number of columns", "DEL SimpleType: IOException", "DEL TagElement", "DEL SimpleName: IOException", "DEL Javadoc", "DEL TextElement: Returns the sub matrix formed by selecting certain rows and", "DEL SimpleName: setDimension", "DEL TagElement", "DEL SimpleName: B", "DEL TagElement: @param", "DEL SimpleType: IOException", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleName: B", "DEL TagElement", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: alpha", "DEL SimpleType: Matrix", "DEL Javadoc", "DEL SimpleName: IOException", "DEL SimpleName: vector", "DEL TagElement: @param", "DEL TextElement: Gets the vector of column", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL TextElement: Save to a table or file", "DEL SimpleName: IOException", "DEL PrimitiveType: int", "DEL SimpleName: IOException", "DEL SimpleName: B", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL SimpleName: setColumnLabel", "DEL TagElement: @param", "DEL TagElement: @param", "DEL TagElement: @param", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL TagElement", "DEL SimpleName: getRowLabel", "DEL SimpleType: Vector", "DEL SimpleName: vector", "DEL SimpleName: IOException", "DEL SimpleName: Matrix", "DEL TypeDeclaration: interface", "DEL SimpleName: getColumns", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleType: IOException", "DEL TextElement: A=B", "DEL TagElement: @throws", "DEL SimpleType: IOException", "DEL SimpleName: value", "DEL EnumConstantDeclaration", "DEL Modifier: public", "DEL SimpleName: Matrix", "DEL Javadoc", "DEL PrimitiveType: int", "DEL Javadoc", "DEL SimpleName: add", "DEL Modifier: public", "DEL Javadoc", "DEL TextElement: The root of sum of the sum of squares ", "DEL SimpleType: IOException", "DEL TextElement:  the end index of row", "DEL SingleVariableDeclaration", "DEL TagElement: @return", "DEL Javadoc", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL TextElement:  a number of rows of the matrix", "DEL SimpleName: B", "DEL SimpleName: IOException"]}]}}, {"Matrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete TextElement: Basic matrix interface.(20)", "Delete TagElement(21)", "Delete Javadoc(22)", "Delete Modifier: public(23)", "Delete SimpleName: Matrix(24)", "Delete TextElement: Gets the double value of (i, j)(25)", "Delete TagElement(26)", "Delete SimpleName: i(27)", "Delete TextElement:  ith row of the matrix(28)", "Delete TagElement: @param(29)", "Delete SimpleName: j(30)", "Delete TextElement:  jth column of the matrix(31)", "Delete TagElement: @param(32)", "Delete TextElement:  the value of entry(33)", "Delete TagElement: @return(34)", "Delete SimpleName: IOException(35)", "Delete TagElement: @throws(36)", "Delete Javadoc(37)", "Delete Modifier: public(38)", "Delete PrimitiveType: double(39)", "Delete SimpleName: get(40)", "Delete PrimitiveType: int(41)", "Delete SimpleName: i(42)", "Delete SingleVariableDeclaration(43)", "Delete PrimitiveType: int(44)", "Delete SimpleName: j(45)", "Delete SingleVariableDeclaration(46)", "Delete SimpleName: IOException(47)", "Delete SimpleType: IOException(48)", "Delete MethodDeclaration(49)", "Delete TextElement: Gets the vector of row(50)", "Delete TagElement(51)", "Delete SimpleName: i(52)", "Delete TextElement:  the row index of the matrix(53)", "Delete TagElement: @param(54)", "Delete TextElement:  the vector of row(55)", "Delete TagElement: @return(56)", "Delete SimpleName: IOException(57)", "Delete TagElement: @throws(58)", "Delete Javadoc(59)", "Delete Modifier: public(60)", "Delete SimpleName: Vector(61)", "Delete SimpleType: Vector(62)", "Delete SimpleName: getRow(63)", "Delete PrimitiveType: int(64)", "Delete SimpleName: i(65)", "Delete SingleVariableDeclaration(66)", "Delete SimpleName: IOException(67)", "Delete SimpleType: IOException(68)", "Delete MethodDeclaration(69)", "Delete TextElement: Gets the vector of column(70)", "Delete TagElement(71)", "Delete SimpleName: j(72)", "Delete TextElement:  the column index of the matrix(73)", "Delete TagElement: @param(74)", "Delete TextElement:  the vector of column(75)", "Delete TagElement: @return(76)", "Delete SimpleName: IOException(77)", "Delete TagElement: @throws(78)", "Delete Javadoc(79)", "Delete Modifier: public(80)", "Delete SimpleName: Vector(81)", "Delete SimpleType: Vector(82)", "Delete SimpleName: getColumn(83)", "Delete PrimitiveType: int(84)", "Delete SimpleName: j(85)", "Delete SingleVariableDeclaration(86)", "Delete SimpleName: IOException(87)", "Delete SimpleType: IOException(88)", "Delete MethodDeclaration(89)", "Delete TextElement: Get the number of row of the matrix from the meta-data column(90)", "Delete TagElement(91)", "Delete TextElement:  a number of rows of the matrix(92)", "Delete TagElement: @return(93)", "Delete SimpleName: IOException(94)", "Delete TagElement: @throws(95)", "Delete Javadoc(96)", "Delete Modifier: public(97)", "Delete PrimitiveType: int(98)", "Delete SimpleName: getRows(99)", "Delete SimpleName: IOException(100)", "Delete SimpleType: IOException(101)", "Delete MethodDeclaration(102)", "Delete TextElement: Get the number of column of the matrix from the meta-data column(103)", "Delete TagElement(104)", "Delete TextElement:  a number of columns of the matrix(105)", "Delete TagElement: @return(106)", "Delete SimpleName: IOException(107)", "Delete TagElement: @throws(108)", "Delete Javadoc(109)", "Delete Modifier: public(110)", "Delete PrimitiveType: int(111)", "Delete SimpleName: getColumns(112)", "Delete SimpleName: IOException(113)", "Delete SimpleType: IOException(114)", "Delete MethodDeclaration(115)", "Delete TextElement: Gets the label of the row(116)", "Delete TagElement(117)", "Delete SimpleName: IOException(118)", "Delete TagElement: @throws(119)", "Delete Javadoc(120)", "Delete Modifier: public(121)", "Delete SimpleName: String(122)", "Delete SimpleType: String(123)", "Delete SimpleName: getRowLabel(124)", "Delete PrimitiveType: int(125)", "Delete SimpleName: i(126)", "Delete SingleVariableDeclaration(127)", "Delete SimpleName: IOException(128)", "Delete SimpleType: IOException(129)", "Delete MethodDeclaration(130)", "Delete TextElement: Gets the label of the column(131)", "Delete TagElement(132)", "Delete SimpleName: IOException(133)", "Delete TagElement: @throws(134)", "Delete Javadoc(135)", "Delete Modifier: public(136)", "Delete SimpleName: String(137)", "Delete SimpleType: String(138)", "Delete SimpleName: getColumnLabel(139)", "Delete PrimitiveType: int(140)", "Delete SimpleName: j(141)", "Delete SingleVariableDeclaration(142)", "Delete SimpleName: IOException(143)", "Delete SimpleType: IOException(144)", "Delete MethodDeclaration(145)", "Delete TextElement: Return the matrix path. (146)", "Delete TextElement: (in hbase, path is the tablename. in filesystem, path may be a file path.)(147)", "Delete TagElement(148)", "Delete TextElement:  the name of the matrix(149)", "Delete TagElement: @return(150)", "Delete Javadoc(151)", "Delete Modifier: public(152)", "Delete SimpleName: String(153)", "Delete SimpleType: String(154)", "Delete SimpleName: getPath(155)", "Delete MethodDeclaration(156)", "Delete TextElement: Sets the label of the row(157)", "Delete TagElement(158)", "Delete SimpleName: i(159)", "Delete TagElement: @param(160)", "Delete SimpleName: name(161)", "Delete TagElement: @param(162)", "Delete SimpleName: IOException(163)", "Delete TagElement: @throws(164)", "Delete Javadoc(165)", "Delete Modifier: public(166)", "Delete PrimitiveType: void(167)", "Delete SimpleName: setRowLabel(168)", "Delete PrimitiveType: int(169)", "Delete SimpleName: i(170)", "Delete SingleVariableDeclaration(171)", "Delete SimpleName: String(172)", "Delete SimpleType: String(173)", "Delete SimpleName: name(174)", "Delete SingleVariableDeclaration(175)", "Delete SimpleName: IOException(176)", "Delete SimpleType: IOException(177)", "Delete MethodDeclaration(178)", "Delete TextElement: Sets the label of the column(179)", "Delete TagElement(180)", "Delete SimpleName: j(181)", "Delete TagElement: @param(182)", "Delete SimpleName: name(183)", "Delete TagElement: @param(184)", "Delete SimpleName: IOException(185)", "Delete TagElement: @throws(186)", "Delete Javadoc(187)", "Delete Modifier: public(188)", "Delete PrimitiveType: void(189)", "Delete SimpleName: setColumnLabel(190)", "Delete PrimitiveType: int(191)", "Delete SimpleName: j(192)", "Delete SingleVariableDeclaration(193)", "Delete SimpleName: String(194)", "Delete SimpleType: String(195)", "Delete SimpleName: name(196)", "Delete SingleVariableDeclaration(197)", "Delete SimpleName: IOException(198)", "Delete SimpleType: IOException(199)", "Delete MethodDeclaration(200)", "Delete TextElement: Sets the double value of (i, j)(201)", "Delete TagElement(202)", "Delete SimpleName: i(203)", "Delete TextElement:  ith row of the matrix(204)", "Delete TagElement: @param(205)", "Delete SimpleName: j(206)", "Delete TextElement:  jth column of the matrix(207)", "Delete TagElement: @param(208)", "Delete SimpleName: value(209)", "Delete TextElement:  the value of entry(210)", "Delete TagElement: @param(211)", "Delete SimpleName: IOException(212)", "Delete TagElement: @throws(213)", "Delete Javadoc(214)", "Delete Modifier: public(215)", "Delete PrimitiveType: void(216)", "Delete SimpleName: set(217)", "Delete PrimitiveType: int(218)", "Delete SimpleName: i(219)", "Delete SingleVariableDeclaration(220)", "Delete PrimitiveType: int(221)", "Delete SimpleName: j(222)", "Delete SingleVariableDeclaration(223)", "Delete PrimitiveType: double(224)", "Delete SimpleName: value(225)", "Delete SingleVariableDeclaration(226)", "Delete SimpleName: IOException(227)", "Delete SimpleType: IOException(228)", "Delete MethodDeclaration(229)", "Delete TextElement: A=alpha*B(230)", "Delete TagElement(231)", "Delete SimpleName: alpha(232)", "Delete TagElement: @param(233)", "Delete SimpleName: B(234)", "Delete TagElement: @param(235)", "Delete TextElement:  A(236)", "Delete TagElement: @return(237)", "Delete SimpleName: IOException(238)", "Delete TagElement: @throws(239)", "Delete Javadoc(240)", "Delete Modifier: public(241)", "Delete SimpleName: Matrix(242)", "Delete SimpleType: Matrix(243)", "Delete SimpleName: set(244)", "Delete PrimitiveType: double(245)", "Delete SimpleName: alpha(246)", "Delete SingleVariableDeclaration(247)", "Delete SimpleName: Matrix(248)", "Delete SimpleType: Matrix(249)", "Delete SimpleName: B(250)", "Delete SingleVariableDeclaration(251)", "Delete SimpleName: IOException(252)", "Delete SimpleType: IOException(253)", "Delete MethodDeclaration(254)", "Delete TextElement: A=B(255)", "Delete TagElement(256)", "Delete SimpleName: B(257)", "Delete TagElement: @param(258)", "Delete TextElement:  A(259)", "Delete TagElement: @return(260)", "Delete SimpleName: IOException(261)", "Delete TagElement: @throws(262)", "Delete Javadoc(263)", "Delete Modifier: public(264)", "Delete SimpleName: Matrix(265)", "Delete SimpleType: Matrix(266)", "Delete SimpleName: set(267)", "Delete SimpleName: Matrix(268)", "Delete SimpleType: Matrix(269)", "Delete SimpleName: B(270)", "Delete SingleVariableDeclaration(271)", "Delete SimpleName: IOException(272)", "Delete SimpleType: IOException(273)", "Delete MethodDeclaration(274)", "Delete TextElement: Set the row of a matrix to a given vector(275)", "Delete TagElement(276)", "Delete SimpleName: row(277)", "Delete TagElement: @param(278)", "Delete SimpleName: vector(279)", "Delete TagElement: @param(280)", "Delete SimpleName: IOException(281)", "Delete TagElement: @throws(282)", "Delete Javadoc(283)", "Delete Modifier: public(284)", "Delete PrimitiveType: void(285)", "Delete SimpleName: setRow(286)", "Delete PrimitiveType: int(287)", "Delete SimpleName: row(288)", "Delete SingleVariableDeclaration(289)", "Delete SimpleName: Vector(290)", "Delete SimpleType: Vector(291)", "Delete SimpleName: vector(292)", "Delete SingleVariableDeclaration(293)", "Delete SimpleName: IOException(294)", "Delete SimpleType: IOException(295)", "Delete MethodDeclaration(296)", "Delete TextElement: Set the column of a matrix to a given vector(297)", "Delete TagElement(298)", "Delete SimpleName: column(299)", "Delete TagElement: @param(300)", "Delete SimpleName: vector(301)", "Delete TagElement: @param(302)", "Delete SimpleName: IOException(303)", "Delete TagElement: @throws(304)", "Delete Javadoc(305)", "Delete Modifier: public(306)", "Delete PrimitiveType: void(307)", "Delete SimpleName: setColumn(308)", "Delete PrimitiveType: int(309)", "Delete SimpleName: column(310)", "Delete SingleVariableDeclaration(311)", "Delete SimpleName: Vector(312)", "Delete SimpleType: Vector(313)", "Delete SimpleName: vector(314)", "Delete SingleVariableDeclaration(315)", "Delete SimpleName: IOException(316)", "Delete SimpleType: IOException(317)", "Delete MethodDeclaration(318)", "Delete TextElement: Sets the dimension of matrix(319)", "Delete TagElement(320)", "Delete SimpleName: rows(321)", "Delete TextElement:  the number of rows(322)", "Delete TagElement: @param(323)", "Delete SimpleName: columns(324)", "Delete TextElement:  the number of columns(325)", "Delete TagElement: @param(326)", "Delete SimpleName: IOException(327)", "Delete TagElement: @throws(328)", "Delete Javadoc(329)", "Delete Modifier: public(330)", "Delete PrimitiveType: void(331)", "Delete SimpleName: setDimension(332)", "Delete PrimitiveType: int(333)", "Delete SimpleName: rows(334)", "Delete SingleVariableDeclaration(335)", "Delete PrimitiveType: int(336)", "Delete SimpleName: columns(337)", "Delete SingleVariableDeclaration(338)", "Delete SimpleName: IOException(339)", "Delete SimpleType: IOException(340)", "Delete MethodDeclaration(341)", "Delete TextElement: A(i, j) += value(342)", "Delete TagElement(343)", "Delete SimpleName: i(344)", "Delete TagElement: @param(345)", "Delete SimpleName: j(346)", "Delete TagElement: @param(347)", "Delete SimpleName: value(348)", "Delete TagElement: @param(349)", "Delete SimpleName: IOException(350)", "Delete TagElement: @throws(351)", "Delete Javadoc(352)", "Delete Modifier: public(353)", "Delete PrimitiveType: void(354)", "Delete SimpleName: add(355)", "Delete PrimitiveType: int(356)", "Delete SimpleName: i(357)", "Delete SingleVariableDeclaration(358)", "Delete PrimitiveType: int(359)", "Delete SimpleName: j(360)", "Delete SingleVariableDeclaration(361)", "Delete PrimitiveType: double(362)", "Delete SimpleName: value(363)", "Delete SingleVariableDeclaration(364)", "Delete SimpleName: IOException(365)", "Delete SimpleType: IOException(366)", "Delete MethodDeclaration(367)", "Delete TextElement: C = alpha*A*B + C(368)", "Delete TagElement(369)", "Delete SimpleName: alpha(370)", "Delete TagElement: @param(371)", "Delete SimpleName: B(372)", "Delete TagElement: @param(373)", "Delete SimpleName: C(374)", "Delete TagElement: @param(375)", "Delete TextElement:  C(376)", "Delete TagElement: @return(377)", "Delete SimpleName: IOException(378)", "Delete TagElement: @throws(379)", "Delete Javadoc(380)", "Delete Modifier: public(381)", "Delete SimpleName: Matrix(382)", "Delete SimpleType: Matrix(383)", "Delete SimpleName: multAdd(384)", "Delete PrimitiveType: double(385)", "Delete SimpleName: alpha(386)", "Delete SingleVariableDeclaration(387)", "Delete SimpleName: Matrix(388)", "Delete SimpleType: Matrix(389)", "Delete SimpleName: B(390)", "Delete SingleVariableDeclaration(391)", "Delete SimpleName: Matrix(392)", "Delete SimpleType: Matrix(393)", "Delete SimpleName: C(394)", "Delete SingleVariableDeclaration(395)", "Delete SimpleName: IOException(396)", "Delete SimpleType: IOException(397)", "Delete MethodDeclaration(398)", "Delete TextElement: Supported matrix-norms.(399)", "Delete TagElement(400)", "Delete Javadoc(401)", "Delete SimpleName: Norm(402)", "Delete TextElement: Maximum absolute column sum (403)", "Delete TagElement(404)", "Delete Javadoc(405)", "Delete SimpleName: One(406)", "Delete EnumConstantDeclaration(407)", "Delete TextElement: The root of sum of the sum of squares (408)", "Delete TagElement(409)", "Delete Javadoc(410)", "Delete SimpleName: Frobenius(411)", "Delete EnumConstantDeclaration(412)", "Delete TextElement: The maximum absolute row sum (413)", "Delete TagElement(414)", "Delete Javadoc(415)", "Delete SimpleName: Infinity(416)", "Delete EnumConstantDeclaration(417)", "Delete TextElement: Largest entry in absolute value.  (418)", "Delete TagElement(419)", "Delete Javadoc(420)", "Delete SimpleName: Maxvalue(421)", "Delete EnumConstantDeclaration(422)", "Delete EnumDeclaration(423)", "Delete TextElement: Save to a table or file(424)", "Delete TagElement(425)", "Delete SimpleName: path(426)", "Delete TagElement: @param(427)", "Delete TextElement:  true if saved(428)", "Delete TagElement: @return(429)", "Delete SimpleName: IOException(430)", "Delete TagElement: @throws(431)", "Delete Javadoc(432)", "Delete Modifier: public(433)", "Delete PrimitiveType: boolean(434)", "Delete SimpleName: save(435)", "Delete SimpleName: String(436)", "Delete SimpleType: String(437)", "Delete SimpleName: path(438)", "Delete SingleVariableDeclaration(439)", "Delete SimpleName: IOException(440)", "Delete SimpleType: IOException(441)", "Delete MethodDeclaration(442)", "Delete TextElement: Returns the matrix type(443)", "Delete TagElement(444)", "Delete TextElement:  the matrix type(445)", "Delete TagElement: @return(446)", "Delete Javadoc(447)", "Delete Modifier: public(448)", "Delete SimpleName: String(449)", "Delete SimpleType: String(450)", "Delete SimpleName: getType(451)", "Delete MethodDeclaration(452)", "Delete TextElement: Returns the sub matrix formed by selecting certain rows and(453)", "Delete TextElement: columns from a bigger matrix. The sub matrix is a in-memory operation only.(454)", "Delete TagElement(455)", "Delete SimpleName: i0(456)", "Delete TextElement:  the start index of row(457)", "Delete TagElement: @param(458)", "Delete SimpleName: i1(459)", "Delete TextElement:  the end index of row(460)", "Delete TagElement: @param(461)", "Delete SimpleName: j0(462)", "Delete TextElement:  the start index of column(463)", "Delete TagElement: @param(464)", "Delete SimpleName: j1(465)", "Delete TextElement:  the end index of column(466)", "Delete TagElement: @param(467)", "Delete TextElement:  the sub matrix of matrix(468)", "Delete TagElement: @return(469)", "Delete SimpleName: IOException(470)", "Delete TagElement: @throws(471)", "Delete Javadoc(472)", "Delete Modifier: public(473)", "Delete SimpleName: SubMatrix(474)", "Delete SimpleType: SubMatrix(475)", "Delete SimpleName: subMatrix(476)", "Delete PrimitiveType: int(477)", "Delete SimpleName: i0(478)", "Delete SingleVariableDeclaration(479)", "Delete PrimitiveType: int(480)", "Delete SimpleName: i1(481)", "Delete SingleVariableDeclaration(482)", "Delete PrimitiveType: int(483)", "Delete SimpleName: j0(484)", "Delete SingleVariableDeclaration(485)", "Delete PrimitiveType: int(486)", "Delete SimpleName: j1(487)", "Delete SingleVariableDeclaration(488)", "Delete SimpleName: IOException(489)", "Delete SimpleType: IOException(490)", "Delete MethodDeclaration(491)", "Delete TextElement: Close current matrix.(492)", "Delete TagElement(493)", "Delete SimpleName: Exception(494)", "Delete TagElement: @throws(495)", "Delete Javadoc(496)", "Delete Modifier: public(497)", "Delete PrimitiveType: void(498)", "Delete SimpleName: close(499)", "Delete SimpleName: IOException(500)", "Delete SimpleType: IOException(501)", "Delete MethodDeclaration(502)", "Delete TypeDeclaration: interface(503)"]}}, {"SparseMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL Javadoc", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: limitations under the License.", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TagElement", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL PackageDeclaration", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: or more contributor license agreements.  See the NOTICE file"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Random"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Get", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HTable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Scan", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.RandomVariable", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: conf", "DEL SimpleName: Get", "DEL PrimitiveType: double", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: getSimpleName", "DEL MethodInvocation", "DEL TextElement: It is an internal used for map/reduce.", "DEL SimpleName: get", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL ReturnStatement", "DEL SimpleName: IOException", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: getRowIndex", "DEL NumberLiteral: 2", "DEL SimpleType: Map.Entry", "DEL IfStatement", "DEL SimpleName: tryToCreateTable", "DEL SimpleType: Get", "DEL SimpleName: row", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleType: IOException", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: put", "DEL StringLiteral: \", \"", "DEL SimpleName: j", "DEL TagElement: @param", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: SparseMatrix", "DEL SimpleName: HamaConfiguration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL TextElement:  configuration object", "DEL SimpleName: addFamily", "DEL SimpleName: n", "DEL IfStatement", "DEL SimpleName: toDouble", "DEL SimpleName: IOException", "DEL SimpleName: conf", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: getPath", "DEL ClassInstanceCreation", "DEL SimpleName: m", "DEL VariableDeclarationExpression", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: clear", "DEL ExpressionStatement", "DEL Block", "DEL Javadoc", "DEL SimpleName: subMatrix", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL InfixExpression: !=", "DEL IfStatement", "DEL TagElement: @throws", "DEL PrimitiveType: byte", "DEL ThisExpression", "DEL MethodDeclaration", "DEL SimpleName: Result", "DEL PrimitiveType: int", "DEL Javadoc", "DEL SimpleName: Get", "DEL SimpleName: Bytes", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: Writable", "DEL SimpleName: Writable", "DEL TagElement", "DEL SimpleName: value", "DEL TagElement: @param", "DEL VariableDeclarationExpression", "DEL SimpleName: IOException", "DEL SimpleName: Override", "DEL SimpleName: i", "DEL Assignment: =", "DEL SimpleName: i0", "DEL PrimitiveType: int", "DEL SimpleName: vector", "DEL SimpleName: put", "DEL SimpleName: get", "DEL SimpleName: value", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: SparseVector", "DEL SimpleName: table", "DEL Modifier: public", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: result", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: rand", "DEL Modifier: public", "DEL SimpleName: HTable", "DEL NumberLiteral: 0", "DEL SimpleName: BytesUtil", "DEL SimpleName: table", "DEL SimpleName: entrySet", "DEL SimpleName: SparseMatrix", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: Override", "DEL TextElement:  the row index of the matrix", "DEL SimpleName: add", "DEL SimpleName: conf", "DEL SimpleName: Override", "DEL StringLiteral: \" * \"", "DEL SimpleName: m", "DEL VariableDeclarationStatement", "DEL SimpleName: i", "DEL TagElement: @return", "DEL SimpleName: n", "DEL SimpleName: vector", "DEL SimpleName: toBytes", "DEL Modifier: static", "DEL Block", "DEL SimpleName: i", "DEL SimpleType: DoubleWritable", "DEL Modifier: final", "DEL InfixExpression: >", "DEL SimpleName: SparseVector", "DEL Modifier: public", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: put", "DEL TagElement: @throws", "DEL MarkerAnnotation", "DEL StringLiteral: \" random matrix : \"", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL SimpleName: Matrix", "DEL SimpleName: Override", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: r", "DEL SimpleType: Matrix", "DEL TextElement: Returns type of matrix", "DEL InfixExpression: <", "DEL SimpleType: SparseMatrix", "DEL SimpleName: getValue", "DEL SingleVariableDeclaration", "DEL SimpleName: Vector", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL PrimitiveType: double", "DEL SimpleName: m", "DEL ReturnStatement", "DEL SimpleName: Get", "DEL SimpleType: SparseVector", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: put", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: Put", "DEL ThisExpression", "DEL MethodDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: String", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL MarkerAnnotation", "DEL TypeLiteral", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Override", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: getRows", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL TextElement: Generate matrix with random elements", "DEL SimpleName: closed", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL SimpleName: info", "DEL SimpleName: set", "DEL SimpleName: n", "DEL SimpleName: value", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleType: Put", "DEL SimpleName: j", "DEL MethodDeclaration", "DEL SimpleName: i", "DEL SimpleName: column", "DEL SimpleName: m", "DEL MarkerAnnotation", "DEL SimpleType: Writable", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: Vector", "DEL SimpleName: table", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: SparseMatrix", "DEL SingleVariableDeclaration", "DEL TextElement: Load a matrix from an existed matrix table whose tablename is 'matrixpath' !!", "DEL QualifiedName: Map.Entry", "DEL SimpleName: setColumn", "DEL ThisExpression", "DEL SimpleName: Bytes", "DEL MethodDeclaration", "DEL SimpleName: conf", "DEL SimpleName: TABLE_PREFIX", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL SimpleName: B", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: j", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: table", "DEL SimpleType: Writable", "DEL SimpleName: matrixpath", "DEL SimpleName: toBytes", "DEL TextElement: Gets the vector of row", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: getEntries", "DEL PrimitiveType: void", "DEL NullLiteral", "DEL SimpleName: n", "DEL SimpleName: row", "DEL SimpleName: Bytes", "DEL SimpleName: IOException", "DEL CastExpression", "DEL MethodInvocation", "DEL IfStatement", "DEL ConditionalExpression", "DEL TagElement: @param", "DEL SimpleName: Matrix", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: matrixPath", "DEL TagElement: @param", "DEL SimpleName: i", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleName: setRow", "DEL SimpleName: IOException", "DEL InfixExpression: <", "DEL PrimitiveType: int", "DEL InfixExpression: <", "DEL SimpleName: BytesUtil", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: SparseMatrix", "DEL SimpleName: random", "DEL PrimitiveType: double", "DEL SimpleName: vector", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleType: HamaConfiguration", "DEL TagElement", "DEL MarkerAnnotation", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL SimpleName: j0", "DEL SimpleName: multAdd", "DEL PrimitiveType: void", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL CastExpression", "DEL TagElement", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleType: SparseVector", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: valueOf", "DEL SimpleName: C", "DEL StringLiteral: \"Create the \"", "DEL VariableDeclarationStatement", "DEL TextElement:  an m-by-n matrix with uniformly distributed random elements.", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: valueOf", "DEL SimpleType: SparseVector", "DEL TypeDeclaration: class", "DEL SimpleName: getRowIndex", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: addColumn", "DEL SimpleName: Matrix", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleType: Vector", "DEL Dimension", "DEL InfixExpression: ||", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL TextElement:  the number of rows.", "DEL SimpleName: r", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL SimpleName: valueOf", "DEL Block", "DEL SimpleType: Put", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL SimpleType: Random", "DEL SimpleName: get", "DEL Block", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: j", "DEL TagElement: @inheritDoc", "DEL SimpleName: get", "DEL SimpleName: Put", "DEL SimpleName: SparseMatrix", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: size", "DEL SimpleName: IOException", "DEL SimpleName: matrixpath", "DEL SimpleName: i1", "DEL PrimitiveType: int", "DEL SimpleName: IOException", "DEL SimpleType: Get", "DEL MethodDeclaration", "DEL SimpleType: SubMatrix", "DEL SimpleName: set", "DEL SimpleType: Matrix", "DEL Javadoc", "DEL SimpleName: rand", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: SparseMatrix", "DEL SimpleName: n", "DEL SimpleType: HamaConfiguration", "DEL SimpleName: j", "DEL SimpleName: vector", "DEL SimpleName: e", "DEL SimpleName: getClass", "DEL SimpleName: j", "DEL MethodInvocation", "DEL SimpleName: getRow", "DEL Block", "DEL SimpleType: Put", "DEL SimpleName: conf", "DEL SimpleName: rand", "DEL ClassInstanceCreation", "DEL SimpleName: getColumn", "DEL SimpleName: j1", "DEL SimpleName: j", "DEL SimpleName: String", "DEL SimpleName: HamaConfiguration", "DEL ForStatement", "DEL TextElement:  the vector of row", "DEL SimpleName: SparseVector", "DEL SimpleName: SparseMatrix", "DEL SimpleName: IOException", "DEL SimpleName: m", "DEL SimpleType: IOException", "DEL SimpleName: RandomVariable", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: getRowIndex", "DEL SimpleName: e", "DEL SimpleName: conf", "DEL MethodDeclaration", "DEL SimpleName: alpha", "DEL InfixExpression: +", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL SimpleName: vector", "DEL ParenthesizedExpression", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: rand", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL ClassInstanceCreation", "DEL ParenthesizedExpression", "DEL SimpleName: setConfiguration", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL SimpleName: Override", "DEL SimpleName: toBytes", "DEL SimpleType: String", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL Javadoc", "DEL SimpleType: Matrix", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: i", "DEL SimpleName: n", "DEL SimpleType: Random", "DEL SimpleName: result", "DEL SingleVariableDeclaration", "DEL SimpleName: IntWritable", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: getRowIndex", "DEL TagElement: @param", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: vector", "DEL SimpleName: Matrix", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getKey", "DEL NumberLiteral: 0.0", "DEL Modifier: private", "DEL SimpleName: BytesUtil", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: AbstractMatrix", "DEL SimpleName: put", "DEL SimpleName: matrixPath", "DEL SimpleName: SubMatrix", "DEL ThrowStatement", "DEL TextElement:  ", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SimpleName: get", "DEL SimpleType: SparseMatrix", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleType: Matrix", "DEL Modifier: public", "DEL SimpleName: j", "DEL SimpleName: conf", "DEL SimpleName: SparseVector", "DEL SimpleName: m", "DEL MethodInvocation", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: Put", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: nextInt", "DEL TextElement:  the number of columns.", "DEL SimpleName: SparseVector", "DEL SimpleName: setDimension", "DEL SimpleName: Random", "DEL SimpleType: SparseVector", "DEL SimpleName: put", "DEL SimpleName: TABLE_PREFIX", "DEL SimpleName: SparseMatrix", "DEL SimpleType: IOException", "DEL NumberLiteral: 0", "DEL SimpleName: setConfiguration", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: row", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getSimpleName", "DEL SingleVariableDeclaration", "DEL SimpleName: r", "DEL PostfixExpression: ++", "DEL SimpleType: Vector", "DEL FieldDeclaration", "DEL SimpleName: row", "DEL SimpleName: get", "DEL SimpleType: IOException", "DEL InfixExpression: <", "DEL SimpleType: Get", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: e", "DEL SimpleName: r", "DEL TagElement: @param", "DEL NumberLiteral: 0", "DEL SimpleName: matrixpath", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL SimpleName: IOException", "DEL SimpleName: get", "DEL SimpleType: AbstractMatrix", "DEL SimpleName: i", "DEL SimpleName: j", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL SimpleName: i", "DEL SimpleName: Vector", "DEL SimpleName: m", "DEL SimpleName: String", "DEL BooleanLiteral: false", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: Get", "DEL TagElement: @return", "DEL SimpleType: IOException", "DEL PrimitiveType: int", "DEL SimpleName: getColumns", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: BytesUtil", "DEL ClassInstanceCreation", "DEL SimpleName: LOG", "DEL Modifier: public", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: add", "DEL VariableDeclarationFragment", "DEL SimpleName: j", "DEL ArrayType: byte[]", "DEL SimpleName: j", "DEL Block", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: vector", "DEL SimpleName: rand", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL MethodInvocation", "DEL SimpleType: Result", "DEL PrimitiveType: int", "DEL SimpleName: table", "DEL SimpleType: String", "DEL SimpleName: IOException", "DEL TagElement: @throws", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL TextElement:  configuration object", "DEL MethodInvocation", "DEL SimpleType: SparseMatrix", "DEL ThisExpression", "DEL SimpleName: n", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL SimpleType: Vector", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: setRow", "DEL SimpleName: Random", "DEL SimpleType: SparseVector", "DEL SimpleName: getRows", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL NumberLiteral: 0", "DEL TagElement: @throws", "DEL MethodInvocation"]}]}}, {"SparseMatrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.ArrayList(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.List(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.Map(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.util.Random(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.io.Writable(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hama.Constants(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(54)", "Delete ImportDeclaration(55)", "Delete Modifier: public(56)", "Delete SimpleName: SparseMatrix(57)", "Delete SimpleName: AbstractMatrix(58)", "Delete SimpleType: AbstractMatrix(59)", "Delete SimpleName: Matrix(60)", "Delete SimpleType: Matrix(61)", "Delete Modifier: static(62)", "Delete Modifier: private(63)", "Delete Modifier: final(64)", "Delete SimpleName: String(65)", "Delete SimpleType: String(66)", "Delete SimpleName: TABLE_PREFIX(67)", "Delete SimpleName: SparseMatrix(68)", "Delete SimpleType: SparseMatrix(69)", "Delete TypeLiteral(70)", "Delete SimpleName: getSimpleName(71)", "Delete MethodInvocation(72)", "Delete VariableDeclarationFragment(73)", "Delete FieldDeclaration(74)", "Delete Modifier: public(75)", "Delete SimpleName: SparseMatrix(76)", "Delete SimpleName: HamaConfiguration(77)", "Delete SimpleType: HamaConfiguration(78)", "Delete SimpleName: conf(79)", "Delete SingleVariableDeclaration(80)", "Delete PrimitiveType: int(81)", "Delete SimpleName: m(82)", "Delete SingleVariableDeclaration(83)", "Delete PrimitiveType: int(84)", "Delete SimpleName: n(85)", "Delete SingleVariableDeclaration(86)", "Delete SimpleName: IOException(87)", "Delete SimpleType: IOException(88)", "Delete SimpleName: setConfiguration(89)", "Delete SimpleName: conf(90)", "Delete MethodInvocation(91)", "Delete ExpressionStatement(92)", "Delete SimpleName: tryToCreateTable(93)", "Delete SimpleName: TABLE_PREFIX(94)", "Delete MethodInvocation(95)", "Delete ExpressionStatement(96)", "Delete SimpleName: closed(97)", "Delete BooleanLiteral: false(98)", "Delete Assignment: =(99)", "Delete ExpressionStatement(100)", "Delete ThisExpression(101)", "Delete SimpleName: setDimension(102)", "Delete SimpleName: m(103)", "Delete SimpleName: n(104)", "Delete MethodInvocation(105)", "Delete ExpressionStatement(106)", "Delete Block(107)", "Delete MethodDeclaration(108)", "Delete TextElement: Load a matrix from an existed matrix table whose tablename is 'matrixpath' !!(109)", "Delete TextElement: It is an internal used for map/reduce.(110)", "Delete TagElement(111)", "Delete SimpleName: conf(112)", "Delete TextElement:  configuration object(113)", "Delete TagElement: @param(114)", "Delete SimpleName: matrixpath(115)", "Delete TagElement: @param(116)", "Delete SimpleName: IOException(117)", "Delete TagElement: @throws(118)", "Delete SimpleName: IOException(119)", "Delete TagElement: @throws(120)", "Delete Javadoc(121)", "Delete Modifier: public(122)", "Delete SimpleName: SparseMatrix(123)", "Delete SimpleName: HamaConfiguration(124)", "Delete SimpleType: HamaConfiguration(125)", "Delete SimpleName: conf(126)", "Delete SingleVariableDeclaration(127)", "Delete SimpleName: String(128)", "Delete SimpleType: String(129)", "Delete SimpleName: matrixpath(130)", "Delete SingleVariableDeclaration(131)", "Delete SimpleName: IOException(132)", "Delete SimpleType: IOException(133)", "Delete SimpleName: setConfiguration(134)", "Delete SimpleName: conf(135)", "Delete MethodInvocation(136)", "Delete ExpressionStatement(137)", "Delete SimpleName: matrixPath(138)", "Delete SimpleName: matrixpath(139)", "Delete Assignment: =(140)", "Delete ExpressionStatement(141)", "Delete SimpleName: table(142)", "Delete SimpleName: HTable(143)", "Delete SimpleType: HTable(144)", "Delete SimpleName: conf(145)", "Delete SimpleName: matrixPath(146)", "Delete ClassInstanceCreation(147)", "Delete Assignment: =(148)", "Delete ExpressionStatement(149)", "Delete Block(150)", "Delete MethodDeclaration(151)", "Delete TextElement: Generate matrix with random elements(152)", "Delete TagElement(153)", "Delete SimpleName: conf(154)", "Delete TextElement:  configuration object(155)", "Delete TagElement: @param(156)", "Delete SimpleName: m(157)", "Delete TextElement:  the number of rows.(158)", "Delete TagElement: @param(159)", "Delete SimpleName: n(160)", "Delete TextElement:  the number of columns.(161)", "Delete TagElement: @param(162)", "Delete TextElement:  an m-by-n matrix with uniformly distributed random elements.(163)", "Delete TagElement: @return(164)", "Delete SimpleName: IOException(165)", "Delete TagElement: @throws(166)", "Delete Javadoc(167)", "Delete Modifier: public(168)", "Delete Modifier: static(169)", "Delete SimpleName: SparseMatrix(170)", "Delete SimpleType: SparseMatrix(171)", "Delete SimpleName: random(172)", "Delete SimpleName: HamaConfiguration(173)", "Delete SimpleType: HamaConfiguration(174)", "Delete SimpleName: conf(175)", "Delete SingleVariableDeclaration(176)", "Delete PrimitiveType: int(177)", "Delete SimpleName: m(178)", "Delete SingleVariableDeclaration(179)", "Delete PrimitiveType: int(180)", "Delete SimpleName: n(181)", "Delete SingleVariableDeclaration(182)", "Delete SimpleName: IOException(183)", "Delete SimpleType: IOException(184)", "Delete SimpleName: SparseMatrix(185)", "Delete SimpleType: SparseMatrix(186)", "Delete SimpleName: rand(187)", "Delete SimpleName: SparseMatrix(188)", "Delete SimpleType: SparseMatrix(189)", "Delete SimpleName: conf(190)", "Delete SimpleName: m(191)", "Delete SimpleName: n(192)", "Delete ClassInstanceCreation(193)", "Delete VariableDeclarationFragment(194)", "Delete VariableDeclarationStatement(195)", "Delete SimpleName: SparseVector(196)", "Delete SimpleType: SparseVector(197)", "Delete SimpleName: vector(198)", "Delete SimpleName: SparseVector(199)", "Delete SimpleType: SparseVector(200)", "Delete ClassInstanceCreation(201)", "Delete VariableDeclarationFragment(202)", "Delete VariableDeclarationStatement(203)", "Delete SimpleName: LOG(204)", "Delete SimpleName: info(205)", "Delete StringLiteral: \"Create the \"(206)", "Delete SimpleName: m(207)", "Delete StringLiteral: \" * \"(208)", "Delete SimpleName: n(209)", "Delete StringLiteral: \" random matrix : \"(210)", "Delete SimpleName: rand(211)", "Delete SimpleName: getPath(212)", "Delete MethodInvocation(213)", "Delete InfixExpression: +(214)", "Delete MethodInvocation(215)", "Delete ExpressionStatement(216)", "Delete PrimitiveType: int(217)", "Delete SimpleName: i(218)", "Delete NumberLiteral: 0(219)", "Delete VariableDeclarationFragment(220)", "Delete VariableDeclarationExpression(221)", "Delete SimpleName: i(222)", "Delete SimpleName: m(223)", "Delete InfixExpression: <(224)", "Delete SimpleName: i(225)", "Delete PostfixExpression: ++(226)", "Delete SimpleName: vector(227)", "Delete SimpleName: clear(228)", "Delete MethodInvocation(229)", "Delete ExpressionStatement(230)", "Delete PrimitiveType: int(231)", "Delete SimpleName: j(232)", "Delete NumberLiteral: 0(233)", "Delete VariableDeclarationFragment(234)", "Delete VariableDeclarationExpression(235)", "Delete SimpleName: j(236)", "Delete SimpleName: n(237)", "Delete InfixExpression: <(238)", "Delete SimpleName: j(239)", "Delete PostfixExpression: ++(240)", "Delete SimpleName: Random(241)", "Delete SimpleType: Random(242)", "Delete SimpleName: r(243)", "Delete SimpleName: Random(244)", "Delete SimpleType: Random(245)", "Delete ClassInstanceCreation(246)", "Delete VariableDeclarationFragment(247)", "Delete VariableDeclarationStatement(248)", "Delete SimpleName: r(249)", "Delete SimpleName: nextInt(250)", "Delete NumberLiteral: 2(251)", "Delete MethodInvocation(252)", "Delete NumberLiteral: 0(253)", "Delete InfixExpression: !=(254)", "Delete SimpleName: vector(255)", "Delete SimpleName: set(256)", "Delete SimpleName: j(257)", "Delete SimpleName: RandomVariable(258)", "Delete SimpleName: rand(259)", "Delete MethodInvocation(260)", "Delete MethodInvocation(261)", "Delete ExpressionStatement(262)", "Delete IfStatement(263)", "Delete Block(264)", "Delete ForStatement(265)", "Delete SimpleName: rand(266)", "Delete SimpleName: setRow(267)", "Delete SimpleName: i(268)", "Delete SimpleName: vector(269)", "Delete MethodInvocation(270)", "Delete ExpressionStatement(271)", "Delete Block(272)", "Delete ForStatement(273)", "Delete SimpleName: rand(274)", "Delete ReturnStatement(275)", "Delete Block(276)", "Delete MethodDeclaration(277)", "Delete SimpleName: Override(278)", "Delete MarkerAnnotation(279)", "Delete Modifier: public(280)", "Delete PrimitiveType: double(281)", "Delete SimpleName: get(282)", "Delete PrimitiveType: int(283)", "Delete SimpleName: i(284)", "Delete SingleVariableDeclaration(285)", "Delete PrimitiveType: int(286)", "Delete SimpleName: j(287)", "Delete SingleVariableDeclaration(288)", "Delete SimpleName: IOException(289)", "Delete SimpleType: IOException(290)", "Delete ThisExpression(291)", "Delete SimpleName: getRows(292)", "Delete MethodInvocation(293)", "Delete SimpleName: i(294)", "Delete InfixExpression: <(295)", "Delete ThisExpression(296)", "Delete SimpleName: getColumns(297)", "Delete MethodInvocation(298)", "Delete SimpleName: j(299)", "Delete InfixExpression: <(300)", "Delete InfixExpression: ||(301)", "Delete SimpleName: ArrayIndexOutOfBoundsException(302)", "Delete SimpleType: ArrayIndexOutOfBoundsException(303)", "Delete SimpleName: i(304)", "Delete StringLiteral: \", \"(305)", "Delete SimpleName: j(306)", "Delete InfixExpression: +(307)", "Delete ClassInstanceCreation(308)", "Delete ThrowStatement(309)", "Delete IfStatement(310)", "Delete SimpleName: Get(311)", "Delete SimpleType: Get(312)", "Delete SimpleName: get(313)", "Delete SimpleName: Get(314)", "Delete SimpleType: Get(315)", "Delete SimpleName: BytesUtil(316)", "Delete SimpleName: getRowIndex(317)", "Delete SimpleName: i(318)", "Delete MethodInvocation(319)", "Delete ClassInstanceCreation(320)", "Delete VariableDeclarationFragment(321)", "Delete VariableDeclarationStatement(322)", "Delete SimpleName: get(323)", "Delete SimpleName: addColumn(324)", "Delete QualifiedName: Constants.COLUMNFAMILY(325)", "Delete MethodInvocation(326)", "Delete ExpressionStatement(327)", "Delete PrimitiveType: byte(328)", "Delete Dimension(329)", "Delete ArrayType: byte[](330)", "Delete SimpleName: result(331)", "Delete SimpleName: table(332)", "Delete SimpleName: get(333)", "Delete SimpleName: get(334)", "Delete MethodInvocation(335)", "Delete SimpleName: getValue(336)", "Delete QualifiedName: Constants.COLUMNFAMILY(337)", "Delete SimpleName: Bytes(338)", "Delete SimpleName: toBytes(339)", "Delete SimpleName: String(340)", "Delete SimpleName: valueOf(341)", "Delete SimpleName: j(342)", "Delete MethodInvocation(343)", "Delete MethodInvocation(344)", "Delete MethodInvocation(345)", "Delete VariableDeclarationFragment(346)", "Delete VariableDeclarationStatement(347)", "Delete SimpleName: result(348)", "Delete NullLiteral(349)", "Delete InfixExpression: !=(350)", "Delete ParenthesizedExpression(351)", "Delete SimpleName: Bytes(352)", "Delete SimpleName: toDouble(353)", "Delete SimpleName: result(354)", "Delete MethodInvocation(355)", "Delete NumberLiteral: 0.0(356)", "Delete ConditionalExpression(357)", "Delete ReturnStatement(358)", "Delete Block(359)", "Delete MethodDeclaration(360)", "Delete SimpleName: Override(361)", "Delete MarkerAnnotation(362)", "Delete Modifier: public(363)", "Delete SimpleName: Vector(364)", "Delete SimpleType: Vector(365)", "Delete SimpleName: getColumn(366)", "Delete PrimitiveType: int(367)", "Delete SimpleName: j(368)", "Delete SingleVariableDeclaration(369)", "Delete SimpleName: IOException(370)", "Delete SimpleType: IOException(371)", "Delete NullLiteral(372)", "Delete ReturnStatement(373)", "Delete Block(374)", "Delete MethodDeclaration(375)", "Delete TextElement: Gets the vector of row(376)", "Delete TagElement(377)", "Delete SimpleName: i(378)", "Delete TextElement:  the row index of the matrix(379)", "Delete TagElement: @param(380)", "Delete TextElement:  the vector of row(381)", "Delete TagElement: @return(382)", "Delete SimpleName: IOException(383)", "Delete TagElement: @throws(384)", "Delete Javadoc(385)", "Delete Modifier: public(386)", "Delete SimpleName: SparseVector(387)", "Delete SimpleType: SparseVector(388)", "Delete SimpleName: getRow(389)", "Delete PrimitiveType: int(390)", "Delete SimpleName: i(391)", "Delete SingleVariableDeclaration(392)", "Delete SimpleName: IOException(393)", "Delete SimpleType: IOException(394)", "Delete SimpleName: Get(395)", "Delete SimpleType: Get(396)", "Delete SimpleName: get(397)", "Delete SimpleName: Get(398)", "Delete SimpleType: Get(399)", "Delete SimpleName: BytesUtil(400)", "Delete SimpleName: getRowIndex(401)", "Delete SimpleName: i(402)", "Delete MethodInvocation(403)", "Delete ClassInstanceCreation(404)", "Delete VariableDeclarationFragment(405)", "Delete VariableDeclarationStatement(406)", "Delete SimpleName: get(407)", "Delete SimpleName: addFamily(408)", "Delete QualifiedName: Constants.COLUMNFAMILY(409)", "Delete MethodInvocation(410)", "Delete ExpressionStatement(411)", "Delete SimpleName: Result(412)", "Delete SimpleType: Result(413)", "Delete SimpleName: r(414)", "Delete SimpleName: table(415)", "Delete SimpleName: get(416)", "Delete SimpleName: get(417)", "Delete MethodInvocation(418)", "Delete VariableDeclarationFragment(419)", "Delete VariableDeclarationStatement(420)", "Delete SimpleName: SparseVector(421)", "Delete SimpleType: SparseVector(422)", "Delete SimpleName: r(423)", "Delete ClassInstanceCreation(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete TagElement: @inheritDoc(428)", "Delete TextElement:  (429)", "Delete TagElement(430)", "Delete Javadoc(431)", "Delete Modifier: public(432)", "Delete PrimitiveType: void(433)", "Delete SimpleName: set(434)", "Delete PrimitiveType: int(435)", "Delete SimpleName: i(436)", "Delete SingleVariableDeclaration(437)", "Delete PrimitiveType: int(438)", "Delete SimpleName: j(439)", "Delete SingleVariableDeclaration(440)", "Delete PrimitiveType: double(441)", "Delete SimpleName: value(442)", "Delete SingleVariableDeclaration(443)", "Delete SimpleName: IOException(444)", "Delete SimpleType: IOException(445)", "Delete SimpleName: value(446)", "Delete NumberLiteral: 0(447)", "Delete InfixExpression: !=(448)", "Delete SimpleName: Put(449)", "Delete SimpleType: Put(450)", "Delete SimpleName: put(451)", "Delete SimpleName: Put(452)", "Delete SimpleType: Put(453)", "Delete SimpleName: BytesUtil(454)", "Delete SimpleName: getRowIndex(455)", "Delete SimpleName: i(456)", "Delete MethodInvocation(457)", "Delete ClassInstanceCreation(458)", "Delete VariableDeclarationFragment(459)", "Delete VariableDeclarationStatement(460)", "Delete SimpleName: put(461)", "Delete SimpleName: add(462)", "Delete QualifiedName: Constants.COLUMNFAMILY(463)", "Delete SimpleName: Bytes(464)", "Delete SimpleName: toBytes(465)", "Delete SimpleName: String(466)", "Delete SimpleName: valueOf(467)", "Delete SimpleName: j(468)", "Delete MethodInvocation(469)", "Delete MethodInvocation(470)", "Delete SimpleName: Bytes(471)", "Delete SimpleName: toBytes(472)", "Delete SimpleName: value(473)", "Delete MethodInvocation(474)", "Delete MethodInvocation(475)", "Delete ExpressionStatement(476)", "Delete SimpleName: table(477)", "Delete SimpleName: put(478)", "Delete SimpleName: put(479)", "Delete MethodInvocation(480)", "Delete ExpressionStatement(481)", "Delete Block(482)", "Delete IfStatement(483)", "Delete Block(484)", "Delete MethodDeclaration(485)", "Delete TextElement: Returns type of matrix(486)", "Delete TagElement(487)", "Delete Javadoc(488)", "Delete Modifier: public(489)", "Delete SimpleName: String(490)", "Delete SimpleType: String(491)", "Delete SimpleName: getType(492)", "Delete ThisExpression(493)", "Delete SimpleName: getClass(494)", "Delete MethodInvocation(495)", "Delete SimpleName: getSimpleName(496)", "Delete MethodInvocation(497)", "Delete ReturnStatement(498)", "Delete Block(499)", "Delete MethodDeclaration(500)", "Delete SimpleName: Override(501)", "Delete MarkerAnnotation(502)", "Delete Modifier: public(503)", "Delete SimpleName: Matrix(504)", "Delete SimpleType: Matrix(505)", "Delete SimpleName: multAdd(506)", "Delete PrimitiveType: double(507)", "Delete SimpleName: alpha(508)", "Delete SingleVariableDeclaration(509)", "Delete SimpleName: Matrix(510)", "Delete SimpleType: Matrix(511)", "Delete SimpleName: B(512)", "Delete SingleVariableDeclaration(513)", "Delete SimpleName: Matrix(514)", "Delete SimpleType: Matrix(515)", "Delete SimpleName: C(516)", "Delete SingleVariableDeclaration(517)", "Delete SimpleName: IOException(518)", "Delete SimpleType: IOException(519)", "Delete NullLiteral(520)", "Delete ReturnStatement(521)", "Delete Block(522)", "Delete MethodDeclaration(523)", "Delete SimpleName: Override(524)", "Delete MarkerAnnotation(525)", "Delete Modifier: public(526)", "Delete PrimitiveType: void(527)", "Delete SimpleName: setColumn(528)", "Delete PrimitiveType: int(529)", "Delete SimpleName: column(530)", "Delete SingleVariableDeclaration(531)", "Delete SimpleName: Vector(532)", "Delete SimpleType: Vector(533)", "Delete SimpleName: vector(534)", "Delete SingleVariableDeclaration(535)", "Delete SimpleName: IOException(536)", "Delete SimpleType: IOException(537)", "Delete Block(538)", "Delete MethodDeclaration(539)", "Delete SimpleName: Override(540)", "Delete MarkerAnnotation(541)", "Delete Modifier: public(542)", "Delete PrimitiveType: void(543)", "Delete SimpleName: setRow(544)", "Delete PrimitiveType: int(545)", "Delete SimpleName: row(546)", "Delete SingleVariableDeclaration(547)", "Delete SimpleName: Vector(548)", "Delete SimpleType: Vector(549)", "Delete SimpleName: vector(550)", "Delete SingleVariableDeclaration(551)", "Delete SimpleName: IOException(552)", "Delete SimpleType: IOException(553)", "Delete ThisExpression(554)", "Delete SimpleName: getRows(555)", "Delete MethodInvocation(556)", "Delete SimpleName: row(557)", "Delete InfixExpression: <(558)", "Delete SimpleName: ArrayIndexOutOfBoundsException(559)", "Delete SimpleType: ArrayIndexOutOfBoundsException(560)", "Delete SimpleName: row(561)", "Delete ClassInstanceCreation(562)", "Delete ThrowStatement(563)", "Delete IfStatement(564)", "Delete SimpleName: vector(565)", "Delete SimpleName: size(566)", "Delete MethodInvocation(567)", "Delete NumberLiteral: 0(568)", "Delete InfixExpression: >(569)", "Delete SimpleName: Put(570)", "Delete SimpleType: Put(571)", "Delete SimpleName: put(572)", "Delete SimpleName: Put(573)", "Delete SimpleType: Put(574)", "Delete SimpleName: BytesUtil(575)", "Delete SimpleName: getRowIndex(576)", "Delete SimpleName: row(577)", "Delete MethodInvocation(578)", "Delete ClassInstanceCreation(579)", "Delete VariableDeclarationFragment(580)", "Delete VariableDeclarationStatement(581)", "Delete QualifiedName: Map.Entry(582)", "Delete SimpleType: Map.Entry(583)", "Delete SimpleName: Writable(584)", "Delete SimpleType: Writable(585)", "Delete SimpleName: Writable(586)", "Delete SimpleType: Writable(587)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(588)", "Delete SimpleName: e(589)", "Delete SingleVariableDeclaration(590)", "Delete SimpleName: SparseVector(591)", "Delete SimpleType: SparseVector(592)", "Delete SimpleName: vector(593)", "Delete CastExpression(594)", "Delete ParenthesizedExpression(595)", "Delete SimpleName: getEntries(596)", "Delete MethodInvocation(597)", "Delete SimpleName: entrySet(598)", "Delete MethodInvocation(599)", "Delete SimpleName: put(600)", "Delete SimpleName: add(601)", "Delete QualifiedName: Constants.COLUMNFAMILY(602)", "Delete SimpleName: Bytes(603)", "Delete SimpleName: toBytes(604)", "Delete SimpleName: String(605)", "Delete SimpleName: valueOf(606)", "Delete SimpleName: IntWritable(607)", "Delete SimpleType: IntWritable(608)", "Delete SimpleName: e(609)", "Delete SimpleName: getKey(610)", "Delete MethodInvocation(611)", "Delete CastExpression(612)", "Delete ParenthesizedExpression(613)", "Delete SimpleName: get(614)", "Delete MethodInvocation(615)", "Delete MethodInvocation(616)", "Delete MethodInvocation(617)", "Delete SimpleName: Bytes(618)", "Delete SimpleName: toBytes(619)", "Delete SimpleName: DoubleWritable(620)", "Delete SimpleType: DoubleWritable(621)", "Delete SimpleName: e(622)", "Delete SimpleName: getValue(623)", "Delete MethodInvocation(624)", "Delete CastExpression(625)", "Delete ParenthesizedExpression(626)", "Delete SimpleName: get(627)", "Delete MethodInvocation(628)", "Delete MethodInvocation(629)", "Delete MethodInvocation(630)", "Delete ExpressionStatement(631)", "Delete Block(632)", "Delete EnhancedForStatement(633)", "Delete SimpleName: table(634)", "Delete SimpleName: put(635)", "Delete SimpleName: put(636)", "Delete MethodInvocation(637)", "Delete ExpressionStatement(638)", "Delete Block(639)", "Delete IfStatement(640)", "Delete Block(641)", "Delete MethodDeclaration(642)", "Delete SimpleName: Override(643)", "Delete MarkerAnnotation(644)", "Delete Modifier: public(645)", "Delete SimpleName: SubMatrix(646)", "Delete SimpleType: SubMatrix(647)", "Delete SimpleName: subMatrix(648)", "Delete PrimitiveType: int(649)", "Delete SimpleName: i0(650)", "Delete SingleVariableDeclaration(651)", "Delete PrimitiveType: int(652)", "Delete SimpleName: i1(653)", "Delete SingleVariableDeclaration(654)", "Delete PrimitiveType: int(655)", "Delete SimpleName: j0(656)", "Delete SingleVariableDeclaration(657)", "Delete PrimitiveType: int(658)", "Delete SimpleName: j1(659)", "Delete SingleVariableDeclaration(660)", "Delete SimpleName: IOException(661)", "Delete SimpleType: IOException(662)", "Delete NullLiteral(663)", "Delete ReturnStatement(664)", "Delete Block(665)", "Delete MethodDeclaration(666)", "Delete TypeDeclaration: class(667)"]}}, {"SparseVector_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TagElement", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL PackageDeclaration", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL Javadoc", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL QualifiedName: org.apache.hama.matrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.MapWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.log4j.Logger", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: IntWritable", "DEL TagElement", "DEL IfStatement", "DEL SimpleName: entries", "DEL SingleVariableDeclaration", "DEL QualifiedName: Map.Entry", "DEL Block", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: entrySet", "DEL SimpleName: key", "DEL SimpleName: SparseVector", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL SimpleType: Writable", "DEL ThisExpression", "DEL MarkerAnnotation", "DEL SingleVariableDeclaration", "DEL SimpleType: Logger", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL SimpleName: SparseVector", "DEL MethodInvocation", "DEL Javadoc", "DEL IfStatement", "DEL Modifier: public", "DEL TagElement", "DEL TagElement", "DEL FieldAccess", "DEL Modifier: public", "DEL Block", "DEL ThisExpression", "DEL Block", "DEL CastExpression", "DEL SimpleType: DoubleWritable", "DEL SimpleName: IntWritable", "DEL ThisExpression", "DEL SimpleName: put", "DEL ThisExpression", "DEL SimpleName: entries", "DEL SimpleType: Writable", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL NullLiteral", "DEL SimpleName: entries", "DEL MethodDeclaration", "DEL SimpleName: set", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Modifier: public", "DEL TagElement: @param", "DEL SimpleName: v", "DEL SimpleName: getKey", "DEL SimpleName: value", "DEL ThisExpression", "DEL SimpleType: Vector", "DEL MarkerAnnotation", "DEL SimpleType: Writable", "DEL TagElement: @param", "DEL SimpleName: getEntries", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL PrimitiveType: void", "DEL TryStatement", "DEL MethodInvocation", "DEL SimpleType: Writable", "DEL Block", "DEL SimpleName: alpha", "DEL MethodInvocation", "DEL SimpleName: entries", "DEL Assignment: =", "DEL SimpleName: Vector", "DEL SimpleName: NullPointerException", "DEL Block", "DEL CastExpression", "DEL SimpleName: Writable", "DEL PrimitiveType: double", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: Vector", "DEL MethodInvocation", "DEL SimpleName: e", "DEL Modifier: final", "DEL SimpleName: set", "DEL SimpleName: alpha", "DEL Block", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: SparseVector", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: AbstractVector", "DEL SimpleName: value", "DEL SimpleName: index", "DEL FieldAccess", "DEL ThisExpression", "DEL NumberLiteral: 0", "DEL IfStatement", "DEL SimpleName: alpha", "DEL CatchClause", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getKey", "DEL SimpleName: e", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Vector", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: v", "DEL SimpleName: put", "DEL Block", "DEL ParenthesizedExpression", "DEL SimpleName: getValue", "DEL Javadoc", "DEL SimpleName: Logger", "DEL SimpleName: entries", "DEL FieldAccess", "DEL SimpleName: add", "DEL Modifier: public", "DEL SimpleType: Writable", "DEL ThisExpression", "DEL TextElement: Sets the vector", "DEL SimpleName: entries", "DEL TagElement: @param", "DEL SimpleType: Map.Entry", "DEL SimpleName: MapWritable", "DEL SimpleName: e", "DEL TagElement: @return", "DEL SimpleName: entries", "DEL SimpleType: DoubleWritable", "DEL SimpleType: Vector", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleType: Vector", "DEL SimpleType: AbstractVector", "DEL TagElement: @param", "DEL TextElement: v = alpha*v", "DEL SimpleName: Writable", "DEL SimpleName: v", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: index", "DEL SimpleName: DoubleWritable", "DEL SimpleName: type", "DEL SimpleName: set", "DEL TextElement: x = v + x", "DEL SimpleName: alpha", "DEL TextElement: This class represents a sparse vector.", "DEL SimpleType: MapWritable", "DEL Javadoc", "DEL SimpleType: IntWritable", "DEL InfixExpression: ==", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL Block", "DEL InfixExpression: ==", "DEL PrimitiveType: double", "DEL ThisExpression", "DEL SimpleName: dot", "DEL IfStatement", "DEL SimpleName: value", "DEL SimpleName: IntWritable", "DEL SimpleName: alpha", "DEL SimpleType: Vector", "DEL ExpressionStatement", "DEL SimpleName: getKey", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL SimpleName: entries", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: index", "DEL Assignment: =", "DEL SimpleName: get", "DEL NumberLiteral: 0", "DEL TagElement: @param", "DEL SimpleName: index", "DEL SimpleName: e", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: subVector", "DEL SimpleName: add", "DEL SimpleName: MapWritable", "DEL SimpleName: Writable", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL SimpleName: SparseVector", "DEL ReturnStatement", "DEL SimpleName: alpha", "DEL SimpleType: DoubleWritable", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL InfixExpression: *", "DEL SimpleName: DoubleWritable", "DEL TextElement:  the value of v(index)", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ParenthesizedExpression", "DEL SimpleName: getValue", "DEL ClassInstanceCreation", "DEL SimpleName: entries", "DEL IfStatement", "DEL ParenthesizedExpression", "DEL ThisExpression", "DEL SimpleName: value", "DEL ReturnStatement", "DEL SimpleName: e", "DEL SimpleName: MapWritable", "DEL TagElement: @param", "DEL SimpleName: norm", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL TextElement:  v = alpha*v", "DEL SingleVariableDeclaration", "DEL TextElement: Sets the value of index", "DEL TextElement: Gets the value of index", "DEL SimpleName: get", "DEL SimpleName: e", "DEL MethodDeclaration", "DEL ThisExpression", "DEL SimpleName: value", "DEL SimpleName: getValue", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL SimpleName: row", "DEL SimpleName: index", "DEL SimpleName: getKey", "DEL SimpleName: v", "DEL InfixExpression: *", "DEL SimpleName: Override", "DEL Block", "DEL QualifiedName: Map.Entry", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: e", "DEL SimpleName: key", "DEL ThisExpression", "DEL SimpleName: getKey", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: entries", "DEL SimpleType: SparseVector", "DEL SimpleName: Norm", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: SparseVector", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: alpha", "DEL PrimitiveType: double", "DEL SimpleName: get", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL CastExpression", "DEL SimpleType: DoubleWritable", "DEL TextElement:  x = v", "DEL SimpleType: SparseVector", "DEL SimpleType: Result", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL TagElement: @return", "DEL ThisExpression", "DEL MethodDeclaration", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: Writable", "DEL TagElement: @return", "DEL SimpleName: index", "DEL SimpleName: e", "DEL EnhancedForStatement", "DEL SimpleName: index", "DEL SimpleType: DoubleWritable", "DEL EnhancedForStatement", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: Override", "DEL InfixExpression: !=", "DEL ClassInstanceCreation", "DEL PrimitiveType: double", "DEL SimpleName: DoubleWritable", "DEL SimpleName: Vector", "DEL ClassInstanceCreation", "DEL SimpleName: DoubleWritable", "DEL SimpleType: Vector", "DEL NumberLiteral: 0", "DEL SimpleName: get", "DEL SimpleName: getLogger", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL MethodDeclaration", "DEL SimpleType: IntWritable", "DEL ReturnStatement", "DEL ReturnStatement", "DEL PrimitiveType: double", "DEL SingleVariableDeclaration", "DEL SimpleName: entrySet", "DEL SimpleName: e", "DEL FieldAccess", "DEL SimpleType: SparseVector", "DEL SimpleName: v2", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SimpleType: MapWritable", "DEL ReturnStatement", "DEL SimpleType: SparseVector", "DEL SimpleType: Vector", "DEL Block", "DEL SimpleName: getKey", "DEL MethodDeclaration", "DEL PrimitiveType: double", "DEL Modifier: public", "DEL SimpleName: LOG", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: IntWritable", "DEL SimpleName: DoubleWritable", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: SparseVector", "DEL PrimitiveType: double", "DEL SimpleName: v2", "DEL SimpleName: put", "DEL SimpleName: get", "DEL SimpleType: DoubleWritable", "DEL FieldAccess", "DEL Block", "DEL SimpleType: MapWritable", "DEL SingleVariableDeclaration", "DEL SimpleName: entrySet", "DEL SimpleName: Result", "DEL Block", "DEL SimpleName: v", "DEL SimpleName: v", "DEL Modifier: public", "DEL CastExpression", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: alpha", "DEL SimpleType: DoubleWritable", "DEL SimpleType: Vector", "DEL TagElement", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: entries", "DEL CastExpression", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: Writable", "DEL SimpleName: e", "DEL TagElement: @param", "DEL TagElement: @return", "DEL SimpleName: Writable", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleType: Vector", "DEL SimpleType: DoubleWritable", "DEL SimpleType: SparseVector", "DEL QualifiedName: Map.Entry", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL MethodDeclaration", "DEL ConstructorInvocation", "DEL SimpleName: m", "DEL EnhancedForStatement", "DEL SimpleName: e", "DEL Block", "DEL MethodInvocation", "DEL ReturnStatement", "DEL TextElement:  x = v + x", "DEL SimpleType: Map.Entry", "DEL SimpleName: add", "DEL SimpleName: v2", "DEL CastExpression", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: Map.Entry", "DEL PrimitiveType: double", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: SparseVector", "DEL SimpleName: Vector", "DEL SimpleName: scale", "DEL SimpleName: e", "DEL MethodInvocation", "DEL Javadoc", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: Logger", "DEL Block", "DEL SimpleName: initMap", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Modifier: public", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: public", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL SimpleName: containsKey", "DEL PrimitiveType: double", "DEL TagElement: @throws", "DEL SimpleName: Override", "DEL SimpleName: value", "DEL Block", "DEL SimpleName: put", "DEL SimpleName: set", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: i1", "DEL SimpleType: DoubleWritable", "DEL SimpleName: index", "DEL SimpleName: index", "DEL ParenthesizedExpression", "DEL SimpleName: DoubleWritable", "DEL Block", "DEL SimpleName: index", "DEL InfixExpression: *", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: getEntries", "DEL SimpleType: Vector", "DEL MethodInvocation", "DEL PrimitiveType: double", "DEL MethodDeclaration", "DEL TypeLiteral", "DEL TextElement: Adds the value to v(index)", "DEL SimpleName: containsKey", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Vector", "DEL SimpleName: IOException", "DEL MarkerAnnotation", "DEL PrimitiveType: int", "DEL SimpleName: getKey", "DEL SimpleName: DoubleWritable", "DEL MethodDeclaration", "DEL Assignment: =", "DEL Block", "DEL FieldAccess", "DEL SimpleName: key", "DEL SimpleName: SparseVector", "DEL SimpleName: DoubleWritable", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL Javadoc", "DEL NullLiteral", "DEL SimpleName: e", "DEL PrimitiveType: void", "DEL SimpleName: v", "DEL VariableDeclarationFragment", "DEL SimpleName: Vector", "DEL NumberLiteral: 0", "DEL MarkerAnnotation", "DEL SimpleName: SparseVector", "DEL SimpleName: value", "DEL SimpleName: get", "DEL FieldAccess", "DEL SimpleName: getEntries", "DEL NumberLiteral: 0", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL Modifier: public", "DEL TagElement", "DEL SimpleType: Norm", "DEL SimpleName: m", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: get", "DEL CastExpression", "DEL SimpleType: NullPointerException", "DEL Javadoc", "DEL FieldAccess", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: Vector", "DEL MethodInvocation", "DEL SimpleName: i0", "DEL SimpleName: e", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: Vector", "DEL PrimitiveType: double"]}]}}, {"SparseVector_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Map(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.Writable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.log4j.Logger(32)", "Delete ImportDeclaration(33)", "Delete TextElement: This class represents a sparse vector.(34)", "Delete TagElement(35)", "Delete Javadoc(36)", "Delete Modifier: public(37)", "Delete SimpleName: SparseVector(38)", "Delete SimpleName: AbstractVector(39)", "Delete SimpleType: AbstractVector(40)", "Delete SimpleName: Vector(41)", "Delete SimpleType: Vector(42)", "Delete Modifier: static(43)", "Delete Modifier: final(44)", "Delete SimpleName: Logger(45)", "Delete SimpleType: Logger(46)", "Delete SimpleName: LOG(47)", "Delete SimpleName: Logger(48)", "Delete SimpleName: getLogger(49)", "Delete SimpleName: SparseVector(50)", "Delete SimpleType: SparseVector(51)", "Delete TypeLiteral(52)", "Delete MethodInvocation(53)", "Delete VariableDeclarationFragment(54)", "Delete FieldDeclaration(55)", "Delete Modifier: public(56)", "Delete SimpleName: SparseVector(57)", "Delete SimpleName: MapWritable(58)", "Delete SimpleType: MapWritable(59)", "Delete ClassInstanceCreation(60)", "Delete ConstructorInvocation(61)", "Delete Block(62)", "Delete MethodDeclaration(63)", "Delete Modifier: public(64)", "Delete SimpleName: SparseVector(65)", "Delete SimpleName: MapWritable(66)", "Delete SimpleType: MapWritable(67)", "Delete SimpleName: m(68)", "Delete SingleVariableDeclaration(69)", "Delete ThisExpression(70)", "Delete SimpleName: entries(71)", "Delete FieldAccess(72)", "Delete SimpleName: m(73)", "Delete Assignment: =(74)", "Delete ExpressionStatement(75)", "Delete Block(76)", "Delete MethodDeclaration(77)", "Delete Modifier: public(78)", "Delete SimpleName: SparseVector(79)", "Delete SimpleName: Result(80)", "Delete SimpleType: Result(81)", "Delete SimpleName: row(82)", "Delete SingleVariableDeclaration(83)", "Delete ThisExpression(84)", "Delete SimpleName: initMap(85)", "Delete SimpleName: row(86)", "Delete MethodInvocation(87)", "Delete ExpressionStatement(88)", "Delete Block(89)", "Delete MethodDeclaration(90)", "Delete SimpleName: Override(91)", "Delete MarkerAnnotation(92)", "Delete Modifier: public(93)", "Delete SimpleName: Vector(94)", "Delete SimpleType: Vector(95)", "Delete SimpleName: add(96)", "Delete PrimitiveType: double(97)", "Delete SimpleName: alpha(98)", "Delete SingleVariableDeclaration(99)", "Delete SimpleName: Vector(100)", "Delete SimpleType: Vector(101)", "Delete SimpleName: v(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: alpha(104)", "Delete NumberLiteral: 0(105)", "Delete InfixExpression: ==(106)", "Delete ThisExpression(107)", "Delete ReturnStatement(108)", "Delete IfStatement(109)", "Delete QualifiedName: Map.Entry(110)", "Delete SimpleType: Map.Entry(111)", "Delete SimpleName: Writable(112)", "Delete SimpleType: Writable(113)", "Delete SimpleName: Writable(114)", "Delete SimpleType: Writable(115)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(116)", "Delete SimpleName: e(117)", "Delete SingleVariableDeclaration(118)", "Delete SimpleName: v(119)", "Delete SimpleName: getEntries(120)", "Delete MethodInvocation(121)", "Delete SimpleName: entrySet(122)", "Delete MethodInvocation(123)", "Delete ThisExpression(124)", "Delete SimpleName: entries(125)", "Delete FieldAccess(126)", "Delete SimpleName: containsKey(127)", "Delete SimpleName: e(128)", "Delete SimpleName: getKey(129)", "Delete MethodInvocation(130)", "Delete MethodInvocation(131)", "Delete PrimitiveType: double(132)", "Delete SimpleName: value(133)", "Delete SimpleName: alpha(134)", "Delete SimpleName: DoubleWritable(135)", "Delete SimpleType: DoubleWritable(136)", "Delete SimpleName: e(137)", "Delete SimpleName: getValue(138)", "Delete MethodInvocation(139)", "Delete CastExpression(140)", "Delete ParenthesizedExpression(141)", "Delete SimpleName: get(142)", "Delete MethodInvocation(143)", "Delete InfixExpression: *(144)", "Delete ThisExpression(145)", "Delete SimpleName: get(146)", "Delete SimpleName: IntWritable(147)", "Delete SimpleType: IntWritable(148)", "Delete SimpleName: e(149)", "Delete SimpleName: getKey(150)", "Delete MethodInvocation(151)", "Delete CastExpression(152)", "Delete ParenthesizedExpression(153)", "Delete SimpleName: get(154)", "Delete MethodInvocation(155)", "Delete MethodInvocation(156)", "Delete InfixExpression: +(157)", "Delete VariableDeclarationFragment(158)", "Delete VariableDeclarationStatement(159)", "Delete ThisExpression(160)", "Delete SimpleName: entries(161)", "Delete FieldAccess(162)", "Delete SimpleName: put(163)", "Delete SimpleName: e(164)", "Delete SimpleName: getKey(165)", "Delete MethodInvocation(166)", "Delete SimpleName: DoubleWritable(167)", "Delete SimpleType: DoubleWritable(168)", "Delete SimpleName: value(169)", "Delete ClassInstanceCreation(170)", "Delete MethodInvocation(171)", "Delete ExpressionStatement(172)", "Delete Block(173)", "Delete PrimitiveType: double(174)", "Delete SimpleName: value(175)", "Delete SimpleName: alpha(176)", "Delete SimpleName: DoubleWritable(177)", "Delete SimpleType: DoubleWritable(178)", "Delete SimpleName: e(179)", "Delete SimpleName: getValue(180)", "Delete MethodInvocation(181)", "Delete CastExpression(182)", "Delete ParenthesizedExpression(183)", "Delete SimpleName: get(184)", "Delete MethodInvocation(185)", "Delete InfixExpression: *(186)", "Delete VariableDeclarationFragment(187)", "Delete VariableDeclarationStatement(188)", "Delete ThisExpression(189)", "Delete SimpleName: entries(190)", "Delete FieldAccess(191)", "Delete SimpleName: put(192)", "Delete SimpleName: e(193)", "Delete SimpleName: getKey(194)", "Delete MethodInvocation(195)", "Delete SimpleName: DoubleWritable(196)", "Delete SimpleType: DoubleWritable(197)", "Delete SimpleName: value(198)", "Delete ClassInstanceCreation(199)", "Delete MethodInvocation(200)", "Delete ExpressionStatement(201)", "Delete Block(202)", "Delete IfStatement(203)", "Delete Block(204)", "Delete EnhancedForStatement(205)", "Delete ThisExpression(206)", "Delete ReturnStatement(207)", "Delete Block(208)", "Delete MethodDeclaration(209)", "Delete TextElement: x = v + x(210)", "Delete TagElement(211)", "Delete SimpleName: v2(212)", "Delete TagElement: @param(213)", "Delete TextElement:  x = v + x(214)", "Delete TagElement: @return(215)", "Delete Javadoc(216)", "Delete Modifier: public(217)", "Delete SimpleName: SparseVector(218)", "Delete SimpleType: SparseVector(219)", "Delete SimpleName: add(220)", "Delete SimpleName: Vector(221)", "Delete SimpleType: Vector(222)", "Delete SimpleName: v2(223)", "Delete SingleVariableDeclaration(224)", "Delete QualifiedName: Map.Entry(225)", "Delete SimpleType: Map.Entry(226)", "Delete SimpleName: Writable(227)", "Delete SimpleType: Writable(228)", "Delete SimpleName: Writable(229)", "Delete SimpleType: Writable(230)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(231)", "Delete SimpleName: e(232)", "Delete SingleVariableDeclaration(233)", "Delete SimpleName: v2(234)", "Delete SimpleName: getEntries(235)", "Delete MethodInvocation(236)", "Delete SimpleName: entrySet(237)", "Delete MethodInvocation(238)", "Delete PrimitiveType: int(239)", "Delete SimpleName: key(240)", "Delete SimpleName: IntWritable(241)", "Delete SimpleType: IntWritable(242)", "Delete SimpleName: e(243)", "Delete SimpleName: getKey(244)", "Delete MethodInvocation(245)", "Delete CastExpression(246)", "Delete ParenthesizedExpression(247)", "Delete SimpleName: get(248)", "Delete MethodInvocation(249)", "Delete VariableDeclarationFragment(250)", "Delete VariableDeclarationStatement(251)", "Delete ThisExpression(252)", "Delete SimpleName: entries(253)", "Delete FieldAccess(254)", "Delete SimpleName: containsKey(255)", "Delete SimpleName: e(256)", "Delete SimpleName: getKey(257)", "Delete MethodInvocation(258)", "Delete MethodInvocation(259)", "Delete ThisExpression(260)", "Delete SimpleName: add(261)", "Delete SimpleName: key(262)", "Delete SimpleName: DoubleWritable(263)", "Delete SimpleType: DoubleWritable(264)", "Delete SimpleName: e(265)", "Delete SimpleName: getValue(266)", "Delete MethodInvocation(267)", "Delete CastExpression(268)", "Delete ParenthesizedExpression(269)", "Delete SimpleName: get(270)", "Delete MethodInvocation(271)", "Delete MethodInvocation(272)", "Delete ExpressionStatement(273)", "Delete Block(274)", "Delete ThisExpression(275)", "Delete SimpleName: set(276)", "Delete SimpleName: key(277)", "Delete SimpleName: DoubleWritable(278)", "Delete SimpleType: DoubleWritable(279)", "Delete SimpleName: e(280)", "Delete SimpleName: getValue(281)", "Delete MethodInvocation(282)", "Delete CastExpression(283)", "Delete ParenthesizedExpression(284)", "Delete SimpleName: get(285)", "Delete MethodInvocation(286)", "Delete MethodInvocation(287)", "Delete ExpressionStatement(288)", "Delete Block(289)", "Delete IfStatement(290)", "Delete Block(291)", "Delete EnhancedForStatement(292)", "Delete ThisExpression(293)", "Delete ReturnStatement(294)", "Delete Block(295)", "Delete MethodDeclaration(296)", "Delete SimpleName: Override(297)", "Delete MarkerAnnotation(298)", "Delete Modifier: public(299)", "Delete PrimitiveType: double(300)", "Delete SimpleName: dot(301)", "Delete SimpleName: Vector(302)", "Delete SimpleType: Vector(303)", "Delete SimpleName: v(304)", "Delete SingleVariableDeclaration(305)", "Delete NumberLiteral: 0(306)", "Delete ReturnStatement(307)", "Delete Block(308)", "Delete MethodDeclaration(309)", "Delete SimpleName: Override(310)", "Delete MarkerAnnotation(311)", "Delete Modifier: public(312)", "Delete PrimitiveType: double(313)", "Delete SimpleName: norm(314)", "Delete SimpleName: Norm(315)", "Delete SimpleType: Norm(316)", "Delete SimpleName: type(317)", "Delete SingleVariableDeclaration(318)", "Delete NumberLiteral: 0(319)", "Delete ReturnStatement(320)", "Delete Block(321)", "Delete MethodDeclaration(322)", "Delete TextElement: v = alpha*v(323)", "Delete TagElement(324)", "Delete SimpleName: alpha(325)", "Delete TagElement: @param(326)", "Delete TextElement:  v = alpha*v(327)", "Delete TagElement: @return(328)", "Delete Javadoc(329)", "Delete Modifier: public(330)", "Delete SimpleName: SparseVector(331)", "Delete SimpleType: SparseVector(332)", "Delete SimpleName: scale(333)", "Delete PrimitiveType: double(334)", "Delete SimpleName: alpha(335)", "Delete SingleVariableDeclaration(336)", "Delete QualifiedName: Map.Entry(337)", "Delete SimpleType: Map.Entry(338)", "Delete SimpleName: Writable(339)", "Delete SimpleType: Writable(340)", "Delete SimpleName: Writable(341)", "Delete SimpleType: Writable(342)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(343)", "Delete SimpleName: e(344)", "Delete SingleVariableDeclaration(345)", "Delete ThisExpression(346)", "Delete SimpleName: entries(347)", "Delete FieldAccess(348)", "Delete SimpleName: entrySet(349)", "Delete MethodInvocation(350)", "Delete ThisExpression(351)", "Delete SimpleName: entries(352)", "Delete FieldAccess(353)", "Delete SimpleName: put(354)", "Delete SimpleName: e(355)", "Delete SimpleName: getKey(356)", "Delete MethodInvocation(357)", "Delete SimpleName: DoubleWritable(358)", "Delete SimpleType: DoubleWritable(359)", "Delete SimpleName: DoubleWritable(360)", "Delete SimpleType: DoubleWritable(361)", "Delete SimpleName: e(362)", "Delete SimpleName: getValue(363)", "Delete MethodInvocation(364)", "Delete CastExpression(365)", "Delete ParenthesizedExpression(366)", "Delete SimpleName: get(367)", "Delete MethodInvocation(368)", "Delete SimpleName: alpha(369)", "Delete InfixExpression: *(370)", "Delete ClassInstanceCreation(371)", "Delete MethodInvocation(372)", "Delete ExpressionStatement(373)", "Delete Block(374)", "Delete EnhancedForStatement(375)", "Delete ThisExpression(376)", "Delete ReturnStatement(377)", "Delete Block(378)", "Delete MethodDeclaration(379)", "Delete TextElement: Gets the value of index(380)", "Delete TagElement(381)", "Delete SimpleName: index(382)", "Delete TagElement: @param(383)", "Delete TextElement:  the value of v(index)(384)", "Delete TagElement: @return(385)", "Delete SimpleName: IOException(386)", "Delete TagElement: @throws(387)", "Delete Javadoc(388)", "Delete Modifier: public(389)", "Delete PrimitiveType: double(390)", "Delete SimpleName: get(391)", "Delete PrimitiveType: int(392)", "Delete SimpleName: index(393)", "Delete SingleVariableDeclaration(394)", "Delete PrimitiveType: double(395)", "Delete SimpleName: value(396)", "Delete VariableDeclarationFragment(397)", "Delete VariableDeclarationStatement(398)", "Delete SimpleName: value(399)", "Delete SimpleName: DoubleWritable(400)", "Delete SimpleType: DoubleWritable(401)", "Delete ThisExpression(402)", "Delete SimpleName: entries(403)", "Delete FieldAccess(404)", "Delete SimpleName: get(405)", "Delete SimpleName: IntWritable(406)", "Delete SimpleType: IntWritable(407)", "Delete SimpleName: index(408)", "Delete ClassInstanceCreation(409)", "Delete MethodInvocation(410)", "Delete CastExpression(411)", "Delete ParenthesizedExpression(412)", "Delete SimpleName: get(413)", "Delete MethodInvocation(414)", "Delete Assignment: =(415)", "Delete ExpressionStatement(416)", "Delete Block(417)", "Delete SimpleName: NullPointerException(418)", "Delete SimpleType: NullPointerException(419)", "Delete SimpleName: e(420)", "Delete SingleVariableDeclaration(421)", "Delete NumberLiteral: 0(422)", "Delete ReturnStatement(423)", "Delete Block(424)", "Delete CatchClause(425)", "Delete TryStatement(426)", "Delete SimpleName: value(427)", "Delete ReturnStatement(428)", "Delete Block(429)", "Delete MethodDeclaration(430)", "Delete TextElement: Sets the value of index(431)", "Delete TagElement(432)", "Delete SimpleName: index(433)", "Delete TagElement: @param(434)", "Delete SimpleName: value(435)", "Delete TagElement: @param(436)", "Delete Javadoc(437)", "Delete Modifier: public(438)", "Delete PrimitiveType: void(439)", "Delete SimpleName: set(440)", "Delete PrimitiveType: int(441)", "Delete SimpleName: index(442)", "Delete SingleVariableDeclaration(443)", "Delete PrimitiveType: double(444)", "Delete SimpleName: value(445)", "Delete SingleVariableDeclaration(446)", "Delete ThisExpression(447)", "Delete SimpleName: entries(448)", "Delete FieldAccess(449)", "Delete NullLiteral(450)", "Delete InfixExpression: ==(451)", "Delete ThisExpression(452)", "Delete SimpleName: entries(453)", "Delete FieldAccess(454)", "Delete SimpleName: MapWritable(455)", "Delete SimpleType: MapWritable(456)", "Delete ClassInstanceCreation(457)", "Delete Assignment: =(458)", "Delete ExpressionStatement(459)", "Delete Block(460)", "Delete IfStatement(461)", "Delete SimpleName: value(462)", "Delete NumberLiteral: 0(463)", "Delete InfixExpression: !=(464)", "Delete ThisExpression(465)", "Delete SimpleName: entries(466)", "Delete FieldAccess(467)", "Delete SimpleName: put(468)", "Delete SimpleName: IntWritable(469)", "Delete SimpleType: IntWritable(470)", "Delete SimpleName: index(471)", "Delete ClassInstanceCreation(472)", "Delete SimpleName: DoubleWritable(473)", "Delete SimpleType: DoubleWritable(474)", "Delete SimpleName: value(475)", "Delete ClassInstanceCreation(476)", "Delete MethodInvocation(477)", "Delete ExpressionStatement(478)", "Delete IfStatement(479)", "Delete Block(480)", "Delete MethodDeclaration(481)", "Delete TextElement: Adds the value to v(index)(482)", "Delete TagElement(483)", "Delete SimpleName: index(484)", "Delete TagElement: @param(485)", "Delete SimpleName: value(486)", "Delete TagElement: @param(487)", "Delete Javadoc(488)", "Delete Modifier: public(489)", "Delete PrimitiveType: void(490)", "Delete SimpleName: add(491)", "Delete PrimitiveType: int(492)", "Delete SimpleName: index(493)", "Delete SingleVariableDeclaration(494)", "Delete PrimitiveType: double(495)", "Delete SimpleName: value(496)", "Delete SingleVariableDeclaration(497)", "Delete SimpleName: set(498)", "Delete SimpleName: index(499)", "Delete SimpleName: get(500)", "Delete SimpleName: index(501)", "Delete MethodInvocation(502)", "Delete SimpleName: value(503)", "Delete InfixExpression: +(504)", "Delete MethodInvocation(505)", "Delete ExpressionStatement(506)", "Delete Block(507)", "Delete MethodDeclaration(508)", "Delete TextElement: Sets the vector(509)", "Delete TagElement(510)", "Delete SimpleName: v(511)", "Delete TagElement: @param(512)", "Delete TextElement:  x = v(513)", "Delete TagElement: @return(514)", "Delete Javadoc(515)", "Delete Modifier: public(516)", "Delete SimpleName: SparseVector(517)", "Delete SimpleType: SparseVector(518)", "Delete SimpleName: set(519)", "Delete SimpleName: Vector(520)", "Delete SimpleType: Vector(521)", "Delete SimpleName: v(522)", "Delete SingleVariableDeclaration(523)", "Delete SimpleName: SparseVector(524)", "Delete SimpleType: SparseVector(525)", "Delete SimpleName: v(526)", "Delete SimpleName: getEntries(527)", "Delete MethodInvocation(528)", "Delete ClassInstanceCreation(529)", "Delete ReturnStatement(530)", "Delete Block(531)", "Delete MethodDeclaration(532)", "Delete SimpleName: Override(533)", "Delete MarkerAnnotation(534)", "Delete Modifier: public(535)", "Delete SimpleName: Vector(536)", "Delete SimpleType: Vector(537)", "Delete SimpleName: subVector(538)", "Delete PrimitiveType: int(539)", "Delete SimpleName: i0(540)", "Delete SingleVariableDeclaration(541)", "Delete PrimitiveType: int(542)", "Delete SimpleName: i1(543)", "Delete SingleVariableDeclaration(544)", "Delete NullLiteral(545)", "Delete ReturnStatement(546)", "Delete Block(547)", "Delete MethodDeclaration(548)", "Delete SimpleName: Override(549)", "Delete MarkerAnnotation(550)", "Delete Modifier: public(551)", "Delete SimpleName: Vector(552)", "Delete SimpleType: Vector(553)", "Delete SimpleName: set(554)", "Delete PrimitiveType: double(555)", "Delete SimpleName: alpha(556)", "Delete SingleVariableDeclaration(557)", "Delete SimpleName: Vector(558)", "Delete SimpleType: Vector(559)", "Delete SimpleName: v(560)", "Delete SingleVariableDeclaration(561)", "Delete NullLiteral(562)", "Delete ReturnStatement(563)", "Delete Block(564)", "Delete MethodDeclaration(565)", "Delete TypeDeclaration: class(566)"]}}, {"SubMatrix_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL PackageDeclaration", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: limitations under the License.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.ByteArrayInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.ByteArrayOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: SubMatrix", "DEL ForStatement", "DEL SimpleName: j", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: j", "DEL FieldAccess", "DEL SimpleName: b", "DEL SimpleName: toDouble", "DEL SimpleName: i", "DEL SimpleName: writeDouble", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL Block", "DEL Dimension", "DEL ArrayAccess", "DEL SimpleName: i", "DEL PostfixExpression: ++", "DEL SimpleName: k", "DEL TagElement: @param", "DEL SimpleType: SubMatrix", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL Dimension", "DEL MethodInvocation", "DEL TagElement", "DEL ClassInstanceCreation", "DEL TextElement:  a two dimensional double array", "DEL SimpleType: StringBuilder", "DEL SimpleName: j", "DEL Modifier: public", "DEL PrimitiveType: double", "DEL TextElement: Gets the number of columns", "DEL ThisExpression", "DEL SimpleName: bos", "DEL SimpleName: k", "DEL PrimitiveType: void", "DEL Javadoc", "DEL ThisExpression", "DEL SimpleName: c", "DEL SimpleName: getColumns", "DEL Assignment: =", "DEL ForStatement", "DEL MethodDeclaration", "DEL TextElement:  c", "DEL SimpleName: i", "DEL Block", "DEL FieldAccess", "DEL SimpleName: toString", "DEL ArrayAccess", "DEL TagElement: @return", "DEL SimpleName: row", "DEL SimpleName: length", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL ForStatement", "DEL SimpleName: matrix", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: DataOutputStream", "DEL SimpleName: matrix", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: j", "DEL SimpleType: SubMatrix", "DEL SimpleName: k", "DEL VariableDeclarationFragment", "DEL SimpleName: bos", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL PrimitiveType: double", "DEL VariableDeclarationExpression", "DEL SimpleName: getDoubleArray", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: dos", "DEL ArrayType: double[][]", "DEL Assignment: =", "DEL SimpleName: value", "DEL SimpleType: SubMatrix", "DEL ExpressionStatement", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL TextElement:  the 2d double array", "DEL Dimension", "DEL VariableDeclarationExpression", "DEL PrimitiveType: int", "DEL SimpleName: column", "DEL VariableDeclarationStatement", "DEL PrimitiveType: double", "DEL SimpleName: i", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleType: SubMatrix", "DEL SimpleName: matrix", "DEL ThisExpression", "DEL SimpleName: i", "DEL SimpleName: close", "DEL SimpleName: column", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: result", "DEL SimpleName: value", "DEL SimpleName: append", "DEL TagElement: @return", "DEL FieldAccess", "DEL Modifier: public", "DEL SimpleName: i", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: j", "DEL ArrayType: double[][]", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL SimpleType: SubMatrix", "DEL ReturnStatement", "DEL ThisExpression", "DEL Modifier: static", "DEL NumberLiteral: 0", "DEL Block", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL TextElement:  the number of columns", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: row", "DEL SimpleName: dos", "DEL Dimension", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: dos", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleName: String", "DEL NumberLiteral: 0", "DEL PrimitiveType: double", "DEL SimpleName: matrix", "DEL PrimitiveType: int", "DEL PrimitiveType: double", "DEL VariableDeclarationExpression", "DEL SimpleName: j", "DEL PrimitiveType: double", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: matrix", "DEL SimpleName: value", "DEL SimpleName: j", "DEL Dimension", "DEL NumberLiteral: 0", "DEL Dimension", "DEL Block", "DEL PrimitiveType: double", "DEL TagElement: @return", "DEL SimpleName: matrix", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleType: SubMatrix", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ArrayCreation", "DEL SimpleName: DataOutputStream", "DEL SimpleName: length", "DEL SimpleName: matrix", "DEL MethodInvocation", "DEL Modifier: public", "DEL ReturnStatement", "DEL TypeDeclaration: class", "DEL PrimitiveType: int", "DEL TextElement:  the size of rows", "DEL Block", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL ArrayAccess", "DEL SimpleName: SubMatrix", "DEL SimpleName: result", "DEL ForStatement", "DEL SimpleName: j", "DEL SimpleName: IOException", "DEL SimpleName: i", "DEL Dimension", "DEL SimpleName: j", "DEL TagElement", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: add", "DEL InfixExpression: <", "DEL ArrayAccess", "DEL SimpleName: j", "DEL SimpleName: row", "DEL SimpleName: getRows", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: matrix", "DEL SimpleType: DataOutputStream", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL ArrayType: double[][]", "DEL InfixExpression: <", "DEL SimpleName: column", "DEL SimpleName: close", "DEL SimpleName: get", "DEL FieldAccess", "DEL SimpleName: matrix", "DEL Modifier: public", "DEL Assignment: =", "DEL SimpleName: SubMatrix", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL FieldAccess", "DEL SimpleName: j", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL Block", "DEL Block", "DEL ThisExpression", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: result", "DEL NumberLiteral: 0", "DEL Block", "DEL SimpleName: getRows", "DEL Block", "DEL MethodInvocation", "DEL TextElement: Gets the number of rows", "DEL SimpleName: value", "DEL CharacterLiteral: '\\t'", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL PrimitiveType: byte", "DEL SimpleName: value", "DEL SimpleName: getColumns", "DEL SingleVariableDeclaration", "DEL SimpleName: Logger", "DEL TagElement", "DEL PrimitiveType: void", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL ArrayType: byte[]", "DEL PrimitiveType: int", "DEL SimpleName: SubMatrix", "DEL PostfixExpression: ++", "DEL SimpleName: j", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleName: getRows", "DEL ForStatement", "DEL SimpleName: SubMatrix", "DEL VariableDeclarationExpression", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: column", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL TagElement: @param", "DEL Dimension", "DEL SimpleName: k", "DEL PrimitiveType: int", "DEL ArrayCreation", "DEL SimpleName: add", "DEL SimpleName: column", "DEL PrimitiveType: void", "DEL ThisExpression", "DEL PrimitiveType: double", "DEL SimpleName: i", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL SimpleName: append", "DEL SimpleName: data", "DEL SimpleName: i", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL InfixExpression: <", "DEL TextElement:  c", "DEL SimpleName: j", "DEL SimpleName: bos", "DEL SimpleName: j", "DEL SimpleType: StringBuilder", "DEL Javadoc", "DEL SimpleName: i", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL SimpleName: dis", "DEL VariableDeclarationFragment", "DEL SimpleName: StringBuilder", "DEL SimpleName: get", "DEL Block", "DEL SimpleType: ByteArrayOutputStream", "DEL InfixExpression: <", "DEL SimpleName: readDouble", "DEL ReturnStatement", "DEL Javadoc", "DEL ReturnStatement", "DEL TextElement: Constructor", "DEL SimpleName: matrix", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL Dimension", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL ThisExpression", "DEL Assignment: =", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: set", "DEL TagElement: @param", "DEL SimpleName: dis", "DEL Modifier: public", "DEL SimpleName: getRows", "DEL TextElement:  the bytes of the sub matrix", "DEL Modifier: public", "DEL SimpleName: c", "DEL SimpleName: bos", "DEL MethodDeclaration", "DEL SimpleName: b", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL VariableDeclarationExpression", "DEL SimpleName: readInt", "DEL ArrayAccess", "DEL SimpleName: DataInputStream", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: data", "DEL SimpleName: toByteArray", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: getBytes", "DEL SimpleName: dis", "DEL ClassInstanceCreation", "DEL SimpleName: dos", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: i", "DEL ArrayType: byte[]", "DEL SimpleType: ByteArrayInputStream", "DEL TagElement: @return", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: columns", "DEL ArrayType: byte[]", "DEL SimpleName: i", "DEL MethodInvocation", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL SimpleType: SubMatrix", "DEL SimpleName: add", "DEL SimpleName: matrix", "DEL PostfixExpression: ++", "DEL ArrayType: double[][]", "DEL TagElement: @return", "DEL MethodInvocation", "DEL SimpleName: SubMatrix", "DEL Dimension", "DEL SimpleName: writeInt", "DEL SimpleName: row", "DEL ThisExpression", "DEL SimpleName: bos", "DEL SimpleName: j", "DEL SimpleName: getColumns", "DEL MethodDeclaration", "DEL Block", "DEL TextElement: A sub matrix is a matrix formed by selecting certain rows and columns from a", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL TextElement: Sets the value", "DEL Block", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL ArrayAccess", "DEL VariableDeclarationFragment", "DEL SimpleName: k", "DEL Javadoc", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL SimpleName: dis", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: i", "DEL Modifier: public", "DEL SimpleName: b", "DEL SimpleType: SubMatrix", "DEL TagElement", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: c", "DEL VariableDeclarationFragment", "DEL SimpleName: rows", "DEL SimpleName: bos", "DEL ThisExpression", "DEL SimpleName: c", "DEL Modifier: final", "DEL SimpleName: SubMatrix", "DEL Modifier: public", "DEL Dimension", "DEL SimpleName: rows", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL SimpleName: Logger", "DEL InfixExpression: <", "DEL SimpleName: j", "DEL SimpleName: i", "DEL ThisExpression", "DEL Javadoc", "DEL TagElement: @param", "DEL PostfixExpression: ++", "DEL ArrayAccess", "DEL SimpleName: result", "DEL SimpleName: close", "DEL SimpleType: ByteArrayOutputStream", "DEL SimpleName: matrix", "DEL InfixExpression: <", "DEL SimpleName: result", "DEL SimpleName: j", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: DataInputStream", "DEL PrimitiveType: int", "DEL SimpleName: c", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: dis", "DEL VariableDeclarationStatement", "DEL SimpleName: b", "DEL SimpleName: result", "DEL Block", "DEL TagElement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getRows", "DEL TagElement", "DEL PrimitiveType: double", "DEL SimpleType: String", "DEL SimpleName: StringBuilder", "DEL VariableDeclarationFragment", "DEL SimpleName: j", "DEL SimpleName: column", "DEL SimpleType: Logger", "DEL Assignment: =", "DEL Javadoc", "DEL SimpleName: getLogger", "DEL SimpleName: matrix", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL Javadoc", "DEL FieldAccess", "DEL TagElement: @param", "DEL TextElement: Constructor", "DEL SimpleName: b", "DEL SimpleName: getRows", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL ForStatement", "DEL ThisExpression", "DEL SimpleName: matrix", "DEL ArrayType: byte[]", "DEL SimpleName: row", "DEL SingleVariableDeclaration", "DEL PostfixExpression: ++", "DEL TagElement: @return", "DEL VariableDeclarationExpression", "DEL TagElement", "DEL SimpleName: j", "DEL MethodDeclaration", "DEL Javadoc", "DEL TagElement: @param", "DEL InfixExpression: <", "DEL SingleVariableDeclaration", "DEL TagElement: @throws", "DEL SimpleName: SubMatrix", "DEL SimpleName: b", "DEL TagElement: @param", "DEL Dimension", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL ThisExpression", "DEL SimpleType: IOException", "DEL ThisExpression", "DEL SimpleName: j", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL SimpleName: append", "DEL ThisExpression", "DEL ArrayType: double[][]", "DEL SimpleName: getColumns", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL ParenthesizedExpression", "DEL InfixExpression: *", "DEL SimpleName: row", "DEL SimpleName: SubMatrix", "DEL Javadoc", "DEL Block", "DEL SimpleName: ByteArrayOutputStream", "DEL TextElement: Sets the value", "DEL SimpleName: DataInputStream", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL SimpleName: writeInt", "DEL TextElement:  the number of rows", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: bos", "DEL NumberLiteral: 0", "DEL InfixExpression: <", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: b", "DEL VariableDeclarationStatement", "DEL SimpleName: j", "DEL SimpleName: i", "DEL ForStatement", "DEL MethodInvocation", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL TextElement: Close", "DEL ArrayAccess", "DEL TagElement", "DEL PrimitiveType: double", "DEL SimpleName: columns", "DEL SimpleName: c", "DEL SimpleType: DataInputStream", "DEL SimpleType: DataOutputStream", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: set", "DEL SimpleName: mult", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: j", "DEL ExpressionStatement", "DEL SimpleName: toString", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleName: column", "DEL PrimitiveType: int", "DEL SimpleName: ByteArrayInputStream", "DEL ExpressionStatement", "DEL TagElement", "DEL ForStatement", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleType: SubMatrix", "DEL SimpleName: matrix", "DEL CharacterLiteral: '\\n'", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL ForStatement", "DEL TextElement: Gets the bytes of the sub matrix", "DEL ThisExpression", "DEL SimpleName: readInt", "DEL SimpleName: row", "DEL SimpleName: row", "DEL SimpleName: getRows", "DEL TextElement: bigger matrix. This is a in-memory operation only.", "DEL PostfixExpression: ++", "DEL SimpleName: j", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL SimpleName: getColumns", "DEL TextElement: c = a*b", "DEL SimpleName: j", "DEL SimpleName: SubMatrix", "DEL SimpleName: get", "DEL TextElement: c = a+b", "DEL ArrayAccess", "DEL SimpleName: j", "DEL Javadoc", "DEL ReturnStatement", "DEL SimpleName: getColumns", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL ArrayAccess", "DEL MethodDeclaration", "DEL ForStatement", "DEL ThisExpression", "DEL SimpleName: column", "DEL Dimension", "DEL TagElement: @return", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: matrix", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL Javadoc", "DEL MethodDeclaration", "DEL NullLiteral", "DEL Dimension", "DEL SimpleName: matrix", "DEL SimpleName: close", "DEL SimpleName: b", "DEL SimpleName: j", "DEL SimpleName: get", "DEL SimpleName: j", "DEL InfixExpression: <", "DEL TagElement", "DEL SimpleName: j", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL Dimension", "DEL ArrayType: double[][]", "DEL PostfixExpression: ++", "DEL SimpleName: SubMatrix", "DEL MethodInvocation", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL SimpleName: getColumns", "DEL MethodInvocation", "DEL SimpleName: dos", "DEL MethodDeclaration", "DEL PrimitiveType: byte", "DEL TagElement: @param", "DEL SimpleName: columns", "DEL SimpleName: getColumns", "DEL Modifier: public", "DEL VariableDeclarationExpression", "DEL Dimension", "DEL PrimitiveType: int", "DEL ArrayAccess", "DEL SimpleName: getRows", "DEL SimpleName: SubMatrix", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: getColumns", "DEL MethodInvocation", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: result", "DEL Block", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: matrix", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: c", "DEL SimpleName: row", "DEL SingleVariableDeclaration", "DEL VariableDeclarationExpression", "DEL SimpleName: c", "DEL SimpleName: i", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL TextElement:  the value of submatrix(i, j)", "DEL SimpleName: c", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationExpression", "DEL SimpleName: get", "DEL SimpleName: SubMatrix", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: rows", "DEL ReturnStatement", "DEL SimpleName: value", "DEL TextElement: Gets the value", "DEL SimpleName: column", "DEL ThisExpression", "DEL Block", "DEL PrimitiveType: byte", "DEL SimpleName: close", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL TextElement:  the size of columns", "DEL Javadoc", "DEL ArrayType: double[][]"]}]}}, {"SubMatrix_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.ByteArrayInputStream(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.ByteArrayOutputStream(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.DataInputStream(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.io.DataOutputStream(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.io.IOException(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.log4j.Logger(30)", "Delete ImportDeclaration(31)", "Delete TextElement: A sub matrix is a matrix formed by selecting certain rows and columns from a(32)", "Delete TextElement: bigger matrix. This is a in-memory operation only.(33)", "Delete TagElement(34)", "Delete Javadoc(35)", "Delete Modifier: public(36)", "Delete SimpleName: SubMatrix(37)", "Delete Modifier: static(38)", "Delete Modifier: final(39)", "Delete SimpleName: Logger(40)", "Delete SimpleType: Logger(41)", "Delete SimpleName: LOG(42)", "Delete SimpleName: Logger(43)", "Delete SimpleName: getLogger(44)", "Delete SimpleName: SubMatrix(45)", "Delete SimpleType: SubMatrix(46)", "Delete TypeLiteral(47)", "Delete MethodInvocation(48)", "Delete VariableDeclarationFragment(49)", "Delete FieldDeclaration(50)", "Delete Modifier: private(51)", "Delete PrimitiveType: double(52)", "Delete Dimension(53)", "Delete Dimension(54)", "Delete ArrayType: double[][](55)", "Delete SimpleName: matrix(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete TextElement: Constructor(59)", "Delete TagElement(60)", "Delete SimpleName: i(61)", "Delete TextElement:  the size of rows(62)", "Delete TagElement: @param(63)", "Delete SimpleName: j(64)", "Delete TextElement:  the size of columns(65)", "Delete TagElement: @param(66)", "Delete Javadoc(67)", "Delete Modifier: public(68)", "Delete SimpleName: SubMatrix(69)", "Delete PrimitiveType: int(70)", "Delete SimpleName: i(71)", "Delete SingleVariableDeclaration(72)", "Delete PrimitiveType: int(73)", "Delete SimpleName: j(74)", "Delete SingleVariableDeclaration(75)", "Delete ThisExpression(76)", "Delete SimpleName: matrix(77)", "Delete FieldAccess(78)", "Delete PrimitiveType: double(79)", "Delete Dimension(80)", "Delete Dimension(81)", "Delete ArrayType: double[][](82)", "Delete SimpleName: i(83)", "Delete SimpleName: j(84)", "Delete ArrayCreation(85)", "Delete Assignment: =(86)", "Delete ExpressionStatement(87)", "Delete Block(88)", "Delete MethodDeclaration(89)", "Delete TextElement: Constructor(90)", "Delete TagElement(91)", "Delete SimpleName: c(92)", "Delete TextElement:  a two dimensional double array(93)", "Delete TagElement: @param(94)", "Delete Javadoc(95)", "Delete Modifier: public(96)", "Delete SimpleName: SubMatrix(97)", "Delete PrimitiveType: double(98)", "Delete Dimension(99)", "Delete Dimension(100)", "Delete ArrayType: double[][](101)", "Delete SimpleName: c(102)", "Delete SingleVariableDeclaration(103)", "Delete PrimitiveType: double(104)", "Delete Dimension(105)", "Delete Dimension(106)", "Delete ArrayType: double[][](107)", "Delete SimpleName: matrix(108)", "Delete SimpleName: c(109)", "Delete VariableDeclarationFragment(110)", "Delete VariableDeclarationStatement(111)", "Delete ThisExpression(112)", "Delete SimpleName: matrix(113)", "Delete FieldAccess(114)", "Delete SimpleName: matrix(115)", "Delete Assignment: =(116)", "Delete ExpressionStatement(117)", "Delete Block(118)", "Delete MethodDeclaration(119)", "Delete Modifier: public(120)", "Delete SimpleName: SubMatrix(121)", "Delete PrimitiveType: byte(122)", "Delete Dimension(123)", "Delete ArrayType: byte[](124)", "Delete SimpleName: matrix(125)", "Delete SingleVariableDeclaration(126)", "Delete SimpleName: IOException(127)", "Delete SimpleType: IOException(128)", "Delete SimpleName: ByteArrayInputStream(129)", "Delete SimpleType: ByteArrayInputStream(130)", "Delete SimpleName: bos(131)", "Delete SimpleName: ByteArrayInputStream(132)", "Delete SimpleType: ByteArrayInputStream(133)", "Delete SimpleName: matrix(134)", "Delete ClassInstanceCreation(135)", "Delete VariableDeclarationFragment(136)", "Delete VariableDeclarationStatement(137)", "Delete SimpleName: DataInputStream(138)", "Delete SimpleType: DataInputStream(139)", "Delete SimpleName: dis(140)", "Delete SimpleName: DataInputStream(141)", "Delete SimpleType: DataInputStream(142)", "Delete SimpleName: bos(143)", "Delete ClassInstanceCreation(144)", "Delete VariableDeclarationFragment(145)", "Delete VariableDeclarationStatement(146)", "Delete PrimitiveType: int(147)", "Delete SimpleName: rows(148)", "Delete SimpleName: dis(149)", "Delete SimpleName: readInt(150)", "Delete MethodInvocation(151)", "Delete VariableDeclarationFragment(152)", "Delete VariableDeclarationStatement(153)", "Delete PrimitiveType: int(154)", "Delete SimpleName: columns(155)", "Delete SimpleName: dis(156)", "Delete SimpleName: readInt(157)", "Delete MethodInvocation(158)", "Delete VariableDeclarationFragment(159)", "Delete VariableDeclarationStatement(160)", "Delete ThisExpression(161)", "Delete SimpleName: matrix(162)", "Delete FieldAccess(163)", "Delete PrimitiveType: double(164)", "Delete Dimension(165)", "Delete Dimension(166)", "Delete ArrayType: double[][](167)", "Delete SimpleName: rows(168)", "Delete SimpleName: columns(169)", "Delete ArrayCreation(170)", "Delete Assignment: =(171)", "Delete ExpressionStatement(172)", "Delete PrimitiveType: int(173)", "Delete SimpleName: i(174)", "Delete NumberLiteral: 0(175)", "Delete VariableDeclarationFragment(176)", "Delete VariableDeclarationExpression(177)", "Delete SimpleName: i(178)", "Delete SimpleName: rows(179)", "Delete InfixExpression: <(180)", "Delete SimpleName: i(181)", "Delete PostfixExpression: ++(182)", "Delete PrimitiveType: int(183)", "Delete SimpleName: j(184)", "Delete NumberLiteral: 0(185)", "Delete VariableDeclarationFragment(186)", "Delete VariableDeclarationExpression(187)", "Delete SimpleName: j(188)", "Delete SimpleName: columns(189)", "Delete InfixExpression: <(190)", "Delete SimpleName: j(191)", "Delete PostfixExpression: ++(192)", "Delete ThisExpression(193)", "Delete SimpleName: matrix(194)", "Delete FieldAccess(195)", "Delete SimpleName: i(196)", "Delete ArrayAccess(197)", "Delete SimpleName: j(198)", "Delete ArrayAccess(199)", "Delete SimpleName: dis(200)", "Delete SimpleName: readDouble(201)", "Delete MethodInvocation(202)", "Delete Assignment: =(203)", "Delete ExpressionStatement(204)", "Delete Block(205)", "Delete ForStatement(206)", "Delete Block(207)", "Delete ForStatement(208)", "Delete SimpleName: dis(209)", "Delete SimpleName: close(210)", "Delete MethodInvocation(211)", "Delete ExpressionStatement(212)", "Delete SimpleName: bos(213)", "Delete SimpleName: close(214)", "Delete MethodInvocation(215)", "Delete ExpressionStatement(216)", "Delete Block(217)", "Delete MethodDeclaration(218)", "Delete TextElement: Sets the value(219)", "Delete TagElement(220)", "Delete SimpleName: row(221)", "Delete TagElement: @param(222)", "Delete SimpleName: column(223)", "Delete TagElement: @param(224)", "Delete SimpleName: value(225)", "Delete TagElement: @param(226)", "Delete Javadoc(227)", "Delete Modifier: public(228)", "Delete PrimitiveType: void(229)", "Delete SimpleName: set(230)", "Delete PrimitiveType: int(231)", "Delete SimpleName: row(232)", "Delete SingleVariableDeclaration(233)", "Delete PrimitiveType: int(234)", "Delete SimpleName: column(235)", "Delete SingleVariableDeclaration(236)", "Delete PrimitiveType: double(237)", "Delete SimpleName: value(238)", "Delete SingleVariableDeclaration(239)", "Delete SimpleName: matrix(240)", "Delete SimpleName: row(241)", "Delete ArrayAccess(242)", "Delete SimpleName: column(243)", "Delete ArrayAccess(244)", "Delete SimpleName: value(245)", "Delete Assignment: =(246)", "Delete ExpressionStatement(247)", "Delete Block(248)", "Delete MethodDeclaration(249)", "Delete TextElement: Sets the value(250)", "Delete TagElement(251)", "Delete SimpleName: row(252)", "Delete TagElement: @param(253)", "Delete SimpleName: column(254)", "Delete TagElement: @param(255)", "Delete SimpleName: value(256)", "Delete TagElement: @param(257)", "Delete Javadoc(258)", "Delete Modifier: public(259)", "Delete PrimitiveType: void(260)", "Delete SimpleName: set(261)", "Delete PrimitiveType: int(262)", "Delete SimpleName: row(263)", "Delete SingleVariableDeclaration(264)", "Delete PrimitiveType: int(265)", "Delete SimpleName: column(266)", "Delete SingleVariableDeclaration(267)", "Delete PrimitiveType: byte(268)", "Delete Dimension(269)", "Delete ArrayType: byte[](270)", "Delete SimpleName: value(271)", "Delete SingleVariableDeclaration(272)", "Delete SimpleName: matrix(273)", "Delete SimpleName: row(274)", "Delete ArrayAccess(275)", "Delete SimpleName: column(276)", "Delete ArrayAccess(277)", "Delete SimpleName: Bytes(278)", "Delete SimpleName: toDouble(279)", "Delete SimpleName: value(280)", "Delete MethodInvocation(281)", "Delete Assignment: =(282)", "Delete ExpressionStatement(283)", "Delete Block(284)", "Delete MethodDeclaration(285)", "Delete TextElement: Gets the value(286)", "Delete TagElement(287)", "Delete SimpleName: i(288)", "Delete TagElement: @param(289)", "Delete SimpleName: j(290)", "Delete TagElement: @param(291)", "Delete TextElement:  the value of submatrix(i, j)(292)", "Delete TagElement: @return(293)", "Delete Javadoc(294)", "Delete Modifier: public(295)", "Delete PrimitiveType: double(296)", "Delete SimpleName: get(297)", "Delete PrimitiveType: int(298)", "Delete SimpleName: i(299)", "Delete SingleVariableDeclaration(300)", "Delete PrimitiveType: int(301)", "Delete SimpleName: j(302)", "Delete SingleVariableDeclaration(303)", "Delete SimpleName: matrix(304)", "Delete SimpleName: i(305)", "Delete ArrayAccess(306)", "Delete SimpleName: j(307)", "Delete ArrayAccess(308)", "Delete ReturnStatement(309)", "Delete Block(310)", "Delete MethodDeclaration(311)", "Delete Modifier: public(312)", "Delete PrimitiveType: void(313)", "Delete SimpleName: add(314)", "Delete PrimitiveType: int(315)", "Delete SimpleName: row(316)", "Delete SingleVariableDeclaration(317)", "Delete PrimitiveType: int(318)", "Delete SimpleName: column(319)", "Delete SingleVariableDeclaration(320)", "Delete PrimitiveType: double(321)", "Delete SimpleName: value(322)", "Delete SingleVariableDeclaration(323)", "Delete SimpleName: matrix(324)", "Delete SimpleName: row(325)", "Delete ArrayAccess(326)", "Delete SimpleName: column(327)", "Delete ArrayAccess(328)", "Delete SimpleName: matrix(329)", "Delete SimpleName: row(330)", "Delete ArrayAccess(331)", "Delete SimpleName: column(332)", "Delete ArrayAccess(333)", "Delete SimpleName: value(334)", "Delete InfixExpression: +(335)", "Delete Assignment: =(336)", "Delete ExpressionStatement(337)", "Delete Block(338)", "Delete MethodDeclaration(339)", "Delete TextElement: c = a+b(340)", "Delete TagElement(341)", "Delete SimpleName: b(342)", "Delete TagElement: @param(343)", "Delete TextElement:  c(344)", "Delete TagElement: @return(345)", "Delete Javadoc(346)", "Delete Modifier: public(347)", "Delete SimpleName: SubMatrix(348)", "Delete SimpleType: SubMatrix(349)", "Delete SimpleName: add(350)", "Delete SimpleName: SubMatrix(351)", "Delete SimpleType: SubMatrix(352)", "Delete SimpleName: b(353)", "Delete SingleVariableDeclaration(354)", "Delete SimpleName: SubMatrix(355)", "Delete SimpleType: SubMatrix(356)", "Delete SimpleName: c(357)", "Delete SimpleName: SubMatrix(358)", "Delete SimpleType: SubMatrix(359)", "Delete ThisExpression(360)", "Delete SimpleName: getRows(361)", "Delete MethodInvocation(362)", "Delete ThisExpression(363)", "Delete SimpleName: getColumns(364)", "Delete MethodInvocation(365)", "Delete ClassInstanceCreation(366)", "Delete VariableDeclarationFragment(367)", "Delete VariableDeclarationStatement(368)", "Delete PrimitiveType: int(369)", "Delete SimpleName: i(370)", "Delete NumberLiteral: 0(371)", "Delete VariableDeclarationFragment(372)", "Delete VariableDeclarationExpression(373)", "Delete SimpleName: i(374)", "Delete ThisExpression(375)", "Delete SimpleName: getRows(376)", "Delete MethodInvocation(377)", "Delete InfixExpression: <(378)", "Delete SimpleName: i(379)", "Delete PostfixExpression: ++(380)", "Delete PrimitiveType: int(381)", "Delete SimpleName: j(382)", "Delete NumberLiteral: 0(383)", "Delete VariableDeclarationFragment(384)", "Delete VariableDeclarationExpression(385)", "Delete SimpleName: j(386)", "Delete ThisExpression(387)", "Delete SimpleName: getColumns(388)", "Delete MethodInvocation(389)", "Delete InfixExpression: <(390)", "Delete SimpleName: j(391)", "Delete PostfixExpression: ++(392)", "Delete SimpleName: c(393)", "Delete SimpleName: set(394)", "Delete SimpleName: i(395)", "Delete SimpleName: j(396)", "Delete ThisExpression(397)", "Delete SimpleName: get(398)", "Delete SimpleName: i(399)", "Delete SimpleName: j(400)", "Delete MethodInvocation(401)", "Delete SimpleName: b(402)", "Delete SimpleName: get(403)", "Delete SimpleName: i(404)", "Delete SimpleName: j(405)", "Delete MethodInvocation(406)", "Delete InfixExpression: +(407)", "Delete ParenthesizedExpression(408)", "Delete MethodInvocation(409)", "Delete ExpressionStatement(410)", "Delete Block(411)", "Delete ForStatement(412)", "Delete Block(413)", "Delete ForStatement(414)", "Delete SimpleName: c(415)", "Delete ReturnStatement(416)", "Delete Block(417)", "Delete MethodDeclaration(418)", "Delete TextElement: c = a*b(419)", "Delete TagElement(420)", "Delete SimpleName: b(421)", "Delete TagElement: @param(422)", "Delete TextElement:  c(423)", "Delete TagElement: @return(424)", "Delete Javadoc(425)", "Delete Modifier: public(426)", "Delete SimpleName: SubMatrix(427)", "Delete SimpleType: SubMatrix(428)", "Delete SimpleName: mult(429)", "Delete SimpleName: SubMatrix(430)", "Delete SimpleType: SubMatrix(431)", "Delete SimpleName: b(432)", "Delete SingleVariableDeclaration(433)", "Delete SimpleName: SubMatrix(434)", "Delete SimpleType: SubMatrix(435)", "Delete SimpleName: c(436)", "Delete SimpleName: SubMatrix(437)", "Delete SimpleType: SubMatrix(438)", "Delete ThisExpression(439)", "Delete SimpleName: getRows(440)", "Delete MethodInvocation(441)", "Delete SimpleName: b(442)", "Delete SimpleName: getColumns(443)", "Delete MethodInvocation(444)", "Delete ClassInstanceCreation(445)", "Delete VariableDeclarationFragment(446)", "Delete VariableDeclarationStatement(447)", "Delete PrimitiveType: int(448)", "Delete SimpleName: i(449)", "Delete NumberLiteral: 0(450)", "Delete VariableDeclarationFragment(451)", "Delete VariableDeclarationExpression(452)", "Delete SimpleName: i(453)", "Delete ThisExpression(454)", "Delete SimpleName: getRows(455)", "Delete MethodInvocation(456)", "Delete InfixExpression: <(457)", "Delete SimpleName: i(458)", "Delete PostfixExpression: ++(459)", "Delete PrimitiveType: int(460)", "Delete SimpleName: j(461)", "Delete NumberLiteral: 0(462)", "Delete VariableDeclarationFragment(463)", "Delete VariableDeclarationExpression(464)", "Delete SimpleName: j(465)", "Delete SimpleName: b(466)", "Delete SimpleName: getColumns(467)", "Delete MethodInvocation(468)", "Delete InfixExpression: <(469)", "Delete SimpleName: j(470)", "Delete PostfixExpression: ++(471)", "Delete PrimitiveType: int(472)", "Delete SimpleName: k(473)", "Delete NumberLiteral: 0(474)", "Delete VariableDeclarationFragment(475)", "Delete VariableDeclarationExpression(476)", "Delete SimpleName: k(477)", "Delete ThisExpression(478)", "Delete SimpleName: getColumns(479)", "Delete MethodInvocation(480)", "Delete InfixExpression: <(481)", "Delete SimpleName: k(482)", "Delete PostfixExpression: ++(483)", "Delete SimpleName: c(484)", "Delete SimpleName: add(485)", "Delete SimpleName: i(486)", "Delete SimpleName: j(487)", "Delete ThisExpression(488)", "Delete SimpleName: get(489)", "Delete SimpleName: i(490)", "Delete SimpleName: k(491)", "Delete MethodInvocation(492)", "Delete SimpleName: b(493)", "Delete SimpleName: get(494)", "Delete SimpleName: k(495)", "Delete SimpleName: j(496)", "Delete MethodInvocation(497)", "Delete InfixExpression: *(498)", "Delete MethodInvocation(499)", "Delete ExpressionStatement(500)", "Delete Block(501)", "Delete ForStatement(502)", "Delete Block(503)", "Delete ForStatement(504)", "Delete Block(505)", "Delete ForStatement(506)", "Delete SimpleName: c(507)", "Delete ReturnStatement(508)", "Delete Block(509)", "Delete MethodDeclaration(510)", "Delete TextElement: Gets the number of rows(511)", "Delete TagElement(512)", "Delete TextElement:  the number of rows(513)", "Delete TagElement: @return(514)", "Delete Javadoc(515)", "Delete Modifier: public(516)", "Delete PrimitiveType: int(517)", "Delete SimpleName: getRows(518)", "Delete ThisExpression(519)", "Delete SimpleName: matrix(520)", "Delete FieldAccess(521)", "Delete SimpleName: length(522)", "Delete FieldAccess(523)", "Delete ReturnStatement(524)", "Delete Block(525)", "Delete MethodDeclaration(526)", "Delete TextElement: Gets the number of columns(527)", "Delete TagElement(528)", "Delete TextElement:  the number of columns(529)", "Delete TagElement: @return(530)", "Delete Javadoc(531)", "Delete Modifier: public(532)", "Delete PrimitiveType: int(533)", "Delete SimpleName: getColumns(534)", "Delete ThisExpression(535)", "Delete SimpleName: matrix(536)", "Delete FieldAccess(537)", "Delete NumberLiteral: 0(538)", "Delete ArrayAccess(539)", "Delete SimpleName: length(540)", "Delete FieldAccess(541)", "Delete ReturnStatement(542)", "Delete Block(543)", "Delete MethodDeclaration(544)", "Delete TextElement: Close(545)", "Delete TagElement(546)", "Delete Javadoc(547)", "Delete Modifier: public(548)", "Delete PrimitiveType: void(549)", "Delete SimpleName: close(550)", "Delete SimpleName: matrix(551)", "Delete NullLiteral(552)", "Delete Assignment: =(553)", "Delete ExpressionStatement(554)", "Delete Block(555)", "Delete MethodDeclaration(556)", "Delete TextElement:  the 2d double array(557)", "Delete TagElement: @return(558)", "Delete Javadoc(559)", "Delete Modifier: public(560)", "Delete PrimitiveType: double(561)", "Delete Dimension(562)", "Delete Dimension(563)", "Delete ArrayType: double[][](564)", "Delete SimpleName: getDoubleArray(565)", "Delete PrimitiveType: double(566)", "Delete Dimension(567)", "Delete Dimension(568)", "Delete ArrayType: double[][](569)", "Delete SimpleName: result(570)", "Delete SimpleName: matrix(571)", "Delete VariableDeclarationFragment(572)", "Delete VariableDeclarationStatement(573)", "Delete SimpleName: result(574)", "Delete ReturnStatement(575)", "Delete Block(576)", "Delete MethodDeclaration(577)", "Delete TextElement: Gets the bytes of the sub matrix(578)", "Delete TagElement(579)", "Delete TextElement:  the bytes of the sub matrix(580)", "Delete TagElement: @return(581)", "Delete SimpleName: IOException(582)", "Delete TagElement: @throws(583)", "Delete Javadoc(584)", "Delete Modifier: public(585)", "Delete PrimitiveType: byte(586)", "Delete Dimension(587)", "Delete ArrayType: byte[](588)", "Delete SimpleName: getBytes(589)", "Delete SimpleName: IOException(590)", "Delete SimpleType: IOException(591)", "Delete SimpleName: ByteArrayOutputStream(592)", "Delete SimpleType: ByteArrayOutputStream(593)", "Delete SimpleName: bos(594)", "Delete SimpleName: ByteArrayOutputStream(595)", "Delete SimpleType: ByteArrayOutputStream(596)", "Delete ClassInstanceCreation(597)", "Delete VariableDeclarationFragment(598)", "Delete VariableDeclarationStatement(599)", "Delete SimpleName: DataOutputStream(600)", "Delete SimpleType: DataOutputStream(601)", "Delete SimpleName: dos(602)", "Delete SimpleName: DataOutputStream(603)", "Delete SimpleType: DataOutputStream(604)", "Delete SimpleName: bos(605)", "Delete ClassInstanceCreation(606)", "Delete VariableDeclarationFragment(607)", "Delete VariableDeclarationStatement(608)", "Delete SimpleName: dos(609)", "Delete SimpleName: writeInt(610)", "Delete ThisExpression(611)", "Delete SimpleName: getRows(612)", "Delete MethodInvocation(613)", "Delete MethodInvocation(614)", "Delete ExpressionStatement(615)", "Delete SimpleName: dos(616)", "Delete SimpleName: writeInt(617)", "Delete ThisExpression(618)", "Delete SimpleName: getColumns(619)", "Delete MethodInvocation(620)", "Delete MethodInvocation(621)", "Delete ExpressionStatement(622)", "Delete PrimitiveType: int(623)", "Delete SimpleName: i(624)", "Delete NumberLiteral: 0(625)", "Delete VariableDeclarationFragment(626)", "Delete VariableDeclarationExpression(627)", "Delete SimpleName: i(628)", "Delete ThisExpression(629)", "Delete SimpleName: getRows(630)", "Delete MethodInvocation(631)", "Delete InfixExpression: <(632)", "Delete SimpleName: i(633)", "Delete PostfixExpression: ++(634)", "Delete PrimitiveType: int(635)", "Delete SimpleName: j(636)", "Delete NumberLiteral: 0(637)", "Delete VariableDeclarationFragment(638)", "Delete VariableDeclarationExpression(639)", "Delete SimpleName: j(640)", "Delete ThisExpression(641)", "Delete SimpleName: getColumns(642)", "Delete MethodInvocation(643)", "Delete InfixExpression: <(644)", "Delete SimpleName: j(645)", "Delete PostfixExpression: ++(646)", "Delete SimpleName: dos(647)", "Delete SimpleName: writeDouble(648)", "Delete ThisExpression(649)", "Delete SimpleName: get(650)", "Delete SimpleName: i(651)", "Delete SimpleName: j(652)", "Delete MethodInvocation(653)", "Delete MethodInvocation(654)", "Delete ExpressionStatement(655)", "Delete Block(656)", "Delete ForStatement(657)", "Delete Block(658)", "Delete ForStatement(659)", "Delete PrimitiveType: byte(660)", "Delete Dimension(661)", "Delete ArrayType: byte[](662)", "Delete SimpleName: data(663)", "Delete SimpleName: bos(664)", "Delete SimpleName: toByteArray(665)", "Delete MethodInvocation(666)", "Delete VariableDeclarationFragment(667)", "Delete VariableDeclarationStatement(668)", "Delete SimpleName: dos(669)", "Delete SimpleName: close(670)", "Delete MethodInvocation(671)", "Delete ExpressionStatement(672)", "Delete SimpleName: bos(673)", "Delete SimpleName: close(674)", "Delete MethodInvocation(675)", "Delete ExpressionStatement(676)", "Delete SimpleName: data(677)", "Delete ReturnStatement(678)", "Delete Block(679)", "Delete MethodDeclaration(680)", "Delete Modifier: public(681)", "Delete SimpleName: String(682)", "Delete SimpleType: String(683)", "Delete SimpleName: toString(684)", "Delete SimpleName: StringBuilder(685)", "Delete SimpleType: StringBuilder(686)", "Delete SimpleName: result(687)", "Delete SimpleName: StringBuilder(688)", "Delete SimpleType: StringBuilder(689)", "Delete ClassInstanceCreation(690)", "Delete VariableDeclarationFragment(691)", "Delete VariableDeclarationStatement(692)", "Delete PrimitiveType: int(693)", "Delete SimpleName: i(694)", "Delete NumberLiteral: 0(695)", "Delete VariableDeclarationFragment(696)", "Delete VariableDeclarationExpression(697)", "Delete SimpleName: i(698)", "Delete ThisExpression(699)", "Delete SimpleName: getRows(700)", "Delete MethodInvocation(701)", "Delete InfixExpression: <(702)", "Delete SimpleName: i(703)", "Delete PostfixExpression: ++(704)", "Delete PrimitiveType: int(705)", "Delete SimpleName: j(706)", "Delete NumberLiteral: 0(707)", "Delete VariableDeclarationFragment(708)", "Delete VariableDeclarationExpression(709)", "Delete SimpleName: j(710)", "Delete ThisExpression(711)", "Delete SimpleName: getColumns(712)", "Delete MethodInvocation(713)", "Delete InfixExpression: <(714)", "Delete SimpleName: j(715)", "Delete PostfixExpression: ++(716)", "Delete SimpleName: result(717)", "Delete SimpleName: append(718)", "Delete ThisExpression(719)", "Delete SimpleName: get(720)", "Delete SimpleName: i(721)", "Delete SimpleName: j(722)", "Delete MethodInvocation(723)", "Delete MethodInvocation(724)", "Delete ExpressionStatement(725)", "Delete SimpleName: result(726)", "Delete SimpleName: append(727)", "Delete CharacterLiteral: '\\t'(728)", "Delete MethodInvocation(729)", "Delete ExpressionStatement(730)", "Delete Block(731)", "Delete ForStatement(732)", "Delete SimpleName: result(733)", "Delete SimpleName: append(734)", "Delete CharacterLiteral: '\\n'(735)", "Delete MethodInvocation(736)", "Delete ExpressionStatement(737)", "Delete Block(738)", "Delete ForStatement(739)", "Delete SimpleName: result(740)", "Delete SimpleName: toString(741)", "Delete MethodInvocation(742)", "Delete ReturnStatement(743)", "Delete Block(744)", "Delete MethodDeclaration(745)", "Delete TypeDeclaration: class(746)"]}}, {"Vector_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TagElement", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: limitations under the License.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.matrix", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Copyright 2007 The Apache Software Foundation"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL SimpleName: getEntries", "DEL TextElement: Computes the given norm of the vector", "DEL Javadoc", "DEL SimpleName: v", "DEL SingleVariableDeclaration", "DEL SimpleName: Vector", "DEL SimpleName: i0", "DEL MethodDeclaration", "DEL SimpleName: alpha", "DEL SimpleName: Vector", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL PrimitiveType: double", "DEL TagElement: @param", "DEL TagElement", "DEL SimpleName: v", "DEL TagElement", "DEL TagElement: @param", "DEL SimpleName: v", "DEL SimpleName: index", "DEL TextElement: x dot v", "DEL TagElement", "DEL PrimitiveType: void", "DEL TextElement: Supported vector-norms.", "DEL TextElement: Basic vector interface.", "DEL SimpleName: add", "DEL SimpleType: Iterator", "DEL SimpleName: alpha", "DEL TagElement", "DEL TagElement", "DEL Javadoc", "DEL EnumConstantDeclaration", "DEL SimpleType: Norm", "DEL PrimitiveType: void", "DEL SimpleType: Vector", "DEL EnumConstantDeclaration", "DEL TagElement", "DEL SimpleName: Norm", "DEL Modifier: public", "DEL SimpleName: v", "DEL SimpleName: set", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL TagElement: @return", "DEL TagElement: @param", "DEL SimpleName: Norm", "DEL MethodDeclaration", "DEL SimpleType: Vector", "DEL Javadoc", "DEL Javadoc", "DEL SimpleName: alpha", "DEL PrimitiveType: double", "DEL TagElement", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL SimpleName: index", "DEL TextElement: Returns an iterator", "DEL MethodDeclaration", "DEL SimpleType: Vector", "DEL PrimitiveType: int", "DEL SimpleName: v", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: TwoRobust", "DEL SimpleName: v", "DEL TagElement: @return", "DEL TagElement", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL TagElement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL TextElement: Returns the ", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: subVector", "DEL SimpleName: Two", "DEL Modifier: public", "DEL TextElement: Sets the vector", "DEL TextElement:  norm of the vector", "DEL TagElement", "DEL SimpleName: Vector", "DEL Modifier: public", "DEL PrimitiveType: double", "DEL Modifier: public", "DEL SimpleType: Vector", "DEL SimpleType: MapWritable", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: value", "DEL TextElement:  x = alpha*v + x", "DEL SimpleName: Vector", "DEL Javadoc", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL TextElement: Sets the value of index", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: Vector", "DEL SimpleName: Iterator", "DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL TagElement", "DEL TextElement:  size of the vector", "DEL SimpleName: v", "DEL MethodDeclaration", "DEL TagElement", "DEL SimpleName: get", "DEL EnumConstantDeclaration", "DEL SimpleName: set", "DEL Javadoc", "DEL Javadoc", "DEL TagElement: @return", "DEL SimpleName: i1", "DEL TagElement: @param", "DEL SimpleType: Vector", "DEL TagElement: @return", "DEL SimpleName: scale", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL ParameterizedType: Iterator<Writable>", "DEL EnumConstantDeclaration", "DEL MethodDeclaration", "DEL TextElement: Sum of the absolute values of the entries ", "DEL SingleVariableDeclaration", "DEL TextElement: Size of the vector", "DEL Modifier: public", "DEL PrimitiveType: double", "DEL TextElement:  x = v + x", "DEL Modifier: public", "DEL SimpleType: Vector", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleName: iterator", "DEL TagElement", "DEL Javadoc", "DEL SimpleType: Writable", "DEL SingleVariableDeclaration", "DEL SimpleName: dot", "DEL SimpleName: Infinity", "DEL SimpleName: Vector", "DEL MethodDeclaration", "DEL Javadoc", "DEL TextElement:  the index of the last element", "DEL TagElement", "DEL SimpleName: Writable", "DEL Modifier: public", "DEL SimpleName: index", "DEL TextElement: x = v + x", "DEL SimpleName: alpha", "DEL SingleVariableDeclaration", "DEL TextElement:  v(index)", "DEL TagElement: @return", "DEL TextElement: The root of sum of squares ", "DEL TagElement: @param", "DEL SimpleType: Vector", "DEL Javadoc", "DEL SimpleName: alpha", "DEL TextElement:  iterator", "DEL TextElement:  v = alpha*v", "DEL TagElement", "DEL SimpleName: add", "DEL TagElement: @param", "DEL SimpleName: v", "DEL TypeDeclaration: interface", "DEL SimpleName: Vector", "DEL SimpleName: type", "DEL TextElement: x = alpha*v + x", "DEL SimpleName: add", "DEL TagElement: @return", "DEL TextElement: v = alpha*v ", "DEL SingleVariableDeclaration", "DEL EnumDeclaration", "DEL TagElement: @param", "DEL SimpleName: size", "DEL Modifier: public", "DEL SimpleName: Vector", "DEL PrimitiveType: double", "DEL SimpleName: i1", "DEL SimpleName: alpha", "DEL Javadoc", "DEL Javadoc", "DEL TagElement: @return", "DEL SimpleName: index", "DEL TagElement: @param", "DEL TextElement:  v[i0:i1]", "DEL PrimitiveType: int", "DEL SimpleName: index", "DEL TextElement:  the index of the first element", "DEL TextElement: The robust norm of the vector ", "DEL Modifier: public", "DEL TagElement: @param", "DEL TextElement:  the entries of vector", "DEL MethodDeclaration", "DEL SimpleName: Vector", "DEL SimpleName: Vector", "DEL TextElement: Gets the value of index", "DEL SimpleType: Vector", "DEL Javadoc", "DEL Javadoc", "DEL SimpleName: index", "DEL MethodDeclaration", "DEL SimpleType: Vector", "DEL Modifier: public", "DEL TagElement: @return", "DEL TextElement: x = alpha * v", "DEL TagElement: @param", "DEL TagElement: @return", "DEL TagElement", "DEL TextElement:  x = alpha * v", "DEL Modifier: public", "DEL SimpleName: value", "DEL Javadoc", "DEL SimpleName: value", "DEL MethodDeclaration", "DEL TextElement:  x = v", "DEL SimpleType: Vector", "DEL SimpleName: v", "DEL TagElement", "DEL Javadoc", "DEL SimpleName: Vector", "DEL SingleVariableDeclaration", "DEL PrimitiveType: double", "DEL SimpleName: type", "DEL TextElement: Largest entry in absolute value ", "DEL TagElement: @return", "DEL SimpleType: Vector", "DEL SimpleName: i0", "DEL SingleVariableDeclaration", "DEL SimpleName: MapWritable", "DEL TextElement: Returns a sub-vector.", "DEL TagElement: @return", "DEL Modifier: public", "DEL SimpleName: One", "DEL SimpleName: v", "DEL TagElement", "DEL SimpleName: set", "DEL Modifier: public", "DEL TagElement: @return", "DEL TextElement: Adds the value to v(index)", "DEL TextElement:  x dot v", "DEL PrimitiveType: double", "DEL TagElement: @link", "DEL SimpleName: norm", "DEL TagElement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: Vector", "DEL Javadoc", "DEL TagElement: @param", "DEL PrimitiveType: int", "DEL PrimitiveType: double"]}]}}, {"Vector_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.matrix(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.util.Iterator(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.io.Writable(22)", "Delete ImportDeclaration(23)", "Delete TextElement: Basic vector interface.(24)", "Delete TagElement(25)", "Delete Javadoc(26)", "Delete Modifier: public(27)", "Delete SimpleName: Vector(28)", "Delete TextElement: Size of the vector(29)", "Delete TagElement(30)", "Delete TextElement:  size of the vector(31)", "Delete TagElement: @return(32)", "Delete Javadoc(33)", "Delete Modifier: public(34)", "Delete PrimitiveType: int(35)", "Delete SimpleName: size(36)", "Delete MethodDeclaration(37)", "Delete TextElement: Gets the value of index(38)", "Delete TagElement(39)", "Delete SimpleName: index(40)", "Delete TagElement: @param(41)", "Delete TextElement:  v(index)(42)", "Delete TagElement: @return(43)", "Delete Javadoc(44)", "Delete Modifier: public(45)", "Delete PrimitiveType: double(46)", "Delete SimpleName: get(47)", "Delete PrimitiveType: int(48)", "Delete SimpleName: index(49)", "Delete SingleVariableDeclaration(50)", "Delete MethodDeclaration(51)", "Delete TextElement: Sets the value of index(52)", "Delete TagElement(53)", "Delete SimpleName: index(54)", "Delete TagElement: @param(55)", "Delete SimpleName: value(56)", "Delete TagElement: @param(57)", "Delete Javadoc(58)", "Delete Modifier: public(59)", "Delete PrimitiveType: void(60)", "Delete SimpleName: set(61)", "Delete PrimitiveType: int(62)", "Delete SimpleName: index(63)", "Delete SingleVariableDeclaration(64)", "Delete PrimitiveType: double(65)", "Delete SimpleName: value(66)", "Delete SingleVariableDeclaration(67)", "Delete MethodDeclaration(68)", "Delete TextElement: Sets the vector(69)", "Delete TagElement(70)", "Delete SimpleName: v(71)", "Delete TagElement: @param(72)", "Delete TextElement:  x = v(73)", "Delete TagElement: @return(74)", "Delete Javadoc(75)", "Delete Modifier: public(76)", "Delete SimpleName: Vector(77)", "Delete SimpleType: Vector(78)", "Delete SimpleName: set(79)", "Delete SimpleName: Vector(80)", "Delete SimpleType: Vector(81)", "Delete SimpleName: v(82)", "Delete SingleVariableDeclaration(83)", "Delete MethodDeclaration(84)", "Delete TextElement: x = alpha * v(85)", "Delete TagElement(86)", "Delete SimpleName: alpha(87)", "Delete TagElement: @param(88)", "Delete SimpleName: v(89)", "Delete TagElement: @param(90)", "Delete TextElement:  x = alpha * v(91)", "Delete TagElement: @return(92)", "Delete Javadoc(93)", "Delete Modifier: public(94)", "Delete SimpleName: Vector(95)", "Delete SimpleType: Vector(96)", "Delete SimpleName: set(97)", "Delete PrimitiveType: double(98)", "Delete SimpleName: alpha(99)", "Delete SingleVariableDeclaration(100)", "Delete SimpleName: Vector(101)", "Delete SimpleType: Vector(102)", "Delete SimpleName: v(103)", "Delete SingleVariableDeclaration(104)", "Delete MethodDeclaration(105)", "Delete TextElement: Adds the value to v(index)(106)", "Delete TagElement(107)", "Delete SimpleName: index(108)", "Delete TagElement: @param(109)", "Delete SimpleName: value(110)", "Delete TagElement: @param(111)", "Delete Javadoc(112)", "Delete Modifier: public(113)", "Delete PrimitiveType: void(114)", "Delete SimpleName: add(115)", "Delete PrimitiveType: int(116)", "Delete SimpleName: index(117)", "Delete SingleVariableDeclaration(118)", "Delete PrimitiveType: double(119)", "Delete SimpleName: value(120)", "Delete SingleVariableDeclaration(121)", "Delete MethodDeclaration(122)", "Delete TextElement: x = alpha*v + x(123)", "Delete TagElement(124)", "Delete SimpleName: alpha(125)", "Delete TagElement: @param(126)", "Delete SimpleName: v(127)", "Delete TagElement: @param(128)", "Delete TextElement:  x = alpha*v + x(129)", "Delete TagElement: @return(130)", "Delete Javadoc(131)", "Delete Modifier: public(132)", "Delete SimpleName: Vector(133)", "Delete SimpleType: Vector(134)", "Delete SimpleName: add(135)", "Delete PrimitiveType: double(136)", "Delete SimpleName: alpha(137)", "Delete SingleVariableDeclaration(138)", "Delete SimpleName: Vector(139)", "Delete SimpleType: Vector(140)", "Delete SimpleName: v(141)", "Delete SingleVariableDeclaration(142)", "Delete MethodDeclaration(143)", "Delete TextElement: x = v + x(144)", "Delete TagElement(145)", "Delete SimpleName: v(146)", "Delete TagElement: @param(147)", "Delete TextElement:  x = v + x(148)", "Delete TagElement: @return(149)", "Delete Javadoc(150)", "Delete Modifier: public(151)", "Delete SimpleName: Vector(152)", "Delete SimpleType: Vector(153)", "Delete SimpleName: add(154)", "Delete SimpleName: Vector(155)", "Delete SimpleType: Vector(156)", "Delete SimpleName: v(157)", "Delete SingleVariableDeclaration(158)", "Delete MethodDeclaration(159)", "Delete TextElement: x dot v(160)", "Delete TagElement(161)", "Delete SimpleName: v(162)", "Delete TagElement: @param(163)", "Delete TextElement:  x dot v(164)", "Delete TagElement: @return(165)", "Delete Javadoc(166)", "Delete Modifier: public(167)", "Delete PrimitiveType: double(168)", "Delete SimpleName: dot(169)", "Delete SimpleName: Vector(170)", "Delete SimpleType: Vector(171)", "Delete SimpleName: v(172)", "Delete SingleVariableDeclaration(173)", "Delete MethodDeclaration(174)", "Delete TextElement: v = alpha*v (175)", "Delete TagElement(176)", "Delete SimpleName: alpha(177)", "Delete TagElement: @param(178)", "Delete TextElement:  v = alpha*v(179)", "Delete TagElement: @return(180)", "Delete Javadoc(181)", "Delete Modifier: public(182)", "Delete SimpleName: Vector(183)", "Delete SimpleType: Vector(184)", "Delete SimpleName: scale(185)", "Delete PrimitiveType: double(186)", "Delete SimpleName: alpha(187)", "Delete SingleVariableDeclaration(188)", "Delete MethodDeclaration(189)", "Delete TextElement: Returns a sub-vector.(190)", "Delete TagElement(191)", "Delete SimpleName: i0(192)", "Delete TextElement:  the index of the first element(193)", "Delete TagElement: @param(194)", "Delete SimpleName: i1(195)", "Delete TextElement:  the index of the last element(196)", "Delete TagElement: @param(197)", "Delete TextElement:  v[i0:i1](198)", "Delete TagElement: @return(199)", "Delete Javadoc(200)", "Delete Modifier: public(201)", "Delete SimpleName: Vector(202)", "Delete SimpleType: Vector(203)", "Delete SimpleName: subVector(204)", "Delete PrimitiveType: int(205)", "Delete SimpleName: i0(206)", "Delete SingleVariableDeclaration(207)", "Delete PrimitiveType: int(208)", "Delete SimpleName: i1(209)", "Delete SingleVariableDeclaration(210)", "Delete MethodDeclaration(211)", "Delete TextElement: Computes the given norm of the vector(212)", "Delete TagElement(213)", "Delete SimpleName: type(214)", "Delete TagElement: @param(215)", "Delete TextElement:  norm of the vector(216)", "Delete TagElement: @return(217)", "Delete Javadoc(218)", "Delete Modifier: public(219)", "Delete PrimitiveType: double(220)", "Delete SimpleName: norm(221)", "Delete SimpleName: Norm(222)", "Delete SimpleType: Norm(223)", "Delete SimpleName: type(224)", "Delete SingleVariableDeclaration(225)", "Delete MethodDeclaration(226)", "Delete TextElement: Supported vector-norms.(227)", "Delete TagElement(228)", "Delete Javadoc(229)", "Delete SimpleName: Norm(230)", "Delete TextElement: Sum of the absolute values of the entries (231)", "Delete TagElement(232)", "Delete Javadoc(233)", "Delete SimpleName: One(234)", "Delete EnumConstantDeclaration(235)", "Delete TextElement: The root of sum of squares (236)", "Delete TagElement(237)", "Delete Javadoc(238)", "Delete SimpleName: Two(239)", "Delete EnumConstantDeclaration(240)", "Delete TextElement: The robust norm of the vector (241)", "Delete TagElement(242)", "Delete Javadoc(243)", "Delete SimpleName: TwoRobust(244)", "Delete EnumConstantDeclaration(245)", "Delete TextElement: Largest entry in absolute value (246)", "Delete TagElement(247)", "Delete Javadoc(248)", "Delete SimpleName: Infinity(249)", "Delete EnumConstantDeclaration(250)", "Delete EnumDeclaration(251)", "Delete TextElement: Returns an iterator(252)", "Delete TagElement(253)", "Delete TextElement:  iterator(254)", "Delete TagElement: @return(255)", "Delete Javadoc(256)", "Delete Modifier: public(257)", "Delete SimpleName: Iterator(258)", "Delete SimpleType: Iterator(259)", "Delete SimpleName: Writable(260)", "Delete SimpleType: Writable(261)", "Delete ParameterizedType: Iterator<Writable>(262)", "Delete SimpleName: iterator(263)", "Delete MethodDeclaration(264)", "Delete TextElement: Returns the (265)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(266)", "Delete TagElement: @link(267)", "Delete TagElement(268)", "Delete TextElement:  the entries of vector(269)", "Delete TagElement: @return(270)", "Delete Javadoc(271)", "Delete Modifier: public(272)", "Delete SimpleName: MapWritable(273)", "Delete SimpleType: MapWritable(274)", "Delete SimpleName: getEntries(275)", "Delete MethodDeclaration(276)", "Delete TypeDeclaration: interface(277)"]}}, {"BlockID_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: See the License for the specific language governing permissions and", "DEL TagElement", "DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL PackageDeclaration", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: limitations under the License.", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL Javadoc"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataInput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.WritableComparable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: write", "DEL SimpleName: length", "DEL InfixExpression: >", "DEL PrefixExpression: !", "DEL SimpleName: buf", "DEL SimpleName: thatColumn", "DEL PrimitiveType: byte", "DEL ThisExpression", "DEL PostfixExpression: ++", "DEL NumberLiteral: 1", "DEL SimpleName: out", "DEL SimpleType: Object", "DEL VariableDeclarationStatement", "DEL SimpleName: Integer", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL SimpleName: rKey", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: row", "DEL IfStatement", "DEL PrimitiveType: int", "DEL SimpleName: BlockID", "DEL SimpleName: BlockID", "DEL Assignment: =", "DEL SimpleName: rKey", "DEL BooleanLiteral: false", "DEL MethodDeclaration", "DEL SimpleName: BlockID", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: thatColumn", "DEL StringLiteral: \",\"", "DEL SimpleName: o", "DEL SimpleName: toString", "DEL SimpleName: i", "DEL SimpleName: set", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL SimpleName: row", "DEL SimpleName: e", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: buf", "DEL SimpleName: row", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL SimpleType: IOException", "DEL MethodDeclaration", "DEL SimpleName: thatRow", "DEL FieldAccess", "DEL SimpleName: column", "DEL MethodInvocation", "DEL SimpleName: value", "DEL ClassInstanceCreation", "DEL NumberLiteral: 37", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: Bytes", "DEL SimpleName: BlockID", "DEL InfixExpression: ==", "DEL InfixExpression: *", "DEL ThisExpression", "DEL NumberLiteral: 15", "DEL FieldAccess", "DEL MethodInvocation", "DEL TextElement: Make BlockID's string representation be same format.", "DEL SimpleName: row", "DEL SimpleName: toBytes", "DEL Modifier: public", "DEL Dimension", "DEL SimpleName: LOG", "DEL SimpleName: thisColumn", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: out", "DEL SimpleName: compareTo", "DEL ThisExpression", "DEL NumberLiteral: 1", "DEL SimpleName: substring", "DEL Block", "DEL FieldDeclaration", "DEL PrimitiveType: int", "DEL Modifier: private", "DEL SimpleName: getColumn", "DEL InfixExpression: ==", "DEL SimpleName: PAD_SIZE", "DEL SimpleName: column", "DEL SimpleName: o", "DEL SingleVariableDeclaration", "DEL SimpleName: toString", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL InfixExpression: !=", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL StringLiteral: \"00000000\"", "DEL SimpleName: thisColumn", "DEL ThisExpression", "DEL SimpleName: o", "DEL IfStatement", "DEL SimpleName: PAD_SIZE", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL TypeLiteral", "DEL NumberLiteral: 1", "DEL MethodDeclaration", "DEL Modifier: public", "DEL InfixExpression: ==", "DEL NumberLiteral: 1", "DEL NumberLiteral: 1", "DEL MethodDeclaration", "DEL SimpleName: column", "DEL SimpleName: BlockID", "DEL SimpleName: o", "DEL ArrayAccess", "DEL PrefixExpression: -", "DEL SimpleName: Logger", "DEL PrefixExpression: ++", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL Block", "DEL InfixExpression: -", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL SimpleName: zeros", "DEL PrefixExpression: -", "DEL FieldDeclaration", "DEL SimpleName: hashCode", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: keys", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleType: BlockID", "DEL SimpleName: String", "DEL Block", "DEL SingleMemberAnnotation", "DEL StringLiteral: \",\"", "DEL SimpleName: seq", "DEL Modifier: static", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: thatRow", "DEL StringLiteral: \"[-]\"", "DEL SimpleName: compareTo", "DEL SimpleName: toString", "DEL Assignment: =", "DEL SimpleName: column", "DEL PrimitiveType: int", "DEL SimpleName: rKey", "DEL SimpleType: DataInput", "DEL PrimitiveType: void", "DEL SimpleName: Bytes", "DEL SimpleName: DataOutput", "DEL Block", "DEL IfStatement", "DEL FieldAccess", "DEL SimpleName: StringBuffer", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL SimpleName: buf", "DEL SimpleName: getLogger", "DEL SimpleName: BlockID", "DEL Assignment: =", "DEL TryStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: seq", "DEL PrimitiveType: int", "DEL ParenthesizedExpression", "DEL InfixExpression: <", "DEL SimpleName: Object", "DEL MarkerAnnotation", "DEL SimpleName: set", "DEL SimpleName: length", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: buf", "DEL SimpleName: toString", "DEL Block", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL StringLiteral: \"-\"", "DEL SimpleName: String", "DEL PrimitiveType: byte", "DEL SimpleType: DataOutput", "DEL Modifier: public", "DEL SimpleName: Logger", "DEL SimpleName: zeros", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL CharacterLiteral: '0'", "DEL SimpleName: length", "DEL SimpleName: writeByteArray", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: rKey", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: keys", "DEL ArrayType: String[]", "DEL MethodInvocation", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL NumberLiteral: 0", "DEL ArrayAccess", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: rKey", "DEL SimpleType: StringBuffer", "DEL PostfixExpression: ++", "DEL Block", "DEL NumberLiteral: 1", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: thatColumn", "DEL SimpleType: WritableComparable", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL SimpleName: o", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL SimpleName: readByteArray", "DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL SimpleName: column", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: column", "DEL Block", "DEL StringLiteral: \"0\"", "DEL SimpleName: thisRow", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: column", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: rKey", "DEL SimpleName: BlockID", "DEL SimpleName: columns", "DEL SimpleName: rKey", "DEL SimpleType: StringBuffer", "DEL VariableDeclarationStatement", "DEL PrefixExpression: -", "DEL SimpleName: row", "DEL SimpleName: Bytes", "DEL FieldAccess", "DEL PrimitiveType: int", "DEL SimpleName: set", "DEL SimpleName: Override", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL SimpleName: WritableComparable", "DEL ReturnStatement", "DEL SimpleName: column", "DEL Block", "DEL Assignment: =", "DEL SimpleName: i", "DEL SimpleName: thisRow", "DEL TypeDeclaration: class", "DEL SimpleName: rKey", "DEL Dimension", "DEL ArrayType: byte[]", "DEL SimpleName: o", "DEL SimpleName: column", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL ThisExpression", "DEL SimpleName: i", "DEL SimpleName: length", "DEL MethodDeclaration", "DEL SimpleName: thisColumn", "DEL Modifier: final", "DEL StringLiteral: \"[,]\"", "DEL SimpleName: column", "DEL Block", "DEL WhileStatement", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL Dimension", "DEL ParenthesizedExpression", "DEL SimpleType: BlockID", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: i", "DEL SimpleName: row", "DEL SimpleName: seq", "DEL CastExpression", "DEL SimpleName: getColumn", "DEL FieldAccess", "DEL SimpleName: toString", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleName: getRow", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL SimpleName: append", "DEL ThisExpression", "DEL SimpleName: BlockID", "DEL CatchClause", "DEL StringLiteral: \",\"", "DEL PrimitiveType: int", "DEL NullLiteral", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL Block", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: row", "DEL NumberLiteral: 0", "DEL SimpleType: IOException", "DEL SimpleName: column", "DEL SimpleName: thatRow", "DEL IfStatement", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: thisRow", "DEL SimpleName: column", "DEL SimpleName: keys", "DEL StringLiteral: \"[,]\"", "DEL SimpleName: columns", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL StringLiteral: \",\"", "DEL MethodInvocation", "DEL SimpleName: readFields", "DEL SimpleName: parseInt", "DEL SimpleName: bytes", "DEL ClassInstanceCreation", "DEL Block", "DEL Block", "DEL SimpleName: column", "DEL VariableDeclarationStatement", "DEL SimpleType: BlockID", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleName: IOException", "DEL Assignment: =", "DEL InfixExpression: +", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleType: String", "DEL SimpleName: column", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleName: column", "DEL PrimitiveType: int", "DEL SimpleName: column", "DEL Modifier: public", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL InfixExpression: +", "DEL SimpleName: String", "DEL SimpleName: i", "DEL SimpleName: seq", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: keys", "DEL CharacterLiteral: '0'", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL SimpleName: BlockID", "DEL TagElement", "DEL ParenthesizedExpression", "DEL TextElement: A WritableComparable for BlockIDs. ", "DEL MethodInvocation", "DEL SimpleType: ArrayIndexOutOfBoundsException", "DEL SimpleName: BlockID", "DEL SimpleName: rKey", "DEL SimpleName: row", "DEL SimpleName: split", "DEL SimpleName: row", "DEL Block", "DEL Block", "DEL NumberLiteral: 2", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: charAt", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL SimpleName: Bytes", "DEL StringLiteral: \"unchecked\"", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Dimension", "DEL SimpleName: String", "DEL SimpleName: valueOf", "DEL SimpleName: DataInput", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: BlockID", "DEL Block", "DEL SimpleType: BlockID", "DEL SimpleName: keys", "DEL InfixExpression: +", "DEL SimpleName: in", "DEL SingleVariableDeclaration", "DEL SimpleName: parseInt", "DEL SimpleName: seq", "DEL ForStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: row", "DEL SimpleName: i", "DEL NumberLiteral: 8", "DEL FieldDeclaration", "DEL SimpleName: column", "DEL SimpleName: substring", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL InfixExpression: +", "DEL PrimitiveType: void", "DEL SimpleName: row", "DEL SimpleName: charAt", "DEL PrimitiveType: int", "DEL SimpleName: e", "DEL SimpleName: in", "DEL ConditionalExpression", "DEL SimpleName: row", "DEL Block", "DEL SimpleType: IOException", "DEL WhileStatement", "DEL ThisExpression", "DEL Block", "DEL SimpleName: bytes", "DEL CastExpression", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL InstanceofExpression", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: equals", "DEL Block", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL SimpleType: String", "DEL SimpleName: split", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: String", "DEL ReturnStatement", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: Object", "DEL SimpleName: split", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL ThisExpression", "DEL ReturnStatement", "DEL NumberLiteral: 1", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleName: i", "DEL SimpleType: BlockID", "DEL VariableDeclarationExpression", "DEL PrimitiveType: boolean", "DEL Javadoc", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL PrimitiveType: int", "DEL FieldAccess", "DEL NumberLiteral: 8", "DEL BooleanLiteral: false", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: getBytes", "DEL SimpleName: row", "DEL SimpleName: row", "DEL SimpleName: o", "DEL Block", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL Modifier: public", "DEL SimpleName: StringBuffer", "DEL SimpleName: seq", "DEL PrimitiveType: int", "DEL SimpleName: ArrayIndexOutOfBoundsException", "DEL Modifier: private", "DEL SimpleName: valueOf", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: substring", "DEL SimpleType: Logger", "DEL SimpleName: BlockID", "DEL InfixExpression: ==", "DEL SimpleName: getRow"]}]}}, {"BlockID_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples.mapreduce(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.DataInput(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.DataOutput(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.IOException(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.io.WritableComparable(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.log4j.Logger(28)", "Delete ImportDeclaration(29)", "Delete TextElement: A WritableComparable for BlockIDs. (30)", "Delete TagElement(31)", "Delete Javadoc(32)", "Delete SimpleName: SuppressWarnings(33)", "Delete StringLiteral: \"unchecked\"(34)", "Delete SingleMemberAnnotation(35)", "Delete Modifier: public(36)", "Delete SimpleName: BlockID(37)", "Delete SimpleName: WritableComparable(38)", "Delete SimpleType: WritableComparable(39)", "Delete Modifier: static(40)", "Delete Modifier: final(41)", "Delete SimpleName: Logger(42)", "Delete SimpleType: Logger(43)", "Delete SimpleName: LOG(44)", "Delete SimpleName: Logger(45)", "Delete SimpleName: getLogger(46)", "Delete SimpleName: BlockID(47)", "Delete SimpleType: BlockID(48)", "Delete TypeLiteral(49)", "Delete MethodInvocation(50)", "Delete VariableDeclarationFragment(51)", "Delete FieldDeclaration(52)", "Delete Modifier: public(53)", "Delete Modifier: static(54)", "Delete Modifier: final(55)", "Delete PrimitiveType: int(56)", "Delete SimpleName: PAD_SIZE(57)", "Delete NumberLiteral: 15(58)", "Delete VariableDeclarationFragment(59)", "Delete FieldDeclaration(60)", "Delete Modifier: private(61)", "Delete PrimitiveType: int(62)", "Delete SimpleName: row(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete Modifier: private(66)", "Delete PrimitiveType: int(67)", "Delete SimpleName: column(68)", "Delete VariableDeclarationFragment(69)", "Delete FieldDeclaration(70)", "Delete Modifier: private(71)", "Delete PrimitiveType: int(72)", "Delete SimpleName: seq(73)", "Delete NumberLiteral: 1(74)", "Delete PrefixExpression: -(75)", "Delete VariableDeclarationFragment(76)", "Delete FieldDeclaration(77)", "Delete Modifier: public(78)", "Delete SimpleName: BlockID(79)", "Delete Block(80)", "Delete MethodDeclaration(81)", "Delete Modifier: public(82)", "Delete SimpleName: BlockID(83)", "Delete PrimitiveType: int(84)", "Delete SimpleName: row(85)", "Delete SingleVariableDeclaration(86)", "Delete PrimitiveType: int(87)", "Delete SimpleName: column(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: set(90)", "Delete SimpleName: row(91)", "Delete SimpleName: column(92)", "Delete MethodInvocation(93)", "Delete ExpressionStatement(94)", "Delete Block(95)", "Delete MethodDeclaration(96)", "Delete Modifier: public(97)", "Delete SimpleName: BlockID(98)", "Delete PrimitiveType: byte(99)", "Delete Dimension(100)", "Delete ArrayType: byte[](101)", "Delete SimpleName: bytes(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: IOException(104)", "Delete SimpleType: IOException(105)", "Delete SimpleName: String(106)", "Delete SimpleType: String(107)", "Delete SimpleName: rKey(108)", "Delete SimpleName: Bytes(109)", "Delete SimpleName: toString(110)", "Delete SimpleName: bytes(111)", "Delete MethodInvocation(112)", "Delete VariableDeclarationFragment(113)", "Delete VariableDeclarationStatement(114)", "Delete SimpleName: String(115)", "Delete SimpleType: String(116)", "Delete SimpleName: keys(117)", "Delete Dimension(118)", "Delete NullLiteral(119)", "Delete VariableDeclarationFragment(120)", "Delete VariableDeclarationStatement(121)", "Delete SimpleName: rKey(122)", "Delete SimpleName: substring(123)", "Delete NumberLiteral: 0(124)", "Delete NumberLiteral: 8(125)", "Delete MethodInvocation(126)", "Delete SimpleName: equals(127)", "Delete StringLiteral: \"00000000\"(128)", "Delete MethodInvocation(129)", "Delete PrimitiveType: int(130)", "Delete SimpleName: i(131)", "Delete NumberLiteral: 8(132)", "Delete VariableDeclarationFragment(133)", "Delete VariableDeclarationStatement(134)", "Delete SimpleName: rKey(135)", "Delete SimpleName: charAt(136)", "Delete SimpleName: i(137)", "Delete MethodInvocation(138)", "Delete CharacterLiteral: '0'(139)", "Delete InfixExpression: ==(140)", "Delete SimpleName: i(141)", "Delete PostfixExpression: ++(142)", "Delete ExpressionStatement(143)", "Delete Block(144)", "Delete WhileStatement(145)", "Delete SimpleName: keys(146)", "Delete SimpleName: rKey(147)", "Delete SimpleName: substring(148)", "Delete SimpleName: i(149)", "Delete SimpleName: rKey(150)", "Delete SimpleName: length(151)", "Delete MethodInvocation(152)", "Delete MethodInvocation(153)", "Delete SimpleName: split(154)", "Delete StringLiteral: \"[,]\"(155)", "Delete MethodInvocation(156)", "Delete Assignment: =(157)", "Delete ExpressionStatement(158)", "Delete Block(159)", "Delete PrimitiveType: int(160)", "Delete SimpleName: i(161)", "Delete NumberLiteral: 0(162)", "Delete VariableDeclarationFragment(163)", "Delete VariableDeclarationStatement(164)", "Delete SimpleName: rKey(165)", "Delete SimpleName: charAt(166)", "Delete SimpleName: i(167)", "Delete MethodInvocation(168)", "Delete CharacterLiteral: '0'(169)", "Delete InfixExpression: ==(170)", "Delete SimpleName: i(171)", "Delete PostfixExpression: ++(172)", "Delete ExpressionStatement(173)", "Delete Block(174)", "Delete WhileStatement(175)", "Delete SimpleName: keys(176)", "Delete SimpleName: rKey(177)", "Delete SimpleName: substring(178)", "Delete SimpleName: i(179)", "Delete SimpleName: rKey(180)", "Delete SimpleName: length(181)", "Delete MethodInvocation(182)", "Delete MethodInvocation(183)", "Delete SimpleName: split(184)", "Delete StringLiteral: \"[,]\"(185)", "Delete MethodInvocation(186)", "Delete Assignment: =(187)", "Delete ExpressionStatement(188)", "Delete Block(189)", "Delete IfStatement(190)", "Delete ThisExpression(191)", "Delete SimpleName: row(192)", "Delete FieldAccess(193)", "Delete SimpleName: Integer(194)", "Delete SimpleName: parseInt(195)", "Delete SimpleName: keys(196)", "Delete NumberLiteral: 1(197)", "Delete ArrayAccess(198)", "Delete MethodInvocation(199)", "Delete Assignment: =(200)", "Delete ExpressionStatement(201)", "Delete SimpleName: String(202)", "Delete SimpleType: String(203)", "Delete Dimension(204)", "Delete ArrayType: String[](205)", "Delete SimpleName: columns(206)", "Delete SimpleName: keys(207)", "Delete NumberLiteral: 2(208)", "Delete ArrayAccess(209)", "Delete SimpleName: split(210)", "Delete StringLiteral: \"[-]\"(211)", "Delete MethodInvocation(212)", "Delete VariableDeclarationFragment(213)", "Delete VariableDeclarationStatement(214)", "Delete ThisExpression(215)", "Delete SimpleName: column(216)", "Delete FieldAccess(217)", "Delete SimpleName: Integer(218)", "Delete SimpleName: parseInt(219)", "Delete SimpleName: columns(220)", "Delete NumberLiteral: 0(221)", "Delete ArrayAccess(222)", "Delete MethodInvocation(223)", "Delete Assignment: =(224)", "Delete ExpressionStatement(225)", "Delete Block(226)", "Delete SimpleName: ArrayIndexOutOfBoundsException(227)", "Delete SimpleType: ArrayIndexOutOfBoundsException(228)", "Delete SimpleName: e(229)", "Delete SingleVariableDeclaration(230)", "Delete SimpleName: ArrayIndexOutOfBoundsException(231)", "Delete SimpleType: ArrayIndexOutOfBoundsException(232)", "Delete SimpleName: rKey(233)", "Delete StringLiteral: \"\\n\"(234)", "Delete SimpleName: e(235)", "Delete InfixExpression: +(236)", "Delete ClassInstanceCreation(237)", "Delete ThrowStatement(238)", "Delete Block(239)", "Delete CatchClause(240)", "Delete TryStatement(241)", "Delete Block(242)", "Delete MethodDeclaration(243)", "Delete Modifier: public(244)", "Delete SimpleName: BlockID(245)", "Delete PrimitiveType: int(246)", "Delete SimpleName: row(247)", "Delete SingleVariableDeclaration(248)", "Delete PrimitiveType: int(249)", "Delete SimpleName: column(250)", "Delete SingleVariableDeclaration(251)", "Delete PrimitiveType: int(252)", "Delete SimpleName: seq(253)", "Delete SingleVariableDeclaration(254)", "Delete SimpleName: set(255)", "Delete SimpleName: row(256)", "Delete SimpleName: column(257)", "Delete MethodInvocation(258)", "Delete ExpressionStatement(259)", "Delete ThisExpression(260)", "Delete SimpleName: seq(261)", "Delete FieldAccess(262)", "Delete SimpleName: seq(263)", "Delete Assignment: =(264)", "Delete ExpressionStatement(265)", "Delete Block(266)", "Delete MethodDeclaration(267)", "Delete Modifier: public(268)", "Delete PrimitiveType: void(269)", "Delete SimpleName: set(270)", "Delete PrimitiveType: int(271)", "Delete SimpleName: row(272)", "Delete SingleVariableDeclaration(273)", "Delete PrimitiveType: int(274)", "Delete SimpleName: column(275)", "Delete SingleVariableDeclaration(276)", "Delete ThisExpression(277)", "Delete SimpleName: row(278)", "Delete FieldAccess(279)", "Delete SimpleName: row(280)", "Delete Assignment: =(281)", "Delete ExpressionStatement(282)", "Delete ThisExpression(283)", "Delete SimpleName: column(284)", "Delete FieldAccess(285)", "Delete SimpleName: column(286)", "Delete Assignment: =(287)", "Delete ExpressionStatement(288)", "Delete Block(289)", "Delete MethodDeclaration(290)", "Delete Modifier: public(291)", "Delete PrimitiveType: int(292)", "Delete SimpleName: getRow(293)", "Delete SimpleName: row(294)", "Delete ReturnStatement(295)", "Delete Block(296)", "Delete MethodDeclaration(297)", "Delete Modifier: public(298)", "Delete PrimitiveType: int(299)", "Delete SimpleName: getColumn(300)", "Delete SimpleName: column(301)", "Delete ReturnStatement(302)", "Delete Block(303)", "Delete MethodDeclaration(304)", "Delete Modifier: public(305)", "Delete PrimitiveType: void(306)", "Delete SimpleName: readFields(307)", "Delete SimpleName: DataInput(308)", "Delete SimpleType: DataInput(309)", "Delete SimpleName: in(310)", "Delete SingleVariableDeclaration(311)", "Delete SimpleName: IOException(312)", "Delete SimpleType: IOException(313)", "Delete SimpleName: BlockID(314)", "Delete SimpleType: BlockID(315)", "Delete SimpleName: value(316)", "Delete SimpleName: BlockID(317)", "Delete SimpleType: BlockID(318)", "Delete SimpleName: Bytes(319)", "Delete SimpleName: readByteArray(320)", "Delete SimpleName: in(321)", "Delete MethodInvocation(322)", "Delete ClassInstanceCreation(323)", "Delete VariableDeclarationFragment(324)", "Delete VariableDeclarationStatement(325)", "Delete ThisExpression(326)", "Delete SimpleName: row(327)", "Delete FieldAccess(328)", "Delete SimpleName: value(329)", "Delete SimpleName: getRow(330)", "Delete MethodInvocation(331)", "Delete Assignment: =(332)", "Delete ExpressionStatement(333)", "Delete ThisExpression(334)", "Delete SimpleName: column(335)", "Delete FieldAccess(336)", "Delete SimpleName: value(337)", "Delete SimpleName: getColumn(338)", "Delete MethodInvocation(339)", "Delete Assignment: =(340)", "Delete ExpressionStatement(341)", "Delete Block(342)", "Delete MethodDeclaration(343)", "Delete Modifier: public(344)", "Delete PrimitiveType: void(345)", "Delete SimpleName: write(346)", "Delete SimpleName: DataOutput(347)", "Delete SimpleType: DataOutput(348)", "Delete SimpleName: out(349)", "Delete SingleVariableDeclaration(350)", "Delete SimpleName: IOException(351)", "Delete SimpleType: IOException(352)", "Delete SimpleName: Bytes(353)", "Delete SimpleName: writeByteArray(354)", "Delete SimpleName: out(355)", "Delete SimpleName: Bytes(356)", "Delete SimpleName: toBytes(357)", "Delete ThisExpression(358)", "Delete SimpleName: toString(359)", "Delete MethodInvocation(360)", "Delete MethodInvocation(361)", "Delete MethodInvocation(362)", "Delete ExpressionStatement(363)", "Delete Block(364)", "Delete MethodDeclaration(365)", "Delete TextElement: Make BlockID's string representation be same format.(366)", "Delete TagElement(367)", "Delete Javadoc(368)", "Delete Modifier: public(369)", "Delete SimpleName: String(370)", "Delete SimpleType: String(371)", "Delete SimpleName: toString(372)", "Delete PrimitiveType: int(373)", "Delete SimpleName: zeros(374)", "Delete SimpleName: PAD_SIZE(375)", "Delete SimpleName: String(376)", "Delete SimpleName: valueOf(377)", "Delete SimpleName: row(378)", "Delete MethodInvocation(379)", "Delete SimpleName: length(380)", "Delete MethodInvocation(381)", "Delete SimpleName: String(382)", "Delete SimpleName: valueOf(383)", "Delete SimpleName: column(384)", "Delete MethodInvocation(385)", "Delete SimpleName: length(386)", "Delete MethodInvocation(387)", "Delete InfixExpression: -(388)", "Delete VariableDeclarationFragment(389)", "Delete VariableDeclarationStatement(390)", "Delete SimpleName: StringBuffer(391)", "Delete SimpleType: StringBuffer(392)", "Delete SimpleName: buf(393)", "Delete SimpleName: StringBuffer(394)", "Delete SimpleType: StringBuffer(395)", "Delete ClassInstanceCreation(396)", "Delete VariableDeclarationFragment(397)", "Delete VariableDeclarationStatement(398)", "Delete PrimitiveType: int(399)", "Delete SimpleName: i(400)", "Delete NumberLiteral: 0(401)", "Delete VariableDeclarationFragment(402)", "Delete VariableDeclarationExpression(403)", "Delete SimpleName: i(404)", "Delete SimpleName: zeros(405)", "Delete InfixExpression: <(406)", "Delete SimpleName: i(407)", "Delete PrefixExpression: ++(408)", "Delete SimpleName: buf(409)", "Delete SimpleName: append(410)", "Delete StringLiteral: \"0\"(411)", "Delete MethodInvocation(412)", "Delete ExpressionStatement(413)", "Delete Block(414)", "Delete ForStatement(415)", "Delete SimpleName: seq(416)", "Delete NumberLiteral: 1(417)", "Delete PrefixExpression: -(418)", "Delete InfixExpression: >(419)", "Delete SimpleName: buf(420)", "Delete SimpleName: toString(421)", "Delete MethodInvocation(422)", "Delete StringLiteral: \",\"(423)", "Delete SimpleName: row(424)", "Delete StringLiteral: \",\"(425)", "Delete SimpleName: column(426)", "Delete StringLiteral: \"-\"(427)", "Delete SimpleName: seq(428)", "Delete InfixExpression: +(429)", "Delete ReturnStatement(430)", "Delete Block(431)", "Delete SimpleName: buf(432)", "Delete SimpleName: toString(433)", "Delete MethodInvocation(434)", "Delete StringLiteral: \",\"(435)", "Delete SimpleName: row(436)", "Delete StringLiteral: \",\"(437)", "Delete SimpleName: column(438)", "Delete InfixExpression: +(439)", "Delete ReturnStatement(440)", "Delete Block(441)", "Delete IfStatement(442)", "Delete Block(443)", "Delete MethodDeclaration(444)", "Delete SimpleName: Override(445)", "Delete MarkerAnnotation(446)", "Delete Modifier: public(447)", "Delete PrimitiveType: int(448)", "Delete SimpleName: hashCode(449)", "Delete SimpleName: row(450)", "Delete NumberLiteral: 37(451)", "Delete InfixExpression: *(452)", "Delete SimpleName: column(453)", "Delete InfixExpression: +(454)", "Delete ReturnStatement(455)", "Delete Block(456)", "Delete MethodDeclaration(457)", "Delete Modifier: public(458)", "Delete PrimitiveType: int(459)", "Delete SimpleName: compareTo(460)", "Delete SimpleName: Object(461)", "Delete SimpleType: Object(462)", "Delete SimpleName: o(463)", "Delete SingleVariableDeclaration(464)", "Delete PrimitiveType: int(465)", "Delete SimpleName: thisRow(466)", "Delete ThisExpression(467)", "Delete SimpleName: row(468)", "Delete FieldAccess(469)", "Delete VariableDeclarationFragment(470)", "Delete VariableDeclarationStatement(471)", "Delete PrimitiveType: int(472)", "Delete SimpleName: thatRow(473)", "Delete SimpleName: BlockID(474)", "Delete SimpleType: BlockID(475)", "Delete SimpleName: o(476)", "Delete CastExpression(477)", "Delete ParenthesizedExpression(478)", "Delete SimpleName: row(479)", "Delete FieldAccess(480)", "Delete VariableDeclarationFragment(481)", "Delete VariableDeclarationStatement(482)", "Delete PrimitiveType: int(483)", "Delete SimpleName: thisColumn(484)", "Delete ThisExpression(485)", "Delete SimpleName: column(486)", "Delete FieldAccess(487)", "Delete VariableDeclarationFragment(488)", "Delete VariableDeclarationStatement(489)", "Delete PrimitiveType: int(490)", "Delete SimpleName: thatColumn(491)", "Delete SimpleName: BlockID(492)", "Delete SimpleType: BlockID(493)", "Delete SimpleName: o(494)", "Delete CastExpression(495)", "Delete ParenthesizedExpression(496)", "Delete SimpleName: column(497)", "Delete FieldAccess(498)", "Delete VariableDeclarationFragment(499)", "Delete VariableDeclarationStatement(500)", "Delete SimpleName: thisRow(501)", "Delete SimpleName: thatRow(502)", "Delete InfixExpression: !=(503)", "Delete SimpleName: thisRow(504)", "Delete SimpleName: thatRow(505)", "Delete InfixExpression: <(506)", "Delete NumberLiteral: 1(507)", "Delete PrefixExpression: -(508)", "Delete NumberLiteral: 1(509)", "Delete ConditionalExpression(510)", "Delete ParenthesizedExpression(511)", "Delete ReturnStatement(512)", "Delete Block(513)", "Delete SimpleName: thisColumn(514)", "Delete SimpleName: thatColumn(515)", "Delete InfixExpression: <(516)", "Delete NumberLiteral: 1(517)", "Delete PrefixExpression: -(518)", "Delete SimpleName: thisColumn(519)", "Delete SimpleName: thatColumn(520)", "Delete InfixExpression: ==(521)", "Delete NumberLiteral: 0(522)", "Delete NumberLiteral: 1(523)", "Delete ConditionalExpression(524)", "Delete ParenthesizedExpression(525)", "Delete ConditionalExpression(526)", "Delete ParenthesizedExpression(527)", "Delete ReturnStatement(528)", "Delete Block(529)", "Delete IfStatement(530)", "Delete Block(531)", "Delete MethodDeclaration(532)", "Delete SimpleName: Override(533)", "Delete MarkerAnnotation(534)", "Delete Modifier: public(535)", "Delete PrimitiveType: boolean(536)", "Delete SimpleName: equals(537)", "Delete SimpleName: Object(538)", "Delete SimpleType: Object(539)", "Delete SimpleName: o(540)", "Delete SingleVariableDeclaration(541)", "Delete SimpleName: o(542)", "Delete NullLiteral(543)", "Delete InfixExpression: ==(544)", "Delete BooleanLiteral: false(545)", "Delete ReturnStatement(546)", "Delete IfStatement(547)", "Delete SimpleName: o(548)", "Delete SimpleName: BlockID(549)", "Delete SimpleType: BlockID(550)", "Delete InstanceofExpression(551)", "Delete ParenthesizedExpression(552)", "Delete PrefixExpression: !(553)", "Delete BooleanLiteral: false(554)", "Delete ReturnStatement(555)", "Delete IfStatement(556)", "Delete SimpleName: compareTo(557)", "Delete SimpleName: o(558)", "Delete MethodInvocation(559)", "Delete NumberLiteral: 0(560)", "Delete InfixExpression: ==(561)", "Delete ReturnStatement(562)", "Delete Block(563)", "Delete MethodDeclaration(564)", "Delete Modifier: public(565)", "Delete PrimitiveType: byte(566)", "Delete Dimension(567)", "Delete ArrayType: byte[](568)", "Delete SimpleName: getBytes(569)", "Delete SimpleName: Bytes(570)", "Delete SimpleName: toBytes(571)", "Delete ThisExpression(572)", "Delete SimpleName: toString(573)", "Delete MethodInvocation(574)", "Delete MethodInvocation(575)", "Delete ReturnStatement(576)", "Delete Block(577)", "Delete MethodDeclaration(578)", "Delete TypeDeclaration: class(579)"]}}, {"BlockMultMap_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.BytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SubMatrix", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: mult", "DEL SimpleName: Context", "DEL SimpleName: map", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleName: BytesWritable", "DEL ClassInstanceCreation", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: SubMatrix", "DEL SimpleType: TableMapper", "DEL ClassInstanceCreation", "DEL Dimension", "DEL StringLiteral: \"b\"", "DEL SimpleType: BlockID", "DEL ClassInstanceCreation", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: a", "DEL QualifiedName: Constants.BLOCK", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: BlockID", "DEL SimpleType: SubMatrix", "DEL SimpleName: IOException", "DEL SimpleName: COLUMN", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleType: SubMatrix", "DEL SimpleName: value", "DEL SimpleName: key", "DEL SimpleName: context", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: COLUMN", "DEL VariableDeclarationFragment", "DEL SimpleName: BlockMultMap", "DEL SimpleName: write", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: a", "DEL SimpleName: SubMatrix", "DEL SimpleName: key", "DEL SimpleName: Result", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \"a\"", "DEL SimpleName: c", "DEL SimpleType: SubMatrix", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: Result", "DEL SimpleName: SubMatrix", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: getBytes", "DEL SimpleName: toBytes", "DEL SimpleType: SubMatrix", "DEL MethodInvocation", "DEL SimpleType: Context", "DEL SimpleName: b", "DEL VariableDeclarationStatement", "DEL SimpleType: BytesWritable", "DEL Block", "DEL SimpleName: COLUMN", "DEL Modifier: private", "DEL SimpleName: InterruptedException", "DEL SimpleName: Bytes", "DEL SimpleType: IOException", "DEL SimpleName: getValue", "DEL Modifier: public", "DEL SimpleName: getValue", "DEL SimpleName: BlockID", "DEL ParameterizedType: TableMapper<BlockID,BytesWritable>", "DEL PrimitiveType: byte", "DEL Modifier: public", "DEL SimpleName: c", "DEL SimpleType: ImmutableBytesWritable", "DEL ArrayType: byte[]", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleType: SubMatrix", "DEL FieldDeclaration", "DEL SimpleName: b", "DEL TypeDeclaration: class", "DEL SimpleName: context", "DEL SimpleName: Bytes", "DEL SimpleType: BytesWritable", "DEL SimpleName: BytesWritable", "DEL SimpleType: BlockID", "DEL ClassInstanceCreation", "DEL SimpleType: InterruptedException", "DEL SimpleName: TableMapper", "DEL SimpleName: SubMatrix", "DEL SimpleName: SubMatrix", "DEL MethodInvocation"]}]}}, {"BlockMultMap_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.io.BytesWritable(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hama.Constants(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hama.matrix.SubMatrix(16)", "Delete ImportDeclaration(17)", "Delete Modifier: public(18)", "Delete SimpleName: BlockMultMap(19)", "Delete SimpleName: TableMapper(20)", "Delete SimpleType: TableMapper(21)", "Delete SimpleName: BlockID(22)", "Delete SimpleType: BlockID(23)", "Delete SimpleName: BytesWritable(24)", "Delete SimpleType: BytesWritable(25)", "Delete ParameterizedType: TableMapper<BlockID,BytesWritable>(26)", "Delete Modifier: private(27)", "Delete PrimitiveType: byte(28)", "Delete Dimension(29)", "Delete ArrayType: byte[](30)", "Delete SimpleName: COLUMN(31)", "Delete SimpleName: Bytes(32)", "Delete SimpleName: toBytes(33)", "Delete QualifiedName: Constants.BLOCK(34)", "Delete MethodInvocation(35)", "Delete VariableDeclarationFragment(36)", "Delete FieldDeclaration(37)", "Delete Modifier: public(38)", "Delete PrimitiveType: void(39)", "Delete SimpleName: map(40)", "Delete SimpleName: ImmutableBytesWritable(41)", "Delete SimpleType: ImmutableBytesWritable(42)", "Delete SimpleName: key(43)", "Delete SingleVariableDeclaration(44)", "Delete SimpleName: Result(45)", "Delete SimpleType: Result(46)", "Delete SimpleName: value(47)", "Delete SingleVariableDeclaration(48)", "Delete SimpleName: Context(49)", "Delete SimpleType: Context(50)", "Delete SimpleName: context(51)", "Delete SingleVariableDeclaration(52)", "Delete SimpleName: IOException(53)", "Delete SimpleType: IOException(54)", "Delete SimpleName: InterruptedException(55)", "Delete SimpleType: InterruptedException(56)", "Delete SimpleName: SubMatrix(57)", "Delete SimpleType: SubMatrix(58)", "Delete SimpleName: a(59)", "Delete SimpleName: SubMatrix(60)", "Delete SimpleType: SubMatrix(61)", "Delete SimpleName: value(62)", "Delete SimpleName: getValue(63)", "Delete SimpleName: COLUMN(64)", "Delete SimpleName: Bytes(65)", "Delete SimpleName: toBytes(66)", "Delete StringLiteral: \"a\"(67)", "Delete MethodInvocation(68)", "Delete MethodInvocation(69)", "Delete ClassInstanceCreation(70)", "Delete VariableDeclarationFragment(71)", "Delete VariableDeclarationStatement(72)", "Delete SimpleName: SubMatrix(73)", "Delete SimpleType: SubMatrix(74)", "Delete SimpleName: b(75)", "Delete SimpleName: SubMatrix(76)", "Delete SimpleType: SubMatrix(77)", "Delete SimpleName: value(78)", "Delete SimpleName: getValue(79)", "Delete SimpleName: COLUMN(80)", "Delete SimpleName: Bytes(81)", "Delete SimpleName: toBytes(82)", "Delete StringLiteral: \"b\"(83)", "Delete MethodInvocation(84)", "Delete MethodInvocation(85)", "Delete ClassInstanceCreation(86)", "Delete VariableDeclarationFragment(87)", "Delete VariableDeclarationStatement(88)", "Delete SimpleName: SubMatrix(89)", "Delete SimpleType: SubMatrix(90)", "Delete SimpleName: c(91)", "Delete SimpleName: a(92)", "Delete SimpleName: mult(93)", "Delete SimpleName: b(94)", "Delete MethodInvocation(95)", "Delete VariableDeclarationFragment(96)", "Delete VariableDeclarationStatement(97)", "Delete SimpleName: context(98)", "Delete SimpleName: write(99)", "Delete SimpleName: BlockID(100)", "Delete SimpleType: BlockID(101)", "Delete SimpleName: key(102)", "Delete SimpleName: get(103)", "Delete MethodInvocation(104)", "Delete ClassInstanceCreation(105)", "Delete SimpleName: BytesWritable(106)", "Delete SimpleType: BytesWritable(107)", "Delete SimpleName: c(108)", "Delete SimpleName: getBytes(109)", "Delete MethodInvocation(110)", "Delete ClassInstanceCreation(111)", "Delete MethodInvocation(112)", "Delete ExpressionStatement(113)", "Delete Block(114)", "Delete MethodDeclaration(115)", "Delete TypeDeclaration: class(116)"]}}, {"BlockMultReduce_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.BytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SubMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL SimpleName: s", "DEL SimpleName: getRow", "DEL SimpleName: BytesWritable", "DEL SimpleName: getRowIndex", "DEL InfixExpression: <", "DEL SimpleName: s", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: BytesUtil", "DEL SimpleType: BlockID", "DEL ParameterizedType: Iterable<BytesWritable>", "DEL SimpleName: key", "DEL NumberLiteral: 0", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: startRow", "DEL SimpleName: j", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL SimpleName: BlockID", "DEL InfixExpression: *", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getRows", "DEL SimpleName: value", "DEL SimpleType: BytesWritable", "DEL IfStatement", "DEL SimpleName: j", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL SimpleType: Put", "DEL SimpleName: reduce", "DEL SimpleName: i", "DEL VariableDeclarationExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: InterruptedException", "DEL SimpleName: Bytes", "DEL SimpleName: context", "DEL SimpleName: b", "DEL SimpleName: getRow", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: s", "DEL NullLiteral", "DEL SimpleName: j", "DEL MethodDeclaration", "DEL SimpleName: b", "DEL SimpleName: s", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: write", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: valueOf", "DEL SimpleName: SubMatrix", "DEL SimpleName: key", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleType: SubMatrix", "DEL SimpleName: toBytes", "DEL Block", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: getColumns", "DEL SimpleType: Iterable", "DEL SimpleName: j", "DEL SimpleName: s", "DEL VariableDeclarationFragment", "DEL Block", "DEL Assignment: =", "DEL SimpleName: j", "DEL SimpleName: put", "DEL SimpleName: i", "DEL SimpleName: b", "DEL SimpleName: BlockID", "DEL EnhancedForStatement", "DEL SimpleType: BytesWritable", "DEL ForStatement", "DEL SimpleType: TableReducer", "DEL SimpleType: BytesWritable", "DEL SimpleName: values", "DEL PrimitiveType: int", "DEL ForStatement", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL MethodInvocation", "DEL SimpleName: BlockMultReduce", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: BytesWritable", "DEL SimpleName: getBytes", "DEL MethodInvocation", "DEL SimpleName: TableReducer", "DEL VariableDeclarationStatement", "DEL SimpleName: BytesWritable", "DEL SimpleName: IOException", "DEL SimpleName: Override", "DEL SimpleType: SubMatrix", "DEL VariableDeclarationStatement", "DEL SimpleName: SubMatrix", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL PostfixExpression: ++", "DEL InfixExpression: +", "DEL SimpleName: Iterable", "DEL InfixExpression: *", "DEL SimpleName: Context", "DEL SimpleName: getRows", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL InfixExpression: <", "DEL SimpleName: s", "DEL MarkerAnnotation", "DEL SimpleName: key", "DEL SimpleType: BlockID", "DEL SimpleType: SubMatrix", "DEL NumberLiteral: 0", "DEL SimpleType: Put", "DEL SimpleName: Bytes", "DEL SimpleName: s", "DEL SimpleType: Writable", "DEL VariableDeclarationFragment", "DEL SimpleName: s", "DEL MethodInvocation", "DEL SimpleName: startColumn", "DEL Assignment: =", "DEL SimpleName: BytesUtil", "DEL SimpleName: getRowIndex", "DEL SimpleName: context", "DEL VariableDeclarationFragment", "DEL SimpleName: add", "DEL SimpleName: i", "DEL SimpleName: Writable", "DEL NullLiteral", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL SimpleName: startRow", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Put", "DEL SimpleName: SubMatrix", "DEL Block", "DEL SimpleName: i", "DEL InfixExpression: ==", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleName: getColumn", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL TypeDeclaration: class", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: s", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: startColumn", "DEL SimpleName: values", "DEL SimpleType: Context", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL Modifier: public", "DEL ParameterizedType: TableReducer<BlockID,BytesWritable,Writable>"]}]}}, {"BlockMultReduce_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.io.BytesWritable(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.io.Writable(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hama.Constants(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hama.matrix.SubMatrix(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(20)", "Delete ImportDeclaration(21)", "Delete Modifier: public(22)", "Delete SimpleName: BlockMultReduce(23)", "Delete SimpleName: TableReducer(24)", "Delete SimpleType: TableReducer(25)", "Delete SimpleName: BlockID(26)", "Delete SimpleType: BlockID(27)", "Delete SimpleName: BytesWritable(28)", "Delete SimpleType: BytesWritable(29)", "Delete SimpleName: Writable(30)", "Delete SimpleType: Writable(31)", "Delete ParameterizedType: TableReducer<BlockID,BytesWritable,Writable>(32)", "Delete SimpleName: Override(33)", "Delete MarkerAnnotation(34)", "Delete Modifier: public(35)", "Delete PrimitiveType: void(36)", "Delete SimpleName: reduce(37)", "Delete SimpleName: BlockID(38)", "Delete SimpleType: BlockID(39)", "Delete SimpleName: key(40)", "Delete SingleVariableDeclaration(41)", "Delete SimpleName: Iterable(42)", "Delete SimpleType: Iterable(43)", "Delete SimpleName: BytesWritable(44)", "Delete SimpleType: BytesWritable(45)", "Delete ParameterizedType: Iterable<BytesWritable>(46)", "Delete SimpleName: values(47)", "Delete SingleVariableDeclaration(48)", "Delete SimpleName: Context(49)", "Delete SimpleType: Context(50)", "Delete SimpleName: context(51)", "Delete SingleVariableDeclaration(52)", "Delete SimpleName: IOException(53)", "Delete SimpleType: IOException(54)", "Delete SimpleName: InterruptedException(55)", "Delete SimpleType: InterruptedException(56)", "Delete SimpleName: SubMatrix(57)", "Delete SimpleType: SubMatrix(58)", "Delete SimpleName: s(59)", "Delete NullLiteral(60)", "Delete VariableDeclarationFragment(61)", "Delete VariableDeclarationStatement(62)", "Delete SimpleName: BytesWritable(63)", "Delete SimpleType: BytesWritable(64)", "Delete SimpleName: value(65)", "Delete SingleVariableDeclaration(66)", "Delete SimpleName: values(67)", "Delete SimpleName: SubMatrix(68)", "Delete SimpleType: SubMatrix(69)", "Delete SimpleName: b(70)", "Delete SimpleName: SubMatrix(71)", "Delete SimpleType: SubMatrix(72)", "Delete SimpleName: value(73)", "Delete SimpleName: getBytes(74)", "Delete MethodInvocation(75)", "Delete ClassInstanceCreation(76)", "Delete VariableDeclarationFragment(77)", "Delete VariableDeclarationStatement(78)", "Delete SimpleName: s(79)", "Delete NullLiteral(80)", "Delete InfixExpression: ==(81)", "Delete SimpleName: s(82)", "Delete SimpleName: b(83)", "Delete Assignment: =(84)", "Delete ExpressionStatement(85)", "Delete Block(86)", "Delete SimpleName: s(87)", "Delete SimpleName: s(88)", "Delete SimpleName: add(89)", "Delete SimpleName: b(90)", "Delete MethodInvocation(91)", "Delete Assignment: =(92)", "Delete ExpressionStatement(93)", "Delete Block(94)", "Delete IfStatement(95)", "Delete Block(96)", "Delete EnhancedForStatement(97)", "Delete PrimitiveType: int(98)", "Delete SimpleName: startRow(99)", "Delete SimpleName: key(100)", "Delete SimpleName: getRow(101)", "Delete MethodInvocation(102)", "Delete SimpleName: s(103)", "Delete SimpleName: getRows(104)", "Delete MethodInvocation(105)", "Delete InfixExpression: *(106)", "Delete VariableDeclarationFragment(107)", "Delete VariableDeclarationStatement(108)", "Delete PrimitiveType: int(109)", "Delete SimpleName: startColumn(110)", "Delete SimpleName: key(111)", "Delete SimpleName: getColumn(112)", "Delete MethodInvocation(113)", "Delete SimpleName: s(114)", "Delete SimpleName: getColumns(115)", "Delete MethodInvocation(116)", "Delete InfixExpression: *(117)", "Delete VariableDeclarationFragment(118)", "Delete VariableDeclarationStatement(119)", "Delete PrimitiveType: int(120)", "Delete SimpleName: i(121)", "Delete NumberLiteral: 0(122)", "Delete VariableDeclarationFragment(123)", "Delete VariableDeclarationExpression(124)", "Delete SimpleName: i(125)", "Delete SimpleName: s(126)", "Delete SimpleName: getRows(127)", "Delete MethodInvocation(128)", "Delete InfixExpression: <(129)", "Delete SimpleName: i(130)", "Delete PostfixExpression: ++(131)", "Delete SimpleName: Put(132)", "Delete SimpleType: Put(133)", "Delete SimpleName: put(134)", "Delete SimpleName: Put(135)", "Delete SimpleType: Put(136)", "Delete SimpleName: BytesUtil(137)", "Delete SimpleName: getRowIndex(138)", "Delete SimpleName: i(139)", "Delete SimpleName: startRow(140)", "Delete InfixExpression: +(141)", "Delete MethodInvocation(142)", "Delete ClassInstanceCreation(143)", "Delete VariableDeclarationFragment(144)", "Delete VariableDeclarationStatement(145)", "Delete PrimitiveType: int(146)", "Delete SimpleName: j(147)", "Delete NumberLiteral: 0(148)", "Delete VariableDeclarationFragment(149)", "Delete VariableDeclarationExpression(150)", "Delete SimpleName: j(151)", "Delete SimpleName: s(152)", "Delete SimpleName: getColumns(153)", "Delete MethodInvocation(154)", "Delete InfixExpression: <(155)", "Delete SimpleName: j(156)", "Delete PostfixExpression: ++(157)", "Delete SimpleName: put(158)", "Delete SimpleName: add(159)", "Delete QualifiedName: Constants.COLUMNFAMILY(160)", "Delete SimpleName: Bytes(161)", "Delete SimpleName: toBytes(162)", "Delete SimpleName: String(163)", "Delete SimpleName: valueOf(164)", "Delete SimpleName: j(165)", "Delete SimpleName: startColumn(166)", "Delete InfixExpression: +(167)", "Delete MethodInvocation(168)", "Delete MethodInvocation(169)", "Delete SimpleName: Bytes(170)", "Delete SimpleName: toBytes(171)", "Delete SimpleName: s(172)", "Delete SimpleName: get(173)", "Delete SimpleName: i(174)", "Delete SimpleName: j(175)", "Delete MethodInvocation(176)", "Delete MethodInvocation(177)", "Delete MethodInvocation(178)", "Delete ExpressionStatement(179)", "Delete Block(180)", "Delete ForStatement(181)", "Delete SimpleName: context(182)", "Delete SimpleName: write(183)", "Delete SimpleName: ImmutableBytesWritable(184)", "Delete SimpleType: ImmutableBytesWritable(185)", "Delete SimpleName: BytesUtil(186)", "Delete SimpleName: getRowIndex(187)", "Delete SimpleName: key(188)", "Delete SimpleName: getRow(189)", "Delete MethodInvocation(190)", "Delete MethodInvocation(191)", "Delete ClassInstanceCreation(192)", "Delete SimpleName: put(193)", "Delete MethodInvocation(194)", "Delete ExpressionStatement(195)", "Delete Block(196)", "Delete ForStatement(197)", "Delete Block(198)", "Delete MethodDeclaration(199)", "Delete TypeDeclaration: class(200)"]}}, {"CollectBlocksMapper_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configurable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseVector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: Configuration", "DEL SimpleName: DenseVector", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: value", "DEL InfixExpression: /", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL StringLiteral: \"hama.blocking.columns\"", "DEL Modifier: public", "DEL StringLiteral: \"hama.blocking.size\"", "DEL SimpleName: InterruptedException", "DEL SimpleName: ROWS", "DEL PrimitiveType: void", "DEL SimpleType: Configuration", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL NullLiteral", "DEL Modifier: static", "DEL SimpleName: startColumn", "DEL Modifier: final", "DEL SimpleName: ImmutableBytesWritable", "DEL InfixExpression: -", "DEL SimpleName: subVector", "DEL SimpleName: mBlockColSize", "DEL SimpleName: value", "DEL SimpleName: mColumns", "DEL StringLiteral: \"\"", "DEL Assignment: =", "DEL SimpleName: mColumns", "DEL SimpleName: mBlockColSize", "DEL SimpleName: COLUMNS", "DEL InfixExpression: *", "DEL VariableDeclarationFragment", "DEL SimpleType: Result", "DEL SimpleType: BlockID", "DEL SimpleName: BLOCK_SIZE", "DEL SimpleName: BytesUtil", "DEL SimpleName: DenseVector", "DEL MethodInvocation", "DEL SimpleName: String", "DEL InfixExpression: >=", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL SimpleName: conf", "DEL SimpleType: MapWritable", "DEL SimpleName: get", "DEL SimpleName: BlockID", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: write", "DEL Modifier: public", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: map", "DEL SimpleName: endColumn", "DEL Modifier: static", "DEL Block", "DEL SimpleName: mColumns", "DEL MarkerAnnotation", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: Configuration", "DEL SimpleName: String", "DEL SimpleName: mBlockRowSize", "DEL Block", "DEL Assignment: =", "DEL InfixExpression: /", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: mColumns", "DEL ThisExpression", "DEL SimpleType: DenseVector", "DEL SimpleType: DenseVector", "DEL SimpleName: get", "DEL Modifier: public", "DEL SimpleName: mRows", "DEL InfixExpression: -", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: mBlockRowSize", "DEL SimpleName: get", "DEL Assignment: =", "DEL SimpleName: parseInt", "DEL FieldDeclaration", "DEL SimpleName: ROWS", "DEL SingleVariableDeclaration", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: parseInt", "DEL SimpleName: Configurable", "DEL MethodInvocation", "DEL SimpleName: dv", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Block", "DEL Modifier: final", "DEL StringLiteral: \"a.or.b\"", "DEL SimpleType: Configuration", "DEL SimpleName: MATRIX_POS", "DEL IfStatement", "DEL Javadoc", "DEL Assignment: =", "DEL Modifier: private", "DEL NumberLiteral: 0", "DEL StringLiteral: \"hama.blocking.rows\"", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: Context", "DEL VariableDeclarationFragment", "DEL MarkerAnnotation", "DEL FieldAccess", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL SimpleType: Configurable", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleName: getEntries", "DEL MethodDeclaration", "DEL SimpleName: Result", "DEL SimpleName: endColumn", "DEL Modifier: final", "DEL Modifier: private", "DEL ExpressionStatement", "DEL InfixExpression: <", "DEL SimpleName: conf", "DEL SimpleName: getRowIndex", "DEL SimpleName: endColumn", "DEL SimpleName: mBlockNum", "DEL ExpressionStatement", "DEL SimpleName: startColumn", "DEL SimpleName: key", "DEL Assignment: =", "DEL SimpleType: String", "DEL InfixExpression: /", "DEL FieldDeclaration", "DEL SimpleName: Override", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL SimpleName: get", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL SimpleName: getConf", "DEL SimpleName: Integer", "DEL SimpleName: String", "DEL SimpleType: BlockID", "DEL SimpleName: key", "DEL SimpleName: i", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL DoStatement", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL SimpleName: BytesUtil", "DEL SimpleName: conf", "DEL PrimitiveType: void", "DEL SimpleName: mBlockNum", "DEL SimpleName: mBlockNum", "DEL ParameterizedType: TableMapper<BlockID,MapWritable>", "DEL SimpleName: Configuration", "DEL SimpleName: setConf", "DEL FieldDeclaration", "DEL SimpleName: mColumns", "DEL SimpleName: context", "DEL SimpleName: TableMapper", "DEL MethodDeclaration", "DEL SimpleType: Context", "DEL VariableDeclarationFragment", "DEL SimpleName: context", "DEL SimpleName: endColumn", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: blkRow", "DEL SimpleName: mBlockColSize", "DEL SimpleName: mColumns", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: endColumn", "DEL SimpleType: String", "DEL SimpleName: mBlockNum", "DEL ExpressionStatement", "DEL StringLiteral: \"\"", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: parseInt", "DEL SimpleName: mBlockRowSize", "DEL InfixExpression: -", "DEL SimpleName: mRows", "DEL SimpleType: String", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL TextElement: Parameter of the path of the matrix to be blocked * ", "DEL Modifier: public", "DEL SimpleName: BlockID", "DEL PostfixExpression: ++", "DEL SimpleType: Configuration", "DEL FieldDeclaration", "DEL SimpleName: endColumn", "DEL SimpleName: COLUMNS", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SimpleName: dv", "DEL NumberLiteral: 1", "DEL SimpleName: blkRow", "DEL FieldDeclaration", "DEL TypeDeclaration: class", "DEL SimpleType: InterruptedException", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: startColumn", "DEL SimpleName: BLOCK_SIZE", "DEL SimpleName: conf", "DEL Modifier: private", "DEL SimpleName: mBlockColSize", "DEL Modifier: public", "DEL Modifier: private", "DEL SimpleName: conf", "DEL SimpleName: key", "DEL SimpleName: MapWritable", "DEL SimpleName: i", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: conf", "DEL StringLiteral: \"\"", "DEL SimpleType: TableMapper", "DEL SimpleName: CollectBlocksMapper", "DEL SimpleName: startColumn", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: mRows"]}]}}, {"CollectBlocksMapper_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(18)", "Delete ImportDeclaration(19)", "Delete Modifier: public(20)", "Delete SimpleName: CollectBlocksMapper(21)", "Delete SimpleName: TableMapper(22)", "Delete SimpleType: TableMapper(23)", "Delete SimpleName: BlockID(24)", "Delete SimpleType: BlockID(25)", "Delete SimpleName: MapWritable(26)", "Delete SimpleType: MapWritable(27)", "Delete ParameterizedType: TableMapper<BlockID,MapWritable>(28)", "Delete SimpleName: Configurable(29)", "Delete SimpleType: Configurable(30)", "Delete Modifier: private(31)", "Delete SimpleName: Configuration(32)", "Delete SimpleType: Configuration(33)", "Delete SimpleName: conf(34)", "Delete NullLiteral(35)", "Delete VariableDeclarationFragment(36)", "Delete FieldDeclaration(37)", "Delete TextElement: Parameter of the path of the matrix to be blocked * (38)", "Delete TagElement(39)", "Delete Javadoc(40)", "Delete Modifier: public(41)", "Delete Modifier: static(42)", "Delete Modifier: final(43)", "Delete SimpleName: String(44)", "Delete SimpleType: String(45)", "Delete SimpleName: BLOCK_SIZE(46)", "Delete StringLiteral: \"hama.blocking.size\"(47)", "Delete VariableDeclarationFragment(48)", "Delete FieldDeclaration(49)", "Delete Modifier: public(50)", "Delete Modifier: static(51)", "Delete Modifier: final(52)", "Delete SimpleName: String(53)", "Delete SimpleType: String(54)", "Delete SimpleName: ROWS(55)", "Delete StringLiteral: \"hama.blocking.rows\"(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete Modifier: public(59)", "Delete Modifier: static(60)", "Delete Modifier: final(61)", "Delete SimpleName: String(62)", "Delete SimpleType: String(63)", "Delete SimpleName: COLUMNS(64)", "Delete StringLiteral: \"hama.blocking.columns\"(65)", "Delete VariableDeclarationFragment(66)", "Delete FieldDeclaration(67)", "Delete Modifier: public(68)", "Delete Modifier: static(69)", "Delete Modifier: final(70)", "Delete SimpleName: String(71)", "Delete SimpleType: String(72)", "Delete SimpleName: MATRIX_POS(73)", "Delete StringLiteral: \"a.or.b\"(74)", "Delete VariableDeclarationFragment(75)", "Delete FieldDeclaration(76)", "Delete Modifier: private(77)", "Delete PrimitiveType: int(78)", "Delete SimpleName: mBlockNum(79)", "Delete VariableDeclarationFragment(80)", "Delete FieldDeclaration(81)", "Delete Modifier: private(82)", "Delete PrimitiveType: int(83)", "Delete SimpleName: mBlockRowSize(84)", "Delete VariableDeclarationFragment(85)", "Delete FieldDeclaration(86)", "Delete Modifier: private(87)", "Delete PrimitiveType: int(88)", "Delete SimpleName: mBlockColSize(89)", "Delete VariableDeclarationFragment(90)", "Delete FieldDeclaration(91)", "Delete Modifier: private(92)", "Delete PrimitiveType: int(93)", "Delete SimpleName: mRows(94)", "Delete VariableDeclarationFragment(95)", "Delete FieldDeclaration(96)", "Delete Modifier: private(97)", "Delete PrimitiveType: int(98)", "Delete SimpleName: mColumns(99)", "Delete VariableDeclarationFragment(100)", "Delete FieldDeclaration(101)", "Delete Modifier: public(102)", "Delete PrimitiveType: void(103)", "Delete SimpleName: map(104)", "Delete SimpleName: ImmutableBytesWritable(105)", "Delete SimpleType: ImmutableBytesWritable(106)", "Delete SimpleName: key(107)", "Delete SingleVariableDeclaration(108)", "Delete SimpleName: Result(109)", "Delete SimpleType: Result(110)", "Delete SimpleName: value(111)", "Delete SingleVariableDeclaration(112)", "Delete SimpleName: Context(113)", "Delete SimpleType: Context(114)", "Delete SimpleName: context(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: IOException(117)", "Delete SimpleType: IOException(118)", "Delete SimpleName: InterruptedException(119)", "Delete SimpleType: InterruptedException(120)", "Delete PrimitiveType: int(121)", "Delete SimpleName: startColumn(122)", "Delete VariableDeclarationFragment(123)", "Delete SimpleName: endColumn(124)", "Delete VariableDeclarationFragment(125)", "Delete SimpleName: blkRow(126)", "Delete SimpleName: BytesUtil(127)", "Delete SimpleName: getRowIndex(128)", "Delete SimpleName: key(129)", "Delete SimpleName: get(130)", "Delete MethodInvocation(131)", "Delete MethodInvocation(132)", "Delete SimpleName: mBlockRowSize(133)", "Delete InfixExpression: /(134)", "Delete VariableDeclarationFragment(135)", "Delete SimpleName: i(136)", "Delete NumberLiteral: 0(137)", "Delete VariableDeclarationFragment(138)", "Delete VariableDeclarationStatement(139)", "Delete SimpleName: DenseVector(140)", "Delete SimpleType: DenseVector(141)", "Delete SimpleName: dv(142)", "Delete SimpleName: DenseVector(143)", "Delete SimpleType: DenseVector(144)", "Delete SimpleName: BytesUtil(145)", "Delete SimpleName: getRowIndex(146)", "Delete SimpleName: key(147)", "Delete SimpleName: get(148)", "Delete MethodInvocation(149)", "Delete MethodInvocation(150)", "Delete SimpleName: value(151)", "Delete ClassInstanceCreation(152)", "Delete VariableDeclarationFragment(153)", "Delete VariableDeclarationStatement(154)", "Delete SimpleName: startColumn(155)", "Delete SimpleName: i(156)", "Delete SimpleName: mBlockColSize(157)", "Delete InfixExpression: *(158)", "Delete Assignment: =(159)", "Delete ExpressionStatement(160)", "Delete SimpleName: endColumn(161)", "Delete SimpleName: startColumn(162)", "Delete SimpleName: mBlockColSize(163)", "Delete InfixExpression: +(164)", "Delete NumberLiteral: 1(165)", "Delete InfixExpression: -(166)", "Delete Assignment: =(167)", "Delete ExpressionStatement(168)", "Delete SimpleName: endColumn(169)", "Delete SimpleName: mColumns(170)", "Delete InfixExpression: >=(171)", "Delete SimpleName: endColumn(172)", "Delete SimpleName: mColumns(173)", "Delete NumberLiteral: 1(174)", "Delete InfixExpression: -(175)", "Delete Assignment: =(176)", "Delete ExpressionStatement(177)", "Delete IfStatement(178)", "Delete SimpleName: context(179)", "Delete SimpleName: write(180)", "Delete SimpleName: BlockID(181)", "Delete SimpleType: BlockID(182)", "Delete SimpleName: blkRow(183)", "Delete SimpleName: i(184)", "Delete ClassInstanceCreation(185)", "Delete SimpleName: dv(186)", "Delete SimpleName: subVector(187)", "Delete SimpleName: startColumn(188)", "Delete SimpleName: endColumn(189)", "Delete MethodInvocation(190)", "Delete SimpleName: getEntries(191)", "Delete MethodInvocation(192)", "Delete MethodInvocation(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: i(195)", "Delete PostfixExpression: ++(196)", "Delete ExpressionStatement(197)", "Delete Block(198)", "Delete SimpleName: endColumn(199)", "Delete SimpleName: mColumns(200)", "Delete NumberLiteral: 1(201)", "Delete InfixExpression: -(202)", "Delete ParenthesizedExpression(203)", "Delete InfixExpression: <(204)", "Delete DoStatement(205)", "Delete Block(206)", "Delete MethodDeclaration(207)", "Delete SimpleName: Override(208)", "Delete MarkerAnnotation(209)", "Delete Modifier: public(210)", "Delete SimpleName: Configuration(211)", "Delete SimpleType: Configuration(212)", "Delete SimpleName: getConf(213)", "Delete SimpleName: conf(214)", "Delete ReturnStatement(215)", "Delete Block(216)", "Delete MethodDeclaration(217)", "Delete SimpleName: Override(218)", "Delete MarkerAnnotation(219)", "Delete Modifier: public(220)", "Delete PrimitiveType: void(221)", "Delete SimpleName: setConf(222)", "Delete SimpleName: Configuration(223)", "Delete SimpleType: Configuration(224)", "Delete SimpleName: conf(225)", "Delete SingleVariableDeclaration(226)", "Delete ThisExpression(227)", "Delete SimpleName: conf(228)", "Delete FieldAccess(229)", "Delete SimpleName: conf(230)", "Delete Assignment: =(231)", "Delete ExpressionStatement(232)", "Delete SimpleName: mBlockNum(233)", "Delete SimpleName: Integer(234)", "Delete SimpleName: parseInt(235)", "Delete SimpleName: conf(236)", "Delete SimpleName: get(237)", "Delete SimpleName: BLOCK_SIZE(238)", "Delete StringLiteral: \"\"(239)", "Delete MethodInvocation(240)", "Delete MethodInvocation(241)", "Delete Assignment: =(242)", "Delete ExpressionStatement(243)", "Delete SimpleName: mRows(244)", "Delete SimpleName: Integer(245)", "Delete SimpleName: parseInt(246)", "Delete SimpleName: conf(247)", "Delete SimpleName: get(248)", "Delete SimpleName: ROWS(249)", "Delete StringLiteral: \"\"(250)", "Delete MethodInvocation(251)", "Delete MethodInvocation(252)", "Delete Assignment: =(253)", "Delete ExpressionStatement(254)", "Delete SimpleName: mColumns(255)", "Delete SimpleName: Integer(256)", "Delete SimpleName: parseInt(257)", "Delete SimpleName: conf(258)", "Delete SimpleName: get(259)", "Delete SimpleName: COLUMNS(260)", "Delete StringLiteral: \"\"(261)", "Delete MethodInvocation(262)", "Delete MethodInvocation(263)", "Delete Assignment: =(264)", "Delete ExpressionStatement(265)", "Delete SimpleName: mBlockRowSize(266)", "Delete SimpleName: mRows(267)", "Delete SimpleName: mBlockNum(268)", "Delete InfixExpression: /(269)", "Delete Assignment: =(270)", "Delete ExpressionStatement(271)", "Delete SimpleName: mBlockColSize(272)", "Delete SimpleName: mColumns(273)", "Delete SimpleName: mBlockNum(274)", "Delete InfixExpression: /(275)", "Delete Assignment: =(276)", "Delete ExpressionStatement(277)", "Delete Block(278)", "Delete MethodDeclaration(279)", "Delete TypeDeclaration: class(280)"]}}, {"CollectBlocksReducer_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configurable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.MapWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseVector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SubMatrix", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ExpressionStatement", "DEL ParenthesizedExpression", "DEL InfixExpression: +", "DEL SimpleName: i", "DEL SimpleName: getRow", "DEL NumberLiteral: 0", "DEL EnhancedForStatement", "DEL ClassInstanceCreation", "DEL SimpleName: mBlockColSize", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL VariableDeclarationFragment", "DEL SimpleName: Configuration", "DEL SimpleName: Integer", "DEL SimpleName: Bytes", "DEL SimpleName: conf", "DEL SimpleName: size", "DEL SimpleName: mRows", "DEL Block", "DEL SimpleName: i", "DEL QualifiedName: CollectBlocksMapper.ROWS", "DEL SimpleName: mColumns", "DEL SimpleName: Configuration", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL SimpleType: Configuration", "DEL SimpleType: Configuration", "DEL SimpleType: InterruptedException", "DEL InfixExpression: >=", "DEL SimpleType: Put", "DEL SimpleName: mRows", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: x", "DEL SimpleName: mBlockColSize", "DEL SimpleName: mBlockNum", "DEL ParenthesizedExpression", "DEL InfixExpression: <", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SimpleName: Override", "DEL ParameterizedType: Iterable<MapWritable>", "DEL InfixExpression: <", "DEL SimpleName: context", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: DenseVector", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleName: getColumn", "DEL ParenthesizedExpression", "DEL PostfixExpression: ++", "DEL SimpleName: values", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL SimpleName: mBlockNum", "DEL FieldAccess", "DEL PrimitiveType: int", "DEL SimpleType: Writable", "DEL SimpleName: seq", "DEL InfixExpression: -", "DEL PrimitiveType: int", "DEL SimpleType: BlockID", "DEL SimpleName: getRow", "DEL SingleVariableDeclaration", "DEL PrimitiveType: void", "DEL ParenthesizedExpression", "DEL InfixExpression: *", "DEL InfixExpression: ||", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL SimpleName: Iterable", "DEL SimpleName: Configurable", "DEL ClassInstanceCreation", "DEL InfixExpression: *", "DEL SimpleName: Put", "DEL InfixExpression: /", "DEL QualifiedName: CollectBlocksMapper.COLUMNS", "DEL VariableDeclarationFragment", "DEL SimpleName: mRows", "DEL SimpleName: CollectBlocksReducer", "DEL MarkerAnnotation", "DEL SimpleName: mBlockColSize", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL SimpleName: mBlockNum", "DEL SimpleName: colBase", "DEL SimpleName: j", "DEL InfixExpression: /", "DEL Modifier: public", "DEL SimpleName: mBlockColSize", "DEL InfixExpression: <", "DEL Modifier: private", "DEL SimpleName: BlockID", "DEL InfixExpression: -", "DEL SimpleName: DenseVector", "DEL SimpleName: matrixPos", "DEL SimpleName: add", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: key", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL SimpleName: mBlockRowSize", "DEL InfixExpression: +", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleType: Iterable", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: seq", "DEL SimpleName: key", "DEL PostfixExpression: ++", "DEL SimpleName: Integer", "DEL SimpleName: j", "DEL SimpleType: Put", "DEL SimpleType: TableReducer", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SimpleName: getBytes", "DEL Assignment: =", "DEL SimpleName: getRow", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL InfixExpression: *", "DEL SimpleName: x", "DEL SimpleType: SubMatrix", "DEL SimpleName: mColumns", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: mBlockNum", "DEL SimpleType: MapWritable", "DEL SimpleType: IOException", "DEL SimpleName: toBytes", "DEL SimpleName: key", "DEL SimpleName: SubMatrix", "DEL InfixExpression: -", "DEL SimpleName: x", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: rowBase", "DEL Modifier: private", "DEL SimpleName: smRows", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: x", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL SimpleName: vw", "DEL QualifiedName: CollectBlocksMapper.MATRIX_POS", "DEL SimpleName: bkID", "DEL SimpleName: Put", "DEL Assignment: =", "DEL IfStatement", "DEL SimpleName: getBytes", "DEL SimpleName: colBase", "DEL StringLiteral: \"Block Row Size dismatched.\"", "DEL SimpleName: seq", "DEL SimpleName: rowBase", "DEL SimpleName: matrixPos", "DEL SimpleName: smRows", "DEL FieldDeclaration", "DEL SimpleName: mColumns", "DEL SimpleType: Context", "DEL InfixExpression: -", "DEL QualifiedName: Constants.BLOCK", "DEL SimpleName: matrixPos", "DEL VariableDeclarationFragment", "DEL SimpleName: add", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: Writable", "DEL SimpleName: MapWritable", "DEL SimpleName: mBlockNum", "DEL BooleanLiteral: true", "DEL SimpleName: seq", "DEL StringLiteral: \"\"", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: mBlockRowSize", "DEL SimpleName: subMatrix", "DEL SimpleType: Configurable", "DEL SimpleType: MapWritable", "DEL SimpleType: BlockID", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: mBlockNum", "DEL SimpleName: value", "DEL InfixExpression: >=", "DEL MethodDeclaration", "DEL SimpleType: BlockID", "DEL ExpressionStatement", "DEL SimpleName: parseInt", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: BlockID", "DEL SimpleName: getColumn", "DEL FieldDeclaration", "DEL SimpleName: Bytes", "DEL SimpleName: conf", "DEL Assignment: =", "DEL SimpleName: vw", "DEL SimpleName: getBoolean", "DEL SimpleName: put", "DEL Block", "DEL SimpleName: put", "DEL SimpleName: conf", "DEL QualifiedName: Constants.BLOCK", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleName: getRow", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Block Column Size dismatched.\"", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: mBlockRowSize", "DEL NumberLiteral: 0", "DEL SimpleName: Put", "DEL SimpleName: vw", "DEL SimpleName: parseInt", "DEL PostfixExpression: ++", "DEL SimpleName: x", "DEL SimpleName: mBlockNum", "DEL StringLiteral: \"\"", "DEL NullLiteral", "DEL SimpleName: j", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: mBlockNum", "DEL SimpleName: smCols", "DEL VariableDeclarationStatement", "DEL SimpleName: smCols", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL InfixExpression: >=", "DEL MethodInvocation", "DEL SimpleName: x", "DEL PrimitiveType: int", "DEL IfStatement", "DEL SimpleName: conf", "DEL SimpleName: smRows", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleType: DenseVector", "DEL ExpressionStatement", "DEL SimpleName: BlockID", "DEL ForStatement", "DEL SimpleName: vw", "DEL MethodInvocation", "DEL SimpleName: smRows", "DEL StringLiteral: \"a\"", "DEL MethodInvocation", "DEL SimpleName: mBlockRowSize", "DEL SimpleName: conf", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: mBlockNum", "DEL SimpleName: conf", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL SimpleName: put", "DEL VariableDeclarationStatement", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: j", "DEL SimpleName: context", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: BlockID", "DEL SimpleName: colBase", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: rowBase", "DEL ParenthesizedExpression", "DEL SimpleName: mBlockNum", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL SimpleName: mRows", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: put", "DEL SimpleName: BlockID", "DEL ParenthesizedExpression", "DEL SimpleName: bkID", "DEL SimpleName: context", "DEL SimpleType: MapWritable", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: smCols", "DEL SimpleName: write", "DEL SimpleName: subMatrix", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleType: BlockID", "DEL SimpleName: get", "DEL SimpleType: Put", "DEL ThrowStatement", "DEL SimpleName: j", "DEL ClassInstanceCreation", "DEL SimpleType: Put", "DEL SimpleName: mBlockRowSize", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: mBlockNum", "DEL SimpleName: getColumn", "DEL StringLiteral: \"\"", "DEL StringLiteral: \"b\"", "DEL SimpleName: key", "DEL SimpleName: toBytes", "DEL SimpleType: IOException", "DEL SimpleName: conf", "DEL SimpleName: toBytes", "DEL SimpleName: key", "DEL QualifiedName: CollectBlocksMapper.BLOCK_SIZE", "DEL SimpleName: smCols", "DEL SimpleName: r", "DEL SimpleName: mRows", "DEL SimpleName: mBlockColSize", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: reduce", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: Configuration", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL Modifier: private", "DEL SimpleName: set", "DEL SimpleName: TableReducer", "DEL SimpleName: bkID", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: x", "DEL SimpleName: bkID", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL SimpleName: toBytes", "DEL SimpleName: ImmutableBytesWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: put", "DEL SimpleName: Context", "DEL Block", "DEL SimpleName: parseInt", "DEL SimpleType: DenseVector", "DEL ForStatement", "DEL SimpleName: smCols", "DEL SimpleName: mColumns", "DEL MarkerAnnotation", "DEL SimpleName: conf", "DEL SimpleType: SubMatrix", "DEL SimpleName: InterruptedException", "DEL SimpleName: setConf", "DEL PrimitiveType: int", "DEL Modifier: private", "DEL SimpleName: MapWritable", "DEL FieldDeclaration", "DEL SimpleName: i", "DEL SimpleType: IOException", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: x", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: getBytes", "DEL SimpleName: r", "DEL SimpleName: values", "DEL InfixExpression: *", "DEL SimpleName: Put", "DEL InfixExpression: -", "DEL ClassInstanceCreation", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: rowBase", "DEL SimpleName: mBlockNum", "DEL SimpleName: subMatrix", "DEL SimpleName: IOException", "DEL TypeDeclaration: class", "DEL VariableDeclarationFragment", "DEL SimpleName: subMatrix", "DEL SimpleName: getRow", "DEL Assignment: =", "DEL SimpleName: x", "DEL Assignment: =", "DEL SimpleName: getConf", "DEL SimpleName: key", "DEL SimpleName: get", "DEL SimpleType: BlockID", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getBytes", "DEL SimpleName: Integer", "DEL SimpleName: write", "DEL Assignment: =", "DEL SimpleName: bkID", "DEL MethodInvocation", "DEL SimpleName: BlockID", "DEL SimpleName: mColumns", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: j", "DEL SimpleName: SubMatrix", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL Modifier: private", "DEL SimpleName: get", "DEL NumberLiteral: 1", "DEL Assignment: =", "DEL ThrowStatement", "DEL SimpleName: i", "DEL SimpleName: bkID", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL SimpleName: getColumn", "DEL Block", "DEL SimpleName: conf", "DEL SimpleName: getBytes", "DEL SimpleName: getBytes", "DEL SimpleName: put", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL SimpleType: ImmutableBytesWritable", "DEL ForStatement", "DEL SimpleName: value", "DEL SimpleType: BlockID", "DEL Assignment: =", "DEL SimpleName: colBase", "DEL Block", "DEL ParameterizedType: TableReducer<BlockID,MapWritable,Writable>", "DEL SimpleName: x", "DEL MethodInvocation"]}]}}, {"CollectBlocksReducer_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.io.Writable(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hama.Constants(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hama.matrix.SubMatrix(24)", "Delete ImportDeclaration(25)", "Delete Modifier: public(26)", "Delete SimpleName: CollectBlocksReducer(27)", "Delete SimpleName: TableReducer(28)", "Delete SimpleType: TableReducer(29)", "Delete SimpleName: BlockID(30)", "Delete SimpleType: BlockID(31)", "Delete SimpleName: MapWritable(32)", "Delete SimpleType: MapWritable(33)", "Delete SimpleName: Writable(34)", "Delete SimpleType: Writable(35)", "Delete ParameterizedType: TableReducer<BlockID,MapWritable,Writable>(36)", "Delete SimpleName: Configurable(37)", "Delete SimpleType: Configurable(38)", "Delete Modifier: private(39)", "Delete SimpleName: Configuration(40)", "Delete SimpleType: Configuration(41)", "Delete SimpleName: conf(42)", "Delete NullLiteral(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete Modifier: private(46)", "Delete PrimitiveType: int(47)", "Delete SimpleName: mBlockNum(48)", "Delete VariableDeclarationFragment(49)", "Delete FieldDeclaration(50)", "Delete Modifier: private(51)", "Delete PrimitiveType: int(52)", "Delete SimpleName: mBlockRowSize(53)", "Delete VariableDeclarationFragment(54)", "Delete FieldDeclaration(55)", "Delete Modifier: private(56)", "Delete PrimitiveType: int(57)", "Delete SimpleName: mBlockColSize(58)", "Delete VariableDeclarationFragment(59)", "Delete FieldDeclaration(60)", "Delete Modifier: private(61)", "Delete PrimitiveType: int(62)", "Delete SimpleName: mRows(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete Modifier: private(66)", "Delete PrimitiveType: int(67)", "Delete SimpleName: mColumns(68)", "Delete VariableDeclarationFragment(69)", "Delete FieldDeclaration(70)", "Delete Modifier: private(71)", "Delete PrimitiveType: boolean(72)", "Delete SimpleName: matrixPos(73)", "Delete VariableDeclarationFragment(74)", "Delete FieldDeclaration(75)", "Delete Modifier: public(76)", "Delete PrimitiveType: void(77)", "Delete SimpleName: reduce(78)", "Delete SimpleName: BlockID(79)", "Delete SimpleType: BlockID(80)", "Delete SimpleName: key(81)", "Delete SingleVariableDeclaration(82)", "Delete SimpleName: Iterable(83)", "Delete SimpleType: Iterable(84)", "Delete SimpleName: MapWritable(85)", "Delete SimpleType: MapWritable(86)", "Delete ParameterizedType: Iterable<MapWritable>(87)", "Delete SimpleName: values(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: Context(90)", "Delete SimpleType: Context(91)", "Delete SimpleName: context(92)", "Delete SingleVariableDeclaration(93)", "Delete SimpleName: IOException(94)", "Delete SimpleType: IOException(95)", "Delete SimpleName: InterruptedException(96)", "Delete SimpleType: InterruptedException(97)", "Delete PrimitiveType: int(98)", "Delete SimpleName: colBase(99)", "Delete SimpleName: key(100)", "Delete SimpleName: getColumn(101)", "Delete MethodInvocation(102)", "Delete SimpleName: mBlockColSize(103)", "Delete InfixExpression: *(104)", "Delete VariableDeclarationFragment(105)", "Delete VariableDeclarationStatement(106)", "Delete PrimitiveType: int(107)", "Delete SimpleName: rowBase(108)", "Delete SimpleName: key(109)", "Delete SimpleName: getRow(110)", "Delete MethodInvocation(111)", "Delete SimpleName: mBlockRowSize(112)", "Delete InfixExpression: *(113)", "Delete VariableDeclarationFragment(114)", "Delete VariableDeclarationStatement(115)", "Delete PrimitiveType: int(116)", "Delete SimpleName: smRows(117)", "Delete SimpleName: mBlockRowSize(118)", "Delete VariableDeclarationFragment(119)", "Delete VariableDeclarationStatement(120)", "Delete SimpleName: rowBase(121)", "Delete SimpleName: mBlockRowSize(122)", "Delete InfixExpression: +(123)", "Delete NumberLiteral: 1(124)", "Delete InfixExpression: -(125)", "Delete ParenthesizedExpression(126)", "Delete SimpleName: mRows(127)", "Delete InfixExpression: >=(128)", "Delete SimpleName: smRows(129)", "Delete SimpleName: mRows(130)", "Delete SimpleName: rowBase(131)", "Delete InfixExpression: -(132)", "Delete Assignment: =(133)", "Delete ExpressionStatement(134)", "Delete IfStatement(135)", "Delete PrimitiveType: int(136)", "Delete SimpleName: smCols(137)", "Delete SimpleName: mBlockColSize(138)", "Delete VariableDeclarationFragment(139)", "Delete VariableDeclarationStatement(140)", "Delete SimpleName: colBase(141)", "Delete SimpleName: mBlockColSize(142)", "Delete InfixExpression: +(143)", "Delete NumberLiteral: 1(144)", "Delete InfixExpression: -(145)", "Delete ParenthesizedExpression(146)", "Delete SimpleName: mColumns(147)", "Delete InfixExpression: >=(148)", "Delete SimpleName: smCols(149)", "Delete SimpleName: mColumns(150)", "Delete SimpleName: colBase(151)", "Delete InfixExpression: -(152)", "Delete Assignment: =(153)", "Delete ExpressionStatement(154)", "Delete IfStatement(155)", "Delete SimpleName: SubMatrix(156)", "Delete SimpleType: SubMatrix(157)", "Delete SimpleName: subMatrix(158)", "Delete SimpleName: SubMatrix(159)", "Delete SimpleType: SubMatrix(160)", "Delete SimpleName: smRows(161)", "Delete SimpleName: smCols(162)", "Delete ClassInstanceCreation(163)", "Delete VariableDeclarationFragment(164)", "Delete VariableDeclarationStatement(165)", "Delete PrimitiveType: int(166)", "Delete SimpleName: i(167)", "Delete NumberLiteral: 0(168)", "Delete VariableDeclarationFragment(169)", "Delete SimpleName: j(170)", "Delete NumberLiteral: 0(171)", "Delete VariableDeclarationFragment(172)", "Delete VariableDeclarationStatement(173)", "Delete SimpleName: MapWritable(174)", "Delete SimpleType: MapWritable(175)", "Delete SimpleName: value(176)", "Delete SingleVariableDeclaration(177)", "Delete SimpleName: values(178)", "Delete SimpleName: DenseVector(179)", "Delete SimpleType: DenseVector(180)", "Delete SimpleName: vw(181)", "Delete SimpleName: DenseVector(182)", "Delete SimpleType: DenseVector(183)", "Delete SimpleName: value(184)", "Delete ClassInstanceCreation(185)", "Delete VariableDeclarationFragment(186)", "Delete VariableDeclarationStatement(187)", "Delete SimpleName: vw(188)", "Delete SimpleName: size(189)", "Delete MethodInvocation(190)", "Delete SimpleName: smCols(191)", "Delete InfixExpression: !=(192)", "Delete SimpleName: IOException(193)", "Delete SimpleType: IOException(194)", "Delete StringLiteral: \"Block Column Size dismatched.\"(195)", "Delete ClassInstanceCreation(196)", "Delete ThrowStatement(197)", "Delete IfStatement(198)", "Delete SimpleName: i(199)", "Delete SimpleName: vw(200)", "Delete SimpleName: getRow(201)", "Delete MethodInvocation(202)", "Delete SimpleName: rowBase(203)", "Delete InfixExpression: -(204)", "Delete Assignment: =(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: i(207)", "Delete SimpleName: smRows(208)", "Delete InfixExpression: >=(209)", "Delete SimpleName: i(210)", "Delete NumberLiteral: 0(211)", "Delete InfixExpression: <(212)", "Delete InfixExpression: ||(213)", "Delete SimpleName: IOException(214)", "Delete SimpleType: IOException(215)", "Delete StringLiteral: \"Block Row Size dismatched.\"(216)", "Delete ClassInstanceCreation(217)", "Delete ThrowStatement(218)", "Delete IfStatement(219)", "Delete SimpleName: j(220)", "Delete NumberLiteral: 0(221)", "Delete Assignment: =(222)", "Delete SimpleName: j(223)", "Delete SimpleName: smCols(224)", "Delete InfixExpression: <(225)", "Delete SimpleName: j(226)", "Delete PostfixExpression: ++(227)", "Delete SimpleName: subMatrix(228)", "Delete SimpleName: set(229)", "Delete SimpleName: i(230)", "Delete SimpleName: j(231)", "Delete SimpleName: vw(232)", "Delete SimpleName: get(233)", "Delete SimpleName: colBase(234)", "Delete SimpleName: j(235)", "Delete InfixExpression: +(236)", "Delete MethodInvocation(237)", "Delete MethodInvocation(238)", "Delete ExpressionStatement(239)", "Delete Block(240)", "Delete ForStatement(241)", "Delete Block(242)", "Delete EnhancedForStatement(243)", "Delete SimpleName: matrixPos(244)", "Delete PrimitiveType: int(245)", "Delete SimpleName: x(246)", "Delete NumberLiteral: 0(247)", "Delete VariableDeclarationFragment(248)", "Delete VariableDeclarationExpression(249)", "Delete SimpleName: x(250)", "Delete SimpleName: mBlockNum(251)", "Delete InfixExpression: <(252)", "Delete SimpleName: x(253)", "Delete PostfixExpression: ++(254)", "Delete PrimitiveType: int(255)", "Delete SimpleName: r(256)", "Delete SimpleName: key(257)", "Delete SimpleName: getRow(258)", "Delete MethodInvocation(259)", "Delete SimpleName: mBlockNum(260)", "Delete InfixExpression: *(261)", "Delete ParenthesizedExpression(262)", "Delete SimpleName: mBlockNum(263)", "Delete InfixExpression: *(264)", "Delete VariableDeclarationFragment(265)", "Delete VariableDeclarationStatement(266)", "Delete PrimitiveType: int(267)", "Delete SimpleName: seq(268)", "Delete SimpleName: x(269)", "Delete SimpleName: mBlockNum(270)", "Delete InfixExpression: *(271)", "Delete ParenthesizedExpression(272)", "Delete SimpleName: key(273)", "Delete SimpleName: getColumn(274)", "Delete MethodInvocation(275)", "Delete SimpleName: r(276)", "Delete InfixExpression: +(277)", "Delete VariableDeclarationFragment(278)", "Delete VariableDeclarationStatement(279)", "Delete SimpleName: BlockID(280)", "Delete SimpleType: BlockID(281)", "Delete SimpleName: bkID(282)", "Delete SimpleName: BlockID(283)", "Delete SimpleType: BlockID(284)", "Delete SimpleName: key(285)", "Delete SimpleName: getRow(286)", "Delete MethodInvocation(287)", "Delete SimpleName: x(288)", "Delete SimpleName: seq(289)", "Delete ClassInstanceCreation(290)", "Delete VariableDeclarationFragment(291)", "Delete VariableDeclarationStatement(292)", "Delete SimpleName: Put(293)", "Delete SimpleType: Put(294)", "Delete SimpleName: put(295)", "Delete SimpleName: Put(296)", "Delete SimpleType: Put(297)", "Delete SimpleName: bkID(298)", "Delete SimpleName: getBytes(299)", "Delete MethodInvocation(300)", "Delete ClassInstanceCreation(301)", "Delete VariableDeclarationFragment(302)", "Delete VariableDeclarationStatement(303)", "Delete SimpleName: put(304)", "Delete SimpleName: add(305)", "Delete SimpleName: Bytes(306)", "Delete SimpleName: toBytes(307)", "Delete QualifiedName: Constants.BLOCK(308)", "Delete MethodInvocation(309)", "Delete SimpleName: Bytes(310)", "Delete SimpleName: toBytes(311)", "Delete StringLiteral: \"a\"(312)", "Delete MethodInvocation(313)", "Delete SimpleName: subMatrix(314)", "Delete SimpleName: getBytes(315)", "Delete MethodInvocation(316)", "Delete MethodInvocation(317)", "Delete ExpressionStatement(318)", "Delete SimpleName: context(319)", "Delete SimpleName: write(320)", "Delete SimpleName: ImmutableBytesWritable(321)", "Delete SimpleType: ImmutableBytesWritable(322)", "Delete SimpleName: bkID(323)", "Delete SimpleName: getBytes(324)", "Delete MethodInvocation(325)", "Delete ClassInstanceCreation(326)", "Delete SimpleName: put(327)", "Delete MethodInvocation(328)", "Delete ExpressionStatement(329)", "Delete Block(330)", "Delete ForStatement(331)", "Delete Block(332)", "Delete PrimitiveType: int(333)", "Delete SimpleName: x(334)", "Delete NumberLiteral: 0(335)", "Delete VariableDeclarationFragment(336)", "Delete VariableDeclarationExpression(337)", "Delete SimpleName: x(338)", "Delete SimpleName: mBlockNum(339)", "Delete InfixExpression: <(340)", "Delete SimpleName: x(341)", "Delete PostfixExpression: ++(342)", "Delete PrimitiveType: int(343)", "Delete SimpleName: seq(344)", "Delete SimpleName: x(345)", "Delete SimpleName: mBlockNum(346)", "Delete SimpleName: mBlockNum(347)", "Delete InfixExpression: *(348)", "Delete ParenthesizedExpression(349)", "Delete SimpleName: key(350)", "Delete SimpleName: getColumn(351)", "Delete MethodInvocation(352)", "Delete SimpleName: mBlockNum(353)", "Delete InfixExpression: *(354)", "Delete ParenthesizedExpression(355)", "Delete SimpleName: key(356)", "Delete SimpleName: getRow(357)", "Delete MethodInvocation(358)", "Delete InfixExpression: +(359)", "Delete VariableDeclarationFragment(360)", "Delete VariableDeclarationStatement(361)", "Delete SimpleName: BlockID(362)", "Delete SimpleType: BlockID(363)", "Delete SimpleName: bkID(364)", "Delete SimpleName: BlockID(365)", "Delete SimpleType: BlockID(366)", "Delete SimpleName: x(367)", "Delete SimpleName: key(368)", "Delete SimpleName: getColumn(369)", "Delete MethodInvocation(370)", "Delete SimpleName: seq(371)", "Delete ClassInstanceCreation(372)", "Delete VariableDeclarationFragment(373)", "Delete VariableDeclarationStatement(374)", "Delete SimpleName: Put(375)", "Delete SimpleType: Put(376)", "Delete SimpleName: put(377)", "Delete SimpleName: Put(378)", "Delete SimpleType: Put(379)", "Delete SimpleName: bkID(380)", "Delete SimpleName: getBytes(381)", "Delete MethodInvocation(382)", "Delete ClassInstanceCreation(383)", "Delete VariableDeclarationFragment(384)", "Delete VariableDeclarationStatement(385)", "Delete SimpleName: put(386)", "Delete SimpleName: add(387)", "Delete SimpleName: Bytes(388)", "Delete SimpleName: toBytes(389)", "Delete QualifiedName: Constants.BLOCK(390)", "Delete MethodInvocation(391)", "Delete SimpleName: Bytes(392)", "Delete SimpleName: toBytes(393)", "Delete StringLiteral: \"b\"(394)", "Delete MethodInvocation(395)", "Delete SimpleName: subMatrix(396)", "Delete SimpleName: getBytes(397)", "Delete MethodInvocation(398)", "Delete MethodInvocation(399)", "Delete ExpressionStatement(400)", "Delete SimpleName: context(401)", "Delete SimpleName: write(402)", "Delete SimpleName: ImmutableBytesWritable(403)", "Delete SimpleType: ImmutableBytesWritable(404)", "Delete SimpleName: bkID(405)", "Delete SimpleName: getBytes(406)", "Delete MethodInvocation(407)", "Delete ClassInstanceCreation(408)", "Delete SimpleName: put(409)", "Delete MethodInvocation(410)", "Delete ExpressionStatement(411)", "Delete Block(412)", "Delete ForStatement(413)", "Delete Block(414)", "Delete IfStatement(415)", "Delete Block(416)", "Delete MethodDeclaration(417)", "Delete SimpleName: Override(418)", "Delete MarkerAnnotation(419)", "Delete Modifier: public(420)", "Delete SimpleName: Configuration(421)", "Delete SimpleType: Configuration(422)", "Delete SimpleName: getConf(423)", "Delete SimpleName: conf(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete SimpleName: Override(428)", "Delete MarkerAnnotation(429)", "Delete Modifier: public(430)", "Delete PrimitiveType: void(431)", "Delete SimpleName: setConf(432)", "Delete SimpleName: Configuration(433)", "Delete SimpleType: Configuration(434)", "Delete SimpleName: conf(435)", "Delete SingleVariableDeclaration(436)", "Delete ThisExpression(437)", "Delete SimpleName: conf(438)", "Delete FieldAccess(439)", "Delete SimpleName: conf(440)", "Delete Assignment: =(441)", "Delete ExpressionStatement(442)", "Delete SimpleName: mBlockNum(443)", "Delete SimpleName: Integer(444)", "Delete SimpleName: parseInt(445)", "Delete SimpleName: conf(446)", "Delete SimpleName: get(447)", "Delete QualifiedName: CollectBlocksMapper.BLOCK_SIZE(448)", "Delete StringLiteral: \"\"(449)", "Delete MethodInvocation(450)", "Delete MethodInvocation(451)", "Delete Assignment: =(452)", "Delete ExpressionStatement(453)", "Delete SimpleName: mRows(454)", "Delete SimpleName: Integer(455)", "Delete SimpleName: parseInt(456)", "Delete SimpleName: conf(457)", "Delete SimpleName: get(458)", "Delete QualifiedName: CollectBlocksMapper.ROWS(459)", "Delete StringLiteral: \"\"(460)", "Delete MethodInvocation(461)", "Delete MethodInvocation(462)", "Delete Assignment: =(463)", "Delete ExpressionStatement(464)", "Delete SimpleName: mColumns(465)", "Delete SimpleName: Integer(466)", "Delete SimpleName: parseInt(467)", "Delete SimpleName: conf(468)", "Delete SimpleName: get(469)", "Delete QualifiedName: CollectBlocksMapper.COLUMNS(470)", "Delete StringLiteral: \"\"(471)", "Delete MethodInvocation(472)", "Delete MethodInvocation(473)", "Delete Assignment: =(474)", "Delete ExpressionStatement(475)", "Delete SimpleName: mBlockRowSize(476)", "Delete SimpleName: mRows(477)", "Delete SimpleName: mBlockNum(478)", "Delete InfixExpression: /(479)", "Delete Assignment: =(480)", "Delete ExpressionStatement(481)", "Delete SimpleName: mBlockColSize(482)", "Delete SimpleName: mColumns(483)", "Delete SimpleName: mBlockNum(484)", "Delete InfixExpression: /(485)", "Delete Assignment: =(486)", "Delete ExpressionStatement(487)", "Delete SimpleName: matrixPos(488)", "Delete SimpleName: conf(489)", "Delete SimpleName: getBoolean(490)", "Delete QualifiedName: CollectBlocksMapper.MATRIX_POS(491)", "Delete BooleanLiteral: true(492)", "Delete MethodInvocation(493)", "Delete Assignment: =(494)", "Delete ExpressionStatement(495)", "Delete Block(496)", "Delete MethodDeclaration(497)", "Delete TypeDeclaration: class(498)"]}}, {"DenseMatrixVectorMultMap_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: limitations under the License.", "DEL PackageDeclaration", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL Javadoc", "DEL TagElement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configurable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.MapWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.HamaConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseMatrix", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseVector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL SimpleName: nKey", "DEL NullLiteral", "DEL SimpleName: String", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: matrix_a", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: write", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleType: TableMapper", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: DenseVector", "DEL SimpleName: IOException", "DEL SimpleName: Override", "DEL SimpleName: scaled", "DEL NumberLiteral: 0", "DEL FieldDeclaration", "DEL SimpleType: DenseVector", "DEL SimpleName: getRowIndex", "DEL VariableDeclarationFragment", "DEL SimpleName: matrix_a", "DEL SimpleType: DenseVector", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL SimpleType: Context", "DEL SimpleName: scale", "DEL ParameterizedType: TableMapper<IntWritable,MapWritable>", "DEL SimpleType: DenseVector", "DEL SimpleName: getInt", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MarkerAnnotation", "DEL TryStatement", "DEL SimpleName: conf", "DEL SimpleName: ithjth", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL SimpleName: IntWritable", "DEL FieldDeclaration", "DEL SimpleName: Configurable", "DEL MethodInvocation", "DEL SimpleName: scaled", "DEL TypeDeclaration: class", "DEL SimpleName: IOException", "DEL Modifier: private", "DEL SimpleType: String", "DEL SimpleName: Override", "DEL SimpleName: ithRow", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: conf", "DEL SimpleName: currVector", "DEL StringLiteral: \"ith.row\"", "DEL StringLiteral: \"hama.multiplication.matrix.a\"", "DEL SimpleName: TableMapper", "DEL Modifier: public", "DEL SimpleName: conf", "DEL SimpleName: DenseMatrixVectorMultMap", "DEL Modifier: public", "DEL SimpleName: String", "DEL SimpleType: IntWritable", "DEL Assignment: =", "DEL SimpleName: get", "DEL SimpleType: MapWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL SimpleType: DenseMatrix", "DEL SimpleName: getRow", "DEL SimpleType: InterruptedException", "DEL SimpleName: conf", "DEL SimpleName: Configuration", "DEL Assignment: =", "DEL SimpleName: value", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: Result", "DEL SimpleType: IntWritable", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL PrimitiveType: void", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL SimpleName: MATRIX_A", "DEL SimpleName: DenseVector", "DEL SimpleName: ImmutableBytesWritable", "DEL Block", "DEL SimpleName: matrix_a", "DEL SimpleName: InterruptedException", "DEL SimpleName: MapWritable", "DEL SimpleName: DenseMatrix", "DEL ExpressionStatement", "DEL SimpleName: ITH_ROW", "DEL SimpleName: getEntries", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: ithRow", "DEL SimpleName: ithjth", "DEL SimpleType: Configuration", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL SimpleName: conf", "DEL VariableDeclarationFragment", "DEL SimpleName: DenseVector", "DEL StringLiteral: \"\"", "DEL MarkerAnnotation", "DEL SimpleName: key", "DEL Block", "DEL SimpleType: Result", "DEL SimpleType: IntWritable", "DEL SimpleName: BytesUtil", "DEL SimpleType: HamaConfiguration", "DEL ExpressionStatement", "DEL SimpleName: currVector", "DEL Modifier: final", "DEL InfixExpression: !=", "DEL SimpleName: setConf", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: HamaConfiguration", "DEL SimpleType: Configurable", "DEL Block", "DEL SimpleName: getConf", "DEL ThisExpression", "DEL SimpleName: context", "DEL SimpleName: conf", "DEL SimpleName: e", "DEL Modifier: public", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: Configuration", "DEL ClassInstanceCreation", "DEL SimpleName: ithRow", "DEL SimpleName: currVector", "DEL Modifier: public", "DEL SimpleName: conf", "DEL SimpleName: map", "DEL SimpleName: printStackTrace", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: ITH_ROW", "DEL SimpleName: nKey", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleType: IOException", "DEL Modifier: protected", "DEL SimpleType: DenseMatrix", "DEL SimpleName: ithjth", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: Configuration", "DEL FieldAccess", "DEL SimpleName: MATRIX_A", "DEL ReturnStatement", "DEL SimpleName: nKey", "DEL SimpleName: key", "DEL SimpleName: Context", "DEL PrimitiveType: double", "DEL Modifier: private", "DEL Modifier: static", "DEL SimpleName: IntWritable", "DEL MethodDeclaration", "DEL SimpleName: context", "DEL SingleVariableDeclaration", "DEL SimpleType: Configuration", "DEL SimpleName: e", "DEL SimpleName: DenseMatrix", "DEL SimpleName: set", "DEL SimpleType: ImmutableBytesWritable", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: get"]}]}}, {"DenseMatrixVectorMultMap_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples.mapreduce(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(40)", "Delete ImportDeclaration(41)", "Delete Modifier: public(42)", "Delete SimpleName: DenseMatrixVectorMultMap(43)", "Delete SimpleName: TableMapper(44)", "Delete SimpleType: TableMapper(45)", "Delete SimpleName: IntWritable(46)", "Delete SimpleType: IntWritable(47)", "Delete SimpleName: MapWritable(48)", "Delete SimpleType: MapWritable(49)", "Delete ParameterizedType: TableMapper<IntWritable,MapWritable>(50)", "Delete SimpleName: Configurable(51)", "Delete SimpleType: Configurable(52)", "Delete Modifier: private(53)", "Delete SimpleName: Configuration(54)", "Delete SimpleType: Configuration(55)", "Delete SimpleName: conf(56)", "Delete NullLiteral(57)", "Delete VariableDeclarationFragment(58)", "Delete FieldDeclaration(59)", "Delete Modifier: protected(60)", "Delete SimpleName: DenseVector(61)", "Delete SimpleType: DenseVector(62)", "Delete SimpleName: currVector(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete Modifier: public(66)", "Delete Modifier: static(67)", "Delete Modifier: final(68)", "Delete SimpleName: String(69)", "Delete SimpleType: String(70)", "Delete SimpleName: ITH_ROW(71)", "Delete StringLiteral: \"ith.row\"(72)", "Delete VariableDeclarationFragment(73)", "Delete FieldDeclaration(74)", "Delete Modifier: public(75)", "Delete Modifier: static(76)", "Delete Modifier: final(77)", "Delete SimpleName: String(78)", "Delete SimpleType: String(79)", "Delete SimpleName: MATRIX_A(80)", "Delete StringLiteral: \"hama.multiplication.matrix.a\"(81)", "Delete VariableDeclarationFragment(82)", "Delete FieldDeclaration(83)", "Delete Modifier: private(84)", "Delete SimpleName: IntWritable(85)", "Delete SimpleType: IntWritable(86)", "Delete SimpleName: nKey(87)", "Delete SimpleName: IntWritable(88)", "Delete SimpleType: IntWritable(89)", "Delete ClassInstanceCreation(90)", "Delete VariableDeclarationFragment(91)", "Delete FieldDeclaration(92)", "Delete Modifier: public(93)", "Delete PrimitiveType: void(94)", "Delete SimpleName: map(95)", "Delete SimpleName: ImmutableBytesWritable(96)", "Delete SimpleType: ImmutableBytesWritable(97)", "Delete SimpleName: key(98)", "Delete SingleVariableDeclaration(99)", "Delete SimpleName: Result(100)", "Delete SimpleType: Result(101)", "Delete SimpleName: value(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: Context(104)", "Delete SimpleType: Context(105)", "Delete SimpleName: context(106)", "Delete SingleVariableDeclaration(107)", "Delete SimpleName: IOException(108)", "Delete SimpleType: IOException(109)", "Delete SimpleName: InterruptedException(110)", "Delete SimpleType: InterruptedException(111)", "Delete PrimitiveType: double(112)", "Delete SimpleName: ithjth(113)", "Delete SimpleName: currVector(114)", "Delete SimpleName: get(115)", "Delete SimpleName: BytesUtil(116)", "Delete SimpleName: getRowIndex(117)", "Delete SimpleName: key(118)", "Delete SimpleName: get(119)", "Delete MethodInvocation(120)", "Delete MethodInvocation(121)", "Delete MethodInvocation(122)", "Delete VariableDeclarationFragment(123)", "Delete VariableDeclarationStatement(124)", "Delete SimpleName: ithjth(125)", "Delete NumberLiteral: 0(126)", "Delete InfixExpression: !=(127)", "Delete SimpleName: DenseVector(128)", "Delete SimpleType: DenseVector(129)", "Delete SimpleName: scaled(130)", "Delete SimpleName: DenseVector(131)", "Delete SimpleType: DenseVector(132)", "Delete SimpleName: value(133)", "Delete ClassInstanceCreation(134)", "Delete SimpleName: scale(135)", "Delete SimpleName: ithjth(136)", "Delete MethodInvocation(137)", "Delete VariableDeclarationFragment(138)", "Delete VariableDeclarationStatement(139)", "Delete SimpleName: context(140)", "Delete SimpleName: write(141)", "Delete SimpleName: nKey(142)", "Delete SimpleName: scaled(143)", "Delete SimpleName: getEntries(144)", "Delete MethodInvocation(145)", "Delete MethodInvocation(146)", "Delete ExpressionStatement(147)", "Delete Block(148)", "Delete IfStatement(149)", "Delete Block(150)", "Delete MethodDeclaration(151)", "Delete SimpleName: Override(152)", "Delete MarkerAnnotation(153)", "Delete Modifier: public(154)", "Delete SimpleName: Configuration(155)", "Delete SimpleType: Configuration(156)", "Delete SimpleName: getConf(157)", "Delete SimpleName: conf(158)", "Delete ReturnStatement(159)", "Delete Block(160)", "Delete MethodDeclaration(161)", "Delete SimpleName: Override(162)", "Delete MarkerAnnotation(163)", "Delete Modifier: public(164)", "Delete PrimitiveType: void(165)", "Delete SimpleName: setConf(166)", "Delete SimpleName: Configuration(167)", "Delete SimpleType: Configuration(168)", "Delete SimpleName: conf(169)", "Delete SingleVariableDeclaration(170)", "Delete ThisExpression(171)", "Delete SimpleName: conf(172)", "Delete FieldAccess(173)", "Delete SimpleName: conf(174)", "Delete Assignment: =(175)", "Delete ExpressionStatement(176)", "Delete SimpleName: DenseMatrix(177)", "Delete SimpleType: DenseMatrix(178)", "Delete SimpleName: matrix_a(179)", "Delete VariableDeclarationFragment(180)", "Delete VariableDeclarationStatement(181)", "Delete SimpleName: matrix_a(182)", "Delete SimpleName: DenseMatrix(183)", "Delete SimpleType: DenseMatrix(184)", "Delete SimpleName: HamaConfiguration(185)", "Delete SimpleType: HamaConfiguration(186)", "Delete SimpleName: conf(187)", "Delete ClassInstanceCreation(188)", "Delete SimpleName: conf(189)", "Delete SimpleName: get(190)", "Delete SimpleName: MATRIX_A(191)", "Delete StringLiteral: \"\"(192)", "Delete MethodInvocation(193)", "Delete ClassInstanceCreation(194)", "Delete Assignment: =(195)", "Delete ExpressionStatement(196)", "Delete PrimitiveType: int(197)", "Delete SimpleName: ithRow(198)", "Delete SimpleName: conf(199)", "Delete SimpleName: getInt(200)", "Delete SimpleName: ITH_ROW(201)", "Delete NumberLiteral: 0(202)", "Delete MethodInvocation(203)", "Delete VariableDeclarationFragment(204)", "Delete VariableDeclarationStatement(205)", "Delete SimpleName: nKey(206)", "Delete SimpleName: set(207)", "Delete SimpleName: ithRow(208)", "Delete MethodInvocation(209)", "Delete ExpressionStatement(210)", "Delete SimpleName: currVector(211)", "Delete SimpleName: matrix_a(212)", "Delete SimpleName: getRow(213)", "Delete SimpleName: ithRow(214)", "Delete MethodInvocation(215)", "Delete Assignment: =(216)", "Delete ExpressionStatement(217)", "Delete Block(218)", "Delete SimpleName: IOException(219)", "Delete SimpleType: IOException(220)", "Delete SimpleName: e(221)", "Delete SingleVariableDeclaration(222)", "Delete SimpleName: e(223)", "Delete SimpleName: printStackTrace(224)", "Delete MethodInvocation(225)", "Delete ExpressionStatement(226)", "Delete Block(227)", "Delete CatchClause(228)", "Delete TryStatement(229)", "Delete Block(230)", "Delete MethodDeclaration(231)", "Delete TypeDeclaration: class(232)"]}}, {"DenseMatrixVectorMultReduce_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL Javadoc", "DEL TagElement", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL PackageDeclaration", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseVector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: sum", "DEL SimpleType: Put", "DEL SimpleName: getEntries", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL SimpleType: MapWritable", "DEL IfStatement", "DEL SimpleName: valueOf", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: Put", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: nVector", "DEL SimpleName: key", "DEL SimpleName: add", "DEL SimpleType: Context", "DEL MethodInvocation", "DEL SimpleName: TableReducer", "DEL VariableDeclarationStatement", "DEL SimpleName: zeroFill", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: sum", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL ParameterizedType: Iterable<MapWritable>", "DEL Block", "DEL SimpleName: getKey", "DEL SimpleName: sum", "DEL SimpleName: sum", "DEL MethodInvocation", "DEL SimpleName: ImmutableBytesWritable", "DEL MethodInvocation", "DEL SimpleName: MapWritable", "DEL SimpleName: context", "DEL SimpleName: value", "DEL SimpleType: Map.Entry", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL SimpleName: values", "DEL SimpleType: Writable", "DEL SimpleType: Put", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL CastExpression", "DEL SimpleName: e", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: Writable", "DEL SimpleName: put", "DEL SimpleName: nVector", "DEL SimpleType: DoubleWritable", "DEL SimpleName: IntWritable", "DEL SimpleName: e", "DEL SimpleName: toBytes", "DEL SimpleName: put", "DEL SimpleName: Bytes", "DEL SimpleName: e", "DEL SimpleType: DenseVector", "DEL MethodInvocation", "DEL Modifier: public", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: DenseMatrixVectorMultReduce", "DEL SimpleName: key", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL ParenthesizedExpression", "DEL QualifiedName: Map.Entry", "DEL Block", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL Block", "DEL SimpleName: IntWritable", "DEL Modifier: public", "DEL SimpleName: reduce", "DEL SimpleName: add", "DEL SimpleName: Put", "DEL SimpleName: nVector", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: getValue", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL SimpleName: entrySet", "DEL SimpleName: DenseVector", "DEL ExpressionStatement", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationStatement", "DEL SimpleType: TableReducer", "DEL SimpleName: Iterable", "DEL SimpleType: DenseVector", "DEL SimpleName: sum", "DEL TypeDeclaration: class", "DEL SimpleType: MapWritable", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationFragment", "DEL SimpleName: DenseVector", "DEL VariableDeclarationStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: size", "DEL SimpleName: String", "DEL SimpleName: DenseVector", "DEL SimpleName: size", "DEL SimpleName: DoubleWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL SimpleName: getRowIndex", "DEL SimpleType: Writable", "DEL SimpleName: values", "DEL SimpleName: Writable", "DEL MethodInvocation", "DEL SimpleType: InterruptedException", "DEL SimpleType: Iterable", "DEL SimpleType: DenseVector", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL SimpleType: DenseVector", "DEL SimpleName: key", "DEL SimpleType: Writable", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: IOException", "DEL InfixExpression: ==", "DEL SimpleName: sum", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL SimpleName: IntWritable", "DEL ClassInstanceCreation", "DEL SimpleName: nVector", "DEL MethodInvocation", "DEL SimpleType: MapWritable", "DEL ExpressionStatement", "DEL ParameterizedType: TableReducer<IntWritable,MapWritable,Writable>", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: DenseVector", "DEL SimpleName: Context", "DEL MethodInvocation", "DEL SimpleType: IntWritable", "DEL SimpleName: write", "DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL SimpleType: IntWritable", "DEL ClassInstanceCreation", "DEL SimpleName: Writable", "DEL ParenthesizedExpression", "DEL SimpleName: MapWritable", "DEL SimpleName: context", "DEL SimpleName: add"]}]}}, {"DenseMatrixVectorMultReduce_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples.mapreduce(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.Map(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.io.Writable(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hama.Constants(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(42)", "Delete ImportDeclaration(43)", "Delete Modifier: public(44)", "Delete SimpleName: DenseMatrixVectorMultReduce(45)", "Delete SimpleName: TableReducer(46)", "Delete SimpleType: TableReducer(47)", "Delete SimpleName: IntWritable(48)", "Delete SimpleType: IntWritable(49)", "Delete SimpleName: MapWritable(50)", "Delete SimpleType: MapWritable(51)", "Delete SimpleName: Writable(52)", "Delete SimpleType: Writable(53)", "Delete ParameterizedType: TableReducer<IntWritable,MapWritable,Writable>(54)", "Delete SimpleName: Override(55)", "Delete MarkerAnnotation(56)", "Delete Modifier: public(57)", "Delete PrimitiveType: void(58)", "Delete SimpleName: reduce(59)", "Delete SimpleName: IntWritable(60)", "Delete SimpleType: IntWritable(61)", "Delete SimpleName: key(62)", "Delete SingleVariableDeclaration(63)", "Delete SimpleName: Iterable(64)", "Delete SimpleType: Iterable(65)", "Delete SimpleName: MapWritable(66)", "Delete SimpleType: MapWritable(67)", "Delete ParameterizedType: Iterable<MapWritable>(68)", "Delete SimpleName: values(69)", "Delete SingleVariableDeclaration(70)", "Delete SimpleName: Context(71)", "Delete SimpleType: Context(72)", "Delete SimpleName: context(73)", "Delete SingleVariableDeclaration(74)", "Delete SimpleName: IOException(75)", "Delete SimpleType: IOException(76)", "Delete SimpleName: InterruptedException(77)", "Delete SimpleType: InterruptedException(78)", "Delete SimpleName: DenseVector(79)", "Delete SimpleType: DenseVector(80)", "Delete SimpleName: sum(81)", "Delete SimpleName: DenseVector(82)", "Delete SimpleType: DenseVector(83)", "Delete ClassInstanceCreation(84)", "Delete VariableDeclarationFragment(85)", "Delete VariableDeclarationStatement(86)", "Delete SimpleName: MapWritable(87)", "Delete SimpleType: MapWritable(88)", "Delete SimpleName: value(89)", "Delete SingleVariableDeclaration(90)", "Delete SimpleName: values(91)", "Delete SimpleName: DenseVector(92)", "Delete SimpleType: DenseVector(93)", "Delete SimpleName: nVector(94)", "Delete SimpleName: DenseVector(95)", "Delete SimpleType: DenseVector(96)", "Delete SimpleName: value(97)", "Delete ClassInstanceCreation(98)", "Delete VariableDeclarationFragment(99)", "Delete VariableDeclarationStatement(100)", "Delete SimpleName: sum(101)", "Delete SimpleName: size(102)", "Delete MethodInvocation(103)", "Delete NumberLiteral: 0(104)", "Delete InfixExpression: ==(105)", "Delete SimpleName: sum(106)", "Delete SimpleName: zeroFill(107)", "Delete SimpleName: nVector(108)", "Delete SimpleName: size(109)", "Delete MethodInvocation(110)", "Delete MethodInvocation(111)", "Delete ExpressionStatement(112)", "Delete SimpleName: sum(113)", "Delete SimpleName: add(114)", "Delete SimpleName: nVector(115)", "Delete MethodInvocation(116)", "Delete ExpressionStatement(117)", "Delete Block(118)", "Delete SimpleName: sum(119)", "Delete SimpleName: add(120)", "Delete SimpleName: nVector(121)", "Delete MethodInvocation(122)", "Delete ExpressionStatement(123)", "Delete Block(124)", "Delete IfStatement(125)", "Delete Block(126)", "Delete EnhancedForStatement(127)", "Delete SimpleName: Put(128)", "Delete SimpleType: Put(129)", "Delete SimpleName: put(130)", "Delete SimpleName: Put(131)", "Delete SimpleType: Put(132)", "Delete SimpleName: BytesUtil(133)", "Delete SimpleName: getRowIndex(134)", "Delete SimpleName: key(135)", "Delete SimpleName: get(136)", "Delete MethodInvocation(137)", "Delete MethodInvocation(138)", "Delete ClassInstanceCreation(139)", "Delete VariableDeclarationFragment(140)", "Delete VariableDeclarationStatement(141)", "Delete QualifiedName: Map.Entry(142)", "Delete SimpleType: Map.Entry(143)", "Delete SimpleName: Writable(144)", "Delete SimpleType: Writable(145)", "Delete SimpleName: Writable(146)", "Delete SimpleType: Writable(147)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(148)", "Delete SimpleName: e(149)", "Delete SingleVariableDeclaration(150)", "Delete SimpleName: sum(151)", "Delete SimpleName: getEntries(152)", "Delete MethodInvocation(153)", "Delete SimpleName: entrySet(154)", "Delete MethodInvocation(155)", "Delete SimpleName: put(156)", "Delete SimpleName: add(157)", "Delete QualifiedName: Constants.COLUMNFAMILY(158)", "Delete SimpleName: Bytes(159)", "Delete SimpleName: toBytes(160)", "Delete SimpleName: String(161)", "Delete SimpleName: valueOf(162)", "Delete SimpleName: IntWritable(163)", "Delete SimpleType: IntWritable(164)", "Delete SimpleName: e(165)", "Delete SimpleName: getKey(166)", "Delete MethodInvocation(167)", "Delete CastExpression(168)", "Delete ParenthesizedExpression(169)", "Delete SimpleName: get(170)", "Delete MethodInvocation(171)", "Delete MethodInvocation(172)", "Delete MethodInvocation(173)", "Delete SimpleName: Bytes(174)", "Delete SimpleName: toBytes(175)", "Delete SimpleName: DoubleWritable(176)", "Delete SimpleType: DoubleWritable(177)", "Delete SimpleName: e(178)", "Delete SimpleName: getValue(179)", "Delete MethodInvocation(180)", "Delete CastExpression(181)", "Delete ParenthesizedExpression(182)", "Delete SimpleName: get(183)", "Delete MethodInvocation(184)", "Delete MethodInvocation(185)", "Delete MethodInvocation(186)", "Delete ExpressionStatement(187)", "Delete Block(188)", "Delete EnhancedForStatement(189)", "Delete SimpleName: context(190)", "Delete SimpleName: write(191)", "Delete SimpleName: ImmutableBytesWritable(192)", "Delete SimpleType: ImmutableBytesWritable(193)", "Delete SimpleName: BytesUtil(194)", "Delete SimpleName: getRowIndex(195)", "Delete SimpleName: key(196)", "Delete SimpleName: get(197)", "Delete MethodInvocation(198)", "Delete MethodInvocation(199)", "Delete ClassInstanceCreation(200)", "Delete SimpleName: put(201)", "Delete MethodInvocation(202)", "Delete ExpressionStatement(203)", "Delete Block(204)", "Delete MethodDeclaration(205)", "Delete TypeDeclaration: class(206)"]}}, {"DummyMapper_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapred.OutputCollector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapred.Reporter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.Mapper"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: DummyMapper", "DEL SimpleName: K", "DEL SimpleName: K", "DEL SimpleType: K", "DEL SimpleName: Mapper", "DEL TypeParameter", "DEL SimpleName: V", "DEL PrimitiveType: void", "DEL SimpleName: IOException", "DEL SimpleType: K", "DEL SimpleName: V", "DEL SimpleType: Mapper", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: map", "DEL SimpleType: Reporter", "DEL TextElement: The dummy function. ", "DEL SimpleName: V", "DEL Modifier: public", "DEL SimpleName: V", "DEL TypeParameter", "DEL SimpleType: K", "DEL SimpleType: V", "DEL Block", "DEL ParameterizedType: Mapper<K,V,K,V>", "DEL SimpleName: V", "DEL SimpleType: V", "DEL ParameterizedType: OutputCollector<K,V>", "DEL SimpleType: OutputCollector", "DEL SimpleName: val", "DEL SimpleName: OutputCollector", "DEL SimpleName: K", "DEL SimpleName: Reporter", "DEL SimpleType: V", "DEL TypeDeclaration: class", "DEL SimpleType: IOException", "DEL SimpleName: reporter", "DEL Javadoc", "DEL SimpleName: K", "DEL SimpleName: output", "DEL SimpleType: K", "DEL SimpleType: V", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: K", "DEL SingleVariableDeclaration"]}]}}, {"DummyMapper_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.mapred.OutputCollector(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.mapred.Reporter(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Mapper(8)", "Delete ImportDeclaration(9)", "Delete Modifier: public(10)", "Delete SimpleName: DummyMapper(11)", "Delete SimpleName: K(12)", "Delete TypeParameter(13)", "Delete SimpleName: V(14)", "Delete TypeParameter(15)", "Delete SimpleName: Mapper(16)", "Delete SimpleType: Mapper(17)", "Delete SimpleName: K(18)", "Delete SimpleType: K(19)", "Delete SimpleName: V(20)", "Delete SimpleType: V(21)", "Delete SimpleName: K(22)", "Delete SimpleType: K(23)", "Delete SimpleName: V(24)", "Delete SimpleType: V(25)", "Delete ParameterizedType: Mapper<K,V,K,V>(26)", "Delete TextElement: The dummy function. (27)", "Delete TagElement(28)", "Delete Javadoc(29)", "Delete Modifier: public(30)", "Delete PrimitiveType: void(31)", "Delete SimpleName: map(32)", "Delete SimpleName: K(33)", "Delete SimpleType: K(34)", "Delete SimpleName: key(35)", "Delete SingleVariableDeclaration(36)", "Delete SimpleName: V(37)", "Delete SimpleType: V(38)", "Delete SimpleName: val(39)", "Delete SingleVariableDeclaration(40)", "Delete SimpleName: OutputCollector(41)", "Delete SimpleType: OutputCollector(42)", "Delete SimpleName: K(43)", "Delete SimpleType: K(44)", "Delete SimpleName: V(45)", "Delete SimpleType: V(46)", "Delete ParameterizedType: OutputCollector<K,V>(47)", "Delete SimpleName: output(48)", "Delete SingleVariableDeclaration(49)", "Delete SimpleName: Reporter(50)", "Delete SimpleType: Reporter(51)", "Delete SimpleName: reporter(52)", "Delete SingleVariableDeclaration(53)", "Delete SimpleName: IOException(54)", "Delete SimpleType: IOException(55)", "Delete Block(56)", "Delete MethodDeclaration(57)", "Delete TypeDeclaration: class(58)"]}}, {"JacobiInitMap_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.NavigableMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Put"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.JacobiEigen", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: Put", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: valueOf", "DEL SimpleName: JacobiInitMap", "DEL SimpleName: Put", "DEL QualifiedName: JacobiEigen.EI", "DEL SimpleName: Double", "DEL ClassInstanceCreation", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: toBytes", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL Dimension", "DEL SimpleName: maxVal", "DEL SimpleName: context", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: toBytes", "DEL SimpleName: IOException", "DEL SimpleName: value", "DEL MethodInvocation", "DEL Block", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: put", "DEL InfixExpression: ==", "DEL SimpleName: add", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL SimpleName: Double", "DEL SimpleType: IOException", "DEL QualifiedName: JacobiEigen.EIVAL", "DEL QualifiedName: JacobiEigen.EIIND", "DEL TextElement: And the output Eigen Vector Arrays \"eivec\", and the output eigen value array", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleType: Result", "DEL SimpleName: get", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL QualifiedName: Map.Entry", "DEL SimpleName: add", "DEL SimpleName: row", "DEL SimpleName: String", "DEL SimpleName: col", "DEL SimpleName: val", "DEL SimpleName: abs", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: BytesUtil", "DEL PrimitiveType: double", "DEL TextElement: \"eicol\" family. All the following modification will be done over \"eicol\"", "DEL SimpleType: Put", "DEL SimpleName: Math", "DEL SimpleType: Context", "DEL SimpleName: getFamilyMap", "DEL MethodInvocation", "DEL SimpleName: maxInd", "DEL SimpleName: key", "DEL SimpleName: NavigableMap", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL SimpleName: add", "DEL SimpleType: TableMapper", "DEL SimpleName: col", "DEL SimpleName: maxVal", "DEL SimpleName: maxVal", "DEL IfStatement", "DEL SimpleName: Bytes", "DEL Modifier: public", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL Javadoc", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL PrimitiveType: byte", "DEL Assignment: =", "DEL SimpleName: map", "DEL Block", "DEL ParameterizedType: TableMapper<ImmutableBytesWritable,Put>", "DEL SimpleName: add", "DEL TextElement: Also \"eival:state\" will record the state of the rotation state of a matrix", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL SimpleName: toBytes", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: valueOf", "DEL SimpleName: entrySet", "DEL SimpleName: Bytes", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: key", "DEL ConditionalExpression", "DEL SimpleName: BytesUtil", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL QualifiedName: JacobiEigen.EICHANGED", "DEL SimpleName: put", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL QualifiedName: Double.MIN_VALUE", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL BooleanLiteral: true", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: maxInd", "DEL SimpleName: put", "DEL SimpleName: Bytes", "DEL EnhancedForStatement", "DEL SimpleName: put", "DEL SimpleName: valueOf", "DEL SimpleName: col", "DEL SimpleName: Put", "DEL SimpleName: Bytes", "DEL SimpleName: ImmutableBytesWritable", "DEL IfStatement", "DEL SimpleName: String", "DEL ArrayType: byte[]", "DEL ExpressionStatement", "DEL ArrayType: byte[]", "DEL SimpleName: TableMapper", "DEL SimpleName: context", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL ArrayType: byte[]", "DEL SimpleName: Bytes", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL SimpleName: BytesUtil", "DEL SimpleName: InterruptedException", "DEL SimpleType: Double", "DEL ClassInstanceCreation", "DEL SimpleType: NavigableMap", "DEL Block", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: col", "DEL SimpleName: write", "DEL VariableDeclarationStatement", "DEL SimpleName: maxInd", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: val", "DEL ExpressionStatement", "DEL SimpleType: Put", "DEL PrimitiveType: boolean", "DEL PrimitiveType: byte", "DEL TextElement: \"eival:value\", and the temp status array \"eival:changed\", \"eival:ind\" will be", "DEL Assignment: =", "DEL TextElement: network transfer, we copy the \"column\" family in the original matrix to a", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SimpleType: InterruptedException", "DEL PrimitiveType: double", "DEL TextElement: created.", "DEL MethodInvocation", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: map", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: col", "DEL SimpleName: put", "DEL SimpleName: col", "DEL SimpleType: Double", "DEL NumberLiteral: 1", "DEL SimpleName: Bytes", "DEL SimpleName: toDouble", "DEL SimpleName: getKey", "DEL MethodInvocation", "DEL SimpleName: map", "DEL TagElement", "DEL SimpleName: e", "DEL SimpleType: ImmutableBytesWritable", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: getRowIndex", "DEL SimpleName: toBytes", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL SimpleName: init", "DEL SimpleName: val", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: add", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL BooleanLiteral: false", "DEL SimpleName: val", "DEL MethodInvocation", "DEL SimpleName: init", "DEL ExpressionStatement", "DEL SimpleName: maxVal", "DEL Assignment: =", "DEL SimpleName: Put", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL SimpleName: init", "DEL TextElement: will be created to prevent the original matrix being modified. To reduce the", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleType: Map.Entry", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL ExpressionStatement", "DEL QualifiedName: JacobiEigen.EI", "DEL SimpleName: getValue", "DEL TextElement: family.", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: val", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL PrimitiveType: int", "DEL SimpleName: bytesToInt", "DEL SimpleName: col", "DEL SingleVariableDeclaration", "DEL SimpleName: toBytes", "DEL InfixExpression: >", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: put", "DEL SimpleName: col", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: Bytes", "DEL SimpleName: Math", "DEL SimpleName: abs", "DEL SimpleName: row", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL Dimension", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: row", "DEL SimpleType: ImmutableBytesWritable", "DEL Modifier: public", "DEL SimpleName: e", "DEL Assignment: =", "DEL SimpleName: row", "DEL SimpleName: toBytes", "DEL IfStatement", "DEL SimpleName: String", "DEL Assignment: =", "DEL QualifiedName: JacobiEigen.EIVEC", "DEL SimpleName: Context", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: row", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL QualifiedName: JacobiEigen.EI", "DEL SimpleName: toBytes", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL SimpleName: Result", "DEL VariableDeclarationFragment", "DEL SimpleName: maxInd", "DEL Dimension", "DEL InfixExpression: >", "DEL SimpleName: val", "DEL SimpleName: toBytes", "DEL TextElement: The matrix will be modified during computing eigen value. So a new matrix", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: val", "DEL SimpleName: col"]}]}}, {"JacobiInitMap_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Map(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.NavigableMap(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hama.Constants(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hama.examples.JacobiEigen(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(22)", "Delete ImportDeclaration(23)", "Delete TextElement: The matrix will be modified during computing eigen value. So a new matrix(24)", "Delete TextElement: will be created to prevent the original matrix being modified. To reduce the(25)", "Delete TextElement: network transfer, we copy the \"column\" family in the original matrix to a(26)", "Delete TextElement: \"eicol\" family. All the following modification will be done over \"eicol\"(27)", "Delete TextElement: family.(28)", "Delete TextElement: And the output Eigen Vector Arrays \"eivec\", and the output eigen value array(29)", "Delete TextElement: \"eival:value\", and the temp status array \"eival:changed\", \"eival:ind\" will be(30)", "Delete TextElement: created.(31)", "Delete TextElement: Also \"eival:state\" will record the state of the rotation state of a matrix(32)", "Delete TagElement(33)", "Delete Javadoc(34)", "Delete Modifier: public(35)", "Delete SimpleName: JacobiInitMap(36)", "Delete SimpleName: TableMapper(37)", "Delete SimpleType: TableMapper(38)", "Delete SimpleName: ImmutableBytesWritable(39)", "Delete SimpleType: ImmutableBytesWritable(40)", "Delete SimpleName: Put(41)", "Delete SimpleType: Put(42)", "Delete ParameterizedType: TableMapper<ImmutableBytesWritable,Put>(43)", "Delete Modifier: public(44)", "Delete PrimitiveType: void(45)", "Delete SimpleName: map(46)", "Delete SimpleName: ImmutableBytesWritable(47)", "Delete SimpleType: ImmutableBytesWritable(48)", "Delete SimpleName: key(49)", "Delete SingleVariableDeclaration(50)", "Delete SimpleName: Result(51)", "Delete SimpleType: Result(52)", "Delete SimpleName: value(53)", "Delete SingleVariableDeclaration(54)", "Delete SimpleName: Context(55)", "Delete SimpleType: Context(56)", "Delete SimpleName: context(57)", "Delete SingleVariableDeclaration(58)", "Delete SimpleName: IOException(59)", "Delete SimpleType: IOException(60)", "Delete SimpleName: InterruptedException(61)", "Delete SimpleType: InterruptedException(62)", "Delete PrimitiveType: int(63)", "Delete SimpleName: row(64)", "Delete VariableDeclarationFragment(65)", "Delete SimpleName: col(66)", "Delete VariableDeclarationFragment(67)", "Delete VariableDeclarationStatement(68)", "Delete SimpleName: row(69)", "Delete SimpleName: BytesUtil(70)", "Delete SimpleName: getRowIndex(71)", "Delete SimpleName: key(72)", "Delete SimpleName: get(73)", "Delete MethodInvocation(74)", "Delete MethodInvocation(75)", "Delete Assignment: =(76)", "Delete ExpressionStatement(77)", "Delete SimpleName: Put(78)", "Delete SimpleType: Put(79)", "Delete SimpleName: put(80)", "Delete SimpleName: Put(81)", "Delete SimpleType: Put(82)", "Delete SimpleName: BytesUtil(83)", "Delete SimpleName: getRowIndex(84)", "Delete SimpleName: row(85)", "Delete MethodInvocation(86)", "Delete ClassInstanceCreation(87)", "Delete VariableDeclarationFragment(88)", "Delete VariableDeclarationStatement(89)", "Delete PrimitiveType: double(90)", "Delete SimpleName: val(91)", "Delete VariableDeclarationFragment(92)", "Delete VariableDeclarationStatement(93)", "Delete PrimitiveType: double(94)", "Delete SimpleName: maxVal(95)", "Delete QualifiedName: Double.MIN_VALUE(96)", "Delete VariableDeclarationFragment(97)", "Delete VariableDeclarationStatement(98)", "Delete PrimitiveType: int(99)", "Delete SimpleName: maxInd(100)", "Delete SimpleName: row(101)", "Delete NumberLiteral: 1(102)", "Delete InfixExpression: +(103)", "Delete VariableDeclarationFragment(104)", "Delete VariableDeclarationStatement(105)", "Delete PrimitiveType: boolean(106)", "Delete SimpleName: init(107)", "Delete BooleanLiteral: true(108)", "Delete VariableDeclarationFragment(109)", "Delete VariableDeclarationStatement(110)", "Delete SimpleName: NavigableMap(111)", "Delete SimpleType: NavigableMap(112)", "Delete PrimitiveType: byte(113)", "Delete Dimension(114)", "Delete ArrayType: byte[](115)", "Delete PrimitiveType: byte(116)", "Delete Dimension(117)", "Delete ArrayType: byte[](118)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(119)", "Delete SimpleName: map(120)", "Delete SimpleName: value(121)", "Delete SimpleName: getFamilyMap(122)", "Delete QualifiedName: Constants.COLUMNFAMILY(123)", "Delete MethodInvocation(124)", "Delete VariableDeclarationFragment(125)", "Delete VariableDeclarationStatement(126)", "Delete QualifiedName: Map.Entry(127)", "Delete SimpleType: Map.Entry(128)", "Delete PrimitiveType: byte(129)", "Delete Dimension(130)", "Delete ArrayType: byte[](131)", "Delete PrimitiveType: byte(132)", "Delete Dimension(133)", "Delete ArrayType: byte[](134)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(135)", "Delete SimpleName: e(136)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: map(138)", "Delete SimpleName: entrySet(139)", "Delete MethodInvocation(140)", "Delete SimpleName: val(141)", "Delete SimpleName: Bytes(142)", "Delete SimpleName: toDouble(143)", "Delete SimpleName: e(144)", "Delete SimpleName: getValue(145)", "Delete MethodInvocation(146)", "Delete MethodInvocation(147)", "Delete Assignment: =(148)", "Delete ExpressionStatement(149)", "Delete SimpleName: col(150)", "Delete SimpleName: BytesUtil(151)", "Delete SimpleName: bytesToInt(152)", "Delete SimpleName: e(153)", "Delete SimpleName: getKey(154)", "Delete MethodInvocation(155)", "Delete MethodInvocation(156)", "Delete Assignment: =(157)", "Delete ExpressionStatement(158)", "Delete SimpleName: put(159)", "Delete SimpleName: add(160)", "Delete SimpleName: Bytes(161)", "Delete SimpleName: toBytes(162)", "Delete QualifiedName: JacobiEigen.EICOL(163)", "Delete MethodInvocation(164)", "Delete SimpleName: Bytes(165)", "Delete SimpleName: toBytes(166)", "Delete SimpleName: String(167)", "Delete SimpleName: valueOf(168)", "Delete SimpleName: col(169)", "Delete MethodInvocation(170)", "Delete MethodInvocation(171)", "Delete SimpleName: Bytes(172)", "Delete SimpleName: toBytes(173)", "Delete SimpleName: val(174)", "Delete MethodInvocation(175)", "Delete MethodInvocation(176)", "Delete ExpressionStatement(177)", "Delete SimpleName: put(178)", "Delete SimpleName: add(179)", "Delete SimpleName: Bytes(180)", "Delete SimpleName: toBytes(181)", "Delete QualifiedName: JacobiEigen.EIVEC(182)", "Delete MethodInvocation(183)", "Delete SimpleName: Bytes(184)", "Delete SimpleName: toBytes(185)", "Delete SimpleName: String(186)", "Delete SimpleName: valueOf(187)", "Delete SimpleName: col(188)", "Delete MethodInvocation(189)", "Delete MethodInvocation(190)", "Delete SimpleName: Bytes(191)", "Delete SimpleName: toBytes(192)", "Delete SimpleName: col(193)", "Delete SimpleName: row(194)", "Delete InfixExpression: ==(195)", "Delete SimpleName: Double(196)", "Delete SimpleType: Double(197)", "Delete NumberLiteral: 1(198)", "Delete ClassInstanceCreation(199)", "Delete SimpleName: Double(200)", "Delete SimpleType: Double(201)", "Delete NumberLiteral: 0(202)", "Delete ClassInstanceCreation(203)", "Delete ConditionalExpression(204)", "Delete MethodInvocation(205)", "Delete MethodInvocation(206)", "Delete ExpressionStatement(207)", "Delete SimpleName: col(208)", "Delete SimpleName: row(209)", "Delete InfixExpression: ==(210)", "Delete SimpleName: put(211)", "Delete SimpleName: add(212)", "Delete SimpleName: Bytes(213)", "Delete SimpleName: toBytes(214)", "Delete QualifiedName: JacobiEigen.EI(215)", "Delete MethodInvocation(216)", "Delete SimpleName: Bytes(217)", "Delete SimpleName: toBytes(218)", "Delete QualifiedName: JacobiEigen.EIVAL(219)", "Delete MethodInvocation(220)", "Delete SimpleName: Bytes(221)", "Delete SimpleName: toBytes(222)", "Delete SimpleName: val(223)", "Delete MethodInvocation(224)", "Delete MethodInvocation(225)", "Delete ExpressionStatement(226)", "Delete Block(227)", "Delete IfStatement(228)", "Delete SimpleName: col(229)", "Delete SimpleName: row(230)", "Delete InfixExpression: >(231)", "Delete SimpleName: init(232)", "Delete SimpleName: maxInd(233)", "Delete SimpleName: col(234)", "Delete Assignment: =(235)", "Delete ExpressionStatement(236)", "Delete SimpleName: maxVal(237)", "Delete SimpleName: val(238)", "Delete Assignment: =(239)", "Delete ExpressionStatement(240)", "Delete SimpleName: init(241)", "Delete BooleanLiteral: false(242)", "Delete Assignment: =(243)", "Delete ExpressionStatement(244)", "Delete Block(245)", "Delete SimpleName: Math(246)", "Delete SimpleName: abs(247)", "Delete SimpleName: val(248)", "Delete MethodInvocation(249)", "Delete SimpleName: Math(250)", "Delete SimpleName: abs(251)", "Delete SimpleName: maxVal(252)", "Delete MethodInvocation(253)", "Delete InfixExpression: >(254)", "Delete SimpleName: maxVal(255)", "Delete SimpleName: val(256)", "Delete Assignment: =(257)", "Delete ExpressionStatement(258)", "Delete SimpleName: maxInd(259)", "Delete SimpleName: col(260)", "Delete Assignment: =(261)", "Delete ExpressionStatement(262)", "Delete Block(263)", "Delete IfStatement(264)", "Delete Block(265)", "Delete IfStatement(266)", "Delete Block(267)", "Delete IfStatement(268)", "Delete Block(269)", "Delete EnhancedForStatement(270)", "Delete SimpleName: put(271)", "Delete SimpleName: add(272)", "Delete SimpleName: Bytes(273)", "Delete SimpleName: toBytes(274)", "Delete QualifiedName: JacobiEigen.EI(275)", "Delete MethodInvocation(276)", "Delete SimpleName: Bytes(277)", "Delete SimpleName: toBytes(278)", "Delete QualifiedName: JacobiEigen.EIIND(279)", "Delete MethodInvocation(280)", "Delete SimpleName: Bytes(281)", "Delete SimpleName: toBytes(282)", "Delete SimpleName: String(283)", "Delete SimpleName: valueOf(284)", "Delete SimpleName: maxInd(285)", "Delete MethodInvocation(286)", "Delete MethodInvocation(287)", "Delete MethodInvocation(288)", "Delete ExpressionStatement(289)", "Delete SimpleName: put(290)", "Delete SimpleName: add(291)", "Delete SimpleName: Bytes(292)", "Delete SimpleName: toBytes(293)", "Delete QualifiedName: JacobiEigen.EI(294)", "Delete MethodInvocation(295)", "Delete SimpleName: Bytes(296)", "Delete SimpleName: toBytes(297)", "Delete QualifiedName: JacobiEigen.EICHANGED(298)", "Delete MethodInvocation(299)", "Delete SimpleName: Bytes(300)", "Delete SimpleName: toBytes(301)", "Delete SimpleName: String(302)", "Delete SimpleName: valueOf(303)", "Delete NumberLiteral: 1(304)", "Delete MethodInvocation(305)", "Delete MethodInvocation(306)", "Delete MethodInvocation(307)", "Delete ExpressionStatement(308)", "Delete SimpleName: context(309)", "Delete SimpleName: write(310)", "Delete SimpleName: key(311)", "Delete SimpleName: put(312)", "Delete MethodInvocation(313)", "Delete ExpressionStatement(314)", "Delete Block(315)", "Delete MethodDeclaration(316)", "Delete TypeDeclaration: class(317)"]}}, {"MatrixNormMapReduce_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.NavigableMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Result"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.IntWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Reducer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.BytesUtil"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.log4j.Logger", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL SimpleName: IntWritable", "DEL TagElement", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleType: IntWritable", "DEL ExpressionStatement", "DEL SimpleName: nValue", "DEL MethodDeclaration", "DEL SimpleName: v", "DEL MarkerAnnotation", "DEL VariableDeclarationFragment", "DEL InfixExpression: >", "DEL SimpleType: IntWritable", "DEL Modifier: private", "DEL Modifier: private", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: IntWritable", "DEL SimpleName: getFamilyMap", "DEL Modifier: public", "DEL SimpleType: Reducer", "DEL ClassInstanceCreation", "DEL ArrayType: byte[]", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleType: Result", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL SimpleType: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: context", "DEL SimpleName: rowSum", "DEL Modifier: static", "DEL SimpleName: Context", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Assignment: +=", "DEL SimpleType: Result", "DEL ExpressionStatement", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL FieldDeclaration", "DEL NumberLiteral: 0", "DEL SimpleName: key", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL VariableDeclarationStatement", "DEL SimpleName: context", "DEL SimpleName: val", "DEL SimpleName: DoubleWritable", "DEL SimpleName: Iterable", "DEL SimpleName: Result", "DEL SimpleName: nValue", "DEL SimpleType: IntWritable", "DEL Modifier: static", "DEL SimpleName: max", "DEL Dimension", "DEL Modifier: public", "DEL SimpleName: map", "DEL SimpleName: values", "DEL SimpleName: map", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: nValue", "DEL SimpleName: reduce", "DEL Block", "DEL SimpleName: nValue", "DEL SimpleType: IOException", "DEL SimpleName: val", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: Map.Entry", "DEL SimpleName: nValue", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleType: DoubleWritable", "DEL SimpleName: MatrixOneNormMapper", "DEL Modifier: static", "DEL SimpleName: colSum", "DEL TypeDeclaration: class", "DEL SimpleName: context", "DEL TagElement", "DEL SimpleName: partialColSum", "DEL Modifier: static", "DEL SimpleName: ImmutableBytesWritable", "DEL Javadoc", "DEL MarkerAnnotation", "DEL Modifier: private", "DEL ArrayType: byte[]", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Result", "DEL SimpleName: values", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL SingleVariableDeclaration", "DEL SimpleName: DoubleWritable", "DEL TextElement: Infinity Norm ", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL SimpleName: values", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: NavigableMap", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL VariableDeclarationFragment", "DEL SimpleName: values", "DEL SimpleName: sqrtSum", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL SimpleName: max", "DEL SimpleName: MatrixNormMapReduce", "DEL MethodDeclaration", "DEL SimpleType: DoubleWritable", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Iterable", "DEL PrimitiveType: byte", "DEL SingleVariableDeclaration", "DEL Dimension", "DEL PrimitiveType: byte", "DEL MarkerAnnotation", "DEL SimpleName: DoubleWritable", "DEL SimpleName: InterruptedException", "DEL SimpleName: nValue", "DEL PrimitiveType: byte", "DEL SimpleName: context", "DEL SimpleName: DoubleWritable", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: NavigableMap", "DEL SimpleName: max", "DEL SimpleType: DoubleWritable", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleType: DoubleWritable", "DEL SimpleName: values", "DEL MethodInvocation", "DEL TextElement: MaxValue Norm Reducer ", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Block", "DEL Dimension", "DEL SimpleName: map", "DEL SimpleType: ImmutableBytesWritable", "DEL NumberLiteral: 0", "DEL SimpleName: TableMapper", "DEL ClassInstanceCreation", "DEL SimpleName: DoubleWritable", "DEL SimpleName: IntWritable", "DEL SimpleName: Math", "DEL Modifier: private", "DEL PrimitiveType: byte", "DEL SingleVariableDeclaration", "DEL Assignment: +=", "DEL SimpleName: value", "DEL SimpleName: DoubleWritable", "DEL PrimitiveType: double", "DEL SimpleName: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL SimpleName: key", "DEL SimpleName: val", "DEL EnhancedForStatement", "DEL MethodDeclaration", "DEL PrimitiveType: double", "DEL SimpleName: e", "DEL SimpleType: InterruptedException", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: abs", "DEL SimpleName: write", "DEL VariableDeclarationFragment", "DEL SimpleName: context", "DEL SimpleName: MatrixInfinityNormReduce", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL SimpleType: NavigableMap", "DEL SimpleName: values", "DEL SimpleName: value", "DEL SimpleName: IOException", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL SimpleName: toDouble", "DEL ArrayType: byte[]", "DEL SimpleName: toDouble", "DEL FieldDeclaration", "DEL SimpleType: InterruptedException", "DEL SimpleType: DoubleWritable", "DEL TagElement", "DEL SimpleName: max", "DEL SimpleType: InterruptedException", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL Modifier: static", "DEL SimpleName: Override", "DEL SimpleType: IntWritable", "DEL SimpleName: e", "DEL SimpleName: values", "DEL SimpleName: context", "DEL SimpleName: e", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: cleanup", "DEL SimpleName: e", "DEL SimpleName: set", "DEL SimpleName: Math", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleType: IOException", "DEL SimpleType: DoubleWritable", "DEL SingleVariableDeclaration", "DEL SimpleName: getValue", "DEL VariableDeclarationFragment", "DEL SimpleName: partialColSum", "DEL MethodInvocation", "DEL SimpleType: DoubleWritable", "DEL Dimension", "DEL Javadoc", "DEL SimpleName: context", "DEL SimpleName: max", "DEL SimpleName: val", "DEL SimpleName: context", "DEL SimpleName: toDouble", "DEL SimpleName: Context", "DEL SimpleName: NavigableMap", "DEL SimpleName: DoubleWritable", "DEL SimpleName: key", "DEL SimpleType: Iterable", "DEL SimpleName: partialColSum", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL ClassInstanceCreation", "DEL SimpleName: nValue", "DEL ParenthesizedExpression", "DEL Javadoc", "DEL SimpleName: IntWritable", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: Context", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL Modifier: private", "DEL PrimitiveType: double", "DEL SimpleName: nValue", "DEL SimpleName: Iterable", "DEL SimpleName: MatrixFrobeniusNormCombiner", "DEL SimpleName: Iterable", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL EnhancedForStatement", "DEL SimpleName: MatrixOneNormCombiner", "DEL SimpleName: cellValue", "DEL SimpleName: get", "DEL SimpleName: entrySet", "DEL SimpleType: TableMapper", "DEL SimpleName: Reducer", "DEL MethodInvocation", "DEL QualifiedName: Map.Entry", "DEL Modifier: private", "DEL ExpressionStatement", "DEL Modifier: private", "DEL SimpleName: IOException", "DEL SimpleName: val", "DEL SimpleName: Logger", "DEL SimpleName: write", "DEL ExpressionStatement", "DEL SimpleName: DoubleWritable", "DEL Block", "DEL MethodInvocation", "DEL TextElement: A Catalog class collect all the mr classes to compute the matrix's norm ", "DEL SimpleName: reduce", "DEL SimpleType: MatrixInfinityNormReduce", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: MatrixFrobeniusNormReducer", "DEL EnhancedForStatement", "DEL Assignment: =", "DEL SimpleName: newkey", "DEL Block", "DEL ParameterizedType: TableMapper<IntWritable,DoubleWritable>", "DEL VariableDeclarationFragment", "DEL SimpleType: DoubleWritable", "DEL TypeDeclaration: class", "DEL Block", "DEL TypeLiteral", "DEL SimpleName: nValue", "DEL Modifier: private", "DEL SimpleName: nValue", "DEL Modifier: public", "DEL Assignment: +=", "DEL SimpleName: context", "DEL SimpleName: max", "DEL SimpleName: Bytes", "DEL SimpleName: write", "DEL TagElement", "DEL SimpleType: IntWritable", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Context", "DEL SimpleName: nValue", "DEL SimpleType: NavigableMap", "DEL PrimitiveType: double", "DEL SimpleName: key", "DEL SimpleName: DoubleWritable", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: DoubleWritable", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SimpleType: Context", "DEL SimpleType: DoubleWritable", "DEL SimpleName: max", "DEL MethodDeclaration", "DEL SimpleName: context", "DEL SimpleName: key", "DEL SimpleName: set", "DEL ClassInstanceCreation", "DEL SimpleType: Reducer", "DEL SimpleName: context", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleName: val", "DEL Block", "DEL SimpleName: sqrtSum", "DEL PrimitiveType: void", "DEL TypeDeclaration: class", "DEL PrimitiveType: byte", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL Block", "DEL SimpleName: v", "DEL SimpleName: context", "DEL SimpleName: write", "DEL Assignment: +=", "DEL SimpleName: Iterable", "DEL SimpleName: IntWritable", "DEL SimpleName: max", "DEL SimpleName: nValue", "DEL SimpleName: values", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL FieldDeclaration", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: context", "DEL NumberLiteral: 0", "DEL EnhancedForStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL Assignment: +=", "DEL SimpleType: DoubleWritable", "DEL PrimitiveType: double", "DEL SimpleType: IOException", "DEL SimpleType: InterruptedException", "DEL SimpleName: v", "DEL TypeDeclaration: class", "DEL SimpleName: Override", "DEL SimpleName: nValue", "DEL SimpleName: rowSqrtSum", "DEL SimpleName: LOG", "DEL Modifier: static", "DEL SimpleType: DoubleWritable", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL SingleVariableDeclaration", "DEL SimpleName: Reducer", "DEL SimpleType: InterruptedException", "DEL PrimitiveType: void", "DEL SimpleType: DoubleWritable", "DEL TypeDeclaration: class", "DEL SimpleName: key", "DEL SimpleType: DoubleWritable", "DEL Modifier: public", "DEL SimpleName: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL Dimension", "DEL SimpleName: IntWritable", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: IntWritable", "DEL SingleVariableDeclaration", "DEL SimpleName: Reducer", "DEL Modifier: public", "DEL SimpleType: DoubleWritable", "DEL SimpleName: getValue", "DEL SimpleType: Context", "DEL SingleVariableDeclaration", "DEL SimpleName: newkey", "DEL Block", "DEL SimpleName: e", "DEL Modifier: public", "DEL SimpleType: Context", "DEL SimpleName: IntWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: DoubleWritable", "DEL SimpleName: IntWritable", "DEL Javadoc", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: TableMapper", "DEL SimpleName: key", "DEL Modifier: public", "DEL SimpleType: IntWritable", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleType: DoubleWritable", "DEL SimpleName: IOException", "DEL SimpleName: MatrixInfinityNormMapper", "DEL Assignment: +=", "DEL SimpleName: getKey", "DEL SimpleName: nValue", "DEL SimpleName: value", "DEL SimpleName: DoubleWritable", "DEL SimpleName: InterruptedException", "DEL SimpleType: DoubleWritable", "DEL SimpleName: v", "DEL SimpleName: val", "DEL SimpleName: rowSum", "DEL SimpleName: DoubleWritable", "DEL ClassInstanceCreation", "DEL SimpleName: entrySet", "DEL ArrayType: byte[]", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL SimpleName: Bytes", "DEL SingleVariableDeclaration", "DEL SimpleType: DoubleWritable", "DEL SimpleName: write", "DEL SimpleType: DoubleWritable", "DEL SimpleName: set", "DEL QualifiedName: Map.Entry", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL NumberLiteral: 1", "DEL Modifier: private", "DEL ArrayType: byte[]", "DEL SimpleName: IntWritable", "DEL SimpleName: map", "DEL Block", "DEL TagElement", "DEL FieldDeclaration", "DEL ArrayType: byte[]", "DEL SimpleName: v", "DEL FieldDeclaration", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: InterruptedException", "DEL SimpleName: val", "DEL SimpleName: TableMapper", "DEL SimpleName: TableMapper", "DEL SimpleName: DoubleWritable", "DEL SimpleName: values", "DEL SimpleType: Reducer", "DEL SimpleName: toDouble", "DEL SimpleType: Context", "DEL SimpleName: v", "DEL TextElement: One Norm Combiner * ", "DEL PrimitiveType: double", "DEL Modifier: static", "DEL SimpleType: IntWritable", "DEL SimpleName: max", "DEL SimpleName: nValue", "DEL SimpleName: context", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL SingleVariableDeclaration", "DEL SimpleName: DoubleWritable", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL SimpleType: Context", "DEL NumberLiteral: 0", "DEL SimpleName: Math", "DEL SimpleName: rowSqrtSum", "DEL MarkerAnnotation", "DEL Dimension", "DEL SimpleName: context", "DEL SimpleName: write", "DEL SimpleName: DoubleWritable", "DEL SimpleType: Iterable", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL ConditionalExpression", "DEL SimpleName: nValue", "DEL PrimitiveType: double", "DEL PrimitiveType: byte", "DEL ArrayType: byte[]", "DEL SimpleName: DoubleWritable", "DEL SimpleName: get", "DEL SimpleName: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: cellValue", "DEL Block", "DEL SimpleName: IntWritable", "DEL SimpleType: IntWritable", "DEL SimpleName: e", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL SimpleName: value", "DEL SimpleName: nValue", "DEL SimpleName: sqrt", "DEL TypeDeclaration: class", "DEL SimpleName: NavigableMap", "DEL SimpleType: DoubleWritable", "DEL SimpleName: write", "DEL SimpleName: abs", "DEL SimpleType: IntWritable", "DEL TextElement: Matrix Infinity Norm Reducer", "DEL SimpleName: Iterable", "DEL SimpleName: sqrtSum", "DEL SimpleType: Map.Entry", "DEL SimpleName: cellValue", "DEL SingleVariableDeclaration", "DEL SimpleName: MatrixMaxValueNormMapper", "DEL Dimension", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Result", "DEL SimpleName: context", "DEL VariableDeclarationFragment", "DEL ParameterizedType: TableMapper<IntWritable,DoubleWritable>", "DEL Modifier: public", "DEL SimpleName: key", "DEL TagElement", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL SimpleName: DoubleWritable", "DEL ClassInstanceCreation", "DEL SimpleType: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: max", "DEL ArrayType: byte[]", "DEL SimpleName: v", "DEL SimpleName: IOException", "DEL SimpleName: Context", "DEL ArrayType: byte[]", "DEL SimpleName: InterruptedException", "DEL SimpleType: IOException", "DEL SimpleType: Iterable", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleType: InterruptedException", "DEL TypeDeclaration: class", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: set", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleType: Iterable", "DEL VariableDeclarationFragment", "DEL SimpleType: InterruptedException", "DEL SimpleName: Context", "DEL Dimension", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: sqrtSum", "DEL SimpleName: values", "DEL SimpleName: DoubleWritable", "DEL SimpleName: InterruptedException", "DEL SimpleName: ImmutableBytesWritable", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL ExpressionStatement", "DEL PrimitiveType: byte", "DEL SimpleName: newkey", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleType: Context", "DEL TextElement: MaxValue Norm Mapper * ", "DEL SimpleName: colSum", "DEL Block", "DEL SimpleName: DoubleWritable", "DEL SimpleName: value", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL SimpleType: TableMapper", "DEL SingleVariableDeclaration", "DEL SimpleType: DoubleWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: sqrtSum", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: Reducer", "DEL SimpleType: Logger", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL SimpleName: DoubleWritable", "DEL SimpleName: nValue", "DEL SimpleName: val", "DEL SimpleName: DoubleWritable", "DEL SingleVariableDeclaration", "DEL SimpleType: InterruptedException", "DEL SimpleType: DoubleWritable", "DEL PrimitiveType: byte", "DEL SimpleName: context", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL SimpleName: max", "DEL SimpleName: set", "DEL VariableDeclarationStatement", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: key", "DEL SimpleType: IntWritable", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL TextElement: Frobenius Norm Combiner ", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: DoubleWritable", "DEL SimpleType: Reducer", "DEL Dimension", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleType: IntWritable", "DEL SimpleName: key", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: val", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL Modifier: private", "DEL NumberLiteral: 0", "DEL SimpleName: cellValue", "DEL VariableDeclarationFragment", "DEL ArrayType: byte[]", "DEL SimpleName: MatrixMaxValueNormReducer", "DEL SimpleName: IntWritable", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL SimpleName: Context", "DEL Dimension", "DEL TextElement: One Norm Reducer * ", "DEL SimpleName: nValue", "DEL SimpleName: e", "DEL SimpleName: reduce", "DEL SimpleName: write", "DEL Modifier: public", "DEL SimpleName: values", "DEL SimpleName: IntWritable", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleType: IntWritable", "DEL SimpleType: Context", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL Javadoc", "DEL ExpressionStatement", "DEL TextElement: Frobenius Norm Reducer ", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL SimpleType: IOException", "DEL SimpleName: MatrixInfinityNormReduce", "DEL SimpleName: Override", "DEL SimpleName: getLogger", "DEL ExpressionStatement", "DEL SimpleType: DoubleWritable", "DEL SimpleName: get", "DEL SimpleName: DoubleWritable", "DEL PrimitiveType: void", "DEL Modifier: static", "DEL SimpleType: Result", "DEL SimpleName: bytesToInt", "DEL SimpleName: getFamilyMap", "DEL ArrayType: byte[]", "DEL SimpleType: IntWritable", "DEL SimpleName: set", "DEL SimpleName: write", "DEL SimpleName: context", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleName: rowSum", "DEL EnhancedForStatement", "DEL SimpleType: DoubleWritable", "DEL SimpleName: reduce", "DEL TextElement: One Norm Mapper ", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL PrimitiveType: double", "DEL SimpleType: DoubleWritable", "DEL SimpleType: DoubleWritable", "DEL Dimension", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL ParameterizedType: NavigableMap<byte[],byte[]>", "DEL SingleVariableDeclaration", "DEL SimpleName: context", "DEL ArrayType: byte[]", "DEL SimpleName: IntWritable", "DEL SimpleName: val", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleType: TableMapper", "DEL MethodDeclaration", "DEL SimpleType: IntWritable", "DEL SimpleName: NavigableMap", "DEL PrimitiveType: byte", "DEL SimpleName: IntWritable", "DEL SimpleType: DoubleWritable", "DEL Assignment: =", "DEL SimpleType: Context", "DEL SimpleName: nValue", "DEL ParameterizedType: TableMapper<IntWritable,DoubleWritable>", "DEL SimpleName: MatrixFrobeniusNormMapper", "DEL SimpleName: nValue", "DEL SimpleName: DoubleWritable", "DEL SimpleName: get", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL SimpleName: context", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL SimpleType: DoubleWritable", "DEL FieldDeclaration", "DEL Javadoc", "DEL SimpleType: IntWritable", "DEL SimpleType: DoubleWritable", "DEL SimpleType: DoubleWritable", "DEL SimpleType: DoubleWritable", "DEL SimpleName: reduce", "DEL SimpleType: IOException", "DEL SimpleType: DoubleWritable", "DEL Dimension", "DEL SimpleType: DoubleWritable", "DEL SimpleType: IOException", "DEL SimpleName: entrySet", "DEL SimpleName: max", "DEL Modifier: public", "DEL SimpleName: v", "DEL SimpleName: sqrtSum", "DEL SimpleType: IntWritable", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: nValue", "DEL SimpleName: max", "DEL Javadoc", "DEL TagElement", "DEL SimpleType: InterruptedException", "DEL SimpleName: MatrixOneNormReducer", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: nValue", "DEL VariableDeclarationStatement", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleType: Result", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL SimpleName: getFamilyMap", "DEL VariableDeclarationFragment", "DEL SimpleName: DoubleWritable", "DEL FieldDeclaration", "DEL SimpleType: InterruptedException", "DEL SingleVariableDeclaration", "DEL SimpleName: nValue", "DEL SimpleName: DoubleWritable", "DEL PrimitiveType: double", "DEL SimpleName: max", "DEL Modifier: public", "DEL SimpleName: getValue", "DEL SimpleType: IntWritable", "DEL SimpleName: IntWritable", "DEL Block", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SimpleName: cellValue", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleName: DoubleWritable", "DEL Modifier: private", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SingleVariableDeclaration", "DEL SimpleName: Context", "DEL NumberLiteral: 0", "DEL Modifier: static", "DEL SimpleType: IntWritable", "DEL SimpleName: DoubleWritable", "DEL SimpleName: IOException", "DEL SimpleName: max", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL Block", "DEL TextElement: Frobenius Norm Mapper ", "DEL ExpressionStatement", "DEL SimpleType: IntWritable", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL SimpleName: max", "DEL ExpressionStatement", "DEL SimpleType: IntWritable", "DEL PrimitiveType: double", "DEL FieldDeclaration", "DEL PrefixExpression: -", "DEL SimpleType: Reducer", "DEL SimpleName: values", "DEL SimpleType: Context", "DEL SimpleName: val", "DEL SimpleName: DoubleWritable", "DEL ArrayType: byte[]", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: reduce", "DEL QualifiedName: Map.Entry", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleType: IntWritable", "DEL SimpleType: IntWritable", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: max", "DEL QualifiedName: MatrixNormMapReduce.nKey", "DEL MethodInvocation", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: Context", "DEL SimpleName: max", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL ParameterizedType: TableMapper<IntWritable,DoubleWritable>", "DEL SimpleType: DoubleWritable", "DEL SimpleName: IntWritable", "DEL Dimension", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL SimpleName: Override", "DEL TypeDeclaration: class", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL TagElement", "DEL Modifier: public", "DEL SimpleType: DoubleWritable", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL VariableDeclarationFragment", "DEL SimpleType: Iterable", "DEL SimpleName: max", "DEL SimpleName: write", "DEL PrimitiveType: void", "DEL SimpleType: DoubleWritable", "DEL SimpleType: Context", "DEL SimpleName: IntWritable", "DEL SimpleName: rowSqrtSum", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL Modifier: final", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL TagElement", "DEL SimpleName: IntWritable", "DEL SimpleType: Map.Entry", "DEL Modifier: public", "DEL TypeDeclaration: class", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: BytesUtil", "DEL PrimitiveType: void", "DEL SimpleType: Map.Entry", "DEL Modifier: static", "DEL Javadoc", "DEL PrimitiveType: byte", "DEL ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>", "DEL VariableDeclarationFragment", "DEL SimpleName: nKey", "DEL SimpleName: DoubleWritable", "DEL SimpleName: Reducer", "DEL SimpleType: ImmutableBytesWritable", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Result", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Context", "DEL SimpleName: colSum", "DEL Block", "DEL QualifiedName: Map.Entry", "DEL SimpleName: InterruptedException", "DEL SimpleName: TableMapper", "DEL SimpleName: IntWritable", "DEL SimpleType: NavigableMap", "DEL SimpleName: Logger", "DEL SimpleName: Reducer", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SimpleType: Iterable", "DEL SimpleType: Context", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL MethodInvocation", "DEL Block", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL SimpleName: getFamilyMap", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: Override", "DEL SimpleName: context", "DEL SimpleName: e", "DEL PrimitiveType: void", "DEL SimpleName: max", "DEL ParameterizedType: Map.Entry<byte[],byte[]>", "DEL SimpleName: key", "DEL ArrayType: byte[]", "DEL SimpleType: IntWritable", "DEL MarkerAnnotation", "DEL SimpleName: Math", "DEL NumberLiteral: 0", "DEL SimpleName: DoubleWritable", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: Override", "DEL SimpleName: ImmutableBytesWritable", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: DoubleWritable", "DEL SimpleName: getValue", "DEL SimpleName: cellValue", "DEL SimpleName: DoubleWritable", "DEL SimpleType: IntWritable", "DEL SimpleName: Context", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL SimpleName: IntWritable", "DEL SimpleName: IOException", "DEL EnhancedForStatement", "DEL SimpleName: IntWritable", "DEL SimpleName: InterruptedException", "DEL ParameterizedType: Iterable<DoubleWritable>", "DEL MethodInvocation", "DEL SimpleName: Math", "DEL ClassInstanceCreation", "DEL SimpleName: InterruptedException", "DEL SimpleName: entrySet", "DEL SimpleName: IntWritable", "DEL SimpleType: Reducer", "DEL SimpleName: Bytes", "DEL SimpleName: IntWritable", "DEL SimpleName: set", "DEL MethodInvocation", "DEL SimpleName: DoubleWritable", "DEL SimpleType: IOException", "DEL ArrayType: byte[]", "DEL SimpleName: InterruptedException", "DEL Modifier: public", "DEL SimpleName: Math", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL ExpressionStatement"]}]}}, {"MatrixNormMapReduce_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Map(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.NavigableMap(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableMapper(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Reducer(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hama.Constants(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.log4j.Logger(26)", "Delete ImportDeclaration(27)", "Delete TextElement: A Catalog class collect all the mr classes to compute the matrix's norm (28)", "Delete TagElement(29)", "Delete Javadoc(30)", "Delete Modifier: public(31)", "Delete SimpleName: MatrixNormMapReduce(32)", "Delete Modifier: public(33)", "Delete Modifier: final(34)", "Delete Modifier: static(35)", "Delete SimpleName: IntWritable(36)", "Delete SimpleType: IntWritable(37)", "Delete SimpleName: nKey(38)", "Delete SimpleName: IntWritable(39)", "Delete SimpleType: IntWritable(40)", "Delete NumberLiteral: 1(41)", "Delete PrefixExpression: -(42)", "Delete ClassInstanceCreation(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete TextElement: Infinity Norm (46)", "Delete TagElement(47)", "Delete Javadoc(48)", "Delete Modifier: public(49)", "Delete Modifier: static(50)", "Delete SimpleName: MatrixInfinityNormMapper(51)", "Delete SimpleName: TableMapper(52)", "Delete SimpleType: TableMapper(53)", "Delete SimpleName: IntWritable(54)", "Delete SimpleType: IntWritable(55)", "Delete SimpleName: DoubleWritable(56)", "Delete SimpleType: DoubleWritable(57)", "Delete ParameterizedType: TableMapper<IntWritable,DoubleWritable>(58)", "Delete Modifier: private(59)", "Delete SimpleName: DoubleWritable(60)", "Delete SimpleType: DoubleWritable(61)", "Delete SimpleName: nValue(62)", "Delete SimpleName: DoubleWritable(63)", "Delete SimpleType: DoubleWritable(64)", "Delete ClassInstanceCreation(65)", "Delete VariableDeclarationFragment(66)", "Delete FieldDeclaration(67)", "Delete SimpleName: Override(68)", "Delete MarkerAnnotation(69)", "Delete Modifier: public(70)", "Delete PrimitiveType: void(71)", "Delete SimpleName: map(72)", "Delete SimpleName: ImmutableBytesWritable(73)", "Delete SimpleType: ImmutableBytesWritable(74)", "Delete SimpleName: key(75)", "Delete SingleVariableDeclaration(76)", "Delete SimpleName: Result(77)", "Delete SimpleType: Result(78)", "Delete SimpleName: value(79)", "Delete SingleVariableDeclaration(80)", "Delete SimpleName: Context(81)", "Delete SimpleType: Context(82)", "Delete SimpleName: context(83)", "Delete SingleVariableDeclaration(84)", "Delete SimpleName: IOException(85)", "Delete SimpleType: IOException(86)", "Delete SimpleName: InterruptedException(87)", "Delete SimpleType: InterruptedException(88)", "Delete PrimitiveType: double(89)", "Delete SimpleName: rowSum(90)", "Delete NumberLiteral: 0(91)", "Delete VariableDeclarationFragment(92)", "Delete VariableDeclarationStatement(93)", "Delete SimpleName: NavigableMap(94)", "Delete SimpleType: NavigableMap(95)", "Delete PrimitiveType: byte(96)", "Delete Dimension(97)", "Delete ArrayType: byte[](98)", "Delete PrimitiveType: byte(99)", "Delete Dimension(100)", "Delete ArrayType: byte[](101)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(102)", "Delete SimpleName: v(103)", "Delete SimpleName: value(104)", "Delete SimpleName: getFamilyMap(105)", "Delete QualifiedName: Constants.COLUMNFAMILY(106)", "Delete MethodInvocation(107)", "Delete VariableDeclarationFragment(108)", "Delete VariableDeclarationStatement(109)", "Delete QualifiedName: Map.Entry(110)", "Delete SimpleType: Map.Entry(111)", "Delete PrimitiveType: byte(112)", "Delete Dimension(113)", "Delete ArrayType: byte[](114)", "Delete PrimitiveType: byte(115)", "Delete Dimension(116)", "Delete ArrayType: byte[](117)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(118)", "Delete SimpleName: e(119)", "Delete SingleVariableDeclaration(120)", "Delete SimpleName: v(121)", "Delete SimpleName: entrySet(122)", "Delete MethodInvocation(123)", "Delete SimpleName: rowSum(124)", "Delete SimpleName: Math(125)", "Delete SimpleName: abs(126)", "Delete SimpleName: Bytes(127)", "Delete SimpleName: toDouble(128)", "Delete SimpleName: e(129)", "Delete SimpleName: getValue(130)", "Delete MethodInvocation(131)", "Delete MethodInvocation(132)", "Delete MethodInvocation(133)", "Delete Assignment: +=(134)", "Delete ExpressionStatement(135)", "Delete Block(136)", "Delete EnhancedForStatement(137)", "Delete SimpleName: nValue(138)", "Delete SimpleName: set(139)", "Delete SimpleName: rowSum(140)", "Delete MethodInvocation(141)", "Delete ExpressionStatement(142)", "Delete SimpleName: context(143)", "Delete SimpleName: write(144)", "Delete QualifiedName: MatrixNormMapReduce.nKey(145)", "Delete SimpleName: nValue(146)", "Delete MethodInvocation(147)", "Delete ExpressionStatement(148)", "Delete Block(149)", "Delete MethodDeclaration(150)", "Delete TypeDeclaration: class(151)", "Delete TextElement: Matrix Infinity Norm Reducer(152)", "Delete TagElement(153)", "Delete Javadoc(154)", "Delete Modifier: public(155)", "Delete Modifier: static(156)", "Delete SimpleName: MatrixInfinityNormReduce(157)", "Delete SimpleName: Reducer(158)", "Delete SimpleType: Reducer(159)", "Delete SimpleName: IntWritable(160)", "Delete SimpleType: IntWritable(161)", "Delete SimpleName: DoubleWritable(162)", "Delete SimpleType: DoubleWritable(163)", "Delete SimpleName: IntWritable(164)", "Delete SimpleType: IntWritable(165)", "Delete SimpleName: DoubleWritable(166)", "Delete SimpleType: DoubleWritable(167)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(168)", "Delete Modifier: static(169)", "Delete Modifier: final(170)", "Delete SimpleName: Logger(171)", "Delete SimpleType: Logger(172)", "Delete SimpleName: LOG(173)", "Delete SimpleName: Logger(174)", "Delete SimpleName: getLogger(175)", "Delete SimpleName: MatrixInfinityNormReduce(176)", "Delete SimpleType: MatrixInfinityNormReduce(177)", "Delete TypeLiteral(178)", "Delete MethodInvocation(179)", "Delete VariableDeclarationFragment(180)", "Delete FieldDeclaration(181)", "Delete Modifier: private(182)", "Delete PrimitiveType: double(183)", "Delete SimpleName: max(184)", "Delete NumberLiteral: 0(185)", "Delete VariableDeclarationFragment(186)", "Delete FieldDeclaration(187)", "Delete Modifier: private(188)", "Delete SimpleName: DoubleWritable(189)", "Delete SimpleType: DoubleWritable(190)", "Delete SimpleName: nValue(191)", "Delete SimpleName: DoubleWritable(192)", "Delete SimpleType: DoubleWritable(193)", "Delete ClassInstanceCreation(194)", "Delete VariableDeclarationFragment(195)", "Delete FieldDeclaration(196)", "Delete Modifier: public(197)", "Delete PrimitiveType: void(198)", "Delete SimpleName: reduce(199)", "Delete SimpleName: IntWritable(200)", "Delete SimpleType: IntWritable(201)", "Delete SimpleName: key(202)", "Delete SingleVariableDeclaration(203)", "Delete SimpleName: Iterable(204)", "Delete SimpleType: Iterable(205)", "Delete SimpleName: DoubleWritable(206)", "Delete SimpleType: DoubleWritable(207)", "Delete ParameterizedType: Iterable<DoubleWritable>(208)", "Delete SimpleName: values(209)", "Delete SingleVariableDeclaration(210)", "Delete SimpleName: Context(211)", "Delete SimpleType: Context(212)", "Delete SimpleName: context(213)", "Delete SingleVariableDeclaration(214)", "Delete SimpleName: IOException(215)", "Delete SimpleType: IOException(216)", "Delete SimpleName: InterruptedException(217)", "Delete SimpleType: InterruptedException(218)", "Delete SimpleName: DoubleWritable(219)", "Delete SimpleType: DoubleWritable(220)", "Delete SimpleName: val(221)", "Delete SingleVariableDeclaration(222)", "Delete SimpleName: values(223)", "Delete SimpleName: max(224)", "Delete SimpleName: Math(225)", "Delete SimpleName: max(226)", "Delete SimpleName: val(227)", "Delete SimpleName: get(228)", "Delete MethodInvocation(229)", "Delete SimpleName: max(230)", "Delete MethodInvocation(231)", "Delete Assignment: =(232)", "Delete ExpressionStatement(233)", "Delete Block(234)", "Delete EnhancedForStatement(235)", "Delete SimpleName: nValue(236)", "Delete SimpleName: set(237)", "Delete SimpleName: max(238)", "Delete MethodInvocation(239)", "Delete ExpressionStatement(240)", "Delete SimpleName: context(241)", "Delete SimpleName: write(242)", "Delete QualifiedName: MatrixNormMapReduce.nKey(243)", "Delete SimpleName: nValue(244)", "Delete MethodInvocation(245)", "Delete ExpressionStatement(246)", "Delete Block(247)", "Delete MethodDeclaration(248)", "Delete TypeDeclaration: class(249)", "Delete TextElement: One Norm Mapper (250)", "Delete TagElement(251)", "Delete Javadoc(252)", "Delete Modifier: public(253)", "Delete Modifier: static(254)", "Delete SimpleName: MatrixOneNormMapper(255)", "Delete SimpleName: TableMapper(256)", "Delete SimpleType: TableMapper(257)", "Delete SimpleName: IntWritable(258)", "Delete SimpleType: IntWritable(259)", "Delete SimpleName: DoubleWritable(260)", "Delete SimpleType: DoubleWritable(261)", "Delete ParameterizedType: TableMapper<IntWritable,DoubleWritable>(262)", "Delete Modifier: private(263)", "Delete SimpleName: IntWritable(264)", "Delete SimpleType: IntWritable(265)", "Delete SimpleName: newkey(266)", "Delete SimpleName: IntWritable(267)", "Delete SimpleType: IntWritable(268)", "Delete ClassInstanceCreation(269)", "Delete VariableDeclarationFragment(270)", "Delete FieldDeclaration(271)", "Delete Modifier: private(272)", "Delete SimpleName: DoubleWritable(273)", "Delete SimpleType: DoubleWritable(274)", "Delete SimpleName: nValue(275)", "Delete SimpleName: DoubleWritable(276)", "Delete SimpleType: DoubleWritable(277)", "Delete ClassInstanceCreation(278)", "Delete VariableDeclarationFragment(279)", "Delete FieldDeclaration(280)", "Delete SimpleName: Override(281)", "Delete MarkerAnnotation(282)", "Delete Modifier: public(283)", "Delete PrimitiveType: void(284)", "Delete SimpleName: map(285)", "Delete SimpleName: ImmutableBytesWritable(286)", "Delete SimpleType: ImmutableBytesWritable(287)", "Delete SimpleName: key(288)", "Delete SingleVariableDeclaration(289)", "Delete SimpleName: Result(290)", "Delete SimpleType: Result(291)", "Delete SimpleName: value(292)", "Delete SingleVariableDeclaration(293)", "Delete SimpleName: Context(294)", "Delete SimpleType: Context(295)", "Delete SimpleName: context(296)", "Delete SingleVariableDeclaration(297)", "Delete SimpleName: IOException(298)", "Delete SimpleType: IOException(299)", "Delete SimpleName: InterruptedException(300)", "Delete SimpleType: InterruptedException(301)", "Delete SimpleName: NavigableMap(302)", "Delete SimpleType: NavigableMap(303)", "Delete PrimitiveType: byte(304)", "Delete Dimension(305)", "Delete ArrayType: byte[](306)", "Delete PrimitiveType: byte(307)", "Delete Dimension(308)", "Delete ArrayType: byte[](309)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(310)", "Delete SimpleName: v(311)", "Delete SimpleName: value(312)", "Delete SimpleName: getFamilyMap(313)", "Delete QualifiedName: Constants.COLUMNFAMILY(314)", "Delete MethodInvocation(315)", "Delete VariableDeclarationFragment(316)", "Delete VariableDeclarationStatement(317)", "Delete QualifiedName: Map.Entry(318)", "Delete SimpleType: Map.Entry(319)", "Delete PrimitiveType: byte(320)", "Delete Dimension(321)", "Delete ArrayType: byte[](322)", "Delete PrimitiveType: byte(323)", "Delete Dimension(324)", "Delete ArrayType: byte[](325)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(326)", "Delete SimpleName: e(327)", "Delete SingleVariableDeclaration(328)", "Delete SimpleName: v(329)", "Delete SimpleName: entrySet(330)", "Delete MethodInvocation(331)", "Delete SimpleName: newkey(332)", "Delete SimpleName: set(333)", "Delete SimpleName: BytesUtil(334)", "Delete SimpleName: bytesToInt(335)", "Delete SimpleName: e(336)", "Delete SimpleName: getKey(337)", "Delete MethodInvocation(338)", "Delete MethodInvocation(339)", "Delete MethodInvocation(340)", "Delete ExpressionStatement(341)", "Delete SimpleName: nValue(342)", "Delete SimpleName: set(343)", "Delete SimpleName: Bytes(344)", "Delete SimpleName: toDouble(345)", "Delete SimpleName: e(346)", "Delete SimpleName: getValue(347)", "Delete MethodInvocation(348)", "Delete MethodInvocation(349)", "Delete MethodInvocation(350)", "Delete ExpressionStatement(351)", "Delete SimpleName: context(352)", "Delete SimpleName: write(353)", "Delete SimpleName: newkey(354)", "Delete SimpleName: nValue(355)", "Delete MethodInvocation(356)", "Delete ExpressionStatement(357)", "Delete Block(358)", "Delete EnhancedForStatement(359)", "Delete Block(360)", "Delete MethodDeclaration(361)", "Delete TypeDeclaration: class(362)", "Delete TextElement: One Norm Combiner * (363)", "Delete TagElement(364)", "Delete Javadoc(365)", "Delete Modifier: public(366)", "Delete Modifier: static(367)", "Delete SimpleName: MatrixOneNormCombiner(368)", "Delete SimpleName: Reducer(369)", "Delete SimpleType: Reducer(370)", "Delete SimpleName: IntWritable(371)", "Delete SimpleType: IntWritable(372)", "Delete SimpleName: DoubleWritable(373)", "Delete SimpleType: DoubleWritable(374)", "Delete SimpleName: IntWritable(375)", "Delete SimpleType: IntWritable(376)", "Delete SimpleName: DoubleWritable(377)", "Delete SimpleType: DoubleWritable(378)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(379)", "Delete Modifier: private(380)", "Delete SimpleName: DoubleWritable(381)", "Delete SimpleType: DoubleWritable(382)", "Delete SimpleName: nValue(383)", "Delete SimpleName: DoubleWritable(384)", "Delete SimpleType: DoubleWritable(385)", "Delete ClassInstanceCreation(386)", "Delete VariableDeclarationFragment(387)", "Delete FieldDeclaration(388)", "Delete SimpleName: Override(389)", "Delete MarkerAnnotation(390)", "Delete Modifier: public(391)", "Delete PrimitiveType: void(392)", "Delete SimpleName: reduce(393)", "Delete SimpleName: IntWritable(394)", "Delete SimpleType: IntWritable(395)", "Delete SimpleName: key(396)", "Delete SingleVariableDeclaration(397)", "Delete SimpleName: Iterable(398)", "Delete SimpleType: Iterable(399)", "Delete SimpleName: DoubleWritable(400)", "Delete SimpleType: DoubleWritable(401)", "Delete ParameterizedType: Iterable<DoubleWritable>(402)", "Delete SimpleName: values(403)", "Delete SingleVariableDeclaration(404)", "Delete SimpleName: Context(405)", "Delete SimpleType: Context(406)", "Delete SimpleName: context(407)", "Delete SingleVariableDeclaration(408)", "Delete SimpleName: IOException(409)", "Delete SimpleType: IOException(410)", "Delete SimpleName: InterruptedException(411)", "Delete SimpleType: InterruptedException(412)", "Delete PrimitiveType: double(413)", "Delete SimpleName: partialColSum(414)", "Delete NumberLiteral: 0(415)", "Delete VariableDeclarationFragment(416)", "Delete VariableDeclarationStatement(417)", "Delete SimpleName: DoubleWritable(418)", "Delete SimpleType: DoubleWritable(419)", "Delete SimpleName: val(420)", "Delete SingleVariableDeclaration(421)", "Delete SimpleName: values(422)", "Delete SimpleName: partialColSum(423)", "Delete SimpleName: val(424)", "Delete SimpleName: get(425)", "Delete MethodInvocation(426)", "Delete Assignment: +=(427)", "Delete ExpressionStatement(428)", "Delete Block(429)", "Delete EnhancedForStatement(430)", "Delete SimpleName: nValue(431)", "Delete SimpleName: set(432)", "Delete SimpleName: partialColSum(433)", "Delete MethodInvocation(434)", "Delete ExpressionStatement(435)", "Delete SimpleName: context(436)", "Delete SimpleName: write(437)", "Delete SimpleName: key(438)", "Delete SimpleName: nValue(439)", "Delete MethodInvocation(440)", "Delete ExpressionStatement(441)", "Delete Block(442)", "Delete MethodDeclaration(443)", "Delete TypeDeclaration: class(444)", "Delete TextElement: One Norm Reducer * (445)", "Delete TagElement(446)", "Delete Javadoc(447)", "Delete Modifier: public(448)", "Delete Modifier: static(449)", "Delete SimpleName: MatrixOneNormReducer(450)", "Delete SimpleName: Reducer(451)", "Delete SimpleType: Reducer(452)", "Delete SimpleName: IntWritable(453)", "Delete SimpleType: IntWritable(454)", "Delete SimpleName: DoubleWritable(455)", "Delete SimpleType: DoubleWritable(456)", "Delete SimpleName: IntWritable(457)", "Delete SimpleType: IntWritable(458)", "Delete SimpleName: DoubleWritable(459)", "Delete SimpleType: DoubleWritable(460)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(461)", "Delete Modifier: private(462)", "Delete PrimitiveType: double(463)", "Delete SimpleName: max(464)", "Delete NumberLiteral: 0(465)", "Delete VariableDeclarationFragment(466)", "Delete FieldDeclaration(467)", "Delete SimpleName: Override(468)", "Delete MarkerAnnotation(469)", "Delete Modifier: public(470)", "Delete PrimitiveType: void(471)", "Delete SimpleName: reduce(472)", "Delete SimpleName: IntWritable(473)", "Delete SimpleType: IntWritable(474)", "Delete SimpleName: key(475)", "Delete SingleVariableDeclaration(476)", "Delete SimpleName: Iterable(477)", "Delete SimpleType: Iterable(478)", "Delete SimpleName: DoubleWritable(479)", "Delete SimpleType: DoubleWritable(480)", "Delete ParameterizedType: Iterable<DoubleWritable>(481)", "Delete SimpleName: values(482)", "Delete SingleVariableDeclaration(483)", "Delete SimpleName: Context(484)", "Delete SimpleType: Context(485)", "Delete SimpleName: context(486)", "Delete SingleVariableDeclaration(487)", "Delete SimpleName: IOException(488)", "Delete SimpleType: IOException(489)", "Delete SimpleName: InterruptedException(490)", "Delete SimpleType: InterruptedException(491)", "Delete PrimitiveType: double(492)", "Delete SimpleName: colSum(493)", "Delete NumberLiteral: 0(494)", "Delete VariableDeclarationFragment(495)", "Delete VariableDeclarationStatement(496)", "Delete SimpleName: DoubleWritable(497)", "Delete SimpleType: DoubleWritable(498)", "Delete SimpleName: val(499)", "Delete SingleVariableDeclaration(500)", "Delete SimpleName: values(501)", "Delete SimpleName: colSum(502)", "Delete SimpleName: val(503)", "Delete SimpleName: get(504)", "Delete MethodInvocation(505)", "Delete Assignment: +=(506)", "Delete ExpressionStatement(507)", "Delete Block(508)", "Delete EnhancedForStatement(509)", "Delete SimpleName: max(510)", "Delete SimpleName: Math(511)", "Delete SimpleName: max(512)", "Delete SimpleName: Math(513)", "Delete SimpleName: abs(514)", "Delete SimpleName: colSum(515)", "Delete MethodInvocation(516)", "Delete SimpleName: max(517)", "Delete MethodInvocation(518)", "Delete Assignment: =(519)", "Delete ExpressionStatement(520)", "Delete Block(521)", "Delete MethodDeclaration(522)", "Delete Modifier: public(523)", "Delete PrimitiveType: void(524)", "Delete SimpleName: cleanup(525)", "Delete SimpleName: Context(526)", "Delete SimpleType: Context(527)", "Delete SimpleName: context(528)", "Delete SingleVariableDeclaration(529)", "Delete SimpleName: IOException(530)", "Delete SimpleType: IOException(531)", "Delete SimpleName: InterruptedException(532)", "Delete SimpleType: InterruptedException(533)", "Delete SimpleName: context(534)", "Delete SimpleName: write(535)", "Delete QualifiedName: MatrixNormMapReduce.nKey(536)", "Delete SimpleName: DoubleWritable(537)", "Delete SimpleType: DoubleWritable(538)", "Delete SimpleName: max(539)", "Delete ClassInstanceCreation(540)", "Delete MethodInvocation(541)", "Delete ExpressionStatement(542)", "Delete Block(543)", "Delete MethodDeclaration(544)", "Delete TypeDeclaration: class(545)", "Delete TextElement: Frobenius Norm Mapper (546)", "Delete TagElement(547)", "Delete Javadoc(548)", "Delete Modifier: public(549)", "Delete Modifier: static(550)", "Delete SimpleName: MatrixFrobeniusNormMapper(551)", "Delete SimpleName: TableMapper(552)", "Delete SimpleType: TableMapper(553)", "Delete SimpleName: IntWritable(554)", "Delete SimpleType: IntWritable(555)", "Delete SimpleName: DoubleWritable(556)", "Delete SimpleType: DoubleWritable(557)", "Delete ParameterizedType: TableMapper<IntWritable,DoubleWritable>(558)", "Delete Modifier: private(559)", "Delete SimpleName: DoubleWritable(560)", "Delete SimpleType: DoubleWritable(561)", "Delete SimpleName: nValue(562)", "Delete SimpleName: DoubleWritable(563)", "Delete SimpleType: DoubleWritable(564)", "Delete ClassInstanceCreation(565)", "Delete VariableDeclarationFragment(566)", "Delete FieldDeclaration(567)", "Delete SimpleName: Override(568)", "Delete MarkerAnnotation(569)", "Delete Modifier: public(570)", "Delete PrimitiveType: void(571)", "Delete SimpleName: map(572)", "Delete SimpleName: ImmutableBytesWritable(573)", "Delete SimpleType: ImmutableBytesWritable(574)", "Delete SimpleName: key(575)", "Delete SingleVariableDeclaration(576)", "Delete SimpleName: Result(577)", "Delete SimpleType: Result(578)", "Delete SimpleName: value(579)", "Delete SingleVariableDeclaration(580)", "Delete SimpleName: Context(581)", "Delete SimpleType: Context(582)", "Delete SimpleName: context(583)", "Delete SingleVariableDeclaration(584)", "Delete SimpleName: IOException(585)", "Delete SimpleType: IOException(586)", "Delete SimpleName: InterruptedException(587)", "Delete SimpleType: InterruptedException(588)", "Delete PrimitiveType: double(589)", "Delete SimpleName: rowSqrtSum(590)", "Delete NumberLiteral: 0(591)", "Delete VariableDeclarationFragment(592)", "Delete VariableDeclarationStatement(593)", "Delete SimpleName: NavigableMap(594)", "Delete SimpleType: NavigableMap(595)", "Delete PrimitiveType: byte(596)", "Delete Dimension(597)", "Delete ArrayType: byte[](598)", "Delete PrimitiveType: byte(599)", "Delete Dimension(600)", "Delete ArrayType: byte[](601)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(602)", "Delete SimpleName: v(603)", "Delete SimpleName: value(604)", "Delete SimpleName: getFamilyMap(605)", "Delete QualifiedName: Constants.COLUMNFAMILY(606)", "Delete MethodInvocation(607)", "Delete VariableDeclarationFragment(608)", "Delete VariableDeclarationStatement(609)", "Delete QualifiedName: Map.Entry(610)", "Delete SimpleType: Map.Entry(611)", "Delete PrimitiveType: byte(612)", "Delete Dimension(613)", "Delete ArrayType: byte[](614)", "Delete PrimitiveType: byte(615)", "Delete Dimension(616)", "Delete ArrayType: byte[](617)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(618)", "Delete SimpleName: e(619)", "Delete SingleVariableDeclaration(620)", "Delete SimpleName: v(621)", "Delete SimpleName: entrySet(622)", "Delete MethodInvocation(623)", "Delete PrimitiveType: double(624)", "Delete SimpleName: cellValue(625)", "Delete SimpleName: Bytes(626)", "Delete SimpleName: toDouble(627)", "Delete SimpleName: e(628)", "Delete SimpleName: getValue(629)", "Delete MethodInvocation(630)", "Delete MethodInvocation(631)", "Delete VariableDeclarationFragment(632)", "Delete VariableDeclarationStatement(633)", "Delete SimpleName: rowSqrtSum(634)", "Delete SimpleName: cellValue(635)", "Delete SimpleName: cellValue(636)", "Delete InfixExpression: *(637)", "Delete ParenthesizedExpression(638)", "Delete Assignment: +=(639)", "Delete ExpressionStatement(640)", "Delete Block(641)", "Delete EnhancedForStatement(642)", "Delete SimpleName: nValue(643)", "Delete SimpleName: set(644)", "Delete SimpleName: rowSqrtSum(645)", "Delete MethodInvocation(646)", "Delete ExpressionStatement(647)", "Delete SimpleName: context(648)", "Delete SimpleName: write(649)", "Delete QualifiedName: MatrixNormMapReduce.nKey(650)", "Delete SimpleName: nValue(651)", "Delete MethodInvocation(652)", "Delete ExpressionStatement(653)", "Delete Block(654)", "Delete MethodDeclaration(655)", "Delete TypeDeclaration: class(656)", "Delete TextElement: Frobenius Norm Combiner (657)", "Delete TagElement(658)", "Delete Javadoc(659)", "Delete Modifier: public(660)", "Delete Modifier: static(661)", "Delete SimpleName: MatrixFrobeniusNormCombiner(662)", "Delete SimpleName: Reducer(663)", "Delete SimpleType: Reducer(664)", "Delete SimpleName: IntWritable(665)", "Delete SimpleType: IntWritable(666)", "Delete SimpleName: DoubleWritable(667)", "Delete SimpleType: DoubleWritable(668)", "Delete SimpleName: IntWritable(669)", "Delete SimpleType: IntWritable(670)", "Delete SimpleName: DoubleWritable(671)", "Delete SimpleType: DoubleWritable(672)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(673)", "Delete Modifier: private(674)", "Delete PrimitiveType: double(675)", "Delete SimpleName: sqrtSum(676)", "Delete NumberLiteral: 0(677)", "Delete VariableDeclarationFragment(678)", "Delete FieldDeclaration(679)", "Delete Modifier: private(680)", "Delete SimpleName: DoubleWritable(681)", "Delete SimpleType: DoubleWritable(682)", "Delete SimpleName: nValue(683)", "Delete SimpleName: DoubleWritable(684)", "Delete SimpleType: DoubleWritable(685)", "Delete ClassInstanceCreation(686)", "Delete VariableDeclarationFragment(687)", "Delete FieldDeclaration(688)", "Delete SimpleName: Override(689)", "Delete MarkerAnnotation(690)", "Delete Modifier: public(691)", "Delete PrimitiveType: void(692)", "Delete SimpleName: reduce(693)", "Delete SimpleName: IntWritable(694)", "Delete SimpleType: IntWritable(695)", "Delete SimpleName: key(696)", "Delete SingleVariableDeclaration(697)", "Delete SimpleName: Iterable(698)", "Delete SimpleType: Iterable(699)", "Delete SimpleName: DoubleWritable(700)", "Delete SimpleType: DoubleWritable(701)", "Delete ParameterizedType: Iterable<DoubleWritable>(702)", "Delete SimpleName: values(703)", "Delete SingleVariableDeclaration(704)", "Delete SimpleName: Context(705)", "Delete SimpleType: Context(706)", "Delete SimpleName: context(707)", "Delete SingleVariableDeclaration(708)", "Delete SimpleName: IOException(709)", "Delete SimpleType: IOException(710)", "Delete SimpleName: InterruptedException(711)", "Delete SimpleType: InterruptedException(712)", "Delete SimpleName: DoubleWritable(713)", "Delete SimpleType: DoubleWritable(714)", "Delete SimpleName: val(715)", "Delete SingleVariableDeclaration(716)", "Delete SimpleName: values(717)", "Delete SimpleName: sqrtSum(718)", "Delete SimpleName: val(719)", "Delete SimpleName: get(720)", "Delete MethodInvocation(721)", "Delete Assignment: +=(722)", "Delete ExpressionStatement(723)", "Delete Block(724)", "Delete EnhancedForStatement(725)", "Delete SimpleName: nValue(726)", "Delete SimpleName: set(727)", "Delete SimpleName: sqrtSum(728)", "Delete MethodInvocation(729)", "Delete ExpressionStatement(730)", "Delete SimpleName: context(731)", "Delete SimpleName: write(732)", "Delete QualifiedName: MatrixNormMapReduce.nKey(733)", "Delete SimpleName: nValue(734)", "Delete MethodInvocation(735)", "Delete ExpressionStatement(736)", "Delete Block(737)", "Delete MethodDeclaration(738)", "Delete TypeDeclaration: class(739)", "Delete TextElement: Frobenius Norm Reducer (740)", "Delete TagElement(741)", "Delete Javadoc(742)", "Delete Modifier: public(743)", "Delete Modifier: static(744)", "Delete SimpleName: MatrixFrobeniusNormReducer(745)", "Delete SimpleName: Reducer(746)", "Delete SimpleType: Reducer(747)", "Delete SimpleName: IntWritable(748)", "Delete SimpleType: IntWritable(749)", "Delete SimpleName: DoubleWritable(750)", "Delete SimpleType: DoubleWritable(751)", "Delete SimpleName: IntWritable(752)", "Delete SimpleType: IntWritable(753)", "Delete SimpleName: DoubleWritable(754)", "Delete SimpleType: DoubleWritable(755)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(756)", "Delete Modifier: private(757)", "Delete PrimitiveType: double(758)", "Delete SimpleName: sqrtSum(759)", "Delete NumberLiteral: 0(760)", "Delete VariableDeclarationFragment(761)", "Delete FieldDeclaration(762)", "Delete SimpleName: Override(763)", "Delete MarkerAnnotation(764)", "Delete Modifier: public(765)", "Delete PrimitiveType: void(766)", "Delete SimpleName: reduce(767)", "Delete SimpleName: IntWritable(768)", "Delete SimpleType: IntWritable(769)", "Delete SimpleName: key(770)", "Delete SingleVariableDeclaration(771)", "Delete SimpleName: Iterable(772)", "Delete SimpleType: Iterable(773)", "Delete SimpleName: DoubleWritable(774)", "Delete SimpleType: DoubleWritable(775)", "Delete ParameterizedType: Iterable<DoubleWritable>(776)", "Delete SimpleName: values(777)", "Delete SingleVariableDeclaration(778)", "Delete SimpleName: Context(779)", "Delete SimpleType: Context(780)", "Delete SimpleName: context(781)", "Delete SingleVariableDeclaration(782)", "Delete SimpleName: IOException(783)", "Delete SimpleType: IOException(784)", "Delete SimpleName: InterruptedException(785)", "Delete SimpleType: InterruptedException(786)", "Delete SimpleName: DoubleWritable(787)", "Delete SimpleType: DoubleWritable(788)", "Delete SimpleName: val(789)", "Delete SingleVariableDeclaration(790)", "Delete SimpleName: values(791)", "Delete SimpleName: sqrtSum(792)", "Delete SimpleName: val(793)", "Delete SimpleName: get(794)", "Delete MethodInvocation(795)", "Delete Assignment: +=(796)", "Delete ExpressionStatement(797)", "Delete Block(798)", "Delete EnhancedForStatement(799)", "Delete SimpleName: context(800)", "Delete SimpleName: write(801)", "Delete QualifiedName: MatrixNormMapReduce.nKey(802)", "Delete SimpleName: DoubleWritable(803)", "Delete SimpleType: DoubleWritable(804)", "Delete SimpleName: Math(805)", "Delete SimpleName: sqrt(806)", "Delete SimpleName: sqrtSum(807)", "Delete MethodInvocation(808)", "Delete ClassInstanceCreation(809)", "Delete MethodInvocation(810)", "Delete ExpressionStatement(811)", "Delete Block(812)", "Delete MethodDeclaration(813)", "Delete TypeDeclaration: class(814)", "Delete TextElement: MaxValue Norm Mapper * (815)", "Delete TagElement(816)", "Delete Javadoc(817)", "Delete Modifier: public(818)", "Delete Modifier: static(819)", "Delete SimpleName: MatrixMaxValueNormMapper(820)", "Delete SimpleName: TableMapper(821)", "Delete SimpleType: TableMapper(822)", "Delete SimpleName: IntWritable(823)", "Delete SimpleType: IntWritable(824)", "Delete SimpleName: DoubleWritable(825)", "Delete SimpleType: DoubleWritable(826)", "Delete ParameterizedType: TableMapper<IntWritable,DoubleWritable>(827)", "Delete Modifier: private(828)", "Delete SimpleName: DoubleWritable(829)", "Delete SimpleType: DoubleWritable(830)", "Delete SimpleName: nValue(831)", "Delete SimpleName: DoubleWritable(832)", "Delete SimpleType: DoubleWritable(833)", "Delete ClassInstanceCreation(834)", "Delete VariableDeclarationFragment(835)", "Delete FieldDeclaration(836)", "Delete SimpleName: Override(837)", "Delete MarkerAnnotation(838)", "Delete Modifier: public(839)", "Delete PrimitiveType: void(840)", "Delete SimpleName: map(841)", "Delete SimpleName: ImmutableBytesWritable(842)", "Delete SimpleType: ImmutableBytesWritable(843)", "Delete SimpleName: key(844)", "Delete SingleVariableDeclaration(845)", "Delete SimpleName: Result(846)", "Delete SimpleType: Result(847)", "Delete SimpleName: value(848)", "Delete SingleVariableDeclaration(849)", "Delete SimpleName: Context(850)", "Delete SimpleType: Context(851)", "Delete SimpleName: context(852)", "Delete SingleVariableDeclaration(853)", "Delete SimpleName: IOException(854)", "Delete SimpleType: IOException(855)", "Delete SimpleName: InterruptedException(856)", "Delete SimpleType: InterruptedException(857)", "Delete PrimitiveType: double(858)", "Delete SimpleName: max(859)", "Delete NumberLiteral: 0(860)", "Delete VariableDeclarationFragment(861)", "Delete VariableDeclarationStatement(862)", "Delete SimpleName: NavigableMap(863)", "Delete SimpleType: NavigableMap(864)", "Delete PrimitiveType: byte(865)", "Delete Dimension(866)", "Delete ArrayType: byte[](867)", "Delete PrimitiveType: byte(868)", "Delete Dimension(869)", "Delete ArrayType: byte[](870)", "Delete ParameterizedType: NavigableMap<byte[],byte[]>(871)", "Delete SimpleName: v(872)", "Delete SimpleName: value(873)", "Delete SimpleName: getFamilyMap(874)", "Delete QualifiedName: Constants.COLUMNFAMILY(875)", "Delete MethodInvocation(876)", "Delete VariableDeclarationFragment(877)", "Delete VariableDeclarationStatement(878)", "Delete QualifiedName: Map.Entry(879)", "Delete SimpleType: Map.Entry(880)", "Delete PrimitiveType: byte(881)", "Delete Dimension(882)", "Delete ArrayType: byte[](883)", "Delete PrimitiveType: byte(884)", "Delete Dimension(885)", "Delete ArrayType: byte[](886)", "Delete ParameterizedType: Map.Entry<byte[],byte[]>(887)", "Delete SimpleName: e(888)", "Delete SingleVariableDeclaration(889)", "Delete SimpleName: v(890)", "Delete SimpleName: entrySet(891)", "Delete MethodInvocation(892)", "Delete PrimitiveType: double(893)", "Delete SimpleName: cellValue(894)", "Delete SimpleName: Bytes(895)", "Delete SimpleName: toDouble(896)", "Delete SimpleName: e(897)", "Delete SimpleName: getValue(898)", "Delete MethodInvocation(899)", "Delete MethodInvocation(900)", "Delete VariableDeclarationFragment(901)", "Delete VariableDeclarationStatement(902)", "Delete SimpleName: max(903)", "Delete SimpleName: cellValue(904)", "Delete SimpleName: max(905)", "Delete InfixExpression: >(906)", "Delete SimpleName: cellValue(907)", "Delete SimpleName: max(908)", "Delete ConditionalExpression(909)", "Delete Assignment: =(910)", "Delete ExpressionStatement(911)", "Delete Block(912)", "Delete EnhancedForStatement(913)", "Delete SimpleName: nValue(914)", "Delete SimpleName: set(915)", "Delete SimpleName: max(916)", "Delete MethodInvocation(917)", "Delete ExpressionStatement(918)", "Delete SimpleName: context(919)", "Delete SimpleName: write(920)", "Delete QualifiedName: MatrixNormMapReduce.nKey(921)", "Delete SimpleName: nValue(922)", "Delete MethodInvocation(923)", "Delete ExpressionStatement(924)", "Delete Block(925)", "Delete MethodDeclaration(926)", "Delete TypeDeclaration: class(927)", "Delete TextElement: MaxValue Norm Reducer (928)", "Delete TagElement(929)", "Delete Javadoc(930)", "Delete Modifier: public(931)", "Delete Modifier: static(932)", "Delete SimpleName: MatrixMaxValueNormReducer(933)", "Delete SimpleName: Reducer(934)", "Delete SimpleType: Reducer(935)", "Delete SimpleName: IntWritable(936)", "Delete SimpleType: IntWritable(937)", "Delete SimpleName: DoubleWritable(938)", "Delete SimpleType: DoubleWritable(939)", "Delete SimpleName: IntWritable(940)", "Delete SimpleType: IntWritable(941)", "Delete SimpleName: DoubleWritable(942)", "Delete SimpleType: DoubleWritable(943)", "Delete ParameterizedType: Reducer<IntWritable,DoubleWritable,IntWritable,DoubleWritable>(944)", "Delete Modifier: private(945)", "Delete PrimitiveType: double(946)", "Delete SimpleName: max(947)", "Delete NumberLiteral: 0(948)", "Delete VariableDeclarationFragment(949)", "Delete FieldDeclaration(950)", "Delete Modifier: private(951)", "Delete SimpleName: DoubleWritable(952)", "Delete SimpleType: DoubleWritable(953)", "Delete SimpleName: nValue(954)", "Delete SimpleName: DoubleWritable(955)", "Delete SimpleType: DoubleWritable(956)", "Delete ClassInstanceCreation(957)", "Delete VariableDeclarationFragment(958)", "Delete FieldDeclaration(959)", "Delete SimpleName: Override(960)", "Delete MarkerAnnotation(961)", "Delete Modifier: public(962)", "Delete PrimitiveType: void(963)", "Delete SimpleName: reduce(964)", "Delete SimpleName: IntWritable(965)", "Delete SimpleType: IntWritable(966)", "Delete SimpleName: key(967)", "Delete SingleVariableDeclaration(968)", "Delete SimpleName: Iterable(969)", "Delete SimpleType: Iterable(970)", "Delete SimpleName: DoubleWritable(971)", "Delete SimpleType: DoubleWritable(972)", "Delete ParameterizedType: Iterable<DoubleWritable>(973)", "Delete SimpleName: values(974)", "Delete SingleVariableDeclaration(975)", "Delete SimpleName: Context(976)", "Delete SimpleType: Context(977)", "Delete SimpleName: context(978)", "Delete SingleVariableDeclaration(979)", "Delete SimpleName: IOException(980)", "Delete SimpleType: IOException(981)", "Delete SimpleName: InterruptedException(982)", "Delete SimpleType: InterruptedException(983)", "Delete SimpleName: DoubleWritable(984)", "Delete SimpleType: DoubleWritable(985)", "Delete SimpleName: val(986)", "Delete SingleVariableDeclaration(987)", "Delete SimpleName: values(988)", "Delete SimpleName: max(989)", "Delete SimpleName: Math(990)", "Delete SimpleName: max(991)", "Delete SimpleName: val(992)", "Delete SimpleName: get(993)", "Delete MethodInvocation(994)", "Delete SimpleName: max(995)", "Delete MethodInvocation(996)", "Delete Assignment: =(997)", "Delete ExpressionStatement(998)", "Delete Block(999)", "Delete EnhancedForStatement(1000)", "Delete SimpleName: nValue(1001)", "Delete SimpleName: set(1002)", "Delete SimpleName: max(1003)", "Delete MethodInvocation(1004)", "Delete ExpressionStatement(1005)", "Delete SimpleName: context(1006)", "Delete SimpleName: write(1007)", "Delete QualifiedName: MatrixNormMapReduce.nKey(1008)", "Delete SimpleName: nValue(1009)", "Delete MethodInvocation(1010)", "Delete ExpressionStatement(1011)", "Delete Block(1012)", "Delete MethodDeclaration(1013)", "Delete TypeDeclaration: class(1014)", "Delete TypeDeclaration: class(1015)"]}}, {"Pair_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.WritableComparable", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: sb", "DEL SimpleName: Override", "DEL SimpleName: col", "DEL ReturnStatement", "DEL SimpleName: obj", "DEL MethodDeclaration", "DEL ConditionalExpression", "DEL SimpleName: readInt", "DEL SimpleName: readInt", "DEL ParameterizedType: WritableComparable<Pair>", "DEL MethodInvocation", "DEL SimpleName: out", "DEL SimpleName: Override", "DEL Modifier: public", "DEL SimpleName: equals", "DEL SimpleName: row", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL SimpleName: getRow", "DEL SimpleType: Pair", "DEL QualifiedName: p.col", "DEL SimpleName: setColumn", "DEL InfixExpression: -", "DEL SimpleName: row", "DEL Assignment: =", "DEL SimpleName: in", "DEL VariableDeclarationStatement", "DEL SimpleName: col", "DEL SimpleType: String", "DEL SimpleName: append", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: -", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL Assignment: =", "DEL SimpleName: pair", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL SimpleType: Pair", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: Pair", "DEL Modifier: public", "DEL SimpleName: row_", "DEL PrimitiveType: int", "DEL SimpleName: col", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL SimpleName: in", "DEL MethodDeclaration", "DEL CastExpression", "DEL SimpleName: append", "DEL SimpleName: compareTo", "DEL Javadoc", "DEL SimpleName: DataInput", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleType: DataInput", "DEL SimpleName: row", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Assignment: =", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: col", "DEL SimpleName: DataOutput", "DEL SimpleName: toString", "DEL PrimitiveType: void", "DEL SimpleType: Object", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: col_", "DEL SimpleName: row", "DEL SimpleName: col_", "DEL Block", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: row", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: col_", "DEL SimpleName: compareTo", "DEL InfixExpression: ==", "DEL SimpleName: col", "DEL Block", "DEL MarkerAnnotation", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: Override", "DEL SimpleName: Object", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: obj", "DEL SimpleName: append", "DEL ExpressionStatement", "DEL SimpleType: DataOutput", "DEL MethodInvocation", "DEL SimpleName: col_", "DEL PrimitiveType: int", "DEL SimpleName: in", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: Pair", "DEL Block", "DEL SimpleName: row_", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: row_", "DEL SimpleName: Pair", "DEL Block", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: pair", "DEL ClassInstanceCreation", "DEL SimpleName: col", "DEL SimpleName: set", "DEL SimpleType: IOException", "DEL NumberLiteral: 0", "DEL SimpleName: IOException", "DEL SimpleName: append", "DEL SingleVariableDeclaration", "DEL CharacterLiteral: ','", "DEL SimpleName: readFields", "DEL VariableDeclarationFragment", "DEL SimpleName: col_", "DEL Modifier: public", "DEL TextElement: A Pair stands for (row, column) pair ", "DEL SimpleName: append", "DEL PrimitiveType: int", "DEL SimpleType: IOException", "DEL SimpleName: row", "DEL SimpleName: row_", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL SimpleName: Pair", "DEL SingleVariableDeclaration", "DEL SimpleName: col", "DEL MethodInvocation", "DEL SimpleType: WritableComparable", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: set", "DEL SimpleName: out", "DEL Modifier: public", "DEL CharacterLiteral: ')'", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: writeInt", "DEL MethodDeclaration", "DEL SimpleName: Pair", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: p", "DEL PrimitiveType: boolean", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: sb", "DEL SimpleType: Pair", "DEL SimpleName: row_", "DEL Block", "DEL SimpleName: sb", "DEL QualifiedName: p.row", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SimpleName: row", "DEL SimpleName: StringBuilder", "DEL SimpleName: out", "DEL QualifiedName: p.row", "DEL SimpleType: StringBuilder", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: row", "DEL SimpleName: row_", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: WritableComparable", "DEL MarkerAnnotation", "DEL SimpleName: row", "DEL Modifier: public", "DEL MethodInvocation", "DEL CharacterLiteral: '('", "DEL SimpleName: write", "DEL SimpleName: col", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: Pair", "DEL SimpleName: hashCode", "DEL ReturnStatement", "DEL SimpleName: setRow", "DEL SimpleName: toString", "DEL Block", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Pair", "DEL SimpleName: StringBuilder", "DEL ExpressionStatement", "DEL SimpleName: getColumn", "DEL PrimitiveType: void", "DEL PrimitiveType: int", "DEL SimpleName: Pair", "DEL Block", "DEL Block", "DEL SimpleName: writeInt", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: col_", "DEL SimpleType: StringBuilder"]}]}}, {"Pair_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.DataInput(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.DataOutput(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.IOException(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.io.WritableComparable(8)", "Delete ImportDeclaration(9)", "Delete TextElement: A Pair stands for (row, column) pair (10)", "Delete TagElement(11)", "Delete Javadoc(12)", "Delete Modifier: public(13)", "Delete SimpleName: Pair(14)", "Delete SimpleName: WritableComparable(15)", "Delete SimpleType: WritableComparable(16)", "Delete SimpleName: Pair(17)", "Delete SimpleType: Pair(18)", "Delete ParameterizedType: WritableComparable<Pair>(19)", "Delete PrimitiveType: int(20)", "Delete SimpleName: row(21)", "Delete VariableDeclarationFragment(22)", "Delete SimpleName: col(23)", "Delete VariableDeclarationFragment(24)", "Delete FieldDeclaration(25)", "Delete Modifier: public(26)", "Delete SimpleName: Pair(27)", "Delete Block(28)", "Delete MethodDeclaration(29)", "Delete Modifier: public(30)", "Delete SimpleName: Pair(31)", "Delete PrimitiveType: int(32)", "Delete SimpleName: row_(33)", "Delete SingleVariableDeclaration(34)", "Delete PrimitiveType: int(35)", "Delete SimpleName: col_(36)", "Delete SingleVariableDeclaration(37)", "Delete SimpleName: set(38)", "Delete SimpleName: row_(39)", "Delete SimpleName: col_(40)", "Delete MethodInvocation(41)", "Delete ExpressionStatement(42)", "Delete Block(43)", "Delete MethodDeclaration(44)", "Delete Modifier: public(45)", "Delete PrimitiveType: int(46)", "Delete SimpleName: getRow(47)", "Delete SimpleName: row(48)", "Delete ReturnStatement(49)", "Delete Block(50)", "Delete MethodDeclaration(51)", "Delete Modifier: public(52)", "Delete PrimitiveType: int(53)", "Delete SimpleName: getColumn(54)", "Delete SimpleName: col(55)", "Delete ReturnStatement(56)", "Delete Block(57)", "Delete MethodDeclaration(58)", "Delete Modifier: public(59)", "Delete PrimitiveType: void(60)", "Delete SimpleName: setRow(61)", "Delete PrimitiveType: int(62)", "Delete SimpleName: row_(63)", "Delete SingleVariableDeclaration(64)", "Delete SimpleName: row(65)", "Delete SimpleName: row_(66)", "Delete Assignment: =(67)", "Delete ExpressionStatement(68)", "Delete Block(69)", "Delete MethodDeclaration(70)", "Delete Modifier: public(71)", "Delete PrimitiveType: void(72)", "Delete SimpleName: setColumn(73)", "Delete PrimitiveType: int(74)", "Delete SimpleName: col_(75)", "Delete SingleVariableDeclaration(76)", "Delete SimpleName: col(77)", "Delete SimpleName: col_(78)", "Delete Assignment: =(79)", "Delete ExpressionStatement(80)", "Delete Block(81)", "Delete MethodDeclaration(82)", "Delete Modifier: public(83)", "Delete PrimitiveType: void(84)", "Delete SimpleName: set(85)", "Delete PrimitiveType: int(86)", "Delete SimpleName: row_(87)", "Delete SingleVariableDeclaration(88)", "Delete PrimitiveType: int(89)", "Delete SimpleName: col_(90)", "Delete SingleVariableDeclaration(91)", "Delete SimpleName: row(92)", "Delete SimpleName: row_(93)", "Delete Assignment: =(94)", "Delete ExpressionStatement(95)", "Delete SimpleName: col(96)", "Delete SimpleName: col_(97)", "Delete Assignment: =(98)", "Delete ExpressionStatement(99)", "Delete Block(100)", "Delete MethodDeclaration(101)", "Delete SimpleName: Override(102)", "Delete MarkerAnnotation(103)", "Delete Modifier: public(104)", "Delete PrimitiveType: void(105)", "Delete SimpleName: readFields(106)", "Delete SimpleName: DataInput(107)", "Delete SimpleType: DataInput(108)", "Delete SimpleName: in(109)", "Delete SingleVariableDeclaration(110)", "Delete SimpleName: IOException(111)", "Delete SimpleType: IOException(112)", "Delete SimpleName: row(113)", "Delete SimpleName: in(114)", "Delete SimpleName: readInt(115)", "Delete MethodInvocation(116)", "Delete Assignment: =(117)", "Delete ExpressionStatement(118)", "Delete SimpleName: col(119)", "Delete SimpleName: in(120)", "Delete SimpleName: readInt(121)", "Delete MethodInvocation(122)", "Delete Assignment: =(123)", "Delete ExpressionStatement(124)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete SimpleName: Override(127)", "Delete MarkerAnnotation(128)", "Delete Modifier: public(129)", "Delete PrimitiveType: void(130)", "Delete SimpleName: write(131)", "Delete SimpleName: DataOutput(132)", "Delete SimpleType: DataOutput(133)", "Delete SimpleName: out(134)", "Delete SingleVariableDeclaration(135)", "Delete SimpleName: IOException(136)", "Delete SimpleType: IOException(137)", "Delete SimpleName: out(138)", "Delete SimpleName: writeInt(139)", "Delete SimpleName: row(140)", "Delete MethodInvocation(141)", "Delete ExpressionStatement(142)", "Delete SimpleName: out(143)", "Delete SimpleName: writeInt(144)", "Delete SimpleName: col(145)", "Delete MethodInvocation(146)", "Delete ExpressionStatement(147)", "Delete Block(148)", "Delete MethodDeclaration(149)", "Delete SimpleName: Override(150)", "Delete MarkerAnnotation(151)", "Delete Modifier: public(152)", "Delete PrimitiveType: int(153)", "Delete SimpleName: compareTo(154)", "Delete SimpleName: Pair(155)", "Delete SimpleType: Pair(156)", "Delete SimpleName: p(157)", "Delete SingleVariableDeclaration(158)", "Delete SimpleName: row(159)", "Delete QualifiedName: p.row(160)", "Delete InfixExpression: ==(161)", "Delete SimpleName: col(162)", "Delete QualifiedName: p.col(163)", "Delete InfixExpression: -(164)", "Delete SimpleName: row(165)", "Delete QualifiedName: p.row(166)", "Delete InfixExpression: -(167)", "Delete ConditionalExpression(168)", "Delete ReturnStatement(169)", "Delete Block(170)", "Delete MethodDeclaration(171)", "Delete SimpleName: Override(172)", "Delete MarkerAnnotation(173)", "Delete Modifier: public(174)", "Delete PrimitiveType: boolean(175)", "Delete SimpleName: equals(176)", "Delete SimpleName: Object(177)", "Delete SimpleType: Object(178)", "Delete SimpleName: obj(179)", "Delete SingleVariableDeclaration(180)", "Delete SimpleName: Pair(181)", "Delete SimpleType: Pair(182)", "Delete SimpleName: pair(183)", "Delete SimpleName: Pair(184)", "Delete SimpleType: Pair(185)", "Delete SimpleName: obj(186)", "Delete CastExpression(187)", "Delete VariableDeclarationFragment(188)", "Delete VariableDeclarationStatement(189)", "Delete SimpleName: compareTo(190)", "Delete SimpleName: pair(191)", "Delete MethodInvocation(192)", "Delete NumberLiteral: 0(193)", "Delete InfixExpression: ==(194)", "Delete ReturnStatement(195)", "Delete Block(196)", "Delete MethodDeclaration(197)", "Delete SimpleName: Override(198)", "Delete MarkerAnnotation(199)", "Delete Modifier: public(200)", "Delete PrimitiveType: int(201)", "Delete SimpleName: hashCode(202)", "Delete SimpleName: row(203)", "Delete ReturnStatement(204)", "Delete Block(205)", "Delete MethodDeclaration(206)", "Delete SimpleName: Override(207)", "Delete MarkerAnnotation(208)", "Delete Modifier: public(209)", "Delete SimpleName: String(210)", "Delete SimpleType: String(211)", "Delete SimpleName: toString(212)", "Delete SimpleName: StringBuilder(213)", "Delete SimpleType: StringBuilder(214)", "Delete SimpleName: sb(215)", "Delete SimpleName: StringBuilder(216)", "Delete SimpleType: StringBuilder(217)", "Delete ClassInstanceCreation(218)", "Delete VariableDeclarationFragment(219)", "Delete VariableDeclarationStatement(220)", "Delete SimpleName: sb(221)", "Delete SimpleName: append(222)", "Delete CharacterLiteral: '('(223)", "Delete MethodInvocation(224)", "Delete SimpleName: append(225)", "Delete SimpleName: row(226)", "Delete MethodInvocation(227)", "Delete SimpleName: append(228)", "Delete CharacterLiteral: ','(229)", "Delete MethodInvocation(230)", "Delete SimpleName: append(231)", "Delete SimpleName: col(232)", "Delete MethodInvocation(233)", "Delete SimpleName: append(234)", "Delete CharacterLiteral: ')'(235)", "Delete MethodInvocation(236)", "Delete ExpressionStatement(237)", "Delete SimpleName: sb(238)", "Delete SimpleName: toString(239)", "Delete MethodInvocation(240)", "Delete ReturnStatement(241)", "Delete Block(242)", "Delete MethodDeclaration(243)", "Delete TypeDeclaration: class(244)"]}}, {"PivotInputFormat_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.ByteArrayInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.ByteArrayOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Arrays", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.Log", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.LogFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configurable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configuration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HConstants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Get"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HTable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.ResultScanner", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Scan", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableSplit", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Base64", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.InputFormat"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.InputSplit"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.JobContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.RecordReader", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.TaskAttemptContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.util.StringUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.examples.JacobiEigen"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.BytesUtil", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL MethodDeclaration", "DEL ParameterizedType: List<InputSplit>", "DEL SimpleType: InputFormat", "DEL SimpleName: InterruptedException", "DEL SimpleName: context", "DEL SimpleName: Pair", "DEL SimpleName: val", "DEL SimpleName: split", "DEL SimpleName: Scan", "DEL MethodInvocation", "DEL SimpleName: String", "DEL IfStatement", "DEL SimpleType: ByteArrayOutputStream", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL ThisExpression", "DEL SimpleName: LOG", "DEL Assignment: =", "DEL SimpleName: splits", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: colId", "DEL Javadoc", "DEL BooleanLiteral: false", "DEL Block", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL SimpleName: newScan", "DEL SimpleName: Configuration", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL SimpleName: setScan", "DEL Block", "DEL SimpleName: mocked", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: Override", "DEL ReturnStatement", "DEL Modifier: protected", "DEL SimpleType: PivotRecordReader", "DEL SimpleName: set", "DEL Modifier: public", "DEL BooleanLiteral: true", "DEL InfixExpression: +", "DEL SimpleName: next", "DEL SimpleType: Pair", "DEL SimpleType: String", "DEL SimpleName: DataInputStream", "DEL SimpleName: getTableName", "DEL IfStatement", "DEL TagElement", "DEL SimpleType: HTable", "DEL SimpleName: value", "DEL SimpleName: scanner", "DEL PrimitiveType: float", "DEL Block", "DEL SimpleName: DoubleWritable", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 1", "DEL SimpleName: HTable", "DEL SimpleName: IOException", "DEL TypeLiteral", "DEL TextElement: Job parameter that specifies the output table. ", "DEL SimpleName: setScan", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleName: getValue", "DEL Block", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: mocked", "DEL SimpleName: startPos", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL SimpleName: next", "DEL SimpleName: Bytes", "DEL NullLiteral", "DEL SimpleName: InterruptedException", "DEL SimpleName: IOException", "DEL SimpleName: Bytes", "DEL StringLiteral: \"No table was provided.\"", "DEL FieldAccess", "DEL MethodDeclaration", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: encodeBytes", "DEL ExpressionStatement", "DEL SimpleName: colId", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: trr", "DEL InfixExpression: +", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL SimpleName: row", "DEL NumberLiteral: 0", "DEL SimpleType: ByteArrayInputStream", "DEL ExpressionStatement", "DEL TagElement", "DEL MethodInvocation", "DEL SimpleName: getCurrentKey", "DEL ArrayType: byte[]", "DEL SimpleName: out", "DEL SimpleType: ResultScanner", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SimpleName: getHostname", "DEL Modifier: public", "DEL StringLiteral: \"split: \"", "DEL SimpleType: Pair", "DEL SimpleType: String", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL SimpleName: initialize", "DEL FieldAccess", "DEL SimpleName: bis", "DEL SimpleName: rowId", "DEL SimpleType: Pair", "DEL SimpleType: Scan", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleName: scan", "DEL SimpleName: e", "DEL SimpleName: BytesUtil", "DEL InfixExpression: !=", "DEL SimpleName: value", "DEL SimpleName: realNumSplits", "DEL SimpleName: get", "DEL SimpleName: toDouble", "DEL SimpleName: vv", "DEL SimpleName: Get", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL SimpleType: Pair", "DEL SimpleName: base64", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL SimpleType: TaskAttemptContext", "DEL SimpleName: Scan", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL Block", "DEL SimpleName: TableSplit", "DEL SimpleName: realNumSplits", "DEL SimpleName: restart", "DEL Block", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL Modifier: private", "DEL SimpleName: val", "DEL SimpleName: write", "DEL SimpleName: startPos", "DEL Assignment: =", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: IOException", "DEL IfStatement", "DEL SimpleName: IOException", "DEL FieldAccess", "DEL ParameterizedType: RecordReader<Pair,DoubleWritable>", "DEL Assignment: =", "DEL SimpleName: realNumSplits", "DEL SimpleName: htable", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: -", "DEL ReturnStatement", "DEL SimpleName: stringifyException", "DEL SimpleName: mocked", "DEL Assignment: =", "DEL SimpleType: PivotRecordReader", "DEL MethodInvocation", "DEL SimpleType: Pair", "DEL SimpleName: lastPos", "DEL SimpleType: DoubleWritable", "DEL IfStatement", "DEL FieldDeclaration", "DEL SimpleName: pivotRecordReader", "DEL NullLiteral", "DEL NullLiteral", "DEL SimpleName: i", "DEL Modifier: private", "DEL Dimension", "DEL SimpleName: Scan", "DEL CastExpression", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SimpleType: TableSplit", "DEL SimpleName: table", "DEL SimpleName: getServerAddress", "DEL SimpleName: conf", "DEL SimpleName: cell", "DEL SimpleName: toBytes", "DEL Modifier: static", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: table", "DEL SimpleName: val", "DEL SimpleName: Scan", "DEL SimpleName: Bytes", "DEL ArrayType: InputSplit[]", "DEL SimpleName: htable", "DEL InfixExpression: !=", "DEL SimpleName: htable", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL SimpleName: ResultScanner", "DEL FieldDeclaration", "DEL Modifier: private", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: scanner", "DEL SimpleName: LOG", "DEL FieldAccess", "DEL SimpleName: e", "DEL SimpleName: SCAN", "DEL SimpleType: DataInputStream", "DEL SimpleName: IOException", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL IfStatement", "DEL SimpleType: Exception", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL BooleanLiteral: false", "DEL Assignment: =", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleType: IOException", "DEL SimpleName: i", "DEL SimpleName: error", "DEL SimpleName: mocked", "DEL Block", "DEL SimpleType: InputSplit", "DEL Dimension", "DEL SimpleName: realNumSplits", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: totalRows", "DEL VariableDeclarationStatement", "DEL SimpleName: row", "DEL MarkerAnnotation", "DEL SimpleName: ByteArrayInputStream", "DEL MethodInvocation", "DEL SimpleType: HTable", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL Modifier: protected", "DEL VariableDeclarationFragment", "DEL SimpleType: HTable", "DEL VariableDeclarationFragment", "DEL SimpleName: vv", "DEL VariableDeclarationFragment", "DEL Block", "DEL ThisExpression", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL Assignment: =", "DEL Block", "DEL ArrayAccess", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: trr", "DEL SimpleName: lastPos", "DEL Block", "DEL SimpleType: DataInputStream", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL SimpleName: col", "DEL StringLiteral: \"->\"", "DEL SimpleName: bytesToInt", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: pivotRecordReader", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: convertScanToString", "DEL InfixExpression: +", "DEL SimpleType: ByteArrayInputStream", "DEL ArrayAccess", "DEL CastExpression", "DEL SimpleType: IOException", "DEL SimpleType: IOException", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: realNumSplits", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleName: init", "DEL SimpleName: pivotRecordReader", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleType: InterruptedException", "DEL ExpressionStatement", "DEL SimpleType: Get", "DEL ReturnStatement", "DEL MarkerAnnotation", "DEL SimpleName: dis", "DEL ReturnStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL SimpleName: debug", "DEL Block", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL SimpleName: cell", "DEL InfixExpression: +", "DEL SimpleName: pivotRecordReader", "DEL VariableDeclarationStatement", "DEL SimpleType: DataOutputStream", "DEL SimpleName: Pair", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: TableSplit", "DEL SimpleName: vv", "DEL InfixExpression: /", "DEL SimpleName: setHTable", "DEL SimpleName: Override", "DEL SimpleName: DoubleWritable", "DEL SimpleName: lastPos", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: DoubleWritable", "DEL QualifiedName: startKeys.length", "DEL SimpleName: startPos", "DEL SimpleName: Pair", "DEL SimpleName: Scan", "DEL FieldAccess", "DEL SimpleName: e", "DEL SimpleType: DoubleWritable", "DEL SimpleName: table", "DEL SimpleType: Configurable", "DEL SimpleName: i", "DEL SimpleName: table", "DEL Modifier: public", "DEL SimpleName: nextKeyValue", "DEL SimpleName: conf", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: InputSplit", "DEL FieldDeclaration", "DEL TextElement: The reader scanning the table, can be a custom one. ", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: vv", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: table", "DEL SingleVariableDeclaration", "DEL SimpleName: scanner", "DEL NullLiteral", "DEL NullLiteral", "DEL PrimitiveType: boolean", "DEL Modifier: static", "DEL SimpleName: totalRows", "DEL ThisExpression", "DEL SimpleName: hasMore", "DEL SimpleName: newScan", "DEL Block", "DEL SimpleName: scan", "DEL SimpleName: Override", "DEL SimpleName: htable", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getCurrentValue", "DEL SimpleType: TableSplit", "DEL SimpleName: BytesUtil", "DEL ForStatement", "DEL ClassInstanceCreation", "DEL SimpleName: HBaseConfiguration", "DEL IfStatement", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL TryStatement", "DEL PostfixExpression: ++", "DEL SimpleType: PivotInputFormat", "DEL ArrayType: byte[][]", "DEL MethodInvocation", "DEL SimpleName: rowId", "DEL Block", "DEL SimpleType: IOException", "DEL SimpleName: vv", "DEL Modifier: private", "DEL PrimitiveType: void", "DEL SimpleName: value", "DEL SimpleName: rowId", "DEL SimpleName: splits", "DEL FieldDeclaration", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL SimpleName: DataOutputStream", "DEL Block", "DEL SimpleName: asList", "DEL ClassInstanceCreation", "DEL NumberLiteral: 1", "DEL SimpleName: realNumSplits", "DEL SimpleName: conf", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL SimpleName: startKeys", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: scan", "DEL SimpleName: setScan", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleType: Result", "DEL FieldAccess", "DEL SimpleType: IOException", "DEL SimpleName: getRowIndex", "DEL TagElement", "DEL PrimitiveType: float", "DEL FieldAccess", "DEL SimpleName: RecordReader", "DEL ArrayType: byte[]", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: InputSplit", "DEL Assignment: =", "DEL PrimitiveType: byte", "DEL SimpleName: startPos", "DEL NumberLiteral: 0", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: IOException", "DEL NullLiteral", "DEL FieldAccess", "DEL SimpleName: conf", "DEL SimpleName: mocked", "DEL SimpleName: Override", "DEL SimpleName: dis", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: regionLocation", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL QualifiedName: HConstants.EMPTY_START_ROW", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"hama.mapreduce.scan\"", "DEL SimpleName: getStartKeys", "DEL PrimitiveType: byte", "DEL SimpleType: Log", "DEL SimpleName: Configuration", "DEL SimpleName: getStartRow", "DEL SimpleName: PivotInputFormat", "DEL InfixExpression: >", "DEL SimpleType: RecordReader", "DEL PrimitiveType: void", "DEL FieldAccess", "DEL FieldDeclaration", "DEL SimpleName: setConf", "DEL SimpleName: size", "DEL VariableDeclarationFragment", "DEL SimpleType: DoubleWritable", "DEL SimpleName: stringifyException", "DEL SimpleName: trr", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: Pair", "DEL Dimension", "DEL QualifiedName: startKeys.length", "DEL SimpleName: InputSplit", "DEL SimpleName: getRow", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL SimpleName: Configurable", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL SimpleName: List", "DEL SimpleName: setTableRecordReader", "DEL SimpleName: trr", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: scan", "DEL SimpleType: InputSplit", "DEL Javadoc", "DEL SimpleType: Scan", "DEL SimpleName: HTable", "DEL InfixExpression: <=", "DEL ArrayCreation", "DEL TagElement", "DEL Modifier: static", "DEL SimpleName: restart", "DEL SimpleName: PivotRecordReader", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: DataInputStream", "DEL SimpleName: BytesUtil", "DEL SimpleName: split", "DEL MethodDeclaration", "DEL SimpleName: startPos", "DEL VariableDeclarationStatement", "DEL SimpleName: dos", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL BooleanLiteral: false", "DEL SimpleName: key", "DEL ArrayType: byte[]", "DEL SimpleName: Math", "DEL PrimitiveType: double", "DEL SimpleName: startKeys", "DEL SimpleName: toByteArray", "DEL FieldDeclaration", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: Scan", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL InfixExpression: /", "DEL SimpleName: colId", "DEL MarkerAnnotation", "DEL SimpleType: InterruptedException", "DEL SimpleType: InterruptedException", "DEL Modifier: public", "DEL SimpleName: getEndRow", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL SimpleName: set", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL FieldAccess", "DEL SimpleName: init", "DEL ParenthesizedExpression", "DEL SimpleName: get", "DEL SimpleName: HTable", "DEL SimpleName: hasMore", "DEL CatchClause", "DEL SimpleName: IOException", "DEL SimpleType: IOException", "DEL ArrayAccess", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: scanner", "DEL SimpleName: getConf", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"recovered from \"", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: PivotRecordReader", "DEL SimpleName: convertStringToScan", "DEL SimpleName: getLog", "DEL SimpleType: DoubleWritable", "DEL SimpleName: middle", "DEL SimpleName: firstRow", "DEL SimpleName: InputSplit", "DEL ReturnStatement", "DEL SimpleName: INPUT_TABLE", "DEL SimpleType: String", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: Scan", "DEL SimpleName: info", "DEL SimpleName: startKeys", "DEL SimpleName: getStartRow", "DEL SimpleType: String", "DEL Block", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL SimpleName: splits", "DEL ThisExpression", "DEL SimpleName: table", "DEL MethodDeclaration", "DEL Assignment: =", "DEL InfixExpression: %", "DEL SimpleName: JobContext", "DEL SimpleName: getRegionLocation", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: Scan", "DEL VariableDeclarationStatement", "DEL TagElement", "DEL SimpleType: HTable", "DEL SimpleName: INPUT_TABLE", "DEL SimpleName: RecordReader", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL SimpleName: bis", "DEL BooleanLiteral: true", "DEL Modifier: protected", "DEL QualifiedName: startKeys.length", "DEL Javadoc", "DEL SimpleName: get", "DEL Modifier: private", "DEL SimpleName: scan", "DEL SimpleType: IOException", "DEL SimpleName: scan", "DEL SimpleType: Scan", "DEL SimpleName: Scan", "DEL SimpleName: PivotRecordReader", "DEL SimpleName: htable", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: scan", "DEL SimpleType: IOException", "DEL PrimitiveType: boolean", "DEL Modifier: public", "DEL SimpleName: Pair", "DEL Modifier: public", "DEL SimpleName: context", "DEL MethodInvocation", "DEL SimpleType: ByteArrayOutputStream", "DEL SimpleName: setHTable", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleType: TaskAttemptContext", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: TaskAttemptContext", "DEL SimpleType: DataOutputStream", "DEL SimpleName: lastPos", "DEL Block", "DEL SimpleName: splits", "DEL SimpleType: IOException", "DEL SimpleName: HTable", "DEL SimpleType: Scan", "DEL SimpleType: Scan", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: context", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: scan", "DEL SimpleType: InterruptedException", "DEL SimpleType: List", "DEL Modifier: final", "DEL ThisExpression", "DEL SimpleName: table", "DEL PrimitiveType: void", "DEL SimpleType: InputSplit", "DEL SimpleName: vv", "DEL SimpleName: table", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: out", "DEL SimpleName: vv", "DEL SimpleName: Configuration", "DEL MethodInvocation", "DEL ThisExpression", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: getValue", "DEL ExpressionStatement", "DEL SimpleType: Scan", "DEL VariableDeclarationFragment", "DEL SimpleType: Scan", "DEL SimpleName: scan", "DEL SimpleName: getScan", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: scan", "DEL NullLiteral", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: Pair", "DEL Dimension", "DEL SimpleName: HTable", "DEL SimpleName: lastPos", "DEL SimpleName: close", "DEL SimpleName: restart", "DEL MethodInvocation", "DEL SimpleName: TaskAttemptContext", "DEL ParameterizedType: RecordReader<Pair,DoubleWritable>", "DEL Modifier: public", "DEL SimpleName: PivotRecordReader", "DEL SimpleName: tSplit", "DEL SimpleName: InputFormat", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: scanner", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: IOException", "DEL SimpleName: key", "DEL SimpleName: Scan", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: ByteArrayOutputStream", "DEL CatchClause", "DEL SimpleName: key", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: table", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL SimpleName: i", "DEL SimpleType: Scan", "DEL SimpleName: Exception", "DEL SimpleType: DoubleWritable", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL ArrayAccess", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: DataOutputStream", "DEL SimpleType: InterruptedException", "DEL SimpleName: TableSplit", "DEL SimpleName: tSplit", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL InfixExpression: ==", "DEL SimpleName: getSplits", "DEL MethodDeclaration", "DEL BooleanLiteral: true", "DEL SimpleName: scan", "DEL MethodDeclaration", "DEL SimpleType: Scan", "DEL SimpleName: processedRows", "DEL SimpleName: tableName", "DEL Modifier: private", "DEL Modifier: private", "DEL SimpleType: Scan", "DEL Modifier: final", "DEL SimpleName: htable", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: scan", "DEL ArrayType: byte[]", "DEL Block", "DEL SimpleName: StringUtils", "DEL TextElement: The table to scan. ", "DEL SimpleName: Base64", "DEL QualifiedName: JacobiEigen.EIIND", "DEL SimpleName: sc", "DEL SimpleName: InputSplit", "DEL SimpleName: LOG", "DEL FieldDeclaration", "DEL SimpleName: sc", "DEL SimpleName: PivotInputFormat", "DEL SimpleName: Scan", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL ThisExpression", "DEL SimpleName: SCAN", "DEL SimpleType: TableSplit", "DEL Block", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL SimpleName: pivotRecordReader", "DEL Block", "DEL Assignment: =", "DEL ParameterizedType: InputFormat<Pair,DoubleWritable>", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL SimpleType: JobContext", "DEL SimpleName: e", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: trr", "DEL SimpleName: size", "DEL Modifier: public", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL TryStatement", "DEL SimpleType: Configuration", "DEL ConditionalExpression", "DEL SimpleName: get", "DEL SimpleName: min", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: conf", "DEL SimpleName: col", "DEL SimpleType: HTable", "DEL ReturnStatement", "DEL SimpleName: startKeys", "DEL Block", "DEL PrimitiveType: byte", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL SimpleName: InterruptedException", "DEL Modifier: public", "DEL Modifier: static", "DEL SimpleName: lastRow", "DEL MethodInvocation", "DEL SimpleName: base64", "DEL SimpleName: processedRows", "DEL SimpleName: scan", "DEL SimpleName: setScan", "DEL Assignment: =", "DEL SimpleName: setHTable", "DEL MethodInvocation", "DEL StringLiteral: \"An error occurred.\"", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: scanner", "DEL SimpleType: Scan", "DEL ReturnStatement", "DEL Assignment: =", "DEL NullLiteral", "DEL NullLiteral", "DEL SimpleName: HTable", "DEL ClassInstanceCreation", "DEL NumberLiteral: 1.0f", "DEL SimpleName: DoubleWritable", "DEL QualifiedName: JacobiEigen.EI", "DEL SimpleName: getHTable", "DEL SimpleName: Log", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleType: HBaseConfiguration", "DEL SimpleType: Configuration", "DEL Block", "DEL SimpleName: tableName", "DEL SimpleName: scan", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleName: set", "DEL SimpleName: error", "DEL IfStatement", "DEL FieldDeclaration", "DEL TextElement: Space delimited list of columns. ", "DEL SimpleName: createRecordReader", "DEL SimpleName: startKeys", "DEL VariableDeclarationFragment", "DEL SimpleName: size", "DEL Block", "DEL SimpleName: LOG", "DEL VariableDeclarationStatement", "DEL SimpleName: ByteArrayOutputStream", "DEL TryStatement", "DEL NumberLiteral: 0", "DEL Block", "DEL SimpleName: scan", "DEL SimpleName: dos", "DEL SimpleType: Scan", "DEL SimpleName: StringUtils", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"Expecting at least one region.\"", "DEL SimpleName: IOException", "DEL SimpleName: Get", "DEL SimpleName: decode", "DEL SimpleName: getScanner", "DEL VariableDeclarationFragment", "DEL InfixExpression: ||", "DEL SimpleName: DoubleWritable", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL Block", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL ThisExpression", "DEL MethodInvocation", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: getRowIndex", "DEL IfStatement", "DEL VariableDeclarationExpression", "DEL SimpleType: PivotRecordReader", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: regionLocation", "DEL SimpleName: setStartRow", "DEL SimpleName: out", "DEL SimpleName: cell", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL SimpleName: LogFactory", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ThisExpression", "DEL ExpressionStatement", "DEL TextElement: Holds the details for the internal scanner. ", "DEL PrimitiveType: int", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL SimpleType: InputSplit", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: tSplit", "DEL Assignment: =", "DEL Block", "DEL Modifier: static", "DEL SimpleName: setStopRow", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: Arrays", "DEL MethodInvocation", "DEL Modifier: private", "DEL Dimension", "DEL Block", "DEL QualifiedName: Integer.MAX_VALUE", "DEL ExpressionStatement", "DEL TextElement: The configuration. ", "DEL SimpleName: DoubleWritable", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL PrimitiveType: boolean", "DEL ClassInstanceCreation", "DEL SimpleName: key", "DEL ReturnStatement", "DEL InfixExpression: >", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL SimpleName: Scan", "DEL SimpleName: get", "DEL Modifier: private", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL SimpleName: setHTable", "DEL PrimitiveType: void", "DEL SimpleType: Scan", "DEL ExpressionStatement", "DEL SimpleName: sc", "DEL SimpleName: split", "DEL SimpleName: scan", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL Assignment: =", "DEL Javadoc", "DEL ReturnStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: Override", "DEL Assignment: =", "DEL SimpleName: convertStringToScan", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleName: getProgress", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL SimpleName: InterruptedException", "DEL SimpleName: Scan", "DEL SimpleName: PivotRecordReader", "DEL ExpressionStatement", "DEL CatchClause", "DEL Modifier: protected", "DEL VariableDeclarationFragment", "DEL SimpleName: sc", "DEL Modifier: public", "DEL Modifier: public", "DEL ConditionalExpression", "DEL SimpleName: table", "DEL FieldDeclaration", "DEL SimpleName: trr", "DEL SimpleType: Pair", "DEL SimpleName: next", "DEL SimpleName: Scan", "DEL SimpleType: RecordReader", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \"hama.mapreduce.inputtable\"", "DEL ArrayType: InputSplit[]", "DEL SimpleName: Result", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: valueOf", "DEL SimpleName: Base64", "DEL SimpleName: conf", "DEL QualifiedName: startKeys.length", "DEL MethodDeclaration", "DEL SimpleName: middle", "DEL SimpleName: set", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleType: IOException", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL NullLiteral", "DEL SimpleType: Get", "DEL SimpleName: firstRow", "DEL SimpleName: IOException", "DEL SimpleName: hasMore", "DEL SimpleName: lastRow", "DEL PrimitiveType: void", "DEL SimpleName: value", "DEL ThisExpression", "DEL ThisExpression", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL SimpleType: IOException", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL FieldAccess", "DEL MethodInvocation", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: close", "DEL IfStatement", "DEL SimpleName: LOG", "DEL SimpleType: PivotRecordReader", "DEL VariableDeclarationFragment", "DEL SimpleName: Scan", "DEL SimpleName: setStartRow", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL SimpleName: newScan", "DEL Block", "DEL SimpleName: readFields", "DEL Block", "DEL SimpleName: totalRows", "DEL PrimitiveType: byte", "DEL SingleVariableDeclaration", "DEL SimpleName: rowId", "DEL SimpleName: lastRow", "DEL ArrayAccess", "DEL SimpleName: row", "DEL InfixExpression: ==", "DEL SimpleName: trr", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleType: IOException", "DEL SimpleType: Scan", "DEL Modifier: static", "DEL FieldAccess", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL FieldAccess", "DEL Dimension", "DEL MarkerAnnotation", "DEL SimpleName: configuration", "DEL SimpleName: configuration", "DEL SimpleName: String", "DEL Dimension", "DEL SimpleType: Scan", "DEL SimpleName: lastPos", "DEL ReturnStatement", "DEL NumberLiteral: 0", "DEL NullLiteral", "DEL SimpleType: InputSplit"]}]}}, {"PivotInputFormat_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.ByteArrayInputStream(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.ByteArrayOutputStream(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.DataInputStream(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.io.DataOutputStream(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.io.IOException(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: java.util.Arrays(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: java.util.List(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.commons.logging.Log(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.commons.logging.LogFactory(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.HConstants(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.client.ResultScanner(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableSplit(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Base64(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.mapreduce.InputFormat(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hadoop.mapreduce.InputSplit(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hadoop.mapreduce.JobContext(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hadoop.mapreduce.RecordReader(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hadoop.mapreduce.TaskAttemptContext(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hadoop.util.StringUtils(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hama.examples.JacobiEigen(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(60)", "Delete ImportDeclaration(61)", "Delete Modifier: public(62)", "Delete SimpleName: PivotInputFormat(63)", "Delete SimpleName: InputFormat(64)", "Delete SimpleType: InputFormat(65)", "Delete SimpleName: Pair(66)", "Delete SimpleType: Pair(67)", "Delete SimpleName: DoubleWritable(68)", "Delete SimpleType: DoubleWritable(69)", "Delete ParameterizedType: InputFormat<Pair,DoubleWritable>(70)", "Delete SimpleName: Configurable(71)", "Delete SimpleType: Configurable(72)", "Delete Modifier: final(73)", "Delete Modifier: static(74)", "Delete SimpleName: Log(75)", "Delete SimpleType: Log(76)", "Delete SimpleName: LOG(77)", "Delete SimpleName: LogFactory(78)", "Delete SimpleName: getLog(79)", "Delete SimpleName: PivotInputFormat(80)", "Delete SimpleType: PivotInputFormat(81)", "Delete TypeLiteral(82)", "Delete MethodInvocation(83)", "Delete VariableDeclarationFragment(84)", "Delete FieldDeclaration(85)", "Delete TextElement: Job parameter that specifies the output table. (86)", "Delete TagElement(87)", "Delete Javadoc(88)", "Delete Modifier: public(89)", "Delete Modifier: static(90)", "Delete Modifier: final(91)", "Delete SimpleName: String(92)", "Delete SimpleType: String(93)", "Delete SimpleName: INPUT_TABLE(94)", "Delete StringLiteral: \"hama.mapreduce.inputtable\"(95)", "Delete VariableDeclarationFragment(96)", "Delete FieldDeclaration(97)", "Delete TextElement: Space delimited list of columns. (98)", "Delete TagElement(99)", "Delete Javadoc(100)", "Delete Modifier: public(101)", "Delete Modifier: static(102)", "Delete Modifier: final(103)", "Delete SimpleName: String(104)", "Delete SimpleType: String(105)", "Delete SimpleName: SCAN(106)", "Delete StringLiteral: \"hama.mapreduce.scan\"(107)", "Delete VariableDeclarationFragment(108)", "Delete FieldDeclaration(109)", "Delete TextElement: The configuration. (110)", "Delete TagElement(111)", "Delete Javadoc(112)", "Delete Modifier: private(113)", "Delete SimpleName: Configuration(114)", "Delete SimpleType: Configuration(115)", "Delete SimpleName: conf(116)", "Delete NullLiteral(117)", "Delete VariableDeclarationFragment(118)", "Delete FieldDeclaration(119)", "Delete TextElement: Holds the details for the internal scanner. (120)", "Delete TagElement(121)", "Delete Javadoc(122)", "Delete Modifier: private(123)", "Delete SimpleName: Scan(124)", "Delete SimpleType: Scan(125)", "Delete SimpleName: scan(126)", "Delete NullLiteral(127)", "Delete VariableDeclarationFragment(128)", "Delete FieldDeclaration(129)", "Delete TextElement: The table to scan. (130)", "Delete TagElement(131)", "Delete Javadoc(132)", "Delete Modifier: private(133)", "Delete SimpleName: HTable(134)", "Delete SimpleType: HTable(135)", "Delete SimpleName: table(136)", "Delete NullLiteral(137)", "Delete VariableDeclarationFragment(138)", "Delete FieldDeclaration(139)", "Delete TextElement: The reader scanning the table, can be a custom one. (140)", "Delete TagElement(141)", "Delete Javadoc(142)", "Delete Modifier: private(143)", "Delete SimpleName: PivotRecordReader(144)", "Delete SimpleType: PivotRecordReader(145)", "Delete SimpleName: pivotRecordReader(146)", "Delete NullLiteral(147)", "Delete VariableDeclarationFragment(148)", "Delete FieldDeclaration(149)", "Delete SimpleName: Override(150)", "Delete MarkerAnnotation(151)", "Delete Modifier: public(152)", "Delete SimpleName: List(153)", "Delete SimpleType: List(154)", "Delete SimpleName: InputSplit(155)", "Delete SimpleType: InputSplit(156)", "Delete ParameterizedType: List<InputSplit>(157)", "Delete SimpleName: getSplits(158)", "Delete SimpleName: JobContext(159)", "Delete SimpleType: JobContext(160)", "Delete SimpleName: context(161)", "Delete SingleVariableDeclaration(162)", "Delete SimpleName: IOException(163)", "Delete SimpleType: IOException(164)", "Delete SimpleName: table(165)", "Delete NullLiteral(166)", "Delete InfixExpression: ==(167)", "Delete SimpleName: IOException(168)", "Delete SimpleType: IOException(169)", "Delete StringLiteral: \"No table was provided.\"(170)", "Delete ClassInstanceCreation(171)", "Delete ThrowStatement(172)", "Delete Block(173)", "Delete IfStatement(174)", "Delete PrimitiveType: byte(175)", "Delete Dimension(176)", "Delete Dimension(177)", "Delete ArrayType: byte[][](178)", "Delete SimpleName: startKeys(179)", "Delete SimpleName: table(180)", "Delete SimpleName: getStartKeys(181)", "Delete MethodInvocation(182)", "Delete VariableDeclarationFragment(183)", "Delete VariableDeclarationStatement(184)", "Delete SimpleName: startKeys(185)", "Delete NullLiteral(186)", "Delete InfixExpression: ==(187)", "Delete QualifiedName: startKeys.length(188)", "Delete NumberLiteral: 0(189)", "Delete InfixExpression: ==(190)", "Delete InfixExpression: ||(191)", "Delete SimpleName: IOException(192)", "Delete SimpleType: IOException(193)", "Delete StringLiteral: \"Expecting at least one region.\"(194)", "Delete ClassInstanceCreation(195)", "Delete ThrowStatement(196)", "Delete Block(197)", "Delete IfStatement(198)", "Delete PrimitiveType: int(199)", "Delete SimpleName: realNumSplits(200)", "Delete QualifiedName: startKeys.length(201)", "Delete VariableDeclarationFragment(202)", "Delete VariableDeclarationStatement(203)", "Delete SimpleName: InputSplit(204)", "Delete SimpleType: InputSplit(205)", "Delete Dimension(206)", "Delete ArrayType: InputSplit[](207)", "Delete SimpleName: splits(208)", "Delete SimpleName: InputSplit(209)", "Delete SimpleType: InputSplit(210)", "Delete Dimension(211)", "Delete ArrayType: InputSplit[](212)", "Delete SimpleName: realNumSplits(213)", "Delete ArrayCreation(214)", "Delete VariableDeclarationFragment(215)", "Delete VariableDeclarationStatement(216)", "Delete PrimitiveType: int(217)", "Delete SimpleName: middle(218)", "Delete QualifiedName: startKeys.length(219)", "Delete SimpleName: realNumSplits(220)", "Delete InfixExpression: /(221)", "Delete VariableDeclarationFragment(222)", "Delete VariableDeclarationStatement(223)", "Delete PrimitiveType: int(224)", "Delete SimpleName: startPos(225)", "Delete NumberLiteral: 0(226)", "Delete VariableDeclarationFragment(227)", "Delete VariableDeclarationStatement(228)", "Delete PrimitiveType: int(229)", "Delete SimpleName: i(230)", "Delete NumberLiteral: 0(231)", "Delete VariableDeclarationFragment(232)", "Delete VariableDeclarationExpression(233)", "Delete SimpleName: i(234)", "Delete SimpleName: realNumSplits(235)", "Delete InfixExpression: <(236)", "Delete SimpleName: i(237)", "Delete PostfixExpression: ++(238)", "Delete PrimitiveType: int(239)", "Delete SimpleName: lastPos(240)", "Delete SimpleName: startPos(241)", "Delete SimpleName: middle(242)", "Delete InfixExpression: +(243)", "Delete VariableDeclarationFragment(244)", "Delete VariableDeclarationStatement(245)", "Delete SimpleName: lastPos(246)", "Delete QualifiedName: startKeys.length(247)", "Delete SimpleName: realNumSplits(248)", "Delete InfixExpression: %(249)", "Delete SimpleName: i(250)", "Delete InfixExpression: >(251)", "Delete SimpleName: lastPos(252)", "Delete NumberLiteral: 1(253)", "Delete InfixExpression: +(254)", "Delete SimpleName: lastPos(255)", "Delete ConditionalExpression(256)", "Delete Assignment: =(257)", "Delete ExpressionStatement(258)", "Delete SimpleName: String(259)", "Delete SimpleType: String(260)", "Delete SimpleName: regionLocation(261)", "Delete SimpleName: table(262)", "Delete SimpleName: getRegionLocation(263)", "Delete SimpleName: startKeys(264)", "Delete SimpleName: startPos(265)", "Delete ArrayAccess(266)", "Delete MethodInvocation(267)", "Delete SimpleName: getServerAddress(268)", "Delete MethodInvocation(269)", "Delete SimpleName: getHostname(270)", "Delete MethodInvocation(271)", "Delete VariableDeclarationFragment(272)", "Delete VariableDeclarationStatement(273)", "Delete SimpleName: splits(274)", "Delete SimpleName: i(275)", "Delete ArrayAccess(276)", "Delete SimpleName: TableSplit(277)", "Delete SimpleType: TableSplit(278)", "Delete ThisExpression(279)", "Delete SimpleName: table(280)", "Delete FieldAccess(281)", "Delete SimpleName: getTableName(282)", "Delete MethodInvocation(283)", "Delete SimpleName: startKeys(284)", "Delete SimpleName: startPos(285)", "Delete ArrayAccess(286)", "Delete SimpleName: i(287)", "Delete NumberLiteral: 1(288)", "Delete InfixExpression: +(289)", "Delete ParenthesizedExpression(290)", "Delete SimpleName: realNumSplits(291)", "Delete InfixExpression: <(292)", "Delete ParenthesizedExpression(293)", "Delete SimpleName: startKeys(294)", "Delete SimpleName: lastPos(295)", "Delete ArrayAccess(296)", "Delete QualifiedName: HConstants.EMPTY_START_ROW(297)", "Delete ConditionalExpression(298)", "Delete SimpleName: regionLocation(299)", "Delete ClassInstanceCreation(300)", "Delete Assignment: =(301)", "Delete ExpressionStatement(302)", "Delete SimpleName: LOG(303)", "Delete SimpleName: info(304)", "Delete StringLiteral: \"split: \"(305)", "Delete SimpleName: i(306)", "Delete StringLiteral: \"->\"(307)", "Delete SimpleName: splits(308)", "Delete SimpleName: i(309)", "Delete ArrayAccess(310)", "Delete InfixExpression: +(311)", "Delete MethodInvocation(312)", "Delete ExpressionStatement(313)", "Delete SimpleName: startPos(314)", "Delete SimpleName: lastPos(315)", "Delete Assignment: =(316)", "Delete ExpressionStatement(317)", "Delete Block(318)", "Delete ForStatement(319)", "Delete SimpleName: Arrays(320)", "Delete SimpleName: asList(321)", "Delete SimpleName: splits(322)", "Delete MethodInvocation(323)", "Delete ReturnStatement(324)", "Delete Block(325)", "Delete MethodDeclaration(326)", "Delete Modifier: protected(327)", "Delete Modifier: static(328)", "Delete SimpleName: PivotRecordReader(329)", "Delete SimpleName: RecordReader(330)", "Delete SimpleType: RecordReader(331)", "Delete SimpleName: Pair(332)", "Delete SimpleType: Pair(333)", "Delete SimpleName: DoubleWritable(334)", "Delete SimpleType: DoubleWritable(335)", "Delete ParameterizedType: RecordReader<Pair,DoubleWritable>(336)", "Delete Modifier: private(337)", "Delete PrimitiveType: int(338)", "Delete SimpleName: totalRows(339)", "Delete VariableDeclarationFragment(340)", "Delete FieldDeclaration(341)", "Delete Modifier: private(342)", "Delete PrimitiveType: int(343)", "Delete SimpleName: processedRows(344)", "Delete VariableDeclarationFragment(345)", "Delete FieldDeclaration(346)", "Delete Modifier: private(347)", "Delete PrimitiveType: int(348)", "Delete SimpleName: size(349)", "Delete VariableDeclarationFragment(350)", "Delete FieldDeclaration(351)", "Delete PrimitiveType: boolean(352)", "Delete SimpleName: mocked(353)", "Delete BooleanLiteral: true(354)", "Delete VariableDeclarationFragment(355)", "Delete FieldDeclaration(356)", "Delete Modifier: private(357)", "Delete SimpleName: ResultScanner(358)", "Delete SimpleType: ResultScanner(359)", "Delete SimpleName: scanner(360)", "Delete NullLiteral(361)", "Delete VariableDeclarationFragment(362)", "Delete FieldDeclaration(363)", "Delete Modifier: private(364)", "Delete SimpleName: Scan(365)", "Delete SimpleType: Scan(366)", "Delete SimpleName: scan(367)", "Delete NullLiteral(368)", "Delete VariableDeclarationFragment(369)", "Delete FieldDeclaration(370)", "Delete Modifier: private(371)", "Delete SimpleName: HTable(372)", "Delete SimpleType: HTable(373)", "Delete SimpleName: htable(374)", "Delete NullLiteral(375)", "Delete VariableDeclarationFragment(376)", "Delete FieldDeclaration(377)", "Delete Modifier: private(378)", "Delete PrimitiveType: byte(379)", "Delete Dimension(380)", "Delete ArrayType: byte[](381)", "Delete SimpleName: lastRow(382)", "Delete NullLiteral(383)", "Delete VariableDeclarationFragment(384)", "Delete FieldDeclaration(385)", "Delete Modifier: private(386)", "Delete SimpleName: Pair(387)", "Delete SimpleType: Pair(388)", "Delete SimpleName: key(389)", "Delete NullLiteral(390)", "Delete VariableDeclarationFragment(391)", "Delete FieldDeclaration(392)", "Delete Modifier: private(393)", "Delete SimpleName: DoubleWritable(394)", "Delete SimpleType: DoubleWritable(395)", "Delete SimpleName: value(396)", "Delete NullLiteral(397)", "Delete VariableDeclarationFragment(398)", "Delete FieldDeclaration(399)", "Delete SimpleName: Override(400)", "Delete MarkerAnnotation(401)", "Delete Modifier: public(402)", "Delete PrimitiveType: void(403)", "Delete SimpleName: close(404)", "Delete ThisExpression(405)", "Delete SimpleName: scanner(406)", "Delete FieldAccess(407)", "Delete SimpleName: close(408)", "Delete MethodInvocation(409)", "Delete ExpressionStatement(410)", "Delete Block(411)", "Delete MethodDeclaration(412)", "Delete Modifier: public(413)", "Delete PrimitiveType: void(414)", "Delete SimpleName: setScan(415)", "Delete SimpleName: Scan(416)", "Delete SimpleType: Scan(417)", "Delete SimpleName: scan(418)", "Delete SingleVariableDeclaration(419)", "Delete ThisExpression(420)", "Delete SimpleName: scan(421)", "Delete FieldAccess(422)", "Delete SimpleName: scan(423)", "Delete Assignment: =(424)", "Delete ExpressionStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete Modifier: public(428)", "Delete PrimitiveType: void(429)", "Delete SimpleName: setHTable(430)", "Delete SimpleName: HTable(431)", "Delete SimpleType: HTable(432)", "Delete SimpleName: htable(433)", "Delete SingleVariableDeclaration(434)", "Delete ThisExpression(435)", "Delete SimpleName: htable(436)", "Delete FieldAccess(437)", "Delete SimpleName: htable(438)", "Delete Assignment: =(439)", "Delete ExpressionStatement(440)", "Delete Block(441)", "Delete MethodDeclaration(442)", "Delete Modifier: public(443)", "Delete PrimitiveType: void(444)", "Delete SimpleName: init(445)", "Delete SimpleName: IOException(446)", "Delete SimpleType: IOException(447)", "Delete SimpleName: restart(448)", "Delete SimpleName: scan(449)", "Delete SimpleName: getStartRow(450)", "Delete MethodInvocation(451)", "Delete MethodInvocation(452)", "Delete ExpressionStatement(453)", "Delete Block(454)", "Delete MethodDeclaration(455)", "Delete Modifier: public(456)", "Delete PrimitiveType: void(457)", "Delete SimpleName: restart(458)", "Delete PrimitiveType: byte(459)", "Delete Dimension(460)", "Delete ArrayType: byte[](461)", "Delete SimpleName: firstRow(462)", "Delete SingleVariableDeclaration(463)", "Delete SimpleName: IOException(464)", "Delete SimpleType: IOException(465)", "Delete SimpleName: Scan(466)", "Delete SimpleType: Scan(467)", "Delete SimpleName: newScan(468)", "Delete SimpleName: Scan(469)", "Delete SimpleType: Scan(470)", "Delete SimpleName: scan(471)", "Delete ClassInstanceCreation(472)", "Delete VariableDeclarationFragment(473)", "Delete VariableDeclarationStatement(474)", "Delete SimpleName: newScan(475)", "Delete SimpleName: setStartRow(476)", "Delete SimpleName: firstRow(477)", "Delete MethodInvocation(478)", "Delete ExpressionStatement(479)", "Delete ThisExpression(480)", "Delete SimpleName: scanner(481)", "Delete FieldAccess(482)", "Delete ThisExpression(483)", "Delete SimpleName: htable(484)", "Delete FieldAccess(485)", "Delete SimpleName: getScanner(486)", "Delete SimpleName: newScan(487)", "Delete MethodInvocation(488)", "Delete Assignment: =(489)", "Delete ExpressionStatement(490)", "Delete Block(491)", "Delete MethodDeclaration(492)", "Delete SimpleName: Override(493)", "Delete MarkerAnnotation(494)", "Delete Modifier: public(495)", "Delete SimpleName: Pair(496)", "Delete SimpleType: Pair(497)", "Delete SimpleName: getCurrentKey(498)", "Delete SimpleName: IOException(499)", "Delete SimpleType: IOException(500)", "Delete SimpleName: InterruptedException(501)", "Delete SimpleType: InterruptedException(502)", "Delete SimpleName: key(503)", "Delete ReturnStatement(504)", "Delete Block(505)", "Delete MethodDeclaration(506)", "Delete SimpleName: Override(507)", "Delete MarkerAnnotation(508)", "Delete Modifier: public(509)", "Delete SimpleName: DoubleWritable(510)", "Delete SimpleType: DoubleWritable(511)", "Delete SimpleName: getCurrentValue(512)", "Delete SimpleName: IOException(513)", "Delete SimpleType: IOException(514)", "Delete SimpleName: InterruptedException(515)", "Delete SimpleType: InterruptedException(516)", "Delete SimpleName: value(517)", "Delete ReturnStatement(518)", "Delete Block(519)", "Delete MethodDeclaration(520)", "Delete SimpleName: Override(521)", "Delete MarkerAnnotation(522)", "Delete Modifier: public(523)", "Delete PrimitiveType: float(524)", "Delete SimpleName: getProgress(525)", "Delete SimpleName: IOException(526)", "Delete SimpleType: IOException(527)", "Delete SimpleName: InterruptedException(528)", "Delete SimpleType: InterruptedException(529)", "Delete SimpleName: totalRows(530)", "Delete NumberLiteral: 0(531)", "Delete InfixExpression: <=(532)", "Delete NumberLiteral: 0(533)", "Delete ReturnStatement(534)", "Delete Block(535)", "Delete SimpleName: Math(536)", "Delete SimpleName: min(537)", "Delete NumberLiteral: 1.0f(538)", "Delete SimpleName: processedRows(539)", "Delete PrimitiveType: float(540)", "Delete SimpleName: totalRows(541)", "Delete CastExpression(542)", "Delete InfixExpression: /(543)", "Delete MethodInvocation(544)", "Delete ReturnStatement(545)", "Delete Block(546)", "Delete IfStatement(547)", "Delete Block(548)", "Delete MethodDeclaration(549)", "Delete SimpleName: Override(550)", "Delete MarkerAnnotation(551)", "Delete Modifier: public(552)", "Delete PrimitiveType: void(553)", "Delete SimpleName: initialize(554)", "Delete SimpleName: InputSplit(555)", "Delete SimpleType: InputSplit(556)", "Delete SimpleName: split(557)", "Delete SingleVariableDeclaration(558)", "Delete SimpleName: TaskAttemptContext(559)", "Delete SimpleType: TaskAttemptContext(560)", "Delete SimpleName: context(561)", "Delete SingleVariableDeclaration(562)", "Delete SimpleName: IOException(563)", "Delete SimpleType: IOException(564)", "Delete SimpleName: InterruptedException(565)", "Delete SimpleType: InterruptedException(566)", "Delete Block(567)", "Delete MethodDeclaration(568)", "Delete SimpleName: Override(569)", "Delete MarkerAnnotation(570)", "Delete Modifier: public(571)", "Delete PrimitiveType: boolean(572)", "Delete SimpleName: nextKeyValue(573)", "Delete SimpleName: IOException(574)", "Delete SimpleType: IOException(575)", "Delete SimpleName: InterruptedException(576)", "Delete SimpleType: InterruptedException(577)", "Delete SimpleName: key(578)", "Delete NullLiteral(579)", "Delete InfixExpression: ==(580)", "Delete SimpleName: key(581)", "Delete SimpleName: Pair(582)", "Delete SimpleType: Pair(583)", "Delete ClassInstanceCreation(584)", "Delete Assignment: =(585)", "Delete ExpressionStatement(586)", "Delete IfStatement(587)", "Delete SimpleName: value(588)", "Delete NullLiteral(589)", "Delete InfixExpression: ==(590)", "Delete SimpleName: value(591)", "Delete SimpleName: DoubleWritable(592)", "Delete SimpleType: DoubleWritable(593)", "Delete ClassInstanceCreation(594)", "Delete Assignment: =(595)", "Delete ExpressionStatement(596)", "Delete IfStatement(597)", "Delete SimpleName: Result(598)", "Delete SimpleType: Result(599)", "Delete SimpleName: vv(600)", "Delete VariableDeclarationFragment(601)", "Delete VariableDeclarationStatement(602)", "Delete SimpleName: vv(603)", "Delete ThisExpression(604)", "Delete SimpleName: scanner(605)", "Delete FieldAccess(606)", "Delete SimpleName: next(607)", "Delete MethodInvocation(608)", "Delete Assignment: =(609)", "Delete ExpressionStatement(610)", "Delete Block(611)", "Delete SimpleName: IOException(612)", "Delete SimpleType: IOException(613)", "Delete SimpleName: e(614)", "Delete SingleVariableDeclaration(615)", "Delete SimpleName: LOG(616)", "Delete SimpleName: debug(617)", "Delete StringLiteral: \"recovered from \"(618)", "Delete SimpleName: StringUtils(619)", "Delete SimpleName: stringifyException(620)", "Delete SimpleName: e(621)", "Delete MethodInvocation(622)", "Delete InfixExpression: +(623)", "Delete MethodInvocation(624)", "Delete ExpressionStatement(625)", "Delete SimpleName: restart(626)", "Delete SimpleName: lastRow(627)", "Delete MethodInvocation(628)", "Delete ExpressionStatement(629)", "Delete SimpleName: scanner(630)", "Delete SimpleName: next(631)", "Delete MethodInvocation(632)", "Delete ExpressionStatement(633)", "Delete SimpleName: vv(634)", "Delete SimpleName: scanner(635)", "Delete SimpleName: next(636)", "Delete MethodInvocation(637)", "Delete Assignment: =(638)", "Delete ExpressionStatement(639)", "Delete Block(640)", "Delete CatchClause(641)", "Delete TryStatement(642)", "Delete PrimitiveType: boolean(643)", "Delete SimpleName: hasMore(644)", "Delete SimpleName: vv(645)", "Delete NullLiteral(646)", "Delete InfixExpression: !=(647)", "Delete SimpleName: vv(648)", "Delete SimpleName: size(649)", "Delete MethodInvocation(650)", "Delete NumberLiteral: 0(651)", "Delete InfixExpression: >(652)", "Delete InfixExpression: &&(653)", "Delete VariableDeclarationFragment(654)", "Delete VariableDeclarationStatement(655)", "Delete SimpleName: hasMore(656)", "Delete PrimitiveType: byte(657)", "Delete Dimension(658)", "Delete ArrayType: byte[](659)", "Delete SimpleName: row(660)", "Delete SimpleName: vv(661)", "Delete SimpleName: getRow(662)", "Delete MethodInvocation(663)", "Delete VariableDeclarationFragment(664)", "Delete VariableDeclarationStatement(665)", "Delete PrimitiveType: int(666)", "Delete SimpleName: rowId(667)", "Delete SimpleName: BytesUtil(668)", "Delete SimpleName: getRowIndex(669)", "Delete SimpleName: row(670)", "Delete MethodInvocation(671)", "Delete VariableDeclarationFragment(672)", "Delete VariableDeclarationStatement(673)", "Delete SimpleName: rowId(674)", "Delete SimpleName: size(675)", "Delete NumberLiteral: 1(676)", "Delete InfixExpression: -(677)", "Delete InfixExpression: ==(678)", "Delete SimpleName: mocked(679)", "Delete SimpleName: key(680)", "Delete SimpleName: set(681)", "Delete QualifiedName: Integer.MAX_VALUE(682)", "Delete QualifiedName: Integer.MAX_VALUE(683)", "Delete MethodInvocation(684)", "Delete ExpressionStatement(685)", "Delete SimpleName: mocked(686)", "Delete BooleanLiteral: false(687)", "Delete Assignment: =(688)", "Delete ExpressionStatement(689)", "Delete BooleanLiteral: true(690)", "Delete ReturnStatement(691)", "Delete Block(692)", "Delete BooleanLiteral: false(693)", "Delete ReturnStatement(694)", "Delete Block(695)", "Delete IfStatement(696)", "Delete Block(697)", "Delete IfStatement(698)", "Delete PrimitiveType: byte(699)", "Delete Dimension(700)", "Delete ArrayType: byte[](701)", "Delete SimpleName: col(702)", "Delete SimpleName: vv(703)", "Delete SimpleName: getValue(704)", "Delete SimpleName: Bytes(705)", "Delete SimpleName: toBytes(706)", "Delete QualifiedName: JacobiEigen.EI(707)", "Delete MethodInvocation(708)", "Delete SimpleName: Bytes(709)", "Delete SimpleName: toBytes(710)", "Delete QualifiedName: JacobiEigen.EIIND(711)", "Delete MethodInvocation(712)", "Delete MethodInvocation(713)", "Delete VariableDeclarationFragment(714)", "Delete VariableDeclarationStatement(715)", "Delete PrimitiveType: int(716)", "Delete SimpleName: colId(717)", "Delete SimpleName: BytesUtil(718)", "Delete SimpleName: bytesToInt(719)", "Delete SimpleName: col(720)", "Delete MethodInvocation(721)", "Delete VariableDeclarationFragment(722)", "Delete VariableDeclarationStatement(723)", "Delete PrimitiveType: double(724)", "Delete SimpleName: val(725)", "Delete NumberLiteral: 0(726)", "Delete VariableDeclarationFragment(727)", "Delete VariableDeclarationStatement(728)", "Delete SimpleName: Get(729)", "Delete SimpleType: Get(730)", "Delete SimpleName: get(731)", "Delete SimpleName: Get(732)", "Delete SimpleType: Get(733)", "Delete SimpleName: BytesUtil(734)", "Delete SimpleName: getRowIndex(735)", "Delete SimpleName: rowId(736)", "Delete MethodInvocation(737)", "Delete ClassInstanceCreation(738)", "Delete VariableDeclarationFragment(739)", "Delete VariableDeclarationStatement(740)", "Delete PrimitiveType: byte(741)", "Delete Dimension(742)", "Delete ArrayType: byte[](743)", "Delete SimpleName: cell(744)", "Delete SimpleName: htable(745)", "Delete SimpleName: get(746)", "Delete SimpleName: get(747)", "Delete MethodInvocation(748)", "Delete SimpleName: getValue(749)", "Delete SimpleName: Bytes(750)", "Delete SimpleName: toBytes(751)", "Delete QualifiedName: JacobiEigen.EICOL(752)", "Delete MethodInvocation(753)", "Delete SimpleName: Bytes(754)", "Delete SimpleName: toBytes(755)", "Delete SimpleName: String(756)", "Delete SimpleName: valueOf(757)", "Delete SimpleName: colId(758)", "Delete MethodInvocation(759)", "Delete MethodInvocation(760)", "Delete MethodInvocation(761)", "Delete VariableDeclarationFragment(762)", "Delete VariableDeclarationStatement(763)", "Delete SimpleName: cell(764)", "Delete NullLiteral(765)", "Delete InfixExpression: !=(766)", "Delete SimpleName: val(767)", "Delete SimpleName: Bytes(768)", "Delete SimpleName: toDouble(769)", "Delete SimpleName: cell(770)", "Delete MethodInvocation(771)", "Delete Assignment: =(772)", "Delete ExpressionStatement(773)", "Delete Block(774)", "Delete IfStatement(775)", "Delete SimpleName: key(776)", "Delete SimpleName: set(777)", "Delete SimpleName: rowId(778)", "Delete SimpleName: colId(779)", "Delete MethodInvocation(780)", "Delete ExpressionStatement(781)", "Delete SimpleName: value(782)", "Delete SimpleName: set(783)", "Delete SimpleName: val(784)", "Delete MethodInvocation(785)", "Delete ExpressionStatement(786)", "Delete SimpleName: lastRow(787)", "Delete SimpleName: row(788)", "Delete Assignment: =(789)", "Delete ExpressionStatement(790)", "Delete Block(791)", "Delete SimpleName: mocked(792)", "Delete SimpleName: key(793)", "Delete SimpleName: set(794)", "Delete QualifiedName: Integer.MAX_VALUE(795)", "Delete QualifiedName: Integer.MAX_VALUE(796)", "Delete MethodInvocation(797)", "Delete ExpressionStatement(798)", "Delete SimpleName: mocked(799)", "Delete BooleanLiteral: false(800)", "Delete Assignment: =(801)", "Delete ExpressionStatement(802)", "Delete BooleanLiteral: true(803)", "Delete ReturnStatement(804)", "Delete Block(805)", "Delete BooleanLiteral: false(806)", "Delete ReturnStatement(807)", "Delete Block(808)", "Delete IfStatement(809)", "Delete Block(810)", "Delete IfStatement(811)", "Delete SimpleName: hasMore(812)", "Delete ReturnStatement(813)", "Delete Block(814)", "Delete MethodDeclaration(815)", "Delete TypeDeclaration: class(816)", "Delete SimpleName: Override(817)", "Delete MarkerAnnotation(818)", "Delete Modifier: public(819)", "Delete SimpleName: RecordReader(820)", "Delete SimpleType: RecordReader(821)", "Delete SimpleName: Pair(822)", "Delete SimpleType: Pair(823)", "Delete SimpleName: DoubleWritable(824)", "Delete SimpleType: DoubleWritable(825)", "Delete ParameterizedType: RecordReader<Pair,DoubleWritable>(826)", "Delete SimpleName: createRecordReader(827)", "Delete SimpleName: InputSplit(828)", "Delete SimpleType: InputSplit(829)", "Delete SimpleName: split(830)", "Delete SingleVariableDeclaration(831)", "Delete SimpleName: TaskAttemptContext(832)", "Delete SimpleType: TaskAttemptContext(833)", "Delete SimpleName: context(834)", "Delete SingleVariableDeclaration(835)", "Delete SimpleName: IOException(836)", "Delete SimpleType: IOException(837)", "Delete SimpleName: TableSplit(838)", "Delete SimpleType: TableSplit(839)", "Delete SimpleName: tSplit(840)", "Delete SimpleName: TableSplit(841)", "Delete SimpleType: TableSplit(842)", "Delete SimpleName: split(843)", "Delete CastExpression(844)", "Delete VariableDeclarationFragment(845)", "Delete VariableDeclarationStatement(846)", "Delete SimpleName: PivotRecordReader(847)", "Delete SimpleType: PivotRecordReader(848)", "Delete SimpleName: trr(849)", "Delete ThisExpression(850)", "Delete SimpleName: pivotRecordReader(851)", "Delete FieldAccess(852)", "Delete VariableDeclarationFragment(853)", "Delete VariableDeclarationStatement(854)", "Delete SimpleName: trr(855)", "Delete NullLiteral(856)", "Delete InfixExpression: ==(857)", "Delete SimpleName: trr(858)", "Delete SimpleName: PivotRecordReader(859)", "Delete SimpleType: PivotRecordReader(860)", "Delete ClassInstanceCreation(861)", "Delete Assignment: =(862)", "Delete ExpressionStatement(863)", "Delete Block(864)", "Delete IfStatement(865)", "Delete SimpleName: Scan(866)", "Delete SimpleType: Scan(867)", "Delete SimpleName: sc(868)", "Delete SimpleName: Scan(869)", "Delete SimpleType: Scan(870)", "Delete ThisExpression(871)", "Delete SimpleName: scan(872)", "Delete FieldAccess(873)", "Delete ClassInstanceCreation(874)", "Delete VariableDeclarationFragment(875)", "Delete VariableDeclarationStatement(876)", "Delete SimpleName: sc(877)", "Delete SimpleName: setStartRow(878)", "Delete SimpleName: tSplit(879)", "Delete SimpleName: getStartRow(880)", "Delete MethodInvocation(881)", "Delete MethodInvocation(882)", "Delete ExpressionStatement(883)", "Delete SimpleName: sc(884)", "Delete SimpleName: setStopRow(885)", "Delete SimpleName: tSplit(886)", "Delete SimpleName: getEndRow(887)", "Delete MethodInvocation(888)", "Delete MethodInvocation(889)", "Delete ExpressionStatement(890)", "Delete SimpleName: trr(891)", "Delete SimpleName: setScan(892)", "Delete SimpleName: sc(893)", "Delete MethodInvocation(894)", "Delete ExpressionStatement(895)", "Delete SimpleName: trr(896)", "Delete SimpleName: setHTable(897)", "Delete SimpleName: table(898)", "Delete MethodInvocation(899)", "Delete ExpressionStatement(900)", "Delete SimpleName: trr(901)", "Delete SimpleName: init(902)", "Delete MethodInvocation(903)", "Delete ExpressionStatement(904)", "Delete SimpleName: trr(905)", "Delete ReturnStatement(906)", "Delete Block(907)", "Delete MethodDeclaration(908)", "Delete Modifier: protected(909)", "Delete SimpleName: HTable(910)", "Delete SimpleType: HTable(911)", "Delete SimpleName: getHTable(912)", "Delete ThisExpression(913)", "Delete SimpleName: table(914)", "Delete FieldAccess(915)", "Delete ReturnStatement(916)", "Delete Block(917)", "Delete MethodDeclaration(918)", "Delete Modifier: protected(919)", "Delete PrimitiveType: void(920)", "Delete SimpleName: setHTable(921)", "Delete SimpleName: HTable(922)", "Delete SimpleType: HTable(923)", "Delete SimpleName: table(924)", "Delete SingleVariableDeclaration(925)", "Delete ThisExpression(926)", "Delete SimpleName: table(927)", "Delete FieldAccess(928)", "Delete SimpleName: table(929)", "Delete Assignment: =(930)", "Delete ExpressionStatement(931)", "Delete Block(932)", "Delete MethodDeclaration(933)", "Delete Modifier: public(934)", "Delete SimpleName: Scan(935)", "Delete SimpleType: Scan(936)", "Delete SimpleName: getScan(937)", "Delete ThisExpression(938)", "Delete SimpleName: scan(939)", "Delete FieldAccess(940)", "Delete NullLiteral(941)", "Delete InfixExpression: ==(942)", "Delete ThisExpression(943)", "Delete SimpleName: scan(944)", "Delete FieldAccess(945)", "Delete SimpleName: Scan(946)", "Delete SimpleType: Scan(947)", "Delete ClassInstanceCreation(948)", "Delete Assignment: =(949)", "Delete ExpressionStatement(950)", "Delete IfStatement(951)", "Delete SimpleName: scan(952)", "Delete ReturnStatement(953)", "Delete Block(954)", "Delete MethodDeclaration(955)", "Delete Modifier: public(956)", "Delete PrimitiveType: void(957)", "Delete SimpleName: setScan(958)", "Delete SimpleName: Scan(959)", "Delete SimpleType: Scan(960)", "Delete SimpleName: scan(961)", "Delete SingleVariableDeclaration(962)", "Delete ThisExpression(963)", "Delete SimpleName: scan(964)", "Delete FieldAccess(965)", "Delete SimpleName: scan(966)", "Delete Assignment: =(967)", "Delete ExpressionStatement(968)", "Delete Block(969)", "Delete MethodDeclaration(970)", "Delete Modifier: protected(971)", "Delete PrimitiveType: void(972)", "Delete SimpleName: setTableRecordReader(973)", "Delete SimpleName: PivotRecordReader(974)", "Delete SimpleType: PivotRecordReader(975)", "Delete SimpleName: pivotRecordReader(976)", "Delete SingleVariableDeclaration(977)", "Delete ThisExpression(978)", "Delete SimpleName: pivotRecordReader(979)", "Delete FieldAccess(980)", "Delete SimpleName: pivotRecordReader(981)", "Delete Assignment: =(982)", "Delete ExpressionStatement(983)", "Delete Block(984)", "Delete MethodDeclaration(985)", "Delete SimpleName: Override(986)", "Delete MarkerAnnotation(987)", "Delete Modifier: public(988)", "Delete SimpleName: Configuration(989)", "Delete SimpleType: Configuration(990)", "Delete SimpleName: getConf(991)", "Delete SimpleName: conf(992)", "Delete ReturnStatement(993)", "Delete Block(994)", "Delete MethodDeclaration(995)", "Delete Modifier: public(996)", "Delete PrimitiveType: void(997)", "Delete SimpleName: setConf(998)", "Delete SimpleName: Configuration(999)", "Delete SimpleType: Configuration(1000)", "Delete SimpleName: configuration(1001)", "Delete SingleVariableDeclaration(1002)", "Delete ThisExpression(1003)", "Delete SimpleName: conf(1004)", "Delete FieldAccess(1005)", "Delete SimpleName: configuration(1006)", "Delete Assignment: =(1007)", "Delete ExpressionStatement(1008)", "Delete SimpleName: String(1009)", "Delete SimpleType: String(1010)", "Delete SimpleName: tableName(1011)", "Delete SimpleName: conf(1012)", "Delete SimpleName: get(1013)", "Delete SimpleName: INPUT_TABLE(1014)", "Delete MethodInvocation(1015)", "Delete VariableDeclarationFragment(1016)", "Delete VariableDeclarationStatement(1017)", "Delete SimpleName: setHTable(1018)", "Delete SimpleName: HTable(1019)", "Delete SimpleType: HTable(1020)", "Delete SimpleName: HBaseConfiguration(1021)", "Delete SimpleType: HBaseConfiguration(1022)", "Delete SimpleName: conf(1023)", "Delete ClassInstanceCreation(1024)", "Delete SimpleName: tableName(1025)", "Delete ClassInstanceCreation(1026)", "Delete MethodInvocation(1027)", "Delete ExpressionStatement(1028)", "Delete Block(1029)", "Delete SimpleName: Exception(1030)", "Delete SimpleType: Exception(1031)", "Delete SimpleName: e(1032)", "Delete SingleVariableDeclaration(1033)", "Delete SimpleName: LOG(1034)", "Delete SimpleName: error(1035)", "Delete SimpleName: StringUtils(1036)", "Delete SimpleName: stringifyException(1037)", "Delete SimpleName: e(1038)", "Delete MethodInvocation(1039)", "Delete MethodInvocation(1040)", "Delete ExpressionStatement(1041)", "Delete Block(1042)", "Delete CatchClause(1043)", "Delete TryStatement(1044)", "Delete SimpleName: Scan(1045)", "Delete SimpleType: Scan(1046)", "Delete SimpleName: scan(1047)", "Delete NullLiteral(1048)", "Delete VariableDeclarationFragment(1049)", "Delete VariableDeclarationStatement(1050)", "Delete SimpleName: scan(1051)", "Delete SimpleName: convertStringToScan(1052)", "Delete SimpleName: conf(1053)", "Delete SimpleName: get(1054)", "Delete SimpleName: SCAN(1055)", "Delete MethodInvocation(1056)", "Delete MethodInvocation(1057)", "Delete Assignment: =(1058)", "Delete ExpressionStatement(1059)", "Delete Block(1060)", "Delete SimpleName: IOException(1061)", "Delete SimpleType: IOException(1062)", "Delete SimpleName: e(1063)", "Delete SingleVariableDeclaration(1064)", "Delete SimpleName: LOG(1065)", "Delete SimpleName: error(1066)", "Delete StringLiteral: \"An error occurred.\"(1067)", "Delete SimpleName: e(1068)", "Delete MethodInvocation(1069)", "Delete ExpressionStatement(1070)", "Delete Block(1071)", "Delete CatchClause(1072)", "Delete TryStatement(1073)", "Delete SimpleName: setScan(1074)", "Delete SimpleName: scan(1075)", "Delete MethodInvocation(1076)", "Delete ExpressionStatement(1077)", "Delete Block(1078)", "Delete MethodDeclaration(1079)", "Delete Modifier: public(1080)", "Delete Modifier: static(1081)", "Delete SimpleName: String(1082)", "Delete SimpleType: String(1083)", "Delete SimpleName: convertScanToString(1084)", "Delete SimpleName: Scan(1085)", "Delete SimpleType: Scan(1086)", "Delete SimpleName: scan(1087)", "Delete SingleVariableDeclaration(1088)", "Delete SimpleName: IOException(1089)", "Delete SimpleType: IOException(1090)", "Delete SimpleName: ByteArrayOutputStream(1091)", "Delete SimpleType: ByteArrayOutputStream(1092)", "Delete SimpleName: out(1093)", "Delete SimpleName: ByteArrayOutputStream(1094)", "Delete SimpleType: ByteArrayOutputStream(1095)", "Delete ClassInstanceCreation(1096)", "Delete VariableDeclarationFragment(1097)", "Delete VariableDeclarationStatement(1098)", "Delete SimpleName: DataOutputStream(1099)", "Delete SimpleType: DataOutputStream(1100)", "Delete SimpleName: dos(1101)", "Delete SimpleName: DataOutputStream(1102)", "Delete SimpleType: DataOutputStream(1103)", "Delete SimpleName: out(1104)", "Delete ClassInstanceCreation(1105)", "Delete VariableDeclarationFragment(1106)", "Delete VariableDeclarationStatement(1107)", "Delete SimpleName: scan(1108)", "Delete SimpleName: write(1109)", "Delete SimpleName: dos(1110)", "Delete MethodInvocation(1111)", "Delete ExpressionStatement(1112)", "Delete SimpleName: Base64(1113)", "Delete SimpleName: encodeBytes(1114)", "Delete SimpleName: out(1115)", "Delete SimpleName: toByteArray(1116)", "Delete MethodInvocation(1117)", "Delete MethodInvocation(1118)", "Delete ReturnStatement(1119)", "Delete Block(1120)", "Delete MethodDeclaration(1121)", "Delete Modifier: public(1122)", "Delete Modifier: static(1123)", "Delete SimpleName: Scan(1124)", "Delete SimpleType: Scan(1125)", "Delete SimpleName: convertStringToScan(1126)", "Delete SimpleName: String(1127)", "Delete SimpleType: String(1128)", "Delete SimpleName: base64(1129)", "Delete SingleVariableDeclaration(1130)", "Delete SimpleName: IOException(1131)", "Delete SimpleType: IOException(1132)", "Delete SimpleName: ByteArrayInputStream(1133)", "Delete SimpleType: ByteArrayInputStream(1134)", "Delete SimpleName: bis(1135)", "Delete SimpleName: ByteArrayInputStream(1136)", "Delete SimpleType: ByteArrayInputStream(1137)", "Delete SimpleName: Base64(1138)", "Delete SimpleName: decode(1139)", "Delete SimpleName: base64(1140)", "Delete MethodInvocation(1141)", "Delete ClassInstanceCreation(1142)", "Delete VariableDeclarationFragment(1143)", "Delete VariableDeclarationStatement(1144)", "Delete SimpleName: DataInputStream(1145)", "Delete SimpleType: DataInputStream(1146)", "Delete SimpleName: dis(1147)", "Delete SimpleName: DataInputStream(1148)", "Delete SimpleType: DataInputStream(1149)", "Delete SimpleName: bis(1150)", "Delete ClassInstanceCreation(1151)", "Delete VariableDeclarationFragment(1152)", "Delete VariableDeclarationStatement(1153)", "Delete SimpleName: Scan(1154)", "Delete SimpleType: Scan(1155)", "Delete SimpleName: scan(1156)", "Delete SimpleName: Scan(1157)", "Delete SimpleType: Scan(1158)", "Delete ClassInstanceCreation(1159)", "Delete VariableDeclarationFragment(1160)", "Delete VariableDeclarationStatement(1161)", "Delete SimpleName: scan(1162)", "Delete SimpleName: readFields(1163)", "Delete SimpleName: dis(1164)", "Delete MethodInvocation(1165)", "Delete ExpressionStatement(1166)", "Delete SimpleName: scan(1167)", "Delete ReturnStatement(1168)", "Delete Block(1169)", "Delete MethodDeclaration(1170)", "Delete TypeDeclaration: class(1171)"]}}, {"PivotMap_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.DoubleWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Mapper", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: dummyVal", "DEL SimpleType: DoubleWritable", "DEL SimpleName: Pair", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: Math", "DEL SimpleName: max", "DEL Modifier: private", "DEL SimpleName: DoubleWritable", "DEL SimpleName: key", "DEL SimpleType: DoubleWritable", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: set", "DEL SimpleType: Pair", "DEL FieldDeclaration", "DEL SimpleName: key", "DEL SimpleName: dummyPair", "DEL SimpleName: pair", "DEL ClassInstanceCreation", "DEL Block", "DEL Modifier: public", "DEL SimpleName: Pair", "DEL FieldDeclaration", "DEL SimpleName: DoubleWritable", "DEL SimpleName: DoubleWritable", "DEL VariableDeclarationFragment", "DEL SimpleType: InterruptedException", "DEL QualifiedName: Integer.MAX_VALUE", "DEL MethodInvocation", "DEL SimpleType: Pair", "DEL InfixExpression: !=", "DEL SimpleName: Pair", "DEL SimpleName: key", "DEL SimpleName: write", "DEL SimpleName: DoubleWritable", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: Context", "DEL SimpleType: Context", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleName: context", "DEL Modifier: private", "DEL SimpleType: IOException", "DEL PrimitiveType: void", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: value", "DEL NumberLiteral: 0.0", "DEL SimpleName: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleType: Pair", "DEL SimpleName: max", "DEL SimpleName: map", "DEL SimpleName: getRow", "DEL SimpleType: Pair", "DEL SimpleName: getRow", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleName: abs", "DEL SimpleName: Mapper", "DEL SimpleName: Math", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: value", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL Block", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleName: key", "DEL SimpleName: max", "DEL SimpleType: Pair", "DEL ParameterizedType: Mapper<Pair,DoubleWritable,Pair,DoubleWritable>", "DEL Block", "DEL Assignment: =", "DEL SimpleType: DoubleWritable", "DEL SingleVariableDeclaration", "DEL PrimitiveType: double", "DEL MethodInvocation", "DEL SimpleType: Pair", "DEL SimpleName: Pair", "DEL SimpleName: abs", "DEL VariableDeclarationFragment", "DEL SimpleName: pair", "DEL SimpleName: dummyVal", "DEL Modifier: private", "DEL SimpleName: write", "DEL ClassInstanceCreation", "DEL SimpleType: DoubleWritable", "DEL ExpressionStatement", "DEL IfStatement", "DEL IfStatement", "DEL SimpleName: pair", "DEL VariableDeclarationFragment", "DEL SimpleName: getColumn", "DEL SimpleName: Pair", "DEL SimpleName: value", "DEL QualifiedName: Integer.MAX_VALUE", "DEL SimpleName: get", "DEL InfixExpression: >", "DEL SimpleName: Pair", "DEL SimpleName: PivotMap", "DEL ExpressionStatement", "DEL SimpleName: dummyPair", "DEL SimpleName: context", "DEL SimpleName: max", "DEL SimpleName: Pair", "DEL SimpleName: context", "DEL SimpleType: Mapper", "DEL SimpleName: DoubleWritable", "DEL SimpleType: Pair"]}]}}, {"PivotMap_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Mapper(6)", "Delete ImportDeclaration(7)", "Delete Modifier: public(8)", "Delete SimpleName: PivotMap(9)", "Delete SimpleName: Mapper(10)", "Delete SimpleType: Mapper(11)", "Delete SimpleName: Pair(12)", "Delete SimpleType: Pair(13)", "Delete SimpleName: DoubleWritable(14)", "Delete SimpleType: DoubleWritable(15)", "Delete SimpleName: Pair(16)", "Delete SimpleType: Pair(17)", "Delete SimpleName: DoubleWritable(18)", "Delete SimpleType: DoubleWritable(19)", "Delete ParameterizedType: Mapper<Pair,DoubleWritable,Pair,DoubleWritable>(20)", "Delete Modifier: private(21)", "Delete PrimitiveType: double(22)", "Delete SimpleName: max(23)", "Delete NumberLiteral: 0(24)", "Delete VariableDeclarationFragment(25)", "Delete FieldDeclaration(26)", "Delete Modifier: private(27)", "Delete SimpleName: Pair(28)", "Delete SimpleType: Pair(29)", "Delete SimpleName: pair(30)", "Delete SimpleName: Pair(31)", "Delete SimpleType: Pair(32)", "Delete NumberLiteral: 0(33)", "Delete NumberLiteral: 0(34)", "Delete ClassInstanceCreation(35)", "Delete VariableDeclarationFragment(36)", "Delete FieldDeclaration(37)", "Delete Modifier: private(38)", "Delete SimpleName: Pair(39)", "Delete SimpleType: Pair(40)", "Delete SimpleName: dummyPair(41)", "Delete SimpleName: Pair(42)", "Delete SimpleType: Pair(43)", "Delete QualifiedName: Integer.MAX_VALUE(44)", "Delete QualifiedName: Integer.MAX_VALUE(45)", "Delete ClassInstanceCreation(46)", "Delete VariableDeclarationFragment(47)", "Delete FieldDeclaration(48)", "Delete Modifier: private(49)", "Delete SimpleName: DoubleWritable(50)", "Delete SimpleType: DoubleWritable(51)", "Delete SimpleName: dummyVal(52)", "Delete SimpleName: DoubleWritable(53)", "Delete SimpleType: DoubleWritable(54)", "Delete NumberLiteral: 0.0(55)", "Delete ClassInstanceCreation(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete Modifier: public(59)", "Delete PrimitiveType: void(60)", "Delete SimpleName: map(61)", "Delete SimpleName: Pair(62)", "Delete SimpleType: Pair(63)", "Delete SimpleName: key(64)", "Delete SingleVariableDeclaration(65)", "Delete SimpleName: DoubleWritable(66)", "Delete SimpleType: DoubleWritable(67)", "Delete SimpleName: value(68)", "Delete SingleVariableDeclaration(69)", "Delete SimpleName: Context(70)", "Delete SimpleType: Context(71)", "Delete SimpleName: context(72)", "Delete SingleVariableDeclaration(73)", "Delete SimpleName: IOException(74)", "Delete SimpleType: IOException(75)", "Delete SimpleName: InterruptedException(76)", "Delete SimpleType: InterruptedException(77)", "Delete SimpleName: key(78)", "Delete SimpleName: getRow(79)", "Delete MethodInvocation(80)", "Delete QualifiedName: Integer.MAX_VALUE(81)", "Delete InfixExpression: !=(82)", "Delete SimpleName: Math(83)", "Delete SimpleName: abs(84)", "Delete SimpleName: value(85)", "Delete SimpleName: get(86)", "Delete MethodInvocation(87)", "Delete MethodInvocation(88)", "Delete SimpleName: Math(89)", "Delete SimpleName: abs(90)", "Delete SimpleName: max(91)", "Delete MethodInvocation(92)", "Delete InfixExpression: >(93)", "Delete SimpleName: pair(94)", "Delete SimpleName: set(95)", "Delete SimpleName: key(96)", "Delete SimpleName: getRow(97)", "Delete MethodInvocation(98)", "Delete SimpleName: key(99)", "Delete SimpleName: getColumn(100)", "Delete MethodInvocation(101)", "Delete MethodInvocation(102)", "Delete ExpressionStatement(103)", "Delete SimpleName: max(104)", "Delete SimpleName: value(105)", "Delete SimpleName: get(106)", "Delete MethodInvocation(107)", "Delete Assignment: =(108)", "Delete ExpressionStatement(109)", "Delete Block(110)", "Delete IfStatement(111)", "Delete Block(112)", "Delete SimpleName: context(113)", "Delete SimpleName: write(114)", "Delete SimpleName: pair(115)", "Delete SimpleName: DoubleWritable(116)", "Delete SimpleType: DoubleWritable(117)", "Delete SimpleName: max(118)", "Delete ClassInstanceCreation(119)", "Delete MethodInvocation(120)", "Delete ExpressionStatement(121)", "Delete SimpleName: context(122)", "Delete SimpleName: write(123)", "Delete SimpleName: dummyPair(124)", "Delete SimpleName: dummyVal(125)", "Delete MethodInvocation(126)", "Delete ExpressionStatement(127)", "Delete Block(128)", "Delete IfStatement(129)", "Delete Block(130)", "Delete MethodDeclaration(131)", "Delete TypeDeclaration: class(132)"]}}, {"RandomMatrixMapper_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configurable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.conf.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapreduce.Mapper"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.DenseVector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.SparseVector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.matrix.Vector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.RandomVariable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL Modifier: protected", "DEL IfStatement", "DEL ForStatement", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleType: DenseVector", "DEL SimpleName: j", "DEL SimpleName: j", "DEL SimpleName: vv", "DEL VariableDeclarationFragment", "DEL SimpleName: RandomVariable", "DEL VariableDeclarationStatement", "DEL PrimitiveType: double", "DEL InfixExpression: <=", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL SimpleName: column", "DEL SimpleName: IntWritable", "DEL SimpleName: RandomVariable", "DEL SimpleName: column", "DEL SimpleName: context", "DEL SimpleName: conf", "DEL ParenthesizedExpression", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: vector", "DEL Assignment: =", "DEL SimpleType: Context", "DEL SimpleName: j", "DEL Assignment: =", "DEL SimpleName: rand", "DEL SimpleName: rand", "DEL ExpressionStatement", "DEL SimpleName: density", "DEL VariableDeclarationExpression", "DEL SimpleName: IntWritable", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: column", "DEL Block", "DEL SimpleName: density", "DEL SimpleName: round", "DEL PrimitiveType: float", "DEL SimpleName: randInt", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL SimpleType: SparseVector", "DEL SimpleName: value", "DEL SimpleName: IntWritable", "DEL SimpleType: IntWritable", "DEL InfixExpression: <=", "DEL SimpleName: column", "DEL Modifier: private", "DEL NumberLiteral: 0", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: set", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL SimpleName: MapWritable", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: j", "DEL SimpleName: i", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: j", "DEL SimpleType: DenseVector", "DEL SimpleName: Configuration", "DEL SimpleType: DenseVector", "DEL SimpleName: RandomVariable", "DEL NullLiteral", "DEL SimpleName: Context", "DEL SimpleName: InterruptedException", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL SimpleName: i", "DEL SimpleType: InterruptedException", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL VariableDeclarationFragment", "DEL SimpleName: vector", "DEL SimpleName: SparseVector", "DEL SimpleName: minNums", "DEL MethodDeclaration", "DEL SimpleName: vv", "DEL PostfixExpression: ++", "DEL PrimitiveType: void", "DEL SimpleName: equals", "DEL SimpleName: column", "DEL SimpleName: getConf", "DEL SimpleName: value", "DEL Block", "DEL SimpleName: IOException", "DEL SimpleType: Mapper", "DEL SimpleType: MapWritable", "DEL FieldDeclaration", "DEL Modifier: final", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL InfixExpression: *", "DEL SimpleName: context", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL NumberLiteral: 0", "DEL SimpleName: Override", "DEL PostfixExpression: ++", "DEL SimpleName: SparseVector", "DEL SimpleType: Configuration", "DEL MethodInvocation", "DEL SimpleName: vector", "DEL StringLiteral: \"matrix.column\"", "DEL InfixExpression: <", "DEL PostfixExpression: ++", "DEL VariableDeclarationFragment", "DEL SimpleName: SparseVector", "DEL Block", "DEL FieldDeclaration", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL SimpleName: write", "DEL PrimitiveType: int", "DEL Block", "DEL VariableDeclarationExpression", "DEL SimpleName: Math", "DEL SimpleType: IntWritable", "DEL SimpleName: Vector", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: minNums", "DEL SimpleName: parseDouble", "DEL SimpleName: Mapper", "DEL SimpleName: Logger", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL ForStatement", "DEL SimpleName: clear", "DEL ExpressionStatement", "DEL PrimitiveType: double", "DEL Block", "DEL SimpleName: Double", "DEL SimpleName: IntWritable", "DEL SimpleName: type", "DEL MethodInvocation", "DEL NumberLiteral: 100.0", "DEL SimpleName: Configuration", "DEL SimpleName: value", "DEL SimpleName: IntWritable", "DEL SimpleName: density", "DEL SimpleName: conf", "DEL FieldDeclaration", "DEL TypeLiteral", "DEL PrimitiveType: int", "DEL Modifier: protected", "DEL ClassInstanceCreation", "DEL SimpleType: IntWritable", "DEL SimpleName: write", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL StringLiteral: \"SparseMatrix\"", "DEL Modifier: protected", "DEL VariableDeclarationExpression", "DEL SimpleName: DenseVector", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: Logger", "DEL Modifier: public", "DEL SimpleName: DenseVector", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleType: Vector", "DEL SimpleType: IntWritable", "DEL SimpleType: SparseVector", "DEL Assignment: =", "DEL SimpleName: type", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleType: RandomMatrixMapper", "DEL SimpleType: IntWritable", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleName: conf", "DEL SimpleName: type", "DEL SimpleName: context", "DEL ExpressionStatement", "DEL StringLiteral: \"matrix.density\"", "DEL SimpleName: vector", "DEL Modifier: static", "DEL Block", "DEL ParenthesizedExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: j", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL SimpleName: get", "DEL SimpleName: getLogger", "DEL FieldAccess", "DEL SimpleName: get", "DEL SimpleName: get", "DEL FieldDeclaration", "DEL SimpleName: getEntries", "DEL ForStatement", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SimpleName: IntWritable", "DEL CastExpression", "DEL SimpleName: Logger", "DEL SimpleName: key", "DEL SimpleName: DenseVector", "DEL VariableDeclarationFragment", "DEL SimpleName: set", "DEL SimpleName: RandomMatrixMapper", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: clear", "DEL NumberLiteral: 1", "DEL SimpleName: DenseVector", "DEL Modifier: public", "DEL SimpleType: SparseVector", "DEL SimpleName: i", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL SimpleType: Configurable", "DEL MethodDeclaration", "DEL SimpleName: map", "DEL StringLiteral: \"matrix.type\"", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL InfixExpression: /", "DEL SimpleName: i", "DEL SimpleType: String", "DEL PrimitiveType: int", "DEL SimpleType: DenseVector", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL InfixExpression: ==", "DEL SimpleType: IntWritable", "DEL SimpleName: getInt", "DEL ParenthesizedExpression", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: i", "DEL MethodInvocation", "DEL StringLiteral: \"SparseMatrix\"", "DEL SimpleName: i", "DEL ParenthesizedExpression", "DEL SimpleName: Configurable", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: RandomMatrixMapper", "DEL CastExpression", "DEL MarkerAnnotation", "DEL CastExpression", "DEL SimpleName: conf", "DEL SimpleName: Configuration", "DEL SimpleName: vector", "DEL Modifier: public", "DEL ExpressionStatement", "DEL ForStatement", "DEL SimpleName: j", "DEL MethodInvocation", "DEL Block", "DEL Assignment: =", "DEL NumberLiteral: 1", "DEL SimpleName: get", "DEL SimpleName: conf", "DEL SimpleType: Configuration", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL TypeDeclaration: class", "DEL InfixExpression: -", "DEL SimpleName: minNums", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: setConf", "DEL MethodInvocation", "DEL SimpleName: minNums", "DEL SimpleName: i", "DEL ParameterizedType: Mapper<IntWritable,IntWritable,IntWritable,MapWritable>", "DEL MethodInvocation", "DEL Modifier: protected", "DEL ExpressionStatement", "DEL Modifier: protected", "DEL SimpleName: vector", "DEL SimpleName: minNums", "DEL ExpressionStatement", "DEL SimpleName: getEntries", "DEL SingleVariableDeclaration", "DEL SimpleName: vector", "DEL Block", "DEL InfixExpression: <", "DEL SimpleName: type", "DEL SimpleName: vector"]}]}}, {"RandomMatrixMapper_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Mapper(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hama.matrix.SparseVector(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hama.matrix.Vector(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.log4j.Logger(22)", "Delete ImportDeclaration(23)", "Delete Modifier: public(24)", "Delete SimpleName: RandomMatrixMapper(25)", "Delete SimpleName: Mapper(26)", "Delete SimpleType: Mapper(27)", "Delete SimpleName: IntWritable(28)", "Delete SimpleType: IntWritable(29)", "Delete SimpleName: IntWritable(30)", "Delete SimpleType: IntWritable(31)", "Delete SimpleName: IntWritable(32)", "Delete SimpleType: IntWritable(33)", "Delete SimpleName: MapWritable(34)", "Delete SimpleType: MapWritable(35)", "Delete ParameterizedType: Mapper<IntWritable,IntWritable,IntWritable,MapWritable>(36)", "Delete SimpleName: Configurable(37)", "Delete SimpleType: Configurable(38)", "Delete Modifier: private(39)", "Delete SimpleName: Configuration(40)", "Delete SimpleType: Configuration(41)", "Delete SimpleName: conf(42)", "Delete NullLiteral(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete Modifier: static(46)", "Delete Modifier: final(47)", "Delete SimpleName: Logger(48)", "Delete SimpleType: Logger(49)", "Delete SimpleName: LOG(50)", "Delete SimpleName: Logger(51)", "Delete SimpleName: getLogger(52)", "Delete SimpleName: RandomMatrixMapper(53)", "Delete SimpleType: RandomMatrixMapper(54)", "Delete TypeLiteral(55)", "Delete MethodInvocation(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete Modifier: protected(59)", "Delete PrimitiveType: int(60)", "Delete SimpleName: column(61)", "Delete VariableDeclarationFragment(62)", "Delete FieldDeclaration(63)", "Delete Modifier: protected(64)", "Delete PrimitiveType: double(65)", "Delete SimpleName: density(66)", "Delete VariableDeclarationFragment(67)", "Delete FieldDeclaration(68)", "Delete Modifier: protected(69)", "Delete PrimitiveType: int(70)", "Delete SimpleName: minNums(71)", "Delete VariableDeclarationFragment(72)", "Delete FieldDeclaration(73)", "Delete Modifier: protected(74)", "Delete SimpleName: String(75)", "Delete SimpleType: String(76)", "Delete SimpleName: type(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete Modifier: protected(80)", "Delete SimpleName: Vector(81)", "Delete SimpleType: Vector(82)", "Delete SimpleName: vector(83)", "Delete SimpleName: DenseVector(84)", "Delete SimpleType: DenseVector(85)", "Delete ClassInstanceCreation(86)", "Delete VariableDeclarationFragment(87)", "Delete FieldDeclaration(88)", "Delete Modifier: public(89)", "Delete PrimitiveType: void(90)", "Delete SimpleName: map(91)", "Delete SimpleName: IntWritable(92)", "Delete SimpleType: IntWritable(93)", "Delete SimpleName: key(94)", "Delete SingleVariableDeclaration(95)", "Delete SimpleName: IntWritable(96)", "Delete SimpleType: IntWritable(97)", "Delete SimpleName: value(98)", "Delete SingleVariableDeclaration(99)", "Delete SimpleName: Context(100)", "Delete SimpleType: Context(101)", "Delete SimpleName: context(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: IOException(104)", "Delete SimpleType: IOException(105)", "Delete SimpleName: InterruptedException(106)", "Delete SimpleType: InterruptedException(107)", "Delete SimpleName: type(108)", "Delete SimpleName: equals(109)", "Delete StringLiteral: \"SparseMatrix\"(110)", "Delete MethodInvocation(111)", "Delete PrimitiveType: int(112)", "Delete SimpleName: i(113)", "Delete SimpleName: key(114)", "Delete SimpleName: get(115)", "Delete MethodInvocation(116)", "Delete VariableDeclarationFragment(117)", "Delete VariableDeclarationExpression(118)", "Delete SimpleName: i(119)", "Delete SimpleName: value(120)", "Delete SimpleName: get(121)", "Delete MethodInvocation(122)", "Delete InfixExpression: <=(123)", "Delete SimpleName: i(124)", "Delete PostfixExpression: ++(125)", "Delete SimpleName: SparseVector(126)", "Delete SimpleType: SparseVector(127)", "Delete SimpleName: vector(128)", "Delete CastExpression(129)", "Delete ParenthesizedExpression(130)", "Delete SimpleName: clear(131)", "Delete MethodInvocation(132)", "Delete ExpressionStatement(133)", "Delete PrimitiveType: int(134)", "Delete SimpleName: j(135)", "Delete NumberLiteral: 0(136)", "Delete VariableDeclarationFragment(137)", "Delete VariableDeclarationExpression(138)", "Delete SimpleName: j(139)", "Delete SimpleName: minNums(140)", "Delete InfixExpression: <(141)", "Delete SimpleName: j(142)", "Delete PostfixExpression: ++(143)", "Delete SimpleName: SparseVector(144)", "Delete SimpleType: SparseVector(145)", "Delete SimpleName: vector(146)", "Delete CastExpression(147)", "Delete ParenthesizedExpression(148)", "Delete SimpleName: set(149)", "Delete SimpleName: RandomVariable(150)", "Delete SimpleName: randInt(151)", "Delete NumberLiteral: 0(152)", "Delete SimpleName: column(153)", "Delete NumberLiteral: 1(154)", "Delete InfixExpression: -(155)", "Delete MethodInvocation(156)", "Delete SimpleName: RandomVariable(157)", "Delete SimpleName: rand(158)", "Delete MethodInvocation(159)", "Delete MethodInvocation(160)", "Delete ExpressionStatement(161)", "Delete Block(162)", "Delete ForStatement(163)", "Delete SimpleName: context(164)", "Delete SimpleName: write(165)", "Delete SimpleName: IntWritable(166)", "Delete SimpleType: IntWritable(167)", "Delete SimpleName: i(168)", "Delete ClassInstanceCreation(169)", "Delete SimpleName: vector(170)", "Delete SimpleName: getEntries(171)", "Delete MethodInvocation(172)", "Delete MethodInvocation(173)", "Delete ExpressionStatement(174)", "Delete Block(175)", "Delete ForStatement(176)", "Delete Block(177)", "Delete PrimitiveType: int(178)", "Delete SimpleName: i(179)", "Delete SimpleName: key(180)", "Delete SimpleName: get(181)", "Delete MethodInvocation(182)", "Delete VariableDeclarationFragment(183)", "Delete VariableDeclarationExpression(184)", "Delete SimpleName: i(185)", "Delete SimpleName: value(186)", "Delete SimpleName: get(187)", "Delete MethodInvocation(188)", "Delete InfixExpression: <=(189)", "Delete SimpleName: i(190)", "Delete PostfixExpression: ++(191)", "Delete SimpleName: DenseVector(192)", "Delete SimpleType: DenseVector(193)", "Delete SimpleName: vector(194)", "Delete CastExpression(195)", "Delete ParenthesizedExpression(196)", "Delete SimpleName: clear(197)", "Delete MethodInvocation(198)", "Delete ExpressionStatement(199)", "Delete PrimitiveType: int(200)", "Delete SimpleName: j(201)", "Delete NumberLiteral: 0(202)", "Delete VariableDeclarationFragment(203)", "Delete VariableDeclarationExpression(204)", "Delete SimpleName: j(205)", "Delete SimpleName: column(206)", "Delete InfixExpression: <(207)", "Delete SimpleName: j(208)", "Delete PostfixExpression: ++(209)", "Delete SimpleName: DenseVector(210)", "Delete SimpleType: DenseVector(211)", "Delete SimpleName: vector(212)", "Delete CastExpression(213)", "Delete ParenthesizedExpression(214)", "Delete SimpleName: set(215)", "Delete SimpleName: j(216)", "Delete SimpleName: RandomVariable(217)", "Delete SimpleName: rand(218)", "Delete MethodInvocation(219)", "Delete MethodInvocation(220)", "Delete ExpressionStatement(221)", "Delete Block(222)", "Delete ForStatement(223)", "Delete SimpleName: context(224)", "Delete SimpleName: write(225)", "Delete SimpleName: IntWritable(226)", "Delete SimpleType: IntWritable(227)", "Delete SimpleName: i(228)", "Delete ClassInstanceCreation(229)", "Delete SimpleName: vector(230)", "Delete SimpleName: getEntries(231)", "Delete MethodInvocation(232)", "Delete MethodInvocation(233)", "Delete ExpressionStatement(234)", "Delete Block(235)", "Delete ForStatement(236)", "Delete Block(237)", "Delete IfStatement(238)", "Delete Block(239)", "Delete MethodDeclaration(240)", "Delete SimpleName: Override(241)", "Delete MarkerAnnotation(242)", "Delete Modifier: public(243)", "Delete SimpleName: Configuration(244)", "Delete SimpleType: Configuration(245)", "Delete SimpleName: getConf(246)", "Delete SimpleName: conf(247)", "Delete ReturnStatement(248)", "Delete Block(249)", "Delete MethodDeclaration(250)", "Delete SimpleName: Override(251)", "Delete MarkerAnnotation(252)", "Delete Modifier: public(253)", "Delete PrimitiveType: void(254)", "Delete SimpleName: setConf(255)", "Delete SimpleName: Configuration(256)", "Delete SimpleType: Configuration(257)", "Delete SimpleName: conf(258)", "Delete SingleVariableDeclaration(259)", "Delete ThisExpression(260)", "Delete SimpleName: conf(261)", "Delete FieldAccess(262)", "Delete SimpleName: conf(263)", "Delete Assignment: =(264)", "Delete ExpressionStatement(265)", "Delete SimpleName: column(266)", "Delete SimpleName: conf(267)", "Delete SimpleName: getInt(268)", "Delete StringLiteral: \"matrix.column\"(269)", "Delete NumberLiteral: 0(270)", "Delete MethodInvocation(271)", "Delete Assignment: =(272)", "Delete ExpressionStatement(273)", "Delete SimpleName: density(274)", "Delete SimpleName: Double(275)", "Delete SimpleName: parseDouble(276)", "Delete SimpleName: conf(277)", "Delete SimpleName: get(278)", "Delete StringLiteral: \"matrix.density\"(279)", "Delete MethodInvocation(280)", "Delete MethodInvocation(281)", "Delete Assignment: =(282)", "Delete ExpressionStatement(283)", "Delete PrimitiveType: double(284)", "Delete SimpleName: vv(285)", "Delete SimpleName: column(286)", "Delete NumberLiteral: 100.0(287)", "Delete InfixExpression: /(288)", "Delete ParenthesizedExpression(289)", "Delete SimpleName: density(290)", "Delete InfixExpression: *(291)", "Delete VariableDeclarationFragment(292)", "Delete VariableDeclarationStatement(293)", "Delete SimpleName: minNums(294)", "Delete SimpleName: Math(295)", "Delete SimpleName: round(296)", "Delete PrimitiveType: float(297)", "Delete SimpleName: vv(298)", "Delete CastExpression(299)", "Delete MethodInvocation(300)", "Delete Assignment: =(301)", "Delete ExpressionStatement(302)", "Delete SimpleName: minNums(303)", "Delete NumberLiteral: 0(304)", "Delete InfixExpression: ==(305)", "Delete SimpleName: minNums(306)", "Delete NumberLiteral: 1(307)", "Delete Assignment: =(308)", "Delete ExpressionStatement(309)", "Delete IfStatement(310)", "Delete SimpleName: type(311)", "Delete SimpleName: conf(312)", "Delete SimpleName: get(313)", "Delete StringLiteral: \"matrix.type\"(314)", "Delete MethodInvocation(315)", "Delete Assignment: =(316)", "Delete ExpressionStatement(317)", "Delete SimpleName: type(318)", "Delete SimpleName: equals(319)", "Delete StringLiteral: \"SparseMatrix\"(320)", "Delete MethodInvocation(321)", "Delete SimpleName: vector(322)", "Delete SimpleName: SparseVector(323)", "Delete SimpleType: SparseVector(324)", "Delete ClassInstanceCreation(325)", "Delete Assignment: =(326)", "Delete ExpressionStatement(327)", "Delete SimpleName: vector(328)", "Delete SimpleName: DenseVector(329)", "Delete SimpleType: DenseVector(330)", "Delete ClassInstanceCreation(331)", "Delete Assignment: =(332)", "Delete ExpressionStatement(333)", "Delete IfStatement(334)", "Delete Block(335)", "Delete MethodDeclaration(336)", "Delete TypeDeclaration: class(337)"]}}, {"RandomMatrixReducer_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hama.examples.mapreduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Put"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.MapWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.BytesUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleType: MapWritable", "DEL SimpleType: Writable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: getLogger", "DEL SimpleName: e", "DEL SimpleType: IntWritable", "DEL SimpleName: Logger", "DEL SimpleName: valueOf", "DEL MethodDeclaration", "DEL ParenthesizedExpression", "DEL SimpleName: IOException", "DEL SimpleName: write", "DEL SimpleName: put", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: getValue", "DEL SimpleType: MapWritable", "DEL MethodInvocation", "DEL SimpleName: MapWritable", "DEL Modifier: public", "DEL SimpleName: get", "DEL EnhancedForStatement", "DEL SimpleType: Logger", "DEL SingleVariableDeclaration", "DEL SimpleName: toBytes", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Iterable<MapWritable>", "DEL ParameterizedType: TableReducer<IntWritable,MapWritable,Writable>", "DEL SimpleName: key", "DEL SimpleType: IntWritable", "DEL SimpleName: Put", "DEL SimpleName: values", "DEL SimpleName: BytesUtil", "DEL Block", "DEL SimpleName: InterruptedException", "DEL SimpleType: Writable", "DEL ExpressionStatement", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleType: Writable", "DEL SimpleName: Writable", "DEL SimpleType: RandomMatrixReducer", "DEL SimpleName: context", "DEL SimpleName: getRowIndex", "DEL SimpleName: toBytes", "DEL SimpleType: IntWritable", "DEL MethodInvocation", "DEL SimpleName: Logger", "DEL SimpleName: Bytes", "DEL SimpleName: getKey", "DEL SimpleName: values", "DEL MethodInvocation", "DEL QualifiedName: Map.Entry", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL SimpleName: Context", "DEL SimpleType: Put", "DEL SimpleType: Map.Entry", "DEL SimpleName: Writable", "DEL SimpleName: RandomMatrixReducer", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: e", "DEL FieldDeclaration", "DEL SimpleName: IntWritable", "DEL SimpleName: iterator", "DEL SimpleName: context", "DEL SimpleType: DoubleWritable", "DEL TypeDeclaration: class", "DEL SimpleName: Put", "DEL CastExpression", "DEL SimpleName: String", "DEL SimpleType: Context", "DEL SimpleName: put", "DEL SimpleName: DoubleWritable", "DEL SimpleName: IntWritable", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ParameterizedType: Map.Entry<Writable,Writable>", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: Writable", "DEL SimpleName: key", "DEL SingleVariableDeclaration", "DEL SimpleName: reduce", "DEL SimpleName: add", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: TableReducer", "DEL SimpleName: MapWritable", "DEL SimpleType: IOException", "DEL SimpleName: ImmutableBytesWritable", "DEL SimpleName: BytesUtil", "DEL SimpleName: put", "DEL SimpleType: Iterable", "DEL SingleVariableDeclaration", "DEL SimpleName: getRowIndex", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: RandomMatrixReducer", "DEL SimpleType: TableReducer", "DEL QualifiedName: Constants.COLUMNFAMILY", "DEL Modifier: public", "DEL Block", "DEL Modifier: static", "DEL SimpleType: InterruptedException", "DEL SimpleType: ImmutableBytesWritable", "DEL MethodInvocation", "DEL SimpleName: next", "DEL SimpleName: IntWritable", "DEL SimpleName: Iterable", "DEL ClassInstanceCreation", "DEL SimpleName: entrySet"]}]}}, {"RandomMatrixReducer_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Map(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.hbase.io.ImmutableBytesWritable(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableReducer(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.io.Writable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hama.Constants(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.log4j.Logger(26)", "Delete ImportDeclaration(27)", "Delete Modifier: public(28)", "Delete SimpleName: RandomMatrixReducer(29)", "Delete SimpleName: TableReducer(30)", "Delete SimpleType: TableReducer(31)", "Delete SimpleName: IntWritable(32)", "Delete SimpleType: IntWritable(33)", "Delete SimpleName: MapWritable(34)", "Delete SimpleType: MapWritable(35)", "Delete SimpleName: Writable(36)", "Delete SimpleType: Writable(37)", "Delete ParameterizedType: TableReducer<IntWritable,MapWritable,Writable>(38)", "Delete Modifier: static(39)", "Delete Modifier: final(40)", "Delete SimpleName: Logger(41)", "Delete SimpleType: Logger(42)", "Delete SimpleName: LOG(43)", "Delete SimpleName: Logger(44)", "Delete SimpleName: getLogger(45)", "Delete SimpleName: RandomMatrixReducer(46)", "Delete SimpleType: RandomMatrixReducer(47)", "Delete TypeLiteral(48)", "Delete MethodInvocation(49)", "Delete VariableDeclarationFragment(50)", "Delete FieldDeclaration(51)", "Delete Modifier: public(52)", "Delete PrimitiveType: void(53)", "Delete SimpleName: reduce(54)", "Delete SimpleName: IntWritable(55)", "Delete SimpleType: IntWritable(56)", "Delete SimpleName: key(57)", "Delete SingleVariableDeclaration(58)", "Delete SimpleName: Iterable(59)", "Delete SimpleType: Iterable(60)", "Delete SimpleName: MapWritable(61)", "Delete SimpleType: MapWritable(62)", "Delete ParameterizedType: Iterable<MapWritable>(63)", "Delete SimpleName: values(64)", "Delete SingleVariableDeclaration(65)", "Delete SimpleName: Context(66)", "Delete SimpleType: Context(67)", "Delete SimpleName: context(68)", "Delete SingleVariableDeclaration(69)", "Delete SimpleName: IOException(70)", "Delete SimpleType: IOException(71)", "Delete SimpleName: InterruptedException(72)", "Delete SimpleType: InterruptedException(73)", "Delete SimpleName: Put(74)", "Delete SimpleType: Put(75)", "Delete SimpleName: put(76)", "Delete SimpleName: Put(77)", "Delete SimpleType: Put(78)", "Delete SimpleName: BytesUtil(79)", "Delete SimpleName: getRowIndex(80)", "Delete SimpleName: key(81)", "Delete SimpleName: get(82)", "Delete MethodInvocation(83)", "Delete MethodInvocation(84)", "Delete ClassInstanceCreation(85)", "Delete VariableDeclarationFragment(86)", "Delete VariableDeclarationStatement(87)", "Delete QualifiedName: Map.Entry(88)", "Delete SimpleType: Map.Entry(89)", "Delete SimpleName: Writable(90)", "Delete SimpleType: Writable(91)", "Delete SimpleName: Writable(92)", "Delete SimpleType: Writable(93)", "Delete ParameterizedType: Map.Entry<Writable,Writable>(94)", "Delete SimpleName: e(95)", "Delete SingleVariableDeclaration(96)", "Delete SimpleName: values(97)", "Delete SimpleName: iterator(98)", "Delete MethodInvocation(99)", "Delete SimpleName: next(100)", "Delete MethodInvocation(101)", "Delete SimpleName: entrySet(102)", "Delete MethodInvocation(103)", "Delete SimpleName: put(104)", "Delete SimpleName: add(105)", "Delete QualifiedName: Constants.COLUMNFAMILY(106)", "Delete SimpleName: Bytes(107)", "Delete SimpleName: toBytes(108)", "Delete SimpleName: String(109)", "Delete SimpleName: valueOf(110)", "Delete SimpleName: IntWritable(111)", "Delete SimpleType: IntWritable(112)", "Delete SimpleName: e(113)", "Delete SimpleName: getKey(114)", "Delete MethodInvocation(115)", "Delete CastExpression(116)", "Delete ParenthesizedExpression(117)", "Delete SimpleName: get(118)", "Delete MethodInvocation(119)", "Delete MethodInvocation(120)", "Delete MethodInvocation(121)", "Delete SimpleName: Bytes(122)", "Delete SimpleName: toBytes(123)", "Delete SimpleName: DoubleWritable(124)", "Delete SimpleType: DoubleWritable(125)", "Delete SimpleName: e(126)", "Delete SimpleName: getValue(127)", "Delete MethodInvocation(128)", "Delete CastExpression(129)", "Delete ParenthesizedExpression(130)", "Delete SimpleName: get(131)", "Delete MethodInvocation(132)", "Delete MethodInvocation(133)", "Delete MethodInvocation(134)", "Delete ExpressionStatement(135)", "Delete Block(136)", "Delete EnhancedForStatement(137)", "Delete SimpleName: context(138)", "Delete SimpleName: write(139)", "Delete SimpleName: ImmutableBytesWritable(140)", "Delete SimpleType: ImmutableBytesWritable(141)", "Delete SimpleName: BytesUtil(142)", "Delete SimpleName: getRowIndex(143)", "Delete SimpleName: key(144)", "Delete SimpleName: get(145)", "Delete MethodInvocation(146)", "Delete MethodInvocation(147)", "Delete ClassInstanceCreation(148)", "Delete SimpleName: put(149)", "Delete MethodInvocation(150)", "Delete ExpressionStatement(151)", "Delete Block(152)", "Delete MethodDeclaration(153)", "Delete TypeDeclaration: class(154)"]}}, {"RotationInputFormat_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.mapreduce", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Arrays"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.logging.Log"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.LogFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configurable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.conf.Configuration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.HConstants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Get"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.HTable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Put", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.Result", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.ResultScanner"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.client.Scan"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.mapreduce.TableSplit"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.NullWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.InputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.InputSplit", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.JobContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.RecordReader", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.TaskAttemptContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.util.StringUtils"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.Constants"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.examples.JacobiEigen", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.BytesUtil", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: toBytes", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL PrimitiveType: double", "DEL ThisExpression", "DEL SimpleName: scanner", "DEL StringLiteral: \"hama.mapreduce.inputtable\"", "DEL MethodInvocation", "DEL SimpleName: scanner", "DEL SingleVariableDeclaration", "DEL SimpleName: LogFactory", "DEL ExpressionStatement", "DEL Dimension", "DEL SimpleName: String", "DEL NumberLiteral: 0", "DEL Modifier: protected", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL Modifier: public", "DEL SimpleName: Log", "DEL Block", "DEL SimpleType: Scan", "DEL PrimitiveType: void", "DEL SimpleType: Scan", "DEL PrimitiveType: boolean", "DEL SimpleName: s2", "DEL MarkerAnnotation", "DEL SimpleName: InputSplit", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: pivotcos", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleName: init", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL SimpleName: getCurrentKey", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL SimpleName: endRowId", "DEL NullLiteral", "DEL SimpleName: vv", "DEL QualifiedName: HConstants.EMPTY_START_ROW", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: scan", "DEL ArrayType: byte[]", "DEL SimpleName: get", "DEL SimpleName: Get", "DEL SimpleName: scan", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL TextElement: The table to scan. ", "DEL Assignment: =", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL ParameterizedType: RecordReader<NullWritable,NullWritable>", "DEL SimpleName: HBaseConfiguration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SimpleName: split", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: pc", "DEL ExpressionStatement", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: put", "DEL SimpleName: getValue", "DEL SimpleName: stringifyException", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: e", "DEL MethodDeclaration", "DEL QualifiedName: startKeys.length", "DEL Assignment: =", "DEL SimpleName: getStopRow", "DEL SimpleType: Double", "DEL PrimitiveType: byte", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: htable", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SimpleName: InputFormat", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: pivotV", "DEL SimpleType: Log", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL MethodInvocation", "DEL SimpleName: htable", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: Get", "DEL SimpleName: Override", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: rowId", "DEL InfixExpression: -", "DEL SimpleType: RotationRecordReader", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL SimpleName: rowId", "DEL MarkerAnnotation", "DEL SimpleName: rowId", "DEL InfixExpression: *", "DEL SimpleName: htable", "DEL PrefixExpression: -", "DEL PrimitiveType: int", "DEL SimpleName: pivotcol", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: conf", "DEL SimpleName: pivotcos", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: Bytes", "DEL SimpleType: JobContext", "DEL SimpleName: startRowId", "DEL FieldAccess", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: table", "DEL TryStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: InterruptedException", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: startRow", "DEL SimpleName: NullWritable", "DEL MethodInvocation", "DEL SimpleName: pivot_sin", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: restart", "DEL SimpleName: Bytes", "DEL ForStatement", "DEL Modifier: public", "DEL TagElement", "DEL FieldAccess", "DEL VariableDeclarationStatement", "DEL SimpleType: Scan", "DEL Assignment: =", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: Bytes", "DEL SimpleName: Get", "DEL SimpleName: info", "DEL SimpleName: row", "DEL SimpleName: info", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL PostfixExpression: ++", "DEL SimpleName: endRowId", "DEL SimpleName: Override", "DEL SimpleName: HTable", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL TextElement: The reader scanning the table, can be a custom one. ", "DEL InfixExpression: +", "DEL SimpleName: Bytes", "DEL SimpleName: startRowId", "DEL SimpleName: HTable", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: InputSplit", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: size", "DEL SimpleName: table", "DEL SimpleName: pivotcos", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL TryStatement", "DEL SimpleName: lastPos", "DEL SimpleName: firstRow", "DEL SimpleName: startRowId", "DEL SimpleName: rowId", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL SimpleName: InterruptedException", "DEL SimpleName: vv", "DEL SimpleName: startKeys", "DEL MethodDeclaration", "DEL SimpleName: LOG", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL SimpleName: IOException", "DEL SimpleName: scan", "DEL NullLiteral", "DEL TextElement: Space delimited list of columns. ", "DEL SimpleName: pivotcol", "DEL SimpleName: add", "DEL Assignment: =", "DEL SimpleName: rotationRecordReader", "DEL SimpleName: pivotrow", "DEL SimpleType: InputSplit", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL ClassInstanceCreation", "DEL PrimitiveType: float", "DEL PrimitiveType: int", "DEL Assignment: =", "DEL SimpleType: Put", "DEL SimpleName: split", "DEL SimpleName: add", "DEL SimpleName: startPos", "DEL InfixExpression: *", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleType: Scan", "DEL SimpleName: pivotcol", "DEL FieldDeclaration", "DEL SimpleType: InputSplit", "DEL SimpleName: totalRows", "DEL InfixExpression: <", "DEL ReturnStatement", "DEL SimpleName: pivotrow", "DEL SimpleName: info", "DEL Block", "DEL QualifiedName: startKeys.length", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: toDouble", "DEL SimpleName: pivotsin", "DEL Assignment: =", "DEL InfixExpression: -", "DEL InfixExpression: >", "DEL SimpleName: toDouble", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: toBytes", "DEL SimpleName: IOException", "DEL SimpleName: pivotrow", "DEL SimpleName: String", "DEL SimpleName: s2", "DEL SimpleName: RotationRecordReader", "DEL SimpleName: setTableRecordReader", "DEL SimpleName: Scan", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL Block", "DEL PrimitiveType: double", "DEL IfStatement", "DEL IfStatement", "DEL SimpleName: Get", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: toBytes", "DEL SimpleName: Bytes", "DEL SimpleName: Put", "DEL SimpleName: BytesUtil", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL InfixExpression: *", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL Block", "DEL InfixExpression: /", "DEL SimpleName: pcol", "DEL ArrayAccess", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL InfixExpression: ==", "DEL SimpleName: endRowId", "DEL SimpleName: StringUtils", "DEL ClassInstanceCreation", "DEL SimpleName: totalRows", "DEL SimpleName: pivotsin", "DEL SimpleName: Bytes", "DEL SimpleName: htable", "DEL SimpleName: result", "DEL SimpleName: Put", "DEL SimpleName: Bytes", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL SimpleName: InputSplit", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL SimpleName: rotationRecordReader", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: endRowId", "DEL SimpleName: get", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: processedRows", "DEL SimpleName: get", "DEL SimpleName: RotationRecordReader", "DEL SimpleType: Get", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL SimpleName: Double", "DEL Block", "DEL Assignment: =", "DEL SimpleName: htable", "DEL SimpleType: TableSplit", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: Double", "DEL SimpleType: String", "DEL SimpleName: toBytes", "DEL SimpleName: Bytes", "DEL QualifiedName: startRow.length", "DEL SimpleName: i", "DEL SimpleName: Put", "DEL PrimitiveType: int", "DEL PrimitiveType: byte", "DEL Assignment: =", "DEL Block", "DEL SimpleName: conf", "DEL ArrayType: byte[][]", "DEL SimpleType: Scan", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL ExpressionStatement", "DEL QualifiedName: JacobiEigen.EICOL", "DEL NullLiteral", "DEL SimpleName: NullWritable", "DEL SimpleName: pivotrow", "DEL SimpleName: realNumSplits", "DEL SimpleType: HTable", "DEL SimpleName: LOG", "DEL Assignment: =", "DEL ThrowStatement", "DEL SimpleName: Override", "DEL IfStatement", "DEL SimpleType: Put", "DEL MethodDeclaration", "DEL SimpleName: put", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL Block", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: rowId", "DEL TagElement", "DEL InfixExpression: !=", "DEL FieldDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: pivotcol", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL SimpleName: htable", "DEL ParameterizedType: InputFormat<NullWritable,NullWritable>", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL SimpleName: get", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: Scan", "DEL SimpleName: split", "DEL SimpleName: Scan", "DEL SimpleName: getStartKeys", "DEL SimpleName: Bytes", "DEL Javadoc", "DEL SimpleName: getScan", "DEL FieldDeclaration", "DEL SimpleName: add", "DEL SimpleName: totalRows", "DEL Modifier: public", "DEL ConditionalExpression", "DEL SimpleName: s1", "DEL SimpleName: i", "DEL SimpleName: lastRow", "DEL SimpleName: valueOf", "DEL ArrayType: byte[]", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: pivotrow", "DEL Modifier: private", "DEL SimpleName: vv", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Dimension", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ForStatement", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0", "DEL SimpleType: RotationInputFormat", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleName: TableSplit", "DEL SimpleName: getCurrentValue", "DEL VariableDeclarationFragment", "DEL SimpleName: NullWritable", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL Assignment: =", "DEL SimpleName: scan", "DEL Dimension", "DEL SimpleName: firstRow", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: Bytes", "DEL ReturnStatement", "DEL SimpleName: min", "DEL SimpleName: toBytes", "DEL InfixExpression: ==", "DEL Assignment: =", "DEL SimpleName: rowId", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: valueOf", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL SimpleName: newScan", "DEL InfixExpression: %", "DEL InfixExpression: <=", "DEL Modifier: public", "DEL SimpleName: context", "DEL SimpleName: error", "DEL SimpleType: Get", "DEL MethodInvocation", "DEL SimpleType: Configuration", "DEL SimpleName: Math", "DEL ThisExpression", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: LOG", "DEL SimpleName: table", "DEL SimpleName: psin", "DEL SimpleName: get", "DEL SimpleName: getStartRow", "DEL SimpleName: startPos", "DEL FieldDeclaration", "DEL SimpleName: pivotrow", "DEL QualifiedName: JacobiEigen.PIVOTSIN", "DEL SimpleName: pivot_cos", "DEL SimpleType: RecordReader", "DEL SimpleName: init", "DEL SimpleName: pivotcol", "DEL SimpleName: pivot_sin", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: htable", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: endRow", "DEL MethodDeclaration", "DEL SimpleName: getRowIndex", "DEL Modifier: private", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: getInt", "DEL SimpleName: NullWritable", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL Block", "DEL SimpleName: setHTable", "DEL SimpleName: getRowIndex", "DEL MethodDeclaration", "DEL SimpleName: pivot_sin", "DEL SimpleName: BytesUtil", "DEL MethodInvocation", "DEL Block", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: prow", "DEL ThisExpression", "DEL SimpleType: Double", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: TaskAttemptContext", "DEL SimpleName: toBytes", "DEL SimpleName: pivotcos", "DEL SimpleType: InputSplit", "DEL Assignment: =", "DEL SimpleName: middle", "DEL SimpleName: regionLocation", "DEL SimpleName: pivotrow", "DEL Modifier: public", "DEL SimpleName: TaskAttemptContext", "DEL SimpleName: htable", "DEL SimpleName: size", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL SimpleName: setStartRow", "DEL SimpleName: addFamily", "DEL StringLiteral: \"->\"", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL Assignment: =", "DEL SimpleName: JobContext", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL Assignment: =", "DEL SimpleName: Get", "DEL SimpleName: valueOf", "DEL SimpleName: NullWritable", "DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL StringLiteral: \", \"", "DEL StringLiteral: \"hama.mapreduce.scan\"", "DEL SimpleType: InputFormat", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: pivotC", "DEL ExpressionStatement", "DEL SimpleType: NullWritable", "DEL SimpleName: get", "DEL SimpleName: Get", "DEL SimpleName: processedRows", "DEL SimpleName: put", "DEL MethodInvocation", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: put", "DEL SimpleName: toBytes", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL PrimitiveType: int", "DEL SimpleName: NullWritable", "DEL SimpleName: htable", "DEL SuperConstructorInvocation", "DEL SimpleName: SCAN", "DEL Block", "DEL QualifiedName: endRow.length", "DEL SimpleName: s2", "DEL MethodInvocation", "DEL SimpleName: Get", "DEL SimpleName: get", "DEL SimpleName: pcos", "DEL Assignment: =", "DEL Block", "DEL SimpleName: scan", "DEL SimpleName: debug", "DEL SimpleName: BytesUtil", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL SimpleName: pivot_col", "DEL SimpleName: InputSplit", "DEL SimpleName: scanner", "DEL SimpleName: Bytes", "DEL SimpleName: RotationRecordReader", "DEL NumberLiteral: 1", "DEL SimpleType: Scan", "DEL SimpleType: NullWritable", "DEL SimpleName: Double", "DEL SimpleName: BytesUtil", "DEL SimpleName: getTableName", "DEL Block", "DEL SimpleType: ResultScanner", "DEL SimpleType: IOException", "DEL SimpleType: Exception", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: context", "DEL SimpleType: Configuration", "DEL SimpleName: pcol", "DEL VariableDeclarationFragment", "DEL SimpleName: setHTable", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: table", "DEL SimpleType: NullWritable", "DEL SimpleType: String", "DEL MethodInvocation", "DEL IfStatement", "DEL PrimitiveType: void", "DEL SimpleType: Scan", "DEL ExpressionStatement", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL SimpleName: next", "DEL SimpleName: sc", "DEL SimpleName: Bytes", "DEL SimpleName: next", "DEL SimpleType: IOException", "DEL SimpleName: s1", "DEL SimpleName: PivotInputFormat", "DEL SimpleName: valueOf", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: getRowIndex", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: Configuration", "DEL SimpleName: htable", "DEL SimpleName: startPos", "DEL SimpleName: Scan", "DEL SimpleName: newScan", "DEL SimpleName: psin", "DEL SimpleName: rowId", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleType: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: INPUT_TABLE", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: scan", "DEL Assignment: =", "DEL InfixExpression: +", "DEL SimpleName: get", "DEL Modifier: protected", "DEL SimpleName: conf", "DEL SimpleName: realNumSplits", "DEL SimpleName: s1", "DEL ReturnStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: error", "DEL VariableDeclarationExpression", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL NumberLiteral: 1", "DEL SimpleName: htable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: hasMore", "DEL SimpleName: nextKeyValue", "DEL Block", "DEL InfixExpression: ==", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: toInt", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: lastPos", "DEL SimpleName: Scan", "DEL SimpleName: realNumSplits", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL Modifier: public", "DEL SimpleName: rowId", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL SimpleName: htable", "DEL TagElement", "DEL SimpleName: table", "DEL NullLiteral", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: lastPos", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL Modifier: private", "DEL InfixExpression: +", "DEL SimpleName: Bytes", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: restart", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL PrimitiveType: boolean", "DEL SimpleName: htable", "DEL Modifier: public", "DEL SimpleName: put", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL ParenthesizedExpression", "DEL SimpleName: e", "DEL SimpleName: BytesUtil", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleName: RotationInputFormat", "DEL SimpleName: lastRow", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL PrimitiveType: double", "DEL SimpleName: vv", "DEL SimpleName: createRecordReader", "DEL SimpleName: table", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: HTable", "DEL FieldDeclaration", "DEL SimpleName: getSplits", "DEL ExpressionStatement", "DEL SimpleName: prow", "DEL SimpleName: getScanner", "DEL MethodInvocation", "DEL SimpleName: s1", "DEL ThisExpression", "DEL PrimitiveType: double", "DEL ExpressionStatement", "DEL SimpleType: Get", "DEL SimpleName: table", "DEL FieldAccess", "DEL SimpleType: Get", "DEL SimpleName: i", "DEL SimpleName: Put", "DEL Modifier: private", "DEL SimpleName: totalRows", "DEL SimpleName: startKeys", "DEL SimpleName: toDouble", "DEL SimpleName: pivotcol", "DEL VariableDeclarationFragment", "DEL PrefixExpression: -", "DEL SimpleName: rowId", "DEL MethodInvocation", "DEL SimpleName: pcol", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL FieldAccess", "DEL Modifier: private", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: next", "DEL SimpleName: result", "DEL SimpleType: IOException", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL InfixExpression: +", "DEL SimpleName: setHTable", "DEL SimpleName: NullWritable", "DEL SimpleName: get", "DEL SimpleName: Bytes", "DEL SimpleName: realNumSplits", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL TryStatement", "DEL SimpleName: lastRow", "DEL Assignment: =", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: IOException", "DEL StringLiteral: \") -> \"", "DEL SimpleName: Override", "DEL SimpleName: row", "DEL ArrayAccess", "DEL MarkerAnnotation", "DEL InfixExpression: >", "DEL ParenthesizedExpression", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: regionLocation", "DEL SimpleName: getRegionLocation", "DEL QualifiedName: JacobiEigen.EICOL", "DEL Dimension", "DEL ArrayAccess", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL SimpleType: InterruptedException", "DEL SimpleName: Bytes", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SimpleName: s2", "DEL SimpleName: Override", "DEL SimpleName: Scan", "DEL SimpleName: valueOf", "DEL SimpleName: String", "DEL SimpleName: toBytes", "DEL SimpleName: Bytes", "DEL SimpleType: Get", "DEL Modifier: static", "DEL PrimitiveType: float", "DEL FieldDeclaration", "DEL SimpleName: ResultScanner", "DEL TagElement", "DEL NumberLiteral: 0", "DEL SimpleType: RotationRecordReader", "DEL PrimitiveType: void", "DEL SimpleName: scanner", "DEL PostfixExpression: ++", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: s2", "DEL Block", "DEL SimpleName: trr", "DEL SimpleName: getHostname", "DEL SimpleName: HTable", "DEL SimpleType: InterruptedException", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL SimpleType: InputSplit", "DEL SimpleName: startRow", "DEL SimpleType: IOException", "DEL SimpleName: lastPos", "DEL MethodInvocation", "DEL SimpleName: restart", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: pivotcol", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: toDouble", "DEL Javadoc", "DEL NumberLiteral: 1", "DEL SimpleType: IOException", "DEL SimpleName: i", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: *", "DEL SimpleName: setHTable", "DEL SimpleName: startKeys", "DEL SimpleName: vv", "DEL SimpleName: close", "DEL SimpleName: BytesUtil", "DEL SimpleName: getRowIndex", "DEL SimpleName: splits", "DEL StringLiteral: \"split: \"", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: INPUT_TABLE", "DEL QualifiedName: JacobiEigen.EICOL", "DEL VariableDeclarationStatement", "DEL SimpleName: pivotcos", "DEL TextElement: Job parameter that specifies the output table. ", "DEL ParameterizedType: RecordReader<NullWritable,NullWritable>", "DEL MethodInvocation", "DEL SimpleName: totalRows", "DEL SimpleName: info", "DEL SimpleName: s2", "DEL SimpleName: trr", "DEL MethodInvocation", "DEL SimpleName: put", "DEL SimpleType: Get", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: conf", "DEL Modifier: static", "DEL SimpleType: Get", "DEL SingleVariableDeclaration", "DEL SimpleName: close", "DEL SimpleType: Double", "DEL SimpleName: tableName", "DEL SimpleName: startRowId", "DEL Javadoc", "DEL SimpleName: Scan", "DEL PrimitiveType: double", "DEL SimpleType: Double", "DEL Modifier: protected", "DEL Modifier: private", "DEL SimpleName: LOG", "DEL VariableDeclarationStatement", "DEL SimpleName: BytesUtil", "DEL SimpleName: pivotrow", "DEL MarkerAnnotation", "DEL SimpleName: trr", "DEL SimpleName: row", "DEL SimpleName: pivotcos", "DEL SimpleName: i", "DEL SimpleType: Put", "DEL SimpleName: toDouble", "DEL SimpleName: getRow", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: i", "DEL SimpleName: IOException", "DEL SimpleName: getServerAddress", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL Modifier: public", "DEL SimpleName: scan", "DEL SimpleName: StringUtils", "DEL ClassInstanceCreation", "DEL SimpleName: pr", "DEL PrimitiveType: double", "DEL SimpleType: NullWritable", "DEL SimpleName: Bytes", "DEL Modifier: static", "DEL NullLiteral", "DEL FieldAccess", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: get", "DEL SimpleName: BytesUtil", "DEL SimpleName: valueOf", "DEL SimpleName: pivotrow", "DEL SingleVariableDeclaration", "DEL SimpleName: size", "DEL SingleVariableDeclaration", "DEL SimpleName: pivotcol", "DEL SimpleName: pivotcos", "DEL InfixExpression: ==", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL InfixExpression: /", "DEL QualifiedName: JacobiEigen.PIVOTCOL", "DEL SingleVariableDeclaration", "DEL SimpleName: pivot_row", "DEL ClassInstanceCreation", "DEL SimpleType: Put", "DEL SimpleName: toBytes", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: rotationRecordReader", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleType: IOException", "DEL ArrayAccess", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL SimpleName: String", "DEL SimpleType: HTable", "DEL SimpleName: pivot_row", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL SimpleName: toBytes", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: newScan", "DEL ExpressionStatement", "DEL TypeDeclaration: class", "DEL SimpleType: IOException", "DEL SimpleName: s2", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: pivot_cos", "DEL SimpleName: pivotcol", "DEL SimpleType: HTable", "DEL MethodDeclaration", "DEL SimpleName: add", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: rowId", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL SimpleName: get", "DEL SimpleName: scan", "DEL NullLiteral", "DEL PrimitiveType: double", "DEL VariableDeclarationFragment", "DEL QualifiedName: startKeys.length", "DEL SimpleName: IOException", "DEL SimpleType: Get", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: middle", "DEL SimpleName: i", "DEL VariableDeclarationExpression", "DEL Assignment: =", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL SimpleName: parseDouble", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL VariableDeclarationStatement", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL SimpleType: Put", "DEL Block", "DEL SimpleName: toBytes", "DEL SimpleName: pivotrow", "DEL SimpleType: InputSplit", "DEL ExpressionStatement", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: InterruptedException", "DEL QualifiedName: JacobiEigen.EICOL", "DEL Assignment: =", "DEL SimpleName: getRowIndex", "DEL SimpleName: getRowIndex", "DEL InfixExpression: ==", "DEL SimpleName: InterruptedException", "DEL SimpleName: LOG", "DEL NumberLiteral: 0", "DEL QualifiedName: JacobiEigen.PIVOTROW", "DEL SimpleName: convertStringToScan", "DEL SimpleName: conf", "DEL SimpleName: initialize", "DEL SimpleName: TableSplit", "DEL SimpleType: String", "DEL SimpleType: TableSplit", "DEL SimpleType: RecordReader", "DEL InfixExpression: *", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL Assignment: =", "DEL SimpleName: HTable", "DEL Dimension", "DEL SimpleName: RotationRecordReader", "DEL SimpleName: pivotsin", "DEL PrimitiveType: byte", "DEL ArrayCreation", "DEL SimpleName: Arrays", "DEL SimpleType: InterruptedException", "DEL ThisExpression", "DEL SimpleName: LOG", "DEL SimpleName: tSplit", "DEL SimpleName: scan", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: Scan", "DEL SimpleName: startRowId", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: hasMore", "DEL SimpleName: String", "DEL ThisExpression", "DEL InfixExpression: !=", "DEL SimpleName: Bytes", "DEL SimpleName: pivotcol", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: trr", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: Double", "DEL SimpleName: NullWritable", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL SimpleName: Bytes", "DEL SimpleName: pivot_cos", "DEL ExpressionStatement", "DEL SimpleType: HTable", "DEL SimpleName: getRowIndex", "DEL SimpleName: s2", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SimpleName: NullWritable", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: String", "DEL Modifier: private", "DEL ArrayType: byte[]", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: BytesUtil", "DEL Modifier: public", "DEL Dimension", "DEL SimpleName: Scan", "DEL Modifier: public", "DEL SimpleName: s2", "DEL StringLiteral: \"An error occurred.\"", "DEL SimpleName: Bytes", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: Bytes", "DEL SimpleName: tSplit", "DEL SimpleName: pc", "DEL SimpleName: htable", "DEL SimpleName: InputSplit", "DEL SimpleName: trr", "DEL SimpleName: Exception", "DEL MethodInvocation", "DEL SimpleName: get", "DEL ThisExpression", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: pivotrow", "DEL PrimitiveType: int", "DEL SimpleName: htable", "DEL SimpleName: sc", "DEL SimpleName: getStartRow", "DEL SimpleName: IOException", "DEL SimpleName: put", "DEL CatchClause", "DEL QualifiedName: Constants.METADATA", "DEL MethodInvocation", "DEL SimpleType: RotationRecordReader", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: toBytes", "DEL SimpleName: getLog", "DEL SimpleName: table", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL ArrayType: byte[]", "DEL Block", "DEL Assignment: =", "DEL SimpleName: processedRows", "DEL SimpleName: context", "DEL SimpleName: IOException", "DEL SimpleName: conf", "DEL SimpleName: getRowIndex", "DEL PrimitiveType: byte", "DEL SimpleType: NullWritable", "DEL MethodInvocation", "DEL SimpleName: table", "DEL SimpleName: vv", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: startRowId", "DEL Assignment: =", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: SCAN", "DEL SimpleName: pivotV", "DEL PrimitiveType: int", "DEL Modifier: protected", "DEL InfixExpression: *", "DEL SimpleName: getValue", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL Javadoc", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: pivot_row", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: put", "DEL InfixExpression: *", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: Configurable", "DEL SimpleName: RecordReader", "DEL IfStatement", "DEL SimpleName: RotationRecordReader", "DEL SimpleName: valueOf", "DEL SimpleName: Bytes", "DEL ReturnStatement", "DEL SimpleName: table", "DEL MethodInvocation", "DEL SimpleName: setScan", "DEL ThisExpression", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL StringLiteral: \"Expecting at least one region.\"", "DEL PrimitiveType: int", "DEL SimpleName: Bytes", "DEL SimpleName: pr", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL InfixExpression: *", "DEL SimpleName: conf", "DEL SimpleName: pivot_col", "DEL VariableDeclarationStatement", "DEL SimpleName: htable", "DEL SimpleName: Configuration", "DEL SimpleType: NullWritable", "DEL SimpleName: stringifyException", "DEL MarkerAnnotation", "DEL SimpleName: IOException", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: scanner", "DEL Assignment: =", "DEL SimpleType: TaskAttemptContext", "DEL SimpleName: BytesUtil", "DEL SimpleName: parseDouble", "DEL SimpleName: endRow", "DEL SimpleName: s2", "DEL PrimitiveType: void", "DEL TagElement", "DEL Assignment: =", "DEL Block", "DEL SimpleName: Bytes", "DEL ThisExpression", "DEL SimpleName: splits", "DEL SimpleName: NullWritable", "DEL SimpleName: Override", "DEL SimpleName: pivotC", "DEL SimpleName: Put", "DEL PrimitiveType: void", "DEL SimpleType: RotationRecordReader", "DEL Assignment: =", "DEL SimpleName: setScan", "DEL Assignment: =", "DEL SimpleName: IOException", "DEL FieldDeclaration", "DEL SimpleName: RecordReader", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL SimpleName: getHTable", "DEL SimpleName: s1", "DEL Assignment: =", "DEL SimpleName: setStartRow", "DEL SimpleName: scan", "DEL ThisExpression", "DEL SimpleName: scan", "DEL SimpleName: totalRows", "DEL Assignment: =", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SingleVariableDeclaration", "DEL SimpleName: RotationInputFormat", "DEL ThrowStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL SimpleName: rotationRecordReader", "DEL SimpleName: getValue", "DEL SimpleName: htable", "DEL SimpleName: scan", "DEL FieldDeclaration", "DEL Block", "DEL StringLiteral: \"Split (\"", "DEL SimpleName: Double", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleName: endRow", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: getRowIndex", "DEL Block", "DEL SimpleType: Configuration", "DEL MethodInvocation", "DEL SimpleName: put", "DEL InfixExpression: *", "DEL SimpleName: get", "DEL PrimitiveType: byte", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: trr", "DEL MethodInvocation", "DEL SimpleName: pivotcos", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL VariableDeclarationStatement", "DEL SimpleName: IOException", "DEL PrimitiveType: int", "DEL SimpleName: s1", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL ArrayType: byte[]", "DEL SimpleName: RotationRecordReader", "DEL SimpleType: TaskAttemptContext", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL PrimitiveType: byte", "DEL SimpleName: lastPos", "DEL SimpleName: Bytes", "DEL SimpleName: startKeys", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleName: getValue", "DEL SimpleName: endRowId", "DEL SimpleType: HBaseConfiguration", "DEL SimpleName: prow", "DEL InfixExpression: ==", "DEL SimpleName: Result", "DEL SimpleName: getEndRow", "DEL SimpleName: setScan", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL SimpleName: scan", "DEL MethodDeclaration", "DEL SimpleName: pivotsin", "DEL NullLiteral", "DEL NumberLiteral: 1.0f", "DEL SimpleName: conf", "DEL SimpleType: Put", "DEL SimpleName: InterruptedException", "DEL InfixExpression: +", "DEL FieldAccess", "DEL SimpleType: Scan", "DEL InfixExpression: *", "DEL SimpleName: get", "DEL InfixExpression: ==", "DEL SimpleName: result", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL SimpleName: Bytes", "DEL SimpleName: getRowIndex", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleType: List", "DEL Modifier: static", "DEL SimpleName: Scan", "DEL Modifier: public", "DEL SimpleName: TableSplit", "DEL MethodInvocation", "DEL SimpleType: Scan", "DEL NumberLiteral: 0", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: getRowIndex", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL Assignment: =", "DEL SimpleName: getRowIndex", "DEL IfStatement", "DEL Modifier: public", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: sc", "DEL SimpleName: HTable", "DEL TextElement: The configuration. ", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: BytesUtil", "DEL SimpleType: NullWritable", "DEL SimpleName: pivot_col", "DEL SimpleName: add", "DEL SimpleName: asList", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL TypeDeclaration: class", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: getInt", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL StringLiteral: \"recovered from \"", "DEL Modifier: final", "DEL Block", "DEL PrimitiveType: int", "DEL StringLiteral: \"rows\"", "DEL SimpleName: pivotsin", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL QualifiedName: startRow.length", "DEL SimpleName: pcos", "DEL SimpleName: s1", "DEL FieldAccess", "DEL ParameterizedType: List<InputSplit>", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: tSplit", "DEL SimpleName: valueOf", "DEL ParenthesizedExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: Override", "DEL Modifier: public", "DEL NullLiteral", "DEL SimpleName: Double", "DEL SimpleName: splits", "DEL SimpleName: setConf", "DEL ExpressionStatement", "DEL SimpleName: toBytes", "DEL FieldAccess", "DEL SimpleName: valueOf", "DEL FieldAccess", "DEL SimpleName: getStartRow", "DEL SimpleName: getConf", "DEL MethodInvocation", "DEL NullLiteral", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: toBytes", "DEL SimpleType: Scan", "DEL Block", "DEL VariableDeclarationFragment", "DEL ConditionalExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL SimpleName: realNumSplits", "DEL VariableDeclarationStatement", "DEL SimpleName: totalRows", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: totalRows", "DEL InfixExpression: <", "DEL SimpleName: toBytes", "DEL SimpleName: scan", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: toBytes", "DEL QualifiedName: startKeys.length", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL PrimitiveType: byte", "DEL SimpleName: Bytes", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: rotationRecordReader", "DEL SimpleName: startPos", "DEL Javadoc", "DEL SimpleName: conf", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: toDouble", "DEL SimpleName: Scan", "DEL Modifier: private", "DEL SimpleType: Scan", "DEL SimpleName: pivotsin", "DEL SimpleName: setScan", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleType: Configurable", "DEL PrimitiveType: void", "DEL SimpleName: hasMore", "DEL CastExpression", "DEL Assignment: =", "DEL SimpleName: getRowIndex", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL QualifiedName: Constants.ATTRIBUTE", "DEL ArrayType: InputSplit[]", "DEL MethodInvocation", "DEL ArrayType: InputSplit[]", "DEL MethodDeclaration", "DEL SimpleName: BytesUtil", "DEL QualifiedName: JacobiEigen.EICOL", "DEL SimpleName: getProgress", "DEL InfixExpression: ==", "DEL Assignment: =", "DEL SimpleName: e", "DEL SimpleName: get", "DEL SimpleName: startKeys", "DEL SimpleName: pivotsin", "DEL MethodInvocation", "DEL SimpleName: setStopRow", "DEL SimpleName: sc", "DEL SimpleName: Put", "DEL ExpressionStatement", "DEL Block", "DEL ThisExpression", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: i", "DEL QualifiedName: JacobiEigen.PIVOTCOS", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL SimpleName: Get", "DEL SimpleName: put", "DEL InfixExpression: ||", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: BytesUtil", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: Bytes", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL PrefixExpression: -", "DEL VariableDeclarationStatement", "DEL InfixExpression: -", "DEL SimpleName: InterruptedException", "DEL MethodInvocation", "DEL Dimension", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: tableName", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Get", "DEL SimpleType: NullWritable", "DEL SimpleName: put", "DEL SimpleName: pivotcol", "DEL Dimension", "DEL SimpleName: s1", "DEL SimpleName: get", "DEL SimpleName: toBytes", "DEL ExpressionStatement", "DEL ThisExpression", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: getRowIndex", "DEL SimpleName: put", "DEL SimpleName: startRowId", "DEL SimpleName: lastPos", "DEL StringLiteral: \"No table was provided.\"", "DEL InfixExpression: *", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: TableSplit", "DEL SimpleName: Configuration", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: startRow", "DEL SimpleName: Bytes", "DEL Modifier: public", "DEL FieldDeclaration", "DEL BooleanLiteral: false", "DEL SimpleType: HTable", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: InterruptedException", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: add", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: startPos", "DEL SimpleName: trr", "DEL SimpleName: BytesUtil", "DEL MethodInvocation", "DEL ReturnStatement", "DEL InfixExpression: &&", "DEL SimpleName: splits", "DEL SingleVariableDeclaration", "DEL SimpleName: scanner", "DEL SimpleType: Get", "DEL SimpleName: toBytes", "DEL SimpleName: String", "DEL SimpleName: toBytes", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: BytesUtil", "DEL SimpleName: scan", "DEL SimpleName: pivotcol", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: i", "DEL SimpleName: Get", "DEL MethodInvocation", "DEL SimpleName: endRowId", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: s1", "DEL InfixExpression: +", "DEL TextElement: Holds the details for the internal scanner. ", "DEL SimpleName: pivotsin", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL SimpleName: rowId", "DEL ThisExpression", "DEL SimpleName: s1", "DEL MethodDeclaration", "DEL SimpleType: Result", "DEL MethodInvocation", "DEL SimpleName: realNumSplits"]}]}}, {"RotationInputFormat_diff": {"operations": ["Delete QualifiedName: org.apache.hama.examples.mapreduce(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Arrays(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.List(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.commons.logging.Log(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.commons.logging.LogFactory(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.hadoop.conf.Configurable(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.conf.Configuration(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.hbase.HBaseConfiguration(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.hbase.HConstants(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Get(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HTable(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Put(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Result(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.client.ResultScanner(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.Scan(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.mapreduce.TableSplit(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.io.NullWritable(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.mapreduce.InputFormat(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.mapreduce.InputSplit(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.mapreduce.JobContext(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.mapreduce.RecordReader(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.mapreduce.TaskAttemptContext(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hadoop.util.StringUtils(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hama.Constants(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.examples.JacobiEigen(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.util.BytesUtil(54)", "Delete ImportDeclaration(55)", "Delete Modifier: public(56)", "Delete SimpleName: RotationInputFormat(57)", "Delete SimpleName: InputFormat(58)", "Delete SimpleType: InputFormat(59)", "Delete SimpleName: NullWritable(60)", "Delete SimpleType: NullWritable(61)", "Delete SimpleName: NullWritable(62)", "Delete SimpleType: NullWritable(63)", "Delete ParameterizedType: InputFormat<NullWritable,NullWritable>(64)", "Delete SimpleName: Configurable(65)", "Delete SimpleType: Configurable(66)", "Delete Modifier: final(67)", "Delete Modifier: static(68)", "Delete SimpleName: Log(69)", "Delete SimpleType: Log(70)", "Delete SimpleName: LOG(71)", "Delete SimpleName: LogFactory(72)", "Delete SimpleName: getLog(73)", "Delete SimpleName: RotationInputFormat(74)", "Delete SimpleType: RotationInputFormat(75)", "Delete TypeLiteral(76)", "Delete MethodInvocation(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete TextElement: Job parameter that specifies the output table. (80)", "Delete TagElement(81)", "Delete Javadoc(82)", "Delete Modifier: public(83)", "Delete Modifier: static(84)", "Delete Modifier: final(85)", "Delete SimpleName: String(86)", "Delete SimpleType: String(87)", "Delete SimpleName: INPUT_TABLE(88)", "Delete StringLiteral: \"hama.mapreduce.inputtable\"(89)", "Delete VariableDeclarationFragment(90)", "Delete FieldDeclaration(91)", "Delete TextElement: Space delimited list of columns. (92)", "Delete TagElement(93)", "Delete Javadoc(94)", "Delete Modifier: public(95)", "Delete Modifier: static(96)", "Delete Modifier: final(97)", "Delete SimpleName: String(98)", "Delete SimpleType: String(99)", "Delete SimpleName: SCAN(100)", "Delete StringLiteral: \"hama.mapreduce.scan\"(101)", "Delete VariableDeclarationFragment(102)", "Delete FieldDeclaration(103)", "Delete TextElement: The configuration. (104)", "Delete TagElement(105)", "Delete Javadoc(106)", "Delete Modifier: private(107)", "Delete SimpleName: Configuration(108)", "Delete SimpleType: Configuration(109)", "Delete SimpleName: conf(110)", "Delete NullLiteral(111)", "Delete VariableDeclarationFragment(112)", "Delete FieldDeclaration(113)", "Delete TextElement: Holds the details for the internal scanner. (114)", "Delete TagElement(115)", "Delete Javadoc(116)", "Delete Modifier: private(117)", "Delete SimpleName: Scan(118)", "Delete SimpleType: Scan(119)", "Delete SimpleName: scan(120)", "Delete NullLiteral(121)", "Delete VariableDeclarationFragment(122)", "Delete FieldDeclaration(123)", "Delete TextElement: The table to scan. (124)", "Delete TagElement(125)", "Delete Javadoc(126)", "Delete Modifier: private(127)", "Delete SimpleName: HTable(128)", "Delete SimpleType: HTable(129)", "Delete SimpleName: table(130)", "Delete NullLiteral(131)", "Delete VariableDeclarationFragment(132)", "Delete FieldDeclaration(133)", "Delete TextElement: The reader scanning the table, can be a custom one. (134)", "Delete TagElement(135)", "Delete Javadoc(136)", "Delete Modifier: private(137)", "Delete SimpleName: RotationRecordReader(138)", "Delete SimpleType: RotationRecordReader(139)", "Delete SimpleName: rotationRecordReader(140)", "Delete VariableDeclarationFragment(141)", "Delete FieldDeclaration(142)", "Delete PrimitiveType: int(143)", "Delete SimpleName: pivot_row(144)", "Delete VariableDeclarationFragment(145)", "Delete SimpleName: pivot_col(146)", "Delete VariableDeclarationFragment(147)", "Delete FieldDeclaration(148)", "Delete PrimitiveType: double(149)", "Delete SimpleName: pivot_cos(150)", "Delete VariableDeclarationFragment(151)", "Delete SimpleName: pivot_sin(152)", "Delete VariableDeclarationFragment(153)", "Delete FieldDeclaration(154)", "Delete Modifier: protected(155)", "Delete Modifier: static(156)", "Delete SimpleName: RotationRecordReader(157)", "Delete SimpleName: RecordReader(158)", "Delete SimpleType: RecordReader(159)", "Delete SimpleName: NullWritable(160)", "Delete SimpleType: NullWritable(161)", "Delete SimpleName: NullWritable(162)", "Delete SimpleType: NullWritable(163)", "Delete ParameterizedType: RecordReader<NullWritable,NullWritable>(164)", "Delete Modifier: private(165)", "Delete SimpleName: ResultScanner(166)", "Delete SimpleType: ResultScanner(167)", "Delete SimpleName: scanner(168)", "Delete NullLiteral(169)", "Delete VariableDeclarationFragment(170)", "Delete FieldDeclaration(171)", "Delete Modifier: private(172)", "Delete SimpleName: Scan(173)", "Delete SimpleType: Scan(174)", "Delete SimpleName: scan(175)", "Delete NullLiteral(176)", "Delete VariableDeclarationFragment(177)", "Delete FieldDeclaration(178)", "Delete Modifier: private(179)", "Delete SimpleName: HTable(180)", "Delete SimpleType: HTable(181)", "Delete SimpleName: htable(182)", "Delete NullLiteral(183)", "Delete VariableDeclarationFragment(184)", "Delete FieldDeclaration(185)", "Delete Modifier: private(186)", "Delete PrimitiveType: byte(187)", "Delete Dimension(188)", "Delete ArrayType: byte[](189)", "Delete SimpleName: lastRow(190)", "Delete NullLiteral(191)", "Delete VariableDeclarationFragment(192)", "Delete FieldDeclaration(193)", "Delete Modifier: private(194)", "Delete PrimitiveType: int(195)", "Delete SimpleName: totalRows(196)", "Delete VariableDeclarationFragment(197)", "Delete FieldDeclaration(198)", "Delete Modifier: private(199)", "Delete PrimitiveType: int(200)", "Delete SimpleName: processedRows(201)", "Delete VariableDeclarationFragment(202)", "Delete FieldDeclaration(203)", "Delete PrimitiveType: int(204)", "Delete SimpleName: startRowId(205)", "Delete VariableDeclarationFragment(206)", "Delete SimpleName: endRowId(207)", "Delete NumberLiteral: 1(208)", "Delete PrefixExpression: -(209)", "Delete VariableDeclarationFragment(210)", "Delete FieldDeclaration(211)", "Delete PrimitiveType: int(212)", "Delete SimpleName: size(213)", "Delete VariableDeclarationFragment(214)", "Delete FieldDeclaration(215)", "Delete PrimitiveType: int(216)", "Delete SimpleName: pivotrow(217)", "Delete VariableDeclarationFragment(218)", "Delete SimpleName: pivotcol(219)", "Delete VariableDeclarationFragment(220)", "Delete FieldDeclaration(221)", "Delete PrimitiveType: byte(222)", "Delete Dimension(223)", "Delete ArrayType: byte[](224)", "Delete SimpleName: prow(225)", "Delete VariableDeclarationFragment(226)", "Delete SimpleName: pcol(227)", "Delete VariableDeclarationFragment(228)", "Delete FieldDeclaration(229)", "Delete PrimitiveType: double(230)", "Delete SimpleName: pivotcos(231)", "Delete VariableDeclarationFragment(232)", "Delete SimpleName: pivotsin(233)", "Delete VariableDeclarationFragment(234)", "Delete FieldDeclaration(235)", "Delete Modifier: public(236)", "Delete SimpleName: RotationRecordReader(237)", "Delete PrimitiveType: int(238)", "Delete SimpleName: pr(239)", "Delete SingleVariableDeclaration(240)", "Delete PrimitiveType: int(241)", "Delete SimpleName: pc(242)", "Delete SingleVariableDeclaration(243)", "Delete PrimitiveType: double(244)", "Delete SimpleName: psin(245)", "Delete SingleVariableDeclaration(246)", "Delete PrimitiveType: double(247)", "Delete SimpleName: pcos(248)", "Delete SingleVariableDeclaration(249)", "Delete SuperConstructorInvocation(250)", "Delete SimpleName: pivotrow(251)", "Delete SimpleName: pr(252)", "Delete Assignment: =(253)", "Delete ExpressionStatement(254)", "Delete SimpleName: pivotcol(255)", "Delete SimpleName: pc(256)", "Delete Assignment: =(257)", "Delete ExpressionStatement(258)", "Delete SimpleName: pivotsin(259)", "Delete SimpleName: psin(260)", "Delete Assignment: =(261)", "Delete ExpressionStatement(262)", "Delete SimpleName: pivotcos(263)", "Delete SimpleName: pcos(264)", "Delete Assignment: =(265)", "Delete ExpressionStatement(266)", "Delete SimpleName: prow(267)", "Delete SimpleName: Bytes(268)", "Delete SimpleName: toBytes(269)", "Delete SimpleName: pivotrow(270)", "Delete MethodInvocation(271)", "Delete Assignment: =(272)", "Delete ExpressionStatement(273)", "Delete SimpleName: pcol(274)", "Delete SimpleName: Bytes(275)", "Delete SimpleName: toBytes(276)", "Delete SimpleName: pivotcol(277)", "Delete MethodInvocation(278)", "Delete Assignment: =(279)", "Delete ExpressionStatement(280)", "Delete SimpleName: LOG(281)", "Delete SimpleName: info(282)", "Delete SimpleName: prow(283)", "Delete MethodInvocation(284)", "Delete ExpressionStatement(285)", "Delete SimpleName: LOG(286)", "Delete SimpleName: info(287)", "Delete SimpleName: pcol(288)", "Delete MethodInvocation(289)", "Delete ExpressionStatement(290)", "Delete Block(291)", "Delete MethodDeclaration(292)", "Delete Modifier: public(293)", "Delete PrimitiveType: void(294)", "Delete SimpleName: setScan(295)", "Delete SimpleName: Scan(296)", "Delete SimpleType: Scan(297)", "Delete SimpleName: scan(298)", "Delete SingleVariableDeclaration(299)", "Delete ThisExpression(300)", "Delete SimpleName: scan(301)", "Delete FieldAccess(302)", "Delete SimpleName: scan(303)", "Delete Assignment: =(304)", "Delete ExpressionStatement(305)", "Delete Block(306)", "Delete MethodDeclaration(307)", "Delete Modifier: public(308)", "Delete PrimitiveType: void(309)", "Delete SimpleName: setHTable(310)", "Delete SimpleName: HTable(311)", "Delete SimpleType: HTable(312)", "Delete SimpleName: htable(313)", "Delete SingleVariableDeclaration(314)", "Delete ThisExpression(315)", "Delete SimpleName: htable(316)", "Delete FieldAccess(317)", "Delete SimpleName: htable(318)", "Delete Assignment: =(319)", "Delete ExpressionStatement(320)", "Delete Block(321)", "Delete MethodDeclaration(322)", "Delete Modifier: public(323)", "Delete PrimitiveType: void(324)", "Delete SimpleName: init(325)", "Delete SimpleName: IOException(326)", "Delete SimpleType: IOException(327)", "Delete SimpleName: restart(328)", "Delete SimpleName: scan(329)", "Delete SimpleName: getStartRow(330)", "Delete MethodInvocation(331)", "Delete MethodInvocation(332)", "Delete ExpressionStatement(333)", "Delete PrimitiveType: byte(334)", "Delete Dimension(335)", "Delete ArrayType: byte[](336)", "Delete SimpleName: startRow(337)", "Delete SimpleName: scan(338)", "Delete SimpleName: getStartRow(339)", "Delete MethodInvocation(340)", "Delete VariableDeclarationFragment(341)", "Delete VariableDeclarationStatement(342)", "Delete PrimitiveType: byte(343)", "Delete Dimension(344)", "Delete ArrayType: byte[](345)", "Delete SimpleName: endRow(346)", "Delete SimpleName: scan(347)", "Delete SimpleName: getStopRow(348)", "Delete MethodInvocation(349)", "Delete VariableDeclarationFragment(350)", "Delete VariableDeclarationStatement(351)", "Delete SimpleName: Get(352)", "Delete SimpleType: Get(353)", "Delete SimpleName: get(354)", "Delete SimpleName: Get(355)", "Delete SimpleType: Get(356)", "Delete SimpleName: Bytes(357)", "Delete SimpleName: toBytes(358)", "Delete QualifiedName: Constants.METADATA(359)", "Delete MethodInvocation(360)", "Delete ClassInstanceCreation(361)", "Delete VariableDeclarationFragment(362)", "Delete VariableDeclarationStatement(363)", "Delete SimpleName: get(364)", "Delete SimpleName: addFamily(365)", "Delete QualifiedName: Constants.ATTRIBUTE(366)", "Delete MethodInvocation(367)", "Delete ExpressionStatement(368)", "Delete PrimitiveType: byte(369)", "Delete Dimension(370)", "Delete ArrayType: byte[](371)", "Delete SimpleName: result(372)", "Delete SimpleName: htable(373)", "Delete SimpleName: get(374)", "Delete SimpleName: get(375)", "Delete MethodInvocation(376)", "Delete SimpleName: getValue(377)", "Delete QualifiedName: Constants.ATTRIBUTE(378)", "Delete SimpleName: Bytes(379)", "Delete SimpleName: toBytes(380)", "Delete StringLiteral: \"rows\"(381)", "Delete MethodInvocation(382)", "Delete MethodInvocation(383)", "Delete VariableDeclarationFragment(384)", "Delete VariableDeclarationStatement(385)", "Delete SimpleName: size(386)", "Delete SimpleName: result(387)", "Delete NullLiteral(388)", "Delete InfixExpression: !=(389)", "Delete ParenthesizedExpression(390)", "Delete SimpleName: Bytes(391)", "Delete SimpleName: toInt(392)", "Delete SimpleName: result(393)", "Delete MethodInvocation(394)", "Delete NumberLiteral: 0(395)", "Delete ConditionalExpression(396)", "Delete Assignment: =(397)", "Delete ExpressionStatement(398)", "Delete QualifiedName: endRow.length(399)", "Delete NumberLiteral: 0(400)", "Delete InfixExpression: ==(401)", "Delete SimpleName: totalRows(402)", "Delete NumberLiteral: 0(403)", "Delete Assignment: =(404)", "Delete ExpressionStatement(405)", "Delete QualifiedName: startRow.length(406)", "Delete NumberLiteral: 0(407)", "Delete InfixExpression: ==(408)", "Delete SimpleName: startRowId(409)", "Delete NumberLiteral: 0(410)", "Delete Assignment: =(411)", "Delete ExpressionStatement(412)", "Delete SimpleName: startRowId(413)", "Delete SimpleName: BytesUtil(414)", "Delete SimpleName: getRowIndex(415)", "Delete SimpleName: startRow(416)", "Delete MethodInvocation(417)", "Delete Assignment: =(418)", "Delete ExpressionStatement(419)", "Delete IfStatement(420)", "Delete SimpleName: endRowId(421)", "Delete NumberLiteral: 1(422)", "Delete PrefixExpression: -(423)", "Delete Assignment: =(424)", "Delete ExpressionStatement(425)", "Delete Block(426)", "Delete QualifiedName: startRow.length(427)", "Delete NumberLiteral: 0(428)", "Delete InfixExpression: ==(429)", "Delete SimpleName: totalRows(430)", "Delete SimpleName: BytesUtil(431)", "Delete SimpleName: getRowIndex(432)", "Delete SimpleName: endRow(433)", "Delete MethodInvocation(434)", "Delete Assignment: =(435)", "Delete ExpressionStatement(436)", "Delete SimpleName: startRowId(437)", "Delete NumberLiteral: 0(438)", "Delete Assignment: =(439)", "Delete ExpressionStatement(440)", "Delete SimpleName: endRowId(441)", "Delete SimpleName: totalRows(442)", "Delete Assignment: =(443)", "Delete ExpressionStatement(444)", "Delete Block(445)", "Delete SimpleName: startRowId(446)", "Delete SimpleName: BytesUtil(447)", "Delete SimpleName: getRowIndex(448)", "Delete SimpleName: startRow(449)", "Delete MethodInvocation(450)", "Delete Assignment: =(451)", "Delete ExpressionStatement(452)", "Delete SimpleName: endRowId(453)", "Delete SimpleName: BytesUtil(454)", "Delete SimpleName: getRowIndex(455)", "Delete SimpleName: endRow(456)", "Delete MethodInvocation(457)", "Delete Assignment: =(458)", "Delete ExpressionStatement(459)", "Delete SimpleName: totalRows(460)", "Delete SimpleName: startRowId(461)", "Delete SimpleName: endRowId(462)", "Delete InfixExpression: -(463)", "Delete Assignment: =(464)", "Delete ExpressionStatement(465)", "Delete Block(466)", "Delete IfStatement(467)", "Delete Block(468)", "Delete IfStatement(469)", "Delete SimpleName: processedRows(470)", "Delete NumberLiteral: 0(471)", "Delete Assignment: =(472)", "Delete ExpressionStatement(473)", "Delete SimpleName: LOG(474)", "Delete SimpleName: info(475)", "Delete StringLiteral: \"Split (\"(476)", "Delete SimpleName: startRowId(477)", "Delete StringLiteral: \", \"(478)", "Delete SimpleName: endRowId(479)", "Delete StringLiteral: \") -> \"(480)", "Delete SimpleName: totalRows(481)", "Delete InfixExpression: +(482)", "Delete MethodInvocation(483)", "Delete ExpressionStatement(484)", "Delete Block(485)", "Delete MethodDeclaration(486)", "Delete Modifier: public(487)", "Delete PrimitiveType: void(488)", "Delete SimpleName: restart(489)", "Delete PrimitiveType: byte(490)", "Delete Dimension(491)", "Delete ArrayType: byte[](492)", "Delete SimpleName: firstRow(493)", "Delete SingleVariableDeclaration(494)", "Delete SimpleName: IOException(495)", "Delete SimpleType: IOException(496)", "Delete SimpleName: Scan(497)", "Delete SimpleType: Scan(498)", "Delete SimpleName: newScan(499)", "Delete SimpleName: Scan(500)", "Delete SimpleType: Scan(501)", "Delete SimpleName: scan(502)", "Delete ClassInstanceCreation(503)", "Delete VariableDeclarationFragment(504)", "Delete VariableDeclarationStatement(505)", "Delete SimpleName: newScan(506)", "Delete SimpleName: setStartRow(507)", "Delete SimpleName: firstRow(508)", "Delete MethodInvocation(509)", "Delete ExpressionStatement(510)", "Delete ThisExpression(511)", "Delete SimpleName: scanner(512)", "Delete FieldAccess(513)", "Delete ThisExpression(514)", "Delete SimpleName: htable(515)", "Delete FieldAccess(516)", "Delete SimpleName: getScanner(517)", "Delete SimpleName: newScan(518)", "Delete MethodInvocation(519)", "Delete Assignment: =(520)", "Delete ExpressionStatement(521)", "Delete Block(522)", "Delete MethodDeclaration(523)", "Delete SimpleName: Override(524)", "Delete MarkerAnnotation(525)", "Delete Modifier: public(526)", "Delete PrimitiveType: void(527)", "Delete SimpleName: close(528)", "Delete SimpleName: IOException(529)", "Delete SimpleType: IOException(530)", "Delete ThisExpression(531)", "Delete SimpleName: scanner(532)", "Delete FieldAccess(533)", "Delete SimpleName: close(534)", "Delete MethodInvocation(535)", "Delete ExpressionStatement(536)", "Delete Block(537)", "Delete MethodDeclaration(538)", "Delete SimpleName: Override(539)", "Delete MarkerAnnotation(540)", "Delete Modifier: public(541)", "Delete SimpleName: NullWritable(542)", "Delete SimpleType: NullWritable(543)", "Delete SimpleName: getCurrentKey(544)", "Delete SimpleName: IOException(545)", "Delete SimpleType: IOException(546)", "Delete SimpleName: InterruptedException(547)", "Delete SimpleType: InterruptedException(548)", "Delete SimpleName: NullWritable(549)", "Delete SimpleName: get(550)", "Delete MethodInvocation(551)", "Delete ReturnStatement(552)", "Delete Block(553)", "Delete MethodDeclaration(554)", "Delete SimpleName: Override(555)", "Delete MarkerAnnotation(556)", "Delete Modifier: public(557)", "Delete SimpleName: NullWritable(558)", "Delete SimpleType: NullWritable(559)", "Delete SimpleName: getCurrentValue(560)", "Delete SimpleName: IOException(561)", "Delete SimpleType: IOException(562)", "Delete SimpleName: InterruptedException(563)", "Delete SimpleType: InterruptedException(564)", "Delete SimpleName: NullWritable(565)", "Delete SimpleName: get(566)", "Delete MethodInvocation(567)", "Delete ReturnStatement(568)", "Delete Block(569)", "Delete MethodDeclaration(570)", "Delete SimpleName: Override(571)", "Delete MarkerAnnotation(572)", "Delete Modifier: public(573)", "Delete PrimitiveType: float(574)", "Delete SimpleName: getProgress(575)", "Delete SimpleName: IOException(576)", "Delete SimpleType: IOException(577)", "Delete SimpleName: InterruptedException(578)", "Delete SimpleType: InterruptedException(579)", "Delete SimpleName: totalRows(580)", "Delete NumberLiteral: 0(581)", "Delete InfixExpression: <=(582)", "Delete NumberLiteral: 0(583)", "Delete ReturnStatement(584)", "Delete Block(585)", "Delete SimpleName: Math(586)", "Delete SimpleName: min(587)", "Delete NumberLiteral: 1.0f(588)", "Delete SimpleName: processedRows(589)", "Delete PrimitiveType: float(590)", "Delete SimpleName: totalRows(591)", "Delete CastExpression(592)", "Delete InfixExpression: /(593)", "Delete MethodInvocation(594)", "Delete ReturnStatement(595)", "Delete Block(596)", "Delete IfStatement(597)", "Delete Block(598)", "Delete MethodDeclaration(599)", "Delete SimpleName: Override(600)", "Delete MarkerAnnotation(601)", "Delete Modifier: public(602)", "Delete PrimitiveType: void(603)", "Delete SimpleName: initialize(604)", "Delete SimpleName: InputSplit(605)", "Delete SimpleType: InputSplit(606)", "Delete SimpleName: split(607)", "Delete SingleVariableDeclaration(608)", "Delete SimpleName: TaskAttemptContext(609)", "Delete SimpleType: TaskAttemptContext(610)", "Delete SimpleName: context(611)", "Delete SingleVariableDeclaration(612)", "Delete SimpleName: IOException(613)", "Delete SimpleType: IOException(614)", "Delete SimpleName: InterruptedException(615)", "Delete SimpleType: InterruptedException(616)", "Delete Block(617)", "Delete MethodDeclaration(618)", "Delete SimpleName: Override(619)", "Delete MarkerAnnotation(620)", "Delete Modifier: public(621)", "Delete PrimitiveType: boolean(622)", "Delete SimpleName: nextKeyValue(623)", "Delete SimpleName: IOException(624)", "Delete SimpleType: IOException(625)", "Delete SimpleName: InterruptedException(626)", "Delete SimpleType: InterruptedException(627)", "Delete SimpleName: Result(628)", "Delete SimpleType: Result(629)", "Delete SimpleName: vv(630)", "Delete VariableDeclarationFragment(631)", "Delete VariableDeclarationStatement(632)", "Delete SimpleName: vv(633)", "Delete ThisExpression(634)", "Delete SimpleName: scanner(635)", "Delete FieldAccess(636)", "Delete SimpleName: next(637)", "Delete MethodInvocation(638)", "Delete Assignment: =(639)", "Delete ExpressionStatement(640)", "Delete Block(641)", "Delete SimpleName: IOException(642)", "Delete SimpleType: IOException(643)", "Delete SimpleName: e(644)", "Delete SingleVariableDeclaration(645)", "Delete SimpleName: LOG(646)", "Delete SimpleName: debug(647)", "Delete StringLiteral: \"recovered from \"(648)", "Delete SimpleName: StringUtils(649)", "Delete SimpleName: stringifyException(650)", "Delete SimpleName: e(651)", "Delete MethodInvocation(652)", "Delete InfixExpression: +(653)", "Delete MethodInvocation(654)", "Delete ExpressionStatement(655)", "Delete SimpleName: restart(656)", "Delete SimpleName: lastRow(657)", "Delete MethodInvocation(658)", "Delete ExpressionStatement(659)", "Delete SimpleName: scanner(660)", "Delete SimpleName: next(661)", "Delete MethodInvocation(662)", "Delete ExpressionStatement(663)", "Delete SimpleName: vv(664)", "Delete SimpleName: scanner(665)", "Delete SimpleName: next(666)", "Delete MethodInvocation(667)", "Delete Assignment: =(668)", "Delete ExpressionStatement(669)", "Delete Block(670)", "Delete CatchClause(671)", "Delete TryStatement(672)", "Delete PrimitiveType: double(673)", "Delete SimpleName: s1(674)", "Delete VariableDeclarationFragment(675)", "Delete SimpleName: s2(676)", "Delete VariableDeclarationFragment(677)", "Delete VariableDeclarationStatement(678)", "Delete SimpleName: Put(679)", "Delete SimpleType: Put(680)", "Delete SimpleName: put(681)", "Delete VariableDeclarationFragment(682)", "Delete VariableDeclarationStatement(683)", "Delete PrimitiveType: boolean(684)", "Delete SimpleName: hasMore(685)", "Delete SimpleName: vv(686)", "Delete NullLiteral(687)", "Delete InfixExpression: !=(688)", "Delete SimpleName: vv(689)", "Delete SimpleName: size(690)", "Delete MethodInvocation(691)", "Delete NumberLiteral: 0(692)", "Delete InfixExpression: >(693)", "Delete InfixExpression: &&(694)", "Delete VariableDeclarationFragment(695)", "Delete VariableDeclarationStatement(696)", "Delete SimpleName: hasMore(697)", "Delete PrimitiveType: byte(698)", "Delete Dimension(699)", "Delete ArrayType: byte[](700)", "Delete SimpleName: row(701)", "Delete SimpleName: vv(702)", "Delete SimpleName: getRow(703)", "Delete MethodInvocation(704)", "Delete VariableDeclarationFragment(705)", "Delete VariableDeclarationStatement(706)", "Delete PrimitiveType: int(707)", "Delete SimpleName: rowId(708)", "Delete SimpleName: BytesUtil(709)", "Delete SimpleName: getRowIndex(710)", "Delete SimpleName: row(711)", "Delete MethodInvocation(712)", "Delete VariableDeclarationFragment(713)", "Delete VariableDeclarationStatement(714)", "Delete SimpleName: rowId(715)", "Delete SimpleName: pivotrow(716)", "Delete InfixExpression: <(717)", "Delete SimpleName: Get(718)", "Delete SimpleType: Get(719)", "Delete SimpleName: get(720)", "Delete SimpleName: Get(721)", "Delete SimpleType: Get(722)", "Delete SimpleName: BytesUtil(723)", "Delete SimpleName: getRowIndex(724)", "Delete SimpleName: rowId(725)", "Delete MethodInvocation(726)", "Delete ClassInstanceCreation(727)", "Delete VariableDeclarationFragment(728)", "Delete VariableDeclarationStatement(729)", "Delete SimpleName: s1(730)", "Delete SimpleName: Bytes(731)", "Delete SimpleName: toDouble(732)", "Delete SimpleName: htable(733)", "Delete SimpleName: get(734)", "Delete SimpleName: get(735)", "Delete MethodInvocation(736)", "Delete SimpleName: getValue(737)", "Delete SimpleName: Bytes(738)", "Delete SimpleName: toBytes(739)", "Delete QualifiedName: JacobiEigen.EICOL(740)", "Delete MethodInvocation(741)", "Delete SimpleName: Bytes(742)", "Delete SimpleName: toBytes(743)", "Delete SimpleName: String(744)", "Delete SimpleName: valueOf(745)", "Delete SimpleName: pivotrow(746)", "Delete MethodInvocation(747)", "Delete MethodInvocation(748)", "Delete MethodInvocation(749)", "Delete MethodInvocation(750)", "Delete Assignment: =(751)", "Delete ExpressionStatement(752)", "Delete SimpleName: s2(753)", "Delete SimpleName: Bytes(754)", "Delete SimpleName: toDouble(755)", "Delete SimpleName: htable(756)", "Delete SimpleName: get(757)", "Delete SimpleName: get(758)", "Delete MethodInvocation(759)", "Delete SimpleName: getValue(760)", "Delete SimpleName: Bytes(761)", "Delete SimpleName: toBytes(762)", "Delete QualifiedName: JacobiEigen.EICOL(763)", "Delete MethodInvocation(764)", "Delete SimpleName: Bytes(765)", "Delete SimpleName: toBytes(766)", "Delete SimpleName: String(767)", "Delete SimpleName: valueOf(768)", "Delete SimpleName: pivotcol(769)", "Delete MethodInvocation(770)", "Delete MethodInvocation(771)", "Delete MethodInvocation(772)", "Delete MethodInvocation(773)", "Delete Assignment: =(774)", "Delete ExpressionStatement(775)", "Delete SimpleName: put(776)", "Delete SimpleName: Put(777)", "Delete SimpleType: Put(778)", "Delete SimpleName: BytesUtil(779)", "Delete SimpleName: getRowIndex(780)", "Delete SimpleName: rowId(781)", "Delete MethodInvocation(782)", "Delete ClassInstanceCreation(783)", "Delete Assignment: =(784)", "Delete ExpressionStatement(785)", "Delete SimpleName: put(786)", "Delete SimpleName: add(787)", "Delete SimpleName: Bytes(788)", "Delete SimpleName: toBytes(789)", "Delete QualifiedName: JacobiEigen.EICOL(790)", "Delete MethodInvocation(791)", "Delete SimpleName: Bytes(792)", "Delete SimpleName: toBytes(793)", "Delete SimpleName: String(794)", "Delete SimpleName: valueOf(795)", "Delete SimpleName: pivotrow(796)", "Delete MethodInvocation(797)", "Delete MethodInvocation(798)", "Delete SimpleName: Bytes(799)", "Delete SimpleName: toBytes(800)", "Delete SimpleName: Double(801)", "Delete SimpleType: Double(802)", "Delete SimpleName: pivotcos(803)", "Delete SimpleName: s1(804)", "Delete InfixExpression: *(805)", "Delete SimpleName: pivotsin(806)", "Delete SimpleName: s2(807)", "Delete InfixExpression: *(808)", "Delete InfixExpression: -(809)", "Delete ClassInstanceCreation(810)", "Delete MethodInvocation(811)", "Delete MethodInvocation(812)", "Delete ExpressionStatement(813)", "Delete SimpleName: put(814)", "Delete SimpleName: add(815)", "Delete SimpleName: Bytes(816)", "Delete SimpleName: toBytes(817)", "Delete QualifiedName: JacobiEigen.EICOL(818)", "Delete MethodInvocation(819)", "Delete SimpleName: Bytes(820)", "Delete SimpleName: toBytes(821)", "Delete SimpleName: String(822)", "Delete SimpleName: valueOf(823)", "Delete SimpleName: pivotcol(824)", "Delete MethodInvocation(825)", "Delete MethodInvocation(826)", "Delete SimpleName: Bytes(827)", "Delete SimpleName: toBytes(828)", "Delete SimpleName: Double(829)", "Delete SimpleType: Double(830)", "Delete SimpleName: pivotsin(831)", "Delete SimpleName: s1(832)", "Delete InfixExpression: *(833)", "Delete SimpleName: pivotcos(834)", "Delete SimpleName: s2(835)", "Delete InfixExpression: *(836)", "Delete InfixExpression: +(837)", "Delete ClassInstanceCreation(838)", "Delete MethodInvocation(839)", "Delete MethodInvocation(840)", "Delete ExpressionStatement(841)", "Delete SimpleName: htable(842)", "Delete SimpleName: put(843)", "Delete SimpleName: put(844)", "Delete MethodInvocation(845)", "Delete ExpressionStatement(846)", "Delete Block(847)", "Delete SimpleName: rowId(848)", "Delete SimpleName: pivotrow(849)", "Delete InfixExpression: ==(850)", "Delete BooleanLiteral: true(851)", "Delete ReturnStatement(852)", "Delete Block(853)", "Delete SimpleName: rowId(854)", "Delete SimpleName: pivotcol(855)", "Delete InfixExpression: <(856)", "Delete SimpleName: Get(857)", "Delete SimpleType: Get(858)", "Delete SimpleName: get(859)", "Delete SimpleName: Get(860)", "Delete SimpleType: Get(861)", "Delete SimpleName: BytesUtil(862)", "Delete SimpleName: getRowIndex(863)", "Delete SimpleName: pivotrow(864)", "Delete MethodInvocation(865)", "Delete ClassInstanceCreation(866)", "Delete VariableDeclarationFragment(867)", "Delete VariableDeclarationStatement(868)", "Delete SimpleName: s1(869)", "Delete SimpleName: Bytes(870)", "Delete SimpleName: toDouble(871)", "Delete SimpleName: htable(872)", "Delete SimpleName: get(873)", "Delete SimpleName: get(874)", "Delete MethodInvocation(875)", "Delete SimpleName: getValue(876)", "Delete SimpleName: Bytes(877)", "Delete SimpleName: toBytes(878)", "Delete QualifiedName: JacobiEigen.EICOL(879)", "Delete MethodInvocation(880)", "Delete SimpleName: Bytes(881)", "Delete SimpleName: toBytes(882)", "Delete SimpleName: String(883)", "Delete SimpleName: valueOf(884)", "Delete SimpleName: rowId(885)", "Delete MethodInvocation(886)", "Delete MethodInvocation(887)", "Delete MethodInvocation(888)", "Delete MethodInvocation(889)", "Delete Assignment: =(890)", "Delete ExpressionStatement(891)", "Delete SimpleName: get(892)", "Delete SimpleName: Get(893)", "Delete SimpleType: Get(894)", "Delete SimpleName: BytesUtil(895)", "Delete SimpleName: getRowIndex(896)", "Delete SimpleName: rowId(897)", "Delete MethodInvocation(898)", "Delete ClassInstanceCreation(899)", "Delete Assignment: =(900)", "Delete ExpressionStatement(901)", "Delete SimpleName: s2(902)", "Delete SimpleName: Bytes(903)", "Delete SimpleName: toDouble(904)", "Delete SimpleName: htable(905)", "Delete SimpleName: get(906)", "Delete SimpleName: get(907)", "Delete MethodInvocation(908)", "Delete SimpleName: getValue(909)", "Delete SimpleName: Bytes(910)", "Delete SimpleName: toBytes(911)", "Delete QualifiedName: JacobiEigen.EICOL(912)", "Delete MethodInvocation(913)", "Delete SimpleName: Bytes(914)", "Delete SimpleName: toBytes(915)", "Delete SimpleName: String(916)", "Delete SimpleName: valueOf(917)", "Delete SimpleName: pivotcol(918)", "Delete MethodInvocation(919)", "Delete MethodInvocation(920)", "Delete MethodInvocation(921)", "Delete MethodInvocation(922)", "Delete Assignment: =(923)", "Delete ExpressionStatement(924)", "Delete SimpleName: put(925)", "Delete SimpleName: Put(926)", "Delete SimpleType: Put(927)", "Delete SimpleName: BytesUtil(928)", "Delete SimpleName: getRowIndex(929)", "Delete SimpleName: rowId(930)", "Delete MethodInvocation(931)", "Delete ClassInstanceCreation(932)", "Delete Assignment: =(933)", "Delete ExpressionStatement(934)", "Delete SimpleName: put(935)", "Delete SimpleName: add(936)", "Delete SimpleName: Bytes(937)", "Delete SimpleName: toBytes(938)", "Delete QualifiedName: JacobiEigen.EICOL(939)", "Delete MethodInvocation(940)", "Delete SimpleName: Bytes(941)", "Delete SimpleName: toBytes(942)", "Delete SimpleName: String(943)", "Delete SimpleName: valueOf(944)", "Delete SimpleName: pivotcol(945)", "Delete MethodInvocation(946)", "Delete MethodInvocation(947)", "Delete SimpleName: Bytes(948)", "Delete SimpleName: toBytes(949)", "Delete SimpleName: Double(950)", "Delete SimpleType: Double(951)", "Delete SimpleName: pivotsin(952)", "Delete SimpleName: s1(953)", "Delete InfixExpression: *(954)", "Delete SimpleName: pivotcos(955)", "Delete SimpleName: s2(956)", "Delete InfixExpression: *(957)", "Delete InfixExpression: +(958)", "Delete ClassInstanceCreation(959)", "Delete MethodInvocation(960)", "Delete MethodInvocation(961)", "Delete ExpressionStatement(962)", "Delete SimpleName: htable(963)", "Delete SimpleName: put(964)", "Delete SimpleName: put(965)", "Delete MethodInvocation(966)", "Delete ExpressionStatement(967)", "Delete SimpleName: put(968)", "Delete SimpleName: Put(969)", "Delete SimpleType: Put(970)", "Delete SimpleName: BytesUtil(971)", "Delete SimpleName: getRowIndex(972)", "Delete SimpleName: pivotrow(973)", "Delete MethodInvocation(974)", "Delete ClassInstanceCreation(975)", "Delete Assignment: =(976)", "Delete ExpressionStatement(977)", "Delete SimpleName: put(978)", "Delete SimpleName: add(979)", "Delete SimpleName: Bytes(980)", "Delete SimpleName: toBytes(981)", "Delete QualifiedName: JacobiEigen.EICOL(982)", "Delete MethodInvocation(983)", "Delete SimpleName: Bytes(984)", "Delete SimpleName: toBytes(985)", "Delete SimpleName: String(986)", "Delete SimpleName: valueOf(987)", "Delete SimpleName: rowId(988)", "Delete MethodInvocation(989)", "Delete MethodInvocation(990)", "Delete SimpleName: Bytes(991)", "Delete SimpleName: toBytes(992)", "Delete SimpleName: Double(993)", "Delete SimpleType: Double(994)", "Delete SimpleName: pivotcos(995)", "Delete SimpleName: s1(996)", "Delete InfixExpression: *(997)", "Delete SimpleName: pivotsin(998)", "Delete SimpleName: s2(999)", "Delete InfixExpression: *(1000)", "Delete InfixExpression: -(1001)", "Delete ClassInstanceCreation(1002)", "Delete MethodInvocation(1003)", "Delete MethodInvocation(1004)", "Delete ExpressionStatement(1005)", "Delete SimpleName: htable(1006)", "Delete SimpleName: put(1007)", "Delete SimpleName: put(1008)", "Delete MethodInvocation(1009)", "Delete ExpressionStatement(1010)", "Delete Block(1011)", "Delete SimpleName: rowId(1012)", "Delete SimpleName: pivotcol(1013)", "Delete InfixExpression: ==(1014)", "Delete PrimitiveType: int(1015)", "Delete SimpleName: i(1016)", "Delete SimpleName: pivotcol(1017)", "Delete NumberLiteral: 1(1018)", "Delete InfixExpression: +(1019)", "Delete VariableDeclarationFragment(1020)", "Delete VariableDeclarationExpression(1021)", "Delete SimpleName: i(1022)", "Delete SimpleName: size(1023)", "Delete InfixExpression: <(1024)", "Delete SimpleName: i(1025)", "Delete PostfixExpression: ++(1026)", "Delete SimpleName: Get(1027)", "Delete SimpleType: Get(1028)", "Delete SimpleName: get(1029)", "Delete SimpleName: Get(1030)", "Delete SimpleType: Get(1031)", "Delete SimpleName: BytesUtil(1032)", "Delete SimpleName: getRowIndex(1033)", "Delete SimpleName: pivotrow(1034)", "Delete MethodInvocation(1035)", "Delete ClassInstanceCreation(1036)", "Delete VariableDeclarationFragment(1037)", "Delete VariableDeclarationStatement(1038)", "Delete SimpleName: s1(1039)", "Delete SimpleName: Bytes(1040)", "Delete SimpleName: toDouble(1041)", "Delete SimpleName: htable(1042)", "Delete SimpleName: get(1043)", "Delete SimpleName: get(1044)", "Delete MethodInvocation(1045)", "Delete SimpleName: getValue(1046)", "Delete SimpleName: Bytes(1047)", "Delete SimpleName: toBytes(1048)", "Delete QualifiedName: JacobiEigen.EICOL(1049)", "Delete MethodInvocation(1050)", "Delete SimpleName: Bytes(1051)", "Delete SimpleName: toBytes(1052)", "Delete SimpleName: String(1053)", "Delete SimpleName: valueOf(1054)", "Delete SimpleName: i(1055)", "Delete MethodInvocation(1056)", "Delete MethodInvocation(1057)", "Delete MethodInvocation(1058)", "Delete MethodInvocation(1059)", "Delete Assignment: =(1060)", "Delete ExpressionStatement(1061)", "Delete SimpleName: get(1062)", "Delete SimpleName: Get(1063)", "Delete SimpleType: Get(1064)", "Delete SimpleName: BytesUtil(1065)", "Delete SimpleName: getRowIndex(1066)", "Delete SimpleName: pivotcol(1067)", "Delete MethodInvocation(1068)", "Delete ClassInstanceCreation(1069)", "Delete Assignment: =(1070)", "Delete ExpressionStatement(1071)", "Delete SimpleName: s2(1072)", "Delete SimpleName: Bytes(1073)", "Delete SimpleName: toDouble(1074)", "Delete SimpleName: htable(1075)", "Delete SimpleName: get(1076)", "Delete SimpleName: get(1077)", "Delete MethodInvocation(1078)", "Delete SimpleName: getValue(1079)", "Delete SimpleName: Bytes(1080)", "Delete SimpleName: toBytes(1081)", "Delete QualifiedName: JacobiEigen.EICOL(1082)", "Delete MethodInvocation(1083)", "Delete SimpleName: Bytes(1084)", "Delete SimpleName: toBytes(1085)", "Delete SimpleName: String(1086)", "Delete SimpleName: valueOf(1087)", "Delete SimpleName: i(1088)", "Delete MethodInvocation(1089)", "Delete MethodInvocation(1090)", "Delete MethodInvocation(1091)", "Delete MethodInvocation(1092)", "Delete Assignment: =(1093)", "Delete ExpressionStatement(1094)", "Delete PrimitiveType: double(1095)", "Delete SimpleName: pivotC(1096)", "Delete SimpleName: pivotsin(1097)", "Delete SimpleName: s1(1098)", "Delete InfixExpression: *(1099)", "Delete SimpleName: pivotcos(1100)", "Delete SimpleName: s2(1101)", "Delete InfixExpression: *(1102)", "Delete InfixExpression: +(1103)", "Delete ParenthesizedExpression(1104)", "Delete VariableDeclarationFragment(1105)", "Delete VariableDeclarationStatement(1106)", "Delete SimpleName: put(1107)", "Delete SimpleName: Put(1108)", "Delete SimpleType: Put(1109)", "Delete SimpleName: BytesUtil(1110)", "Delete SimpleName: getRowIndex(1111)", "Delete SimpleName: pivotcol(1112)", "Delete MethodInvocation(1113)", "Delete ClassInstanceCreation(1114)", "Delete Assignment: =(1115)", "Delete ExpressionStatement(1116)", "Delete SimpleName: put(1117)", "Delete SimpleName: add(1118)", "Delete SimpleName: Bytes(1119)", "Delete SimpleName: toBytes(1120)", "Delete QualifiedName: JacobiEigen.EICOL(1121)", "Delete MethodInvocation(1122)", "Delete SimpleName: Bytes(1123)", "Delete SimpleName: toBytes(1124)", "Delete SimpleName: String(1125)", "Delete SimpleName: valueOf(1126)", "Delete SimpleName: i(1127)", "Delete MethodInvocation(1128)", "Delete MethodInvocation(1129)", "Delete SimpleName: Bytes(1130)", "Delete SimpleName: toBytes(1131)", "Delete SimpleName: pivotC(1132)", "Delete MethodInvocation(1133)", "Delete MethodInvocation(1134)", "Delete ExpressionStatement(1135)", "Delete SimpleName: htable(1136)", "Delete SimpleName: put(1137)", "Delete SimpleName: put(1138)", "Delete MethodInvocation(1139)", "Delete ExpressionStatement(1140)", "Delete PrimitiveType: double(1141)", "Delete SimpleName: pivotV(1142)", "Delete SimpleName: pivotcos(1143)", "Delete SimpleName: s1(1144)", "Delete InfixExpression: *(1145)", "Delete SimpleName: pivotsin(1146)", "Delete SimpleName: s2(1147)", "Delete InfixExpression: *(1148)", "Delete InfixExpression: -(1149)", "Delete ParenthesizedExpression(1150)", "Delete VariableDeclarationFragment(1151)", "Delete VariableDeclarationStatement(1152)", "Delete SimpleName: put(1153)", "Delete SimpleName: Put(1154)", "Delete SimpleType: Put(1155)", "Delete SimpleName: BytesUtil(1156)", "Delete SimpleName: getRowIndex(1157)", "Delete SimpleName: pivotrow(1158)", "Delete MethodInvocation(1159)", "Delete ClassInstanceCreation(1160)", "Delete Assignment: =(1161)", "Delete ExpressionStatement(1162)", "Delete SimpleName: put(1163)", "Delete SimpleName: add(1164)", "Delete SimpleName: Bytes(1165)", "Delete SimpleName: toBytes(1166)", "Delete QualifiedName: JacobiEigen.EICOL(1167)", "Delete MethodInvocation(1168)", "Delete SimpleName: Bytes(1169)", "Delete SimpleName: toBytes(1170)", "Delete SimpleName: String(1171)", "Delete SimpleName: valueOf(1172)", "Delete SimpleName: i(1173)", "Delete MethodInvocation(1174)", "Delete MethodInvocation(1175)", "Delete SimpleName: Bytes(1176)", "Delete SimpleName: toBytes(1177)", "Delete SimpleName: pivotV(1178)", "Delete MethodInvocation(1179)", "Delete MethodInvocation(1180)", "Delete ExpressionStatement(1181)", "Delete SimpleName: htable(1182)", "Delete SimpleName: put(1183)", "Delete SimpleName: put(1184)", "Delete MethodInvocation(1185)", "Delete ExpressionStatement(1186)", "Delete Block(1187)", "Delete ForStatement(1188)", "Delete Block(1189)", "Delete BooleanLiteral: false(1190)", "Delete ReturnStatement(1191)", "Delete Block(1192)", "Delete IfStatement(1193)", "Delete IfStatement(1194)", "Delete IfStatement(1195)", "Delete IfStatement(1196)", "Delete SimpleName: lastRow(1197)", "Delete SimpleName: row(1198)", "Delete Assignment: =(1199)", "Delete ExpressionStatement(1200)", "Delete Block(1201)", "Delete IfStatement(1202)", "Delete SimpleName: hasMore(1203)", "Delete ReturnStatement(1204)", "Delete Block(1205)", "Delete MethodDeclaration(1206)", "Delete TypeDeclaration: class(1207)", "Delete SimpleName: Override(1208)", "Delete MarkerAnnotation(1209)", "Delete Modifier: public(1210)", "Delete SimpleName: RecordReader(1211)", "Delete SimpleType: RecordReader(1212)", "Delete SimpleName: NullWritable(1213)", "Delete SimpleType: NullWritable(1214)", "Delete SimpleName: NullWritable(1215)", "Delete SimpleType: NullWritable(1216)", "Delete ParameterizedType: RecordReader<NullWritable,NullWritable>(1217)", "Delete SimpleName: createRecordReader(1218)", "Delete SimpleName: InputSplit(1219)", "Delete SimpleType: InputSplit(1220)", "Delete SimpleName: split(1221)", "Delete SingleVariableDeclaration(1222)", "Delete SimpleName: TaskAttemptContext(1223)", "Delete SimpleType: TaskAttemptContext(1224)", "Delete SimpleName: context(1225)", "Delete SingleVariableDeclaration(1226)", "Delete SimpleName: IOException(1227)", "Delete SimpleType: IOException(1228)", "Delete SimpleName: InterruptedException(1229)", "Delete SimpleType: InterruptedException(1230)", "Delete SimpleName: TableSplit(1231)", "Delete SimpleType: TableSplit(1232)", "Delete SimpleName: tSplit(1233)", "Delete SimpleName: TableSplit(1234)", "Delete SimpleType: TableSplit(1235)", "Delete SimpleName: split(1236)", "Delete CastExpression(1237)", "Delete VariableDeclarationFragment(1238)", "Delete VariableDeclarationStatement(1239)", "Delete SimpleName: RotationRecordReader(1240)", "Delete SimpleType: RotationRecordReader(1241)", "Delete SimpleName: trr(1242)", "Delete ThisExpression(1243)", "Delete SimpleName: rotationRecordReader(1244)", "Delete FieldAccess(1245)", "Delete VariableDeclarationFragment(1246)", "Delete VariableDeclarationStatement(1247)", "Delete SimpleName: trr(1248)", "Delete NullLiteral(1249)", "Delete InfixExpression: ==(1250)", "Delete SimpleName: trr(1251)", "Delete SimpleName: RotationRecordReader(1252)", "Delete SimpleType: RotationRecordReader(1253)", "Delete SimpleName: pivot_row(1254)", "Delete SimpleName: pivot_col(1255)", "Delete SimpleName: pivot_sin(1256)", "Delete SimpleName: pivot_cos(1257)", "Delete ClassInstanceCreation(1258)", "Delete Assignment: =(1259)", "Delete ExpressionStatement(1260)", "Delete Block(1261)", "Delete IfStatement(1262)", "Delete SimpleName: Scan(1263)", "Delete SimpleType: Scan(1264)", "Delete SimpleName: sc(1265)", "Delete SimpleName: Scan(1266)", "Delete SimpleType: Scan(1267)", "Delete ThisExpression(1268)", "Delete SimpleName: scan(1269)", "Delete FieldAccess(1270)", "Delete ClassInstanceCreation(1271)", "Delete VariableDeclarationFragment(1272)", "Delete VariableDeclarationStatement(1273)", "Delete SimpleName: sc(1274)", "Delete SimpleName: setStartRow(1275)", "Delete SimpleName: tSplit(1276)", "Delete SimpleName: getStartRow(1277)", "Delete MethodInvocation(1278)", "Delete MethodInvocation(1279)", "Delete ExpressionStatement(1280)", "Delete SimpleName: sc(1281)", "Delete SimpleName: setStopRow(1282)", "Delete SimpleName: tSplit(1283)", "Delete SimpleName: getEndRow(1284)", "Delete MethodInvocation(1285)", "Delete MethodInvocation(1286)", "Delete ExpressionStatement(1287)", "Delete SimpleName: trr(1288)", "Delete SimpleName: setScan(1289)", "Delete SimpleName: sc(1290)", "Delete MethodInvocation(1291)", "Delete ExpressionStatement(1292)", "Delete SimpleName: trr(1293)", "Delete SimpleName: setHTable(1294)", "Delete SimpleName: table(1295)", "Delete MethodInvocation(1296)", "Delete ExpressionStatement(1297)", "Delete SimpleName: trr(1298)", "Delete SimpleName: init(1299)", "Delete MethodInvocation(1300)", "Delete ExpressionStatement(1301)", "Delete SimpleName: trr(1302)", "Delete ReturnStatement(1303)", "Delete Block(1304)", "Delete MethodDeclaration(1305)", "Delete SimpleName: Override(1306)", "Delete MarkerAnnotation(1307)", "Delete Modifier: public(1308)", "Delete SimpleName: List(1309)", "Delete SimpleType: List(1310)", "Delete SimpleName: InputSplit(1311)", "Delete SimpleType: InputSplit(1312)", "Delete ParameterizedType: List<InputSplit>(1313)", "Delete SimpleName: getSplits(1314)", "Delete SimpleName: JobContext(1315)", "Delete SimpleType: JobContext(1316)", "Delete SimpleName: context(1317)", "Delete SingleVariableDeclaration(1318)", "Delete SimpleName: IOException(1319)", "Delete SimpleType: IOException(1320)", "Delete SimpleName: table(1321)", "Delete NullLiteral(1322)", "Delete InfixExpression: ==(1323)", "Delete SimpleName: IOException(1324)", "Delete SimpleType: IOException(1325)", "Delete StringLiteral: \"No table was provided.\"(1326)", "Delete ClassInstanceCreation(1327)", "Delete ThrowStatement(1328)", "Delete Block(1329)", "Delete IfStatement(1330)", "Delete PrimitiveType: byte(1331)", "Delete Dimension(1332)", "Delete Dimension(1333)", "Delete ArrayType: byte[][](1334)", "Delete SimpleName: startKeys(1335)", "Delete SimpleName: table(1336)", "Delete SimpleName: getStartKeys(1337)", "Delete MethodInvocation(1338)", "Delete VariableDeclarationFragment(1339)", "Delete VariableDeclarationStatement(1340)", "Delete SimpleName: startKeys(1341)", "Delete NullLiteral(1342)", "Delete InfixExpression: ==(1343)", "Delete QualifiedName: startKeys.length(1344)", "Delete NumberLiteral: 0(1345)", "Delete InfixExpression: ==(1346)", "Delete InfixExpression: ||(1347)", "Delete SimpleName: IOException(1348)", "Delete SimpleType: IOException(1349)", "Delete StringLiteral: \"Expecting at least one region.\"(1350)", "Delete ClassInstanceCreation(1351)", "Delete ThrowStatement(1352)", "Delete Block(1353)", "Delete IfStatement(1354)", "Delete PrimitiveType: int(1355)", "Delete SimpleName: realNumSplits(1356)", "Delete QualifiedName: startKeys.length(1357)", "Delete VariableDeclarationFragment(1358)", "Delete VariableDeclarationStatement(1359)", "Delete SimpleName: InputSplit(1360)", "Delete SimpleType: InputSplit(1361)", "Delete Dimension(1362)", "Delete ArrayType: InputSplit[](1363)", "Delete SimpleName: splits(1364)", "Delete SimpleName: InputSplit(1365)", "Delete SimpleType: InputSplit(1366)", "Delete Dimension(1367)", "Delete ArrayType: InputSplit[](1368)", "Delete SimpleName: realNumSplits(1369)", "Delete ArrayCreation(1370)", "Delete VariableDeclarationFragment(1371)", "Delete VariableDeclarationStatement(1372)", "Delete PrimitiveType: int(1373)", "Delete SimpleName: middle(1374)", "Delete QualifiedName: startKeys.length(1375)", "Delete SimpleName: realNumSplits(1376)", "Delete InfixExpression: /(1377)", "Delete VariableDeclarationFragment(1378)", "Delete VariableDeclarationStatement(1379)", "Delete PrimitiveType: int(1380)", "Delete SimpleName: startPos(1381)", "Delete NumberLiteral: 0(1382)", "Delete VariableDeclarationFragment(1383)", "Delete VariableDeclarationStatement(1384)", "Delete PrimitiveType: int(1385)", "Delete SimpleName: i(1386)", "Delete NumberLiteral: 0(1387)", "Delete VariableDeclarationFragment(1388)", "Delete VariableDeclarationExpression(1389)", "Delete SimpleName: i(1390)", "Delete SimpleName: realNumSplits(1391)", "Delete InfixExpression: <(1392)", "Delete SimpleName: i(1393)", "Delete PostfixExpression: ++(1394)", "Delete PrimitiveType: int(1395)", "Delete SimpleName: lastPos(1396)", "Delete SimpleName: startPos(1397)", "Delete SimpleName: middle(1398)", "Delete InfixExpression: +(1399)", "Delete VariableDeclarationFragment(1400)", "Delete VariableDeclarationStatement(1401)", "Delete SimpleName: lastPos(1402)", "Delete QualifiedName: startKeys.length(1403)", "Delete SimpleName: realNumSplits(1404)", "Delete InfixExpression: %(1405)", "Delete SimpleName: i(1406)", "Delete InfixExpression: >(1407)", "Delete SimpleName: lastPos(1408)", "Delete NumberLiteral: 1(1409)", "Delete InfixExpression: +(1410)", "Delete SimpleName: lastPos(1411)", "Delete ConditionalExpression(1412)", "Delete Assignment: =(1413)", "Delete ExpressionStatement(1414)", "Delete SimpleName: String(1415)", "Delete SimpleType: String(1416)", "Delete SimpleName: regionLocation(1417)", "Delete SimpleName: table(1418)", "Delete SimpleName: getRegionLocation(1419)", "Delete SimpleName: startKeys(1420)", "Delete SimpleName: startPos(1421)", "Delete ArrayAccess(1422)", "Delete MethodInvocation(1423)", "Delete SimpleName: getServerAddress(1424)", "Delete MethodInvocation(1425)", "Delete SimpleName: getHostname(1426)", "Delete MethodInvocation(1427)", "Delete VariableDeclarationFragment(1428)", "Delete VariableDeclarationStatement(1429)", "Delete SimpleName: splits(1430)", "Delete SimpleName: i(1431)", "Delete ArrayAccess(1432)", "Delete SimpleName: TableSplit(1433)", "Delete SimpleType: TableSplit(1434)", "Delete ThisExpression(1435)", "Delete SimpleName: table(1436)", "Delete FieldAccess(1437)", "Delete SimpleName: getTableName(1438)", "Delete MethodInvocation(1439)", "Delete SimpleName: startKeys(1440)", "Delete SimpleName: startPos(1441)", "Delete ArrayAccess(1442)", "Delete SimpleName: i(1443)", "Delete NumberLiteral: 1(1444)", "Delete InfixExpression: +(1445)", "Delete ParenthesizedExpression(1446)", "Delete SimpleName: realNumSplits(1447)", "Delete InfixExpression: <(1448)", "Delete ParenthesizedExpression(1449)", "Delete SimpleName: startKeys(1450)", "Delete SimpleName: lastPos(1451)", "Delete ArrayAccess(1452)", "Delete QualifiedName: HConstants.EMPTY_START_ROW(1453)", "Delete ConditionalExpression(1454)", "Delete SimpleName: regionLocation(1455)", "Delete ClassInstanceCreation(1456)", "Delete Assignment: =(1457)", "Delete ExpressionStatement(1458)", "Delete SimpleName: LOG(1459)", "Delete SimpleName: info(1460)", "Delete StringLiteral: \"split: \"(1461)", "Delete SimpleName: i(1462)", "Delete StringLiteral: \"->\"(1463)", "Delete SimpleName: splits(1464)", "Delete SimpleName: i(1465)", "Delete ArrayAccess(1466)", "Delete InfixExpression: +(1467)", "Delete MethodInvocation(1468)", "Delete ExpressionStatement(1469)", "Delete SimpleName: startPos(1470)", "Delete SimpleName: lastPos(1471)", "Delete Assignment: =(1472)", "Delete ExpressionStatement(1473)", "Delete Block(1474)", "Delete ForStatement(1475)", "Delete SimpleName: Arrays(1476)", "Delete SimpleName: asList(1477)", "Delete SimpleName: splits(1478)", "Delete MethodInvocation(1479)", "Delete ReturnStatement(1480)", "Delete Block(1481)", "Delete MethodDeclaration(1482)", "Delete Modifier: protected(1483)", "Delete SimpleName: HTable(1484)", "Delete SimpleType: HTable(1485)", "Delete SimpleName: getHTable(1486)", "Delete ThisExpression(1487)", "Delete SimpleName: table(1488)", "Delete FieldAccess(1489)", "Delete ReturnStatement(1490)", "Delete Block(1491)", "Delete MethodDeclaration(1492)", "Delete Modifier: protected(1493)", "Delete PrimitiveType: void(1494)", "Delete SimpleName: setHTable(1495)", "Delete SimpleName: HTable(1496)", "Delete SimpleType: HTable(1497)", "Delete SimpleName: table(1498)", "Delete SingleVariableDeclaration(1499)", "Delete ThisExpression(1500)", "Delete SimpleName: table(1501)", "Delete FieldAccess(1502)", "Delete SimpleName: table(1503)", "Delete Assignment: =(1504)", "Delete ExpressionStatement(1505)", "Delete Block(1506)", "Delete MethodDeclaration(1507)", "Delete Modifier: public(1508)", "Delete SimpleName: Scan(1509)", "Delete SimpleType: Scan(1510)", "Delete SimpleName: getScan(1511)", "Delete ThisExpression(1512)", "Delete SimpleName: scan(1513)", "Delete FieldAccess(1514)", "Delete NullLiteral(1515)", "Delete InfixExpression: ==(1516)", "Delete ThisExpression(1517)", "Delete SimpleName: scan(1518)", "Delete FieldAccess(1519)", "Delete SimpleName: Scan(1520)", "Delete SimpleType: Scan(1521)", "Delete ClassInstanceCreation(1522)", "Delete Assignment: =(1523)", "Delete ExpressionStatement(1524)", "Delete IfStatement(1525)", "Delete SimpleName: scan(1526)", "Delete ReturnStatement(1527)", "Delete Block(1528)", "Delete MethodDeclaration(1529)", "Delete Modifier: public(1530)", "Delete PrimitiveType: void(1531)", "Delete SimpleName: setScan(1532)", "Delete SimpleName: Scan(1533)", "Delete SimpleType: Scan(1534)", "Delete SimpleName: scan(1535)", "Delete SingleVariableDeclaration(1536)", "Delete ThisExpression(1537)", "Delete SimpleName: scan(1538)", "Delete FieldAccess(1539)", "Delete SimpleName: scan(1540)", "Delete Assignment: =(1541)", "Delete ExpressionStatement(1542)", "Delete Block(1543)", "Delete MethodDeclaration(1544)", "Delete Modifier: protected(1545)", "Delete PrimitiveType: void(1546)", "Delete SimpleName: setTableRecordReader(1547)", "Delete SimpleName: RotationRecordReader(1548)", "Delete SimpleType: RotationRecordReader(1549)", "Delete SimpleName: rotationRecordReader(1550)", "Delete SingleVariableDeclaration(1551)", "Delete ThisExpression(1552)", "Delete SimpleName: rotationRecordReader(1553)", "Delete FieldAccess(1554)", "Delete SimpleName: rotationRecordReader(1555)", "Delete Assignment: =(1556)", "Delete ExpressionStatement(1557)", "Delete Block(1558)", "Delete MethodDeclaration(1559)", "Delete SimpleName: Override(1560)", "Delete MarkerAnnotation(1561)", "Delete Modifier: public(1562)", "Delete SimpleName: Configuration(1563)", "Delete SimpleType: Configuration(1564)", "Delete SimpleName: getConf(1565)", "Delete SimpleName: conf(1566)", "Delete ReturnStatement(1567)", "Delete Block(1568)", "Delete MethodDeclaration(1569)", "Delete SimpleName: Override(1570)", "Delete MarkerAnnotation(1571)", "Delete Modifier: public(1572)", "Delete PrimitiveType: void(1573)", "Delete SimpleName: setConf(1574)", "Delete SimpleName: Configuration(1575)", "Delete SimpleType: Configuration(1576)", "Delete SimpleName: conf(1577)", "Delete SingleVariableDeclaration(1578)", "Delete SimpleName: pivot_row(1579)", "Delete SimpleName: conf(1580)", "Delete SimpleName: getInt(1581)", "Delete QualifiedName: JacobiEigen.PIVOTROW(1582)", "Delete NumberLiteral: 1(1583)", "Delete PrefixExpression: -(1584)", "Delete MethodInvocation(1585)", "Delete Assignment: =(1586)", "Delete ExpressionStatement(1587)", "Delete SimpleName: pivot_col(1588)", "Delete SimpleName: conf(1589)", "Delete SimpleName: getInt(1590)", "Delete QualifiedName: JacobiEigen.PIVOTCOL(1591)", "Delete NumberLiteral: 1(1592)", "Delete PrefixExpression: -(1593)", "Delete MethodInvocation(1594)", "Delete Assignment: =(1595)", "Delete ExpressionStatement(1596)", "Delete SimpleName: pivot_sin(1597)", "Delete SimpleName: Double(1598)", "Delete SimpleName: parseDouble(1599)", "Delete SimpleName: conf(1600)", "Delete SimpleName: get(1601)", "Delete QualifiedName: JacobiEigen.PIVOTSIN(1602)", "Delete MethodInvocation(1603)", "Delete MethodInvocation(1604)", "Delete Assignment: =(1605)", "Delete ExpressionStatement(1606)", "Delete SimpleName: pivot_cos(1607)", "Delete SimpleName: Double(1608)", "Delete SimpleName: parseDouble(1609)", "Delete SimpleName: conf(1610)", "Delete SimpleName: get(1611)", "Delete QualifiedName: JacobiEigen.PIVOTCOS(1612)", "Delete MethodInvocation(1613)", "Delete MethodInvocation(1614)", "Delete Assignment: =(1615)", "Delete ExpressionStatement(1616)", "Delete ThisExpression(1617)", "Delete SimpleName: conf(1618)", "Delete FieldAccess(1619)", "Delete SimpleName: conf(1620)", "Delete Assignment: =(1621)", "Delete ExpressionStatement(1622)", "Delete SimpleName: String(1623)", "Delete SimpleType: String(1624)", "Delete SimpleName: tableName(1625)", "Delete SimpleName: conf(1626)", "Delete SimpleName: get(1627)", "Delete SimpleName: INPUT_TABLE(1628)", "Delete MethodInvocation(1629)", "Delete VariableDeclarationFragment(1630)", "Delete VariableDeclarationStatement(1631)", "Delete SimpleName: setHTable(1632)", "Delete SimpleName: HTable(1633)", "Delete SimpleType: HTable(1634)", "Delete SimpleName: HBaseConfiguration(1635)", "Delete SimpleType: HBaseConfiguration(1636)", "Delete SimpleName: conf(1637)", "Delete ClassInstanceCreation(1638)", "Delete SimpleName: tableName(1639)", "Delete ClassInstanceCreation(1640)", "Delete MethodInvocation(1641)", "Delete ExpressionStatement(1642)", "Delete Block(1643)", "Delete SimpleName: Exception(1644)", "Delete SimpleType: Exception(1645)", "Delete SimpleName: e(1646)", "Delete SingleVariableDeclaration(1647)", "Delete SimpleName: LOG(1648)", "Delete SimpleName: error(1649)", "Delete SimpleName: StringUtils(1650)", "Delete SimpleName: stringifyException(1651)", "Delete SimpleName: e(1652)", "Delete MethodInvocation(1653)", "Delete MethodInvocation(1654)", "Delete ExpressionStatement(1655)", "Delete Block(1656)", "Delete CatchClause(1657)", "Delete TryStatement(1658)", "Delete SimpleName: Scan(1659)", "Delete SimpleType: Scan(1660)", "Delete SimpleName: scan(1661)", "Delete NullLiteral(1662)", "Delete VariableDeclarationFragment(1663)", "Delete VariableDeclarationStatement(1664)", "Delete SimpleName: scan(1665)", "Delete SimpleName: PivotInputFormat(1666)", "Delete SimpleName: convertStringToScan(1667)", "Delete SimpleName: conf(1668)", "Delete SimpleName: get(1669)", "Delete SimpleName: SCAN(1670)", "Delete MethodInvocation(1671)", "Delete MethodInvocation(1672)", "Delete Assignment: =(1673)", "Delete ExpressionStatement(1674)", "Delete Block(1675)", "Delete SimpleName: IOException(1676)", "Delete SimpleType: IOException(1677)", "Delete SimpleName: e(1678)", "Delete SingleVariableDeclaration(1679)", "Delete SimpleName: LOG(1680)", "Delete SimpleName: error(1681)", "Delete StringLiteral: \"An error occurred.\"(1682)", "Delete SimpleName: e(1683)", "Delete MethodInvocation(1684)", "Delete ExpressionStatement(1685)", "Delete Block(1686)", "Delete CatchClause(1687)", "Delete TryStatement(1688)", "Delete SimpleName: setScan(1689)", "Delete SimpleName: scan(1690)", "Delete MethodInvocation(1691)", "Delete ExpressionStatement(1692)", "Delete Block(1693)", "Delete MethodDeclaration(1694)", "Delete TypeDeclaration: class(1695)"]}}], "commit_stats": [{"total_files": 59, "deleted_files": 54, "testing": "True", "maintenance": "True", "build": "False"}]}