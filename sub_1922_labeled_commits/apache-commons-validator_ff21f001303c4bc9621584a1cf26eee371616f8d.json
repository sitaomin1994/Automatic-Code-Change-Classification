{"application": "apache-commons-validator", "csha": "ff21f001303c4bc9621584a1cf26eee371616f8d", "files": [{"CreditCardValidator_cluster": {"actions": [{"root": "UPDATE from int to long", "operations": ["UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long"]}]}}, {"CreditCardValidator_diff": {"operations": ["Update PrimitiveType: int(50) to long", "Update PrimitiveType: int(61) to long", "Update PrimitiveType: int(74) to long", "Update PrimitiveType: int(87) to long", "Update PrimitiveType: int(100) to long", "Update PrimitiveType: int(113) to long", "Update PrimitiveType: int(270) to long", "Update PrimitiveType: int(550) to long", "Update PrimitiveType: int(553) to long"]}}, {"UrlValidator_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: flag to SingleVariableDeclaration at 1", "INS TextElement: Tests whether the given flag is on.  If the flag is not a power of 2  to TagElement at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS ReturnStatement to Block at 0", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: isOn to MethodDeclaration at 3", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  Flag value to check. to TagElement: @param at 1", "INS ParenthesizedExpression to InfixExpression: > at 0", "INS SimpleName: flag to InfixExpression: & at 1", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS TagElement to Javadoc at 0", "INS TextElement: (ie. 3) this tests whether the combination of flags is on. to TagElement at 1", "INS Block to MethodDeclaration at 5", "INS InfixExpression: > to ReturnStatement at 0", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: flag to TagElement: @param at 0", "INS TextElement:  whether the specified flag value is on. to TagElement: @return at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 51", "operations": ["INS InfixExpression: & to ParenthesizedExpression at 0", "INS SimpleName: flag to InfixExpression: & at 1", "INS Block to MethodDeclaration at 5", "INS Modifier: private to MethodDeclaration at 1", "INS InfixExpression: == to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS TextElement: (ie. 3) this tests whether the combination of flags is off. to TagElement at 1", "INS MethodDeclaration to TypeDeclaration: class at 51", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS TextElement:  Flag value to check. to TagElement: @param at 1", "INS SimpleName: flag to SingleVariableDeclaration at 1", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  whether the specified flag value is off. to TagElement: @return at 0", "INS TextElement: Tests whether the given flag is off.  If the flag is not a power of 2  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isOff to MethodDeclaration at 3", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: flag to TagElement: @param at 0", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS ParenthesizedExpression to InfixExpression: == at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from int to long", "operations": ["UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long", "UPD PrimitiveType: int from int to long"]}, {"root": "INS Modifier: final to FieldDeclaration at 2", "operations": ["INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS PrimitiveType: long to FieldDeclaration at 3", "operations": ["INS PrimitiveType: long to FieldDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: isOn to MethodInvocation at 0", "INS SimpleName: isValid to MethodInvocation at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: domainValidator to MethodInvocation at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: InetAddressValidator to SimpleType: InetAddressValidator at 0", "INS SimpleName: authorityMatcher to MethodInvocation at 0", "INS SimpleName: PARSE_AUTHORITY_EXTRA to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: port to MethodInvocation at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: hostLocation to MethodInvocation at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: authorityMatcher to MethodInvocation at 0", "INS SimpleName: inetAddressValidator to VariableDeclarationFragment at 0", "INS SimpleName: MANUAL_AUTHORITY_VALIDATION to MethodInvocation at 1", "INS SimpleType: InetAddressValidator to VariableDeclarationStatement at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: authorityValidators to ArrayAccess at 0", "INS ForStatement to Block at 1", "INS SimpleName: authorityMatcher to MethodInvocation at 0", "INS SimpleName: trim to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: hostLocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: InetAddressValidator to MethodInvocation at 0", "INS InfixExpression: > to InfixExpression: && at 1", "INS SimpleName: matcher to MethodInvocation at 1", "INS SimpleName: group to MethodInvocation at 1", "INS Block to ForStatement at 3", "INS SimpleName: authorityMatcher to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: extra to VariableDeclarationFragment at 0", "INS SimpleType: DomainValidator to VariableDeclarationStatement at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: AUTHORITY_PATTERN to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: group to MethodInvocation at 1", "INS SimpleName: port to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: PARSE_AUTHORITY_PORT to MethodInvocation at 2", "INS SimpleName: i to ArrayAccess at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: domainValidator to VariableDeclarationFragment at 0", "INS SimpleName: matches to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: extra to InfixExpression: != at 0", "INS ThrowStatement to Block at 0", "INS IfStatement to Block at 0", "INS SimpleName: authorityValidators to InfixExpression: == at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleType: Matcher to VariableDeclarationStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: PARSE_AUTHORITY_HOST_IP to MethodInvocation at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: PORT_PATTERN to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 7", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: DomainValidator to MethodInvocation at 0", "INS QualifiedName: authorityValidators.length to InfixExpression: < at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: extra to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: authorityMatcher to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: authority to MethodInvocation at 2", "INS PostfixExpression: ++ to ForStatement at 2", "INS IfStatement to Block at 10", "INS IfStatement to Block at 8", "INS InfixExpression: == to IfStatement at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: isValid to MethodInvocation at 1", "INS SimpleName: hostLocation to VariableDeclarationFragment at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS IfStatement to Block at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: port to InfixExpression: != at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: Matcher to SimpleType: Matcher at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: matches to MethodInvocation at 1", "INS SimpleName: matcher to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: authority to MethodInvocation at 2", "INS SimpleName: inetAddressValidator to MethodInvocation at 0", "INS ReturnStatement to Block at 11", "INS ReturnStatement to Block at 0", "INS SimpleName: isValid to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: authority to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"manual authority validation enabled, but no authority validators specified\" to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 6", "INS SimpleName: DomainValidator to SimpleType: DomainValidator at 0", "INS SimpleName: group to MethodInvocation at 1", "INS SimpleName: i to PostfixExpression: ++ at 0"]}, {"root": "INS CastExpression to ConstructorInvocation at 1", "operations": ["INS NumberLiteral: 0 to CastExpression at 1", "INS CastExpression to ConstructorInvocation at 1", "INS PrimitiveType: long to CastExpression at 0"]}, {"root": "INS SimpleName: options to Assignment: = at 1", "operations": ["INS SimpleName: options to Assignment: = at 1"]}, {"root": "MOVE from InfixExpression: &", "operations": ["MOV FieldAccess to InfixExpression: & at 0"]}, {"root": "MOVE from InfixExpression: &", "operations": ["MOV FieldAccess to InfixExpression: & at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.validator.util.Flags"]}, {"root": "DEL SimpleType: Flags", "operations": ["DEL SimpleType: Flags", "DEL SimpleName: Flags"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: Flags", "DEL ClassInstanceCreation", "DEL SimpleName: Flags", "DEL SimpleName: options"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL SimpleName: options", "DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: options", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL SimpleName: options", "DEL FieldAccess"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"UrlValidator_diff": {"operations": [" * <a href='http://www.ietf.org/rfc/rfc2396.txt' >(52) to TextElement: ", " * <a href='http://www.ietf.org/rfc/rfc2396.txt' >(50)", "Insert MethodDeclaration(1195) into TypeDeclaration: class(1222) at 50", "Insert MethodDeclaration(1221) into TypeDeclaration: class(1222) at 51", "Update PrimitiveType: int(72) to long", "Update PrimitiveType: int(85) to long", "Update PrimitiveType: int(98) to long", "Update PrimitiveType: int(112) to long", "Insert Modifier: final(359) into FieldDeclaration(363) at 2", "Insert PrimitiveType: long(360) into FieldDeclaration(363) at 3", "Insert Block(958) into MethodDeclaration(959) at 5", "Insert Javadoc(1178) into MethodDeclaration(1195) at 0", "Insert Modifier: private(1179) into MethodDeclaration(1195) at 1", "Insert PrimitiveType: boolean(1180) into MethodDeclaration(1195) at 2", "Insert SimpleName: isOn(1181) into MethodDeclaration(1195) at 3", "Insert SingleVariableDeclaration(1184) into MethodDeclaration(1195) at 4", "Insert Block(1194) into MethodDeclaration(1195) at 5", "Insert Javadoc(1204) into MethodDeclaration(1221) at 0", "Insert Modifier: private(1205) into MethodDeclaration(1221) at 1", "Insert PrimitiveType: boolean(1206) into MethodDeclaration(1221) at 2", "Insert SimpleName: isOff(1207) into MethodDeclaration(1221) at 3", "Insert SingleVariableDeclaration(1210) into MethodDeclaration(1221) at 4", "Insert Block(1220) into MethodDeclaration(1221) at 5", "Update PrimitiveType: int(476) to long", "Update PrimitiveType: int(504) to long", "Update PrimitiveType: int(537) to long", "Update PrimitiveType: int(575) to long", "Insert IfStatement(811) into Block(958) at 0", "Insert IfStatement(848) into Block(958) at 1", "Insert VariableDeclarationStatement(857) into Block(958) at 2", "Insert IfStatement(865) into Block(958) at 3", "Insert VariableDeclarationStatement(874) into Block(958) at 4", "Insert VariableDeclarationStatement(882) into Block(958) at 5", "Insert IfStatement(906) into Block(958) at 6", "Insert VariableDeclarationStatement(915) into Block(958) at 7", "Insert IfStatement(931) into Block(958) at 8", "Insert VariableDeclarationStatement(940) into Block(958) at 9", "Insert IfStatement(955) into Block(958) at 10", "Insert ReturnStatement(957) into Block(958) at 11", "Insert TagElement(1172) into Javadoc(1178) at 0", "Insert TagElement: @param(1175) into Javadoc(1178) at 1", "Insert TagElement: @return(1177) into Javadoc(1178) at 2", "Insert PrimitiveType: long(1182) into SingleVariableDeclaration(1184) at 0", "Insert SimpleName: flag(1183) into SingleVariableDeclaration(1184) at 1", "Insert ReturnStatement(1193) into Block(1194) at 0", "Insert TagElement(1198) into Javadoc(1204) at 0", "Insert TagElement: @param(1201) into Javadoc(1204) at 1", "Insert TagElement: @return(1203) into Javadoc(1204) at 2", "Insert PrimitiveType: long(1208) into SingleVariableDeclaration(1210) at 0", "Insert SimpleName: flag(1209) into SingleVariableDeclaration(1210) at 1", "Insert ReturnStatement(1219) into Block(1220) at 0", "Insert CastExpression(461) into ConstructorInvocation(462) at 1", "Insert InfixExpression: ==(807) into IfStatement(811) at 0", "Insert Block(810) into IfStatement(811) at 1", "Insert MethodInvocation(814) into IfStatement(848) at 0", "Insert Block(847) into IfStatement(848) at 1", "Insert VariableDeclarationFragment(856) into VariableDeclarationStatement(857) at 1", "Insert PrefixExpression: !(861) into IfStatement(865) at 0", "Insert Block(864) into IfStatement(865) at 1", "Insert SimpleType: String(867) into VariableDeclarationStatement(874) at 0", "Insert VariableDeclarationFragment(873) into VariableDeclarationStatement(874) at 1", "Insert SimpleType: DomainValidator(876) into VariableDeclarationStatement(882) at 0", "Insert VariableDeclarationFragment(881) into VariableDeclarationStatement(882) at 1", "Insert PrefixExpression: !(887) into IfStatement(906) at 0", "Insert Block(905) into IfStatement(906) at 1", "Insert SimpleType: String(908) into VariableDeclarationStatement(915) at 0", "Insert VariableDeclarationFragment(914) into VariableDeclarationStatement(915) at 1", "Insert InfixExpression: !=(918) into IfStatement(931) at 0", "Insert Block(930) into IfStatement(931) at 1", "Insert SimpleType: String(933) into VariableDeclarationStatement(940) at 0", "Insert VariableDeclarationFragment(939) into VariableDeclarationStatement(940) at 1", "Insert InfixExpression: &&(951) into IfStatement(955) at 0", "Insert Block(954) into IfStatement(955) at 1", "Insert BooleanLiteral: true(956) into ReturnStatement(957) at 0", "Insert TextElement: Tests whether the given flag is on.  If the flag is not a power of 2 (1170) into TagElement(1172) at 0", "Insert TextElement: (ie. 3) this tests whether the combination of flags is on.(1171) into TagElement(1172) at 1", "Insert SimpleName: flag(1173) into TagElement: @param(1175) at 0", "Insert TextElement:  Flag value to check.(1174) into TagElement: @param(1175) at 1", "Insert TextElement:  whether the specified flag value is on.(1176) into TagElement: @return(1177) at 0", "Insert InfixExpression: >(1192) into ReturnStatement(1193) at 0", "Insert TextElement: Tests whether the given flag is off.  If the flag is not a power of 2 (1196) into TagElement(1198) at 0", "Insert TextElement: (ie. 3) this tests whether the combination of flags is off.(1197) into TagElement(1198) at 1", "Insert SimpleName: flag(1199) into TagElement: @param(1201) at 0", "Insert TextElement:  Flag value to check.(1200) into TagElement: @param(1201) at 1", "Insert TextElement:  whether the specified flag value is off.(1202) into TagElement: @return(1203) at 0", "Insert InfixExpression: ==(1218) into ReturnStatement(1219) at 0", "Insert PrimitiveType: long(459) into CastExpression(461) at 0", "Insert NumberLiteral: 0(460) into CastExpression(461) at 1", "Insert SimpleName: options(580) into Assignment: =(581) at 1", "Insert SimpleName: authority(805) into InfixExpression: ==(807) at 0", "Insert NullLiteral(806) into InfixExpression: ==(807) at 1", "Insert ReturnStatement(809) into Block(810) at 0", "Insert SimpleName: isOn(812) into MethodInvocation(814) at 0", "Insert SimpleName: MANUAL_AUTHORITY_VALIDATION(813) into MethodInvocation(814) at 1", "Insert IfStatement(824) into Block(847) at 0", "Insert ForStatement(846) into Block(847) at 1", "Insert MethodInvocation(855) into VariableDeclarationFragment(856) at 1", "Insert MethodInvocation(860) into PrefixExpression: !(861) at 0", "Insert ReturnStatement(863) into Block(864) at 0", "Insert SimpleName: String(866) into SimpleType: String(867) at 0", "Insert SimpleName: hostLocation(868) into VariableDeclarationFragment(873) at 0", "Insert MethodInvocation(872) into VariableDeclarationFragment(873) at 1", "Insert SimpleName: DomainValidator(875) into SimpleType: DomainValidator(876) at 0", "Insert SimpleName: domainValidator(877) into VariableDeclarationFragment(881) at 0", "Insert MethodInvocation(880) into VariableDeclarationFragment(881) at 1", "Insert MethodInvocation(886) into PrefixExpression: !(887) at 0", "Insert VariableDeclarationStatement(895) into Block(905) at 0", "Insert IfStatement(904) into Block(905) at 1", "Insert SimpleName: String(907) into SimpleType: String(908) at 0", "Insert SimpleName: port(909) into VariableDeclarationFragment(914) at 0", "Insert MethodInvocation(913) into VariableDeclarationFragment(914) at 1", "Insert SimpleName: port(916) into InfixExpression: !=(918) at 0", "Insert NullLiteral(917) into InfixExpression: !=(918) at 1", "Insert IfStatement(929) into Block(930) at 0", "Insert SimpleName: String(932) into SimpleType: String(933) at 0", "Insert SimpleName: extra(934) into VariableDeclarationFragment(939) at 0", "Insert MethodInvocation(938) into VariableDeclarationFragment(939) at 1", "Insert InfixExpression: !=(943) into InfixExpression: &&(951) at 0", "Insert InfixExpression: >(950) into InfixExpression: &&(951) at 1", "Insert ReturnStatement(953) into Block(954) at 0", "Insert ParenthesizedExpression(1190) into InfixExpression: >(1192) at 0", "Insert NumberLiteral: 0(1191) into InfixExpression: >(1192) at 1", "Insert ParenthesizedExpression(1216) into InfixExpression: ==(1218) at 0", "Insert NumberLiteral: 0(1217) into InfixExpression: ==(1218) at 1", "Insert BooleanLiteral: false(808) into ReturnStatement(809) at 0", "Insert InfixExpression: ==(817) into IfStatement(824) at 0", "Insert Block(823) into IfStatement(824) at 1", "Insert VariableDeclarationExpression(829) into ForStatement(846) at 0", "Insert InfixExpression: <(832) into ForStatement(846) at 1", "Insert PostfixExpression: ++(834) into ForStatement(846) at 2", "Insert Block(845) into ForStatement(846) at 3", "Insert SimpleName: AUTHORITY_PATTERN(852) into MethodInvocation(855) at 0", "Insert SimpleName: matcher(853) into MethodInvocation(855) at 1", "Insert SimpleName: authority(854) into MethodInvocation(855) at 2", "Insert SimpleName: matches(859) into MethodInvocation(860) at 1", "Insert BooleanLiteral: false(862) into ReturnStatement(863) at 0", "Insert SimpleName: group(870) into MethodInvocation(872) at 1", "Insert SimpleName: PARSE_AUTHORITY_HOST_IP(871) into MethodInvocation(872) at 2", "Insert SimpleName: DomainValidator(878) into MethodInvocation(880) at 0", "Insert SimpleName: getInstance(879) into MethodInvocation(880) at 1", "Insert SimpleName: domainValidator(883) into MethodInvocation(886) at 0", "Insert SimpleName: isValid(884) into MethodInvocation(886) at 1", "Insert SimpleName: hostLocation(885) into MethodInvocation(886) at 2", "Insert SimpleType: InetAddressValidator(889) into VariableDeclarationStatement(895) at 0", "Insert VariableDeclarationFragment(894) into VariableDeclarationStatement(895) at 1", "Insert PrefixExpression: !(900) into IfStatement(904) at 0", "Insert Block(903) into IfStatement(904) at 1", "Insert SimpleName: group(911) into MethodInvocation(913) at 1", "Insert SimpleName: PARSE_AUTHORITY_PORT(912) into MethodInvocation(913) at 2", "Insert PrefixExpression: !(925) into IfStatement(929) at 0", "Insert Block(928) into IfStatement(929) at 1", "Insert SimpleName: group(936) into MethodInvocation(938) at 1", "Insert SimpleName: PARSE_AUTHORITY_EXTRA(937) into MethodInvocation(938) at 2", "Insert SimpleName: extra(941) into InfixExpression: !=(943) at 0", "Insert NullLiteral(942) into InfixExpression: !=(943) at 1", "Insert MethodInvocation(948) into InfixExpression: >(950) at 0", "Insert NumberLiteral: 0(949) into InfixExpression: >(950) at 1", "Insert BooleanLiteral: false(952) into ReturnStatement(953) at 0", "Insert InfixExpression: &(1189) into ParenthesizedExpression(1190) at 0", "Insert InfixExpression: &(1215) into ParenthesizedExpression(1216) at 0", "Insert SimpleName: authorityValidators(815) into InfixExpression: ==(817) at 0", "Insert NullLiteral(816) into InfixExpression: ==(817) at 1", "Insert ThrowStatement(822) into Block(823) at 0", "Insert PrimitiveType: int(825) into VariableDeclarationExpression(829) at 0", "Insert VariableDeclarationFragment(828) into VariableDeclarationExpression(829) at 1", "Insert SimpleName: i(830) into InfixExpression: <(832) at 0", "Insert QualifiedName: authorityValidators.length(831) into InfixExpression: <(832) at 1", "Insert SimpleName: i(833) into PostfixExpression: ++(834) at 0", "Insert IfStatement(844) into Block(845) at 0", "Insert SimpleName: InetAddressValidator(888) into SimpleType: InetAddressValidator(889) at 0", "Insert SimpleName: inetAddressValidator(890) into VariableDeclarationFragment(894) at 0", "Insert MethodInvocation(893) into VariableDeclarationFragment(894) at 1", "Insert MethodInvocation(899) into PrefixExpression: !(900) at 0", "Insert ReturnStatement(902) into Block(903) at 0", "Insert MethodInvocation(924) into PrefixExpression: !(925) at 0", "Insert ReturnStatement(927) into Block(928) at 0", "Insert MethodInvocation(946) into MethodInvocation(948) at 0", "Insert SimpleName: length(947) into MethodInvocation(948) at 1", "Move FieldAccess(967) into InfixExpression: &(1189) at 0", "Insert SimpleName: flag(1188) into InfixExpression: &(1189) at 1", "Move FieldAccess(863) into InfixExpression: &(1215) at 0", "Insert SimpleName: flag(1214) into InfixExpression: &(1215) at 1", "Insert ClassInstanceCreation(821) into ThrowStatement(822) at 0", "Insert SimpleName: i(826) into VariableDeclarationFragment(828) at 0", "Insert NumberLiteral: 0(827) into VariableDeclarationFragment(828) at 1", "Insert MethodInvocation(840) into IfStatement(844) at 0", "Insert Block(843) into IfStatement(844) at 1", "Insert SimpleName: InetAddressValidator(891) into MethodInvocation(893) at 0", "Insert SimpleName: getInstance(892) into MethodInvocation(893) at 1", "Insert SimpleName: inetAddressValidator(896) into MethodInvocation(899) at 0", "Insert SimpleName: isValid(897) into MethodInvocation(899) at 1", "Insert SimpleName: hostLocation(898) into MethodInvocation(899) at 2", "Insert BooleanLiteral: false(901) into ReturnStatement(902) at 0", "Insert MethodInvocation(922) into MethodInvocation(924) at 0", "Insert SimpleName: matches(923) into MethodInvocation(924) at 1", "Insert BooleanLiteral: false(926) into ReturnStatement(927) at 0", "Insert SimpleName: extra(944) into MethodInvocation(946) at 0", "Insert SimpleName: trim(945) into MethodInvocation(946) at 1", "Insert SimpleType: IllegalStateException(819) into ClassInstanceCreation(821) at 0", "Insert StringLiteral: \"manual authority validation enabled, but no authority validators specified\"(820) into ClassInstanceCreation(821) at 1", "Insert ArrayAccess(837) into MethodInvocation(840) at 0", "Insert SimpleName: isValid(838) into MethodInvocation(840) at 1", "Insert SimpleName: authority(839) into MethodInvocation(840) at 2", "Insert ReturnStatement(842) into Block(843) at 0", "Insert SimpleName: PORT_PATTERN(919) into MethodInvocation(922) at 0", "Insert SimpleName: matcher(920) into MethodInvocation(922) at 1", "Insert SimpleName: port(921) into MethodInvocation(922) at 2", "Insert SimpleName: IllegalStateException(818) into SimpleType: IllegalStateException(819) at 0", "Insert SimpleName: authorityValidators(835) into ArrayAccess(837) at 0", "Insert SimpleName: i(836) into ArrayAccess(837) at 1", "Insert BooleanLiteral: true(841) into ReturnStatement(842) at 0", "Delete QualifiedName: org.apache.commons.validator.util.Flags(2)", "Delete ImportDeclaration(3)", "Delete SimpleName: Flags(361)", "Delete SimpleType: Flags(362)", "Delete NullLiteral(364)", "Delete NumberLiteral: 0(462)", "Delete SimpleName: Flags(581)", "Delete SimpleType: Flags(582)", "Delete SimpleName: options(583)", "Delete ClassInstanceCreation(584)", "Delete ThisExpression(587)", "Delete SimpleName: options(588)", "Delete FieldAccess(589)", "Delete ThisExpression(607)", "Delete SimpleName: options(608)", "Delete FieldAccess(609)", "Delete ThisExpression(779)", "Delete SimpleName: options(780)", "Delete FieldAccess(781)", "Delete Block(818)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}