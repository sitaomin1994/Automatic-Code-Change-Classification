{"application": "google-sagetv", "csha": "b40090fb56a95f1a08e85933555c9a5ae06a5129", "files": [{"SDRipper_cluster": {"actions": [{"root": "INS ForStatement to Block at 4", "operations": ["INS SimpleType: Integer to ParameterizedType: Iterator<Integer> at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 0", "INS SimpleName: stationID to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ForStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to ForStatement at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ForStatement to Block at 4", "INS ParameterizedType: Iterator<Integer> to VariableDeclarationExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: iterator to VariableDeclarationFragment at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Integer> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 5"]}, {"root": "UPDATE from int to long", "operations": ["UPD PrimitiveType: int from int to long"]}, {"root": "UPDATE from lookupAirings to size", "operations": ["UPD SimpleName: lookupAirings from lookupAirings to size"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from i to currTime", "operations": ["UPD SimpleName: i from i to currTime"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Sage to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: time to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS SimpleName: size to InfixExpression: != at 1", "operations": ["INS SimpleName: size to InfixExpression: != at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Integer to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: Airing to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: Airing to SimpleType: Airing at 0", "INS SimpleType: Airing to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS ArrayAccess to MethodInvocation at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: isNoShow to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS InfixExpression: || to InfixExpression: || at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: wiz to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: || at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from latestAirings to airings", "operations": ["UPD SimpleName: latestAirings from latestAirings to airings", "UPD SimpleName: i from i to airings", "UPD SimpleName: latestAirings from latestAirings to airings"]}, {"root": "UPDATE from getLatestTvAiringTime to getAirings", "operations": ["UPD SimpleName: getLatestTvAiringTime from getLatestTvAiringTime to getAirings"]}, {"root": "UPDATE from lookupAirings to stationID", "operations": ["UPD SimpleName: lookupAirings from lookupAirings to stationID"]}, {"root": "INS SimpleName: currTime to MethodInvocation at 3", "operations": ["INS SimpleName: currTime to MethodInvocation at 3"]}, {"root": "INS InfixExpression: + to MethodInvocation at 4", "operations": ["INS NumberLiteral: 1 to InfixExpression: + at 1", "INS SimpleName: currTime to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 4"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 5", "operations": ["INS BooleanLiteral: true to MethodInvocation at 5"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV NullLiteral to InfixExpression: == at 1", "MOV SimpleName: latestAirings to InfixExpression: == at 0"]}, {"root": "UPDATE from latestAirings.length to airings.length", "operations": ["UPD QualifiedName: latestAirings.length from latestAirings.length to airings.length"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV QualifiedName: latestAirings.length to InfixExpression: == at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV SimpleName: i to ArrayAccess at 0"]}, {"root": "UPDATE from returnValue to iterator", "operations": ["UPD SimpleName: returnValue from returnValue to iterator"]}, {"root": "UPDATE from \"SDEPG Removed hashes for station \" to \"SDEPG Removing hashes for station \"", "operations": ["UPD StringLiteral: \"SDEPG Removed hashes for station \" from \"SDEPG Removed hashes for station \" to \"SDEPG Removing hashes for station \""]}, {"root": "INS SimpleName: stationID to InfixExpression: + at 1", "operations": ["INS SimpleName: stationID to InfixExpression: + at 1"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 3", "operations": ["INS BooleanLiteral: true to MethodInvocation at 3"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 3", "operations": ["INS BooleanLiteral: false to MethodInvocation at 3"]}, {"root": "DEL Dimension", "operations": ["DEL Dimension"]}, {"root": "DEL ArrayCreation", "operations": ["DEL ArrayType: int[]", "DEL PrimitiveType: int", "DEL Dimension", "DEL ArrayCreation"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: i", "DEL SimpleName: lookupAirings"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: i", "DEL SimpleName: lookupAirings", "DEL ArrayAccess"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL Block", "operations": ["DEL Assignment: =", "DEL PrefixExpression: -", "DEL PostfixExpression: ++", "DEL SimpleName: latestAirings", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL SimpleName: i", "DEL Block", "DEL IfStatement", "DEL InfixExpression: ==", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL Block", "DEL ArrayAccess", "DEL ForStatement", "DEL NumberLiteral: 1"]}, {"root": "DEL QualifiedName: lookupAirings.length", "operations": ["DEL QualifiedName: lookupAirings.length"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL Block", "DEL ExpressionStatement", "DEL SimpleName: key", "DEL SimpleName: key", "DEL ArrayAccess", "DEL SingleVariableDeclaration", "DEL PostfixExpression: ++", "DEL EnhancedForStatement", "DEL SimpleName: i", "DEL Assignment: =", "DEL SimpleName: lookupAirings"]}]}}, {"SDRipper_diff": {"operations": ["Insert ForStatement(8541) into Block(8555) at 4", "Move IfStatement(8547) into Block(8555) at 5", "Update PrimitiveType: int(8466) to long", "Insert VariableDeclarationExpression(8482) into ForStatement(8541) at 0", "Insert MethodInvocation(8485) into ForStatement(8541) at 1", "Insert Block(8540) into ForStatement(8541) at 2", "Update SimpleName: lookupAirings(8455) to size", "Move MethodInvocation(8462) into VariableDeclarationFragment(8461) at 1", "Update SimpleName: i(8467) to currTime", "Insert MethodInvocation(8467) into VariableDeclarationFragment(8468) at 1", "Insert ParameterizedType: Iterator<Integer>(8474) into VariableDeclarationExpression(8482) at 0", "Insert VariableDeclarationFragment(8481) into VariableDeclarationExpression(8482) at 1", "Insert SimpleName: iterator(8483) into MethodInvocation(8485) at 0", "Insert SimpleName: hasNext(8484) into MethodInvocation(8485) at 1", "Insert VariableDeclarationStatement(8493) into Block(8540) at 0", "Move VariableDeclarationStatement(8497) into Block(8540) at 1", "Move IfStatement(8549) into Block(8540) at 2", "Insert SimpleName: size(8545) into InfixExpression: !=(8546) at 1", "Insert SimpleName: Sage(8465) into MethodInvocation(8467) at 0", "Insert SimpleName: time(8466) into MethodInvocation(8467) at 1", "Insert SimpleType: Iterator(8471) into ParameterizedType: Iterator<Integer>(8474) at 0", "Insert SimpleType: Integer(8473) into ParameterizedType: Iterator<Integer>(8474) at 1", "Insert SimpleName: iterator(8475) into VariableDeclarationFragment(8481) at 0", "Insert MethodInvocation(8480) into VariableDeclarationFragment(8481) at 1", "Move SimpleType: Integer(8472) into VariableDeclarationStatement(8493) at 0", "Insert VariableDeclarationFragment(8492) into VariableDeclarationStatement(8493) at 1", "Insert SimpleType: Airing(8495) into VariableDeclarationStatement(8510) at 0", "Insert InfixExpression: ||(8524) into IfStatement(8539) at 0", "Move Block(8533) into IfStatement(8539) at 1", "Insert SimpleName: Iterator(8470) into SimpleType: Iterator(8471) at 0", "Insert SimpleName: Integer(8472) into SimpleType: Integer(8473) at 0", "Move MethodInvocation(8477) into MethodInvocation(8480) at 0", "Insert SimpleName: iterator(8479) into MethodInvocation(8480) at 1", "Insert SimpleName: stationID(8488) into VariableDeclarationFragment(8492) at 0", "Insert MethodInvocation(8491) into VariableDeclarationFragment(8492) at 1", "Insert SimpleName: Airing(8494) into SimpleType: Airing(8495) at 0", "Update SimpleName: latestAirings(8488) to airings", "Insert InfixExpression: ||(8517) into InfixExpression: ||(8524) at 0", "Insert MethodInvocation(8523) into InfixExpression: ||(8524) at 1", "Insert SimpleName: iterator(8489) into MethodInvocation(8491) at 0", "Insert SimpleName: next(8490) into MethodInvocation(8491) at 1", "Update SimpleName: getLatestTvAiringTime(8493) to getAirings", "Update SimpleName: lookupAirings(8494) to stationID", "Insert SimpleName: currTime(8503) into MethodInvocation(8508) at 3", "Insert InfixExpression: +(8506) into MethodInvocation(8508) at 4", "Insert BooleanLiteral: true(8507) into MethodInvocation(8508) at 5", "Insert InfixExpression: ==(8513) into InfixExpression: ||(8517) at 0", "Insert InfixExpression: ==(8516) into InfixExpression: ||(8517) at 1", "Insert SimpleName: wiz(8518) into MethodInvocation(8523) at 0", "Insert SimpleName: isNoShow(8519) into MethodInvocation(8523) at 1", "Insert ArrayAccess(8522) into MethodInvocation(8523) at 2", "Insert SimpleName: currTime(8504) into InfixExpression: +(8506) at 0", "Insert NumberLiteral: 1(8505) into InfixExpression: +(8506) at 1", "Update SimpleName: latestAirings(8498) to airings", "Move SimpleName: latestAirings(8498) into InfixExpression: ==(8513) at 0", "Move NullLiteral(8499) into InfixExpression: ==(8513) at 1", "Update QualifiedName: latestAirings.length(8505) to airings.length", "Move QualifiedName: latestAirings.length(8505) into InfixExpression: ==(8516) at 0", "Insert NumberLiteral: 0(8515) into InfixExpression: ==(8516) at 1", "Update SimpleName: i(8510) to airings", "Move SimpleName: i(8510) into ArrayAccess(8522) at 0", "Insert NumberLiteral: 0(8521) into ArrayAccess(8522) at 1", "Update SimpleName: returnValue(8526) to iterator", "Update StringLiteral: \"SDEPG Removed hashes for station \"(8518) to \"SDEPG Removing hashes for station \"", "Insert SimpleName: stationID(8529) into InfixExpression: +(8530) at 1", "Insert BooleanLiteral: true(6788) into MethodInvocation(6789) at 3", "Insert BooleanLiteral: false(5385) into MethodInvocation(5386) at 3", "Delete Dimension(8456)", "Delete PrimitiveType: int(8457)", "Delete Dimension(8458)", "Delete ArrayType: int[](8459)", "Delete ArrayCreation(8463)", "Delete NumberLiteral: 0(8468)", "Delete PrimitiveType: long(8487)", "Delete SimpleName: lookupAirings(8519)", "Delete SimpleName: i(8520)", "Delete ArrayAccess(8521)", "Delete SimpleName: lookupAirings(8528)", "Delete SimpleName: i(8529)", "Delete ArrayAccess(8530)", "Delete InfixExpression: !=(8500)", "Delete SimpleName: i(8501)", "Delete NumberLiteral: 0(8502)", "Delete Assignment: =(8503)", "Delete SimpleName: i(8504)", "Delete InfixExpression: <(8506)", "Delete SimpleName: i(8507)", "Delete PostfixExpression: ++(8508)", "Delete SimpleName: latestAirings(8509)", "Delete ArrayAccess(8511)", "Delete NumberLiteral: 1(8512)", "Delete PrefixExpression: -(8513)", "Delete InfixExpression: ==(8514)", "Delete IfStatement(8534)", "Delete Block(8535)", "Delete ForStatement(8536)", "Delete Block(8548)", "Delete QualifiedName: lookupAirings.length(8540)", "Delete SimpleName: key(8473)", "Delete SingleVariableDeclaration(8474)", "Delete SimpleName: lookupAirings(8478)", "Delete SimpleName: i(8479)", "Delete PostfixExpression: ++(8480)", "Delete ArrayAccess(8481)", "Delete SimpleName: key(8482)", "Delete Assignment: =(8483)", "Delete ExpressionStatement(8484)", "Delete Block(8485)", "Delete EnhancedForStatement(8486)"]}}, {"SDDescriptions_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: forceDesiredLanguage to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement:  If the desired language is not available, a blank English to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: forceDesiredLanguage to TagElement: @param at 0"]}, {"root": "INS ConditionalExpression to ReturnStatement at 0", "operations": ["INS SimpleName: forceDesiredLanguage to ConditionalExpression at 0", "INS SimpleName: BLANK_DESCRIPTION to ConditionalExpression at 1", "INS ConditionalExpression to ReturnStatement at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV ArrayAccess to ConditionalExpression at 2"]}, {"root": "INS ConditionalExpression to ReturnStatement at 0", "operations": ["INS SimpleName: forceDesiredLanguage to ConditionalExpression at 0", "INS SimpleName: BLANK_DESCRIPTION to ConditionalExpression at 1", "INS ConditionalExpression to ReturnStatement at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV ArrayAccess to ConditionalExpression at 2"]}]}}, {"SDDescriptions_diff": {"operations": ["Insert SingleVariableDeclaration(107) into MethodDeclaration(193) at 5", "Insert TagElement: @param(93) into Javadoc(96) at 2", "Insert PrimitiveType: boolean(105) into SingleVariableDeclaration(107) at 0", "Insert SimpleName: forceDesiredLanguage(106) into SingleVariableDeclaration(107) at 1", "Insert SimpleName: forceDesiredLanguage(91) into TagElement: @param(93) at 0", "Insert TextElement:  If the desired language is not available, a blank English(92) into TagElement: @param(93) at 1", "Insert ConditionalExpression(190) into ReturnStatement(191) at 0", "Insert SimpleName: forceDesiredLanguage(185) into ConditionalExpression(190) at 0", "Insert SimpleName: BLANK_DESCRIPTION(186) into ConditionalExpression(190) at 1", "Move ArrayAccess(178) into ConditionalExpression(190) at 2", "Insert ConditionalExpression(144) into ReturnStatement(145) at 0", "Insert SimpleName: forceDesiredLanguage(139) into ConditionalExpression(144) at 0", "Insert SimpleName: BLANK_DESCRIPTION(140) into ConditionalExpression(144) at 1", "Move ArrayAccess(135) into ConditionalExpression(144) at 2"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}