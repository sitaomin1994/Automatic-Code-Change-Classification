{"application": "Netflix-SimianArmy", "csha": "cdf4169ed873c156213b82f751664730f1d34cd6", "files": [{"ChaosType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.netflix.simianarmy.MonkeyConfiguration to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 4", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: config to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS TextElement: Configuration for this chaos type to TagElement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: MonkeyConfiguration to FieldDeclaration at 3", "INS SimpleName: MonkeyConfiguration to SimpleType: MonkeyConfiguration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: enabled to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TextElement: Is this strategy enabled? to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS SimpleName: getConfigurationPrefix to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS TextElement: Returns the configuration key prefix to use for this strategy. to TagElement at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS MethodInvocation to InfixExpression: + at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \".\" to InfixExpression: + at 2", "INS SimpleName: key to MethodInvocation at 0", "INS TagElement to Javadoc at 0", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"simianarmy.chaos.\" to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: MonkeyConfiguration to SimpleType: MonkeyConfiguration at 0", "INS SimpleType: MonkeyConfiguration to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: config to SingleVariableDeclaration at 1"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TextElement: Configuration to use to TagElement: @param at 1", "INS SimpleName: config to TagElement: @param at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: config to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: getBoolOrElse to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS StringLiteral: \"enabled\" to InfixExpression: + at 1", "INS FieldAccess to Assignment: = at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: config to MethodInvocation at 0", "INS SimpleName: getConfigurationPrefix to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: enabled to FieldAccess at 1", "INS MethodInvocation to InfixExpression: + at 0"]}, {"root": "UPDATE from For example, if the strategy was to detach all the EBS volumes, that only to For example, if the strategy was to detach all the EBS volumes, that only makes sense if there are EBS volumes to", "operations": ["UPD TextElement: For example, if the strategy was to detach all the EBS volumes, that only from For example, if the strategy was to detach all the EBS volumes, that only to For example, if the strategy was to detach all the EBS volumes, that only makes sense if there are EBS volumes to"]}, {"root": "UPDATE from makes sense if there are EBS volumes to detach. to detach.", "operations": ["UPD TextElement: makes sense if there are EBS volumes to detach. from makes sense if there are EBS volumes to detach. to detach."]}, {"root": "INS SimpleName: enabled to ReturnStatement at 0", "operations": ["INS SimpleName: enabled to ReturnStatement at 0"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}]}}, {"ChaosType_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(198) at 3", "Insert QualifiedName: com.netflix.simianarmy.MonkeyConfiguration(6) into ImportDeclaration(7) at 0", "Insert FieldDeclaration(23) into TypeDeclaration: class(197) at 4", "Insert FieldDeclaration(42) into TypeDeclaration: class(197) at 6", "Insert MethodDeclaration(104) into TypeDeclaration: class(197) at 8", "Insert Javadoc(16) into FieldDeclaration(23) at 0", "Insert Modifier: private(17) into FieldDeclaration(23) at 1", "Insert Modifier: final(18) into FieldDeclaration(23) at 2", "Insert SimpleType: MonkeyConfiguration(20) into FieldDeclaration(23) at 3", "Insert VariableDeclarationFragment(22) into FieldDeclaration(23) at 4", "Insert Javadoc(36) into FieldDeclaration(42) at 0", "Insert Modifier: private(37) into FieldDeclaration(42) at 1", "Insert Modifier: final(38) into FieldDeclaration(42) at 2", "Insert PrimitiveType: boolean(39) into FieldDeclaration(42) at 3", "Insert VariableDeclarationFragment(41) into FieldDeclaration(42) at 4", "Insert SingleVariableDeclaration(57) into MethodDeclaration(88) at 3", "Insert Javadoc(91) into MethodDeclaration(104) at 0", "Insert Modifier: protected(92) into MethodDeclaration(104) at 1", "Insert SimpleType: String(94) into MethodDeclaration(104) at 2", "Insert SimpleName: getConfigurationPrefix(95) into MethodDeclaration(104) at 3", "Insert Block(103) into MethodDeclaration(104) at 4", "Insert TagElement(15) into Javadoc(16) at 0", "Insert SimpleName: MonkeyConfiguration(19) into SimpleType: MonkeyConfiguration(20) at 0", "Insert SimpleName: config(21) into VariableDeclarationFragment(22) at 0", "Insert TagElement(35) into Javadoc(36) at 0", "Insert SimpleName: enabled(40) into VariableDeclarationFragment(41) at 0", "Insert TagElement: @param(47) into Javadoc(51) at 1", "Insert SimpleType: MonkeyConfiguration(55) into SingleVariableDeclaration(57) at 0", "Insert SimpleName: config(56) into SingleVariableDeclaration(57) at 1", "Insert ExpressionStatement(67) into Block(87) at 0", "Insert ExpressionStatement(86) into Block(87) at 2", "Insert TagElement(90) into Javadoc(91) at 0", "Insert SimpleName: String(93) into SimpleType: String(94) at 0", "Insert ReturnStatement(102) into Block(103) at 0", "Insert TextElement: Configuration for this chaos type(14) into TagElement(15) at 0", "Insert TextElement: Is this strategy enabled?(34) into TagElement(35) at 0", "Insert SimpleName: config(45) into TagElement: @param(47) at 0", "Insert TextElement: Configuration to use(46) into TagElement: @param(47) at 1", "Insert SimpleName: MonkeyConfiguration(54) into SimpleType: MonkeyConfiguration(55) at 0", "Insert Assignment: =(66) into ExpressionStatement(67) at 0", "Insert Assignment: =(85) into ExpressionStatement(86) at 0", "Insert TextElement: Returns the configuration key prefix to use for this strategy.(89) into TagElement(90) at 0", "Insert InfixExpression: +(101) into ReturnStatement(102) at 0", "Update TextElement: For example, if the strategy was to detach all the EBS volumes, that only(54) to For example, if the strategy was to detach all the EBS volumes, that only makes sense if there are EBS volumes to", "Update TextElement: makes sense if there are EBS volumes to detach.(55) to detach.", "Insert SimpleName: enabled(132) into ReturnStatement(133) at 0", "Insert FieldAccess(64) into Assignment: =(66) at 0", "Insert SimpleName: config(65) into Assignment: =(66) at 1", "Insert FieldAccess(76) into Assignment: =(85) at 0", "Insert MethodInvocation(84) into Assignment: =(85) at 1", "Insert StringLiteral: \"simianarmy.chaos.\"(96) into InfixExpression: +(101) at 0", "Insert MethodInvocation(99) into InfixExpression: +(101) at 1", "Insert StringLiteral: \".\"(100) into InfixExpression: +(101) at 2", "Insert ThisExpression(62) into FieldAccess(64) at 0", "Insert SimpleName: config(63) into FieldAccess(64) at 1", "Insert ThisExpression(74) into FieldAccess(76) at 0", "Insert SimpleName: enabled(75) into FieldAccess(76) at 1", "Insert SimpleName: config(77) into MethodInvocation(84) at 0", "Insert SimpleName: getBoolOrElse(78) into MethodInvocation(84) at 1", "Insert InfixExpression: +(82) into MethodInvocation(84) at 2", "Insert BooleanLiteral: false(83) into MethodInvocation(84) at 3", "Insert SimpleName: key(97) into MethodInvocation(99) at 0", "Insert SimpleName: toLowerCase(98) into MethodInvocation(99) at 1", "Insert MethodInvocation(80) into InfixExpression: +(82) at 0", "Insert StringLiteral: \"enabled\"(81) into InfixExpression: +(82) at 1", "Insert SimpleName: getConfigurationPrefix(79) into MethodInvocation(80) at 0", "Delete BooleanLiteral: true(69)"]}}, {"ShutdownInstanceChaosType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.netflix.simianarmy.MonkeyConfiguration to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: Configuration to use to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: MonkeyConfiguration to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS SimpleName: ShutdownInstanceChaosType to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: config to TagElement: @param at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0"]}, {"root": "UPDATE from Singleton instance of this chaos type. to Constructor.", "operations": ["UPD TextElement: Singleton instance of this chaos type. from Singleton instance of this chaos type. to Constructor."]}, {"root": "UPDATE from ShutdownInstanceChaosType to MonkeyConfiguration", "operations": ["UPD SimpleName: ShutdownInstanceChaosType from ShutdownInstanceChaosType to MonkeyConfiguration"]}, {"root": "MOVE from SimpleType: MonkeyConfiguration", "operations": ["MOV SimpleName: ShutdownInstanceChaosType to SimpleType: MonkeyConfiguration at 0"]}, {"root": "INS SimpleName: config to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: config to SuperConstructorInvocation at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL ClassInstanceCreation", "DEL Modifier: static", "DEL SimpleType: ChaosType", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: ShutdownInstanceChaosType", "DEL SimpleName: INSTANCE", "DEL Modifier: public", "DEL SimpleName: ChaosType", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: ShutdownInstanceChaosType", "DEL Javadoc", "DEL TextElement: (Protected) singleton constructor.", "DEL Modifier: protected", "DEL TagElement"]}]}}, {"ShutdownInstanceChaosType_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(55) at 2", "Insert QualifiedName: com.netflix.simianarmy.MonkeyConfiguration(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(30) into TypeDeclaration: class(54) at 4", "Insert Javadoc(19) into MethodDeclaration(30) at 0", "Insert Modifier: public(20) into MethodDeclaration(30) at 1", "Insert SimpleName: ShutdownInstanceChaosType(21) into MethodDeclaration(30) at 2", "Insert SingleVariableDeclaration(25) into MethodDeclaration(30) at 3", "Move Block(33) into MethodDeclaration(30) at 4", "Move TagElement(13) into Javadoc(19) at 0", "Insert TagElement: @param(18) into Javadoc(19) at 1", "Insert SimpleType: MonkeyConfiguration(23) into SingleVariableDeclaration(25) at 0", "Insert SimpleName: config(24) into SingleVariableDeclaration(25) at 1", "Update TextElement: Singleton instance of this chaos type.(12) to Constructor.", "Insert SimpleName: config(16) into TagElement: @param(18) at 0", "Insert TextElement: Configuration to use(17) into TagElement: @param(18) at 1", "Update SimpleName: ShutdownInstanceChaosType(21) to MonkeyConfiguration", "Move SimpleName: ShutdownInstanceChaosType(21) into SimpleType: MonkeyConfiguration(23) at 0", "Insert SimpleName: config(26) into SuperConstructorInvocation(28) at 0", "Delete Javadoc(14)", "Delete Modifier: public(15)", "Delete Modifier: static(16)", "Delete Modifier: final(17)", "Delete SimpleName: ChaosType(18)", "Delete SimpleType: ChaosType(19)", "Delete SimpleName: INSTANCE(20)", "Delete SimpleType: ShutdownInstanceChaosType(22)", "Delete ClassInstanceCreation(23)", "Delete VariableDeclarationFragment(24)", "Delete FieldDeclaration(25)", "Delete TextElement: (Protected) singleton constructor.(26)", "Delete TagElement(27)", "Delete Javadoc(28)", "Delete Modifier: protected(29)", "Delete SimpleName: ShutdownInstanceChaosType(30)", "Delete MethodDeclaration(34)"]}}, {"BasicChaosMonkey_cluster": {"actions": [{"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS NullLiteral to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: cfg to ClassInstanceCreation at 1", "INS SimpleName: ShutdownInstanceChaosType to SimpleType: ShutdownInstanceChaosType at 0", "INS SimpleType: ShutdownInstanceChaosType to ClassInstanceCreation at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: inst to MethodInvocation at 3", "INS IfStatement to Block at 1", "INS ContinueStatement to Block at 1", "INS StringLiteral: \"No chaos type was applicable to the instance: {}\" to MethodInvocation at 2", "INS SimpleName: chaosType to InfixExpression: == at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOGGER to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "DEL QualifiedName: ShutdownInstanceChaosType.INSTANCE", "operations": ["DEL QualifiedName: ShutdownInstanceChaosType.INSTANCE"]}, {"root": "DEL AssertStatement", "operations": ["DEL PrefixExpression: !", "DEL AssertStatement"]}]}}, {"BasicChaosMonkey_diff": {"operations": ["Insert IfStatement(421) into Block(437) at 3", "Move MethodInvocation(402) into IfStatement(421) at 0", "Insert Block(420) into IfStatement(421) at 1", "Insert ClassInstanceCreation(214) into MethodInvocation(215) at 2", "Insert ReturnStatement(419) into Block(420) at 0", "Insert SimpleType: ShutdownInstanceChaosType(212) into ClassInstanceCreation(214) at 0", "Insert SimpleName: cfg(213) into ClassInstanceCreation(214) at 1", "Insert NullLiteral(418) into ReturnStatement(419) at 0", "Insert SimpleName: ShutdownInstanceChaosType(211) into SimpleType: ShutdownInstanceChaosType(212) at 0", "Insert IfStatement(350) into Block(357) at 1", "Insert InfixExpression: ==(341) into IfStatement(350) at 0", "Insert Block(349) into IfStatement(350) at 1", "Insert SimpleName: chaosType(339) into InfixExpression: ==(341) at 0", "Insert NullLiteral(340) into InfixExpression: ==(341) at 1", "Insert ExpressionStatement(347) into Block(349) at 0", "Insert ContinueStatement(348) into Block(349) at 1", "Insert MethodInvocation(346) into ExpressionStatement(347) at 0", "Insert SimpleName: LOGGER(342) into MethodInvocation(346) at 0", "Insert SimpleName: warn(343) into MethodInvocation(346) at 1", "Insert StringLiteral: \"No chaos type was applicable to the instance: {}\"(344) into MethodInvocation(346) at 2", "Insert SimpleName: inst(345) into MethodInvocation(346) at 3", "Delete QualifiedName: ShutdownInstanceChaosType.INSTANCE(211)", "Delete PrefixExpression: !(403)", "Delete AssertStatement(404)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}