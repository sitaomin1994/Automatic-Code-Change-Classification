{"application": "apache-phoenix", "csha": "3130fa9919ba937d98853f9be8068a0a8a8a96f5", "files": [{"UpsertSelectIT_cluster": {"actions": [{"root": "INS InfixExpression: + to MethodInvocation at 1", "operations": ["INS NumberLiteral: 1 to InfixExpression: + at 1", "INS SimpleName: ts to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 1"]}, {"root": "DEL SimpleName: ts", "operations": ["DEL SimpleName: ts"]}]}}, {"UpsertSelectIT_diff": {"operations": ["Insert InfixExpression: +(5870) into MethodInvocation(5871) at 1", "Insert SimpleName: ts(5868) into InfixExpression: +(5870) at 0", "Insert NumberLiteral: 1(5869) into InfixExpression: +(5870) at 1", "Delete SimpleName: ts(5868)"]}}, {"CreateTableCompiler_cluster": {"actions": [{"root": "INS InfixExpression: + to ClassInstanceCreation at 3", "operations": ["INS InfixExpression: + to ClassInstanceCreation at 3", "INS NumberLiteral: 1 to InfixExpression: + at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.schema.PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"CreateTableCompiler_diff": {"operations": ["Insert InfixExpression: +(525) into ClassInstanceCreation(526) at 3", "Move MethodInvocation(526) into InfixExpression: +(525) at 0", "Insert NumberLiteral: 1(524) into InfixExpression: +(525) at 1", "Insert PrimitiveType: void(499) into MethodDeclaration(517) at 2", "Insert ExpressionStatement(515) into Block(516) at 0", "Move MethodInvocation(517) into ExpressionStatement(515) at 0", "Delete QualifiedName: org.apache.phoenix.schema.PMetaData(74)", "Delete ImportDeclaration(75)", "Delete SimpleName: PMetaData(501)", "Delete SimpleType: PMetaData(502)", "Delete ReturnStatement(518)"]}}, {"MutationState_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 52", "operations": ["INS ImportDeclaration to CompilationUnit at 52", "INS QualifiedName: org.apache.phoenix.schema.PName to ImportDeclaration at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 62", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleName: result to ReturnStatement at 0", "INS SimpleName: obj to MethodInvocation at 0", "INS SimpleName: result to InfixExpression: * at 1", "INS Block to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: equals to MethodDeclaration at 3", "INS SimpleType: TableInfo to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: prime to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ReturnStatement to IfStatement at 1", "INS SimpleType: PName to FieldDeclaration at 3", "INS SimpleName: getClass to MethodInvocation at 1", "INS NumberLiteral: 1231 to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS ExpressionStatement to Block at 3", "INS NullLiteral to InfixExpression: == at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS VariableDeclarationStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Assignment: = to ExpressionStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS InfixExpression: + to Assignment: = at 1", "INS ReturnStatement to Block at 6", "INS Modifier: private to FieldDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodInvocation to InfixExpression: != at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 62", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ReturnStatement to Block at 4", "INS Modifier: final to FieldDeclaration at 2", "INS InfixExpression: == to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: TableRef to MethodDeclaration at 1", "INS ExpressionStatement to Block at 3", "INS ReturnStatement to IfStatement at 1", "INS Modifier: final to FieldDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: getOrigTableRef to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: Nonnull to MarkerAnnotation at 0", "INS SimpleName: isDataTable to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: obj to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: hTableName to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: isDataTable to MethodDeclaration at 2", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: origTableRef to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: origTableRef to SingleVariableDeclaration at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to MethodDeclaration at 4", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: isDataTable to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS IfStatement to Block at 5", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleType: TableInfo to CastExpression at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: hTableName to VariableDeclarationFragment at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: hTableName to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: isDataTable to InfixExpression: != at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS NumberLiteral: 31 to VariableDeclarationFragment at 1", "INS SimpleName: TableInfo to TypeDeclaration: class at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: hTableName to ReturnStatement at 0", "INS SimpleName: origTableRef to Assignment: = at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: result to Assignment: = at 0", "INS QualifiedName: other.isDataTable to InfixExpression: != at 1", "INS SimpleName: origTableRef to FieldAccess at 1", "INS SimpleName: hTableName to FieldAccess at 1", "INS SimpleName: TableInfo to MethodDeclaration at 1", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS ThisExpression to InfixExpression: == at 0", "INS SimpleType: TableRef to FieldDeclaration at 3", "INS ExpressionStatement to Block at 5", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: hTableName to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS SimpleName: isDataTable to Assignment: = at 1", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: hTableName to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: PName to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS MarkerAnnotation to FieldDeclaration at 0", "INS SimpleName: isDataTable to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS IfStatement to Block at 1", "INS SimpleName: prime to InfixExpression: * at 0", "INS SimpleName: prime to InfixExpression: * at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: result to InfixExpression: * at 1", "INS SimpleName: TableRef to SimpleType: TableRef at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: obj to CastExpression at 1", "INS SimpleType: TableRef to SingleVariableDeclaration at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS IfStatement to Block at 2", "INS SimpleType: PName to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: origTableRef to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS SimpleName: TableRef to SimpleType: TableRef at 0", "INS SimpleName: obj to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: isDataTable to ConditionalExpression at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: obj to InfixExpression: == at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: TableRef to SimpleType: TableRef at 0", "INS NumberLiteral: 1237 to ConditionalExpression at 2", "INS SimpleName: other to VariableDeclarationFragment at 0", "INS ReturnStatement to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: Nonnull to MarkerAnnotation at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS QualifiedName: other.hTableName to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: isDataTable to FieldAccess at 1", "INS IfStatement to Block at 4", "INS Block to MethodDeclaration at 3", "INS SimpleName: hTableName to MethodInvocation at 1", "INS SimpleName: origTableRef to ReturnStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: getHTableName to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: hashCode to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from Iterator<Pair<byte[],List<Mutation>>> to Iterator<Pair<PName,List<Mutation>>>", "operations": ["UPD ParameterizedType: Iterator<Pair<byte[],List<Mutation>>> from Iterator<Pair<byte[],List<Mutation>>> to Iterator<Pair<PName,List<Mutation>>>", "UPD ParameterizedType: Iterator<Pair<byte[],List<Mutation>>> from Iterator<Pair<byte[],List<Mutation>>> to Iterator<Pair<PName,List<Mutation>>>"]}, {"root": "MOVE from TryStatement", "operations": ["MOV VariableDeclarationExpression to TryStatement at 0", "MOV Block to MethodDeclaration at 6"]}, {"root": "UPDATE from Pair<byte[],List<Mutation>> to Pair<PName,List<Mutation>>", "operations": ["UPD ParameterizedType: Pair<byte[],List<Mutation>> from Pair<byte[],List<Mutation>> to Pair<PName,List<Mutation>>", "UPD ParameterizedType: Pair<byte[],List<Mutation>> from Pair<byte[],List<Mutation>> to Pair<PName,List<Mutation>>", "UPD ParameterizedType: Pair<byte[],List<Mutation>> from Pair<byte[],List<Mutation>> to Pair<PName,List<Mutation>>"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV IfStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Map to ParameterizedType: Map<TableInfo,List<Mutation>> at 0", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Map<TableInfo,List<Mutation>> at 2", "INS SimpleType: TableInfo to ParameterizedType: Map<TableInfo,List<Mutation>> at 1", "INS SimpleName: physicalTableMutationMap to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationStatement to Block at 6", "INS ParameterizedType: Map<TableInfo,List<Mutation>> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: Maps to MethodInvocation at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: newLinkedHashMap to MethodInvocation at 1"]}, {"root": "INS TryStatement to Block at 7", "operations": ["INS TryStatement to Block at 7"]}, {"root": "INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "operations": ["INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "INS SimpleName: PName to SimpleType: PName at 0"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV MethodInvocation to WhileStatement at 0", "MOV Block to TryStatement at 1"]}, {"root": "INS ParameterizedType: Iterator<Pair<PName,List<Mutation>>> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: Pair<PName,List<Mutation>> to ParameterizedType: Iterator<Pair<PName,List<Mutation>>> at 1", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Pair<PName,List<Mutation>>> at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS ParameterizedType: Iterator<Pair<PName,List<Mutation>>> to ClassInstanceCreation at 0", "INS SimpleName: PName to SimpleType: PName at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS WhileStatement to Block at 3", "operations": ["INS SimpleName: tableInfo to MethodInvocation at 2", "INS SimpleType: TableInfo to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleName: tableInfo to VariableDeclarationFragment at 0", "INS SimpleName: hTableName to ClassInstanceCreation at 2", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS SimpleName: oldMutationList to InfixExpression: != at 0", "INS MethodInvocation to WhileStatement at 0", "INS SimpleName: mutationList to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS ParameterizedType: Pair<PName,List<Mutation>> to VariableDeclarationStatement at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: tableRef to ClassInstanceCreation at 3", "INS SimpleType: TableInfo to VariableDeclarationStatement at 0", "INS WhileStatement to Block at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to WhileStatement at 1", "INS SimpleName: List to SimpleType: List at 0", "INS Block to WhileStatement at 1", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS VariableDeclarationStatement to Block at 4", "INS IfStatement to Block at 5", "INS SimpleName: oldMutationList to VariableDeclarationFragment at 0", "INS WhileStatement to Block at 7", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS SimpleName: isDataTable to ClassInstanceCreation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleType: TableInfo to ParameterizedType: Entry<TableInfo,List<Mutation>> at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleType: Entry to ParameterizedType: Entry<TableInfo,List<Mutation>> at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS ParameterizedType: Entry<TableInfo,List<Mutation>> to ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>> at 1", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS VariableDeclarationStatement to Block at 4", "INS ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: mutationsIterator to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>> at 0", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Entry<TableInfo,List<Mutation>> at 2"]}, {"root": "INS ParameterizedType: Pair<PName,List<Mutation>> to MethodDeclaration at 2", "operations": ["INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS ParameterizedType: Pair<PName,List<Mutation>> to MethodDeclaration at 2", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS ReturnStatement to Block at 1", "INS ParameterizedType: Pair<PName,List<Mutation>> to VariableDeclarationStatement at 0", "INS ParameterizedType: Pair<PName,List<Mutation>> to ParameterizedType: Iterator<Pair<PName,List<Mutation>>> at 1", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: remove to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: next to MethodDeclaration at 3", "INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleName: mutationIterator to MethodInvocation at 0", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: Iterator to ParameterizedType: Iterator<Pair<PName,List<Mutation>>> at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: Iterator<Pair<PName,List<Mutation>>> to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: mutationIterator to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleName: getSecond to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: pair to MethodInvocation at 0", "INS SimpleName: pair to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: hasNext to MethodDeclaration at 3", "INS SimpleName: next to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getFirst to MethodInvocation at 1", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleName: mutationIterator to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: pair to MethodInvocation at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3", "MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 6"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: TableInfo to VariableDeclarationStatement at 0", "INS SimpleName: tableInfo to VariableDeclarationFragment at 0", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0", "INS SimpleName: pair to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: getBytes to MethodInvocation at 1", "INS SimpleName: htableName to VariableDeclarationFragment at 0", "INS SimpleName: getHTableName to MethodInvocation at 1", "INS SimpleName: tableInfo to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS SimpleName: pair to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: mutationList to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: isImmutableRows to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from tableRef to iterator", "operations": ["UPD SimpleName: tableRef from tableRef to iterator"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableRef to MethodInvocation at 1", "MOV SimpleName: mutations to MethodInvocation at 0", "MOV SimpleName: remove to MethodInvocation at 1"]}, {"root": "UPDATE from Pair<byte[],List<Mutation>> to Entry<TableInfo,List<Mutation>>", "operations": ["UPD ParameterizedType: Pair<byte[],List<Mutation>> from Pair<byte[],List<Mutation>> to Entry<TableInfo,List<Mutation>>"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: mutationsIterator to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: pair to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: next to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from tableRef to mutationsIterator", "operations": ["UPD SimpleName: tableRef from tableRef to mutationsIterator"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableRef to MethodInvocation at 0", "MOV SimpleName: getTable to MethodInvocation at 1"]}, {"root": "UPDATE from getTable to hasNext", "operations": ["UPD SimpleName: getTable from getTable to hasNext"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "UPDATE from mutations to physicalTableMutationMap", "operations": ["UPD SimpleName: mutations from mutations to physicalTableMutationMap", "UPD SimpleName: valuesMap from valuesMap to physicalTableMutationMap"]}, {"root": "UPDATE from remove to entrySet", "operations": ["UPD SimpleName: remove from remove to entrySet"]}, {"root": "UPDATE from Pair to Entry", "operations": ["UPD SimpleName: Pair from Pair to Entry", "UPD SimpleType: Pair from Pair to Entry"]}, {"root": "INS SimpleType: TableInfo to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "operations": ["INS SimpleType: TableInfo to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "INS SimpleName: TableInfo to SimpleType: TableInfo at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: TableRef to SimpleType: TableRef at 0", "INS SimpleType: TableRef to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: tableInfo to MethodInvocation at 0", "INS SimpleName: origTableRef to VariableDeclarationFragment at 0", "INS SimpleName: getOrigTableRef to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: table to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleType: PTable to VariableDeclarationStatement at 0", "INS SimpleName: origTableRef to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS ParameterizedType: Pair<PName,List<Mutation>> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS ParameterizedType: Pair<PName,List<Mutation>> to ClassInstanceCreation at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleType: Pair to ParameterizedType: Pair<PName,List<Mutation>> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS ParameterizedType: List<Mutation> to ParameterizedType: Pair<PName,List<Mutation>> at 2", "INS SimpleType: PName to ParameterizedType: Pair<PName,List<Mutation>> at 1", "INS SimpleName: PName to SimpleType: PName at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: Iterator<Pair<byte[],List<Mutation>>> to ClassInstanceCreation at 0"]}, {"root": "INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "operations": ["INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleType: PName to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from htableName to hTableName", "operations": ["UPD SimpleName: htableName from htableName to hTableName"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 15", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: numMutations to Assignment: -= at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: tableInfo to MethodInvocation at 0", "INS SimpleName: numRows to Assignment: -= at 0", "INS IfStatement to Block at 15", "INS SimpleName: isDataTable to MethodInvocation at 1", "INS Assignment: -= to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS ExpressionStatement to Block at 16", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: mutations to MethodInvocation at 0", "INS SimpleName: origTableRef to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Pair<byte[],List<Mutation>> to MethodDeclaration at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: size to MethodInvocation at 1", "MOV SimpleName: valuesMap to MethodInvocation at 0"]}, {"root": "UPDATE from size to put", "operations": ["UPD SimpleName: size from size to put"]}, {"root": "UPDATE from tableRefIterator to mutationList", "operations": ["UPD SimpleName: tableRefIterator from tableRefIterator to mutationList"]}, {"root": "UPDATE from remove to addAll", "operations": ["UPD SimpleName: remove from remove to addAll"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS SimpleName: oldMutationList to MethodInvocation at 3", "operations": ["INS SimpleName: oldMutationList to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to ConditionalExpression at 0", "operations": ["INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: isDataTable to MethodInvocation at 1", "INS SimpleName: tableInfo to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: isTransactional to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to TryStatement at 0"]}, {"root": "INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1", "operations": ["INS SimpleName: PName to SimpleType: PName at 0", "INS SimpleType: PName to ParameterizedType: Pair<byte[],List<Mutation>> at 1"]}, {"root": "UPDATE from tableRef to origTableRef", "operations": ["UPD SimpleName: tableRef from tableRef to origTableRef", "UPD SimpleName: tableRef from tableRef to origTableRef"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: txTableRefs to MethodInvocation at 0", "INS SimpleName: origTableRef to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: mutationIterator to MethodInvocation at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDataTable to MethodInvocation at 1", "INS SimpleName: tableInfo to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: Pair<byte[],List<Mutation>> to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: isImmutableRows to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: table to MethodInvocation at 0"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL ArrayType: byte[]", "DEL PrimitiveType: byte"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL PrimitiveType: byte", "DEL ArrayType: byte[]", "DEL Dimension"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getBytes"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getBytes", "DEL MethodInvocation"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL ArrayType: byte[]", "DEL PrimitiveType: byte"]}, {"root": "DEL SimpleName: isTransactional", "operations": ["DEL SimpleName: isTransactional"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: tableRef", "DEL SimpleName: isTransactional", "DEL SimpleName: txTableRefs"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL PrimitiveType: byte", "DEL ArrayType: byte[]"]}, {"root": "DEL SimpleName: isDataTable", "operations": ["DEL SimpleName: isDataTable"]}, {"root": "DEL SimpleName: isTransactional", "operations": ["DEL SimpleName: isTransactional"]}, {"root": "DEL SimpleName: isDataTable", "operations": ["DEL SimpleName: isDataTable"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: getType", "DEL ExpressionStatement", "DEL SimpleName: numRows", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: PTableType.INDEX", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: !=", "DEL Assignment: -=", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: sendAll", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement"]}, {"root": "DEL WhileStatement", "operations": ["DEL WhileStatement"]}, {"root": "DEL Block", "operations": ["DEL TryStatement", "DEL Block"]}]}}, {"MutationState_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(6650) at 13", "Insert ImportDeclaration(105) into CompilationUnit(6650) at 52", "Insert QualifiedName: java.util.Map.Entry(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.phoenix.schema.PName(104) into ImportDeclaration(105) at 0", "Insert TypeDeclaration: class(4183) into TypeDeclaration: class(6649) at 62", "Update ParameterizedType: Iterator<Pair<byte[],List<Mutation>>>(2183) to Iterator<Pair<PName,List<Mutation>>>", "Insert Modifier: private(3992) into TypeDeclaration: class(4183) at 0", "Insert Modifier: static(3993) into TypeDeclaration: class(4183) at 1", "Insert SimpleName: TableInfo(3994) into TypeDeclaration: class(4183) at 2", "Insert FieldDeclaration(4000) into TypeDeclaration: class(4183) at 3", "Insert FieldDeclaration(4009) into TypeDeclaration: class(4183) at 4", "Insert FieldDeclaration(4018) into TypeDeclaration: class(4183) at 5", "Insert MethodDeclaration(4060) into TypeDeclaration: class(4183) at 6", "Insert MethodDeclaration(4067) into TypeDeclaration: class(4183) at 7", "Insert MethodDeclaration(4075) into TypeDeclaration: class(4183) at 8", "Insert MethodDeclaration(4083) into TypeDeclaration: class(4183) at 9", "Insert MethodDeclaration(4125) into TypeDeclaration: class(4183) at 10", "Insert MethodDeclaration(4182) into TypeDeclaration: class(4183) at 11", "Move Block(4578) into MethodDeclaration(5002) at 6", "Update ParameterizedType: Pair<byte[],List<Mutation>>(2182) to Pair<PName,List<Mutation>>", "Insert Modifier: private(3995) into FieldDeclaration(4000) at 0", "Insert Modifier: final(3996) into FieldDeclaration(4000) at 1", "Insert PrimitiveType: boolean(3997) into FieldDeclaration(4000) at 2", "Insert VariableDeclarationFragment(3999) into FieldDeclaration(4000) at 3", "Insert MarkerAnnotation(4002) into FieldDeclaration(4009) at 0", "Insert Modifier: private(4003) into FieldDeclaration(4009) at 1", "Insert Modifier: final(4004) into FieldDeclaration(4009) at 2", "Insert SimpleType: PName(4006) into FieldDeclaration(4009) at 3", "Insert VariableDeclarationFragment(4008) into FieldDeclaration(4009) at 4", "Insert MarkerAnnotation(4011) into FieldDeclaration(4018) at 0", "Insert Modifier: private(4012) into FieldDeclaration(4018) at 1", "Insert Modifier: final(4013) into FieldDeclaration(4018) at 2", "Insert SimpleType: TableRef(4015) into FieldDeclaration(4018) at 3", "Insert VariableDeclarationFragment(4017) into FieldDeclaration(4018) at 4", "Insert Modifier: public(4019) into MethodDeclaration(4060) at 0", "Insert SimpleName: TableInfo(4020) into MethodDeclaration(4060) at 1", "Insert SingleVariableDeclaration(4023) into MethodDeclaration(4060) at 2", "Insert SingleVariableDeclaration(4027) into MethodDeclaration(4060) at 3", "Insert SingleVariableDeclaration(4031) into MethodDeclaration(4060) at 4", "Insert Block(4059) into MethodDeclaration(4060) at 5", "Insert Modifier: public(4061) into MethodDeclaration(4067) at 0", "Insert PrimitiveType: boolean(4062) into MethodDeclaration(4067) at 1", "Insert SimpleName: isDataTable(4063) into MethodDeclaration(4067) at 2", "Insert Block(4066) into MethodDeclaration(4067) at 3", "Insert Modifier: public(4068) into MethodDeclaration(4075) at 0", "Insert SimpleType: PName(4070) into MethodDeclaration(4075) at 1", "Insert SimpleName: getHTableName(4071) into MethodDeclaration(4075) at 2", "Insert Block(4074) into MethodDeclaration(4075) at 3", "Insert Modifier: public(4076) into MethodDeclaration(4083) at 0", "Insert SimpleType: TableRef(4078) into MethodDeclaration(4083) at 1", "Insert SimpleName: getOrigTableRef(4079) into MethodDeclaration(4083) at 2", "Insert Block(4082) into MethodDeclaration(4083) at 3", "Insert MarkerAnnotation(4085) into MethodDeclaration(4125) at 0", "Insert Modifier: public(4086) into MethodDeclaration(4125) at 1", "Insert PrimitiveType: int(4087) into MethodDeclaration(4125) at 2", "Insert SimpleName: hashCode(4088) into MethodDeclaration(4125) at 3", "Insert Block(4124) into MethodDeclaration(4125) at 4", "Insert MarkerAnnotation(4127) into MethodDeclaration(4182) at 0", "Insert Modifier: public(4128) into MethodDeclaration(4182) at 1", "Insert PrimitiveType: boolean(4129) into MethodDeclaration(4182) at 2", "Insert SimpleName: equals(4130) into MethodDeclaration(4182) at 3", "Insert SingleVariableDeclaration(4134) into MethodDeclaration(4182) at 4", "Insert Block(4181) into MethodDeclaration(4182) at 5", "Move VariableDeclarationStatement(3905) into Block(5001) at 0", "Move VariableDeclarationStatement(3912) into Block(5001) at 1", "Move VariableDeclarationStatement(3917) into Block(5001) at 2", "Move IfStatement(3939) into Block(5001) at 3", "Move VariableDeclarationStatement(3949) into Block(5001) at 4", "Move VariableDeclarationStatement(3963) into Block(5001) at 5", "Insert VariableDeclarationStatement(4277) into Block(5001) at 6", "Insert TryStatement(5000) into Block(5001) at 7", "Insert SimpleType: PName(2181) into ParameterizedType: Pair<PName,List<Mutation>>(2187) at 1", "Insert SimpleName: isDataTable(3998) into VariableDeclarationFragment(3999) at 0", "Insert SimpleName: Nonnull(4001) into MarkerAnnotation(4002) at 0", "Insert SimpleName: PName(4005) into SimpleType: PName(4006) at 0", "Insert SimpleName: hTableName(4007) into VariableDeclarationFragment(4008) at 0", "Insert SimpleName: Nonnull(4010) into MarkerAnnotation(4011) at 0", "Insert SimpleName: TableRef(4014) into SimpleType: TableRef(4015) at 0", "Insert SimpleName: origTableRef(4016) into VariableDeclarationFragment(4017) at 0", "Insert PrimitiveType: boolean(4021) into SingleVariableDeclaration(4023) at 0", "Insert SimpleName: isDataTable(4022) into SingleVariableDeclaration(4023) at 1", "Insert SimpleType: PName(4025) into SingleVariableDeclaration(4027) at 0", "Insert SimpleName: hTableName(4026) into SingleVariableDeclaration(4027) at 1", "Insert SimpleType: TableRef(4029) into SingleVariableDeclaration(4031) at 0", "Insert SimpleName: origTableRef(4030) into SingleVariableDeclaration(4031) at 1", "Insert SuperConstructorInvocation(4032) into Block(4059) at 0", "Insert ExpressionStatement(4036) into Block(4059) at 1", "Insert ExpressionStatement(4040) into Block(4059) at 2", "Insert ExpressionStatement(4046) into Block(4059) at 3", "Insert ExpressionStatement(4052) into Block(4059) at 4", "Insert ExpressionStatement(4058) into Block(4059) at 5", "Insert ReturnStatement(4065) into Block(4066) at 0", "Insert SimpleName: PName(4069) into SimpleType: PName(4070) at 0", "Insert ReturnStatement(4073) into Block(4074) at 0", "Insert SimpleName: TableRef(4077) into SimpleType: TableRef(4078) at 0", "Insert ReturnStatement(4081) into Block(4082) at 0", "Insert SimpleName: Override(4084) into MarkerAnnotation(4085) at 0", "Insert VariableDeclarationStatement(4094) into Block(4124) at 0", "Insert VariableDeclarationStatement(4099) into Block(4124) at 1", "Insert ExpressionStatement(4109) into Block(4124) at 2", "Insert ExpressionStatement(4121) into Block(4124) at 3", "Insert ReturnStatement(4123) into Block(4124) at 4", "Insert SimpleName: Override(4126) into MarkerAnnotation(4127) at 0", "Insert SimpleType: Object(4132) into SingleVariableDeclaration(4134) at 0", "Insert SimpleName: obj(4133) into SingleVariableDeclaration(4134) at 1", "Insert IfStatement(4140) into Block(4181) at 0", "Insert IfStatement(4146) into Block(4181) at 1", "Insert IfStatement(4155) into Block(4181) at 2", "Insert VariableDeclarationStatement(4164) into Block(4181) at 3", "Insert IfStatement(4172) into Block(4181) at 4", "Insert IfStatement(4178) into Block(4181) at 5", "Insert ReturnStatement(4180) into Block(4181) at 6", "Insert ParameterizedType: Map<TableInfo,List<Mutation>>(4271) into VariableDeclarationStatement(4277) at 0", "Insert VariableDeclarationFragment(4276) into VariableDeclarationStatement(4277) at 1", "Move VariableDeclarationExpression(3973) into TryStatement(5000) at 0", "Move Block(4576) into TryStatement(5000) at 1", "Insert SimpleName: PName(2180) into SimpleType: PName(2181) at 0", "Insert ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(2322) into ClassInstanceCreation(2507) at 0", "Insert SimpleName: PName(4024) into SimpleType: PName(4025) at 0", "Insert SimpleName: TableRef(4028) into SimpleType: TableRef(4029) at 0", "Insert MethodInvocation(4035) into ExpressionStatement(4036) at 0", "Insert MethodInvocation(4039) into ExpressionStatement(4040) at 0", "Insert Assignment: =(4045) into ExpressionStatement(4046) at 0", "Insert Assignment: =(4051) into ExpressionStatement(4052) at 0", "Insert Assignment: =(4057) into ExpressionStatement(4058) at 0", "Insert SimpleName: isDataTable(4064) into ReturnStatement(4065) at 0", "Insert SimpleName: hTableName(4072) into ReturnStatement(4073) at 0", "Insert SimpleName: origTableRef(4080) into ReturnStatement(4081) at 0", "Insert Modifier: final(4089) into VariableDeclarationStatement(4094) at 0", "Insert PrimitiveType: int(4090) into VariableDeclarationStatement(4094) at 1", "Insert VariableDeclarationFragment(4093) into VariableDeclarationStatement(4094) at 2", "Insert PrimitiveType: int(4095) into VariableDeclarationStatement(4099) at 0", "Insert VariableDeclarationFragment(4098) into VariableDeclarationStatement(4099) at 1", "Insert Assignment: =(4108) into ExpressionStatement(4109) at 0", "Insert Assignment: =(4120) into ExpressionStatement(4121) at 0", "Insert SimpleName: result(4122) into ReturnStatement(4123) at 0", "Insert SimpleName: Object(4131) into SimpleType: Object(4132) at 0", "Insert InfixExpression: ==(4137) into IfStatement(4140) at 0", "Insert ReturnStatement(4139) into IfStatement(4140) at 1", "Insert InfixExpression: ==(4143) into IfStatement(4146) at 0", "Insert ReturnStatement(4145) into IfStatement(4146) at 1", "Insert InfixExpression: !=(4152) into IfStatement(4155) at 0", "Insert ReturnStatement(4154) into IfStatement(4155) at 1", "Insert SimpleType: TableInfo(4157) into VariableDeclarationStatement(4164) at 0", "Insert VariableDeclarationFragment(4163) into VariableDeclarationStatement(4164) at 1", "Insert PrefixExpression: !(4169) into IfStatement(4172) at 0", "Insert ReturnStatement(4171) into IfStatement(4172) at 1", "Insert InfixExpression: !=(4175) into IfStatement(4178) at 0", "Insert ReturnStatement(4177) into IfStatement(4178) at 1", "Insert BooleanLiteral: true(4179) into ReturnStatement(4180) at 0", "Insert SimpleType: Map(4263) into ParameterizedType: Map<TableInfo,List<Mutation>>(4271) at 0", "Insert SimpleType: TableInfo(4265) into ParameterizedType: Map<TableInfo,List<Mutation>>(4271) at 1", "Insert ParameterizedType: List<Mutation>(4270) into ParameterizedType: Map<TableInfo,List<Mutation>>(4271) at 2", "Insert SimpleName: physicalTableMutationMap(4272) into VariableDeclarationFragment(4276) at 0", "Insert MethodInvocation(4275) into VariableDeclarationFragment(4276) at 1", "Move VariableDeclarationStatement(3981) into Block(4999) at 0", "Move VariableDeclarationStatement(3989) into Block(4999) at 1", "Move VariableDeclarationStatement(3993) into Block(4999) at 2", "Insert WhileStatement(4503) into Block(4999) at 3", "Insert VariableDeclarationStatement(4524) into Block(4999) at 4", "Insert SimpleType: Iterator(2311) into ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(2322) at 0", "Insert ParameterizedType: Pair<PName,List<Mutation>>(2321) into ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(2322) at 1", "Insert SimpleName: checkNotNull(4033) into MethodInvocation(4035) at 0", "Insert SimpleName: hTableName(4034) into MethodInvocation(4035) at 1", "Insert SimpleName: checkNotNull(4037) into MethodInvocation(4039) at 0", "Insert SimpleName: origTableRef(4038) into MethodInvocation(4039) at 1", "Insert FieldAccess(4043) into Assignment: =(4045) at 0", "Insert SimpleName: isDataTable(4044) into Assignment: =(4045) at 1", "Insert FieldAccess(4049) into Assignment: =(4051) at 0", "Insert SimpleName: hTableName(4050) into Assignment: =(4051) at 1", "Insert FieldAccess(4055) into Assignment: =(4057) at 0", "Insert SimpleName: origTableRef(4056) into Assignment: =(4057) at 1", "Insert SimpleName: prime(4091) into VariableDeclarationFragment(4093) at 0", "Insert NumberLiteral: 31(4092) into VariableDeclarationFragment(4093) at 1", "Insert SimpleName: result(4096) into VariableDeclarationFragment(4098) at 0", "Insert NumberLiteral: 1(4097) into VariableDeclarationFragment(4098) at 1", "Insert SimpleName: result(4100) into Assignment: =(4108) at 0", "Insert InfixExpression: +(4107) into Assignment: =(4108) at 1", "Insert SimpleName: result(4110) into Assignment: =(4120) at 0", "Insert InfixExpression: +(4119) into Assignment: =(4120) at 1", "Insert ThisExpression(4135) into InfixExpression: ==(4137) at 0", "Insert SimpleName: obj(4136) into InfixExpression: ==(4137) at 1", "Insert BooleanLiteral: true(4138) into ReturnStatement(4139) at 0", "Insert SimpleName: obj(4141) into InfixExpression: ==(4143) at 0", "Insert NullLiteral(4142) into InfixExpression: ==(4143) at 1", "Insert BooleanLiteral: false(4144) into ReturnStatement(4145) at 0", "Insert MethodInvocation(4148) into InfixExpression: !=(4152) at 0", "Insert MethodInvocation(4151) into InfixExpression: !=(4152) at 1", "Insert BooleanLiteral: false(4153) into ReturnStatement(4154) at 0", "Insert SimpleName: TableInfo(4156) into SimpleType: TableInfo(4157) at 0", "Insert SimpleName: other(4158) into VariableDeclarationFragment(4163) at 0", "Insert CastExpression(4162) into VariableDeclarationFragment(4163) at 1", "Insert MethodInvocation(4168) into PrefixExpression: !(4169) at 0", "Insert BooleanLiteral: false(4170) into ReturnStatement(4171) at 0", "Insert SimpleName: isDataTable(4173) into InfixExpression: !=(4175) at 0", "Insert QualifiedName: other.isDataTable(4174) into InfixExpression: !=(4175) at 1", "Insert BooleanLiteral: false(4176) into ReturnStatement(4177) at 0", "Insert SimpleName: Map(4262) into SimpleType: Map(4263) at 0", "Insert SimpleName: TableInfo(4264) into SimpleType: TableInfo(4265) at 0", "Insert SimpleType: List(4267) into ParameterizedType: List<Mutation>(4270) at 0", "Insert SimpleType: Mutation(4269) into ParameterizedType: List<Mutation>(4270) at 1", "Insert SimpleName: Maps(4273) into MethodInvocation(4275) at 0", "Insert SimpleName: newLinkedHashMap(4274) into MethodInvocation(4275) at 1", "Move MethodInvocation(3996) into WhileStatement(4503) at 0", "Insert Block(4502) into WhileStatement(4503) at 1", "Insert ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>>(4516) into VariableDeclarationStatement(4524) at 0", "Insert VariableDeclarationFragment(4523) into VariableDeclarationStatement(4524) at 1", "Insert SimpleName: Iterator(2310) into SimpleType: Iterator(2311) at 0", "Insert SimpleType: Pair(2313) into ParameterizedType: Pair<PName,List<Mutation>>(2321) at 0", "Insert SimpleType: PName(2315) into ParameterizedType: Pair<PName,List<Mutation>>(2321) at 1", "Insert ParameterizedType: List<Mutation>(2320) into ParameterizedType: Pair<PName,List<Mutation>>(2321) at 2", "Insert ParameterizedType: Pair<PName,List<Mutation>>(2353) into MethodDeclaration(2494) at 2", "Insert Block(3131) into MethodDeclaration(3132) at 3", "Insert ThisExpression(4041) into FieldAccess(4043) at 0", "Insert SimpleName: isDataTable(4042) into FieldAccess(4043) at 1", "Insert ThisExpression(4047) into FieldAccess(4049) at 0", "Insert SimpleName: hTableName(4048) into FieldAccess(4049) at 1", "Insert ThisExpression(4053) into FieldAccess(4055) at 0", "Insert SimpleName: origTableRef(4054) into FieldAccess(4055) at 1", "Insert InfixExpression: *(4103) into InfixExpression: +(4107) at 0", "Insert MethodInvocation(4106) into InfixExpression: +(4107) at 1", "Insert InfixExpression: *(4113) into InfixExpression: +(4119) at 0", "Insert ParenthesizedExpression(4118) into InfixExpression: +(4119) at 1", "Insert SimpleName: getClass(4147) into MethodInvocation(4148) at 0", "Insert SimpleName: obj(4149) into MethodInvocation(4151) at 0", "Insert SimpleName: getClass(4150) into MethodInvocation(4151) at 1", "Insert SimpleType: TableInfo(4160) into CastExpression(4162) at 0", "Insert SimpleName: obj(4161) into CastExpression(4162) at 1", "Insert SimpleName: hTableName(4165) into MethodInvocation(4168) at 0", "Insert SimpleName: equals(4166) into MethodInvocation(4168) at 1", "Insert QualifiedName: other.hTableName(4167) into MethodInvocation(4168) at 2", "Insert SimpleName: List(4266) into SimpleType: List(4267) at 0", "Insert SimpleName: Mutation(4268) into SimpleType: Mutation(4269) at 0", "Move VariableDeclarationStatement(4005) into Block(4502) at 0", "Move ExpressionStatement(4012) into Block(4502) at 1", "Move IfStatement(4022) into Block(4502) at 2", "Move VariableDeclarationStatement(4038) into Block(4502) at 3", "Move VariableDeclarationStatement(4047) into Block(4502) at 4", "Move VariableDeclarationStatement(4107) into Block(4502) at 5", "Move VariableDeclarationStatement(4077) into Block(4502) at 6", "Insert WhileStatement(4467) into Block(4502) at 7", "Move IfStatement(4562) into Block(4502) at 8", "Insert SimpleType: Iterator(4505) into ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>>(4516) at 0", "Insert ParameterizedType: Entry<TableInfo,List<Mutation>>(4515) into ParameterizedType: Iterator<Entry<TableInfo,List<Mutation>>>(4516) at 1", "Insert SimpleName: mutationsIterator(4517) into VariableDeclarationFragment(4523) at 0", "Insert MethodInvocation(4522) into VariableDeclarationFragment(4523) at 1", "Insert VariableDeclarationStatement(4551) into Block(4997) at 1", "Insert VariableDeclarationStatement(4562) into Block(4997) at 2", "Insert VariableDeclarationStatement(4573) into Block(4997) at 3", "Insert MethodInvocation(1358) into MethodInvocation(1359) at 3", "Insert SimpleName: Pair(2312) into SimpleType: Pair(2313) at 0", "Insert SimpleName: PName(2314) into SimpleType: PName(2315) at 0", "Insert SimpleType: List(2317) into ParameterizedType: List<Mutation>(2320) at 0", "Insert SimpleType: Mutation(2319) into ParameterizedType: List<Mutation>(2320) at 1", "Insert SimpleType: Pair(2345) into ParameterizedType: Pair<PName,List<Mutation>>(2353) at 0", "Insert SimpleType: PName(2347) into ParameterizedType: Pair<PName,List<Mutation>>(2353) at 1", "Insert ParameterizedType: List<Mutation>(2352) into ParameterizedType: Pair<PName,List<Mutation>>(2353) at 2", "Insert VariableDeclarationStatement(3037) into Block(3131) at 0", "Insert ReturnStatement(3130) into Block(3131) at 1", "Insert SimpleName: prime(4101) into InfixExpression: *(4103) at 0", "Insert SimpleName: result(4102) into InfixExpression: *(4103) at 1", "Insert SimpleName: hTableName(4104) into MethodInvocation(4106) at 0", "Insert SimpleName: hashCode(4105) into MethodInvocation(4106) at 1", "Insert SimpleName: prime(4111) into InfixExpression: *(4113) at 0", "Insert SimpleName: result(4112) into InfixExpression: *(4113) at 1", "Insert ConditionalExpression(4117) into ParenthesizedExpression(4118) at 0", "Insert SimpleName: TableInfo(4159) into SimpleType: TableInfo(4160) at 0", "Update ParameterizedType: Iterator<Pair<byte[],List<Mutation>>>(4097) to Iterator<Pair<PName,List<Mutation>>>", "Insert MethodInvocation(4392) into WhileStatement(4467) at 0", "Insert Block(4466) into WhileStatement(4467) at 1", "Move MethodInvocation(4051) into IfStatement(4501) at 0", "Insert SimpleName: Iterator(4504) into SimpleType: Iterator(4505) at 0", "Insert SimpleType: Entry(4507) into ParameterizedType: Entry<TableInfo,List<Mutation>>(4515) at 0", "Insert SimpleType: TableInfo(4509) into ParameterizedType: Entry<TableInfo,List<Mutation>>(4515) at 1", "Insert ParameterizedType: List<Mutation>(4514) into ParameterizedType: Entry<TableInfo,List<Mutation>>(4515) at 2", "Insert MethodInvocation(4520) into MethodInvocation(4522) at 0", "Update SimpleName: tableRef(4571) to iterator", "Move SimpleName: tableRef(4571) into MethodInvocation(4522) at 1", "Update ParameterizedType: Pair<byte[],List<Mutation>>(4121) to Entry<TableInfo,List<Mutation>>", "Insert VariableDeclarationFragment(4542) into VariableDeclarationStatement(4543) at 1", "Insert SimpleType: TableInfo(4545) into VariableDeclarationStatement(4551) at 0", "Insert VariableDeclarationFragment(4550) into VariableDeclarationStatement(4551) at 1", "Move ArrayType: byte[](4130) into VariableDeclarationStatement(4562) at 0", "Insert VariableDeclarationFragment(4561) into VariableDeclarationStatement(4562) at 1", "Insert ParameterizedType: List<Mutation>(4567) into VariableDeclarationStatement(4573) at 0", "Insert VariableDeclarationFragment(4572) into VariableDeclarationStatement(4573) at 1", "Move SimpleName: table(1352) into MethodInvocation(1358) at 0", "Insert SimpleName: isImmutableRows(1357) into MethodInvocation(1358) at 1", "Insert SimpleName: List(2316) into SimpleType: List(2317) at 0", "Insert SimpleName: Mutation(2318) into SimpleType: Mutation(2319) at 0", "Insert SimpleName: Pair(2344) into SimpleType: Pair(2345) at 0", "Insert SimpleName: PName(2346) into SimpleType: PName(2347) at 0", "Insert SimpleType: List(2349) into ParameterizedType: List<Mutation>(2352) at 0", "Insert SimpleType: Mutation(2351) into ParameterizedType: List<Mutation>(2352) at 1", "Insert Modifier: final(3010) into VariableDeclarationStatement(3037) at 0", "Insert ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(3023) into VariableDeclarationStatement(3037) at 1", "Insert VariableDeclarationFragment(3036) into VariableDeclarationStatement(3037) at 2", "Insert ClassInstanceCreation(3129) into ReturnStatement(3130) at 0", "Insert SimpleName: isDataTable(4114) into ConditionalExpression(4117) at 0", "Insert NumberLiteral: 1231(4115) into ConditionalExpression(4117) at 1", "Insert NumberLiteral: 1237(4116) into ConditionalExpression(4117) at 2", "Update ParameterizedType: Pair<byte[],List<Mutation>>(4096) to Pair<PName,List<Mutation>>", "Update SimpleName: tableRef(4516) to mutationsIterator", "Move SimpleName: tableRef(4516) into MethodInvocation(4392) at 0", "Update SimpleName: getTable(4517) to hasNext", "Move SimpleName: getTable(4517) into MethodInvocation(4392) at 1", "Insert VariableDeclarationStatement(4408) into Block(4466) at 0", "Move VariableDeclarationStatement(4136) into Block(4466) at 1", "Move VariableDeclarationStatement(4147) into Block(4466) at 2", "Insert VariableDeclarationStatement(4438) into Block(4466) at 3", "Insert VariableDeclarationStatement(4451) into Block(4466) at 4", "Insert IfStatement(4461) into Block(4466) at 5", "Move ExpressionStatement(4513) into Block(4466) at 6", "Insert SimpleName: Entry(4506) into SimpleType: Entry(4507) at 0", "Insert SimpleName: TableInfo(4508) into SimpleType: TableInfo(4509) at 0", "Insert SimpleType: List(4511) into ParameterizedType: List<Mutation>(4514) at 0", "Insert SimpleType: Mutation(4513) into ParameterizedType: List<Mutation>(4514) at 1", "Update SimpleName: mutations(4569) to physicalTableMutationMap", "Move SimpleName: mutations(4569) into MethodInvocation(4520) at 0", "Update SimpleName: remove(4570) to entrySet", "Move SimpleName: remove(4570) into MethodInvocation(4520) at 1", "Update SimpleType: Pair(4112) to Entry", "Insert SimpleType: TableInfo(4531) into ParameterizedType: Entry<TableInfo,List<Mutation>>(4537) at 1", "Insert SimpleName: pair(4538) into VariableDeclarationFragment(4542) at 0", "Insert MethodInvocation(4541) into VariableDeclarationFragment(4542) at 1", "Insert SimpleName: TableInfo(4544) into SimpleType: TableInfo(4545) at 0", "Insert SimpleName: tableInfo(4546) into VariableDeclarationFragment(4550) at 0", "Insert MethodInvocation(4549) into VariableDeclarationFragment(4550) at 1", "Insert SimpleName: htableName(4555) into VariableDeclarationFragment(4561) at 0", "Insert MethodInvocation(4560) into VariableDeclarationFragment(4561) at 1", "Insert SimpleType: List(4564) into ParameterizedType: List<Mutation>(4567) at 0", "Insert SimpleType: Mutation(4566) into ParameterizedType: List<Mutation>(4567) at 1", "Insert SimpleName: mutationList(4568) into VariableDeclarationFragment(4572) at 0", "Insert MethodInvocation(4571) into VariableDeclarationFragment(4572) at 1", "Insert VariableDeclarationStatement(4606) into Block(4989) at 0", "Insert VariableDeclarationStatement(4614) into Block(4989) at 1", "Move ExpressionStatement(4083) into Block(4989) at 2", "Insert SimpleName: List(2348) into SimpleType: List(2349) at 0", "Insert SimpleName: Mutation(2350) into SimpleType: Mutation(2351) at 0", "Insert ParameterizedType: Pair<PName,List<Mutation>>(2486) into ClassInstanceCreation(2491) at 0", "Move MethodInvocation(2490) into ClassInstanceCreation(2491) at 1", "Insert SimpleType: Iterator(3012) into ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(3023) at 0", "Insert ParameterizedType: Pair<PName,List<Mutation>>(3022) into ParameterizedType: Iterator<Pair<PName,List<Mutation>>>(3023) at 1", "Insert SimpleName: mutationIterator(3024) into VariableDeclarationFragment(3036) at 0", "Move MethodInvocation(3023) into VariableDeclarationFragment(3036) at 1", "Move ParameterizedType: Iterator<Pair<byte[],List<Mutation>>>(2318) into ClassInstanceCreation(3129) at 0", "Insert AnonymousClassDeclaration(3128) into ClassInstanceCreation(3129) at 1", "Insert SimpleType: PName(4367) into ParameterizedType: Pair<PName,List<Mutation>>(4373) at 1", "Insert ParameterizedType: Pair<PName,List<Mutation>>(4402) into VariableDeclarationStatement(4408) at 0", "Move VariableDeclarationFragment(4126) into VariableDeclarationStatement(4408) at 1", "Insert SimpleType: PName(4410) into VariableDeclarationStatement(4416) at 0", "Insert SimpleType: TableInfo(4429) into VariableDeclarationStatement(4438) at 0", "Insert VariableDeclarationFragment(4437) into VariableDeclarationStatement(4438) at 1", "Insert ParameterizedType: List<Mutation>(4443) into VariableDeclarationStatement(4451) at 0", "Insert VariableDeclarationFragment(4450) into VariableDeclarationStatement(4451) at 1", "Insert InfixExpression: !=(4454) into IfStatement(4461) at 0", "Insert ExpressionStatement(4460) into IfStatement(4461) at 1", "Insert SimpleName: List(4510) into SimpleType: List(4511) at 0", "Insert SimpleName: Mutation(4512) into SimpleType: Mutation(4513) at 0", "Update SimpleName: Pair(4111) to Entry", "Insert SimpleName: TableInfo(4530) into SimpleType: TableInfo(4531) at 0", "Insert SimpleName: mutationsIterator(4539) into MethodInvocation(4541) at 0", "Insert SimpleName: next(4540) into MethodInvocation(4541) at 1", "Insert SimpleName: pair(4547) into MethodInvocation(4549) at 0", "Insert SimpleName: getKey(4548) into MethodInvocation(4549) at 1", "Insert MethodInvocation(4558) into MethodInvocation(4560) at 0", "Insert SimpleName: getBytes(4559) into MethodInvocation(4560) at 1", "Insert SimpleName: List(4563) into SimpleType: List(4564) at 0", "Insert SimpleName: Mutation(4565) into SimpleType: Mutation(4566) at 0", "Insert SimpleName: pair(4569) into MethodInvocation(4571) at 0", "Insert SimpleName: getValue(4570) into MethodInvocation(4571) at 1", "Insert SimpleType: TableRef(4600) into VariableDeclarationStatement(4606) at 0", "Insert VariableDeclarationFragment(4605) into VariableDeclarationStatement(4606) at 1", "Insert SimpleType: PTable(4608) into VariableDeclarationStatement(4614) at 0", "Insert VariableDeclarationFragment(4613) into VariableDeclarationStatement(4614) at 1", "Insert SimpleType: Pair(2478) into ParameterizedType: Pair<PName,List<Mutation>>(2486) at 0", "Insert SimpleType: PName(2480) into ParameterizedType: Pair<PName,List<Mutation>>(2486) at 1", "Insert ParameterizedType: List<Mutation>(2485) into ParameterizedType: Pair<PName,List<Mutation>>(2486) at 2", "Insert SimpleName: Iterator(3011) into SimpleType: Iterator(3012) at 0", "Insert SimpleType: Pair(3014) into ParameterizedType: Pair<PName,List<Mutation>>(3022) at 0", "Insert SimpleType: PName(3016) into ParameterizedType: Pair<PName,List<Mutation>>(3022) at 1", "Insert ParameterizedType: List<Mutation>(3021) into ParameterizedType: Pair<PName,List<Mutation>>(3022) at 2", "Insert MethodDeclaration(3062) into AnonymousClassDeclaration(3128) at 0", "Insert MethodDeclaration(3116) into AnonymousClassDeclaration(3128) at 1", "Insert MethodDeclaration(3127) into AnonymousClassDeclaration(3128) at 2", "Insert SimpleName: PName(4366) into SimpleType: PName(4367) at 0", "Insert SimpleType: Pair(4394) into ParameterizedType: Pair<PName,List<Mutation>>(4402) at 0", "Insert SimpleType: PName(4396) into ParameterizedType: Pair<PName,List<Mutation>>(4402) at 1", "Insert ParameterizedType: List<Mutation>(4401) into ParameterizedType: Pair<PName,List<Mutation>>(4402) at 2", "Insert SimpleName: PName(4409) into SimpleType: PName(4410) at 0", "Update SimpleName: htableName(4131) to hTableName", "Insert SimpleName: TableInfo(4428) into SimpleType: TableInfo(4429) at 0", "Insert SimpleName: tableInfo(4430) into VariableDeclarationFragment(4437) at 0", "Insert ClassInstanceCreation(4436) into VariableDeclarationFragment(4437) at 1", "Insert SimpleType: List(4440) into ParameterizedType: List<Mutation>(4443) at 0", "Insert SimpleType: Mutation(4442) into ParameterizedType: List<Mutation>(4443) at 1", "Insert SimpleName: oldMutationList(4444) into VariableDeclarationFragment(4450) at 0", "Insert MethodInvocation(4449) into VariableDeclarationFragment(4450) at 1", "Insert SimpleName: oldMutationList(4452) into InfixExpression: !=(4454) at 0", "Insert NullLiteral(4453) into InfixExpression: !=(4454) at 1", "Move MethodInvocation(4566) into ExpressionStatement(4460) at 0", "Insert SimpleName: tableInfo(4556) into MethodInvocation(4558) at 0", "Insert SimpleName: getHTableName(4557) into MethodInvocation(4558) at 1", "Insert SimpleName: TableRef(4599) into SimpleType: TableRef(4600) at 0", "Insert SimpleName: origTableRef(4601) into VariableDeclarationFragment(4605) at 0", "Insert MethodInvocation(4604) into VariableDeclarationFragment(4605) at 1", "Insert SimpleName: PTable(4607) into SimpleType: PTable(4608) at 0", "Insert SimpleName: table(4609) into VariableDeclarationFragment(4613) at 0", "Insert MethodInvocation(4612) into VariableDeclarationFragment(4613) at 1", "Insert IfStatement(4839) into Block(4845) at 15", "Insert ExpressionStatement(4844) into Block(4845) at 16", "Update ParameterizedType: Pair<byte[],List<Mutation>>(2367) to Pair<PName,List<Mutation>>", "Move MethodInvocation(2370) into ClassInstanceCreation(2374) at 1", "Insert SimpleName: Pair(2477) into SimpleType: Pair(2478) at 0", "Insert SimpleName: PName(2479) into SimpleType: PName(2480) at 0", "Insert SimpleType: List(2482) into ParameterizedType: List<Mutation>(2485) at 0", "Insert SimpleType: Mutation(2484) into ParameterizedType: List<Mutation>(2485) at 1", "Insert SimpleName: Pair(3013) into SimpleType: Pair(3014) at 0", "Insert SimpleName: PName(3015) into SimpleType: PName(3016) at 0", "Insert SimpleType: List(3018) into ParameterizedType: List<Mutation>(3021) at 0", "Insert SimpleType: Mutation(3020) into ParameterizedType: List<Mutation>(3021) at 1", "Insert MarkerAnnotation(3053) into MethodDeclaration(3062) at 0", "Insert Modifier: public(3054) into MethodDeclaration(3062) at 1", "Insert PrimitiveType: boolean(3055) into MethodDeclaration(3062) at 2", "Insert SimpleName: hasNext(3056) into MethodDeclaration(3062) at 3", "Move Block(3025) into MethodDeclaration(3062) at 4", "Insert MarkerAnnotation(3064) into MethodDeclaration(3116) at 0", "Insert Modifier: public(3065) into MethodDeclaration(3116) at 1", "Move ParameterizedType: Pair<byte[],List<Mutation>>(2350) into MethodDeclaration(3116) at 2", "Insert SimpleName: next(3077) into MethodDeclaration(3116) at 3", "Insert Block(3115) into MethodDeclaration(3116) at 4", "Insert MarkerAnnotation(3118) into MethodDeclaration(3127) at 0", "Insert Modifier: public(3119) into MethodDeclaration(3127) at 1", "Insert PrimitiveType: void(3120) into MethodDeclaration(3127) at 2", "Insert SimpleName: remove(3121) into MethodDeclaration(3127) at 3", "Insert Block(3126) into MethodDeclaration(3127) at 4", "Insert SimpleName: Pair(4393) into SimpleType: Pair(4394) at 0", "Insert SimpleName: PName(4395) into SimpleType: PName(4396) at 0", "Insert SimpleType: List(4398) into ParameterizedType: List<Mutation>(4401) at 0", "Insert SimpleType: Mutation(4400) into ParameterizedType: List<Mutation>(4401) at 1", "Insert SimpleType: TableInfo(4432) into ClassInstanceCreation(4436) at 0", "Insert SimpleName: isDataTable(4433) into ClassInstanceCreation(4436) at 1", "Insert SimpleName: hTableName(4434) into ClassInstanceCreation(4436) at 2", "Insert SimpleName: tableRef(4435) into ClassInstanceCreation(4436) at 3", "Insert SimpleName: List(4439) into SimpleType: List(4440) at 0", "Insert SimpleName: Mutation(4441) into SimpleType: Mutation(4442) at 0", "Update SimpleName: valuesMap(4524) to physicalTableMutationMap", "Move SimpleName: valuesMap(4524) into MethodInvocation(4449) at 0", "Update SimpleName: size(4525) to put", "Move SimpleName: size(4525) into MethodInvocation(4449) at 1", "Insert SimpleName: tableInfo(4447) into MethodInvocation(4449) at 2", "Insert SimpleName: mutationList(4448) into MethodInvocation(4449) at 3", "Update SimpleName: tableRefIterator(4564) to mutationList", "Update SimpleName: remove(4565) to addAll", "Insert NumberLiteral: 0(4457) into MethodInvocation(4459) at 2", "Insert SimpleName: oldMutationList(4458) into MethodInvocation(4459) at 3", "Insert SimpleName: tableInfo(4602) into MethodInvocation(4604) at 0", "Insert SimpleName: getOrigTableRef(4603) into MethodInvocation(4604) at 1", "Insert SimpleName: origTableRef(4610) into MethodInvocation(4612) at 0", "Insert SimpleName: getTable(4611) into MethodInvocation(4612) at 1", "Insert MethodInvocation(4627) into ConditionalExpression(4634) at 0", "Insert MethodInvocation(4662) into IfStatement(4730) at 0", "Insert MethodInvocation(4833) into IfStatement(4839) at 0", "Insert Block(4838) into IfStatement(4839) at 1", "Insert MethodInvocation(4843) into ExpressionStatement(4844) at 0", "Move Block(4455) into TryStatement(4986) at 0", "Insert SimpleType: PName(2363) into ParameterizedType: Pair<PName,List<Mutation>>(2369) at 1", "Insert SimpleName: List(2481) into SimpleType: List(2482) at 0", "Insert SimpleName: Mutation(2483) into SimpleType: Mutation(2484) at 0", "Insert SimpleName: List(3017) into SimpleType: List(3018) at 0", "Insert SimpleName: Mutation(3019) into SimpleType: Mutation(3020) at 0", "Insert SimpleName: Override(3052) into MarkerAnnotation(3053) at 0", "Insert SimpleName: Override(3063) into MarkerAnnotation(3064) at 0", "Insert VariableDeclarationStatement(3093) into Block(3115) at 0", "Insert ReturnStatement(3114) into Block(3115) at 1", "Insert SimpleName: Override(3117) into MarkerAnnotation(3118) at 0", "Insert ExpressionStatement(3125) into Block(3126) at 0", "Insert SimpleName: List(4397) into SimpleType: List(4398) at 0", "Insert SimpleName: Mutation(4399) into SimpleType: Mutation(4400) at 0", "Insert SimpleName: TableInfo(4431) into SimpleType: TableInfo(4432) at 0", "Insert SimpleName: tableInfo(4625) into MethodInvocation(4627) at 0", "Insert SimpleName: isDataTable(4626) into MethodInvocation(4627) at 1", "Update SimpleName: tableRef(4179) to origTableRef", "Insert SimpleName: table(4660) into MethodInvocation(4662) at 0", "Insert SimpleName: isTransactional(4661) into MethodInvocation(4662) at 1", "Insert ExpressionStatement(4667) into Block(4729) at 0", "Move ExpressionStatement(4061) into Block(4729) at 1", "Move ExpressionStatement(4070) into Block(4729) at 2", "Insert SimpleName: tableInfo(4831) into MethodInvocation(4833) at 0", "Insert SimpleName: isDataTable(4832) into MethodInvocation(4833) at 1", "Insert ExpressionStatement(4837) into Block(4838) at 0", "Insert SimpleName: mutations(4840) into MethodInvocation(4843) at 0", "Insert SimpleName: remove(4841) into MethodInvocation(4843) at 1", "Insert SimpleName: origTableRef(4842) into MethodInvocation(4843) at 2", "Insert IfStatement(4943) into Block(4944) at 0", "Insert SimpleName: PName(2362) into SimpleType: PName(2363) at 0", "Insert MethodInvocation(3059) into ReturnStatement(3060) at 0", "Insert ParameterizedType: Pair<PName,List<Mutation>>(3087) into VariableDeclarationStatement(3093) at 0", "Insert VariableDeclarationFragment(3092) into VariableDeclarationStatement(3093) at 1", "Insert ClassInstanceCreation(3113) into ReturnStatement(3114) at 0", "Insert MethodInvocation(3124) into ExpressionStatement(3125) at 0", "Insert MethodInvocation(4666) into ExpressionStatement(4667) at 0", "Insert MethodInvocation(4711) into IfStatement(4724) at 0", "Insert Assignment: -=(4836) into ExpressionStatement(4837) at 0", "Move InfixExpression: !=(4450) into IfStatement(4943) at 0", "Move ExpressionStatement(4454) into IfStatement(4943) at 1", "Insert SimpleName: mutationIterator(3057) into MethodInvocation(3059) at 0", "Insert SimpleName: hasNext(3058) into MethodInvocation(3059) at 1", "Insert SimpleType: Pair(3079) into ParameterizedType: Pair<PName,List<Mutation>>(3087) at 0", "Insert SimpleType: PName(3081) into ParameterizedType: Pair<PName,List<Mutation>>(3087) at 1", "Insert ParameterizedType: List<Mutation>(3086) into ParameterizedType: Pair<PName,List<Mutation>>(3087) at 2", "Insert SimpleName: pair(3088) into VariableDeclarationFragment(3092) at 0", "Insert MethodInvocation(3091) into VariableDeclarationFragment(3092) at 1", "Move ParameterizedType: Pair<byte[],List<Mutation>>(2487) into ClassInstanceCreation(3113) at 0", "Insert MethodInvocation(3109) into ClassInstanceCreation(3113) at 1", "Insert MethodInvocation(3112) into ClassInstanceCreation(3113) at 2", "Insert SimpleName: mutationIterator(3122) into MethodInvocation(3124) at 0", "Insert SimpleName: remove(3123) into MethodInvocation(3124) at 1", "Insert SimpleName: txTableRefs(4663) into MethodInvocation(4666) at 0", "Insert SimpleName: add(4664) into MethodInvocation(4666) at 1", "Insert SimpleName: origTableRef(4665) into MethodInvocation(4666) at 2", "Insert SimpleName: tableInfo(4709) into MethodInvocation(4711) at 0", "Insert SimpleName: isDataTable(4710) into MethodInvocation(4711) at 1", "Insert SimpleName: numRows(4834) into Assignment: -=(4836) at 0", "Insert SimpleName: numMutations(4835) into Assignment: -=(4836) at 1", "Insert SimpleName: Pair(3078) into SimpleType: Pair(3079) at 0", "Insert SimpleName: PName(3080) into SimpleType: PName(3081) at 0", "Insert SimpleType: List(3083) into ParameterizedType: List<Mutation>(3086) at 0", "Insert SimpleType: Mutation(3085) into ParameterizedType: List<Mutation>(3086) at 1", "Insert SimpleName: mutationIterator(3089) into MethodInvocation(3091) at 0", "Insert SimpleName: next(3090) into MethodInvocation(3091) at 1", "Insert MethodInvocation(3107) into MethodInvocation(3109) at 0", "Insert SimpleName: getBytes(3108) into MethodInvocation(3109) at 1", "Insert SimpleName: pair(3110) into MethodInvocation(3112) at 0", "Insert SimpleName: getSecond(3111) into MethodInvocation(3112) at 1", "Insert MethodInvocation(4705) into MethodInvocation(4706) at 3", "Insert SimpleName: List(3082) into SimpleType: List(3083) at 0", "Insert SimpleName: Mutation(3084) into SimpleType: Mutation(3085) at 0", "Insert SimpleName: pair(3105) into MethodInvocation(3107) at 0", "Insert SimpleName: getFirst(3106) into MethodInvocation(3107) at 1", "Move SimpleName: table(4233) into MethodInvocation(4705) at 0", "Insert SimpleName: isImmutableRows(4704) into MethodInvocation(4705) at 1", "Update SimpleName: tableRef(4221) to origTableRef", "Delete PrimitiveType: byte(2174)", "Delete Dimension(2175)", "Delete ArrayType: byte[](2176)", "Delete PrimitiveType: byte(2359)", "Delete Dimension(2360)", "Delete ArrayType: byte[](2361)", "Delete SimpleName: getBytes(2371)", "Delete MethodInvocation(2372)", "Delete SimpleName: getBytes(2491)", "Delete MethodInvocation(2492)", "Delete PrimitiveType: byte(4088)", "Delete Dimension(4089)", "Delete ArrayType: byte[](4090)", "Delete SimpleName: isTransactional(4531)", "Delete SimpleName: isTransactional(4048)", "Delete Assignment: =(4052)", "Delete SimpleName: txTableRefs(4053)", "Delete SimpleName: add(4054)", "Delete SimpleName: tableRef(4055)", "Delete MethodInvocation(4056)", "Delete ExpressionStatement(4057)", "Delete Block(4071)", "Delete IfStatement(4072)", "Delete PrimitiveType: byte(4113)", "Delete Dimension(4114)", "Delete ArrayType: byte[](4115)", "Delete SimpleName: isDataTable(4177)", "Delete SimpleName: isTransactional(4210)", "Delete SimpleName: isDataTable(4237)", "Delete IfStatement(4456)", "Delete Block(4457)", "Delete MethodInvocation(4518)", "Delete SimpleName: getType(4519)", "Delete MethodInvocation(4520)", "Delete QualifiedName: PTableType.INDEX(4521)", "Delete InfixExpression: !=(4522)", "Delete SimpleName: numRows(4523)", "Delete MethodInvocation(4526)", "Delete Assignment: -=(4527)", "Delete ExpressionStatement(4528)", "Delete Block(4529)", "Delete IfStatement(4530)", "Delete SimpleName: sendAll(4563)", "Delete ExpressionStatement(4567)", "Delete Block(4568)", "Delete MethodInvocation(4572)", "Delete ExpressionStatement(4573)", "Delete Block(4574)", "Delete IfStatement(4575)", "Delete WhileStatement(4577)", "Delete TryStatement(4579)", "Delete Block(4580)"]}}, {"PhoenixConnection_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 94", "operations": ["INS QualifiedName: org.cloudera.htrace.Sampler to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 94"]}, {"root": "INS ImportDeclaration to CompilationUnit at 95", "operations": ["INS ImportDeclaration to CompilationUnit at 95", "INS QualifiedName: org.cloudera.htrace.TraceScope to ImportDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 32", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 32", "INS SimpleName: metaData to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 33", "operations": ["INS ExpressionStatement to Block at 33", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: metaData to FieldAccess at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pruneTables to MethodInvocation at 1", "MOV SimpleName: pruner to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pruneFunctions to MethodInvocation at 1", "MOV SimpleName: pruner to MethodInvocation at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: || at 1", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS SimpleName: function to MethodInvocation at 0", "INS SimpleName: getTenantId to MethodInvocation at 1"]}, {"root": "INS ParenthesizedExpression to InfixExpression: || at 1", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: table to MethodInvocation at 0", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getTenantId to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS ParenthesizedExpression to InfixExpression: || at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: metaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement"]}]}}, {"PhoenixConnection_diff": {"operations": ["Insert ImportDeclaration(189) into CompilationUnit(4229) at 94", "Insert ImportDeclaration(191) into CompilationUnit(4229) at 95", "Insert QualifiedName: org.cloudera.htrace.Sampler(188) into ImportDeclaration(189) at 0", "Insert QualifiedName: org.cloudera.htrace.TraceScope(190) into ImportDeclaration(191) at 0", "Insert PrimitiveType: void(3573) into MethodDeclaration(3598) at 2", "Insert PrimitiveType: void(3602) into MethodDeclaration(3627) at 2", "Insert PrimitiveType: void(3631) into MethodDeclaration(3662) at 2", "Insert PrimitiveType: void(3666) into MethodDeclaration(3686) at 2", "Insert PrimitiveType: void(3690) into MethodDeclaration(3775) at 2", "Insert PrimitiveType: void(3779) into MethodDeclaration(3816) at 2", "Insert PrimitiveType: void(3820) into MethodDeclaration(3851) at 2", "Insert PrimitiveType: void(3855) into MethodDeclaration(3905) at 2", "Insert PrimitiveType: void(4204) into MethodDeclaration(4227) at 2", "Insert ExpressionStatement(1261) into Block(1320) at 32", "Insert ExpressionStatement(1268) into Block(1320) at 33", "Insert Assignment: =(1260) into ExpressionStatement(1261) at 0", "Insert MethodInvocation(1267) into ExpressionStatement(1268) at 0", "Insert MethodInvocation(1274) into ExpressionStatement(1275) at 0", "Move MethodInvocation(3570) into ExpressionStatement(3589) at 0", "Move MethodInvocation(3604) into ExpressionStatement(3618) at 0", "Move MethodInvocation(3674) into ExpressionStatement(3678) at 0", "Move MethodInvocation(3756) into ExpressionStatement(3755) at 0", "Move MethodInvocation(3811) into ExpressionStatement(3805) at 0", "Move MethodInvocation(3852) into ExpressionStatement(3841) at 0", "Move MethodInvocation(3908) into ExpressionStatement(3892) at 0", "Move MethodInvocation(4239) into ExpressionStatement(4218) at 0", "Move FieldAccess(1249) into Assignment: =(1260) at 0", "Insert SimpleName: metaData(1259) into Assignment: =(1260) at 1", "Move FieldAccess(1240) into MethodInvocation(1267) at 0", "Move SimpleName: pruneTables(1242) into MethodInvocation(1267) at 1", "Move SimpleName: pruner(1243) into MethodInvocation(1267) at 2", "Insert FieldAccess(1271) into MethodInvocation(1274) at 0", "Move SimpleName: pruneFunctions(1251) into MethodInvocation(1274) at 1", "Move SimpleName: pruner(1252) into MethodInvocation(1274) at 2", "Insert ThisExpression(1269) into FieldAccess(1271) at 0", "Insert SimpleName: metaData(1270) into FieldAccess(1271) at 1", "Move MethodInvocation(3643) into ExpressionStatement(3652) at 0", "Insert ParenthesizedExpression(1215) into InfixExpression: ||(1216) at 1", "Insert InfixExpression: &&(1214) into ParenthesizedExpression(1215) at 0", "Insert ParenthesizedExpression(1169) into InfixExpression: ||(1170) at 1", "Insert InfixExpression: !=(1205) into InfixExpression: &&(1214) at 0", "Move PrefixExpression: !(1197) into InfixExpression: &&(1214) at 1", "Insert InfixExpression: &&(1168) into ParenthesizedExpression(1169) at 0", "Insert MethodInvocation(1203) into InfixExpression: !=(1205) at 0", "Insert NullLiteral(1204) into InfixExpression: !=(1205) at 1", "Insert InfixExpression: !=(1159) into InfixExpression: &&(1168) at 0", "Move PrefixExpression: !(1158) into InfixExpression: &&(1168) at 1", "Insert SimpleName: function(1201) into MethodInvocation(1203) at 0", "Insert SimpleName: getTenantId(1202) into MethodInvocation(1203) at 1", "Insert MethodInvocation(1157) into InfixExpression: !=(1159) at 0", "Insert NullLiteral(1158) into InfixExpression: !=(1159) at 1", "Insert SimpleName: table(1155) into MethodInvocation(1157) at 0", "Insert SimpleName: getTenantId(1156) into MethodInvocation(1157) at 1", "Delete SimpleName: metaData(1241)", "Delete MethodInvocation(1244)", "Delete Assignment: =(1245)", "Delete ExpressionStatement(1246)", "Delete SimpleName: metaData(1250)", "Delete MethodInvocation(1253)", "Delete Assignment: =(1254)", "Delete SimpleName: PMetaData(3553)", "Delete SimpleType: PMetaData(3554)", "Delete SimpleName: metaData(3565)", "Delete Assignment: =(3571)", "Delete SimpleName: metaData(3580)", "Delete ReturnStatement(3581)", "Delete SimpleName: PMetaData(3587)", "Delete SimpleType: PMetaData(3588)", "Delete SimpleName: metaData(3599)", "Delete Assignment: =(3605)", "Delete SimpleName: metaData(3614)", "Delete ReturnStatement(3615)", "Delete SimpleName: PMetaData(3621)", "Delete SimpleType: PMetaData(3622)", "Delete SimpleName: metaData(3639)", "Delete Assignment: =(3644)", "Delete SimpleName: metaData(3654)", "Delete ReturnStatement(3655)", "Delete SimpleName: PMetaData(3661)", "Delete SimpleType: PMetaData(3662)", "Delete SimpleName: metaData(3670)", "Delete Assignment: =(3675)", "Delete SimpleName: metaData(3683)", "Delete ReturnStatement(3684)", "Delete SimpleName: PMetaData(3690)", "Delete SimpleType: PMetaData(3691)", "Delete SimpleName: metaData(3740)", "Delete Assignment: =(3757)", "Delete SimpleName: metaData(3777)", "Delete ReturnStatement(3778)", "Delete SimpleName: PMetaData(3784)", "Delete SimpleType: PMetaData(3785)", "Delete SimpleName: metaData(3804)", "Delete Assignment: =(3812)", "Delete SimpleName: metaData(3823)", "Delete ReturnStatement(3824)", "Delete SimpleName: PMetaData(3830)", "Delete SimpleType: PMetaData(3831)", "Delete SimpleName: metaData(3846)", "Delete Assignment: =(3853)", "Delete SimpleName: metaData(3863)", "Delete ReturnStatement(3864)", "Delete SimpleName: PMetaData(3870)", "Delete SimpleType: PMetaData(3871)", "Delete SimpleName: metaData(3899)", "Delete Assignment: =(3909)", "Delete SimpleName: metaData(3922)", "Delete ReturnStatement(3923)", "Delete SimpleName: PMetaData(4224)", "Delete SimpleType: PMetaData(4225)", "Delete SimpleName: metaData(4234)", "Delete Assignment: =(4240)", "Delete SimpleName: metaData(4249)", "Delete ReturnStatement(4250)"]}}, {"ConnectionQueryServicesImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 143"]}, {"root": "UPDATE from org.apache.phoenix.schema.PTable.IndexType to org.apache.phoenix.schema.PSynchronizedMetaData", "operations": ["UPD QualifiedName: org.apache.phoenix.schema.PTable.IndexType from org.apache.phoenix.schema.PTable.IndexType to org.apache.phoenix.schema.PSynchronizedMetaData"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: throwConnectionClosedIfNullMetaData to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ClassInstanceCreation to ReturnStatement at 0", "operations": ["INS SimpleType: PSynchronizedMetaData to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: PSynchronizedMetaData to SimpleType: PSynchronizedMetaData at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: metadata to Assignment: = at 0", "INS SimpleName: clone to MethodInvocation at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 4", "MOV SimpleName: metaDataMutated to MethodInvocation at 0", "MOV SimpleName: tableName to MethodInvocation at 2", "MOV SimpleName: tenantId to MethodInvocation at 1", "MOV SimpleName: tableSeqNum to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from throwConnectionClosedException to metadata", "operations": ["UPD SimpleName: throwConnectionClosedException from throwConnectionClosedException to metadata"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: throwConnectionClosedException to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from throwConnectionClosedException to throwConnectionClosedIfNullMetaData", "operations": ["UPD SimpleName: throwConnectionClosedException from throwConnectionClosedException to throwConnectionClosedIfNullMetaData"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.sql.PreparedStatement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.sql.ResultSet", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.regionserver.LocalIndexSplitter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.util.IndexUtil"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleName: latestMetaData", "operations": ["DEL SimpleName: latestMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: latestMetaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: latestMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: latestMetaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: latestMetaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: latestMetaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: latestMetaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block", "DEL SimpleName: metadata", "DEL InfixExpression: ==", "DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: metadata", "DEL IfStatement", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: notifyAll", "DEL ExpressionStatement", "DEL SimpleName: latestMetaDataLock", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: latestMetaDataLock", "DEL Block", "DEL SynchronizedStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleName: latestMetaData", "operations": ["DEL SimpleName: latestMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: latestMetaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: latestMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: latestMetaData", "DEL Assignment: ="]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: latestMetaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: latestMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: latestMetaData", "DEL ReturnStatement"]}]}}, {"ConnectionQueryServicesImpl_diff": {"operations": ["Move ImportDeclaration(283) into CompilationUnit(17407) at 143", "Update QualifiedName: org.apache.phoenix.schema.PTable.IndexType(284) to org.apache.phoenix.schema.PSynchronizedMetaData", "Insert PrimitiveType: void(1867) into MethodDeclaration(1934) at 2", "Insert MarkerAnnotation(1936) into MethodDeclaration(1966) at 0", "Insert PrimitiveType: void(1938) into MethodDeclaration(1966) at 2", "Insert PrimitiveType: void(2171) into MethodDeclaration(2282) at 2", "Insert PrimitiveType: void(2286) into MethodDeclaration(2325) at 2", "Insert PrimitiveType: void(2329) into MethodDeclaration(2405) at 2", "Move Block(10562) into MethodDeclaration(10522) at 5", "Insert PrimitiveType: void(15723) into MethodDeclaration(15782) at 2", "Insert PrimitiveType: void(15786) into MethodDeclaration(15819) at 2", "Insert PrimitiveType: void(17005) into MethodDeclaration(17019) at 2", "Insert PrimitiveType: void(17023) into MethodDeclaration(17039) at 2", "Insert SimpleName: Override(1935) into MarkerAnnotation(1936) at 0", "Insert PrimitiveType: void(1970) into MethodDeclaration(1978) at 0", "Insert ExpressionStatement(2280) into Block(2281) at 0", "Insert ExpressionStatement(2403) into Block(2404) at 0", "Insert ExpressionStatement(2433) into Block(2448) at 2", "Move ExpressionStatement(2468) into Block(2448) at 3", "Insert ExpressionStatement(17017) into Block(17018) at 0", "Insert ExpressionStatement(17037) into Block(17038) at 0", "Insert ClassInstanceCreation(733) into ReturnStatement(734) at 0", "Move MethodInvocation(2302) into ExpressionStatement(2280) at 0", "Insert MethodInvocation(2402) into ExpressionStatement(2403) at 0", "Insert MethodInvocation(2432) into ExpressionStatement(2433) at 0", "Insert Assignment: =(2438) into ExpressionStatement(2439) at 0", "Move MethodInvocation(17072) into ExpressionStatement(17017) at 0", "Move MethodInvocation(17095) into ExpressionStatement(17037) at 0", "Insert SimpleType: PSynchronizedMetaData(727) into ClassInstanceCreation(733) at 0", "Move ClassInstanceCreation(738) into ClassInstanceCreation(733) at 1", "Move SimpleName: metaDataMutated(2392) into MethodInvocation(2402) at 0", "Move SimpleName: tenantId(2393) into MethodInvocation(2402) at 1", "Move SimpleName: tableName(2394) into MethodInvocation(2402) at 2", "Move SimpleName: tableSeqNum(2395) into MethodInvocation(2402) at 3", "Move ClassInstanceCreation(2433) into MethodInvocation(2402) at 4", "Insert SimpleName: throwConnectionClosedIfNullMetaData(2431) into MethodInvocation(2432) at 0", "Insert SimpleName: metadata(2434) into Assignment: =(2438) at 0", "Insert MethodInvocation(2437) into Assignment: =(2438) at 1", "Move ExpressionStatement(7519) into Block(7520) at 1", "Insert SimpleName: PSynchronizedMetaData(726) into SimpleType: PSynchronizedMetaData(727) at 0", "Move MethodInvocation(1933) into ExpressionStatement(1926) at 0", "Move MethodInvocation(1968) into ExpressionStatement(1958) at 0", "Move MethodInvocation(2341) into ExpressionStatement(2317) at 0", "Update SimpleName: throwConnectionClosedException(2466) to metadata", "Move SimpleName: throwConnectionClosedException(2466) into MethodInvocation(2437) at 0", "Insert SimpleName: clone(2436) into MethodInvocation(2437) at 1", "Move MethodInvocation(15819) into ExpressionStatement(15774) at 0", "Move MethodInvocation(15861) into ExpressionStatement(15811) at 0", "Update SimpleName: throwConnectionClosedException(7517) to throwConnectionClosedIfNullMetaData", "Insert PrimitiveType: void(2242) into MethodDeclaration(2276) at 2", "Insert PrimitiveType: void(2372) into MethodDeclaration(2399) at 2", "Insert ExpressionStatement(2266) into Block(2267) at 0", "Insert ExpressionStatement(2389) into Block(2390) at 0", "Move MethodInvocation(2134) into ExpressionStatement(2117) at 0", "Move MethodInvocation(2286) into ExpressionStatement(2266) at 0", "Move MethodInvocation(2418) into ExpressionStatement(2389) at 0", "Move MethodInvocation(2068) into ExpressionStatement(2053) at 0", "Delete QualifiedName: java.sql.PreparedStatement(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.sql.ResultSet(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.hbase.regionserver.LocalIndexSplitter(132)", "Delete ImportDeclaration(133)", "Delete QualifiedName: org.apache.phoenix.util.IndexUtil(326)", "Delete ImportDeclaration(327)", "Delete SimpleName: PMetaData(1872)", "Delete SimpleType: PMetaData(1873)", "Delete SimpleName: latestMetaData(1916)", "Delete SimpleName: latestMetaData(1928)", "Delete Assignment: =(1934)", "Delete SimpleName: latestMetaData(1940)", "Delete ReturnStatement(1941)", "Delete SimpleName: PMetaData(1947)", "Delete SimpleType: PMetaData(1948)", "Delete SimpleName: latestMetaData(1963)", "Delete Assignment: =(1969)", "Delete SimpleName: latestMetaData(1975)", "Delete ReturnStatement(1976)", "Delete SimpleName: PMetaData(1984)", "Delete SimpleType: PMetaData(1985)", "Delete SimpleName: metaData(2064)", "Delete Assignment: =(2069)", "Delete SimpleName: metaData(2127)", "Delete Assignment: =(2135)", "Delete SimpleName: PMetaData(2190)", "Delete SimpleType: PMetaData(2191)", "Delete SimpleName: PMetaData(2262)", "Delete SimpleType: PMetaData(2263)", "Delete ReturnStatement(2287)", "Delete SimpleName: metaData(2293)", "Delete ReturnStatement(2294)", "Delete ReturnStatement(2303)", "Delete SimpleName: PMetaData(2309)", "Delete SimpleType: PMetaData(2310)", "Delete SimpleName: latestMetaData(2334)", "Delete Assignment: =(2342)", "Delete SimpleName: latestMetaData(2348)", "Delete ReturnStatement(2349)", "Delete SimpleName: PMetaData(2357)", "Delete SimpleType: PMetaData(2358)", "Delete SimpleName: PMetaData(2401)", "Delete SimpleType: PMetaData(2402)", "Delete ReturnStatement(2419)", "Delete SimpleName: metaData(2425)", "Delete ReturnStatement(2426)", "Delete MethodInvocation(2434)", "Delete ReturnStatement(2435)", "Delete MethodInvocation(2467)", "Delete SimpleName: metadata(2463)", "Delete NullLiteral(2464)", "Delete InfixExpression: ==(2465)", "Delete Block(2469)", "Delete IfStatement(2470)", "Delete SimpleName: metadata(7514)", "Delete NullLiteral(7515)", "Delete InfixExpression: ==(7516)", "Delete Block(7520)", "Delete IfStatement(7521)", "Delete SimpleName: latestMetaDataLock(10554)", "Delete SimpleName: notifyAll(10555)", "Delete MethodInvocation(10556)", "Delete ExpressionStatement(10557)", "Delete SimpleName: latestMetaDataLock(10533)", "Delete SynchronizedStatement(10563)", "Delete Block(10564)", "Delete SimpleName: PMetaData(15766)", "Delete SimpleType: PMetaData(15767)", "Delete SimpleName: latestMetaData(15803)", "Delete SimpleName: latestMetaData(15815)", "Delete Assignment: =(15820)", "Delete SimpleName: latestMetaData(15826)", "Delete ReturnStatement(15827)", "Delete SimpleName: PMetaData(15835)", "Delete SimpleType: PMetaData(15836)", "Delete SimpleName: latestMetaData(15855)", "Delete Assignment: =(15862)", "Delete SimpleName: latestMetaData(15868)", "Delete ReturnStatement(15869)", "Delete SimpleName: PMetaData(17059)", "Delete SimpleType: PMetaData(17060)", "Delete SimpleName: latestMetaData(17068)", "Delete Assignment: =(17073)", "Delete ReturnStatement(17074)", "Delete SimpleName: PMetaData(17080)", "Delete SimpleType: PMetaData(17081)", "Delete SimpleName: latestMetaData(17090)", "Delete Assignment: =(17096)", "Delete ReturnStatement(17097)"]}}, {"ConnectionlessQueryServicesImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 73", "MOV ImportDeclaration to CompilationUnit at 73"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 4", "operations": ["INS SimpleName: clone to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 4", "INS SimpleName: metaData to MethodInvocation at 0"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL Assignment: =", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: metaData", "DEL ReturnStatement", "DEL Assignment: ="]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL SimpleName: metaData", "operations": ["DEL SimpleName: metaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: metaData", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData", "DEL Assignment: ="]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: metaData", "DEL Assignment: ="]}]}}, {"ConnectionlessQueryServicesImpl_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(2905) at 9", "Move ImportDeclaration(137) into CompilationUnit(2905) at 73", "Move ImportDeclaration(139) into CompilationUnit(2905) at 73", "Insert PrimitiveType: void(527) into MethodDeclaration(545) at 2", "Insert PrimitiveType: void(549) into MethodDeclaration(567) at 2", "Insert PrimitiveType: void(571) into MethodDeclaration(638) at 2", "Insert PrimitiveType: void(642) into MethodDeclaration(670) at 2", "Insert PrimitiveType: void(674) into MethodDeclaration(713) at 2", "Insert PrimitiveType: void(2408) into MethodDeclaration(2424) at 2", "Insert PrimitiveType: void(2428) into MethodDeclaration(2453) at 2", "Insert PrimitiveType: void(2729) into MethodDeclaration(2745) at 2", "Insert PrimitiveType: void(2801) into MethodDeclaration(2817) at 2", "Insert ExpressionStatement(543) into Block(544) at 0", "Insert ExpressionStatement(565) into Block(566) at 0", "Insert ExpressionStatement(636) into Block(637) at 0", "Insert ExpressionStatement(668) into Block(669) at 0", "Insert ExpressionStatement(711) into Block(712) at 0", "Insert ExpressionStatement(2422) into Block(2423) at 0", "Insert ExpressionStatement(2451) into Block(2452) at 0", "Insert ExpressionStatement(2743) into Block(2744) at 0", "Insert ExpressionStatement(2815) into Block(2816) at 0", "Move MethodInvocation(544) into ExpressionStatement(543) at 0", "Move MethodInvocation(569) into ExpressionStatement(565) at 0", "Move MethodInvocation(643) into ExpressionStatement(636) at 0", "Move MethodInvocation(678) into ExpressionStatement(668) at 0", "Move MethodInvocation(724) into ExpressionStatement(711) at 0", "Move MethodInvocation(2436) into ExpressionStatement(2422) at 0", "Move MethodInvocation(2468) into ExpressionStatement(2451) at 0", "Move MethodInvocation(2763) into ExpressionStatement(2743) at 0", "Move MethodInvocation(2838) into ExpressionStatement(2815) at 0", "Insert MethodInvocation(737) into ClassInstanceCreation(738) at 4", "Insert SimpleName: metaData(735) into MethodInvocation(737) at 0", "Insert SimpleName: clone(736) into MethodInvocation(737) at 1", "Delete SimpleName: PMetaData(527)", "Delete SimpleType: PMetaData(528)", "Delete SimpleName: metaData(539)", "Delete Assignment: =(545)", "Delete ReturnStatement(546)", "Delete SimpleName: PMetaData(552)", "Delete SimpleType: PMetaData(553)", "Delete SimpleName: metaData(564)", "Delete Assignment: =(570)", "Delete ReturnStatement(571)", "Delete SimpleName: PMetaData(577)", "Delete SimpleType: PMetaData(578)", "Delete SimpleName: metaData(627)", "Delete Assignment: =(644)", "Delete ReturnStatement(645)", "Delete SimpleName: PMetaData(651)", "Delete SimpleType: PMetaData(652)", "Delete SimpleName: metaData(671)", "Delete Assignment: =(679)", "Delete ReturnStatement(680)", "Delete SimpleName: PMetaData(686)", "Delete SimpleType: PMetaData(687)", "Delete SimpleName: metaData(715)", "Delete Assignment: =(725)", "Delete ReturnStatement(726)", "Delete SimpleName: metaData(750)", "Delete SimpleName: PMetaData(2421)", "Delete SimpleType: PMetaData(2422)", "Delete SimpleName: metaData(2430)", "Delete Assignment: =(2437)", "Delete ReturnStatement(2438)", "Delete SimpleName: PMetaData(2444)", "Delete SimpleType: PMetaData(2445)", "Delete SimpleName: metaData(2460)", "Delete Assignment: =(2469)", "Delete ReturnStatement(2470)", "Delete SimpleName: PMetaData(2748)", "Delete SimpleType: PMetaData(2749)", "Delete SimpleName: metaData(2757)", "Delete Assignment: =(2764)", "Delete ReturnStatement(2765)", "Delete SimpleName: PMetaData(2823)", "Delete SimpleType: PMetaData(2824)", "Delete SimpleName: metaData(2833)", "Delete Assignment: =(2839)", "Delete ReturnStatement(2840)"]}}, {"DelegateConnectionQueryServices_cluster": {"actions": [{"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.schema.PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"DelegateConnectionQueryServices_diff": {"operations": ["Insert PrimitiveType: void(156) into MethodDeclaration(175) at 2", "Insert PrimitiveType: void(179) into MethodDeclaration(198) at 2", "Insert PrimitiveType: void(202) into MethodDeclaration(270) at 2", "Insert PrimitiveType: void(274) into MethodDeclaration(303) at 2", "Insert PrimitiveType: void(307) into MethodDeclaration(347) at 2", "Insert PrimitiveType: void(1198) into MethodDeclaration(1213) at 2", "Insert PrimitiveType: void(1217) into MethodDeclaration(1241) at 2", "Insert PrimitiveType: void(1361) into MethodDeclaration(1376) at 2", "Insert PrimitiveType: void(1432) into MethodDeclaration(1449) at 2", "Insert ExpressionStatement(173) into Block(174) at 0", "Insert ExpressionStatement(196) into Block(197) at 0", "Insert ExpressionStatement(268) into Block(269) at 0", "Insert ExpressionStatement(301) into Block(302) at 0", "Insert ExpressionStatement(345) into Block(346) at 0", "Insert ExpressionStatement(1211) into Block(1212) at 0", "Insert ExpressionStatement(1239) into Block(1240) at 0", "Insert ExpressionStatement(1374) into Block(1375) at 0", "Insert ExpressionStatement(1447) into Block(1448) at 0", "Move MethodInvocation(175) into ExpressionStatement(173) at 0", "Move MethodInvocation(199) into ExpressionStatement(196) at 0", "Move MethodInvocation(272) into ExpressionStatement(268) at 0", "Move MethodInvocation(306) into ExpressionStatement(301) at 0", "Move MethodInvocation(351) into ExpressionStatement(345) at 0", "Move MethodInvocation(1218) into ExpressionStatement(1211) at 0", "Move MethodInvocation(1247) into ExpressionStatement(1239) at 0", "Move MethodInvocation(1383) into ExpressionStatement(1374) at 0", "Move MethodInvocation(1457) into ExpressionStatement(1447) at 0", "Delete QualifiedName: org.apache.phoenix.schema.PMetaData(44)", "Delete ImportDeclaration(45)", "Delete SimpleName: PMetaData(158)", "Delete SimpleType: PMetaData(159)", "Delete ReturnStatement(176)", "Delete SimpleName: PMetaData(182)", "Delete SimpleType: PMetaData(183)", "Delete ReturnStatement(200)", "Delete SimpleName: PMetaData(206)", "Delete SimpleType: PMetaData(207)", "Delete ReturnStatement(273)", "Delete SimpleName: PMetaData(279)", "Delete SimpleType: PMetaData(280)", "Delete ReturnStatement(307)", "Delete SimpleName: PMetaData(313)", "Delete SimpleType: PMetaData(314)", "Delete ReturnStatement(352)", "Delete SimpleName: PMetaData(1205)", "Delete SimpleType: PMetaData(1206)", "Delete ReturnStatement(1219)", "Delete SimpleName: PMetaData(1225)", "Delete SimpleType: PMetaData(1226)", "Delete ReturnStatement(1248)", "Delete SimpleName: PMetaData(1370)", "Delete SimpleType: PMetaData(1371)", "Delete ReturnStatement(1384)", "Delete SimpleName: PMetaData(1442)", "Delete SimpleType: PMetaData(1443)", "Delete ReturnStatement(1458)"]}}, {"MetaDataMutated_cluster": {"actions": [{"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 0", "operations": ["INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.schema.PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}]}}, {"MetaDataMutated_diff": {"operations": ["Insert PrimitiveType: void(23) into MethodDeclaration(34) at 0", "Insert PrimitiveType: void(35) into MethodDeclaration(46) at 0", "Insert PrimitiveType: void(47) into MethodDeclaration(66) at 0", "Insert PrimitiveType: void(67) into MethodDeclaration(116) at 0", "Insert PrimitiveType: void(117) into MethodDeclaration(145) at 0", "Insert PrimitiveType: void(146) into MethodDeclaration(154) at 0", "Insert PrimitiveType: void(155) into MethodDeclaration(170) at 0", "Insert PrimitiveType: void(171) into MethodDeclaration(179) at 0", "Insert PrimitiveType: void(180) into MethodDeclaration(189) at 0", "Delete QualifiedName: org.apache.phoenix.schema.PMetaData(12)", "Delete ImportDeclaration(13)", "Delete SimpleName: PMetaData(25)", "Delete SimpleType: PMetaData(26)", "Delete SimpleName: PMetaData(38)", "Delete SimpleType: PMetaData(39)", "Delete SimpleName: PMetaData(51)", "Delete SimpleType: PMetaData(52)", "Delete SimpleName: PMetaData(72)", "Delete SimpleType: PMetaData(73)", "Delete SimpleName: PMetaData(123)", "Delete SimpleType: PMetaData(124)", "Delete SimpleName: PMetaData(153)", "Delete SimpleType: PMetaData(154)", "Delete SimpleName: PMetaData(163)", "Delete SimpleType: PMetaData(164)", "Delete SimpleName: PMetaData(180)", "Delete SimpleType: PMetaData(181)", "Delete SimpleName: PMetaData(190)", "Delete SimpleType: PMetaData(191)"]}}, {"PMetaData_cluster": {"actions": [{"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}]}}, {"PMetaData_diff": {"operations": ["Insert PrimitiveType: void(60) into MethodDeclaration(66) at 1", "Insert PrimitiveType: void(79) into MethodDeclaration(85) at 1", "Delete SimpleName: PMetaData(60)", "Delete SimpleType: PMetaData(61)", "Delete SimpleName: PMetaData(80)", "Delete SimpleType: PMetaData(81)"]}}, {"PMetaDataImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: org.slf4j.Logger to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.slf4j.LoggerFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: com.google.common.annotations.VisibleForTesting to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS TypeLiteral to MethodInvocation at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: Logger to SimpleType: Logger at 0", "INS SimpleName: logger to VariableDeclarationFragment at 0", "INS SimpleName: LoggerFactory to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Logger to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: getLogger to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to MethodDeclaration at 4", "INS SimpleName: getMetaData to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: metaData to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: VisibleForTesting to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: PMetaDataCache to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: metaData to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS IfStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS IfStatement to Block at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: PMetaDataImpl to TypeLiteral at 0"]}, {"root": "INS SimpleName: metaData to Assignment: = at 1", "operations": ["INS SimpleName: metaData to Assignment: = at 1"]}, {"root": "INS ClassInstanceCreation to ClassInstanceCreation at 1", "operations": ["INS ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from tables to metaData", "operations": ["UPD SimpleName: tables from tables to metaData", "UPD SimpleName: newMetaData from newMetaData to metaData", "UPD SimpleName: newMetaData from newMetaData to metaData", "UPD SimpleName: newMetaData from newMetaData to metaData", "UPD SimpleName: tables from tables to metaData", "UPD SimpleName: tables from tables to metaData", "UPD SimpleName: tables from tables to metaData", "UPD SimpleName: clone from clone to metaData", "UPD SimpleName: newMetaData from newMetaData to metaData", "UPD SimpleName: tables from tables to metaData"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ConditionalExpression to Assignment: = at 1"]}, {"root": "INS SimpleName: metaData to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: metaData to VariableDeclarationFragment at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: PMetaDataCache to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: metaData to ConditionalExpression at 1", "operations": ["INS SimpleName: metaData to ConditionalExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from clone.functions to metaData.functions", "operations": ["UPD QualifiedName: clone.functions from clone.functions to metaData.functions"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: metaData", "DEL MethodInvocation", "DEL SimpleName: clone"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: clone", "DEL SimpleName: clone", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: metaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: clone", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: metaData", "DEL SimpleName: clone", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: newMetaData", "DEL VariableDeclarationFragment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: newMetaData", "DEL SimpleName: PMetaDataImpl", "DEL ReturnStatement", "DEL SimpleType: PMetaDataImpl"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: tables", "DEL SimpleType: PMetaDataCache", "DEL NullLiteral", "DEL SimpleName: PMetaDataCache", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: metaData", "DEL SimpleName: clone", "DEL Assignment: =", "DEL SimpleName: tables"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: clone", "DEL Assignment: =", "DEL Block", "DEL SimpleName: metaData", "DEL SimpleName: tables", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: tables", "DEL ExpressionStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: PMetaDataImpl", "DEL SimpleName: tables", "DEL ThisExpression", "DEL SimpleType: PMetaDataImpl", "DEL ConditionalExpression", "DEL ReturnStatement", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: tables", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: metaData", "DEL SimpleName: clone", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: PMetaDataImpl", "DEL SimpleName: tables", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleType: PMetaDataImpl"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL ThisExpression", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: tables", "DEL SimpleName: metaData", "DEL VariableDeclarationStatement", "DEL SimpleName: PMetaDataCache", "DEL MethodInvocation", "DEL SimpleType: PMetaDataCache", "DEL VariableDeclarationFragment", "DEL SimpleName: clone"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleType: PMetaDataImpl", "DEL SimpleName: tables", "DEL ClassInstanceCreation", "DEL SimpleName: PMetaDataImpl"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL IfStatement", "operations": ["DEL ReturnStatement", "DEL IfStatement", "DEL ThisExpression", "DEL Block"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: clone", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: metaData", "DEL SimpleType: PMetaDataCache", "DEL SimpleName: clone", "DEL SimpleName: PMetaDataCache", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: PMetaDataImpl", "DEL SimpleType: PMetaDataImpl", "DEL SimpleName: clone", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleName: PMetaData", "DEL SimpleType: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: PMetaData", "operations": ["DEL SimpleType: PMetaData", "DEL SimpleName: PMetaData"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}]}}, {"PMetaDataImpl_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(2540) at 11", "Insert ImportDeclaration(25) into CompilationUnit(2540) at 12", "Insert ImportDeclaration(27) into CompilationUnit(2540) at 13", "Insert QualifiedName: org.slf4j.Logger(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.slf4j.LoggerFactory(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: com.google.common.annotations.VisibleForTesting(26) into ImportDeclaration(27) at 0", "Insert FieldDeclaration(59) into TypeDeclaration: class(2539) at 4", "Insert MethodDeclaration(1069) into TypeDeclaration: class(2539) at 7", "Insert Modifier: private(46) into FieldDeclaration(59) at 0", "Insert Modifier: static(47) into FieldDeclaration(59) at 1", "Insert Modifier: final(48) into FieldDeclaration(59) at 2", "Insert SimpleType: Logger(50) into FieldDeclaration(59) at 3", "Insert VariableDeclarationFragment(58) into FieldDeclaration(59) at 4", "Insert MarkerAnnotation(1061) into MethodDeclaration(1069) at 0", "Insert Modifier: public(1062) into MethodDeclaration(1069) at 1", "Move SimpleType: PMetaDataCache(1467) into MethodDeclaration(1069) at 2", "Insert SimpleName: getMetaData(1065) into MethodDeclaration(1069) at 3", "Insert Block(1068) into MethodDeclaration(1069) at 4", "Insert PrimitiveType: void(1236) into MethodDeclaration(1257) at 2", "Insert PrimitiveType: void(1261) into MethodDeclaration(1544) at 2", "Insert PrimitiveType: void(1548) into MethodDeclaration(1698) at 2", "Insert PrimitiveType: void(1702) into MethodDeclaration(1935) at 2", "Insert PrimitiveType: void(1939) into MethodDeclaration(2225) at 2", "Insert PrimitiveType: void(2229) into MethodDeclaration(2288) at 2", "Insert PrimitiveType: void(2307) into MethodDeclaration(2328) at 2", "Insert PrimitiveType: void(2332) into MethodDeclaration(2361) at 2", "Insert PrimitiveType: void(2365) into MethodDeclaration(2430) at 2", "Insert PrimitiveType: void(2452) into MethodDeclaration(2473) at 2", "Insert PrimitiveType: void(2514) into MethodDeclaration(2538) at 2", "Insert SimpleName: Logger(49) into SimpleType: Logger(50) at 0", "Insert SimpleName: logger(51) into VariableDeclarationFragment(58) at 0", "Insert MethodInvocation(57) into VariableDeclarationFragment(58) at 1", "Insert SimpleName: VisibleForTesting(1060) into MarkerAnnotation(1061) at 0", "Insert ReturnStatement(1067) into Block(1068) at 0", "Insert ExpressionStatement(1491) into Block(1543) at 9", "Insert ExpressionStatement(1696) into Block(1697) at 6", "Insert IfStatement(2286) into Block(2287) at 2", "Insert IfStatement(2428) into Block(2429) at 2", "Insert SimpleName: LoggerFactory(52) into MethodInvocation(57) at 0", "Insert SimpleName: getLogger(53) into MethodInvocation(57) at 1", "Insert TypeLiteral(56) into MethodInvocation(57) at 2", "Insert SimpleName: metaData(1066) into ReturnStatement(1067) at 0", "Insert Assignment: =(1490) into ExpressionStatement(1491) at 0", "Move MethodInvocation(1692) into ExpressionStatement(1696) at 0", "Insert PrefixExpression: !(2272) into IfStatement(2286) at 0", "Insert Block(2285) into IfStatement(2286) at 1", "Insert PrefixExpression: !(2414) into IfStatement(2428) at 0", "Insert Block(2427) into IfStatement(2428) at 1", "Move SimpleType: PMetaDataImpl(1237) into TypeLiteral(56) at 0", "Insert SimpleName: metaData(1125) into Assignment: =(1126) at 1", "Insert ClassInstanceCreation(1143) into ClassInstanceCreation(1144) at 1", "Update SimpleName: clone(1227) to metaData", "Insert SimpleName: metaData(1480) into Assignment: =(1490) at 0", "Move ConditionalExpression(1479) into Assignment: =(1490) at 1", "Insert SimpleName: metaData(1997) into VariableDeclarationFragment(1998) at 1", "Move MethodInvocation(2313) into PrefixExpression: !(2272) at 0", "Move EnhancedForStatement(2337) into Block(2285) at 0", "Move MethodInvocation(2476) into PrefixExpression: !(2414) at 0", "Move EnhancedForStatement(2500) into Block(2427) at 0", "Move SimpleType: PMetaDataCache(1220) into ClassInstanceCreation(1143) at 0", "Move FieldAccess(1114) into ClassInstanceCreation(1143) at 1", "Insert SimpleName: metaData(1484) into ConditionalExpression(1489) at 1", "Update SimpleName: newMetaData(1485) to metaData", "Update SimpleName: newMetaData(1494) to metaData", "Move MethodInvocation(1508) into MethodInvocation(1511) at 2", "Update SimpleName: newMetaData(1504) to metaData", "Move MethodInvocation(1498) into MethodInvocation(1521) at 2", "Update SimpleName: newMetaData(1522) to metaData", "Update SimpleName: tables(1780) to metaData", "Update SimpleName: tables(1793) to metaData", "Update SimpleName: tables(2331) to metaData", "Update QualifiedName: clone.functions(2494) to metaData.functions", "Update SimpleName: tables(1808) to metaData", "Update SimpleName: tables(1936) to metaData", "Delete Modifier: private(40)", "Delete Modifier: final(1036)", "Delete SimpleName: metaData(1097)", "Delete SimpleName: clone(1098)", "Delete MethodInvocation(1099)", "Delete SimpleName: PMetaData(1207)", "Delete SimpleType: PMetaData(1208)", "Delete SimpleName: clone(1221)", "Delete SimpleName: metaData(1222)", "Delete SimpleName: clone(1223)", "Delete MethodInvocation(1224)", "Delete VariableDeclarationFragment(1225)", "Delete VariableDeclarationStatement(1226)", "Delete SimpleName: clone(1238)", "Delete ClassInstanceCreation(1239)", "Delete ReturnStatement(1240)", "Delete SimpleName: PMetaData(1246)", "Delete SimpleType: PMetaData(1247)", "Delete SimpleName: metaData(1472)", "Delete SimpleName: clone(1473)", "Delete MethodInvocation(1474)", "Delete SimpleName: newMetaData(1468)", "Delete VariableDeclarationFragment(1480)", "Delete VariableDeclarationStatement(1481)", "Delete SimpleName: PMetaDataImpl(1533)", "Delete SimpleType: PMetaDataImpl(1534)", "Delete SimpleName: newMetaData(1535)", "Delete ClassInstanceCreation(1536)", "Delete ReturnStatement(1537)", "Delete SimpleName: PMetaData(1543)", "Delete SimpleType: PMetaData(1544)", "Delete ThisExpression(1609)", "Delete ReturnStatement(1693)", "Delete SimpleName: PMetaData(1699)", "Delete SimpleType: PMetaData(1700)", "Delete SimpleName: PMetaDataCache(1719)", "Delete SimpleType: PMetaDataCache(1720)", "Delete SimpleName: tables(1721)", "Delete NullLiteral(1722)", "Delete VariableDeclarationFragment(1723)", "Delete VariableDeclarationStatement(1724)", "Delete ThisExpression(1766)", "Delete SimpleName: tables(1771)", "Delete SimpleName: metaData(1772)", "Delete SimpleName: clone(1773)", "Delete MethodInvocation(1774)", "Delete Assignment: =(1775)", "Delete ExpressionStatement(1776)", "Delete SimpleName: tables(1925)", "Delete NullLiteral(1926)", "Delete InfixExpression: ==(1927)", "Delete SimpleName: tables(1928)", "Delete SimpleName: metaData(1929)", "Delete SimpleName: clone(1930)", "Delete MethodInvocation(1931)", "Delete Assignment: =(1932)", "Delete ExpressionStatement(1933)", "Delete Block(1934)", "Delete IfStatement(1935)", "Delete SimpleName: tables(1956)", "Delete NullLiteral(1957)", "Delete InfixExpression: ==(1958)", "Delete ThisExpression(1959)", "Delete SimpleName: PMetaDataImpl(1960)", "Delete SimpleType: PMetaDataImpl(1961)", "Delete SimpleName: tables(1962)", "Delete ClassInstanceCreation(1963)", "Delete ConditionalExpression(1964)", "Delete ReturnStatement(1965)", "Delete SimpleName: PMetaData(1971)", "Delete SimpleType: PMetaData(1972)", "Delete ThisExpression(2016)", "Delete SimpleName: metaData(2031)", "Delete SimpleName: clone(2032)", "Delete MethodInvocation(2033)", "Delete SimpleName: PMetaDataImpl(2260)", "Delete SimpleType: PMetaDataImpl(2261)", "Delete SimpleName: tables(2262)", "Delete ClassInstanceCreation(2263)", "Delete ReturnStatement(2264)", "Delete SimpleName: PMetaData(2270)", "Delete SimpleType: PMetaData(2271)", "Delete ThisExpression(2314)", "Delete ReturnStatement(2315)", "Delete Block(2316)", "Delete IfStatement(2317)", "Delete SimpleName: PMetaDataCache(2318)", "Delete SimpleType: PMetaDataCache(2319)", "Delete SimpleName: tables(2320)", "Delete SimpleName: metaData(2321)", "Delete SimpleName: clone(2322)", "Delete MethodInvocation(2323)", "Delete VariableDeclarationFragment(2324)", "Delete VariableDeclarationStatement(2325)", "Delete SimpleName: PMetaDataImpl(2338)", "Delete SimpleType: PMetaDataImpl(2339)", "Delete SimpleName: tables(2340)", "Delete ClassInstanceCreation(2341)", "Delete ReturnStatement(2342)", "Delete SimpleName: PMetaData(2363)", "Delete SimpleType: PMetaData(2364)", "Delete ThisExpression(2384)", "Delete ReturnStatement(2385)", "Delete SimpleName: PMetaData(2391)", "Delete SimpleType: PMetaData(2392)", "Delete ThisExpression(2420)", "Delete ReturnStatement(2421)", "Delete SimpleName: PMetaData(2427)", "Delete SimpleType: PMetaData(2428)", "Delete ThisExpression(2477)", "Delete ReturnStatement(2478)", "Delete Block(2479)", "Delete IfStatement(2480)", "Delete SimpleName: PMetaDataCache(2481)", "Delete SimpleType: PMetaDataCache(2482)", "Delete SimpleName: clone(2483)", "Delete SimpleName: metaData(2484)", "Delete SimpleName: clone(2485)", "Delete MethodInvocation(2486)", "Delete VariableDeclarationFragment(2487)", "Delete VariableDeclarationStatement(2488)", "Delete SimpleName: PMetaDataImpl(2501)", "Delete SimpleType: PMetaDataImpl(2502)", "Delete SimpleName: clone(2503)", "Delete ClassInstanceCreation(2504)", "Delete ReturnStatement(2505)", "Delete SimpleName: PMetaData(2529)", "Delete SimpleType: PMetaData(2530)", "Delete ThisExpression(2550)", "Delete ReturnStatement(2551)", "Delete SimpleName: PMetaData(2594)", "Delete SimpleType: PMetaData(2595)", "Delete ThisExpression(2618)", "Delete ReturnStatement(2619)"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}