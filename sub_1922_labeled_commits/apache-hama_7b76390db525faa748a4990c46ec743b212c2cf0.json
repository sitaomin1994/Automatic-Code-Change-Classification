{"application": "apache-hama", "csha": "7b76390db525faa748a4990c46ec743b212c2cf0", "files": [{"AbstractMessageManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.hadoop.fs.FileSystem to ImportDeclaration at 0"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: Abstract baseclass that should contain all information and services needed to TagElement at 0", "INS TagElement to Javadoc at 0", "INS TextElement: for the concrete RPC subclasses. For example it manages how the queues are to TagElement at 1", "INS TextElement: managed and it maintains a cache for socket addresses. to TagElement at 2"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS TryStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: delete to MethodInvocation at 1", "INS StringLiteral: \"Queue dir couldn't be deleted\" to MethodInvocation at 2", "INS QualifiedName: DiskQueue.DISK_QUEUE_PATH_KEY to MethodInvocation at 2", "INS SimpleName: DiskQueue to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: FileSystem to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS BooleanLiteral: true to MethodInvocation at 3", "INS TryStatement to Block at 3", "INS Block to CatchClause at 1", "INS SimpleName: conf to MethodInvocation at 2", "INS CatchClause to TryStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: getQueueDir to MethodInvocation at 1", "INS SimpleName: attemptId to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS Block to TryStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: conf to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: queueClass to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Creating new \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: debug to MethodInvocation at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: localQueue to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: localQueueForNextIteration to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from  is used. to  is used. If you have scalability issues, then better", "operations": ["UPD TextElement:  is used. from  is used. to  is used. If you have scalability issues, then better"]}, {"root": "INS TextElement: use  to TagElement at 4", "operations": ["INS TextElement: use  to TagElement at 4"]}, {"root": "INS TagElement: @link to TagElement at 5", "operations": ["INS TagElement: @link to TagElement at 5", "INS SimpleName: DiskQueue to TagElement: @link at 0"]}, {"root": "INS TextElement: . to TagElement at 6", "operations": ["INS TextElement: . to TagElement at 6"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from SynchronizedQueue to SingleLockQueue", "operations": ["UPD SimpleName: SynchronizedQueue from SynchronizedQueue to SingleLockQueue"]}, {"root": "UPDATE from clear to getSynchronizedQueue", "operations": ["UPD SimpleName: clear from clear to getSynchronizedQueue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: clear to MethodInvocation at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: attemptId", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: localQueue", "DEL MethodInvocation", "DEL SimpleName: init"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: init", "DEL SimpleName: localQueueForNextIteration", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: attemptId", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: outgoingQueues", "DEL SimpleName: clear", "DEL FieldAccess"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: prepareRead", "DEL MethodInvocation", "DEL SimpleName: localQueueForNextIteration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: localQueue", "DEL SimpleName: prepareWrite"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: addAll", "DEL SimpleName: localQueue", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: localQueueForNextIteration", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: peerName", "DEL SimpleName: msg", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL ExpressionStatement", "DEL SimpleName: debug", "DEL StringLiteral: \") to \"", "DEL SimpleName: toString", "DEL StringLiteral: \"Send message (\"", "DEL MethodInvocation"]}]}}, {"AbstractMessageManager_diff": {"operations": ["Insert ImportDeclaration(38) into CompilationUnit(634) at 11", "Insert QualifiedName: org.apache.hadoop.fs.FileSystem(37) into ImportDeclaration(38) at 0", "Insert Javadoc(55) into TypeDeclaration: class(633) at 0", "Insert TagElement(54) into Javadoc(55) at 0", "Update Modifier: private(63) to protected", "Insert MarkerAnnotation(605) into MethodDeclaration(614) at 0", "Insert MarkerAnnotation(616) into MethodDeclaration(632) at 0", "Insert TextElement: Abstract baseclass that should contain all information and services needed(51) into TagElement(54) at 0", "Insert TextElement: for the concrete RPC subclasses. For example it manages how the queues are(52) into TagElement(54) at 1", "Insert TextElement: managed and it maintains a cache for socket addresses.(53) into TagElement(54) at 2", "Insert TryStatement(309) into Block(310) at 3", "Insert ExpressionStatement(556) into Block(587) at 1", "Insert SimpleName: Override(604) into MarkerAnnotation(605) at 0", "Insert SimpleName: Override(615) into MarkerAnnotation(616) at 0", "Insert Block(297) into TryStatement(309) at 0", "Insert CatchClause(308) into TryStatement(309) at 1", "Insert Assignment: =(386) into ExpressionStatement(387) at 0", "Insert Assignment: =(395) into ExpressionStatement(396) at 0", "Update TextElement:  is used.(520) to  is used. If you have scalability issues, then better", "Insert TextElement: use (521) into TagElement(525) at 4", "Insert TagElement: @link(523) into TagElement(525) at 5", "Insert TextElement: .(524) into TagElement(525) at 6", "Insert MethodInvocation(555) into ExpressionStatement(556) at 0", "Insert ExpressionStatement(296) into Block(297) at 0", "Insert SingleVariableDeclaration(301) into CatchClause(308) at 0", "Insert Block(307) into CatchClause(308) at 1", "Insert SimpleName: localQueue(382) into Assignment: =(386) at 0", "Move MethodInvocation(375) into Assignment: =(386) at 1", "Insert SimpleName: localQueueForNextIteration(392) into Assignment: =(395) at 0", "Insert MethodInvocation(394) into Assignment: =(395) at 1", "Insert SimpleName: DiskQueue(522) into TagElement: @link(523) at 0", "Insert SimpleName: LOG(550) into MethodInvocation(555) at 0", "Insert SimpleName: debug(551) into MethodInvocation(555) at 1", "Insert InfixExpression: +(554) into MethodInvocation(555) at 2", "Update SimpleName: SynchronizedQueue(585) to SingleLockQueue", "Insert MethodInvocation(295) into ExpressionStatement(296) at 0", "Insert SimpleType: IOException(299) into SingleVariableDeclaration(301) at 0", "Insert SimpleName: e(300) into SingleVariableDeclaration(301) at 1", "Insert ExpressionStatement(306) into Block(307) at 0", "Update SimpleName: clear(383) to getSynchronizedQueue", "Move SimpleName: clear(383) into MethodInvocation(394) at 0", "Insert StringLiteral: \"Creating new \"(552) into InfixExpression: +(554) at 0", "Insert SimpleName: queueClass(553) into InfixExpression: +(554) at 1", "Insert MethodInvocation(283) into MethodInvocation(295) at 0", "Insert SimpleName: delete(284) into MethodInvocation(295) at 1", "Insert MethodInvocation(293) into MethodInvocation(295) at 2", "Insert BooleanLiteral: true(294) into MethodInvocation(295) at 3", "Insert SimpleName: IOException(298) into SimpleType: IOException(299) at 0", "Insert MethodInvocation(305) into ExpressionStatement(306) at 0", "Insert SimpleName: FileSystem(280) into MethodInvocation(283) at 0", "Insert SimpleName: get(281) into MethodInvocation(283) at 1", "Insert SimpleName: conf(282) into MethodInvocation(283) at 2", "Insert SimpleName: DiskQueue(285) into MethodInvocation(293) at 0", "Insert SimpleName: getQueueDir(286) into MethodInvocation(293) at 1", "Insert SimpleName: conf(287) into MethodInvocation(293) at 2", "Insert SimpleName: attemptId(288) into MethodInvocation(293) at 3", "Insert MethodInvocation(292) into MethodInvocation(293) at 4", "Insert SimpleName: LOG(302) into MethodInvocation(305) at 0", "Insert SimpleName: warn(303) into MethodInvocation(305) at 1", "Insert StringLiteral: \"Queue dir couldn't be deleted\"(304) into MethodInvocation(305) at 2", "Insert SimpleName: conf(289) into MethodInvocation(292) at 0", "Insert SimpleName: get(290) into MethodInvocation(292) at 1", "Insert QualifiedName: DiskQueue.DISK_QUEUE_PATH_KEY(291) into MethodInvocation(292) at 2", "Delete SimpleName: localQueue(229)", "Delete SimpleName: init(230)", "Delete SimpleName: conf(231)", "Delete SimpleName: attemptId(232)", "Delete MethodInvocation(233)", "Delete ExpressionStatement(234)", "Delete SimpleName: localQueueForNextIteration(240)", "Delete SimpleName: init(241)", "Delete SimpleName: conf(242)", "Delete SimpleName: attemptId(243)", "Delete MethodInvocation(244)", "Delete ExpressionStatement(245)", "Delete ThisExpression(357)", "Delete SimpleName: outgoingQueues(358)", "Delete FieldAccess(359)", "Delete SimpleName: clear(360)", "Delete MethodInvocation(361)", "Delete ExpressionStatement(362)", "Delete SimpleName: localQueueForNextIteration(363)", "Delete SimpleName: prepareRead(364)", "Delete MethodInvocation(365)", "Delete ExpressionStatement(366)", "Delete SimpleName: localQueue(367)", "Delete SimpleName: prepareWrite(368)", "Delete MethodInvocation(369)", "Delete SimpleName: localQueue(371)", "Delete SimpleName: addAll(372)", "Delete MethodInvocation(376)", "Delete ExpressionStatement(377)", "Delete SimpleName: localQueueForNextIteration(382)", "Delete MethodInvocation(384)", "Delete SimpleName: LOG(403)", "Delete SimpleName: debug(404)", "Delete StringLiteral: \"Send message (\"(405)", "Delete SimpleName: msg(406)", "Delete SimpleName: toString(407)", "Delete MethodInvocation(408)", "Delete StringLiteral: \") to \"(409)", "Delete SimpleName: peerName(410)", "Delete InfixExpression: +(411)", "Delete MethodInvocation(412)", "Delete ExpressionStatement(413)"]}}, {"AvroBSPMessageBundle_cluster": {"actions": [{"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: java.nio.ByteBuffer", "DEL SimpleType: java.nio.ByteBuffer", "DEL CastExpression"]}]}}, {"AvroBSPMessageBundle_diff": {"operations": ["Insert MarkerAnnotation(60) into MethodDeclaration(69) at 0", "Insert MarkerAnnotation(71) into MethodDeclaration(93) at 0", "Insert MarkerAnnotation(95) into MethodDeclaration(126) at 0", "Insert SimpleName: Override(59) into MarkerAnnotation(60) at 0", "Insert SimpleName: Override(70) into MarkerAnnotation(71) at 0", "Insert SimpleName: Override(94) into MarkerAnnotation(95) at 0", "Insert Modifier: static(305) into MethodDeclaration(344) at 2", "Move MethodInvocation(286) into Assignment: =(291) at 1", "Delete QualifiedName: java.nio.ByteBuffer(282)", "Delete SimpleType: java.nio.ByteBuffer(283)", "Delete CastExpression(287)"]}}, {"AvroMessageManagerImpl_cluster": {"actions": [{"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: Sender", "DEL CastExpression", "DEL SimpleName: Sender", "DEL SimpleName: M", "DEL ParameterizedType: Sender<M>", "DEL SimpleType: M"]}]}}, {"AvroMessageManagerImpl_diff": {"operations": ["Move MethodInvocation(309) into Assignment: =(305) at 1", "Delete SimpleName: Sender(298)", "Delete SimpleType: Sender(299)", "Delete SimpleName: M(300)", "Delete SimpleType: M(301)", "Delete ParameterizedType: Sender<M>(302)", "Delete CastExpression(310)"]}}, {"DiskQueue_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 7", "MOV FieldDeclaration to TypeDeclaration: class at 14"]}, {"root": "UPDATE from org.apache.hadoop.io.NullWritable to org.apache.hadoop.fs.FSDataInputStream", "operations": ["UPD QualifiedName: org.apache.hadoop.io.NullWritable from org.apache.hadoop.io.NullWritable to org.apache.hadoop.fs.FSDataInputStream"]}, {"root": "UPDATE from org.apache.hadoop.io.SequenceFile to org.apache.hadoop.fs.FSDataOutputStream", "operations": ["UPD QualifiedName: org.apache.hadoop.io.SequenceFile from org.apache.hadoop.io.SequenceFile to org.apache.hadoop.fs.FSDataOutputStream"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS SimpleType: TaskAttemptID to SingleVariableDeclaration at 0", "INS SimpleName: id to SingleVariableDeclaration at 1", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: queueDir to ReturnStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS SimpleType: Path to MethodDeclaration at 3", "INS Block to MethodDeclaration at 8", "INS SimpleName: queueDir to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TagElement to Javadoc at 0", "INS SimpleName: getQueueDir to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: conf to SingleVariableDeclaration at 1", "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS TextElement: Creates a path for a queue to TagElement at 0", "INS SimpleName: TaskAttemptID to SimpleType: TaskAttemptID at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleName: configuredQueueDir to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS Modifier: static to FieldDeclaration at 1", "operations": ["INS Modifier: static to FieldDeclaration at 1"]}, {"root": "UPDATE from NullWritable to FSDataOutputStream", "operations": ["UPD SimpleName: NullWritable from NullWritable to FSDataOutputStream", "UPD SimpleType: NullWritable from NullWritable to FSDataOutputStream"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "UPDATE from SequenceFile.Writer to FSDataInputStream", "operations": ["UPD SimpleType: SequenceFile.Writer from SequenceFile.Writer to FSDataInputStream"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from A disk based queue that is backed by a sequencefile. <br/> to A disk based queue that is backed by a raw file on local disk. <br/>", "operations": ["UPD TextElement: A disk based queue that is backed by a sequencefile. <br/> from A disk based queue that is backed by a sequencefile. <br/> to A disk based queue that is backed by a raw file on local disk. <br/>"]}, {"root": "INS TextElement: It is recommended to use the file:// scheme in front of the property, because to TagElement at 7", "operations": ["INS TextElement: It is recommended to use the file:// scheme in front of the property, because to TagElement at 7"]}, {"root": "INS TextElement: writes on DFS are expensive, however your local disk may not have enough to TagElement at 8", "operations": ["INS TextElement: writes on DFS are expensive, however your local disk may not have enough to TagElement at 8"]}, {"root": "INS TextElement: space for your message, so you can easily switch per job via your to TagElement at 9", "operations": ["INS TextElement: space for your message, so you can easily switch per job via your to TagElement at 9"]}, {"root": "INS TextElement: configuration. <br/> to TagElement at 10", "operations": ["INS TextElement: configuration. <br/> to TagElement at 10"]}, {"root": "UPDATE from <b>This is currently not intended to be production ready</b> to <b>It is experimental to use.</b>", "operations": ["UPD TextElement: <b>This is currently not intended to be production ready</b> from <b>This is currently not intended to be production ready</b> to <b>It is experimental to use.</b>"]}, {"root": "INS SimpleName: FSDataInputStream to SimpleType: SequenceFile.Writer at 0", "operations": ["INS SimpleName: FSDataInputStream to SimpleType: SequenceFile.Writer at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: size to InfixExpression: == at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: configuredQueueDir to MethodInvocation at 3", "INS SimpleName: id to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: queueDir to Assignment: = at 0", "INS SimpleName: getQueueDir to MethodInvocation at 0", "INS SimpleName: conf to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to TryStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: writer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: flush to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: open to MethodInvocation at 1", "INS SimpleName: fs to MethodInvocation at 0", "INS SimpleName: queuePath to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: fs to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: queuePath to MethodInvocation at 2"]}, {"root": "UPDATE from writer to write", "operations": ["UPD SimpleName: writer from writer to write"]}, {"root": "UPDATE from append to writer", "operations": ["UPD SimpleName: append from append to writer"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS InfixExpression: > to IfStatement at 0", "operations": ["INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: size to InfixExpression: > at 0", "INS InfixExpression: > to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: flush to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: writer to MethodInvocation at 0"]}, {"root": "UPDATE from reader to writable", "operations": ["UPD SimpleName: reader from reader to writable"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: reader to MethodInvocation at 0", "MOV SimpleName: writable to MethodInvocation at 2", "MOV SimpleName: next to MethodInvocation at 1"]}, {"root": "UPDATE from next to readFields", "operations": ["UPD SimpleName: next from next to readFields"]}, {"root": "UPDATE from writable to reader", "operations": ["UPD SimpleName: writable from writable to reader"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS CastExpression to ReturnStatement at 0", "INS SimpleName: M to SimpleType: M at 0", "INS SimpleName: writable to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS SimpleType: M to CastExpression at 0", "INS MethodInvocation to CastExpression at 1"]}, {"root": "UPDATE from false to true", "operations": ["UPD BooleanLiteral: false from false to true"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL SimpleName: NullWritable", "DEL SimpleName: NULL_WRITABLE", "DEL MethodInvocation", "DEL SimpleName: get", "DEL VariableDeclarationFragment"]}, {"root": "DEL QualifiedName: SequenceFile.Writer", "operations": ["DEL QualifiedName: SequenceFile.Writer"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: SequenceFile.Reader", "DEL Modifier: private", "DEL FieldDeclaration", "DEL QualifiedName: SequenceFile.Reader"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL QualifiedName: SequenceFile.Reader", "DEL SimpleName: fs", "DEL SimpleName: conf", "DEL SimpleName: queuePath", "DEL SimpleType: SequenceFile.Reader"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: fs", "DEL SimpleType: NullWritable", "DEL SimpleType: ObjectWritable", "DEL TypeLiteral", "DEL SimpleName: conf", "DEL SimpleName: queuePath", "DEL SimpleName: ObjectWritable", "DEL QualifiedName: SequenceFile.Writer", "DEL TypeLiteral", "DEL SimpleType: SequenceFile.Writer", "DEL SimpleName: NullWritable"]}, {"root": "DEL SimpleName: NULL_WRITABLE", "operations": ["DEL SimpleName: NULL_WRITABLE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: NULL_WRITABLE", "DEL SimpleName: next", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: next", "operations": ["DEL SimpleName: next"]}]}}, {"DiskQueue_diff": {"operations": ["Move ImportDeclaration(34) into CompilationUnit(925) at 7", "Move ImportDeclaration(38) into CompilationUnit(925) at 8", "Move FieldDeclaration(102) into TypeDeclaration: class(924) at 7", "Move FieldDeclaration(113) into TypeDeclaration: class(924) at 14", "Update QualifiedName: org.apache.hadoop.io.NullWritable(33) to org.apache.hadoop.fs.FSDataInputStream", "Update QualifiedName: org.apache.hadoop.io.SequenceFile(37) to org.apache.hadoop.fs.FSDataOutputStream", "Insert MethodDeclaration(881) into TypeDeclaration: class(924) at 33", "Insert Modifier: static(87) into FieldDeclaration(99) at 1", "Update SimpleType: NullWritable(107) to FSDataOutputStream", "Move VariableDeclarationFragment(136) into FieldDeclaration(131) at 4", "Update SimpleType: SequenceFile.Writer(134) to FSDataInputStream", "Move VariableDeclarationFragment(142) into FieldDeclaration(137) at 2", "Move MarkerAnnotation(504) into MethodDeclaration(468) at 0", "Move MarkerAnnotation(466) into MethodDeclaration(500) at 0", "Insert Javadoc(813) into MethodDeclaration(881) at 0", "Insert Modifier: public(814) into MethodDeclaration(881) at 1", "Insert Modifier: static(815) into MethodDeclaration(881) at 2", "Insert SimpleType: Path(817) into MethodDeclaration(881) at 3", "Insert SimpleName: getQueueDir(818) into MethodDeclaration(881) at 4", "Insert SingleVariableDeclaration(822) into MethodDeclaration(881) at 5", "Insert SingleVariableDeclaration(826) into MethodDeclaration(881) at 6", "Insert SingleVariableDeclaration(830) into MethodDeclaration(881) at 7", "Insert Block(880) into MethodDeclaration(881) at 8", "Update Modifier: public(849) to private", "Update TextElement: A disk based queue that is backed by a sequencefile. <br/>(43) to A disk based queue that is backed by a raw file on local disk. <br/>", "Insert TextElement: It is recommended to use the file:// scheme in front of the property, because(50) into TagElement(55) at 7", "Insert TextElement: writes on DFS are expensive, however your local disk may not have enough(51) into TagElement(55) at 8", "Insert TextElement: space for your message, so you can easily switch per job via your(52) into TagElement(55) at 9", "Insert TextElement: configuration. <br/>(53) into TagElement(55) at 10", "Update TextElement: <b>This is currently not intended to be production ready</b>(50) to <b>It is experimental to use.</b>", "Update SimpleName: NullWritable(106) to FSDataOutputStream", "Insert SimpleName: FSDataInputStream(133) into SimpleType: FSDataInputStream(134) at 0", "Insert IfStatement(634) into Block(705) at 0", "Insert TagElement(812) into Javadoc(813) at 0", "Insert SimpleName: Path(816) into SimpleType: Path(817) at 0", "Insert SimpleType: Configuration(820) into SingleVariableDeclaration(822) at 0", "Insert SimpleName: conf(821) into SingleVariableDeclaration(822) at 1", "Insert SimpleType: TaskAttemptID(824) into SingleVariableDeclaration(826) at 0", "Insert SimpleName: id(825) into SingleVariableDeclaration(826) at 1", "Insert SimpleType: String(828) into SingleVariableDeclaration(830) at 0", "Insert SimpleName: configuredQueueDir(829) into SingleVariableDeclaration(830) at 1", "Insert VariableDeclarationStatement(835) into Block(880) at 0", "Move IfStatement(253) into Block(880) at 1", "Insert ReturnStatement(879) into Block(880) at 2", "Move CatchClause(539) into TryStatement(466) at 1", "Move CatchClause(499) into TryStatement(498) at 1", "Insert InfixExpression: ==(630) into IfStatement(634) at 0", "Insert Block(633) into IfStatement(634) at 1", "Insert TextElement: Creates a path for a queue(811) into TagElement(812) at 0", "Insert SimpleName: Configuration(819) into SimpleType: Configuration(820) at 0", "Insert SimpleName: TaskAttemptID(823) into SimpleType: TaskAttemptID(824) at 0", "Insert SimpleName: String(827) into SimpleType: String(828) at 0", "Insert SimpleType: Path(832) into VariableDeclarationStatement(835) at 0", "Insert VariableDeclarationFragment(834) into VariableDeclarationStatement(835) at 1", "Insert SimpleName: queueDir(878) into ReturnStatement(879) at 0", "Insert ExpressionStatement(213) into Block(234) at 3", "Insert SimpleName: size(628) into InfixExpression: ==(630) at 0", "Insert NumberLiteral: 0(629) into InfixExpression: ==(630) at 1", "Move ReturnStatement(705) into Block(633) at 0", "Insert SimpleName: Path(831) into SimpleType: Path(832) at 0", "Insert SimpleName: queueDir(833) into VariableDeclarationFragment(834) at 0", "Insert Assignment: =(212) into ExpressionStatement(213) at 0", "Move InfixExpression: !=(384) into IfStatement(307) at 0", "Move Block(393) into IfStatement(307) at 1", "Move InfixExpression: !=(333) into IfStatement(375) at 0", "Move ClassInstanceCreation(621) into MethodInvocation(580) at 0", "Insert SimpleName: queueDir(206) into Assignment: =(212) at 0", "Insert MethodInvocation(211) into Assignment: =(212) at 1", "Insert ExpressionStatement(297) into Block(306) at 0", "Insert MethodInvocation(446) into Assignment: =(447) at 1", "Insert MethodInvocation(478) into Assignment: =(479) at 1", "Update SimpleName: writer(616) to write", "Update SimpleName: append(617) to writer", "Insert ExpressionStatement(650) into Block(675) at 0", "Insert SimpleName: getQueueDir(207) into MethodInvocation(211) at 0", "Insert SimpleName: conf(208) into MethodInvocation(211) at 1", "Insert SimpleName: id(209) into MethodInvocation(211) at 2", "Insert SimpleName: configuredQueueDir(210) into MethodInvocation(211) at 3", "Insert MethodInvocation(296) into ExpressionStatement(297) at 0", "Move Block(342) into TryStatement(373) at 0", "Insert SimpleName: fs(443) into MethodInvocation(446) at 0", "Insert SimpleName: open(444) into MethodInvocation(446) at 1", "Insert SimpleName: queuePath(445) into MethodInvocation(446) at 2", "Insert SimpleName: fs(475) into MethodInvocation(478) at 0", "Insert SimpleName: create(476) into MethodInvocation(478) at 1", "Insert SimpleName: queuePath(477) into MethodInvocation(478) at 2", "Insert MethodInvocation(649) into ExpressionStatement(650) at 0", "Insert InfixExpression: >(653) into IfStatement(674) at 0", "Insert SimpleName: writer(294) into MethodInvocation(296) at 0", "Insert SimpleName: flush(295) into MethodInvocation(296) at 1", "Insert ExpressionStatement(352) into Block(361) at 0", "Update SimpleName: reader(684) to writable", "Move SimpleName: reader(684) into MethodInvocation(649) at 0", "Update SimpleName: next(685) to readFields", "Move SimpleName: next(685) into MethodInvocation(649) at 1", "Update SimpleName: writable(686) to reader", "Move SimpleName: writable(686) into MethodInvocation(649) at 2", "Insert SimpleName: size(651) into InfixExpression: >(653) at 0", "Insert NumberLiteral: 0(652) into InfixExpression: >(653) at 1", "Insert ReturnStatement(672) into Block(673) at 1", "Insert MethodInvocation(351) into ExpressionStatement(352) at 0", "Insert CastExpression(671) into ReturnStatement(672) at 0", "Insert SimpleName: writer(349) into MethodInvocation(351) at 0", "Insert SimpleName: flush(350) into MethodInvocation(351) at 1", "Update BooleanLiteral: false(701) to true", "Insert SimpleType: M(667) into CastExpression(671) at 0", "Insert MethodInvocation(670) into CastExpression(671) at 1", "Insert SimpleName: M(666) into SimpleType: M(667) at 0", "Insert SimpleName: writable(668) into MethodInvocation(670) at 0", "Insert SimpleName: get(669) into MethodInvocation(670) at 1", "Delete Modifier: static(104)", "Delete Modifier: final(105)", "Delete SimpleName: NULL_WRITABLE(108)", "Delete SimpleName: NullWritable(109)", "Delete SimpleName: get(110)", "Delete MethodInvocation(111)", "Delete VariableDeclarationFragment(112)", "Delete QualifiedName: SequenceFile.Writer(133)", "Delete Modifier: private(138)", "Delete QualifiedName: SequenceFile.Reader(139)", "Delete SimpleType: SequenceFile.Reader(140)", "Delete FieldDeclaration(143)", "Delete QualifiedName: SequenceFile.Reader(475)", "Delete SimpleType: SequenceFile.Reader(476)", "Delete SimpleName: fs(477)", "Delete SimpleName: queuePath(478)", "Delete SimpleName: conf(479)", "Delete ClassInstanceCreation(480)", "Delete QualifiedName: SequenceFile.Writer(509)", "Delete SimpleType: SequenceFile.Writer(510)", "Delete SimpleName: fs(511)", "Delete SimpleName: conf(512)", "Delete SimpleName: queuePath(513)", "Delete SimpleName: ObjectWritable(514)", "Delete SimpleType: ObjectWritable(515)", "Delete TypeLiteral(516)", "Delete SimpleName: NullWritable(517)", "Delete SimpleType: NullWritable(518)", "Delete TypeLiteral(519)", "Delete ClassInstanceCreation(520)", "Delete SimpleName: NULL_WRITABLE(622)", "Delete PrimitiveType: boolean(682)", "Delete SimpleName: next(683)", "Delete SimpleName: NULL_WRITABLE(687)", "Delete MethodInvocation(688)", "Delete VariableDeclarationFragment(689)", "Delete VariableDeclarationStatement(690)", "Delete SimpleName: next(691)"]}}, {"HadoopMessageManagerImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.hama.ipc.HamaRPCProtocolVersion to ImportDeclaration at 0"]}, {"root": "UPDATE from HadoopMessageManager.versionID to HamaRPCProtocolVersion.versionID", "operations": ["UPD QualifiedName: HadoopMessageManager.versionID from HadoopMessageManager.versionID to HamaRPCProtocolVersion.versionID"]}]}}, {"HadoopMessageManagerImpl_diff": {"operations": ["Insert ImportDeclaration(46) into CompilationUnit(523) at 15", "Insert QualifiedName: org.apache.hama.ipc.HamaRPCProtocolVersion(45) into ImportDeclaration(46) at 0", "Update QualifiedName: HadoopMessageManager.versionID(382) to HamaRPCProtocolVersion.versionID"]}}, {"SynchronizedQueue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.hadoop.conf.Configurable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from class to interface", "operations": ["UPD TypeDeclaration: class from class to interface"]}, {"root": "INS SimpleType: Configurable to TypeDeclaration: class at 5", "operations": ["INS SimpleType: Configurable to TypeDeclaration: class at 5"]}, {"root": "UPDATE from Configuration to Configurable", "operations": ["UPD SimpleName: Configuration from Configuration to Configurable"]}, {"root": "MOVE from SimpleType: Configurable", "operations": ["MOV SimpleName: Configuration to SimpleType: Configurable at 0"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Iterator<T> to MethodDeclaration at 2"]}, {"root": "INS SimpleName: iterator to MethodDeclaration at 3", "operations": ["INS SimpleName: iterator to MethodDeclaration at 3"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Object to MethodDeclaration at 2"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "UPDATE from static to abstract", "operations": ["UPD Modifier: static from static to abstract"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: MessageQueue<T> to MethodDeclaration at 2"]}, {"root": "INS SimpleName: getMessageQueue to MethodDeclaration at 3", "operations": ["INS SimpleName: getMessageQueue to MethodDeclaration at 3"]}, {"root": "UPDATE from A global mutex based synchronized queue. to Synchronized Queue interface. Can be used to implement better synchronized", "operations": ["UPD TextElement: A global mutex based synchronized queue. from A global mutex based synchronized queue. to Synchronized Queue interface. Can be used to implement better synchronized"]}, {"root": "INS TextElement: datastructures. to TagElement at 1", "operations": ["INS TextElement: datastructures. to TagElement at 1"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleName: queue"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: mutex"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL ParameterizedType: MessageQueue<T>", "DEL Assignment: =", "DEL SimpleName: queue", "DEL MethodDeclaration", "DEL SimpleName: MessageQueue", "DEL SimpleType: Object", "DEL SimpleName: T", "DEL SimpleName: Object", "DEL SimpleName: SynchronizedQueue", "DEL Assignment: =", "DEL FieldAccess", "DEL Block", "DEL SimpleName: queue", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: T", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleType: MessageQueue", "DEL ClassInstanceCreation", "DEL SimpleName: mutex", "DEL SimpleName: queue", "DEL ThisExpression", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleName: queue", "DEL SingleVariableDeclaration", "DEL SimpleName: queue", "DEL SimpleName: Object", "DEL Assignment: =", "DEL SimpleType: T", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: mutex", "DEL ExpressionStatement", "DEL SimpleName: mutex", "DEL SimpleName: queue", "DEL ThisExpression", "DEL SimpleType: MessageQueue", "DEL SimpleName: SynchronizedQueue", "DEL SimpleType: Object", "DEL FieldAccess", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: mutex", "DEL Block", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL ParameterizedType: MessageQueue<T>", "DEL SimpleName: T", "DEL SimpleName: MessageQueue"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleName: iterator", "DEL Modifier: public", "DEL SimpleName: iterator", "DEL SimpleName: mutex", "DEL MethodDeclaration", "DEL Block", "DEL SynchronizedStatement", "DEL SimpleName: queue", "DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: conf", "DEL PrimitiveType: void", "DEL SimpleType: Configuration", "DEL Block", "DEL SimpleName: mutex", "DEL SingleVariableDeclaration", "DEL SimpleName: queue", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: setConf", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: setConf", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL SynchronizedStatement"]}, {"root": "DEL SimpleType: Configuration", "operations": ["DEL SimpleName: Configuration", "DEL SimpleType: Configuration"]}, {"root": "DEL SimpleName: getConf", "operations": ["DEL SimpleName: getConf"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: mutex", "DEL SimpleName: getConf", "DEL SynchronizedStatement", "DEL Block", "DEL SimpleName: queue", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL Block", "operations": ["DEL SynchronizedStatement", "DEL SimpleName: queue", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: init", "DEL MethodInvocation", "DEL SimpleName: id", "DEL SimpleName: mutex", "DEL Block", "DEL SimpleName: conf"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: mutex", "DEL SimpleName: close", "DEL SynchronizedStatement", "DEL SimpleName: queue"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: mutex", "DEL Block", "DEL SynchronizedStatement", "DEL MethodInvocation", "DEL SimpleName: prepareRead", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: queue"]}, {"root": "DEL Block", "operations": ["DEL SynchronizedStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: queue", "DEL SimpleName: col", "DEL SimpleName: mutex", "DEL Block", "DEL SimpleName: addAll", "DEL Block"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: mutex", "DEL SimpleName: item", "DEL SynchronizedStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: queue", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL Block"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: mutex", "DEL SynchronizedStatement", "DEL MethodInvocation", "DEL SimpleName: queue", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: clear", "DEL Block"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: queue", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL SimpleName: poll", "DEL SynchronizedStatement", "DEL ReturnStatement", "DEL SimpleName: mutex"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL SimpleName: size", "DEL SynchronizedStatement", "DEL SimpleName: mutex", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: queue", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: T", "DEL ReturnStatement", "DEL SimpleType: MessageQueue", "DEL Block", "DEL SimpleName: getMessageQueue", "DEL Modifier: public", "DEL SynchronizedStatement", "DEL SimpleName: MessageQueue", "DEL Block", "DEL SimpleName: queue", "DEL SimpleName: mutex", "DEL ParameterizedType: MessageQueue<T>", "DEL SimpleType: T"]}, {"root": "DEL TypeParameter", "operations": ["DEL SimpleName: T", "DEL TypeParameter"]}, {"root": "DEL ParameterizedType: SynchronizedQueue<T>", "operations": ["DEL SimpleName: SynchronizedQueue", "DEL SimpleName: T", "DEL SimpleType: SynchronizedQueue", "DEL SimpleType: T", "DEL ParameterizedType: SynchronizedQueue<T>"]}, {"root": "DEL SimpleName: synchronize", "operations": ["DEL SimpleName: synchronize"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: T", "DEL SimpleType: MessageQueue", "DEL SimpleName: MessageQueue", "DEL SingleVariableDeclaration", "DEL SimpleName: queue", "DEL ParameterizedType: MessageQueue<T>", "DEL SimpleType: T"]}, {"root": "DEL Block", "operations": ["DEL ParameterizedType: SynchronizedQueue<T>", "DEL ReturnStatement", "DEL SimpleName: T", "DEL SimpleType: T", "DEL SimpleName: queue", "DEL Block", "DEL SimpleType: SynchronizedQueue", "DEL ClassInstanceCreation", "DEL SimpleName: SynchronizedQueue"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: synchronize", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL SimpleName: T", "DEL Modifier: public", "DEL SimpleType: SynchronizedQueue", "DEL SimpleName: SynchronizedQueue", "DEL SimpleType: MessageQueue", "DEL SimpleName: queue", "DEL MethodDeclaration", "DEL ParameterizedType: SynchronizedQueue<T>", "DEL SimpleName: T", "DEL SimpleName: SynchronizedQueue", "DEL SimpleName: queue", "DEL SimpleName: T", "DEL SimpleName: mutex", "DEL SimpleType: T", "DEL ReturnStatement", "DEL SimpleName: MessageQueue", "DEL ClassInstanceCreation", "DEL SimpleName: mutex", "DEL ParameterizedType: MessageQueue<T>", "DEL SingleVariableDeclaration", "DEL SimpleType: T", "DEL SimpleType: SynchronizedQueue", "DEL Block", "DEL SimpleType: T", "DEL TypeParameter", "DEL ParameterizedType: SynchronizedQueue<T>", "DEL SimpleName: T", "DEL SimpleType: Object"]}]}}, {"SynchronizedQueue_diff": {"operations": ["Insert ImportDeclaration(22) into CompilationUnit(116) at 3", "Update TypeDeclaration: class(341) to interface", "Insert QualifiedName: org.apache.hadoop.conf.Configurable(21) into ImportDeclaration(22) at 0", "Insert SimpleType: Configurable(36) into TypeDeclaration: interface(115) at 4", "Update SimpleName: Configuration(121) to Configurable", "Move SimpleName: Configuration(121) into SimpleType: Configurable(36) at 0", "Insert Modifier: abstract(38) into MethodDeclaration(45) at 1", "Move ParameterizedType: Iterator<T>(107) into MethodDeclaration(45) at 2", "Insert SimpleName: iterator(44) into MethodDeclaration(45) at 3", "Insert Modifier: abstract(47) into MethodDeclaration(58) at 1", "Insert Modifier: abstract(60) into MethodDeclaration(63) at 1", "Insert Modifier: abstract(65) into MethodDeclaration(68) at 1", "Insert Modifier: abstract(70) into MethodDeclaration(80) at 1", "Insert Modifier: abstract(82) into MethodDeclaration(89) at 1", "Insert Modifier: abstract(91) into MethodDeclaration(94) at 1", "Insert Modifier: abstract(96) into MethodDeclaration(100) at 1", "Move SimpleType: Object(46) into MethodDeclaration(100) at 2", "Insert Modifier: abstract(102) into MethodDeclaration(105) at 1", "Update Modifier: static(283) to abstract", "Move ParameterizedType: MessageQueue<T>(39) into MethodDeclaration(114) at 2", "Insert SimpleName: getMessageQueue(113) into MethodDeclaration(114) at 3", "Update TextElement: A global mutex based synchronized queue.(25) to Synchronized Queue interface. Can be used to implement better synchronized", "Insert TextElement: datastructures.(28) into TagElement(29) at 1", "Delete Modifier: final(29)", "Delete Modifier: private(33)", "Delete Modifier: final(34)", "Delete SimpleName: queue(40)", "Delete VariableDeclarationFragment(41)", "Delete FieldDeclaration(42)", "Delete Modifier: private(43)", "Delete Modifier: final(44)", "Delete SimpleName: mutex(47)", "Delete VariableDeclarationFragment(48)", "Delete FieldDeclaration(49)", "Delete Modifier: private(50)", "Delete SimpleName: SynchronizedQueue(51)", "Delete SimpleName: MessageQueue(52)", "Delete SimpleType: MessageQueue(53)", "Delete SimpleName: T(54)", "Delete SimpleType: T(55)", "Delete ParameterizedType: MessageQueue<T>(56)", "Delete SimpleName: queue(57)", "Delete SingleVariableDeclaration(58)", "Delete ThisExpression(59)", "Delete SimpleName: queue(60)", "Delete FieldAccess(61)", "Delete SimpleName: queue(62)", "Delete Assignment: =(63)", "Delete ExpressionStatement(64)", "Delete ThisExpression(65)", "Delete SimpleName: mutex(66)", "Delete FieldAccess(67)", "Delete SimpleName: Object(68)", "Delete SimpleType: Object(69)", "Delete ClassInstanceCreation(70)", "Delete Assignment: =(71)", "Delete ExpressionStatement(72)", "Delete Block(73)", "Delete MethodDeclaration(74)", "Delete Modifier: private(75)", "Delete SimpleName: SynchronizedQueue(76)", "Delete SimpleName: MessageQueue(77)", "Delete SimpleType: MessageQueue(78)", "Delete SimpleName: T(79)", "Delete SimpleType: T(80)", "Delete ParameterizedType: MessageQueue<T>(81)", "Delete SimpleName: queue(82)", "Delete SingleVariableDeclaration(83)", "Delete SimpleName: Object(84)", "Delete SimpleType: Object(85)", "Delete SimpleName: mutex(86)", "Delete SingleVariableDeclaration(87)", "Delete ThisExpression(88)", "Delete SimpleName: queue(89)", "Delete FieldAccess(90)", "Delete SimpleName: queue(91)", "Delete Assignment: =(92)", "Delete ExpressionStatement(93)", "Delete ThisExpression(94)", "Delete SimpleName: mutex(95)", "Delete FieldAccess(96)", "Delete SimpleName: mutex(97)", "Delete Assignment: =(98)", "Delete ExpressionStatement(99)", "Delete Block(100)", "Delete MethodDeclaration(101)", "Delete Modifier: public(102)", "Delete SimpleName: iterator(108)", "Delete SimpleName: mutex(109)", "Delete SimpleName: queue(110)", "Delete SimpleName: iterator(111)", "Delete MethodInvocation(112)", "Delete ReturnStatement(113)", "Delete Block(114)", "Delete SynchronizedStatement(115)", "Delete Block(116)", "Delete MethodDeclaration(117)", "Delete Modifier: public(118)", "Delete PrimitiveType: void(119)", "Delete SimpleName: setConf(120)", "Delete SimpleType: Configuration(122)", "Delete SimpleName: conf(123)", "Delete SingleVariableDeclaration(124)", "Delete SimpleName: mutex(125)", "Delete SimpleName: queue(126)", "Delete SimpleName: setConf(127)", "Delete SimpleName: conf(128)", "Delete MethodInvocation(129)", "Delete ExpressionStatement(130)", "Delete Block(131)", "Delete SynchronizedStatement(132)", "Delete Block(133)", "Delete MethodDeclaration(134)", "Delete SimpleName: Configuration(136)", "Delete SimpleType: Configuration(137)", "Delete SimpleName: getConf(138)", "Delete SimpleName: mutex(139)", "Delete SimpleName: queue(140)", "Delete SimpleName: getConf(141)", "Delete MethodInvocation(142)", "Delete ReturnStatement(143)", "Delete Block(144)", "Delete SynchronizedStatement(145)", "Delete Block(146)", "Delete SimpleName: mutex(159)", "Delete SimpleName: queue(160)", "Delete SimpleName: init(161)", "Delete SimpleName: conf(162)", "Delete SimpleName: id(163)", "Delete MethodInvocation(164)", "Delete ExpressionStatement(165)", "Delete Block(166)", "Delete SynchronizedStatement(167)", "Delete Block(168)", "Delete SimpleName: mutex(173)", "Delete Block(174)", "Delete SynchronizedStatement(175)", "Delete SimpleName: queue(176)", "Delete SimpleName: close(177)", "Delete MethodInvocation(178)", "Delete ExpressionStatement(179)", "Delete Block(180)", "Delete SimpleName: mutex(185)", "Delete SimpleName: queue(186)", "Delete SimpleName: prepareRead(187)", "Delete MethodInvocation(188)", "Delete ExpressionStatement(189)", "Delete Block(190)", "Delete SynchronizedStatement(191)", "Delete Block(192)", "Delete SimpleName: mutex(204)", "Delete SimpleName: queue(205)", "Delete SimpleName: addAll(206)", "Delete SimpleName: col(207)", "Delete MethodInvocation(208)", "Delete ExpressionStatement(209)", "Delete Block(210)", "Delete SynchronizedStatement(211)", "Delete Block(212)", "Delete SimpleName: mutex(221)", "Delete SimpleName: queue(222)", "Delete SimpleName: add(223)", "Delete SimpleName: item(224)", "Delete MethodInvocation(225)", "Delete ExpressionStatement(226)", "Delete Block(227)", "Delete SynchronizedStatement(228)", "Delete Block(229)", "Delete SimpleName: mutex(234)", "Delete SimpleName: queue(235)", "Delete SimpleName: clear(236)", "Delete MethodInvocation(237)", "Delete ExpressionStatement(238)", "Delete Block(239)", "Delete SynchronizedStatement(240)", "Delete Block(241)", "Delete SimpleName: Object(244)", "Delete SimpleType: Object(245)", "Delete SimpleName: mutex(247)", "Delete SimpleName: queue(248)", "Delete SimpleName: poll(249)", "Delete MethodInvocation(250)", "Delete ReturnStatement(251)", "Delete Block(252)", "Delete SynchronizedStatement(253)", "Delete Block(254)", "Delete SimpleName: mutex(259)", "Delete SimpleName: queue(260)", "Delete SimpleName: size(261)", "Delete MethodInvocation(262)", "Delete ReturnStatement(263)", "Delete Block(264)", "Delete SynchronizedStatement(265)", "Delete Block(266)", "Delete Modifier: public(268)", "Delete SimpleName: MessageQueue(269)", "Delete SimpleType: MessageQueue(270)", "Delete SimpleName: T(271)", "Delete SimpleType: T(272)", "Delete ParameterizedType: MessageQueue<T>(273)", "Delete SimpleName: getMessageQueue(274)", "Delete SimpleName: mutex(275)", "Delete SimpleName: queue(276)", "Delete ReturnStatement(277)", "Delete Block(278)", "Delete SynchronizedStatement(279)", "Delete Block(280)", "Delete MethodDeclaration(281)", "Delete SimpleName: T(284)", "Delete TypeParameter(285)", "Delete SimpleName: SynchronizedQueue(286)", "Delete SimpleType: SynchronizedQueue(287)", "Delete SimpleName: T(288)", "Delete SimpleType: T(289)", "Delete ParameterizedType: SynchronizedQueue<T>(290)", "Delete SimpleName: synchronize(291)", "Delete SimpleName: MessageQueue(292)", "Delete SimpleType: MessageQueue(293)", "Delete SimpleName: T(294)", "Delete SimpleType: T(295)", "Delete ParameterizedType: MessageQueue<T>(296)", "Delete SimpleName: queue(297)", "Delete SingleVariableDeclaration(298)", "Delete SimpleName: SynchronizedQueue(299)", "Delete SimpleType: SynchronizedQueue(300)", "Delete SimpleName: T(301)", "Delete SimpleType: T(302)", "Delete ParameterizedType: SynchronizedQueue<T>(303)", "Delete SimpleName: queue(304)", "Delete ClassInstanceCreation(305)", "Delete ReturnStatement(306)", "Delete Block(307)", "Delete Modifier: public(309)", "Delete Modifier: static(310)", "Delete SimpleName: T(311)", "Delete TypeParameter(312)", "Delete SimpleName: SynchronizedQueue(313)", "Delete SimpleType: SynchronizedQueue(314)", "Delete SimpleName: T(315)", "Delete SimpleType: T(316)", "Delete ParameterizedType: SynchronizedQueue<T>(317)", "Delete SimpleName: synchronize(318)", "Delete SimpleName: MessageQueue(319)", "Delete SimpleType: MessageQueue(320)", "Delete SimpleName: T(321)", "Delete SimpleType: T(322)", "Delete ParameterizedType: MessageQueue<T>(323)", "Delete SimpleName: queue(324)", "Delete SingleVariableDeclaration(325)", "Delete SimpleName: Object(326)", "Delete SimpleType: Object(327)", "Delete SimpleName: mutex(328)", "Delete SingleVariableDeclaration(329)", "Delete SimpleName: SynchronizedQueue(330)", "Delete SimpleType: SynchronizedQueue(331)", "Delete SimpleName: T(332)", "Delete SimpleType: T(333)", "Delete ParameterizedType: SynchronizedQueue<T>(334)", "Delete SimpleName: queue(335)", "Delete SimpleName: mutex(336)", "Delete ClassInstanceCreation(337)", "Delete ReturnStatement(338)", "Delete Block(339)", "Delete MethodDeclaration(340)"]}}, {"Bzip2Compressor_cluster": {"actions": [{"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}]}}, {"Bzip2Compressor_diff": {"operations": ["Insert MarkerAnnotation(59) into MethodDeclaration(180) at 0", "Insert MarkerAnnotation(189) into MethodDeclaration(312) at 1", "Insert SimpleName: Override(58) into MarkerAnnotation(59) at 0", "Insert SimpleName: Override(188) into MarkerAnnotation(189) at 0"]}}, {"SnappyCompressor_cluster": {"actions": [{"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}]}}, {"SnappyCompressor_diff": {"operations": ["Insert MarkerAnnotation(47) into MethodDeclaration(168) at 0", "Insert MarkerAnnotation(177) into MethodDeclaration(300) at 1", "Insert SimpleName: Override(46) into MarkerAnnotation(47) at 0", "Insert SimpleName: Override(176) into MarkerAnnotation(177) at 0"]}}], "commit_stats": [{"total_files": 18, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}