{"application": "google-closure-stylesheets", "csha": "8e30bbfe74fbd408b5b34b2d0b61b858e991e125", "files": [{"AtRuleHandler_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 19", "operations": ["INS TextElement: Called between adjacent nodes in a media type list  to TagElement at 0", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: enterMediaTypeListDelimiter to MethodDeclaration at 2", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS MethodDeclaration to TypeDeclaration: interface at 19"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 20", "operations": ["INS SimpleName: leaveMediaTypeListDelimiter to MethodDeclaration at 2", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: interface at 20", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS TextElement: Called between adjacent nodes in a media type list  to TagElement at 0", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0"]}]}}, {"AtRuleHandler_diff": {"operations": ["Insert MethodDeclaration(244) into TypeDeclaration: interface(363) at 19", "Insert MethodDeclaration(258) into TypeDeclaration: interface(363) at 20", "Insert Javadoc(233) into MethodDeclaration(244) at 0", "Insert PrimitiveType: boolean(234) into MethodDeclaration(244) at 1", "Insert SimpleName: enterMediaTypeListDelimiter(235) into MethodDeclaration(244) at 2", "Insert SingleVariableDeclaration(243) into MethodDeclaration(244) at 3", "Insert Javadoc(247) into MethodDeclaration(258) at 0", "Insert PrimitiveType: void(248) into MethodDeclaration(258) at 1", "Insert SimpleName: leaveMediaTypeListDelimiter(249) into MethodDeclaration(258) at 2", "Insert SingleVariableDeclaration(257) into MethodDeclaration(258) at 3", "Insert TagElement(232) into Javadoc(233) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(241) into SingleVariableDeclaration(243) at 0", "Insert SimpleName: node(242) into SingleVariableDeclaration(243) at 1", "Insert TagElement(246) into Javadoc(247) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(255) into SingleVariableDeclaration(257) at 0", "Insert SimpleName: node(256) into SingleVariableDeclaration(257) at 1", "Insert TextElement: Called between adjacent nodes in a media type list (231) into TagElement(232) at 0", "Insert SimpleType: CssNodesListNode(237) into ParameterizedType: CssNodesListNode<? extends CssNode>(241) at 0", "Insert WildcardType: ? extends CssNode(240) into ParameterizedType: CssNodesListNode<? extends CssNode>(241) at 1", "Insert TextElement: Called between adjacent nodes in a media type list (245) into TagElement(246) at 0", "Insert SimpleType: CssNodesListNode(251) into ParameterizedType: CssNodesListNode<? extends CssNode>(255) at 0", "Insert WildcardType: ? extends CssNode(254) into ParameterizedType: CssNodesListNode<? extends CssNode>(255) at 1", "Insert SimpleName: CssNodesListNode(236) into SimpleType: CssNodesListNode(237) at 0", "Insert SimpleType: CssNode(239) into WildcardType: ? extends CssNode(240) at 0", "Insert SimpleName: CssNodesListNode(250) into SimpleType: CssNodesListNode(251) at 0", "Insert SimpleType: CssNode(253) into WildcardType: ? extends CssNode(254) at 0", "Insert SimpleName: CssNode(238) into SimpleType: CssNode(239) at 0", "Insert SimpleName: CssNode(252) into SimpleType: CssNode(253) at 0"]}}, {"CssCompositeValueNode_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL ReturnStatement", "DEL MarkerAnnotation", "DEL SimpleName: String", "DEL SimpleName: getValue", "DEL SimpleName: Override", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: toString", "DEL Block"]}]}}, {"CssCompositeValueNode_diff": {"operations": ["Delete SimpleName: Override(276)", "Delete MarkerAnnotation(277)", "Delete Modifier: public(278)", "Delete SimpleName: String(279)", "Delete SimpleType: String(280)", "Delete SimpleName: getValue(281)", "Delete ThisExpression(282)", "Delete SimpleName: toString(283)", "Delete MethodInvocation(284)", "Delete ReturnStatement(285)", "Delete Block(286)", "Delete MethodDeclaration(287)"]}}, {"CssNode_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.common.collect.UnmodifiableIterator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.Iterator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS SimpleName: result to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 1", "INS FieldDeclaration to AnonymousClassDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<CssNode> at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: current to InfixExpression: != at 0", "INS SimpleName: next to MethodDeclaration at 3", "INS InfixExpression: != to ReturnStatement at 0", "INS SimpleName: Iterable to SimpleType: Iterable at 0", "INS ParameterizedType: Iterable<CssNode> to ClassInstanceCreation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: current to VariableDeclarationFragment at 0", "INS TextElement: s. to TagElement at 2", "INS SimpleName: Iterable to SimpleType: Iterable at 0", "INS SimpleType: UnmodifiableIterator to ParameterizedType: UnmodifiableIterator<CssNode> at 0", "INS ReturnStatement to Block at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getParent to MethodInvocation at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleType: Iterable to ParameterizedType: Iterable<CssNode> at 0", "INS SimpleName: ancestors to MethodDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: parent to MemberRef at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: current to MethodInvocation at 0", "INS MemberRef to TagElement: @link at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: CssNode to ParameterizedType: UnmodifiableIterator<CssNode> at 1", "INS SimpleType: CssNode to ParameterizedType: Iterable<CssNode> at 1", "INS SimpleType: CssNode to ParameterizedType: Iterable<CssNode> at 1", "INS SimpleName: UnmodifiableIterator to SimpleType: UnmodifiableIterator at 0", "INS SimpleType: Iterable to ParameterizedType: Iterable<CssNode> at 0", "INS ParameterizedType: Iterable<CssNode> to MethodDeclaration at 2", "INS ThisExpression to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS ParameterizedType: Iterator<CssNode> to MethodDeclaration at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: current to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: current to Assignment: = at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: CssNode to ParameterizedType: Iterator<CssNode> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: CssNode to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 0", "INS TextElement: This node and the transitive closure of its  to TagElement at 0", "INS ParameterizedType: UnmodifiableIterator<CssNode> to ClassInstanceCreation at 0", "INS SimpleName: hasNext to MethodDeclaration at 3", "INS SimpleName: iterator to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: CssNode to ThisExpression at 0", "INS SimpleType: CssNode to FieldDeclaration at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: CssNode to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: CssFunctionNode to InstanceofExpression at 1", "INS Block to MethodDeclaration at 4", "INS TextElement: Returns true when any of a  to TagElement at 0", "INS Block to EnhancedForStatement at 2", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 1", "INS TextElement: node. to TagElement at 5", "INS SimpleType: CssNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 35", "INS IfStatement to Block at 0", "INS TextElement: 's  to TagElement at 2", "INS TextElement:  is a function to TagElement at 4", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 3", "INS BooleanLiteral: true to ReturnStatement at 0", "INS TextElement:  node to TagElement: @code at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: ancestors to MemberRef at 0", "INS TagElement: @code to TagElement at 1", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS SimpleName: n to InstanceofExpression at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: CssFunctionNode to SimpleType: CssFunctionNode at 0", "INS SimpleName: ancestors to MethodInvocation at 0", "INS SimpleName: inFunArgs to MethodDeclaration at 3", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS EnhancedForStatement to Block at 0"]}]}}, {"CssNode_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(802) at 3", "Insert ImportDeclaration(11) into CompilationUnit(802) at 5", "Insert QualifiedName: com.google.common.collect.UnmodifiableIterator(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.Iterator(10) into ImportDeclaration(11) at 0", "Insert MethodDeclaration(766) into TypeDeclaration: class(801) at 34", "Insert MethodDeclaration(800) into TypeDeclaration: class(801) at 35", "Insert Javadoc(691) into MethodDeclaration(766) at 0", "Insert Modifier: public(692) into MethodDeclaration(766) at 1", "Insert ParameterizedType: Iterable<CssNode>(697) into MethodDeclaration(766) at 2", "Insert SimpleName: ancestors(698) into MethodDeclaration(766) at 3", "Insert Block(765) into MethodDeclaration(766) at 4", "Insert Javadoc(777) into MethodDeclaration(800) at 0", "Insert Modifier: public(778) into MethodDeclaration(800) at 1", "Insert PrimitiveType: boolean(779) into MethodDeclaration(800) at 2", "Insert SimpleName: inFunArgs(780) into MethodDeclaration(800) at 3", "Insert Block(799) into MethodDeclaration(800) at 4", "Insert TagElement(690) into Javadoc(691) at 0", "Insert SimpleType: Iterable(694) into ParameterizedType: Iterable<CssNode>(697) at 0", "Insert SimpleType: CssNode(696) into ParameterizedType: Iterable<CssNode>(697) at 1", "Insert ReturnStatement(764) into Block(765) at 0", "Insert TagElement(776) into Javadoc(777) at 0", "Insert EnhancedForStatement(796) into Block(799) at 0", "Insert ReturnStatement(798) into Block(799) at 1", "Insert TextElement: This node and the transitive closure of its (685) into TagElement(690) at 0", "Insert TagElement: @link(688) into TagElement(690) at 1", "Insert TextElement: s.(689) into TagElement(690) at 2", "Insert SimpleName: Iterable(693) into SimpleType: Iterable(694) at 0", "Insert SimpleName: CssNode(695) into SimpleType: CssNode(696) at 0", "Insert ClassInstanceCreation(763) into ReturnStatement(764) at 0", "Insert TextElement: Returns true when any of a (767) into TagElement(776) at 0", "Insert TagElement: @code(769) into TagElement(776) at 1", "Insert TextElement: 's (770) into TagElement(776) at 2", "Insert TagElement: @link(773) into TagElement(776) at 3", "Insert TextElement:  is a function(774) into TagElement(776) at 4", "Insert TextElement: node.(775) into TagElement(776) at 5", "Insert SingleVariableDeclaration(784) into EnhancedForStatement(796) at 0", "Insert MethodInvocation(786) into EnhancedForStatement(796) at 1", "Insert Block(795) into EnhancedForStatement(796) at 2", "Insert BooleanLiteral: false(797) into ReturnStatement(798) at 0", "Insert MemberRef(687) into TagElement: @link(688) at 0", "Insert ParameterizedType: Iterable<CssNode>(703) into ClassInstanceCreation(763) at 0", "Insert AnonymousClassDeclaration(762) into ClassInstanceCreation(763) at 1", "Insert TextElement:  node(768) into TagElement: @code(769) at 0", "Insert MemberRef(772) into TagElement: @link(773) at 0", "Insert SimpleType: CssNode(782) into SingleVariableDeclaration(784) at 0", "Insert SimpleName: n(783) into SingleVariableDeclaration(784) at 1", "Insert SimpleName: ancestors(785) into MethodInvocation(786) at 0", "Insert IfStatement(794) into Block(795) at 0", "Insert SimpleName: parent(686) into MemberRef(687) at 0", "Insert SimpleType: Iterable(700) into ParameterizedType: Iterable<CssNode>(703) at 0", "Insert SimpleType: CssNode(702) into ParameterizedType: Iterable<CssNode>(703) at 1", "Insert MethodDeclaration(761) into AnonymousClassDeclaration(762) at 0", "Insert SimpleName: ancestors(771) into MemberRef(772) at 0", "Insert SimpleName: CssNode(781) into SimpleType: CssNode(782) at 0", "Insert InstanceofExpression(790) into IfStatement(794) at 0", "Insert Block(793) into IfStatement(794) at 1", "Insert SimpleName: Iterable(699) into SimpleType: Iterable(700) at 0", "Insert SimpleName: CssNode(701) into SimpleType: CssNode(702) at 0", "Insert Modifier: public(704) into MethodDeclaration(761) at 0", "Insert ParameterizedType: Iterator<CssNode>(709) into MethodDeclaration(761) at 1", "Insert SimpleName: iterator(710) into MethodDeclaration(761) at 2", "Insert Block(760) into MethodDeclaration(761) at 3", "Insert SimpleName: n(787) into InstanceofExpression(790) at 0", "Insert SimpleType: CssFunctionNode(789) into InstanceofExpression(790) at 1", "Insert ReturnStatement(792) into Block(793) at 0", "Insert SimpleType: Iterator(706) into ParameterizedType: Iterator<CssNode>(709) at 0", "Insert SimpleType: CssNode(708) into ParameterizedType: Iterator<CssNode>(709) at 1", "Insert ReturnStatement(759) into Block(760) at 0", "Insert SimpleName: CssFunctionNode(788) into SimpleType: CssFunctionNode(789) at 0", "Insert BooleanLiteral: true(791) into ReturnStatement(792) at 0", "Insert SimpleName: Iterator(705) into SimpleType: Iterator(706) at 0", "Insert SimpleName: CssNode(707) into SimpleType: CssNode(708) at 0", "Insert ClassInstanceCreation(758) into ReturnStatement(759) at 0", "Insert ParameterizedType: UnmodifiableIterator<CssNode>(715) into ClassInstanceCreation(758) at 0", "Insert AnonymousClassDeclaration(757) into ClassInstanceCreation(758) at 1", "Insert SimpleType: UnmodifiableIterator(712) into ParameterizedType: UnmodifiableIterator<CssNode>(715) at 0", "Insert SimpleType: CssNode(714) into ParameterizedType: UnmodifiableIterator<CssNode>(715) at 1", "Insert FieldDeclaration(723) into AnonymousClassDeclaration(757) at 0", "Insert MethodDeclaration(734) into AnonymousClassDeclaration(757) at 1", "Insert MethodDeclaration(756) into AnonymousClassDeclaration(757) at 2", "Insert SimpleName: UnmodifiableIterator(711) into SimpleType: UnmodifiableIterator(712) at 0", "Insert SimpleName: CssNode(713) into SimpleType: CssNode(714) at 0", "Insert Modifier: private(716) into FieldDeclaration(723) at 0", "Insert SimpleType: CssNode(718) into FieldDeclaration(723) at 1", "Insert VariableDeclarationFragment(722) into FieldDeclaration(723) at 2", "Insert MarkerAnnotation(725) into MethodDeclaration(734) at 0", "Insert Modifier: public(726) into MethodDeclaration(734) at 1", "Insert PrimitiveType: boolean(727) into MethodDeclaration(734) at 2", "Insert SimpleName: hasNext(728) into MethodDeclaration(734) at 3", "Insert Block(733) into MethodDeclaration(734) at 4", "Insert MarkerAnnotation(736) into MethodDeclaration(756) at 0", "Insert Modifier: public(737) into MethodDeclaration(756) at 1", "Insert SimpleType: CssNode(739) into MethodDeclaration(756) at 2", "Insert SimpleName: next(740) into MethodDeclaration(756) at 3", "Insert Block(755) into MethodDeclaration(756) at 4", "Insert SimpleName: CssNode(717) into SimpleType: CssNode(718) at 0", "Insert SimpleName: current(719) into VariableDeclarationFragment(722) at 0", "Insert ThisExpression(721) into VariableDeclarationFragment(722) at 1", "Insert SimpleName: Override(724) into MarkerAnnotation(725) at 0", "Insert ReturnStatement(732) into Block(733) at 0", "Insert SimpleName: Override(735) into MarkerAnnotation(736) at 0", "Insert SimpleName: CssNode(738) into SimpleType: CssNode(739) at 0", "Insert VariableDeclarationStatement(746) into Block(755) at 0", "Insert ExpressionStatement(752) into Block(755) at 1", "Insert ReturnStatement(754) into Block(755) at 2", "Insert SimpleName: CssNode(720) into ThisExpression(721) at 0", "Insert InfixExpression: !=(731) into ReturnStatement(732) at 0", "Insert SimpleType: CssNode(742) into VariableDeclarationStatement(746) at 0", "Insert VariableDeclarationFragment(745) into VariableDeclarationStatement(746) at 1", "Insert Assignment: =(751) into ExpressionStatement(752) at 0", "Insert SimpleName: result(753) into ReturnStatement(754) at 0", "Insert SimpleName: current(729) into InfixExpression: !=(731) at 0", "Insert NullLiteral(730) into InfixExpression: !=(731) at 1", "Insert SimpleName: CssNode(741) into SimpleType: CssNode(742) at 0", "Insert SimpleName: result(743) into VariableDeclarationFragment(745) at 0", "Insert SimpleName: current(744) into VariableDeclarationFragment(745) at 1", "Insert SimpleName: current(747) into Assignment: =(751) at 0", "Insert MethodInvocation(750) into Assignment: =(751) at 1", "Insert SimpleName: current(748) into MethodInvocation(750) at 0", "Insert SimpleName: getParent(749) into MethodInvocation(750) at 1"]}}, {"CssTreeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 34", "operations": ["INS TextElement:   to TagElement at 4", "INS MethodDeclaration to TypeDeclaration: interface at 34", "INS TagElement to Javadoc at 0", "INS TextElement:  that is a to TagElement at 2", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS TagElement: @code to TagElement at 3", "INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS TextElement: Called before visiting a  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS SimpleName: enterCompositeValueNode to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 35", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement:  that is a to TagElement at 2", "INS TextElement:   to TagElement at 4", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS MethodDeclaration to TypeDeclaration: interface at 35", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS TextElement: Called after visiting a  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: leaveCompositeValueNode to MethodDeclaration at 2", "INS TagElement: @code to TagElement at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 38", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 38", "INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS TextElement: Called between values in a  to TagElement at 0", "INS TextElement:   to TagElement at 2", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @code to TagElement at 1", "INS SimpleName: enterCompositeValueNodeOperator to MethodDeclaration at 2", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 39", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 39", "INS TextElement: Called between values in a  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS TagElement: @code to TagElement at 1", "INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS TextElement:   to TagElement at 2", "INS SimpleName: leaveCompositeValueNodeOperator to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @code to TagElement at 1"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @code to TagElement at 1"]}, {"root": "INS TagElement: @code to TagElement at 1", "operations": ["INS TagElement: @code to TagElement at 1", "INS TextElement:  CssValueNode to TagElement: @code at 0"]}, {"root": "INS TextElement:  that is not a to TagElement at 2", "operations": ["INS TextElement:  that is not a to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS TagElement: @code to TagElement at 3"]}, {"root": "INS TagElement: @code to TagElement at 1", "operations": ["INS TextElement:  CssValueNode to TagElement: @code at 0", "INS TagElement: @code to TagElement at 1"]}, {"root": "INS TextElement:  that is not a to TagElement at 2", "operations": ["INS TextElement:  that is not a to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TextElement:  CssCompositeValueNode to TagElement: @code at 0", "INS TagElement: @code to TagElement at 3"]}]}}, {"CssTreeVisitor_diff": {"operations": ["Insert MethodDeclaration(416) into TypeDeclaration: interface(660) at 34", "Insert MethodDeclaration(432) into TypeDeclaration: interface(660) at 35", "Insert MethodDeclaration(477) into TypeDeclaration: interface(660) at 38", "Insert MethodDeclaration(490) into TypeDeclaration: interface(660) at 39", "Insert Javadoc(409) into MethodDeclaration(416) at 0", "Insert PrimitiveType: boolean(410) into MethodDeclaration(416) at 1", "Insert SimpleName: enterCompositeValueNode(411) into MethodDeclaration(416) at 2", "Insert SingleVariableDeclaration(415) into MethodDeclaration(416) at 3", "Insert Javadoc(425) into MethodDeclaration(432) at 0", "Insert PrimitiveType: void(426) into MethodDeclaration(432) at 1", "Insert SimpleName: leaveCompositeValueNode(427) into MethodDeclaration(432) at 2", "Insert SingleVariableDeclaration(431) into MethodDeclaration(432) at 3", "Move SingleVariableDeclaration(425) into MethodDeclaration(448) at 3", "Move SingleVariableDeclaration(412) into MethodDeclaration(464) at 3", "Insert Javadoc(470) into MethodDeclaration(477) at 0", "Insert PrimitiveType: boolean(471) into MethodDeclaration(477) at 1", "Insert SimpleName: enterCompositeValueNodeOperator(472) into MethodDeclaration(477) at 2", "Insert SingleVariableDeclaration(476) into MethodDeclaration(477) at 3", "Insert Javadoc(483) into MethodDeclaration(490) at 0", "Insert PrimitiveType: void(484) into MethodDeclaration(490) at 1", "Insert SimpleName: leaveCompositeValueNodeOperator(485) into MethodDeclaration(490) at 2", "Insert SingleVariableDeclaration(489) into MethodDeclaration(490) at 3", "Insert TagElement(408) into Javadoc(409) at 0", "Insert SimpleType: CssCompositeValueNode(413) into SingleVariableDeclaration(415) at 0", "Insert SimpleName: value(414) into SingleVariableDeclaration(415) at 1", "Insert TagElement(424) into Javadoc(425) at 0", "Insert SimpleType: CssCompositeValueNode(429) into SingleVariableDeclaration(431) at 0", "Insert SimpleName: value(430) into SingleVariableDeclaration(431) at 1", "Insert TagElement(469) into Javadoc(470) at 0", "Insert SimpleType: CssCompositeValueNode(474) into SingleVariableDeclaration(476) at 0", "Insert SimpleName: parent(475) into SingleVariableDeclaration(476) at 1", "Insert TagElement(482) into Javadoc(483) at 0", "Insert SimpleType: CssCompositeValueNode(487) into SingleVariableDeclaration(489) at 0", "Insert SimpleName: parent(488) into SingleVariableDeclaration(489) at 1", "Insert TextElement: Called before visiting a (401) into TagElement(408) at 0", "Move TagElement: @code(403) into TagElement(408) at 1", "Insert TextElement:  that is a(404) into TagElement(408) at 2", "Insert TagElement: @code(406) into TagElement(408) at 3", "Insert TextElement:  (407) into TagElement(408) at 4", "Insert SimpleName: CssCompositeValueNode(412) into SimpleType: CssCompositeValueNode(413) at 0", "Insert TextElement: Called after visiting a (417) into TagElement(424) at 0", "Move TagElement: @code(416) into TagElement(424) at 1", "Insert TextElement:  that is a(420) into TagElement(424) at 2", "Insert TagElement: @code(422) into TagElement(424) at 3", "Insert TextElement:  (423) into TagElement(424) at 4", "Insert SimpleName: CssCompositeValueNode(428) into SimpleType: CssCompositeValueNode(429) at 0", "Insert TagElement: @code(435) into TagElement(440) at 1", "Insert TextElement:  that is not a(436) into TagElement(440) at 2", "Insert TagElement: @code(438) into TagElement(440) at 3", "Insert TagElement: @code(451) into TagElement(456) at 1", "Insert TextElement:  that is not a(452) into TagElement(456) at 2", "Insert TagElement: @code(454) into TagElement(456) at 3", "Insert TextElement: Called between values in a (465) into TagElement(469) at 0", "Insert TagElement: @code(467) into TagElement(469) at 1", "Insert TextElement:  (468) into TagElement(469) at 2", "Insert SimpleName: CssCompositeValueNode(473) into SimpleType: CssCompositeValueNode(474) at 0", "Insert TextElement: Called between values in a (478) into TagElement(482) at 0", "Insert TagElement: @code(480) into TagElement(482) at 1", "Insert TextElement:  (481) into TagElement(482) at 2", "Insert SimpleName: CssCompositeValueNode(486) into SimpleType: CssCompositeValueNode(487) at 0", "Insert TextElement:  CssCompositeValueNode(405) into TagElement: @code(406) at 0", "Insert TextElement:  CssCompositeValueNode(421) into TagElement: @code(422) at 0", "Insert TextElement:  CssValueNode(434) into TagElement: @code(435) at 0", "Insert TextElement:  CssCompositeValueNode(437) into TagElement: @code(438) at 0", "Insert TextElement:  CssValueNode(450) into TagElement: @code(451) at 0", "Insert TextElement:  CssCompositeValueNode(453) into TagElement: @code(454) at 0", "Insert TextElement:  CssCompositeValueNode(466) into TagElement: @code(467) at 0", "Insert TextElement:  CssCompositeValueNode(479) into TagElement: @code(480) at 0"]}}, {"DefaultTreeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleName: enterCompositeValueNode to MethodDeclaration at 3", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: leaveCompositeValueNode to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: enterCompositeValueNodeOperator to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: leaveCompositeValueNodeOperator to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 46", "operations": ["INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS MethodDeclaration to TypeDeclaration: class at 46", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: enterMediaTypeListDelimiter to MethodDeclaration at 3", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: leaveMediaTypeListDelimiter to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 47"]}]}}, {"DefaultTreeVisitor_diff": {"operations": ["Insert MethodDeclaration(261) into TypeDeclaration: class(914) at 24", "Insert MethodDeclaration(272) into TypeDeclaration: class(914) at 25", "Insert MethodDeclaration(309) into TypeDeclaration: class(914) at 28", "Insert MethodDeclaration(320) into TypeDeclaration: class(914) at 29", "Insert MethodDeclaration(529) into TypeDeclaration: class(914) at 46", "Insert MethodDeclaration(544) into TypeDeclaration: class(914) at 47", "Insert MarkerAnnotation(250) into MethodDeclaration(261) at 0", "Insert Modifier: public(251) into MethodDeclaration(261) at 1", "Insert PrimitiveType: boolean(252) into MethodDeclaration(261) at 2", "Insert SimpleName: enterCompositeValueNode(253) into MethodDeclaration(261) at 3", "Insert SingleVariableDeclaration(257) into MethodDeclaration(261) at 4", "Insert Block(260) into MethodDeclaration(261) at 5", "Insert MarkerAnnotation(263) into MethodDeclaration(272) at 0", "Insert Modifier: public(264) into MethodDeclaration(272) at 1", "Insert PrimitiveType: void(265) into MethodDeclaration(272) at 2", "Insert SimpleName: leaveCompositeValueNode(266) into MethodDeclaration(272) at 3", "Insert SingleVariableDeclaration(270) into MethodDeclaration(272) at 4", "Insert Block(271) into MethodDeclaration(272) at 5", "Insert MarkerAnnotation(298) into MethodDeclaration(309) at 0", "Insert Modifier: public(299) into MethodDeclaration(309) at 1", "Insert PrimitiveType: boolean(300) into MethodDeclaration(309) at 2", "Insert SimpleName: enterCompositeValueNodeOperator(301) into MethodDeclaration(309) at 3", "Insert SingleVariableDeclaration(305) into MethodDeclaration(309) at 4", "Insert Block(308) into MethodDeclaration(309) at 5", "Insert MarkerAnnotation(311) into MethodDeclaration(320) at 0", "Insert Modifier: public(312) into MethodDeclaration(320) at 1", "Insert PrimitiveType: void(313) into MethodDeclaration(320) at 2", "Insert SimpleName: leaveCompositeValueNodeOperator(314) into MethodDeclaration(320) at 3", "Insert SingleVariableDeclaration(318) into MethodDeclaration(320) at 4", "Insert Block(319) into MethodDeclaration(320) at 5", "Insert MarkerAnnotation(514) into MethodDeclaration(529) at 0", "Insert Modifier: public(515) into MethodDeclaration(529) at 1", "Insert PrimitiveType: boolean(516) into MethodDeclaration(529) at 2", "Insert SimpleName: enterMediaTypeListDelimiter(517) into MethodDeclaration(529) at 3", "Insert SingleVariableDeclaration(525) into MethodDeclaration(529) at 4", "Insert Block(528) into MethodDeclaration(529) at 5", "Insert MarkerAnnotation(531) into MethodDeclaration(544) at 0", "Insert Modifier: public(532) into MethodDeclaration(544) at 1", "Insert PrimitiveType: void(533) into MethodDeclaration(544) at 2", "Insert SimpleName: leaveMediaTypeListDelimiter(534) into MethodDeclaration(544) at 3", "Insert SingleVariableDeclaration(542) into MethodDeclaration(544) at 4", "Insert Block(543) into MethodDeclaration(544) at 5", "Insert SimpleName: Override(249) into MarkerAnnotation(250) at 0", "Insert SimpleType: CssCompositeValueNode(255) into SingleVariableDeclaration(257) at 0", "Insert SimpleName: value(256) into SingleVariableDeclaration(257) at 1", "Insert ReturnStatement(259) into Block(260) at 0", "Insert SimpleName: Override(262) into MarkerAnnotation(263) at 0", "Insert SimpleType: CssCompositeValueNode(268) into SingleVariableDeclaration(270) at 0", "Insert SimpleName: value(269) into SingleVariableDeclaration(270) at 1", "Insert SimpleName: Override(297) into MarkerAnnotation(298) at 0", "Insert SimpleType: CssCompositeValueNode(303) into SingleVariableDeclaration(305) at 0", "Insert SimpleName: parent(304) into SingleVariableDeclaration(305) at 1", "Insert ReturnStatement(307) into Block(308) at 0", "Insert SimpleName: Override(310) into MarkerAnnotation(311) at 0", "Insert SimpleType: CssCompositeValueNode(316) into SingleVariableDeclaration(318) at 0", "Insert SimpleName: parent(317) into SingleVariableDeclaration(318) at 1", "Insert SimpleName: Override(513) into MarkerAnnotation(514) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(523) into SingleVariableDeclaration(525) at 0", "Insert SimpleName: node(524) into SingleVariableDeclaration(525) at 1", "Insert ReturnStatement(527) into Block(528) at 0", "Insert SimpleName: Override(530) into MarkerAnnotation(531) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(540) into SingleVariableDeclaration(542) at 0", "Insert SimpleName: node(541) into SingleVariableDeclaration(542) at 1", "Insert SimpleName: CssCompositeValueNode(254) into SimpleType: CssCompositeValueNode(255) at 0", "Insert BooleanLiteral: true(258) into ReturnStatement(259) at 0", "Insert SimpleName: CssCompositeValueNode(267) into SimpleType: CssCompositeValueNode(268) at 0", "Insert SimpleName: CssCompositeValueNode(302) into SimpleType: CssCompositeValueNode(303) at 0", "Insert BooleanLiteral: true(306) into ReturnStatement(307) at 0", "Insert SimpleName: CssCompositeValueNode(315) into SimpleType: CssCompositeValueNode(316) at 0", "Insert SimpleType: CssNodesListNode(519) into ParameterizedType: CssNodesListNode<? extends CssNode>(523) at 0", "Insert WildcardType: ? extends CssNode(522) into ParameterizedType: CssNodesListNode<? extends CssNode>(523) at 1", "Insert BooleanLiteral: true(526) into ReturnStatement(527) at 0", "Insert SimpleType: CssNodesListNode(536) into ParameterizedType: CssNodesListNode<? extends CssNode>(540) at 0", "Insert WildcardType: ? extends CssNode(539) into ParameterizedType: CssNodesListNode<? extends CssNode>(540) at 1", "Insert SimpleName: CssNodesListNode(518) into SimpleType: CssNodesListNode(519) at 0", "Insert SimpleType: CssNode(521) into WildcardType: ? extends CssNode(522) at 0", "Insert SimpleName: CssNodesListNode(535) into SimpleType: CssNodesListNode(536) at 0", "Insert SimpleType: CssNode(538) into WildcardType: ? extends CssNode(539) at 0", "Insert SimpleName: CssNode(520) into SimpleType: CssNode(521) at 0", "Insert SimpleName: CssNode(537) into SimpleType: CssNode(538) at 0"]}}, {"DefaultVisitController_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.Iterator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 25", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: BaseVisitState to SimpleType: BaseVisitState at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: doVisit to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: node to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to FieldDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: node to Assignment: = at 1", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: node to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS SimpleType: CssNode to ParameterizedType: BaseVisitState<CssNode> at 1", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS SimpleName: transitionToNextState to MethodDeclaration at 3", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParameterizedType: BaseVisitState<CssNode> to TypeDeclaration: class at 2", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: VisitMediaTypeListDelimiterState to TypeDeclaration: class at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: visitor to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: leaveMediaTypeListDelimiter to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: visitor to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: node to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS ThisExpression to FieldAccess at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 25", "INS SimpleName: node to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: VisitMediaTypeListDelimiterState to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: BaseVisitState to ParameterizedType: BaseVisitState<CssNode> at 0", "INS SimpleName: enterMediaTypeListDelimiter to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 50", "operations": ["INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleName: visitor to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: BaseVisitState to SimpleType: BaseVisitState at 0", "INS SimpleType: CssNode to ParameterizedType: BaseVisitState<CssNode> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: doVisit to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: transitionToNextState to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: visitor to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS SimpleName: parent to Assignment: = at 1", "INS SimpleName: IntervalueState to TypeDeclaration: class at 0", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ParameterizedType: BaseVisitState<CssNode> to TypeDeclaration: class at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: parent to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: BaseVisitState to ParameterizedType: BaseVisitState<CssNode> at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: parent to VariableDeclarationFragment at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: leaveCompositeValueNodeOperator to MethodInvocation at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 50", "INS SimpleName: enterCompositeValueNodeOperator to MethodInvocation at 1", "INS SimpleName: parent to FieldAccess at 1", "INS SimpleName: parent to MethodInvocation at 2", "INS SimpleType: CssCompositeValueNode to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS Modifier: private to FieldDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: IntervalueState to MethodDeclaration at 0", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: parent to SingleVariableDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: CssValueNode to ParameterizedType: Iterator<CssValueNode> at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS ParameterizedType: Iterator<CssValueNode> to FieldDeclaration at 1", "INS SimpleName: CssValueNode to SimpleType: CssValueNode at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: Iterator to ParameterizedType: Iterator<CssValueNode> at 0", "INS SimpleName: parameters to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS ReturnStatement to Block at 0", "INS ParameterizedType: VisitState<? extends CssNode> to MethodDeclaration at 1", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: VisitCompositeValueState to ClassInstanceCreation at 0", "INS ReturnStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: getVisitState to MethodDeclaration at 2", "INS SimpleName: VisitCompositeValueState to SimpleType: VisitCompositeValueState at 0", "INS SimpleType: CssCompositeValueNode to CastExpression at 0", "INS SimpleName: node to CastExpression at 1", "INS IfStatement to Block at 0", "INS SimpleType: CssValueNode to SingleVariableDeclaration at 0", "INS SimpleType: VisitState to ParameterizedType: VisitState<? extends CssNode> at 0", "INS CastExpression to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS WildcardType: ? extends CssNode to ParameterizedType: VisitState<? extends CssNode> at 1", "INS SimpleName: CssValueNode to SimpleType: CssValueNode at 0", "INS SimpleName: VisitValueNodeState to SimpleType: VisitValueNodeState at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: node to ClassInstanceCreation at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: VisitState to SimpleType: VisitState at 0", "INS SimpleName: node to InstanceofExpression at 0", "INS Block to IfStatement at 2", "INS SimpleType: VisitValueNodeState to ClassInstanceCreation at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleType: CssCompositeValueNode to InstanceofExpression at 1", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: intervalueStateIsNext to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Modifier: private to FieldDeclaration at 0", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS PrimitiveType: int to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: currentIndex to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: node to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleType: CssCompositeValueNode to InstanceofExpression at 1", "INS SimpleName: getVisitState to MethodDeclaration at 3", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS IfStatement to Block at 0", "INS SimpleName: node to CastExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: node to TagElement: @param at 0", "INS InstanceofExpression to IfStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  new visit state to TagElement: @return at 0", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: VisitState to ParameterizedType: VisitState<? extends CssNode> at 0", "INS Block to IfStatement at 2", "INS SimpleName: VisitValueNodeState to SimpleType: VisitValueNodeState at 0", "INS TextElement:  child node for which to create visit state to TagElement: @param at 1", "INS SimpleName: VisitCompositeValueState to SimpleType: VisitCompositeValueState at 0", "INS SimpleName: VisitState to SimpleType: VisitState at 0", "INS ParameterizedType: VisitState<? extends CssNode> to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS WildcardType: ? extends CssNode to ParameterizedType: VisitState<? extends CssNode> at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS TextElement: Returns a visit state for a given child node. to TagElement at 0", "INS CastExpression to ClassInstanceCreation at 1", "INS SimpleType: VisitCompositeValueState to ClassInstanceCreation at 0", "INS TagElement: @return to Javadoc at 2", "INS TagElement to Javadoc at 0", "INS SimpleType: CssValueNode to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: CssValueNode to SimpleType: CssValueNode at 0", "INS SimpleType: CssCompositeValueNode to CastExpression at 0", "INS ReturnStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: VisitValueNodeState to ClassInstanceCreation at 0", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: node to InstanceofExpression at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4", "MOV Block to IfStatement at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4", "MOV Block to IfStatement at 2"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: parameters to InfixExpression: == at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: node to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: parameters to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getParameters to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: VisitMediaTypeListDelimiterState to SimpleType: VisitMediaTypeListDelimiterState at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getVisitState to MethodInvocation at 0", "INS SimpleName: mediaType to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: stateStack to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 2", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: push to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: CssValueNode to SimpleType: CssValueNode at 0", "INS SimpleName: parameters to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stateStack to MethodInvocation at 0", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: node to ClassInstanceCreation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: parameters to MethodInvocation at 0", "INS SimpleName: mediaType to VariableDeclarationFragment at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleType: VisitMediaTypeListDelimiterState to ClassInstanceCreation at 0", "INS SimpleName: parameters to MethodInvocation at 0", "INS SimpleType: CssValueNode to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: intervalueStateIsNext to Assignment: = at 0", "INS SimpleName: IntervalueState to SimpleType: IntervalueState at 0", "INS SimpleName: intervalueStateIsNext to IfStatement at 0", "INS SimpleType: IntervalueState to ClassInstanceCreation at 0", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: node to ClassInstanceCreation at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: stateStack to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS SimpleName: intervalueStateIsNext to Assignment: = at 0"]}, {"root": "INS ReturnStatement to Block at 6", "operations": ["INS ReturnStatement to Block at 6"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS PrefixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: currentIndex to PrefixExpression: ++ at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: parametersCount to VariableDeclarationFragment at 0", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: getParameters to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: stateStack to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: getParameters to MethodInvocation at 1", "INS InfixExpression: < to IfStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: VisitMediaTypeListDelimiterState to SimpleType: VisitMediaTypeListDelimiterState at 0", "INS IfStatement to Block at 3", "INS SimpleName: parametersCount to InfixExpression: - at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: parametersCount to InfixExpression: < at 1", "INS SimpleName: currentIndex to MethodInvocation at 2", "INS SimpleName: currentIndex to InfixExpression: < at 0", "INS InfixExpression: - to InfixExpression: < at 1", "INS SimpleName: getVisitState to MethodInvocation at 0", "INS SimpleName: node to MethodInvocation at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: node to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS InfixExpression: < to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: currentIndex to InfixExpression: < at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: stateStack to MethodInvocation at 0", "INS SimpleType: VisitMediaTypeListDelimiterState to ClassInstanceCreation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkNotNull to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: state to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Preconditions to MethodInvocation at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: parameters to InfixExpression: == at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS IfStatement to IfStatement at 3", "operations": ["INS SimpleName: visitedChildren to IfStatement at 0", "INS IfStatement to IfStatement at 3"]}, {"root": "UPDATE from && to ||", "operations": ["UPD InfixExpression: && from && to ||", "UPD InfixExpression: && from && to ||"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: stateStack to MethodInvocation at 0", "INS SimpleName: pop to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS PrefixExpression: - to InfixExpression: == at 1", "INS SimpleName: currentIndex to InfixExpression: == at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS InfixExpression: == to InfixExpression: && at 1"]}, {"root": "INS IfStatement to IfStatement at 3", "operations": ["INS SimpleName: visitedChildren to IfStatement at 0", "INS IfStatement to IfStatement at 3"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stateStack to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: pop to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV PrefixExpression: ! to InfixExpression: && at 0"]}, {"root": "INS SimpleName: visitedChildren to InfixExpression: && at 0", "operations": ["INS SimpleName: visitedChildren to InfixExpression: && at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 1", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: shouldVisitChildren to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS SimpleName: visitedChildren to InfixExpression: && at 0", "operations": ["INS SimpleName: visitedChildren to InfixExpression: && at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 1", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: shouldVisitChildren to PrefixExpression: ! at 0"]}, {"root": "UPDATE from enterValueNode to enterCompositeValueNode", "operations": ["UPD SimpleName: enterValueNode from enterValueNode to enterCompositeValueNode"]}, {"root": "UPDATE from leaveValueNode to leaveCompositeValueNode", "operations": ["UPD SimpleName: leaveValueNode from leaveValueNode to leaveCompositeValueNode"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL SimpleName: visitedChildren", "DEL PrefixExpression: !"]}, {"root": "DEL SimpleName: shouldVisitChildren", "operations": ["DEL SimpleName: shouldVisitChildren"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !"]}, {"root": "DEL SimpleName: shouldVisitChildren", "operations": ["DEL SimpleName: shouldVisitChildren"]}]}}, {"DefaultVisitController_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(5814) at 5", "Insert QualifiedName: java.util.Iterator(10) into ImportDeclaration(11) at 0", "Insert TypeDeclaration: class(1630) into TypeDeclaration: class(5813) at 25", "Insert TypeDeclaration: class(4264) into TypeDeclaration: class(5813) at 50", "Insert FieldDeclaration(1409) into TypeDeclaration: class(1566) at 6", "Insert MethodDeclaration(1565) into TypeDeclaration: class(1566) at 10", "Insert Modifier: private(1567) into TypeDeclaration: class(1630) at 0", "Insert SimpleName: VisitMediaTypeListDelimiterState(1568) into TypeDeclaration: class(1630) at 1", "Insert ParameterizedType: BaseVisitState<CssNode>(1573) into TypeDeclaration: class(1630) at 2", "Insert FieldDeclaration(1583) into TypeDeclaration: class(1630) at 3", "Insert MethodDeclaration(1601) into TypeDeclaration: class(1630) at 4", "Insert MethodDeclaration(1618) into TypeDeclaration: class(1630) at 5", "Insert MethodDeclaration(1629) into TypeDeclaration: class(1630) at 6", "Insert FieldDeclaration(3945) into TypeDeclaration: class(4209) at 8", "Insert SimpleName: IntervalueState(4210) into TypeDeclaration: class(4264) at 0", "Insert ParameterizedType: BaseVisitState<CssNode>(4215) into TypeDeclaration: class(4264) at 1", "Insert FieldDeclaration(4222) into TypeDeclaration: class(4264) at 2", "Insert MethodDeclaration(4235) into TypeDeclaration: class(4264) at 3", "Insert MethodDeclaration(4252) into TypeDeclaration: class(4264) at 4", "Insert MethodDeclaration(4263) into TypeDeclaration: class(4264) at 5", "Insert FieldDeclaration(4688) into TypeDeclaration: class(4860) at 6", "Insert MethodDeclaration(4859) into TypeDeclaration: class(4860) at 10", "Insert Modifier: private(1400) into FieldDeclaration(1409) at 0", "Insert ParameterizedType: Iterator<CssValueNode>(1405) into FieldDeclaration(1409) at 1", "Insert VariableDeclarationFragment(1408) into FieldDeclaration(1409) at 2", "Insert Modifier: public(1532) into MethodDeclaration(1565) at 0", "Insert ParameterizedType: VisitState<? extends CssNode>(1538) into MethodDeclaration(1565) at 1", "Insert SimpleName: getVisitState(1539) into MethodDeclaration(1565) at 2", "Insert SingleVariableDeclaration(1543) into MethodDeclaration(1565) at 3", "Insert Block(1564) into MethodDeclaration(1565) at 4", "Insert SimpleType: BaseVisitState(1570) into ParameterizedType: BaseVisitState<CssNode>(1573) at 0", "Insert SimpleType: CssNode(1572) into ParameterizedType: BaseVisitState<CssNode>(1573) at 1", "Insert Modifier: private(1574) into FieldDeclaration(1583) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(1580) into FieldDeclaration(1583) at 1", "Insert VariableDeclarationFragment(1582) into FieldDeclaration(1583) at 2", "Insert Modifier: public(1584) into MethodDeclaration(1601) at 0", "Insert SimpleName: VisitMediaTypeListDelimiterState(1585) into MethodDeclaration(1601) at 1", "Insert SingleVariableDeclaration(1593) into MethodDeclaration(1601) at 2", "Insert Block(1600) into MethodDeclaration(1601) at 3", "Insert MarkerAnnotation(1603) into MethodDeclaration(1618) at 0", "Insert Modifier: public(1604) into MethodDeclaration(1618) at 1", "Insert PrimitiveType: void(1605) into MethodDeclaration(1618) at 2", "Insert SimpleName: doVisit(1606) into MethodDeclaration(1618) at 3", "Insert Block(1617) into MethodDeclaration(1618) at 4", "Insert MarkerAnnotation(1620) into MethodDeclaration(1629) at 0", "Insert Modifier: public(1621) into MethodDeclaration(1629) at 1", "Insert PrimitiveType: void(1622) into MethodDeclaration(1629) at 2", "Insert SimpleName: transitionToNextState(1623) into MethodDeclaration(1629) at 3", "Move Block(1463) into MethodDeclaration(1629) at 4", "Insert Modifier: private(3940) into FieldDeclaration(3945) at 0", "Insert PrimitiveType: boolean(3941) into FieldDeclaration(3945) at 1", "Insert VariableDeclarationFragment(3944) into FieldDeclaration(3945) at 2", "Insert SimpleType: BaseVisitState(4212) into ParameterizedType: BaseVisitState<CssNode>(4215) at 0", "Insert SimpleType: CssNode(4214) into ParameterizedType: BaseVisitState<CssNode>(4215) at 1", "Insert Modifier: private(4216) into FieldDeclaration(4222) at 0", "Insert Modifier: final(4217) into FieldDeclaration(4222) at 1", "Insert SimpleType: CssCompositeValueNode(4219) into FieldDeclaration(4222) at 2", "Insert VariableDeclarationFragment(4221) into FieldDeclaration(4222) at 3", "Insert SimpleName: IntervalueState(4223) into MethodDeclaration(4235) at 0", "Insert SingleVariableDeclaration(4227) into MethodDeclaration(4235) at 1", "Insert Block(4234) into MethodDeclaration(4235) at 2", "Insert MarkerAnnotation(4237) into MethodDeclaration(4252) at 0", "Insert Modifier: public(4238) into MethodDeclaration(4252) at 1", "Insert PrimitiveType: void(4239) into MethodDeclaration(4252) at 2", "Insert SimpleName: doVisit(4240) into MethodDeclaration(4252) at 3", "Insert Block(4251) into MethodDeclaration(4252) at 4", "Insert MarkerAnnotation(4254) into MethodDeclaration(4263) at 0", "Insert Modifier: public(4255) into MethodDeclaration(4263) at 1", "Insert PrimitiveType: void(4256) into MethodDeclaration(4263) at 2", "Insert SimpleName: transitionToNextState(4257) into MethodDeclaration(4263) at 3", "Move Block(4510) into MethodDeclaration(4263) at 4", "Insert Modifier: private(4682) into FieldDeclaration(4688) at 0", "Insert PrimitiveType: int(4683) into FieldDeclaration(4688) at 1", "Insert VariableDeclarationFragment(4687) into FieldDeclaration(4688) at 2", "Insert Javadoc(4825) into MethodDeclaration(4859) at 0", "Insert Modifier: public(4826) into MethodDeclaration(4859) at 1", "Insert ParameterizedType: VisitState<? extends CssNode>(4832) into MethodDeclaration(4859) at 2", "Insert SimpleName: getVisitState(4833) into MethodDeclaration(4859) at 3", "Insert SingleVariableDeclaration(4837) into MethodDeclaration(4859) at 4", "Insert Block(4858) into MethodDeclaration(4859) at 5", "Insert SimpleType: Iterator(1402) into ParameterizedType: Iterator<CssValueNode>(1405) at 0", "Insert SimpleType: CssValueNode(1404) into ParameterizedType: Iterator<CssValueNode>(1405) at 1", "Insert SimpleName: parameters(1406) into VariableDeclarationFragment(1408) at 0", "Insert NullLiteral(1407) into VariableDeclarationFragment(1408) at 1", "Insert IfStatement(1481) into Block(1530) at 1", "Insert IfStatement(1529) into Block(1530) at 2", "Insert SimpleType: VisitState(1534) into ParameterizedType: VisitState<? extends CssNode>(1538) at 0", "Insert WildcardType: ? extends CssNode(1537) into ParameterizedType: VisitState<? extends CssNode>(1538) at 1", "Insert SimpleType: CssValueNode(1541) into SingleVariableDeclaration(1543) at 0", "Insert SimpleName: node(1542) into SingleVariableDeclaration(1543) at 1", "Insert IfStatement(1563) into Block(1564) at 0", "Insert SimpleName: BaseVisitState(1569) into SimpleType: BaseVisitState(1570) at 0", "Insert SimpleName: CssNode(1571) into SimpleType: CssNode(1572) at 0", "Insert SimpleType: CssNodesListNode(1576) into ParameterizedType: CssNodesListNode<? extends CssNode>(1580) at 0", "Insert WildcardType: ? extends CssNode(1579) into ParameterizedType: CssNodesListNode<? extends CssNode>(1580) at 1", "Insert SimpleName: node(1581) into VariableDeclarationFragment(1582) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(1591) into SingleVariableDeclaration(1593) at 0", "Insert SimpleName: node(1592) into SingleVariableDeclaration(1593) at 1", "Insert ExpressionStatement(1599) into Block(1600) at 0", "Insert SimpleName: Override(1602) into MarkerAnnotation(1603) at 0", "Insert ExpressionStatement(1611) into Block(1617) at 0", "Insert ExpressionStatement(1616) into Block(1617) at 1", "Insert SimpleName: Override(1619) into MarkerAnnotation(1620) at 0", "Insert SimpleName: intervalueStateIsNext(3942) into VariableDeclarationFragment(3944) at 0", "Insert BooleanLiteral: false(3943) into VariableDeclarationFragment(3944) at 1", "Insert IfStatement(4015) into Block(4043) at 2", "Insert ExpressionStatement(4041) into Block(4043) at 5", "Insert ReturnStatement(4042) into Block(4043) at 6", "Insert SimpleName: BaseVisitState(4211) into SimpleType: BaseVisitState(4212) at 0", "Insert SimpleName: CssNode(4213) into SimpleType: CssNode(4214) at 0", "Insert SimpleName: CssCompositeValueNode(4218) into SimpleType: CssCompositeValueNode(4219) at 0", "Insert SimpleName: parent(4220) into VariableDeclarationFragment(4221) at 0", "Insert SimpleType: CssCompositeValueNode(4225) into SingleVariableDeclaration(4227) at 0", "Insert SimpleName: parent(4226) into SingleVariableDeclaration(4227) at 1", "Insert ExpressionStatement(4233) into Block(4234) at 0", "Insert SimpleName: Override(4236) into MarkerAnnotation(4237) at 0", "Insert ExpressionStatement(4245) into Block(4251) at 0", "Insert ExpressionStatement(4250) into Block(4251) at 1", "Insert SimpleName: Override(4253) into MarkerAnnotation(4254) at 0", "Insert SimpleName: currentIndex(4684) into VariableDeclarationFragment(4687) at 0", "Insert PrefixExpression: -(4686) into VariableDeclarationFragment(4687) at 1", "Insert ExpressionStatement(4751) into Block(4816) at 1", "Insert VariableDeclarationStatement(4761) into Block(4816) at 2", "Insert IfStatement(4815) into Block(4816) at 3", "Insert TagElement(4819) into Javadoc(4825) at 0", "Insert TagElement: @param(4822) into Javadoc(4825) at 1", "Insert TagElement: @return(4824) into Javadoc(4825) at 2", "Insert SimpleType: VisitState(4828) into ParameterizedType: VisitState<? extends CssNode>(4832) at 0", "Insert WildcardType: ? extends CssNode(4831) into ParameterizedType: VisitState<? extends CssNode>(4832) at 1", "Insert SimpleType: CssValueNode(4835) into SingleVariableDeclaration(4837) at 0", "Insert SimpleName: node(4836) into SingleVariableDeclaration(4837) at 1", "Insert IfStatement(4857) into Block(4858) at 0", "Insert ExpressionStatement(5237) into Block(5243) at 0", "Insert SimpleName: Iterator(1401) into SimpleType: Iterator(1402) at 0", "Insert SimpleName: CssValueNode(1403) into SimpleType: CssValueNode(1404) at 0", "Insert InfixExpression: &&(1433) into IfStatement(1450) at 0", "Insert IfStatement(1449) into IfStatement(1450) at 2", "Update InfixExpression: &&(1443) to ||", "Insert Block(1467) into IfStatement(1468) at 1", "Insert InfixExpression: ==(1471) into IfStatement(1481) at 0", "Insert Block(1480) into IfStatement(1481) at 1", "Insert MethodInvocation(1484) into IfStatement(1529) at 0", "Insert Block(1513) into IfStatement(1529) at 1", "Move Block(1458) into IfStatement(1529) at 2", "Insert SimpleName: VisitState(1533) into SimpleType: VisitState(1534) at 0", "Insert SimpleType: CssNode(1536) into WildcardType: ? extends CssNode(1537) at 0", "Insert SimpleName: CssValueNode(1540) into SimpleType: CssValueNode(1541) at 0", "Insert InstanceofExpression(1547) into IfStatement(1563) at 0", "Insert Block(1556) into IfStatement(1563) at 1", "Insert Block(1562) into IfStatement(1563) at 2", "Insert SimpleName: CssNodesListNode(1575) into SimpleType: CssNodesListNode(1576) at 0", "Insert SimpleType: CssNode(1578) into WildcardType: ? extends CssNode(1579) at 0", "Insert SimpleType: CssNodesListNode(1587) into ParameterizedType: CssNodesListNode<? extends CssNode>(1591) at 0", "Insert WildcardType: ? extends CssNode(1590) into ParameterizedType: CssNodesListNode<? extends CssNode>(1591) at 1", "Insert Assignment: =(1598) into ExpressionStatement(1599) at 0", "Insert MethodInvocation(1610) into ExpressionStatement(1611) at 0", "Insert MethodInvocation(1615) into ExpressionStatement(1616) at 0", "Insert SimpleName: intervalueStateIsNext(4000) into IfStatement(4015) at 0", "Insert Block(4014) into IfStatement(4015) at 1", "Insert Assignment: =(4040) into ExpressionStatement(4041) at 0", "Insert SimpleName: CssCompositeValueNode(4224) into SimpleType: CssCompositeValueNode(4225) at 0", "Insert Assignment: =(4232) into ExpressionStatement(4233) at 0", "Insert MethodInvocation(4244) into ExpressionStatement(4245) at 0", "Insert MethodInvocation(4249) into ExpressionStatement(4250) at 0", "Insert NumberLiteral: 1(4685) into PrefixExpression: -(4686) at 0", "Insert InfixExpression: &&(4713) into IfStatement(4730) at 0", "Insert IfStatement(4729) into IfStatement(4730) at 2", "Update InfixExpression: &&(4483) to ||", "Insert Block(4747) into IfStatement(4748) at 1", "Insert PrefixExpression: ++(4750) into ExpressionStatement(4751) at 0", "Insert Modifier: final(4752) into VariableDeclarationStatement(4761) at 0", "Insert PrimitiveType: int(4753) into VariableDeclarationStatement(4761) at 1", "Insert VariableDeclarationFragment(4760) into VariableDeclarationStatement(4761) at 2", "Insert InfixExpression: <(4764) into IfStatement(4815) at 0", "Insert Block(4792) into IfStatement(4815) at 1", "Move Block(4505) into IfStatement(4815) at 2", "Insert TextElement: Returns a visit state for a given child node.(4818) into TagElement(4819) at 0", "Insert SimpleName: node(4820) into TagElement: @param(4822) at 0", "Insert TextElement:  child node for which to create visit state(4821) into TagElement: @param(4822) at 1", "Insert TextElement:  new visit state(4823) into TagElement: @return(4824) at 0", "Insert SimpleName: VisitState(4827) into SimpleType: VisitState(4828) at 0", "Insert SimpleType: CssNode(4830) into WildcardType: ? extends CssNode(4831) at 0", "Insert SimpleName: CssValueNode(4834) into SimpleType: CssValueNode(4835) at 0", "Insert InstanceofExpression(4841) into IfStatement(4857) at 0", "Insert Block(4850) into IfStatement(4857) at 1", "Insert Block(4856) into IfStatement(4857) at 2", "Insert MethodInvocation(5236) into ExpressionStatement(5237) at 0", "Move PrefixExpression: !(1417) into InfixExpression: &&(1433) at 0", "Insert InfixExpression: ==(1432) into InfixExpression: &&(1433) at 1", "Insert SimpleName: visitedChildren(1442) into IfStatement(1449) at 0", "Move Block(1431) into IfStatement(1449) at 1", "Insert SimpleName: visitedChildren(1458) into InfixExpression: ||(1461) at 0", "Insert PrefixExpression: !(1460) into InfixExpression: ||(1461) at 1", "Insert ExpressionStatement(1465) into Block(1467) at 0", "Insert ReturnStatement(1466) into Block(1467) at 1", "Insert SimpleName: parameters(1469) into InfixExpression: ==(1471) at 0", "Insert NullLiteral(1470) into InfixExpression: ==(1471) at 1", "Insert ExpressionStatement(1479) into Block(1480) at 0", "Insert SimpleName: parameters(1482) into MethodInvocation(1484) at 0", "Insert SimpleName: hasNext(1483) into MethodInvocation(1484) at 1", "Insert VariableDeclarationStatement(1492) into Block(1513) at 0", "Insert IfStatement(1505) into Block(1513) at 1", "Insert ExpressionStatement(1512) into Block(1513) at 2", "Insert SimpleName: CssNode(1535) into SimpleType: CssNode(1536) at 0", "Insert SimpleName: node(1544) into InstanceofExpression(1547) at 0", "Insert SimpleType: CssCompositeValueNode(1546) into InstanceofExpression(1547) at 1", "Insert ReturnStatement(1555) into Block(1556) at 0", "Insert ReturnStatement(1561) into Block(1562) at 0", "Insert SimpleName: CssNode(1577) into SimpleType: CssNode(1578) at 0", "Insert SimpleName: CssNodesListNode(1586) into SimpleType: CssNodesListNode(1587) at 0", "Insert SimpleType: CssNode(1589) into WildcardType: ? extends CssNode(1590) at 0", "Insert FieldAccess(1596) into Assignment: =(1598) at 0", "Insert SimpleName: node(1597) into Assignment: =(1598) at 1", "Insert SimpleName: visitor(1607) into MethodInvocation(1610) at 0", "Insert SimpleName: enterMediaTypeListDelimiter(1608) into MethodInvocation(1610) at 1", "Insert SimpleName: node(1609) into MethodInvocation(1610) at 2", "Insert SimpleName: visitor(1612) into MethodInvocation(1615) at 0", "Insert SimpleName: leaveMediaTypeListDelimiter(1613) into MethodInvocation(1615) at 1", "Insert SimpleName: node(1614) into MethodInvocation(1615) at 2", "Insert ExpressionStatement(4008) into Block(4014) at 0", "Insert ExpressionStatement(4012) into Block(4014) at 1", "Move ReturnStatement(3853) into Block(4014) at 2", "Insert SimpleName: intervalueStateIsNext(4038) into Assignment: =(4040) at 0", "Insert BooleanLiteral: true(4039) into Assignment: =(4040) at 1", "Insert FieldAccess(4230) into Assignment: =(4232) at 0", "Insert SimpleName: parent(4231) into Assignment: =(4232) at 1", "Insert SimpleName: visitor(4241) into MethodInvocation(4244) at 0", "Insert SimpleName: enterCompositeValueNodeOperator(4242) into MethodInvocation(4244) at 1", "Insert SimpleName: parent(4243) into MethodInvocation(4244) at 2", "Insert SimpleName: visitor(4246) into MethodInvocation(4249) at 0", "Insert SimpleName: leaveCompositeValueNodeOperator(4247) into MethodInvocation(4249) at 1", "Insert SimpleName: parent(4248) into MethodInvocation(4249) at 2", "Move PrefixExpression: !(4481) into InfixExpression: &&(4713) at 0", "Insert InfixExpression: ==(4712) into InfixExpression: &&(4713) at 1", "Insert SimpleName: visitedChildren(4722) into IfStatement(4729) at 0", "Move Block(4471) into IfStatement(4729) at 1", "Insert SimpleName: visitedChildren(4738) into InfixExpression: ||(4741) at 0", "Insert PrefixExpression: !(4740) into InfixExpression: ||(4741) at 1", "Insert ExpressionStatement(4745) into Block(4747) at 0", "Insert ReturnStatement(4746) into Block(4747) at 1", "Insert SimpleName: currentIndex(4749) into PrefixExpression: ++(4750) at 0", "Insert SimpleName: parametersCount(4754) into VariableDeclarationFragment(4760) at 0", "Insert MethodInvocation(4759) into VariableDeclarationFragment(4760) at 1", "Insert SimpleName: currentIndex(4762) into InfixExpression: <(4764) at 0", "Insert SimpleName: parametersCount(4763) into InfixExpression: <(4764) at 1", "Insert IfStatement(4779) into Block(4792) at 0", "Insert ExpressionStatement(4791) into Block(4792) at 1", "Insert SimpleName: CssNode(4829) into SimpleType: CssNode(4830) at 0", "Insert SimpleName: node(4838) into InstanceofExpression(4841) at 0", "Insert SimpleType: CssCompositeValueNode(4840) into InstanceofExpression(4841) at 1", "Insert ReturnStatement(4849) into Block(4850) at 0", "Insert ReturnStatement(4855) into Block(4856) at 0", "Insert SimpleName: Preconditions(5233) into MethodInvocation(5236) at 0", "Insert SimpleName: checkNotNull(5234) into MethodInvocation(5236) at 1", "Insert SimpleName: state(5235) into MethodInvocation(5236) at 2", "Insert SimpleName: parameters(1430) into InfixExpression: ==(1432) at 0", "Insert NullLiteral(1431) into InfixExpression: ==(1432) at 1", "Insert SimpleName: shouldVisitChildren(1459) into PrefixExpression: !(1460) at 0", "Insert MethodInvocation(1464) into ExpressionStatement(1465) at 0", "Insert Assignment: =(1478) into ExpressionStatement(1479) at 0", "Insert SimpleType: CssValueNode(1486) into VariableDeclarationStatement(1492) at 0", "Insert VariableDeclarationFragment(1491) into VariableDeclarationStatement(1492) at 1", "Insert MethodInvocation(1495) into IfStatement(1505) at 0", "Insert Block(1504) into IfStatement(1505) at 1", "Insert MethodInvocation(1511) into ExpressionStatement(1512) at 0", "Insert SimpleName: CssCompositeValueNode(1545) into SimpleType: CssCompositeValueNode(1546) at 0", "Insert ClassInstanceCreation(1554) into ReturnStatement(1555) at 0", "Insert ClassInstanceCreation(1560) into ReturnStatement(1561) at 0", "Insert SimpleName: CssNode(1588) into SimpleType: CssNode(1589) at 0", "Insert ThisExpression(1594) into FieldAccess(1596) at 0", "Insert SimpleName: node(1595) into FieldAccess(1596) at 1", "Insert MethodInvocation(4007) into ExpressionStatement(4008) at 0", "Insert Assignment: =(4011) into ExpressionStatement(4012) at 0", "Insert ThisExpression(4228) into FieldAccess(4230) at 0", "Insert SimpleName: parent(4229) into FieldAccess(4230) at 1", "Move SimpleName: visitedChildren(4456) into PrefixExpression: !(4708) at 0", "Insert SimpleName: currentIndex(4709) into InfixExpression: ==(4712) at 0", "Insert PrefixExpression: -(4711) into InfixExpression: ==(4712) at 1", "Insert SimpleName: shouldVisitChildren(4739) into PrefixExpression: !(4740) at 0", "Insert MethodInvocation(4744) into ExpressionStatement(4745) at 0", "Insert MethodInvocation(4757) into MethodInvocation(4759) at 0", "Insert SimpleName: size(4758) into MethodInvocation(4759) at 1", "Insert InfixExpression: <(4769) into IfStatement(4779) at 0", "Insert Block(4778) into IfStatement(4779) at 1", "Insert MethodInvocation(4790) into ExpressionStatement(4791) at 0", "Insert SimpleName: CssCompositeValueNode(4839) into SimpleType: CssCompositeValueNode(4840) at 0", "Insert ClassInstanceCreation(4848) into ReturnStatement(4849) at 0", "Insert ClassInstanceCreation(4854) into ReturnStatement(4855) at 0", "Insert SimpleName: stateStack(1462) into MethodInvocation(1464) at 0", "Insert SimpleName: pop(1463) into MethodInvocation(1464) at 1", "Insert SimpleName: parameters(1472) into Assignment: =(1478) at 0", "Insert MethodInvocation(1477) into Assignment: =(1478) at 1", "Insert SimpleName: CssValueNode(1485) into SimpleType: CssValueNode(1486) at 0", "Insert SimpleName: mediaType(1487) into VariableDeclarationFragment(1491) at 0", "Insert MethodInvocation(1490) into VariableDeclarationFragment(1491) at 1", "Insert SimpleName: parameters(1493) into MethodInvocation(1495) at 0", "Insert SimpleName: hasNext(1494) into MethodInvocation(1495) at 1", "Insert ExpressionStatement(1503) into Block(1504) at 0", "Insert SimpleName: stateStack(1506) into MethodInvocation(1511) at 0", "Insert SimpleName: push(1507) into MethodInvocation(1511) at 1", "Insert MethodInvocation(1510) into MethodInvocation(1511) at 2", "Insert SimpleType: VisitCompositeValueState(1549) into ClassInstanceCreation(1554) at 0", "Insert CastExpression(1553) into ClassInstanceCreation(1554) at 1", "Insert SimpleType: VisitValueNodeState(1558) into ClassInstanceCreation(1560) at 0", "Insert SimpleName: node(1559) into ClassInstanceCreation(1560) at 1", "Insert SimpleName: stateStack(4001) into MethodInvocation(4007) at 0", "Insert SimpleName: push(4002) into MethodInvocation(4007) at 1", "Insert ClassInstanceCreation(4006) into MethodInvocation(4007) at 2", "Insert SimpleName: intervalueStateIsNext(4009) into Assignment: =(4011) at 0", "Insert BooleanLiteral: false(4010) into Assignment: =(4011) at 1", "Insert NumberLiteral: 1(4710) into PrefixExpression: -(4711) at 0", "Insert SimpleName: stateStack(4742) into MethodInvocation(4744) at 0", "Insert SimpleName: pop(4743) into MethodInvocation(4744) at 1", "Insert SimpleName: node(4755) into MethodInvocation(4757) at 0", "Insert SimpleName: getParameters(4756) into MethodInvocation(4757) at 1", "Insert SimpleName: currentIndex(4765) into InfixExpression: <(4769) at 0", "Insert InfixExpression: -(4768) into InfixExpression: <(4769) at 1", "Insert ExpressionStatement(4777) into Block(4778) at 0", "Insert SimpleName: stateStack(4780) into MethodInvocation(4790) at 0", "Insert SimpleName: push(4781) into MethodInvocation(4790) at 1", "Insert MethodInvocation(4789) into MethodInvocation(4790) at 2", "Insert SimpleType: VisitCompositeValueState(4843) into ClassInstanceCreation(4848) at 0", "Insert CastExpression(4847) into ClassInstanceCreation(4848) at 1", "Insert SimpleType: VisitValueNodeState(4852) into ClassInstanceCreation(4854) at 0", "Insert SimpleName: node(4853) into ClassInstanceCreation(4854) at 1", "Insert MethodInvocation(1475) into MethodInvocation(1477) at 0", "Insert SimpleName: iterator(1476) into MethodInvocation(1477) at 1", "Insert SimpleName: parameters(1488) into MethodInvocation(1490) at 0", "Insert SimpleName: next(1489) into MethodInvocation(1490) at 1", "Insert MethodInvocation(1502) into ExpressionStatement(1503) at 0", "Insert SimpleName: getVisitState(1508) into MethodInvocation(1510) at 0", "Insert SimpleName: mediaType(1509) into MethodInvocation(1510) at 1", "Insert SimpleName: VisitCompositeValueState(1548) into SimpleType: VisitCompositeValueState(1549) at 0", "Insert SimpleType: CssCompositeValueNode(1551) into CastExpression(1553) at 0", "Insert SimpleName: node(1552) into CastExpression(1553) at 1", "Insert SimpleName: VisitValueNodeState(1557) into SimpleType: VisitValueNodeState(1558) at 0", "Insert SimpleType: IntervalueState(4004) into ClassInstanceCreation(4006) at 0", "Insert SimpleName: node(4005) into ClassInstanceCreation(4006) at 1", "Update SimpleName: enterValueNode(3910) to enterCompositeValueNode", "Update SimpleName: leaveValueNode(3924) to leaveCompositeValueNode", "Insert SimpleName: parametersCount(4766) into InfixExpression: -(4768) at 0", "Insert NumberLiteral: 1(4767) into InfixExpression: -(4768) at 1", "Insert MethodInvocation(4776) into ExpressionStatement(4777) at 0", "Insert SimpleName: getVisitState(4782) into MethodInvocation(4789) at 0", "Insert MethodInvocation(4788) into MethodInvocation(4789) at 1", "Insert SimpleName: VisitCompositeValueState(4842) into SimpleType: VisitCompositeValueState(4843) at 0", "Insert SimpleType: CssCompositeValueNode(4845) into CastExpression(4847) at 0", "Insert SimpleName: node(4846) into CastExpression(4847) at 1", "Insert SimpleName: VisitValueNodeState(4851) into SimpleType: VisitValueNodeState(4852) at 0", "Insert SimpleName: node(1473) into MethodInvocation(1475) at 0", "Insert SimpleName: getParameters(1474) into MethodInvocation(1475) at 1", "Insert SimpleName: stateStack(1496) into MethodInvocation(1502) at 0", "Insert SimpleName: push(1497) into MethodInvocation(1502) at 1", "Insert ClassInstanceCreation(1501) into MethodInvocation(1502) at 2", "Insert SimpleName: CssCompositeValueNode(1550) into SimpleType: CssCompositeValueNode(1551) at 0", "Insert SimpleName: IntervalueState(4003) into SimpleType: IntervalueState(4004) at 0", "Insert SimpleName: stateStack(4770) into MethodInvocation(4776) at 0", "Insert SimpleName: push(4771) into MethodInvocation(4776) at 1", "Insert ClassInstanceCreation(4775) into MethodInvocation(4776) at 2", "Insert MethodInvocation(4785) into MethodInvocation(4788) at 0", "Insert SimpleName: get(4786) into MethodInvocation(4788) at 1", "Insert SimpleName: currentIndex(4787) into MethodInvocation(4788) at 2", "Insert SimpleName: CssCompositeValueNode(4844) into SimpleType: CssCompositeValueNode(4845) at 0", "Insert SimpleType: VisitMediaTypeListDelimiterState(1499) into ClassInstanceCreation(1501) at 0", "Insert SimpleName: node(1500) into ClassInstanceCreation(1501) at 1", "Insert SimpleType: VisitMediaTypeListDelimiterState(4773) into ClassInstanceCreation(4775) at 0", "Insert SimpleName: node(4774) into ClassInstanceCreation(4775) at 1", "Insert SimpleName: node(4783) into MethodInvocation(4785) at 0", "Insert SimpleName: getParameters(4784) into MethodInvocation(4785) at 1", "Insert SimpleName: VisitMediaTypeListDelimiterState(1498) into SimpleType: VisitMediaTypeListDelimiterState(1499) at 0", "Insert SimpleName: VisitMediaTypeListDelimiterState(4772) into SimpleType: VisitMediaTypeListDelimiterState(4773) at 0", "Delete SimpleName: visitedChildren(1440)", "Delete PrefixExpression: !(1441)", "Delete SimpleName: shouldVisitChildren(1442)", "Delete PrefixExpression: !(4457)", "Delete SimpleName: shouldVisitChildren(4482)"]}}, {"CompactPrinter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.common.base.Joiner to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: com.google.common.css.compiler.ast.CssBlockNode to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: com.google.common.css.compiler.ast.CssNode to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS QualifiedName: com.google.common.css.compiler.ast.CssNodesListNode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 23"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: com.google.common.css.compiler.ast.CssPropertyValueNode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: size to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS MethodInvocation to InfixExpression: > at 0", "INS InfixExpression: > to IfStatement at 0", "INS IfStatement to Block at 1", "INS Block to MethodDeclaration at 5", "INS NumberLiteral: 0 to InfixExpression: > at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: appendCompositeValueNode to MethodDeclaration at 2", "INS SimpleName: Joiner to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sb to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: on to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 15"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleName: CssBlockNode to SimpleType: CssBlockNode at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleType: CssBlockNode to SingleVariableDeclaration at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: getParent to MethodInvocation at 1", "INS SimpleName: CssUnknownAtRuleNode to SimpleType: CssUnknownAtRuleNode at 0", "INS Block to IfStatement at 1", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to InstanceofExpression at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: block to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS StringLiteral: \"{\" to MethodInvocation at 2", "INS SimpleName: sb to MethodInvocation at 0", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleType: CssUnknownAtRuleNode to InstanceofExpression at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InstanceofExpression to InfixExpression: || at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: block to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS IfStatement to Block at 0", "INS InstanceofExpression to InfixExpression: || at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleType: CssPropertyValueNode to InstanceofExpression at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS InstanceofExpression to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS Block to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS IfStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS BooleanLiteral: true to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 2", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: enterValueNode to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS SimpleName: leaveValueNode to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS IfStatement to Block at 0", "INS InstanceofExpression to IfStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS SimpleName: sb to MethodInvocation at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS CharacterLiteral: ' ' to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS Block to MethodDeclaration at 5", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS SimpleName: deleteLastCharIfCharIs to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ReturnStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS NumberLiteral: 0 to InfixExpression: > at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS Block to IfStatement at 1", "INS StringLiteral: \"@\" to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: enterUnknownAtRule to MethodDeclaration at 3", "INS InfixExpression: > to IfStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS IfStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 51", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: enterMediaTypeListDelimiter to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 51", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 62", "operations": ["INS InstanceofExpression to InfixExpression: && at 1", "INS SimpleType: CssMediaRuleNode to InstanceofExpression at 1", "INS IfStatement to Block at 1", "INS SimpleName: appendValueNode to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InstanceofExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 62", "INS Modifier: protected to MethodDeclaration at 1", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: CssMediaRuleNode to SimpleType: CssMediaRuleNode at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleName: enterMediaRule to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleName: enterValueNode to MethodDeclaration at 3", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from enterValueNode to enterBlock", "operations": ["UPD SimpleName: enterValueNode from enterValueNode to enterBlock"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: leaveValueNode to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from leaveValueNode to leaveCompositeValueNode", "operations": ["UPD SimpleName: leaveValueNode from leaveValueNode to leaveCompositeValueNode"]}, {"root": "UPDATE from protected to public", "operations": ["UPD Modifier: protected from protected to public"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: protected to MethodDeclaration at 1", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV SimpleName: appendValueNode to MethodDeclaration at 3", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "UPDATE from appendValueNode to enterCompositeValueNodeOperator", "operations": ["UPD SimpleName: appendValueNode from appendValueNode to enterCompositeValueNodeOperator"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from CssValueNode to CssCompositeValueNode", "operations": ["UPD SimpleType: CssValueNode from CssValueNode to CssCompositeValueNode", "UPD SimpleName: CssValueNode from CssValueNode to CssCompositeValueNode"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: param to SingleVariableDeclaration at 1", "MOV SimpleType: CssValueNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from param to c", "operations": ["UPD SimpleName: param from param to c", "UPD SimpleName: param from param to c", "UPD SimpleName: appendMediaParameterWithParentheses from appendMediaParameterWithParentheses to c"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from append to appendTo", "operations": ["UPD SimpleName: append from append to appendTo"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: sb to MethodInvocation at 1", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV MethodInvocation to InstanceofExpression at 0", "MOV SimpleType: CssDeclarationBlockNode to InstanceofExpression at 1"]}, {"root": "UPDATE from CssDeclarationBlockNode to CssPropertyValueNode", "operations": ["UPD SimpleName: CssDeclarationBlockNode from CssDeclarationBlockNode to CssPropertyValueNode", "UPD SimpleName: CssValueNode from CssValueNode to CssPropertyValueNode", "UPD SimpleType: CssDeclarationBlockNode from CssDeclarationBlockNode to CssPropertyValueNode"]}, {"root": "UPDATE from getValues to append", "operations": ["UPD SimpleName: getValues from getValues to append", "UPD SimpleName: appendValueNode from appendValueNode to append"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: appendValueNode to MethodInvocation at 1", "MOV SimpleName: value to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InstanceofExpression to InfixExpression: && at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: appendMediaParameterWithParentheses to MethodInvocation at 0", "INS SimpleName: node to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from getValue to getValues", "operations": ["UPD SimpleName: getValue from getValue to getValues"]}, {"root": "UPDATE from CssCompositeValueNode to CssMediaRuleNode", "operations": ["UPD SimpleName: CssCompositeValueNode from CssCompositeValueNode to CssMediaRuleNode", "UPD SimpleType: CssCompositeValueNode from CssCompositeValueNode to CssMediaRuleNode"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: CssCompositeValueNode to InstanceofExpression at 1"]}, {"root": "UPDATE from operatorName to node", "operations": ["UPD SimpleName: operatorName from operatorName to node", "UPD SimpleName: sb from sb to node", "UPD SimpleName: param from param to node"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV SimpleName: sb to MethodInvocation at 0"]}, {"root": "UPDATE from length to getParent", "operations": ["UPD SimpleName: length from length to getParent", "UPD SimpleName: append from append to getParent", "UPD SimpleName: length from length to getParent", "UPD SimpleName: getBlock from getBlock to getParent"]}, {"root": "MOVE from SimpleType: CssPropertyValueNode", "operations": ["MOV SimpleName: CssValueNode to SimpleType: CssPropertyValueNode at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS CharacterLiteral: ' ' to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getOperatorName to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from compositeNode to sb", "operations": ["UPD SimpleName: compositeNode from compositeNode to sb"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getValues to MethodInvocation at 1", "MOV SimpleName: compositeNode to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from value to size", "operations": ["UPD SimpleName: value from value to size"]}, {"root": "UPDATE from sb to getOperatorName", "operations": ["UPD SimpleName: sb from sb to getOperatorName"]}, {"root": "UPDATE from sb to block", "operations": ["UPD SimpleName: sb from sb to block"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: length to MethodInvocation at 1"]}, {"root": "UPDATE from param to deleteLastCharIfCharIs", "operations": ["UPD SimpleName: param from param to deleteLastCharIfCharIs"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: param to MethodInvocation at 0"]}, {"root": "UPDATE from '{' to ' '", "operations": ["UPD CharacterLiteral: '{' from '{' to ' '"]}, {"root": "UPDATE from compositeNode to parent", "operations": ["UPD SimpleName: compositeNode from compositeNode to parent"]}, {"root": "INS StringLiteral: \" \" to MethodInvocation at 2", "operations": ["INS StringLiteral: \" \" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: length to MethodInvocation at 1", "MOV SimpleName: operatorName to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: appendMediaParameterWithParentheses to MethodInvocation at 0", "MOV SimpleName: param to MethodInvocation at 1"]}, {"root": "UPDATE from param to getOperator", "operations": ["UPD SimpleName: param from param to getOperator"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL EnhancedForStatement", "DEL Block", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: append", "DEL SimpleName: sb", "DEL CharacterLiteral: '{'", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Block", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: sb", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: append"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL SimpleName: deleteCharAt", "DEL NumberLiteral: 1", "DEL PrefixExpression: !", "DEL SimpleName: node", "DEL InstanceofExpression", "DEL MethodInvocation", "DEL IfStatement", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL Block", "DEL SimpleName: sb", "DEL Block", "DEL ParenthesizedExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration"]}, {"root": "DEL SimpleName: operatorName", "operations": ["DEL SimpleName: operatorName"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ParenthesizedExpression", "DEL IfStatement", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL PrimitiveType: boolean", "DEL SimpleName: param", "DEL CharacterLiteral: '@'", "DEL SimpleName: append", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: node", "DEL SimpleName: getType", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: hasBlock", "DEL InstanceofExpression", "DEL SimpleType: CssValueNode", "DEL Block", "DEL SimpleName: enterUnknownAtRule", "DEL EnhancedForStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL InfixExpression: -", "DEL SimpleName: setLength", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: sb", "DEL EnhancedForStatement", "DEL SimpleName: String", "DEL SimpleName: node", "DEL SimpleName: operatorName", "DEL IfStatement", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL SimpleName: compositeNode", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: CssValueNode", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: sb", "DEL SimpleName: length", "DEL MethodInvocation", "DEL CastExpression", "DEL VariableDeclarationStatement", "DEL SimpleType: CssValueNode", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"CompactPrinter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1529) at 1", "Insert ImportDeclaration(9) into CompilationUnit(1529) at 4", "Insert ImportDeclaration(45) into CompilationUnit(1529) at 22", "Insert ImportDeclaration(47) into CompilationUnit(1529) at 23", "Insert ImportDeclaration(55) into CompilationUnit(1529) at 27", "Insert QualifiedName: com.google.common.base.Joiner(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.common.css.compiler.ast.CssBlockNode(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.google.common.css.compiler.ast.CssNode(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: com.google.common.css.compiler.ast.CssNodesListNode(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: com.google.common.css.compiler.ast.CssPropertyValueNode(54) into ImportDeclaration(55) at 0", "Insert MethodDeclaration(277) into TypeDeclaration: class(1528) at 14", "Insert MethodDeclaration(301) into TypeDeclaration: class(1528) at 15", "Insert MethodDeclaration(855) into TypeDeclaration: class(1528) at 35", "Insert MethodDeclaration(936) into TypeDeclaration: class(1528) at 38", "Insert MethodDeclaration(963) into TypeDeclaration: class(1528) at 39", "Insert MethodDeclaration(987) into TypeDeclaration: class(1528) at 40", "Insert MethodDeclaration(1013) into TypeDeclaration: class(1528) at 41", "Insert MethodDeclaration(1187) into TypeDeclaration: class(1528) at 47", "Insert MethodDeclaration(1209) into TypeDeclaration: class(1528) at 48", "Insert MethodDeclaration(1527) into TypeDeclaration: class(1528) at 58", "Move MarkerAnnotation(233) into MethodDeclaration(277) at 0", "Move Modifier: public(234) into MethodDeclaration(277) at 1", "Move PrimitiveType: boolean(235) into MethodDeclaration(277) at 2", "Move SimpleName: enterMediaRule(236) into MethodDeclaration(277) at 3", "Move SingleVariableDeclaration(240) into MethodDeclaration(277) at 4", "Insert Block(276) into MethodDeclaration(277) at 5", "Insert Modifier: private(278) into MethodDeclaration(301) at 0", "Insert PrimitiveType: void(279) into MethodDeclaration(301) at 1", "Insert SimpleName: appendCompositeValueNode(280) into MethodDeclaration(301) at 2", "Insert SingleVariableDeclaration(284) into MethodDeclaration(301) at 3", "Insert Block(300) into MethodDeclaration(301) at 4", "Insert MarkerAnnotation(824) into MethodDeclaration(855) at 0", "Move Modifier: public(871) into MethodDeclaration(855) at 1", "Move PrimitiveType: boolean(872) into MethodDeclaration(855) at 2", "Update SimpleName: enterValueNode(873) to enterBlock", "Move SimpleName: enterValueNode(873) into MethodDeclaration(855) at 3", "Insert SingleVariableDeclaration(831) into MethodDeclaration(855) at 4", "Insert Block(854) into MethodDeclaration(855) at 5", "Move MarkerAnnotation(907) into MethodDeclaration(936) at 0", "Move Modifier: public(908) into MethodDeclaration(936) at 1", "Move PrimitiveType: void(909) into MethodDeclaration(936) at 2", "Update SimpleName: leaveValueNode(910) to leaveCompositeValueNode", "Move SimpleName: leaveValueNode(910) into MethodDeclaration(936) at 3", "Insert SingleVariableDeclaration(921) into MethodDeclaration(936) at 4", "Insert Block(935) into MethodDeclaration(936) at 5", "Move MarkerAnnotation(870) into MethodDeclaration(963) at 0", "Insert Modifier: public(939) into MethodDeclaration(963) at 1", "Insert PrimitiveType: boolean(940) into MethodDeclaration(963) at 2", "Insert SimpleName: enterValueNode(941) into MethodDeclaration(963) at 3", "Move SingleVariableDeclaration(877) into MethodDeclaration(963) at 4", "Insert Block(962) into MethodDeclaration(963) at 5", "Insert MarkerAnnotation(965) into MethodDeclaration(987) at 0", "Insert Modifier: public(966) into MethodDeclaration(987) at 1", "Insert PrimitiveType: void(967) into MethodDeclaration(987) at 2", "Insert SimpleName: leaveValueNode(968) into MethodDeclaration(987) at 3", "Move SingleVariableDeclaration(914) into MethodDeclaration(987) at 4", "Insert Block(986) into MethodDeclaration(987) at 5", "Insert MarkerAnnotation(989) into MethodDeclaration(1013) at 0", "Update Modifier: protected(1401) to public", "Move Modifier: protected(1401) into MethodDeclaration(1013) at 1", "Update PrimitiveType: void(1402) to boolean", "Move PrimitiveType: void(1402) into MethodDeclaration(1013) at 2", "Update SimpleName: appendValueNode(1403) to enterCompositeValueNodeOperator", "Move SimpleName: appendValueNode(1403) into MethodDeclaration(1013) at 3", "Insert SingleVariableDeclaration(996) into MethodDeclaration(1013) at 4", "Insert Block(1012) into MethodDeclaration(1013) at 5", "Move MarkerAnnotation(1058) into MethodDeclaration(1187) at 0", "Insert Modifier: public(1151) into MethodDeclaration(1187) at 1", "Insert PrimitiveType: boolean(1152) into MethodDeclaration(1187) at 2", "Insert SimpleName: enterUnknownAtRule(1153) into MethodDeclaration(1187) at 3", "Move SingleVariableDeclaration(1065) into MethodDeclaration(1187) at 4", "Insert Block(1186) into MethodDeclaration(1187) at 5", "Insert MarkerAnnotation(1189) into MethodDeclaration(1209) at 0", "Insert Modifier: public(1190) into MethodDeclaration(1209) at 1", "Insert PrimitiveType: boolean(1191) into MethodDeclaration(1209) at 2", "Insert SimpleName: enterMediaTypeListDelimiter(1192) into MethodDeclaration(1209) at 3", "Insert SingleVariableDeclaration(1200) into MethodDeclaration(1209) at 4", "Insert Block(1208) into MethodDeclaration(1209) at 5", "Move Javadoc(1400) into MethodDeclaration(1527) at 0", "Insert Modifier: protected(1487) into MethodDeclaration(1527) at 1", "Insert PrimitiveType: void(1488) into MethodDeclaration(1527) at 2", "Insert SimpleName: appendValueNode(1489) into MethodDeclaration(1527) at 3", "Move SingleVariableDeclaration(1407) into MethodDeclaration(1527) at 4", "Insert Block(1526) into MethodDeclaration(1527) at 5", "Move ExpressionStatement(249) into Block(276) at 0", "Insert IfStatement(273) into Block(276) at 1", "Move ReturnStatement(288) into Block(276) at 2", "Update SimpleType: CssValueNode(251) to CssCompositeValueNode", "Move SimpleType: CssValueNode(251) into SingleVariableDeclaration(284) at 0", "Update SimpleName: param(252) to c", "Move SimpleName: param(252) into SingleVariableDeclaration(284) at 1", "Insert ExpressionStatement(299) into Block(300) at 0", "Insert SimpleName: Override(823) into MarkerAnnotation(824) at 0", "Insert SimpleType: CssBlockNode(829) into SingleVariableDeclaration(831) at 0", "Insert SimpleName: block(830) into SingleVariableDeclaration(831) at 1", "Insert IfStatement(851) into Block(854) at 0", "Insert ReturnStatement(853) into Block(854) at 1", "Move SimpleType: CssCompositeValueNode(1416) into SingleVariableDeclaration(921) at 0", "Insert SimpleName: node(920) into SingleVariableDeclaration(921) at 1", "Insert IfStatement(934) into Block(935) at 0", "Insert IfStatement(955) into Block(962) at 0", "Move ExpressionStatement(896) into Block(962) at 1", "Insert ReturnStatement(961) into Block(962) at 2", "Insert SimpleName: Override(964) into MarkerAnnotation(965) at 0", "Insert IfStatement(985) into Block(986) at 0", "Insert SimpleName: Override(988) into MarkerAnnotation(989) at 0", "Move SimpleType: CssCompositeValueNode(1413) into SingleVariableDeclaration(996) at 0", "Insert SimpleName: parent(995) into SingleVariableDeclaration(996) at 1", "Insert ExpressionStatement(1000) into Block(1012) at 0", "Insert ExpressionStatement(1009) into Block(1012) at 1", "Insert ReturnStatement(1011) into Block(1012) at 2", "Insert ExpressionStatement(1169) into Block(1186) at 0", "Insert IfStatement(1183) into Block(1186) at 1", "Move ReturnStatement(1121) into Block(1186) at 2", "Insert SimpleName: Override(1188) into MarkerAnnotation(1189) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(1198) into SingleVariableDeclaration(1200) at 0", "Insert SimpleName: node(1199) into SingleVariableDeclaration(1200) at 1", "Move ExpressionStatement(1089) into Block(1208) at 0", "Insert ReturnStatement(1207) into Block(1208) at 1", "Insert IfStatement(1500) into Block(1526) at 0", "Insert IfStatement(1518) into Block(1526) at 1", "Move ExpressionStatement(1467) into Block(1526) at 2", "Insert InfixExpression: >(266) into IfStatement(273) at 0", "Insert Block(272) into IfStatement(273) at 1", "Update SimpleName: CssValueNode(250) to CssCompositeValueNode", "Insert MethodInvocation(298) into ExpressionStatement(299) at 0", "Insert SimpleName: CssBlockNode(828) into SimpleType: CssBlockNode(829) at 0", "Insert InfixExpression: ||(844) into IfStatement(851) at 0", "Insert Block(850) into IfStatement(851) at 1", "Insert BooleanLiteral: true(852) into ReturnStatement(853) at 0", "Insert InstanceofExpression(927) into IfStatement(934) at 0", "Move Block(920) into IfStatement(934) at 1", "Move InstanceofExpression(881) into IfStatement(955) at 0", "Insert Block(954) into IfStatement(955) at 1", "Insert BooleanLiteral: true(960) into ReturnStatement(961) at 0", "Insert InstanceofExpression(978) into IfStatement(985) at 0", "Move Block(1118) into IfStatement(985) at 1", "Insert MethodInvocation(999) into ExpressionStatement(1000) at 0", "Insert MethodInvocation(1008) into ExpressionStatement(1009) at 0", "Insert BooleanLiteral: true(1010) into ReturnStatement(1011) at 0", "Insert MethodInvocation(1168) into ExpressionStatement(1169) at 0", "Insert InfixExpression: >(1176) into IfStatement(1183) at 0", "Insert Block(1182) into IfStatement(1183) at 1", "Insert SimpleType: CssNodesListNode(1194) into ParameterizedType: CssNodesListNode<? extends CssNode>(1198) at 0", "Insert WildcardType: ? extends CssNode(1197) into ParameterizedType: CssNodesListNode<? extends CssNode>(1198) at 1", "Insert BooleanLiteral: true(1206) into ReturnStatement(1207) at 0", "Move InstanceofExpression(1411) into IfStatement(1500) at 0", "Insert Block(1499) into IfStatement(1500) at 1", "Insert InfixExpression: &&(1511) into IfStatement(1518) at 0", "Move Block(1468) into IfStatement(1518) at 1", "Insert MethodInvocation(264) into InfixExpression: >(266) at 0", "Insert NumberLiteral: 0(265) into InfixExpression: >(266) at 1", "Move ExpressionStatement(261) into Block(272) at 0", "Insert MethodInvocation(292) into MethodInvocation(298) at 0", "Update SimpleName: append(272) to appendTo", "Move SimpleName: append(272) into MethodInvocation(298) at 1", "Insert SimpleName: sb(294) into MethodInvocation(298) at 2", "Move MethodInvocation(275) into MethodInvocation(298) at 3", "Insert InstanceofExpression(837) into InfixExpression: ||(844) at 0", "Insert InstanceofExpression(843) into InfixExpression: ||(844) at 1", "Insert ExpressionStatement(849) into Block(850) at 0", "Insert MethodInvocation(924) into InstanceofExpression(927) at 0", "Insert SimpleType: CssPropertyValueNode(926) into InstanceofExpression(927) at 1", "Move ExpressionStatement(1096) into Block(954) at 0", "Move MethodInvocation(1106) into InstanceofExpression(978) at 0", "Update SimpleType: CssDeclarationBlockNode(1108) to CssPropertyValueNode", "Move SimpleType: CssDeclarationBlockNode(1108) into InstanceofExpression(978) at 1", "Insert SimpleName: deleteLastCharIfCharIs(997) into MethodInvocation(999) at 0", "Insert CharacterLiteral: ' '(998) into MethodInvocation(999) at 1", "Insert SimpleName: sb(1001) into MethodInvocation(1008) at 0", "Insert SimpleName: append(1002) into MethodInvocation(1008) at 1", "Insert MethodInvocation(1007) into MethodInvocation(1008) at 2", "Insert MethodInvocation(1161) into MethodInvocation(1168) at 0", "Update SimpleName: appendValueNode(1438) to append", "Move SimpleName: appendValueNode(1438) into MethodInvocation(1168) at 1", "Move MethodInvocation(1075) into MethodInvocation(1168) at 2", "Insert MethodInvocation(1174) into InfixExpression: >(1176) at 0", "Insert NumberLiteral: 0(1175) into InfixExpression: >(1176) at 1", "Move ExpressionStatement(1446) into Block(1182) at 0", "Insert SimpleName: CssNodesListNode(1193) into SimpleType: CssNodesListNode(1194) at 0", "Insert SimpleType: CssNode(1196) into WildcardType: ? extends CssNode(1197) at 0", "Insert ReturnStatement(1498) into Block(1499) at 0", "Move InstanceofExpression(265) into InfixExpression: &&(1511) at 0", "Insert InstanceofExpression(1510) into InfixExpression: &&(1511) at 1", "Insert ExpressionStatement(1515) into Block(1517) at 0", "Insert ReturnStatement(1516) into Block(1517) at 1", "Move MethodInvocation(256) into MethodInvocation(264) at 0", "Insert SimpleName: size(263) into MethodInvocation(264) at 1", "Insert SimpleName: Joiner(285) into MethodInvocation(292) at 0", "Insert SimpleName: on(286) into MethodInvocation(292) at 1", "Insert MethodInvocation(291) into MethodInvocation(292) at 2", "Update SimpleName: param(273) to c", "Update SimpleName: getValue(274) to getValues", "Insert MethodInvocation(834) into InstanceofExpression(837) at 0", "Insert SimpleType: CssUnknownAtRuleNode(836) into InstanceofExpression(837) at 1", "Insert MethodInvocation(840) into InstanceofExpression(843) at 0", "Update SimpleType: CssCompositeValueNode(899) to CssMediaRuleNode", "Move SimpleType: CssCompositeValueNode(899) into InstanceofExpression(843) at 1", "Insert MethodInvocation(848) into ExpressionStatement(849) at 0", "Update SimpleName: sb(1066) to node", "Move SimpleName: sb(1066) into MethodInvocation(924) at 0", "Update SimpleName: append(1067) to getParent", "Move SimpleName: append(1067) into MethodInvocation(924) at 1", "Update SimpleName: CssValueNode(1078) to CssPropertyValueNode", "Move SimpleName: CssValueNode(1078) into SimpleType: CssPropertyValueNode(926) at 0", "Insert MethodInvocation(952) into ExpressionStatement(953) at 0", "Update SimpleName: getBlock(1105) to getParent", "Update SimpleName: CssDeclarationBlockNode(1107) to CssPropertyValueNode", "Move MethodInvocation(1426) into MethodInvocation(1007) at 0", "Move SimpleName: getOperatorName(1427) into MethodInvocation(1007) at 1", "Update SimpleName: compositeNode(1435) to sb", "Move SimpleName: compositeNode(1435) into MethodInvocation(1161) at 0", "Update SimpleName: getValues(1436) to append", "Move SimpleName: getValues(1436) into MethodInvocation(1161) at 1", "Insert StringLiteral: \"@\"(1160) into MethodInvocation(1161) at 2", "Move MethodInvocation(1084) into MethodInvocation(1174) at 0", "Update SimpleName: value(1439) to size", "Move SimpleName: value(1439) into MethodInvocation(1174) at 1", "Insert SimpleName: CssNode(1195) into SimpleType: CssNode(1196) at 0", "Update SimpleName: param(262) to node", "Insert MethodInvocation(1507) into InstanceofExpression(1510) at 0", "Insert SimpleType: CssMediaRuleNode(1509) into InstanceofExpression(1510) at 1", "Insert MethodInvocation(1514) into ExpressionStatement(1515) at 0", "Insert MethodInvocation(289) into MethodInvocation(291) at 0", "Update SimpleName: sb(271) to getOperatorName", "Move SimpleName: sb(271) into MethodInvocation(291) at 1", "Update SimpleName: sb(884) to block", "Move SimpleName: sb(884) into MethodInvocation(834) at 0", "Update SimpleName: length(885) to getParent", "Move SimpleName: length(885) into MethodInvocation(834) at 1", "Insert SimpleName: CssUnknownAtRuleNode(835) into SimpleType: CssUnknownAtRuleNode(836) at 0", "Insert SimpleName: block(838) into MethodInvocation(840) at 0", "Insert SimpleName: getParent(839) into MethodInvocation(840) at 1", "Update SimpleName: CssCompositeValueNode(898) to CssMediaRuleNode", "Insert SimpleName: sb(845) into MethodInvocation(848) at 0", "Insert SimpleName: append(846) into MethodInvocation(848) at 1", "Insert StringLiteral: \"{\"(847) into MethodInvocation(848) at 2", "Update SimpleName: param(1092) to deleteLastCharIfCharIs", "Move SimpleName: param(1092) into MethodInvocation(952) at 0", "Insert CharacterLiteral: ' '(951) into MethodInvocation(952) at 1", "Update CharacterLiteral: '{'(1115) to ' '", "Update SimpleName: compositeNode(1424) to parent", "Insert StringLiteral: \" \"(1179) into MethodInvocation(1180) at 2", "Update SimpleName: operatorName(1454) to node", "Move SimpleName: operatorName(1454) into MethodInvocation(1507) at 0", "Update SimpleName: length(1455) to getParent", "Move SimpleName: length(1455) into MethodInvocation(1507) at 1", "Insert SimpleName: CssMediaRuleNode(1508) into SimpleType: CssMediaRuleNode(1509) at 0", "Insert SimpleName: appendMediaParameterWithParentheses(1512) into MethodInvocation(1514) at 0", "Insert SimpleName: node(1513) into MethodInvocation(1514) at 1", "Update SimpleName: appendMediaParameterWithParentheses(266) to c", "Move SimpleName: appendMediaParameterWithParentheses(266) into MethodInvocation(289) at 0", "Update SimpleName: param(267) to getOperator", "Move SimpleName: param(267) into MethodInvocation(289) at 1", "Delete SingleVariableDeclaration(253)", "Delete MethodInvocation(268)", "Delete ExpressionStatement(269)", "Delete Block(270)", "Delete MethodInvocation(276)", "Delete ExpressionStatement(277)", "Delete Block(278)", "Delete IfStatement(279)", "Delete Block(280)", "Delete EnhancedForStatement(281)", "Delete SimpleName: sb(282)", "Delete SimpleName: append(283)", "Delete CharacterLiteral: '{'(284)", "Delete MethodInvocation(285)", "Delete ExpressionStatement(286)", "Delete Block(289)", "Delete MethodDeclaration(290)", "Delete SimpleName: sb(1090)", "Delete SimpleName: append(1091)", "Delete SimpleName: getValue(1093)", "Delete MethodInvocation(1094)", "Delete MethodInvocation(1095)", "Delete SimpleName: sb(882)", "Delete SimpleName: deleteCharAt(883)", "Delete MethodInvocation(886)", "Delete NumberLiteral: 1(887)", "Delete InfixExpression: -(888)", "Delete MethodInvocation(889)", "Delete ExpressionStatement(890)", "Delete Block(891)", "Delete IfStatement(892)", "Delete SimpleName: node(897)", "Delete InstanceofExpression(900)", "Delete ParenthesizedExpression(901)", "Delete PrefixExpression: !(902)", "Delete ReturnStatement(903)", "Delete Block(904)", "Delete MethodDeclaration(905)", "Delete MethodDeclaration(921)", "Delete SimpleName: operatorName(1444)", "Delete Modifier: public(1059)", "Delete PrimitiveType: boolean(1060)", "Delete SimpleName: enterUnknownAtRule(1061)", "Delete CharacterLiteral: '@'(1068)", "Delete MethodInvocation(1069)", "Delete SimpleName: append(1070)", "Delete MethodInvocation(1076)", "Delete ExpressionStatement(1077)", "Delete SimpleType: CssValueNode(1079)", "Delete SimpleName: param(1080)", "Delete SingleVariableDeclaration(1081)", "Delete Block(1097)", "Delete EnhancedForStatement(1098)", "Delete SimpleName: node(1099)", "Delete SimpleName: getType(1100)", "Delete MethodInvocation(1101)", "Delete SimpleName: hasBlock(1102)", "Delete MethodInvocation(1103)", "Delete InstanceofExpression(1109)", "Delete ParenthesizedExpression(1110)", "Delete PrefixExpression: !(1111)", "Delete InfixExpression: &&(1112)", "Delete IfStatement(1119)", "Delete Block(1122)", "Delete MethodDeclaration(1123)", "Delete SimpleName: compositeNode(1414)", "Delete SimpleName: node(1417)", "Delete CastExpression(1418)", "Delete VariableDeclarationFragment(1419)", "Delete VariableDeclarationStatement(1420)", "Delete SimpleName: String(1421)", "Delete SimpleType: String(1422)", "Delete SimpleName: operatorName(1423)", "Delete MethodInvocation(1428)", "Delete VariableDeclarationFragment(1429)", "Delete VariableDeclarationStatement(1430)", "Delete SimpleName: CssValueNode(1431)", "Delete SimpleType: CssValueNode(1432)", "Delete SimpleName: value(1433)", "Delete SingleVariableDeclaration(1434)", "Delete MethodInvocation(1437)", "Delete MethodInvocation(1440)", "Delete ExpressionStatement(1441)", "Delete Block(1447)", "Delete EnhancedForStatement(1448)", "Delete SimpleName: sb(1449)", "Delete SimpleName: setLength(1450)", "Delete SimpleName: sb(1451)", "Delete SimpleName: length(1452)", "Delete MethodInvocation(1453)", "Delete MethodInvocation(1456)", "Delete InfixExpression: -(1457)", "Delete MethodInvocation(1458)", "Delete ExpressionStatement(1459)", "Delete Block(1460)", "Delete IfStatement(1469)", "Delete Block(1470)", "Delete MethodDeclaration(1471)"]}}, {"PrettyPrinter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.common.base.Preconditions.checkArgument to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from com.google.common.css.compiler.ast.CssBooleanExpressionNode to com.google.common.base.Joiner", "operations": ["UPD QualifiedName: com.google.common.css.compiler.ast.CssBooleanExpressionNode from com.google.common.css.compiler.ast.CssBooleanExpressionNode to com.google.common.base.Joiner"]}, {"root": "UPDATE from com.google.common.css.compiler.ast.CssFunctionArgumentsNode to com.google.common.css.compiler.ast.CssBlockNode", "operations": ["UPD QualifiedName: com.google.common.css.compiler.ast.CssFunctionArgumentsNode from com.google.common.css.compiler.ast.CssFunctionArgumentsNode to com.google.common.css.compiler.ast.CssBlockNode"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS IfStatement to Block at 1", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: getBlock to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: node to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: hasBlock to MethodInvocation at 1", "INS InfixExpression: > to InfixExpression: || at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: node to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: appendCompositeValueNode to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getValues to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: appendTo to MethodInvocation at 1", "INS SimpleName: c to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: CssBlockNode to SimpleType: CssBlockNode at 0", "INS StringLiteral: \"{\\n\" to MethodInvocation at 2", "INS InstanceofExpression to InfixExpression: || at 1", "INS MethodInvocation to InstanceofExpression at 0", "INS IfStatement to Block at 0", "INS SimpleName: getParent to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: block to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: block to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: CssMediaRuleNode to InstanceofExpression at 1", "INS SimpleName: block to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS InstanceofExpression to InfixExpression: || at 0", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleType: CssBlockNode to SingleVariableDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS InfixExpression: || to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS SimpleName: getParent to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS MethodInvocation to InstanceofExpression at 0", "INS SimpleName: CssMediaRuleNode to SimpleType: CssMediaRuleNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: leaveBlock to MethodDeclaration at 3", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: CssMediaRuleNode to InstanceofExpression at 1", "INS IfStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: enterValueNode to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 32"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 33", "INS SimpleName: enterCompositeValueNodeOperator to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleName: enterMediaRule to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV PrimitiveType: boolean to MethodDeclaration at 2"]}, {"root": "UPDATE from appendMediaParamterWithParentheses to appendMediaParameterWithParentheses", "operations": ["UPD SimpleName: appendMediaParamterWithParentheses from appendMediaParamterWithParentheses to appendMediaParameterWithParentheses"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: enterValueNode to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from enterValueNode to enterBlock", "operations": ["UPD SimpleName: enterValueNode from enterValueNode to enterBlock"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from CssValueNode to CssBlockNode", "operations": ["UPD SimpleType: CssValueNode from CssValueNode to CssBlockNode", "UPD SimpleName: CssValueNode from CssValueNode to CssBlockNode"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: value to SingleVariableDeclaration at 1", "MOV SimpleType: CssValueNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from value to block", "operations": ["UPD SimpleName: value from value to block", "UPD SimpleName: compositeNode from compositeNode to block"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: checkArgument to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sb to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS IfStatement to Block at 4", "INS PrefixExpression: ! to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: inFunArgs to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: node to MethodInvocation at 0", "INS StringLiteral: \" \" to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS ReturnStatement to Block at 5", "INS BooleanLiteral: true to ReturnStatement at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV IfStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS NumberLiteral: 0 to InfixExpression: > at 1", "INS InfixExpression: || to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS InfixExpression: > to InfixExpression: || at 0", "INS IfStatement to Block at 2"]}, {"root": "INS BooleanLiteral: true to ReturnStatement at 0", "operations": ["INS BooleanLiteral: true to ReturnStatement at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InfixExpression: && to ParenthesizedExpression at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV SimpleName: sb to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV PrefixExpression: ! to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getOperator to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: parent to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to PrefixExpression: ! at 0", "operations": ["INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from sb to Joiner", "operations": ["UPD SimpleName: sb from sb to Joiner"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from append to on", "operations": ["UPD SimpleName: append from append to on"]}, {"root": "UPDATE from append to c", "operations": ["UPD SimpleName: append from append to c", "UPD SimpleName: param from param to c"]}, {"root": "UPDATE from CssCompositeValueNode to CssUnknownAtRuleNode", "operations": ["UPD SimpleType: CssCompositeValueNode from CssCompositeValueNode to CssUnknownAtRuleNode", "UPD SimpleName: CssCompositeValueNode from CssCompositeValueNode to CssUnknownAtRuleNode"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: CssCompositeValueNode to InstanceofExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: compositeNode to MethodInvocation at 0", "MOV SimpleName: getValues to MethodInvocation at 1"]}, {"root": "UPDATE from getValues to getParent", "operations": ["UPD SimpleName: getValues from getValues to getParent"]}, {"root": "UPDATE from operatorName to getOperatorName", "operations": ["UPD SimpleName: operatorName from operatorName to getOperatorName", "UPD SimpleName: getValue from getValue to getOperatorName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: operatorName to MethodInvocation at 1"]}, {"root": "UPDATE from node to parent", "operations": ["UPD SimpleName: node from node to parent"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getParent to MethodInvocation at 1", "MOV SimpleName: node to MethodInvocation at 0"]}, {"root": "UPDATE from getParent to inFunArgs", "operations": ["UPD SimpleName: getParent from getParent to inFunArgs"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getOperator to MethodInvocation at 1"]}, {"root": "UPDATE from String to CssMediaRuleNode", "operations": ["UPD SimpleName: String from String to CssMediaRuleNode"]}, {"root": "MOVE from SimpleType: CssMediaRuleNode", "operations": ["MOV SimpleName: String to SimpleType: CssMediaRuleNode at 0"]}, {"root": "UPDATE from compositeNode to sb", "operations": ["UPD SimpleName: compositeNode from compositeNode to sb"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: compositeNode to MethodInvocation at 0", "MOV SimpleName: getOperator to MethodInvocation at 1"]}, {"root": "UPDATE from getOperator to append", "operations": ["UPD SimpleName: getOperator from getOperator to append"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from sb to size", "operations": ["UPD SimpleName: sb from sb to size"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 1"]}, {"root": "INS InfixExpression: != to InfixExpression: && at 1", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to InfixExpression: && at 1"]}, {"root": "UPDATE from \" {\\n\" to \" \"", "operations": ["UPD StringLiteral: \" {\\n\" from \" {\\n\" to \" \""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: param to MethodInvocation at 0"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV MethodInvocation to InfixExpression: != at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: param", "DEL InstanceofExpression", "DEL SimpleName: param", "DEL MethodInvocation", "DEL SimpleName: CssBooleanExpressionNode", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL SimpleType: CssBooleanExpressionNode", "DEL SimpleName: param", "DEL SimpleName: appendMediaParamterWithParentheses", "DEL StringLiteral: \"  \"", "DEL IfStatement", "DEL SimpleType: CssValueNode", "DEL Assignment: +=", "DEL ExpressionStatement", "DEL SimpleName: CssValueNode", "DEL SimpleName: indent", "DEL Block", "DEL ExpressionStatement", "DEL StringLiteral: \" {\\n\"", "DEL Block", "DEL Block", "DEL ExpressionStatement", "DEL MethodDeclaration"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL MethodInvocation", "DEL SimpleType: CssFunctionArgumentsNode", "DEL InstanceofExpression", "DEL SimpleName: CssFunctionArgumentsNode", "DEL ParenthesizedExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL CastExpression", "DEL SimpleName: deleteEndingIfEndingIs", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: node", "DEL SimpleName: operatorName", "DEL Block", "DEL SimpleName: compositeNode", "DEL SimpleType: String", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getOperatorName", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: operatorName", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Block", "DEL InstanceofExpression", "DEL IfStatement", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: enterValueNode", "DEL EnhancedForStatement", "DEL SimpleName: node", "DEL MethodInvocation", "DEL SimpleName: value"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL SimpleName: CssDeclarationBlockNode", "DEL SimpleType: CssDeclarationBlockNode", "DEL ParenthesizedExpression", "DEL PrefixExpression: !", "DEL InstanceofExpression"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: sb", "DEL Block", "DEL StringLiteral: \" \"", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL SimpleName: param", "DEL SimpleName: CssValueNode", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: CssValueNode", "DEL SimpleName: append", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: param", "DEL SimpleName: append"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"PrettyPrinter_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(1832) at 1", "Move ImportDeclaration(29) into CompilationUnit(1832) at 4", "Insert ImportDeclaration(3) into CompilationUnit(1832) at 1", "Insert QualifiedName: com.google.common.base.Preconditions.checkArgument(2) into ImportDeclaration(3) at 0", "Update QualifiedName: com.google.common.css.compiler.ast.CssBooleanExpressionNode(6) to com.google.common.base.Joiner", "Update QualifiedName: com.google.common.css.compiler.ast.CssFunctionArgumentsNode(28) to com.google.common.css.compiler.ast.CssBlockNode", "Insert MethodDeclaration(267) into TypeDeclaration: class(1831) at 14", "Insert MethodDeclaration(291) into TypeDeclaration: class(1831) at 15", "Insert MethodDeclaration(645) into TypeDeclaration: class(1831) at 27", "Insert MethodDeclaration(681) into TypeDeclaration: class(1831) at 28", "Insert MethodDeclaration(805) into TypeDeclaration: class(1831) at 31", "Insert MethodDeclaration(838) into TypeDeclaration: class(1831) at 32", "Move MarkerAnnotation(218) into MethodDeclaration(267) at 0", "Move Modifier: public(219) into MethodDeclaration(267) at 1", "Move PrimitiveType: boolean(220) into MethodDeclaration(267) at 2", "Move SimpleName: enterMediaRule(221) into MethodDeclaration(267) at 3", "Move SingleVariableDeclaration(225) into MethodDeclaration(267) at 4", "Insert Block(266) into MethodDeclaration(267) at 5", "Insert Modifier: private(268) into MethodDeclaration(291) at 0", "Insert PrimitiveType: void(269) into MethodDeclaration(291) at 1", "Insert SimpleName: appendCompositeValueNode(270) into MethodDeclaration(291) at 2", "Insert SingleVariableDeclaration(274) into MethodDeclaration(291) at 3", "Insert Block(290) into MethodDeclaration(291) at 4", "Update SimpleName: appendMediaParamterWithParentheses(289) to appendMediaParameterWithParentheses", "Insert MarkerAnnotation(326) into MethodDeclaration(335) at 0", "Insert Block(334) into MethodDeclaration(335) at 5", "Insert MarkerAnnotation(610) into MethodDeclaration(645) at 0", "Move Modifier: public(678) into MethodDeclaration(645) at 1", "Move PrimitiveType: boolean(679) into MethodDeclaration(645) at 2", "Update SimpleName: enterValueNode(680) to enterBlock", "Move SimpleName: enterValueNode(680) into MethodDeclaration(645) at 3", "Insert SingleVariableDeclaration(617) into MethodDeclaration(645) at 4", "Insert Block(644) into MethodDeclaration(645) at 5", "Move MarkerAnnotation(314) into MethodDeclaration(681) at 0", "Insert Modifier: public(648) into MethodDeclaration(681) at 1", "Insert PrimitiveType: void(649) into MethodDeclaration(681) at 2", "Insert SimpleName: leaveBlock(650) into MethodDeclaration(681) at 3", "Insert SingleVariableDeclaration(654) into MethodDeclaration(681) at 4", "Insert Block(680) into MethodDeclaration(681) at 5", "Move MarkerAnnotation(677) into MethodDeclaration(805) at 0", "Insert Modifier: public(746) into MethodDeclaration(805) at 1", "Insert PrimitiveType: boolean(747) into MethodDeclaration(805) at 2", "Insert SimpleName: enterValueNode(748) into MethodDeclaration(805) at 3", "Move SingleVariableDeclaration(684) into MethodDeclaration(805) at 4", "Move Block(764) into MethodDeclaration(805) at 5", "Insert MarkerAnnotation(807) into MethodDeclaration(838) at 0", "Insert Modifier: public(808) into MethodDeclaration(838) at 1", "Insert PrimitiveType: boolean(809) into MethodDeclaration(838) at 2", "Insert SimpleName: enterCompositeValueNodeOperator(810) into MethodDeclaration(838) at 3", "Insert SingleVariableDeclaration(814) into MethodDeclaration(838) at 4", "Insert Block(837) into MethodDeclaration(838) at 5", "Move ExpressionStatement(234) into Block(266) at 0", "Insert IfStatement(263) into Block(266) at 1", "Move ReturnStatement(277) into Block(266) at 2", "Move SimpleType: CssCompositeValueNode(690) into SingleVariableDeclaration(274) at 0", "Insert SimpleName: c(273) into SingleVariableDeclaration(274) at 1", "Insert ExpressionStatement(289) into Block(290) at 0", "Insert SimpleName: Override(325) into MarkerAnnotation(326) at 0", "Insert SimpleName: Override(609) into MarkerAnnotation(610) at 0", "Insert SimpleType: CssBlockNode(615) into SingleVariableDeclaration(617) at 0", "Insert SimpleName: block(616) into SingleVariableDeclaration(617) at 1", "Insert IfStatement(641) into Block(644) at 0", "Insert ReturnStatement(643) into Block(644) at 1", "Update SimpleType: CssValueNode(709) to CssBlockNode", "Move SimpleType: CssValueNode(709) into SingleVariableDeclaration(654) at 0", "Update SimpleName: value(710) to block", "Move SimpleName: value(710) into SingleVariableDeclaration(654) at 1", "Insert IfStatement(679) into Block(680) at 0", "Insert ExpressionStatement(761) into Block(804) at 0", "Insert IfStatement(801) into Block(804) at 4", "Insert ReturnStatement(803) into Block(804) at 5", "Insert SimpleName: Override(806) into MarkerAnnotation(807) at 0", "Move SimpleType: CssCompositeValueNode(693) into SingleVariableDeclaration(814) at 0", "Insert SimpleName: parent(813) into SingleVariableDeclaration(814) at 1", "Move ExpressionStatement(727) into Block(837) at 0", "Move IfStatement(780) into Block(837) at 1", "Move ReturnStatement(787) into Block(837) at 2", "Insert IfStatement(1463) into Block(1466) at 2", "Insert InfixExpression: ||(256) into IfStatement(263) at 0", "Insert Block(262) into IfStatement(263) at 1", "Insert MethodInvocation(288) into ExpressionStatement(289) at 0", "Insert SimpleName: CssBlockNode(614) into SimpleType: CssBlockNode(615) at 0", "Insert InfixExpression: ||(630) into IfStatement(641) at 0", "Insert Block(640) into IfStatement(641) at 1", "Insert BooleanLiteral: true(642) into ReturnStatement(643) at 0", "Update SimpleName: CssValueNode(708) to CssBlockNode", "Insert InstanceofExpression(660) into IfStatement(679) at 0", "Move Block(339) into IfStatement(679) at 1", "Insert MethodInvocation(760) into ExpressionStatement(761) at 0", "Insert PrefixExpression: !(794) into IfStatement(801) at 0", "Insert Block(800) into IfStatement(801) at 1", "Insert BooleanLiteral: true(802) into ReturnStatement(803) at 0", "Insert BooleanLiteral: true(835) into ReturnStatement(836) at 0", "Insert InfixExpression: ||(1456) into IfStatement(1463) at 0", "Move Block(1432) into IfStatement(1463) at 1", "Insert InfixExpression: >(243) into InfixExpression: ||(256) at 0", "Insert ParenthesizedExpression(255) into InfixExpression: ||(256) at 1", "Move ExpressionStatement(246) into Block(262) at 0", "Insert MethodInvocation(282) into MethodInvocation(288) at 0", "Insert SimpleName: appendTo(283) into MethodInvocation(288) at 1", "Move SimpleName: sb(267) into MethodInvocation(288) at 2", "Insert MethodInvocation(287) into MethodInvocation(288) at 3", "Insert InstanceofExpression(623) into InfixExpression: ||(630) at 0", "Insert InstanceofExpression(629) into InfixExpression: ||(630) at 1", "Insert ExpressionStatement(635) into Block(640) at 0", "Move ExpressionStatement(1431) into Block(640) at 1", "Insert MethodInvocation(657) into InstanceofExpression(660) at 0", "Insert SimpleType: CssMediaRuleNode(659) into InstanceofExpression(660) at 1", "Insert SimpleName: checkArgument(753) into MethodInvocation(760) at 0", "Move PrefixExpression: !(786) into MethodInvocation(760) at 1", "Insert MethodInvocation(793) into PrefixExpression: !(794) at 0", "Insert ExpressionStatement(799) into Block(800) at 0", "Insert MethodInvocation(821) into MethodInvocation(822) at 2", "Insert MethodInvocation(826) into PrefixExpression: !(827) at 0", "Insert InfixExpression: >(1443) into InfixExpression: ||(1456) at 0", "Insert ParenthesizedExpression(1455) into InfixExpression: ||(1456) at 1", "Move ExpressionStatement(722) into Block(1524) at 0", "Insert MethodInvocation(241) into InfixExpression: >(243) at 0", "Insert NumberLiteral: 0(242) into InfixExpression: >(243) at 1", "Insert InfixExpression: &&(254) into ParenthesizedExpression(255) at 0", "Update SimpleName: sb(256) to Joiner", "Move SimpleName: sb(256) into MethodInvocation(282) at 0", "Update SimpleName: append(257) to on", "Move SimpleName: append(257) into MethodInvocation(282) at 1", "Move MethodInvocation(260) into MethodInvocation(282) at 2", "Update SimpleName: append(268) to c", "Move SimpleName: append(268) into MethodInvocation(287) at 0", "Insert SimpleName: getValues(286) into MethodInvocation(287) at 1", "Insert MethodInvocation(620) into InstanceofExpression(623) at 0", "Update SimpleType: CssCompositeValueNode(687) to CssUnknownAtRuleNode", "Move SimpleType: CssCompositeValueNode(687) into InstanceofExpression(623) at 1", "Insert MethodInvocation(626) into InstanceofExpression(629) at 0", "Insert SimpleType: CssMediaRuleNode(628) into InstanceofExpression(629) at 1", "Insert MethodInvocation(634) into ExpressionStatement(635) at 0", "Update SimpleName: compositeNode(712) to block", "Move SimpleName: compositeNode(712) into MethodInvocation(657) at 0", "Update SimpleName: getValues(713) to getParent", "Move SimpleName: getValues(713) into MethodInvocation(657) at 1", "Insert SimpleName: CssMediaRuleNode(658) into SimpleType: CssMediaRuleNode(659) at 0", "Insert SimpleName: node(791) into MethodInvocation(793) at 0", "Insert SimpleName: inFunArgs(792) into MethodInvocation(793) at 1", "Insert MethodInvocation(798) into ExpressionStatement(799) at 0", "Insert MethodInvocation(819) into MethodInvocation(821) at 0", "Update SimpleName: operatorName(725) to getOperatorName", "Move SimpleName: operatorName(725) into MethodInvocation(821) at 1", "Update SimpleName: node(766) to parent", "Move SimpleName: node(766) into MethodInvocation(826) at 0", "Update SimpleName: getParent(767) to inFunArgs", "Move SimpleName: getParent(767) into MethodInvocation(826) at 1", "Insert MethodInvocation(1441) into InfixExpression: >(1443) at 0", "Insert NumberLiteral: 0(1442) into InfixExpression: >(1443) at 1", "Move InfixExpression: &&(1422) into ParenthesizedExpression(1455) at 0", "Move MethodInvocation(241) into MethodInvocation(241) at 0", "Insert SimpleName: size(240) into MethodInvocation(241) at 1", "Insert MethodInvocation(248) into InfixExpression: &&(254) at 0", "Insert InfixExpression: !=(253) into InfixExpression: &&(254) at 1", "Insert MethodInvocation(279) into MethodInvocation(281) at 0", "Update SimpleName: getValue(259) to getOperatorName", "Insert SimpleName: block(618) into MethodInvocation(620) at 0", "Insert SimpleName: getParent(619) into MethodInvocation(620) at 1", "Update SimpleName: CssCompositeValueNode(686) to CssUnknownAtRuleNode", "Insert SimpleName: block(624) into MethodInvocation(626) at 0", "Insert SimpleName: getParent(625) into MethodInvocation(626) at 1", "Update SimpleName: String(698) to CssMediaRuleNode", "Move SimpleName: String(698) into SimpleType: CssMediaRuleNode(628) at 0", "Update SimpleName: compositeNode(701) to sb", "Move SimpleName: compositeNode(701) into MethodInvocation(634) at 0", "Update SimpleName: getOperator(702) to append", "Move SimpleName: getOperator(702) into MethodInvocation(634) at 1", "Insert StringLiteral: \"{\\n\"(633) into MethodInvocation(634) at 2", "Insert SimpleName: sb(795) into MethodInvocation(798) at 0", "Insert SimpleName: append(796) into MethodInvocation(798) at 1", "Insert StringLiteral: \" \"(797) into MethodInvocation(798) at 2", "Insert SimpleName: parent(817) into MethodInvocation(819) at 0", "Insert SimpleName: getOperator(818) into MethodInvocation(819) at 1", "Move MethodInvocation(1394) into MethodInvocation(1441) at 0", "Update SimpleName: sb(1395) to size", "Move SimpleName: sb(1395) into MethodInvocation(1441) at 1", "Insert InfixExpression: !=(1453) into InfixExpression: &&(1454) at 1", "Update StringLiteral: \" {\\n\"(1425) to \" \"", "Insert MethodInvocation(246) into MethodInvocation(248) at 0", "Insert SimpleName: hasBlock(247) into MethodInvocation(248) at 1", "Insert MethodInvocation(251) into InfixExpression: !=(253) at 0", "Insert NullLiteral(252) into InfixExpression: !=(253) at 1", "Update SimpleName: param(258) to c", "Move SimpleName: param(258) into MethodInvocation(279) at 0", "Insert SimpleName: getOperator(278) into MethodInvocation(279) at 1", "Move MethodInvocation(1416) into InfixExpression: !=(1453) at 0", "Insert NullLiteral(1452) into InfixExpression: !=(1453) at 1", "Insert SimpleName: node(244) into MethodInvocation(246) at 0", "Insert SimpleName: getType(245) into MethodInvocation(246) at 1", "Insert SimpleName: node(249) into MethodInvocation(251) at 0", "Insert SimpleName: getBlock(250) into MethodInvocation(251) at 1", "Delete SimpleName: CssValueNode(235)", "Delete SimpleType: CssValueNode(236)", "Delete SimpleName: param(237)", "Delete SingleVariableDeclaration(238)", "Delete SimpleName: param(247)", "Delete SimpleName: CssBooleanExpressionNode(248)", "Delete SimpleType: CssBooleanExpressionNode(249)", "Delete InstanceofExpression(250)", "Delete SimpleName: appendMediaParamterWithParentheses(251)", "Delete SimpleName: param(252)", "Delete MethodInvocation(253)", "Delete ExpressionStatement(254)", "Delete Block(255)", "Delete MethodInvocation(261)", "Delete ExpressionStatement(262)", "Delete Block(263)", "Delete IfStatement(264)", "Delete Block(265)", "Delete EnhancedForStatement(266)", "Delete StringLiteral: \" {\\n\"(269)", "Delete MethodInvocation(270)", "Delete ExpressionStatement(271)", "Delete SimpleName: indent(272)", "Delete StringLiteral: \"  \"(273)", "Delete Assignment: +=(274)", "Delete ExpressionStatement(275)", "Delete Block(278)", "Delete MethodDeclaration(279)", "Delete MethodInvocation(768)", "Delete SimpleName: CssFunctionArgumentsNode(769)", "Delete SimpleType: CssFunctionArgumentsNode(770)", "Delete InstanceofExpression(771)", "Delete ParenthesizedExpression(772)", "Delete SimpleName: node(685)", "Delete InstanceofExpression(688)", "Delete SimpleName: compositeNode(691)", "Delete SimpleName: node(694)", "Delete CastExpression(695)", "Delete VariableDeclarationFragment(696)", "Delete VariableDeclarationStatement(697)", "Delete SimpleType: String(699)", "Delete SimpleName: operatorName(700)", "Delete MethodInvocation(703)", "Delete SimpleName: getOperatorName(704)", "Delete MethodInvocation(705)", "Delete VariableDeclarationFragment(706)", "Delete VariableDeclarationStatement(707)", "Delete SingleVariableDeclaration(711)", "Delete MethodInvocation(714)", "Delete SimpleName: enterValueNode(715)", "Delete SimpleName: value(716)", "Delete MethodInvocation(717)", "Delete ExpressionStatement(718)", "Delete Block(728)", "Delete EnhancedForStatement(729)", "Delete SimpleName: deleteEndingIfEndingIs(730)", "Delete SimpleName: operatorName(731)", "Delete MethodInvocation(732)", "Delete ExpressionStatement(733)", "Delete Block(734)", "Delete IfStatement(765)", "Delete Block(788)", "Delete MethodDeclaration(789)", "Delete SimpleName: CssDeclarationBlockNode(1417)", "Delete SimpleType: CssDeclarationBlockNode(1418)", "Delete InstanceofExpression(1419)", "Delete ParenthesizedExpression(1420)", "Delete PrefixExpression: !(1421)", "Delete SimpleName: CssValueNode(1388)", "Delete SimpleType: CssValueNode(1389)", "Delete SimpleName: param(1390)", "Delete SingleVariableDeclaration(1391)", "Delete SimpleName: append(1396)", "Delete StringLiteral: \" \"(1397)", "Delete MethodInvocation(1398)", "Delete ExpressionStatement(1399)", "Delete SimpleName: sb(1400)", "Delete SimpleName: append(1401)", "Delete SimpleName: param(1402)", "Delete SimpleName: getValue(1403)", "Delete MethodInvocation(1404)", "Delete MethodInvocation(1405)", "Delete ExpressionStatement(1406)", "Delete Block(1407)", "Delete EnhancedForStatement(1408)", "Delete IfStatement(1433)"]}}, {"RemoveDefaultDeclarations_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.css.compiler.ast.CssCompositeValueNode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: CssCompositeValueNode to SingleVariableDeclaration at 0", "INS SimpleName: node to MethodInvocation at 1", "INS SimpleName: enterCompositeValueNode to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: removeDefault to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: CssCompositeValueNode to SimpleType: CssCompositeValueNode at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: CssValueNode to SingleVariableDeclaration at 0", "INS SimpleName: enterValueNode to MethodDeclaration at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: node to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: removeDefault to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: CssValueNode to SimpleType: CssValueNode at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from boolean to void", "operations": ["UPD PrimitiveType: boolean from boolean to void"]}, {"root": "UPDATE from enterValueNode to removeDefault", "operations": ["UPD SimpleName: enterValueNode from enterValueNode to removeDefault"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}]}}, {"RemoveDefaultDeclarations_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(209) at 2", "Insert QualifiedName: com.google.common.css.compiler.ast.CssCompositeValueNode(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(71) into TypeDeclaration: class(208) at 8", "Insert MethodDeclaration(88) into TypeDeclaration: class(208) at 9", "Move MarkerAnnotation(54) into MethodDeclaration(71) at 0", "Insert Modifier: public(57) into MethodDeclaration(71) at 1", "Insert PrimitiveType: boolean(58) into MethodDeclaration(71) at 2", "Insert SimpleName: enterCompositeValueNode(59) into MethodDeclaration(71) at 3", "Insert SingleVariableDeclaration(63) into MethodDeclaration(71) at 4", "Insert Block(70) into MethodDeclaration(71) at 5", "Insert MarkerAnnotation(73) into MethodDeclaration(88) at 0", "Insert Modifier: public(74) into MethodDeclaration(88) at 1", "Insert PrimitiveType: boolean(75) into MethodDeclaration(88) at 2", "Insert SimpleName: enterValueNode(76) into MethodDeclaration(88) at 3", "Insert SingleVariableDeclaration(80) into MethodDeclaration(88) at 4", "Insert Block(87) into MethodDeclaration(88) at 5", "Update Modifier: public(55) to private", "Update PrimitiveType: boolean(56) to void", "Update SimpleName: enterValueNode(57) to removeDefault", "Insert SimpleType: CssCompositeValueNode(61) into SingleVariableDeclaration(63) at 0", "Insert SimpleName: node(62) into SingleVariableDeclaration(63) at 1", "Insert ExpressionStatement(67) into Block(70) at 0", "Move ReturnStatement(74) into Block(70) at 1", "Insert SimpleName: Override(72) into MarkerAnnotation(73) at 0", "Insert SimpleType: CssValueNode(78) into SingleVariableDeclaration(80) at 0", "Insert SimpleName: node(79) into SingleVariableDeclaration(80) at 1", "Insert ExpressionStatement(84) into Block(87) at 0", "Insert ReturnStatement(86) into Block(87) at 1", "Insert SimpleName: CssCompositeValueNode(60) into SimpleType: CssCompositeValueNode(61) at 0", "Insert MethodInvocation(66) into ExpressionStatement(67) at 0", "Insert SimpleName: CssValueNode(77) into SimpleType: CssValueNode(78) at 0", "Insert MethodInvocation(83) into ExpressionStatement(84) at 0", "Insert BooleanLiteral: true(85) into ReturnStatement(86) at 0", "Insert SimpleName: removeDefault(64) into MethodInvocation(66) at 0", "Insert SimpleName: node(65) into MethodInvocation(66) at 1", "Insert SimpleName: removeDefault(81) into MethodInvocation(83) at 0", "Insert SimpleName: node(82) into MethodInvocation(83) at 1"]}}, {"ReplaceConstantReferences_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: com.google.common.css.compiler.ast.CssLiteralNode to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleName: inFunArgs to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: node to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: inFunArgs to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS VariableDeclarationStatement to Block at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: intermediate to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: n to MethodInvocation at 0", "INS SimpleType: CssLiteralNode to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: inFunArgs to InfixExpression: && at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS StringLiteral: \" \" to ClassInstanceCreation at 1", "INS SimpleName: intermediate to InfixExpression: && at 1", "INS SimpleName: temp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getSourceCodeLocation to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: CssLiteralNode to SimpleType: CssLiteralNode at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: intermediate to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 2"]}]}}, {"ReplaceConstantReferences_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(546) at 9", "Insert QualifiedName: com.google.common.css.compiler.ast.CssLiteralNode(18) into ImportDeclaration(19) at 0", "Insert VariableDeclarationStatement(341) into Block(437) at 5", "Insert VariableDeclarationStatement(346) into Block(437) at 6", "Insert PrimitiveType: boolean(335) into VariableDeclarationStatement(341) at 0", "Insert VariableDeclarationFragment(340) into VariableDeclarationStatement(341) at 1", "Insert PrimitiveType: boolean(342) into VariableDeclarationStatement(346) at 0", "Insert VariableDeclarationFragment(345) into VariableDeclarationStatement(346) at 1", "Insert SimpleName: inFunArgs(336) into VariableDeclarationFragment(340) at 0", "Insert MethodInvocation(339) into VariableDeclarationFragment(340) at 1", "Insert SimpleName: intermediate(343) into VariableDeclarationFragment(345) at 0", "Insert BooleanLiteral: false(344) into VariableDeclarationFragment(345) at 1", "Insert IfStatement(367) into Block(413) at 0", "Insert ExpressionStatement(412) into Block(413) at 2", "Insert SimpleName: node(337) into MethodInvocation(339) at 0", "Insert SimpleName: inFunArgs(338) into MethodInvocation(339) at 1", "Insert InfixExpression: &&(354) into IfStatement(367) at 0", "Insert Block(366) into IfStatement(367) at 1", "Insert Assignment: =(411) into ExpressionStatement(412) at 0", "Insert SimpleName: inFunArgs(352) into InfixExpression: &&(354) at 0", "Insert SimpleName: intermediate(353) into InfixExpression: &&(354) at 1", "Insert ExpressionStatement(365) into Block(366) at 0", "Insert SimpleName: intermediate(409) into Assignment: =(411) at 0", "Insert BooleanLiteral: true(410) into Assignment: =(411) at 1", "Insert MethodInvocation(364) into ExpressionStatement(365) at 0", "Insert SimpleName: temp(355) into MethodInvocation(364) at 0", "Insert SimpleName: add(356) into MethodInvocation(364) at 1", "Insert ClassInstanceCreation(363) into MethodInvocation(364) at 2", "Insert SimpleType: CssLiteralNode(358) into ClassInstanceCreation(363) at 0", "Insert StringLiteral: \" \"(359) into ClassInstanceCreation(363) at 1", "Insert MethodInvocation(362) into ClassInstanceCreation(363) at 2", "Insert SimpleName: CssLiteralNode(357) into SimpleType: CssLiteralNode(358) at 0", "Insert SimpleName: n(360) into MethodInvocation(362) at 0", "Insert SimpleName: getSourceCodeLocation(361) into MethodInvocation(362) at 1"]}}, {"ResolveCustomFunctionNodes_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleType: CssLiteralNode to InstanceofExpression at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: value to MethodInvocation at 0", "INS InstanceofExpression to InfixExpression: && at 0", "INS SimpleName: value to InstanceofExpression at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: CssLiteralNode to SimpleType: CssLiteralNode at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS StringLiteral: \" \" to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}]}}, {"ResolveCustomFunctionNodes_diff": {"operations": ["Insert IfStatement(478) into Block(479) at 0", "Insert InfixExpression: &&(432) into IfStatement(478) at 0", "Insert Block(433) into IfStatement(478) at 1", "Move IfStatement(465) into IfStatement(478) at 2", "Insert InstanceofExpression(425) into InfixExpression: &&(432) at 0", "Insert MethodInvocation(431) into InfixExpression: &&(432) at 1", "Insert SimpleName: value(422) into InstanceofExpression(425) at 0", "Insert SimpleType: CssLiteralNode(424) into InstanceofExpression(425) at 1", "Insert StringLiteral: \" \"(426) into MethodInvocation(431) at 0", "Insert SimpleName: equals(427) into MethodInvocation(431) at 1", "Insert MethodInvocation(430) into MethodInvocation(431) at 2", "Insert SimpleName: CssLiteralNode(423) into SimpleType: CssLiteralNode(424) at 0", "Insert SimpleName: value(428) into MethodInvocation(430) at 0", "Insert SimpleName: getValue(429) into MethodInvocation(430) at 1"]}}, {"SExprPrinter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: com.google.common.css.compiler.ast.CssNodesListNode to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 26", "MOV MethodDeclaration to TypeDeclaration: class at 27", "MOV MethodDeclaration to TypeDeclaration: class at 68"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Called between adjacent nodes in a media type list  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from enterCompositeValueNode to enterMediaTypeListDelimiter", "operations": ["UPD SimpleName: enterCompositeValueNode from enterCompositeValueNode to enterMediaTypeListDelimiter"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS Block to MethodDeclaration at 7"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from boolean to void", "operations": ["UPD PrimitiveType: boolean from boolean to void"]}, {"root": "UPDATE from enterSimpleValueNode to leaveMediaTypeListDelimiter", "operations": ["UPD SimpleName: enterSimpleValueNode from enterSimpleValueNode to leaveMediaTypeListDelimiter"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "INS SimpleName: enterCompositeValueNode to MethodDeclaration at 5", "operations": ["INS SimpleName: enterCompositeValueNode to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Block to MethodDeclaration at 7"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Block to MethodDeclaration at 7"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Block to MethodDeclaration at 7"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: value to MethodInvocation at 1", "INS SimpleName: enter to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: CssNode to WildcardType: ? extends CssNode at 0", "INS SimpleName: CssNodesListNode to SimpleType: CssNodesListNode at 0", "INS ParameterizedType: CssNodesListNode<? extends CssNode> to SingleVariableDeclaration at 0", "INS WildcardType: ? extends CssNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 1", "INS SimpleType: CssNodesListNode to ParameterizedType: CssNodesListNode<? extends CssNode> at 0"]}, {"root": "UPDATE from value to node", "operations": ["UPD SimpleName: value from value to node"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: sb to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"(CompositeValueNodeOperator \" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS StringLiteral: \" \" to InfixExpression: + at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: sb to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: n to MethodInvocation at 0"]}, {"root": "UPDATE from Called before visiting a  to Called between adjacent nodes in a media type list ", "operations": ["UPD TextElement: Called before visiting a  from Called before visiting a  to Called between adjacent nodes in a media type list "]}, {"root": "INS StringLiteral: \"(MediaTypeListDelimiter\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"(MediaTypeListDelimiter\" to MethodInvocation at 2"]}, {"root": "INS StringLiteral: \")\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \")\" to MethodInvocation at 2"]}, {"root": "UPDATE from enter to sb", "operations": ["UPD SimpleName: enter from enter to sb", "UPD SimpleName: leave from leave to sb"]}, {"root": "INS SimpleName: append to MethodInvocation at 1", "operations": ["INS SimpleName: append to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: name to MethodInvocation at 1", "INS SimpleName: getOperator to MethodInvocation at 1"]}, {"root": "UPDATE from parent to append", "operations": ["UPD SimpleName: parent from parent to append"]}, {"root": "INS StringLiteral: \")\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \")\" to MethodInvocation at 2"]}, {"root": "UPDATE from \"(%s@%d\" to \"(%s@%d \"", "operations": ["UPD StringLiteral: \"(%s@%d\" from \"(%s@%d\" to \"(%s@%d \""]}, {"root": "UPDATE from CssValueNode to CssNode", "operations": ["UPD SimpleName: CssValueNode from CssValueNode to CssNode"]}, {"root": "MOVE from SimpleType: CssNode", "operations": ["MOV SimpleName: CssValueNode to SimpleType: CssNode at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: parent to MethodInvocation at 0"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL MethodInvocation", "DEL SimpleName: toString", "DEL SimpleName: value", "DEL InfixExpression: +", "DEL StringLiteral: \" \""]}, {"root": "DEL Block", "operations": ["DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL SimpleName: value", "DEL ReturnStatement", "DEL SimpleName: enter", "DEL ExpressionStatement", "DEL Block"]}, {"root": "DEL TagElement: @code", "operations": ["DEL TextElement:  CssValueNode", "DEL TagElement: @code"]}, {"root": "DEL TextElement:  that is not a", "operations": ["DEL TextElement:  that is not a"]}, {"root": "DEL TagElement: @code", "operations": ["DEL TextElement:  CssCompositeValueNode", "DEL TagElement: @code"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL SimpleType: CssValueNode", "operations": ["DEL SimpleType: CssValueNode"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: value", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: enter"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: value", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL StringLiteral: \" \"", "DEL SimpleName: toString"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Called after visiting a ", "DEL TextElement:  ", "DEL TextElement:  CssValueNode", "DEL TagElement: @code", "DEL TextElement:  CssCompositeValueNode", "DEL Javadoc", "DEL TagElement", "DEL TagElement: @code", "DEL TextElement:  that is not a"]}, {"root": "DEL SimpleName: leaveSimpleValueNode", "operations": ["DEL SimpleName: leaveSimpleValueNode"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleName: CssValueNode", "DEL SimpleType: CssValueNode"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL SimpleName: leave", "DEL SimpleName: value", "DEL MethodInvocation", "DEL Block"]}]}}, {"SExprPrinter_diff": {"operations": ["Insert ImportDeclaration(51) into CompilationUnit(1909) at 25", "Move MethodDeclaration(1322) into TypeDeclaration: class(1908) at 26", "Move MethodDeclaration(1344) into TypeDeclaration: class(1908) at 68", "Move MethodDeclaration(1377) into TypeDeclaration: class(1908) at 27", "Insert QualifiedName: com.google.common.css.compiler.ast.CssNodesListNode(50) into ImportDeclaration(51) at 0", "Insert MarkerAnnotation(209) into MethodDeclaration(224) at 0", "Insert MarkerAnnotation(232) into MethodDeclaration(245) at 1", "Insert MarkerAnnotation(253) into MethodDeclaration(268) at 1", "Insert MarkerAnnotation(276) into MethodDeclaration(289) at 1", "Insert MarkerAnnotation(297) into MethodDeclaration(312) at 1", "Insert MarkerAnnotation(320) into MethodDeclaration(333) at 1", "Insert MarkerAnnotation(341) into MethodDeclaration(356) at 1", "Insert MarkerAnnotation(364) into MethodDeclaration(377) at 1", "Insert MarkerAnnotation(385) into MethodDeclaration(400) at 1", "Insert MarkerAnnotation(408) into MethodDeclaration(421) at 1", "Insert MarkerAnnotation(429) into MethodDeclaration(444) at 1", "Insert MarkerAnnotation(452) into MethodDeclaration(465) at 1", "Insert MarkerAnnotation(481) into MethodDeclaration(496) at 1", "Insert MarkerAnnotation(504) into MethodDeclaration(517) at 1", "Insert MarkerAnnotation(525) into MethodDeclaration(540) at 1", "Insert MarkerAnnotation(548) into MethodDeclaration(561) at 1", "Insert Javadoc(564) into MethodDeclaration(586) at 0", "Insert MarkerAnnotation(566) into MethodDeclaration(586) at 1", "Update SimpleName: enterCompositeValueNode(1301) to enterMediaTypeListDelimiter", "Insert SingleVariableDeclaration(577) into MethodDeclaration(586) at 5", "Insert Block(585) into MethodDeclaration(586) at 6", "Insert MarkerAnnotation(591) into MethodDeclaration(609) at 1", "Update PrimitiveType: boolean(1355) to void", "Update SimpleName: enterSimpleValueNode(1356) to leaveMediaTypeListDelimiter", "Insert MarkerAnnotation(617) into MethodDeclaration(632) at 1", "Insert MarkerAnnotation(640) into MethodDeclaration(653) at 1", "Insert MarkerAnnotation(661) into MethodDeclaration(676) at 1", "Insert MarkerAnnotation(684) into MethodDeclaration(697) at 1", "Insert MarkerAnnotation(705) into MethodDeclaration(720) at 1", "Insert MarkerAnnotation(728) into MethodDeclaration(741) at 1", "Insert MarkerAnnotation(749) into MethodDeclaration(764) at 1", "Insert MarkerAnnotation(772) into MethodDeclaration(785) at 1", "Insert MarkerAnnotation(793) into MethodDeclaration(808) at 1", "Insert MarkerAnnotation(816) into MethodDeclaration(829) at 1", "Insert MarkerAnnotation(837) into MethodDeclaration(852) at 1", "Insert MarkerAnnotation(860) into MethodDeclaration(873) at 1", "Insert MarkerAnnotation(881) into MethodDeclaration(896) at 1", "Insert MarkerAnnotation(904) into MethodDeclaration(917) at 1", "Insert MarkerAnnotation(925) into MethodDeclaration(940) at 1", "Insert MarkerAnnotation(948) into MethodDeclaration(961) at 1", "Insert MarkerAnnotation(969) into MethodDeclaration(984) at 1", "Insert MarkerAnnotation(992) into MethodDeclaration(1005) at 1", "Insert MarkerAnnotation(1015) into MethodDeclaration(1030) at 1", "Insert MarkerAnnotation(1038) into MethodDeclaration(1051) at 1", "Insert MarkerAnnotation(1059) into MethodDeclaration(1074) at 1", "Insert MarkerAnnotation(1082) into MethodDeclaration(1095) at 1", "Insert MarkerAnnotation(1103) into MethodDeclaration(1118) at 1", "Insert MarkerAnnotation(1126) into MethodDeclaration(1139) at 1", "Insert MarkerAnnotation(1147) into MethodDeclaration(1162) at 1", "Insert MarkerAnnotation(1170) into MethodDeclaration(1183) at 1", "Insert MarkerAnnotation(1191) into MethodDeclaration(1206) at 1", "Insert MarkerAnnotation(1214) into MethodDeclaration(1227) at 1", "Insert MarkerAnnotation(1235) into MethodDeclaration(1250) at 1", "Insert MarkerAnnotation(1258) into MethodDeclaration(1271) at 1", "Insert MarkerAnnotation(1279) into MethodDeclaration(1294) at 1", "Insert MarkerAnnotation(1302) into MethodDeclaration(1315) at 1", "Insert MarkerAnnotation(1323) into MethodDeclaration(1338) at 1", "Insert MarkerAnnotation(1346) into MethodDeclaration(1359) at 1", "Insert MarkerAnnotation(1367) into MethodDeclaration(1382) at 1", "Insert MarkerAnnotation(1390) into MethodDeclaration(1403) at 1", "Insert MarkerAnnotation(1411) into MethodDeclaration(1426) at 1", "Insert MarkerAnnotation(1434) into MethodDeclaration(1447) at 1", "Move Javadoc(1298) into MethodDeclaration(1473) at 0", "Insert MarkerAnnotation(1458) into MethodDeclaration(1473) at 1", "Update PrimitiveType: void(1388) to boolean", "Insert SimpleName: enterCompositeValueNode(1461) into MethodDeclaration(1473) at 4", "Move SingleVariableDeclaration(1305) into MethodDeclaration(1473) at 6", "Move Block(1459) into MethodDeclaration(1473) at 7", "Insert MarkerAnnotation(1484) into MethodDeclaration(1497) at 1", "Move Javadoc(1426) into MethodDeclaration(1530) at 0", "Insert MarkerAnnotation(1505) into MethodDeclaration(1530) at 1", "Move SingleVariableDeclaration(1433) into MethodDeclaration(1530) at 6", "Move Javadoc(1405) into MethodDeclaration(1552) at 0", "Insert MarkerAnnotation(1538) into MethodDeclaration(1552) at 1", "Move SingleVariableDeclaration(1412) into MethodDeclaration(1552) at 5", "Move Javadoc(1485) into MethodDeclaration(1575) at 0", "Insert MarkerAnnotation(1560) into MethodDeclaration(1575) at 1", "Move SingleVariableDeclaration(1473) into MethodDeclaration(1575) at 6", "Move Block(1499) into MethodDeclaration(1575) at 7", "Move Javadoc(1506) into MethodDeclaration(1596) at 0", "Insert MarkerAnnotation(1583) into MethodDeclaration(1596) at 1", "Move SingleVariableDeclaration(1452) into MethodDeclaration(1596) at 6", "Move Block(1518) into MethodDeclaration(1596) at 7", "Move Javadoc(1445) into MethodDeclaration(1619) at 0", "Insert MarkerAnnotation(1604) into MethodDeclaration(1619) at 1", "Move SingleVariableDeclaration(1513) into MethodDeclaration(1619) at 5", "Insert Block(1618) into MethodDeclaration(1619) at 6", "Move Javadoc(1466) into MethodDeclaration(1640) at 0", "Insert MarkerAnnotation(1627) into MethodDeclaration(1640) at 1", "Move SingleVariableDeclaration(1492) into MethodDeclaration(1640) at 5", "Move Block(1478) into MethodDeclaration(1640) at 6", "Insert MarkerAnnotation(1648) into MethodDeclaration(1663) at 1", "Insert MarkerAnnotation(1671) into MethodDeclaration(1684) at 1", "Insert MarkerAnnotation(1692) into MethodDeclaration(1707) at 1", "Insert MarkerAnnotation(1715) into MethodDeclaration(1728) at 1", "Insert MarkerAnnotation(1736) into MethodDeclaration(1751) at 1", "Insert MarkerAnnotation(1759) into MethodDeclaration(1772) at 1", "Insert MarkerAnnotation(1780) into MethodDeclaration(1795) at 1", "Insert MarkerAnnotation(1803) into MethodDeclaration(1816) at 1", "Insert MarkerAnnotation(1818) into MethodDeclaration(1842) at 0", "Insert MarkerAnnotation(1844) into MethodDeclaration(1857) at 0", "Insert MarkerAnnotation(1865) into MethodDeclaration(1874) at 1", "Insert SimpleName: Override(208) into MarkerAnnotation(209) at 0", "Insert SimpleName: Override(231) into MarkerAnnotation(232) at 0", "Insert SimpleName: Override(252) into MarkerAnnotation(253) at 0", "Insert SimpleName: Override(275) into MarkerAnnotation(276) at 0", "Insert SimpleName: Override(296) into MarkerAnnotation(297) at 0", "Insert SimpleName: Override(319) into MarkerAnnotation(320) at 0", "Insert SimpleName: Override(340) into MarkerAnnotation(341) at 0", "Insert SimpleName: Override(363) into MarkerAnnotation(364) at 0", "Insert SimpleName: Override(384) into MarkerAnnotation(385) at 0", "Insert SimpleName: Override(407) into MarkerAnnotation(408) at 0", "Insert SimpleName: Override(428) into MarkerAnnotation(429) at 0", "Insert SimpleName: Override(451) into MarkerAnnotation(452) at 0", "Insert SimpleName: Override(480) into MarkerAnnotation(481) at 0", "Insert SimpleName: Override(503) into MarkerAnnotation(504) at 0", "Insert SimpleName: Override(524) into MarkerAnnotation(525) at 0", "Insert SimpleName: Override(547) into MarkerAnnotation(548) at 0", "Insert TagElement(563) into Javadoc(564) at 0", "Insert SimpleName: Override(565) into MarkerAnnotation(566) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(575) into SingleVariableDeclaration(577) at 0", "Insert SimpleName: node(576) into SingleVariableDeclaration(577) at 1", "Move ExpressionStatement(1318) into Block(585) at 0", "Move ReturnStatement(1418) into Block(585) at 1", "Insert SimpleName: Override(590) into MarkerAnnotation(591) at 0", "Insert ParameterizedType: CssNodesListNode<? extends CssNode>(600) into SingleVariableDeclaration(602) at 0", "Update SimpleName: value(1359) to node", "Insert SimpleName: Override(616) into MarkerAnnotation(617) at 0", "Insert SimpleName: Override(639) into MarkerAnnotation(640) at 0", "Insert SimpleName: Override(660) into MarkerAnnotation(661) at 0", "Insert SimpleName: Override(683) into MarkerAnnotation(684) at 0", "Insert SimpleName: Override(704) into MarkerAnnotation(705) at 0", "Insert SimpleName: Override(727) into MarkerAnnotation(728) at 0", "Insert SimpleName: Override(748) into MarkerAnnotation(749) at 0", "Insert SimpleName: Override(771) into MarkerAnnotation(772) at 0", "Insert SimpleName: Override(792) into MarkerAnnotation(793) at 0", "Insert SimpleName: Override(815) into MarkerAnnotation(816) at 0", "Insert SimpleName: Override(836) into MarkerAnnotation(837) at 0", "Insert SimpleName: Override(859) into MarkerAnnotation(860) at 0", "Insert SimpleName: Override(880) into MarkerAnnotation(881) at 0", "Insert SimpleName: Override(903) into MarkerAnnotation(904) at 0", "Insert SimpleName: Override(924) into MarkerAnnotation(925) at 0", "Insert SimpleName: Override(947) into MarkerAnnotation(948) at 0", "Insert SimpleName: Override(968) into MarkerAnnotation(969) at 0", "Insert SimpleName: Override(991) into MarkerAnnotation(992) at 0", "Insert SimpleName: Override(1014) into MarkerAnnotation(1015) at 0", "Insert SimpleName: Override(1037) into MarkerAnnotation(1038) at 0", "Insert SimpleName: Override(1058) into MarkerAnnotation(1059) at 0", "Insert SimpleName: Override(1081) into MarkerAnnotation(1082) at 0", "Insert SimpleName: Override(1102) into MarkerAnnotation(1103) at 0", "Insert SimpleName: Override(1125) into MarkerAnnotation(1126) at 0", "Insert SimpleName: Override(1146) into MarkerAnnotation(1147) at 0", "Insert SimpleName: Override(1169) into MarkerAnnotation(1170) at 0", "Insert SimpleName: Override(1190) into MarkerAnnotation(1191) at 0", "Insert SimpleName: Override(1213) into MarkerAnnotation(1214) at 0", "Insert SimpleName: Override(1234) into MarkerAnnotation(1235) at 0", "Insert SimpleName: Override(1257) into MarkerAnnotation(1258) at 0", "Insert SimpleName: Override(1278) into MarkerAnnotation(1279) at 0", "Insert SimpleName: Override(1301) into MarkerAnnotation(1302) at 0", "Insert SimpleName: Override(1322) into MarkerAnnotation(1323) at 0", "Insert SimpleName: Override(1345) into MarkerAnnotation(1346) at 0", "Insert SimpleName: Override(1366) into MarkerAnnotation(1367) at 0", "Insert SimpleName: Override(1389) into MarkerAnnotation(1390) at 0", "Insert SimpleName: Override(1410) into MarkerAnnotation(1411) at 0", "Insert SimpleName: Override(1433) into MarkerAnnotation(1434) at 0", "Insert SimpleName: Override(1457) into MarkerAnnotation(1458) at 0", "Insert SimpleName: Override(1483) into MarkerAnnotation(1484) at 0", "Insert SimpleName: Override(1504) into MarkerAnnotation(1505) at 0", "Insert ExpressionStatement(1517) into Block(1529) at 0", "Move ReturnStatement(1375) into Block(1529) at 2", "Insert SimpleName: Override(1537) into MarkerAnnotation(1538) at 0", "Insert SimpleName: Override(1559) into MarkerAnnotation(1560) at 0", "Insert SimpleName: Override(1582) into MarkerAnnotation(1583) at 0", "Insert SimpleName: Override(1603) into MarkerAnnotation(1604) at 0", "Insert ExpressionStatement(1615) into Block(1618) at 0", "Insert ReturnStatement(1617) into Block(1618) at 1", "Insert SimpleName: Override(1626) into MarkerAnnotation(1627) at 0", "Insert SimpleName: Override(1647) into MarkerAnnotation(1648) at 0", "Insert SimpleName: Override(1670) into MarkerAnnotation(1671) at 0", "Insert SimpleName: Override(1691) into MarkerAnnotation(1692) at 0", "Insert SimpleName: Override(1714) into MarkerAnnotation(1715) at 0", "Insert SimpleName: Override(1735) into MarkerAnnotation(1736) at 0", "Insert SimpleName: Override(1758) into MarkerAnnotation(1759) at 0", "Insert SimpleName: Override(1779) into MarkerAnnotation(1780) at 0", "Insert SimpleName: Override(1802) into MarkerAnnotation(1803) at 0", "Insert SimpleName: Override(1817) into MarkerAnnotation(1818) at 0", "Insert ExpressionStatement(1838) into Block(1841) at 1", "Insert SimpleName: Override(1843) into MarkerAnnotation(1844) at 0", "Insert SimpleName: Override(1864) into MarkerAnnotation(1865) at 0", "Insert TextElement: Called between adjacent nodes in a media type list (562) into TagElement(563) at 0", "Insert SimpleType: CssNodesListNode(571) into ParameterizedType: CssNodesListNode<? extends CssNode>(575) at 0", "Insert WildcardType: ? extends CssNode(574) into ParameterizedType: CssNodesListNode<? extends CssNode>(575) at 1", "Update TextElement: Called before visiting a (1345) to Called between adjacent nodes in a media type list ", "Insert SimpleType: CssNodesListNode(596) into ParameterizedType: CssNodesListNode<? extends CssNode>(600) at 0", "Insert WildcardType: ? extends CssNode(599) into ParameterizedType: CssNodesListNode<? extends CssNode>(600) at 1", "Insert MethodInvocation(1516) into ExpressionStatement(1517) at 0", "Insert MethodInvocation(1614) into ExpressionStatement(1615) at 0", "Insert BooleanLiteral: true(1616) into ReturnStatement(1617) at 0", "Insert MethodInvocation(1837) into ExpressionStatement(1838) at 0", "Insert SimpleName: CssNodesListNode(570) into SimpleType: CssNodesListNode(571) at 0", "Insert SimpleType: CssNode(573) into WildcardType: ? extends CssNode(574) at 0", "Insert StringLiteral: \"(MediaTypeListDelimiter\"(580) into MethodInvocation(581) at 2", "Insert SimpleName: CssNodesListNode(595) into SimpleType: CssNodesListNode(596) at 0", "Insert SimpleType: CssNode(598) into WildcardType: ? extends CssNode(599) at 0", "Insert StringLiteral: \")\"(605) into MethodInvocation(606) at 2", "Insert SimpleName: sb(1513) into MethodInvocation(1516) at 0", "Insert SimpleName: append(1514) into MethodInvocation(1516) at 1", "Insert StringLiteral: \"(CompositeValueNodeOperator \"(1515) into MethodInvocation(1516) at 2", "Update SimpleName: enter(1413) to sb", "Insert SimpleName: append(1519) into MethodInvocation(1525) at 1", "Insert MethodInvocation(1524) into MethodInvocation(1525) at 2", "Update SimpleName: leave(1434) to sb", "Update SimpleName: parent(1435) to append", "Insert StringLiteral: \")\"(1548) into MethodInvocation(1549) at 2", "Insert SimpleName: enter(1612) into MethodInvocation(1614) at 0", "Insert SimpleName: value(1613) into MethodInvocation(1614) at 1", "Insert SimpleName: sb(1830) into MethodInvocation(1837) at 0", "Insert SimpleName: append(1831) into MethodInvocation(1837) at 1", "Insert InfixExpression: +(1836) into MethodInvocation(1837) at 2", "Update StringLiteral: \"(%s@%d\"(123) to \"(%s@%d \"", "Insert SimpleName: CssNode(572) into SimpleType: CssNode(573) at 0", "Update SimpleName: CssValueNode(1357) to CssNode", "Move SimpleName: CssValueNode(1357) into SimpleType: CssNode(598) at 0", "Insert MethodInvocation(1522) into MethodInvocation(1524) at 0", "Insert SimpleName: name(1523) into MethodInvocation(1524) at 1", "Insert MethodInvocation(1834) into InfixExpression: +(1836) at 0", "Insert StringLiteral: \" \"(1835) into InfixExpression: +(1836) at 1", "Move SimpleName: parent(1414) into MethodInvocation(1522) at 0", "Insert SimpleName: getOperator(1521) into MethodInvocation(1522) at 1", "Insert SimpleName: n(1832) into MethodInvocation(1834) at 0", "Insert SimpleName: toString(1833) into MethodInvocation(1834) at 1", "Delete SimpleName: value(1312)", "Delete SimpleName: toString(1313)", "Delete MethodInvocation(1314)", "Delete StringLiteral: \" \"(1315)", "Delete InfixExpression: +(1316)", "Delete SimpleName: enter(1306)", "Delete SimpleName: value(1307)", "Delete MethodInvocation(1308)", "Delete ExpressionStatement(1309)", "Delete BooleanLiteral: true(1319)", "Delete ReturnStatement(1320)", "Delete Block(1321)", "Delete TextElement:  CssValueNode(1346)", "Delete TagElement: @code(1347)", "Delete TextElement:  that is not a(1348)", "Delete TextElement:  CssCompositeValueNode(1349)", "Delete TagElement: @code(1350)", "Delete TextElement:  (1351)", "Delete SimpleType: CssValueNode(1358)", "Delete SimpleName: enter(1361)", "Delete SimpleName: value(1362)", "Delete MethodInvocation(1363)", "Delete ExpressionStatement(1364)", "Delete SimpleName: value(1367)", "Delete SimpleName: toString(1368)", "Delete MethodInvocation(1369)", "Delete StringLiteral: \" \"(1370)", "Delete InfixExpression: +(1371)", "Delete TextElement: Called after visiting a (1378)", "Delete TextElement:  CssValueNode(1379)", "Delete TagElement: @code(1380)", "Delete TextElement:  that is not a(1381)", "Delete TextElement:  CssCompositeValueNode(1382)", "Delete TagElement: @code(1383)", "Delete TextElement:  (1384)", "Delete TagElement(1385)", "Delete Javadoc(1386)", "Delete SimpleName: leaveSimpleValueNode(1389)", "Delete SimpleName: CssValueNode(1390)", "Delete SimpleType: CssValueNode(1391)", "Delete SimpleName: value(1392)", "Delete SingleVariableDeclaration(1393)", "Delete SimpleName: leave(1394)", "Delete SimpleName: value(1395)", "Delete MethodInvocation(1396)", "Delete ExpressionStatement(1397)", "Delete Block(1398)"]}}], "commit_stats": [{"total_files": 28, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}