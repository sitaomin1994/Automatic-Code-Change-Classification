{"application": "apache-phoenix", "csha": "5320304f2a013570e9c671b741658d5c8e187890", "files": [{"AggregateIT_cluster": {"actions": [{"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: close", "DEL SimpleName: conn", "DEL MethodInvocation", "DEL ExpressionStatement"]}]}}, {"AggregateIT_diff": {"operations": ["Delete SimpleName: conn(155)", "Delete SimpleName: close(156)", "Delete MethodInvocation(157)", "Delete ExpressionStatement(158)"]}}, {"AlterTableIT_cluster": {"actions": [{"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: close", "DEL SimpleName: conn1"]}]}}, {"AlterTableIT_diff": {"operations": ["Delete SimpleName: conn1(4593)", "Delete SimpleName: close(4594)", "Delete MethodInvocation(4595)", "Delete ExpressionStatement(4596)"]}}, {"LikeExpressionIT_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6", "MOV ExpressionStatement to Block at 7", "MOV ExpressionStatement to Block at 9", "MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 8", "MOV ExpressionStatement to Block at 5"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: commit", "DEL MethodInvocation", "DEL SimpleName: conn"]}]}}, {"LikeExpressionIT_diff": {"operations": ["Move ExpressionStatement(104) into Block(123) at 4", "Move ExpressionStatement(110) into Block(123) at 5", "Move ExpressionStatement(116) into Block(123) at 6", "Move ExpressionStatement(122) into Block(123) at 7", "Move ExpressionStatement(128) into Block(123) at 8", "Move ExpressionStatement(134) into Block(123) at 9", "Delete SimpleName: conn(87)", "Delete SimpleName: commit(88)", "Delete MethodInvocation(89)", "Delete ExpressionStatement(90)"]}}, {"PointInTimeQueryIT_cluster": {"actions": [{"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: close", "DEL SimpleName: conn"]}]}}, {"PointInTimeQueryIT_diff": {"operations": ["Delete SimpleName: conn(347)", "Delete SimpleName: close(348)", "Delete MethodInvocation(349)", "Delete ExpressionStatement(350)"]}}, {"SequenceIT_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 13", "operations": ["INS SimpleName: nextConnection to MethodInvocation at 0", "INS ExpressionStatement to Block at 13", "INS MethodInvocation to ExpressionStatement at 0"]}]}}, {"SequenceIT_diff": {"operations": ["Insert ExpressionStatement(5941) into Block(5975) at 13", "Insert MethodInvocation(5940) into ExpressionStatement(5941) at 0", "Insert SimpleName: nextConnection(5939) into MethodInvocation(5940) at 0"]}}, {"StoreNullsIT_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 59"]}]}}, {"StoreNullsIT_diff": {"operations": ["Move ExpressionStatement(1415) into Block(1496) at 59"]}}, {"TenantSpecificTablesDDLIT_cluster": {"actions": [{"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: close", "DEL SimpleName: conn"]}]}}, {"TenantSpecificTablesDDLIT_diff": {"operations": ["Delete SimpleName: conn(2051)", "Delete SimpleName: close(2052)", "Delete MethodInvocation(2053)", "Delete ExpressionStatement(2054)"]}}, {"UpsertBigValuesIT_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 51"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 33"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 51"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 33"]}]}}, {"UpsertBigValuesIT_diff": {"operations": ["Move ExpressionStatement(159) into Block(559) at 51", "Move ExpressionStatement(674) into Block(900) at 33", "Move ExpressionStatement(1019) into Block(1419) at 51", "Move ExpressionStatement(1540) into Block(1766) at 33"]}}, {"UpsertSelectIT_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.phoenix.util.TestUtil.ATABLE_NAME", "DEL ImportDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: close", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: conn"]}]}}, {"UpsertSelectIT_diff": {"operations": ["Delete QualifiedName: org.apache.phoenix.util.TestUtil.ATABLE_NAME(6)", "Delete ImportDeclaration(7)", "Delete SimpleName: conn(4973)", "Delete SimpleName: close(4974)", "Delete MethodInvocation(4975)", "Delete ExpressionStatement(4976)"]}}, {"FlappingTransactionIT_cluster": {"actions": [{"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: close", "DEL SimpleName: connWithConflict", "DEL Block"]}]}}, {"FlappingTransactionIT_diff": {"operations": ["Delete SimpleName: connWithConflict(1197)", "Delete SimpleName: close(1198)", "Delete MethodInvocation(1199)", "Delete ExpressionStatement(1200)", "Delete Block(1201)"]}}, {"SQLExceptionCode_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 172", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 172", "INS SimpleName: CONNECTION_CLOSED to EnumConstantDeclaration at 0", "INS StringLiteral: \"XCL11\" to EnumConstantDeclaration at 2", "INS NumberLiteral: 1111 to EnumConstantDeclaration at 1", "INS StringLiteral: \"Connectioin is closed.\" to EnumConstantDeclaration at 3"]}]}}, {"SQLExceptionCode_diff": {"operations": ["Insert EnumConstantDeclaration(1364) into EnumDeclaration(1991) at 172", "Insert SimpleName: CONNECTION_CLOSED(1360) into EnumConstantDeclaration(1364) at 0", "Insert NumberLiteral: 1111(1361) into EnumConstantDeclaration(1364) at 1", "Insert StringLiteral: \"XCL11\"(1362) into EnumConstantDeclaration(1364) at 2", "Insert StringLiteral: \"Connectioin is closed.\"(1363) into EnumConstantDeclaration(1364) at 3"]}}, {"PhoenixConnection_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 72", "operations": ["INS SimpleName: buildException to MethodInvocation at 1", "INS SimpleType: SQLException to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 72", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS QualifiedName: SQLExceptionInfo.Builder to SimpleType: SQLExceptionInfo.Builder at 0", "INS QualifiedName: SQLExceptionCode.CONNECTION_CLOSED to ClassInstanceCreation at 1", "INS SimpleName: checkOpen to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: isClosed to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: SQLExceptionInfo.Builder to ClassInstanceCreation at 0", "INS MethodInvocation to ThrowStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS Block to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: checkOpen to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: checkOpen to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ConditionalExpression to ReturnStatement at 0", "operations": ["INS SimpleName: tenantId to InfixExpression: == at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: tenantId to MethodInvocation at 0", "INS StringLiteral: \"\" to ConditionalExpression at 1", "INS SimpleName: getString to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS InfixExpression: == to ConditionalExpression at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkOpen to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "DEL StringLiteral: \"\"", "operations": ["DEL StringLiteral: \"\""]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"PhoenixConnection_diff": {"operations": ["Insert MethodDeclaration(2412) into TypeDeclaration: class(4471) at 72", "Insert Modifier: private(2394) into MethodDeclaration(2412) at 0", "Insert PrimitiveType: void(2395) into MethodDeclaration(2412) at 1", "Insert SimpleName: checkOpen(2396) into MethodDeclaration(2412) at 2", "Insert SimpleType: SQLException(2398) into MethodDeclaration(2412) at 3", "Insert Block(2411) into MethodDeclaration(2412) at 4", "Move Block(3232) into MethodDeclaration(3236) at 7", "Insert Block(3261) into MethodDeclaration(3262) at 7", "Move Block(3208) into MethodDeclaration(3289) at 7", "Insert SimpleName: SQLException(2397) into SimpleType: SQLException(2398) at 0", "Insert IfStatement(2410) into Block(2411) at 0", "Insert ExpressionStatement(2530) into Block(2546) at 0", "Insert ExpressionStatement(2625) into Block(2642) at 0", "Insert ExpressionStatement(2697) into Block(2714) at 0", "Insert ExpressionStatement(2735) into Block(2750) at 0", "Insert ExpressionStatement(2988) into Block(2994) at 0", "Insert ExpressionStatement(3193) into Block(3211) at 0", "Insert ExpressionStatement(3230) into Block(3235) at 0", "Insert ExpressionStatement(3256) into Block(3261) at 0", "Move ReturnStatement(3268) into Block(3261) at 1", "Insert ExpressionStatement(3283) into Block(3288) at 0", "Insert ExpressionStatement(3310) into Block(3328) at 0", "Move ReturnStatement(3184) into Block(3328) at 2", "Insert ExpressionStatement(3353) into Block(3369) at 0", "Insert ExpressionStatement(3467) into Block(3474) at 0", "Insert ExpressionStatement(3504) into Block(3518) at 0", "Insert ExpressionStatement(3586) into Block(3593) at 0", "Insert ExpressionStatement(3639) into Block(3678) at 0", "Insert ExpressionStatement(3792) into Block(3799) at 0", "Insert ExpressionStatement(3848) into Block(3849) at 0", "Insert ExpressionStatement(3867) into Block(3868) at 0", "Insert SimpleName: isClosed(2399) into IfStatement(2410) at 0", "Insert Block(2409) into IfStatement(2410) at 1", "Insert MethodInvocation(2529) into ExpressionStatement(2530) at 0", "Insert MethodInvocation(2624) into ExpressionStatement(2625) at 0", "Insert MethodInvocation(2696) into ExpressionStatement(2697) at 0", "Insert MethodInvocation(2734) into ExpressionStatement(2735) at 0", "Insert ConditionalExpression(2931) into ReturnStatement(2932) at 0", "Insert MethodInvocation(2987) into ExpressionStatement(2988) at 0", "Insert MethodInvocation(3192) into ExpressionStatement(3193) at 0", "Insert MethodInvocation(3229) into ExpressionStatement(3230) at 0", "Insert MethodInvocation(3255) into ExpressionStatement(3256) at 0", "Insert MethodInvocation(3282) into ExpressionStatement(3283) at 0", "Insert MethodInvocation(3309) into ExpressionStatement(3310) at 0", "Insert MethodInvocation(3352) into ExpressionStatement(3353) at 0", "Insert MethodInvocation(3466) into ExpressionStatement(3467) at 0", "Insert MethodInvocation(3503) into ExpressionStatement(3504) at 0", "Insert MethodInvocation(3585) into ExpressionStatement(3586) at 0", "Insert MethodInvocation(3638) into ExpressionStatement(3639) at 0", "Insert MethodInvocation(3791) into ExpressionStatement(3792) at 0", "Insert MethodInvocation(3847) into ExpressionStatement(3848) at 0", "Insert MethodInvocation(3866) into ExpressionStatement(3867) at 0", "Insert ThrowStatement(2408) into Block(2409) at 0", "Insert SimpleName: checkOpen(2528) into MethodInvocation(2529) at 0", "Insert SimpleName: checkOpen(2623) into MethodInvocation(2624) at 0", "Insert SimpleName: checkOpen(2695) into MethodInvocation(2696) at 0", "Insert SimpleName: checkOpen(2733) into MethodInvocation(2734) at 0", "Insert InfixExpression: ==(2926) into ConditionalExpression(2931) at 0", "Insert StringLiteral: \"\"(2927) into ConditionalExpression(2931) at 1", "Insert MethodInvocation(2930) into ConditionalExpression(2931) at 2", "Insert SimpleName: checkOpen(2986) into MethodInvocation(2987) at 0", "Insert SimpleName: checkOpen(3191) into MethodInvocation(3192) at 0", "Insert SimpleName: checkOpen(3228) into MethodInvocation(3229) at 0", "Insert SimpleName: checkOpen(3254) into MethodInvocation(3255) at 0", "Insert SimpleName: checkOpen(3281) into MethodInvocation(3282) at 0", "Insert SimpleName: checkOpen(3308) into MethodInvocation(3309) at 0", "Insert SimpleName: checkOpen(3351) into MethodInvocation(3352) at 0", "Insert SimpleName: checkOpen(3465) into MethodInvocation(3466) at 0", "Insert SimpleName: checkOpen(3502) into MethodInvocation(3503) at 0", "Insert SimpleName: checkOpen(3584) into MethodInvocation(3585) at 0", "Insert SimpleName: checkOpen(3637) into MethodInvocation(3638) at 0", "Insert SimpleName: checkOpen(3790) into MethodInvocation(3791) at 0", "Insert SimpleName: checkOpen(3846) into MethodInvocation(3847) at 0", "Insert SimpleName: checkOpen(3865) into MethodInvocation(3866) at 0", "Insert MethodInvocation(2407) into ThrowStatement(2408) at 0", "Insert SimpleName: tenantId(2924) into InfixExpression: ==(2926) at 0", "Insert NullLiteral(2925) into InfixExpression: ==(2926) at 1", "Insert SimpleName: tenantId(2928) into MethodInvocation(2930) at 0", "Insert SimpleName: getString(2929) into MethodInvocation(2930) at 1", "Insert MethodInvocation(2405) into MethodInvocation(2407) at 0", "Insert SimpleName: buildException(2406) into MethodInvocation(2407) at 1", "Insert ClassInstanceCreation(2403) into MethodInvocation(2405) at 0", "Insert SimpleName: build(2404) into MethodInvocation(2405) at 1", "Insert SimpleType: SQLExceptionInfo.Builder(2401) into ClassInstanceCreation(2403) at 0", "Insert QualifiedName: SQLExceptionCode.CONNECTION_CLOSED(2402) into ClassInstanceCreation(2403) at 1", "Insert ExpressionStatement(2486) into Block(2493) at 0", "Insert ExpressionStatement(3414) into Block(3421) at 0", "Insert QualifiedName: SQLExceptionInfo.Builder(2400) into SimpleType: SQLExceptionInfo.Builder(2401) at 0", "Insert MethodInvocation(2485) into ExpressionStatement(2486) at 0", "Insert MethodInvocation(3413) into ExpressionStatement(3414) at 0", "Insert SimpleName: checkOpen(2484) into MethodInvocation(2485) at 0", "Insert SimpleName: checkOpen(3412) into MethodInvocation(3413) at 0", "Delete StringLiteral: \"\"(2890)", "Delete Block(3185)"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}