{"application": "google-closure-compiler", "csha": "2ed26c24c42aeca003eae3e3a823e9744e6b1714", "files": [{"CompilerOptions_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: boolean", "DEL Javadoc", "DEL FieldDeclaration", "DEL BooleanLiteral: false", "DEL SimpleName: useTTLinNTI", "DEL TextElement: that breaks NTI projects. We use this option to only enable TTL in unit tests, until it", "DEL VariableDeclarationFragment", "DEL TextElement: Temporary option to help support TTL in NTI. We are adding TTL support gradually, but", "DEL TagElement", "DEL TextElement: is fully supported.", "DEL Modifier: private"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: useTTLinNTI", "DEL ThisExpression", "DEL SimpleName: getUseTTLinNTI", "DEL Modifier: public", "DEL PrimitiveType: boolean", "DEL MethodDeclaration", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: setUseTTLinNTI", "DEL ExpressionStatement", "DEL FieldAccess", "DEL MethodDeclaration", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: useTTLinNTI", "DEL Assignment: =", "DEL PrimitiveType: boolean", "DEL PrimitiveType: void", "DEL SimpleName: useTTLinNTI", "DEL SimpleName: useTTLinNTI", "DEL ThisExpression"]}]}}, {"CompilerOptions_diff": {"operations": ["Delete TextElement: Temporary option to help support TTL in NTI. We are adding TTL support gradually, but(416)", "Delete TextElement: that breaks NTI projects. We use this option to only enable TTL in unit tests, until it(417)", "Delete TextElement: is fully supported.(418)", "Delete TagElement(419)", "Delete Javadoc(420)", "Delete Modifier: private(421)", "Delete PrimitiveType: boolean(422)", "Delete SimpleName: useTTLinNTI(423)", "Delete BooleanLiteral: false(424)", "Delete VariableDeclarationFragment(425)", "Delete FieldDeclaration(426)", "Delete Modifier: public(5074)", "Delete PrimitiveType: boolean(5075)", "Delete SimpleName: getUseTTLinNTI(5076)", "Delete ThisExpression(5077)", "Delete SimpleName: useTTLinNTI(5078)", "Delete FieldAccess(5079)", "Delete ReturnStatement(5080)", "Delete Block(5081)", "Delete MethodDeclaration(5082)", "Delete Modifier: public(5083)", "Delete PrimitiveType: void(5084)", "Delete SimpleName: setUseTTLinNTI(5085)", "Delete PrimitiveType: boolean(5086)", "Delete SimpleName: useTTLinNTI(5087)", "Delete SingleVariableDeclaration(5088)", "Delete ThisExpression(5089)", "Delete SimpleName: useTTLinNTI(5090)", "Delete FieldAccess(5091)", "Delete SimpleName: useTTLinNTI(5092)", "Delete Assignment: =(5093)", "Delete ExpressionStatement(5094)", "Delete Block(5095)", "Delete MethodDeclaration(5096)"]}}, {"NewTypeInference_cluster": {"actions": [{"root": "DEL IfStatement", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: getOptions", "DEL MethodInvocation", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: instantiateGenericsWithUnknown", "DEL SimpleName: compiler", "DEL PrefixExpression: !", "DEL SimpleName: getUseTTLinNTI", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: calleeType", "DEL Block"]}]}}, {"NewTypeInference_diff": {"operations": ["Delete ThisExpression(8407)", "Delete SimpleName: compiler(8408)", "Delete FieldAccess(8409)", "Delete SimpleName: getOptions(8410)", "Delete MethodInvocation(8411)", "Delete SimpleName: getUseTTLinNTI(8412)", "Delete MethodInvocation(8413)", "Delete PrefixExpression: !(8414)", "Delete SimpleName: calleeType(8415)", "Delete SimpleName: instantiateGenericsWithUnknown(8416)", "Delete MethodInvocation(8417)", "Delete ReturnStatement(8418)", "Delete Block(8419)", "Delete IfStatement(8420)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}