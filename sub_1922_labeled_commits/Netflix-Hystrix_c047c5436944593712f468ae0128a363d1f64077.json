{"application": "Netflix-Hystrix", "csha": "c047c5436944593712f468ae0128a363d1f64077", "files": [{"HystrixContextScheduler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from java.util.concurrent.TimeUnit to java.util.concurrent", "operations": ["UPD QualifiedName: java.util.concurrent.TimeUnit from java.util.concurrent.TimeUnit to java.util.concurrent"]}, {"root": "INS SimpleName: rx to ImportDeclaration at 0", "operations": ["INS SimpleName: rx to ImportDeclaration at 0"]}, {"root": "UPDATE from rx.Scheduler to rx.internal.schedulers.ScheduledAction", "operations": ["UPD QualifiedName: rx.Scheduler from rx.Scheduler to rx.internal.schedulers.ScheduledAction"]}, {"root": "UPDATE from rx.subscriptions.Subscriptions to rx.subscriptions", "operations": ["UPD QualifiedName: rx.subscriptions.Subscriptions from rx.subscriptions.Subscriptions to rx.subscriptions"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: sa to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4"]}, {"root": "INS SimpleType: ScheduledAction to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: ScheduledAction to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Future<?> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Future<?> to VariableDeclarationStatement at 0", "INS WildcardType: ? to ParameterizedType: Future<?> at 1", "INS SimpleType: Future to ParameterizedType: Future<?> at 0"]}, {"root": "UPDATE from get to sa", "operations": ["UPD SimpleName: get from get to sa", "UPD SimpleName: s from s to sa", "UPD SimpleName: subscription from subscription to sa", "UPD SimpleName: sf from sf to sa"]}, {"root": "UPDATE from s to worker", "operations": ["UPD SimpleName: s from s to worker", "UPD SimpleName: s from s to worker"]}, {"root": "UPDATE from AtomicReference to ScheduledAction", "operations": ["UPD SimpleName: AtomicReference from AtomicReference to ScheduledAction", "UPD SimpleName: Subscription from Subscription to ScheduledAction"]}, {"root": "MOVE from SimpleType: ScheduledAction", "operations": ["MOV SimpleName: Subscription to SimpleType: ScheduledAction at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isUnsubscribed to MethodInvocation at 1", "MOV SimpleName: subscription to MethodInvocation at 0"]}, {"root": "UPDATE from isUnsubscribed to add", "operations": ["UPD SimpleName: isUnsubscribed from isUnsubscribed to add"]}, {"root": "INS SimpleName: sa to MethodInvocation at 0", "operations": ["INS SimpleName: sa to MethodInvocation at 0"]}, {"root": "UPDATE from action to addParent", "operations": ["UPD SimpleName: action from action to addParent"]}, {"root": "UPDATE from call to subscription", "operations": ["UPD SimpleName: call from call to subscription"]}, {"root": "UPDATE from s to f", "operations": ["UPD SimpleName: s from s to f", "UPD SimpleName: s from s to f"]}, {"root": "INS SimpleType: ScheduledAction to ClassInstanceCreation at 0", "operations": ["INS SimpleType: ScheduledAction to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: action to ClassInstanceCreation at 1", "operations": ["INS SimpleName: action to ClassInstanceCreation at 1"]}, {"root": "UPDATE from Subscription to Future", "operations": ["UPD SimpleName: Subscription from Subscription to Future"]}, {"root": "MOVE from SimpleType: Future", "operations": ["MOV SimpleName: Subscription to SimpleType: Future at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from sf to submit", "operations": ["UPD SimpleName: sf from sf to submit"]}, {"root": "UPDATE from empty to unsubscribed", "operations": ["UPD SimpleName: empty from empty to unsubscribed"]}, {"root": "MOVE from SimpleType: ScheduledAction", "operations": ["MOV SimpleName: AtomicReference to SimpleType: ScheduledAction at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.RejectedExecutionException", "DEL ImportDeclaration"]}, {"root": "DEL QualifiedName: java.util.concurrent.atomic.AtomicReference", "operations": ["DEL QualifiedName: java.util.concurrent.atomic.AtomicReference"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.Subscription"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: rx.subscriptions.BooleanSubscription", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.subscriptions.CompositeSubscription"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleName: BooleanSubscription", "DEL SimpleType: BooleanSubscription", "DEL SimpleType: BooleanSubscription", "DEL FieldDeclaration", "DEL SimpleName: BooleanSubscription", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: s"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL ParameterizedType: AtomicReference<Subscription>", "operations": ["DEL SimpleName: AtomicReference", "DEL SimpleType: Subscription", "DEL ParameterizedType: AtomicReference<Subscription>", "DEL SimpleType: AtomicReference"]}, {"root": "DEL ParameterizedType: AtomicReference<>", "operations": ["DEL SimpleType: AtomicReference", "DEL ParameterizedType: AtomicReference<>"]}, {"root": "DEL SimpleType: Subscription", "operations": ["DEL SimpleType: Subscription"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Runnable", "DEL IfStatement", "DEL SimpleName: Runnable", "DEL IfStatement", "DEL Block", "DEL SimpleName: s", "DEL SimpleName: Subscriptions", "DEL ReturnStatement", "DEL SimpleName: s", "DEL SimpleName: s", "DEL Block", "DEL SimpleName: Subscription", "DEL SimpleType: Subscription", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: remove", "DEL AnonymousClassDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: submit", "DEL TryStatement", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: from", "DEL MethodInvocation", "DEL Modifier: public", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleName: run", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: subscription", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL MarkerAnnotation", "DEL InfixExpression: !="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: set", "DEL SimpleName: sf", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: s"]}]}}, {"HystrixContextScheduler_diff": {"operations": ["Move ImportDeclaration(21) into CompilationUnit(502) at 7", "Update QualifiedName: java.util.concurrent.TimeUnit(16) to java.util.concurrent", "Insert SimpleName: rx(16) into ImportDeclaration(17) at 0", "Update QualifiedName: rx.Scheduler(20) to rx.internal.schedulers.ScheduledAction", "Update QualifiedName: rx.subscriptions.Subscriptions(30) to rx.subscriptions", "Move MarkerAnnotation(231) into MethodDeclaration(212) at 0", "Move MarkerAnnotation(220) into MethodDeclaration(223) at 0", "Insert ExpressionStatement(448) into Block(474) at 2", "Move ExpressionStatement(490) into Block(474) at 3", "Move VariableDeclarationStatement(499) into Block(474) at 4", "Insert SimpleType: ScheduledAction(436) into VariableDeclarationStatement(443) at 0", "Insert MethodInvocation(447) into ExpressionStatement(448) at 0", "Insert ParameterizedType: Future<?>(457) into VariableDeclarationStatement(466) at 0", "Update SimpleName: s(530) to sa", "Update SimpleName: s(224) to worker", "Update SimpleName: s(235) to worker", "Update SimpleName: Subscription(455) to ScheduledAction", "Move SimpleName: Subscription(455) into SimpleType: ScheduledAction(436) at 0", "Update SimpleName: sf(458) to sa", "Move SimpleName: subscription(481) into MethodInvocation(447) at 0", "Update SimpleName: isUnsubscribed(482) to add", "Move SimpleName: isUnsubscribed(482) into MethodInvocation(447) at 1", "Insert SimpleName: sa(446) into MethodInvocation(447) at 2", "Insert SimpleName: sa(449) into MethodInvocation(452) at 0", "Update SimpleName: action(487) to addParent", "Update SimpleName: call(488) to subscription", "Insert SimpleType: Future(455) into ParameterizedType: Future<?>(457) at 0", "Insert WildcardType: ?(456) into ParameterizedType: Future<?>(457) at 1", "Update SimpleName: s(494) to f", "Update SimpleName: subscription(525) to sa", "Update SimpleName: s(527) to f", "Insert SimpleType: ScheduledAction(439) into ClassInstanceCreation(441) at 0", "Insert SimpleName: action(440) into ClassInstanceCreation(441) at 1", "Update SimpleName: Subscription(492) to Future", "Move SimpleName: Subscription(492) into SimpleType: Future(455) at 0", "Move MethodInvocation(472) into MethodInvocation(464) at 0", "Update SimpleName: sf(495) to submit", "Update SimpleName: get(496) to sa", "Update SimpleName: empty(447) to unsubscribed", "Update SimpleName: AtomicReference(459) to ScheduledAction", "Move SimpleName: AtomicReference(459) into SimpleType: ScheduledAction(439) at 0", "Delete QualifiedName: java.util.concurrent.RejectedExecutionException(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: java.util.concurrent.atomic.AtomicReference(18)", "Delete QualifiedName: rx.Subscription(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: rx.subscriptions.BooleanSubscription(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: rx.subscriptions.CompositeSubscription(28)", "Delete ImportDeclaration(29)", "Delete Modifier: private(189)", "Delete SimpleName: BooleanSubscription(190)", "Delete SimpleType: BooleanSubscription(191)", "Delete SimpleName: s(192)", "Delete SimpleName: BooleanSubscription(193)", "Delete SimpleType: BooleanSubscription(194)", "Delete ClassInstanceCreation(195)", "Delete VariableDeclarationFragment(196)", "Delete FieldDeclaration(197)", "Delete Modifier: final(452)", "Delete SimpleName: AtomicReference(453)", "Delete SimpleType: AtomicReference(454)", "Delete SimpleType: Subscription(456)", "Delete ParameterizedType: AtomicReference<Subscription>(457)", "Delete SimpleType: AtomicReference(460)", "Delete ParameterizedType: AtomicReference<>(461)", "Delete SimpleType: Subscription(493)", "Delete SimpleName: Subscription(465)", "Delete SimpleType: Subscription(466)", "Delete SimpleName: s(467)", "Delete SimpleName: Subscriptions(468)", "Delete SimpleName: from(469)", "Delete SimpleName: submit(473)", "Delete SimpleName: Runnable(474)", "Delete SimpleType: Runnable(475)", "Delete SimpleName: Override(476)", "Delete MarkerAnnotation(477)", "Delete Modifier: public(478)", "Delete PrimitiveType: void(479)", "Delete SimpleName: run(480)", "Delete MethodInvocation(483)", "Delete ReturnStatement(484)", "Delete Block(485)", "Delete IfStatement(486)", "Delete Block(491)", "Delete SimpleName: s(500)", "Delete NullLiteral(501)", "Delete InfixExpression: !=(502)", "Delete SimpleName: subscription(503)", "Delete SimpleName: remove(504)", "Delete SimpleName: s(505)", "Delete MethodInvocation(506)", "Delete ExpressionStatement(507)", "Delete Block(508)", "Delete IfStatement(509)", "Delete Block(510)", "Delete TryStatement(511)", "Delete Block(512)", "Delete MethodDeclaration(513)", "Delete AnonymousClassDeclaration(514)", "Delete ClassInstanceCreation(515)", "Delete MethodInvocation(516)", "Delete MethodInvocation(517)", "Delete VariableDeclarationFragment(518)", "Delete VariableDeclarationStatement(519)", "Delete SimpleName: sf(520)", "Delete SimpleName: set(521)", "Delete SimpleName: s(522)", "Delete MethodInvocation(523)", "Delete ExpressionStatement(524)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}