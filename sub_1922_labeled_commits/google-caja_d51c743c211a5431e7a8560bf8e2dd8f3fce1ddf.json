{"application": "google-caja", "csha": "d51c743c211a5431e7a8560bf8e2dd8f3fce1ddf", "files": [{"CajolingServiceResult_cluster": {"actions": [{"root": "UPDATE from java.io.Serializable to com.google.gwt.user.client.rpc.IsSerializable", "operations": ["UPD QualifiedName: java.io.Serializable from java.io.Serializable to com.google.gwt.user.client.rpc.IsSerializable"]}, {"root": "UPDATE from Serializable to IsSerializable", "operations": ["UPD SimpleType: Serializable from Serializable to IsSerializable", "UPD SimpleName: Serializable from Serializable to IsSerializable"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: CajolingServiceResult to MethodDeclaration at 1"]}]}}, {"CajolingServiceResult_diff": {"operations": ["Update QualifiedName: java.io.Serializable(2) to com.google.gwt.user.client.rpc.IsSerializable", "Update SimpleType: Serializable(13) to IsSerializable", "Insert MethodDeclaration(37) into TypeDeclaration: class(100) at 7", "Update SimpleName: Serializable(12) to IsSerializable", "Insert Modifier: public(34) into MethodDeclaration(37) at 0", "Insert SimpleName: CajolingServiceResult(35) into MethodDeclaration(37) at 1", "Insert Block(36) into MethodDeclaration(37) at 2"]}}, {"Playground_cluster": {"actions": [{"root": "UPDATE from AsyncCallback<String[]> to AsyncCallback<CajolingServiceResult>", "operations": ["UPD ParameterizedType: AsyncCallback<String[]> from AsyncCallback<String[]> to AsyncCallback<CajolingServiceResult>"]}, {"root": "INS SimpleType: CajolingServiceResult to ParameterizedType: AsyncCallback<String[]> at 1", "operations": ["INS SimpleType: CajolingServiceResult to ParameterizedType: AsyncCallback<String[]> at 1"]}, {"root": "UPDATE from String to CajolingServiceResult", "operations": ["UPD SimpleName: String from String to CajolingServiceResult"]}, {"root": "MOVE from SimpleType: CajolingServiceResult", "operations": ["MOV SimpleName: String to SimpleType: CajolingServiceResult at 0"]}, {"root": "INS SimpleType: CajolingServiceResult to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: CajolingServiceResult to SingleVariableDeclaration at 0", "INS SimpleName: CajolingServiceResult to SimpleType: CajolingServiceResult at 0"]}, {"root": "INS EnhancedForStatement to Block at 2", "operations": ["INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: getMessages to MethodInvocation at 1"]}, {"root": "INS StringLiteral: \"\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"\" to MethodInvocation at 3"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to InfixExpression: != at 0", "operations": ["INS SimpleName: getHtml to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0"]}, {"root": "INS SimpleName: message to MethodInvocation at 2", "operations": ["INS SimpleName: message to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getHtml to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getJavascript to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getHtml to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getJavascript to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS NullLiteral to MethodInvocation at 3", "operations": ["INS NullLiteral to MethodInvocation at 3"]}, {"root": "INS NullLiteral to MethodInvocation at 3", "operations": ["INS NullLiteral to MethodInvocation at 3"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL Dimension", "DEL ArrayType: String[]", "DEL SimpleType: String"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL ArrayType: String[]", "DEL Dimension"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: result", "DEL SimpleName: i"]}, {"root": "DEL ForStatement", "operations": ["DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL Block", "DEL PrimitiveType: int", "DEL ForStatement", "DEL SimpleName: i", "DEL SimpleName: i", "DEL QualifiedName: PlaygroundService.ERRORS", "DEL VariableDeclarationExpression", "DEL PostfixExpression: ++", "DEL SimpleName: i", "DEL QualifiedName: result.length"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL QualifiedName: PlaygroundService.HTML", "DEL SimpleName: result"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: result", "DEL QualifiedName: PlaygroundService.HTML", "DEL ArrayAccess"]}, {"root": "DEL ArrayAccess", "operations": ["DEL QualifiedName: PlaygroundService.HTML", "DEL ArrayAccess", "DEL SimpleName: result"]}]}}, {"Playground_diff": {"operations": ["Update ParameterizedType: AsyncCallback<String[]>(149) to AsyncCallback<CajolingServiceResult>", "Insert SimpleType: CajolingServiceResult(147) into ParameterizedType: AsyncCallback<CajolingServiceResult>(148) at 1", "Update SimpleName: String(145) to CajolingServiceResult", "Move SimpleName: String(145) into SimpleType: CajolingServiceResult(147) at 0", "Insert SimpleType: CajolingServiceResult(174) into SingleVariableDeclaration(176) at 0", "Insert EnhancedForStatement(211) into Block(262) at 2", "Insert SimpleName: CajolingServiceResult(173) into SimpleType: CajolingServiceResult(174) at 0", "Insert SingleVariableDeclaration(201) into EnhancedForStatement(211) at 0", "Insert MethodInvocation(204) into EnhancedForStatement(211) at 1", "Insert Block(210) into EnhancedForStatement(211) at 2", "Insert StringLiteral: \"\"(108) into MethodInvocation(109) at 3", "Move SimpleType: String(175) into SingleVariableDeclaration(201) at 0", "Insert SimpleName: message(200) into SingleVariableDeclaration(201) at 1", "Insert SimpleName: result(202) into MethodInvocation(204) at 0", "Insert SimpleName: getMessages(203) into MethodInvocation(204) at 1", "Move ExpressionStatement(217) into Block(210) at 0", "Insert MethodInvocation(214) into InfixExpression: !=(216) at 0", "Insert SimpleName: result(212) into MethodInvocation(214) at 0", "Insert SimpleName: getHtml(213) into MethodInvocation(214) at 1", "Insert SimpleName: message(207) into MethodInvocation(208) at 2", "Insert MethodInvocation(221) into MethodInvocation(225) at 2", "Insert MethodInvocation(224) into MethodInvocation(225) at 3", "Insert MethodInvocation(231) into MethodInvocation(235) at 2", "Insert MethodInvocation(234) into MethodInvocation(235) at 3", "Insert NullLiteral(246) into MethodInvocation(247) at 3", "Insert NullLiteral(252) into MethodInvocation(253) at 3", "Insert SimpleName: result(219) into MethodInvocation(221) at 0", "Insert SimpleName: getHtml(220) into MethodInvocation(221) at 1", "Insert SimpleName: result(222) into MethodInvocation(224) at 0", "Insert SimpleName: getJavascript(223) into MethodInvocation(224) at 1", "Insert SimpleName: result(229) into MethodInvocation(231) at 0", "Insert SimpleName: getHtml(230) into MethodInvocation(231) at 1", "Insert SimpleName: result(232) into MethodInvocation(234) at 0", "Insert SimpleName: getJavascript(233) into MethodInvocation(234) at 1", "Delete SimpleType: String(146)", "Delete Dimension(147)", "Delete ArrayType: String[](148)", "Delete Dimension(176)", "Delete ArrayType: String[](177)", "Delete SimpleName: result(213)", "Delete SimpleName: i(214)", "Delete ArrayAccess(215)", "Delete PrimitiveType: int(201)", "Delete SimpleName: i(202)", "Delete QualifiedName: PlaygroundService.ERRORS(203)", "Delete VariableDeclarationFragment(204)", "Delete VariableDeclarationExpression(205)", "Delete SimpleName: i(206)", "Delete QualifiedName: result.length(207)", "Delete InfixExpression: <(208)", "Delete SimpleName: i(209)", "Delete PostfixExpression: ++(210)", "Delete Block(218)", "Delete ForStatement(219)", "Delete SimpleName: result(220)", "Delete QualifiedName: PlaygroundService.HTML(221)", "Delete ArrayAccess(222)", "Delete SimpleName: result(227)", "Delete QualifiedName: PlaygroundService.HTML(228)", "Delete ArrayAccess(229)", "Delete SimpleName: result(234)", "Delete QualifiedName: PlaygroundService.HTML(235)", "Delete ArrayAccess(236)"]}}, {"PlaygroundService_cluster": {"actions": [{"root": "INS SimpleType: CajolingServiceResult to MethodDeclaration at 1", "operations": ["INS SimpleType: CajolingServiceResult to MethodDeclaration at 1"]}, {"root": "UPDATE from String to CajolingServiceResult", "operations": ["UPD SimpleName: String from String to CajolingServiceResult"]}, {"root": "MOVE from SimpleType: CajolingServiceResult", "operations": ["MOV SimpleName: String to SimpleType: CajolingServiceResult at 0"]}, {"root": "UPDATE from  cajoled html, js and cajoling messages as an array to  cajoled html, js and cajoling messages", "operations": ["UPD TextElement:  cajoled html, js and cajoling messages as an array from  cajoled html, js and cajoling messages as an array to  cajoled html, js and cajoling messages"]}, {"root": "DEL TextElement: as follows:", "operations": ["DEL TextElement: as follows:"]}, {"root": "DEL TextElement: return[0] -> html", "operations": ["DEL TextElement: return[0] -> html"]}, {"root": "DEL TextElement: return[1] -> js", "operations": ["DEL TextElement: return[1] -> js"]}, {"root": "DEL TextElement: return[2 .. (return.length - 1)] -> messages", "operations": ["DEL TextElement: return[2 .. (return.length - 1)] -> messages"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL ArrayType: String[]", "DEL Dimension", "DEL SimpleType: String"]}]}}, {"PlaygroundService_diff": {"operations": ["Insert SimpleType: CajolingServiceResult(51) into MethodDeclaration(61) at 1", "Update SimpleName: String(54) to CajolingServiceResult", "Move SimpleName: String(54) into SimpleType: CajolingServiceResult(51) at 0", "Update TextElement:  cajoled html, js and cajoling messages as an array(47) to  cajoled html, js and cajoling messages", "Delete TextElement: as follows:(48)", "Delete TextElement: return[0] -> html(49)", "Delete TextElement: return[1] -> js(50)", "Delete TextElement: return[2 .. (return.length - 1)] -> messages(51)", "Delete SimpleType: String(55)", "Delete Dimension(56)", "Delete ArrayType: String[](57)"]}}, {"PlaygroundServiceAsync_cluster": {"actions": [{"root": "UPDATE from AsyncCallback<String[]> to AsyncCallback<CajolingServiceResult>", "operations": ["UPD ParameterizedType: AsyncCallback<String[]> from AsyncCallback<String[]> to AsyncCallback<CajolingServiceResult>"]}, {"root": "UPDATE from callback to asyncCallback", "operations": ["UPD SimpleName: callback from callback to asyncCallback"]}, {"root": "INS SimpleType: CajolingServiceResult to ParameterizedType: AsyncCallback<String[]> at 1", "operations": ["INS SimpleType: CajolingServiceResult to ParameterizedType: AsyncCallback<String[]> at 1"]}, {"root": "UPDATE from String to CajolingServiceResult", "operations": ["UPD SimpleName: String from String to CajolingServiceResult"]}, {"root": "MOVE from SimpleType: CajolingServiceResult", "operations": ["MOV SimpleName: String to SimpleType: CajolingServiceResult at 0"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL SimpleType: String", "DEL Dimension", "DEL ArrayType: String[]"]}]}}, {"PlaygroundServiceAsync_diff": {"operations": ["Update ParameterizedType: AsyncCallback<String[]>(51) to AsyncCallback<CajolingServiceResult>", "Update SimpleName: callback(52) to asyncCallback", "Insert SimpleType: CajolingServiceResult(48) into ParameterizedType: AsyncCallback<CajolingServiceResult>(49) at 1", "Update SimpleName: String(47) to CajolingServiceResult", "Move SimpleName: String(47) into SimpleType: CajolingServiceResult(48) at 0", "Delete SimpleType: String(48)", "Delete Dimension(49)", "Delete ArrayType: String[](50)"]}}, {"GWTCajolingServiceImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: java.util.Collections to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: com.google.caja.demos.playground.client.CajolingServiceResult to ImportDeclaration at 0"]}, {"root": "INS SimpleType: CajolingServiceResult to MethodDeclaration at 1", "operations": ["INS SimpleType: CajolingServiceResult to MethodDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: MessageContext to SingleVariableDeclaration at 0", "INS SimpleName: mc to SingleVariableDeclaration at 1", "INS SimpleName: MessageContext to SimpleType: MessageContext at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 4"]}, {"root": "UPDATE from String to CajolingServiceResult", "operations": ["UPD SimpleName: String from String to CajolingServiceResult"]}, {"root": "MOVE from SimpleType: CajolingServiceResult", "operations": ["MOV SimpleName: String to SimpleType: CajolingServiceResult at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 7", "operations": ["INS VariableDeclarationStatement to Block at 7", "INS SimpleName: singletonMap to MethodInvocation at 1", "INS SimpleName: input to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ParameterizedType: Map<InputSource,? extends CharSequence> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS WildcardType: ? extends CharSequence to ParameterizedType: Map<InputSource,? extends CharSequence> at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Collections to MethodInvocation at 0", "INS SimpleName: originalSources to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 9", "INS SimpleName: messages to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Map<InputSource,CharSequence> to Map<InputSource,? extends CharSequence>", "operations": ["UPD ParameterizedType: Map<InputSource,CharSequence> from Map<InputSource,CharSequence> to Map<InputSource,? extends CharSequence>"]}, {"root": "INS SimpleType: String to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: String to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: String[] to VariableDeclarationStatement at 0"]}, {"root": "INS ClassInstanceCreation to ReturnStatement at 0", "operations": ["INS SimpleName: CajolingServiceResult to SimpleType: CajolingServiceResult at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: CajolingServiceResult to ClassInstanceCreation at 0", "INS SimpleName: javascript to ClassInstanceCreation at 2", "INS SimpleName: html to ClassInstanceCreation at 1", "INS SimpleName: messages to ClassInstanceCreation at 3"]}, {"root": "INS WildcardType: ? extends CharSequence to ParameterizedType: Map<InputSource,CharSequence> at 2", "operations": ["INS WildcardType: ? extends CharSequence to ParameterizedType: Map<InputSource,CharSequence> at 2"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from messages to html", "operations": ["UPD SimpleName: messages from messages to html"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from result to javascript", "operations": ["UPD SimpleName: result from result to javascript"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ParameterizedType: Map<InputSource,? extends CharSequence>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<InputSource,? extends CharSequence> at 0", "MOV SimpleType: InputSource to ClassInstanceCreation at 0"]}, {"root": "MOVE from ParameterizedType: Map<InputSource,? extends CharSequence>", "operations": ["MOV SimpleType: InputSource to ParameterizedType: Map<InputSource,? extends CharSequence> at 1", "MOV SimpleType: CharSequence to WildcardType: ? extends CharSequence at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleName: split to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"<script[^>]*>\" to MethodInvocation at 2", "INS SimpleName: htmlAndJs to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: html to Assignment: = at 0", "INS SimpleName: htmlAndJs to ArrayAccess at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS ArrayAccess to Assignment: = at 1"]}, {"root": "MOVE from WildcardType: ? extends CharSequence", "operations": ["MOV SimpleType: CharSequence to WildcardType: ? extends CharSequence at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: String[] to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from System to formatMessages", "operations": ["UPD SimpleName: System from System to formatMessages"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: arraycopy to MethodInvocation at 1", "MOV SimpleName: result to MethodInvocation at 3", "MOV SimpleName: messages to MethodInvocation at 2", "MOV SimpleName: System to MethodInvocation at 0"]}, {"root": "UPDATE from arraycopy to originalSources", "operations": ["UPD SimpleName: arraycopy from arraycopy to originalSources"]}, {"root": "UPDATE from messages to mc", "operations": ["UPD SimpleName: messages from messages to mc"]}, {"root": "UPDATE from result to mq", "operations": ["UPD SimpleName: result from result to mq"]}, {"root": "INS SimpleName: javascript to Assignment: = at 0", "operations": ["INS SimpleName: javascript to Assignment: = at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS NumberLiteral: 9 to InfixExpression: - at 1", "INS QualifiedName: htmlAndJs.length to InfixExpression: > at 0", "INS InfixExpression: - to MethodInvocation at 3", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: htmlAndJs to ArrayAccess at 0", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: substring to MethodInvocation at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: - at 0", "INS InfixExpression: > to ConditionalExpression at 0", "INS SimpleName: length to MethodInvocation at 1", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS NumberLiteral: 1 to InfixExpression: > at 1", "INS ArrayAccess to MethodInvocation at 0", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: htmlAndJs to ArrayAccess at 0"]}, {"root": "UPDATE from output to guessURI", "operations": ["UPD SimpleName: output from output to guessURI"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: toString to MethodInvocation at 1"]}, {"root": "UPDATE from toString to url", "operations": ["UPD SimpleName: toString from toString to url"]}, {"root": "INS SimpleName: String to SimpleType: String at 0", "operations": ["INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: output to MethodInvocation at 0", "operations": ["INS SimpleName: output to MethodInvocation at 0"]}, {"root": "INS SimpleName: toString to MethodInvocation at 1", "operations": ["INS SimpleName: toString to MethodInvocation at 1"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL SimpleType: String", "DEL ArrayType: String[]", "DEL Dimension"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: HashMap", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Map<InputSource,CharSequence>", "DEL SimpleName: originalSrc", "DEL SimpleType: CharSequence", "DEL SimpleName: CharSequence", "DEL ParameterizedType: HashMap<InputSource,CharSequence>", "DEL SimpleType: HashMap"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: success", "DEL BooleanLiteral: false", "DEL PrimitiveType: boolean", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: originalSrc", "DEL MethodInvocation", "DEL SimpleName: mq", "DEL SimpleName: formatMessages"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL SimpleType: String", "DEL ArrayType: String[]", "DEL Dimension"]}, {"root": "DEL ArrayCreation", "operations": ["DEL ArrayCreation", "DEL NumberLiteral: 2", "DEL InfixExpression: +", "DEL QualifiedName: messages.length"]}, {"root": "DEL SimpleName: success", "operations": ["DEL SimpleName: success"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: success", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: result", "DEL QualifiedName: PlaygroundService.HTML", "DEL Assignment: =", "DEL ConditionalExpression", "DEL ArrayAccess"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL QualifiedName: PlaygroundService.JAVASCRIPT", "DEL ArrayAccess", "DEL SimpleName: result", "DEL ExpressionStatement", "DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL QualifiedName: PlaygroundService.ERRORS", "DEL QualifiedName: messages.length"]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}]}}, {"GWTCajolingServiceImpl_diff": {"operations": ["Move ImportDeclaration(37) into CompilationUnit(642) at 1", "Move ImportDeclaration(39) into CompilationUnit(642) at 2", "Move ImportDeclaration(41) into CompilationUnit(642) at 3", "Move ImportDeclaration(43) into CompilationUnit(642) at 4", "Move ImportDeclaration(45) into CompilationUnit(642) at 5", "Move ImportDeclaration(47) into CompilationUnit(642) at 6", "Move ImportDeclaration(49) into CompilationUnit(642) at 7", "Move ImportDeclaration(51) into CompilationUnit(642) at 8", "Move ImportDeclaration(53) into CompilationUnit(642) at 9", "Move ImportDeclaration(55) into CompilationUnit(642) at 10", "Move ImportDeclaration(57) into CompilationUnit(642) at 11", "Insert ImportDeclaration(19) into CompilationUnit(642) at 9", "Insert ImportDeclaration(27) into CompilationUnit(642) at 13", "Insert QualifiedName: java.util.Collections(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: com.google.caja.demos.playground.client.CajolingServiceResult(26) into ImportDeclaration(27) at 0", "Insert SimpleType: CajolingServiceResult(247) into MethodDeclaration(423) at 1", "Move TryStatement(346) into Block(422) at 7", "Insert SingleVariableDeclaration(443) into MethodDeclaration(551) at 4", "Move VariableDeclarationStatement(454) into Block(550) at 4", "Update SimpleName: String(242) to CajolingServiceResult", "Move SimpleName: String(242) into SimpleType: CajolingServiceResult(247) at 0", "Move VariableDeclarationStatement(429) into Block(422) at 0", "Insert VariableDeclarationStatement(313) into Block(422) at 5", "Insert VariableDeclarationStatement(414) into Block(422) at 7", "Update ParameterizedType: Map<InputSource,CharSequence>(415) to Map<InputSource,? extends CharSequence>", "Insert SimpleType: MessageContext(441) into SingleVariableDeclaration(443) at 0", "Insert SimpleName: mc(442) into SingleVariableDeclaration(443) at 1", "Insert SimpleType: String(282) into VariableDeclarationStatement(286) at 0", "Insert SimpleType: String(288) into VariableDeclarationStatement(292) at 0", "Insert ParameterizedType: Map<InputSource,? extends CharSequence>(300) into VariableDeclarationStatement(313) at 0", "Insert VariableDeclarationFragment(312) into VariableDeclarationStatement(313) at 1", "Move ArrayType: String[](366) into VariableDeclarationStatement(414) at 0", "Insert VariableDeclarationFragment(413) into VariableDeclarationStatement(414) at 1", "Insert ClassInstanceCreation(420) into ReturnStatement(421) at 0", "Insert WildcardType: ? extends CharSequence(436) into ParameterizedType: Map<InputSource,? extends CharSequence>(437) at 2", "Insert SimpleName: MessageContext(440) into SimpleType: MessageContext(441) at 0", "Move SimpleName: String(347) into SimpleType: String(282) at 0", "Update SimpleName: messages(351) to html", "Insert NullLiteral(284) into VariableDeclarationFragment(285) at 1", "Move SimpleName: String(358) into SimpleType: String(288) at 0", "Update SimpleName: result(362) to javascript", "Insert NullLiteral(290) into VariableDeclarationFragment(291) at 1", "Move SimpleType: Map(264) into ParameterizedType: Map<InputSource,? extends CharSequence>(300) at 0", "Move SimpleType: InputSource(274) into ParameterizedType: Map<InputSource,? extends CharSequence>(300) at 1", "Insert WildcardType: ? extends CharSequence(299) into ParameterizedType: Map<InputSource,? extends CharSequence>(300) at 2", "Insert SimpleName: originalSources(301) into VariableDeclarationFragment(312) at 0", "Insert MethodInvocation(311) into VariableDeclarationFragment(312) at 1", "Insert VariableDeclarationStatement(357) into Block(385) at 3", "Insert ExpressionStatement(363) into Block(385) at 4", "Insert SimpleName: messages(407) into VariableDeclarationFragment(413) at 0", "Insert MethodInvocation(412) into VariableDeclarationFragment(413) at 1", "Insert SimpleType: CajolingServiceResult(416) into ClassInstanceCreation(420) at 0", "Insert SimpleName: html(417) into ClassInstanceCreation(420) at 1", "Insert SimpleName: javascript(418) into ClassInstanceCreation(420) at 2", "Insert SimpleName: messages(419) into ClassInstanceCreation(420) at 3", "Move SimpleType: CharSequence(414) into WildcardType: ? extends CharSequence(436) at 0", "Move SimpleType: CharSequence(276) into WildcardType: ? extends CharSequence(299) at 0", "Insert SimpleName: Collections(302) into MethodInvocation(311) at 0", "Insert SimpleName: singletonMap(303) into MethodInvocation(311) at 1", "Insert ClassInstanceCreation(309) into MethodInvocation(311) at 2", "Insert SimpleName: input(310) into MethodInvocation(311) at 3", "Move ArrayType: String[](350) into VariableDeclarationStatement(357) at 0", "Insert VariableDeclarationFragment(356) into VariableDeclarationStatement(357) at 1", "Insert Assignment: =(362) into ExpressionStatement(363) at 0", "Update SimpleName: System(390) to formatMessages", "Move SimpleName: System(390) into MethodInvocation(412) at 0", "Update SimpleName: arraycopy(391) to originalSources", "Move SimpleName: arraycopy(391) into MethodInvocation(412) at 1", "Update SimpleName: messages(392) to mc", "Move SimpleName: messages(392) into MethodInvocation(412) at 2", "Update SimpleName: result(394) to mq", "Move SimpleName: result(394) into MethodInvocation(412) at 3", "Insert SimpleName: CajolingServiceResult(415) into SimpleType: CajolingServiceResult(416) at 0", "Move SimpleType: InputSource(266) into ClassInstanceCreation(309) at 0", "Insert MethodInvocation(308) into ClassInstanceCreation(309) at 1", "Insert SimpleName: htmlAndJs(349) into VariableDeclarationFragment(356) at 0", "Insert MethodInvocation(355) into VariableDeclarationFragment(356) at 1", "Insert SimpleName: html(358) into Assignment: =(362) at 0", "Insert ArrayAccess(361) into Assignment: =(362) at 1", "Insert SimpleName: javascript(364) into Assignment: =(383) at 0", "Insert ConditionalExpression(382) into Assignment: =(383) at 1", "Update SimpleName: output(377) to guessURI", "Move SimpleName: output(377) into MethodInvocation(308) at 0", "Update SimpleName: toString(378) to url", "Move SimpleName: toString(378) into MethodInvocation(308) at 1", "Insert SimpleName: String(345) into SimpleType: String(346) at 0", "Move MethodInvocation(379) into MethodInvocation(355) at 0", "Insert SimpleName: split(353) into MethodInvocation(355) at 1", "Insert StringLiteral: \"<script[^>]*>\"(354) into MethodInvocation(355) at 2", "Insert SimpleName: htmlAndJs(359) into ArrayAccess(361) at 0", "Insert NumberLiteral: 0(360) into ArrayAccess(361) at 1", "Insert InfixExpression: >(367) into ConditionalExpression(382) at 0", "Insert MethodInvocation(380) into ConditionalExpression(382) at 1", "Insert NullLiteral(381) into ConditionalExpression(382) at 2", "Insert SimpleName: output(350) into MethodInvocation(352) at 0", "Insert SimpleName: toString(351) into MethodInvocation(352) at 1", "Insert QualifiedName: htmlAndJs.length(365) into InfixExpression: >(367) at 0", "Insert NumberLiteral: 1(366) into InfixExpression: >(367) at 1", "Insert ArrayAccess(370) into MethodInvocation(380) at 0", "Insert SimpleName: substring(371) into MethodInvocation(380) at 1", "Insert NumberLiteral: 0(372) into MethodInvocation(380) at 2", "Insert InfixExpression: -(379) into MethodInvocation(380) at 3", "Insert SimpleName: htmlAndJs(368) into ArrayAccess(370) at 0", "Insert NumberLiteral: 1(369) into ArrayAccess(370) at 1", "Insert MethodInvocation(377) into InfixExpression: -(379) at 0", "Insert NumberLiteral: 9(378) into InfixExpression: -(379) at 1", "Insert ArrayAccess(375) into MethodInvocation(377) at 0", "Insert SimpleName: length(376) into MethodInvocation(377) at 1", "Insert SimpleName: htmlAndJs(373) into ArrayAccess(375) at 0", "Insert NumberLiteral: 1(374) into ArrayAccess(375) at 1", "Delete SimpleType: String(243)", "Delete Dimension(244)", "Delete ArrayType: String[](245)", "Delete SimpleName: CharSequence(267)", "Delete SimpleType: CharSequence(268)", "Delete ParameterizedType: Map<InputSource,CharSequence>(269)", "Delete SimpleName: originalSrc(270)", "Delete SimpleName: HashMap(271)", "Delete SimpleType: HashMap(272)", "Delete ParameterizedType: HashMap<InputSource,CharSequence>(277)", "Delete ClassInstanceCreation(278)", "Delete VariableDeclarationFragment(279)", "Delete VariableDeclarationStatement(280)", "Delete PrimitiveType: boolean(289)", "Delete SimpleName: success(290)", "Delete BooleanLiteral: false(291)", "Delete VariableDeclarationFragment(292)", "Delete VariableDeclarationStatement(293)", "Delete SimpleName: formatMessages(352)", "Delete SimpleName: originalSrc(353)", "Delete SimpleName: mq(354)", "Delete MethodInvocation(355)", "Delete SimpleType: String(359)", "Delete Dimension(360)", "Delete ArrayType: String[](361)", "Delete QualifiedName: messages.length(367)", "Delete NumberLiteral: 2(368)", "Delete InfixExpression: +(369)", "Delete ArrayCreation(370)", "Delete SimpleName: success(325)", "Delete BooleanLiteral: true(326)", "Delete SimpleName: result(373)", "Delete QualifiedName: PlaygroundService.HTML(374)", "Delete ArrayAccess(375)", "Delete SimpleName: success(376)", "Delete NullLiteral(380)", "Delete ConditionalExpression(381)", "Delete Assignment: =(382)", "Delete ExpressionStatement(383)", "Delete SimpleName: result(384)", "Delete QualifiedName: PlaygroundService.JAVASCRIPT(385)", "Delete ArrayAccess(386)", "Delete NullLiteral(387)", "Delete Assignment: =(388)", "Delete ExpressionStatement(389)", "Delete NumberLiteral: 0(393)", "Delete QualifiedName: PlaygroundService.ERRORS(395)", "Delete QualifiedName: messages.length(396)", "Delete MethodInvocation(397)", "Delete ExpressionStatement(398)", "Delete SimpleName: result(399)"]}}, {"PlaygroundView_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 35", "MOV ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS QualifiedName: com.google.gwt.user.client.ui.HasVerticalAlignment to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 22"]}, {"root": "UPDATE from com.google.gwt.user.client.ui.ListBox to com.google.gwt.user.client.ui.FlexTable", "operations": ["UPD QualifiedName: com.google.gwt.user.client.ui.ListBox from com.google.gwt.user.client.ui.ListBox to com.google.gwt.user.client.ui.FlexTable"]}, {"root": "UPDATE from com.google.gwt.user.client.ui.Panel to com.google.gwt.user.client.ui.Widget", "operations": ["UPD QualifiedName: com.google.gwt.user.client.ui.Panel from com.google.gwt.user.client.ui.Panel to com.google.gwt.user.client.ui.Widget"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS Modifier: native to MethodDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: setupNativeSelectLineBridge to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: currentStart to MethodInvocation at 2", "INS SimpleName: indexOf to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: lineNumber to SingleVariableDeclaration at 1", "INS SimpleName: content to VariableDeclarationFragment at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS InfixExpression: - to InfixExpression: + at 0", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getText to MethodInvocation at 1", "INS SimpleName: currentStart to MethodInvocation at 2", "INS StringLiteral: \"\\\\n\" to MethodInvocation at 3", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: line to PostfixExpression: ++ at 0", "INS Block to ForStatement at 3", "INS SimpleName: sourceText to MethodInvocation at 0", "INS SimpleName: currentEnd to InfixExpression: + at 0", "INS SimpleName: currentEnd to InfixExpression: >= at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS InfixExpression: >= to IfStatement at 0", "INS ForStatement to Block at 4", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: currentEnd to InfixExpression: < at 0", "INS StringLiteral: \"\\\\r\\\\n\" to MethodInvocation at 2", "INS SimpleName: currentStart to Assignment: = at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: < to IfStatement at 0", "INS SimpleName: highlightSource to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: currentEnd to VariableDeclarationFragment at 0", "INS SimpleName: sourceText to MethodInvocation at 0", "INS SimpleName: currentStart to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: replaceAll to MethodInvocation at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: content to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: line to InfixExpression: < at 0", "INS SimpleName: currentStart to MethodInvocation at 3", "INS ExpressionStatement to Block at 1", "INS InfixExpression: + to Assignment: = at 1", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 2", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: sourceText to MethodInvocation at 0", "INS SimpleName: line to VariableDeclarationFragment at 0", "INS BreakStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: currentEnd to InfixExpression: - at 0", "INS VariableDeclarationStatement to Block at 3", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: lineNumber to InfixExpression: < at 1", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS VariableDeclarationStatement to Block at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: + to MethodInvocation at 3", "INS CharacterLiteral: '\\n' to MethodInvocation at 2", "INS SimpleName: currentEnd to Assignment: = at 0", "INS SimpleName: setSelectionRange to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: currentStart to InfixExpression: - at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: setCursorPos to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: content to MethodInvocation at 0", "INS NumberLiteral: 1 to InfixExpression: + at 1"]}, {"root": "UPDATE from ListBox to FlexTable", "operations": ["UPD SimpleType: ListBox from ListBox to FlexTable", "UPD SimpleName: ListBox from ListBox to FlexTable", "UPD SimpleName: ListBox from ListBox to FlexTable", "UPD SimpleName: ListBox from ListBox to FlexTable", "UPD SimpleType: ListBox from ListBox to FlexTable", "UPD SimpleType: ListBox from ListBox to FlexTable", "UPD SimpleName: ListBox from ListBox to FlexTable", "UPD SimpleType: ListBox from ListBox to FlexTable"]}, {"root": "UPDATE from Panel to Widget", "operations": ["UPD SimpleType: Panel from Panel to Widget", "UPD SimpleType: ListBox from ListBox to Widget", "UPD SimpleName: FlowPanel from FlowPanel to Widget", "UPD SimpleType: FlowPanel from FlowPanel to Widget", "UPD SimpleName: Panel from Panel to Widget", "UPD SimpleName: Panel from Panel to Widget", "UPD SimpleName: Panel from Panel to Widget", "UPD SimpleType: Panel from Panel to Widget", "UPD SimpleName: ListBox from ListBox to Widget", "UPD SimpleName: Panel from Panel to Widget", "UPD SimpleType: Panel from Panel to Widget", "UPD SimpleName: DecoratedTabPanel from DecoratedTabPanel to Widget", "UPD SimpleName: FlowPanel from FlowPanel to Widget", "UPD SimpleType: Panel from Panel to Widget", "UPD SimpleType: Panel from Panel to Widget", "UPD SimpleType: DecoratedTabPanel from DecoratedTabPanel to Widget", "UPD SimpleType: DecoratedTabPanel from DecoratedTabPanel to Widget", "UPD SimpleType: FlowPanel from FlowPanel to Widget", "UPD SimpleName: DecoratedTabPanel from DecoratedTabPanel to Widget", "UPD SimpleName: Panel from Panel to Widget"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 21", "MOV ExpressionStatement to Block at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: html to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: html to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: js to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 23", "operations": ["INS SimpleName: mainPanel to MethodInvocation at 0", "INS SimpleName: setWidth to MethodInvocation at 1", "INS StringLiteral: \"100%\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 23"]}, {"root": "INS ExpressionStatement to Block at 24", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: HasVerticalAlignment.ALIGN_TOP to MethodInvocation at 2", "INS SimpleName: mainPanel to MethodInvocation at 0", "INS ExpressionStatement to Block at 24", "INS SimpleName: setVerticalAlignment to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 26", "operations": ["INS ExpressionStatement to Block at 26", "INS SimpleName: addressBar to MethodInvocation at 2", "INS SimpleName: mainPanel to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"0%\" to MethodInvocation at 3", "INS SimpleName: setCellHeight to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 28", "operations": ["INS SimpleName: sourceText to MethodInvocation at 2", "INS SimpleName: mainPanel to MethodInvocation at 0", "INS SimpleName: setCellHeight to MethodInvocation at 1", "INS ExpressionStatement to Block at 28", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"100%\" to MethodInvocation at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: FlowPanel to ClassInstanceCreation at 0", "INS SimpleName: FlowPanel to SimpleType: FlowPanel at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: FlowPanel to VariableDeclarationStatement at 0", "INS SimpleName: hp to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: FlowPanel to SimpleType: FlowPanel at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: hp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"100%\" to MethodInvocation at 2", "INS SimpleName: setSize to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS StringLiteral: \"100%\" to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: hp to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: runtimeMessages to MethodInvocation at 2", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ReturnStatement to Block at 6", "operations": ["INS ReturnStatement to Block at 6", "INS SimpleName: hp to ReturnStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: setupNativeSelectLineBridge to MethodInvocation at 0", "INS ExpressionStatement to Block at 7", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from result to js", "operations": ["UPD SimpleName: result from result to js"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS SimpleName: js to InfixExpression: == at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: compileMessages to MethodInvocation at 0", "INS SimpleName: insertRow to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: insertRow to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: runtimeMessages to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "UPDATE from result to uri", "operations": ["UPD SimpleName: result from result to uri"]}, {"root": "UPDATE from FlowPanel to VerticalPanel", "operations": ["UPD SimpleName: FlowPanel from FlowPanel to VerticalPanel", "UPD SimpleType: FlowPanel from FlowPanel to VerticalPanel", "UPD SimpleName: FlowPanel from FlowPanel to VerticalPanel", "UPD SimpleType: FlowPanel from FlowPanel to VerticalPanel"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: js to InfixExpression: == at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: && at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from setSize to setWidth", "operations": ["UPD SimpleName: setSize from setSize to setWidth", "UPD SimpleName: setSize from setSize to setWidth"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS SimpleName: js to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS StringLiteral: \"&lt;/script&gt;\" to InfixExpression: + at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"&lt;script&gt;\" to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS SimpleName: prettyPrint to MethodInvocation at 0"]}, {"root": "UPDATE from addItem to setHTML", "operations": ["UPD SimpleName: addItem from addItem to setHTML", "UPD SimpleName: addItem from addItem to setHTML"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "UPDATE from result to html", "operations": ["UPD SimpleName: result from result to html", "UPD SimpleName: result from result to html", "UPD SimpleName: result from result to html"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV NullLiteral to InfixExpression: == at 1", "MOV SimpleName: result to InfixExpression: == at 0"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV SimpleName: result to InfixExpression: == at 0", "MOV NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: result to MethodInvocation at 1", "MOV SimpleName: prettyPrint to MethodInvocation at 0"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL StringLiteral: \"100%\"", "operations": ["DEL StringLiteral: \"100%\""]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL StringLiteral: \"100%\"", "operations": ["DEL StringLiteral: \"100%\""]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: runtimeMessages", "DEL ReturnStatement"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: =="]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL InfixExpression: =="]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ArrayType: String[]", "DEL VariableDeclarationStatement", "DEL SimpleName: result", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: htmlAndJs", "DEL SimpleName: split", "DEL StringLiteral: \"<script[^>]*>\"", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ArrayAccess", "DEL SimpleName: htmlAndJs", "DEL SimpleName: html", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: js", "DEL ConditionalExpression", "DEL StringLiteral: \"\"", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL InfixExpression: -", "DEL InfixExpression: >", "DEL SimpleName: htmlAndJs", "DEL SimpleName: length", "DEL QualifiedName: htmlAndJs.length", "DEL SimpleName: substring", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL SimpleName: htmlAndJs", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 9"]}]}}, {"PlaygroundView_diff": {"operations": ["Move ImportDeclaration(51) into CompilationUnit(1620) at 18", "Move ImportDeclaration(55) into CompilationUnit(1620) at 35", "Insert ImportDeclaration(45) into CompilationUnit(1620) at 22", "Update QualifiedName: com.google.gwt.user.client.ui.ListBox(50) to com.google.gwt.user.client.ui.FlexTable", "Insert QualifiedName: com.google.gwt.user.client.ui.HasVerticalAlignment(44) into ImportDeclaration(45) at 0", "Update QualifiedName: com.google.gwt.user.client.ui.Panel(54) to com.google.gwt.user.client.ui.Widget", "Insert MethodDeclaration(775) into TypeDeclaration: class(1619) at 25", "Insert MethodDeclaration(1603) into TypeDeclaration: class(1619) at 40", "Update SimpleType: ListBox(105) to FlexTable", "Update SimpleType: ListBox(111) to FlexTable", "Update SimpleType: Panel(212) to Widget", "Update SimpleType: Panel(286) to Widget", "Update SimpleType: Panel(384) to Widget", "Move ExpressionStatement(618) into Block(645) at 21", "Update SimpleType: FlowPanel(631) to Widget", "Update SimpleType: FlowPanel(671) to Widget", "Update SimpleType: ListBox(711) to Widget", "Insert Modifier: private(771) into MethodDeclaration(775) at 0", "Insert Modifier: native(772) into MethodDeclaration(775) at 1", "Insert PrimitiveType: void(773) into MethodDeclaration(775) at 2", "Insert SimpleName: setupNativeSelectLineBridge(774) into MethodDeclaration(775) at 3", "Update SimpleType: DecoratedTabPanel(740) to Widget", "Update SimpleType: Panel(813) to Widget", "Update SimpleType: DecoratedTabPanel(946) to Widget", "Update SimpleType: Panel(1117) to Widget", "Insert SingleVariableDeclaration(1320) into MethodDeclaration(1354) at 3", "Move SingleVariableDeclaration(1323) into MethodDeclaration(1354) at 4", "Insert SingleVariableDeclaration(1384) into MethodDeclaration(1467) at 3", "Insert SingleVariableDeclaration(1388) into MethodDeclaration(1467) at 4", "Move SingleVariableDeclaration(1467) into MethodDeclaration(1494) at 3", "Move SingleVariableDeclaration(1453) into MethodDeclaration(1515) at 3", "Insert Modifier: public(1516) into MethodDeclaration(1603) at 0", "Insert PrimitiveType: void(1517) into MethodDeclaration(1603) at 1", "Insert SimpleName: highlightSource(1518) into MethodDeclaration(1603) at 2", "Move SingleVariableDeclaration(1273) into MethodDeclaration(1603) at 3", "Insert SingleVariableDeclaration(1525) into MethodDeclaration(1603) at 4", "Insert Block(1602) into MethodDeclaration(1603) at 5", "Update SimpleName: ListBox(104) to FlexTable", "Update SimpleName: ListBox(110) to FlexTable", "Update SimpleName: Panel(211) to Widget", "Update SimpleName: Panel(285) to Widget", "Update SimpleName: Panel(383) to Widget", "Insert ExpressionStatement(615) into Block(645) at 23", "Insert ExpressionStatement(620) into Block(645) at 24", "Insert ExpressionStatement(631) into Block(645) at 26", "Insert ExpressionStatement(642) into Block(645) at 28", "Update SimpleName: FlowPanel(630) to Widget", "Update SimpleName: FlowPanel(670) to Widget", "Update SimpleName: ListBox(710) to Widget", "Insert VariableDeclarationStatement(736) into Block(764) at 0", "Insert ExpressionStatement(742) into Block(764) at 1", "Insert ExpressionStatement(758) into Block(764) at 4", "Insert ReturnStatement(763) into Block(764) at 6", "Update SimpleName: DecoratedTabPanel(739) to Widget", "Insert ExpressionStatement(828) into Block(850) at 7", "Update SimpleName: Panel(812) to Widget", "Update SimpleName: DecoratedTabPanel(945) to Widget", "Update SimpleName: Panel(1116) to Widget", "Move ExpressionStatement(624) into Block(1193) at 4", "Move SimpleType: String(1336) into SingleVariableDeclaration(1320) at 0", "Insert SimpleName: html(1319) into SingleVariableDeclaration(1320) at 1", "Update SimpleName: result(1322) to js", "Move SimpleType: String(1355) into SingleVariableDeclaration(1384) at 0", "Insert SimpleName: html(1383) into SingleVariableDeclaration(1384) at 1", "Move SimpleType: String(1347) into SingleVariableDeclaration(1388) at 0", "Insert SimpleName: js(1387) into SingleVariableDeclaration(1388) at 1", "Insert IfStatement(1403) into Block(1466) at 0", "Insert ExpressionStatement(1485) into Block(1493) at 0", "Insert ExpressionStatement(1506) into Block(1514) at 0", "Update SimpleName: result(1272) to uri", "Insert PrimitiveType: int(1523) into SingleVariableDeclaration(1525) at 0", "Insert SimpleName: lineNumber(1524) into SingleVariableDeclaration(1525) at 1", "Insert VariableDeclarationStatement(1533) into Block(1602) at 0", "Insert ExpressionStatement(1539) into Block(1602) at 1", "Insert VariableDeclarationStatement(1544) into Block(1602) at 2", "Insert VariableDeclarationStatement(1549) into Block(1602) at 3", "Insert ForStatement(1581) into Block(1602) at 4", "Insert IfStatement(1601) into Block(1602) at 5", "Update SimpleType: FlowPanel(596) to VerticalPanel", "Insert MethodInvocation(614) into ExpressionStatement(615) at 0", "Insert MethodInvocation(619) into ExpressionStatement(620) at 0", "Insert MethodInvocation(630) into ExpressionStatement(631) at 0", "Insert MethodInvocation(641) into ExpressionStatement(642) at 0", "Insert SimpleType: FlowPanel(730) into VariableDeclarationStatement(736) at 0", "Insert VariableDeclarationFragment(735) into VariableDeclarationStatement(736) at 1", "Insert MethodInvocation(741) into ExpressionStatement(742) at 0", "Insert MethodInvocation(757) into ExpressionStatement(758) at 0", "Insert SimpleName: hp(762) into ReturnStatement(763) at 0", "Insert MethodInvocation(827) into ExpressionStatement(828) at 0", "Insert InfixExpression: &&(1331) into IfStatement(1339) at 0", "Insert InfixExpression: &&(1395) into IfStatement(1403) at 0", "Move Block(1333) into IfStatement(1403) at 1", "Insert MethodInvocation(1484) into ExpressionStatement(1485) at 0", "Insert MethodInvocation(1505) into ExpressionStatement(1506) at 0", "Insert SimpleType: String(1527) into VariableDeclarationStatement(1533) at 0", "Insert VariableDeclarationFragment(1532) into VariableDeclarationStatement(1533) at 1", "Insert MethodInvocation(1538) into ExpressionStatement(1539) at 0", "Insert PrimitiveType: int(1540) into VariableDeclarationStatement(1544) at 0", "Insert VariableDeclarationFragment(1543) into VariableDeclarationStatement(1544) at 1", "Insert PrimitiveType: int(1545) into VariableDeclarationStatement(1549) at 0", "Insert VariableDeclarationFragment(1548) into VariableDeclarationStatement(1549) at 1", "Insert VariableDeclarationExpression(1554) into ForStatement(1581) at 0", "Insert InfixExpression: <(1557) into ForStatement(1581) at 1", "Insert PostfixExpression: ++(1559) into ForStatement(1581) at 2", "Insert Block(1580) into ForStatement(1581) at 3", "Insert InfixExpression: >=(1584) into IfStatement(1601) at 0", "Insert Block(1600) into IfStatement(1601) at 1", "Update SimpleName: FlowPanel(595) to VerticalPanel", "Insert SimpleName: mainPanel(611) into MethodInvocation(614) at 0", "Insert SimpleName: setWidth(612) into MethodInvocation(614) at 1", "Insert StringLiteral: \"100%\"(613) into MethodInvocation(614) at 2", "Insert SimpleName: mainPanel(616) into MethodInvocation(619) at 0", "Insert SimpleName: setVerticalAlignment(617) into MethodInvocation(619) at 1", "Insert QualifiedName: HasVerticalAlignment.ALIGN_TOP(618) into MethodInvocation(619) at 2", "Insert SimpleName: mainPanel(626) into MethodInvocation(630) at 0", "Insert SimpleName: setCellHeight(627) into MethodInvocation(630) at 1", "Insert SimpleName: addressBar(628) into MethodInvocation(630) at 2", "Insert StringLiteral: \"0%\"(629) into MethodInvocation(630) at 3", "Insert SimpleName: mainPanel(637) into MethodInvocation(641) at 0", "Insert SimpleName: setCellHeight(638) into MethodInvocation(641) at 1", "Insert SimpleName: sourceText(639) into MethodInvocation(641) at 2", "Insert StringLiteral: \"100%\"(640) into MethodInvocation(641) at 3", "Update SimpleName: setSize(695) to setWidth", "Insert SimpleName: FlowPanel(729) into SimpleType: FlowPanel(730) at 0", "Insert SimpleName: hp(731) into VariableDeclarationFragment(735) at 0", "Insert ClassInstanceCreation(734) into VariableDeclarationFragment(735) at 1", "Insert SimpleName: hp(737) into MethodInvocation(741) at 0", "Insert SimpleName: setSize(738) into MethodInvocation(741) at 1", "Insert StringLiteral: \"100%\"(739) into MethodInvocation(741) at 2", "Insert StringLiteral: \"100%\"(740) into MethodInvocation(741) at 3", "Update SimpleName: setSize(721) to setWidth", "Insert SimpleName: hp(754) into MethodInvocation(757) at 0", "Insert SimpleName: add(755) into MethodInvocation(757) at 1", "Insert SimpleName: runtimeMessages(756) into MethodInvocation(757) at 2", "Insert SimpleName: setupNativeSelectLineBridge(826) into MethodInvocation(827) at 0", "Insert InfixExpression: ==(1327) into InfixExpression: &&(1331) at 0", "Insert InfixExpression: ==(1330) into InfixExpression: &&(1331) at 1", "Insert InfixExpression: +(1350) into MethodInvocation(1351) at 2", "Insert InfixExpression: ==(1391) into InfixExpression: &&(1395) at 0", "Insert InfixExpression: ==(1394) into InfixExpression: &&(1395) at 1", "Insert SimpleName: compileMessages(1481) into MethodInvocation(1484) at 0", "Insert SimpleName: insertRow(1482) into MethodInvocation(1484) at 1", "Insert NumberLiteral: 0(1483) into MethodInvocation(1484) at 2", "Update SimpleName: addItem(1455) to setHTML", "Insert NumberLiteral: 0(1488) into MethodInvocation(1491) at 2", "Insert NumberLiteral: 0(1489) into MethodInvocation(1491) at 3", "Insert SimpleName: runtimeMessages(1502) into MethodInvocation(1505) at 0", "Insert SimpleName: insertRow(1503) into MethodInvocation(1505) at 1", "Insert NumberLiteral: 0(1504) into MethodInvocation(1505) at 2", "Update SimpleName: addItem(1469) to setHTML", "Insert NumberLiteral: 0(1509) into MethodInvocation(1512) at 2", "Insert NumberLiteral: 0(1510) into MethodInvocation(1512) at 3", "Insert SimpleName: String(1526) into SimpleType: String(1527) at 0", "Insert SimpleName: content(1528) into VariableDeclarationFragment(1532) at 0", "Insert MethodInvocation(1531) into VariableDeclarationFragment(1532) at 1", "Insert SimpleName: content(1534) into MethodInvocation(1538) at 0", "Insert SimpleName: replaceAll(1535) into MethodInvocation(1538) at 1", "Insert StringLiteral: \"\\\\r\\\\n\"(1536) into MethodInvocation(1538) at 2", "Insert StringLiteral: \"\\\\n\"(1537) into MethodInvocation(1538) at 3", "Insert SimpleName: currentStart(1541) into VariableDeclarationFragment(1543) at 0", "Insert NumberLiteral: 0(1542) into VariableDeclarationFragment(1543) at 1", "Insert SimpleName: currentEnd(1546) into VariableDeclarationFragment(1548) at 0", "Insert NumberLiteral: 0(1547) into VariableDeclarationFragment(1548) at 1", "Insert PrimitiveType: int(1550) into VariableDeclarationExpression(1554) at 0", "Insert VariableDeclarationFragment(1553) into VariableDeclarationExpression(1554) at 1", "Insert SimpleName: line(1555) into InfixExpression: <(1557) at 0", "Insert SimpleName: lineNumber(1556) into InfixExpression: <(1557) at 1", "Insert SimpleName: line(1558) into PostfixExpression: ++(1559) at 0", "Insert ExpressionStatement(1565) into Block(1580) at 0", "Insert ExpressionStatement(1573) into Block(1580) at 1", "Insert IfStatement(1579) into Block(1580) at 2", "Insert SimpleName: currentEnd(1582) into InfixExpression: >=(1584) at 0", "Insert NumberLiteral: 0(1583) into InfixExpression: >=(1584) at 1", "Insert ExpressionStatement(1589) into Block(1600) at 0", "Insert ExpressionStatement(1599) into Block(1600) at 1", "Update SimpleType: FlowPanel(599) to VerticalPanel", "Update SimpleType: ListBox(689) to FlexTable", "Insert SimpleType: FlowPanel(733) into ClassInstanceCreation(734) at 0", "Update SimpleType: ListBox(715) to FlexTable", "Update SimpleName: result(1274) to html", "Move SimpleName: result(1274) into InfixExpression: ==(1327) at 0", "Move NullLiteral(1275) into InfixExpression: ==(1327) at 1", "Insert SimpleName: js(1328) into InfixExpression: ==(1330) at 0", "Insert NullLiteral(1329) into InfixExpression: ==(1330) at 1", "Insert MethodInvocation(1344) into InfixExpression: +(1350) at 0", "Insert StringLiteral: \"&lt;script&gt;\"(1345) into InfixExpression: +(1350) at 1", "Insert MethodInvocation(1348) into InfixExpression: +(1350) at 2", "Insert StringLiteral: \"&lt;/script&gt;\"(1349) into InfixExpression: +(1350) at 3", "Update SimpleName: result(1324) to html", "Move SimpleName: result(1324) into InfixExpression: ==(1391) at 0", "Move NullLiteral(1325) into InfixExpression: ==(1391) at 1", "Insert SimpleName: js(1392) into InfixExpression: ==(1394) at 0", "Insert NullLiteral(1393) into InfixExpression: ==(1394) at 1", "Insert SimpleName: sourceText(1529) into MethodInvocation(1531) at 0", "Insert SimpleName: getText(1530) into MethodInvocation(1531) at 1", "Insert SimpleName: line(1551) into VariableDeclarationFragment(1553) at 0", "Insert NumberLiteral: 0(1552) into VariableDeclarationFragment(1553) at 1", "Insert Assignment: =(1564) into ExpressionStatement(1565) at 0", "Insert Assignment: =(1572) into ExpressionStatement(1573) at 0", "Insert InfixExpression: <(1576) into IfStatement(1579) at 0", "Insert Block(1578) into IfStatement(1579) at 1", "Insert MethodInvocation(1588) into ExpressionStatement(1589) at 0", "Insert MethodInvocation(1598) into ExpressionStatement(1599) at 0", "Update SimpleName: FlowPanel(598) to VerticalPanel", "Update SimpleName: ListBox(688) to FlexTable", "Insert SimpleName: FlowPanel(732) into SimpleType: FlowPanel(733) at 0", "Update SimpleName: ListBox(714) to FlexTable", "Move SimpleName: prettyPrint(1287) into MethodInvocation(1344) at 0", "Update SimpleName: result(1288) to html", "Move SimpleName: result(1288) into MethodInvocation(1344) at 1", "Insert SimpleName: prettyPrint(1346) into MethodInvocation(1348) at 0", "Insert SimpleName: js(1347) into MethodInvocation(1348) at 1", "Insert SimpleName: currentStart(1560) into Assignment: =(1564) at 0", "Insert InfixExpression: +(1563) into Assignment: =(1564) at 1", "Insert SimpleName: currentEnd(1566) into Assignment: =(1572) at 0", "Insert MethodInvocation(1571) into Assignment: =(1572) at 1", "Insert SimpleName: currentEnd(1574) into InfixExpression: <(1576) at 0", "Insert NumberLiteral: 0(1575) into InfixExpression: <(1576) at 1", "Insert BreakStatement(1577) into Block(1578) at 0", "Insert SimpleName: sourceText(1585) into MethodInvocation(1588) at 0", "Insert SimpleName: setCursorPos(1586) into MethodInvocation(1588) at 1", "Insert SimpleName: currentStart(1587) into MethodInvocation(1588) at 2", "Insert SimpleName: sourceText(1590) into MethodInvocation(1598) at 0", "Insert SimpleName: setSelectionRange(1591) into MethodInvocation(1598) at 1", "Insert SimpleName: currentStart(1592) into MethodInvocation(1598) at 2", "Insert InfixExpression: +(1597) into MethodInvocation(1598) at 3", "Insert SimpleName: currentEnd(1561) into InfixExpression: +(1563) at 0", "Insert NumberLiteral: 1(1562) into InfixExpression: +(1563) at 1", "Insert SimpleName: content(1567) into MethodInvocation(1571) at 0", "Insert SimpleName: indexOf(1568) into MethodInvocation(1571) at 1", "Insert CharacterLiteral: '\\n'(1569) into MethodInvocation(1571) at 2", "Insert SimpleName: currentStart(1570) into MethodInvocation(1571) at 3", "Insert InfixExpression: -(1595) into InfixExpression: +(1597) at 0", "Insert NumberLiteral: 1(1596) into InfixExpression: +(1597) at 1", "Insert SimpleName: currentEnd(1593) into InfixExpression: -(1595) at 0", "Insert SimpleName: currentStart(1594) into InfixExpression: -(1595) at 1", "Delete BooleanLiteral: true(690)", "Delete StringLiteral: \"100%\"(697)", "Delete BooleanLiteral: true(716)", "Delete StringLiteral: \"100%\"(723)", "Delete SimpleName: runtimeMessages(729)", "Delete ReturnStatement(730)", "Delete InfixExpression: ==(1276)", "Delete MethodInvocation(1289)", "Delete InfixExpression: ==(1326)", "Delete IfStatement(1334)", "Delete Dimension(1337)", "Delete ArrayType: String[](1338)", "Delete SimpleName: htmlAndJs(1339)", "Delete SimpleName: result(1340)", "Delete SimpleName: split(1341)", "Delete StringLiteral: \"<script[^>]*>\"(1342)", "Delete MethodInvocation(1343)", "Delete VariableDeclarationFragment(1344)", "Delete VariableDeclarationStatement(1345)", "Delete SimpleName: html(1348)", "Delete SimpleName: htmlAndJs(1349)", "Delete NumberLiteral: 0(1350)", "Delete ArrayAccess(1351)", "Delete VariableDeclarationFragment(1352)", "Delete VariableDeclarationStatement(1353)", "Delete SimpleName: js(1356)", "Delete QualifiedName: htmlAndJs.length(1357)", "Delete NumberLiteral: 1(1358)", "Delete InfixExpression: >(1359)", "Delete SimpleName: htmlAndJs(1360)", "Delete NumberLiteral: 1(1361)", "Delete ArrayAccess(1362)", "Delete SimpleName: substring(1363)", "Delete NumberLiteral: 0(1364)", "Delete SimpleName: htmlAndJs(1365)", "Delete NumberLiteral: 1(1366)", "Delete ArrayAccess(1367)", "Delete SimpleName: length(1368)", "Delete MethodInvocation(1369)", "Delete NumberLiteral: 9(1370)", "Delete InfixExpression: -(1371)", "Delete MethodInvocation(1372)", "Delete StringLiteral: \"\"(1373)", "Delete ConditionalExpression(1374)", "Delete VariableDeclarationFragment(1375)", "Delete VariableDeclarationStatement(1376)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}