{"application": "apache-parquet-mr", "csha": "568bd7f60ffa0fa75071c4ac1675bcc1519c0c00", "files": [{"AvroWriteSupport_cluster": {"actions": [{"root": "UPDATE from fromByteArray to fromByteBuffer", "operations": ["UPD SimpleName: fromByteArray from fromByteArray to fromByteBuffer"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV CastExpression to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: buffer", "DEL SimpleType: ByteBuffer", "DEL SimpleName: ByteBuffer", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL Dimension", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: remaining", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL SimpleName: buffer", "DEL ArrayCreation", "DEL SimpleName: bytes", "DEL PrimitiveType: byte", "DEL ArrayType: byte[]"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: bytes", "DEL SimpleName: buffer", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: get"]}, {"root": "DEL SimpleName: bytes", "operations": ["DEL SimpleName: bytes"]}]}}, {"AvroWriteSupport_diff": {"operations": ["Update SimpleName: fromByteArray(764) to fromByteBuffer", "Move CastExpression(740) into MethodInvocation(742) at 2", "Delete SimpleName: ByteBuffer(734)", "Delete SimpleType: ByteBuffer(735)", "Delete SimpleName: buffer(736)", "Delete VariableDeclarationFragment(741)", "Delete VariableDeclarationStatement(742)", "Delete PrimitiveType: byte(743)", "Delete Dimension(744)", "Delete ArrayType: byte[](745)", "Delete SimpleName: bytes(746)", "Delete PrimitiveType: byte(747)", "Delete Dimension(748)", "Delete ArrayType: byte[](749)", "Delete SimpleName: buffer(750)", "Delete SimpleName: remaining(751)", "Delete MethodInvocation(752)", "Delete ArrayCreation(753)", "Delete VariableDeclarationFragment(754)", "Delete VariableDeclarationStatement(755)", "Delete SimpleName: buffer(756)", "Delete SimpleName: get(757)", "Delete SimpleName: bytes(758)", "Delete MethodInvocation(759)", "Delete ExpressionStatement(760)", "Delete SimpleName: bytes(765)"]}}, {"Binary_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS Block to MethodDeclaration at 4", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: otherLength to MethodInvocation at 7", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: toByteBuffer to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: out to SingleVariableDeclaration at 1", "INS SimpleName: remaining to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS QualifiedName: BytesUtils.UTF8 to ClassInstanceCreation at 2", "INS SimpleName: length to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: bytes.length to MethodInvocation at 4", "INS ArrayType: byte[] to ArrayCreation at 0", "INS ReturnStatement to Block at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: value to MethodInvocation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: bytes to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: other to MethodInvocation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: write to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: Binary to SimpleType: Binary at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: remaining to MethodInvocation at 1", "INS SimpleName: value to MethodInvocation at 0", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: Binary to MethodInvocation at 0", "INS SimpleName: getBytes to MethodDeclaration at 3", "INS ReturnStatement to Block at 1", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getBytes to MethodInvocation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: fromByteBuffer to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 5", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS SimpleName: Binary to SimpleType: Binary at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: other to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 1", "INS Block to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: writeTo to MethodDeclaration at 3", "INS Dimension to ArrayType: byte[] at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 7", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 4", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to ArrayCreation at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: getBytes to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 6", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS SimpleName: other to SingleVariableDeclaration at 1", "INS SimpleName: value to MethodInvocation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS QualifiedName: bytes.length to MethodInvocation at 4", "INS SimpleName: equals to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Binary to SingleVariableDeclaration at 0", "INS SimpleName: bytes to ReturnStatement at 0", "INS SimpleName: equals to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: otherOffset to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: out to MethodInvocation at 0", "INS SimpleName: toStringUsingUTF8 to MethodDeclaration at 3", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS SimpleName: getBytes to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: Binary to MethodDeclaration at 2", "INS SimpleName: value to ReturnStatement at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: otherLength to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS Dimension to ArrayType: byte[] at 1", "INS Modifier: public to MethodDeclaration at 1", "INS QualifiedName: bytes.length to MethodInvocation at 4", "INS SimpleType: ByteBuffer to MethodDeclaration at 2", "INS SimpleName: Binary to MethodInvocation at 0", "INS SimpleType: ByteBuffer to SingleVariableDeclaration at 1", "INS SimpleType: Binary to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: String to ClassInstanceCreation at 0", "INS SimpleName: other to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: Binary to SimpleType: Binary at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 1", "INS Block to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getBytes to MethodInvocation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getBytes to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: value to SingleVariableDeclaration at 2", "INS SimpleName: otherOffset to MethodInvocation at 6", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS Dimension to ArrayType: byte[] at 1"]}]}}, {"Binary_diff": {"operations": ["Insert MethodDeclaration(533) into TypeDeclaration: class(824) at 6", "Insert Modifier: public(351) into MethodDeclaration(533) at 0", "Insert Modifier: static(352) into MethodDeclaration(533) at 1", "Insert SimpleType: Binary(354) into MethodDeclaration(533) at 2", "Insert SimpleName: fromByteBuffer(355) into MethodDeclaration(533) at 3", "Insert SingleVariableDeclaration(360) into MethodDeclaration(533) at 4", "Insert Block(532) into MethodDeclaration(533) at 5", "Insert SimpleName: Binary(353) into SimpleType: Binary(354) at 0", "Insert Modifier: final(356) into SingleVariableDeclaration(360) at 0", "Insert SimpleType: ByteBuffer(358) into SingleVariableDeclaration(360) at 1", "Insert SimpleName: value(359) into SingleVariableDeclaration(360) at 2", "Insert ReturnStatement(531) into Block(532) at 0", "Insert SimpleName: ByteBuffer(357) into SimpleType: ByteBuffer(358) at 0", "Insert ClassInstanceCreation(530) into ReturnStatement(531) at 0", "Insert SimpleType: Binary(362) into ClassInstanceCreation(530) at 0", "Insert AnonymousClassDeclaration(529) into ClassInstanceCreation(530) at 1", "Insert SimpleName: Binary(361) into SimpleType: Binary(362) at 0", "Insert MethodDeclaration(377) into AnonymousClassDeclaration(529) at 0", "Insert MethodDeclaration(388) into AnonymousClassDeclaration(529) at 1", "Insert MethodDeclaration(407) into AnonymousClassDeclaration(529) at 2", "Insert MethodDeclaration(436) into AnonymousClassDeclaration(529) at 3", "Insert MethodDeclaration(458) into AnonymousClassDeclaration(529) at 4", "Insert MethodDeclaration(483) into AnonymousClassDeclaration(529) at 5", "Insert MethodDeclaration(518) into AnonymousClassDeclaration(529) at 6", "Insert MethodDeclaration(528) into AnonymousClassDeclaration(529) at 7", "Insert MarkerAnnotation(364) into MethodDeclaration(377) at 0", "Insert Modifier: public(365) into MethodDeclaration(377) at 1", "Insert SimpleType: String(367) into MethodDeclaration(377) at 2", "Insert SimpleName: toStringUsingUTF8(368) into MethodDeclaration(377) at 3", "Insert Block(376) into MethodDeclaration(377) at 4", "Insert MarkerAnnotation(379) into MethodDeclaration(388) at 0", "Insert Modifier: public(380) into MethodDeclaration(388) at 1", "Insert PrimitiveType: int(381) into MethodDeclaration(388) at 2", "Insert SimpleName: length(382) into MethodDeclaration(388) at 3", "Insert Block(387) into MethodDeclaration(388) at 4", "Insert MarkerAnnotation(390) into MethodDeclaration(407) at 0", "Insert Modifier: public(391) into MethodDeclaration(407) at 1", "Insert PrimitiveType: void(392) into MethodDeclaration(407) at 2", "Insert SimpleName: writeTo(393) into MethodDeclaration(407) at 3", "Insert SingleVariableDeclaration(397) into MethodDeclaration(407) at 4", "Insert SimpleType: IOException(399) into MethodDeclaration(407) at 5", "Insert Block(406) into MethodDeclaration(407) at 6", "Insert MarkerAnnotation(409) into MethodDeclaration(436) at 0", "Insert Modifier: public(410) into MethodDeclaration(436) at 1", "Insert ArrayType: byte[](413) into MethodDeclaration(436) at 2", "Insert SimpleName: getBytes(414) into MethodDeclaration(436) at 3", "Insert Block(435) into MethodDeclaration(436) at 4", "Insert MarkerAnnotation(438) into MethodDeclaration(458) at 0", "Insert Modifier: public(439) into MethodDeclaration(458) at 1", "Insert PrimitiveType: int(440) into MethodDeclaration(458) at 2", "Insert SimpleName: hashCode(441) into MethodDeclaration(458) at 3", "Insert Block(457) into MethodDeclaration(458) at 4", "Insert MarkerAnnotation(460) into MethodDeclaration(483) at 0", "Insert PrimitiveType: boolean(461) into MethodDeclaration(483) at 1", "Insert SimpleName: equals(462) into MethodDeclaration(483) at 2", "Insert SingleVariableDeclaration(466) into MethodDeclaration(483) at 3", "Insert Block(482) into MethodDeclaration(483) at 4", "Insert MarkerAnnotation(485) into MethodDeclaration(518) at 0", "Insert PrimitiveType: boolean(486) into MethodDeclaration(518) at 1", "Insert SimpleName: equals(487) into MethodDeclaration(518) at 2", "Insert SingleVariableDeclaration(492) into MethodDeclaration(518) at 3", "Insert SingleVariableDeclaration(495) into MethodDeclaration(518) at 4", "Insert SingleVariableDeclaration(498) into MethodDeclaration(518) at 5", "Insert Block(517) into MethodDeclaration(518) at 6", "Insert MarkerAnnotation(520) into MethodDeclaration(528) at 0", "Insert Modifier: public(521) into MethodDeclaration(528) at 1", "Insert SimpleType: ByteBuffer(523) into MethodDeclaration(528) at 2", "Insert SimpleName: toByteBuffer(524) into MethodDeclaration(528) at 3", "Insert Block(527) into MethodDeclaration(528) at 4", "Insert SimpleName: Override(363) into MarkerAnnotation(364) at 0", "Insert SimpleName: String(366) into SimpleType: String(367) at 0", "Insert ReturnStatement(375) into Block(376) at 0", "Insert SimpleName: Override(378) into MarkerAnnotation(379) at 0", "Insert ReturnStatement(386) into Block(387) at 0", "Insert SimpleName: Override(389) into MarkerAnnotation(390) at 0", "Insert SimpleType: OutputStream(395) into SingleVariableDeclaration(397) at 0", "Insert SimpleName: out(396) into SingleVariableDeclaration(397) at 1", "Insert SimpleName: IOException(398) into SimpleType: IOException(399) at 0", "Insert ExpressionStatement(405) into Block(406) at 0", "Insert SimpleName: Override(408) into MarkerAnnotation(409) at 0", "Insert PrimitiveType: byte(411) into ArrayType: byte[](413) at 0", "Insert Dimension(412) into ArrayType: byte[](413) at 1", "Insert VariableDeclarationStatement(427) into Block(435) at 0", "Insert ExpressionStatement(432) into Block(435) at 1", "Insert ReturnStatement(434) into Block(435) at 2", "Insert SimpleName: Override(437) into MarkerAnnotation(438) at 0", "Insert VariableDeclarationStatement(449) into Block(457) at 0", "Insert ReturnStatement(456) into Block(457) at 1", "Insert SimpleName: Override(459) into MarkerAnnotation(460) at 0", "Insert SimpleType: Binary(464) into SingleVariableDeclaration(466) at 0", "Insert SimpleName: other(465) into SingleVariableDeclaration(466) at 1", "Insert VariableDeclarationStatement(474) into Block(482) at 0", "Insert ReturnStatement(481) into Block(482) at 1", "Insert SimpleName: Override(484) into MarkerAnnotation(485) at 0", "Insert ArrayType: byte[](490) into SingleVariableDeclaration(492) at 0", "Insert SimpleName: other(491) into SingleVariableDeclaration(492) at 1", "Insert PrimitiveType: int(493) into SingleVariableDeclaration(495) at 0", "Insert SimpleName: otherOffset(494) into SingleVariableDeclaration(495) at 1", "Insert PrimitiveType: int(496) into SingleVariableDeclaration(498) at 0", "Insert SimpleName: otherLength(497) into SingleVariableDeclaration(498) at 1", "Insert VariableDeclarationStatement(506) into Block(517) at 0", "Insert ReturnStatement(516) into Block(517) at 1", "Insert SimpleName: Override(519) into MarkerAnnotation(520) at 0", "Insert SimpleName: ByteBuffer(522) into SimpleType: ByteBuffer(523) at 0", "Insert ReturnStatement(526) into Block(527) at 0", "Insert ClassInstanceCreation(374) into ReturnStatement(375) at 0", "Insert MethodInvocation(385) into ReturnStatement(386) at 0", "Insert SimpleName: OutputStream(394) into SimpleType: OutputStream(395) at 0", "Insert MethodInvocation(404) into ExpressionStatement(405) at 0", "Insert ArrayType: byte[](417) into VariableDeclarationStatement(427) at 0", "Insert VariableDeclarationFragment(426) into VariableDeclarationStatement(427) at 1", "Insert MethodInvocation(431) into ExpressionStatement(432) at 0", "Insert SimpleName: bytes(433) into ReturnStatement(434) at 0", "Insert ArrayType: byte[](444) into VariableDeclarationStatement(449) at 0", "Insert VariableDeclarationFragment(448) into VariableDeclarationStatement(449) at 1", "Insert MethodInvocation(455) into ReturnStatement(456) at 0", "Insert SimpleName: Binary(463) into SimpleType: Binary(464) at 0", "Insert ArrayType: byte[](469) into VariableDeclarationStatement(474) at 0", "Insert VariableDeclarationFragment(473) into VariableDeclarationStatement(474) at 1", "Insert MethodInvocation(480) into ReturnStatement(481) at 0", "Insert PrimitiveType: byte(488) into ArrayType: byte[](490) at 0", "Insert Dimension(489) into ArrayType: byte[](490) at 1", "Insert ArrayType: byte[](501) into VariableDeclarationStatement(506) at 0", "Insert VariableDeclarationFragment(505) into VariableDeclarationStatement(506) at 1", "Insert MethodInvocation(515) into ReturnStatement(516) at 0", "Insert SimpleName: value(525) into ReturnStatement(526) at 0", "Insert SimpleType: String(370) into ClassInstanceCreation(374) at 0", "Insert MethodInvocation(372) into ClassInstanceCreation(374) at 1", "Insert QualifiedName: BytesUtils.UTF8(373) into ClassInstanceCreation(374) at 2", "Insert SimpleName: value(383) into MethodInvocation(385) at 0", "Insert SimpleName: remaining(384) into MethodInvocation(385) at 1", "Insert SimpleName: out(400) into MethodInvocation(404) at 0", "Insert SimpleName: write(401) into MethodInvocation(404) at 1", "Insert MethodInvocation(403) into MethodInvocation(404) at 2", "Insert PrimitiveType: byte(415) into ArrayType: byte[](417) at 0", "Insert Dimension(416) into ArrayType: byte[](417) at 1", "Insert SimpleName: bytes(418) into VariableDeclarationFragment(426) at 0", "Insert ArrayCreation(425) into VariableDeclarationFragment(426) at 1", "Insert SimpleName: value(428) into MethodInvocation(431) at 0", "Insert SimpleName: get(429) into MethodInvocation(431) at 1", "Insert SimpleName: bytes(430) into MethodInvocation(431) at 2", "Insert PrimitiveType: byte(442) into ArrayType: byte[](444) at 0", "Insert Dimension(443) into ArrayType: byte[](444) at 1", "Insert SimpleName: bytes(445) into VariableDeclarationFragment(448) at 0", "Insert MethodInvocation(447) into VariableDeclarationFragment(448) at 1", "Insert SimpleName: Binary(450) into MethodInvocation(455) at 0", "Insert SimpleName: hashCode(451) into MethodInvocation(455) at 1", "Insert SimpleName: bytes(452) into MethodInvocation(455) at 2", "Insert NumberLiteral: 0(453) into MethodInvocation(455) at 3", "Insert QualifiedName: bytes.length(454) into MethodInvocation(455) at 4", "Insert PrimitiveType: byte(467) into ArrayType: byte[](469) at 0", "Insert Dimension(468) into ArrayType: byte[](469) at 1", "Insert SimpleName: bytes(470) into VariableDeclarationFragment(473) at 0", "Insert MethodInvocation(472) into VariableDeclarationFragment(473) at 1", "Insert SimpleName: other(475) into MethodInvocation(480) at 0", "Insert SimpleName: equals(476) into MethodInvocation(480) at 1", "Insert SimpleName: bytes(477) into MethodInvocation(480) at 2", "Insert NumberLiteral: 0(478) into MethodInvocation(480) at 3", "Insert QualifiedName: bytes.length(479) into MethodInvocation(480) at 4", "Insert PrimitiveType: byte(499) into ArrayType: byte[](501) at 0", "Insert Dimension(500) into ArrayType: byte[](501) at 1", "Insert SimpleName: bytes(502) into VariableDeclarationFragment(505) at 0", "Insert MethodInvocation(504) into VariableDeclarationFragment(505) at 1", "Insert SimpleName: Binary(507) into MethodInvocation(515) at 0", "Insert SimpleName: equals(508) into MethodInvocation(515) at 1", "Insert SimpleName: bytes(509) into MethodInvocation(515) at 2", "Insert NumberLiteral: 0(510) into MethodInvocation(515) at 3", "Insert QualifiedName: bytes.length(511) into MethodInvocation(515) at 4", "Insert SimpleName: other(512) into MethodInvocation(515) at 5", "Insert SimpleName: otherOffset(513) into MethodInvocation(515) at 6", "Insert SimpleName: otherLength(514) into MethodInvocation(515) at 7", "Insert SimpleName: String(369) into SimpleType: String(370) at 0", "Insert SimpleName: getBytes(371) into MethodInvocation(372) at 0", "Insert SimpleName: getBytes(402) into MethodInvocation(403) at 0", "Insert ArrayType: byte[](421) into ArrayCreation(425) at 0", "Insert MethodInvocation(424) into ArrayCreation(425) at 1", "Insert SimpleName: getBytes(446) into MethodInvocation(447) at 0", "Insert SimpleName: getBytes(471) into MethodInvocation(472) at 0", "Insert SimpleName: getBytes(503) into MethodInvocation(504) at 0", "Insert PrimitiveType: byte(419) into ArrayType: byte[](421) at 0", "Insert Dimension(420) into ArrayType: byte[](421) at 1", "Insert SimpleName: value(422) into MethodInvocation(424) at 0", "Insert SimpleName: remaining(423) into MethodInvocation(424) at 1"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}