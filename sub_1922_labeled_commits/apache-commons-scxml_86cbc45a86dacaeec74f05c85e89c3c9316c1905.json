{"application": "apache-commons-scxml", "csha": "86cbc45a86dacaeec74f05c85e89c3c9316c1905", "files": [{"ErrorReporter_cluster": {"actions": [{"root": "UPDATE from  Use  to  No longer necessary, non determinism is solved based", "operations": ["UPD TextElement:  Use  from  Use  to  No longer necessary, non determinism is solved based"]}, {"root": "UPDATE from  instead. to on state heirarchy and document order priorities.", "operations": ["UPD TextElement:  instead. from  instead. to on state heirarchy and document order priorities."]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL SimpleName: NON_DETERMINISTIC", "DEL MemberRef", "DEL SimpleName: ErrorConstants"]}]}}, {"ErrorReporter_diff": {"operations": ["Update TextElement:  Use (118) to  No longer necessary, non determinism is solved based", "Update TextElement:  instead.(123) to on state heirarchy and document order priorities.", "Delete SimpleName: ErrorConstants(119)", "Delete SimpleName: NON_DETERMINISTIC(120)", "Delete MemberRef(121)", "Delete TagElement: @link(122)"]}}, {"SimpleErrorReporter_cluster": {"actions": [{"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1", "MOV IfStatement to Block at 4"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.scxml.model.Transition"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL SimpleName: errCode", "DEL QualifiedName: ErrorConstants.NON_DETERMINISTIC", "DEL InfixExpression: =="]}, {"root": "DEL Block", "operations": ["DEL SimpleType: Transition", "DEL SimpleType: Set", "DEL SimpleName: getTarget", "DEL CharacterLiteral: ']'", "DEL SimpleName: getParent", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: t", "DEL SimpleName: t", "DEL SimpleName: errCtx", "DEL SimpleName: append", "DEL ExpressionStatement", "DEL SimpleType: Transition", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: msg", "DEL SimpleName: i", "DEL SimpleName: msg", "DEL SimpleName: Transition", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL SimpleName: append", "DEL SimpleName: Set", "DEL SimpleName: LogUtils", "DEL ParenthesizedExpression", "DEL CastExpression", "DEL SimpleName: t", "DEL SimpleName: iterator", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: errCtx", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: next", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ForStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: append", "DEL SimpleName: transToString", "DEL Block", "DEL SimpleName: t", "DEL SimpleName: msg", "DEL StringLiteral: \", \"", "DEL SimpleType: HashSet", "DEL SimpleType: Iterator", "DEL IfStatement", "DEL Block", "DEL SimpleName: HashSet", "DEL SimpleName: append", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: Transition", "DEL MethodInvocation", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL InstanceofExpression", "DEL StringLiteral: \" [\"", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL SimpleName: i", "DEL SimpleName: Iterator"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"SimpleErrorReporter_diff": {"operations": ["Move IfStatement(423) into Block(360) at 4", "Move InfixExpression: ==(136) into IfStatement(347) at 0", "Move Block(167) into IfStatement(347) at 1", "Move InfixExpression: ==(170) into IfStatement(346) at 0", "Move Block(182) into IfStatement(346) at 1", "Delete QualifiedName: java.util.HashSet(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.commons.scxml.model.Transition(22)", "Delete ImportDeclaration(23)", "Delete SimpleName: errCode(183)", "Delete QualifiedName: ErrorConstants.NON_DETERMINISTIC(184)", "Delete InfixExpression: ==(185)", "Delete SimpleName: msg(186)", "Delete SimpleName: append(187)", "Delete StringLiteral: \" [\"(188)", "Delete MethodInvocation(189)", "Delete ExpressionStatement(190)", "Delete SimpleName: errCtx(191)", "Delete SimpleName: HashSet(192)", "Delete SimpleType: HashSet(193)", "Delete InstanceofExpression(194)", "Delete SimpleName: Iterator(195)", "Delete SimpleType: Iterator(196)", "Delete SimpleName: i(197)", "Delete SimpleName: Set(198)", "Delete SimpleType: Set(199)", "Delete SimpleName: errCtx(200)", "Delete CastExpression(201)", "Delete ParenthesizedExpression(202)", "Delete SimpleName: iterator(203)", "Delete MethodInvocation(204)", "Delete VariableDeclarationFragment(205)", "Delete VariableDeclarationExpression(206)", "Delete SimpleName: i(207)", "Delete SimpleName: hasNext(208)", "Delete MethodInvocation(209)", "Delete SimpleName: Transition(210)", "Delete SimpleType: Transition(211)", "Delete SimpleName: t(212)", "Delete SimpleName: Transition(213)", "Delete SimpleType: Transition(214)", "Delete SimpleName: i(215)", "Delete SimpleName: next(216)", "Delete MethodInvocation(217)", "Delete CastExpression(218)", "Delete VariableDeclarationFragment(219)", "Delete VariableDeclarationStatement(220)", "Delete SimpleName: msg(221)", "Delete SimpleName: append(222)", "Delete SimpleName: LogUtils(223)", "Delete SimpleName: transToString(224)", "Delete SimpleName: t(225)", "Delete SimpleName: getParent(226)", "Delete MethodInvocation(227)", "Delete SimpleName: t(228)", "Delete SimpleName: getTarget(229)", "Delete MethodInvocation(230)", "Delete SimpleName: t(231)", "Delete MethodInvocation(232)", "Delete MethodInvocation(233)", "Delete ExpressionStatement(234)", "Delete SimpleName: i(235)", "Delete SimpleName: hasNext(236)", "Delete MethodInvocation(237)", "Delete SimpleName: msg(238)", "Delete SimpleName: append(239)", "Delete StringLiteral: \", \"(240)", "Delete MethodInvocation(241)", "Delete ExpressionStatement(242)", "Delete Block(243)", "Delete IfStatement(244)", "Delete Block(245)", "Delete ForStatement(246)", "Delete Block(247)", "Delete IfStatement(248)", "Delete SimpleName: msg(249)", "Delete SimpleName: append(250)", "Delete CharacterLiteral: ']'(251)", "Delete MethodInvocation(252)", "Delete ExpressionStatement(253)", "Delete Block(254)", "Delete IfStatement(424)"]}}, {"ErrorConstants_cluster": {"actions": [{"root": "INS TagElement: @deprecated to Javadoc at 1", "operations": ["INS TextElement:  Non deterministic behavior is now resolved using to TagElement: @deprecated at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS TextElement: state heirarchy and document order priorities. to TagElement: @deprecated at 1"]}]}}, {"ErrorConstants_diff": {"operations": ["Insert TagElement: @deprecated(72) into Javadoc(73) at 1", "Insert TextElement:  Non deterministic behavior is now resolved using(70) into TagElement: @deprecated(72) at 0", "Insert TextElement: state heirarchy and document order priorities.(71) into TagElement: @deprecated(72) at 1"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}