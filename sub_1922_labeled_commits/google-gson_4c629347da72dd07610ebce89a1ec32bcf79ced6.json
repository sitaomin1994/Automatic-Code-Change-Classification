{"application": "google-gson", "csha": "4c629347da72dd07610ebce89a1ec32bcf79ced6", "files": [{"JsonObject_cluster": {"actions": [{"root": "UPDATE from StringMap<String,JsonElement> to StringMap<JsonElement>", "operations": ["UPD ParameterizedType: StringMap<String,JsonElement> from StringMap<String,JsonElement> to StringMap<JsonElement>", "UPD ParameterizedType: StringMap<String,JsonElement> from StringMap<String,JsonElement> to StringMap<JsonElement>"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}]}}, {"JsonObject_diff": {"operations": ["Update ParameterizedType: StringMap<String,JsonElement>(35) to StringMap<JsonElement>", "Update ParameterizedType: StringMap<String,JsonElement>(43) to StringMap<JsonElement>", "Delete SimpleName: String(31)", "Delete SimpleType: String(32)", "Delete SimpleName: String(39)", "Delete SimpleType: String(40)"]}}, {"StringMap_cluster": {"actions": [{"root": "UPDATE from AbstractMap<K,V> to AbstractMap<String,V>", "operations": ["UPD ParameterizedType: AbstractMap<K,V> from AbstractMap<K,V> to AbstractMap<String,V>"]}, {"root": "UPDATE from Object to String", "operations": ["UPD SimpleType: Object from Object to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: Set from Set to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: Object from Object to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: Set from Set to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleType: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String", "UPD SimpleName: K from K to String"]}, {"root": "UPDATE from LinkedEntry<K,V> to LinkedEntry<V>", "operations": ["UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>", "UPD ParameterizedType: LinkedEntry<K,V> from LinkedEntry<K,V> to LinkedEntry<V>"]}, {"root": "UPDATE from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "operations": ["UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]", "UPD ArrayType: LinkedEntry<K,V>[] from LinkedEntry<K,V>[] to LinkedEntry<V>[]"]}, {"root": "UPDATE from Set<K> to Set<String>", "operations": ["UPD ParameterizedType: Set<K> from Set<K> to Set<String>", "UPD ParameterizedType: Set<K> from Set<K> to Set<String>", "UPD ParameterizedType: Set<K> from Set<K> to Set<String>"]}, {"root": "UPDATE from Set<Entry<K,V>> to Set<Entry<String,V>>", "operations": ["UPD ParameterizedType: Set<Entry<K,V>> from Set<Entry<K,V>> to Set<Entry<String,V>>", "UPD ParameterizedType: Set<Entry<K,V>> from Set<Entry<K,V>> to Set<Entry<String,V>>"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: key to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 2"]}, {"root": "INS ArrayType: LinkedEntry<V>[] to MethodDeclaration at 2", "operations": ["INS Dimension to ArrayType: LinkedEntry<V>[] at 1", "INS ArrayType: LinkedEntry<V>[] to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ArrayType: LinkedEntry<K,V>[] to MethodDeclaration at 2"]}, {"root": "INS ParameterizedType: Set<Entry<String,V>> to MethodDeclaration at 1", "operations": ["INS ParameterizedType: Set<Entry<String,V>> to MethodDeclaration at 1", "INS ParameterizedType: Entry<String,V> to ParameterizedType: Set<Entry<String,V>> at 1"]}, {"root": "INS SimpleName: entrySet to MethodDeclaration at 2", "operations": ["INS SimpleName: entrySet to MethodDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS Block to MethodDeclaration at 3"]}, {"root": "UPDATE from Entry<K,V> to Entry<String,V>", "operations": ["UPD ParameterizedType: Entry<K,V> from Entry<K,V> to Entry<String,V>", "UPD ParameterizedType: Entry<K,V> from Entry<K,V> to Entry<String,V>", "UPD ParameterizedType: Entry<K,V> from Entry<K,V> to Entry<String,V>", "UPD ParameterizedType: Entry<K,V> from Entry<K,V> to Entry<String,V>", "UPD ParameterizedType: Entry<K,V> from Entry<K,V> to Entry<String,V>"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV ParameterizedType: Entry<K,V> to TypeDeclaration: class at 4", "MOV SimpleType: Set to ParameterizedType: Entry<String,V> at 1"]}, {"root": "UPDATE from AbstractSet<K> to AbstractSet<String>", "operations": ["UPD ParameterizedType: AbstractSet<K> from AbstractSet<K> to AbstractSet<String>"]}, {"root": "UPDATE from AbstractSet<Entry<K,V>> to AbstractSet<Entry<String,V>>", "operations": ["UPD ParameterizedType: AbstractSet<Entry<K,V>> from AbstractSet<Entry<K,V>> to AbstractSet<Entry<String,V>>"]}, {"root": "UPDATE from secondaryHash to hash", "operations": ["UPD SimpleName: secondaryHash from secondaryHash to hash", "UPD SimpleName: secondaryHash from secondaryHash to hash", "UPD SimpleName: secondaryHash from secondaryHash to hash", "UPD SimpleName: secondaryHash from secondaryHash to hash", "UPD SimpleName: secondaryHash from secondaryHash to hash"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS NumberLiteral: 31 to InfixExpression: * at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: < at 1", "INS SimpleName: key to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ForStatement to Block at 1", "INS SimpleName: h to VariableDeclarationFragment at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: charAt to MethodInvocation at 1", "INS SimpleName: h to InfixExpression: * at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to InfixExpression: < at 0", "INS Block to ForStatement at 3", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 6", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: key to MethodInvocation at 0", "INS SimpleName: i to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: h to Assignment: = at 0", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS InfixExpression: + to Assignment: = at 1"]}, {"root": "MOVE from ParameterizedType: Set<K>", "operations": ["MOV SimpleType: Set to ParameterizedType: Set<K> at 0"]}, {"root": "MOVE from ParameterizedType: Set<Entry<K,V>>", "operations": ["MOV SimpleType: Set to ParameterizedType: Set<Entry<K,V>> at 0"]}, {"root": "MOVE from ArrayType: LinkedEntry<V>[]", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to ArrayType: LinkedEntry<V>[] at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from K to Set", "operations": ["UPD SimpleName: K from K to Set", "UPD SimpleType: K from K to Set"]}, {"root": "INS SimpleType: String to ParameterizedType: Set<K> at 2", "operations": ["INS SimpleType: String to ParameterizedType: Set<K> at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from ParameterizedType: Set<Entry<String,V>>", "operations": ["MOV SimpleType: Set to ParameterizedType: Set<Entry<String,V>> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to FieldDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to FieldDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to MethodDeclaration at 1"]}, {"root": "UPDATE from Iterator<K> to Iterator<String>", "operations": ["UPD ParameterizedType: Iterator<K> from Iterator<K> to Iterator<String>"]}, {"root": "UPDATE from Iterator<Entry<K,V>> to Iterator<Entry<String,V>>", "operations": ["UPD ParameterizedType: Iterator<Entry<K,V>> from Iterator<Entry<K,V>> to Iterator<Entry<String,V>>"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ReturnStatement to Block at 3"]}, {"root": "INS InfixExpression: && to ReturnStatement at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: key to InstanceofExpression at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS InstanceofExpression to InfixExpression: && at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS ParameterizedType: LinkedEntry<V> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: LinkedEntry<V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: LinkedEntry<K,V>[] to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: LinkedEntry<K,V>[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: LinkedEntry<K,V>[] to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS SimpleType: String to InstanceofExpression at 1", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: key to InstanceofExpression at 0", "INS InfixExpression: || to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1", "MOV SimpleType: Entry to ParameterizedType: Entry<String,V> at 0"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<V> at 0", "MOV SimpleType: V to ParameterizedType: Entry<String,V> at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Set<Entry<K,V>> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<V> at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: key to InstanceofExpression at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS PrefixExpression: ! to InfixExpression: || at 1"]}, {"root": "MOVE from ParameterizedType: Entry<K,V>", "operations": ["MOV SimpleType: Entry to ParameterizedType: Entry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: Map.Entry<K,V> at 3"]}, {"root": "MOVE from ParameterizedType: Entry<K,V>", "operations": ["MOV SimpleType: V to ParameterizedType: Entry<K,V> at 3", "MOV SimpleType: Map.Entry to ParameterizedType: Map.Entry<K,V> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<V> at 1"]}, {"root": "MOVE from ArrayType: LinkedEntry<K,V>[]", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to ArrayType: LinkedEntry<K,V>[] at 0"]}, {"root": "MOVE from VariableDeclarationExpression", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationExpression at 0"]}, {"root": "MOVE from ParameterizedType: Set<K>", "operations": ["MOV SimpleType: Set to ParameterizedType: Set<K> at 0"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1"]}, {"root": "MOVE from ParameterizedType: LinkedEntry<K,V>", "operations": ["MOV SimpleType: LinkedEntry to ParameterizedType: LinkedEntry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: LinkedEntry<K,V> at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 0"]}, {"root": "INS ParameterizedType: LinkedEntry<V> to ArrayType: LinkedEntry<K,V>[] at 0", "operations": ["INS ParameterizedType: LinkedEntry<V> to ArrayType: LinkedEntry<K,V>[] at 0"]}, {"root": "MOVE from VariableDeclarationExpression", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationExpression at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ParameterizedType: Entry<K,V>", "operations": ["MOV SimpleType: Entry to ParameterizedType: Entry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: Map.Entry<K,V> at 2"]}, {"root": "MOVE from ParameterizedType: Map.Entry<K,V>", "operations": ["MOV SimpleType: Map.Entry to ParameterizedType: Map.Entry<K,V> at 0", "MOV SimpleType: V to ParameterizedType: Entry<K,V> at 2"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV MethodInvocation to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to ClassInstanceCreation at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ArrayType: LinkedEntry<K,V>[] to CastExpression at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV NullLiteral to InfixExpression: == at 1", "MOV SimpleName: key to InfixExpression: == at 0"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS CastExpression to MethodInvocation at 1", "INS SimpleName: key to CastExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to CastExpression at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationStatement at 0"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS CastExpression to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: key to CastExpression at 1", "INS SimpleType: String to CastExpression at 0"]}, {"root": "UPDATE from LinkedHashIterator<K> to LinkedHashIterator<String>", "operations": ["UPD ParameterizedType: LinkedHashIterator<K> from LinkedHashIterator<K> to LinkedHashIterator<String>"]}, {"root": "UPDATE from LinkedHashIterator<Map.Entry<K,V>> to LinkedHashIterator<Map.Entry<String,V>>", "operations": ["UPD ParameterizedType: LinkedHashIterator<Map.Entry<K,V>> from LinkedHashIterator<Map.Entry<K,V>> to LinkedHashIterator<Map.Entry<String,V>>"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS SimpleName: key to CastExpression at 1", "INS CastExpression to MethodInvocation at 1", "INS SimpleType: String to CastExpression at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from VariableDeclarationExpression", "operations": ["MOV ParameterizedType: LinkedEntry<K,V> to VariableDeclarationExpression at 0"]}, {"root": "UPDATE from Map.Entry<K,V> to Map.Entry<String,V>", "operations": ["UPD ParameterizedType: Map.Entry<K,V> from Map.Entry<K,V> to Map.Entry<String,V>", "UPD ParameterizedType: Map.Entry<K,V> from Map.Entry<K,V> to Map.Entry<String,V>"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS CastExpression to MethodInvocation at 1", "INS SimpleType: String to CastExpression at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: key to CastExpression at 1"]}, {"root": "DEL TypeParameter", "operations": ["DEL SimpleName: K", "DEL TypeParameter"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleName: key", "operations": ["DEL SimpleName: key"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleName: key", "operations": ["DEL SimpleName: key"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: hashCode", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: hashCode", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL ArrayType: LinkedEntry<K,V>[]", "operations": ["DEL ArrayType: LinkedEntry<K,V>[]", "DEL Dimension"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: =="]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: key", "DEL SimpleName: hashCode", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL ParameterizedType: LinkedEntry<K,V>", "operations": ["DEL ParameterizedType: LinkedEntry<K,V>", "DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleName: entrySet", "operations": ["DEL SimpleName: entrySet"]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationStatement", "DEL Block", "DEL ParameterizedType: Set<Entry<K,V>>"]}, {"root": "DEL TypeParameter", "operations": ["DEL SimpleName: K", "DEL TypeParameter"]}, {"root": "DEL ParameterizedType: Entry<K,V>", "operations": ["DEL SimpleType: K", "DEL ParameterizedType: Entry<K,V>", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: hashCode"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleName: K", "DEL SimpleType: K"]}, {"root": "DEL SimpleType: K", "operations": ["DEL SimpleType: K", "DEL SimpleName: K"]}, {"root": "DEL ParameterizedType: LinkedEntry<K,V>", "operations": ["DEL SimpleType: K", "DEL ParameterizedType: LinkedEntry<K,V>", "DEL SimpleName: K"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL TextElement: Applies a supplemental hash function to a given hashCode, which defends", "DEL TextElement: against poor quality hash functions. This is critical because HashMap", "DEL TextElement: for hashCodes that do not differ in lower or upper bits.", "DEL TextElement: uses power-of-two length hash tables, that otherwise encounter collisions", "DEL Javadoc"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: h"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"StringMap_diff": {"operations": ["Update ParameterizedType: AbstractMap<K,V>(39) to AbstractMap<String,V>", "Update SimpleType: K(36) to String", "Update ParameterizedType: LinkedEntry<K,V>(77) to LinkedEntry<V>", "Update ArrayType: LinkedEntry<K,V>[](118) to LinkedEntry<V>[]", "Update ParameterizedType: Set<K>(146) to Set<String>", "Update ParameterizedType: Set<Entry<K,V>>(160) to Set<Entry<String,V>>", "Insert Block(274) into MethodDeclaration(275) at 5", "Update ParameterizedType: LinkedEntry<K,V>(275) to LinkedEntry<V>", "Insert ArrayType: LinkedEntry<V>[](571) into MethodDeclaration(622) at 2", "Update ArrayType: LinkedEntry<K,V>[](613) to LinkedEntry<V>[]", "Move ArrayType: LinkedEntry<K,V>[](613) into MethodDeclaration(811) at 2", "Update ParameterizedType: Set<K>(1072) to Set<String>", "Insert ParameterizedType: Set<Entry<String,V>>(1105) into MethodDeclaration(1135) at 1", "Insert SimpleName: entrySet(1106) into MethodDeclaration(1135) at 2", "Insert Block(1134) into MethodDeclaration(1135) at 3", "Update ParameterizedType: Entry<K,V>(1151) to Entry<String,V>", "Move ParameterizedType: Entry<K,V>(1151) into TypeDeclaration: class(1429) at 4", "Update ParameterizedType: AbstractSet<K>(1730) to AbstractSet<String>", "Update ParameterizedType: AbstractSet<Entry<K,V>>(1895) to AbstractSet<Entry<String,V>>", "Update SimpleName: secondaryHash(2063) to hash", "Insert SingleVariableDeclaration(2007) into MethodDeclaration(2062) at 4", "Insert Block(2061) into MethodDeclaration(2062) at 5", "Update SimpleName: K(35) to String", "Update ParameterizedType: LinkedEntry<K,V>(116) to LinkedEntry<V>", "Move SimpleType: Set(152) into ParameterizedType: Set<String>(140) at 0", "Update SimpleType: K(145) to String", "Move SimpleType: Set(143) into ParameterizedType: Set<Entry<String,V>>(154) at 0", "Update ParameterizedType: Entry<K,V>(159) to Entry<String,V>", "Insert IfStatement(273) into Block(274) at 0", "Update SimpleType: Object(278) to String", "Update SimpleType: K(370) to String", "Update SimpleType: K(497) to String", "Update ParameterizedType: LinkedEntry<K,V>(548) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(548) into ArrayType: LinkedEntry<V>[](571) at 0", "Insert Dimension(570) into ArrayType: LinkedEntry<V>[](571) at 1", "Update ParameterizedType: LinkedEntry<K,V>(611) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(899) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(899) into SingleVariableDeclaration(940) at 0", "Update SimpleType: K(1071) to Set", "Insert SimpleType: String(1035) into ParameterizedType: Set<String>(1036) at 1", "Move SimpleType: Set(1075) into ParameterizedType: Set<Entry<String,V>>(1105) at 0", "Insert ParameterizedType: Entry<String,V>(1104) into ParameterizedType: Set<Entry<String,V>>(1105) at 1", "Insert VariableDeclarationStatement(1120) into Block(1134) at 0", "Move ReturnStatement(1169) into Block(1134) at 1", "Update SimpleType: K(1148) to String", "Update SimpleType: K(1187) to String", "Update ParameterizedType: LinkedEntry<K,V>(1207) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(1217) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(1227) to LinkedEntry<V>", "Update SimpleType: K(1330) to String", "Update ParameterizedType: LinkedEntry<K,V>(1540) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1540) into FieldDeclaration(1588) at 0", "Update ParameterizedType: LinkedEntry<K,V>(1665) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1665) into FieldDeclaration(1597) at 0", "Update ParameterizedType: LinkedEntry<K,V>(1643) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1643) into MethodDeclaration(1642) at 1", "Update SimpleType: K(1729) to String", "Update ParameterizedType: Iterator<K>(1736) to Iterator<String>", "Update ParameterizedType: Entry<K,V>(1894) to Entry<String,V>", "Update ParameterizedType: Iterator<Entry<K,V>>(1906) to Iterator<Entry<String,V>>", "Insert SimpleType: String(2005) into SingleVariableDeclaration(2007) at 0", "Insert SimpleName: key(2006) into SingleVariableDeclaration(2007) at 1", "Insert VariableDeclarationStatement(2012) into Block(2061) at 0", "Insert ForStatement(2037) into Block(2061) at 1", "Move ExpressionStatement(2078) into Block(2061) at 2", "Move ReturnStatement(2089) into Block(2061) at 3", "Update SimpleName: K(144) to String", "Update SimpleType: K(156) to String", "Insert InfixExpression: &&(230) into ReturnStatement(231) at 0", "Insert InstanceofExpression(247) into IfStatement(273) at 0", "Insert Block(269) into IfStatement(273) at 1", "Insert Block(272) into IfStatement(273) at 2", "Update SimpleName: Object(277) to String", "Update ArrayType: LinkedEntry<K,V>[](305) to LinkedEntry<V>[]", "Update SimpleName: K(369) to String", "Update ArrayType: LinkedEntry<K,V>[](404) to LinkedEntry<V>[]", "Update SimpleName: K(496) to String", "Insert ParameterizedType: LinkedEntry<V>(508) into VariableDeclarationStatement(514) at 0", "Update ParameterizedType: LinkedEntry<K,V>(516) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(516) into VariableDeclarationStatement(523) at 0", "Update ParameterizedType: LinkedEntry<K,V>(529) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(529) into VariableDeclarationStatement(545) at 0", "Update ArrayType: LinkedEntry<K,V>[](587) to LinkedEntry<V>[]", "Move ArrayType: LinkedEntry<K,V>[](587) into VariableDeclarationStatement(602) at 1", "Update ArrayType: LinkedEntry<K,V>[](658) to LinkedEntry<V>[]", "Move ArrayType: LinkedEntry<K,V>[](658) into VariableDeclarationStatement(648) at 0", "Update ArrayType: LinkedEntry<K,V>[](668) to LinkedEntry<V>[]", "Move ArrayType: LinkedEntry<K,V>[](668) into VariableDeclarationStatement(680) at 0", "Insert InfixExpression: ||(831) into IfStatement(835) at 0", "Update ArrayType: LinkedEntry<K,V>[](878) to LinkedEntry<V>[]", "Update ParameterizedType: LinkedEntry<K,V>(968) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(968) into VariableDeclarationStatement(987) at 0", "Update SimpleName: K(1070) to Set", "Insert SimpleName: String(1034) into SimpleType: String(1035) at 0", "Update ParameterizedType: Set<K>(1078) to Set<String>", "Move SimpleType: Entry(1179) into ParameterizedType: Entry<String,V>(1104) at 0", "Update SimpleType: Set(1144) to String", "Move SimpleType: Set(1144) into ParameterizedType: Entry<String,V>(1104) at 1", "Move SimpleType: V(1039) into ParameterizedType: Entry<String,V>(1104) at 2", "Update ParameterizedType: Set<Entry<K,V>>(1141) to Set<Entry<String,V>>", "Move ParameterizedType: Set<Entry<K,V>>(1141) into VariableDeclarationStatement(1120) at 0", "Move VariableDeclarationFragment(1155) into VariableDeclarationStatement(1120) at 1", "Update SimpleName: K(1147) to String", "Update SimpleName: K(1186) to String", "Move SimpleType: LinkedEntry(1281) into ParameterizedType: LinkedEntry<V>(1167) at 0", "Move SimpleType: V(1276) into ParameterizedType: LinkedEntry<V>(1167) at 1", "Move SimpleType: LinkedEntry(1272) into ParameterizedType: LinkedEntry<V>(1175) at 0", "Move SimpleType: V(1267) into ParameterizedType: LinkedEntry<V>(1175) at 1", "Move SimpleType: LinkedEntry(1202) into ParameterizedType: LinkedEntry<V>(1183) at 0", "Move SimpleType: V(1183) into ParameterizedType: LinkedEntry<V>(1183) at 1", "Update SimpleType: K(1252) to String", "Update ParameterizedType: LinkedEntry<K,V>(1268) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(1277) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(1286) to LinkedEntry<V>", "Update SimpleName: K(1329) to String", "Insert InfixExpression: ||(1454) into IfStatement(1458) at 0", "Update ArrayType: LinkedEntry<K,V>[](1519) to LinkedEntry<V>[]", "Update SimpleName: K(1728) to String", "Update SimpleType: K(1735) to String", "Move SimpleType: Entry(1900) into ParameterizedType: Entry<String,V>(1840) at 0", "Update SimpleType: K(1891) to String", "Move SimpleType: V(1925) into ParameterizedType: Entry<String,V>(1840) at 3", "Update ParameterizedType: Entry<K,V>(1905) to Entry<String,V>", "Insert SimpleName: String(2004) into SimpleType: String(2005) at 0", "Insert PrimitiveType: int(2008) into VariableDeclarationStatement(2012) at 0", "Insert VariableDeclarationFragment(2011) into VariableDeclarationStatement(2012) at 1", "Insert VariableDeclarationExpression(2017) into ForStatement(2037) at 0", "Insert InfixExpression: <(2022) into ForStatement(2037) at 1", "Insert PostfixExpression: ++(2024) into ForStatement(2037) at 2", "Insert Block(2036) into ForStatement(2037) at 3", "Update SimpleName: K(155) to String", "Insert InstanceofExpression(221) into InfixExpression: &&(230) at 0", "Insert InfixExpression: !=(229) into InfixExpression: &&(230) at 1", "Insert SimpleName: key(244) into InstanceofExpression(247) at 0", "Insert SimpleType: String(246) into InstanceofExpression(247) at 1", "Move VariableDeclarationStatement(258) into Block(269) at 0", "Move ReturnStatement(265) into Block(269) at 1", "Insert ReturnStatement(271) into Block(272) at 0", "Update ParameterizedType: LinkedEntry<K,V>(303) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(316) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(402) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(425) to LinkedEntry<V>", "Move SimpleType: LinkedEntry(1035) into ParameterizedType: LinkedEntry<V>(508) at 0", "Move SimpleType: V(1672) into ParameterizedType: LinkedEntry<V>(508) at 1", "Update ParameterizedType: LinkedEntry<K,V>(585) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(656) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(666) to LinkedEntry<V>", "Insert InfixExpression: ==(824) into InfixExpression: ||(831) at 0", "Insert PrefixExpression: !(830) into InfixExpression: ||(831) at 1", "Update ParameterizedType: LinkedEntry<K,V>(775) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(775) into ArrayType: LinkedEntry<V>[](852) at 0", "Update ParameterizedType: LinkedEntry<K,V>(876) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(876) into VariableDeclarationExpression(880) at 0", "Update ParameterizedType: LinkedEntry<K,V>(1026) to LinkedEntry<V>", "Move SimpleType: Set(1069) into ParameterizedType: Set<String>(1042) at 0", "Update SimpleType: K(1077) to String", "Update SimpleName: Set(1143) to String", "Update ParameterizedType: Entry<K,V>(1140) to Entry<String,V>", "Update SimpleName: K(1251) to String", "Move SimpleType: LinkedEntry(1222) into ParameterizedType: LinkedEntry<V>(1222) at 0", "Move SimpleType: V(1216) into ParameterizedType: LinkedEntry<V>(1222) at 1", "Move SimpleType: LinkedEntry(1212) into ParameterizedType: LinkedEntry<V>(1229) at 0", "Move SimpleType: V(1226) into ParameterizedType: LinkedEntry<V>(1229) at 1", "Move SimpleType: LinkedEntry(1263) into ParameterizedType: LinkedEntry<V>(1236) at 0", "Move SimpleType: V(1206) into ParameterizedType: LinkedEntry<V>(1236) at 1", "Move InfixExpression: ==(1497) into InfixExpression: ||(1454) at 0", "Insert PrefixExpression: !(1453) into InfixExpression: ||(1454) at 1", "Insert ParameterizedType: LinkedEntry<V>(1473) into ArrayType: LinkedEntry<V>[](1475) at 0", "Update ParameterizedType: LinkedEntry<K,V>(1517) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1517) into VariableDeclarationExpression(1503) at 0", "Update ParameterizedType: LinkedEntry<K,V>(1632) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1632) into VariableDeclarationStatement(1623) at 0", "Update SimpleName: K(1734) to String", "Update SimpleName: K(1890) to String", "Move SimpleType: Entry(1889) into ParameterizedType: Entry<String,V>(1851) at 0", "Update SimpleType: K(1902) to String", "Move SimpleType: V(1915) into ParameterizedType: Entry<String,V>(1851) at 2", "Insert SimpleName: h(2009) into VariableDeclarationFragment(2011) at 0", "Insert NumberLiteral: 0(2010) into VariableDeclarationFragment(2011) at 1", "Insert PrimitiveType: int(2013) into VariableDeclarationExpression(2017) at 0", "Insert VariableDeclarationFragment(2016) into VariableDeclarationExpression(2017) at 1", "Insert SimpleName: i(2018) into InfixExpression: <(2022) at 0", "Insert MethodInvocation(2021) into InfixExpression: <(2022) at 1", "Insert SimpleName: i(2023) into PostfixExpression: ++(2024) at 0", "Insert ExpressionStatement(2035) into Block(2036) at 0", "Update ArrayType: LinkedEntry<K,V>[](187) to LinkedEntry<V>[]", "Update ParameterizedType: LinkedEntry<K,V>(204) to LinkedEntry<V>", "Insert SimpleName: key(218) into InstanceofExpression(221) at 0", "Insert SimpleType: String(220) into InstanceofExpression(221) at 1", "Move MethodInvocation(230) into InfixExpression: !=(229) at 0", "Move NullLiteral(231) into InfixExpression: !=(229) at 1", "Insert SimpleName: String(245) into SimpleType: String(246) at 0", "Update ParameterizedType: LinkedEntry<K,V>(252) to LinkedEntry<V>", "Insert NullLiteral(270) into ReturnStatement(271) at 0", "Update SimpleName: secondaryHash(290) to hash", "Move SimpleName: key(291) into MethodInvocation(298) at 1", "Update SimpleType: K(335) to String", "Update SimpleName: secondaryHash(389) to hash", "Move SimpleName: key(390) into MethodInvocation(391) at 1", "Update ParameterizedType: LinkedEntry<K,V>(540) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(540) into ClassInstanceCreation(543) at 0", "Update ArrayType: LinkedEntry<K,V>[](603) to LinkedEntry<V>[]", "Move ArrayType: LinkedEntry<K,V>[](603) into CastExpression(600) at 0", "Update ParameterizedType: LinkedEntry<K,V>(698) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(698) into VariableDeclarationStatement(708) at 0", "Update ParameterizedType: LinkedEntry<K,V>(730) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(730) into VariableDeclarationStatement(730) at 0", "Move SimpleName: key(854) into InfixExpression: ==(824) at 0", "Move NullLiteral(855) into InfixExpression: ==(824) at 1", "Insert ParenthesizedExpression(829) into PrefixExpression: !(830) at 0", "Update SimpleName: secondaryHash(863) to hash", "Insert CastExpression(842) into MethodInvocation(843) at 1", "Update ParameterizedType: LinkedEntry<K,V>(1013) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(1013) into VariableDeclarationStatement(1008) at 0", "Update SimpleName: K(1076) to String", "Update SimpleType: K(1137) to String", "Insert ParenthesizedExpression(1452) into PrefixExpression: !(1453) at 0", "Update SimpleName: secondaryHash(1504) to hash", "Insert CastExpression(1465) into MethodInvocation(1466) at 1", "Move SimpleType: LinkedEntry(1668) into ParameterizedType: LinkedEntry<V>(1473) at 0", "Move SimpleType: V(1285) into ParameterizedType: LinkedEntry<V>(1473) at 1", "Update ParameterizedType: LinkedHashIterator<K>(1742) to LinkedHashIterator<String>", "Update SimpleName: K(1901) to String", "Update ParameterizedType: LinkedHashIterator<Map.Entry<K,V>>(1917) to LinkedHashIterator<Map.Entry<String,V>>", "Insert SimpleName: i(2014) into VariableDeclarationFragment(2016) at 0", "Insert NumberLiteral: 0(2015) into VariableDeclarationFragment(2016) at 1", "Insert SimpleName: key(2019) into MethodInvocation(2021) at 0", "Insert SimpleName: length(2020) into MethodInvocation(2021) at 1", "Insert Assignment: =(2034) into ExpressionStatement(2035) at 0", "Update ParameterizedType: LinkedEntry<K,V>(185) to LinkedEntry<V>", "Insert SimpleName: String(219) into SimpleType: String(220) at 0", "Insert CastExpression(226) into MethodInvocation(227) at 1", "Update SimpleName: K(334) to String", "Update ParameterizedType: LinkedEntry<K,V>(601) to LinkedEntry<V>", "Update ParameterizedType: LinkedEntry<K,V>(756) to LinkedEntry<V>", "Move ParameterizedType: LinkedEntry<K,V>(756) into VariableDeclarationExpression(747) at 0", "Insert InstanceofExpression(828) into ParenthesizedExpression(829) at 0", "Insert SimpleType: String(840) into CastExpression(842) at 0", "Insert SimpleName: key(841) into CastExpression(842) at 1", "Update SimpleName: K(1136) to String", "Insert InstanceofExpression(1451) into ParenthesizedExpression(1452) at 0", "Insert SimpleType: String(1463) into CastExpression(1465) at 0", "Insert SimpleName: key(1464) into CastExpression(1465) at 1", "Update SimpleType: K(1741) to String", "Update ParameterizedType: Map.Entry<K,V>(1916) to Map.Entry<String,V>", "Insert SimpleName: h(2025) into Assignment: =(2034) at 0", "Insert InfixExpression: +(2033) into Assignment: =(2034) at 1", "Insert SimpleType: String(224) into CastExpression(226) at 0", "Insert SimpleName: key(225) into CastExpression(226) at 1", "Insert CastExpression(258) into MethodInvocation(259) at 1", "Insert SimpleName: key(825) into InstanceofExpression(828) at 0", "Insert SimpleType: String(827) into InstanceofExpression(828) at 1", "Insert SimpleName: String(839) into SimpleType: String(840) at 0", "Insert SimpleName: key(1448) into InstanceofExpression(1451) at 0", "Insert SimpleType: String(1450) into InstanceofExpression(1451) at 1", "Insert SimpleName: String(1462) into SimpleType: String(1463) at 0", "Update SimpleName: K(1740) to String", "Update SimpleType: K(1746) to String", "Move SimpleType: Map.Entry(1921) into ParameterizedType: Map.Entry<String,V>(1862) at 0", "Update SimpleType: K(1913) to String", "Move SimpleType: V(1904) into ParameterizedType: Map.Entry<String,V>(1862) at 3", "Update ParameterizedType: Map.Entry<K,V>(1926) to Map.Entry<String,V>", "Insert InfixExpression: *(2028) into InfixExpression: +(2033) at 0", "Insert MethodInvocation(2032) into InfixExpression: +(2033) at 1", "Insert SimpleName: String(223) into SimpleType: String(224) at 0", "Insert SimpleType: String(256) into CastExpression(258) at 0", "Insert SimpleName: key(257) into CastExpression(258) at 1", "Insert SimpleName: String(826) into SimpleType: String(827) at 0", "Insert SimpleName: String(1449) into SimpleType: String(1450) at 0", "Update SimpleName: K(1745) to String", "Update SimpleName: K(1912) to String", "Move SimpleType: Map.Entry(1911) into ParameterizedType: Map.Entry<String,V>(1872) at 0", "Update SimpleType: K(1923) to String", "Move SimpleType: V(1893) into ParameterizedType: Map.Entry<String,V>(1872) at 2", "Insert NumberLiteral: 31(2026) into InfixExpression: *(2028) at 0", "Insert SimpleName: h(2027) into InfixExpression: *(2028) at 1", "Insert SimpleName: key(2029) into MethodInvocation(2032) at 0", "Insert SimpleName: charAt(2030) into MethodInvocation(2032) at 1", "Insert SimpleName: i(2031) into MethodInvocation(2032) at 2", "Insert SimpleName: String(255) into SimpleType: String(256) at 0", "Update SimpleName: K(1922) to String", "Delete SimpleName: K(29)", "Delete TypeParameter(30)", "Delete SimpleName: K(73)", "Delete SimpleType: K(74)", "Delete SimpleName: K(112)", "Delete SimpleType: K(113)", "Delete SimpleName: K(181)", "Delete SimpleType: K(182)", "Delete SimpleName: K(200)", "Delete SimpleType: K(201)", "Delete SimpleName: key(229)", "Delete InfixExpression: !=(232)", "Delete SimpleName: K(248)", "Delete SimpleType: K(249)", "Delete SimpleName: key(255)", "Delete Block(266)", "Delete SimpleName: K(271)", "Delete SimpleType: K(272)", "Delete SimpleName: hashCode(292)", "Delete MethodInvocation(293)", "Delete SimpleName: K(299)", "Delete SimpleType: K(300)", "Delete SimpleName: K(312)", "Delete SimpleType: K(313)", "Delete SimpleName: hashCode(391)", "Delete MethodInvocation(392)", "Delete SimpleName: K(398)", "Delete SimpleType: K(399)", "Delete SimpleName: K(421)", "Delete SimpleType: K(422)", "Delete SimpleName: K(512)", "Delete SimpleType: K(513)", "Delete SimpleName: K(525)", "Delete SimpleType: K(526)", "Delete SimpleName: K(536)", "Delete SimpleType: K(537)", "Delete SimpleName: K(544)", "Delete SimpleType: K(545)", "Delete SimpleName: K(581)", "Delete SimpleType: K(582)", "Delete SimpleName: K(597)", "Delete SimpleType: K(598)", "Delete SimpleName: K(607)", "Delete SimpleType: K(608)", "Delete SimpleName: K(652)", "Delete SimpleType: K(653)", "Delete SimpleName: K(662)", "Delete SimpleType: K(663)", "Delete Dimension(699)", "Delete ArrayType: LinkedEntry<K,V>[](700)", "Delete SimpleName: K(694)", "Delete SimpleType: K(695)", "Delete SimpleName: K(726)", "Delete SimpleType: K(727)", "Delete SimpleName: K(752)", "Delete SimpleType: K(753)", "Delete InfixExpression: ==(856)", "Delete SimpleName: key(864)", "Delete SimpleName: hashCode(865)", "Delete MethodInvocation(866)", "Delete SimpleName: K(771)", "Delete SimpleType: K(772)", "Delete SimpleName: K(872)", "Delete SimpleType: K(873)", "Delete SimpleName: K(895)", "Delete SimpleType: K(896)", "Delete SimpleName: K(964)", "Delete SimpleType: K(965)", "Delete SimpleName: K(1022)", "Delete SimpleType: K(1023)", "Delete SimpleName: K(1009)", "Delete SimpleType: K(1010)", "Delete SimpleName: K(1036)", "Delete SimpleType: K(1037)", "Delete ParameterizedType: LinkedEntry<K,V>(1040)", "Delete SimpleName: entrySet(1142)", "Delete ParameterizedType: Set<Entry<K,V>>(1152)", "Delete VariableDeclarationStatement(1156)", "Delete Block(1170)", "Delete SimpleName: K(1174)", "Delete TypeParameter(1175)", "Delete SimpleName: K(1180)", "Delete SimpleType: K(1181)", "Delete ParameterizedType: Entry<K,V>(1184)", "Delete SimpleName: K(1203)", "Delete SimpleType: K(1204)", "Delete SimpleName: K(1213)", "Delete SimpleType: K(1214)", "Delete SimpleName: K(1223)", "Delete SimpleType: K(1224)", "Delete SimpleName: K(1264)", "Delete SimpleType: K(1265)", "Delete SimpleName: K(1273)", "Delete SimpleType: K(1274)", "Delete SimpleName: K(1282)", "Delete SimpleType: K(1283)", "Delete SimpleName: key(1505)", "Delete SimpleName: hashCode(1506)", "Delete MethodInvocation(1507)", "Delete SimpleName: K(1513)", "Delete SimpleType: K(1514)", "Delete SimpleName: K(1536)", "Delete SimpleType: K(1537)", "Delete SimpleName: K(1661)", "Delete SimpleType: K(1662)", "Delete SimpleName: K(1639)", "Delete SimpleType: K(1640)", "Delete SimpleName: K(1628)", "Delete SimpleType: K(1629)", "Delete SimpleName: K(1669)", "Delete SimpleType: K(1670)", "Delete ParameterizedType: LinkedEntry<K,V>(1673)", "Delete TextElement: Applies a supplemental hash function to a given hashCode, which defends(2054)", "Delete TextElement: against poor quality hash functions. This is critical because HashMap(2055)", "Delete TextElement: uses power-of-two length hash tables, that otherwise encounter collisions(2056)", "Delete TextElement: for hashCodes that do not differ in lower or upper bits.(2057)", "Delete TagElement(2058)", "Delete Javadoc(2059)", "Delete PrimitiveType: int(2064)", "Delete SimpleName: h(2065)", "Delete SingleVariableDeclaration(2066)", "Delete Block(2090)"]}}, {"ObjectTypeAdapter_cluster": {"actions": [{"root": "UPDATE from StringMap<String,Object> to StringMap<Object>", "operations": ["UPD ParameterizedType: StringMap<String,Object> from StringMap<String,Object> to StringMap<Object>"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}]}}, {"ObjectTypeAdapter_diff": {"operations": ["Update ParameterizedType: StringMap<String,Object>(193) to StringMap<Object>", "Delete SimpleName: String(189)", "Delete SimpleType: String(190)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}