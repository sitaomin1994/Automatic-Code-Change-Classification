{"application": "google-truth", "csha": "ab872679a1dd5b7e2d9142773241f52cf28ed5d5", "files": [{"FailureStrategy_cluster": {"actions": [{"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 25"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "UPDATE from subjects using the current strategy. When you really do need to create your own strategy prefer to  implementations. When you really do need to create your own strategy prefer to", "operations": ["UPD TextElement: subjects using the current strategy. When you really do need to create your own strategy prefer from subjects using the current strategy. When you really do need to create your own strategy prefer to  implementations. When you really do need to create your own strategy prefer to"]}, {"root": "UPDATE from to extend  to extend ", "operations": ["UPD TextElement: to extend  from to extend  to extend "]}, {"root": "UPDATE from <p>Implementation Note: the concrete methods in this class will be made abstract in the near to <p>Alternatives to creating a custom ", "operations": ["UPD TextElement: <p>Implementation Note: the concrete methods in this class will be made abstract in the near from <p>Implementation Note: the concrete methods in this class will be made abstract in the near to <p>Alternatives to creating a custom "]}, {"root": "UPDATE from . to  implementation:", "operations": ["UPD TextElement: . from . to  implementation:"]}, {"root": "INS TextElement: <ul> to TagElement at 24", "operations": ["INS TextElement: <ul> to TagElement at 24"]}, {"root": "INS TextElement: <li>For unit tests of a custom subject and assert on the failure behavior use  to TagElement at 25", "operations": ["INS TextElement: <li>For unit tests of a custom subject and assert on the failure behavior use  to TagElement at 25"]}, {"root": "INS TagElement: @link to TagElement at 26", "operations": ["INS SimpleName: ExpectFailure to TagElement: @link at 0", "INS TagElement: @link to TagElement at 26"]}, {"root": "INS TextElement: <li>To create subjects of other types within your own subject (e.g. for chained assertions) use to TagElement at 27", "operations": ["INS TextElement: <li>To create subjects of other types within your own subject (e.g. for chained assertions) use to TagElement at 27"]}, {"root": "INS TextElement: <li>To return a no-op subject after a previous assertion has failed (e.g. for chained to TagElement at 29", "operations": ["INS TextElement: <li>To return a no-op subject after a previous assertion has failed (e.g. for chained to TagElement at 29"]}, {"root": "INS TextElement: assertions) use  to TagElement at 30", "operations": ["INS TextElement: assertions) use  to TagElement at 30"]}, {"root": "INS TagElement: @link to TagElement at 31", "operations": ["INS TagElement: @link to TagElement at 31", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: ignoreCheck to MemberRef at 1", "INS SimpleName: Subject to MemberRef at 0"]}, {"root": "INS TextElement: </ul> to TagElement at 32", "operations": ["INS TextElement: </ul> to TagElement at 32"]}, {"root": "UPDATE from  AbstractFailureStrategy to  FailureStrategy", "operations": ["UPD TextElement:  AbstractFailureStrategy from  AbstractFailureStrategy to  FailureStrategy"]}, {"root": "DEL TextElement:  implementations, they should instead use ", "operations": ["DEL TextElement:  implementations, they should instead use "]}, {"root": "DEL TextElement:  to invoke other", "operations": ["DEL TextElement:  to invoke other"]}, {"root": "DEL TextElement: future (see b/37472530); please do not depend on these existing implementations in new code,", "operations": ["DEL TextElement: future (see b/37472530); please do not depend on these existing implementations in new code,"]}, {"root": "DEL TextElement: prefer ", "operations": ["DEL TextElement: prefer "]}, {"root": "DEL Block", "operations": ["DEL NullLiteral", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: fail", "DEL ExpressionStatement", "DEL SimpleName: message"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: AssertionError", "DEL SimpleName: AssertionError", "DEL TryStatement", "DEL Block", "DEL SimpleType: AssertionError", "DEL SimpleName: message", "DEL SimpleName: AssertionError", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: cause", "DEL SimpleName: IllegalStateException", "DEL SimpleName: up", "DEL SimpleType: AssertionError", "DEL Block", "DEL SimpleType: IllegalStateException", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: up", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: message", "DEL SimpleName: cause", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: cause", "DEL InfixExpression: ==", "DEL SimpleName: stripTruthStackFrames", "DEL SimpleName: cause", "DEL ThrowStatement", "DEL SimpleName: AssertionError", "DEL Assignment: =", "DEL SimpleType: AssertionError", "DEL ThrowStatement", "DEL CatchClause", "DEL SimpleType: AssertionError", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: initCause", "DEL SimpleName: up", "DEL SimpleName: alreadyInitializedBecauseOfHarmonyBug"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: message", "DEL Block", "DEL SimpleName: expected", "DEL SimpleName: failComparing", "DEL SimpleName: actual", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL SimpleName: cause", "DEL SimpleName: actual", "DEL SimpleName: fail", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: messageFor", "DEL SimpleName: expected", "DEL ExpressionStatement", "DEL SimpleName: StringUtil", "DEL SimpleName: message"]}]}}, {"FailureStrategy_diff": {"operations": ["Move TagElement: @link(32) into TagElement(53) at 25", "Insert Modifier: abstract(72) into MethodDeclaration(79) at 2", "Insert Modifier: abstract(86) into MethodDeclaration(97) at 2", "Insert Modifier: abstract(119) into MethodDeclaration(134) at 2", "Insert Modifier: abstract(142) into MethodDeclaration(161) at 2", "Update TextElement: subjects using the current strategy. When you really do need to create your own strategy prefer(34) to  implementations. When you really do need to create your own strategy prefer to", "Update TextElement: to extend (35) to extend ", "Update TextElement: <p>Implementation Note: the concrete methods in this class will be made abstract in the near(39) to <p>Alternatives to creating a custom ", "Update TextElement: .(44) to  implementation:", "Insert TextElement: <ul>(37) into TagElement(53) at 20", "Insert TextElement: <li>For unit tests of a custom subject and assert on the failure behavior use (38) into TagElement(53) at 21", "Insert TagElement: @link(40) into TagElement(53) at 22", "Insert TextElement: <li>To create subjects of other types within your own subject (e.g. for chained assertions) use(41) into TagElement(53) at 23", "Insert TextElement: <li>To return a no-op subject after a previous assertion has failed (e.g. for chained(46) into TagElement(53) at 25", "Insert TextElement: assertions) use (47) into TagElement(53) at 26", "Insert TagElement: @link(51) into TagElement(53) at 27", "Insert TextElement: </ul>(52) into TagElement(53) at 28", "Update TextElement:  AbstractFailureStrategy(42) to  FailureStrategy", "Insert SimpleName: ExpectFailure(39) into TagElement: @link(40) at 0", "Insert MemberRef(50) into TagElement: @link(51) at 0", "Insert SimpleName: Subject(48) into MemberRef(50) at 0", "Insert SimpleName: ignoreCheck(49) into MemberRef(50) at 1", "Delete TextElement:  implementations, they should instead use (28)", "Delete TextElement:  to invoke other(33)", "Delete TextElement: future (see b/37472530); please do not depend on these existing implementations in new code,(40)", "Delete TextElement: prefer (41)", "Delete SimpleName: fail(70)", "Delete SimpleName: message(71)", "Delete NullLiteral(72)", "Delete MethodInvocation(73)", "Delete ExpressionStatement(74)", "Delete Block(75)", "Delete SimpleName: AssertionError(93)", "Delete SimpleType: AssertionError(94)", "Delete SimpleName: up(95)", "Delete SimpleName: AssertionError(96)", "Delete SimpleType: AssertionError(97)", "Delete SimpleName: message(98)", "Delete ClassInstanceCreation(99)", "Delete VariableDeclarationFragment(100)", "Delete VariableDeclarationStatement(101)", "Delete SimpleName: cause(102)", "Delete NullLiteral(103)", "Delete InfixExpression: ==(104)", "Delete SimpleName: cause(105)", "Delete SimpleName: AssertionError(106)", "Delete SimpleType: AssertionError(107)", "Delete SimpleName: message(108)", "Delete ClassInstanceCreation(109)", "Delete Assignment: =(110)", "Delete ExpressionStatement(111)", "Delete Block(112)", "Delete IfStatement(113)", "Delete SimpleName: up(114)", "Delete SimpleName: initCause(115)", "Delete SimpleName: cause(116)", "Delete MethodInvocation(117)", "Delete ExpressionStatement(118)", "Delete Block(119)", "Delete SimpleName: IllegalStateException(120)", "Delete SimpleType: IllegalStateException(121)", "Delete SimpleName: alreadyInitializedBecauseOfHarmonyBug(122)", "Delete SingleVariableDeclaration(123)", "Delete SimpleName: AssertionError(124)", "Delete SimpleType: AssertionError(125)", "Delete SimpleName: cause(126)", "Delete ClassInstanceCreation(127)", "Delete ThrowStatement(128)", "Delete Block(129)", "Delete CatchClause(130)", "Delete TryStatement(131)", "Delete SimpleName: stripTruthStackFrames(132)", "Delete SimpleName: up(133)", "Delete MethodInvocation(134)", "Delete ThrowStatement(135)", "Delete Block(136)", "Delete SimpleName: failComparing(173)", "Delete SimpleName: message(174)", "Delete SimpleName: expected(175)", "Delete SimpleName: actual(176)", "Delete NullLiteral(177)", "Delete MethodInvocation(178)", "Delete ExpressionStatement(179)", "Delete Block(180)", "Delete SimpleName: fail(207)", "Delete SimpleName: StringUtil(208)", "Delete SimpleName: messageFor(209)", "Delete SimpleName: message(210)", "Delete SimpleName: expected(211)", "Delete SimpleName: actual(212)", "Delete MethodInvocation(213)", "Delete SimpleName: cause(214)", "Delete MethodInvocation(215)", "Delete ExpressionStatement(216)", "Delete Block(217)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}