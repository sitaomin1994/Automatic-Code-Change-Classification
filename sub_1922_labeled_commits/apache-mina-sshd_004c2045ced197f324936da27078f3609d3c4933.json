{"application": "apache-mina-sshd", "csha": "004c2045ced197f324936da27078f3609d3c4933", "files": [{"AbstractGeneratorHostKeyProvider_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: overwriteAllowed to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: overwriteAllowed to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: isOverwriteAllowed to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS FieldAccess to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: overwriteAllowed to FieldAccess at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: setOverwriteAllowed to MethodDeclaration at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: overwriteAllowed to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: overwriteAllowed to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS SimpleName: f to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: kp to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 3", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: exists to MethodInvocation at 1", "INS SimpleName: f to MethodInvocation at 0", "INS SimpleName: log to MethodInvocation at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: overwriteAllowed to InfixExpression: || at 1", "INS StringLiteral: \"Overwriting key ({}) is disabled: using throwaway {}\" to MethodInvocation at 2", "INS SimpleName: error to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"AbstractGeneratorHostKeyProvider_diff": {"operations": ["Insert FieldDeclaration(73) into TypeDeclaration: class(587) at 10", "Insert MethodDeclaration(245) into TypeDeclaration: class(587) at 23", "Insert MethodDeclaration(259) into TypeDeclaration: class(587) at 24", "Insert Modifier: private(68) into FieldDeclaration(73) at 0", "Insert PrimitiveType: boolean(69) into FieldDeclaration(73) at 1", "Insert VariableDeclarationFragment(72) into FieldDeclaration(73) at 2", "Insert Modifier: public(239) into MethodDeclaration(245) at 0", "Insert PrimitiveType: boolean(240) into MethodDeclaration(245) at 1", "Insert SimpleName: isOverwriteAllowed(241) into MethodDeclaration(245) at 2", "Insert Block(244) into MethodDeclaration(245) at 3", "Insert Modifier: public(246) into MethodDeclaration(259) at 0", "Insert PrimitiveType: void(247) into MethodDeclaration(259) at 1", "Insert SimpleName: setOverwriteAllowed(248) into MethodDeclaration(259) at 2", "Insert SingleVariableDeclaration(251) into MethodDeclaration(259) at 3", "Insert Block(258) into MethodDeclaration(259) at 4", "Insert Block(489) into MethodDeclaration(490) at 5", "Insert SimpleName: overwriteAllowed(70) into VariableDeclarationFragment(72) at 0", "Insert BooleanLiteral: true(71) into VariableDeclarationFragment(72) at 1", "Insert ReturnStatement(243) into Block(244) at 0", "Insert PrimitiveType: boolean(249) into SingleVariableDeclaration(251) at 0", "Insert SimpleName: overwriteAllowed(250) into SingleVariableDeclaration(251) at 1", "Insert ExpressionStatement(257) into Block(258) at 0", "Insert IfStatement(488) into Block(489) at 0", "Insert SimpleName: overwriteAllowed(242) into ReturnStatement(243) at 0", "Insert Assignment: =(256) into ExpressionStatement(257) at 0", "Insert InfixExpression: ||(438) into IfStatement(488) at 0", "Move Block(444) into IfStatement(488) at 1", "Insert Block(487) into IfStatement(488) at 2", "Insert FieldAccess(254) into Assignment: =(256) at 0", "Insert SimpleName: overwriteAllowed(255) into Assignment: =(256) at 1", "Insert PrefixExpression: !(436) into InfixExpression: ||(438) at 0", "Insert SimpleName: overwriteAllowed(437) into InfixExpression: ||(438) at 1", "Insert ExpressionStatement(486) into Block(487) at 0", "Insert ThisExpression(252) into FieldAccess(254) at 0", "Insert SimpleName: overwriteAllowed(253) into FieldAccess(254) at 1", "Insert MethodInvocation(435) into PrefixExpression: !(436) at 0", "Insert MethodInvocation(485) into ExpressionStatement(486) at 0", "Insert SimpleName: f(433) into MethodInvocation(435) at 0", "Insert SimpleName: exists(434) into MethodInvocation(435) at 1", "Insert SimpleName: log(478) into MethodInvocation(485) at 0", "Insert SimpleName: error(479) into MethodInvocation(485) at 1", "Insert StringLiteral: \"Overwriting key ({}) is disabled: using throwaway {}\"(480) into MethodInvocation(485) at 2", "Insert MethodInvocation(483) into MethodInvocation(485) at 3", "Insert SimpleName: kp(484) into MethodInvocation(485) at 4", "Insert SimpleName: f(481) into MethodInvocation(483) at 0", "Insert SimpleName: getName(482) into MethodInvocation(483) at 1"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}