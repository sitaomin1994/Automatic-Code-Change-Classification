{"application": "google-gson", "csha": "b506183d9459f2474550a150fb0b5eae1a36c2bd", "files": [{"JsonPrimitive_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: Long to SimpleType: Long at 0", "INS TypeLiteral to ArrayInitializer at 14", "INS TypeLiteral to ArrayInitializer at 5", "INS PrimitiveType: short to TypeLiteral at 0", "INS TypeLiteral to ArrayInitializer at 11", "INS SimpleName: Float to SimpleType: Float at 0", "INS PrimitiveType: double to TypeLiteral at 0", "INS SimpleType: Byte to TypeLiteral at 0", "INS PrimitiveType: boolean to TypeLiteral at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Class to SimpleType: Class at 0", "INS PrimitiveType: byte to TypeLiteral at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS SimpleType: Long to TypeLiteral at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS TypeLiteral to ArrayInitializer at 2", "INS TypeLiteral to ArrayInitializer at 8", "INS ArrayInitializer to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleType: Class to ParameterizedType: Class<?> at 0", "INS Dimension to ArrayType: Class<?>[] at 1", "INS TypeLiteral to ArrayInitializer at 1", "INS SimpleType: Double to TypeLiteral at 0", "INS SimpleType: Boolean to TypeLiteral at 0", "INS SimpleName: PRIMITIVE_TYPES to VariableDeclarationFragment at 0", "INS TypeLiteral to ArrayInitializer at 13", "INS Modifier: private to FieldDeclaration at 0", "INS TypeLiteral to ArrayInitializer at 7", "INS TypeLiteral to ArrayInitializer at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ParameterizedType: Class<?> to ArrayType: Class<?>[] at 0", "INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleType: Short to TypeLiteral at 0", "INS PrimitiveType: char to TypeLiteral at 0", "INS TypeLiteral to ArrayInitializer at 4", "INS PrimitiveType: int to TypeLiteral at 0", "INS WildcardType: ? to ParameterizedType: Class<?> at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: Integer to TypeLiteral at 0", "INS ArrayType: Class<?>[] to FieldDeclaration at 3", "INS TypeLiteral to ArrayInitializer at 10", "INS TypeLiteral to ArrayInitializer at 15", "INS SimpleType: Character to TypeLiteral at 0", "INS PrimitiveType: float to TypeLiteral at 0", "INS TypeLiteral to ArrayInitializer at 9", "INS TypeLiteral to ArrayInitializer at 6", "INS TypeLiteral to ArrayInitializer at 0", "INS TypeLiteral to ArrayInitializer at 12", "INS SimpleName: Character to SimpleType: Character at 0", "INS PrimitiveType: long to TypeLiteral at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Float to TypeLiteral at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS Block to MethodDeclaration at 5", "INS Block to EnhancedForStatement at 2", "INS SimpleName: Class to SimpleType: Class at 0", "INS Block to IfStatement at 1", "INS SimpleName: getClass to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS WildcardType: ? to ParameterizedType: Class<?> at 1", "INS EnhancedForStatement to Block at 2", "INS SimpleName: target to SingleVariableDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: standardPrimitive to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Modifier: static to MethodDeclaration at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: isPrimitiveOrString to MethodDeclaration at 3", "INS ParameterizedType: Class<?> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS IfStatement to Block at 0", "INS SimpleType: Class to ParameterizedType: Class<?> at 0", "INS SimpleName: target to InstanceofExpression at 0", "INS ReturnStatement to Block at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS WildcardType: ? to ParameterizedType: Class<?> at 1", "INS SimpleName: PRIMITIVE_TYPES to EnhancedForStatement at 1", "INS SimpleName: classOfPrimitive to VariableDeclarationFragment at 0", "INS SimpleName: classOfPrimitive to MethodInvocation at 2", "INS SimpleName: target to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: Class to ParameterizedType: Class<?> at 0", "INS SimpleName: standardPrimitive to MethodInvocation at 0", "INS ParameterizedType: Class<?> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0"]}, {"root": "DEL SimpleName: ObjectNavigator", "operations": ["DEL SimpleName: ObjectNavigator"]}]}}, {"JsonPrimitive_diff": {"operations": ["Insert FieldDeclaration(70) into TypeDeclaration: class(788) at 5", "Insert MethodDeclaration(787) into TypeDeclaration: class(788) at 32", "Insert Modifier: private(18) into FieldDeclaration(70) at 0", "Insert Modifier: static(19) into FieldDeclaration(70) at 1", "Insert Modifier: final(20) into FieldDeclaration(70) at 2", "Insert ArrayType: Class<?>[](26) into FieldDeclaration(70) at 3", "Insert VariableDeclarationFragment(69) into FieldDeclaration(70) at 4", "Insert Modifier: private(741) into MethodDeclaration(787) at 0", "Insert Modifier: static(742) into MethodDeclaration(787) at 1", "Insert PrimitiveType: boolean(743) into MethodDeclaration(787) at 2", "Insert SimpleName: isPrimitiveOrString(744) into MethodDeclaration(787) at 3", "Insert SingleVariableDeclaration(748) into MethodDeclaration(787) at 4", "Insert Block(786) into MethodDeclaration(787) at 5", "Insert ParameterizedType: Class<?>(24) into ArrayType: Class<?>[](26) at 0", "Insert Dimension(25) into ArrayType: Class<?>[](26) at 1", "Insert SimpleName: PRIMITIVE_TYPES(27) into VariableDeclarationFragment(69) at 0", "Insert ArrayInitializer(68) into VariableDeclarationFragment(69) at 1", "Insert SimpleType: Object(746) into SingleVariableDeclaration(748) at 0", "Insert SimpleName: target(747) into SingleVariableDeclaration(748) at 1", "Insert IfStatement(756) into Block(786) at 0", "Insert VariableDeclarationStatement(766) into Block(786) at 1", "Insert EnhancedForStatement(783) into Block(786) at 2", "Insert ReturnStatement(785) into Block(786) at 3", "Insert SimpleType: Class(22) into ParameterizedType: Class<?>(24) at 0", "Insert WildcardType: ?(23) into ParameterizedType: Class<?>(24) at 1", "Insert TypeLiteral(29) into ArrayInitializer(68) at 0", "Insert TypeLiteral(31) into ArrayInitializer(68) at 1", "Insert TypeLiteral(33) into ArrayInitializer(68) at 2", "Insert TypeLiteral(35) into ArrayInitializer(68) at 3", "Insert TypeLiteral(37) into ArrayInitializer(68) at 4", "Insert TypeLiteral(39) into ArrayInitializer(68) at 5", "Insert TypeLiteral(41) into ArrayInitializer(68) at 6", "Insert TypeLiteral(43) into ArrayInitializer(68) at 7", "Insert TypeLiteral(46) into ArrayInitializer(68) at 8", "Insert TypeLiteral(49) into ArrayInitializer(68) at 9", "Insert TypeLiteral(52) into ArrayInitializer(68) at 10", "Insert TypeLiteral(55) into ArrayInitializer(68) at 11", "Insert TypeLiteral(58) into ArrayInitializer(68) at 12", "Insert TypeLiteral(61) into ArrayInitializer(68) at 13", "Insert TypeLiteral(64) into ArrayInitializer(68) at 14", "Insert TypeLiteral(67) into ArrayInitializer(68) at 15", "Insert SimpleName: Object(745) into SimpleType: Object(746) at 0", "Insert InstanceofExpression(752) into IfStatement(756) at 0", "Insert Block(755) into IfStatement(756) at 1", "Insert ParameterizedType: Class<?>(760) into VariableDeclarationStatement(766) at 0", "Insert VariableDeclarationFragment(765) into VariableDeclarationStatement(766) at 1", "Insert SingleVariableDeclaration(772) into EnhancedForStatement(783) at 0", "Insert SimpleName: PRIMITIVE_TYPES(773) into EnhancedForStatement(783) at 1", "Insert Block(782) into EnhancedForStatement(783) at 2", "Insert BooleanLiteral: false(784) into ReturnStatement(785) at 0", "Insert SimpleName: Class(21) into SimpleType: Class(22) at 0", "Insert PrimitiveType: int(28) into TypeLiteral(29) at 0", "Insert PrimitiveType: long(30) into TypeLiteral(31) at 0", "Insert PrimitiveType: short(32) into TypeLiteral(33) at 0", "Insert PrimitiveType: float(34) into TypeLiteral(35) at 0", "Insert PrimitiveType: double(36) into TypeLiteral(37) at 0", "Insert PrimitiveType: byte(38) into TypeLiteral(39) at 0", "Insert PrimitiveType: boolean(40) into TypeLiteral(41) at 0", "Insert PrimitiveType: char(42) into TypeLiteral(43) at 0", "Insert SimpleType: Integer(45) into TypeLiteral(46) at 0", "Insert SimpleType: Long(48) into TypeLiteral(49) at 0", "Insert SimpleType: Short(51) into TypeLiteral(52) at 0", "Insert SimpleType: Float(54) into TypeLiteral(55) at 0", "Insert SimpleType: Double(57) into TypeLiteral(58) at 0", "Insert SimpleType: Byte(60) into TypeLiteral(61) at 0", "Insert SimpleType: Boolean(63) into TypeLiteral(64) at 0", "Insert SimpleType: Character(66) into TypeLiteral(67) at 0", "Insert SimpleName: target(749) into InstanceofExpression(752) at 0", "Insert SimpleType: String(751) into InstanceofExpression(752) at 1", "Insert ReturnStatement(754) into Block(755) at 0", "Insert SimpleType: Class(758) into ParameterizedType: Class<?>(760) at 0", "Insert WildcardType: ?(759) into ParameterizedType: Class<?>(760) at 1", "Insert SimpleName: classOfPrimitive(761) into VariableDeclarationFragment(765) at 0", "Insert MethodInvocation(764) into VariableDeclarationFragment(765) at 1", "Insert ParameterizedType: Class<?>(770) into SingleVariableDeclaration(772) at 0", "Insert SimpleName: standardPrimitive(771) into SingleVariableDeclaration(772) at 1", "Insert IfStatement(781) into Block(782) at 0", "Insert SimpleName: Integer(44) into SimpleType: Integer(45) at 0", "Insert SimpleName: Long(47) into SimpleType: Long(48) at 0", "Insert SimpleName: Short(50) into SimpleType: Short(51) at 0", "Insert SimpleName: Float(53) into SimpleType: Float(54) at 0", "Insert SimpleName: Double(56) into SimpleType: Double(57) at 0", "Insert SimpleName: Byte(59) into SimpleType: Byte(60) at 0", "Insert SimpleName: Boolean(62) into SimpleType: Boolean(63) at 0", "Insert SimpleName: Character(65) into SimpleType: Character(66) at 0", "Insert SimpleName: String(750) into SimpleType: String(751) at 0", "Insert BooleanLiteral: true(753) into ReturnStatement(754) at 0", "Insert SimpleName: Class(757) into SimpleType: Class(758) at 0", "Insert SimpleName: target(762) into MethodInvocation(764) at 0", "Insert SimpleName: getClass(763) into MethodInvocation(764) at 1", "Insert SimpleType: Class(768) into ParameterizedType: Class<?>(770) at 0", "Insert WildcardType: ?(769) into ParameterizedType: Class<?>(770) at 1", "Insert MethodInvocation(777) into IfStatement(781) at 0", "Insert Block(780) into IfStatement(781) at 1", "Insert SimpleName: Class(767) into SimpleType: Class(768) at 0", "Insert SimpleName: standardPrimitive(774) into MethodInvocation(777) at 0", "Insert SimpleName: isAssignableFrom(775) into MethodInvocation(777) at 1", "Insert SimpleName: classOfPrimitive(776) into MethodInvocation(777) at 2", "Insert ReturnStatement(779) into Block(780) at 0", "Insert BooleanLiteral: true(778) into ReturnStatement(779) at 0", "Delete SimpleName: ObjectNavigator(192)"]}}, {"ObjectNavigator_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL TypeLiteral", "DEL TypeLiteral", "DEL TypeLiteral", "DEL SimpleName: Short", "DEL SimpleType: Integer", "DEL SimpleName: Float", "DEL SimpleName: Boolean", "DEL SimpleType: Boolean", "DEL SimpleName: Double", "DEL TypeLiteral", "DEL SimpleName: Byte", "DEL PrimitiveType: int", "DEL SimpleType: Long", "DEL TypeLiteral", "DEL TypeLiteral", "DEL Modifier: private", "DEL TypeLiteral", "DEL SimpleName: SuppressWarnings", "DEL ArrayType: Class[]", "DEL SimpleType: Short", "DEL PrimitiveType: boolean", "DEL TypeLiteral", "DEL Dimension", "DEL PrimitiveType: double", "DEL TypeLiteral", "DEL PrimitiveType: float", "DEL PrimitiveType: byte", "DEL TypeLiteral", "DEL PrimitiveType: long", "DEL SimpleType: Class", "DEL TypeLiteral", "DEL Modifier: final", "DEL SimpleName: PRIMITIVE_TYPES", "DEL Modifier: static", "DEL SimpleType: Byte", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: Integer", "DEL SimpleName: Class", "DEL SimpleType: Float", "DEL SimpleName: Long", "DEL SingleMemberAnnotation", "DEL SimpleType: Double", "DEL TypeLiteral", "DEL ArrayInitializer", "DEL TypeLiteral", "DEL PrimitiveType: short", "DEL FieldDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: SuppressWarnings", "DEL Block", "DEL SingleMemberAnnotation", "DEL SimpleName: standardPrimitive", "DEL ReturnStatement", "DEL ReturnStatement", "DEL InstanceofExpression", "DEL WildcardType: ?", "DEL ParameterizedType: Class<?>", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: getClass", "DEL SimpleName: classOfPrimitive", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: PRIMITIVE_TYPES", "DEL SimpleType: Object", "DEL PrimitiveType: boolean", "DEL VariableDeclarationStatement", "DEL SimpleName: Class", "DEL SimpleName: Object", "DEL SimpleName: isPrimitiveOrString", "DEL SimpleName: target", "DEL SimpleName: standardPrimitive", "DEL SimpleName: Class", "DEL SimpleName: target", "DEL SimpleType: Class", "DEL SimpleName: classOfPrimitive", "DEL Block", "DEL MethodInvocation", "DEL IfStatement", "DEL ReturnStatement", "DEL BooleanLiteral: true", "DEL Block", "DEL SimpleName: target", "DEL IfStatement", "DEL MethodDeclaration", "DEL SimpleType: Class", "DEL StringLiteral: \"unchecked\"", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: isAssignableFrom", "DEL SimpleName: String", "DEL BooleanLiteral: true", "DEL EnhancedForStatement", "DEL BooleanLiteral: false"]}]}}, {"ObjectNavigator_diff": {"operations": ["Delete SimpleName: SuppressWarnings(469)", "Delete StringLiteral: \"unchecked\"(470)", "Delete SingleMemberAnnotation(471)", "Delete Modifier: private(472)", "Delete Modifier: static(473)", "Delete Modifier: final(474)", "Delete SimpleName: Class(475)", "Delete SimpleType: Class(476)", "Delete Dimension(477)", "Delete ArrayType: Class[](478)", "Delete SimpleName: PRIMITIVE_TYPES(479)", "Delete PrimitiveType: int(480)", "Delete TypeLiteral(481)", "Delete PrimitiveType: long(482)", "Delete TypeLiteral(483)", "Delete PrimitiveType: short(484)", "Delete TypeLiteral(485)", "Delete PrimitiveType: float(486)", "Delete TypeLiteral(487)", "Delete PrimitiveType: double(488)", "Delete TypeLiteral(489)", "Delete PrimitiveType: byte(490)", "Delete TypeLiteral(491)", "Delete PrimitiveType: boolean(492)", "Delete TypeLiteral(493)", "Delete SimpleName: Integer(494)", "Delete SimpleType: Integer(495)", "Delete TypeLiteral(496)", "Delete SimpleName: Long(497)", "Delete SimpleType: Long(498)", "Delete TypeLiteral(499)", "Delete SimpleName: Short(500)", "Delete SimpleType: Short(501)", "Delete TypeLiteral(502)", "Delete SimpleName: Float(503)", "Delete SimpleType: Float(504)", "Delete TypeLiteral(505)", "Delete SimpleName: Double(506)", "Delete SimpleType: Double(507)", "Delete TypeLiteral(508)", "Delete SimpleName: Byte(509)", "Delete SimpleType: Byte(510)", "Delete TypeLiteral(511)", "Delete SimpleName: Boolean(512)", "Delete SimpleType: Boolean(513)", "Delete TypeLiteral(514)", "Delete ArrayInitializer(515)", "Delete VariableDeclarationFragment(516)", "Delete FieldDeclaration(517)", "Delete SimpleName: SuppressWarnings(518)", "Delete StringLiteral: \"unchecked\"(519)", "Delete SingleMemberAnnotation(520)", "Delete Modifier: static(521)", "Delete PrimitiveType: boolean(522)", "Delete SimpleName: isPrimitiveOrString(523)", "Delete SimpleName: Object(524)", "Delete SimpleType: Object(525)", "Delete SimpleName: target(526)", "Delete SingleVariableDeclaration(527)", "Delete SimpleName: target(528)", "Delete SimpleName: String(529)", "Delete SimpleType: String(530)", "Delete InstanceofExpression(531)", "Delete BooleanLiteral: true(532)", "Delete ReturnStatement(533)", "Delete Block(534)", "Delete IfStatement(535)", "Delete SimpleName: Class(536)", "Delete SimpleType: Class(537)", "Delete WildcardType: ?(538)", "Delete ParameterizedType: Class<?>(539)", "Delete SimpleName: classOfPrimitive(540)", "Delete SimpleName: target(541)", "Delete SimpleName: getClass(542)", "Delete MethodInvocation(543)", "Delete VariableDeclarationFragment(544)", "Delete VariableDeclarationStatement(545)", "Delete SimpleName: Class(546)", "Delete SimpleType: Class(547)", "Delete SimpleName: standardPrimitive(548)", "Delete SingleVariableDeclaration(549)", "Delete SimpleName: PRIMITIVE_TYPES(550)", "Delete SimpleName: standardPrimitive(551)", "Delete SimpleName: isAssignableFrom(552)", "Delete SimpleName: classOfPrimitive(553)", "Delete MethodInvocation(554)", "Delete BooleanLiteral: true(555)", "Delete ReturnStatement(556)", "Delete Block(557)", "Delete IfStatement(558)", "Delete Block(559)", "Delete EnhancedForStatement(560)", "Delete BooleanLiteral: false(561)", "Delete ReturnStatement(562)", "Delete Block(563)", "Delete MethodDeclaration(564)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}