{"application": "google-closure-compiler", "csha": "f5e3ed7ab208248fded7416767e544b957abdfdd", "files": [{"VarCheck_cluster": {"actions": [{"root": "UPDATE from LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR to BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR", "operations": ["UPD SimpleName: LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR from LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR to BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR", "UPD SimpleName: LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR from LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR to BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR"]}, {"root": "UPDATE from \"JSC_LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR\" to \"JSC_BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR\"", "operations": ["UPD StringLiteral: \"JSC_LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR\" from \"JSC_LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR\" to \"JSC_BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR\""]}, {"root": "UPDATE from \"Duplicate let / const / class declaration in the same scope is not allowed.\" to \"Duplicate let / const / class / function declaration in the same scope is not allowed.\"", "operations": ["UPD StringLiteral: \"Duplicate let / const / class declaration in the same scope is not allowed.\" from \"Duplicate let / const / class declaration in the same scope is not allowed.\" to \"Duplicate let / const / class / function declaration in the same scope is not allowed.\""]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: origParent to MethodInvocation at 0", "INS SimpleName: isGlobal to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to InfixExpression: && at 2", "INS SimpleName: JSError to MethodInvocation at 0", "INS SimpleName: isFunction to MethodInvocation at 1", "INS SimpleName: origParent to MethodInvocation at 0", "INS SimpleName: isLet to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 3", "INS ReturnStatement to Block at 1", "INS SimpleName: compiler to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: || at 1", "INS IfStatement to Block at 3", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: parent to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS MethodInvocation to InfixExpression: || at 0", "INS MethodInvocation to InfixExpression: || at 2", "INS SimpleName: origParent to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: report to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: n to MethodInvocation at 2", "INS SimpleName: isFunction to MethodInvocation at 1", "INS SimpleName: BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR to MethodInvocation at 3", "INS SimpleName: origParent to MethodInvocation at 0", "INS InfixExpression: && to InfixExpression: && at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: isConst to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: origParent to InfixExpression: != at 0", "INS SimpleName: isClass to MethodInvocation at 1", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS SimpleName: make to MethodInvocation at 1", "INS SimpleName: s to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"VarCheck_diff": {"operations": ["Update SimpleName: LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR(138) to BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR", "Update StringLiteral: \"JSC_LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR\"(141) to \"JSC_BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR\"", "Update StringLiteral: \"Duplicate let / const / class declaration in the same scope is not allowed.\"(142) to \"Duplicate let / const / class / function declaration in the same scope is not allowed.\"", "Insert IfStatement(1310) into Block(1398) at 3", "Move InfixExpression: ||(1260) into IfStatement(1310) at 0", "Insert Block(1271) into IfStatement(1310) at 1", "Insert IfStatement(1309) into IfStatement(1310) at 2", "Insert ExpressionStatement(1269) into Block(1271) at 0", "Insert ReturnStatement(1270) into Block(1271) at 1", "Insert InfixExpression: &&(1297) into IfStatement(1309) at 0", "Move Block(1271) into IfStatement(1309) at 1", "Insert MethodInvocation(1268) into ExpressionStatement(1269) at 0", "Insert InfixExpression: &&(1282) into InfixExpression: &&(1297) at 0", "Insert ParenthesizedExpression(1296) into InfixExpression: &&(1297) at 1", "Insert SimpleName: compiler(1261) into MethodInvocation(1268) at 0", "Insert SimpleName: report(1262) into MethodInvocation(1268) at 1", "Insert MethodInvocation(1267) into MethodInvocation(1268) at 2", "Insert MethodInvocation(1274) into InfixExpression: &&(1282) at 0", "Insert PrefixExpression: !(1278) into InfixExpression: &&(1282) at 1", "Insert InfixExpression: !=(1281) into InfixExpression: &&(1282) at 2", "Insert InfixExpression: ||(1295) into ParenthesizedExpression(1296) at 0", "Insert SimpleName: JSError(1263) into MethodInvocation(1267) at 0", "Insert SimpleName: make(1264) into MethodInvocation(1267) at 1", "Insert SimpleName: n(1265) into MethodInvocation(1267) at 2", "Insert SimpleName: BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR(1266) into MethodInvocation(1267) at 3", "Insert SimpleName: parent(1272) into MethodInvocation(1274) at 0", "Insert SimpleName: isFunction(1273) into MethodInvocation(1274) at 1", "Insert MethodInvocation(1277) into PrefixExpression: !(1278) at 0", "Insert SimpleName: origParent(1279) into InfixExpression: !=(1281) at 0", "Insert NullLiteral(1280) into InfixExpression: !=(1281) at 1", "Insert MethodInvocation(1285) into InfixExpression: ||(1295) at 0", "Insert MethodInvocation(1288) into InfixExpression: ||(1295) at 1", "Insert MethodInvocation(1291) into InfixExpression: ||(1295) at 2", "Insert MethodInvocation(1294) into InfixExpression: ||(1295) at 3", "Insert SimpleName: s(1275) into MethodInvocation(1277) at 0", "Insert SimpleName: isGlobal(1276) into MethodInvocation(1277) at 1", "Insert SimpleName: origParent(1283) into MethodInvocation(1285) at 0", "Insert SimpleName: isFunction(1284) into MethodInvocation(1285) at 1", "Insert SimpleName: origParent(1286) into MethodInvocation(1288) at 0", "Insert SimpleName: isLet(1287) into MethodInvocation(1288) at 1", "Insert SimpleName: origParent(1289) into MethodInvocation(1291) at 0", "Insert SimpleName: isConst(1290) into MethodInvocation(1291) at 1", "Insert SimpleName: origParent(1292) into MethodInvocation(1294) at 0", "Insert SimpleName: isClass(1293) into MethodInvocation(1294) at 1", "Update SimpleName: LET_CONST_CLASS_MULTIPLY_DECLARED_ERROR(1266) to BLOCK_SCOPED_DECL_MULTIPLY_DECLARED_ERROR", "Delete IfStatement(1272)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}