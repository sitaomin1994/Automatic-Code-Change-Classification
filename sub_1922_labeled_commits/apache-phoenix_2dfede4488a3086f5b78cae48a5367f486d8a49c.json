{"application": "apache-phoenix", "csha": "2dfede4488a3086f5b78cae48a5367f486d8a49c", "files": [{"MergeSortResultIterator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Comparator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.PriorityQueue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS SimpleType: MaterializedComparableResultIterator to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 1", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 0", "INS Modifier: private to FieldDeclaration at 0", "INS ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: IteratorComparator to SimpleType: IteratorComparator at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: IteratorComparator to ClassInstanceCreation at 0", "INS SimpleType: IteratorComparator to FieldDeclaration at 2", "INS SimpleName: IteratorComparator to SimpleType: IteratorComparator at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> to MethodDeclaration at 1", "INS SimpleType: MaterializedComparableResultIterator to ClassInstanceCreation at 0", "INS SimpleName: itrComparator to ClassInstanceCreation at 2", "INS SimpleName: itr to SingleVariableDeclaration at 1", "INS SimpleName: add to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: MaterializedComparableResultIterator to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: PriorityQueue to SimpleType: PriorityQueue at 0", "INS SimpleName: itr to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: peek to MethodInvocation at 1", "INS SimpleName: minHeap to ReturnStatement at 0", "INS SimpleName: iterators to EnhancedForStatement at 1", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS SimpleName: minHeap to Assignment: = at 0", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ReturnStatement to Block at 1", "INS SimpleName: close to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: itr to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: getMinHeap to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: private to MethodDeclaration at 0", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: itr to ClassInstanceCreation at 1", "INS SimpleName: minHeap to InfixExpression: == at 0", "INS EnhancedForStatement to Block at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: MaterializedComparableResultIterator to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 1", "INS SimpleName: PriorityQueue to SimpleType: PriorityQueue at 0", "INS SimpleName: minHeap to MethodInvocation at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS ThisExpression to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS SimpleName: c2 to SingleVariableDeclaration at 1", "INS SimpleName: Tuple to SimpleType: Tuple at 0", "INS SimpleType: Tuple to SingleVariableDeclaration at 0", "INS SimpleName: Tuple to SimpleType: Tuple at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: compare to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<Tuple> at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: IteratorComparator to TypeDeclaration: class at 1", "INS SimpleType: Tuple to ParameterizedType: Comparator<Tuple> at 1", "INS SimpleName: MergeSortResultIterator to ThisExpression at 0", "INS MethodInvocation to ReturnStatement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 13", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: c1 to SingleVariableDeclaration at 1", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ParameterizedType: Comparator<Tuple> to TypeDeclaration: class at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: SQLException to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 1", "INS Modifier: private to MethodDeclaration at 0", "INS ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> to VariableDeclarationStatement at 0", "INS SimpleName: MaterializedComparableResultIterator to SimpleType: MaterializedComparableResultIterator at 0", "INS SimpleType: MaterializedComparableResultIterator to MethodDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getMinHeap to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: minIterator to MethodDeclaration at 2", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 0", "INS SimpleType: MaterializedComparableResultIterator to VariableDeclarationStatement at 0", "INS SimpleType: MaterializedComparableResultIterator to ParameterizedType: PriorityQueue<MaterializedComparableResultIterator> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: minHeap to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: PriorityQueue to SimpleType: PriorityQueue at 0", "INS SimpleName: minIterator to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: SQLException to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ReturnStatement to Block at 0", "INS IfStatement to Block at 1", "INS SimpleName: iterator to InfixExpression: == at 0", "INS Block to MethodDeclaration at 5", "INS NullLiteral to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Tuple to MethodDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: minHeap to MethodInvocation at 0", "INS SimpleName: next to ReturnStatement at 0", "INS SimpleName: minHeap to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: add to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: iterator to InfixExpression: == at 0", "INS ReturnStatement to Block at 5", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS Block to MethodDeclaration at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 2", "INS IfStatement to Block at 4", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: iterator to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: poll to MethodInvocation at 1", "INS SimpleName: next to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from Base class for a ResultIterator that does a merge sort on the list of iterators to Base class for a ResultIterator that does a merge sort on the list of iterators provided.", "operations": ["UPD TextElement: Base class for a ResultIterator that does a merge sort on the list of iterators from Base class for a ResultIterator that does a merge sort on the list of iterators to Base class for a ResultIterator that does a merge sort on the list of iterators provided."]}, {"root": "UPDATE from minResult to minHeap", "operations": ["UPD SimpleName: minResult from minResult to minHeap", "UPD SimpleName: remove from remove to minHeap"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: minResult to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from minIterator to itrComparator", "operations": ["UPD SimpleName: minIterator from minIterator to itrComparator"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: minIterator to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from PeekingResultIterator to PriorityQueue", "operations": ["UPD SimpleName: PeekingResultIterator from PeekingResultIterator to PriorityQueue"]}, {"root": "MOVE from SimpleType: PriorityQueue", "operations": ["MOV SimpleName: PeekingResultIterator to SimpleType: PriorityQueue at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Tuple to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from PeekingResultIterator to MaterializedComparableResultIterator", "operations": ["UPD SimpleName: PeekingResultIterator from PeekingResultIterator to MaterializedComparableResultIterator", "UPD SimpleType: PeekingResultIterator from PeekingResultIterator to MaterializedComparableResultIterator", "UPD SimpleType: PeekingResultIterator from PeekingResultIterator to MaterializedComparableResultIterator", "UPD SimpleName: PeekingResultIterator from PeekingResultIterator to MaterializedComparableResultIterator", "UPD SimpleName: PeekingResultIterator from PeekingResultIterator to MaterializedComparableResultIterator"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Tuple to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV MethodInvocation to InfixExpression: != at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: r to MethodInvocation at 2", "MOV SimpleName: minResult to MethodInvocation at 3", "MOV SimpleName: compare to MethodInvocation at 1"]}, {"root": "UPDATE from r to c1", "operations": ["UPD SimpleName: r from r to c1"]}, {"root": "UPDATE from minResult to c2", "operations": ["UPD SimpleName: minResult from minResult to c2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: remove to MethodInvocation at 0", "MOV SimpleName: i to MethodInvocation at 1"]}, {"root": "UPDATE from i to peek", "operations": ["UPD SimpleName: i from i to peek"]}, {"root": "INS NullLiteral to ReturnStatement at 0", "operations": ["INS NullLiteral to ReturnStatement at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: PeekingResultIterator to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "MOVE from SimpleType: MaterializedComparableResultIterator", "operations": ["MOV SimpleName: PeekingResultIterator to SimpleType: MaterializedComparableResultIterator at 0"]}, {"root": "DEL TextElement: provided.", "operations": ["DEL TextElement: provided."]}, {"root": "DEL MethodDeclaration", "operations": ["DEL InfixExpression: >=", "DEL SimpleName: r", "DEL VariableDeclarationExpression", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: minResult", "DEL Assignment: =", "DEL ContinueStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Modifier: private", "DEL Block", "DEL SimpleName: get", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL ExpressionStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL NullLiteral", "DEL NumberLiteral: 1", "DEL SimpleName: iterators", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: iterators", "DEL InfixExpression: -", "DEL SimpleName: i", "DEL PostfixExpression: --", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL SimpleName: iterator", "DEL SimpleName: r", "DEL SimpleName: EMPTY_ITERATOR", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: iterator", "DEL ExpressionStatement", "DEL SimpleName: minResult", "DEL SimpleName: minIterator", "DEL SimpleName: minIterator", "DEL InfixExpression: !=", "DEL Block", "DEL SimpleName: r", "DEL SimpleName: i", "DEL InfixExpression: ||", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Block", "DEL SimpleType: PeekingResultIterator", "DEL SimpleType: PeekingResultIterator", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL InfixExpression: <", "DEL IfStatement"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"MergeSortResultIterator_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(419) at 2", "Insert ImportDeclaration(9) into CompilationUnit(419) at 4", "Insert QualifiedName: java.util.Comparator(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.util.PriorityQueue(8) into ImportDeclaration(9) at 0", "Insert FieldDeclaration(62) into TypeDeclaration: class(418) at 8", "Insert FieldDeclaration(72) into TypeDeclaration: class(418) at 9", "Insert MethodDeclaration(178) into TypeDeclaration: class(418) at 12", "Insert TypeDeclaration: class(206) into TypeDeclaration: class(418) at 13", "Insert MethodDeclaration(334) into TypeDeclaration: class(418) at 16", "Insert Modifier: private(54) into FieldDeclaration(62) at 0", "Insert ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(59) into FieldDeclaration(62) at 1", "Insert VariableDeclarationFragment(61) into FieldDeclaration(62) at 2", "Insert Modifier: private(63) into FieldDeclaration(72) at 0", "Insert Modifier: final(64) into FieldDeclaration(72) at 1", "Insert SimpleType: IteratorComparator(66) into FieldDeclaration(72) at 2", "Insert VariableDeclarationFragment(71) into FieldDeclaration(72) at 3", "Insert Modifier: private(111) into MethodDeclaration(178) at 0", "Insert ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(116) into MethodDeclaration(178) at 1", "Insert SimpleName: getMinHeap(117) into MethodDeclaration(178) at 2", "Move SimpleType: SQLException(194) into MethodDeclaration(178) at 3", "Insert Block(177) into MethodDeclaration(178) at 4", "Insert Modifier: private(179) into TypeDeclaration: class(206) at 0", "Insert SimpleName: IteratorComparator(180) into TypeDeclaration: class(206) at 1", "Insert ParameterizedType: Comparator<Tuple>(185) into TypeDeclaration: class(206) at 2", "Insert MethodDeclaration(205) into TypeDeclaration: class(206) at 3", "Insert Modifier: private(307) into MethodDeclaration(334) at 0", "Insert SimpleType: MaterializedComparableResultIterator(309) into MethodDeclaration(334) at 1", "Insert SimpleName: minIterator(310) into MethodDeclaration(334) at 2", "Insert SimpleType: SQLException(312) into MethodDeclaration(334) at 3", "Insert Block(333) into MethodDeclaration(334) at 4", "Insert Block(361) into MethodDeclaration(362) at 5", "Move SimpleType: Tuple(241) into MethodDeclaration(417) at 2", "Insert Block(416) into MethodDeclaration(417) at 5", "Update TextElement: Base class for a ResultIterator that does a merge sort on the list of iterators(14) to Base class for a ResultIterator that does a merge sort on the list of iterators provided.", "Insert SimpleType: PriorityQueue(56) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(59) at 0", "Insert SimpleType: MaterializedComparableResultIterator(58) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(59) at 1", "Update SimpleName: minResult(207) to minHeap", "Move SimpleName: minResult(207) into VariableDeclarationFragment(61) at 0", "Insert SimpleName: IteratorComparator(65) into SimpleType: IteratorComparator(66) at 0", "Update SimpleName: minIterator(213) to itrComparator", "Move SimpleName: minIterator(213) into VariableDeclarationFragment(71) at 0", "Insert ClassInstanceCreation(70) into VariableDeclarationFragment(71) at 1", "Insert SimpleType: PriorityQueue(113) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(116) at 0", "Insert SimpleType: MaterializedComparableResultIterator(115) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(116) at 1", "Insert IfStatement(174) into Block(177) at 0", "Insert ReturnStatement(176) into Block(177) at 1", "Insert SimpleType: Comparator(182) into ParameterizedType: Comparator<Tuple>(185) at 0", "Insert SimpleType: Tuple(184) into ParameterizedType: Comparator<Tuple>(185) at 1", "Insert Modifier: public(186) into MethodDeclaration(205) at 0", "Insert PrimitiveType: int(187) into MethodDeclaration(205) at 1", "Insert SimpleName: compare(188) into MethodDeclaration(205) at 2", "Insert SingleVariableDeclaration(192) into MethodDeclaration(205) at 3", "Insert SingleVariableDeclaration(196) into MethodDeclaration(205) at 4", "Insert Block(204) into MethodDeclaration(205) at 5", "Insert SimpleName: MaterializedComparableResultIterator(308) into SimpleType: MaterializedComparableResultIterator(309) at 0", "Insert SimpleName: SQLException(311) into SimpleType: SQLException(312) at 0", "Insert VariableDeclarationStatement(322) into Block(333) at 0", "Insert VariableDeclarationStatement(330) into Block(333) at 1", "Move ReturnStatement(286) into Block(333) at 2", "Move VariableDeclarationStatement(324) into Block(361) at 0", "Insert IfStatement(356) into Block(361) at 1", "Move ReturnStatement(307) into Block(361) at 2", "Move VariableDeclarationStatement(303) into Block(416) at 0", "Insert IfStatement(384) into Block(416) at 1", "Insert VariableDeclarationStatement(392) into Block(416) at 2", "Insert ExpressionStatement(396) into Block(416) at 3", "Insert IfStatement(413) into Block(416) at 4", "Insert ReturnStatement(415) into Block(416) at 5", "Update SimpleName: PeekingResultIterator(190) to PriorityQueue", "Move SimpleName: PeekingResultIterator(190) into SimpleType: PriorityQueue(56) at 0", "Insert SimpleName: MaterializedComparableResultIterator(57) into SimpleType: MaterializedComparableResultIterator(58) at 0", "Insert SimpleType: IteratorComparator(69) into ClassInstanceCreation(70) at 0", "Insert SimpleName: PriorityQueue(112) into SimpleType: PriorityQueue(113) at 0", "Insert SimpleName: MaterializedComparableResultIterator(114) into SimpleType: MaterializedComparableResultIterator(115) at 0", "Insert InfixExpression: ==(122) into IfStatement(174) at 0", "Insert Block(173) into IfStatement(174) at 1", "Insert SimpleName: minHeap(175) into ReturnStatement(176) at 0", "Insert SimpleName: Comparator(181) into SimpleType: Comparator(182) at 0", "Insert SimpleName: Tuple(183) into SimpleType: Tuple(184) at 0", "Insert SimpleType: Tuple(190) into SingleVariableDeclaration(192) at 0", "Insert SimpleName: c1(191) into SingleVariableDeclaration(192) at 1", "Move SimpleType: Tuple(206) into SingleVariableDeclaration(196) at 0", "Insert SimpleName: c2(195) into SingleVariableDeclaration(196) at 1", "Insert ReturnStatement(203) into Block(204) at 0", "Insert ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(317) into VariableDeclarationStatement(322) at 0", "Insert VariableDeclarationFragment(321) into VariableDeclarationStatement(322) at 1", "Insert SimpleType: MaterializedComparableResultIterator(324) into VariableDeclarationStatement(330) at 0", "Insert VariableDeclarationFragment(329) into VariableDeclarationStatement(330) at 1", "Update SimpleType: PeekingResultIterator(319) to MaterializedComparableResultIterator", "Insert InfixExpression: ==(352) into IfStatement(356) at 0", "Insert Block(355) into IfStatement(356) at 1", "Update SimpleType: PeekingResultIterator(298) to MaterializedComparableResultIterator", "Insert InfixExpression: ==(380) into IfStatement(384) at 0", "Insert Block(383) into IfStatement(384) at 1", "Move SimpleType: Tuple(314) into VariableDeclarationStatement(392) at 0", "Insert VariableDeclarationFragment(391) into VariableDeclarationStatement(392) at 1", "Insert MethodInvocation(395) into ExpressionStatement(396) at 0", "Insert InfixExpression: !=(401) into IfStatement(413) at 0", "Insert Block(407) into IfStatement(413) at 1", "Insert Block(412) into IfStatement(413) at 2", "Insert SimpleName: next(414) into ReturnStatement(415) at 0", "Insert SimpleName: IteratorComparator(68) into SimpleType: IteratorComparator(69) at 0", "Insert SimpleName: minHeap(120) into InfixExpression: ==(122) at 0", "Insert NullLiteral(121) into InfixExpression: ==(122) at 1", "Move VariableDeclarationStatement(204) into Block(173) at 0", "Insert ExpressionStatement(144) into Block(173) at 1", "Insert EnhancedForStatement(172) into Block(173) at 2", "Insert SimpleName: Tuple(189) into SimpleType: Tuple(190) at 0", "Insert MethodInvocation(202) into ReturnStatement(203) at 0", "Insert SimpleType: PriorityQueue(314) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(317) at 0", "Insert SimpleType: MaterializedComparableResultIterator(316) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(317) at 1", "Insert SimpleName: minHeap(318) into VariableDeclarationFragment(321) at 0", "Insert MethodInvocation(320) into VariableDeclarationFragment(321) at 1", "Insert SimpleName: MaterializedComparableResultIterator(323) into SimpleType: MaterializedComparableResultIterator(324) at 0", "Insert SimpleName: minIterator(325) into VariableDeclarationFragment(329) at 0", "Insert MethodInvocation(328) into VariableDeclarationFragment(329) at 1", "Update SimpleName: PeekingResultIterator(318) to MaterializedComparableResultIterator", "Insert SimpleName: iterator(350) into InfixExpression: ==(352) at 0", "Insert NullLiteral(351) into InfixExpression: ==(352) at 1", "Insert ReturnStatement(354) into Block(355) at 0", "Update SimpleName: PeekingResultIterator(297) to MaterializedComparableResultIterator", "Insert SimpleName: iterator(378) into InfixExpression: ==(380) at 0", "Insert NullLiteral(379) into InfixExpression: ==(380) at 1", "Move ReturnStatement(328) into Block(383) at 0", "Insert SimpleName: next(387) into VariableDeclarationFragment(391) at 0", "Move MethodInvocation(327) into VariableDeclarationFragment(391) at 1", "Insert SimpleName: minHeap(393) into MethodInvocation(395) at 0", "Insert SimpleName: poll(394) into MethodInvocation(395) at 1", "Move MethodInvocation(245) into InfixExpression: !=(401) at 0", "Insert NullLiteral(400) into InfixExpression: !=(401) at 1", "Insert ExpressionStatement(406) into Block(407) at 0", "Move ExpressionStatement(277) into Block(412) at 0", "Insert Assignment: =(143) into ExpressionStatement(144) at 0", "Insert SingleVariableDeclaration(148) into EnhancedForStatement(172) at 0", "Insert SimpleName: iterators(149) into EnhancedForStatement(172) at 1", "Insert Block(171) into EnhancedForStatement(172) at 2", "Insert ThisExpression(198) into MethodInvocation(202) at 0", "Move SimpleName: compare(254) into MethodInvocation(202) at 1", "Update SimpleName: r(255) to c1", "Move SimpleName: r(255) into MethodInvocation(202) at 2", "Update SimpleName: minResult(256) to c2", "Move SimpleName: minResult(256) into MethodInvocation(202) at 3", "Insert SimpleName: PriorityQueue(313) into SimpleType: PriorityQueue(314) at 0", "Insert SimpleName: MaterializedComparableResultIterator(315) into SimpleType: MaterializedComparableResultIterator(316) at 0", "Insert SimpleName: getMinHeap(319) into MethodInvocation(320) at 0", "Update SimpleName: remove(279) to minHeap", "Move SimpleName: remove(279) into MethodInvocation(328) at 0", "Update SimpleName: i(280) to peek", "Move SimpleName: i(280) into MethodInvocation(328) at 1", "Insert NullLiteral(353) into ReturnStatement(354) at 0", "Insert NullLiteral(381) into ReturnStatement(382) at 0", "Insert MethodInvocation(405) into ExpressionStatement(406) at 0", "Insert SimpleName: minHeap(133) into Assignment: =(143) at 0", "Insert ClassInstanceCreation(142) into Assignment: =(143) at 1", "Move SimpleType: PeekingResultIterator(212) into SingleVariableDeclaration(148) at 0", "Insert SimpleName: itr(147) into SingleVariableDeclaration(148) at 1", "Insert IfStatement(161) into Block(171) at 0", "Insert ExpressionStatement(170) into Block(171) at 1", "Insert SimpleName: MergeSortResultIterator(197) into ThisExpression(198) at 0", "Insert SimpleName: minHeap(402) into MethodInvocation(405) at 0", "Insert SimpleName: add(403) into MethodInvocation(405) at 1", "Insert SimpleName: iterator(404) into MethodInvocation(405) at 2", "Insert ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(138) into ClassInstanceCreation(142) at 0", "Move MethodInvocation(221) into ClassInstanceCreation(142) at 1", "Insert InfixExpression: ==(154) into IfStatement(161) at 0", "Insert Block(160) into IfStatement(161) at 1", "Insert MethodInvocation(169) into ExpressionStatement(170) at 0", "Insert SimpleType: PriorityQueue(135) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(138) at 0", "Insert SimpleType: MaterializedComparableResultIterator(137) into ParameterizedType: PriorityQueue<MaterializedComparableResultIterator>(138) at 1", "Insert MethodInvocation(152) into InfixExpression: ==(154) at 0", "Insert NullLiteral(153) into InfixExpression: ==(154) at 1", "Insert ExpressionStatement(158) into Block(160) at 0", "Insert ContinueStatement(159) into Block(160) at 1", "Insert SimpleName: minHeap(162) into MethodInvocation(169) at 0", "Insert SimpleName: add(163) into MethodInvocation(169) at 1", "Insert ClassInstanceCreation(168) into MethodInvocation(169) at 2", "Insert SimpleName: PriorityQueue(134) into SimpleType: PriorityQueue(135) at 0", "Insert SimpleName: MaterializedComparableResultIterator(136) into SimpleType: MaterializedComparableResultIterator(137) at 0", "Insert SimpleName: itr(150) into MethodInvocation(152) at 0", "Insert SimpleName: peek(151) into MethodInvocation(152) at 1", "Insert MethodInvocation(157) into ExpressionStatement(158) at 0", "Insert SimpleType: MaterializedComparableResultIterator(165) into ClassInstanceCreation(168) at 0", "Insert SimpleName: itr(166) into ClassInstanceCreation(168) at 1", "Insert SimpleName: itrComparator(167) into ClassInstanceCreation(168) at 2", "Insert SimpleName: itr(155) into MethodInvocation(157) at 0", "Insert SimpleName: close(156) into MethodInvocation(157) at 1", "Update SimpleName: PeekingResultIterator(231) to MaterializedComparableResultIterator", "Move SimpleName: PeekingResultIterator(231) into SimpleType: MaterializedComparableResultIterator(165) at 0", "Delete TextElement: provided.(15)", "Delete Modifier: private(189)", "Delete SimpleType: PeekingResultIterator(191)", "Delete SimpleName: minIterator(192)", "Delete NullLiteral(208)", "Delete VariableDeclarationFragment(209)", "Delete VariableDeclarationStatement(210)", "Delete SimpleName: EMPTY_ITERATOR(214)", "Delete VariableDeclarationFragment(215)", "Delete VariableDeclarationStatement(216)", "Delete PrimitiveType: int(217)", "Delete SimpleName: i(218)", "Delete NumberLiteral: 1(222)", "Delete InfixExpression: -(223)", "Delete VariableDeclarationFragment(224)", "Delete VariableDeclarationExpression(225)", "Delete SimpleName: i(226)", "Delete NumberLiteral: 0(227)", "Delete InfixExpression: >=(228)", "Delete SimpleName: i(229)", "Delete PostfixExpression: --(230)", "Delete SimpleType: PeekingResultIterator(232)", "Delete SimpleName: iterator(233)", "Delete SimpleName: iterators(234)", "Delete SimpleName: get(235)", "Delete SimpleName: i(236)", "Delete MethodInvocation(237)", "Delete VariableDeclarationFragment(238)", "Delete VariableDeclarationStatement(239)", "Delete SimpleName: r(242)", "Delete VariableDeclarationFragment(246)", "Delete VariableDeclarationStatement(247)", "Delete SimpleName: r(248)", "Delete NullLiteral(249)", "Delete InfixExpression: !=(250)", "Delete SimpleName: minResult(251)", "Delete NullLiteral(252)", "Delete InfixExpression: ==(253)", "Delete MethodInvocation(257)", "Delete NumberLiteral: 0(258)", "Delete InfixExpression: <(259)", "Delete InfixExpression: ||(260)", "Delete SimpleName: minResult(261)", "Delete SimpleName: r(262)", "Delete Assignment: =(263)", "Delete ExpressionStatement(264)", "Delete SimpleName: minIterator(265)", "Delete SimpleName: iterator(266)", "Delete Assignment: =(267)", "Delete ExpressionStatement(268)", "Delete Block(269)", "Delete IfStatement(270)", "Delete ContinueStatement(271)", "Delete Block(272)", "Delete IfStatement(273)", "Delete SimpleName: iterators(278)", "Delete MethodInvocation(281)", "Delete ExpressionStatement(282)", "Delete Block(283)", "Delete ForStatement(284)", "Delete Block(287)", "Delete MethodDeclaration(288)", "Delete Block(308)", "Delete Block(329)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}