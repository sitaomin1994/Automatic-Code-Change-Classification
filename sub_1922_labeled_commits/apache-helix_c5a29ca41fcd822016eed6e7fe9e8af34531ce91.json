{"application": "apache-helix", "csha": "c5a29ca41fcd822016eed6e7fe9e8af34531ce91", "files": [{"Rebalancer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.helix.controller.stages.ResourceMapping to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.helix.model.Resource to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TextElement: state assignment for each partition's replicas. to TagElement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: cache to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: currentStateOutput to SingleVariableDeclaration at 1", "INS SimpleName: resource to SingleVariableDeclaration at 1", "INS TextElement: Given an ideal state for a resource and the liveness of instances, compute the best possible to TagElement at 0", "INS SimpleName: idealState to SingleVariableDeclaration at 1", "INS SimpleName: computeBestPossiblePartitionState to MethodDeclaration at 2", "INS SimpleName: Resource to SimpleType: Resource at 0", "INS SimpleType: ResourceMapping to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: ResourceMapping to SimpleType: ResourceMapping at 0", "INS TextElement: Provides the current state and pending state transitions for all partitions to TagElement: @param at 1", "INS MethodDeclaration to TypeDeclaration: interface at 5", "INS SimpleType: ClusterDataCache to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 3", "INS TagElement: @return to Javadoc at 5", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleType: Resource to SingleVariableDeclaration at 0", "INS SimpleName: ClusterDataCache to SimpleType: ClusterDataCache at 0", "INS SimpleName: idealState to TagElement: @param at 0", "INS SimpleName: cache to SingleVariableDeclaration at 1", "INS SimpleName: CurrentStateOutput to SimpleType: CurrentStateOutput at 0", "INS SimpleType: IdealState to SingleVariableDeclaration at 0", "INS SimpleName: resource to TagElement: @param at 0", "INS SimpleName: currentStateOutput to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 4", "INS SimpleType: CurrentStateOutput to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from  Provides additional methods to retrieve cluster data.  to  Provides additional methods to retrieve cluster data.", "operations": ["UPD TextElement:  Provides additional methods to retrieve cluster data.  from  Provides additional methods to retrieve cluster data.  to  Provides additional methods to retrieve cluster data."]}]}}, {"Rebalancer_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(103) at 4", "Insert ImportDeclaration(13) into CompilationUnit(103) at 6", "Insert QualifiedName: org.apache.helix.controller.stages.ResourceMapping(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.helix.model.Resource(12) into ImportDeclaration(13) at 0", "Insert MethodDeclaration(101) into TypeDeclaration: interface(102) at 5", "Insert Javadoc(81) into MethodDeclaration(101) at 0", "Insert SimpleType: ResourceMapping(83) into MethodDeclaration(101) at 1", "Insert SimpleName: computeBestPossiblePartitionState(84) into MethodDeclaration(101) at 2", "Insert SingleVariableDeclaration(88) into MethodDeclaration(101) at 3", "Insert SingleVariableDeclaration(92) into MethodDeclaration(101) at 4", "Insert SingleVariableDeclaration(96) into MethodDeclaration(101) at 5", "Insert SingleVariableDeclaration(100) into MethodDeclaration(101) at 6", "Insert TagElement(70) into Javadoc(81) at 0", "Insert TagElement: @param(72) into Javadoc(81) at 1", "Insert TagElement: @param(74) into Javadoc(81) at 2", "Insert TagElement: @param(76) into Javadoc(81) at 3", "Insert TagElement: @param(79) into Javadoc(81) at 4", "Insert TagElement: @return(80) into Javadoc(81) at 5", "Insert SimpleName: ResourceMapping(82) into SimpleType: ResourceMapping(83) at 0", "Insert SimpleType: ClusterDataCache(86) into SingleVariableDeclaration(88) at 0", "Insert SimpleName: cache(87) into SingleVariableDeclaration(88) at 1", "Insert SimpleType: IdealState(90) into SingleVariableDeclaration(92) at 0", "Insert SimpleName: idealState(91) into SingleVariableDeclaration(92) at 1", "Insert SimpleType: Resource(94) into SingleVariableDeclaration(96) at 0", "Insert SimpleName: resource(95) into SingleVariableDeclaration(96) at 1", "Insert SimpleType: CurrentStateOutput(98) into SingleVariableDeclaration(100) at 0", "Insert SimpleName: currentStateOutput(99) into SingleVariableDeclaration(100) at 1", "Update TextElement:  Provides additional methods to retrieve cluster data. (38) to  Provides additional methods to retrieve cluster data.", "Insert TextElement: Given an ideal state for a resource and the liveness of instances, compute the best possible(68) into TagElement(70) at 0", "Insert TextElement: state assignment for each partition's replicas.(69) into TagElement(70) at 1", "Insert SimpleName: cache(71) into TagElement: @param(72) at 0", "Insert SimpleName: idealState(73) into TagElement: @param(74) at 0", "Insert SimpleName: resource(75) into TagElement: @param(76) at 0", "Insert SimpleName: currentStateOutput(77) into TagElement: @param(79) at 0", "Insert TextElement: Provides the current state and pending state transitions for all partitions(78) into TagElement: @param(79) at 1", "Insert SimpleName: ClusterDataCache(85) into SimpleType: ClusterDataCache(86) at 0", "Insert SimpleName: IdealState(89) into SimpleType: IdealState(90) at 0", "Insert SimpleName: Resource(93) into SimpleType: Resource(94) at 0", "Insert SimpleName: CurrentStateOutput(97) into SimpleType: CurrentStateOutput(98) at 0"]}}, {"BestPossibleStateCalcStage_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 24", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 24"]}, {"root": "UPDATE from org.apache.helix.HelixConstants to org.apache.helix.controller.rebalancer.AutoRebalancer", "operations": ["UPD QualifiedName: org.apache.helix.HelixConstants from org.apache.helix.HelixConstants to org.apache.helix.controller.rebalancer.AutoRebalancer"]}, {"root": "UPDATE from org.apache.helix.HelixDefinedState to org.apache.helix.controller.rebalancer.CustomRebalancer", "operations": ["UPD QualifiedName: org.apache.helix.HelixDefinedState from org.apache.helix.HelixDefinedState to org.apache.helix.controller.rebalancer.CustomRebalancer"]}, {"root": "UPDATE from org.apache.helix.HelixManager to org.apache.helix.controller.rebalancer.Rebalancer", "operations": ["UPD QualifiedName: org.apache.helix.HelixManager from org.apache.helix.HelixManager to org.apache.helix.controller.rebalancer.Rebalancer"]}, {"root": "UPDATE from org.apache.helix.ZNRecord to org.apache.helix.controller.rebalancer.SemiAutoRebalancer", "operations": ["UPD QualifiedName: org.apache.helix.ZNRecord from org.apache.helix.ZNRecord to org.apache.helix.controller.rebalancer.SemiAutoRebalancer"]}, {"root": "UPDATE from org.apache.helix.model.CurrentState to org.apache.helix.model.IdealState.IdealStateProperty", "operations": ["UPD QualifiedName: org.apache.helix.model.CurrentState from org.apache.helix.model.CurrentState to org.apache.helix.model.IdealState.IdealStateProperty"]}, {"root": "UPDATE from org.apache.helix.model.LiveInstance to org.apache.helix.util.HelixUtil", "operations": ["UPD QualifiedName: org.apache.helix.model.LiveInstance from org.apache.helix.model.LiveInstance to org.apache.helix.util.HelixUtil"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS Block to MethodDeclaration at 6", "INS SimpleName: rebalancer to InfixExpression: == at 0", "INS IfStatement to Block at 5", "INS SimpleName: rebalancer to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: cache to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: idealState to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: partitionStateAssignment to VariableDeclarationFragment at 0", "INS IfStatement to Block at 6", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: resource to MethodInvocation at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ResourceMapping to VariableDeclarationStatement at 0", "INS SimpleName: computeBestPossiblePartitionState to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleName: compute to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: BestPossibleStateOutput to MethodDeclaration at 1", "MOV Modifier: private to MethodDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV MethodInvocation to EnhancedForStatement at 1", "MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 8"]}, {"root": "UPDATE from HelixManager to Rebalancer", "operations": ["UPD SimpleType: HelixManager from HelixManager to Rebalancer", "UPD SimpleName: HelixManager from HelixManager to Rebalancer"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0", "MOV MethodInvocation to EnhancedForStatement at 1"]}, {"root": "UPDATE from manager to rebalancer", "operations": ["UPD SimpleName: manager from manager to rebalancer", "UPD SimpleName: replicas from replicas to rebalancer", "UPD SimpleName: stateCount from stateCount to rebalancer"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from cache to containsKey", "operations": ["UPD SimpleName: cache from cache to containsKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: cache to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV TryStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "UPDATE from Map to ResourceMapping", "operations": ["UPD SimpleName: Map from Map to ResourceMapping"]}, {"root": "MOVE from SimpleType: ResourceMapping", "operations": ["MOV SimpleName: Map to SimpleType: ResourceMapping at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from setListFields to getSimpleFields", "operations": ["UPD SimpleName: setListFields from setListFields to getSimpleFields"]}, {"root": "INS QualifiedName: IdealStateProperty.REBALANCER_CLASS_NAME to MethodInvocation at 0", "operations": ["INS QualifiedName: IdealStateProperty.REBALANCER_CLASS_NAME to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from currentStateMap to currentStateOutput", "operations": ["UPD SimpleName: currentStateMap from currentStateMap to currentStateOutput"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentStateMap to MethodInvocation at 5"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from taggedInstances to rebalancerClassName", "operations": ["UPD SimpleName: taggedInstances from taggedInstances to rebalancerClassName", "UPD SimpleName: topStateValue from topStateValue to rebalancerClassName"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 3", "operations": ["INS Block to IfStatement at 3"]}, {"root": "INS SimpleName: newStateMap to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: newStateMap to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from put to output", "operations": ["UPD SimpleName: put from put to output"]}, {"root": "UPDATE from instance to setState", "operations": ["UPD SimpleName: instance from instance to setState"]}, {"root": "UPDATE from idealStateMap to resourceName", "operations": ["UPD SimpleName: idealStateMap from idealStateMap to resourceName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 4", "MOV SimpleName: instance to MethodInvocation at 5", "MOV SimpleName: idealStateMap to MethodInvocation at 3"]}, {"root": "UPDATE from get to partition", "operations": ["UPD SimpleName: get from get to partition", "UPD SimpleName: equals from equals to partition"]}, {"root": "UPDATE from instance to newStateMap", "operations": ["UPD SimpleName: instance from instance to newStateMap"]}, {"root": "UPDATE from getStatesPriorityList to idealState", "operations": ["UPD SimpleName: getStatesPriorityList from getStatesPriorityList to idealState"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStatesPriorityList to MethodInvocation at 0"]}, {"root": "UPDATE from get to getRebalancerClassName", "operations": ["UPD SimpleName: get from get to getRebalancerClassName"]}, {"root": "UPDATE from \"found the following instances with tag \" to \"resource \"", "operations": ["UPD StringLiteral: \"found the following instances with tag \" from \"found the following instances with tag \" to \"resource \""]}, {"root": "INS SimpleName: resourceName to InfixExpression: + at 1", "operations": ["INS SimpleName: resourceName to InfixExpression: + at 1"]}, {"root": "UPDATE from \" \" to \" use idealStateRebalancer \"", "operations": ["UPD StringLiteral: \" \" from \" \" to \" use idealStateRebalancer \""]}, {"root": "UPDATE from IdealStateModeProperty.CUSTOMIZED to IdealStateModeProperty.AUTO", "operations": ["UPD QualifiedName: IdealStateModeProperty.CUSTOMIZED from IdealStateModeProperty.CUSTOMIZED to IdealStateModeProperty.AUTO"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from currentStateMap to partitionStateAssignment", "operations": ["UPD SimpleName: currentStateMap from currentStateMap to partitionStateAssignment"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentStateMap to MethodInvocation at 0", "MOV SimpleName: instance to MethodInvocation at 1"]}, {"root": "UPDATE from instance to getInstanceStateMap", "operations": ["UPD SimpleName: instance from instance to getInstanceStateMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: equals to MethodInvocation at 2"]}, {"root": "INS CastExpression to Assignment: = at 1", "operations": ["INS ParenthesizedExpression to CastExpression at 1", "INS CastExpression to Assignment: = at 1", "INS SimpleType: Rebalancer to CastExpression at 0", "INS SimpleName: newInstance to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: rebalancerClassName to MethodInvocation at 3", "INS SimpleName: Rebalancer to SimpleType: Rebalancer at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleType: AutoRebalancer to ClassInstanceCreation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: AutoRebalancer to SimpleType: AutoRebalancer at 0"]}, {"root": "UPDATE from error to warn", "operations": ["UPD SimpleName: error from error to warn"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS StringLiteral: \"Exception while invoking custom rebalancer class:\" to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: rebalancerClassName to InfixExpression: + at 1"]}, {"root": "INS SimpleName: rebalancer to Assignment: = at 0", "operations": ["INS SimpleName: rebalancer to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: SemiAutoRebalancer to ClassInstanceCreation at 0", "INS SimpleName: SemiAutoRebalancer to SimpleType: SemiAutoRebalancer at 0"]}, {"root": "INS SimpleName: rebalancer to Assignment: = at 0", "operations": ["INS SimpleName: rebalancer to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleType: CustomRebalancer to ClassInstanceCreation at 0", "INS SimpleName: CustomRebalancer to SimpleType: CustomRebalancer at 0", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "UPDATE from Integer to HelixUtil", "operations": ["UPD SimpleName: Integer from Integer to HelixUtil"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: Integer to MethodInvocation at 0", "MOV SimpleName: parseInt to MethodInvocation at 1"]}, {"root": "UPDATE from parseInt to loadClass", "operations": ["UPD SimpleName: parseInt from parseInt to loadClass"]}, {"root": "UPDATE from getReplicas to getClass", "operations": ["UPD SimpleName: getReplicas from getReplicas to getClass"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Arrays", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collections", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.HashMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Set", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.TreeMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.helix.HelixConstants.StateModelToken", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.helix.model.StateModelDefinition", "DEL ImportDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: stateModelDefName", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: getResourceStateModelDef", "DEL SimpleName: currentStateOutput", "DEL SimpleName: resourceName", "DEL ExpressionStatement"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: idealState", "DEL MethodInvocation", "DEL Assignment: =", "DEL Block", "DEL SimpleName: getStateModelDefRef", "DEL SimpleName: stateModelDefName", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getAttribute", "DEL StringLiteral: \"helixmanager\"", "DEL MethodInvocation", "DEL SimpleName: event"]}, {"root": "DEL SimpleName: defaultListFields", "operations": ["DEL SimpleName: defaultListFields"]}, {"root": "DEL SimpleName: partition", "operations": ["DEL SimpleName: partition"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: stateModelDef", "DEL MethodInvocation"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: idealState", "DEL SimpleName: getResourceName", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: idealState", "operations": ["DEL SimpleName: idealState"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \"\"", "operations": ["DEL StringLiteral: \"\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: num", "DEL StringLiteral: \"N\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: liveInstancesMap", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleName: liveAndEnabled", "DEL SimpleName: keySet", "DEL SimpleType: Set", "DEL VariableDeclarationStatement", "DEL SimpleName: HashSet", "DEL ParameterizedType: Set<String>", "DEL ParameterizedType: HashSet<String>", "DEL SimpleType: HashSet", "DEL SimpleName: String", "DEL SimpleName: Set", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: removeAll", "DEL SimpleName: disabledInstancesForPartition", "DEL MethodInvocation", "DEL SimpleName: liveAndEnabled", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: liveAndEnabled", "DEL MethodInvocation", "DEL SimpleName: size"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"R\"", "DEL MethodInvocation", "DEL SimpleName: num", "DEL SimpleName: equals"]}, {"root": "DEL SimpleName: stateCount", "operations": ["DEL SimpleName: stateCount"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: instancePreferenceList", "DEL SimpleName: size"]}, {"root": "DEL SimpleName: stateCount", "operations": ["DEL SimpleName: stateCount"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: parseInt", "DEL MethodInvocation", "DEL SimpleName: num", "DEL SimpleName: Integer"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: num", "DEL StringLiteral: \"Invalid count for state:\"", "DEL SimpleName: Exception", "DEL InfixExpression: +", "DEL Block", "DEL CatchClause", "DEL Block", "DEL SimpleName: error", "DEL SimpleName: logger", "DEL SimpleType: Exception", "DEL StringLiteral: \" ,count=\"", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: state", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL TryStatement"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: instance", "DEL SimpleName: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: keySet", "DEL SimpleName: idealStateMap"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: notInErrorState", "operations": ["DEL SimpleName: notInErrorState"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL InfixExpression: ||", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: currentStateMap", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL PrefixExpression: !", "DEL SimpleName: get", "DEL SimpleName: instance", "DEL NullLiteral", "DEL QualifiedName: HelixDefinedState.ERROR", "DEL InfixExpression: ||", "DEL MethodInvocation", "DEL SimpleName: currentStateMap"]}, {"root": "DEL SimpleName: instanceStateMap", "operations": ["DEL SimpleName: instanceStateMap"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: contains", "DEL SimpleName: containsKey", "DEL MethodInvocation", "DEL SimpleName: liveInstancesMap", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: notInErrorState", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleName: instance", "DEL SimpleName: instance", "DEL InfixExpression: &&", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: bestStateForPartition", "DEL IfStatement", "DEL Block", "DEL SimpleName: bestStateForPartition", "DEL SimpleType: String", "DEL SimpleName: idealStateMap", "DEL VariableDeclarationStatement", "DEL SimpleName: getCurrentStateMap", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleType: Map", "DEL MethodInvocation", "DEL SimpleName: calculateAutoBalancedIdealState", "DEL SimpleName: idealStateMap", "DEL SimpleName: cache", "DEL ParameterizedType: Set<String>", "DEL SimpleName: partition", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: stateModelDef", "DEL SimpleName: stateModelDef", "DEL MethodInvocation", "DEL SimpleName: currentStateMap", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: idealState", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: String", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: cache", "DEL SimpleType: Set", "DEL Assignment: =", "DEL SimpleName: getInstanceStateMap", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: computeAutoBestStateForPartition", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SimpleName: cache", "DEL SimpleName: stateModelDef", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: getStateModelDef", "DEL SimpleName: getPartitionName", "DEL SimpleName: currentStateOutput", "DEL SimpleName: currentStateMap", "DEL Block", "DEL SimpleName: Set", "DEL SimpleName: bestStateForPartition", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: partition", "DEL SimpleName: getPreferenceList", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL VariableDeclarationStatement", "DEL SimpleName: setState", "DEL SimpleName: Map", "DEL SimpleName: currentStateMap", "DEL ParameterizedType: Map<String,String>", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: Map", "DEL Block", "DEL SimpleName: cache", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL SimpleName: computeCustomizedBestStateForPartition", "DEL ExpressionStatement", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: idealState", "DEL Block", "DEL SimpleType: List", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: getDisabledInstancesForPartition", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: stateModelDefName", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: bestStateForPartition", "DEL SimpleType: Map", "DEL ParameterizedType: List<String>", "DEL SimpleName: output", "DEL SimpleName: currentStateOutput", "DEL SimpleName: cache", "DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL EnhancedForStatement", "DEL SimpleName: stateModelDefName", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: resourceName", "DEL SimpleName: stateModelDef", "DEL SimpleName: String", "DEL SimpleName: instancePreferenceList", "DEL SimpleName: idealState", "DEL SimpleName: disabledInstancesForPartition", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: resourceName", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleName: String", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: stateModelDef", "DEL SimpleName: instancePreferenceList", "DEL VariableDeclarationFragment", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: IdealState", "DEL MethodInvocation", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleName: List", "DEL VariableDeclarationStatement", "DEL SimpleName: normalizeAssignmentMap", "DEL Block", "DEL SimpleName: get", "DEL ParameterizedType: List<String>", "DEL SimpleName: liveInstanceName", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: idealState", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: HashMap", "DEL SimpleType: List", "DEL SimpleName: ClusterDataCache", "DEL SimpleName: getPartitionSet", "DEL SimpleType: List", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: taggedInstances", "DEL SimpleName: idealState", "DEL SimpleName: liveInstances", "DEL SimpleType: Set", "DEL SimpleName: idealState", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: CurrentState", "DEL ParameterizedType: Set<String>", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: instanceName", "DEL SimpleName: String", "DEL SimpleName: orphanedPartitions", "DEL SimpleName: orphanedPartitionsList", "DEL SimpleType: ArrayList", "DEL SimpleName: taggedInstances", "DEL Block", "DEL SimpleName: List", "DEL SimpleName: String", "DEL NumberLiteral: 0", "DEL SimpleName: partitionStates", "DEL EnhancedForStatement", "DEL EnhancedForStatement", "DEL SimpleName: partition", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL SimpleName: ArrayList", "DEL SimpleName: instancePreferenceList", "DEL SimpleName: idealState", "DEL SimpleName: idealState", "DEL ClassInstanceCreation", "DEL SimpleName: liveInstances", "DEL SimpleType: String", "DEL TextElement: will make sure that the master partition are evenly distributed; Also when instances", "DEL TagElement: @param", "DEL SimpleType: List", "DEL SimpleType: String", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: cache", "DEL SimpleName: String", "DEL NullLiteral", "DEL SimpleName: liveInstances", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: defaultListFields", "DEL SimpleName: List", "DEL SimpleName: String", "DEL SimpleName: idealState", "DEL Block", "DEL ParameterizedType: HashSet<String>", "DEL SimpleType: Map", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleType: HashSet", "DEL SimpleName: stateModelDef", "DEL SimpleType: String", "DEL StringLiteral: \"No live instances, return. Idealstate : \"", "DEL ExpressionStatement", "DEL SimpleType: CurrentState", "DEL SingleVariableDeclaration", "DEL SimpleName: setListFields", "DEL SimpleName: partitionName", "DEL SimpleName: add", "DEL SimpleName: replicas", "DEL SimpleType: String", "DEL SimpleName: keySet", "DEL SimpleName: getCurrentState", "DEL TagElement: @param", "DEL SimpleType: TreeMap", "DEL SimpleType: String", "DEL SimpleName: currentStateOutput", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: liveInstanceName", "DEL SimpleType: Map", "DEL SimpleName: masterAssignmentMap", "DEL Block", "DEL SimpleName: currentStateOutput", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleType: ArrayList", "DEL SimpleType: String", "DEL SimpleType: Set", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL ParameterizedType: List<String>", "DEL SimpleName: instanceName", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL ParameterizedType: Set<String>", "DEL SimpleName: String", "DEL ReturnStatement", "DEL SimpleType: ClusterDataCache", "DEL SimpleName: instanceName", "DEL SimpleName: String", "DEL SimpleName: liveInstances", "DEL SimpleType: Set", "DEL SimpleName: calculateAutoBalancedIdealState", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getId", "DEL SimpleType: String", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL SimpleName: getInstanceGroupTag", "DEL Block", "DEL SimpleName: keySet", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: idealState", "DEL SimpleName: cache", "DEL SimpleName: replicas", "DEL VariableDeclarationFragment", "DEL SimpleName: getRecord", "DEL SimpleName: maxPartitionsPerInstance", "DEL SimpleName: orphanedPartitionsList", "DEL SingleVariableDeclaration", "DEL SimpleName: maxPartitionsPerInstance", "DEL MethodInvocation", "DEL ParameterizedType: List<String>", "DEL SimpleName: instanceName", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: String", "DEL ParameterizedType: List<String>", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: idealState", "DEL SimpleName: TreeMap", "DEL SimpleType: String", "DEL SimpleName: size", "DEL SimpleType: String", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: info", "DEL SimpleName: cache", "DEL SimpleType: String", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: currentState", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: CurrentStateOutput", "DEL ParameterizedType: Map<String,String>", "DEL VariableDeclarationStatement", "DEL SimpleName: orphanedPartitionsList", "DEL SimpleName: getSessionId", "DEL MethodInvocation", "DEL SimpleName: orphanedPartitions", "DEL SimpleType: HashMap", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: taggedInstances", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: orphanedPartitions", "DEL TextElement: are added / removed, the amount of diff in master partitions are minimized", "DEL Assignment: =", "DEL Block", "DEL SimpleName: equals", "DEL TagElement: @return", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: String", "DEL SimpleName: get", "DEL SimpleName: cache", "DEL SingleVariableDeclaration", "DEL QualifiedName: cache._liveInstanceMap", "DEL SimpleType: String", "DEL SimpleName: generateListFieldFromMasterAssignment", "DEL SimpleType: IdealState", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: state", "DEL SimpleName: HashSet", "DEL SimpleName: getPartitionStateMap", "DEL SimpleName: getLiveInstances", "DEL SimpleName: instanceName", "DEL SimpleName: remove", "DEL SimpleName: Map", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: StateModelDefinition", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: emptyList", "DEL QualifiedName: cache._instanceConfigMap", "DEL SimpleName: idealState", "DEL MethodInvocation", "DEL ParameterizedType: TreeMap<String,List<String>>", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,List<String>>", "DEL ExpressionStatement", "DEL SimpleName: addAll", "DEL SimpleName: liveInstanceName", "DEL Block", "DEL SimpleName: currentState", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: ArrayList", "DEL SimpleName: add", "DEL SimpleType: CurrentStateOutput", "DEL SimpleType: String", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: state", "DEL SimpleName: String", "DEL Javadoc", "DEL EnhancedForStatement", "DEL TagElement: @param", "DEL SimpleType: String", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: partitionName", "DEL ParameterizedType: ArrayList<String>", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: getPartitionSet", "DEL ParameterizedType: List<String>", "DEL SimpleName: ArrayList", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL EnhancedForStatement", "DEL SimpleName: String", "DEL SimpleName: HashSet", "DEL VariableDeclarationStatement", "DEL Block", "DEL TextElement: Compute best state for resource in AUTO_REBALANCE ideal state mode. the algorithm", "DEL SimpleName: defaultListFields", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: List", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ParameterizedType: List<String>", "DEL ExpressionStatement", "DEL ParameterizedType: Set<String>", "DEL SimpleName: idealState", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleName: getInstanceGroupTag", "DEL VariableDeclarationStatement", "DEL SimpleName: liveInstanceName", "DEL SimpleName: partitionName", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,List<String>>", "DEL InfixExpression: !=", "DEL SimpleName: Map", "DEL TagElement: @param", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: stateModelDef", "DEL InfixExpression: >", "DEL MethodInvocation", "DEL Modifier: private", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: liveInstances", "DEL SimpleName: Set", "DEL SimpleType: String", "DEL ParameterizedType: HashMap<String,List<String>>", "DEL SimpleName: emptyList", "DEL InfixExpression: !=", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: getResourceName", "DEL MethodDeclaration", "DEL SimpleName: currentState", "DEL SimpleName: String", "DEL SimpleName: taggedInstances", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: masterAssignmentMap", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: partitionName", "DEL SimpleName: Set", "DEL SimpleName: Set", "DEL SimpleType: List", "DEL SimpleName: List", "DEL SimpleName: put", "DEL SimpleName: logger", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: ArrayList", "DEL SimpleName: orphanedPartitions", "DEL SimpleName: String", "DEL NumberLiteral: 1", "DEL SimpleName: String", "DEL SimpleName: addAll", "DEL SimpleName: partitionStates", "DEL SimpleName: topStateValue", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleType: List", "DEL SimpleName: String", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL SimpleType: HashSet", "DEL SimpleName: liveInstances", "DEL ExpressionStatement", "DEL SimpleName: containsTag", "DEL MethodInvocation", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: size", "DEL SimpleName: partitionStates", "DEL IfStatement", "DEL ParameterizedType: HashSet<String>", "DEL SimpleName: getMaxPartitionsPerInstance", "DEL SimpleName: String", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: targetPartitionNo", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: instanceNames", "DEL QualifiedName: instanceNames.length", "DEL SimpleName: targetPartitionNo", "DEL SimpleName: toArray", "DEL MethodInvocation", "DEL ArrayAccess", "DEL SimpleName: targetPartitionNo", "DEL SimpleName: i", "DEL Modifier: private", "DEL SimpleName: masterAssignmentMap", "DEL PostfixExpression: --", "DEL SimpleName: orphanPartitions", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL ArrayAccess", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: instanceNames", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: totalPartitions", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL SimpleName: get", "DEL SimpleName: keySet", "DEL SimpleName: instanceNames", "DEL TagElement: @param", "DEL SimpleName: masterAssignmentMap", "DEL InfixExpression: >", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: leave", "DEL SimpleName: keySet", "DEL Block", "DEL VariableDeclarationStatement", "DEL Assignment: +=", "DEL SimpleName: leave", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL SimpleName: maxPartitionsPerInstance", "DEL SimpleName: totalPartitions", "DEL NumberLiteral: 0", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: totalPartitions", "DEL ConditionalExpression", "DEL ArrayAccess", "DEL SimpleName: masterAssignmentMap", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: String", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL Dimension", "DEL SimpleName: i", "DEL StringLiteral: \"orphanPartitions still contains elements\"", "DEL Assignment: +=", "DEL InfixExpression: >", "DEL SimpleName: partitionNumber", "DEL TextElement: partitions not hosted by any instance", "DEL NumberLiteral: 0", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: size", "DEL InfixExpression: /", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL SimpleName: normalizeAssignmentMap", "DEL ArrayType: String[]", "DEL Assignment: =", "DEL SimpleName: targetPartitionNo", "DEL SimpleName: leave", "DEL SimpleName: List", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL TagElement: @param", "DEL MethodInvocation", "DEL ArrayAccess", "DEL VariableDeclarationExpression", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleName: logger", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL NumberLiteral: 1", "DEL SimpleName: orphanPartitions", "DEL SimpleName: leave", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: size", "DEL SimpleName: leave", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL TextElement: Given the current master assignment map and the partitions not hosted, generate an", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: size", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: size", "DEL SimpleName: masterAssignmentMap", "DEL SingleVariableDeclaration", "DEL ForStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: void", "DEL Block", "DEL IfStatement", "DEL ArrayCreation", "DEL SimpleName: i", "DEL Dimension", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: get", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: get", "DEL SimpleName: size", "DEL ParenthesizedExpression", "DEL TagElement: @return", "DEL SimpleName: partitionNumber", "DEL IfStatement", "DEL PrimitiveType: int", "DEL SimpleName: size", "DEL TagElement", "DEL SimpleName: get", "DEL SimpleName: List", "DEL SimpleName: instanceNames", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL SimpleName: remove", "DEL SingleVariableDeclaration", "DEL TextElement: evenly distributed partition assignment map", "DEL SimpleName: orphanPartitions", "DEL SimpleName: instanceNames", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: lastElementIndex", "DEL SimpleName: maxPartitionsPerInstance", "DEL SimpleName: remove", "DEL NumberLiteral: 1", "DEL SimpleName: size", "DEL SimpleName: sort", "DEL NumberLiteral: 1", "DEL InfixExpression: %", "DEL SimpleName: maxPartitionsPerInstance", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL QualifiedName: instanceNames.length", "DEL NumberLiteral: 0", "DEL InfixExpression: >", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: orphanPartitions", "DEL SimpleName: orphanPartitions", "DEL VariableDeclarationFragment", "DEL SimpleName: masterAssignmentMap", "DEL NumberLiteral: 0", "DEL SimpleName: Arrays", "DEL InfixExpression: -", "DEL PrimitiveType: int", "DEL ConditionalExpression", "DEL SimpleName: orphanPartitions", "DEL SimpleName: instanceNames", "DEL SimpleName: get", "DEL ArrayType: String[]", "DEL PrimitiveType: int", "DEL InfixExpression: %", "DEL SimpleName: partitionNumber", "DEL SimpleName: i", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: add", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: lastElementIndex", "DEL InfixExpression: <", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: totalPartitions", "DEL SimpleName: sort", "DEL PrimitiveType: int", "DEL SimpleName: partitionNumber", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL SimpleName: sort", "DEL MethodInvocation", "DEL SimpleName: targetPartitionNo", "DEL TextElement: current master assignment map", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: orphanPartitions", "DEL VariableDeclarationStatement", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: lastElementIndex", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: i", "DEL WhileStatement", "DEL SimpleName: instanceNames", "DEL SimpleName: masterAssignmentMap", "DEL ArrayAccess", "DEL ParameterizedType: Map<String,List<String>>", "DEL SimpleName: totalPartitions", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: lastElementIndex", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: totalPartitions", "DEL SimpleName: String", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: targetPartitionNo", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: size", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: instanceNames", "DEL InfixExpression: >", "DEL SimpleName: orphanPartitions", "DEL ParameterizedType: List<String>", "DEL SimpleName: i", "DEL SimpleName: size", "DEL SimpleName: String", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: -", "DEL SimpleName: partitionNumber", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL SimpleName: orphanPartitions", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: key", "DEL WhileStatement", "DEL SimpleName: warn", "DEL ParameterizedType: List<String>", "DEL PostfixExpression: --", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL PostfixExpression: ++", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleName: size", "DEL SimpleName: lastElementIndex", "DEL SimpleName: key", "DEL SimpleName: Collections", "DEL SimpleName: lastElementIndex", "DEL Assignment: =", "DEL SimpleType: String", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL SimpleName: add", "DEL SimpleType: String", "DEL SimpleName: instanceNames", "DEL SimpleName: leave", "DEL PrimitiveType: int", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: Collections", "DEL SimpleName: masterAssignmentMap"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ParenthesizedExpression", "DEL SimpleName: get", "DEL SimpleName: String", "DEL TextElement: current master assignment map", "DEL ArrayType: String[]", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: String", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: otherInstances", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: x", "DEL MethodInvocation", "DEL TextElement: Generate full preference list from the master assignment map evenly distribute the", "DEL SimpleName: masterAssignmentMap", "DEL VariableDeclarationFragment", "DEL SimpleName: partitionName", "DEL ForStatement", "DEL SimpleName: listFields", "DEL SimpleName: otherInstances", "DEL ParameterizedType: List<String>", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: HashMap", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL SimpleType: String", "DEL SimpleName: listFields", "DEL ForStatement", "DEL SimpleType: String", "DEL SimpleName: put", "DEL SimpleName: masterAssignmentMap", "DEL VariableDeclarationFragment", "DEL SimpleName: Math", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL SimpleName: index", "DEL TextElement: partitions not hosted by any instance", "DEL SimpleType: String", "DEL PostfixExpression: ++", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: j", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleName: partitionName", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: add", "DEL SimpleName: masterAssignmentMap", "DEL TagElement", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL SimpleName: List", "DEL SimpleName: get", "DEL InfixExpression: %", "DEL SimpleType: String", "DEL SimpleName: partitionList", "DEL ExpressionStatement", "DEL SimpleName: orphanPartitions", "DEL SimpleName: partitionList", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: j", "DEL SimpleName: partitionName", "DEL SimpleType: String", "DEL PostfixExpression: ++", "DEL ForStatement", "DEL SimpleType: List", "DEL SimpleType: List", "DEL SimpleName: otherInstances", "DEL SimpleName: Map", "DEL SimpleName: k", "DEL SimpleName: listFields", "DEL SimpleName: slavesCanAssign", "DEL VariableDeclarationExpression", "DEL SimpleType: Map", "DEL ParameterizedType: List<String>", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: add", "DEL SimpleName: instanceNames", "DEL ClassInstanceCreation", "DEL InfixExpression: <", "DEL SimpleName: ArrayList", "DEL SimpleName: i", "DEL QualifiedName: instanceNames.length", "DEL SimpleName: keySet", "DEL SimpleName: replicas", "DEL SimpleName: size", "DEL TagElement: @return", "DEL InfixExpression: <", "DEL SimpleName: instanceNames", "DEL PrimitiveType: int", "DEL SimpleType: ArrayList", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: partitionList", "DEL TagElement: @param", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SimpleName: get", "DEL QualifiedName: instanceNames.length", "DEL SimpleName: partitionName", "DEL VariableDeclarationStatement", "DEL SimpleName: x", "DEL SimpleName: slaves", "DEL Dimension", "DEL SimpleType: HashMap", "DEL ParameterizedType: Map<String,List<String>>", "DEL SimpleName: listFields", "DEL SimpleType: List", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL InfixExpression: -", "DEL SimpleName: x", "DEL SimpleName: String", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: String", "DEL InfixExpression: -", "DEL SimpleName: otherInstances", "DEL SimpleType: Map", "DEL VariableDeclarationExpression", "DEL ParameterizedType: List<String>", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: Arrays", "DEL SimpleName: instanceNames", "DEL SimpleName: index", "DEL SimpleName: k", "DEL SimpleName: slaves", "DEL NumberLiteral: 0", "DEL SimpleType: List", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL SimpleName: instanceName", "DEL SimpleName: List", "DEL SimpleName: List", "DEL SimpleName: x", "DEL TextElement: slave partitions mastered on a host to other hosts", "DEL MethodInvocation", "DEL ParameterizedType: List<String>", "DEL PostfixExpression: ++", "DEL VariableDeclarationFragment", "DEL ParameterizedType: List<String>", "DEL SimpleName: replicas", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: j", "DEL VariableDeclarationExpression", "DEL SimpleName: get", "DEL SimpleType: String", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: instanceName", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: -", "DEL SimpleName: index", "DEL ExpressionStatement", "DEL SimpleName: j", "DEL SimpleName: instanceNames", "DEL NumberLiteral: 1", "DEL InfixExpression: +", "DEL SimpleType: String", "DEL SimpleName: slavesCanAssign", "DEL ArrayType: String[]", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: k", "DEL SimpleName: size", "DEL VariableDeclarationStatement", "DEL SimpleName: List", "DEL SimpleName: add", "DEL ArrayCreation", "DEL SimpleName: otherInstances", "DEL ParameterizedType: Map<String,List<String>>", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: masterAssignmentMap", "DEL Javadoc", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: i", "DEL InfixExpression: <", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: k", "DEL SimpleType: List", "DEL PostfixExpression: ++", "DEL NumberLiteral: 0", "DEL ForStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: instanceName", "DEL SimpleName: String", "DEL ArrayAccess", "DEL VariableDeclarationExpression", "DEL Dimension", "DEL SimpleName: min", "DEL SimpleName: size", "DEL SimpleName: listFields", "DEL SimpleType: String", "DEL SimpleName: masterAssignmentMap", "DEL SimpleName: String", "DEL SimpleName: j", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL SimpleName: index", "DEL SimpleName: String", "DEL SimpleName: generateListFieldFromMasterAssignment", "DEL SimpleName: Map", "DEL ParameterizedType: HashMap<String,List<String>>", "DEL NumberLiteral: 1", "DEL QualifiedName: instanceNames.length", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,List<String>>", "DEL SimpleType: ArrayList", "DEL ParameterizedType: List<String>", "DEL SimpleName: Map", "DEL SimpleName: instanceNames", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL SimpleName: List", "DEL MethodInvocation", "DEL SimpleName: ArrayList", "DEL MethodDeclaration", "DEL SimpleName: size", "DEL SingleVariableDeclaration", "DEL SimpleName: sort", "DEL SimpleType: Map", "DEL SimpleName: String", "DEL SimpleName: size", "DEL SimpleName: toArray", "DEL NumberLiteral: 1", "DEL SimpleType: String", "DEL TagElement: @param", "DEL InfixExpression: %", "DEL SimpleType: List"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement", "DEL SimpleType: Set", "DEL Block", "DEL SimpleType: List", "DEL ArrayCreation", "DEL SimpleName: instanceName", "DEL SimpleName: statesPriorityList", "DEL ParameterizedType: List<String>", "DEL SimpleName: String", "DEL SimpleName: liveInstancesMap", "DEL SimpleName: Map", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: currentStateMap", "DEL SimpleType: List", "DEL ParameterizedType: Map<String,String>", "DEL InfixExpression: ||", "DEL MethodInvocation", "DEL SimpleName: get", "DEL NumberLiteral: 0", "DEL SimpleType: StateModelDefinition", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SimpleName: i", "DEL PrimitiveType: boolean", "DEL SimpleName: equals", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: instanceName", "DEL SimpleName: instanceName", "DEL SimpleName: instanceName", "DEL SimpleType: String", "DEL NullLiteral", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: put", "DEL MethodInvocation", "DEL QualifiedName: HelixDefinedState.ERROR", "DEL SimpleName: instance", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL ArrayAccess", "DEL SimpleName: assigned", "DEL Dimension", "DEL SimpleName: stateCount", "DEL ExpressionStatement", "DEL SimpleName: currentStateMap", "DEL SimpleName: assigned", "DEL NullLiteral", "DEL SimpleName: stateModelDef", "DEL SimpleName: String", "DEL IfStatement", "DEL EnhancedForStatement", "DEL NumberLiteral: 0", "DEL TagElement: @return", "DEL ReturnStatement", "DEL ArrayType: boolean[]", "DEL PrefixExpression: !", "DEL SimpleType: String", "DEL SimpleType: ClusterDataCache", "DEL SimpleName: stateModelDef", "DEL VariableDeclarationStatement", "DEL SimpleName: instanceName", "DEL SimpleName: stateModelDef", "DEL ExpressionStatement", "DEL PrefixExpression: !", "DEL SimpleName: cache", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleName: instancePreferenceList", "DEL SimpleName: instancePreferenceList", "DEL Block", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: instanceStateMap", "DEL SimpleType: String", "DEL SimpleName: get", "DEL InfixExpression: ||", "DEL EnhancedForStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: Map", "DEL SimpleType: String", "DEL SimpleName: computeAutoBestStateForPartition", "DEL PrimitiveType: boolean", "DEL PostfixExpression: ++", "DEL SimpleName: String", "DEL SimpleName: getInitialState", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: instancePreferenceList", "DEL ForStatement", "DEL InfixExpression: ==", "DEL SimpleName: String", "DEL SimpleName: Set", "DEL SingleVariableDeclaration", "DEL SimpleName: Map", "DEL PrefixExpression: -", "DEL InfixExpression: &&", "DEL InfixExpression: ==", "DEL SimpleName: cache", "DEL InfixExpression: ||", "DEL IfStatement", "DEL PrefixExpression: !", "DEL SimpleName: String", "DEL SimpleName: contains", "DEL SimpleName: toString", "DEL SimpleType: LiveInstance", "DEL SimpleType: Map", "DEL SimpleType: Map", "DEL SimpleType: Map", "DEL SimpleName: Map", "DEL SimpleName: count", "DEL Block", "DEL SimpleName: disabledInstancesForPartition", "DEL MethodInvocation", "DEL SimpleName: instance", "DEL IfStatement", "DEL SimpleName: instanceStateMap", "DEL Modifier: private", "DEL Block", "DEL IfStatement", "DEL SimpleName: String", "DEL PrimitiveType: int", "DEL SimpleName: getLiveInstances", "DEL Dimension", "DEL SimpleName: getStatesPriorityList", "DEL SimpleName: currentStateMap", "DEL SimpleName: currentStateMap", "DEL SimpleName: toString", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL BreakStatement", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL SimpleName: keySet", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL SimpleName: size", "DEL NumberLiteral: 1", "DEL SimpleName: disabledInstancesForPartition", "DEL Block", "DEL PrefixExpression: !", "DEL TextElement: : instance->state for each partition", "DEL SimpleName: liveInstancesMap", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL MethodInvocation", "DEL TagElement: @param", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL PrefixExpression: !", "DEL SimpleName: toString", "DEL SimpleType: String", "DEL PrefixExpression: -", "DEL MethodInvocation", "DEL SimpleName: instanceStateMap", "DEL MethodInvocation", "DEL SimpleName: instanceStateMap", "DEL SimpleName: instanceStateMap", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: List", "DEL MethodInvocation", "DEL SimpleType: String", "DEL NumberLiteral: 1", "DEL ParenthesizedExpression", "DEL SimpleName: size", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SimpleName: currentStateMap", "DEL SimpleType: String", "DEL NullLiteral", "DEL SimpleName: contains", "DEL SimpleName: currentStateMap", "DEL TagElement: @param", "DEL Block", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: notInErrorState", "DEL SimpleName: instance", "DEL MethodInvocation", "DEL SimpleName: stateCount", "DEL ReturnStatement", "DEL ParameterizedType: HashMap<String,String>", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: stateModelDef", "DEL SimpleName: equals", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: String", "DEL SimpleName: cache", "DEL Block", "DEL SimpleName: count", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL SimpleName: LiveInstance", "DEL SimpleName: ClusterDataCache", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL ParameterizedType: Map<String,LiveInstance>", "DEL SimpleName: stateModelDef", "DEL SimpleName: instanceName", "DEL VariableDeclarationFragment", "DEL SimpleName: state", "DEL SimpleName: state", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: currentStateMap", "DEL VariableDeclarationStatement", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: String", "DEL SimpleName: num", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL ParameterizedType: List<String>", "DEL SimpleName: stateCount", "DEL SimpleName: instanceStateMap", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: instancePreferenceList", "DEL QualifiedName: HelixDefinedState.ERROR", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleName: List", "DEL VariableDeclarationFragment", "DEL SimpleName: contains", "DEL SimpleName: i", "DEL TextElement: compute best state for resource in AUTO ideal state mode", "DEL SimpleName: containsKey", "DEL SimpleName: HashMap", "DEL InfixExpression: <", "DEL Block", "DEL InfixExpression: >", "DEL SimpleName: instancePreferenceList", "DEL SimpleType: String", "DEL SimpleName: count", "DEL IfStatement", "DEL SimpleName: getNumInstancesPerState", "DEL InfixExpression: &&", "DEL SimpleName: instancePreferenceList", "DEL InfixExpression: &&", "DEL SimpleName: currentStateMap", "DEL TagElement: @param", "DEL SimpleName: currentStateMap", "DEL VariableDeclarationFragment", "DEL SimpleName: notInErrorState", "DEL SimpleType: Map", "DEL InfixExpression: ||", "DEL SimpleName: assigned", "DEL SimpleName: statesPriorityList", "DEL SingleVariableDeclaration", "DEL SimpleName: instance", "DEL SimpleName: contains", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: instance", "DEL SimpleType: String", "DEL Assignment: =", "DEL Block", "DEL MethodInvocation", "DEL QualifiedName: HelixDefinedState.DROPPED", "DEL SimpleName: put", "DEL SimpleName: instance", "DEL SimpleName: instancePreferenceList", "DEL VariableDeclarationFragment", "DEL PrefixExpression: !", "DEL SimpleName: instancePreferenceList", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: state", "DEL SimpleName: put", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: String", "DEL PrimitiveType: boolean", "DEL SimpleName: count", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SingleVariableDeclaration", "DEL SimpleType: HashMap", "DEL SimpleType: String", "DEL SimpleName: instance", "DEL PrimitiveType: int", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: disabledInstancesForPartition", "DEL ParameterizedType: Set<String>", "DEL MethodInvocation", "DEL SimpleName: instance", "DEL NullLiteral", "DEL SimpleName: get"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL IfStatement", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL SimpleName: cache", "DEL SimpleType: Map", "DEL SimpleName: Set", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL IfStatement", "DEL SimpleName: currentStateMap", "DEL SimpleName: cache", "DEL SimpleName: instanceStateMap", "DEL Javadoc", "DEL SimpleName: LiveInstance", "DEL SimpleName: disabledInstancesForPartition", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL EnhancedForStatement", "DEL QualifiedName: HelixDefinedState.ERROR", "DEL MethodInvocation", "DEL TagElement: @param", "DEL SimpleName: toString", "DEL PrefixExpression: !", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleName: instance", "DEL SimpleName: toString", "DEL SimpleName: put", "DEL ParameterizedType: Map<String,String>", "DEL PrefixExpression: !", "DEL SimpleName: disabledInstancesForPartition", "DEL NullLiteral", "DEL NullLiteral", "DEL Modifier: private", "DEL SimpleType: Map", "DEL InfixExpression: &&", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: currentStateMap", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: String", "DEL SimpleType: Set", "DEL TagElement", "DEL TagElement: @param", "DEL SimpleName: instance", "DEL SimpleName: HashMap", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: getInitialState", "DEL SimpleName: instance", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: instance", "DEL SimpleName: idealStateMap", "DEL SimpleName: get", "DEL SimpleType: Map", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: disabledInstancesForPartition", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: currentStateMap", "DEL ParameterizedType: Map<String,String>", "DEL TagElement: @return", "DEL SimpleType: LiveInstance", "DEL SimpleName: currentStateMap", "DEL Block", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: ==", "DEL SimpleName: String", "DEL InfixExpression: ||", "DEL SimpleName: idealStateMap", "DEL SimpleName: instanceStateMap", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL InfixExpression: ==", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: keySet", "DEL MethodInvocation", "DEL TagElement: @param", "DEL SimpleName: Map", "DEL SimpleName: cache", "DEL SimpleName: disabledInstancesForPartition", "DEL SimpleType: String", "DEL SimpleName: Map", "DEL SimpleName: Map", "DEL SimpleName: stateModelDef", "DEL MethodInvocation", "DEL SimpleName: instance", "DEL MethodInvocation", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: contains", "DEL SimpleName: String", "DEL SimpleName: instance", "DEL SimpleName: String", "DEL SimpleName: computeCustomizedBestStateForPartition", "DEL TagElement: @param", "DEL ParameterizedType: Map<String,String>", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: String", "DEL ParameterizedType: HashMap<String,String>", "DEL SimpleName: Map", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL ParenthesizedExpression", "DEL SimpleName: instanceStateMap", "DEL ParameterizedType: Map<String,LiveInstance>", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL NullLiteral", "DEL SimpleName: idealStateMap", "DEL SimpleName: instanceStateMap", "DEL SimpleName: String", "DEL InfixExpression: ==", "DEL SimpleName: StateModelDefinition", "DEL InfixExpression: ||", "DEL SimpleName: containsKey", "DEL SimpleType: HashMap", "DEL ParameterizedType: Set<String>", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: contains", "DEL SimpleName: idealStateMap", "DEL SimpleName: instance", "DEL SimpleName: currentStateMap", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: liveInstancesMap", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: stateModelDef", "DEL SimpleType: String", "DEL QualifiedName: HelixDefinedState.DROPPED", "DEL ExpressionStatement", "DEL SimpleName: instanceStateMap", "DEL SimpleName: instance", "DEL SimpleType: String", "DEL SimpleName: getLiveInstances", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL TextElement: compute best state for resource in CUSTOMIZED ideal state mode", "DEL SimpleName: put", "DEL SimpleType: String", "DEL SimpleType: String", "DEL InfixExpression: &&", "DEL SimpleName: ClusterDataCache", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: String", "DEL TagElement: @param", "DEL SimpleName: String", "DEL SimpleName: stateModelDef", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: idealStateMap", "DEL SimpleName: String", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleType: ClusterDataCache"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: prefList", "DEL VariableDeclarationStatement", "DEL SimpleName: equals", "DEL SimpleType: List", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: cache", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: List", "DEL SimpleName: Map", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleType: Partition", "DEL SimpleName: String", "DEL SimpleName: getLiveInstances", "DEL ReturnStatement", "DEL SimpleName: size", "DEL InfixExpression: &&", "DEL SimpleName: cache", "DEL SimpleName: get", "DEL SimpleName: idealState", "DEL SimpleName: getPreferenceList", "DEL SimpleName: List", "DEL MethodInvocation", "DEL SimpleType: ClusterDataCache", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: ArrayList", "DEL Block", "DEL SimpleName: liveInstances", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: prefList", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,LiveInstance>", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: prefList", "DEL SimpleName: Partition", "DEL ExpressionStatement", "DEL QualifiedName: StateModelToken.ANY_LIVEINSTANCE", "DEL InfixExpression: &&", "DEL SimpleName: idealState", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleType: ArrayList", "DEL MethodInvocation", "DEL SimpleType: IdealState", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleType: String", "DEL SimpleName: LiveInstance", "DEL SimpleType: LiveInstance", "DEL SimpleName: listField", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: liveInstances", "DEL SimpleType: List", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleName: Collections", "DEL SingleVariableDeclaration", "DEL SimpleName: getPreferenceList", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: listField", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: listField", "DEL SimpleName: toString", "DEL SimpleName: listField", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: stateModelDef", "DEL SimpleName: listField", "DEL SimpleName: IdealState", "DEL SimpleType: Map", "DEL ParameterizedType: List<String>", "DEL SimpleName: List", "DEL Block", "DEL ParameterizedType: List<String>", "DEL SimpleName: String", "DEL SimpleName: keySet", "DEL SimpleName: resource", "DEL SimpleName: String", "DEL SimpleType: List", "DEL InfixExpression: !=", "DEL SimpleName: resource", "DEL SimpleName: sort", "DEL SimpleName: getPartitionName", "DEL SimpleType: String", "DEL Block", "DEL Modifier: private", "DEL SimpleName: ClusterDataCache", "DEL ParameterizedType: List<String>"]}]}}, {"BestPossibleStateCalcStage_diff": {"operations": ["Move ImportDeclaration(31) into CompilationUnit(415) at 8", "Move ImportDeclaration(33) into CompilationUnit(415) at 9", "Move ImportDeclaration(35) into CompilationUnit(415) at 24", "Move ImportDeclaration(39) into CompilationUnit(415) at 24", "Update QualifiedName: org.apache.helix.HelixConstants(20) to org.apache.helix.controller.rebalancer.AutoRebalancer", "Update QualifiedName: org.apache.helix.HelixDefinedState(22) to org.apache.helix.controller.rebalancer.CustomRebalancer", "Update QualifiedName: org.apache.helix.HelixManager(24) to org.apache.helix.controller.rebalancer.Rebalancer", "Update QualifiedName: org.apache.helix.ZNRecord(26) to org.apache.helix.controller.rebalancer.SemiAutoRebalancer", "Update QualifiedName: org.apache.helix.model.CurrentState(34) to org.apache.helix.model.IdealState.IdealStateProperty", "Update QualifiedName: org.apache.helix.model.LiveInstance(38) to org.apache.helix.util.HelixUtil", "Insert MethodDeclaration(413) into TypeDeclaration: class(414) at 6", "Move Modifier: private(192) into MethodDeclaration(413) at 0", "Move SimpleType: BestPossibleStateOutput(194) into MethodDeclaration(413) at 1", "Move SimpleName: compute(195) into MethodDeclaration(413) at 2", "Move SingleVariableDeclaration(199) into MethodDeclaration(413) at 3", "Move SingleVariableDeclaration(208) into MethodDeclaration(413) at 4", "Move SingleVariableDeclaration(212) into MethodDeclaration(413) at 5", "Insert Block(412) into MethodDeclaration(413) at 6", "Move VariableDeclarationStatement(221) into Block(412) at 0", "Move VariableDeclarationStatement(238) into Block(412) at 1", "Insert EnhancedForStatement(409) into Block(412) at 2", "Move ReturnStatement(449) into Block(412) at 3", "Move SingleVariableDeclaration(242) into EnhancedForStatement(409) at 0", "Move MethodInvocation(245) into EnhancedForStatement(409) at 1", "Insert Block(408) into EnhancedForStatement(409) at 2", "Move ExpressionStatement(252) into Block(408) at 0", "Move VariableDeclarationStatement(261) into Block(408) at 1", "Move VariableDeclarationStatement(270) into Block(408) at 2", "Move IfStatement(309) into Block(408) at 3", "Move VariableDeclarationStatement(230) into Block(408) at 4", "Insert IfStatement(327) into Block(408) at 5", "Insert IfStatement(365) into Block(408) at 6", "Insert VariableDeclarationStatement(377) into Block(408) at 7", "Move EnhancedForStatement(2049) into Block(408) at 8", "Update SimpleType: HelixManager(223) to Rebalancer", "Insert MethodInvocation(277) into IfStatement(327) at 0", "Insert Block(326) into IfStatement(327) at 1", "Insert InfixExpression: ==(330) into IfStatement(365) at 0", "Insert Block(364) into IfStatement(365) at 1", "Insert SimpleType: ResourceMapping(367) into VariableDeclarationStatement(377) at 0", "Insert VariableDeclarationFragment(376) into VariableDeclarationStatement(377) at 1", "Move SingleVariableDeclaration(336) into EnhancedForStatement(407) at 0", "Move MethodInvocation(339) into EnhancedForStatement(407) at 1", "Update SimpleName: HelixManager(222) to Rebalancer", "Update SimpleName: manager(224) to rebalancer", "Insert NullLiteral(265) into VariableDeclarationFragment(266) at 1", "Move MethodInvocation(662) into MethodInvocation(277) at 0", "Update SimpleName: cache(371) to containsKey", "Move SimpleName: cache(371) into MethodInvocation(277) at 1", "Move MethodInvocation(375) into MethodInvocation(277) at 2", "Move VariableDeclarationStatement(497) into Block(326) at 0", "Move ExpressionStatement(568) into Block(326) at 1", "Move TryStatement(602) into Block(326) at 2", "Insert SimpleName: rebalancer(328) into InfixExpression: ==(330) at 0", "Move NullLiteral(1553) into InfixExpression: ==(330) at 1", "Move IfStatement(1720) into Block(364) at 0", "Update SimpleName: Map(1842) to ResourceMapping", "Move SimpleName: Map(1842) into SimpleType: ResourceMapping(367) at 0", "Insert SimpleName: partitionStateAssignment(368) into VariableDeclarationFragment(376) at 0", "Insert MethodInvocation(375) into VariableDeclarationFragment(376) at 1", "Move ExpressionStatement(2045) into Block(406) at 1", "Update SimpleName: setListFields(660) to getSimpleFields", "Insert QualifiedName: IdealStateProperty.REBALANCER_CLASS_NAME(274) into MethodInvocation(276) at 0", "Move SimpleType: String(272) into VariableDeclarationStatement(285) at 0", "Move InfixExpression: ==(323) into IfStatement(363) at 0", "Insert SimpleName: rebalancer(369) into MethodInvocation(375) at 0", "Insert SimpleName: computeBestPossiblePartitionState(370) into MethodInvocation(375) at 1", "Insert SimpleName: cache(371) into MethodInvocation(375) at 2", "Insert SimpleName: idealState(372) into MethodInvocation(375) at 3", "Insert SimpleName: resource(373) into MethodInvocation(375) at 4", "Update SimpleName: currentStateMap(1908) to currentStateOutput", "Move SimpleName: currentStateMap(1908) into MethodInvocation(375) at 5", "Move ParameterizedType: Map<String,String>(390) into VariableDeclarationStatement(398) at 0", "Update SimpleName: topStateValue(489) to rebalancerClassName", "Move InfixExpression: ==(383) into IfStatement(362) at 0", "Insert Block(361) into IfStatement(362) at 2", "Insert SimpleName: newStateMap(392) into VariableDeclarationFragment(397) at 0", "Insert MethodInvocation(396) into VariableDeclarationFragment(397) at 1", "Update SimpleName: put(2038) to output", "Update SimpleName: instance(2039) to setState", "Update SimpleName: idealStateMap(2040) to resourceName", "Move SimpleName: idealStateMap(2040) into MethodInvocation(404) at 3", "Update SimpleName: get(2041) to partition", "Move SimpleName: get(2041) into MethodInvocation(404) at 4", "Update SimpleName: instance(2042) to newStateMap", "Move SimpleName: instance(2042) into MethodInvocation(404) at 5", "Update SimpleName: getStatesPriorityList(491) to idealState", "Move SimpleName: getStatesPriorityList(491) into MethodInvocation(283) at 0", "Update SimpleName: get(493) to getRebalancerClassName", "Update StringLiteral: \"found the following instances with tag \"(560) to \"resource \"", "Insert SimpleName: resourceName(289) into InfixExpression: +(292) at 1", "Update StringLiteral: \" \"(564) to \" use idealStateRebalancer \"", "Update SimpleName: taggedInstances(565) to rebalancerClassName", "Update QualifiedName: IdealStateModeProperty.CUSTOMIZED(382) to IdealStateModeProperty.AUTO", "Move ExpressionStatement(1700) into Block(361) at 0", "Update SimpleName: currentStateMap(2013) to partitionStateAssignment", "Move SimpleName: currentStateMap(2013) into MethodInvocation(396) at 0", "Update SimpleName: instance(2015) to getInstanceStateMap", "Move SimpleName: instance(2015) into MethodInvocation(396) at 1", "Update SimpleName: equals(2017) to partition", "Move SimpleName: equals(2017) into MethodInvocation(396) at 2", "Update SimpleName: replicas(580) to rebalancer", "Insert CastExpression(307) into Assignment: =(308) at 1", "Update SimpleName: stateCount(1676) to rebalancer", "Insert ClassInstanceCreation(339) into Assignment: =(340) at 1", "Insert SimpleType: Rebalancer(297) into CastExpression(307) at 0", "Insert ParenthesizedExpression(306) into CastExpression(307) at 1", "Update SimpleName: error(595) to warn", "Insert InfixExpression: +(319) into MethodInvocation(321) at 2", "Insert SimpleType: AutoRebalancer(338) into ClassInstanceCreation(339) at 0", "Insert SimpleName: rebalancer(348) into Assignment: =(352) at 0", "Insert ClassInstanceCreation(351) into Assignment: =(352) at 1", "Insert SimpleName: rebalancer(355) into Assignment: =(359) at 0", "Insert ClassInstanceCreation(358) into Assignment: =(359) at 1", "Insert SimpleName: Rebalancer(296) into SimpleType: Rebalancer(297) at 0", "Insert MethodInvocation(305) into ParenthesizedExpression(306) at 0", "Insert StringLiteral: \"Exception while invoking custom rebalancer class:\"(317) into InfixExpression: +(319) at 0", "Insert SimpleName: rebalancerClassName(318) into InfixExpression: +(319) at 1", "Insert SimpleName: AutoRebalancer(337) into SimpleType: AutoRebalancer(338) at 0", "Insert SimpleType: SemiAutoRebalancer(350) into ClassInstanceCreation(351) at 0", "Insert SimpleType: CustomRebalancer(357) into ClassInstanceCreation(358) at 0", "Insert MethodInvocation(303) into MethodInvocation(305) at 0", "Insert SimpleName: newInstance(304) into MethodInvocation(305) at 1", "Insert SimpleName: SemiAutoRebalancer(349) into SimpleType: SemiAutoRebalancer(350) at 0", "Insert SimpleName: CustomRebalancer(356) into SimpleType: CustomRebalancer(357) at 0", "Update SimpleName: Integer(581) to HelixUtil", "Move SimpleName: Integer(581) into MethodInvocation(303) at 0", "Update SimpleName: parseInt(582) to loadClass", "Move SimpleName: parseInt(582) into MethodInvocation(303) at 1", "Move MethodInvocation(585) into MethodInvocation(303) at 2", "Insert SimpleName: rebalancerClassName(302) into MethodInvocation(303) at 3", "Update SimpleName: getReplicas(584) to getClass", "Delete QualifiedName: java.util.ArrayList(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Arrays(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.Collections(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.HashMap(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.HashSet(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: java.util.List(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: java.util.Set(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.util.TreeMap(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.helix.HelixConstants.StateModelToken(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.helix.model.StateModelDefinition(44)", "Delete ImportDeclaration(45)", "Delete SimpleName: stateModelDefName(287)", "Delete SimpleName: currentStateOutput(288)", "Delete SimpleName: getResourceStateModelDef(289)", "Delete SimpleName: resourceName(290)", "Delete MethodInvocation(291)", "Delete Assignment: =(292)", "Delete ExpressionStatement(293)", "Delete SimpleName: stateModelDefName(302)", "Delete SimpleName: idealState(303)", "Delete SimpleName: getStateModelDefRef(304)", "Delete MethodInvocation(305)", "Delete Assignment: =(306)", "Delete ExpressionStatement(307)", "Delete Block(308)", "Delete SimpleName: event(225)", "Delete SimpleName: getAttribute(226)", "Delete StringLiteral: \"helixmanager\"(227)", "Delete MethodInvocation(228)", "Delete SimpleName: defaultListFields(661)", "Delete SimpleName: partition(373)", "Delete SimpleName: String(487)", "Delete SimpleType: String(488)", "Delete SimpleName: stateModelDef(490)", "Delete MethodInvocation(492)", "Delete NumberLiteral: 0(494)", "Delete SimpleName: idealState(561)", "Delete SimpleName: getResourceName(562)", "Delete MethodInvocation(563)", "Delete SimpleName: idealState(583)", "Delete MethodInvocation(586)", "Delete StringLiteral: \"\"(596)", "Delete StringLiteral: \"N\"(1650)", "Delete SimpleName: equals(1651)", "Delete SimpleName: num(1652)", "Delete MethodInvocation(1653)", "Delete SimpleName: Set(1654)", "Delete SimpleType: Set(1655)", "Delete SimpleName: String(1656)", "Delete SimpleType: String(1657)", "Delete ParameterizedType: Set<String>(1658)", "Delete SimpleName: liveAndEnabled(1659)", "Delete SimpleName: HashSet(1660)", "Delete SimpleType: HashSet(1661)", "Delete SimpleName: String(1662)", "Delete SimpleType: String(1663)", "Delete ParameterizedType: HashSet<String>(1664)", "Delete SimpleName: liveInstancesMap(1665)", "Delete SimpleName: keySet(1666)", "Delete MethodInvocation(1667)", "Delete ClassInstanceCreation(1668)", "Delete VariableDeclarationFragment(1669)", "Delete VariableDeclarationStatement(1670)", "Delete SimpleName: liveAndEnabled(1671)", "Delete SimpleName: removeAll(1672)", "Delete SimpleName: disabledInstancesForPartition(1673)", "Delete MethodInvocation(1674)", "Delete ExpressionStatement(1675)", "Delete SimpleName: liveAndEnabled(1677)", "Delete SimpleName: size(1678)", "Delete MethodInvocation(1679)", "Delete StringLiteral: \"R\"(1683)", "Delete SimpleName: equals(1684)", "Delete SimpleName: num(1685)", "Delete MethodInvocation(1686)", "Delete SimpleName: stateCount(1687)", "Delete SimpleName: instancePreferenceList(1688)", "Delete SimpleName: size(1689)", "Delete MethodInvocation(1690)", "Delete SimpleName: stateCount(1694)", "Delete SimpleName: Integer(1695)", "Delete SimpleName: parseInt(1696)", "Delete SimpleName: num(1697)", "Delete MethodInvocation(1698)", "Delete Block(1701)", "Delete SimpleName: Exception(1702)", "Delete SimpleType: Exception(1703)", "Delete SimpleName: e(1704)", "Delete SingleVariableDeclaration(1705)", "Delete SimpleName: logger(1706)", "Delete SimpleName: error(1707)", "Delete StringLiteral: \"Invalid count for state:\"(1708)", "Delete SimpleName: state(1709)", "Delete StringLiteral: \" ,count=\"(1710)", "Delete SimpleName: num(1711)", "Delete InfixExpression: +(1712)", "Delete MethodInvocation(1713)", "Delete ExpressionStatement(1714)", "Delete Block(1715)", "Delete CatchClause(1716)", "Delete TryStatement(1717)", "Delete Block(1718)", "Delete SimpleName: String(1994)", "Delete SimpleType: String(1995)", "Delete SimpleName: instance(1996)", "Delete SingleVariableDeclaration(1997)", "Delete SimpleName: idealStateMap(1998)", "Delete SimpleName: keySet(1999)", "Delete MethodInvocation(2000)", "Delete PrimitiveType: boolean(2001)", "Delete SimpleName: notInErrorState(2002)", "Delete SimpleName: currentStateMap(2003)", "Delete NullLiteral(2004)", "Delete InfixExpression: ==(2005)", "Delete SimpleName: currentStateMap(2006)", "Delete SimpleName: get(2007)", "Delete SimpleName: instance(2008)", "Delete MethodInvocation(2009)", "Delete NullLiteral(2010)", "Delete InfixExpression: ==(2011)", "Delete InfixExpression: ||(2012)", "Delete SimpleName: get(2014)", "Delete MethodInvocation(2016)", "Delete QualifiedName: HelixDefinedState.ERROR(2018)", "Delete SimpleName: toString(2019)", "Delete MethodInvocation(2020)", "Delete MethodInvocation(2021)", "Delete PrefixExpression: !(2022)", "Delete InfixExpression: ||(2023)", "Delete SimpleName: instanceStateMap(2037)", "Delete MethodInvocation(2043)", "Delete SimpleName: liveInstancesMap(2026)", "Delete SimpleName: containsKey(2027)", "Delete SimpleName: instance(2028)", "Delete MethodInvocation(2029)", "Delete SimpleName: notInErrorState(2030)", "Delete SimpleName: disabledInstancesForPartition(2031)", "Delete SimpleName: contains(2032)", "Delete SimpleName: instance(2033)", "Delete MethodInvocation(2034)", "Delete PrefixExpression: !(2035)", "Delete InfixExpression: &&(2036)", "Delete Block(2046)", "Delete IfStatement(2047)", "Delete SimpleName: stateModelDefName(273)", "Delete VariableDeclarationFragment(274)", "Delete VariableDeclarationStatement(275)", "Delete SimpleName: StateModelDefinition(310)", "Delete SimpleType: StateModelDefinition(311)", "Delete SimpleName: stateModelDef(312)", "Delete SimpleName: cache(313)", "Delete SimpleName: getStateModelDef(314)", "Delete SimpleName: stateModelDefName(315)", "Delete MethodInvocation(316)", "Delete VariableDeclarationFragment(317)", "Delete VariableDeclarationStatement(318)", "Delete SimpleName: calculateAutoBalancedIdealState(324)", "Delete SimpleName: cache(325)", "Delete SimpleName: idealState(326)", "Delete SimpleName: stateModelDef(327)", "Delete SimpleName: currentStateOutput(328)", "Delete MethodInvocation(329)", "Delete ExpressionStatement(330)", "Delete Block(331)", "Delete IfStatement(332)", "Delete SimpleName: Map(340)", "Delete SimpleType: Map(341)", "Delete SimpleName: String(342)", "Delete SimpleType: String(343)", "Delete SimpleName: String(344)", "Delete SimpleType: String(345)", "Delete ParameterizedType: Map<String,String>(346)", "Delete SimpleName: currentStateMap(347)", "Delete SimpleName: currentStateOutput(348)", "Delete SimpleName: getCurrentStateMap(349)", "Delete SimpleName: resourceName(350)", "Delete SimpleName: partition(351)", "Delete MethodInvocation(352)", "Delete VariableDeclarationFragment(353)", "Delete VariableDeclarationStatement(354)", "Delete SimpleName: Map(355)", "Delete SimpleType: Map(356)", "Delete SimpleName: String(357)", "Delete SimpleType: String(358)", "Delete SimpleName: String(359)", "Delete SimpleType: String(360)", "Delete ParameterizedType: Map<String,String>(361)", "Delete SimpleName: bestStateForPartition(362)", "Delete VariableDeclarationFragment(363)", "Delete VariableDeclarationStatement(364)", "Delete SimpleName: Set(365)", "Delete SimpleType: Set(366)", "Delete SimpleName: String(367)", "Delete SimpleType: String(368)", "Delete ParameterizedType: Set<String>(369)", "Delete SimpleName: disabledInstancesForPartition(370)", "Delete SimpleName: getDisabledInstancesForPartition(372)", "Delete MethodInvocation(376)", "Delete VariableDeclarationFragment(377)", "Delete VariableDeclarationStatement(378)", "Delete SimpleName: idealStateMap(391)", "Delete SimpleName: idealState(392)", "Delete SimpleName: getInstanceStateMap(393)", "Delete SimpleName: partition(394)", "Delete SimpleName: getPartitionName(395)", "Delete MethodInvocation(396)", "Delete MethodInvocation(397)", "Delete VariableDeclarationFragment(398)", "Delete VariableDeclarationStatement(399)", "Delete SimpleName: bestStateForPartition(400)", "Delete SimpleName: computeCustomizedBestStateForPartition(401)", "Delete SimpleName: cache(402)", "Delete SimpleName: stateModelDef(403)", "Delete SimpleName: idealStateMap(404)", "Delete SimpleName: currentStateMap(405)", "Delete SimpleName: disabledInstancesForPartition(406)", "Delete MethodInvocation(407)", "Delete Assignment: =(408)", "Delete ExpressionStatement(409)", "Delete Block(410)", "Delete SimpleName: List(411)", "Delete SimpleType: List(412)", "Delete SimpleName: String(413)", "Delete SimpleType: String(414)", "Delete ParameterizedType: List<String>(415)", "Delete SimpleName: instancePreferenceList(416)", "Delete SimpleName: getPreferenceList(417)", "Delete SimpleName: cache(418)", "Delete SimpleName: partition(419)", "Delete SimpleName: idealState(420)", "Delete SimpleName: stateModelDef(421)", "Delete MethodInvocation(422)", "Delete VariableDeclarationFragment(423)", "Delete VariableDeclarationStatement(424)", "Delete SimpleName: bestStateForPartition(425)", "Delete SimpleName: computeAutoBestStateForPartition(426)", "Delete SimpleName: cache(427)", "Delete SimpleName: stateModelDef(428)", "Delete SimpleName: instancePreferenceList(429)", "Delete SimpleName: currentStateMap(430)", "Delete SimpleName: disabledInstancesForPartition(431)", "Delete MethodInvocation(432)", "Delete Assignment: =(433)", "Delete ExpressionStatement(434)", "Delete Block(435)", "Delete IfStatement(436)", "Delete SimpleName: output(437)", "Delete SimpleName: setState(438)", "Delete SimpleName: resourceName(439)", "Delete SimpleName: partition(440)", "Delete SimpleName: bestStateForPartition(441)", "Delete MethodInvocation(442)", "Delete ExpressionStatement(443)", "Delete Block(444)", "Delete EnhancedForStatement(445)", "Delete Block(446)", "Delete EnhancedForStatement(447)", "Delete Block(450)", "Delete MethodDeclaration(451)", "Delete TextElement: Compute best state for resource in AUTO_REBALANCE ideal state mode. the algorithm(452)", "Delete TextElement: will make sure that the master partition are evenly distributed; Also when instances(453)", "Delete TextElement: are added / removed, the amount of diff in master partitions are minimized(454)", "Delete TagElement(455)", "Delete SimpleName: cache(456)", "Delete TagElement: @param(457)", "Delete SimpleName: idealState(458)", "Delete TagElement: @param(459)", "Delete SimpleName: instancePreferenceList(460)", "Delete TagElement: @param(461)", "Delete SimpleName: stateModelDef(462)", "Delete TagElement: @param(463)", "Delete SimpleName: currentStateOutput(464)", "Delete TagElement: @param(465)", "Delete TagElement: @return(466)", "Delete Javadoc(467)", "Delete Modifier: private(468)", "Delete PrimitiveType: void(469)", "Delete SimpleName: calculateAutoBalancedIdealState(470)", "Delete SimpleName: ClusterDataCache(471)", "Delete SimpleType: ClusterDataCache(472)", "Delete SimpleName: cache(473)", "Delete SingleVariableDeclaration(474)", "Delete SimpleName: IdealState(475)", "Delete SimpleType: IdealState(476)", "Delete SimpleName: idealState(477)", "Delete SingleVariableDeclaration(478)", "Delete SimpleName: StateModelDefinition(479)", "Delete SimpleType: StateModelDefinition(480)", "Delete SimpleName: stateModelDef(481)", "Delete SingleVariableDeclaration(482)", "Delete SimpleName: CurrentStateOutput(483)", "Delete SimpleType: CurrentStateOutput(484)", "Delete SimpleName: currentStateOutput(485)", "Delete SingleVariableDeclaration(486)", "Delete SimpleName: Set(498)", "Delete SimpleType: Set(499)", "Delete SimpleName: String(500)", "Delete SimpleType: String(501)", "Delete ParameterizedType: Set<String>(502)", "Delete SimpleName: liveInstances(503)", "Delete QualifiedName: cache._liveInstanceMap(504)", "Delete SimpleName: keySet(505)", "Delete MethodInvocation(506)", "Delete VariableDeclarationFragment(507)", "Delete VariableDeclarationStatement(508)", "Delete SimpleName: Set(509)", "Delete SimpleType: Set(510)", "Delete SimpleName: String(511)", "Delete SimpleType: String(512)", "Delete ParameterizedType: Set<String>(513)", "Delete SimpleName: taggedInstances(514)", "Delete SimpleName: HashSet(515)", "Delete SimpleType: HashSet(516)", "Delete SimpleName: String(517)", "Delete SimpleType: String(518)", "Delete ParameterizedType: HashSet<String>(519)", "Delete ClassInstanceCreation(520)", "Delete VariableDeclarationFragment(521)", "Delete VariableDeclarationStatement(522)", "Delete SimpleName: idealState(523)", "Delete SimpleName: getInstanceGroupTag(524)", "Delete MethodInvocation(525)", "Delete NullLiteral(526)", "Delete InfixExpression: !=(527)", "Delete SimpleName: String(528)", "Delete SimpleType: String(529)", "Delete SimpleName: instanceName(530)", "Delete SingleVariableDeclaration(531)", "Delete SimpleName: liveInstances(532)", "Delete QualifiedName: cache._instanceConfigMap(533)", "Delete SimpleName: get(534)", "Delete SimpleName: instanceName(535)", "Delete MethodInvocation(536)", "Delete SimpleName: containsTag(537)", "Delete SimpleName: idealState(538)", "Delete SimpleName: getInstanceGroupTag(539)", "Delete MethodInvocation(540)", "Delete MethodInvocation(541)", "Delete SimpleName: taggedInstances(542)", "Delete SimpleName: add(543)", "Delete SimpleName: instanceName(544)", "Delete MethodInvocation(545)", "Delete ExpressionStatement(546)", "Delete Block(547)", "Delete IfStatement(548)", "Delete Block(549)", "Delete EnhancedForStatement(550)", "Delete Block(551)", "Delete IfStatement(552)", "Delete SimpleName: taggedInstances(553)", "Delete SimpleName: size(554)", "Delete MethodInvocation(555)", "Delete NumberLiteral: 0(556)", "Delete InfixExpression: >(557)", "Delete SimpleName: liveInstances(569)", "Delete SimpleName: taggedInstances(570)", "Delete Assignment: =(571)", "Delete ExpressionStatement(572)", "Delete Block(573)", "Delete IfStatement(574)", "Delete PrimitiveType: int(575)", "Delete SimpleName: replicas(576)", "Delete NumberLiteral: 1(577)", "Delete VariableDeclarationFragment(578)", "Delete VariableDeclarationStatement(579)", "Delete SimpleName: Map(603)", "Delete SimpleType: Map(604)", "Delete SimpleName: String(605)", "Delete SimpleType: String(606)", "Delete SimpleName: List(607)", "Delete SimpleType: List(608)", "Delete SimpleName: String(609)", "Delete SimpleType: String(610)", "Delete ParameterizedType: List<String>(611)", "Delete ParameterizedType: Map<String,List<String>>(612)", "Delete SimpleName: defaultListFields(613)", "Delete SimpleName: TreeMap(614)", "Delete SimpleType: TreeMap(615)", "Delete SimpleName: String(616)", "Delete SimpleType: String(617)", "Delete SimpleName: List(618)", "Delete SimpleType: List(619)", "Delete SimpleName: String(620)", "Delete SimpleType: String(621)", "Delete ParameterizedType: List<String>(622)", "Delete ParameterizedType: TreeMap<String,List<String>>(623)", "Delete ClassInstanceCreation(624)", "Delete VariableDeclarationFragment(625)", "Delete VariableDeclarationStatement(626)", "Delete SimpleName: List(627)", "Delete SimpleType: List(628)", "Delete SimpleName: String(629)", "Delete SimpleType: String(630)", "Delete ParameterizedType: List<String>(631)", "Delete SimpleName: emptyList(632)", "Delete SimpleName: ArrayList(633)", "Delete SimpleType: ArrayList(634)", "Delete SimpleName: String(635)", "Delete SimpleType: String(636)", "Delete ParameterizedType: ArrayList<String>(637)", "Delete NumberLiteral: 0(638)", "Delete ClassInstanceCreation(639)", "Delete VariableDeclarationFragment(640)", "Delete VariableDeclarationStatement(641)", "Delete SimpleName: String(642)", "Delete SimpleType: String(643)", "Delete SimpleName: partition(644)", "Delete SingleVariableDeclaration(645)", "Delete SimpleName: idealState(646)", "Delete SimpleName: getPartitionSet(647)", "Delete MethodInvocation(648)", "Delete SimpleName: defaultListFields(649)", "Delete SimpleName: put(650)", "Delete SimpleName: partition(651)", "Delete SimpleName: emptyList(652)", "Delete MethodInvocation(653)", "Delete ExpressionStatement(654)", "Delete Block(655)", "Delete EnhancedForStatement(656)", "Delete ExpressionStatement(663)", "Delete SimpleName: liveInstances(664)", "Delete SimpleName: size(665)", "Delete MethodInvocation(666)", "Delete NumberLiteral: 0(667)", "Delete InfixExpression: ==(668)", "Delete SimpleName: logger(669)", "Delete SimpleName: info(670)", "Delete StringLiteral: \"No live instances, return. Idealstate : \"(671)", "Delete SimpleName: idealState(672)", "Delete SimpleName: getResourceName(673)", "Delete MethodInvocation(674)", "Delete InfixExpression: +(675)", "Delete MethodInvocation(676)", "Delete ExpressionStatement(677)", "Delete ReturnStatement(678)", "Delete Block(679)", "Delete IfStatement(680)", "Delete SimpleName: Map(681)", "Delete SimpleType: Map(682)", "Delete SimpleName: String(683)", "Delete SimpleType: String(684)", "Delete SimpleName: List(685)", "Delete SimpleType: List(686)", "Delete SimpleName: String(687)", "Delete SimpleType: String(688)", "Delete ParameterizedType: List<String>(689)", "Delete ParameterizedType: Map<String,List<String>>(690)", "Delete SimpleName: masterAssignmentMap(691)", "Delete SimpleName: HashMap(692)", "Delete SimpleType: HashMap(693)", "Delete SimpleName: String(694)", "Delete SimpleType: String(695)", "Delete SimpleName: List(696)", "Delete SimpleType: List(697)", "Delete SimpleName: String(698)", "Delete SimpleType: String(699)", "Delete ParameterizedType: List<String>(700)", "Delete ParameterizedType: HashMap<String,List<String>>(701)", "Delete ClassInstanceCreation(702)", "Delete VariableDeclarationFragment(703)", "Delete VariableDeclarationStatement(704)", "Delete SimpleName: String(705)", "Delete SimpleType: String(706)", "Delete SimpleName: instanceName(707)", "Delete SingleVariableDeclaration(708)", "Delete SimpleName: liveInstances(709)", "Delete SimpleName: masterAssignmentMap(710)", "Delete SimpleName: put(711)", "Delete SimpleName: instanceName(712)", "Delete SimpleName: ArrayList(713)", "Delete SimpleType: ArrayList(714)", "Delete SimpleName: String(715)", "Delete SimpleType: String(716)", "Delete ParameterizedType: ArrayList<String>(717)", "Delete ClassInstanceCreation(718)", "Delete MethodInvocation(719)", "Delete ExpressionStatement(720)", "Delete Block(721)", "Delete EnhancedForStatement(722)", "Delete SimpleName: Set(723)", "Delete SimpleType: Set(724)", "Delete SimpleName: String(725)", "Delete SimpleType: String(726)", "Delete ParameterizedType: Set<String>(727)", "Delete SimpleName: orphanedPartitions(728)", "Delete SimpleName: HashSet(729)", "Delete SimpleType: HashSet(730)", "Delete SimpleName: String(731)", "Delete SimpleType: String(732)", "Delete ParameterizedType: HashSet<String>(733)", "Delete ClassInstanceCreation(734)", "Delete VariableDeclarationFragment(735)", "Delete VariableDeclarationStatement(736)", "Delete SimpleName: orphanedPartitions(737)", "Delete SimpleName: addAll(738)", "Delete SimpleName: idealState(739)", "Delete SimpleName: getPartitionSet(740)", "Delete MethodInvocation(741)", "Delete MethodInvocation(742)", "Delete ExpressionStatement(743)", "Delete SimpleName: String(744)", "Delete SimpleType: String(745)", "Delete SimpleName: liveInstanceName(746)", "Delete SingleVariableDeclaration(747)", "Delete SimpleName: liveInstances(748)", "Delete SimpleName: CurrentState(749)", "Delete SimpleType: CurrentState(750)", "Delete SimpleName: currentState(751)", "Delete SimpleName: cache(752)", "Delete SimpleName: getCurrentState(753)", "Delete SimpleName: liveInstanceName(754)", "Delete SimpleName: cache(755)", "Delete SimpleName: getLiveInstances(756)", "Delete MethodInvocation(757)", "Delete SimpleName: get(758)", "Delete SimpleName: liveInstanceName(759)", "Delete MethodInvocation(760)", "Delete SimpleName: getSessionId(761)", "Delete MethodInvocation(762)", "Delete MethodInvocation(763)", "Delete SimpleName: get(764)", "Delete SimpleName: idealState(765)", "Delete SimpleName: getId(766)", "Delete MethodInvocation(767)", "Delete MethodInvocation(768)", "Delete VariableDeclarationFragment(769)", "Delete VariableDeclarationStatement(770)", "Delete SimpleName: currentState(771)", "Delete NullLiteral(772)", "Delete InfixExpression: !=(773)", "Delete SimpleName: Map(774)", "Delete SimpleType: Map(775)", "Delete SimpleName: String(776)", "Delete SimpleType: String(777)", "Delete SimpleName: String(778)", "Delete SimpleType: String(779)", "Delete ParameterizedType: Map<String,String>(780)", "Delete SimpleName: partitionStates(781)", "Delete SimpleName: currentState(782)", "Delete SimpleName: getPartitionStateMap(783)", "Delete MethodInvocation(784)", "Delete VariableDeclarationFragment(785)", "Delete VariableDeclarationStatement(786)", "Delete SimpleName: String(787)", "Delete SimpleType: String(788)", "Delete SimpleName: partitionName(789)", "Delete SingleVariableDeclaration(790)", "Delete SimpleName: partitionStates(791)", "Delete SimpleName: keySet(792)", "Delete MethodInvocation(793)", "Delete SimpleName: String(794)", "Delete SimpleType: String(795)", "Delete SimpleName: state(796)", "Delete SimpleName: partitionStates(797)", "Delete SimpleName: get(798)", "Delete SimpleName: partitionName(799)", "Delete MethodInvocation(800)", "Delete VariableDeclarationFragment(801)", "Delete VariableDeclarationStatement(802)", "Delete SimpleName: state(803)", "Delete SimpleName: equals(804)", "Delete SimpleName: topStateValue(805)", "Delete MethodInvocation(806)", "Delete SimpleName: masterAssignmentMap(807)", "Delete SimpleName: get(808)", "Delete SimpleName: liveInstanceName(809)", "Delete MethodInvocation(810)", "Delete SimpleName: add(811)", "Delete SimpleName: partitionName(812)", "Delete MethodInvocation(813)", "Delete ExpressionStatement(814)", "Delete SimpleName: orphanedPartitions(815)", "Delete SimpleName: remove(816)", "Delete SimpleName: partitionName(817)", "Delete MethodInvocation(818)", "Delete ExpressionStatement(819)", "Delete Block(820)", "Delete IfStatement(821)", "Delete Block(822)", "Delete EnhancedForStatement(823)", "Delete Block(824)", "Delete IfStatement(825)", "Delete Block(826)", "Delete EnhancedForStatement(827)", "Delete SimpleName: List(828)", "Delete SimpleType: List(829)", "Delete SimpleName: String(830)", "Delete SimpleType: String(831)", "Delete ParameterizedType: List<String>(832)", "Delete SimpleName: orphanedPartitionsList(833)", "Delete SimpleName: ArrayList(834)", "Delete SimpleType: ArrayList(835)", "Delete SimpleName: String(836)", "Delete SimpleType: String(837)", "Delete ParameterizedType: ArrayList<String>(838)", "Delete ClassInstanceCreation(839)", "Delete VariableDeclarationFragment(840)", "Delete VariableDeclarationStatement(841)", "Delete SimpleName: orphanedPartitionsList(842)", "Delete SimpleName: addAll(843)", "Delete SimpleName: orphanedPartitions(844)", "Delete MethodInvocation(845)", "Delete ExpressionStatement(846)", "Delete PrimitiveType: int(847)", "Delete SimpleName: maxPartitionsPerInstance(848)", "Delete SimpleName: idealState(849)", "Delete SimpleName: getMaxPartitionsPerInstance(850)", "Delete MethodInvocation(851)", "Delete VariableDeclarationFragment(852)", "Delete VariableDeclarationStatement(853)", "Delete SimpleName: normalizeAssignmentMap(854)", "Delete SimpleName: masterAssignmentMap(855)", "Delete SimpleName: orphanedPartitionsList(856)", "Delete SimpleName: maxPartitionsPerInstance(857)", "Delete MethodInvocation(858)", "Delete ExpressionStatement(859)", "Delete SimpleName: idealState(860)", "Delete SimpleName: getRecord(861)", "Delete MethodInvocation(862)", "Delete SimpleName: setListFields(863)", "Delete SimpleName: generateListFieldFromMasterAssignment(864)", "Delete SimpleName: masterAssignmentMap(865)", "Delete SimpleName: replicas(866)", "Delete MethodInvocation(867)", "Delete MethodInvocation(868)", "Delete ExpressionStatement(869)", "Delete Block(870)", "Delete MethodDeclaration(871)", "Delete TextElement: Given the current master assignment map and the partitions not hosted, generate an(872)", "Delete TextElement: evenly distributed partition assignment map(873)", "Delete TagElement(874)", "Delete SimpleName: masterAssignmentMap(875)", "Delete TextElement: current master assignment map(876)", "Delete TagElement: @param(877)", "Delete SimpleName: orphanPartitions(878)", "Delete TextElement: partitions not hosted by any instance(879)", "Delete TagElement: @param(880)", "Delete TagElement: @return(881)", "Delete Javadoc(882)", "Delete Modifier: private(883)", "Delete PrimitiveType: void(884)", "Delete SimpleName: normalizeAssignmentMap(885)", "Delete SimpleName: Map(886)", "Delete SimpleType: Map(887)", "Delete SimpleName: String(888)", "Delete SimpleType: String(889)", "Delete SimpleName: List(890)", "Delete SimpleType: List(891)", "Delete SimpleName: String(892)", "Delete SimpleType: String(893)", "Delete ParameterizedType: List<String>(894)", "Delete ParameterizedType: Map<String,List<String>>(895)", "Delete SimpleName: masterAssignmentMap(896)", "Delete SingleVariableDeclaration(897)", "Delete SimpleName: List(898)", "Delete SimpleType: List(899)", "Delete SimpleName: String(900)", "Delete SimpleType: String(901)", "Delete ParameterizedType: List<String>(902)", "Delete SimpleName: orphanPartitions(903)", "Delete SingleVariableDeclaration(904)", "Delete PrimitiveType: int(905)", "Delete SimpleName: maxPartitionsPerInstance(906)", "Delete SingleVariableDeclaration(907)", "Delete PrimitiveType: int(908)", "Delete SimpleName: totalPartitions(909)", "Delete NumberLiteral: 0(910)", "Delete VariableDeclarationFragment(911)", "Delete VariableDeclarationStatement(912)", "Delete SimpleName: String(913)", "Delete SimpleType: String(914)", "Delete Dimension(915)", "Delete ArrayType: String[](916)", "Delete SimpleName: instanceNames(917)", "Delete SimpleName: String(918)", "Delete SimpleType: String(919)", "Delete Dimension(920)", "Delete ArrayType: String[](921)", "Delete SimpleName: masterAssignmentMap(922)", "Delete SimpleName: size(923)", "Delete MethodInvocation(924)", "Delete ArrayCreation(925)", "Delete VariableDeclarationFragment(926)", "Delete VariableDeclarationStatement(927)", "Delete SimpleName: masterAssignmentMap(928)", "Delete SimpleName: keySet(929)", "Delete MethodInvocation(930)", "Delete SimpleName: toArray(931)", "Delete SimpleName: instanceNames(932)", "Delete MethodInvocation(933)", "Delete ExpressionStatement(934)", "Delete SimpleName: Arrays(935)", "Delete SimpleName: sort(936)", "Delete SimpleName: instanceNames(937)", "Delete MethodInvocation(938)", "Delete ExpressionStatement(939)", "Delete SimpleName: String(940)", "Delete SimpleType: String(941)", "Delete SimpleName: key(942)", "Delete SingleVariableDeclaration(943)", "Delete SimpleName: masterAssignmentMap(944)", "Delete SimpleName: keySet(945)", "Delete MethodInvocation(946)", "Delete SimpleName: totalPartitions(947)", "Delete SimpleName: masterAssignmentMap(948)", "Delete SimpleName: get(949)", "Delete SimpleName: key(950)", "Delete MethodInvocation(951)", "Delete SimpleName: size(952)", "Delete MethodInvocation(953)", "Delete Assignment: +=(954)", "Delete ExpressionStatement(955)", "Delete SimpleName: Collections(956)", "Delete SimpleName: sort(957)", "Delete SimpleName: masterAssignmentMap(958)", "Delete SimpleName: get(959)", "Delete SimpleName: key(960)", "Delete MethodInvocation(961)", "Delete MethodInvocation(962)", "Delete ExpressionStatement(963)", "Delete Block(964)", "Delete EnhancedForStatement(965)", "Delete SimpleName: totalPartitions(966)", "Delete SimpleName: orphanPartitions(967)", "Delete SimpleName: size(968)", "Delete MethodInvocation(969)", "Delete Assignment: +=(970)", "Delete ExpressionStatement(971)", "Delete PrimitiveType: int(972)", "Delete SimpleName: partitionNumber(973)", "Delete SimpleName: totalPartitions(974)", "Delete SimpleName: masterAssignmentMap(975)", "Delete SimpleName: size(976)", "Delete MethodInvocation(977)", "Delete InfixExpression: /(978)", "Delete VariableDeclarationFragment(979)", "Delete VariableDeclarationStatement(980)", "Delete PrimitiveType: int(981)", "Delete SimpleName: leave(982)", "Delete SimpleName: totalPartitions(983)", "Delete SimpleName: masterAssignmentMap(984)", "Delete SimpleName: size(985)", "Delete MethodInvocation(986)", "Delete InfixExpression: %(987)", "Delete VariableDeclarationFragment(988)", "Delete VariableDeclarationStatement(989)", "Delete PrimitiveType: int(990)", "Delete SimpleName: i(991)", "Delete NumberLiteral: 0(992)", "Delete VariableDeclarationFragment(993)", "Delete VariableDeclarationExpression(994)", "Delete SimpleName: i(995)", "Delete QualifiedName: instanceNames.length(996)", "Delete InfixExpression: <(997)", "Delete SimpleName: i(998)", "Delete PostfixExpression: ++(999)", "Delete PrimitiveType: int(1000)", "Delete SimpleName: targetPartitionNo(1001)", "Delete SimpleName: leave(1002)", "Delete NumberLiteral: 0(1003)", "Delete InfixExpression: >(1004)", "Delete SimpleName: partitionNumber(1005)", "Delete NumberLiteral: 1(1006)", "Delete InfixExpression: +(1007)", "Delete ParenthesizedExpression(1008)", "Delete SimpleName: partitionNumber(1009)", "Delete ConditionalExpression(1010)", "Delete VariableDeclarationFragment(1011)", "Delete VariableDeclarationStatement(1012)", "Delete SimpleName: leave(1013)", "Delete PostfixExpression: --(1014)", "Delete ExpressionStatement(1015)", "Delete SimpleName: masterAssignmentMap(1016)", "Delete SimpleName: get(1017)", "Delete SimpleName: instanceNames(1018)", "Delete SimpleName: i(1019)", "Delete ArrayAccess(1020)", "Delete MethodInvocation(1021)", "Delete SimpleName: size(1022)", "Delete MethodInvocation(1023)", "Delete SimpleName: targetPartitionNo(1024)", "Delete InfixExpression: >(1025)", "Delete PrimitiveType: int(1026)", "Delete SimpleName: lastElementIndex(1027)", "Delete SimpleName: masterAssignmentMap(1028)", "Delete SimpleName: get(1029)", "Delete SimpleName: instanceNames(1030)", "Delete SimpleName: i(1031)", "Delete ArrayAccess(1032)", "Delete MethodInvocation(1033)", "Delete SimpleName: size(1034)", "Delete MethodInvocation(1035)", "Delete NumberLiteral: 1(1036)", "Delete InfixExpression: -(1037)", "Delete VariableDeclarationFragment(1038)", "Delete VariableDeclarationStatement(1039)", "Delete SimpleName: orphanPartitions(1040)", "Delete SimpleName: add(1041)", "Delete SimpleName: masterAssignmentMap(1042)", "Delete SimpleName: get(1043)", "Delete SimpleName: instanceNames(1044)", "Delete SimpleName: i(1045)", "Delete ArrayAccess(1046)", "Delete MethodInvocation(1047)", "Delete SimpleName: get(1048)", "Delete SimpleName: lastElementIndex(1049)", "Delete MethodInvocation(1050)", "Delete MethodInvocation(1051)", "Delete ExpressionStatement(1052)", "Delete SimpleName: masterAssignmentMap(1053)", "Delete SimpleName: get(1054)", "Delete SimpleName: instanceNames(1055)", "Delete SimpleName: i(1056)", "Delete ArrayAccess(1057)", "Delete MethodInvocation(1058)", "Delete SimpleName: remove(1059)", "Delete SimpleName: lastElementIndex(1060)", "Delete MethodInvocation(1061)", "Delete ExpressionStatement(1062)", "Delete Block(1063)", "Delete WhileStatement(1064)", "Delete Block(1065)", "Delete ForStatement(1066)", "Delete SimpleName: leave(1067)", "Delete SimpleName: totalPartitions(1068)", "Delete SimpleName: masterAssignmentMap(1069)", "Delete SimpleName: size(1070)", "Delete MethodInvocation(1071)", "Delete InfixExpression: %(1072)", "Delete Assignment: =(1073)", "Delete ExpressionStatement(1074)", "Delete SimpleName: Collections(1075)", "Delete SimpleName: sort(1076)", "Delete SimpleName: orphanPartitions(1077)", "Delete MethodInvocation(1078)", "Delete ExpressionStatement(1079)", "Delete PrimitiveType: int(1080)", "Delete SimpleName: i(1081)", "Delete NumberLiteral: 0(1082)", "Delete VariableDeclarationFragment(1083)", "Delete VariableDeclarationExpression(1084)", "Delete SimpleName: i(1085)", "Delete QualifiedName: instanceNames.length(1086)", "Delete InfixExpression: <(1087)", "Delete SimpleName: i(1088)", "Delete PostfixExpression: ++(1089)", "Delete PrimitiveType: int(1090)", "Delete SimpleName: targetPartitionNo(1091)", "Delete SimpleName: leave(1092)", "Delete NumberLiteral: 0(1093)", "Delete InfixExpression: >(1094)", "Delete SimpleName: partitionNumber(1095)", "Delete NumberLiteral: 1(1096)", "Delete InfixExpression: +(1097)", "Delete ParenthesizedExpression(1098)", "Delete SimpleName: partitionNumber(1099)", "Delete ConditionalExpression(1100)", "Delete VariableDeclarationFragment(1101)", "Delete VariableDeclarationStatement(1102)", "Delete SimpleName: leave(1103)", "Delete PostfixExpression: --(1104)", "Delete ExpressionStatement(1105)", "Delete SimpleName: targetPartitionNo(1106)", "Delete SimpleName: maxPartitionsPerInstance(1107)", "Delete InfixExpression: >(1108)", "Delete SimpleName: targetPartitionNo(1109)", "Delete SimpleName: maxPartitionsPerInstance(1110)", "Delete Assignment: =(1111)", "Delete ExpressionStatement(1112)", "Delete Block(1113)", "Delete IfStatement(1114)", "Delete SimpleName: masterAssignmentMap(1115)", "Delete SimpleName: get(1116)", "Delete SimpleName: instanceNames(1117)", "Delete SimpleName: i(1118)", "Delete ArrayAccess(1119)", "Delete MethodInvocation(1120)", "Delete SimpleName: size(1121)", "Delete MethodInvocation(1122)", "Delete SimpleName: targetPartitionNo(1123)", "Delete InfixExpression: <(1124)", "Delete PrimitiveType: int(1125)", "Delete SimpleName: lastElementIndex(1126)", "Delete SimpleName: orphanPartitions(1127)", "Delete SimpleName: size(1128)", "Delete MethodInvocation(1129)", "Delete NumberLiteral: 1(1130)", "Delete InfixExpression: -(1131)", "Delete VariableDeclarationFragment(1132)", "Delete VariableDeclarationStatement(1133)", "Delete SimpleName: masterAssignmentMap(1134)", "Delete SimpleName: get(1135)", "Delete SimpleName: instanceNames(1136)", "Delete SimpleName: i(1137)", "Delete ArrayAccess(1138)", "Delete MethodInvocation(1139)", "Delete SimpleName: add(1140)", "Delete SimpleName: orphanPartitions(1141)", "Delete SimpleName: get(1142)", "Delete SimpleName: lastElementIndex(1143)", "Delete MethodInvocation(1144)", "Delete MethodInvocation(1145)", "Delete ExpressionStatement(1146)", "Delete SimpleName: orphanPartitions(1147)", "Delete SimpleName: remove(1148)", "Delete SimpleName: lastElementIndex(1149)", "Delete MethodInvocation(1150)", "Delete ExpressionStatement(1151)", "Delete Block(1152)", "Delete WhileStatement(1153)", "Delete Block(1154)", "Delete ForStatement(1155)", "Delete SimpleName: orphanPartitions(1156)", "Delete SimpleName: size(1157)", "Delete MethodInvocation(1158)", "Delete NumberLiteral: 0(1159)", "Delete InfixExpression: >(1160)", "Delete SimpleName: logger(1161)", "Delete SimpleName: warn(1162)", "Delete StringLiteral: \"orphanPartitions still contains elements\"(1163)", "Delete MethodInvocation(1164)", "Delete ExpressionStatement(1165)", "Delete Block(1166)", "Delete IfStatement(1167)", "Delete Block(1168)", "Delete MethodDeclaration(1169)", "Delete TextElement: Generate full preference list from the master assignment map evenly distribute the(1170)", "Delete TextElement: slave partitions mastered on a host to other hosts(1171)", "Delete TagElement(1172)", "Delete SimpleName: masterAssignmentMap(1173)", "Delete TextElement: current master assignment map(1174)", "Delete TagElement: @param(1175)", "Delete SimpleName: orphanPartitions(1176)", "Delete TextElement: partitions not hosted by any instance(1177)", "Delete TagElement: @param(1178)", "Delete TagElement: @return(1179)", "Delete Javadoc(1180)", "Delete SimpleName: Map(1181)", "Delete SimpleType: Map(1182)", "Delete SimpleName: String(1183)", "Delete SimpleType: String(1184)", "Delete SimpleName: List(1185)", "Delete SimpleType: List(1186)", "Delete SimpleName: String(1187)", "Delete SimpleType: String(1188)", "Delete ParameterizedType: List<String>(1189)", "Delete ParameterizedType: Map<String,List<String>>(1190)", "Delete SimpleName: generateListFieldFromMasterAssignment(1191)", "Delete SimpleName: Map(1192)", "Delete SimpleType: Map(1193)", "Delete SimpleName: String(1194)", "Delete SimpleType: String(1195)", "Delete SimpleName: List(1196)", "Delete SimpleType: List(1197)", "Delete SimpleName: String(1198)", "Delete SimpleType: String(1199)", "Delete ParameterizedType: List<String>(1200)", "Delete ParameterizedType: Map<String,List<String>>(1201)", "Delete SimpleName: masterAssignmentMap(1202)", "Delete SingleVariableDeclaration(1203)", "Delete PrimitiveType: int(1204)", "Delete SimpleName: replicas(1205)", "Delete SingleVariableDeclaration(1206)", "Delete SimpleName: Map(1207)", "Delete SimpleType: Map(1208)", "Delete SimpleName: String(1209)", "Delete SimpleType: String(1210)", "Delete SimpleName: List(1211)", "Delete SimpleType: List(1212)", "Delete SimpleName: String(1213)", "Delete SimpleType: String(1214)", "Delete ParameterizedType: List<String>(1215)", "Delete ParameterizedType: Map<String,List<String>>(1216)", "Delete SimpleName: listFields(1217)", "Delete SimpleName: HashMap(1218)", "Delete SimpleType: HashMap(1219)", "Delete SimpleName: String(1220)", "Delete SimpleType: String(1221)", "Delete SimpleName: List(1222)", "Delete SimpleType: List(1223)", "Delete SimpleName: String(1224)", "Delete SimpleType: String(1225)", "Delete ParameterizedType: List<String>(1226)", "Delete ParameterizedType: HashMap<String,List<String>>(1227)", "Delete ClassInstanceCreation(1228)", "Delete VariableDeclarationFragment(1229)", "Delete VariableDeclarationStatement(1230)", "Delete PrimitiveType: int(1231)", "Delete SimpleName: slaves(1232)", "Delete SimpleName: replicas(1233)", "Delete NumberLiteral: 1(1234)", "Delete InfixExpression: -(1235)", "Delete VariableDeclarationFragment(1236)", "Delete VariableDeclarationStatement(1237)", "Delete SimpleName: String(1238)", "Delete SimpleType: String(1239)", "Delete Dimension(1240)", "Delete ArrayType: String[](1241)", "Delete SimpleName: instanceNames(1242)", "Delete SimpleName: String(1243)", "Delete SimpleType: String(1244)", "Delete Dimension(1245)", "Delete ArrayType: String[](1246)", "Delete SimpleName: masterAssignmentMap(1247)", "Delete SimpleName: size(1248)", "Delete MethodInvocation(1249)", "Delete ArrayCreation(1250)", "Delete VariableDeclarationFragment(1251)", "Delete VariableDeclarationStatement(1252)", "Delete SimpleName: masterAssignmentMap(1253)", "Delete SimpleName: keySet(1254)", "Delete MethodInvocation(1255)", "Delete SimpleName: toArray(1256)", "Delete SimpleName: instanceNames(1257)", "Delete MethodInvocation(1258)", "Delete ExpressionStatement(1259)", "Delete SimpleName: Arrays(1260)", "Delete SimpleName: sort(1261)", "Delete SimpleName: instanceNames(1262)", "Delete MethodInvocation(1263)", "Delete ExpressionStatement(1264)", "Delete PrimitiveType: int(1265)", "Delete SimpleName: i(1266)", "Delete NumberLiteral: 0(1267)", "Delete VariableDeclarationFragment(1268)", "Delete VariableDeclarationExpression(1269)", "Delete SimpleName: i(1270)", "Delete QualifiedName: instanceNames.length(1271)", "Delete InfixExpression: <(1272)", "Delete SimpleName: i(1273)", "Delete PostfixExpression: ++(1274)", "Delete SimpleName: String(1275)", "Delete SimpleType: String(1276)", "Delete SimpleName: instanceName(1277)", "Delete SimpleName: instanceNames(1278)", "Delete SimpleName: i(1279)", "Delete ArrayAccess(1280)", "Delete VariableDeclarationFragment(1281)", "Delete VariableDeclarationStatement(1282)", "Delete SimpleName: List(1283)", "Delete SimpleType: List(1284)", "Delete SimpleName: String(1285)", "Delete SimpleType: String(1286)", "Delete ParameterizedType: List<String>(1287)", "Delete SimpleName: otherInstances(1288)", "Delete SimpleName: ArrayList(1289)", "Delete SimpleType: ArrayList(1290)", "Delete SimpleName: String(1291)", "Delete SimpleType: String(1292)", "Delete ParameterizedType: ArrayList<String>(1293)", "Delete SimpleName: masterAssignmentMap(1294)", "Delete SimpleName: size(1295)", "Delete MethodInvocation(1296)", "Delete NumberLiteral: 1(1297)", "Delete InfixExpression: -(1298)", "Delete ClassInstanceCreation(1299)", "Delete VariableDeclarationFragment(1300)", "Delete VariableDeclarationStatement(1301)", "Delete PrimitiveType: int(1302)", "Delete SimpleName: x(1303)", "Delete NumberLiteral: 0(1304)", "Delete VariableDeclarationFragment(1305)", "Delete VariableDeclarationExpression(1306)", "Delete SimpleName: x(1307)", "Delete QualifiedName: instanceNames.length(1308)", "Delete NumberLiteral: 1(1309)", "Delete InfixExpression: -(1310)", "Delete InfixExpression: <(1311)", "Delete SimpleName: x(1312)", "Delete PostfixExpression: ++(1313)", "Delete PrimitiveType: int(1314)", "Delete SimpleName: index(1315)", "Delete SimpleName: x(1316)", "Delete SimpleName: i(1317)", "Delete NumberLiteral: 1(1318)", "Delete InfixExpression: +(1319)", "Delete ParenthesizedExpression(1320)", "Delete QualifiedName: instanceNames.length(1321)", "Delete InfixExpression: %(1322)", "Delete VariableDeclarationFragment(1323)", "Delete VariableDeclarationStatement(1324)", "Delete SimpleName: otherInstances(1325)", "Delete SimpleName: add(1326)", "Delete SimpleName: instanceNames(1327)", "Delete SimpleName: index(1328)", "Delete ArrayAccess(1329)", "Delete MethodInvocation(1330)", "Delete ExpressionStatement(1331)", "Delete Block(1332)", "Delete ForStatement(1333)", "Delete SimpleName: List(1334)", "Delete SimpleType: List(1335)", "Delete SimpleName: String(1336)", "Delete SimpleType: String(1337)", "Delete ParameterizedType: List<String>(1338)", "Delete SimpleName: partitionList(1339)", "Delete SimpleName: masterAssignmentMap(1340)", "Delete SimpleName: get(1341)", "Delete SimpleName: instanceName(1342)", "Delete MethodInvocation(1343)", "Delete VariableDeclarationFragment(1344)", "Delete VariableDeclarationStatement(1345)", "Delete PrimitiveType: int(1346)", "Delete SimpleName: j(1347)", "Delete NumberLiteral: 0(1348)", "Delete VariableDeclarationFragment(1349)", "Delete VariableDeclarationExpression(1350)", "Delete SimpleName: j(1351)", "Delete SimpleName: partitionList(1352)", "Delete SimpleName: size(1353)", "Delete MethodInvocation(1354)", "Delete InfixExpression: <(1355)", "Delete SimpleName: j(1356)", "Delete PostfixExpression: ++(1357)", "Delete SimpleName: String(1358)", "Delete SimpleType: String(1359)", "Delete SimpleName: partitionName(1360)", "Delete SimpleName: partitionList(1361)", "Delete SimpleName: get(1362)", "Delete SimpleName: j(1363)", "Delete MethodInvocation(1364)", "Delete VariableDeclarationFragment(1365)", "Delete VariableDeclarationStatement(1366)", "Delete SimpleName: listFields(1367)", "Delete SimpleName: put(1368)", "Delete SimpleName: partitionName(1369)", "Delete SimpleName: ArrayList(1370)", "Delete SimpleType: ArrayList(1371)", "Delete SimpleName: String(1372)", "Delete SimpleType: String(1373)", "Delete ParameterizedType: ArrayList<String>(1374)", "Delete ClassInstanceCreation(1375)", "Delete MethodInvocation(1376)", "Delete ExpressionStatement(1377)", "Delete SimpleName: listFields(1378)", "Delete SimpleName: get(1379)", "Delete SimpleName: partitionName(1380)", "Delete MethodInvocation(1381)", "Delete SimpleName: add(1382)", "Delete SimpleName: instanceName(1383)", "Delete MethodInvocation(1384)", "Delete ExpressionStatement(1385)", "Delete PrimitiveType: int(1386)", "Delete SimpleName: slavesCanAssign(1387)", "Delete SimpleName: Math(1388)", "Delete SimpleName: min(1389)", "Delete SimpleName: slaves(1390)", "Delete SimpleName: otherInstances(1391)", "Delete SimpleName: size(1392)", "Delete MethodInvocation(1393)", "Delete MethodInvocation(1394)", "Delete VariableDeclarationFragment(1395)", "Delete VariableDeclarationStatement(1396)", "Delete PrimitiveType: int(1397)", "Delete SimpleName: k(1398)", "Delete NumberLiteral: 0(1399)", "Delete VariableDeclarationFragment(1400)", "Delete VariableDeclarationExpression(1401)", "Delete SimpleName: k(1402)", "Delete SimpleName: slavesCanAssign(1403)", "Delete InfixExpression: <(1404)", "Delete SimpleName: k(1405)", "Delete PostfixExpression: ++(1406)", "Delete PrimitiveType: int(1407)", "Delete SimpleName: index(1408)", "Delete SimpleName: j(1409)", "Delete SimpleName: k(1410)", "Delete NumberLiteral: 1(1411)", "Delete InfixExpression: +(1412)", "Delete ParenthesizedExpression(1413)", "Delete SimpleName: otherInstances(1414)", "Delete SimpleName: size(1415)", "Delete MethodInvocation(1416)", "Delete InfixExpression: %(1417)", "Delete VariableDeclarationFragment(1418)", "Delete VariableDeclarationStatement(1419)", "Delete SimpleName: listFields(1420)", "Delete SimpleName: get(1421)", "Delete SimpleName: partitionName(1422)", "Delete MethodInvocation(1423)", "Delete SimpleName: add(1424)", "Delete SimpleName: otherInstances(1425)", "Delete SimpleName: get(1426)", "Delete SimpleName: index(1427)", "Delete MethodInvocation(1428)", "Delete MethodInvocation(1429)", "Delete ExpressionStatement(1430)", "Delete Block(1431)", "Delete ForStatement(1432)", "Delete Block(1433)", "Delete ForStatement(1434)", "Delete Block(1435)", "Delete ForStatement(1436)", "Delete SimpleName: listFields(1437)", "Delete ReturnStatement(1438)", "Delete Block(1439)", "Delete MethodDeclaration(1440)", "Delete TextElement: compute best state for resource in AUTO ideal state mode(1441)", "Delete TagElement(1442)", "Delete SimpleName: cache(1443)", "Delete TagElement: @param(1444)", "Delete SimpleName: stateModelDef(1445)", "Delete TagElement: @param(1446)", "Delete SimpleName: instancePreferenceList(1447)", "Delete TagElement: @param(1448)", "Delete SimpleName: currentStateMap(1449)", "Delete TextElement: : instance->state for each partition(1450)", "Delete TagElement: @param(1451)", "Delete SimpleName: disabledInstancesForPartition(1452)", "Delete TagElement: @param(1453)", "Delete TagElement: @return(1454)", "Delete Javadoc(1455)", "Delete Modifier: private(1456)", "Delete SimpleName: Map(1457)", "Delete SimpleType: Map(1458)", "Delete SimpleName: String(1459)", "Delete SimpleType: String(1460)", "Delete SimpleName: String(1461)", "Delete SimpleType: String(1462)", "Delete ParameterizedType: Map<String,String>(1463)", "Delete SimpleName: computeAutoBestStateForPartition(1464)", "Delete SimpleName: ClusterDataCache(1465)", "Delete SimpleType: ClusterDataCache(1466)", "Delete SimpleName: cache(1467)", "Delete SingleVariableDeclaration(1468)", "Delete SimpleName: StateModelDefinition(1469)", "Delete SimpleType: StateModelDefinition(1470)", "Delete SimpleName: stateModelDef(1471)", "Delete SingleVariableDeclaration(1472)", "Delete SimpleName: List(1473)", "Delete SimpleType: List(1474)", "Delete SimpleName: String(1475)", "Delete SimpleType: String(1476)", "Delete ParameterizedType: List<String>(1477)", "Delete SimpleName: instancePreferenceList(1478)", "Delete SingleVariableDeclaration(1479)", "Delete SimpleName: Map(1480)", "Delete SimpleType: Map(1481)", "Delete SimpleName: String(1482)", "Delete SimpleType: String(1483)", "Delete SimpleName: String(1484)", "Delete SimpleType: String(1485)", "Delete ParameterizedType: Map<String,String>(1486)", "Delete SimpleName: currentStateMap(1487)", "Delete SingleVariableDeclaration(1488)", "Delete SimpleName: Set(1489)", "Delete SimpleType: Set(1490)", "Delete SimpleName: String(1491)", "Delete SimpleType: String(1492)", "Delete ParameterizedType: Set<String>(1493)", "Delete SimpleName: disabledInstancesForPartition(1494)", "Delete SingleVariableDeclaration(1495)", "Delete SimpleName: Map(1496)", "Delete SimpleType: Map(1497)", "Delete SimpleName: String(1498)", "Delete SimpleType: String(1499)", "Delete SimpleName: String(1500)", "Delete SimpleType: String(1501)", "Delete ParameterizedType: Map<String,String>(1502)", "Delete SimpleName: instanceStateMap(1503)", "Delete SimpleName: HashMap(1504)", "Delete SimpleType: HashMap(1505)", "Delete SimpleName: String(1506)", "Delete SimpleType: String(1507)", "Delete SimpleName: String(1508)", "Delete SimpleType: String(1509)", "Delete ParameterizedType: HashMap<String,String>(1510)", "Delete ClassInstanceCreation(1511)", "Delete VariableDeclarationFragment(1512)", "Delete VariableDeclarationStatement(1513)", "Delete SimpleName: currentStateMap(1514)", "Delete NullLiteral(1515)", "Delete InfixExpression: !=(1516)", "Delete SimpleName: String(1517)", "Delete SimpleType: String(1518)", "Delete SimpleName: instance(1519)", "Delete SingleVariableDeclaration(1520)", "Delete SimpleName: currentStateMap(1521)", "Delete SimpleName: keySet(1522)", "Delete MethodInvocation(1523)", "Delete SimpleName: instancePreferenceList(1524)", "Delete NullLiteral(1525)", "Delete InfixExpression: ==(1526)", "Delete SimpleName: instancePreferenceList(1527)", "Delete SimpleName: contains(1528)", "Delete SimpleName: instance(1529)", "Delete MethodInvocation(1530)", "Delete PrefixExpression: !(1531)", "Delete InfixExpression: ||(1532)", "Delete ParenthesizedExpression(1533)", "Delete SimpleName: disabledInstancesForPartition(1534)", "Delete SimpleName: contains(1535)", "Delete SimpleName: instance(1536)", "Delete MethodInvocation(1537)", "Delete PrefixExpression: !(1538)", "Delete InfixExpression: &&(1539)", "Delete SimpleName: instanceStateMap(1540)", "Delete SimpleName: put(1541)", "Delete SimpleName: instance(1542)", "Delete QualifiedName: HelixDefinedState.DROPPED(1543)", "Delete SimpleName: toString(1544)", "Delete MethodInvocation(1545)", "Delete MethodInvocation(1546)", "Delete ExpressionStatement(1547)", "Delete Block(1548)", "Delete SimpleName: currentStateMap(1549)", "Delete SimpleName: get(1550)", "Delete SimpleName: instance(1551)", "Delete MethodInvocation(1552)", "Delete InfixExpression: ==(1554)", "Delete SimpleName: currentStateMap(1555)", "Delete SimpleName: get(1556)", "Delete SimpleName: instance(1557)", "Delete MethodInvocation(1558)", "Delete SimpleName: equals(1559)", "Delete QualifiedName: HelixDefinedState.ERROR(1560)", "Delete SimpleName: toString(1561)", "Delete MethodInvocation(1562)", "Delete MethodInvocation(1563)", "Delete PrefixExpression: !(1564)", "Delete InfixExpression: ||(1565)", "Delete ParenthesizedExpression(1566)", "Delete SimpleName: disabledInstancesForPartition(1567)", "Delete SimpleName: contains(1568)", "Delete SimpleName: instance(1569)", "Delete MethodInvocation(1570)", "Delete InfixExpression: &&(1571)", "Delete SimpleName: instanceStateMap(1572)", "Delete SimpleName: put(1573)", "Delete SimpleName: instance(1574)", "Delete SimpleName: stateModelDef(1575)", "Delete SimpleName: getInitialState(1576)", "Delete MethodInvocation(1577)", "Delete MethodInvocation(1578)", "Delete ExpressionStatement(1579)", "Delete Block(1580)", "Delete IfStatement(1581)", "Delete IfStatement(1582)", "Delete Block(1583)", "Delete EnhancedForStatement(1584)", "Delete Block(1585)", "Delete IfStatement(1586)", "Delete SimpleName: instancePreferenceList(1587)", "Delete NullLiteral(1588)", "Delete InfixExpression: ==(1589)", "Delete SimpleName: instanceStateMap(1590)", "Delete ReturnStatement(1591)", "Delete Block(1592)", "Delete IfStatement(1593)", "Delete SimpleName: List(1594)", "Delete SimpleType: List(1595)", "Delete SimpleName: String(1596)", "Delete SimpleType: String(1597)", "Delete ParameterizedType: List<String>(1598)", "Delete SimpleName: statesPriorityList(1599)", "Delete SimpleName: stateModelDef(1600)", "Delete SimpleName: getStatesPriorityList(1601)", "Delete MethodInvocation(1602)", "Delete VariableDeclarationFragment(1603)", "Delete VariableDeclarationStatement(1604)", "Delete PrimitiveType: boolean(1605)", "Delete SimpleName: assigned(1606)", "Delete Dimension(1607)", "Delete PrimitiveType: boolean(1608)", "Delete Dimension(1609)", "Delete ArrayType: boolean[](1610)", "Delete SimpleName: instancePreferenceList(1611)", "Delete SimpleName: size(1612)", "Delete MethodInvocation(1613)", "Delete ArrayCreation(1614)", "Delete VariableDeclarationFragment(1615)", "Delete VariableDeclarationStatement(1616)", "Delete SimpleName: Map(1617)", "Delete SimpleType: Map(1618)", "Delete SimpleName: String(1619)", "Delete SimpleType: String(1620)", "Delete SimpleName: LiveInstance(1621)", "Delete SimpleType: LiveInstance(1622)", "Delete ParameterizedType: Map<String,LiveInstance>(1623)", "Delete SimpleName: liveInstancesMap(1624)", "Delete SimpleName: cache(1625)", "Delete SimpleName: getLiveInstances(1626)", "Delete MethodInvocation(1627)", "Delete VariableDeclarationFragment(1628)", "Delete VariableDeclarationStatement(1629)", "Delete SimpleName: String(1630)", "Delete SimpleType: String(1631)", "Delete SimpleName: state(1632)", "Delete SingleVariableDeclaration(1633)", "Delete SimpleName: statesPriorityList(1634)", "Delete SimpleName: String(1635)", "Delete SimpleType: String(1636)", "Delete SimpleName: num(1637)", "Delete SimpleName: stateModelDef(1638)", "Delete SimpleName: getNumInstancesPerState(1639)", "Delete SimpleName: state(1640)", "Delete MethodInvocation(1641)", "Delete VariableDeclarationFragment(1642)", "Delete VariableDeclarationStatement(1643)", "Delete PrimitiveType: int(1644)", "Delete SimpleName: stateCount(1645)", "Delete NumberLiteral: 1(1646)", "Delete PrefixExpression: -(1647)", "Delete VariableDeclarationFragment(1648)", "Delete VariableDeclarationStatement(1649)", "Delete SimpleName: stateCount(1721)", "Delete NumberLiteral: 1(1722)", "Delete PrefixExpression: -(1723)", "Delete InfixExpression: >(1724)", "Delete PrimitiveType: int(1725)", "Delete SimpleName: count(1726)", "Delete NumberLiteral: 0(1727)", "Delete VariableDeclarationFragment(1728)", "Delete VariableDeclarationStatement(1729)", "Delete PrimitiveType: int(1730)", "Delete SimpleName: i(1731)", "Delete NumberLiteral: 0(1732)", "Delete VariableDeclarationFragment(1733)", "Delete VariableDeclarationExpression(1734)", "Delete SimpleName: i(1735)", "Delete SimpleName: instancePreferenceList(1736)", "Delete SimpleName: size(1737)", "Delete MethodInvocation(1738)", "Delete InfixExpression: <(1739)", "Delete SimpleName: i(1740)", "Delete PostfixExpression: ++(1741)", "Delete SimpleName: String(1742)", "Delete SimpleType: String(1743)", "Delete SimpleName: instanceName(1744)", "Delete SimpleName: instancePreferenceList(1745)", "Delete SimpleName: get(1746)", "Delete SimpleName: i(1747)", "Delete MethodInvocation(1748)", "Delete VariableDeclarationFragment(1749)", "Delete VariableDeclarationStatement(1750)", "Delete PrimitiveType: boolean(1751)", "Delete SimpleName: notInErrorState(1752)", "Delete SimpleName: currentStateMap(1753)", "Delete NullLiteral(1754)", "Delete InfixExpression: ==(1755)", "Delete SimpleName: currentStateMap(1756)", "Delete SimpleName: get(1757)", "Delete SimpleName: instanceName(1758)", "Delete MethodInvocation(1759)", "Delete NullLiteral(1760)", "Delete InfixExpression: ==(1761)", "Delete InfixExpression: ||(1762)", "Delete SimpleName: currentStateMap(1763)", "Delete SimpleName: get(1764)", "Delete SimpleName: instanceName(1765)", "Delete MethodInvocation(1766)", "Delete SimpleName: equals(1767)", "Delete QualifiedName: HelixDefinedState.ERROR(1768)", "Delete SimpleName: toString(1769)", "Delete MethodInvocation(1770)", "Delete MethodInvocation(1771)", "Delete PrefixExpression: !(1772)", "Delete InfixExpression: ||(1773)", "Delete VariableDeclarationFragment(1774)", "Delete VariableDeclarationStatement(1775)", "Delete SimpleName: liveInstancesMap(1776)", "Delete SimpleName: containsKey(1777)", "Delete SimpleName: instanceName(1778)", "Delete MethodInvocation(1779)", "Delete SimpleName: assigned(1780)", "Delete SimpleName: i(1781)", "Delete ArrayAccess(1782)", "Delete PrefixExpression: !(1783)", "Delete SimpleName: notInErrorState(1784)", "Delete SimpleName: disabledInstancesForPartition(1785)", "Delete SimpleName: contains(1786)", "Delete SimpleName: instanceName(1787)", "Delete MethodInvocation(1788)", "Delete PrefixExpression: !(1789)", "Delete InfixExpression: &&(1790)", "Delete SimpleName: instanceStateMap(1791)", "Delete SimpleName: put(1792)", "Delete SimpleName: instanceName(1793)", "Delete SimpleName: state(1794)", "Delete MethodInvocation(1795)", "Delete ExpressionStatement(1796)", "Delete SimpleName: count(1797)", "Delete SimpleName: count(1798)", "Delete NumberLiteral: 1(1799)", "Delete InfixExpression: +(1800)", "Delete Assignment: =(1801)", "Delete ExpressionStatement(1802)", "Delete SimpleName: assigned(1803)", "Delete SimpleName: i(1804)", "Delete ArrayAccess(1805)", "Delete BooleanLiteral: true(1806)", "Delete Assignment: =(1807)", "Delete ExpressionStatement(1808)", "Delete SimpleName: count(1809)", "Delete SimpleName: stateCount(1810)", "Delete InfixExpression: ==(1811)", "Delete BreakStatement(1812)", "Delete Block(1813)", "Delete IfStatement(1814)", "Delete Block(1815)", "Delete IfStatement(1816)", "Delete Block(1817)", "Delete ForStatement(1818)", "Delete Block(1819)", "Delete IfStatement(1820)", "Delete Block(1821)", "Delete EnhancedForStatement(1822)", "Delete SimpleName: instanceStateMap(1823)", "Delete ReturnStatement(1824)", "Delete Block(1825)", "Delete MethodDeclaration(1826)", "Delete TextElement: compute best state for resource in CUSTOMIZED ideal state mode(1827)", "Delete TagElement(1828)", "Delete SimpleName: cache(1829)", "Delete TagElement: @param(1830)", "Delete SimpleName: stateModelDef(1831)", "Delete TagElement: @param(1832)", "Delete SimpleName: idealStateMap(1833)", "Delete TagElement: @param(1834)", "Delete SimpleName: currentStateMap(1835)", "Delete TagElement: @param(1836)", "Delete SimpleName: disabledInstancesForPartition(1837)", "Delete TagElement: @param(1838)", "Delete TagElement: @return(1839)", "Delete Javadoc(1840)", "Delete Modifier: private(1841)", "Delete SimpleType: Map(1843)", "Delete SimpleName: String(1844)", "Delete SimpleType: String(1845)", "Delete SimpleName: String(1846)", "Delete SimpleType: String(1847)", "Delete ParameterizedType: Map<String,String>(1848)", "Delete SimpleName: computeCustomizedBestStateForPartition(1849)", "Delete SimpleName: ClusterDataCache(1850)", "Delete SimpleType: ClusterDataCache(1851)", "Delete SimpleName: cache(1852)", "Delete SingleVariableDeclaration(1853)", "Delete SimpleName: StateModelDefinition(1854)", "Delete SimpleType: StateModelDefinition(1855)", "Delete SimpleName: stateModelDef(1856)", "Delete SingleVariableDeclaration(1857)", "Delete SimpleName: Map(1858)", "Delete SimpleType: Map(1859)", "Delete SimpleName: String(1860)", "Delete SimpleType: String(1861)", "Delete SimpleName: String(1862)", "Delete SimpleType: String(1863)", "Delete ParameterizedType: Map<String,String>(1864)", "Delete SimpleName: idealStateMap(1865)", "Delete SingleVariableDeclaration(1866)", "Delete SimpleName: Map(1867)", "Delete SimpleType: Map(1868)", "Delete SimpleName: String(1869)", "Delete SimpleType: String(1870)", "Delete SimpleName: String(1871)", "Delete SimpleType: String(1872)", "Delete ParameterizedType: Map<String,String>(1873)", "Delete SimpleName: currentStateMap(1874)", "Delete SingleVariableDeclaration(1875)", "Delete SimpleName: Set(1876)", "Delete SimpleType: Set(1877)", "Delete SimpleName: String(1878)", "Delete SimpleType: String(1879)", "Delete ParameterizedType: Set<String>(1880)", "Delete SimpleName: disabledInstancesForPartition(1881)", "Delete SingleVariableDeclaration(1882)", "Delete SimpleName: Map(1883)", "Delete SimpleType: Map(1884)", "Delete SimpleName: String(1885)", "Delete SimpleType: String(1886)", "Delete SimpleName: String(1887)", "Delete SimpleType: String(1888)", "Delete ParameterizedType: Map<String,String>(1889)", "Delete SimpleName: instanceStateMap(1890)", "Delete SimpleName: HashMap(1891)", "Delete SimpleType: HashMap(1892)", "Delete SimpleName: String(1893)", "Delete SimpleType: String(1894)", "Delete SimpleName: String(1895)", "Delete SimpleType: String(1896)", "Delete ParameterizedType: HashMap<String,String>(1897)", "Delete ClassInstanceCreation(1898)", "Delete VariableDeclarationFragment(1899)", "Delete VariableDeclarationStatement(1900)", "Delete SimpleName: currentStateMap(1901)", "Delete NullLiteral(1902)", "Delete InfixExpression: !=(1903)", "Delete SimpleName: String(1904)", "Delete SimpleType: String(1905)", "Delete SimpleName: instance(1906)", "Delete SingleVariableDeclaration(1907)", "Delete SimpleName: keySet(1909)", "Delete MethodInvocation(1910)", "Delete SimpleName: idealStateMap(1911)", "Delete NullLiteral(1912)", "Delete InfixExpression: ==(1913)", "Delete SimpleName: idealStateMap(1914)", "Delete SimpleName: containsKey(1915)", "Delete SimpleName: instance(1916)", "Delete MethodInvocation(1917)", "Delete PrefixExpression: !(1918)", "Delete InfixExpression: ||(1919)", "Delete ParenthesizedExpression(1920)", "Delete SimpleName: disabledInstancesForPartition(1921)", "Delete SimpleName: contains(1922)", "Delete SimpleName: instance(1923)", "Delete MethodInvocation(1924)", "Delete PrefixExpression: !(1925)", "Delete InfixExpression: &&(1926)", "Delete SimpleName: instanceStateMap(1927)", "Delete SimpleName: put(1928)", "Delete SimpleName: instance(1929)", "Delete QualifiedName: HelixDefinedState.DROPPED(1930)", "Delete SimpleName: toString(1931)", "Delete MethodInvocation(1932)", "Delete MethodInvocation(1933)", "Delete ExpressionStatement(1934)", "Delete Block(1935)", "Delete SimpleName: currentStateMap(1936)", "Delete SimpleName: get(1937)", "Delete SimpleName: instance(1938)", "Delete MethodInvocation(1939)", "Delete NullLiteral(1940)", "Delete InfixExpression: ==(1941)", "Delete SimpleName: currentStateMap(1942)", "Delete SimpleName: get(1943)", "Delete SimpleName: instance(1944)", "Delete MethodInvocation(1945)", "Delete SimpleName: equals(1946)", "Delete QualifiedName: HelixDefinedState.ERROR(1947)", "Delete SimpleName: toString(1948)", "Delete MethodInvocation(1949)", "Delete MethodInvocation(1950)", "Delete PrefixExpression: !(1951)", "Delete InfixExpression: ||(1952)", "Delete ParenthesizedExpression(1953)", "Delete SimpleName: disabledInstancesForPartition(1954)", "Delete SimpleName: contains(1955)", "Delete SimpleName: instance(1956)", "Delete MethodInvocation(1957)", "Delete InfixExpression: &&(1958)", "Delete SimpleName: instanceStateMap(1959)", "Delete SimpleName: put(1960)", "Delete SimpleName: instance(1961)", "Delete SimpleName: stateModelDef(1962)", "Delete SimpleName: getInitialState(1963)", "Delete MethodInvocation(1964)", "Delete MethodInvocation(1965)", "Delete ExpressionStatement(1966)", "Delete Block(1967)", "Delete IfStatement(1968)", "Delete IfStatement(1969)", "Delete Block(1970)", "Delete EnhancedForStatement(1971)", "Delete Block(1972)", "Delete IfStatement(1973)", "Delete SimpleName: idealStateMap(1974)", "Delete NullLiteral(1975)", "Delete InfixExpression: ==(1976)", "Delete SimpleName: instanceStateMap(1977)", "Delete ReturnStatement(1978)", "Delete Block(1979)", "Delete IfStatement(1980)", "Delete SimpleName: Map(1981)", "Delete SimpleType: Map(1982)", "Delete SimpleName: String(1983)", "Delete SimpleType: String(1984)", "Delete SimpleName: LiveInstance(1985)", "Delete SimpleType: LiveInstance(1986)", "Delete ParameterizedType: Map<String,LiveInstance>(1987)", "Delete SimpleName: liveInstancesMap(1988)", "Delete SimpleName: cache(1989)", "Delete SimpleName: getLiveInstances(1990)", "Delete MethodInvocation(1991)", "Delete VariableDeclarationFragment(1992)", "Delete VariableDeclarationStatement(1993)", "Delete SimpleName: instanceStateMap(2050)", "Delete ReturnStatement(2051)", "Delete Block(2052)", "Delete MethodDeclaration(2053)", "Delete Modifier: private(2054)", "Delete SimpleName: List(2055)", "Delete SimpleType: List(2056)", "Delete SimpleName: String(2057)", "Delete SimpleType: String(2058)", "Delete ParameterizedType: List<String>(2059)", "Delete SimpleName: getPreferenceList(2060)", "Delete SimpleName: ClusterDataCache(2061)", "Delete SimpleType: ClusterDataCache(2062)", "Delete SimpleName: cache(2063)", "Delete SingleVariableDeclaration(2064)", "Delete SimpleName: Partition(2065)", "Delete SimpleType: Partition(2066)", "Delete SimpleName: resource(2067)", "Delete SingleVariableDeclaration(2068)", "Delete SimpleName: IdealState(2069)", "Delete SimpleType: IdealState(2070)", "Delete SimpleName: idealState(2071)", "Delete SingleVariableDeclaration(2072)", "Delete SimpleName: StateModelDefinition(2073)", "Delete SimpleType: StateModelDefinition(2074)", "Delete SimpleName: stateModelDef(2075)", "Delete SingleVariableDeclaration(2076)", "Delete SimpleName: List(2077)", "Delete SimpleType: List(2078)", "Delete SimpleName: String(2079)", "Delete SimpleType: String(2080)", "Delete ParameterizedType: List<String>(2081)", "Delete SimpleName: listField(2082)", "Delete SimpleName: idealState(2083)", "Delete SimpleName: getPreferenceList(2084)", "Delete SimpleName: resource(2085)", "Delete SimpleName: getPartitionName(2086)", "Delete MethodInvocation(2087)", "Delete MethodInvocation(2088)", "Delete VariableDeclarationFragment(2089)", "Delete VariableDeclarationStatement(2090)", "Delete SimpleName: listField(2091)", "Delete NullLiteral(2092)", "Delete InfixExpression: !=(2093)", "Delete SimpleName: listField(2094)", "Delete SimpleName: size(2095)", "Delete MethodInvocation(2096)", "Delete NumberLiteral: 1(2097)", "Delete InfixExpression: ==(2098)", "Delete InfixExpression: &&(2099)", "Delete QualifiedName: StateModelToken.ANY_LIVEINSTANCE(2100)", "Delete SimpleName: toString(2101)", "Delete MethodInvocation(2102)", "Delete SimpleName: equals(2103)", "Delete SimpleName: listField(2104)", "Delete SimpleName: get(2105)", "Delete NumberLiteral: 0(2106)", "Delete MethodInvocation(2107)", "Delete MethodInvocation(2108)", "Delete InfixExpression: &&(2109)", "Delete SimpleName: Map(2110)", "Delete SimpleType: Map(2111)", "Delete SimpleName: String(2112)", "Delete SimpleType: String(2113)", "Delete SimpleName: LiveInstance(2114)", "Delete SimpleType: LiveInstance(2115)", "Delete ParameterizedType: Map<String,LiveInstance>(2116)", "Delete SimpleName: liveInstances(2117)", "Delete SimpleName: cache(2118)", "Delete SimpleName: getLiveInstances(2119)", "Delete MethodInvocation(2120)", "Delete VariableDeclarationFragment(2121)", "Delete VariableDeclarationStatement(2122)", "Delete SimpleName: List(2123)", "Delete SimpleType: List(2124)", "Delete SimpleName: String(2125)", "Delete SimpleType: String(2126)", "Delete ParameterizedType: List<String>(2127)", "Delete SimpleName: prefList(2128)", "Delete SimpleName: ArrayList(2129)", "Delete SimpleType: ArrayList(2130)", "Delete SimpleName: String(2131)", "Delete SimpleType: String(2132)", "Delete ParameterizedType: ArrayList<String>(2133)", "Delete SimpleName: liveInstances(2134)", "Delete SimpleName: keySet(2135)", "Delete MethodInvocation(2136)", "Delete ClassInstanceCreation(2137)", "Delete VariableDeclarationFragment(2138)", "Delete VariableDeclarationStatement(2139)", "Delete SimpleName: Collections(2140)", "Delete SimpleName: sort(2141)", "Delete SimpleName: prefList(2142)", "Delete MethodInvocation(2143)", "Delete ExpressionStatement(2144)", "Delete SimpleName: prefList(2145)", "Delete ReturnStatement(2146)", "Delete Block(2147)", "Delete SimpleName: listField(2148)", "Delete ReturnStatement(2149)", "Delete Block(2150)", "Delete IfStatement(2151)", "Delete Block(2152)", "Delete MethodDeclaration(2153)"]}}, {"RebalanceIdealStateStage_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from org.apache.helix.HelixProperty to org.apache.helix.util.HelixUtil", "operations": ["UPD QualifiedName: org.apache.helix.HelixProperty from org.apache.helix.HelixProperty to org.apache.helix.util.HelixUtil"]}, {"root": "INS SimpleName: HelixUtil to MethodInvocation at 0", "operations": ["INS SimpleName: HelixUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleType: Class", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: getContextClassLoader", "DEL ReturnStatement", "DEL SimpleType: ClassNotFoundException", "DEL TextElement: Attempts to load the class and delegates to TCCL if class is not found.", "DEL SimpleName: ex", "DEL TextElement: Note: The approach is used as a last resort for environments like OSGi.", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: ClassNotFoundException", "DEL InfixExpression: !=", "DEL SimpleName: ex", "DEL SimpleName: Thread", "DEL IfStatement", "DEL Block", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: currentThread", "DEL MethodInvocation", "DEL TagElement: @return", "DEL Block", "DEL SimpleName: getContextClassLoader", "DEL SimpleName: loadClass", "DEL TagElement: @throws", "DEL SingleVariableDeclaration", "DEL SimpleName: getClassLoader", "DEL Modifier: private", "DEL ThrowStatement", "DEL SimpleName: Thread", "DEL SimpleName: currentThread", "DEL SimpleType: String", "DEL SimpleName: className", "DEL SimpleName: loadClass", "DEL SimpleName: className", "DEL SimpleName: loadClass", "DEL MethodInvocation", "DEL MethodInvocation", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: className", "DEL TryStatement", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: className", "DEL SimpleName: Class", "DEL Block", "DEL SimpleName: ClassNotFoundException", "DEL SimpleName: ClassNotFoundException", "DEL TagElement"]}]}}, {"RebalanceIdealStateStage_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(239) at 9", "Update QualifiedName: org.apache.helix.HelixProperty(8) to org.apache.helix.util.HelixUtil", "Insert SimpleName: HelixUtil(164) into MethodInvocation(169) at 0", "Move MethodInvocation(255) into MethodInvocation(169) at 2", "Delete TextElement: Attempts to load the class and delegates to TCCL if class is not found.(235)", "Delete TextElement: Note: The approach is used as a last resort for environments like OSGi.(236)", "Delete TagElement(237)", "Delete SimpleName: className(238)", "Delete TagElement: @param(239)", "Delete TagElement: @return(240)", "Delete SimpleName: ClassNotFoundException(241)", "Delete TagElement: @throws(242)", "Delete Javadoc(243)", "Delete Modifier: private(244)", "Delete SimpleName: Class(245)", "Delete SimpleType: Class(246)", "Delete SimpleName: loadClass(247)", "Delete SimpleName: String(248)", "Delete SimpleType: String(249)", "Delete SimpleName: className(250)", "Delete SingleVariableDeclaration(251)", "Delete SimpleName: ClassNotFoundException(252)", "Delete SimpleType: ClassNotFoundException(253)", "Delete SimpleName: getClassLoader(256)", "Delete MethodInvocation(257)", "Delete SimpleName: loadClass(258)", "Delete SimpleName: className(259)", "Delete MethodInvocation(260)", "Delete ReturnStatement(261)", "Delete Block(262)", "Delete SimpleName: ClassNotFoundException(263)", "Delete SimpleType: ClassNotFoundException(264)", "Delete SimpleName: ex(265)", "Delete SingleVariableDeclaration(266)", "Delete SimpleName: Thread(267)", "Delete SimpleName: currentThread(268)", "Delete MethodInvocation(269)", "Delete SimpleName: getContextClassLoader(270)", "Delete MethodInvocation(271)", "Delete NullLiteral(272)", "Delete InfixExpression: !=(273)", "Delete SimpleName: Thread(274)", "Delete SimpleName: currentThread(275)", "Delete MethodInvocation(276)", "Delete SimpleName: getContextClassLoader(277)", "Delete MethodInvocation(278)", "Delete SimpleName: loadClass(279)", "Delete SimpleName: className(280)", "Delete MethodInvocation(281)", "Delete ReturnStatement(282)", "Delete Block(283)", "Delete SimpleName: ex(284)", "Delete ThrowStatement(285)", "Delete Block(286)", "Delete IfStatement(287)", "Delete Block(288)", "Delete CatchClause(289)", "Delete TryStatement(290)", "Delete Block(291)", "Delete MethodDeclaration(292)"]}}, {"AutoRebalanceStrategy_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 2", "MOV TypeDeclaration: class to TypeDeclaration: class at 36", "MOV TypeDeclaration: interface to TypeDeclaration: class at 35", "MOV TypeDeclaration: class to CompilationUnit at 23"]}, {"root": "INS SimpleName: AutoRebalanceStrategy to TypeDeclaration: class at 1", "operations": ["INS SimpleName: AutoRebalanceStrategy to TypeDeclaration: class at 1"]}, {"root": "UPDATE from AutoRebalanceModeAlgorithm to AutoRebalanceStrategy", "operations": ["UPD SimpleName: AutoRebalanceModeAlgorithm from AutoRebalanceModeAlgorithm to AutoRebalanceStrategy", "UPD SimpleName: AutoRebalanceModeAlgorithm from AutoRebalanceModeAlgorithm to AutoRebalanceStrategy"]}, {"root": "UPDATE from LOG to logger", "operations": ["UPD SimpleName: LOG from LOG to logger"]}, {"root": "UPDATE from Logger to HelixManager", "operations": ["UPD SimpleName: Logger from Logger to HelixManager"]}, {"root": "MOVE from SimpleType: HelixManager", "operations": ["MOV SimpleName: Logger to SimpleType: HelixManager at 0"]}, {"root": "UPDATE from AutoRebalanceModeAlgorithm to List", "operations": ["UPD SimpleName: AutoRebalanceModeAlgorithm from AutoRebalanceModeAlgorithm to List"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: AutoRebalanceModeAlgorithm to SimpleType: List at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.controller.rebalancer.Rebalancer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.controller.stages.ClusterDataCache"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.controller.stages.CurrentStateOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.helix.model.IdealState", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.model.LiveInstance"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.helix.model.Partition", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.model.StateModelDefinition"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.helix.model.IdealState.IdealStateModeProperty", "DEL ImportDeclaration"]}, {"root": "DEL SimpleName: AutoRebalanceModeAlgorithm", "operations": ["DEL SimpleName: AutoRebalanceModeAlgorithm"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: getLogger", "DEL SimpleType: AutoRebalanceModeAlgorithm", "DEL SimpleName: logger", "DEL FieldDeclaration", "DEL SimpleType: Logger", "DEL TypeLiteral", "DEL SimpleName: Logger", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: static"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: String", "DEL ParameterizedType: Map<String,LiveInstance>", "DEL SimpleName: CurrentStateOutput", "DEL Modifier: public", "DEL SimpleName: clusterData", "DEL SimpleType: Integer", "DEL SimpleName: Map", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: clusterData", "DEL ExpressionStatement", "DEL SimpleName: IdealState", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: replicas", "DEL SimpleName: _manager", "DEL StringLiteral: \"newMapping: \"", "DEL SimpleName: Map", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ParameterizedType: LinkedHashMap<String,Integer>", "DEL SimpleName: String", "DEL Block", "DEL IfStatement", "DEL SimpleName: getPendingStateMap", "DEL SimpleName: keySet", "DEL SimpleName: getMaxPartitionsPerInstance", "DEL SingleVariableDeclaration", "DEL SimpleName: stateCountMap", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL SimpleName: getReplicas", "DEL VariableDeclarationFragment", "DEL SimpleName: currentMapping", "DEL SimpleType: ArrayList", "DEL SimpleName: newMapping", "DEL InfixExpression: +", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: stateModelDef", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: currentStateOutput", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL StringLiteral: \"R\"", "DEL SimpleName: get", "DEL SimpleName: liveNodesNb", "DEL SingleVariableDeclaration", "DEL SimpleName: allNodes", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: currentMapping", "DEL Assignment: =", "DEL SimpleName: Integer", "DEL SimpleName: state", "DEL ClassInstanceCreation", "DEL SimpleName: equals", "DEL SimpleName: LinkedHashMap", "DEL StringLiteral: \"R\"", "DEL SimpleName: String", "DEL SimpleName: node", "DEL SimpleName: stateCount", "DEL MethodInvocation", "DEL SimpleName: getLiveInstances", "DEL SimpleName: _algorithm", "DEL SimpleType: Integer", "DEL VariableDeclarationFragment", "DEL SimpleName: LOG", "DEL SimpleName: Integer", "DEL SimpleName: keySet", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: stateCountMap", "DEL SimpleName: newIdealState", "DEL SimpleName: LinkedHashMap", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: getCurrentStateMap", "DEL ExpressionStatement", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: IdealState", "DEL SimpleName: currentStateOutput", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: state", "DEL SimpleType: String", "DEL SimpleName: getStatesPriorityList", "DEL SimpleName: keySet", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL SimpleName: stateCount", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: newIdealState", "DEL SimpleName: Map", "DEL Block", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: partitions", "DEL SimpleName: node", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL Block", "DEL SimpleName: resourceName", "DEL SimpleName: resourceName", "DEL SimpleName: init", "DEL SimpleName: AutoRebalanceStrategy", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: liveInstance", "DEL ContinueStatement", "DEL SimpleType: Map", "DEL MethodInvocation", "DEL SimpleName: Map", "DEL SimpleName: Integer", "DEL SimpleName: IdealState", "DEL MethodInvocation", "DEL SimpleName: stateCount", "DEL SimpleName: List", "DEL SimpleType: ZNRecord", "DEL ParameterizedType: Map<String,Integer>", "DEL SimpleName: ArrayList", "DEL SimpleType: Map", "DEL SimpleName: statesPriorityList", "DEL SimpleName: currentStateOutput", "DEL SimpleName: manager", "DEL SimpleType: Rebalancer", "DEL SimpleName: pendingStateMap", "DEL ParameterizedType: Map<String,String>", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: curStateMap", "DEL SimpleName: currentStateOutput", "DEL SimpleName: String", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL SimpleName: map", "DEL ReturnStatement", "DEL SimpleName: stateModelDef", "DEL SimpleName: equals", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: HashMap", "DEL MethodInvocation", "DEL SimpleName: placementScheme", "DEL MethodInvocation", "DEL SimpleName: HashMap", "DEL SimpleName: String", "DEL SimpleName: HelixManager", "DEL SimpleType: String", "DEL SimpleType: Map", "DEL VariableDeclarationFragment", "DEL Block", "DEL IfStatement", "DEL SimpleName: Exception", "DEL SimpleName: getStateModelDefRef", "DEL SimpleName: Integer", "DEL SimpleName: currentMapping", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: allNodes", "DEL SimpleType: List", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: replicas", "DEL SimpleName: manager", "DEL SimpleName: String", "DEL SimpleType: IdealState", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: ClusterDataCache", "DEL SimpleName: setListFields", "DEL SingleVariableDeclaration", "DEL SimpleName: resourceName", "DEL Block", "DEL SimpleName: stateCountMap", "DEL SimpleName: state", "DEL SimpleType: Integer", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: newIdealState", "DEL SimpleName: _algorithm", "DEL SimpleName: put", "DEL ParameterizedType: List<String>", "DEL SimpleName: currentIdealState", "DEL SimpleName: _algorithm", "DEL ClassInstanceCreation", "DEL EnhancedForStatement", "DEL IfStatement", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: stateCountMap", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL SimpleName: allNodes", "DEL ParameterizedType: HashMap<String,String>", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL SimpleName: num", "DEL SimpleName: ReplicaPlacementScheme", "DEL SimpleName: stateModelDef", "DEL SimpleType: ArrayList", "DEL SimpleName: num", "DEL SimpleType: String", "DEL SimpleName: num", "DEL ParameterizedType: List<String>", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: parseInt", "DEL SimpleName: LinkedHashMap", "DEL ParameterizedType: HashMap<String,Map<String,String>>", "DEL SimpleType: String", "DEL Assignment: -=", "DEL Block", "DEL SimpleName: Map", "DEL VariableDeclarationFragment", "DEL SimpleName: ArrayList", "DEL SimpleName: String", "DEL SimpleName: Integer", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: currentMapping", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleName: currentMapping", "DEL SimpleName: maxPartition", "DEL Modifier: private", "DEL SimpleName: String", "DEL SimpleName: liveNodesNb", "DEL SimpleName: info", "DEL SimpleName: getInstanceConfigMap", "DEL Javadoc", "DEL SimpleName: String", "DEL SimpleName: partition", "DEL SimpleName: put", "DEL SimpleName: String", "DEL SimpleName: getListFields", "DEL SimpleName: info", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: IdealState", "DEL SimpleType: String", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: AutoRebalanceModeAlgorithm", "DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL SimpleName: stateCountMap", "DEL Assignment: =", "DEL SimpleName: maxPartition", "DEL VariableDeclarationFragment", "DEL SimpleType: Integer", "DEL SimpleName: statesPriorityList", "DEL SimpleType: String", "DEL SimpleType: IdealState", "DEL SimpleName: put", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL SimpleType: Map", "DEL ParameterizedType: List<String>", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL ParameterizedType: Map<String,Map<String,String>>", "DEL SimpleName: getRecord", "DEL SimpleType: String", "DEL SimpleType: ReplicaPlacementScheme", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: String", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: replicas", "DEL IfStatement", "DEL SimpleName: LOG", "DEL SimpleName: containsKey", "DEL SimpleName: toString", "DEL SimpleName: getRecord", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL SimpleName: getSimpleFields", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: info", "DEL SimpleName: LOG", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: state", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleName: Map", "DEL SimpleName: info", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: String", "DEL SimpleName: stateCount", "DEL MethodInvocation", "DEL SimpleName: getRecord", "DEL SimpleName: partition", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL Block", "DEL InfixExpression: >", "DEL SimpleName: List", "DEL SimpleType: Map", "DEL SimpleName: String", "DEL SimpleName: node", "DEL VariableDeclarationFragment", "DEL SimpleName: LinkedHashMap", "DEL SimpleType: IdealState", "DEL SimpleName: get", "DEL EnhancedForStatement", "DEL SimpleName: containsKey", "DEL SimpleName: _manager", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: Map", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleType: LinkedHashMap", "DEL MethodInvocation", "DEL SimpleName: newMapping", "DEL SimpleName: stateCountMap", "DEL SimpleName: List", "DEL SimpleName: liveNodes", "DEL SimpleName: state", "DEL SimpleName: num", "DEL SimpleName: partitions", "DEL SimpleName: resourceName", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL ParameterizedType: LinkedHashMap<String,Integer>", "DEL BreakStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: resourceName", "DEL MethodInvocation", "DEL SimpleName: AutoRebalanceModeAlgorithm", "DEL SimpleName: stateCountMap", "DEL PrimitiveType: void", "DEL ParameterizedType: LinkedHashMap<String,Integer>", "DEL MethodInvocation", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleName: parseInt", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: placementScheme", "DEL MethodInvocation", "DEL SimpleName: getNumInstancesPerState", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Map<String,Map<String,String>>", "DEL SimpleType: LinkedHashMap", "DEL SimpleType: Integer", "DEL SimpleName: String", "DEL SimpleName: liveInstance", "DEL SimpleType: String", "DEL SimpleName: Rebalancer", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: stateCount", "DEL MethodInvocation", "DEL SimpleName: HelixManager", "DEL SimpleType: LinkedHashMap", "DEL ParameterizedType: ArrayList<String>", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL SimpleType: String", "DEL SimpleName: newIdealState", "DEL SimpleName: computePartitionAssignment", "DEL MethodInvocation", "DEL SimpleName: String", "DEL TextElement:  state count map: state->count", "DEL SimpleName: LOG", "DEL SimpleType: Exception", "DEL SingleVariableDeclaration", "DEL SimpleName: stateCountMap", "DEL SimpleName: String", "DEL SimpleName: stateModelName", "DEL SimpleName: LOG", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: replicas", "DEL SimpleType: Map", "DEL StringLiteral: \"N\"", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: String", "DEL SimpleName: num", "DEL SimpleName: size", "DEL SimpleName: currentIdealState", "DEL SimpleName: state", "DEL VariableDeclarationStatement", "DEL ParameterizedType: Map<String,String>", "DEL ParameterizedType: LinkedHashMap<String,Integer>", "DEL SimpleType: String", "DEL SimpleName: Integer", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"maxPartition: \"", "DEL SimpleName: clusterData", "DEL SimpleName: String", "DEL SimpleName: currentIdealState", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL NumberLiteral: 1", "DEL SimpleName: _manager", "DEL SimpleName: currentIdealState", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleName: clusterData", "DEL SimpleName: state", "DEL PrimitiveType: int", "DEL SimpleType: LinkedHashMap", "DEL ClassInstanceCreation", "DEL SimpleName: map", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL Assignment: =", "DEL SimpleName: partitions", "DEL SimpleName: init", "DEL SimpleType: String", "DEL SimpleName: currentIdealState", "DEL SimpleName: node", "DEL EnhancedForStatement", "DEL SimpleName: newMapping", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: AutoRebalanceModeAlgorithm", "DEL SimpleName: keySet", "DEL SimpleName: Partition", "DEL SimpleName: stateModelName", "DEL SimpleName: String", "DEL SimpleType: List", "DEL SimpleType: String", "DEL SimpleName: equals", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL SimpleName: info", "DEL SimpleType: CurrentStateOutput", "DEL SimpleName: curStateMap", "DEL SimpleType: Partition", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleType: StateModelDefinition", "DEL ExpressionStatement", "DEL SimpleName: LinkedHashMap", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: curStateMap", "DEL ClassInstanceCreation", "DEL SimpleName: LiveInstance", "DEL ThisExpression", "DEL SimpleName: String", "DEL SimpleName: state", "DEL SimpleType: HelixManager", "DEL NullLiteral", "DEL ParameterizedType: List<String>", "DEL SimpleName: stateCountMap", "DEL SimpleType: String", "DEL ReturnStatement", "DEL SimpleType: String", "DEL SimpleName: partitions", "DEL SimpleType: HashMap", "DEL ExpressionStatement", "DEL SimpleName: state", "DEL SimpleType: String", "DEL SimpleName: state", "DEL MethodInvocation", "DEL StringLiteral: \"currentMapping: \"", "DEL MethodInvocation", "DEL SimpleName: setSimpleFields", "DEL SimpleName: AutoRebalanceModeAlgorithm", "DEL TypeDeclaration: class", "DEL VariableDeclarationFragment", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL StringLiteral: \"allNodes: \"", "DEL IfStatement", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: Map", "DEL SimpleType: String", "DEL SimpleName: _algorithm", "DEL ParameterizedType: List<String>", "DEL SimpleType: String", "DEL SimpleName: getPartitionSet", "DEL SimpleName: liveNodes", "DEL SimpleName: String", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Map<String,Map<String,String>>", "DEL SimpleType: List", "DEL SimpleName: state", "DEL ExpressionStatement", "DEL SimpleName: node", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleType: Map", "DEL MethodInvocation", "DEL SimpleName: getStateModelDef", "DEL SimpleName: pendingStateMap", "DEL SimpleType: String", "DEL SimpleName: map", "DEL Assignment: =", "DEL SimpleName: node", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: getNumInstancesPerState", "DEL ExpressionStatement", "DEL SimpleName: placementScheme", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: liveInstance", "DEL SimpleName: String", "DEL SimpleName: setIdealStateMode", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ParameterizedType: Map<String,String>", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleType: LinkedHashMap", "DEL SimpleName: put", "DEL SimpleName: partition", "DEL SimpleName: ZNRecord", "DEL MethodDeclaration", "DEL SimpleName: isInfoEnabled", "DEL ClassInstanceCreation", "DEL TryStatement", "DEL Modifier: public", "DEL SimpleName: newIdealState", "DEL SimpleName: totalReplicas", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: stateCountMap", "DEL Block", "DEL StringLiteral: \"stateCountMap: \"", "DEL MethodInvocation", "DEL SimpleName: get", "DEL QualifiedName: IdealStateModeProperty.AUTO", "DEL SimpleType: Partition", "DEL SimpleType: String", "DEL SimpleType: String", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL SimpleName: ClusterDataCache", "DEL SimpleName: liveNodes", "DEL SimpleType: List", "DEL SimpleType: Integer", "DEL SimpleName: state", "DEL SimpleType: String", "DEL SimpleName: stateCountMap", "DEL SimpleType: DefaultPlacementScheme", "DEL SimpleName: String", "DEL SimpleType: Map", "DEL VariableDeclarationStatement", "DEL SimpleType: IdealState", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL TagElement: @return", "DEL SimpleName: computeNewIdealState", "DEL SimpleName: Override", "DEL SimpleType: CurrentStateOutput", "DEL EnhancedForStatement", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: stateModelDef", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleName: get", "DEL Block", "DEL SimpleName: partitions", "DEL SimpleName: statesPriorityList", "DEL SimpleName: String", "DEL SimpleName: pendingStateMap", "DEL SimpleName: partition", "DEL SimpleName: String", "DEL ParameterizedType: LinkedHashMap<String,Integer>", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: CurrentStateOutput", "DEL Block", "DEL PrefixExpression: -", "DEL SimpleName: replicas", "DEL Modifier: private", "DEL SimpleName: stateModelDef", "DEL SimpleName: currentStateOutput", "DEL SimpleName: String", "DEL SimpleName: String", "DEL MarkerAnnotation", "DEL SimpleType: LiveInstance", "DEL MethodInvocation", "DEL SimpleName: num", "DEL SimpleName: DefaultPlacementScheme", "DEL SimpleType: String", "DEL StringLiteral: \"liveNodes: \"", "DEL MethodInvocation", "DEL SimpleName: HashMap", "DEL SimpleName: Map", "DEL SimpleName: stateModelDef", "DEL SimpleName: resourceName", "DEL SimpleName: String", "DEL SimpleName: resourceName", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: partition", "DEL SimpleName: currentIdealState", "DEL SimpleName: stateCountMap", "DEL SimpleName: List", "DEL SimpleName: info", "DEL SimpleName: map", "DEL SimpleType: ArrayList", "DEL SimpleName: maxPartition", "DEL SimpleName: totalReplicas", "DEL SimpleName: stateCountMap", "DEL SimpleName: LOG", "DEL SimpleName: state", "DEL SimpleName: isInfoEnabled", "DEL SimpleName: Map", "DEL SimpleName: stateCount", "DEL MethodInvocation", "DEL SimpleType: HelixManager", "DEL SimpleName: stateCount", "DEL SimpleName: ArrayList", "DEL SimpleName: put", "DEL SimpleName: map", "DEL MethodInvocation", "DEL VariableDeclarationFragment"]}]}}, {"AutoRebalanceStrategy_diff": {"operations": ["Move TypeDeclaration: class(2671) into CompilationUnit(2488) at 23", "Insert SimpleName: AutoRebalanceStrategy(31) into TypeDeclaration: class(2487) at 1", "Move FieldDeclaration(74) into TypeDeclaration: class(2487) at 2", "Move TypeDeclaration: interface(3088) into TypeDeclaration: class(2487) at 35", "Move TypeDeclaration: class(3206) into TypeDeclaration: class(2487) at 36", "Update SimpleName: AutoRebalanceModeAlgorithm(529) to AutoRebalanceStrategy", "Update SimpleName: AutoRebalanceModeAlgorithm(594) to AutoRebalanceStrategy", "Update SimpleName: LOG(66) to logger", "Delete QualifiedName: org.apache.helix.controller.rebalancer.Rebalancer(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.helix.controller.stages.ClusterDataCache(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.helix.controller.stages.CurrentStateOutput(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.helix.model.IdealState(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.helix.model.LiveInstance(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.helix.model.Partition(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.helix.model.StateModelDefinition(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.helix.model.IdealState.IdealStateModeProperty(42)", "Delete ImportDeclaration(43)", "Delete SimpleName: AutoRebalanceModeAlgorithm(399)", "Delete Modifier: private(400)", "Delete Modifier: static(401)", "Delete SimpleType: Logger(403)", "Delete SimpleName: logger(404)", "Delete SimpleName: Logger(405)", "Delete SimpleName: getLogger(406)", "Delete SimpleType: AutoRebalanceModeAlgorithm(408)", "Delete TypeLiteral(409)", "Delete MethodInvocation(410)", "Delete VariableDeclarationFragment(411)", "Delete FieldDeclaration(412)", "Delete Modifier: public(46)", "Delete SimpleName: AutoRebalanceStrategy(47)", "Delete SimpleName: Rebalancer(48)", "Delete SimpleType: Rebalancer(49)", "Delete Modifier: private(50)", "Delete SimpleName: HelixManager(51)", "Delete SimpleType: HelixManager(52)", "Delete SimpleName: _manager(53)", "Delete VariableDeclarationFragment(54)", "Delete FieldDeclaration(55)", "Delete Modifier: private(56)", "Delete SimpleName: AutoRebalanceModeAlgorithm(57)", "Delete SimpleType: AutoRebalanceModeAlgorithm(58)", "Delete SimpleName: _algorithm(59)", "Delete VariableDeclarationFragment(60)", "Delete FieldDeclaration(61)", "Delete SimpleName: Override(75)", "Delete MarkerAnnotation(76)", "Delete Modifier: public(77)", "Delete PrimitiveType: void(78)", "Delete SimpleName: init(79)", "Delete SimpleName: HelixManager(80)", "Delete SimpleType: HelixManager(81)", "Delete SimpleName: manager(82)", "Delete SingleVariableDeclaration(83)", "Delete ThisExpression(84)", "Delete SimpleName: _manager(85)", "Delete FieldAccess(86)", "Delete SimpleName: manager(87)", "Delete Assignment: =(88)", "Delete ExpressionStatement(89)", "Delete ThisExpression(90)", "Delete SimpleName: _algorithm(91)", "Delete FieldAccess(92)", "Delete NullLiteral(93)", "Delete Assignment: =(94)", "Delete ExpressionStatement(95)", "Delete Block(96)", "Delete MethodDeclaration(97)", "Delete SimpleName: Override(98)", "Delete MarkerAnnotation(99)", "Delete Modifier: public(100)", "Delete SimpleName: IdealState(101)", "Delete SimpleType: IdealState(102)", "Delete SimpleName: computeNewIdealState(103)", "Delete SimpleName: String(104)", "Delete SimpleType: String(105)", "Delete SimpleName: resourceName(106)", "Delete SingleVariableDeclaration(107)", "Delete SimpleName: IdealState(108)", "Delete SimpleType: IdealState(109)", "Delete SimpleName: currentIdealState(110)", "Delete SingleVariableDeclaration(111)", "Delete SimpleName: CurrentStateOutput(112)", "Delete SimpleType: CurrentStateOutput(113)", "Delete SimpleName: currentStateOutput(114)", "Delete SingleVariableDeclaration(115)", "Delete SimpleName: ClusterDataCache(116)", "Delete SimpleType: ClusterDataCache(117)", "Delete SimpleName: clusterData(118)", "Delete SingleVariableDeclaration(119)", "Delete SimpleName: List(120)", "Delete SimpleType: List(121)", "Delete SimpleName: String(122)", "Delete SimpleType: String(123)", "Delete ParameterizedType: List<String>(124)", "Delete SimpleName: partitions(125)", "Delete SimpleName: ArrayList(126)", "Delete SimpleType: ArrayList(127)", "Delete SimpleName: String(128)", "Delete SimpleType: String(129)", "Delete ParameterizedType: ArrayList<String>(130)", "Delete SimpleName: currentIdealState(131)", "Delete SimpleName: getPartitionSet(132)", "Delete MethodInvocation(133)", "Delete ClassInstanceCreation(134)", "Delete VariableDeclarationFragment(135)", "Delete VariableDeclarationStatement(136)", "Delete SimpleName: String(137)", "Delete SimpleType: String(138)", "Delete SimpleName: stateModelName(139)", "Delete SimpleName: currentIdealState(140)", "Delete SimpleName: getStateModelDefRef(141)", "Delete MethodInvocation(142)", "Delete VariableDeclarationFragment(143)", "Delete VariableDeclarationStatement(144)", "Delete SimpleName: StateModelDefinition(145)", "Delete SimpleType: StateModelDefinition(146)", "Delete SimpleName: stateModelDef(147)", "Delete SimpleName: clusterData(148)", "Delete SimpleName: getStateModelDef(149)", "Delete SimpleName: stateModelName(150)", "Delete MethodInvocation(151)", "Delete VariableDeclarationFragment(152)", "Delete VariableDeclarationStatement(153)", "Delete SimpleName: Map(154)", "Delete SimpleType: Map(155)", "Delete SimpleName: String(156)", "Delete SimpleType: String(157)", "Delete SimpleName: LiveInstance(158)", "Delete SimpleType: LiveInstance(159)", "Delete ParameterizedType: Map<String,LiveInstance>(160)", "Delete SimpleName: liveInstance(161)", "Delete SimpleName: clusterData(162)", "Delete SimpleName: getLiveInstances(163)", "Delete MethodInvocation(164)", "Delete VariableDeclarationFragment(165)", "Delete VariableDeclarationStatement(166)", "Delete SimpleName: String(167)", "Delete SimpleType: String(168)", "Delete SimpleName: replicas(169)", "Delete SimpleName: currentIdealState(170)", "Delete SimpleName: getReplicas(171)", "Delete MethodInvocation(172)", "Delete VariableDeclarationFragment(173)", "Delete VariableDeclarationStatement(174)", "Delete SimpleName: LinkedHashMap(175)", "Delete SimpleType: LinkedHashMap(176)", "Delete SimpleName: String(177)", "Delete SimpleType: String(178)", "Delete SimpleName: Integer(179)", "Delete SimpleType: Integer(180)", "Delete ParameterizedType: LinkedHashMap<String,Integer>(181)", "Delete SimpleName: stateCountMap(182)", "Delete SimpleName: LinkedHashMap(183)", "Delete SimpleType: LinkedHashMap(184)", "Delete SimpleName: String(185)", "Delete SimpleType: String(186)", "Delete SimpleName: Integer(187)", "Delete SimpleType: Integer(188)", "Delete ParameterizedType: LinkedHashMap<String,Integer>(189)", "Delete ClassInstanceCreation(190)", "Delete VariableDeclarationFragment(191)", "Delete VariableDeclarationStatement(192)", "Delete SimpleName: stateCountMap(193)", "Delete SimpleName: stateCount(194)", "Delete SimpleName: stateModelDef(195)", "Delete SimpleName: liveInstance(196)", "Delete SimpleName: size(197)", "Delete MethodInvocation(198)", "Delete SimpleName: Integer(199)", "Delete SimpleName: parseInt(200)", "Delete SimpleName: replicas(201)", "Delete MethodInvocation(202)", "Delete MethodInvocation(203)", "Delete Assignment: =(204)", "Delete ExpressionStatement(205)", "Delete SimpleName: List(206)", "Delete SimpleType: List(207)", "Delete SimpleName: String(208)", "Delete SimpleType: String(209)", "Delete ParameterizedType: List<String>(210)", "Delete SimpleName: liveNodes(211)", "Delete SimpleName: ArrayList(212)", "Delete SimpleType: ArrayList(213)", "Delete SimpleName: String(214)", "Delete SimpleType: String(215)", "Delete ParameterizedType: ArrayList<String>(216)", "Delete SimpleName: liveInstance(217)", "Delete SimpleName: keySet(218)", "Delete MethodInvocation(219)", "Delete ClassInstanceCreation(220)", "Delete VariableDeclarationFragment(221)", "Delete VariableDeclarationStatement(222)", "Delete SimpleName: Map(223)", "Delete SimpleType: Map(224)", "Delete SimpleName: String(225)", "Delete SimpleType: String(226)", "Delete SimpleName: Map(227)", "Delete SimpleType: Map(228)", "Delete SimpleName: String(229)", "Delete SimpleType: String(230)", "Delete SimpleName: String(231)", "Delete SimpleType: String(232)", "Delete ParameterizedType: Map<String,String>(233)", "Delete ParameterizedType: Map<String,Map<String,String>>(234)", "Delete SimpleName: currentMapping(235)", "Delete SimpleName: currentMapping(236)", "Delete SimpleName: currentStateOutput(237)", "Delete SimpleName: resourceName(238)", "Delete SimpleName: partitions(239)", "Delete SimpleName: stateCountMap(240)", "Delete MethodInvocation(241)", "Delete VariableDeclarationFragment(242)", "Delete VariableDeclarationStatement(243)", "Delete SimpleName: List(244)", "Delete SimpleType: List(245)", "Delete SimpleName: String(246)", "Delete SimpleType: String(247)", "Delete ParameterizedType: List<String>(248)", "Delete SimpleName: allNodes(249)", "Delete SimpleName: ArrayList(250)", "Delete SimpleType: ArrayList(251)", "Delete SimpleName: String(252)", "Delete SimpleType: String(253)", "Delete ParameterizedType: ArrayList<String>(254)", "Delete SimpleName: clusterData(255)", "Delete SimpleName: getInstanceConfigMap(256)", "Delete MethodInvocation(257)", "Delete SimpleName: keySet(258)", "Delete MethodInvocation(259)", "Delete ClassInstanceCreation(260)", "Delete VariableDeclarationFragment(261)", "Delete VariableDeclarationStatement(262)", "Delete PrimitiveType: int(263)", "Delete SimpleName: maxPartition(264)", "Delete SimpleName: currentIdealState(265)", "Delete SimpleName: getMaxPartitionsPerInstance(266)", "Delete MethodInvocation(267)", "Delete VariableDeclarationFragment(268)", "Delete VariableDeclarationStatement(269)", "Delete SimpleName: LOG(270)", "Delete SimpleName: isInfoEnabled(271)", "Delete MethodInvocation(272)", "Delete SimpleName: LOG(273)", "Delete SimpleName: info(274)", "Delete StringLiteral: \"currentMapping: \"(275)", "Delete SimpleName: currentMapping(276)", "Delete InfixExpression: +(277)", "Delete MethodInvocation(278)", "Delete ExpressionStatement(279)", "Delete SimpleName: LOG(280)", "Delete SimpleName: info(281)", "Delete StringLiteral: \"stateCountMap: \"(282)", "Delete SimpleName: stateCountMap(283)", "Delete InfixExpression: +(284)", "Delete MethodInvocation(285)", "Delete ExpressionStatement(286)", "Delete SimpleName: LOG(287)", "Delete SimpleName: info(288)", "Delete StringLiteral: \"liveNodes: \"(289)", "Delete SimpleName: liveNodes(290)", "Delete InfixExpression: +(291)", "Delete MethodInvocation(292)", "Delete ExpressionStatement(293)", "Delete SimpleName: LOG(294)", "Delete SimpleName: info(295)", "Delete StringLiteral: \"allNodes: \"(296)", "Delete SimpleName: allNodes(297)", "Delete InfixExpression: +(298)", "Delete MethodInvocation(299)", "Delete ExpressionStatement(300)", "Delete SimpleName: LOG(301)", "Delete SimpleName: info(302)", "Delete StringLiteral: \"maxPartition: \"(303)", "Delete SimpleName: maxPartition(304)", "Delete InfixExpression: +(305)", "Delete MethodInvocation(306)", "Delete ExpressionStatement(307)", "Delete Block(308)", "Delete IfStatement(309)", "Delete SimpleName: ReplicaPlacementScheme(310)", "Delete SimpleType: ReplicaPlacementScheme(311)", "Delete SimpleName: placementScheme(312)", "Delete SimpleName: DefaultPlacementScheme(313)", "Delete SimpleType: DefaultPlacementScheme(314)", "Delete ClassInstanceCreation(315)", "Delete VariableDeclarationFragment(316)", "Delete VariableDeclarationStatement(317)", "Delete SimpleName: placementScheme(318)", "Delete SimpleName: init(319)", "Delete SimpleName: _manager(320)", "Delete MethodInvocation(321)", "Delete ExpressionStatement(322)", "Delete SimpleName: _algorithm(323)", "Delete SimpleName: AutoRebalanceModeAlgorithm(324)", "Delete SimpleType: AutoRebalanceModeAlgorithm(325)", "Delete SimpleName: resourceName(326)", "Delete SimpleName: partitions(327)", "Delete SimpleName: stateCountMap(328)", "Delete SimpleName: maxPartition(329)", "Delete SimpleName: placementScheme(330)", "Delete ClassInstanceCreation(331)", "Delete Assignment: =(332)", "Delete ExpressionStatement(333)", "Delete SimpleName: ZNRecord(334)", "Delete SimpleType: ZNRecord(335)", "Delete SimpleName: newMapping(336)", "Delete SimpleName: _algorithm(337)", "Delete SimpleName: computePartitionAssignment(338)", "Delete SimpleName: liveNodes(339)", "Delete SimpleName: currentMapping(340)", "Delete SimpleName: allNodes(341)", "Delete MethodInvocation(342)", "Delete VariableDeclarationFragment(343)", "Delete VariableDeclarationStatement(344)", "Delete SimpleName: LOG(345)", "Delete SimpleName: isInfoEnabled(346)", "Delete MethodInvocation(347)", "Delete SimpleName: LOG(348)", "Delete SimpleName: info(349)", "Delete StringLiteral: \"newMapping: \"(350)", "Delete SimpleName: newMapping(351)", "Delete InfixExpression: +(352)", "Delete MethodInvocation(353)", "Delete ExpressionStatement(354)", "Delete Block(355)", "Delete IfStatement(356)", "Delete SimpleName: IdealState(357)", "Delete SimpleType: IdealState(358)", "Delete SimpleName: newIdealState(359)", "Delete SimpleName: IdealState(360)", "Delete SimpleType: IdealState(361)", "Delete SimpleName: resourceName(362)", "Delete ClassInstanceCreation(363)", "Delete VariableDeclarationFragment(364)", "Delete VariableDeclarationStatement(365)", "Delete SimpleName: newIdealState(366)", "Delete SimpleName: getRecord(367)", "Delete MethodInvocation(368)", "Delete SimpleName: setSimpleFields(369)", "Delete SimpleName: currentIdealState(370)", "Delete SimpleName: getRecord(371)", "Delete MethodInvocation(372)", "Delete SimpleName: getSimpleFields(373)", "Delete MethodInvocation(374)", "Delete MethodInvocation(375)", "Delete ExpressionStatement(376)", "Delete SimpleName: newIdealState(377)", "Delete SimpleName: setIdealStateMode(378)", "Delete QualifiedName: IdealStateModeProperty.AUTO(379)", "Delete SimpleName: toString(380)", "Delete MethodInvocation(381)", "Delete MethodInvocation(382)", "Delete ExpressionStatement(383)", "Delete SimpleName: newIdealState(384)", "Delete SimpleName: getRecord(385)", "Delete MethodInvocation(386)", "Delete SimpleName: setListFields(387)", "Delete SimpleName: newMapping(388)", "Delete SimpleName: getListFields(389)", "Delete MethodInvocation(390)", "Delete MethodInvocation(391)", "Delete ExpressionStatement(392)", "Delete SimpleName: newIdealState(393)", "Delete ReturnStatement(394)", "Delete Block(395)", "Delete MethodDeclaration(396)", "Delete TextElement:  state count map: state->count(2672)", "Delete TagElement: @return(2673)", "Delete Javadoc(2674)", "Delete SimpleName: LinkedHashMap(2675)", "Delete SimpleType: LinkedHashMap(2676)", "Delete SimpleName: String(2677)", "Delete SimpleType: String(2678)", "Delete SimpleName: Integer(2679)", "Delete SimpleType: Integer(2680)", "Delete ParameterizedType: LinkedHashMap<String,Integer>(2681)", "Delete SimpleName: stateCount(2682)", "Delete SimpleName: StateModelDefinition(2683)", "Delete SimpleType: StateModelDefinition(2684)", "Delete SimpleName: stateModelDef(2685)", "Delete SingleVariableDeclaration(2686)", "Delete PrimitiveType: int(2687)", "Delete SimpleName: liveNodesNb(2688)", "Delete SingleVariableDeclaration(2689)", "Delete PrimitiveType: int(2690)", "Delete SimpleName: totalReplicas(2691)", "Delete SingleVariableDeclaration(2692)", "Delete SimpleName: LinkedHashMap(2693)", "Delete SimpleType: LinkedHashMap(2694)", "Delete SimpleName: String(2695)", "Delete SimpleType: String(2696)", "Delete SimpleName: Integer(2697)", "Delete SimpleType: Integer(2698)", "Delete ParameterizedType: LinkedHashMap<String,Integer>(2699)", "Delete SimpleName: stateCountMap(2700)", "Delete SimpleName: LinkedHashMap(2701)", "Delete SimpleType: LinkedHashMap(2702)", "Delete SimpleName: String(2703)", "Delete SimpleType: String(2704)", "Delete SimpleName: Integer(2705)", "Delete SimpleType: Integer(2706)", "Delete ParameterizedType: LinkedHashMap<String,Integer>(2707)", "Delete ClassInstanceCreation(2708)", "Delete VariableDeclarationFragment(2709)", "Delete VariableDeclarationStatement(2710)", "Delete SimpleName: List(2711)", "Delete SimpleType: List(2712)", "Delete SimpleName: String(2713)", "Delete SimpleType: String(2714)", "Delete ParameterizedType: List<String>(2715)", "Delete SimpleName: statesPriorityList(2716)", "Delete SimpleName: stateModelDef(2717)", "Delete SimpleName: getStatesPriorityList(2718)", "Delete MethodInvocation(2719)", "Delete VariableDeclarationFragment(2720)", "Delete VariableDeclarationStatement(2721)", "Delete PrimitiveType: int(2722)", "Delete SimpleName: replicas(2723)", "Delete SimpleName: totalReplicas(2724)", "Delete VariableDeclarationFragment(2725)", "Delete VariableDeclarationStatement(2726)", "Delete SimpleName: String(2727)", "Delete SimpleType: String(2728)", "Delete SimpleName: state(2729)", "Delete SingleVariableDeclaration(2730)", "Delete SimpleName: statesPriorityList(2731)", "Delete SimpleName: String(2732)", "Delete SimpleType: String(2733)", "Delete SimpleName: num(2734)", "Delete SimpleName: stateModelDef(2735)", "Delete SimpleName: getNumInstancesPerState(2736)", "Delete SimpleName: state(2737)", "Delete MethodInvocation(2738)", "Delete VariableDeclarationFragment(2739)", "Delete VariableDeclarationStatement(2740)", "Delete StringLiteral: \"N\"(2741)", "Delete SimpleName: equals(2742)", "Delete SimpleName: num(2743)", "Delete MethodInvocation(2744)", "Delete SimpleName: stateCountMap(2745)", "Delete SimpleName: put(2746)", "Delete SimpleName: state(2747)", "Delete SimpleName: liveNodesNb(2748)", "Delete MethodInvocation(2749)", "Delete ExpressionStatement(2750)", "Delete Block(2751)", "Delete StringLiteral: \"R\"(2752)", "Delete SimpleName: equals(2753)", "Delete SimpleName: num(2754)", "Delete MethodInvocation(2755)", "Delete ContinueStatement(2756)", "Delete Block(2757)", "Delete PrimitiveType: int(2758)", "Delete SimpleName: stateCount(2759)", "Delete NumberLiteral: 1(2760)", "Delete PrefixExpression: -(2761)", "Delete VariableDeclarationFragment(2762)", "Delete VariableDeclarationStatement(2763)", "Delete SimpleName: stateCount(2764)", "Delete SimpleName: Integer(2765)", "Delete SimpleName: parseInt(2766)", "Delete SimpleName: num(2767)", "Delete MethodInvocation(2768)", "Delete Assignment: =(2769)", "Delete ExpressionStatement(2770)", "Delete Block(2771)", "Delete SimpleName: Exception(2772)", "Delete SimpleType: Exception(2773)", "Delete SimpleName: e(2774)", "Delete SingleVariableDeclaration(2775)", "Delete Block(2776)", "Delete CatchClause(2777)", "Delete TryStatement(2778)", "Delete SimpleName: stateCount(2779)", "Delete NumberLiteral: 0(2780)", "Delete InfixExpression: >(2781)", "Delete SimpleName: stateCountMap(2782)", "Delete SimpleName: put(2783)", "Delete SimpleName: state(2784)", "Delete SimpleName: stateCount(2785)", "Delete MethodInvocation(2786)", "Delete ExpressionStatement(2787)", "Delete SimpleName: replicas(2788)", "Delete SimpleName: stateCount(2789)", "Delete Assignment: -=(2790)", "Delete ExpressionStatement(2791)", "Delete Block(2792)", "Delete IfStatement(2793)", "Delete Block(2794)", "Delete IfStatement(2795)", "Delete IfStatement(2796)", "Delete Block(2797)", "Delete EnhancedForStatement(2798)", "Delete SimpleName: String(2799)", "Delete SimpleType: String(2800)", "Delete SimpleName: state(2801)", "Delete SingleVariableDeclaration(2802)", "Delete SimpleName: statesPriorityList(2803)", "Delete SimpleName: String(2804)", "Delete SimpleType: String(2805)", "Delete SimpleName: num(2806)", "Delete SimpleName: stateModelDef(2807)", "Delete SimpleName: getNumInstancesPerState(2808)", "Delete SimpleName: state(2809)", "Delete MethodInvocation(2810)", "Delete VariableDeclarationFragment(2811)", "Delete VariableDeclarationStatement(2812)", "Delete StringLiteral: \"R\"(2813)", "Delete SimpleName: equals(2814)", "Delete SimpleName: num(2815)", "Delete MethodInvocation(2816)", "Delete SimpleName: stateCountMap(2817)", "Delete SimpleName: put(2818)", "Delete SimpleName: state(2819)", "Delete SimpleName: replicas(2820)", "Delete MethodInvocation(2821)", "Delete ExpressionStatement(2822)", "Delete BreakStatement(2823)", "Delete Block(2824)", "Delete IfStatement(2825)", "Delete Block(2826)", "Delete EnhancedForStatement(2827)", "Delete SimpleName: stateCountMap(2828)", "Delete ReturnStatement(2829)", "Delete Block(2830)", "Delete MethodDeclaration(2831)", "Delete SimpleName: Map(2832)", "Delete SimpleType: Map(2833)", "Delete SimpleName: String(2834)", "Delete SimpleType: String(2835)", "Delete SimpleName: Map(2836)", "Delete SimpleType: Map(2837)", "Delete SimpleName: String(2838)", "Delete SimpleType: String(2839)", "Delete SimpleName: String(2840)", "Delete SimpleType: String(2841)", "Delete ParameterizedType: Map<String,String>(2842)", "Delete ParameterizedType: Map<String,Map<String,String>>(2843)", "Delete SimpleName: currentMapping(2844)", "Delete SimpleName: CurrentStateOutput(2845)", "Delete SimpleType: CurrentStateOutput(2846)", "Delete SimpleName: currentStateOutput(2847)", "Delete SingleVariableDeclaration(2848)", "Delete SimpleName: String(2849)", "Delete SimpleType: String(2850)", "Delete SimpleName: resourceName(2851)", "Delete SingleVariableDeclaration(2852)", "Delete SimpleName: List(2853)", "Delete SimpleType: List(2854)", "Delete SimpleName: String(2855)", "Delete SimpleType: String(2856)", "Delete ParameterizedType: List<String>(2857)", "Delete SimpleName: partitions(2858)", "Delete SingleVariableDeclaration(2859)", "Delete SimpleName: Map(2860)", "Delete SimpleType: Map(2861)", "Delete SimpleName: String(2862)", "Delete SimpleType: String(2863)", "Delete SimpleName: Integer(2864)", "Delete SimpleType: Integer(2865)", "Delete ParameterizedType: Map<String,Integer>(2866)", "Delete SimpleName: stateCountMap(2867)", "Delete SingleVariableDeclaration(2868)", "Delete SimpleName: Map(2869)", "Delete SimpleType: Map(2870)", "Delete SimpleName: String(2871)", "Delete SimpleType: String(2872)", "Delete SimpleName: Map(2873)", "Delete SimpleType: Map(2874)", "Delete SimpleName: String(2875)", "Delete SimpleType: String(2876)", "Delete SimpleName: String(2877)", "Delete SimpleType: String(2878)", "Delete ParameterizedType: Map<String,String>(2879)", "Delete ParameterizedType: Map<String,Map<String,String>>(2880)", "Delete SimpleName: map(2881)", "Delete SimpleName: HashMap(2882)", "Delete SimpleType: HashMap(2883)", "Delete SimpleName: String(2884)", "Delete SimpleType: String(2885)", "Delete SimpleName: Map(2886)", "Delete SimpleType: Map(2887)", "Delete SimpleName: String(2888)", "Delete SimpleType: String(2889)", "Delete SimpleName: String(2890)", "Delete SimpleType: String(2891)", "Delete ParameterizedType: Map<String,String>(2892)", "Delete ParameterizedType: HashMap<String,Map<String,String>>(2893)", "Delete ClassInstanceCreation(2894)", "Delete VariableDeclarationFragment(2895)", "Delete VariableDeclarationStatement(2896)", "Delete SimpleName: String(2897)", "Delete SimpleType: String(2898)", "Delete SimpleName: partition(2899)", "Delete SingleVariableDeclaration(2900)", "Delete SimpleName: partitions(2901)", "Delete SimpleName: Map(2902)", "Delete SimpleType: Map(2903)", "Delete SimpleName: String(2904)", "Delete SimpleType: String(2905)", "Delete SimpleName: String(2906)", "Delete SimpleType: String(2907)", "Delete ParameterizedType: Map<String,String>(2908)", "Delete SimpleName: curStateMap(2909)", "Delete SimpleName: currentStateOutput(2910)", "Delete SimpleName: getCurrentStateMap(2911)", "Delete SimpleName: resourceName(2912)", "Delete SimpleName: Partition(2913)", "Delete SimpleType: Partition(2914)", "Delete SimpleName: partition(2915)", "Delete ClassInstanceCreation(2916)", "Delete MethodInvocation(2917)", "Delete VariableDeclarationFragment(2918)", "Delete VariableDeclarationStatement(2919)", "Delete SimpleName: map(2920)", "Delete SimpleName: put(2921)", "Delete SimpleName: partition(2922)", "Delete SimpleName: HashMap(2923)", "Delete SimpleType: HashMap(2924)", "Delete SimpleName: String(2925)", "Delete SimpleType: String(2926)", "Delete SimpleName: String(2927)", "Delete SimpleType: String(2928)", "Delete ParameterizedType: HashMap<String,String>(2929)", "Delete ClassInstanceCreation(2930)", "Delete MethodInvocation(2931)", "Delete ExpressionStatement(2932)", "Delete SimpleName: String(2933)", "Delete SimpleType: String(2934)", "Delete SimpleName: node(2935)", "Delete SingleVariableDeclaration(2936)", "Delete SimpleName: curStateMap(2937)", "Delete SimpleName: keySet(2938)", "Delete MethodInvocation(2939)", "Delete SimpleName: String(2940)", "Delete SimpleType: String(2941)", "Delete SimpleName: state(2942)", "Delete SimpleName: curStateMap(2943)", "Delete SimpleName: get(2944)", "Delete SimpleName: node(2945)", "Delete MethodInvocation(2946)", "Delete VariableDeclarationFragment(2947)", "Delete VariableDeclarationStatement(2948)", "Delete SimpleName: stateCountMap(2949)", "Delete SimpleName: containsKey(2950)", "Delete SimpleName: state(2951)", "Delete MethodInvocation(2952)", "Delete SimpleName: map(2953)", "Delete SimpleName: get(2954)", "Delete SimpleName: partition(2955)", "Delete MethodInvocation(2956)", "Delete SimpleName: put(2957)", "Delete SimpleName: node(2958)", "Delete SimpleName: state(2959)", "Delete MethodInvocation(2960)", "Delete ExpressionStatement(2961)", "Delete Block(2962)", "Delete IfStatement(2963)", "Delete Block(2964)", "Delete EnhancedForStatement(2965)", "Delete SimpleName: Map(2966)", "Delete SimpleType: Map(2967)", "Delete SimpleName: String(2968)", "Delete SimpleType: String(2969)", "Delete SimpleName: String(2970)", "Delete SimpleType: String(2971)", "Delete ParameterizedType: Map<String,String>(2972)", "Delete SimpleName: pendingStateMap(2973)", "Delete SimpleName: currentStateOutput(2974)", "Delete SimpleName: getPendingStateMap(2975)", "Delete SimpleName: resourceName(2976)", "Delete SimpleName: Partition(2977)", "Delete SimpleType: Partition(2978)", "Delete SimpleName: partition(2979)", "Delete ClassInstanceCreation(2980)", "Delete MethodInvocation(2981)", "Delete VariableDeclarationFragment(2982)", "Delete VariableDeclarationStatement(2983)", "Delete SimpleName: String(2984)", "Delete SimpleType: String(2985)", "Delete SimpleName: node(2986)", "Delete SingleVariableDeclaration(2987)", "Delete SimpleName: pendingStateMap(2988)", "Delete SimpleName: keySet(2989)", "Delete MethodInvocation(2990)", "Delete SimpleName: String(2991)", "Delete SimpleType: String(2992)", "Delete SimpleName: state(2993)", "Delete SimpleName: pendingStateMap(2994)", "Delete SimpleName: get(2995)", "Delete SimpleName: node(2996)", "Delete MethodInvocation(2997)", "Delete VariableDeclarationFragment(2998)", "Delete VariableDeclarationStatement(2999)", "Delete SimpleName: stateCountMap(3000)", "Delete SimpleName: containsKey(3001)", "Delete SimpleName: state(3002)", "Delete MethodInvocation(3003)", "Delete SimpleName: map(3004)", "Delete SimpleName: get(3005)", "Delete SimpleName: partition(3006)", "Delete MethodInvocation(3007)", "Delete SimpleName: put(3008)", "Delete SimpleName: node(3009)", "Delete SimpleName: state(3010)", "Delete MethodInvocation(3011)", "Delete ExpressionStatement(3012)", "Delete Block(3013)", "Delete IfStatement(3014)", "Delete Block(3015)", "Delete EnhancedForStatement(3016)", "Delete Block(3017)", "Delete EnhancedForStatement(3018)", "Delete SimpleName: map(3019)", "Delete ReturnStatement(3020)", "Delete Block(3021)", "Delete MethodDeclaration(3022)", "Delete TypeDeclaration: class(3207)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}