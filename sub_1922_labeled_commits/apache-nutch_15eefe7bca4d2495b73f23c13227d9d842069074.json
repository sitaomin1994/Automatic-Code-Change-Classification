{"application": "apache-nutch", "csha": "15eefe7bca4d2495b73f23c13227d9d842069074", "files": [{"IndexingJob_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS Block to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 16"]}, {"root": "INS Initializer to TypeDeclaration: class at 17", "operations": ["INS Initializer to TypeDeclaration: class at 17"]}, {"root": "INS Initializer to TypeDeclaration: class at 18", "operations": ["INS Initializer to TypeDeclaration: class at 18"]}, {"root": "INS Initializer to TypeDeclaration: class at 19", "operations": ["INS Initializer to TypeDeclaration: class at 19"]}, {"root": "INS Initializer to TypeDeclaration: class at 20", "operations": ["INS Initializer to TypeDeclaration: class at 20"]}, {"root": "INS Initializer to TypeDeclaration: class at 21", "operations": ["INS Initializer to TypeDeclaration: class at 21"]}, {"root": "INS Initializer to TypeDeclaration: class at 22", "operations": ["INS Initializer to TypeDeclaration: class at 22"]}, {"root": "INS Initializer to TypeDeclaration: class at 23", "operations": ["INS Initializer to TypeDeclaration: class at 23"]}, {"root": "INS Initializer to TypeDeclaration: class at 24", "operations": ["INS Initializer to TypeDeclaration: class at 24"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 25", "INS Block to MethodDeclaration at 1", "INS SimpleName: setConf to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleName: run to MethodDeclaration at 3", "MOV SimpleType: Exception to MethodDeclaration at 6"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Initializer", "operations": ["MOV Block to Initializer at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 9", "MOV VariableDeclarationStatement to Block at 7", "MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 10", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 5", "MOV IfStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 11"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: args", "DEL SimpleName: setConf", "DEL Block", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL SimpleName: crawlDb", "DEL SimpleName: args", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL SimpleName: params", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: results", "DEL SimpleName: deleteGone", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: args", "DEL ExpressionStatement", "DEL SimpleName: put", "DEL QualifiedName: Nutch.ARG_SEGMENTDIR", "DEL SimpleName: args", "DEL SimpleName: Object", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: Map", "DEL SimpleName: args", "DEL SimpleName: Object", "DEL QualifiedName: Nutch.VAL_RESULT", "DEL StringLiteral: \"deleteGone\"", "DEL MethodInvocation", "DEL Block", "DEL IfStatement", "DEL ParameterizedType: Map<String,Object>", "DEL SimpleName: containsKey", "DEL SimpleName: args", "DEL QualifiedName: Nutch.ARG_SEGMENT", "DEL SimpleName: containsKey", "DEL SimpleName: Map", "DEL MethodInvocation", "DEL SimpleName: index", "DEL ReturnStatement", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: results", "DEL MethodInvocation", "DEL SimpleType: String", "DEL IfStatement", "DEL SimpleName: containsKey", "DEL StringLiteral: \"params\"", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \"noCommit\"", "DEL IfStatement", "DEL SimpleType: HashMap", "DEL IfStatement", "DEL ParameterizedType: HashMap<String,Object>", "DEL SimpleName: linkdb", "DEL SimpleName: filter", "DEL SimpleName: String", "DEL IfStatement", "DEL StringLiteral: \"filter\"", "DEL SimpleName: conf", "DEL IfStatement", "DEL SimpleName: noCommit", "DEL NumberLiteral: 0", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: HashMap", "DEL SimpleName: containsKey", "DEL SimpleName: containsKey", "DEL SimpleName: args", "DEL SimpleName: normalize", "DEL SimpleName: results", "DEL SimpleName: args", "DEL SimpleName: segments", "DEL SimpleName: containsKey", "DEL SimpleName: isSegment", "DEL StringLiteral: \"normalize\"", "DEL QualifiedName: Nutch.ARG_LINKDB"]}]}}, {"IndexingJob_diff": {"operations": ["Insert MethodDeclaration(1223) into TypeDeclaration: class(1508) at 16", "Insert Initializer(1321) into TypeDeclaration: class(1508) at 17", "Insert Initializer(1381) into TypeDeclaration: class(1508) at 18", "Insert Initializer(1468) into TypeDeclaration: class(1508) at 19", "Insert Initializer(1474) into TypeDeclaration: class(1508) at 20", "Insert Initializer(1480) into TypeDeclaration: class(1508) at 21", "Insert Initializer(1486) into TypeDeclaration: class(1508) at 22", "Insert Initializer(1492) into TypeDeclaration: class(1508) at 23", "Insert Initializer(1504) into TypeDeclaration: class(1508) at 24", "Insert MethodDeclaration(1507) into TypeDeclaration: class(1508) at 25", "Move MarkerAnnotation(1038) into MethodDeclaration(1223) at 0", "Move Modifier: public(1039) into MethodDeclaration(1223) at 1", "Move ParameterizedType: Map<String,Object>(1046) into MethodDeclaration(1223) at 2", "Move SimpleName: run(1047) into MethodDeclaration(1223) at 3", "Move SingleVariableDeclaration(1056) into MethodDeclaration(1223) at 4", "Move SingleVariableDeclaration(1060) into MethodDeclaration(1223) at 5", "Move SimpleType: Exception(1062) into MethodDeclaration(1223) at 6", "Insert Block(1222) into MethodDeclaration(1223) at 7", "Move Block(1328) into Initializer(1321) at 0", "Move Block(1392) into Initializer(1381) at 0", "Move Block(1481) into Initializer(1468) at 0", "Move Block(1491) into Initializer(1474) at 0", "Move Block(1501) into Initializer(1480) at 0", "Move Block(1511) into Initializer(1486) at 0", "Move Block(1521) into Initializer(1492) at 0", "Move Block(1537) into Initializer(1504) at 0", "Insert SimpleName: setConf(1505) into MethodDeclaration(1507) at 0", "Insert Block(1506) into MethodDeclaration(1507) at 1", "Move VariableDeclarationStatement(1067) into Block(1222) at 0", "Move VariableDeclarationStatement(1072) into Block(1222) at 1", "Move VariableDeclarationStatement(1077) into Block(1222) at 2", "Move VariableDeclarationStatement(1082) into Block(1222) at 3", "Move VariableDeclarationStatement(1087) into Block(1222) at 4", "Move VariableDeclarationStatement(1093) into Block(1222) at 5", "Move VariableDeclarationStatement(1100) into Block(1222) at 6", "Move VariableDeclarationStatement(1105) into Block(1222) at 7", "Move IfStatement(1153) into Block(1222) at 8", "Move VariableDeclarationStatement(1159) into Block(1222) at 9", "Move VariableDeclarationStatement(1173) into Block(1222) at 10", "Move IfStatement(1225) into Block(1222) at 11", "Delete SimpleName: args(1174)", "Delete SimpleName: containsKey(1175)", "Delete QualifiedName: Nutch.ARG_LINKDB(1176)", "Delete MethodInvocation(1177)", "Delete Block(1226)", "Delete IfStatement(1227)", "Delete SimpleName: args(1228)", "Delete SimpleName: containsKey(1229)", "Delete QualifiedName: Nutch.ARG_SEGMENTDIR(1230)", "Delete MethodInvocation(1231)", "Delete IfStatement(1329)", "Delete SimpleName: args(1330)", "Delete SimpleName: containsKey(1331)", "Delete QualifiedName: Nutch.ARG_SEGMENT(1332)", "Delete MethodInvocation(1333)", "Delete IfStatement(1393)", "Delete SimpleName: isSegment(1394)", "Delete PrefixExpression: !(1395)", "Delete IfStatement(1482)", "Delete SimpleName: args(1483)", "Delete SimpleName: containsKey(1484)", "Delete StringLiteral: \"noCommit\"(1485)", "Delete MethodInvocation(1486)", "Delete IfStatement(1492)", "Delete SimpleName: args(1493)", "Delete SimpleName: containsKey(1494)", "Delete StringLiteral: \"deleteGone\"(1495)", "Delete MethodInvocation(1496)", "Delete IfStatement(1502)", "Delete SimpleName: args(1503)", "Delete SimpleName: containsKey(1504)", "Delete StringLiteral: \"normalize\"(1505)", "Delete MethodInvocation(1506)", "Delete IfStatement(1512)", "Delete SimpleName: args(1513)", "Delete SimpleName: containsKey(1514)", "Delete StringLiteral: \"filter\"(1515)", "Delete MethodInvocation(1516)", "Delete IfStatement(1522)", "Delete SimpleName: args(1523)", "Delete SimpleName: containsKey(1524)", "Delete StringLiteral: \"params\"(1525)", "Delete MethodInvocation(1526)", "Delete IfStatement(1538)", "Delete SimpleName: setConf(1539)", "Delete SimpleName: conf(1540)", "Delete MethodInvocation(1541)", "Delete ExpressionStatement(1542)", "Delete SimpleName: index(1543)", "Delete SimpleName: crawlDb(1544)", "Delete SimpleName: linkdb(1545)", "Delete SimpleName: segments(1546)", "Delete SimpleName: noCommit(1547)", "Delete SimpleName: deleteGone(1548)", "Delete SimpleName: params(1549)", "Delete SimpleName: filter(1550)", "Delete SimpleName: normalize(1551)", "Delete MethodInvocation(1552)", "Delete ExpressionStatement(1553)", "Delete SimpleName: Map(1554)", "Delete SimpleType: Map(1555)", "Delete SimpleName: String(1556)", "Delete SimpleType: String(1557)", "Delete SimpleName: Object(1558)", "Delete SimpleType: Object(1559)", "Delete ParameterizedType: Map<String,Object>(1560)", "Delete SimpleName: results(1561)", "Delete SimpleName: HashMap(1562)", "Delete SimpleType: HashMap(1563)", "Delete SimpleName: String(1564)", "Delete SimpleType: String(1565)", "Delete SimpleName: Object(1566)", "Delete SimpleType: Object(1567)", "Delete ParameterizedType: HashMap<String,Object>(1568)", "Delete ClassInstanceCreation(1569)", "Delete VariableDeclarationFragment(1570)", "Delete VariableDeclarationStatement(1571)", "Delete SimpleName: results(1572)", "Delete SimpleName: put(1573)", "Delete QualifiedName: Nutch.VAL_RESULT(1574)", "Delete NumberLiteral: 0(1575)", "Delete MethodInvocation(1576)", "Delete ExpressionStatement(1577)", "Delete SimpleName: results(1578)", "Delete ReturnStatement(1579)", "Delete Block(1580)", "Delete MethodDeclaration(1581)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}