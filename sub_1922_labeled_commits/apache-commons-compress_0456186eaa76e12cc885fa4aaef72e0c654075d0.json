{"application": "apache-commons-compress", "csha": "0456186eaa76e12cc885fa4aaef72e0c654075d0", "files": [{"ArArchiveInputStream_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.EOFException to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 22", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: BSD_LONGNAME_PREFIX to VariableDeclarationFragment at 0", "INS StringLiteral: \"#1/\" to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 22", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 23", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: BSD_LONGNAME_PREFIX to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: length to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 23", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: BSD_LONGNAME_PREFIX_LEN to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: BSD_LONGNAME_PREFIX_LEN to InfixExpression: > at 1", "INS TextElement: tation of the length of the file name is placed in to TagElement at 9", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: this field.\tThe actual file name is stored immedi- to TagElement at 10", "INS TextElement: Does the name look like it is a long name (or a name containing to TagElement at 0", "INS TextElement: archive member follows the file name.  The ar_size to TagElement at 12", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: BSD_LONGNAME_PREFIX to MethodInvocation at 2", "INS Block to MethodDeclaration at 6", "INS TextElement: BSD   In the BSD variant, names that are shorter than 16 to TagElement at 4", "INS TextElement: ately after the archive header.  The content of the to TagElement at 11", "INS Modifier: static to MethodDeclaration at 2", "INS PrimitiveType: boolean to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: the string \"#1/\" followed by the decimal represen- to TagElement at 8", "INS TextElement: directly in this field.  If a name has an embedded to TagElement at 6", "INS TagElement to Javadoc at 0", "INS TextElement: sum of the size of the file name and the size of to TagElement at 14", "INS SimpleName: startsWith to MethodInvocation at 1", "INS TextElement: spaces) as encoded by BSD ar? to TagElement at 1", "INS Modifier: private to MethodDeclaration at 1", "INS TextElement: <pre> to TagElement at 3", "INS TextElement: field of the header (see below) will then hold the to TagElement at 13", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS TextElement: <p>From the FreeBSD ar(5) man page:</p> to TagElement at 2", "INS SimpleName: name to MethodInvocation at 0", "INS TextElement: the member. to TagElement at 15", "INS InfixExpression: && to ReturnStatement at 0", "INS TagElement: @since to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: characters and without embedded spaces are stored to TagElement at 5", "INS TextElement:  Apache Commons Compress 1.3 to TagElement: @since at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS InfixExpression: > to InfixExpression: && at 1", "INS TextElement: space, or if it is longer than 16 characters, then to TagElement at 7", "INS SimpleName: isBSDLongName to MethodDeclaration at 4", "INS TextElement: </pre> to TagElement at 16", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS ArrayType: byte[] to ArrayCreation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BreakStatement to Block at 0", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: readNow to VariableDeclarationFragment at 0", "INS SimpleName: name to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: nameLen to InfixExpression: != at 1", "INS SimpleName: read to InfixExpression: - at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: count to MethodInvocation at 0", "INS Block to WhileStatement at 1", "INS Block to IfStatement at 1", "INS ThrowStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS WhileStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parseInt to MethodInvocation at 1", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: input to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS TagElement: @see to Javadoc at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: EOFException to ClassInstanceCreation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: bsdLongName to MethodInvocation at 0", "INS SimpleName: bsdLongName to SingleVariableDeclaration at 1", "INS SimpleName: name to MethodInvocation at 2", "INS Dimension to ArrayType: byte[] at 1", "INS Block to IfStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: read to MethodInvocation at 3", "INS SimpleName: BSD_LONGNAME_PREFIX_LEN to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 5", "INS IfStatement to Block at 2", "INS SimpleName: read to Assignment: += at 0", "INS SimpleName: readNow to Assignment: += at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: nameLen to InfixExpression: == at 1", "INS InfixExpression: >= to WhileStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: nameLen to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: read to InfixExpression: != at 0", "INS SimpleName: read to MethodInvocation at 1", "INS MemberRef to TagElement: @see at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: toAsciiString to MethodInvocation at 1", "INS TextElement: Reads the real name from the current stream assuming the very to TagElement at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: nameLen to ArrayCreation at 1", "INS SimpleName: EOFException to SimpleType: EOFException at 0", "INS VariableDeclarationStatement to Block at 2", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: isBSDLongName to MemberRef at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: getBSDLongName to MethodDeclaration at 3", "INS TextElement: first bytes to be read are the real file name. to TagElement at 1", "INS SimpleName: read to InfixExpression: == at 0", "INS Assignment: = to ParenthesizedExpression at 0", "INS SimpleName: readNow to Assignment: = at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: read to VariableDeclarationFragment at 0", "INS SimpleName: ArchiveUtils to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS IfStatement to Block at 4", "INS SimpleName: substring to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: nameLen to InfixExpression: - at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: name to VariableDeclarationFragment at 0", "INS InfixExpression: - to MethodInvocation at 4", "INS InfixExpression: != to IfStatement at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: readNow to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: >= at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 19", "operations": ["INS VariableDeclarationStatement to Block at 19", "INS SimpleName: len to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS SimpleName: len to ClassInstanceCreation at 2", "operations": ["INS SimpleName: len to ClassInstanceCreation at 2"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: temp to MethodInvocation at 1", "INS SimpleName: isBSDLongName to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: -= to ExpressionStatement at 0", "INS SimpleName: nameLen to VariableDeclarationFragment at 0", "INS SimpleName: getBSDLongName to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: entryOffset to Assignment: += at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: nameLen to Assignment: += at 1", "INS SimpleName: temp to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: nameLen to Assignment: -= at 1", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: temp to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: temp to MethodInvocation at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: len to Assignment: -= at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}]}}, {"ArArchiveInputStream_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1173) at 1", "Insert QualifiedName: java.io.EOFException(2) into ImportDeclaration(3) at 0", "Insert FieldDeclaration(1027) into TypeDeclaration: class(1172) at 22", "Insert FieldDeclaration(1037) into TypeDeclaration: class(1172) at 23", "Insert MethodDeclaration(1079) into TypeDeclaration: class(1172) at 24", "Insert MethodDeclaration(1171) into TypeDeclaration: class(1172) at 25", "Insert Modifier: private(1019) into FieldDeclaration(1027) at 0", "Insert Modifier: static(1020) into FieldDeclaration(1027) at 1", "Insert Modifier: final(1021) into FieldDeclaration(1027) at 2", "Insert SimpleType: String(1023) into FieldDeclaration(1027) at 3", "Insert VariableDeclarationFragment(1026) into FieldDeclaration(1027) at 4", "Insert Modifier: private(1028) into FieldDeclaration(1037) at 0", "Insert Modifier: static(1029) into FieldDeclaration(1037) at 1", "Insert Modifier: final(1030) into FieldDeclaration(1037) at 2", "Insert PrimitiveType: int(1031) into FieldDeclaration(1037) at 3", "Insert VariableDeclarationFragment(1036) into FieldDeclaration(1037) at 4", "Insert Javadoc(1058) into MethodDeclaration(1079) at 0", "Insert Modifier: private(1059) into MethodDeclaration(1079) at 1", "Insert Modifier: static(1060) into MethodDeclaration(1079) at 2", "Insert PrimitiveType: boolean(1061) into MethodDeclaration(1079) at 3", "Insert SimpleName: isBSDLongName(1062) into MethodDeclaration(1079) at 4", "Insert SingleVariableDeclaration(1066) into MethodDeclaration(1079) at 5", "Insert Block(1078) into MethodDeclaration(1079) at 6", "Insert Javadoc(1086) into MethodDeclaration(1171) at 0", "Insert Modifier: private(1087) into MethodDeclaration(1171) at 1", "Insert SimpleType: String(1089) into MethodDeclaration(1171) at 2", "Insert SimpleName: getBSDLongName(1090) into MethodDeclaration(1171) at 3", "Insert SingleVariableDeclaration(1094) into MethodDeclaration(1171) at 4", "Insert SimpleType: IOException(1096) into MethodDeclaration(1171) at 5", "Insert Block(1170) into MethodDeclaration(1171) at 6", "Insert VariableDeclarationStatement(431) into Block(579) at 19", "Insert SimpleName: String(1022) into SimpleType: String(1023) at 0", "Insert SimpleName: BSD_LONGNAME_PREFIX(1024) into VariableDeclarationFragment(1026) at 0", "Insert StringLiteral: \"#1/\"(1025) into VariableDeclarationFragment(1026) at 1", "Insert SimpleName: BSD_LONGNAME_PREFIX_LEN(1032) into VariableDeclarationFragment(1036) at 0", "Insert MethodInvocation(1035) into VariableDeclarationFragment(1036) at 1", "Insert TagElement(1055) into Javadoc(1058) at 0", "Insert TagElement: @since(1057) into Javadoc(1058) at 1", "Insert SimpleType: String(1064) into SingleVariableDeclaration(1066) at 0", "Insert SimpleName: name(1065) into SingleVariableDeclaration(1066) at 1", "Insert ReturnStatement(1077) into Block(1078) at 0", "Insert TagElement(1082) into Javadoc(1086) at 0", "Insert TagElement: @see(1085) into Javadoc(1086) at 1", "Insert SimpleName: String(1088) into SimpleType: String(1089) at 0", "Insert SimpleType: String(1092) into SingleVariableDeclaration(1094) at 0", "Insert SimpleName: bsdLongName(1093) into SingleVariableDeclaration(1094) at 1", "Insert SimpleName: IOException(1095) into SimpleType: IOException(1096) at 0", "Insert VariableDeclarationStatement(1107) into Block(1170) at 0", "Insert VariableDeclarationStatement(1118) into Block(1170) at 1", "Insert VariableDeclarationStatement(1126) into Block(1170) at 2", "Insert WhileStatement(1155) into Block(1170) at 3", "Insert IfStatement(1164) into Block(1170) at 4", "Insert ReturnStatement(1169) into Block(1170) at 5", "Insert PrimitiveType: long(425) into VariableDeclarationStatement(431) at 0", "Insert VariableDeclarationFragment(430) into VariableDeclarationStatement(431) at 1", "Insert SimpleName: BSD_LONGNAME_PREFIX(1033) into MethodInvocation(1035) at 0", "Insert SimpleName: length(1034) into MethodInvocation(1035) at 1", "Insert TextElement: Does the name look like it is a long name (or a name containing(1038) into TagElement(1055) at 0", "Insert TextElement: spaces) as encoded by BSD ar?(1039) into TagElement(1055) at 1", "Insert TextElement: <p>From the FreeBSD ar(5) man page:</p>(1040) into TagElement(1055) at 2", "Insert TextElement: <pre>(1041) into TagElement(1055) at 3", "Insert TextElement: BSD   In the BSD variant, names that are shorter than 16(1042) into TagElement(1055) at 4", "Insert TextElement: characters and without embedded spaces are stored(1043) into TagElement(1055) at 5", "Insert TextElement: directly in this field.  If a name has an embedded(1044) into TagElement(1055) at 6", "Insert TextElement: space, or if it is longer than 16 characters, then(1045) into TagElement(1055) at 7", "Insert TextElement: the string \"#1/\" followed by the decimal represen-(1046) into TagElement(1055) at 8", "Insert TextElement: tation of the length of the file name is placed in(1047) into TagElement(1055) at 9", "Insert TextElement: this field.\tThe actual file name is stored immedi-(1048) into TagElement(1055) at 10", "Insert TextElement: ately after the archive header.  The content of the(1049) into TagElement(1055) at 11", "Insert TextElement: archive member follows the file name.  The ar_size(1050) into TagElement(1055) at 12", "Insert TextElement: field of the header (see below) will then hold the(1051) into TagElement(1055) at 13", "Insert TextElement: sum of the size of the file name and the size of(1052) into TagElement(1055) at 14", "Insert TextElement: the member.(1053) into TagElement(1055) at 15", "Insert TextElement: </pre>(1054) into TagElement(1055) at 16", "Insert TextElement:  Apache Commons Compress 1.3(1056) into TagElement: @since(1057) at 0", "Insert SimpleName: String(1063) into SimpleType: String(1064) at 0", "Insert InfixExpression: &&(1076) into ReturnStatement(1077) at 0", "Insert TextElement: Reads the real name from the current stream assuming the very(1080) into TagElement(1082) at 0", "Insert TextElement: first bytes to be read are the real file name.(1081) into TagElement(1082) at 1", "Insert MemberRef(1084) into TagElement: @see(1085) at 0", "Insert SimpleName: String(1091) into SimpleType: String(1092) at 0", "Insert PrimitiveType: int(1097) into VariableDeclarationStatement(1107) at 0", "Insert VariableDeclarationFragment(1106) into VariableDeclarationStatement(1107) at 1", "Insert ArrayType: byte[](1110) into VariableDeclarationStatement(1118) at 0", "Insert VariableDeclarationFragment(1117) into VariableDeclarationStatement(1118) at 1", "Insert PrimitiveType: int(1119) into VariableDeclarationStatement(1126) at 0", "Insert VariableDeclarationFragment(1122) into VariableDeclarationStatement(1126) at 1", "Insert VariableDeclarationFragment(1125) into VariableDeclarationStatement(1126) at 2", "Insert InfixExpression: >=(1139) into WhileStatement(1155) at 0", "Insert Block(1154) into WhileStatement(1155) at 1", "Insert InfixExpression: !=(1158) into IfStatement(1164) at 0", "Insert Block(1163) into IfStatement(1164) at 1", "Insert MethodInvocation(1168) into ReturnStatement(1169) at 0", "Insert SimpleName: len(426) into VariableDeclarationFragment(430) at 0", "Move MethodInvocation(525) into VariableDeclarationFragment(430) at 1", "Insert IfStatement(551) into IfStatement(552) at 2", "Insert MethodInvocation(1070) into InfixExpression: &&(1076) at 0", "Insert InfixExpression: >(1075) into InfixExpression: &&(1076) at 1", "Insert SimpleName: isBSDLongName(1083) into MemberRef(1084) at 0", "Insert SimpleName: nameLen(1098) into VariableDeclarationFragment(1106) at 0", "Insert MethodInvocation(1105) into VariableDeclarationFragment(1106) at 1", "Insert PrimitiveType: byte(1108) into ArrayType: byte[](1110) at 0", "Insert Dimension(1109) into ArrayType: byte[](1110) at 1", "Insert SimpleName: name(1111) into VariableDeclarationFragment(1117) at 0", "Insert ArrayCreation(1116) into VariableDeclarationFragment(1117) at 1", "Insert SimpleName: read(1120) into VariableDeclarationFragment(1122) at 0", "Insert NumberLiteral: 0(1121) into VariableDeclarationFragment(1122) at 1", "Insert SimpleName: readNow(1123) into VariableDeclarationFragment(1125) at 0", "Insert NumberLiteral: 0(1124) into VariableDeclarationFragment(1125) at 1", "Insert ParenthesizedExpression(1137) into InfixExpression: >=(1139) at 0", "Insert NumberLiteral: 0(1138) into InfixExpression: >=(1139) at 1", "Insert ExpressionStatement(1143) into Block(1154) at 0", "Insert ExpressionStatement(1147) into Block(1154) at 1", "Insert IfStatement(1153) into Block(1154) at 2", "Insert SimpleName: read(1156) into InfixExpression: !=(1158) at 0", "Insert SimpleName: nameLen(1157) into InfixExpression: !=(1158) at 1", "Insert ThrowStatement(1162) into Block(1163) at 0", "Insert SimpleName: ArchiveUtils(1165) into MethodInvocation(1168) at 0", "Insert SimpleName: toAsciiString(1166) into MethodInvocation(1168) at 1", "Insert SimpleName: name(1167) into MethodInvocation(1168) at 2", "Move MethodInvocation(497) into IfStatement(551) at 0", "Move Block(515) into IfStatement(551) at 1", "Move IfStatement(516) into IfStatement(551) at 2", "Insert SimpleName: len(558) into ClassInstanceCreation(574) at 2", "Insert SimpleName: name(1067) into MethodInvocation(1070) at 0", "Insert SimpleName: startsWith(1068) into MethodInvocation(1070) at 1", "Insert SimpleName: BSD_LONGNAME_PREFIX(1069) into MethodInvocation(1070) at 2", "Insert MethodInvocation(1073) into InfixExpression: >(1075) at 0", "Insert SimpleName: BSD_LONGNAME_PREFIX_LEN(1074) into InfixExpression: >(1075) at 1", "Insert SimpleName: Integer(1099) into MethodInvocation(1105) at 0", "Insert SimpleName: parseInt(1100) into MethodInvocation(1105) at 1", "Insert MethodInvocation(1104) into MethodInvocation(1105) at 2", "Insert ArrayType: byte[](1114) into ArrayCreation(1116) at 0", "Insert SimpleName: nameLen(1115) into ArrayCreation(1116) at 1", "Insert Assignment: =(1136) into ParenthesizedExpression(1137) at 0", "Insert Assignment: +=(1142) into ExpressionStatement(1143) at 0", "Insert MethodInvocation(1146) into ExpressionStatement(1147) at 0", "Insert InfixExpression: ==(1150) into IfStatement(1153) at 0", "Insert Block(1152) into IfStatement(1153) at 1", "Insert ClassInstanceCreation(1161) into ThrowStatement(1162) at 0", "Insert MethodInvocation(527) into IfStatement(550) at 0", "Insert Block(549) into IfStatement(550) at 1", "Insert SimpleName: name(1071) into MethodInvocation(1073) at 0", "Insert SimpleName: length(1072) into MethodInvocation(1073) at 1", "Insert SimpleName: bsdLongName(1101) into MethodInvocation(1104) at 0", "Insert SimpleName: substring(1102) into MethodInvocation(1104) at 1", "Insert SimpleName: BSD_LONGNAME_PREFIX_LEN(1103) into MethodInvocation(1104) at 2", "Insert PrimitiveType: byte(1112) into ArrayType: byte[](1114) at 0", "Insert Dimension(1113) into ArrayType: byte[](1114) at 1", "Insert SimpleName: readNow(1127) into Assignment: =(1136) at 0", "Insert MethodInvocation(1135) into Assignment: =(1136) at 1", "Insert SimpleName: read(1140) into Assignment: +=(1142) at 0", "Insert SimpleName: readNow(1141) into Assignment: +=(1142) at 1", "Insert SimpleName: count(1144) into MethodInvocation(1146) at 0", "Insert SimpleName: readNow(1145) into MethodInvocation(1146) at 1", "Insert SimpleName: read(1148) into InfixExpression: ==(1150) at 0", "Insert SimpleName: nameLen(1149) into InfixExpression: ==(1150) at 1", "Insert BreakStatement(1151) into Block(1152) at 0", "Insert SimpleType: EOFException(1160) into ClassInstanceCreation(1161) at 0", "Insert SimpleName: isBSDLongName(525) into MethodInvocation(527) at 0", "Insert SimpleName: temp(526) into MethodInvocation(527) at 1", "Insert ExpressionStatement(533) into Block(549) at 0", "Insert VariableDeclarationStatement(540) into Block(549) at 1", "Insert ExpressionStatement(544) into Block(549) at 2", "Insert ExpressionStatement(548) into Block(549) at 3", "Insert SimpleName: input(1128) into MethodInvocation(1135) at 0", "Insert SimpleName: read(1129) into MethodInvocation(1135) at 1", "Insert SimpleName: name(1130) into MethodInvocation(1135) at 2", "Insert SimpleName: read(1131) into MethodInvocation(1135) at 3", "Insert InfixExpression: -(1134) into MethodInvocation(1135) at 4", "Insert SimpleName: EOFException(1159) into SimpleType: EOFException(1160) at 0", "Insert Assignment: =(532) into ExpressionStatement(533) at 0", "Insert PrimitiveType: int(534) into VariableDeclarationStatement(540) at 0", "Insert VariableDeclarationFragment(539) into VariableDeclarationStatement(540) at 1", "Insert Assignment: -=(543) into ExpressionStatement(544) at 0", "Insert Assignment: +=(547) into ExpressionStatement(548) at 0", "Insert SimpleName: nameLen(1132) into InfixExpression: -(1134) at 0", "Insert SimpleName: read(1133) into InfixExpression: -(1134) at 1", "Insert SimpleName: temp(528) into Assignment: =(532) at 0", "Insert MethodInvocation(531) into Assignment: =(532) at 1", "Insert SimpleName: nameLen(535) into VariableDeclarationFragment(539) at 0", "Insert MethodInvocation(538) into VariableDeclarationFragment(539) at 1", "Insert SimpleName: len(541) into Assignment: -=(543) at 0", "Insert SimpleName: nameLen(542) into Assignment: -=(543) at 1", "Insert SimpleName: entryOffset(545) into Assignment: +=(547) at 0", "Insert SimpleName: nameLen(546) into Assignment: +=(547) at 1", "Insert SimpleName: getBSDLongName(529) into MethodInvocation(531) at 0", "Insert SimpleName: temp(530) into MethodInvocation(531) at 1", "Insert SimpleName: temp(536) into MethodInvocation(538) at 0", "Insert SimpleName: length(537) into MethodInvocation(538) at 1"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}