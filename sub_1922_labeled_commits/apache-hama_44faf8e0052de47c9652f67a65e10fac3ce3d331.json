{"application": "apache-hama", "csha": "44faf8e0052de47c9652f67a65e10fac3ce3d331", "files": [{"AbstractVector_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: Vector to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS IfStatement to Block at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS StringLiteral: \" != \" to InfixExpression: + at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: v2 to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS TagElement to Javadoc at 0", "INS SimpleType: IndexOutOfBoundsException to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: IndexOutOfBoundsException to SimpleType: IndexOutOfBoundsException at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: checkComformantSize to MethodDeclaration at 3", "INS SimpleName: v2 to SingleVariableDeclaration at 1", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: Vector to SimpleType: Vector at 0", "INS MethodInvocation to InfixExpression: != at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: size to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS TextElement: Checks for conformant sizes to TagElement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS StringLiteral: \")\" to InfixExpression: + at 4", "INS MethodInvocation to InfixExpression: != at 0", "INS StringLiteral: \"v1.size != v2.size (\" to InfixExpression: + at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: v2 to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9"]}]}}, {"AbstractVector_diff": {"operations": ["Insert MethodDeclaration(228) into TypeDeclaration: class(243) at 9", "Insert Javadoc(196) into MethodDeclaration(228) at 0", "Insert Modifier: protected(197) into MethodDeclaration(228) at 1", "Insert PrimitiveType: void(198) into MethodDeclaration(228) at 2", "Insert SimpleName: checkComformantSize(199) into MethodDeclaration(228) at 3", "Insert SingleVariableDeclaration(203) into MethodDeclaration(228) at 4", "Insert Block(227) into MethodDeclaration(228) at 5", "Insert TagElement(195) into Javadoc(196) at 0", "Insert SimpleType: Vector(201) into SingleVariableDeclaration(203) at 0", "Insert SimpleName: v2(202) into SingleVariableDeclaration(203) at 1", "Insert IfStatement(226) into Block(227) at 0", "Insert TextElement: Checks for conformant sizes(194) into TagElement(195) at 0", "Insert SimpleName: Vector(200) into SimpleType: Vector(201) at 0", "Insert InfixExpression: !=(210) into IfStatement(226) at 0", "Insert Block(225) into IfStatement(226) at 1", "Insert MethodInvocation(206) into InfixExpression: !=(210) at 0", "Insert MethodInvocation(209) into InfixExpression: !=(210) at 1", "Insert ThrowStatement(224) into Block(225) at 0", "Insert ThisExpression(204) into MethodInvocation(206) at 0", "Insert SimpleName: size(205) into MethodInvocation(206) at 1", "Insert SimpleName: v2(207) into MethodInvocation(209) at 0", "Insert SimpleName: size(208) into MethodInvocation(209) at 1", "Insert ClassInstanceCreation(223) into ThrowStatement(224) at 0", "Insert SimpleType: IndexOutOfBoundsException(212) into ClassInstanceCreation(223) at 0", "Insert InfixExpression: +(222) into ClassInstanceCreation(223) at 1", "Insert SimpleName: IndexOutOfBoundsException(211) into SimpleType: IndexOutOfBoundsException(212) at 0", "Insert StringLiteral: \"v1.size != v2.size (\"(213) into InfixExpression: +(222) at 0", "Insert MethodInvocation(216) into InfixExpression: +(222) at 1", "Insert StringLiteral: \" != \"(217) into InfixExpression: +(222) at 2", "Insert MethodInvocation(220) into InfixExpression: +(222) at 3", "Insert StringLiteral: \")\"(221) into InfixExpression: +(222) at 4", "Insert ThisExpression(214) into MethodInvocation(216) at 0", "Insert SimpleName: size(215) into MethodInvocation(216) at 1", "Insert SimpleName: v2(218) into MethodInvocation(220) at 0", "Insert SimpleName: size(219) into MethodInvocation(220) at 1"]}}, {"DenseVector_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 12"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: set to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: v to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: set to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS NumberLiteral: 1 to MethodInvocation at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: DenseVector to MethodDeclaration at 2"]}, {"root": "INS SimpleType: Vector to MethodDeclaration at 1", "operations": ["INS SimpleType: Vector to MethodDeclaration at 1", "INS SimpleName: Vector to SimpleType: Vector at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: alpha to SingleVariableDeclaration at 1", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS SimpleType: Vector to SingleVariableDeclaration at 0", "INS SimpleName: Vector to SimpleType: Vector at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IntWritable to SimpleType: IntWritable at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS VariableDeclarationStatement to Block at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ReturnStatement to Block at 4", "INS Block to EnhancedForStatement at 2", "INS SimpleName: key to MethodInvocation at 2", "INS ExpressionStatement to IfStatement at 1", "INS ThisExpression to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: * at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS ThisExpression to ReturnStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: set to MethodInvocation at 1", "INS InfixExpression: * to MethodInvocation at 3", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<Writable,Writable> at 0", "INS SimpleName: key to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: set to MethodInvocation at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: zeroFill to IfStatement at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to IfStatement at 2", "INS IfStatement to Block at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: key to VariableDeclarationFragment at 0", "INS SimpleName: alpha to InfixExpression: * at 0", "INS ThisExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleType: Writable to ParameterizedType: Map.Entry<Writable,Writable> at 2", "INS ParameterizedType: Map.Entry<Writable,Writable> to SingleVariableDeclaration at 0", "INS SimpleName: checkComformantSize to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS IfStatement to Block at 1", "INS SimpleName: alpha to InfixExpression: == at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS ExpressionStatement to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Writable to ParameterizedType: Map.Entry<Writable,Writable> at 1", "INS EnhancedForStatement to Block at 3", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: IntWritable to CastExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleType: DoubleEntry to CastExpression at 0", "INS SimpleName: zeroFill to VariableDeclarationFragment at 0", "INS SimpleName: zeroFill to Assignment: = at 0", "INS SimpleName: v to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: checkComformantSize to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: v to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: v2 to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: v to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkComformantSize to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from size to checkComformantSize", "operations": ["UPD SimpleName: size from size to checkComformantSize"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: size to MethodInvocation at 0"]}, {"root": "UPDATE from DenseVector to DoubleEntry", "operations": ["UPD SimpleName: DenseVector from DenseVector to DoubleEntry"]}, {"root": "MOVE from SimpleType: DoubleEntry", "operations": ["MOV SimpleName: DenseVector to SimpleType: DoubleEntry at 0"]}, {"root": "DEL Block", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: DenseVector", "DEL ReturnStatement", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: DenseVector", "DEL CastExpression", "DEL IfStatement", "DEL FieldAccess", "DEL SimpleType: DenseVector", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: trunk", "DEL SimpleName: v2", "DEL SimpleName: entries", "DEL QualifiedName: trunk.entries", "DEL ThisExpression", "DEL ThisExpression", "DEL InfixExpression: ==", "DEL SimpleName: DenseVector", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleType: DenseVector"]}]}}, {"DenseVector_diff": {"operations": ["Move MethodDeclaration(151) into TypeDeclaration: class(1057) at 12", "Insert MethodDeclaration(199) into TypeDeclaration: class(1057) at 11", "Move Javadoc(134) into MethodDeclaration(199) at 0", "Insert Modifier: public(182) into MethodDeclaration(199) at 1", "Move SimpleType: DenseVector(137) into MethodDeclaration(199) at 2", "Insert SimpleName: set(185) into MethodDeclaration(199) at 3", "Move SingleVariableDeclaration(142) into MethodDeclaration(199) at 4", "Insert Block(198) into MethodDeclaration(199) at 5", "Insert SimpleType: Vector(202) into MethodDeclaration(284) at 1", "Insert SingleVariableDeclaration(206) into MethodDeclaration(284) at 3", "Insert SingleVariableDeclaration(210) into MethodDeclaration(284) at 4", "Insert Block(283) into MethodDeclaration(284) at 5", "Insert ExpressionStatement(195) into Block(198) at 0", "Move ReturnStatement(433) into Block(198) at 1", "Insert SimpleName: Vector(201) into SimpleType: Vector(202) at 0", "Insert PrimitiveType: double(204) into SingleVariableDeclaration(206) at 0", "Insert SimpleName: alpha(205) into SingleVariableDeclaration(206) at 1", "Insert SimpleType: Vector(208) into SingleVariableDeclaration(210) at 0", "Insert SimpleName: v(209) into SingleVariableDeclaration(210) at 1", "Insert ExpressionStatement(214) into Block(283) at 0", "Insert VariableDeclarationStatement(219) into Block(283) at 1", "Insert IfStatement(227) into Block(283) at 2", "Insert EnhancedForStatement(280) into Block(283) at 3", "Insert ReturnStatement(282) into Block(283) at 4", "Insert ExpressionStatement(436) into Block(485) at 0", "Insert ExpressionStatement(505) into Block(546) at 0", "Insert ExpressionStatement(565) into Block(632) at 0", "Insert MethodInvocation(194) into ExpressionStatement(195) at 0", "Insert SimpleName: Vector(207) into SimpleType: Vector(208) at 0", "Insert MethodInvocation(213) into ExpressionStatement(214) at 0", "Insert PrimitiveType: boolean(215) into VariableDeclarationStatement(219) at 0", "Insert VariableDeclarationFragment(218) into VariableDeclarationStatement(219) at 1", "Insert InfixExpression: ==(222) into IfStatement(227) at 0", "Insert ExpressionStatement(226) into IfStatement(227) at 1", "Insert SingleVariableDeclaration(236) into EnhancedForStatement(280) at 0", "Insert MethodInvocation(241) into EnhancedForStatement(280) at 1", "Insert Block(279) into EnhancedForStatement(280) at 2", "Insert ThisExpression(281) into ReturnStatement(282) at 0", "Insert MethodInvocation(435) into ExpressionStatement(436) at 0", "Insert MethodInvocation(504) into ExpressionStatement(505) at 0", "Insert MethodInvocation(564) into ExpressionStatement(565) at 0", "Insert ThisExpression(190) into MethodInvocation(194) at 0", "Insert SimpleName: set(191) into MethodInvocation(194) at 1", "Insert NumberLiteral: 1(192) into MethodInvocation(194) at 2", "Insert SimpleName: v(193) into MethodInvocation(194) at 3", "Insert SimpleName: checkComformantSize(211) into MethodInvocation(213) at 0", "Insert SimpleName: v(212) into MethodInvocation(213) at 1", "Insert SimpleName: zeroFill(216) into VariableDeclarationFragment(218) at 0", "Insert BooleanLiteral: false(217) into VariableDeclarationFragment(218) at 1", "Insert SimpleName: alpha(220) into InfixExpression: ==(222) at 0", "Insert NumberLiteral: 0(221) into InfixExpression: ==(222) at 1", "Insert Assignment: =(225) into ExpressionStatement(226) at 0", "Insert ParameterizedType: Map.Entry<Writable,Writable>(234) into SingleVariableDeclaration(236) at 0", "Insert SimpleName: e(235) into SingleVariableDeclaration(236) at 1", "Move MethodInvocation(147) into MethodInvocation(241) at 0", "Insert SimpleName: entrySet(240) into MethodInvocation(241) at 1", "Insert VariableDeclarationStatement(254) into Block(279) at 0", "Insert IfStatement(278) into Block(279) at 1", "Insert SimpleName: checkComformantSize(433) into MethodInvocation(435) at 0", "Insert SimpleName: v(434) into MethodInvocation(435) at 1", "Update SimpleName: size(413) to checkComformantSize", "Move SimpleName: size(413) into MethodInvocation(504) at 0", "Insert SimpleName: v2(503) into MethodInvocation(504) at 1", "Insert SimpleName: checkComformantSize(562) into MethodInvocation(564) at 0", "Insert SimpleName: v(563) into MethodInvocation(564) at 1", "Insert SimpleName: zeroFill(223) into Assignment: =(225) at 0", "Insert BooleanLiteral: true(224) into Assignment: =(225) at 1", "Insert SimpleType: Map.Entry(229) into ParameterizedType: Map.Entry<Writable,Writable>(234) at 0", "Insert SimpleType: Writable(231) into ParameterizedType: Map.Entry<Writable,Writable>(234) at 1", "Insert SimpleType: Writable(233) into ParameterizedType: Map.Entry<Writable,Writable>(234) at 2", "Insert PrimitiveType: int(242) into VariableDeclarationStatement(254) at 0", "Insert VariableDeclarationFragment(253) into VariableDeclarationStatement(254) at 1", "Insert SimpleName: zeroFill(255) into IfStatement(278) at 0", "Insert ExpressionStatement(261) into IfStatement(278) at 1", "Insert ExpressionStatement(277) into IfStatement(278) at 2", "Insert QualifiedName: Map.Entry(228) into SimpleType: Map.Entry(229) at 0", "Insert SimpleName: Writable(230) into SimpleType: Writable(231) at 0", "Insert SimpleName: Writable(232) into SimpleType: Writable(233) at 0", "Insert SimpleName: key(243) into VariableDeclarationFragment(253) at 0", "Insert MethodInvocation(252) into VariableDeclarationFragment(253) at 1", "Insert MethodInvocation(260) into ExpressionStatement(261) at 0", "Insert MethodInvocation(276) into ExpressionStatement(277) at 0", "Insert ParenthesizedExpression(250) into MethodInvocation(252) at 0", "Insert SimpleName: get(251) into MethodInvocation(252) at 1", "Insert ThisExpression(256) into MethodInvocation(260) at 0", "Insert SimpleName: set(257) into MethodInvocation(260) at 1", "Insert SimpleName: key(258) into MethodInvocation(260) at 2", "Insert NumberLiteral: 0(259) into MethodInvocation(260) at 3", "Insert ThisExpression(262) into MethodInvocation(276) at 0", "Insert SimpleName: set(263) into MethodInvocation(276) at 1", "Insert SimpleName: key(264) into MethodInvocation(276) at 2", "Insert InfixExpression: *(275) into MethodInvocation(276) at 3", "Insert CastExpression(249) into ParenthesizedExpression(250) at 0", "Insert SimpleName: alpha(265) into InfixExpression: *(275) at 0", "Insert MethodInvocation(274) into InfixExpression: *(275) at 1", "Insert SimpleType: IntWritable(245) into CastExpression(249) at 0", "Insert MethodInvocation(248) into CastExpression(249) at 1", "Insert ParenthesizedExpression(272) into MethodInvocation(274) at 0", "Insert SimpleName: getValue(273) into MethodInvocation(274) at 1", "Insert SimpleName: IntWritable(244) into SimpleType: IntWritable(245) at 0", "Insert SimpleName: e(246) into MethodInvocation(248) at 0", "Insert SimpleName: getKey(247) into MethodInvocation(248) at 1", "Insert CastExpression(271) into ParenthesizedExpression(272) at 0", "Insert SimpleType: DoubleEntry(267) into CastExpression(271) at 0", "Insert MethodInvocation(270) into CastExpression(271) at 1", "Update SimpleName: DenseVector(143) to DoubleEntry", "Move SimpleName: DenseVector(143) into SimpleType: DoubleEntry(267) at 0", "Insert SimpleName: e(268) into MethodInvocation(270) at 0", "Insert SimpleName: getValue(269) into MethodInvocation(270) at 1", "Delete SimpleType: DenseVector(144)", "Delete ClassInstanceCreation(148)", "Delete ReturnStatement(149)", "Delete Block(150)", "Delete ThisExpression(412)", "Delete MethodInvocation(414)", "Delete NumberLiteral: 0(415)", "Delete InfixExpression: ==(416)", "Delete SimpleName: DenseVector(417)", "Delete SimpleType: DenseVector(418)", "Delete SimpleName: trunk(419)", "Delete SimpleName: DenseVector(420)", "Delete SimpleType: DenseVector(421)", "Delete SimpleName: v2(422)", "Delete CastExpression(423)", "Delete VariableDeclarationFragment(424)", "Delete VariableDeclarationStatement(425)", "Delete ThisExpression(426)", "Delete SimpleName: entries(427)", "Delete FieldAccess(428)", "Delete QualifiedName: trunk.entries(429)", "Delete Assignment: =(430)", "Delete ExpressionStatement(431)", "Delete Block(434)", "Delete IfStatement(435)"]}}, {"SparseVector_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Vector to SimpleType: Vector at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Vector to SimpleType: Vector at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: Vector to MethodDeclaration at 2", "INS SimpleName: set to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Vector to SingleVariableDeclaration at 0", "INS SimpleName: alpha to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS NullLiteral to ReturnStatement at 0"]}]}}, {"SparseVector_diff": {"operations": ["Insert MethodDeclaration(599) into TypeDeclaration: class(600) at 19", "Insert MarkerAnnotation(584) into MethodDeclaration(599) at 0", "Insert Modifier: public(585) into MethodDeclaration(599) at 1", "Insert SimpleType: Vector(587) into MethodDeclaration(599) at 2", "Insert SimpleName: set(588) into MethodDeclaration(599) at 3", "Insert SingleVariableDeclaration(591) into MethodDeclaration(599) at 4", "Insert SingleVariableDeclaration(595) into MethodDeclaration(599) at 5", "Insert Block(598) into MethodDeclaration(599) at 6", "Insert SimpleName: Override(583) into MarkerAnnotation(584) at 0", "Insert SimpleName: Vector(586) into SimpleType: Vector(587) at 0", "Insert PrimitiveType: double(589) into SingleVariableDeclaration(591) at 0", "Insert SimpleName: alpha(590) into SingleVariableDeclaration(591) at 1", "Insert SimpleType: Vector(593) into SingleVariableDeclaration(595) at 0", "Insert SimpleName: v(594) into SingleVariableDeclaration(595) at 1", "Insert ReturnStatement(597) into Block(598) at 0", "Insert SimpleName: Vector(592) into SimpleType: Vector(593) at 0", "Insert NullLiteral(596) into ReturnStatement(597) at 0"]}}, {"Vector_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 7", "operations": ["INS TagElement: @param to Javadoc at 2", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS TextElement: x = alpha * v to TagElement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 3", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: v to TagElement: @param at 0", "INS SimpleType: Vector to SingleVariableDeclaration at 0", "INS TextElement:  x = alpha * v to TagElement: @return at 0", "INS SimpleType: Vector to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: set to MethodDeclaration at 3", "INS SimpleName: Vector to SimpleType: Vector at 0", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: alpha to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: alpha to SingleVariableDeclaration at 1", "INS SimpleName: Vector to SimpleType: Vector at 0"]}]}}, {"Vector_diff": {"operations": ["Insert MethodDeclaration(105) into TypeDeclaration: interface(278) at 7", "Insert Javadoc(93) into MethodDeclaration(105) at 0", "Insert Modifier: public(94) into MethodDeclaration(105) at 1", "Insert SimpleType: Vector(96) into MethodDeclaration(105) at 2", "Insert SimpleName: set(97) into MethodDeclaration(105) at 3", "Insert SingleVariableDeclaration(100) into MethodDeclaration(105) at 4", "Insert SingleVariableDeclaration(104) into MethodDeclaration(105) at 5", "Insert TagElement(86) into Javadoc(93) at 0", "Insert TagElement: @param(88) into Javadoc(93) at 1", "Insert TagElement: @param(90) into Javadoc(93) at 2", "Insert TagElement: @return(92) into Javadoc(93) at 3", "Insert SimpleName: Vector(95) into SimpleType: Vector(96) at 0", "Insert PrimitiveType: double(98) into SingleVariableDeclaration(100) at 0", "Insert SimpleName: alpha(99) into SingleVariableDeclaration(100) at 1", "Insert SimpleType: Vector(102) into SingleVariableDeclaration(104) at 0", "Insert SimpleName: v(103) into SingleVariableDeclaration(104) at 1", "Insert TextElement: x = alpha * v(85) into TagElement(86) at 0", "Insert SimpleName: alpha(87) into TagElement: @param(88) at 0", "Insert SimpleName: v(89) into TagElement: @param(90) at 0", "Insert TextElement:  x = alpha * v(91) into TagElement: @return(92) at 0", "Insert SimpleName: Vector(101) into SimpleType: Vector(102) at 0"]}}, {"SIMDMultiplyMap_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.hadoop.io.Writable to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: scaled to VariableDeclarationFragment at 0", "INS SimpleName: SparseVector to SimpleType: SparseVector at 0", "INS SimpleType: SparseVector to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleType: DenseVector to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: scaled to VariableDeclarationFragment at 0", "INS SimpleName: DenseVector to SimpleType: DenseVector at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleType: Writable to ParameterizedType: Map.Entry<Writable,Writable> at 1", "INS IfStatement to Block at 1", "INS ParameterizedType: Map.Entry<Writable,Writable> to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: sum to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS EnhancedForStatement to Block at 0", "INS SimpleName: IntWritable to SimpleType: IntWritable at 0", "INS SimpleName: getEntries to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS SimpleName: set to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleType: Writable to ParameterizedType: Map.Entry<Writable,Writable> at 2", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: scaled to MethodInvocation at 0", "INS SimpleName: sum to MethodInvocation at 0", "INS SimpleType: IntWritable to CastExpression at 0", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<Writable,Writable> at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: scaled to MethodInvocation at 2", "operations": ["INS SimpleName: scaled to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: scaled to MethodInvocation at 2", "operations": ["INS SimpleName: scaled to MethodInvocation at 2"]}]}}, {"SIMDMultiplyMap_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(516) at 2", "Insert ImportDeclaration(27) into CompilationUnit(516) at 5", "Insert QualifiedName: java.util.Map(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.hadoop.io.Writable(26) into ImportDeclaration(27) at 0", "Insert VariableDeclarationStatement(378) into Block(388) at 0", "Insert VariableDeclarationStatement(450) into Block(497) at 0", "Insert IfStatement(487) into Block(497) at 1", "Insert SimpleType: SparseVector(361) into VariableDeclarationStatement(378) at 0", "Insert VariableDeclarationFragment(377) into VariableDeclarationStatement(378) at 1", "Insert SimpleType: DenseVector(433) into VariableDeclarationStatement(450) at 0", "Insert VariableDeclarationFragment(449) into VariableDeclarationStatement(450) at 1", "Insert InfixExpression: ==(455) into IfStatement(487) at 0", "Insert Block(486) into IfStatement(487) at 1", "Insert SimpleName: SparseVector(360) into SimpleType: SparseVector(361) at 0", "Insert SimpleName: scaled(362) into VariableDeclarationFragment(377) at 0", "Move MethodInvocation(375) into VariableDeclarationFragment(377) at 1", "Insert SimpleName: scaled(385) into MethodInvocation(386) at 2", "Insert SimpleName: DenseVector(432) into SimpleType: DenseVector(433) at 0", "Insert SimpleName: scaled(434) into VariableDeclarationFragment(449) at 0", "Move MethodInvocation(441) into VariableDeclarationFragment(449) at 1", "Insert MethodInvocation(453) into InfixExpression: ==(455) at 0", "Insert NumberLiteral: 0(454) into InfixExpression: ==(455) at 1", "Insert EnhancedForStatement(485) into Block(486) at 0", "Insert SimpleName: scaled(494) into MethodInvocation(495) at 2", "Insert SimpleName: sum(451) into MethodInvocation(453) at 0", "Insert SimpleName: size(452) into MethodInvocation(453) at 1", "Insert SingleVariableDeclaration(464) into EnhancedForStatement(485) at 0", "Insert MethodInvocation(469) into EnhancedForStatement(485) at 1", "Insert Block(484) into EnhancedForStatement(485) at 2", "Insert ParameterizedType: Map.Entry<Writable,Writable>(462) into SingleVariableDeclaration(464) at 0", "Insert SimpleName: e(463) into SingleVariableDeclaration(464) at 1", "Insert MethodInvocation(467) into MethodInvocation(469) at 0", "Insert SimpleName: entrySet(468) into MethodInvocation(469) at 1", "Insert ExpressionStatement(483) into Block(484) at 0", "Insert SimpleType: Map.Entry(457) into ParameterizedType: Map.Entry<Writable,Writable>(462) at 0", "Insert SimpleType: Writable(459) into ParameterizedType: Map.Entry<Writable,Writable>(462) at 1", "Insert SimpleType: Writable(461) into ParameterizedType: Map.Entry<Writable,Writable>(462) at 2", "Insert SimpleName: scaled(465) into MethodInvocation(467) at 0", "Insert SimpleName: getEntries(466) into MethodInvocation(467) at 1", "Insert MethodInvocation(482) into ExpressionStatement(483) at 0", "Insert QualifiedName: Map.Entry(456) into SimpleType: Map.Entry(457) at 0", "Insert SimpleName: Writable(458) into SimpleType: Writable(459) at 0", "Insert SimpleName: Writable(460) into SimpleType: Writable(461) at 0", "Insert SimpleName: sum(470) into MethodInvocation(482) at 0", "Insert SimpleName: set(471) into MethodInvocation(482) at 1", "Insert MethodInvocation(480) into MethodInvocation(482) at 2", "Insert NumberLiteral: 0(481) into MethodInvocation(482) at 3", "Insert ParenthesizedExpression(478) into MethodInvocation(480) at 0", "Insert SimpleName: get(479) into MethodInvocation(480) at 1", "Insert CastExpression(477) into ParenthesizedExpression(478) at 0", "Insert SimpleType: IntWritable(473) into CastExpression(477) at 0", "Insert MethodInvocation(476) into CastExpression(477) at 1", "Insert SimpleName: IntWritable(472) into SimpleType: IntWritable(473) at 0", "Insert SimpleName: e(474) into MethodInvocation(476) at 0", "Insert SimpleName: getKey(475) into MethodInvocation(476) at 1"]}}], "commit_stats": [{"total_files": 8, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}