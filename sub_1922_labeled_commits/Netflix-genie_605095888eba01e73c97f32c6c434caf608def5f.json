{"application": "Netflix-genie", "csha": "605095888eba01e73c97f32c6c434caf608def5f", "files": [{"JobExecutionEnvironment_cluster": {"actions": [{"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 1"]}, {"root": "UPDATE from init to JobExecutionEnvironment", "operations": ["UPD SimpleName: init from init to JobExecutionEnvironment"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from getProcessId to getId", "operations": ["UPD SimpleName: getProcessId from getProcessId to getId"]}, {"root": "UPDATE from processId to id", "operations": ["UPD SimpleName: processId from processId to id", "UPD SimpleName: processId from processId to id"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getId to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: id to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 8", "INS SimpleName: jobRequest to MethodInvocation at 0"]}, {"root": "UPDATE from to run the job. to Constructor.", "operations": ["UPD TextElement: to run the job. from to run the job. to Constructor."]}, {"root": "UPDATE from Get the pid of the Job running. to Get the id assigned to the job.", "operations": ["UPD TextElement: Get the pid of the Job running. from Get the pid of the Job running. to Get the id assigned to the job."]}, {"root": "UPDATE from  the process id for the job to  the id of the job", "operations": ["UPD TextElement:  the process id for the job from  the process id for the job to  the id of the job"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: hostname", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL FieldDeclaration"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL TextElement: Initializes by Taking in a job request and figures out the cluster, command and applications", "operations": ["DEL TextElement: Initializes by Taking in a job request and figures out the cluster, command and applications"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: hostname", "DEL TagElement", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL Modifier: public", "DEL Block", "DEL Javadoc", "DEL TextElement: Get the hostname on which the jobs runs.", "DEL TextElement:  the hostname for the job", "DEL SimpleName: getHostname"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement: @param", "DEL Modifier: public", "DEL TextElement:  host on which the job runs", "DEL ThisExpression", "DEL PrimitiveType: void", "DEL Assignment: =", "DEL Block", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: hostname", "DEL SimpleName: setHostname", "DEL FieldAccess", "DEL SimpleType: String", "DEL TextElement: Set the hostname of the Job to be run.", "DEL SimpleName: String", "DEL SimpleName: hostname", "DEL SimpleName: hostname", "DEL SimpleName: hostname", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL Javadoc", "DEL Modifier: final"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL Assignment: =", "DEL Block", "DEL TextElement:  The pid for the job running.", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL PrimitiveType: int", "DEL SimpleName: processId", "DEL TextElement: Set the pid of the Job running.", "DEL TagElement", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: setProcessId", "DEL Modifier: final", "DEL Javadoc", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: processId", "DEL SimpleName: processId", "DEL SimpleName: processId"]}]}}, {"JobExecutionEnvironment_diff": {"operations": ["Move SimpleType: String(102) into FieldDeclaration(105) at 1", "Update SimpleName: init(138) to JobExecutionEnvironment", "Move SimpleType: String(378) into MethodDeclaration(384) at 2", "Update SimpleName: getProcessId(413) to getId", "Update SimpleName: processId(108) to id", "Insert ExpressionStatement(298) into Block(299) at 8", "Update TextElement: to run the job.(112) to Constructor.", "Insert Assignment: =(297) into ExpressionStatement(298) at 0", "Update TextElement: Get the pid of the Job running.(406) to Get the id assigned to the job.", "Update TextElement:  the process id for the job(408) to  the id of the job", "Update SimpleName: processId(414) to id", "Insert FieldAccess(293) into Assignment: =(297) at 0", "Insert MethodInvocation(296) into Assignment: =(297) at 1", "Insert ThisExpression(291) into FieldAccess(293) at 0", "Insert SimpleName: id(292) into FieldAccess(293) at 1", "Insert SimpleName: jobRequest(294) into MethodInvocation(296) at 0", "Insert SimpleName: getId(295) into MethodInvocation(296) at 1", "Delete Modifier: private(100)", "Delete SimpleName: hostname(103)", "Delete VariableDeclarationFragment(104)", "Delete FieldDeclaration(105)", "Delete PrimitiveType: int(107)", "Delete TextElement: Initializes by Taking in a job request and figures out the cluster, command and applications(111)", "Delete PrimitiveType: void(137)", "Delete TextElement: Get the hostname on which the jobs runs.(371)", "Delete TagElement(372)", "Delete TextElement:  the hostname for the job(373)", "Delete TagElement: @return(374)", "Delete Javadoc(375)", "Delete Modifier: public(376)", "Delete SimpleName: getHostname(379)", "Delete SimpleName: hostname(380)", "Delete ReturnStatement(381)", "Delete Block(382)", "Delete MethodDeclaration(383)", "Delete TextElement: Set the hostname of the Job to be run.(384)", "Delete TagElement(385)", "Delete SimpleName: hostname(386)", "Delete TextElement:  host on which the job runs(387)", "Delete TagElement: @param(388)", "Delete Javadoc(389)", "Delete Modifier: public(390)", "Delete PrimitiveType: void(391)", "Delete SimpleName: setHostname(392)", "Delete Modifier: final(393)", "Delete SimpleName: String(394)", "Delete SimpleType: String(395)", "Delete SimpleName: hostname(396)", "Delete SingleVariableDeclaration(397)", "Delete ThisExpression(398)", "Delete SimpleName: hostname(399)", "Delete FieldAccess(400)", "Delete SimpleName: hostname(401)", "Delete Assignment: =(402)", "Delete ExpressionStatement(403)", "Delete Block(404)", "Delete MethodDeclaration(405)", "Delete PrimitiveType: int(412)", "Delete TextElement: Set the pid of the Job running.(418)", "Delete TagElement(419)", "Delete SimpleName: processId(420)", "Delete TextElement:  The pid for the job running.(421)", "Delete TagElement: @param(422)", "Delete Javadoc(423)", "Delete Modifier: public(424)", "Delete PrimitiveType: void(425)", "Delete SimpleName: setProcessId(426)", "Delete Modifier: final(427)", "Delete PrimitiveType: int(428)", "Delete SimpleName: processId(429)", "Delete SingleVariableDeclaration(430)", "Delete ThisExpression(431)", "Delete SimpleName: processId(432)", "Delete FieldAccess(433)", "Delete SimpleName: processId(434)", "Delete Assignment: =(435)", "Delete ExpressionStatement(436)", "Delete Block(437)", "Delete MethodDeclaration(438)"]}}, {"JobExecutionHandler_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startJob to MethodInvocation at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "UPDATE from appendToWriter to appendToGenieLauncherScript", "operations": ["UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript", "UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript", "UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: withId to MethodInvocation at 1", "operations": ["INS SimpleName: withId to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: jobExecEnv to MethodInvocation at 0"]}, {"root": "UPDATE from build to getId", "operations": ["UPD SimpleName: build from build to getId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: build to MethodInvocation at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: makeDir", "DEL SimpleName: jobExecEnv", "DEL StringLiteral: \"/job\"", "DEL SimpleName: getJobWorkingDir", "DEL ExpressionStatement", "DEL InfixExpression: +"]}]}}, {"JobExecutionHandler_diff": {"operations": ["Insert ExpressionStatement(144) into Block(149) at 1", "Insert MethodInvocation(143) into ExpressionStatement(144) at 0", "Insert SimpleName: startJob(142) into MethodInvocation(143) at 0", "Update SimpleName: appendToWriter(217) to appendToGenieLauncherScript", "Update SimpleName: appendToWriter(236) to appendToGenieLauncherScript", "Update SimpleName: appendToWriter(208) to appendToGenieLauncherScript", "Insert MethodInvocation(353) into Assignment: =(354) at 1", "Move MethodInvocation(353) into MethodInvocation(353) at 0", "Insert SimpleName: build(352) into MethodInvocation(353) at 1", "Insert SimpleName: withId(347) into MethodInvocation(351) at 1", "Insert MethodInvocation(350) into MethodInvocation(351) at 2", "Insert SimpleName: jobExecEnv(348) into MethodInvocation(350) at 0", "Update SimpleName: build(352) to getId", "Move SimpleName: build(352) into MethodInvocation(350) at 1", "Delete SimpleName: makeDir(155)", "Delete SimpleName: jobExecEnv(156)", "Delete SimpleName: getJobWorkingDir(157)", "Delete MethodInvocation(158)", "Delete StringLiteral: \"/job\"(159)", "Delete InfixExpression: +(160)", "Delete MethodInvocation(161)", "Delete ExpressionStatement(162)"]}}, {"JobExecutor_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: com.netflix.genie.core.jobs", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.Lists", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.genie.common.dto.Application"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.genie.common.exceptions.GenieException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.genie.common.exceptions.GenieServerException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.genie.core.services.FileCopyService", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.lang3.StringUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.slf4j.Logger"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.slf4j.LoggerFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.validation.constraints.NotNull"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.File", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.OutputStreamWriter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.Writer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.nio.file.Path", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.net.InetAddress", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.lang.reflect.Field", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodDeclaration", "DEL SimpleName: command", "DEL InfixExpression: +", "DEL SimpleName: ioe", "DEL SimpleType: String", "DEL SimpleName: GENIE_APPLICATION_DIR_ENV_VAR", "DEL SimpleName: GenieException", "DEL Javadoc", "DEL ClassInstanceCreation", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL SimpleName: commandSetupFile", "DEL VariableDeclarationFragment", "DEL SimpleName: execute", "DEL TagElement", "DEL InfixExpression: +", "DEL SimpleName: dirPath", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: GenieException", "DEL SimpleType: String", "DEL SimpleName: pb", "DEL SimpleName: getJobWorkingDir", "DEL MethodDeclaration", "DEL SimpleName: ioe", "DEL StringLiteral: \" > \"", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL SimpleName: getId", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL FieldAccess", "DEL StringLiteral: \" 2> \"", "DEL StringLiteral: \"pid\"", "DEL SimpleName: waitFor", "DEL StringLiteral: \"genie\"", "DEL MethodInvocation", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: ProcessBuilder", "DEL FieldDeclaration", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL TagElement", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: pb", "DEL SimpleName: GENIE_DONE_FILE", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: jobExecEnv", "DEL SimpleType: String", "DEL SimpleName: getDeclaredField", "DEL SimpleName: String", "DEL SimpleName: JobExecutionEnvironment", "DEL SimpleType: GenieException", "DEL SimpleName: fcs", "DEL SimpleType: IOException", "DEL SimpleName: jobExecEnv", "DEL FieldDeclaration", "DEL SimpleName: String", "DEL SimpleName: process", "DEL TagElement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: makeDir", "DEL SimpleName: GenieException", "DEL MethodInvocation", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL SimpleName: jobExecEnv", "DEL Modifier: protected", "DEL SimpleName: jobExecEnv", "DEL ExpressionStatement", "DEL Block", "DEL StringLiteral: \"called\"", "DEL InfixExpression: !=", "DEL StringLiteral: \"Error closing file writer\"", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: GenieServerException", "DEL MethodInvocation", "DEL SimpleName: command", "DEL TextElement:            The job execution environment details like the job, cluster,", "DEL FieldDeclaration", "DEL SimpleName: processCluster", "DEL SimpleType: File", "DEL InfixExpression: +", "DEL Javadoc", "DEL SimpleType: String", "DEL StringLiteral: \"source \"", "DEL TextElement:  The content to write.", "DEL MethodInvocation", "DEL StringLiteral: \"/cluster/\"", "DEL SimpleName: process", "DEL IfStatement", "DEL ThisExpression", "DEL SimpleType: File", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: String", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: jobExecEnv", "DEL SimpleName: content", "DEL IfStatement", "DEL FieldAccess", "DEL StringLiteral: \"GENIE_CLUSTER_DIR\"", "DEL SingleVariableDeclaration", "DEL SimpleName: jobExecEnv", "DEL Modifier: private", "DEL SimpleName: GENIE_CLUSTER_DIR_ENV_VAR", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: fileWriter", "DEL FieldDeclaration", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleType: File", "DEL SimpleName: msg", "DEL SimpleName: fileCopyServiceImpls", "DEL StringLiteral: \"/applications/\"", "DEL TagElement", "DEL SimpleName: getJobWorkingDir", "DEL ThisExpression", "DEL Modifier: private", "DEL SimpleName: PID", "DEL SimpleName: Logger", "DEL SimpleName: jobExecEnv", "DEL TagElement", "DEL Block", "DEL SimpleName: jobExecEnv", "DEL SimpleName: directory", "DEL SimpleName: GENIE_LOG_PATH", "DEL SimpleName: add", "DEL ThisExpression", "DEL SimpleName: fileCopyServiceImpls", "DEL Javadoc", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: pb", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL TextElement:  if there is an error getting the process id", "DEL SimpleName: getProcessId", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: GenieServerException", "DEL SimpleType: ProcessBuilder", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL SimpleName: setupFileLocalPath", "DEL SimpleType: List", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: ie", "DEL Modifier: static", "DEL SimpleName: getFileName", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: String", "DEL SimpleName: File", "DEL ExpressionStatement", "DEL SimpleType: OutputStreamWriter", "DEL SimpleName: GenieServerException", "DEL TextElement: Method that sets up the job directory and runs based on mode specified.", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: makeDir", "DEL Javadoc", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL Modifier: private", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL Modifier: private", "DEL TextElement:  Throw exception in case of failure while writing content to writer.", "DEL SimpleName: ie", "DEL SimpleName: getJobWorkingDir", "DEL ThisExpression", "DEL SimpleName: getLocalHost", "DEL SimpleName: jobExecEnv", "DEL SimpleType: SecurityException", "DEL SimpleName: setupFileLocalPath", "DEL SimpleName: f", "DEL SimpleName: STDOUT_LOG_PATH", "DEL SimpleName: String", "DEL SimpleName: dirPath", "DEL SimpleType: GenieException", "DEL SimpleName: setupFileLocalPath", "DEL SimpleName: String", "DEL IfStatement", "DEL SimpleName: commandSetupFile", "DEL SimpleName: jobExecEnv", "DEL SimpleName: executeBashCommand", "DEL BooleanLiteral: true", "DEL InfixExpression: +", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: Writer", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: appendToWriter", "DEL TextElement: Closes the writer to create job_launcher_script.sh.", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: command", "DEL MethodInvocation", "DEL SimpleName: debug", "DEL ThisExpression", "DEL Block", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: jobExecEnv", "DEL ExpressionStatement", "DEL SimpleName: File", "DEL SimpleName: fileWriter", "DEL MethodInvocation", "DEL Modifier: static", "DEL Block", "DEL SimpleName: fileWriter", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: getJobRequest", "DEL Block", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL Modifier: protected", "DEL Modifier: final", "DEL InfixExpression: +", "DEL StringLiteral: \"Genie not equipped to copy down files of this type.\"", "DEL SimpleName: fcs", "DEL SimpleType: String", "DEL ThisExpression", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: GenieException", "DEL SimpleName: File", "DEL SimpleName: getJobRequest", "DEL SimpleType: String", "DEL SimpleName: jobExecEnv", "DEL SimpleType: File", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: Field", "DEL Modifier: final", "DEL Modifier: static", "DEL SimpleName: SecurityException", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL SimpleType: GenieException", "DEL SimpleName: setupFileLocalPath", "DEL SimpleName: jobWorkingDir", "DEL ThrowStatement", "DEL TagElement: @throws", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: jobExecEnv", "DEL SimpleName: getSetupFile", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: src", "DEL SimpleName: workingDirectory", "DEL SingleVariableDeclaration", "DEL TagElement: @return", "DEL SimpleName: dirPath", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: GenieServerException", "DEL Modifier: private", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL SimpleName: redirectError", "DEL VariableDeclarationFragment", "DEL SimpleName: appendToWriter", "DEL SimpleName: makeDir", "DEL SimpleName: GenieServerException", "DEL MethodInvocation", "DEL SimpleName: Application", "DEL ExpressionStatement", "DEL SimpleType: FileOutputStream", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL StringLiteral: \"/applications\"", "DEL NullLiteral", "DEL SimpleName: GenieException", "DEL StringLiteral: \"/cluster\"", "DEL SimpleName: content", "DEL MethodInvocation", "DEL StringLiteral: \"GENIE_WORKING_DIR\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: close", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL TagElement: @throws", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: GenieServerException", "DEL SimpleType: FileCopyService", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: GenieException", "DEL SimpleName: application", "DEL SimpleName: workingDirectory", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: processCommand", "DEL SimpleName: copyFiles", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: getId", "DEL SimpleType: GenieServerException", "DEL SimpleName: setupFilePath", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"source \"", "DEL ParameterizedType: List<String>", "DEL SimpleType: InterruptedException", "DEL SimpleName: getCommandArgs", "DEL StringLiteral: \"/job\"", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: src", "DEL SimpleType: GenieServerException", "DEL ExpressionStatement", "DEL Block", "DEL TryStatement", "DEL MethodInvocation", "DEL MemberValuePair", "DEL ExpressionStatement", "DEL SimpleName: toPath", "DEL SimpleName: ProcessBuilder", "DEL Block", "DEL SimpleName: GENIE_WORKING_DIR_ENV_VAR", "DEL SimpleName: String", "DEL Modifier: private", "DEL Modifier: private", "DEL SimpleName: String", "DEL InfixExpression: +", "DEL Block", "DEL SimpleType: Process", "DEL Modifier: final", "DEL MethodInvocation", "DEL TextElement: command and applications", "DEL FieldAccess", "DEL Modifier: private", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: OutputStreamWriter", "DEL TextElement:  3.0.0", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: hostname", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: command", "DEL SimpleName: mode", "DEL SimpleName: jobWorkingDir", "DEL SimpleType: IOException", "DEL SimpleName: ioe", "DEL ExpressionStatement", "DEL StringLiteral: \"/applications/\"", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: process", "DEL Modifier: private", "DEL TextElement: Process all applications content needed for the job to run.", "DEL Block", "DEL SimpleName: GenieServerException", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleType: Writer", "DEL SimpleName: dest", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL Modifier: private", "DEL StringLiteral: \"GENIE_COMMAND_DIR\"", "DEL FieldAccess", "DEL SimpleType: GenieException", "DEL SimpleName: getFileName", "DEL TagElement: @throws", "DEL SimpleType: Process", "DEL ThisExpression", "DEL TryStatement", "DEL SimpleName: applicationSetupFile", "DEL SimpleName: getLogger", "DEL Modifier: final", "DEL Modifier: static", "DEL SimpleName: jobExecEnv", "DEL SimpleType: GenieServerException", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL TagElement: @throws", "DEL ExpressionStatement", "DEL TagElement", "DEL ClassInstanceCreation", "DEL SimpleName: jobExecEnv", "DEL Block", "DEL SimpleType: IllegalArgumentException", "DEL EnhancedForStatement", "DEL SimpleName: mode", "DEL SimpleName: List", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: String", "DEL InfixExpression: &&", "DEL SimpleName: processJob", "DEL InfixExpression: ||", "DEL Modifier: private", "DEL SimpleName: getJobWorkingDir", "DEL TextElement:  Exception in case of an error", "DEL TextElement: Initializes the writer to create job_launcher_script.sh.", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: LOG", "DEL FieldAccess", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: GenieException", "DEL MethodInvocation", "DEL SimpleName: File", "DEL TextElement:  Whether to run it in full genie mode or just local.", "DEL VariableDeclarationFragment", "DEL SimpleName: jobWorkingDir", "DEL SimpleName: jobSetupFile", "DEL Modifier: final", "DEL SimpleType: GenieException", "DEL SimpleName: IOException", "DEL Javadoc", "DEL CatchClause", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: String", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: String", "DEL SimpleType: List", "DEL SimpleName: ioe", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL Modifier: private", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL SimpleType: GenieException", "DEL ExpressionStatement", "DEL SimpleName: applicationSetupFile", "DEL SimpleName: e", "DEL SimpleName: makeDir", "DEL ThisExpression", "DEL SimpleName: GenieException", "DEL TagElement: @param", "DEL VariableDeclarationFragment", "DEL SimpleName: setupFileLocalPath", "DEL SimpleName: mode", "DEL SimpleName: StringUtils", "DEL Block", "DEL StringLiteral: \"/applications/\"", "DEL FieldDeclaration", "DEL InfixExpression: +", "DEL SimpleName: getId", "DEL MethodInvocation", "DEL SimpleName: genieLauncherScript", "DEL SingleVariableDeclaration", "DEL SimpleName: application", "DEL ExpressionStatement", "DEL SimpleName: fileCopyServiceImpls", "DEL SimpleName: getJobWorkingDir", "DEL FieldDeclaration", "DEL SimpleName: makeDir", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL Assignment: =", "DEL TextElement: Method that starts the execution of the job and updates the database with its execution details.", "DEL ExpressionStatement", "DEL SimpleName: initializeWriter", "DEL SimpleName: appendToWriter", "DEL SimpleName: msg", "DEL PrimitiveType: void", "DEL PrimitiveType: int", "DEL ParameterizedType: ArrayList<>", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: IOException", "DEL SimpleName: GenieException", "DEL SimpleName: jobWorkingDir", "DEL TagElement: @param", "DEL SimpleName: makeDir", "DEL SimpleType: Path", "DEL StringLiteral: \"/genie/logs\"", "DEL Modifier: static", "DEL TagElement: @param", "DEL SimpleName: File", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL SimpleName: String", "DEL Block", "DEL Modifier: final", "DEL FieldAccess", "DEL SimpleName: ArrayList", "DEL TextElement:  List of implementations of the file copy interface", "DEL Block", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: genieLauncherScript", "DEL SimpleName: processId", "DEL Modifier: private", "DEL IfStatement", "DEL Javadoc", "DEL SimpleName: jobSetupFile", "DEL SimpleName: copy", "DEL SimpleName: getCommand", "DEL StringLiteral: \"/applications\"", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: NoSuchFieldException", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: jobExecEnv", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleType: File", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL Modifier: private", "DEL SimpleType: GenieException", "DEL SimpleName: setAccessible", "DEL SimpleName: LOG", "DEL InfixExpression: +", "DEL SimpleName: message", "DEL TagElement: @author", "DEL Modifier: final", "DEL Modifier: final", "DEL Modifier: private", "DEL Modifier: private", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL SimpleName: STDOUT_LOG_PATH", "DEL SimpleName: write", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: private", "DEL StringLiteral: \"genie\"", "DEL SimpleName: getSetupFile", "DEL SimpleName: InterruptedException", "DEL SimpleName: GenieServerException", "DEL SimpleName: jobExecEnv", "DEL SimpleType: GenieException", "DEL SimpleName: jobSetupFile", "DEL MethodInvocation", "DEL SimpleName: isBlank", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL Javadoc", "DEL Block", "DEL SimpleName: GENIE_JOB_LAUNCHER_SCRIPT", "DEL SimpleName: GENIE_LOG_PATH", "DEL SimpleType: FileCopyService", "DEL IfStatement", "DEL SimpleName: GenieException", "DEL SimpleName: getCluster", "DEL SimpleName: genieLauncherScript", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: Process", "DEL SimpleName: Lists", "DEL ThrowStatement", "DEL SimpleType: String", "DEL TryStatement", "DEL TextElement: Method to create directories on local unix filesystem.", "DEL CatchClause", "DEL Modifier: private", "DEL Block", "DEL TagElement", "DEL SimpleName: equals", "DEL Modifier: static", "DEL SimpleName: jobExecEnv", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: final", "DEL InfixExpression: +", "DEL StringLiteral: \"echo $? > \"", "DEL MethodInvocation", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL InfixExpression: &&", "DEL Block", "DEL SimpleName: jobWorkingDir", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: InetAddress", "DEL SimpleName: commandSetupFile", "DEL SimpleName: isNotBlank", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL UnionType: InterruptedException|IOException", "DEL SimpleType: GenieServerException", "DEL SimpleName: mode", "DEL SimpleName: GenieException", "DEL TextElement: Process the command content needed for the job to run.", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: final", "DEL Modifier: private", "DEL ThisExpression", "DEL StringLiteral: \"source \"", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: fcs", "DEL Assignment: =", "DEL SimpleName: f", "DEL PrimitiveType: void", "DEL SimpleName: String", "DEL InfixExpression: !=", "DEL StringLiteral: \"/\"", "DEL Modifier: private", "DEL SimpleName: initializeWriter", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL SimpleName: ioe", "DEL SimpleName: Path", "DEL TagElement", "DEL StringLiteral: \"/genie/logs/genie.log\"", "DEL SimpleName: StringUtils", "DEL SimpleName: start", "DEL FieldAccess", "DEL SimpleType: NoSuchFieldException", "DEL SimpleName: directory", "DEL Modifier: protected", "DEL SimpleType: Logger", "DEL SimpleName: getJobWorkingDir", "DEL Javadoc", "DEL SimpleType: List", "DEL SimpleName: appendToWriter", "DEL ExpressionStatement", "DEL SimpleType: GenieException", "DEL FieldDeclaration", "DEL StringLiteral: \"GENIE_JOB_DIR\"", "DEL NullLiteral", "DEL SimpleName: command", "DEL FieldDeclaration", "DEL SimpleName: msg", "DEL Modifier: final", "DEL StringLiteral: \"genie_job_launcher.sh\"", "DEL SimpleName: STDERR_LOG_PATH", "DEL SimpleName: FileOutputStream", "DEL Modifier: final", "DEL SimpleName: getExecutable", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL SimpleName: GenieException", "DEL SimpleName: write", "DEL SimpleName: valueOf", "DEL SimpleName: String", "DEL SimpleName: List", "DEL CatchClause", "DEL ThisExpression", "DEL SimpleName: jobSetupFile", "DEL SimpleType: ArrayList", "DEL SimpleName: String", "DEL SimpleType: GenieServerException", "DEL SimpleName: getInt", "DEL SimpleType: File", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: pb", "DEL Javadoc", "DEL Javadoc", "DEL SimpleName: isValid", "DEL TryStatement", "DEL ThrowStatement", "DEL Javadoc", "DEL Modifier: final", "DEL SimpleName: setupFilePath", "DEL SimpleName: applicationSetupFile", "DEL StringLiteral: \"Error closing file writer\"", "DEL SimpleName: JobExecutionEnvironment", "DEL TagElement: @throws", "DEL SimpleName: isNotBlank", "DEL SimpleName: pb", "DEL SimpleName: valueOf", "DEL SimpleName: command", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: GenieException", "DEL SimpleName: GenieException", "DEL ParameterizedType: List<FileCopyService>", "DEL SimpleName: equals", "DEL StringLiteral: \"mkdir\"", "DEL TagElement: @since", "DEL ExpressionStatement", "DEL SimpleName: fileCopyServiceImpls", "DEL SimpleName: processJob", "DEL Block", "DEL SimpleName: makeDir", "DEL SimpleName: PID", "DEL TagElement", "DEL SimpleName: process", "DEL SimpleName: getClass", "DEL SimpleType: GenieException", "DEL SimpleName: jobExecEnv", "DEL SimpleName: GenieException", "DEL ExpressionStatement", "DEL StringLiteral: \" \"", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Block", "DEL ThrowStatement", "DEL Modifier: final", "DEL TextElement:   The source path to copy", "DEL SimpleName: application", "DEL Modifier: final", "DEL ThrowStatement", "DEL StringLiteral: \"./job/stderr\"", "DEL SimpleName: setupWorkingDirectory", "DEL SimpleName: setHostname", "DEL StringLiteral: \"/command\"", "DEL InfixExpression: +", "DEL StringLiteral: \"GENIE_APPLICATION_DIR\"", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL MethodInvocation", "DEL SimpleName: dest", "DEL Block", "DEL SimpleType: Application", "DEL Block", "DEL SimpleName: mode", "DEL SimpleName: jobExecEnv", "DEL Block", "DEL SimpleName: workingDirectory", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: appendToWriter", "DEL SimpleName: jobWorkingDir", "DEL Modifier: final", "DEL SimpleName: makeDir", "DEL StringLiteral: \"/genie\"", "DEL TagElement: @param", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: Path", "DEL SimpleName: proc", "DEL SimpleName: application", "DEL FieldDeclaration", "DEL SimpleName: isNotBlank", "DEL Modifier: final", "DEL PrimitiveType: void", "DEL SimpleType: GenieServerException", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: getCommand", "DEL Modifier: public", "DEL Modifier: final", "DEL TextElement: Constructor Initialize the object using Job execution environment object.", "DEL SimpleName: STDERR_LOG_PATH", "DEL TextElement: Method that sets up the current working directory for executing the job.", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL SimpleName: getId", "DEL Block", "DEL SimpleName: getSetupFile", "DEL SimpleName: command", "DEL ClassInstanceCreation", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL MethodInvocation", "DEL TextElement:  pid for this process", "DEL SimpleName: List", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL SimpleName: ProcessBuilder", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: getCommand", "DEL SimpleType: FileCopyService", "DEL ExpressionStatement", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: error", "DEL ThrowStatement", "DEL SimpleName: Process", "DEL MethodInvocation", "DEL SimpleType: GenieException", "DEL InfixExpression: +", "DEL InfixExpression: +", "DEL SimpleName: IllegalAccessException", "DEL PrimitiveType: void", "DEL TextElement: Helper method that executes a bash command.", "DEL Block", "DEL SimpleName: GENIE_DONE_FILE", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: jobExecEnv", "DEL Block", "DEL SimpleName: dest", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: jobExecEnv", "DEL SimpleName: proc", "DEL SimpleName: processCluster", "DEL Modifier: final", "DEL ThisExpression", "DEL Block", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL TypeDeclaration: class", "DEL SimpleName: executeBashCommand", "DEL MethodInvocation", "DEL Block", "DEL TagElement", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: GenieException", "DEL SimpleName: JobExecutor", "DEL Modifier: final", "DEL TextElement: Process the Job content needed for the job to run.", "DEL SimpleName: getHostAddress", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"-p\"", "DEL SimpleName: makeDir", "DEL SimpleName: start", "DEL MethodInvocation", "DEL SimpleName: content", "DEL SimpleName: GenieServerException", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"Cannot initialize with null JobExecEnv\"", "DEL SimpleName: proc", "DEL MethodInvocation", "DEL StringLiteral: \"Unable to execute bash command\"", "DEL TagElement: @throws", "DEL MethodDeclaration", "DEL SimpleName: Path", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL TagElement: @param", "DEL SimpleName: closeWriter", "DEL TryStatement", "DEL SimpleName: jobExecEnv", "DEL Block", "DEL StringLiteral: \"/job\"", "DEL InfixExpression: &&", "DEL SimpleName: GenieException", "DEL SimpleName: Path", "DEL PrimitiveType: void", "DEL SimpleName: GenieException", "DEL MethodInvocation", "DEL SimpleName: jobExecEnv", "DEL VariableDeclarationStatement", "DEL SimpleName: ie", "DEL SimpleName: Process", "DEL TagElement: @param", "DEL CatchClause", "DEL SimpleType: JobExecutor", "DEL Modifier: final", "DEL SimpleType: Path", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: GENIE_JOB_DIR_ENV_VAR", "DEL SimpleName: FileCopyService", "DEL ClassInstanceCreation", "DEL SimpleName: jobExecEnv", "DEL SimpleName: errCode", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: makeDir", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL ClassInstanceCreation", "DEL SimpleName: closeWriter", "DEL SimpleName: command", "DEL SimpleType: ProcessBuilder", "DEL ThisExpression", "DEL EnhancedForStatement", "DEL StringLiteral: \"bash\"", "DEL ParameterizedType: List<FileCopyService>", "DEL MethodInvocation", "DEL SimpleName: startJob", "DEL ThisExpression", "DEL PrimitiveType: void", "DEL SimpleName: toPath", "DEL ReturnStatement", "DEL StringLiteral: \"Could not open file to crate genie_launcher.sh\"", "DEL MethodInvocation", "DEL TextElement:  Throw exception in case of error.", "DEL TagElement", "DEL MethodInvocation", "DEL TextElement: Appends content to the writer.", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL TextElement: Get process id for the given process.", "DEL SimpleName: LoggerFactory", "DEL Modifier: private", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TextElement:  An array consisting of the command to run", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: jobExecEnv", "DEL Modifier: final", "DEL SimpleName: fileCopyServiceImpls", "DEL SimpleType: List", "DEL SimpleName: makeDir", "DEL SimpleName: NotNull", "DEL MethodInvocation", "DEL SimpleName: f", "DEL TryStatement", "DEL TagElement", "DEL SimpleType: String", "DEL SimpleName: jobExecEnv", "DEL SimpleName: fileCopyServiceImpls", "DEL SimpleType: JobExecutionEnvironment", "DEL ExpressionStatement", "DEL SimpleName: processApplications", "DEL TagElement", "DEL SimpleType: String", "DEL Modifier: public", "DEL SimpleType: String", "DEL SimpleName: fileWriter", "DEL SimpleName: fileWriter", "DEL MethodInvocation", "DEL SimpleName: GENIE_JOB_LAUNCHER_SCRIPT", "DEL SimpleName: getCommand", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: makeDir", "DEL SimpleName: GENIE_LOG_PATH", "DEL SimpleName: setupFileLocalPath", "DEL SimpleName: commandSetupFile", "DEL ExpressionStatement", "DEL TextElement:  amsharma", "DEL VariableDeclarationStatement", "DEL SimpleType: GenieException", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleType: String", "DEL MethodInvocation", "DEL TextElement: Process the cluster content needed for the job to run.", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL TextElement: Method to iterate over a list of fileCopyImpls to copy files.", "DEL SimpleType: String", "DEL NullLiteral", "DEL FieldDeclaration", "DEL SimpleName: GenieException", "DEL SimpleName: makeDir", "DEL SimpleName: applicationSetupFile", "DEL Modifier: final", "DEL ExpressionStatement", "DEL Assignment: =", "DEL TagElement", "DEL SimpleName: ioe", "DEL SimpleName: mode", "DEL ClassInstanceCreation", "DEL SimpleName: genieLauncherScript", "DEL SimpleName: startJob", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: getJobWorkingDir", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL SimpleType: GenieException", "DEL VariableDeclarationFragment", "DEL SimpleName: Process", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: setupFilePath", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL SimpleName: setupFilePath", "DEL SimpleType: String", "DEL SimpleName: src", "DEL InfixExpression: +", "DEL Modifier: final", "DEL SimpleName: GenieException", "DEL TextElement:  Throw exception in case of failure while intializing the writer", "DEL Modifier: final", "DEL SimpleName: command", "DEL TagElement: @param", "DEL MethodInvocation", "DEL StringLiteral: \";\"", "DEL InfixExpression: +", "DEL SimpleType: IllegalAccessException", "DEL StringLiteral: \"UTF-8\"", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: JobExecutionEnvironment", "DEL SimpleName: String", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: JobExecutor", "DEL SimpleType: GenieServerException", "DEL StringLiteral: \"Can't get process id for job\"", "DEL SimpleName: processCommand", "DEL Block", "DEL IfStatement", "DEL SimpleName: jobExecEnv", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: GENIE_COMMAND_DIR_ENV_VAR", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"/cluster\"", "DEL SimpleName: toPath", "DEL Block", "DEL StringLiteral: \" \"", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL FieldAccess", "DEL StringLiteral: \"/job/\"", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleType: Field", "DEL Modifier: final", "DEL SimpleName: jobWorkingDir", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL InfixExpression: +", "DEL SimpleName: String", "DEL SimpleName: content", "DEL SimpleName: pb", "DEL InfixExpression: &&", "DEL Modifier: static", "DEL PrimitiveType: void", "DEL SimpleName: ProcessBuilder", "DEL SimpleName: redirectOutput", "DEL ThisExpression", "DEL SimpleName: FileCopyService", "DEL Modifier: static", "DEL Modifier: static", "DEL SimpleName: appendToWriter", "DEL Modifier: final", "DEL SimpleName: StringUtils", "DEL StringLiteral: \"./job/stdout\"", "DEL MethodInvocation", "DEL SimpleName: processId", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: hostname", "DEL SimpleName: GenieException", "DEL SimpleName: newArrayList", "DEL SimpleType: IOException", "DEL StringLiteral: \"Cannot run job as working directory is not set\"", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: fileWriter", "DEL SimpleName: jobWorkingDir", "DEL Modifier: static", "DEL TagElement", "DEL SimpleName: IOException", "DEL SimpleType: File", "DEL SimpleName: jobExecEnv", "DEL SimpleName: getApplications", "DEL Modifier: private", "DEL SimpleName: jobExecEnv", "DEL SimpleName: errCode", "DEL FieldDeclaration", "DEL SimpleName: JobExecutor", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL Block", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"/command\"", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: isNotBlank", "DEL FieldAccess", "DEL SimpleName: IllegalArgumentException", "DEL StringLiteral: \";\"", "DEL CatchClause", "DEL FieldAccess", "DEL TagElement: @param", "DEL MethodInvocation", "DEL SimpleName: valueOf", "DEL SimpleType: GenieException", "DEL SimpleName: jobExecEnv", "DEL InfixExpression: +", "DEL SimpleName: makeDir", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: GenieServerException", "DEL MethodDeclaration", "DEL SimpleName: ie", "DEL SimpleName: mode", "DEL StringLiteral: \"Unable to start command \"", "DEL SimpleName: proc", "DEL SimpleType: ProcessBuilder", "DEL SimpleName: GenieServerException", "DEL TagElement: @throws", "DEL Modifier: final", "DEL InfixExpression: +", "DEL InfixExpression: +", "DEL StringLiteral: \"/command/\"", "DEL FieldDeclaration", "DEL SimpleName: File", "DEL SimpleName: getFileName", "DEL SimpleType: String", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: FileCopyService", "DEL SimpleName: File", "DEL SimpleName: appendToWriter", "DEL SimpleName: src", "DEL PrimitiveType: int", "DEL TextElement: Class that contains the logic to setup a genie job and run it.", "DEL SimpleName: GenieException", "DEL TextElement:  The directory path to create", "DEL SimpleName: String", "DEL Modifier: final", "DEL SimpleName: StringUtils", "DEL StringLiteral: \"/\"", "DEL Modifier: final", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: getId", "DEL StringLiteral: \"./genie/genie.done\"", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleName: jobWorkingDir", "DEL StringLiteral: \"/\"", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: ProcessBuilder", "DEL SimpleType: GenieException", "DEL Assignment: =", "DEL SimpleName: command", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL MethodInvocation", "DEL TextElement:  java process object representing the job launcher", "DEL MethodInvocation", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: getExecutable", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL MethodInvocation", "DEL StringLiteral: \"Unable to execute bash command\"", "DEL SimpleName: makeDir", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleType: String", "DEL Block", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL Modifier: static", "DEL InfixExpression: +", "DEL SimpleName: setupFilePath", "DEL SimpleName: getCommand", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: processApplications", "DEL StringLiteral: \"\\n\"", "DEL UnionType: IllegalAccessException|IllegalArgumentException|NoSuchFieldException|SecurityException", "DEL SimpleName: getJobWorkingDir", "DEL SimpleName: makeDir", "DEL SimpleName: pb", "DEL SimpleName: getCommandArgs", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL NormalAnnotation", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL SimpleName: setupFilePath", "DEL Block", "DEL TextElement:  Throw exception in case of failure while closing the writer", "DEL StringLiteral: \";\"", "DEL Block", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getProcessId", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL SimpleName: content", "DEL InfixExpression: +", "DEL TagElement: @param", "DEL SimpleName: getJobRequest", "DEL Modifier: private", "DEL Block", "DEL TextElement:  The destination path to copy", "DEL VariableDeclarationStatement", "DEL SimpleName: StringUtils", "DEL ThisExpression", "DEL SimpleName: pb", "DEL SimpleName: e", "DEL TagElement", "DEL SimpleName: setProcessId"]}]}}, {"JobExecutor_diff": {"operations": ["Delete QualifiedName: com.netflix.genie.core.jobs(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: com.google.common.collect.Lists(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: com.netflix.genie.common.dto.Application(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: com.netflix.genie.common.exceptions.GenieException(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.netflix.genie.common.exceptions.GenieServerException(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: com.netflix.genie.core.services.FileCopyService(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.commons.lang3.StringUtils(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.slf4j.Logger(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.slf4j.LoggerFactory(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: javax.validation.constraints.NotNull(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.File(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.FileOutputStream(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.io.IOException(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.io.OutputStreamWriter(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.io.Writer(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: java.nio.file.Path(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.util.List(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.util.ArrayList(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: java.net.InetAddress(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: java.lang.reflect.Field(38)", "Delete ImportDeclaration(39)", "Delete TextElement: Class that contains the logic to setup a genie job and run it.(40)", "Delete TagElement(41)", "Delete TextElement:  amsharma(42)", "Delete TagElement: @author(43)", "Delete TextElement:  3.0.0(44)", "Delete TagElement: @since(45)", "Delete Javadoc(46)", "Delete Modifier: public(47)", "Delete SimpleName: JobExecutor(48)", "Delete Modifier: protected(49)", "Delete Modifier: static(50)", "Delete Modifier: final(51)", "Delete SimpleName: String(52)", "Delete SimpleType: String(53)", "Delete SimpleName: GENIE_JOB_LAUNCHER_SCRIPT(54)", "Delete StringLiteral: \"genie_job_launcher.sh\"(55)", "Delete VariableDeclarationFragment(56)", "Delete FieldDeclaration(57)", "Delete Modifier: private(58)", "Delete Modifier: static(59)", "Delete Modifier: final(60)", "Delete SimpleName: Logger(61)", "Delete SimpleType: Logger(62)", "Delete SimpleName: LOG(63)", "Delete SimpleName: LoggerFactory(64)", "Delete SimpleName: getLogger(65)", "Delete SimpleName: JobExecutor(66)", "Delete SimpleType: JobExecutor(67)", "Delete TypeLiteral(68)", "Delete MethodInvocation(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete Modifier: private(72)", "Delete Modifier: static(73)", "Delete Modifier: final(74)", "Delete SimpleName: String(75)", "Delete SimpleType: String(76)", "Delete SimpleName: PID(77)", "Delete StringLiteral: \"pid\"(78)", "Delete VariableDeclarationFragment(79)", "Delete FieldDeclaration(80)", "Delete Modifier: private(81)", "Delete Modifier: static(82)", "Delete Modifier: final(83)", "Delete SimpleName: String(84)", "Delete SimpleType: String(85)", "Delete SimpleName: STDERR_LOG_PATH(86)", "Delete StringLiteral: \"./job/stderr\"(87)", "Delete VariableDeclarationFragment(88)", "Delete FieldDeclaration(89)", "Delete Modifier: private(90)", "Delete Modifier: static(91)", "Delete Modifier: final(92)", "Delete SimpleName: String(93)", "Delete SimpleType: String(94)", "Delete SimpleName: STDOUT_LOG_PATH(95)", "Delete StringLiteral: \"./job/stdout\"(96)", "Delete VariableDeclarationFragment(97)", "Delete FieldDeclaration(98)", "Delete Modifier: private(99)", "Delete Modifier: static(100)", "Delete Modifier: final(101)", "Delete SimpleName: String(102)", "Delete SimpleType: String(103)", "Delete SimpleName: GENIE_LOG_PATH(104)", "Delete StringLiteral: \"/genie/logs/genie.log\"(105)", "Delete VariableDeclarationFragment(106)", "Delete FieldDeclaration(107)", "Delete Modifier: private(108)", "Delete Modifier: static(109)", "Delete Modifier: final(110)", "Delete SimpleName: String(111)", "Delete SimpleType: String(112)", "Delete SimpleName: GENIE_DONE_FILE(113)", "Delete StringLiteral: \"./genie/genie.done\"(114)", "Delete VariableDeclarationFragment(115)", "Delete FieldDeclaration(116)", "Delete Modifier: private(117)", "Delete Modifier: static(118)", "Delete Modifier: final(119)", "Delete SimpleName: String(120)", "Delete SimpleType: String(121)", "Delete SimpleName: GENIE_WORKING_DIR_ENV_VAR(122)", "Delete StringLiteral: \"GENIE_WORKING_DIR\"(123)", "Delete VariableDeclarationFragment(124)", "Delete FieldDeclaration(125)", "Delete Modifier: private(126)", "Delete Modifier: static(127)", "Delete Modifier: final(128)", "Delete SimpleName: String(129)", "Delete SimpleType: String(130)", "Delete SimpleName: GENIE_JOB_DIR_ENV_VAR(131)", "Delete StringLiteral: \"GENIE_JOB_DIR\"(132)", "Delete VariableDeclarationFragment(133)", "Delete FieldDeclaration(134)", "Delete Modifier: private(135)", "Delete Modifier: static(136)", "Delete Modifier: final(137)", "Delete SimpleName: String(138)", "Delete SimpleType: String(139)", "Delete SimpleName: GENIE_CLUSTER_DIR_ENV_VAR(140)", "Delete StringLiteral: \"GENIE_CLUSTER_DIR\"(141)", "Delete VariableDeclarationFragment(142)", "Delete FieldDeclaration(143)", "Delete Modifier: private(144)", "Delete Modifier: static(145)", "Delete Modifier: final(146)", "Delete SimpleName: String(147)", "Delete SimpleType: String(148)", "Delete SimpleName: GENIE_COMMAND_DIR_ENV_VAR(149)", "Delete StringLiteral: \"GENIE_COMMAND_DIR\"(150)", "Delete VariableDeclarationFragment(151)", "Delete FieldDeclaration(152)", "Delete Modifier: private(153)", "Delete Modifier: static(154)", "Delete Modifier: final(155)", "Delete SimpleName: String(156)", "Delete SimpleType: String(157)", "Delete SimpleName: GENIE_APPLICATION_DIR_ENV_VAR(158)", "Delete StringLiteral: \"GENIE_APPLICATION_DIR\"(159)", "Delete VariableDeclarationFragment(160)", "Delete FieldDeclaration(161)", "Delete Modifier: protected(162)", "Delete SimpleName: String(163)", "Delete SimpleType: String(164)", "Delete SimpleName: genieLauncherScript(165)", "Delete VariableDeclarationFragment(166)", "Delete FieldDeclaration(167)", "Delete Modifier: private(168)", "Delete Modifier: final(169)", "Delete SimpleName: JobExecutionEnvironment(170)", "Delete SimpleType: JobExecutionEnvironment(171)", "Delete SimpleName: jobExecEnv(172)", "Delete VariableDeclarationFragment(173)", "Delete FieldDeclaration(174)", "Delete Modifier: private(175)", "Delete SimpleName: List(176)", "Delete SimpleType: List(177)", "Delete SimpleName: FileCopyService(178)", "Delete SimpleType: FileCopyService(179)", "Delete ParameterizedType: List<FileCopyService>(180)", "Delete SimpleName: fileCopyServiceImpls(181)", "Delete VariableDeclarationFragment(182)", "Delete FieldDeclaration(183)", "Delete Modifier: private(184)", "Delete SimpleName: Writer(185)", "Delete SimpleType: Writer(186)", "Delete SimpleName: fileWriter(187)", "Delete VariableDeclarationFragment(188)", "Delete FieldDeclaration(189)", "Delete Modifier: private(190)", "Delete SimpleName: String(191)", "Delete SimpleType: String(192)", "Delete SimpleName: jobWorkingDir(193)", "Delete VariableDeclarationFragment(194)", "Delete FieldDeclaration(195)", "Delete Modifier: private(196)", "Delete SimpleName: String(197)", "Delete SimpleType: String(198)", "Delete SimpleName: mode(199)", "Delete VariableDeclarationFragment(200)", "Delete FieldDeclaration(201)", "Delete TextElement: Constructor Initialize the object using Job execution environment object.(202)", "Delete TagElement(203)", "Delete SimpleName: fileCopyServiceImpls(204)", "Delete TextElement:  List of implementations of the file copy interface(205)", "Delete TagElement: @param(206)", "Delete SimpleName: jobExecEnv(207)", "Delete TextElement:            The job execution environment details like the job, cluster,(208)", "Delete TextElement: command and applications(209)", "Delete TagElement: @param(210)", "Delete SimpleName: mode(211)", "Delete TextElement:  Whether to run it in full genie mode or just local.(212)", "Delete TagElement: @param(213)", "Delete SimpleName: GenieException(214)", "Delete TextElement:  Exception in case of an error(215)", "Delete TagElement: @throws(216)", "Delete Javadoc(217)", "Delete Modifier: public(218)", "Delete SimpleName: JobExecutor(219)", "Delete Modifier: final(220)", "Delete SimpleName: List(221)", "Delete SimpleType: List(222)", "Delete SimpleName: FileCopyService(223)", "Delete SimpleType: FileCopyService(224)", "Delete ParameterizedType: List<FileCopyService>(225)", "Delete SimpleName: fileCopyServiceImpls(226)", "Delete SingleVariableDeclaration(227)", "Delete SimpleName: NotNull(228)", "Delete SimpleName: message(229)", "Delete StringLiteral: \"Cannot initialize with null JobExecEnv\"(230)", "Delete MemberValuePair(231)", "Delete NormalAnnotation(232)", "Delete Modifier: final(233)", "Delete SimpleName: JobExecutionEnvironment(234)", "Delete SimpleType: JobExecutionEnvironment(235)", "Delete SimpleName: jobExecEnv(236)", "Delete SingleVariableDeclaration(237)", "Delete Modifier: final(238)", "Delete SimpleName: String(239)", "Delete SimpleType: String(240)", "Delete SimpleName: mode(241)", "Delete SingleVariableDeclaration(242)", "Delete SimpleName: GenieException(243)", "Delete SimpleType: GenieException(244)", "Delete ThisExpression(245)", "Delete SimpleName: fileCopyServiceImpls(246)", "Delete FieldAccess(247)", "Delete SimpleName: fileCopyServiceImpls(248)", "Delete Assignment: =(249)", "Delete ExpressionStatement(250)", "Delete ThisExpression(251)", "Delete SimpleName: jobExecEnv(252)", "Delete FieldAccess(253)", "Delete SimpleName: jobExecEnv(254)", "Delete Assignment: =(255)", "Delete ExpressionStatement(256)", "Delete ThisExpression(257)", "Delete SimpleName: mode(258)", "Delete FieldAccess(259)", "Delete SimpleName: mode(260)", "Delete Assignment: =(261)", "Delete ExpressionStatement(262)", "Delete ThisExpression(263)", "Delete SimpleName: jobExecEnv(264)", "Delete FieldAccess(265)", "Delete SimpleName: getJobWorkingDir(266)", "Delete MethodInvocation(267)", "Delete NullLiteral(268)", "Delete InfixExpression: ==(269)", "Delete SimpleName: StringUtils(270)", "Delete SimpleName: isBlank(271)", "Delete ThisExpression(272)", "Delete SimpleName: jobExecEnv(273)", "Delete FieldAccess(274)", "Delete SimpleName: getJobWorkingDir(275)", "Delete MethodInvocation(276)", "Delete MethodInvocation(277)", "Delete InfixExpression: ||(278)", "Delete SimpleName: GenieServerException(279)", "Delete SimpleType: GenieServerException(280)", "Delete StringLiteral: \"Cannot run job as working directory is not set\"(281)", "Delete ClassInstanceCreation(282)", "Delete ThrowStatement(283)", "Delete Block(284)", "Delete ThisExpression(285)", "Delete SimpleName: jobWorkingDir(286)", "Delete FieldAccess(287)", "Delete SimpleName: jobExecEnv(288)", "Delete SimpleName: getJobWorkingDir(289)", "Delete MethodInvocation(290)", "Delete Assignment: =(291)", "Delete ExpressionStatement(292)", "Delete Block(293)", "Delete IfStatement(294)", "Delete SimpleName: genieLauncherScript(295)", "Delete ThisExpression(296)", "Delete SimpleName: jobWorkingDir(297)", "Delete FieldAccess(298)", "Delete StringLiteral: \"/\"(299)", "Delete SimpleName: GENIE_JOB_LAUNCHER_SCRIPT(300)", "Delete InfixExpression: +(301)", "Delete Assignment: =(302)", "Delete ExpressionStatement(303)", "Delete SimpleName: makeDir(304)", "Delete SimpleName: jobExecEnv(305)", "Delete SimpleName: getJobWorkingDir(306)", "Delete MethodInvocation(307)", "Delete MethodInvocation(308)", "Delete ExpressionStatement(309)", "Delete SimpleName: makeDir(310)", "Delete SimpleName: jobExecEnv(311)", "Delete SimpleName: getJobWorkingDir(312)", "Delete MethodInvocation(313)", "Delete StringLiteral: \"/genie\"(314)", "Delete InfixExpression: +(315)", "Delete MethodInvocation(316)", "Delete ExpressionStatement(317)", "Delete SimpleName: makeDir(318)", "Delete SimpleName: jobExecEnv(319)", "Delete SimpleName: getJobWorkingDir(320)", "Delete MethodInvocation(321)", "Delete StringLiteral: \"/genie/logs\"(322)", "Delete InfixExpression: +(323)", "Delete MethodInvocation(324)", "Delete ExpressionStatement(325)", "Delete SimpleName: initializeWriter(326)", "Delete MethodInvocation(327)", "Delete ExpressionStatement(328)", "Delete Block(329)", "Delete MethodDeclaration(330)", "Delete TextElement: Method that sets up the job directory and runs based on mode specified.(331)", "Delete TagElement(332)", "Delete SimpleName: GenieException(333)", "Delete TextElement:  Throw exception in case of error.(334)", "Delete TagElement: @throws(335)", "Delete Javadoc(336)", "Delete Modifier: public(337)", "Delete PrimitiveType: void(338)", "Delete SimpleName: execute(339)", "Delete SimpleName: GenieException(340)", "Delete SimpleType: GenieException(341)", "Delete SimpleName: processApplications(342)", "Delete MethodInvocation(343)", "Delete ExpressionStatement(344)", "Delete SimpleName: processCommand(345)", "Delete MethodInvocation(346)", "Delete ExpressionStatement(347)", "Delete SimpleName: processCluster(348)", "Delete MethodInvocation(349)", "Delete ExpressionStatement(350)", "Delete SimpleName: processJob(351)", "Delete MethodInvocation(352)", "Delete ExpressionStatement(353)", "Delete SimpleName: closeWriter(354)", "Delete MethodInvocation(355)", "Delete ExpressionStatement(356)", "Delete ThisExpression(357)", "Delete SimpleName: mode(358)", "Delete FieldAccess(359)", "Delete SimpleName: equals(360)", "Delete StringLiteral: \"genie\"(361)", "Delete MethodInvocation(362)", "Delete SimpleName: startJob(363)", "Delete MethodInvocation(364)", "Delete ExpressionStatement(365)", "Delete Block(366)", "Delete IfStatement(367)", "Delete Block(368)", "Delete MethodDeclaration(369)", "Delete TextElement: Method that starts the execution of the job and updates the database with its execution details.(370)", "Delete TagElement(371)", "Delete Javadoc(372)", "Delete Modifier: private(373)", "Delete PrimitiveType: void(374)", "Delete SimpleName: startJob(375)", "Delete SimpleName: GenieException(376)", "Delete SimpleType: GenieException(377)", "Delete Modifier: final(378)", "Delete SimpleName: List(379)", "Delete SimpleType: List(380)", "Delete SimpleName: command(381)", "Delete SimpleName: ArrayList(382)", "Delete SimpleType: ArrayList(383)", "Delete ParameterizedType: ArrayList<>(384)", "Delete ClassInstanceCreation(385)", "Delete VariableDeclarationFragment(386)", "Delete VariableDeclarationStatement(387)", "Delete SimpleName: command(388)", "Delete SimpleName: add(389)", "Delete StringLiteral: \"bash\"(390)", "Delete MethodInvocation(391)", "Delete ExpressionStatement(392)", "Delete SimpleName: command(393)", "Delete SimpleName: add(394)", "Delete SimpleName: genieLauncherScript(395)", "Delete MethodInvocation(396)", "Delete ExpressionStatement(397)", "Delete Modifier: final(398)", "Delete SimpleName: ProcessBuilder(399)", "Delete SimpleType: ProcessBuilder(400)", "Delete SimpleName: pb(401)", "Delete SimpleName: ProcessBuilder(402)", "Delete SimpleType: ProcessBuilder(403)", "Delete SimpleName: command(404)", "Delete ClassInstanceCreation(405)", "Delete VariableDeclarationFragment(406)", "Delete VariableDeclarationStatement(407)", "Delete SimpleName: pb(408)", "Delete SimpleName: directory(409)", "Delete SimpleName: File(410)", "Delete SimpleType: File(411)", "Delete ThisExpression(412)", "Delete SimpleName: jobWorkingDir(413)", "Delete FieldAccess(414)", "Delete ClassInstanceCreation(415)", "Delete MethodInvocation(416)", "Delete ExpressionStatement(417)", "Delete SimpleName: pb(418)", "Delete SimpleName: redirectOutput(419)", "Delete SimpleName: File(420)", "Delete SimpleType: File(421)", "Delete ThisExpression(422)", "Delete SimpleName: jobWorkingDir(423)", "Delete FieldAccess(424)", "Delete SimpleName: GENIE_LOG_PATH(425)", "Delete InfixExpression: +(426)", "Delete ClassInstanceCreation(427)", "Delete MethodInvocation(428)", "Delete ExpressionStatement(429)", "Delete SimpleName: pb(430)", "Delete SimpleName: redirectError(431)", "Delete SimpleName: File(432)", "Delete SimpleType: File(433)", "Delete ThisExpression(434)", "Delete SimpleName: jobWorkingDir(435)", "Delete FieldAccess(436)", "Delete SimpleName: GENIE_LOG_PATH(437)", "Delete InfixExpression: +(438)", "Delete ClassInstanceCreation(439)", "Delete MethodInvocation(440)", "Delete ExpressionStatement(441)", "Delete Modifier: final(442)", "Delete SimpleName: Process(443)", "Delete SimpleType: Process(444)", "Delete SimpleName: process(445)", "Delete SimpleName: pb(446)", "Delete SimpleName: start(447)", "Delete MethodInvocation(448)", "Delete VariableDeclarationFragment(449)", "Delete VariableDeclarationStatement(450)", "Delete Modifier: final(451)", "Delete SimpleName: String(452)", "Delete SimpleType: String(453)", "Delete SimpleName: hostname(454)", "Delete SimpleName: InetAddress(455)", "Delete SimpleName: getLocalHost(456)", "Delete MethodInvocation(457)", "Delete SimpleName: getHostAddress(458)", "Delete MethodInvocation(459)", "Delete VariableDeclarationFragment(460)", "Delete VariableDeclarationStatement(461)", "Delete Modifier: final(462)", "Delete PrimitiveType: int(463)", "Delete SimpleName: processId(464)", "Delete ThisExpression(465)", "Delete SimpleName: getProcessId(466)", "Delete SimpleName: process(467)", "Delete MethodInvocation(468)", "Delete VariableDeclarationFragment(469)", "Delete VariableDeclarationStatement(470)", "Delete SimpleName: jobExecEnv(471)", "Delete SimpleName: setProcessId(472)", "Delete SimpleName: processId(473)", "Delete MethodInvocation(474)", "Delete ExpressionStatement(475)", "Delete SimpleName: jobExecEnv(476)", "Delete SimpleName: setHostname(477)", "Delete SimpleName: hostname(478)", "Delete MethodInvocation(479)", "Delete ExpressionStatement(480)", "Delete Block(481)", "Delete SimpleName: IOException(482)", "Delete SimpleType: IOException(483)", "Delete SimpleName: ie(484)", "Delete SingleVariableDeclaration(485)", "Delete SimpleName: GenieServerException(486)", "Delete SimpleType: GenieServerException(487)", "Delete StringLiteral: \"Unable to start command \"(488)", "Delete SimpleName: String(489)", "Delete SimpleName: valueOf(490)", "Delete SimpleName: command(491)", "Delete MethodInvocation(492)", "Delete InfixExpression: +(493)", "Delete SimpleName: ie(494)", "Delete ClassInstanceCreation(495)", "Delete ThrowStatement(496)", "Delete Block(497)", "Delete CatchClause(498)", "Delete TryStatement(499)", "Delete Block(500)", "Delete MethodDeclaration(501)", "Delete TextElement: Method that sets up the current working directory for executing the job.(502)", "Delete TagElement(503)", "Delete Javadoc(504)", "Delete Modifier: private(505)", "Delete PrimitiveType: void(506)", "Delete SimpleName: setupWorkingDirectory(507)", "Delete SimpleName: GenieException(508)", "Delete SimpleType: GenieException(509)", "Delete SimpleName: makeDir(510)", "Delete SimpleName: jobExecEnv(511)", "Delete SimpleName: getJobWorkingDir(512)", "Delete MethodInvocation(513)", "Delete MethodInvocation(514)", "Delete ExpressionStatement(515)", "Delete SimpleName: makeDir(516)", "Delete SimpleName: jobExecEnv(517)", "Delete SimpleName: getJobWorkingDir(518)", "Delete MethodInvocation(519)", "Delete StringLiteral: \"/job\"(520)", "Delete InfixExpression: +(521)", "Delete MethodInvocation(522)", "Delete ExpressionStatement(523)", "Delete SimpleName: makeDir(524)", "Delete SimpleName: jobExecEnv(525)", "Delete SimpleName: getJobWorkingDir(526)", "Delete MethodInvocation(527)", "Delete StringLiteral: \"/cluster\"(528)", "Delete InfixExpression: +(529)", "Delete MethodInvocation(530)", "Delete ExpressionStatement(531)", "Delete SimpleName: makeDir(532)", "Delete SimpleName: jobExecEnv(533)", "Delete SimpleName: getJobWorkingDir(534)", "Delete MethodInvocation(535)", "Delete StringLiteral: \"/command\"(536)", "Delete InfixExpression: +(537)", "Delete MethodInvocation(538)", "Delete ExpressionStatement(539)", "Delete SimpleName: makeDir(540)", "Delete SimpleName: jobExecEnv(541)", "Delete SimpleName: getJobWorkingDir(542)", "Delete MethodInvocation(543)", "Delete StringLiteral: \"/applications\"(544)", "Delete InfixExpression: +(545)", "Delete MethodInvocation(546)", "Delete ExpressionStatement(547)", "Delete Block(548)", "Delete MethodDeclaration(549)", "Delete TextElement: Process all applications content needed for the job to run.(550)", "Delete TagElement(551)", "Delete Javadoc(552)", "Delete Modifier: private(553)", "Delete PrimitiveType: void(554)", "Delete SimpleName: processApplications(555)", "Delete SimpleName: GenieException(556)", "Delete SimpleType: GenieException(557)", "Delete SimpleName: makeDir(558)", "Delete ThisExpression(559)", "Delete SimpleName: jobWorkingDir(560)", "Delete FieldAccess(561)", "Delete StringLiteral: \"/applications\"(562)", "Delete InfixExpression: +(563)", "Delete MethodInvocation(564)", "Delete ExpressionStatement(565)", "Delete SimpleName: Application(566)", "Delete SimpleType: Application(567)", "Delete SimpleName: application(568)", "Delete SingleVariableDeclaration(569)", "Delete ThisExpression(570)", "Delete SimpleName: jobExecEnv(571)", "Delete FieldAccess(572)", "Delete SimpleName: getApplications(573)", "Delete MethodInvocation(574)", "Delete SimpleName: makeDir(575)", "Delete SimpleName: jobExecEnv(576)", "Delete SimpleName: getJobWorkingDir(577)", "Delete MethodInvocation(578)", "Delete StringLiteral: \"/applications/\"(579)", "Delete SimpleName: application(580)", "Delete SimpleName: getId(581)", "Delete MethodInvocation(582)", "Delete InfixExpression: +(583)", "Delete MethodInvocation(584)", "Delete ExpressionStatement(585)", "Delete Modifier: final(586)", "Delete SimpleName: String(587)", "Delete SimpleType: String(588)", "Delete SimpleName: applicationSetupFile(589)", "Delete SimpleName: application(590)", "Delete SimpleName: getSetupFile(591)", "Delete MethodInvocation(592)", "Delete VariableDeclarationFragment(593)", "Delete VariableDeclarationStatement(594)", "Delete SimpleName: applicationSetupFile(595)", "Delete NullLiteral(596)", "Delete InfixExpression: !=(597)", "Delete SimpleName: StringUtils(598)", "Delete SimpleName: isNotBlank(599)", "Delete SimpleName: applicationSetupFile(600)", "Delete MethodInvocation(601)", "Delete InfixExpression: &&(602)", "Delete Modifier: final(603)", "Delete SimpleName: Path(604)", "Delete SimpleType: Path(605)", "Delete SimpleName: setupFilePath(606)", "Delete SimpleName: File(607)", "Delete SimpleType: File(608)", "Delete SimpleName: applicationSetupFile(609)", "Delete ClassInstanceCreation(610)", "Delete SimpleName: toPath(611)", "Delete MethodInvocation(612)", "Delete VariableDeclarationFragment(613)", "Delete VariableDeclarationStatement(614)", "Delete Modifier: final(615)", "Delete SimpleName: String(616)", "Delete SimpleType: String(617)", "Delete SimpleName: setupFileLocalPath(618)", "Delete SimpleName: jobExecEnv(619)", "Delete SimpleName: getJobWorkingDir(620)", "Delete MethodInvocation(621)", "Delete StringLiteral: \"/applications/\"(622)", "Delete SimpleName: application(623)", "Delete SimpleName: getId(624)", "Delete MethodInvocation(625)", "Delete StringLiteral: \"/\"(626)", "Delete SimpleName: setupFilePath(627)", "Delete SimpleName: getFileName(628)", "Delete MethodInvocation(629)", "Delete InfixExpression: +(630)", "Delete VariableDeclarationFragment(631)", "Delete VariableDeclarationStatement(632)", "Delete SimpleName: appendToWriter(633)", "Delete StringLiteral: \"source \"(634)", "Delete SimpleName: setupFileLocalPath(635)", "Delete StringLiteral: \";\"(636)", "Delete InfixExpression: +(637)", "Delete MethodInvocation(638)", "Delete ExpressionStatement(639)", "Delete Block(640)", "Delete IfStatement(641)", "Delete Block(642)", "Delete EnhancedForStatement(643)", "Delete Block(644)", "Delete MethodDeclaration(645)", "Delete TextElement: Process the command content needed for the job to run.(646)", "Delete TagElement(647)", "Delete Javadoc(648)", "Delete Modifier: private(649)", "Delete PrimitiveType: void(650)", "Delete SimpleName: processCommand(651)", "Delete SimpleName: GenieException(652)", "Delete SimpleType: GenieException(653)", "Delete SimpleName: makeDir(654)", "Delete ThisExpression(655)", "Delete SimpleName: jobWorkingDir(656)", "Delete FieldAccess(657)", "Delete StringLiteral: \"/command\"(658)", "Delete InfixExpression: +(659)", "Delete MethodInvocation(660)", "Delete ExpressionStatement(661)", "Delete SimpleName: makeDir(662)", "Delete SimpleName: jobExecEnv(663)", "Delete SimpleName: getJobWorkingDir(664)", "Delete MethodInvocation(665)", "Delete StringLiteral: \"/command/\"(666)", "Delete SimpleName: jobExecEnv(667)", "Delete SimpleName: getCommand(668)", "Delete MethodInvocation(669)", "Delete SimpleName: getId(670)", "Delete MethodInvocation(671)", "Delete InfixExpression: +(672)", "Delete MethodInvocation(673)", "Delete ExpressionStatement(674)", "Delete Modifier: final(675)", "Delete SimpleName: String(676)", "Delete SimpleType: String(677)", "Delete SimpleName: commandSetupFile(678)", "Delete SimpleName: jobExecEnv(679)", "Delete SimpleName: getCommand(680)", "Delete MethodInvocation(681)", "Delete SimpleName: getSetupFile(682)", "Delete MethodInvocation(683)", "Delete VariableDeclarationFragment(684)", "Delete VariableDeclarationStatement(685)", "Delete SimpleName: commandSetupFile(686)", "Delete NullLiteral(687)", "Delete InfixExpression: !=(688)", "Delete SimpleName: StringUtils(689)", "Delete SimpleName: isNotBlank(690)", "Delete SimpleName: commandSetupFile(691)", "Delete MethodInvocation(692)", "Delete InfixExpression: &&(693)", "Delete Modifier: final(694)", "Delete SimpleName: Path(695)", "Delete SimpleType: Path(696)", "Delete SimpleName: setupFilePath(697)", "Delete SimpleName: File(698)", "Delete SimpleType: File(699)", "Delete SimpleName: commandSetupFile(700)", "Delete ClassInstanceCreation(701)", "Delete SimpleName: toPath(702)", "Delete MethodInvocation(703)", "Delete VariableDeclarationFragment(704)", "Delete VariableDeclarationStatement(705)", "Delete Modifier: final(706)", "Delete SimpleName: String(707)", "Delete SimpleType: String(708)", "Delete SimpleName: setupFileLocalPath(709)", "Delete SimpleName: jobExecEnv(710)", "Delete SimpleName: getJobWorkingDir(711)", "Delete MethodInvocation(712)", "Delete StringLiteral: \"/applications/\"(713)", "Delete SimpleName: jobExecEnv(714)", "Delete SimpleName: getCommand(715)", "Delete MethodInvocation(716)", "Delete SimpleName: getId(717)", "Delete MethodInvocation(718)", "Delete StringLiteral: \"/\"(719)", "Delete SimpleName: setupFilePath(720)", "Delete SimpleName: getFileName(721)", "Delete MethodInvocation(722)", "Delete InfixExpression: +(723)", "Delete VariableDeclarationFragment(724)", "Delete VariableDeclarationStatement(725)", "Delete SimpleName: appendToWriter(726)", "Delete StringLiteral: \"source \"(727)", "Delete SimpleName: setupFileLocalPath(728)", "Delete StringLiteral: \";\"(729)", "Delete InfixExpression: +(730)", "Delete MethodInvocation(731)", "Delete ExpressionStatement(732)", "Delete Block(733)", "Delete IfStatement(734)", "Delete Block(735)", "Delete MethodDeclaration(736)", "Delete TextElement: Process the cluster content needed for the job to run.(737)", "Delete TagElement(738)", "Delete Javadoc(739)", "Delete Modifier: private(740)", "Delete PrimitiveType: void(741)", "Delete SimpleName: processCluster(742)", "Delete SimpleName: GenieException(743)", "Delete SimpleType: GenieException(744)", "Delete SimpleName: makeDir(745)", "Delete ThisExpression(746)", "Delete SimpleName: jobWorkingDir(747)", "Delete FieldAccess(748)", "Delete StringLiteral: \"/cluster\"(749)", "Delete InfixExpression: +(750)", "Delete MethodInvocation(751)", "Delete ExpressionStatement(752)", "Delete SimpleName: makeDir(753)", "Delete SimpleName: jobExecEnv(754)", "Delete SimpleName: getJobWorkingDir(755)", "Delete MethodInvocation(756)", "Delete StringLiteral: \"/cluster/\"(757)", "Delete SimpleName: jobExecEnv(758)", "Delete SimpleName: getCluster(759)", "Delete MethodInvocation(760)", "Delete SimpleName: getId(761)", "Delete MethodInvocation(762)", "Delete InfixExpression: +(763)", "Delete MethodInvocation(764)", "Delete ExpressionStatement(765)", "Delete Block(766)", "Delete MethodDeclaration(767)", "Delete TextElement: Process the Job content needed for the job to run.(768)", "Delete TagElement(769)", "Delete Javadoc(770)", "Delete Modifier: protected(771)", "Delete PrimitiveType: void(772)", "Delete SimpleName: processJob(773)", "Delete SimpleName: GenieException(774)", "Delete SimpleType: GenieException(775)", "Delete SimpleName: makeDir(776)", "Delete SimpleName: jobExecEnv(777)", "Delete SimpleName: getJobWorkingDir(778)", "Delete MethodInvocation(779)", "Delete StringLiteral: \"/job\"(780)", "Delete InfixExpression: +(781)", "Delete MethodInvocation(782)", "Delete ExpressionStatement(783)", "Delete Modifier: final(784)", "Delete SimpleName: String(785)", "Delete SimpleType: String(786)", "Delete SimpleName: jobSetupFile(787)", "Delete SimpleName: jobExecEnv(788)", "Delete SimpleName: getJobRequest(789)", "Delete MethodInvocation(790)", "Delete SimpleName: getSetupFile(791)", "Delete MethodInvocation(792)", "Delete VariableDeclarationFragment(793)", "Delete VariableDeclarationStatement(794)", "Delete SimpleName: jobSetupFile(795)", "Delete NullLiteral(796)", "Delete InfixExpression: !=(797)", "Delete SimpleName: StringUtils(798)", "Delete SimpleName: isNotBlank(799)", "Delete SimpleName: jobSetupFile(800)", "Delete MethodInvocation(801)", "Delete InfixExpression: &&(802)", "Delete Modifier: final(803)", "Delete SimpleName: Path(804)", "Delete SimpleType: Path(805)", "Delete SimpleName: setupFilePath(806)", "Delete SimpleName: File(807)", "Delete SimpleType: File(808)", "Delete SimpleName: jobSetupFile(809)", "Delete ClassInstanceCreation(810)", "Delete SimpleName: toPath(811)", "Delete MethodInvocation(812)", "Delete VariableDeclarationFragment(813)", "Delete VariableDeclarationStatement(814)", "Delete Modifier: final(815)", "Delete SimpleName: String(816)", "Delete SimpleType: String(817)", "Delete SimpleName: setupFileLocalPath(818)", "Delete SimpleName: jobExecEnv(819)", "Delete SimpleName: getJobWorkingDir(820)", "Delete MethodInvocation(821)", "Delete StringLiteral: \"/job/\"(822)", "Delete SimpleName: setupFilePath(823)", "Delete SimpleName: getFileName(824)", "Delete MethodInvocation(825)", "Delete InfixExpression: +(826)", "Delete VariableDeclarationFragment(827)", "Delete VariableDeclarationStatement(828)", "Delete SimpleName: appendToWriter(829)", "Delete StringLiteral: \"source \"(830)", "Delete SimpleName: setupFileLocalPath(831)", "Delete StringLiteral: \";\"(832)", "Delete InfixExpression: +(833)", "Delete MethodInvocation(834)", "Delete ExpressionStatement(835)", "Delete Block(836)", "Delete IfStatement(837)", "Delete ThisExpression(838)", "Delete SimpleName: mode(839)", "Delete FieldAccess(840)", "Delete SimpleName: equals(841)", "Delete StringLiteral: \"genie\"(842)", "Delete MethodInvocation(843)", "Delete SimpleName: appendToWriter(844)", "Delete SimpleName: jobExecEnv(845)", "Delete SimpleName: getCommand(846)", "Delete MethodInvocation(847)", "Delete SimpleName: getExecutable(848)", "Delete MethodInvocation(849)", "Delete StringLiteral: \" \"(850)", "Delete SimpleName: jobExecEnv(851)", "Delete SimpleName: getJobRequest(852)", "Delete MethodInvocation(853)", "Delete SimpleName: getCommandArgs(854)", "Delete MethodInvocation(855)", "Delete StringLiteral: \" > \"(856)", "Delete SimpleName: STDOUT_LOG_PATH(857)", "Delete StringLiteral: \" 2> \"(858)", "Delete SimpleName: STDERR_LOG_PATH(859)", "Delete InfixExpression: +(860)", "Delete MethodInvocation(861)", "Delete ExpressionStatement(862)", "Delete SimpleName: appendToWriter(863)", "Delete StringLiteral: \"echo $? > \"(864)", "Delete SimpleName: GENIE_DONE_FILE(865)", "Delete InfixExpression: +(866)", "Delete MethodInvocation(867)", "Delete ExpressionStatement(868)", "Delete Block(869)", "Delete SimpleName: appendToWriter(870)", "Delete SimpleName: jobExecEnv(871)", "Delete SimpleName: getCommand(872)", "Delete MethodInvocation(873)", "Delete SimpleName: getExecutable(874)", "Delete MethodInvocation(875)", "Delete StringLiteral: \" \"(876)", "Delete SimpleName: jobExecEnv(877)", "Delete SimpleName: getJobRequest(878)", "Delete MethodInvocation(879)", "Delete SimpleName: getCommandArgs(880)", "Delete MethodInvocation(881)", "Delete InfixExpression: +(882)", "Delete MethodInvocation(883)", "Delete ExpressionStatement(884)", "Delete Block(885)", "Delete IfStatement(886)", "Delete Block(887)", "Delete MethodDeclaration(888)", "Delete TextElement: Method to create directories on local unix filesystem.(889)", "Delete TagElement(890)", "Delete SimpleName: dirPath(891)", "Delete TextElement:  The directory path to create(892)", "Delete TagElement: @param(893)", "Delete SimpleName: GenieException(894)", "Delete TagElement: @throws(895)", "Delete Javadoc(896)", "Delete Modifier: private(897)", "Delete PrimitiveType: void(898)", "Delete SimpleName: makeDir(899)", "Delete Modifier: final(900)", "Delete SimpleName: String(901)", "Delete SimpleType: String(902)", "Delete SimpleName: dirPath(903)", "Delete SingleVariableDeclaration(904)", "Delete SimpleName: GenieException(905)", "Delete SimpleType: GenieException(906)", "Delete ThisExpression(907)", "Delete SimpleName: executeBashCommand(908)", "Delete SimpleName: Lists(909)", "Delete SimpleName: newArrayList(910)", "Delete StringLiteral: \"mkdir\"(911)", "Delete StringLiteral: \"-p\"(912)", "Delete SimpleName: dirPath(913)", "Delete MethodInvocation(914)", "Delete NullLiteral(915)", "Delete MethodInvocation(916)", "Delete ExpressionStatement(917)", "Delete Block(918)", "Delete MethodDeclaration(919)", "Delete TextElement: Method to iterate over a list of fileCopyImpls to copy files.(920)", "Delete TagElement(921)", "Delete SimpleName: src(922)", "Delete TextElement:   The source path to copy(923)", "Delete TagElement: @param(924)", "Delete SimpleName: dest(925)", "Delete TextElement:  The destination path to copy(926)", "Delete TagElement: @param(927)", "Delete Javadoc(928)", "Delete Modifier: private(929)", "Delete PrimitiveType: void(930)", "Delete SimpleName: copyFiles(931)", "Delete Modifier: final(932)", "Delete SimpleName: String(933)", "Delete SimpleType: String(934)", "Delete SimpleName: src(935)", "Delete SingleVariableDeclaration(936)", "Delete Modifier: final(937)", "Delete SimpleName: String(938)", "Delete SimpleType: String(939)", "Delete SimpleName: dest(940)", "Delete SingleVariableDeclaration(941)", "Delete SimpleName: GenieException(942)", "Delete SimpleType: GenieException(943)", "Delete Modifier: final(944)", "Delete SimpleName: FileCopyService(945)", "Delete SimpleType: FileCopyService(946)", "Delete SimpleName: fcs(947)", "Delete SingleVariableDeclaration(948)", "Delete ThisExpression(949)", "Delete SimpleName: fileCopyServiceImpls(950)", "Delete FieldAccess(951)", "Delete SimpleName: fcs(952)", "Delete SimpleName: isValid(953)", "Delete SimpleName: src(954)", "Delete MethodInvocation(955)", "Delete SimpleName: fcs(956)", "Delete SimpleName: copy(957)", "Delete SimpleName: src(958)", "Delete SimpleName: dest(959)", "Delete MethodInvocation(960)", "Delete ExpressionStatement(961)", "Delete Block(962)", "Delete SimpleName: GenieServerException(963)", "Delete SimpleType: GenieServerException(964)", "Delete StringLiteral: \"Genie not equipped to copy down files of this type.\"(965)", "Delete ClassInstanceCreation(966)", "Delete ThrowStatement(967)", "Delete Block(968)", "Delete IfStatement(969)", "Delete Block(970)", "Delete EnhancedForStatement(971)", "Delete Block(972)", "Delete MethodDeclaration(973)", "Delete TextElement: Helper method that executes a bash command.(974)", "Delete TagElement(975)", "Delete SimpleName: command(976)", "Delete TextElement:  An array consisting of the command to run(977)", "Delete TagElement: @param(978)", "Delete Javadoc(979)", "Delete Modifier: private(980)", "Delete PrimitiveType: void(981)", "Delete SimpleName: executeBashCommand(982)", "Delete Modifier: final(983)", "Delete SimpleName: List(984)", "Delete SimpleType: List(985)", "Delete SimpleName: String(986)", "Delete SimpleType: String(987)", "Delete ParameterizedType: List<String>(988)", "Delete SimpleName: command(989)", "Delete SingleVariableDeclaration(990)", "Delete Modifier: final(991)", "Delete SimpleName: String(992)", "Delete SimpleType: String(993)", "Delete SimpleName: workingDirectory(994)", "Delete SingleVariableDeclaration(995)", "Delete SimpleName: GenieException(996)", "Delete SimpleType: GenieException(997)", "Delete Modifier: final(998)", "Delete SimpleName: ProcessBuilder(999)", "Delete SimpleType: ProcessBuilder(1000)", "Delete SimpleName: pb(1001)", "Delete SimpleName: ProcessBuilder(1002)", "Delete SimpleType: ProcessBuilder(1003)", "Delete SimpleName: command(1004)", "Delete ClassInstanceCreation(1005)", "Delete VariableDeclarationFragment(1006)", "Delete VariableDeclarationStatement(1007)", "Delete SimpleName: workingDirectory(1008)", "Delete NullLiteral(1009)", "Delete InfixExpression: !=(1010)", "Delete SimpleName: pb(1011)", "Delete SimpleName: directory(1012)", "Delete SimpleName: File(1013)", "Delete SimpleType: File(1014)", "Delete SimpleName: workingDirectory(1015)", "Delete ClassInstanceCreation(1016)", "Delete MethodInvocation(1017)", "Delete ExpressionStatement(1018)", "Delete Block(1019)", "Delete IfStatement(1020)", "Delete Modifier: final(1021)", "Delete SimpleName: Process(1022)", "Delete SimpleType: Process(1023)", "Delete SimpleName: process(1024)", "Delete SimpleName: pb(1025)", "Delete SimpleName: start(1026)", "Delete MethodInvocation(1027)", "Delete VariableDeclarationFragment(1028)", "Delete VariableDeclarationStatement(1029)", "Delete Modifier: final(1030)", "Delete PrimitiveType: int(1031)", "Delete SimpleName: errCode(1032)", "Delete SimpleName: process(1033)", "Delete SimpleName: waitFor(1034)", "Delete MethodInvocation(1035)", "Delete VariableDeclarationFragment(1036)", "Delete VariableDeclarationStatement(1037)", "Delete SimpleName: errCode(1038)", "Delete NumberLiteral: 0(1039)", "Delete InfixExpression: !=(1040)", "Delete SimpleName: GenieServerException(1041)", "Delete SimpleType: GenieServerException(1042)", "Delete StringLiteral: \"Unable to execute bash command\"(1043)", "Delete SimpleName: String(1044)", "Delete SimpleName: valueOf(1045)", "Delete SimpleName: command(1046)", "Delete MethodInvocation(1047)", "Delete InfixExpression: +(1048)", "Delete ClassInstanceCreation(1049)", "Delete ThrowStatement(1050)", "Delete Block(1051)", "Delete IfStatement(1052)", "Delete Block(1053)", "Delete SimpleName: InterruptedException(1054)", "Delete SimpleType: InterruptedException(1055)", "Delete SimpleName: IOException(1056)", "Delete SimpleType: IOException(1057)", "Delete UnionType: InterruptedException|IOException(1058)", "Delete SimpleName: ie(1059)", "Delete SingleVariableDeclaration(1060)", "Delete SimpleName: GenieServerException(1061)", "Delete SimpleType: GenieServerException(1062)", "Delete StringLiteral: \"Unable to execute bash command\"(1063)", "Delete SimpleName: String(1064)", "Delete SimpleName: valueOf(1065)", "Delete SimpleName: command(1066)", "Delete MethodInvocation(1067)", "Delete InfixExpression: +(1068)", "Delete SimpleName: ie(1069)", "Delete ClassInstanceCreation(1070)", "Delete ThrowStatement(1071)", "Delete Block(1072)", "Delete CatchClause(1073)", "Delete TryStatement(1074)", "Delete Block(1075)", "Delete MethodDeclaration(1076)", "Delete TextElement: Initializes the writer to create job_launcher_script.sh.(1077)", "Delete TagElement(1078)", "Delete SimpleName: GenieException(1079)", "Delete TextElement:  Throw exception in case of failure while intializing the writer(1080)", "Delete TagElement: @throws(1081)", "Delete Javadoc(1082)", "Delete Modifier: private(1083)", "Delete PrimitiveType: void(1084)", "Delete SimpleName: initializeWriter(1085)", "Delete SimpleName: GenieException(1086)", "Delete SimpleType: GenieException(1087)", "Delete SimpleName: fileWriter(1088)", "Delete SimpleName: OutputStreamWriter(1089)", "Delete SimpleType: OutputStreamWriter(1090)", "Delete SimpleName: FileOutputStream(1091)", "Delete SimpleType: FileOutputStream(1092)", "Delete SimpleName: genieLauncherScript(1093)", "Delete ClassInstanceCreation(1094)", "Delete StringLiteral: \"UTF-8\"(1095)", "Delete ClassInstanceCreation(1096)", "Delete Assignment: =(1097)", "Delete ExpressionStatement(1098)", "Delete Block(1099)", "Delete SimpleName: IOException(1100)", "Delete SimpleType: IOException(1101)", "Delete SimpleName: ioe(1102)", "Delete SingleVariableDeclaration(1103)", "Delete SimpleName: GenieServerException(1104)", "Delete SimpleType: GenieServerException(1105)", "Delete StringLiteral: \"Could not open file to crate genie_launcher.sh\"(1106)", "Delete SimpleName: ioe(1107)", "Delete ClassInstanceCreation(1108)", "Delete ThrowStatement(1109)", "Delete Block(1110)", "Delete CatchClause(1111)", "Delete TryStatement(1112)", "Delete Block(1113)", "Delete MethodDeclaration(1114)", "Delete TextElement: Closes the writer to create job_launcher_script.sh.(1115)", "Delete TagElement(1116)", "Delete SimpleName: GenieException(1117)", "Delete TextElement:  Throw exception in case of failure while closing the writer(1118)", "Delete TagElement: @throws(1119)", "Delete Javadoc(1120)", "Delete Modifier: private(1121)", "Delete PrimitiveType: void(1122)", "Delete SimpleName: closeWriter(1123)", "Delete SimpleName: GenieException(1124)", "Delete SimpleType: GenieException(1125)", "Delete SimpleName: fileWriter(1126)", "Delete NullLiteral(1127)", "Delete InfixExpression: !=(1128)", "Delete SimpleName: fileWriter(1129)", "Delete SimpleName: close(1130)", "Delete MethodInvocation(1131)", "Delete ExpressionStatement(1132)", "Delete Block(1133)", "Delete IfStatement(1134)", "Delete Block(1135)", "Delete SimpleName: IOException(1136)", "Delete SimpleType: IOException(1137)", "Delete SimpleName: ioe(1138)", "Delete SingleVariableDeclaration(1139)", "Delete SimpleName: GenieServerException(1140)", "Delete SimpleType: GenieServerException(1141)", "Delete StringLiteral: \"Error closing file writer\"(1142)", "Delete SimpleName: ioe(1143)", "Delete ClassInstanceCreation(1144)", "Delete ThrowStatement(1145)", "Delete Block(1146)", "Delete CatchClause(1147)", "Delete TryStatement(1148)", "Delete Block(1149)", "Delete MethodDeclaration(1150)", "Delete TextElement: Appends content to the writer.(1151)", "Delete TagElement(1152)", "Delete SimpleName: content(1153)", "Delete TextElement:  The content to write.(1154)", "Delete TagElement: @param(1155)", "Delete SimpleName: GenieException(1156)", "Delete TextElement:  Throw exception in case of failure while writing content to writer.(1157)", "Delete TagElement: @throws(1158)", "Delete Javadoc(1159)", "Delete Modifier: private(1160)", "Delete PrimitiveType: void(1161)", "Delete SimpleName: appendToWriter(1162)", "Delete Modifier: final(1163)", "Delete SimpleName: String(1164)", "Delete SimpleType: String(1165)", "Delete SimpleName: content(1166)", "Delete SingleVariableDeclaration(1167)", "Delete SimpleName: GenieException(1168)", "Delete SimpleType: GenieException(1169)", "Delete SimpleName: content(1170)", "Delete NullLiteral(1171)", "Delete InfixExpression: !=(1172)", "Delete SimpleName: StringUtils(1173)", "Delete SimpleName: isNotBlank(1174)", "Delete SimpleName: content(1175)", "Delete MethodInvocation(1176)", "Delete InfixExpression: &&(1177)", "Delete SimpleName: fileWriter(1178)", "Delete SimpleName: write(1179)", "Delete SimpleName: content(1180)", "Delete MethodInvocation(1181)", "Delete ExpressionStatement(1182)", "Delete SimpleName: fileWriter(1183)", "Delete SimpleName: write(1184)", "Delete StringLiteral: \"\\n\"(1185)", "Delete MethodInvocation(1186)", "Delete ExpressionStatement(1187)", "Delete Block(1188)", "Delete IfStatement(1189)", "Delete Block(1190)", "Delete SimpleName: IOException(1191)", "Delete SimpleType: IOException(1192)", "Delete SimpleName: ioe(1193)", "Delete SingleVariableDeclaration(1194)", "Delete SimpleName: GenieServerException(1195)", "Delete SimpleType: GenieServerException(1196)", "Delete StringLiteral: \"Error closing file writer\"(1197)", "Delete SimpleName: ioe(1198)", "Delete ClassInstanceCreation(1199)", "Delete ThrowStatement(1200)", "Delete Block(1201)", "Delete CatchClause(1202)", "Delete TryStatement(1203)", "Delete Block(1204)", "Delete MethodDeclaration(1205)", "Delete TextElement: Get process id for the given process.(1206)", "Delete TagElement(1207)", "Delete SimpleName: proc(1208)", "Delete TextElement:  java process object representing the job launcher(1209)", "Delete TagElement: @param(1210)", "Delete TextElement:  pid for this process(1211)", "Delete TagElement: @return(1212)", "Delete SimpleName: GenieException(1213)", "Delete TextElement:  if there is an error getting the process id(1214)", "Delete TagElement: @throws(1215)", "Delete Javadoc(1216)", "Delete Modifier: private(1217)", "Delete PrimitiveType: int(1218)", "Delete SimpleName: getProcessId(1219)", "Delete Modifier: final(1220)", "Delete SimpleName: Process(1221)", "Delete SimpleType: Process(1222)", "Delete SimpleName: proc(1223)", "Delete SingleVariableDeclaration(1224)", "Delete SimpleName: GenieException(1225)", "Delete SimpleType: GenieException(1226)", "Delete SimpleName: LOG(1227)", "Delete SimpleName: debug(1228)", "Delete StringLiteral: \"called\"(1229)", "Delete MethodInvocation(1230)", "Delete ExpressionStatement(1231)", "Delete Modifier: final(1232)", "Delete SimpleName: Field(1233)", "Delete SimpleType: Field(1234)", "Delete SimpleName: f(1235)", "Delete SimpleName: proc(1236)", "Delete SimpleName: getClass(1237)", "Delete MethodInvocation(1238)", "Delete SimpleName: getDeclaredField(1239)", "Delete SimpleName: PID(1240)", "Delete MethodInvocation(1241)", "Delete VariableDeclarationFragment(1242)", "Delete VariableDeclarationStatement(1243)", "Delete SimpleName: f(1244)", "Delete SimpleName: setAccessible(1245)", "Delete BooleanLiteral: true(1246)", "Delete MethodInvocation(1247)", "Delete ExpressionStatement(1248)", "Delete SimpleName: f(1249)", "Delete SimpleName: getInt(1250)", "Delete SimpleName: proc(1251)", "Delete MethodInvocation(1252)", "Delete ReturnStatement(1253)", "Delete Block(1254)", "Delete Modifier: final(1255)", "Delete SimpleName: IllegalAccessException(1256)", "Delete SimpleType: IllegalAccessException(1257)", "Delete SimpleName: IllegalArgumentException(1258)", "Delete SimpleType: IllegalArgumentException(1259)", "Delete SimpleName: NoSuchFieldException(1260)", "Delete SimpleType: NoSuchFieldException(1261)", "Delete SimpleName: SecurityException(1262)", "Delete SimpleType: SecurityException(1263)", "Delete UnionType: IllegalAccessException|IllegalArgumentException|NoSuchFieldException|SecurityException(1264)", "Delete SimpleName: e(1265)", "Delete SingleVariableDeclaration(1266)", "Delete Modifier: final(1267)", "Delete SimpleName: String(1268)", "Delete SimpleType: String(1269)", "Delete SimpleName: msg(1270)", "Delete StringLiteral: \"Can't get process id for job\"(1271)", "Delete VariableDeclarationFragment(1272)", "Delete VariableDeclarationStatement(1273)", "Delete SimpleName: LOG(1274)", "Delete SimpleName: error(1275)", "Delete SimpleName: msg(1276)", "Delete SimpleName: e(1277)", "Delete MethodInvocation(1278)", "Delete ExpressionStatement(1279)", "Delete SimpleName: GenieServerException(1280)", "Delete SimpleType: GenieServerException(1281)", "Delete SimpleName: msg(1282)", "Delete SimpleName: e(1283)", "Delete ClassInstanceCreation(1284)", "Delete ThrowStatement(1285)", "Delete Block(1286)", "Delete CatchClause(1287)", "Delete TryStatement(1288)", "Delete Block(1289)", "Delete MethodDeclaration(1290)", "Delete TypeDeclaration: class(1291)"]}}, {"JobSetupHandler_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 27", "MOV MethodDeclaration to TypeDeclaration: class at 24", "MOV MethodDeclaration to TypeDeclaration: class at 28", "MOV MethodDeclaration to TypeDeclaration: class at 29"]}, {"root": "UPDATE from appendToWriter to appendToGenieLauncherScript", "operations": ["UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript", "UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript", "UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript", "UPD SimpleName: appendToWriter from appendToWriter to appendToGenieLauncherScript"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private", "UPD Modifier: protected from protected to private", "UPD Modifier: protected from protected to private", "UPD Modifier: protected from protected to private", "UPD Modifier: protected from protected to private"]}, {"root": "UPDATE from makeDir to createDirectory", "operations": ["UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory", "UPD SimpleName: makeDir from makeDir to createDirectory"]}, {"root": "UPDATE from setupWorkingDirectory to createTopLevelDirectories", "operations": ["UPD SimpleName: setupWorkingDirectory from setupWorkingDirectory to createTopLevelDirectories", "UPD SimpleName: makeDir from makeDir to createTopLevelDirectories"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 7"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 8"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS SimpleName: jobExecEnv to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from \"/job\" to \"/genie\"", "operations": ["UPD StringLiteral: \"/job\" from \"/job\" to \"/genie\""]}, {"root": "UPDATE from \"/applications\" to \"/genie/logs\"", "operations": ["UPD StringLiteral: \"/applications\" from \"/applications\" to \"/genie/logs\""]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: appendToGenieLauncherScript to MethodInvocation at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: jobExecEnv to FieldAccess at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS SimpleName: jobExecEnv to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 1"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: String", "DEL Modifier: private", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Modifier: final", "DEL StringLiteral: \"pid\"", "DEL SimpleName: PID", "DEL Modifier: static"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: jobExecEnv", "DEL SimpleName: getJobWorkingDir"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL StringLiteral: \"/genie\"", "DEL SimpleName: makeDir", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: jobExecEnv", "DEL SimpleName: getJobWorkingDir", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: makeDir", "DEL StringLiteral: \"/genie/logs\"", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL SimpleName: getJobWorkingDir"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: appendToWriter"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: Method that sets up the current working directory for executing the job.", "DEL TagElement"]}, {"root": "DEL SimpleName: jobExecEnv", "operations": ["DEL SimpleName: jobExecEnv"]}, {"root": "DEL SimpleName: jobExecEnv", "operations": ["DEL SimpleName: jobExecEnv"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL StringLiteral: \"/cluster\"", "DEL SimpleName: getJobWorkingDir", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: makeDir", "DEL MethodInvocation", "DEL SimpleName: jobExecEnv"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"/command\"", "DEL InfixExpression: +", "DEL SimpleName: jobExecEnv", "DEL MethodInvocation", "DEL SimpleName: makeDir", "DEL SimpleName: getJobWorkingDir"]}, {"root": "DEL SimpleName: jobExecEnv", "operations": ["DEL SimpleName: jobExecEnv"]}]}}, {"JobSetupHandler_diff": {"operations": ["Move MethodDeclaration(340) into TypeDeclaration: class(922) at 29", "Move MethodDeclaration(676) into TypeDeclaration: class(922) at 28", "Move MethodDeclaration(833) into TypeDeclaration: class(922) at 27", "Move MethodDeclaration(962) into TypeDeclaration: class(922) at 24", "Update SimpleName: appendToWriter(919) to appendToGenieLauncherScript", "Update Modifier: protected(840) to private", "Update Modifier: protected(878) to private", "Update Modifier: protected(737) to private", "Update Modifier: protected(654) to private", "Update SimpleName: makeDir(656) to createDirectory", "Update Modifier: protected(296) to private", "Update SimpleName: setupWorkingDirectory(298) to createTopLevelDirectories", "Move ExpressionStatement(356) into Block(920) at 5", "Move ExpressionStatement(452) into Block(920) at 6", "Move ExpressionStatement(543) into Block(920) at 7", "Move ExpressionStatement(574) into Block(920) at 8", "Update SimpleName: makeDir(247) to createTopLevelDirectories", "Update SimpleName: makeDir(453) to createDirectory", "Move ExpressionStatement(430) into Block(432) at 2", "Update SimpleName: makeDir(544) to createDirectory", "Move ExpressionStatement(523) into Block(519) at 2", "Update SimpleName: appendToWriter(629) to appendToGenieLauncherScript", "Update SimpleName: makeDir(301) to createDirectory", "Update SimpleName: makeDir(307) to createDirectory", "Update SimpleName: makeDir(331) to createDirectory", "Update SimpleName: makeDir(349) to createDirectory", "Update SimpleName: makeDir(445) to createDirectory", "Update SimpleName: makeDir(536) to createDirectory", "Update SimpleName: makeDir(567) to createDirectory", "Insert FieldAccess(863) into MethodInvocation(865) at 0", "Update StringLiteral: \"/job\"(311) to \"/genie\"", "Update StringLiteral: \"/applications\"(335) to \"/genie/logs\"", "Update SimpleName: makeDir(366) to createDirectory", "Insert ExpressionStatement(346) into Block(347) at 2", "Update SimpleName: appendToWriter(424) to appendToGenieLauncherScript", "Update SimpleName: appendToWriter(517) to appendToGenieLauncherScript", "Insert ThisExpression(861) into FieldAccess(863) at 0", "Insert SimpleName: jobExecEnv(862) into FieldAccess(863) at 1", "Insert FieldAccess(871) into MethodInvocation(873) at 0", "Insert FieldAccess(881) into MethodInvocation(883) at 0", "Insert MethodInvocation(345) into ExpressionStatement(346) at 0", "Insert ThisExpression(869) into FieldAccess(871) at 0", "Insert SimpleName: jobExecEnv(870) into FieldAccess(871) at 1", "Insert ThisExpression(879) into FieldAccess(881) at 0", "Insert SimpleName: jobExecEnv(880) into FieldAccess(881) at 1", "Insert SimpleName: appendToGenieLauncherScript(340) into MethodInvocation(345) at 0", "Move InfixExpression: +(624) into MethodInvocation(345) at 1", "Delete Modifier: private(57)", "Delete Modifier: static(58)", "Delete Modifier: final(59)", "Delete SimpleName: String(60)", "Delete SimpleType: String(61)", "Delete SimpleName: PID(62)", "Delete StringLiteral: \"pid\"(63)", "Delete VariableDeclarationFragment(64)", "Delete FieldDeclaration(65)", "Delete SimpleName: jobExecEnv(248)", "Delete SimpleName: getJobWorkingDir(249)", "Delete MethodInvocation(250)", "Delete SimpleName: makeDir(253)", "Delete SimpleName: jobExecEnv(254)", "Delete SimpleName: getJobWorkingDir(255)", "Delete MethodInvocation(256)", "Delete StringLiteral: \"/genie\"(257)", "Delete InfixExpression: +(258)", "Delete MethodInvocation(259)", "Delete ExpressionStatement(260)", "Delete SimpleName: makeDir(261)", "Delete SimpleName: jobExecEnv(262)", "Delete SimpleName: getJobWorkingDir(263)", "Delete MethodInvocation(264)", "Delete StringLiteral: \"/genie/logs\"(265)", "Delete InfixExpression: +(266)", "Delete MethodInvocation(267)", "Delete ExpressionStatement(268)", "Delete SimpleName: appendToWriter(620)", "Delete MethodInvocation(625)", "Delete ExpressionStatement(626)", "Delete TextElement: Method that sets up the current working directory for executing the job.(293)", "Delete TagElement(294)", "Delete Javadoc(295)", "Delete SimpleName: jobExecEnv(302)", "Delete SimpleName: jobExecEnv(308)", "Delete SimpleName: makeDir(315)", "Delete SimpleName: jobExecEnv(316)", "Delete SimpleName: getJobWorkingDir(317)", "Delete MethodInvocation(318)", "Delete StringLiteral: \"/cluster\"(319)", "Delete InfixExpression: +(320)", "Delete MethodInvocation(321)", "Delete ExpressionStatement(322)", "Delete SimpleName: makeDir(323)", "Delete SimpleName: jobExecEnv(324)", "Delete SimpleName: getJobWorkingDir(325)", "Delete MethodInvocation(326)", "Delete StringLiteral: \"/command\"(327)", "Delete InfixExpression: +(328)", "Delete MethodInvocation(329)", "Delete ExpressionStatement(330)", "Delete SimpleName: jobExecEnv(332)"]}}, {"FileCopyService_cluster": {"actions": []}}, {"FileCopyService_diff": {"operations": []}}, {"LocalJobSubmitterImpl_cluster": {"actions": [{"root": "UPDATE from com.netflix.genie.core.jobs.JobExecutionHandler to com.netflix.genie.core.jobs.JobHandler", "operations": ["UPD QualifiedName: com.netflix.genie.core.jobs.JobExecutionHandler from com.netflix.genie.core.jobs.JobExecutionHandler to com.netflix.genie.core.jobs.JobHandler"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: jobHandler to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: JobHandler to SimpleType: JobHandler at 0", "INS SimpleType: JobHandler to FieldDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 10", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS SimpleName: JobHandler to SimpleType: JobHandler at 0", "INS SimpleName: jobHandlerImpl to SingleVariableDeclaration at 2", "INS SimpleType: JobHandler to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 9"]}, {"root": "INS TagElement: @param to Javadoc at 7", "operations": ["INS TagElement: @param to Javadoc at 7", "INS SimpleName: jobHandlerImpl to TagElement: @param at 0", "INS TextElement:        Implementation of the Job Handler Interface to TagElement: @param at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: jobHandler to FieldAccess at 1", "INS SimpleName: jobHandlerImpl to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: JobExecutionEnvironment to VariableDeclarationStatement at 0"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: baseWorkingDirPath to ClassInstanceCreation at 6", "INS SimpleName: jobRequest to ClassInstanceCreation at 5", "INS SimpleName: jee to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from jobExecutionHandler to jobHandler", "operations": ["UPD SimpleName: jobExecutionHandler from jobExecutionHandler to jobHandler"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: JobExecutionEnvironment to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 4", "MOV FieldAccess to ClassInstanceCreation at 1", "MOV FieldAccess to ClassInstanceCreation at 2", "MOV FieldAccess to ClassInstanceCreation at 3"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: jee", "DEL SimpleName: baseWorkingDirPath", "DEL SimpleName: init", "DEL SimpleName: jobRequest"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: JobExecutionHandler", "DEL VariableDeclarationStatement", "DEL SimpleName: jobExecutionHandler", "DEL Modifier: final", "DEL SimpleName: JobExecutionHandler", "DEL SimpleType: JobExecutionHandler", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: JobExecutionHandler"]}]}}, {"LocalJobSubmitterImpl_diff": {"operations": ["Update QualifiedName: com.netflix.genie.core.jobs.JobExecutionHandler(14) to com.netflix.genie.core.jobs.JobHandler", "Insert FieldDeclaration(98) into TypeDeclaration: class(361) at 11", "Insert Modifier: private(92) into FieldDeclaration(98) at 0", "Insert Modifier: final(93) into FieldDeclaration(98) at 1", "Insert SimpleType: JobHandler(95) into FieldDeclaration(98) at 2", "Insert VariableDeclarationFragment(97) into FieldDeclaration(98) at 3", "Insert SingleVariableDeclaration(182) into MethodDeclaration(220) at 10", "Move ExpressionStatement(308) into Block(359) at 9", "Insert SimpleName: JobHandler(94) into SimpleType: JobHandler(95) at 0", "Insert SimpleName: jobHandler(96) into VariableDeclarationFragment(97) at 0", "Insert TagElement: @param(139) into Javadoc(140) at 7", "Insert Modifier: final(178) into SingleVariableDeclaration(182) at 0", "Insert SimpleType: JobHandler(180) into SingleVariableDeclaration(182) at 1", "Insert SimpleName: jobHandlerImpl(181) into SingleVariableDeclaration(182) at 2", "Insert ExpressionStatement(218) into Block(219) at 5", "Insert SimpleName: jobHandlerImpl(137) into TagElement: @param(139) at 0", "Insert TextElement:        Implementation of the Job Handler Interface(138) into TagElement: @param(139) at 1", "Insert SimpleName: JobHandler(179) into SimpleType: JobHandler(180) at 0", "Insert Assignment: =(217) into ExpressionStatement(218) at 0", "Move SimpleType: JobExecutionEnvironment(239) into VariableDeclarationStatement(260) at 0", "Insert FieldAccess(215) into Assignment: =(217) at 0", "Insert SimpleName: jobHandlerImpl(216) into Assignment: =(217) at 1", "Insert NullLiteral(258) into VariableDeclarationFragment(259) at 1", "Insert ThisExpression(213) into FieldAccess(215) at 0", "Insert SimpleName: jobHandler(214) into FieldAccess(215) at 1", "Insert Assignment: =(279) into ExpressionStatement(280) at 0", "Update SimpleName: jobExecutionHandler(295) to jobHandler", "Insert SimpleName: jee(261) into Assignment: =(279) at 0", "Insert ClassInstanceCreation(278) into Assignment: =(279) at 1", "Move SimpleType: JobExecutionEnvironment(236) into ClassInstanceCreation(278) at 0", "Move FieldAccess(247) into ClassInstanceCreation(278) at 1", "Move FieldAccess(250) into ClassInstanceCreation(278) at 2", "Move FieldAccess(253) into ClassInstanceCreation(278) at 3", "Move FieldAccess(256) into ClassInstanceCreation(278) at 4", "Insert SimpleName: jobRequest(276) into ClassInstanceCreation(278) at 5", "Insert SimpleName: baseWorkingDirPath(277) into ClassInstanceCreation(278) at 6", "Delete Modifier: final(234)", "Delete ClassInstanceCreation(240)", "Delete SimpleName: jee(243)", "Delete SimpleName: init(244)", "Delete SimpleName: jobRequest(257)", "Delete SimpleName: baseWorkingDirPath(258)", "Delete MethodInvocation(259)", "Delete Modifier: final(282)", "Delete SimpleName: JobExecutionHandler(283)", "Delete SimpleType: JobExecutionHandler(284)", "Delete SimpleName: jobExecutionHandler(285)", "Delete SimpleName: JobExecutionHandler(286)", "Delete SimpleType: JobExecutionHandler(287)", "Delete ClassInstanceCreation(288)", "Delete VariableDeclarationFragment(289)", "Delete VariableDeclarationStatement(290)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 1, "testing": "False", "maintenance": "False", "build": "False"}]}