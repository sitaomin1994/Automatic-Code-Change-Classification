{"application": "apache-nutch", "csha": "f12d0442ebcf6a028f7ff007bbf9cbca312945f1", "files": [{"Fetcher_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 11"]}, {"root": "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS SimpleType: ParseResult to VariableDeclarationStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: Text to SimpleType: Text at 0", "INS StringLiteral: \"Error parsing: \" to InfixExpression: + at 0", "INS SimpleName: content to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: getEmptyParse to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to CatchClause at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: getSignature to MethodInvocation at 1", "INS TryStatement to Block at 0", "INS SimpleType: Text to ParameterizedType: Entry<Text,Parse> at 1", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \": \" to InfixExpression: + at 2", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: setSignature to MethodInvocation at 1", "INS SimpleName: datum to MethodInvocation at 0", "INS SimpleName: signature to VariableDeclarationFragment at 0", "INS SimpleName: signature to MethodInvocation at 2", "INS Block to IfStatement at 2", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 2", "INS ParameterizedType: Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Text,Parse> at 0", "INS SimpleName: key to InfixExpression: + at 1", "INS SimpleName: parseResult to InfixExpression: != at 0", "INS SimpleName: SignatureFactory to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleType: Parse to ParameterizedType: Entry<Text,Parse> at 2", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS EnhancedForStatement to Block at 0", "INS SimpleName: calculate to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS CatchClause to TryStatement at 1", "INS InfixExpression: != to IfStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: parseResult to MethodInvocation at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS InfixExpression: != to InfixExpression: && at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: p to VariableDeclarationFragment at 0", "INS SimpleName: p to InfixExpression: != at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: Parse to VariableDeclarationStatement at 0", "INS SimpleName: parseResult to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from parse to parseResult", "operations": ["UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: output to MethodInvocation at 0", "INS SimpleName: collect to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ObjectWritable to SimpleType: ObjectWritable at 0", "INS SimpleName: key to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: storingContent to IfStatement at 0", "INS ExpressionStatement to IfStatement at 1", "INS IfStatement to Block at 1", "INS SimpleName: content to ClassInstanceCreation at 1", "INS SimpleType: ObjectWritable to ClassInstanceCreation at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: collect to MethodInvocation at 1", "INS SimpleName: ObjectWritable to SimpleType: ObjectWritable at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: Parse to ParameterizedType: Entry<Text,Parse> at 2", "INS SimpleName: Text to SimpleType: Text at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS IfStatement to Block at 2", "INS InfixExpression: != to IfStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: ObjectWritable to ClassInstanceCreation at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Text,Parse> at 0", "INS SimpleName: output to MethodInvocation at 0", "INS EnhancedForStatement to Block at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: Text to ParameterizedType: Entry<Text,Parse> at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from FetcherOutput to ObjectWritable", "operations": ["UPD SimpleType: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleType: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleName: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleName: FetcherOutput from FetcherOutput to ObjectWritable"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: parse to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: key to MethodInvocation at 2", "MOV SimpleName: collect to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1", "MOV SimpleName: parse to InfixExpression: != at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 8", "MOV ExpressionStatement to IfStatement at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: datum to ClassInstanceCreation at 1", "MOV SimpleType: FetcherOutput to ClassInstanceCreation at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parse to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS SimpleName: parseStatus to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 10", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: url to MethodInvocation at 0"]}, {"root": "INS SimpleType: Text to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: Text to SimpleType: Text at 0", "INS SimpleType: Text to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ParseStatus to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from parse to p", "operations": ["UPD SimpleName: parse from parse to p"]}, {"root": "UPDATE from key to url", "operations": ["UPD SimpleName: key from key to url", "UPD SimpleName: parseStatus from parseStatus to url"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: getKey to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getContentMeta to MethodInvocation at 1", "INS SimpleName: parse to MethodInvocation at 0"]}, {"root": "UPDATE from Nutch.SIGNATURE_KEY to Nutch.FETCH_TIME_KEY", "operations": ["UPD QualifiedName: Nutch.SIGNATURE_KEY from Nutch.SIGNATURE_KEY to Nutch.FETCH_TIME_KEY"]}, {"root": "UPDATE from StringUtil to Long", "operations": ["UPD SimpleName: StringUtil from StringUtil to Long"]}, {"root": "UPDATE from toHexString to toString", "operations": ["UPD SimpleName: toHexString from toHexString to toString"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getFetchTime to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ParseStatus to ClassInstanceCreation at 0"]}, {"root": "UPDATE from metadata to getData", "operations": ["UPD SimpleName: metadata from metadata to getData"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: metadata to MethodInvocation at 1"]}, {"root": "UPDATE from signature to datum", "operations": ["UPD SimpleName: signature from signature to datum"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: signature to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ParseImpl to ClassInstanceCreation at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: parseStatus", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL TryStatement", "operations": ["DEL SimpleName: e", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Block", "DEL TryStatement", "DEL SimpleName: parseStatus"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: isWarnEnabled", "DEL Block", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL IfStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NullLiteral", "DEL SimpleName: parse", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL SimpleName: storingContent", "DEL ConditionalExpression", "DEL InfixExpression: !=", "DEL ConditionalExpression", "DEL ClassInstanceCreation", "DEL SimpleName: content"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"Fetcher_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(2171) at 2", "Insert QualifiedName: java.util.Map.Entry(18) into ImportDeclaration(19) at 0", "Move ReturnStatement(1397) into Block(1521) at 11", "Insert SimpleType: ParseResult(1170) into VariableDeclarationStatement(1174) at 0", "Insert Block(1402) into IfStatement(1403) at 1", "Insert InfixExpression: &&(1494) into IfStatement(1518) at 0", "Insert Block(1517) into IfStatement(1518) at 1", "Insert SimpleName: ParseResult(1169) into SimpleType: ParseResult(1170) at 0", "Update SimpleName: parse(1169) to parseResult", "Insert TryStatement(1208) into Block(1402) at 0", "Insert IfStatement(1401) into Block(1402) at 1", "Insert ExpressionStatement(1412) into Block(1457) at 0", "Insert IfStatement(1423) into Block(1457) at 1", "Insert IfStatement(1456) into Block(1457) at 2", "Insert InfixExpression: !=(1489) into InfixExpression: &&(1494) at 0", "Insert PrefixExpression: !(1493) into InfixExpression: &&(1494) at 1", "Insert VariableDeclarationStatement(1505) into Block(1517) at 0", "Insert IfStatement(1516) into Block(1517) at 1", "Update SimpleType: FetcherOutput(1847) to ObjectWritable", "Move Block(1200) into TryStatement(1208) at 0", "Insert CatchClause(1207) into TryStatement(1208) at 1", "Insert InfixExpression: !=(1211) into IfStatement(1401) at 0", "Insert Block(1374) into IfStatement(1401) at 1", "Insert Block(1400) into IfStatement(1401) at 2", "Insert MethodInvocation(1411) into ExpressionStatement(1412) at 0", "Insert SimpleName: storingContent(1413) into IfStatement(1423) at 0", "Insert ExpressionStatement(1422) into IfStatement(1423) at 1", "Insert InfixExpression: !=(1426) into IfStatement(1456) at 0", "Insert Block(1455) into IfStatement(1456) at 1", "Update SimpleName: parse(1387) to parseResult", "Move SimpleName: parse(1387) into InfixExpression: !=(1489) at 0", "Move NullLiteral(1388) into InfixExpression: !=(1489) at 1", "Insert MethodInvocation(1492) into PrefixExpression: !(1493) at 0", "Insert SimpleType: Parse(1496) into VariableDeclarationStatement(1505) at 0", "Insert VariableDeclarationFragment(1504) into VariableDeclarationStatement(1505) at 1", "Insert InfixExpression: !=(1508) into IfStatement(1516) at 0", "Insert Block(1515) into IfStatement(1516) at 1", "Update SimpleName: FetcherOutput(1846) to ObjectWritable", "Move SingleVariableDeclaration(1204) into CatchClause(1207) at 0", "Insert Block(1206) into CatchClause(1207) at 1", "Insert SimpleName: parseResult(1209) into InfixExpression: !=(1211) at 0", "Insert NullLiteral(1210) into InfixExpression: !=(1211) at 1", "Insert EnhancedForStatement(1373) into Block(1374) at 0", "Insert VariableDeclarationStatement(1394) into Block(1400) at 0", "Insert ExpressionStatement(1399) into Block(1400) at 1", "Move SimpleName: output(1335) into MethodInvocation(1411) at 0", "Move SimpleName: collect(1336) into MethodInvocation(1411) at 1", "Move SimpleName: key(1337) into MethodInvocation(1411) at 2", "Insert ClassInstanceCreation(1410) into MethodInvocation(1411) at 3", "Insert MethodInvocation(1421) into ExpressionStatement(1422) at 0", "Update SimpleName: parse(1345) to parseResult", "Move SimpleName: parse(1345) into InfixExpression: !=(1426) at 0", "Move NullLiteral(1346) into InfixExpression: !=(1426) at 1", "Insert EnhancedForStatement(1454) into Block(1455) at 0", "Insert SimpleName: parseResult(1490) into MethodInvocation(1492) at 0", "Insert SimpleName: isEmpty(1491) into MethodInvocation(1492) at 1", "Insert SimpleName: Parse(1495) into SimpleType: Parse(1496) at 0", "Insert SimpleName: p(1497) into VariableDeclarationFragment(1504) at 0", "Insert MethodInvocation(1503) into VariableDeclarationFragment(1504) at 1", "Insert SimpleName: p(1506) into InfixExpression: !=(1508) at 0", "Insert NullLiteral(1507) into InfixExpression: !=(1508) at 1", "Insert ReturnStatement(1514) into Block(1515) at 0", "Insert ExpressionStatement(1205) into Block(1206) at 0", "Insert SingleVariableDeclaration(1220) into EnhancedForStatement(1373) at 0", "Insert SimpleName: parseResult(1221) into EnhancedForStatement(1373) at 1", "Move Block(1333) into EnhancedForStatement(1373) at 2", "Move ExpressionStatement(1266) into Block(1372) at 8", "Insert ArrayType: byte[](1377) into VariableDeclarationStatement(1394) at 0", "Insert VariableDeclarationFragment(1393) into VariableDeclarationStatement(1394) at 1", "Insert MethodInvocation(1398) into ExpressionStatement(1399) at 0", "Update SimpleType: FetcherOutput(1339) to ObjectWritable", "Move SimpleType: FetcherOutput(1339) into ClassInstanceCreation(1410) at 0", "Move SimpleName: datum(1340) into ClassInstanceCreation(1410) at 1", "Insert SimpleName: output(1414) into MethodInvocation(1421) at 0", "Insert SimpleName: collect(1415) into MethodInvocation(1421) at 1", "Insert SimpleName: key(1416) into MethodInvocation(1421) at 2", "Insert ClassInstanceCreation(1420) into MethodInvocation(1421) at 3", "Insert SingleVariableDeclaration(1435) into EnhancedForStatement(1454) at 0", "Insert SimpleName: parseResult(1436) into EnhancedForStatement(1454) at 1", "Insert Block(1453) into EnhancedForStatement(1454) at 2", "Insert SimpleName: parseResult(1498) into MethodInvocation(1503) at 0", "Insert SimpleName: get(1499) into MethodInvocation(1503) at 1", "Insert MethodInvocation(1502) into MethodInvocation(1503) at 2", "Move MethodInvocation(1394) into ReturnStatement(1514) at 0", "Update SimpleName: parse(1183) to parseResult", "Insert MethodInvocation(1204) into ExpressionStatement(1205) at 0", "Insert ParameterizedType: Entry<Text,Parse>(1218) into SingleVariableDeclaration(1220) at 0", "Insert SimpleName: entry(1219) into SingleVariableDeclaration(1220) at 1", "Insert VariableDeclarationStatement(1237) into Block(1372) at 1", "Insert VariableDeclarationStatement(1247) into Block(1372) at 2", "Insert IfStatement(1333) into Block(1372) at 8", "Insert PrimitiveType: byte(1375) into ArrayType: byte[](1377) at 0", "Insert Dimension(1376) into ArrayType: byte[](1377) at 1", "Insert SimpleName: signature(1378) into VariableDeclarationFragment(1393) at 0", "Insert MethodInvocation(1392) into VariableDeclarationFragment(1393) at 1", "Insert SimpleName: datum(1395) into MethodInvocation(1398) at 0", "Insert SimpleName: setSignature(1396) into MethodInvocation(1398) at 1", "Insert SimpleName: signature(1397) into MethodInvocation(1398) at 2", "Update SimpleName: FetcherOutput(1338) to ObjectWritable", "Insert SimpleType: ObjectWritable(1418) into ClassInstanceCreation(1420) at 0", "Insert SimpleName: content(1419) into ClassInstanceCreation(1420) at 1", "Insert ParameterizedType: Entry<Text,Parse>(1433) into SingleVariableDeclaration(1435) at 0", "Insert SimpleName: entry(1434) into SingleVariableDeclaration(1435) at 1", "Insert ExpressionStatement(1452) into Block(1453) at 0", "Insert SimpleName: content(1500) into MethodInvocation(1502) at 0", "Insert SimpleName: getUrl(1501) into MethodInvocation(1502) at 1", "Insert SimpleName: LOG(1194) into MethodInvocation(1204) at 0", "Insert SimpleName: warn(1195) into MethodInvocation(1204) at 1", "Insert InfixExpression: +(1203) into MethodInvocation(1204) at 2", "Insert SimpleType: Entry(1213) into ParameterizedType: Entry<Text,Parse>(1218) at 0", "Insert SimpleType: Text(1215) into ParameterizedType: Entry<Text,Parse>(1218) at 1", "Insert SimpleType: Parse(1217) into ParameterizedType: Entry<Text,Parse>(1218) at 2", "Insert SimpleType: Text(1223) into VariableDeclarationStatement(1229) at 0", "Move SimpleType: Parse(1168) into VariableDeclarationStatement(1237) at 0", "Insert VariableDeclarationFragment(1236) into VariableDeclarationStatement(1237) at 1", "Move SimpleType: ParseStatus(1207) into VariableDeclarationStatement(1247) at 0", "Insert VariableDeclarationFragment(1246) into VariableDeclarationStatement(1247) at 1", "Move Block(1231) into IfStatement(1270) at 1", "Insert MethodInvocation(1327) into IfStatement(1333) at 0", "Move ExpressionStatement(1271) into IfStatement(1333) at 1", "Insert MethodInvocation(1383) into MethodInvocation(1392) at 0", "Insert SimpleName: calculate(1384) into MethodInvocation(1392) at 1", "Insert SimpleName: content(1385) into MethodInvocation(1392) at 2", "Insert MethodInvocation(1391) into MethodInvocation(1392) at 3", "Insert SimpleName: ObjectWritable(1417) into SimpleType: ObjectWritable(1418) at 0", "Insert SimpleType: Entry(1428) into ParameterizedType: Entry<Text,Parse>(1433) at 0", "Insert SimpleType: Text(1430) into ParameterizedType: Entry<Text,Parse>(1433) at 1", "Insert SimpleType: Parse(1432) into ParameterizedType: Entry<Text,Parse>(1433) at 2", "Insert MethodInvocation(1451) into ExpressionStatement(1452) at 0", "Update SimpleName: parse(1390) to p", "Insert StringLiteral: \"Error parsing: \"(1196) into InfixExpression: +(1203) at 0", "Insert SimpleName: key(1197) into InfixExpression: +(1203) at 1", "Insert StringLiteral: \": \"(1198) into InfixExpression: +(1203) at 2", "Insert MethodInvocation(1202) into InfixExpression: +(1203) at 3", "Insert SimpleName: Entry(1212) into SimpleType: Entry(1213) at 0", "Insert SimpleName: Text(1214) into SimpleType: Text(1215) at 0", "Insert SimpleName: Parse(1216) into SimpleType: Parse(1217) at 0", "Insert SimpleName: Text(1222) into SimpleType: Text(1223) at 0", "Update SimpleName: parseStatus(1180) to url", "Insert MethodInvocation(1227) into VariableDeclarationFragment(1228) at 1", "Insert SimpleName: parse(1232) into VariableDeclarationFragment(1236) at 0", "Insert MethodInvocation(1235) into VariableDeclarationFragment(1236) at 1", "Insert SimpleName: parseStatus(1240) into VariableDeclarationFragment(1246) at 0", "Move MethodInvocation(1197) into VariableDeclarationFragment(1246) at 1", "Move ExpressionStatement(1240) into Block(1269) at 1", "Insert MethodInvocation(1313) into MethodInvocation(1322) at 0", "Update QualifiedName: Nutch.SIGNATURE_KEY(1260) to Nutch.FETCH_TIME_KEY", "Insert SimpleName: url(1324) into MethodInvocation(1327) at 0", "Insert SimpleName: equals(1325) into MethodInvocation(1327) at 1", "Insert SimpleName: key(1326) into MethodInvocation(1327) at 2", "Insert SimpleName: SignatureFactory(1379) into MethodInvocation(1383) at 0", "Insert SimpleName: getSignature(1380) into MethodInvocation(1383) at 1", "Insert MethodInvocation(1382) into MethodInvocation(1383) at 2", "Insert ClassInstanceCreation(1388) into MethodInvocation(1391) at 0", "Insert SimpleName: getEmptyParse(1389) into MethodInvocation(1391) at 1", "Insert SimpleName: conf(1390) into MethodInvocation(1391) at 2", "Insert SimpleName: Entry(1427) into SimpleType: Entry(1428) at 0", "Insert SimpleName: Text(1429) into SimpleType: Text(1430) at 0", "Insert SimpleName: Parse(1431) into SimpleType: Parse(1432) at 0", "Insert SimpleName: output(1437) into MethodInvocation(1451) at 0", "Insert SimpleName: collect(1438) into MethodInvocation(1451) at 1", "Insert MethodInvocation(1441) into MethodInvocation(1451) at 2", "Insert ClassInstanceCreation(1450) into MethodInvocation(1451) at 3", "Insert SimpleName: StringUtils(1199) into MethodInvocation(1202) at 0", "Insert SimpleName: stringifyException(1200) into MethodInvocation(1202) at 1", "Insert SimpleName: e(1201) into MethodInvocation(1202) at 2", "Insert SimpleName: entry(1225) into MethodInvocation(1227) at 0", "Insert SimpleName: getKey(1226) into MethodInvocation(1227) at 1", "Insert SimpleName: entry(1233) into MethodInvocation(1235) at 0", "Insert SimpleName: getValue(1234) into MethodInvocation(1235) at 1", "Insert MethodInvocation(1311) into MethodInvocation(1313) at 0", "Insert SimpleName: getContentMeta(1312) into MethodInvocation(1313) at 1", "Update SimpleName: StringUtil(1261) to Long", "Update SimpleName: toHexString(1262) to toString", "Insert MethodInvocation(1320) into MethodInvocation(1321) at 2", "Insert SimpleName: getConf(1381) into MethodInvocation(1382) at 0", "Move SimpleType: ParseStatus(1179) into ClassInstanceCreation(1388) at 0", "Insert SimpleName: entry(1439) into MethodInvocation(1441) at 0", "Insert SimpleName: getKey(1440) into MethodInvocation(1441) at 1", "Insert SimpleType: ObjectWritable(1443) into ClassInstanceCreation(1450) at 0", "Insert ClassInstanceCreation(1449) into ClassInstanceCreation(1450) at 1", "Insert SimpleName: parse(1309) into MethodInvocation(1311) at 0", "Update SimpleName: metadata(1258) to getData", "Move SimpleName: metadata(1258) into MethodInvocation(1311) at 1", "Update SimpleName: signature(1263) to datum", "Move SimpleName: signature(1263) into MethodInvocation(1320) at 0", "Insert SimpleName: getFetchTime(1319) into MethodInvocation(1320) at 1", "Update SimpleName: key(1297) to url", "Insert SimpleName: ObjectWritable(1442) into SimpleType: ObjectWritable(1443) at 0", "Move SimpleType: ParseImpl(1349) into ClassInstanceCreation(1449) at 0", "Insert MethodInvocation(1448) into ClassInstanceCreation(1449) at 1", "Insert SimpleName: entry(1446) into MethodInvocation(1448) at 0", "Insert SimpleName: getValue(1447) into MethodInvocation(1448) at 1", "Delete SimpleName: parseStatus(1192)", "Delete Assignment: =(1198)", "Delete ExpressionStatement(1199)", "Delete SimpleName: parseStatus(1205)", "Delete SimpleName: e(1208)", "Delete ClassInstanceCreation(1209)", "Delete Assignment: =(1210)", "Delete ExpressionStatement(1211)", "Delete Block(1212)", "Delete CatchClause(1213)", "Delete TryStatement(1214)", "Delete SimpleName: LOG(1219)", "Delete SimpleName: isWarnEnabled(1220)", "Delete MethodInvocation(1221)", "Delete IfStatement(1232)", "Delete Block(1241)", "Delete SimpleName: storingContent(1341)", "Delete SimpleName: content(1342)", "Delete NullLiteral(1343)", "Delete ConditionalExpression(1344)", "Delete InfixExpression: !=(1347)", "Delete SimpleName: parse(1350)", "Delete ClassInstanceCreation(1351)", "Delete NullLiteral(1352)", "Delete ConditionalExpression(1353)", "Delete ClassInstanceCreation(1354)", "Delete MethodInvocation(1355)", "Delete ExpressionStatement(1356)", "Delete InfixExpression: !=(1389)", "Delete ReturnStatement(1395)"]}}, {"Fetcher2_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.hadoop.util.StringUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 11"]}, {"root": "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: calculate to MethodInvocation at 1", "INS SimpleName: key to InfixExpression: + at 1", "INS Block to IfStatement at 2", "INS SimpleName: content to MethodInvocation at 2", "INS StringLiteral: \": \" to InfixExpression: + at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: SignatureFactory to MethodInvocation at 0", "INS SimpleName: getEmptyParse to MethodInvocation at 1", "INS SimpleName: setSignature to MethodInvocation at 1", "INS SimpleType: Parse to ParameterizedType: Entry<Text,Parse> at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to MethodInvocation at 2", "INS SimpleName: datum to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: signature to VariableDeclarationFragment at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleType: Text to ParameterizedType: Entry<Text,Parse> at 1", "INS SimpleName: signature to MethodInvocation at 2", "INS EnhancedForStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ParameterizedType: Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getSignature to MethodInvocation at 1", "INS SimpleName: parseResult to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Text to SimpleType: Text at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS StringLiteral: \"Error parsing: \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Text,Parse> at 0", "INS TryStatement to Block at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: parseResult to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: p to VariableDeclarationFragment at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: p to InfixExpression: != at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: parseResult to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleType: Parse to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "UPDATE from parse to parseResult", "operations": ["UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: storingContent to IfStatement at 0", "INS SimpleName: ObjectWritable to SimpleType: ObjectWritable at 0", "INS SimpleName: collect to MethodInvocation at 1", "INS SimpleName: content to ClassInstanceCreation at 1", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleType: ObjectWritable to ClassInstanceCreation at 0", "INS ExpressionStatement to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Text,Parse> at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS ParameterizedType: Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleType: Text to ParameterizedType: Entry<Text,Parse> at 1", "INS SimpleType: ObjectWritable to ClassInstanceCreation at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS IfStatement to Block at 2", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleName: Text to SimpleType: Text at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: collect to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS EnhancedForStatement to Block at 0", "INS SimpleType: Parse to ParameterizedType: Entry<Text,Parse> at 2", "INS SimpleName: ObjectWritable to SimpleType: ObjectWritable at 0", "INS SimpleName: Parse to SimpleType: Parse at 0"]}, {"root": "UPDATE from FetcherOutput to ObjectWritable", "operations": ["UPD SimpleName: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleType: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleType: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleName: FetcherOutput from FetcherOutput to ObjectWritable"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: parse to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 2", "MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: collect to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: parse to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 1", "MOV ExpressionStatement to Block at 8"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: FetcherOutput to ClassInstanceCreation at 0", "MOV SimpleName: datum to ClassInstanceCreation at 1"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: parse to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS SimpleName: parseStatus to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: url to MethodInvocation at 0", "INS IfStatement to Block at 10"]}, {"root": "INS SimpleType: Text to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Text to VariableDeclarationStatement at 0", "INS SimpleName: Text to SimpleType: Text at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ParseStatus to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from parse to p", "operations": ["UPD SimpleName: parse from parse to p"]}, {"root": "UPDATE from key to url", "operations": ["UPD SimpleName: key from key to url", "UPD SimpleName: parseStatus from parseStatus to url"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getKey to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getContentMeta to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: parse to MethodInvocation at 0"]}, {"root": "UPDATE from Nutch.SIGNATURE_KEY to Nutch.FETCH_TIME_KEY", "operations": ["UPD QualifiedName: Nutch.SIGNATURE_KEY from Nutch.SIGNATURE_KEY to Nutch.FETCH_TIME_KEY"]}, {"root": "UPDATE from StringUtil to Long", "operations": ["UPD SimpleName: StringUtil from StringUtil to Long"]}, {"root": "UPDATE from toHexString to toString", "operations": ["UPD SimpleName: toHexString from toHexString to toString"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getFetchTime to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ParseStatus to ClassInstanceCreation at 0"]}, {"root": "UPDATE from metadata to getData", "operations": ["UPD SimpleName: metadata from metadata to getData"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: metadata to MethodInvocation at 1"]}, {"root": "UPDATE from signature to datum", "operations": ["UPD SimpleName: signature from signature to datum"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: signature to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ParseImpl to ClassInstanceCreation at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: parseStatus"]}, {"root": "DEL TryStatement", "operations": ["DEL ExpressionStatement", "DEL Block", "DEL SimpleName: e", "DEL TryStatement", "DEL SimpleName: parseStatus", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL Assignment: ="]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleName: LOG", "DEL IfStatement", "DEL SimpleName: isWarnEnabled", "DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL SimpleName: storingContent", "DEL SimpleName: content", "DEL SimpleName: parse", "DEL ConditionalExpression"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"Fetcher2_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(3729) at 6", "Insert ImportDeclaration(43) into CompilationUnit(3729) at 15", "Insert QualifiedName: java.util.Map.Entry(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.hadoop.util.StringUtils(42) into ImportDeclaration(43) at 0", "Move ReturnStatement(2914) into Block(3040) at 11", "Insert SimpleType: ParseResult(2689) into VariableDeclarationStatement(2693) at 0", "Insert Block(2921) into IfStatement(2922) at 1", "Insert InfixExpression: &&(3013) into IfStatement(3037) at 0", "Insert Block(3036) into IfStatement(3037) at 1", "Insert SimpleName: ParseResult(2688) into SimpleType: ParseResult(2689) at 0", "Update SimpleName: parse(2686) to parseResult", "Insert TryStatement(2727) into Block(2921) at 0", "Insert IfStatement(2920) into Block(2921) at 1", "Insert ExpressionStatement(2931) into Block(2976) at 0", "Insert IfStatement(2942) into Block(2976) at 1", "Insert IfStatement(2975) into Block(2976) at 2", "Insert InfixExpression: !=(3008) into InfixExpression: &&(3013) at 0", "Insert PrefixExpression: !(3012) into InfixExpression: &&(3013) at 1", "Insert VariableDeclarationStatement(3024) into Block(3036) at 0", "Insert IfStatement(3035) into Block(3036) at 1", "Update SimpleType: FetcherOutput(3438) to ObjectWritable", "Move Block(2717) into TryStatement(2727) at 0", "Insert CatchClause(2726) into TryStatement(2727) at 1", "Insert InfixExpression: !=(2730) into IfStatement(2920) at 0", "Insert Block(2893) into IfStatement(2920) at 1", "Insert Block(2919) into IfStatement(2920) at 2", "Insert MethodInvocation(2930) into ExpressionStatement(2931) at 0", "Insert SimpleName: storingContent(2932) into IfStatement(2942) at 0", "Insert ExpressionStatement(2941) into IfStatement(2942) at 1", "Insert InfixExpression: !=(2945) into IfStatement(2975) at 0", "Insert Block(2974) into IfStatement(2975) at 1", "Update SimpleName: parse(2904) to parseResult", "Move SimpleName: parse(2904) into InfixExpression: !=(3008) at 0", "Move NullLiteral(2905) into InfixExpression: !=(3008) at 1", "Insert MethodInvocation(3011) into PrefixExpression: !(3012) at 0", "Insert SimpleType: Parse(3015) into VariableDeclarationStatement(3024) at 0", "Insert VariableDeclarationFragment(3023) into VariableDeclarationStatement(3024) at 1", "Insert InfixExpression: !=(3027) into IfStatement(3035) at 0", "Insert Block(3034) into IfStatement(3035) at 1", "Update SimpleName: FetcherOutput(3437) to ObjectWritable", "Move SingleVariableDeclaration(2721) into CatchClause(2726) at 0", "Insert Block(2725) into CatchClause(2726) at 1", "Insert SimpleName: parseResult(2728) into InfixExpression: !=(2730) at 0", "Insert NullLiteral(2729) into InfixExpression: !=(2730) at 1", "Insert EnhancedForStatement(2892) into Block(2893) at 0", "Insert VariableDeclarationStatement(2913) into Block(2919) at 0", "Insert ExpressionStatement(2918) into Block(2919) at 1", "Move SimpleName: output(2852) into MethodInvocation(2930) at 0", "Move SimpleName: collect(2853) into MethodInvocation(2930) at 1", "Move SimpleName: key(2854) into MethodInvocation(2930) at 2", "Insert ClassInstanceCreation(2929) into MethodInvocation(2930) at 3", "Insert MethodInvocation(2940) into ExpressionStatement(2941) at 0", "Update SimpleName: parse(2862) to parseResult", "Move SimpleName: parse(2862) into InfixExpression: !=(2945) at 0", "Move NullLiteral(2863) into InfixExpression: !=(2945) at 1", "Insert EnhancedForStatement(2973) into Block(2974) at 0", "Insert SimpleName: parseResult(3009) into MethodInvocation(3011) at 0", "Insert SimpleName: isEmpty(3010) into MethodInvocation(3011) at 1", "Insert SimpleName: Parse(3014) into SimpleType: Parse(3015) at 0", "Insert SimpleName: p(3016) into VariableDeclarationFragment(3023) at 0", "Insert MethodInvocation(3022) into VariableDeclarationFragment(3023) at 1", "Insert SimpleName: p(3025) into InfixExpression: !=(3027) at 0", "Insert NullLiteral(3026) into InfixExpression: !=(3027) at 1", "Insert ReturnStatement(3033) into Block(3034) at 0", "Insert ExpressionStatement(2724) into Block(2725) at 0", "Insert SingleVariableDeclaration(2739) into EnhancedForStatement(2892) at 0", "Insert SimpleName: parseResult(2740) into EnhancedForStatement(2892) at 1", "Move Block(2850) into EnhancedForStatement(2892) at 2", "Move ExpressionStatement(2783) into Block(2891) at 8", "Insert ArrayType: byte[](2896) into VariableDeclarationStatement(2913) at 0", "Insert VariableDeclarationFragment(2912) into VariableDeclarationStatement(2913) at 1", "Insert MethodInvocation(2917) into ExpressionStatement(2918) at 0", "Update SimpleType: FetcherOutput(2856) to ObjectWritable", "Move SimpleType: FetcherOutput(2856) into ClassInstanceCreation(2929) at 0", "Move SimpleName: datum(2857) into ClassInstanceCreation(2929) at 1", "Insert SimpleName: output(2933) into MethodInvocation(2940) at 0", "Insert SimpleName: collect(2934) into MethodInvocation(2940) at 1", "Insert SimpleName: key(2935) into MethodInvocation(2940) at 2", "Insert ClassInstanceCreation(2939) into MethodInvocation(2940) at 3", "Insert SingleVariableDeclaration(2954) into EnhancedForStatement(2973) at 0", "Insert SimpleName: parseResult(2955) into EnhancedForStatement(2973) at 1", "Insert Block(2972) into EnhancedForStatement(2973) at 2", "Insert SimpleName: parseResult(3017) into MethodInvocation(3022) at 0", "Insert SimpleName: get(3018) into MethodInvocation(3022) at 1", "Insert MethodInvocation(3021) into MethodInvocation(3022) at 2", "Move MethodInvocation(2911) into ReturnStatement(3033) at 0", "Update SimpleName: parse(2700) to parseResult", "Insert MethodInvocation(2723) into ExpressionStatement(2724) at 0", "Insert ParameterizedType: Entry<Text,Parse>(2737) into SingleVariableDeclaration(2739) at 0", "Insert SimpleName: entry(2738) into SingleVariableDeclaration(2739) at 1", "Insert VariableDeclarationStatement(2756) into Block(2891) at 1", "Insert VariableDeclarationStatement(2766) into Block(2891) at 2", "Insert IfStatement(2852) into Block(2891) at 8", "Insert PrimitiveType: byte(2894) into ArrayType: byte[](2896) at 0", "Insert Dimension(2895) into ArrayType: byte[](2896) at 1", "Insert SimpleName: signature(2897) into VariableDeclarationFragment(2912) at 0", "Insert MethodInvocation(2911) into VariableDeclarationFragment(2912) at 1", "Insert SimpleName: datum(2914) into MethodInvocation(2917) at 0", "Insert SimpleName: setSignature(2915) into MethodInvocation(2917) at 1", "Insert SimpleName: signature(2916) into MethodInvocation(2917) at 2", "Update SimpleName: FetcherOutput(2855) to ObjectWritable", "Insert SimpleType: ObjectWritable(2937) into ClassInstanceCreation(2939) at 0", "Insert SimpleName: content(2938) into ClassInstanceCreation(2939) at 1", "Insert ParameterizedType: Entry<Text,Parse>(2952) into SingleVariableDeclaration(2954) at 0", "Insert SimpleName: entry(2953) into SingleVariableDeclaration(2954) at 1", "Insert ExpressionStatement(2971) into Block(2972) at 0", "Insert SimpleName: content(3019) into MethodInvocation(3021) at 0", "Insert SimpleName: getUrl(3020) into MethodInvocation(3021) at 1", "Insert SimpleName: LOG(2713) into MethodInvocation(2723) at 0", "Insert SimpleName: warn(2714) into MethodInvocation(2723) at 1", "Insert InfixExpression: +(2722) into MethodInvocation(2723) at 2", "Insert SimpleType: Entry(2732) into ParameterizedType: Entry<Text,Parse>(2737) at 0", "Insert SimpleType: Text(2734) into ParameterizedType: Entry<Text,Parse>(2737) at 1", "Insert SimpleType: Parse(2736) into ParameterizedType: Entry<Text,Parse>(2737) at 2", "Insert SimpleType: Text(2742) into VariableDeclarationStatement(2748) at 0", "Move SimpleType: Parse(2685) into VariableDeclarationStatement(2756) at 0", "Insert VariableDeclarationFragment(2755) into VariableDeclarationStatement(2756) at 1", "Move SimpleType: ParseStatus(2724) into VariableDeclarationStatement(2766) at 0", "Insert VariableDeclarationFragment(2765) into VariableDeclarationStatement(2766) at 1", "Move Block(2748) into IfStatement(2789) at 1", "Insert MethodInvocation(2846) into IfStatement(2852) at 0", "Move ExpressionStatement(2788) into IfStatement(2852) at 1", "Insert MethodInvocation(2902) into MethodInvocation(2911) at 0", "Insert SimpleName: calculate(2903) into MethodInvocation(2911) at 1", "Insert SimpleName: content(2904) into MethodInvocation(2911) at 2", "Insert MethodInvocation(2910) into MethodInvocation(2911) at 3", "Insert SimpleName: ObjectWritable(2936) into SimpleType: ObjectWritable(2937) at 0", "Insert SimpleType: Entry(2947) into ParameterizedType: Entry<Text,Parse>(2952) at 0", "Insert SimpleType: Text(2949) into ParameterizedType: Entry<Text,Parse>(2952) at 1", "Insert SimpleType: Parse(2951) into ParameterizedType: Entry<Text,Parse>(2952) at 2", "Insert MethodInvocation(2970) into ExpressionStatement(2971) at 0", "Update SimpleName: parse(2907) to p", "Insert StringLiteral: \"Error parsing: \"(2715) into InfixExpression: +(2722) at 0", "Insert SimpleName: key(2716) into InfixExpression: +(2722) at 1", "Insert StringLiteral: \": \"(2717) into InfixExpression: +(2722) at 2", "Insert MethodInvocation(2721) into InfixExpression: +(2722) at 3", "Insert SimpleName: Entry(2731) into SimpleType: Entry(2732) at 0", "Insert SimpleName: Text(2733) into SimpleType: Text(2734) at 0", "Insert SimpleName: Parse(2735) into SimpleType: Parse(2736) at 0", "Insert SimpleName: Text(2741) into SimpleType: Text(2742) at 0", "Update SimpleName: parseStatus(2697) to url", "Insert MethodInvocation(2746) into VariableDeclarationFragment(2747) at 1", "Insert SimpleName: parse(2751) into VariableDeclarationFragment(2755) at 0", "Insert MethodInvocation(2754) into VariableDeclarationFragment(2755) at 1", "Insert SimpleName: parseStatus(2759) into VariableDeclarationFragment(2765) at 0", "Move MethodInvocation(2714) into VariableDeclarationFragment(2765) at 1", "Move ExpressionStatement(2757) into Block(2788) at 1", "Insert MethodInvocation(2832) into MethodInvocation(2841) at 0", "Update QualifiedName: Nutch.SIGNATURE_KEY(2777) to Nutch.FETCH_TIME_KEY", "Insert SimpleName: url(2843) into MethodInvocation(2846) at 0", "Insert SimpleName: equals(2844) into MethodInvocation(2846) at 1", "Insert SimpleName: key(2845) into MethodInvocation(2846) at 2", "Insert SimpleName: SignatureFactory(2898) into MethodInvocation(2902) at 0", "Insert SimpleName: getSignature(2899) into MethodInvocation(2902) at 1", "Insert MethodInvocation(2901) into MethodInvocation(2902) at 2", "Insert ClassInstanceCreation(2907) into MethodInvocation(2910) at 0", "Insert SimpleName: getEmptyParse(2908) into MethodInvocation(2910) at 1", "Insert SimpleName: conf(2909) into MethodInvocation(2910) at 2", "Insert SimpleName: Entry(2946) into SimpleType: Entry(2947) at 0", "Insert SimpleName: Text(2948) into SimpleType: Text(2949) at 0", "Insert SimpleName: Parse(2950) into SimpleType: Parse(2951) at 0", "Insert SimpleName: output(2956) into MethodInvocation(2970) at 0", "Insert SimpleName: collect(2957) into MethodInvocation(2970) at 1", "Insert MethodInvocation(2960) into MethodInvocation(2970) at 2", "Insert ClassInstanceCreation(2969) into MethodInvocation(2970) at 3", "Insert SimpleName: StringUtils(2718) into MethodInvocation(2721) at 0", "Insert SimpleName: stringifyException(2719) into MethodInvocation(2721) at 1", "Insert SimpleName: e(2720) into MethodInvocation(2721) at 2", "Insert SimpleName: entry(2744) into MethodInvocation(2746) at 0", "Insert SimpleName: getKey(2745) into MethodInvocation(2746) at 1", "Insert SimpleName: entry(2752) into MethodInvocation(2754) at 0", "Insert SimpleName: getValue(2753) into MethodInvocation(2754) at 1", "Insert MethodInvocation(2830) into MethodInvocation(2832) at 0", "Insert SimpleName: getContentMeta(2831) into MethodInvocation(2832) at 1", "Update SimpleName: StringUtil(2778) to Long", "Update SimpleName: toHexString(2779) to toString", "Insert MethodInvocation(2839) into MethodInvocation(2840) at 2", "Insert SimpleName: getConf(2900) into MethodInvocation(2901) at 0", "Move SimpleType: ParseStatus(2696) into ClassInstanceCreation(2907) at 0", "Insert SimpleName: entry(2958) into MethodInvocation(2960) at 0", "Insert SimpleName: getKey(2959) into MethodInvocation(2960) at 1", "Insert SimpleType: ObjectWritable(2962) into ClassInstanceCreation(2969) at 0", "Insert ClassInstanceCreation(2968) into ClassInstanceCreation(2969) at 1", "Insert SimpleName: parse(2828) into MethodInvocation(2830) at 0", "Update SimpleName: metadata(2775) to getData", "Move SimpleName: metadata(2775) into MethodInvocation(2830) at 1", "Update SimpleName: signature(2780) to datum", "Move SimpleName: signature(2780) into MethodInvocation(2839) at 0", "Insert SimpleName: getFetchTime(2838) into MethodInvocation(2839) at 1", "Update SimpleName: key(2814) to url", "Insert SimpleName: ObjectWritable(2961) into SimpleType: ObjectWritable(2962) at 0", "Move SimpleType: ParseImpl(2866) into ClassInstanceCreation(2968) at 0", "Insert MethodInvocation(2967) into ClassInstanceCreation(2968) at 1", "Insert SimpleName: entry(2965) into MethodInvocation(2967) at 0", "Insert SimpleName: getValue(2966) into MethodInvocation(2967) at 1", "Delete SimpleName: parseStatus(2709)", "Delete Assignment: =(2715)", "Delete ExpressionStatement(2716)", "Delete SimpleName: parseStatus(2722)", "Delete SimpleName: e(2725)", "Delete ClassInstanceCreation(2726)", "Delete Assignment: =(2727)", "Delete ExpressionStatement(2728)", "Delete Block(2729)", "Delete CatchClause(2730)", "Delete TryStatement(2731)", "Delete SimpleName: LOG(2736)", "Delete SimpleName: isWarnEnabled(2737)", "Delete MethodInvocation(2738)", "Delete IfStatement(2749)", "Delete Block(2758)", "Delete SimpleName: storingContent(2858)", "Delete SimpleName: content(2859)", "Delete NullLiteral(2860)", "Delete ConditionalExpression(2861)", "Delete InfixExpression: !=(2864)", "Delete SimpleName: parse(2867)", "Delete ClassInstanceCreation(2868)", "Delete NullLiteral(2869)", "Delete ConditionalExpression(2870)", "Delete ClassInstanceCreation(2871)", "Delete MethodInvocation(2872)", "Delete ExpressionStatement(2873)", "Delete InfixExpression: !=(2906)", "Delete ReturnStatement(2912)"]}}, {"FetcherOutputFormat_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.io.ObjectWritable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.nutch.parse.Parse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: Content to SimpleType: Content at 0", "INS SimpleName: CrawlDatum to SimpleType: CrawlDatum at 0", "INS SimpleName: w to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS ExpressionStatement to IfStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS InstanceofExpression to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: w to InstanceofExpression at 0", "INS SimpleType: CrawlDatum to InstanceofExpression at 1", "INS ExpressionStatement to IfStatement at 1", "INS SimpleType: Parse to InstanceofExpression at 1", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS IfStatement to Block at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: w to InstanceofExpression at 0", "INS SimpleType: Content to InstanceofExpression at 1", "INS ExpressionStatement to IfStatement at 1"]}, {"root": "UPDATE from FetcherOutput to Writable", "operations": ["UPD SimpleType: FetcherOutput from FetcherOutput to Writable", "UPD SimpleName: FetcherOutput from FetcherOutput to Writable"]}, {"root": "UPDATE from fo to w", "operations": ["UPD SimpleName: fo from fo to w", "UPD SimpleName: fo from fo to w", "UPD SimpleName: fo from fo to w", "UPD SimpleName: fo from fo to w"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Writable to SimpleType: Writable at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: Writable to CastExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fo to MethodInvocation at 3"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fo to MethodInvocation at 3"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fo to MethodInvocation at 3"]}, {"root": "UPDATE from FetcherOutput to ObjectWritable", "operations": ["UPD SimpleType: FetcherOutput from FetcherOutput to ObjectWritable", "UPD SimpleName: FetcherOutput from FetcherOutput to ObjectWritable"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: FetcherOutput to CastExpression at 0", "MOV SimpleName: value to CastExpression at 1"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getCrawlDatum", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getContent"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getParse", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL SimpleName: fo", "DEL Block", "DEL SimpleName: getContent", "DEL NullLiteral", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getParse", "DEL NullLiteral", "DEL SimpleName: fo", "DEL IfStatement"]}]}}, {"FetcherOutputFormat_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(328) at 6", "Insert ImportDeclaration(45) into CompilationUnit(328) at 15", "Insert QualifiedName: org.apache.hadoop.io.ObjectWritable(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.nutch.parse.Parse(44) into ImportDeclaration(45) at 0", "Insert IfStatement(285) into Block(286) at 1", "Update SimpleType: FetcherOutput(235) to Writable", "Insert InstanceofExpression(256) into IfStatement(285) at 0", "Insert ExpressionStatement(262) into IfStatement(285) at 1", "Insert IfStatement(284) into IfStatement(285) at 2", "Update SimpleName: FetcherOutput(234) to Writable", "Update SimpleName: fo(236) to w", "Insert CastExpression(250) into VariableDeclarationFragment(251) at 1", "Insert SimpleName: w(253) into InstanceofExpression(256) at 0", "Insert SimpleType: CrawlDatum(255) into InstanceofExpression(256) at 1", "Move MethodInvocation(249) into ExpressionStatement(262) at 0", "Insert InstanceofExpression(266) into IfStatement(284) at 0", "Insert ExpressionStatement(272) into IfStatement(284) at 1", "Insert IfStatement(283) into IfStatement(284) at 2", "Insert SimpleType: Writable(242) into CastExpression(250) at 0", "Insert MethodInvocation(249) into CastExpression(250) at 1", "Insert SimpleName: CrawlDatum(254) into SimpleType: CrawlDatum(255) at 0", "Update SimpleName: fo(246) to w", "Move SimpleName: fo(246) into MethodInvocation(261) at 3", "Insert SimpleName: w(263) into InstanceofExpression(266) at 0", "Insert SimpleType: Content(265) into InstanceofExpression(266) at 1", "Move MethodInvocation(262) into ExpressionStatement(272) at 0", "Insert InstanceofExpression(276) into IfStatement(283) at 0", "Insert ExpressionStatement(282) into IfStatement(283) at 1", "Insert SimpleName: Writable(241) into SimpleType: Writable(242) at 0", "Insert ParenthesizedExpression(247) into MethodInvocation(249) at 0", "Insert SimpleName: get(248) into MethodInvocation(249) at 1", "Insert SimpleName: Content(264) into SimpleType: Content(265) at 0", "Update SimpleName: fo(259) to w", "Move SimpleName: fo(259) into MethodInvocation(271) at 3", "Insert SimpleName: w(273) into InstanceofExpression(276) at 0", "Insert SimpleType: Parse(275) into InstanceofExpression(276) at 1", "Move MethodInvocation(277) into ExpressionStatement(282) at 0", "Insert CastExpression(246) into ParenthesizedExpression(247) at 0", "Insert SimpleName: Parse(274) into SimpleType: Parse(275) at 0", "Update SimpleName: fo(274) to w", "Move SimpleName: fo(274) into MethodInvocation(281) at 3", "Update SimpleType: FetcherOutput(238) to ObjectWritable", "Move SimpleType: FetcherOutput(238) into CastExpression(246) at 0", "Move SimpleName: value(239) into CastExpression(246) at 1", "Update SimpleName: FetcherOutput(237) to ObjectWritable", "Delete CastExpression(240)", "Delete SimpleName: getCrawlDatum(247)", "Delete MethodInvocation(248)", "Delete SimpleName: getContent(260)", "Delete MethodInvocation(261)", "Delete SimpleName: getParse(275)", "Delete MethodInvocation(276)", "Delete ExpressionStatement(250)", "Delete SimpleName: fo(251)", "Delete SimpleName: getContent(252)", "Delete MethodInvocation(253)", "Delete NullLiteral(254)", "Delete InfixExpression: !=(255)", "Delete ExpressionStatement(263)", "Delete Block(264)", "Delete IfStatement(265)", "Delete SimpleName: fo(266)", "Delete SimpleName: getParse(267)", "Delete MethodInvocation(268)", "Delete NullLiteral(269)", "Delete InfixExpression: !=(270)", "Delete ExpressionStatement(278)", "Delete Block(279)", "Delete IfStatement(280)"]}}, {"Nutch_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 12", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS StringLiteral: \"_ftk_\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: FETCH_TIME_KEY to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: interface at 12"]}]}}, {"Nutch_diff": {"operations": ["Insert FieldDeclaration(122) into TypeDeclaration: interface(171) at 12", "Insert Modifier: public(114) into FieldDeclaration(122) at 0", "Insert Modifier: static(115) into FieldDeclaration(122) at 1", "Insert Modifier: final(116) into FieldDeclaration(122) at 2", "Insert SimpleType: String(118) into FieldDeclaration(122) at 3", "Insert VariableDeclarationFragment(121) into FieldDeclaration(122) at 4", "Insert SimpleName: String(117) into SimpleType: String(118) at 0", "Insert SimpleName: FETCH_TIME_KEY(119) into VariableDeclarationFragment(121) at 0", "Insert StringLiteral: \"_ftk_\"(120) into VariableDeclarationFragment(121) at 1"]}}, {"HtmlParseFilters_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.hadoop.io.Text to ImportDeclaration at 0"]}, {"root": "INS SimpleType: ParseResult to MethodDeclaration at 2", "operations": ["INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS SimpleType: ParseResult to MethodDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: filteredParseResult to ReturnStatement at 0", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS SimpleName: Text to SimpleType: Text at 0", "INS Block to MethodDeclaration at 9", "INS ParameterizedType: java.util.Map.Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ParseResult to ClassInstanceCreation at 0", "INS SimpleType: Text to ParameterizedType: java.util.Map.Entry<Text,Parse> at 1", "INS QualifiedName: java.util.Map.Entry to SimpleType: java.util.Map.Entry at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS EnhancedForStatement to Block at 1", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: java.util.Map.Entry to ParameterizedType: java.util.Map.Entry<Text,Parse> at 0", "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "INS SimpleName: filteredParseResult to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleType: ParseResult to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ParseResult to SingleVariableDeclaration at 0", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0"]}, {"root": "UPDATE from parse to parseResult", "operations": ["UPD SimpleName: parse from parse to parseResult"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2", "MOV SimpleType: Parse to ParameterizedType: java.util.Map.Entry<Text,Parse> at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: entry to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parse to VariableDeclarationFragment at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: parse to MethodInvocation at 0", "INS SimpleName: filteredParseResult to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: getData to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ParseText to SimpleType: ParseText at 0", "INS SimpleName: getText to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: ParseText to ClassInstanceCreation at 0", "INS SimpleName: parse to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: parse"]}]}}, {"HtmlParseFilters_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(349) at 5", "Insert QualifiedName: org.apache.hadoop.io.Text(24) into ImportDeclaration(25) at 0", "Insert SimpleType: ParseResult(239) into MethodDeclaration(347) at 2", "Insert Block(346) into MethodDeclaration(347) at 8", "Insert SimpleName: ParseResult(238) into SimpleType: ParseResult(239) at 0", "Insert SimpleType: ParseResult(246) into SingleVariableDeclaration(248) at 0", "Update SimpleName: parse(245) to parseResult", "Insert VariableDeclarationStatement(267) into Block(346) at 0", "Insert EnhancedForStatement(343) into Block(346) at 1", "Insert ReturnStatement(345) into Block(346) at 2", "Insert SimpleName: ParseResult(245) into SimpleType: ParseResult(246) at 0", "Insert SimpleType: ParseResult(258) into VariableDeclarationStatement(267) at 0", "Insert VariableDeclarationFragment(266) into VariableDeclarationStatement(267) at 1", "Insert SingleVariableDeclaration(276) into EnhancedForStatement(343) at 0", "Insert SimpleName: parseResult(277) into EnhancedForStatement(343) at 1", "Move Block(297) into EnhancedForStatement(343) at 2", "Insert SimpleName: filteredParseResult(344) into ReturnStatement(345) at 0", "Insert SimpleName: ParseResult(257) into SimpleType: ParseResult(258) at 0", "Insert SimpleName: filteredParseResult(259) into VariableDeclarationFragment(266) at 0", "Insert ClassInstanceCreation(265) into VariableDeclarationFragment(266) at 1", "Insert ParameterizedType: java.util.Map.Entry<Text,Parse>(274) into SingleVariableDeclaration(276) at 0", "Insert SimpleName: entry(275) into SingleVariableDeclaration(276) at 1", "Insert VariableDeclarationStatement(285) into Block(342) at 0", "Insert ExpressionStatement(341) into Block(342) at 2", "Insert SimpleType: ParseResult(261) into ClassInstanceCreation(265) at 0", "Insert MethodInvocation(264) into ClassInstanceCreation(265) at 1", "Insert SimpleType: java.util.Map.Entry(269) into ParameterizedType: java.util.Map.Entry<Text,Parse>(274) at 0", "Insert SimpleType: Text(271) into ParameterizedType: java.util.Map.Entry<Text,Parse>(274) at 1", "Move SimpleType: Parse(237) into ParameterizedType: java.util.Map.Entry<Text,Parse>(274) at 2", "Move SimpleType: Parse(244) into VariableDeclarationStatement(285) at 0", "Insert VariableDeclarationFragment(284) into VariableDeclarationStatement(285) at 1", "Insert MethodInvocation(340) into ExpressionStatement(341) at 0", "Insert SimpleName: ParseResult(260) into SimpleType: ParseResult(261) at 0", "Insert SimpleName: content(262) into MethodInvocation(264) at 0", "Insert SimpleName: getUrl(263) into MethodInvocation(264) at 1", "Insert QualifiedName: java.util.Map.Entry(268) into SimpleType: java.util.Map.Entry(269) at 0", "Insert SimpleName: Text(270) into SimpleType: Text(271) at 0", "Insert SimpleName: parse(280) into VariableDeclarationFragment(284) at 0", "Insert MethodInvocation(283) into VariableDeclarationFragment(284) at 1", "Insert SimpleName: filteredParseResult(326) into MethodInvocation(340) at 0", "Insert SimpleName: put(327) into MethodInvocation(340) at 1", "Insert MethodInvocation(330) into MethodInvocation(340) at 2", "Insert ClassInstanceCreation(336) into MethodInvocation(340) at 3", "Insert MethodInvocation(339) into MethodInvocation(340) at 4", "Insert SimpleName: entry(281) into MethodInvocation(283) at 0", "Insert SimpleName: getValue(282) into MethodInvocation(283) at 1", "Insert SimpleName: entry(328) into MethodInvocation(330) at 0", "Insert SimpleName: getKey(329) into MethodInvocation(330) at 1", "Insert SimpleType: ParseText(332) into ClassInstanceCreation(336) at 0", "Insert MethodInvocation(335) into ClassInstanceCreation(336) at 1", "Insert SimpleName: parse(337) into MethodInvocation(339) at 0", "Insert SimpleName: getData(338) into MethodInvocation(339) at 1", "Insert SimpleName: ParseText(331) into SimpleType: ParseText(332) at 0", "Insert SimpleName: parse(333) into MethodInvocation(335) at 0", "Insert SimpleName: getText(334) into MethodInvocation(335) at 1", "Delete SimpleName: parse(295)", "Delete ReturnStatement(296)"]}}, {"Parse_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 5", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isCanonical to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 5", "INS TextElement: Indicates if the parse is coming from a url or a sub-url  to TagElement at 0"]}]}}, {"Parse_diff": {"operations": ["Insert MethodDeclaration(48) into TypeDeclaration: interface(49) at 5", "Insert Javadoc(45) into MethodDeclaration(48) at 0", "Insert PrimitiveType: boolean(46) into MethodDeclaration(48) at 1", "Insert SimpleName: isCanonical(47) into MethodDeclaration(48) at 2", "Insert TagElement(44) into Javadoc(45) at 0", "Insert TextElement: Indicates if the parse is coming from a url or a sub-url (43) into TagElement(44) at 0"]}}, {"ParseImpl_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: isCanonical to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: text to ConstructorInvocation at 0", "INS SimpleName: data to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: data to ConstructorInvocation at 1", "INS SimpleType: ParseData to SingleVariableDeclaration at 0", "INS SimpleType: ParseText to SingleVariableDeclaration at 0", "INS SimpleName: ParseData to SimpleType: ParseData at 0", "INS BooleanLiteral: true to ConstructorInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: text to SingleVariableDeclaration at 1", "INS ConstructorInvocation to Block at 0", "INS SimpleName: ParseText to SimpleType: ParseText at 0", "INS SimpleName: ParseImpl to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: isCanonical to ReturnStatement at 0", "INS SimpleName: isCanonical to MethodDeclaration at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: isCanonical to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: isCanonical to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: isCanonical to FieldAccess at 1", "INS ExpressionStatement to Block at 2", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: isCanonical to MethodInvocation at 2", "INS SimpleName: out to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writeBoolean to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: readBoolean to MethodInvocation at 1", "INS SimpleName: isCanonical to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: in to MethodInvocation at 0"]}, {"root": "INS ClassInstanceCreation to ConstructorInvocation at 0", "operations": ["INS SimpleType: ParseText to ClassInstanceCreation at 0", "INS SimpleName: ParseText to SimpleType: ParseText at 0", "INS ClassInstanceCreation to ConstructorInvocation at 0"]}, {"root": "INS BooleanLiteral: true to ConstructorInvocation at 3", "operations": ["INS BooleanLiteral: true to ConstructorInvocation at 3"]}, {"root": "INS BooleanLiteral: true to ConstructorInvocation at 2", "operations": ["INS BooleanLiteral: true to ConstructorInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}]}}, {"ParseImpl_diff": {"operations": ["Insert FieldDeclaration(58) into TypeDeclaration: class(316) at 8", "Insert MethodDeclaration(122) into TypeDeclaration: class(316) at 13", "Insert MethodDeclaration(180) into TypeDeclaration: class(316) at 17", "Insert Modifier: private(54) into FieldDeclaration(58) at 0", "Insert PrimitiveType: boolean(55) into FieldDeclaration(58) at 1", "Insert VariableDeclarationFragment(57) into FieldDeclaration(58) at 2", "Insert Modifier: public(107) into MethodDeclaration(122) at 0", "Insert SimpleName: ParseImpl(108) into MethodDeclaration(122) at 1", "Insert SingleVariableDeclaration(112) into MethodDeclaration(122) at 2", "Insert SingleVariableDeclaration(116) into MethodDeclaration(122) at 3", "Insert Block(121) into MethodDeclaration(122) at 4", "Insert SingleVariableDeclaration(135) into MethodDeclaration(155) at 4", "Insert Modifier: public(174) into MethodDeclaration(180) at 0", "Insert PrimitiveType: boolean(175) into MethodDeclaration(180) at 1", "Insert SimpleName: isCanonical(176) into MethodDeclaration(180) at 2", "Insert Block(179) into MethodDeclaration(180) at 3", "Insert SimpleName: isCanonical(56) into VariableDeclarationFragment(57) at 0", "Insert SimpleType: ParseText(110) into SingleVariableDeclaration(112) at 0", "Insert SimpleName: text(111) into SingleVariableDeclaration(112) at 1", "Insert SimpleType: ParseData(114) into SingleVariableDeclaration(116) at 0", "Insert SimpleName: data(115) into SingleVariableDeclaration(116) at 1", "Insert ConstructorInvocation(120) into Block(121) at 0", "Insert PrimitiveType: boolean(133) into SingleVariableDeclaration(135) at 0", "Insert SimpleName: isCanonical(134) into SingleVariableDeclaration(135) at 1", "Insert ExpressionStatement(153) into Block(154) at 2", "Insert ReturnStatement(178) into Block(179) at 0", "Insert ExpressionStatement(195) into Block(206) at 0", "Insert ExpressionStatement(222) into Block(252) at 0", "Insert ClassInstanceCreation(80) into ConstructorInvocation(85) at 0", "Insert BooleanLiteral: true(84) into ConstructorInvocation(85) at 2", "Insert BooleanLiteral: true(103) into ConstructorInvocation(104) at 2", "Insert SimpleName: ParseText(109) into SimpleType: ParseText(110) at 0", "Insert SimpleName: ParseData(113) into SimpleType: ParseData(114) at 0", "Insert SimpleName: text(117) into ConstructorInvocation(120) at 0", "Insert SimpleName: data(118) into ConstructorInvocation(120) at 1", "Insert BooleanLiteral: true(119) into ConstructorInvocation(120) at 2", "Insert Assignment: =(152) into ExpressionStatement(153) at 0", "Insert SimpleName: isCanonical(177) into ReturnStatement(178) at 0", "Insert MethodInvocation(194) into ExpressionStatement(195) at 0", "Insert Assignment: =(221) into ExpressionStatement(222) at 0", "Insert SimpleType: ParseText(76) into ClassInstanceCreation(80) at 0", "Move MethodInvocation(72) into ClassInstanceCreation(80) at 1", "Insert FieldAccess(150) into Assignment: =(152) at 0", "Insert SimpleName: isCanonical(151) into Assignment: =(152) at 1", "Insert SimpleName: out(191) into MethodInvocation(194) at 0", "Insert SimpleName: writeBoolean(192) into MethodInvocation(194) at 1", "Insert SimpleName: isCanonical(193) into MethodInvocation(194) at 2", "Insert SimpleName: isCanonical(217) into Assignment: =(221) at 0", "Insert MethodInvocation(220) into Assignment: =(221) at 1", "Insert SimpleName: ParseText(75) into SimpleType: ParseText(76) at 0", "Insert ThisExpression(148) into FieldAccess(150) at 0", "Insert SimpleName: isCanonical(149) into FieldAccess(150) at 1", "Insert SimpleName: in(218) into MethodInvocation(220) at 0", "Insert SimpleName: readBoolean(219) into MethodInvocation(220) at 1"]}}, {"ParseOutputFormat_cluster": {"actions": [{"root": "INS IfStatement to Block at 16", "operations": ["INS SimpleName: getData to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: datum to MethodInvocation at 0", "INS SimpleName: datum to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 4", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: parse to MethodInvocation at 0", "INS SimpleName: datum to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setFetchTime to MethodInvocation at 1", "INS SimpleName: getContentMeta to MethodInvocation at 1", "INS SimpleName: isCanonical to MethodInvocation at 1", "INS SimpleName: timeString to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Can't read fetch time for: \" to InfixExpression: + at 0", "INS SimpleName: CrawlDatum to SimpleType: CrawlDatum at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: parse to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: CrawlDatum to VariableDeclarationStatement at 0", "INS SimpleName: Long to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to TryStatement at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: datum to VariableDeclarationFragment at 0", "INS TryStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setFetchTime to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: parseLong to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: key to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS Block to CatchClause at 1", "INS IfStatement to Block at 16", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS QualifiedName: CrawlDatum.STATUS_FETCH_SUCCESS to MethodInvocation at 2", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS QualifiedName: Nutch.FETCH_TIME_KEY to MethodInvocation at 2", "INS SimpleType: CrawlDatum to ClassInstanceCreation at 0", "INS SimpleName: crawlOut to MethodInvocation at 0", "INS SimpleName: datum to MethodInvocation at 0", "INS SimpleName: timeString to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setStatus to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: key to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: warn to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: CrawlDatum to SimpleType: CrawlDatum at 0"]}]}}, {"ParseOutputFormat_diff": {"operations": ["Insert IfStatement(759) into Block(760) at 16", "Insert PrefixExpression: !(695) into IfStatement(759) at 0", "Insert Block(758) into IfStatement(759) at 1", "Insert MethodInvocation(694) into PrefixExpression: !(695) at 0", "Insert VariableDeclarationStatement(703) into Block(758) at 0", "Insert ExpressionStatement(708) into Block(758) at 1", "Insert VariableDeclarationStatement(721) into Block(758) at 2", "Insert TryStatement(751) into Block(758) at 3", "Insert ExpressionStatement(757) into Block(758) at 4", "Insert SimpleName: parse(692) into MethodInvocation(694) at 0", "Insert SimpleName: isCanonical(693) into MethodInvocation(694) at 1", "Insert SimpleType: CrawlDatum(697) into VariableDeclarationStatement(703) at 0", "Insert VariableDeclarationFragment(702) into VariableDeclarationStatement(703) at 1", "Insert MethodInvocation(707) into ExpressionStatement(708) at 0", "Insert SimpleType: String(710) into VariableDeclarationStatement(721) at 0", "Insert VariableDeclarationFragment(720) into VariableDeclarationStatement(721) at 1", "Insert Block(730) into TryStatement(751) at 0", "Insert CatchClause(750) into TryStatement(751) at 1", "Insert MethodInvocation(756) into ExpressionStatement(757) at 0", "Insert SimpleName: CrawlDatum(696) into SimpleType: CrawlDatum(697) at 0", "Insert SimpleName: datum(698) into VariableDeclarationFragment(702) at 0", "Insert ClassInstanceCreation(701) into VariableDeclarationFragment(702) at 1", "Insert SimpleName: datum(704) into MethodInvocation(707) at 0", "Insert SimpleName: setStatus(705) into MethodInvocation(707) at 1", "Insert QualifiedName: CrawlDatum.STATUS_FETCH_SUCCESS(706) into MethodInvocation(707) at 2", "Insert SimpleName: String(709) into SimpleType: String(710) at 0", "Insert SimpleName: timeString(711) into VariableDeclarationFragment(720) at 0", "Insert MethodInvocation(719) into VariableDeclarationFragment(720) at 1", "Insert ExpressionStatement(729) into Block(730) at 0", "Insert SingleVariableDeclaration(734) into CatchClause(750) at 0", "Insert Block(749) into CatchClause(750) at 1", "Insert SimpleName: crawlOut(752) into MethodInvocation(756) at 0", "Insert SimpleName: append(753) into MethodInvocation(756) at 1", "Insert SimpleName: key(754) into MethodInvocation(756) at 2", "Insert SimpleName: datum(755) into MethodInvocation(756) at 3", "Insert SimpleType: CrawlDatum(700) into ClassInstanceCreation(701) at 0", "Insert MethodInvocation(716) into MethodInvocation(719) at 0", "Insert SimpleName: get(717) into MethodInvocation(719) at 1", "Insert QualifiedName: Nutch.FETCH_TIME_KEY(718) into MethodInvocation(719) at 2", "Insert MethodInvocation(728) into ExpressionStatement(729) at 0", "Insert SimpleType: Exception(732) into SingleVariableDeclaration(734) at 0", "Insert SimpleName: e(733) into SingleVariableDeclaration(734) at 1", "Insert ExpressionStatement(741) into Block(749) at 0", "Insert ExpressionStatement(748) into Block(749) at 1", "Insert SimpleName: CrawlDatum(699) into SimpleType: CrawlDatum(700) at 0", "Insert MethodInvocation(714) into MethodInvocation(716) at 0", "Insert SimpleName: getContentMeta(715) into MethodInvocation(716) at 1", "Insert SimpleName: datum(722) into MethodInvocation(728) at 0", "Insert SimpleName: setFetchTime(723) into MethodInvocation(728) at 1", "Insert MethodInvocation(727) into MethodInvocation(728) at 2", "Insert SimpleName: Exception(731) into SimpleType: Exception(732) at 0", "Insert MethodInvocation(740) into ExpressionStatement(741) at 0", "Insert MethodInvocation(747) into ExpressionStatement(748) at 0", "Insert SimpleName: parse(712) into MethodInvocation(714) at 0", "Insert SimpleName: getData(713) into MethodInvocation(714) at 1", "Insert SimpleName: Long(724) into MethodInvocation(727) at 0", "Insert SimpleName: parseLong(725) into MethodInvocation(727) at 1", "Insert SimpleName: timeString(726) into MethodInvocation(727) at 2", "Insert SimpleName: LOG(735) into MethodInvocation(740) at 0", "Insert SimpleName: warn(736) into MethodInvocation(740) at 1", "Insert InfixExpression: +(739) into MethodInvocation(740) at 2", "Insert SimpleName: datum(742) into MethodInvocation(747) at 0", "Insert SimpleName: setFetchTime(743) into MethodInvocation(747) at 1", "Insert MethodInvocation(746) into MethodInvocation(747) at 2", "Insert StringLiteral: \"Can't read fetch time for: \"(737) into InfixExpression: +(739) at 0", "Insert SimpleName: key(738) into InfixExpression: +(739) at 1", "Insert SimpleName: System(744) into MethodInvocation(746) at 0", "Insert SimpleName: currentTimeMillis(745) into MethodInvocation(746) at 1"]}}, {"ParseSegment_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.util.StringUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0"]}, {"root": "INS EnhancedForStatement to Block at 6", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: url to MethodInvocation at 2", "INS SimpleName: url to VariableDeclarationFragment at 0", "INS EnhancedForStatement to Block at 6", "INS TryStatement to Block at 7", "INS SimpleName: parse to VariableDeclarationFragment at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: content to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleName: output to MethodInvocation at 0", "INS ParameterizedType: Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS IfStatement to Block at 3", "INS SimpleName: collect to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: url to MethodInvocation at 2", "INS SimpleType: Entry to ParameterizedType: Entry<Text,Parse> at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to CatchClause at 1", "INS SimpleName: parseStatus to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 8", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Text to ParameterizedType: Entry<Text,Parse> at 1", "INS SimpleName: isSuccess to MethodInvocation at 1", "INS SimpleName: parse to MethodInvocation at 4", "INS CatchClause to TryStatement at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleType: Parse to ParameterizedType: Entry<Text,Parse> at 2", "INS SimpleName: Text to SimpleType: Text at 0", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from ParseStatus to ParseResult", "operations": ["UPD SimpleName: ParseStatus from ParseStatus to ParseResult", "UPD SimpleType: ParseStatus from ParseStatus to ParseResult"]}, {"root": "UPDATE from status to parseResult", "operations": ["UPD SimpleName: status from status to parseResult", "UPD SimpleName: parse from parse to parseResult"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 5"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Text to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ParseStatus to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: StringUtils to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS StringLiteral: \"Error parsing: \" to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: e to MethodInvocation at 2", "INS StringLiteral: \": \" to InfixExpression: + at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: key to InfixExpression: + at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: key to MethodInvocation at 0", "MOV SimpleName: collect to MethodInvocation at 1", "MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from passScoreAfterParsing to entry", "operations": ["UPD SimpleName: passScoreAfterParsing from passScoreAfterParsing to entry", "UPD SimpleName: status from status to entry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: status to MethodInvocation at 0", "MOV SimpleName: isSuccess to MethodInvocation at 1"]}, {"root": "UPDATE from isSuccess to getKey", "operations": ["UPD SimpleName: isSuccess from isSuccess to getKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: passScoreAfterParsing to MethodInvocation at 0", "MOV SimpleName: parse to MethodInvocation at 0"]}, {"root": "UPDATE from parse to parseStatus", "operations": ["UPD SimpleName: parse from parse to parseStatus", "UPD SimpleName: output from output to parseStatus"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: parse to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ClassInstanceCreation to ClassInstanceCreation at 1", "operations": ["INS SimpleType: ParseText to ClassInstanceCreation at 0", "INS SimpleName: ParseText to SimpleType: ParseText at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 4", "operations": ["INS SimpleName: parse to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 4", "INS SimpleName: isCanonical to MethodInvocation at 1"]}, {"root": "UPDATE from LOG to scfilters", "operations": ["UPD SimpleName: LOG from LOG to scfilters"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "UPDATE from isWarnEnabled to passScoreAfterParsing", "operations": ["UPD SimpleName: isWarnEnabled from isWarnEnabled to passScoreAfterParsing"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from \"Error passing score: \" to \"Error parsing: \"", "operations": ["UPD StringLiteral: \"Error passing score: \" from \"Error passing score: \" to \"Error parsing: \""]}, {"root": "INS SimpleName: parseStatus to InfixExpression: + at 3", "operations": ["INS SimpleName: parseStatus to InfixExpression: + at 3"]}, {"root": "UPDATE from collect to getEmptyParse", "operations": ["UPD SimpleName: collect from collect to getEmptyParse"]}, {"root": "UPDATE from key to getConf", "operations": ["UPD SimpleName: key from key to getConf"]}, {"root": "UPDATE from \"Error parsing: \" to \"Error passing score: \"", "operations": ["UPD StringLiteral: \"Error parsing: \" from \"Error parsing: \" to \"Error passing score: \""]}, {"root": "UPDATE from key to url", "operations": ["UPD SimpleName: key from key to url"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 3"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: parse", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: status", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: status", "DEL Assignment: =", "DEL SimpleName: e", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: status", "DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: parse", "DEL IfStatement", "DEL NullLiteral", "DEL Block", "DEL InfixExpression: !="]}, {"root": "DEL IfStatement", "operations": ["DEL TryStatement", "DEL Block", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: content", "DEL SimpleName: key", "DEL SimpleName: scfilters", "DEL CatchClause", "DEL Block", "DEL MethodInvocation", "DEL ReturnStatement", "DEL IfStatement", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL IfStatement", "DEL IfStatement"]}]}}, {"ParseSegment_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(606) at 6", "Insert ImportDeclaration(47) into CompilationUnit(606) at 16", "Insert QualifiedName: org.apache.hadoop.util.StringUtils(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.util.Map.Entry(46) into ImportDeclaration(47) at 0", "Insert EnhancedForStatement(378) into Block(379) at 5", "Update SimpleType: ParseStatus(182) to ParseResult", "Insert SingleVariableDeclaration(225) into EnhancedForStatement(378) at 0", "Insert SimpleName: parseResult(226) into EnhancedForStatement(378) at 1", "Insert Block(377) into EnhancedForStatement(378) at 2", "Update SimpleName: ParseStatus(181) to ParseResult", "Update SimpleName: status(183) to parseResult", "Insert NullLiteral(182) into VariableDeclarationFragment(183) at 1", "Insert ParameterizedType: Entry<Text,Parse>(223) into SingleVariableDeclaration(225) at 0", "Insert SimpleName: entry(224) into SingleVariableDeclaration(225) at 1", "Insert VariableDeclarationStatement(234) into Block(377) at 0", "Insert VariableDeclarationStatement(242) into Block(377) at 1", "Insert VariableDeclarationStatement(252) into Block(377) at 2", "Insert IfStatement(275) into Block(377) at 3", "Move ExpressionStatement(264) into Block(377) at 4", "Move VariableDeclarationStatement(234) into Block(377) at 5", "Move ExpressionStatement(250) into Block(377) at 6", "Insert TryStatement(356) into Block(377) at 7", "Insert ExpressionStatement(376) into Block(377) at 8", "Insert ReturnStatement(213) into Block(214) at 1", "Insert SimpleType: Entry(218) into ParameterizedType: Entry<Text,Parse>(223) at 0", "Insert SimpleType: Text(220) into ParameterizedType: Entry<Text,Parse>(223) at 1", "Insert SimpleType: Parse(222) into ParameterizedType: Entry<Text,Parse>(223) at 2", "Move SimpleType: Text(273) into VariableDeclarationStatement(234) at 0", "Insert VariableDeclarationFragment(233) into VariableDeclarationStatement(234) at 1", "Move SimpleType: Parse(176) into VariableDeclarationStatement(242) at 0", "Insert VariableDeclarationFragment(241) into VariableDeclarationStatement(242) at 1", "Move SimpleType: ParseStatus(212) into VariableDeclarationStatement(252) at 0", "Insert VariableDeclarationFragment(251) into VariableDeclarationStatement(252) at 1", "Insert PrefixExpression: !(256) into IfStatement(275) at 0", "Insert Block(274) into IfStatement(275) at 1", "Insert Block(325) into TryStatement(356) at 0", "Insert CatchClause(355) into TryStatement(356) at 1", "Insert MethodInvocation(375) into ExpressionStatement(376) at 0", "Update SimpleName: parse(186) to parseResult", "Insert MethodInvocation(211) into ExpressionStatement(212) at 0", "Insert SimpleName: Entry(217) into SimpleType: Entry(218) at 0", "Insert SimpleName: Text(219) into SimpleType: Text(220) at 0", "Insert SimpleName: Parse(221) into SimpleType: Parse(222) at 0", "Insert SimpleName: url(229) into VariableDeclarationFragment(233) at 0", "Insert MethodInvocation(232) into VariableDeclarationFragment(233) at 1", "Insert SimpleName: parse(237) into VariableDeclarationFragment(241) at 0", "Insert MethodInvocation(240) into VariableDeclarationFragment(241) at 1", "Insert SimpleName: parseStatus(245) into VariableDeclarationFragment(251) at 0", "Move MethodInvocation(202) into VariableDeclarationFragment(251) at 1", "Insert MethodInvocation(255) into PrefixExpression: !(256) at 0", "Move ExpressionStatement(306) into Block(274) at 0", "Move ExpressionStatement(326) into Block(274) at 1", "Insert ExpressionStatement(324) into Block(325) at 0", "Move SingleVariableDeclaration(284) into CatchClause(355) at 0", "Insert Block(354) into CatchClause(355) at 1", "Insert SimpleName: output(357) into MethodInvocation(375) at 0", "Insert SimpleName: collect(358) into MethodInvocation(375) at 1", "Insert SimpleName: url(359) into MethodInvocation(375) at 2", "Move ClassInstanceCreation(324) into MethodInvocation(375) at 3", "Insert SimpleName: LOG(201) into MethodInvocation(211) at 0", "Insert SimpleName: warn(202) into MethodInvocation(211) at 1", "Insert InfixExpression: +(210) into MethodInvocation(211) at 2", "Update SimpleName: status(267) to entry", "Move SimpleName: status(267) into MethodInvocation(232) at 0", "Update SimpleName: isSuccess(268) to getKey", "Move SimpleName: isSuccess(268) into MethodInvocation(232) at 1", "Update SimpleName: passScoreAfterParsing(271) to entry", "Move SimpleName: passScoreAfterParsing(271) into MethodInvocation(240) at 0", "Insert SimpleName: getValue(239) into MethodInvocation(240) at 1", "Update SimpleName: parse(277) to parseStatus", "Move SimpleName: parse(277) into MethodInvocation(255) at 0", "Insert SimpleName: isSuccess(254) into MethodInvocation(255) at 1", "Insert Assignment: =(272) into ExpressionStatement(273) at 0", "Insert MethodInvocation(323) into ExpressionStatement(324) at 0", "Insert IfStatement(353) into Block(354) at 0", "Insert ClassInstanceCreation(367) into ClassInstanceCreation(374) at 1", "Insert MethodInvocation(373) into ClassInstanceCreation(374) at 3", "Insert StringLiteral: \"Error parsing: \"(203) into InfixExpression: +(210) at 0", "Insert SimpleName: key(204) into InfixExpression: +(210) at 1", "Insert StringLiteral: \": \"(205) into InfixExpression: +(210) at 2", "Insert MethodInvocation(209) into InfixExpression: +(210) at 3", "Insert SimpleName: parse(266) into Assignment: =(272) at 0", "Insert MethodInvocation(271) into Assignment: =(272) at 1", "Update SimpleName: LOG(328) to scfilters", "Move SimpleName: LOG(328) into MethodInvocation(323) at 0", "Update SimpleName: isWarnEnabled(329) to passScoreAfterParsing", "Move SimpleName: isWarnEnabled(329) into MethodInvocation(323) at 1", "Insert SimpleName: url(320) into MethodInvocation(323) at 2", "Insert SimpleName: content(321) into MethodInvocation(323) at 3", "Insert SimpleName: parse(322) into MethodInvocation(323) at 4", "Move MethodInvocation(287) into IfStatement(353) at 0", "Move Block(342) into IfStatement(353) at 1", "Insert SimpleType: ParseText(363) into ClassInstanceCreation(367) at 0", "Move MethodInvocation(320) into ClassInstanceCreation(367) at 1", "Insert SimpleName: parse(371) into MethodInvocation(373) at 0", "Insert SimpleName: isCanonical(372) into MethodInvocation(373) at 1", "Insert SimpleName: StringUtils(206) into MethodInvocation(209) at 0", "Insert SimpleName: stringifyException(207) into MethodInvocation(209) at 1", "Insert SimpleName: e(208) into MethodInvocation(209) at 2", "Update StringLiteral: \"Error passing score: \"(298) to \"Error parsing: \"", "Insert SimpleName: parseStatus(262) into InfixExpression: +(263) at 3", "Update SimpleName: output(313) to parseStatus", "Move SimpleName: output(313) into MethodInvocation(271) at 0", "Update SimpleName: collect(314) to getEmptyParse", "Move SimpleName: collect(314) into MethodInvocation(271) at 1", "Insert MethodInvocation(270) into MethodInvocation(271) at 2", "Move ExpressionStatement(295) into Block(352) at 0", "Insert SimpleName: ParseText(362) into SimpleType: ParseText(363) at 0", "Update SimpleName: key(315) to getConf", "Move SimpleName: key(315) into MethodInvocation(270) at 0", "Update StringLiteral: \"Error parsing: \"(333) to \"Error passing score: \"", "Update SimpleName: key(334) to url", "Move MethodInvocation(303) into InfixExpression: +(349) at 3", "Delete SimpleName: parse(177)", "Delete NullLiteral(178)", "Delete VariableDeclarationFragment(179)", "Delete VariableDeclarationStatement(180)", "Delete SimpleName: status(197)", "Delete Assignment: =(203)", "Delete ExpressionStatement(204)", "Delete SimpleName: status(210)", "Delete SimpleName: e(213)", "Delete ClassInstanceCreation(214)", "Delete Assignment: =(215)", "Delete MethodInvocation(325)", "Delete SimpleName: status(336)", "Delete SimpleName: toString(337)", "Delete MethodInvocation(338)", "Delete SimpleName: parse(235)", "Delete NullLiteral(236)", "Delete InfixExpression: !=(237)", "Delete Block(265)", "Delete IfStatement(266)", "Delete MethodInvocation(269)", "Delete SimpleName: scfilters(270)", "Delete SimpleName: key(274)", "Delete CastExpression(275)", "Delete SimpleName: content(276)", "Delete MethodInvocation(278)", "Delete ExpressionStatement(279)", "Delete Block(280)", "Delete Block(307)", "Delete IfStatement(308)", "Delete ReturnStatement(309)", "Delete Block(310)", "Delete CatchClause(311)", "Delete TryStatement(312)", "Delete Block(327)", "Delete MethodInvocation(330)", "Delete IfStatement(343)", "Delete IfStatement(344)"]}}, {"ParseStatus_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS TextElement: which contains this status. to TagElement at 1", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: ParseResult to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: url to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: getEmptyParseResult to MethodDeclaration at 3", "INS TextElement: A convenience method. Creates an empty ParseResult, to TagElement at 0", "INS SimpleName: conf to MethodInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "INS SimpleName: url to SingleVariableDeclaration at 1", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS SimpleName: conf to SingleVariableDeclaration at 1", "INS SimpleName: getEmptyParse to MethodInvocation at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: isCanonical to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3"]}]}}, {"ParseStatus_diff": {"operations": ["Insert MethodDeclaration(585) into TypeDeclaration: class(969) at 39", "Insert Javadoc(563) into MethodDeclaration(585) at 0", "Insert Modifier: public(564) into MethodDeclaration(585) at 1", "Insert SimpleType: ParseResult(566) into MethodDeclaration(585) at 2", "Insert SimpleName: getEmptyParseResult(567) into MethodDeclaration(585) at 3", "Insert SingleVariableDeclaration(571) into MethodDeclaration(585) at 4", "Insert SingleVariableDeclaration(575) into MethodDeclaration(585) at 5", "Insert Block(584) into MethodDeclaration(585) at 6", "Insert MethodDeclaration(967) into TypeDeclaration: class(968) at 8", "Insert TagElement(562) into Javadoc(563) at 0", "Insert SimpleName: ParseResult(565) into SimpleType: ParseResult(566) at 0", "Insert SimpleType: String(569) into SingleVariableDeclaration(571) at 0", "Insert SimpleName: url(570) into SingleVariableDeclaration(571) at 1", "Insert SimpleType: Configuration(573) into SingleVariableDeclaration(575) at 0", "Insert SimpleName: conf(574) into SingleVariableDeclaration(575) at 1", "Insert ReturnStatement(583) into Block(584) at 0", "Insert Modifier: public(961) into MethodDeclaration(967) at 0", "Insert PrimitiveType: boolean(962) into MethodDeclaration(967) at 1", "Insert SimpleName: isCanonical(963) into MethodDeclaration(967) at 2", "Insert Block(966) into MethodDeclaration(967) at 3", "Insert TextElement: A convenience method. Creates an empty ParseResult,(560) into TagElement(562) at 0", "Insert TextElement: which contains this status.(561) into TagElement(562) at 1", "Insert SimpleName: String(568) into SimpleType: String(569) at 0", "Insert SimpleName: Configuration(572) into SimpleType: Configuration(573) at 0", "Insert MethodInvocation(582) into ReturnStatement(583) at 0", "Insert ReturnStatement(965) into Block(966) at 0", "Insert SimpleName: ParseResult(576) into MethodInvocation(582) at 0", "Insert SimpleName: createParseResult(577) into MethodInvocation(582) at 1", "Insert SimpleName: url(578) into MethodInvocation(582) at 2", "Insert MethodInvocation(581) into MethodInvocation(582) at 3", "Insert BooleanLiteral: true(964) into ReturnStatement(965) at 0", "Insert SimpleName: getEmptyParse(579) into MethodInvocation(581) at 0", "Insert SimpleName: conf(580) into MethodInvocation(581) at 1"]}}, {"Parser_cluster": {"actions": [{"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TextElement:  Content to be parsed to TagElement: @param at 1", "INS SimpleName: c to TagElement: @param at 0"]}, {"root": "INS TagElement: @return to Javadoc at 2", "operations": ["INS TextElement:  a map containing &lt;key, parse&gt; pairs to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 2"]}, {"root": "INS TagElement: @since to Javadoc at 3", "operations": ["INS TextElement:  NUTCH-443 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 3"]}, {"root": "INS TextElement: <p> to TagElement at 0", "operations": ["INS TextElement: <p> to TagElement at 0"]}, {"root": "UPDATE from Creates the parse for some content.  to This method parses the given content and returns a map of", "operations": ["UPD TextElement: Creates the parse for some content.  from Creates the parse for some content.  to This method parses the given content and returns a map of"]}, {"root": "INS TextElement: &lt;key, parse&gt; pairs.  to TagElement at 2", "operations": ["INS TextElement: &lt;key, parse&gt; pairs.  to TagElement at 2"]}, {"root": "INS TagElement: @link to TagElement at 3", "operations": ["INS SimpleName: Parse to TagElement: @link at 0", "INS TagElement: @link to TagElement at 3"]}, {"root": "INS TextElement:  instances will be persisted  to TagElement at 4", "operations": ["INS TextElement:  instances will be persisted  to TagElement at 4"]}, {"root": "INS TextElement: under the given key. to TagElement at 5", "operations": ["INS TextElement: under the given key. to TagElement at 5"]}, {"root": "INS TextElement: </p> to TagElement at 6", "operations": ["INS TextElement: </p> to TagElement at 6"]}, {"root": "INS TextElement: <p> to TagElement at 7", "operations": ["INS TextElement: <p> to TagElement at 7"]}, {"root": "INS TextElement: Note: Meta-redirects should be followed only when they are coming from to TagElement at 8", "operations": ["INS TextElement: Note: Meta-redirects should be followed only when they are coming from to TagElement at 8"]}, {"root": "INS TextElement: the original URL. That is: <br>  to TagElement at 9", "operations": ["INS TextElement: the original URL. That is: <br>  to TagElement at 9"]}, {"root": "INS TextElement: Assume fetcher is in parsing mode and is currently processing to TagElement at 10", "operations": ["INS TextElement: Assume fetcher is in parsing mode and is currently processing to TagElement at 10"]}, {"root": "INS TextElement: foo.bar.com/redirect.html. If this url contains a meta redirect to TagElement at 11", "operations": ["INS TextElement: foo.bar.com/redirect.html. If this url contains a meta redirect to TagElement at 11"]}, {"root": "INS TextElement: to another url, fetcher should only follow the redirect if the map to TagElement at 12", "operations": ["INS TextElement: to another url, fetcher should only follow the redirect if the map to TagElement at 12"]}, {"root": "INS TextElement: contains an entry of the form &lt;\"foo.bar.com/redirect.html\",  to TagElement at 13", "operations": ["INS TextElement: contains an entry of the form &lt;\"foo.bar.com/redirect.html\",  to TagElement at 13"]}, {"root": "INS TagElement: @link to TagElement at 14", "operations": ["INS TagElement: @link to TagElement at 14", "INS SimpleName: Parse to TagElement: @link at 0"]}, {"root": "INS TextElement:  with a  to TagElement at 15", "operations": ["INS TextElement:  with a  to TagElement at 15"]}, {"root": "INS TagElement: @link to TagElement at 16", "operations": ["INS TagElement: @link to TagElement at 16", "INS SimpleName: ParseStatus to TagElement: @link at 0"]}, {"root": "INS TextElement:  indicating the redirect&gt;. to TagElement at 17", "operations": ["INS TextElement:  indicating the redirect&gt;. to TagElement at 17"]}, {"root": "INS TextElement: </p> to TagElement at 18", "operations": ["INS TextElement: </p> to TagElement at 18"]}]}}, {"Parser_diff": {"operations": ["Update SimpleType: Parse(55) to ParseResult", "Insert TagElement: @param(76) into Javadoc(81) at 1", "Insert TagElement: @return(78) into Javadoc(81) at 2", "Insert TagElement: @since(80) into Javadoc(81) at 3", "Update SimpleName: Parse(54) to ParseResult", "Insert TextElement: <p>(51) into TagElement(73) at 0", "Update TextElement: Creates the parse for some content. (51) to This method parses the given content and returns a map of", "Insert TextElement: &lt;key, parse&gt; pairs. (53) into TagElement(73) at 2", "Insert TagElement: @link(55) into TagElement(73) at 3", "Insert TextElement:  instances will be persisted (56) into TagElement(73) at 4", "Insert TextElement: under the given key.(57) into TagElement(73) at 5", "Insert TextElement: </p>(58) into TagElement(73) at 6", "Insert TextElement: <p>(59) into TagElement(73) at 7", "Insert TextElement: Note: Meta-redirects should be followed only when they are coming from(60) into TagElement(73) at 8", "Insert TextElement: the original URL. That is: <br> (61) into TagElement(73) at 9", "Insert TextElement: Assume fetcher is in parsing mode and is currently processing(62) into TagElement(73) at 10", "Insert TextElement: foo.bar.com/redirect.html. If this url contains a meta redirect(63) into TagElement(73) at 11", "Insert TextElement: to another url, fetcher should only follow the redirect if the map(64) into TagElement(73) at 12", "Insert TextElement: contains an entry of the form &lt;\"foo.bar.com/redirect.html\", (65) into TagElement(73) at 13", "Insert TagElement: @link(67) into TagElement(73) at 14", "Insert TextElement:  with a (68) into TagElement(73) at 15", "Insert TagElement: @link(70) into TagElement(73) at 16", "Insert TextElement:  indicating the redirect&gt;.(71) into TagElement(73) at 17", "Insert TextElement: </p>(72) into TagElement(73) at 18", "Insert SimpleName: c(74) into TagElement: @param(76) at 0", "Insert TextElement:  Content to be parsed(75) into TagElement: @param(76) at 1", "Insert TextElement:  a map containing &lt;key, parse&gt; pairs(77) into TagElement: @return(78) at 0", "Insert TextElement:  NUTCH-443(79) into TagElement: @since(80) at 0", "Insert SimpleName: Parse(54) into TagElement: @link(55) at 0", "Insert SimpleName: Parse(66) into TagElement: @link(67) at 0", "Insert SimpleName: ParseStatus(69) into TagElement: @link(70) at 0"]}}, {"ParserChecker_cluster": {"actions": [{"root": "INS EnhancedForStatement to Block at 16", "operations": ["INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Parse to SimpleType: Parse at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: Text to SimpleType: Text at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS ParameterizedType: java.util.Map.Entry<Text,Parse> to SingleVariableDeclaration at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: Parse to ParameterizedType: java.util.Map.Entry<Text,Parse> at 2", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS SimpleType: Text to ParameterizedType: java.util.Map.Entry<Text,Parse> at 1", "INS SimpleName: parse to VariableDeclarationFragment at 0", "INS QualifiedName: System.out to MethodInvocation at 0", "INS SimpleName: parseResult to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 16", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"---------\\nUrl\\n---------------\\n\" to MethodInvocation at 2", "INS QualifiedName: System.out to MethodInvocation at 0", "INS SimpleType: java.util.Map.Entry to ParameterizedType: java.util.Map.Entry<Text,Parse> at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: java.util.Map.Entry to SimpleType: java.util.Map.Entry at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS SimpleType: ParseResult to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from parse to parseResult", "operations": ["UPD SimpleName: parse from parse to parseResult"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 4", "MOV IfStatement to Block at 5"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}]}}, {"ParserChecker_diff": {"operations": ["Insert EnhancedForStatement(362) into Block(368) at 16", "Insert SimpleType: ParseResult(291) into VariableDeclarationStatement(301) at 0", "Insert SingleVariableDeclaration(310) into EnhancedForStatement(362) at 0", "Insert SimpleName: parseResult(311) into EnhancedForStatement(362) at 1", "Insert Block(361) into EnhancedForStatement(362) at 2", "Insert SimpleName: ParseResult(290) into SimpleType: ParseResult(291) at 0", "Update SimpleName: parse(292) to parseResult", "Insert ParameterizedType: java.util.Map.Entry<Text,Parse>(308) into SingleVariableDeclaration(310) at 0", "Insert SimpleName: entry(309) into SingleVariableDeclaration(310) at 1", "Insert VariableDeclarationStatement(319) into Block(361) at 0", "Insert ExpressionStatement(324) into Block(361) at 1", "Insert ExpressionStatement(331) into Block(361) at 2", "Move ExpressionStatement(306) into Block(361) at 3", "Move ExpressionStatement(315) into Block(361) at 4", "Move IfStatement(330) into Block(361) at 5", "Insert SimpleType: java.util.Map.Entry(303) into ParameterizedType: java.util.Map.Entry<Text,Parse>(308) at 0", "Insert SimpleType: Text(305) into ParameterizedType: java.util.Map.Entry<Text,Parse>(308) at 1", "Insert SimpleType: Parse(307) into ParameterizedType: java.util.Map.Entry<Text,Parse>(308) at 2", "Move SimpleType: Parse(291) into VariableDeclarationStatement(319) at 0", "Insert VariableDeclarationFragment(318) into VariableDeclarationStatement(319) at 1", "Insert MethodInvocation(323) into ExpressionStatement(324) at 0", "Insert MethodInvocation(330) into ExpressionStatement(331) at 0", "Insert QualifiedName: java.util.Map.Entry(302) into SimpleType: java.util.Map.Entry(303) at 0", "Insert SimpleName: Text(304) into SimpleType: Text(305) at 0", "Insert SimpleName: Parse(306) into SimpleType: Parse(307) at 0", "Insert SimpleName: parse(314) into VariableDeclarationFragment(318) at 0", "Insert MethodInvocation(317) into VariableDeclarationFragment(318) at 1", "Insert QualifiedName: System.out(320) into MethodInvocation(323) at 0", "Insert SimpleName: print(321) into MethodInvocation(323) at 1", "Insert StringLiteral: \"---------\\nUrl\\n---------------\\n\"(322) into MethodInvocation(323) at 2", "Insert QualifiedName: System.out(325) into MethodInvocation(330) at 0", "Insert SimpleName: print(326) into MethodInvocation(330) at 1", "Insert MethodInvocation(329) into MethodInvocation(330) at 2", "Insert SimpleName: entry(315) into MethodInvocation(317) at 0", "Insert SimpleName: getValue(316) into MethodInvocation(317) at 1", "Insert SimpleName: entry(327) into MethodInvocation(329) at 0", "Insert SimpleName: getKey(328) into MethodInvocation(329) at 1"]}}, {"LanguageIdentifier_cluster": {"actions": [{"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}]}}, {"LanguageIdentifier_diff": {"operations": [" *      Language Codes</a>(78) to TextElement:  <a href=\"http://www.w3.org/WAI/ER/IG/ert/iso639.htm\">ISO 639", " *      Language Codes</a>(78)", "Insert MethodInvocation(1302) into VariableDeclarationFragment(1303) at 1", "Move MethodInvocation(1297) into MethodInvocation(1302) at 0", "Insert SimpleName: get(1298) into MethodInvocation(1302) at 1", "Insert MethodInvocation(1301) into MethodInvocation(1302) at 2", "Insert SimpleName: content(1299) into MethodInvocation(1301) at 0", "Insert SimpleName: getUrl(1300) into MethodInvocation(1301) at 1"]}}, {"MSBaseParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 16"]}, {"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS QualifiedName: System.out to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: println to MethodInvocation at 3"]}, {"root": "UPDATE from println to getText", "operations": ["UPD SimpleName: println from println to getText"]}, {"root": "UPDATE from getText to get", "operations": ["UPD SimpleName: getText from getText to get"]}, {"root": "INS SimpleName: file to MethodInvocation at 2", "operations": ["INS SimpleName: file to MethodInvocation at 2"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL QualifiedName: System.out", "operations": ["DEL QualifiedName: System.out"]}]}}, {"MSBaseParser_diff": {"operations": ["Move ImportDeclaration(41) into CompilationUnit(538) at 16", "Update QualifiedName: org.apache.nutch.parse.Parse(40) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(96) to ParseResult", "Update SimpleName: Parse(95) to ParseResult", "Insert MethodInvocation(321) into ReturnStatement(322) at 0", "Insert MethodInvocation(435) into ExpressionStatement(436) at 0", "Insert SimpleName: ParseResult(311) into MethodInvocation(321) at 0", "Insert SimpleName: createParseResult(312) into MethodInvocation(321) at 1", "Insert MethodInvocation(315) into MethodInvocation(321) at 2", "Move ClassInstanceCreation(309) into MethodInvocation(321) at 3", "Insert QualifiedName: System.out(424) into MethodInvocation(435) at 0", "Insert SimpleName: println(425) into MethodInvocation(435) at 1", "Move MethodInvocation(420) into MethodInvocation(435) at 2", "Move SimpleName: println(413) into MethodInvocation(434) at 3", "Insert SimpleName: content(313) into MethodInvocation(315) at 0", "Insert SimpleName: getUrl(314) into MethodInvocation(315) at 1", "Update SimpleName: println(413) to getText", "Update SimpleName: getText(418) to get", "Insert SimpleName: file(431) into MethodInvocation(432) at 2", "Update SimpleName: getEmptyParse(226) to getEmptyParseResult", "Insert MethodInvocation(232) into MethodInvocation(236) at 2", "Update SimpleName: getEmptyParse(174) to getEmptyParseResult", "Insert MethodInvocation(177) into MethodInvocation(181) at 2", "Insert SimpleName: content(230) into MethodInvocation(232) at 0", "Insert SimpleName: getUrl(231) into MethodInvocation(232) at 1", "Insert SimpleName: content(175) into MethodInvocation(177) at 0", "Insert SimpleName: getUrl(176) into MethodInvocation(177) at 1", "Delete QualifiedName: System.out(412)"]}}, {"ExtParser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.nutch.parse.ParseResult to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: content to MethodInvocation at 0"]}]}}, {"ExtParser_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(591) at 2", "Insert QualifiedName: org.apache.nutch.parse.ParseResult(18) into ImportDeclaration(19) at 0", "Update SimpleType: Parse(115) to ParseResult", "Update SimpleName: Parse(114) to ParseResult", "Insert MethodInvocation(436) into ReturnStatement(437) at 0", "Insert SimpleName: ParseResult(426) into MethodInvocation(436) at 0", "Insert SimpleName: createParseResult(427) into MethodInvocation(436) at 1", "Insert MethodInvocation(430) into MethodInvocation(436) at 2", "Move ClassInstanceCreation(416) into MethodInvocation(436) at 3", "Update SimpleName: getEmptyParse(155) to getEmptyParseResult", "Insert MethodInvocation(160) into MethodInvocation(163) at 2", "Insert SimpleName: content(428) into MethodInvocation(430) at 0", "Insert SimpleName: getUrl(429) into MethodInvocation(430) at 1", "Insert SimpleName: content(158) into MethodInvocation(160) at 0", "Insert SimpleName: getUrl(159) into MethodInvocation(160) at 1", "Update SimpleName: getEmptyParse(333) to getEmptyParseResult", "Insert MethodInvocation(344) into MethodInvocation(347) at 2", "Update SimpleName: getEmptyParse(354) to getEmptyParseResult", "Insert MethodInvocation(368) into MethodInvocation(371) at 2", "Update SimpleName: getEmptyParse(247) to getEmptyParseResult", "Insert MethodInvocation(255) into MethodInvocation(258) at 2", "Insert SimpleName: content(342) into MethodInvocation(344) at 0", "Insert SimpleName: getUrl(343) into MethodInvocation(344) at 1", "Insert SimpleName: content(366) into MethodInvocation(368) at 0", "Insert SimpleName: getUrl(367) into MethodInvocation(368) at 1", "Insert SimpleName: content(253) into MethodInvocation(255) at 0", "Insert SimpleName: getUrl(254) into MethodInvocation(255) at 1"]}}, {"HtmlParser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Map to ImportDeclaration at 0"]}, {"root": "INS SimpleType: ParseResult to MethodDeclaration at 1", "operations": ["INS SimpleType: ParseResult to MethodDeclaration at 1", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 18", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS VariableDeclarationStatement to Block at 18", "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: filteredParse to VariableDeclarationFragment at 0"]}, {"root": "INS CatchClause to TryStatement at 2", "operations": ["INS CatchClause to TryStatement at 2"]}, {"root": "INS CatchClause to TryStatement at 3", "operations": ["INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 3"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}, {"root": "UPDATE from parse to filteredParse", "operations": ["UPD SimpleName: parse from parse to filteredParse"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0", "MOV Block to CatchClause at 1"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "UPDATE from parse to parseResult", "operations": ["UPD SimpleName: parse from parse to parseResult", "UPD SimpleName: parse from parse to parseResult"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleName: filteredParse to EnhancedForStatement at 1", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse> at 0", "INS ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse> to SingleVariableDeclaration at 0", "INS SimpleType: org.apache.hadoop.io.Text to ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse> at 1", "INS QualifiedName: org.apache.hadoop.io.Text to SimpleType: org.apache.hadoop.io.Text at 0", "INS EnhancedForStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to EnhancedForStatement at 2"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: url to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: filter to MethodInvocation at 1", "MOV SimpleName: content to MethodInvocation at 2", "MOV SimpleName: metaTags to MethodInvocation at 4", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: root to MethodInvocation at 5", "MOV SimpleName: parse to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse>", "operations": ["MOV SimpleType: Parse to ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse> at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from parse to getValue", "operations": ["UPD SimpleName: parse from parse to getValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: parse to MethodInvocation at 1"]}, {"root": "DEL CatchClause", "operations": ["DEL CatchClause"]}, {"root": "DEL CatchClause", "operations": ["DEL CatchClause", "DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: parse", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"HtmlParser_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(1357) at 2", "Insert QualifiedName: java.util.Map(18) into ImportDeclaration(19) at 0", "Insert SimpleType: ParseResult(240) into MethodDeclaration(885) at 1", "Insert SimpleName: ParseResult(239) into SimpleType: ParseResult(240) at 0", "Insert VariableDeclarationStatement(853) into Block(884) at 18", "Insert CatchClause(560) into TryStatement(605) at 2", "Insert CatchClause(578) into TryStatement(605) at 3", "Update SimpleType: Parse(808) to ParseResult", "Insert SimpleType: ParseResult(841) into VariableDeclarationStatement(853) at 0", "Insert VariableDeclarationFragment(852) into VariableDeclarationStatement(853) at 1", "Update SimpleName: parse(844) to filteredParse", "Move SingleVariableDeclaration(538) into CatchClause(560) at 0", "Move Block(563) into CatchClause(560) at 1", "Move SingleVariableDeclaration(553) into CatchClause(578) at 0", "Insert Block(577) into CatchClause(578) at 1", "Move SingleVariableDeclaration(568) into CatchClause(604) at 0", "Update SimpleName: Parse(807) to ParseResult", "Update SimpleName: parse(809) to parseResult", "Insert MethodInvocation(837) into VariableDeclarationFragment(838) at 1", "Insert SimpleName: ParseResult(840) into SimpleType: ParseResult(841) at 0", "Insert SimpleName: filteredParse(842) into VariableDeclarationFragment(852) at 0", "Insert MethodInvocation(851) into VariableDeclarationFragment(852) at 1", "Insert EnhancedForStatement(879) into Block(880) at 0", "Insert MethodInvocation(1256) into VariableDeclarationFragment(1257) at 1", "Move ReturnStatement(585) into Block(577) at 0", "Move ExpressionStatement(576) into Block(603) at 0", "Insert SimpleName: ParseResult(827) into MethodInvocation(837) at 0", "Insert SimpleName: createParseResult(828) into MethodInvocation(837) at 1", "Insert MethodInvocation(831) into MethodInvocation(837) at 2", "Move ClassInstanceCreation(814) into MethodInvocation(837) at 3", "Move FieldAccess(820) into MethodInvocation(851) at 0", "Move SimpleName: filter(821) into MethodInvocation(851) at 1", "Move SimpleName: content(822) into MethodInvocation(851) at 2", "Update SimpleName: parse(823) to parseResult", "Move SimpleName: parse(823) into MethodInvocation(851) at 3", "Move SimpleName: metaTags(824) into MethodInvocation(851) at 4", "Move SimpleName: root(825) into MethodInvocation(851) at 5", "Insert SingleVariableDeclaration(865) into EnhancedForStatement(879) at 0", "Insert SimpleName: filteredParse(866) into EnhancedForStatement(879) at 1", "Insert ExpressionStatement(878) into EnhancedForStatement(879) at 2", "Move MethodInvocation(1215) into MethodInvocation(1256) at 0", "Insert SimpleName: get(1254) into MethodInvocation(1256) at 1", "Insert SimpleName: url(1255) into MethodInvocation(1256) at 2", "Insert SimpleName: content(829) into MethodInvocation(831) at 0", "Insert SimpleName: getUrl(830) into MethodInvocation(831) at 1", "Insert ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse>(863) into SingleVariableDeclaration(865) at 0", "Insert SimpleName: entry(864) into SingleVariableDeclaration(865) at 1", "Move MethodInvocation(840) into ExpressionStatement(878) at 0", "Update SimpleName: getEmptyParse(275) to getEmptyParseResult", "Insert MethodInvocation(280) into MethodInvocation(283) at 2", "Update SimpleName: getEmptyParse(528) to getEmptyParseResult", "Insert MethodInvocation(536) into MethodInvocation(539) at 2", "Move MethodInvocation(545) into MethodInvocation(539) at 3", "Update SimpleName: getEmptyParse(558) to getEmptyParseResult", "Insert MethodInvocation(554) into MethodInvocation(557) at 2", "Update SimpleName: getEmptyParse(581) to getEmptyParseResult", "Insert MethodInvocation(572) into MethodInvocation(575) at 2", "Update SimpleName: getEmptyParse(543) to getEmptyParseResult", "Insert MethodInvocation(598) into MethodInvocation(601) at 2", "Move MethodInvocation(530) into MethodInvocation(601) at 3", "Insert SimpleType: Map.Entry(858) into ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse>(863) at 0", "Insert SimpleType: org.apache.hadoop.io.Text(860) into ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse>(863) at 1", "Move SimpleType: Parse(238) into ParameterizedType: Map.Entry<org.apache.hadoop.io.Text,Parse>(863) at 2", "Insert SimpleName: content(278) into MethodInvocation(280) at 0", "Insert SimpleName: getUrl(279) into MethodInvocation(280) at 1", "Insert SimpleName: content(534) into MethodInvocation(536) at 0", "Insert SimpleName: getUrl(535) into MethodInvocation(536) at 1", "Insert SimpleName: content(552) into MethodInvocation(554) at 0", "Insert SimpleName: getUrl(553) into MethodInvocation(554) at 1", "Insert SimpleName: content(570) into MethodInvocation(572) at 0", "Insert SimpleName: getUrl(571) into MethodInvocation(572) at 1", "Insert SimpleName: content(596) into MethodInvocation(598) at 0", "Insert SimpleName: getUrl(597) into MethodInvocation(598) at 1", "Insert QualifiedName: Map.Entry(857) into SimpleType: Map.Entry(858) at 0", "Insert QualifiedName: org.apache.hadoop.io.Text(859) into SimpleType: org.apache.hadoop.io.Text(860) at 0", "Insert MethodInvocation(869) into MethodInvocation(871) at 0", "Insert SimpleName: entry(867) into MethodInvocation(869) at 0", "Update SimpleName: parse(832) to getValue", "Move SimpleName: parse(832) into MethodInvocation(869) at 1", "Delete CatchClause(564)", "Delete Block(586)", "Delete CatchClause(587)", "Delete SimpleName: parse(817)", "Delete MethodInvocation(826)", "Delete Assignment: =(827)", "Delete ExpressionStatement(828)", "Delete ExpressionStatement(841)"]}}, {"JSParseFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.nutch.parse.ParseResult to ImportDeclaration at 0"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}, {"root": "INS ReturnStatement to Block at 10", "operations": ["INS SimpleName: ParseResult to MethodInvocation at 0", "INS ReturnStatement to Block at 10", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: c to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: c to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Parse", "DEL SimpleName: parse", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: Parse"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: parse", "DEL ReturnStatement"]}]}}, {"JSParseFilter_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(1287) at 18", "Insert QualifiedName: org.apache.nutch.parse.ParseResult(36) into ImportDeclaration(37) at 0", "Update SimpleType: Parse(596) to ParseResult", "Update SimpleName: Parse(595) to ParseResult", "Insert ReturnStatement(772) into Block(773) at 10", "Insert MethodInvocation(771) into ReturnStatement(772) at 0", "Insert SimpleName: ParseResult(761) into MethodInvocation(771) at 0", "Insert SimpleName: createParseResult(762) into MethodInvocation(771) at 1", "Insert MethodInvocation(765) into MethodInvocation(771) at 2", "Move ClassInstanceCreation(763) into MethodInvocation(771) at 3", "Update SimpleName: getEmptyParse(637) to getEmptyParseResult", "Insert MethodInvocation(642) into MethodInvocation(645) at 2", "Insert SimpleName: c(763) into MethodInvocation(765) at 0", "Insert SimpleName: getUrl(764) into MethodInvocation(765) at 1", "Insert SimpleName: c(640) into MethodInvocation(642) at 0", "Insert SimpleName: getUrl(641) into MethodInvocation(642) at 1", "Delete SimpleName: Parse(756)", "Delete SimpleType: Parse(757)", "Delete SimpleName: parse(758)", "Delete VariableDeclarationFragment(764)", "Delete VariableDeclarationStatement(765)", "Delete SimpleName: parse(766)", "Delete ReturnStatement(767)"]}}, {"MSExcelParser_cluster": {"actions": [{"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}]}}, {"MSExcelParser_diff": {"operations": ["Update QualifiedName: org.apache.nutch.parse.Parse(16) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(48) to ParseResult", "Update SimpleName: Parse(47) to ParseResult"]}}, {"MSPowerPointParser_cluster": {"actions": [{"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}]}}, {"MSPowerPointParser_diff": {"operations": ["Update QualifiedName: org.apache.nutch.parse.Parse(16) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(53) to ParseResult", "Update SimpleName: Parse(52) to ParseResult"]}}, {"MSWordParser_cluster": {"actions": [{"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}]}}, {"MSWordParser_diff": {"operations": ["Update QualifiedName: org.apache.nutch.parse.Parse(18) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(51) to ParseResult", "Update SimpleName: Parse(50) to ParseResult"]}}, {"OOParser_cluster": {"actions": [{"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: c to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: content to MethodInvocation at 0"]}]}}, {"OOParser_diff": {"operations": ["Update SimpleType: Parse(110) to ParseResult", "Update SimpleName: Parse(109) to ParseResult", "Insert MethodInvocation(352) into ReturnStatement(353) at 0", "Insert SimpleName: ParseResult(342) into MethodInvocation(352) at 0", "Insert SimpleName: createParseResult(343) into MethodInvocation(352) at 1", "Insert MethodInvocation(346) into MethodInvocation(352) at 2", "Move ClassInstanceCreation(340) into MethodInvocation(352) at 3", "Insert MethodInvocation(1024) into VariableDeclarationFragment(1025) at 1", "Insert SimpleName: content(344) into MethodInvocation(346) at 0", "Insert SimpleName: getUrl(345) into MethodInvocation(346) at 1", "Move MethodInvocation(1007) into MethodInvocation(1024) at 0", "Insert SimpleName: get(1020) into MethodInvocation(1024) at 1", "Insert MethodInvocation(1023) into MethodInvocation(1024) at 2", "Insert SimpleName: c(1021) into MethodInvocation(1023) at 0", "Insert SimpleName: getUrl(1022) into MethodInvocation(1023) at 1", "Update SimpleName: getEmptyParse(271) to getEmptyParseResult", "Insert MethodInvocation(277) into MethodInvocation(279) at 2", "Update SimpleName: getEmptyParse(183) to getEmptyParseResult", "Insert MethodInvocation(186) into MethodInvocation(188) at 2", "Insert SimpleName: content(275) into MethodInvocation(277) at 0", "Insert SimpleName: getUrl(276) into MethodInvocation(277) at 1", "Insert SimpleName: content(184) into MethodInvocation(186) at 0", "Insert SimpleName: getUrl(185) into MethodInvocation(186) at 1"]}}, {"PdfParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: createParseResult to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}]}}, {"PdfParser_diff": {"operations": ["Move ImportDeclaration(47) into CompilationUnit(537) at 14", "Update QualifiedName: org.apache.nutch.parse.Parse(46) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(100) to ParseResult", "Update SimpleName: Parse(99) to ParseResult", "Insert MethodInvocation(467) into ReturnStatement(468) at 0", "Insert SimpleName: ParseResult(457) into MethodInvocation(467) at 0", "Insert SimpleName: createParseResult(458) into MethodInvocation(467) at 1", "Insert MethodInvocation(461) into MethodInvocation(467) at 2", "Move ClassInstanceCreation(449) into MethodInvocation(467) at 3", "Insert SimpleName: content(459) into MethodInvocation(461) at 0", "Insert SimpleName: getUrl(460) into MethodInvocation(461) at 1", "Update SimpleName: getEmptyParse(311) to getEmptyParseResult", "Insert MethodInvocation(317) into MethodInvocation(320) at 2", "Update SimpleName: getEmptyParse(329) to getEmptyParseResult", "Insert MethodInvocation(338) into MethodInvocation(341) at 2", "Update SimpleName: getEmptyParse(369) to getEmptyParseResult", "Insert MethodInvocation(381) into MethodInvocation(384) at 2", "Update SimpleName: getEmptyParse(171) to getEmptyParseResult", "Insert MethodInvocation(174) into MethodInvocation(177) at 2", "Insert SimpleName: content(315) into MethodInvocation(317) at 0", "Insert SimpleName: getUrl(316) into MethodInvocation(317) at 1", "Insert SimpleName: content(336) into MethodInvocation(338) at 0", "Insert SimpleName: getUrl(337) into MethodInvocation(338) at 1", "Insert SimpleName: content(379) into MethodInvocation(381) at 0", "Insert SimpleName: getUrl(380) into MethodInvocation(381) at 1", "Insert SimpleName: content(172) into MethodInvocation(174) at 0", "Insert SimpleName: getUrl(173) into MethodInvocation(174) at 1"]}}, {"RSSParser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.nutch.parse.ParseResult to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: createParseResult to MethodInvocation at 1", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}]}}, {"RSSParser_diff": {"operations": ["Insert ImportDeclaration(35) into CompilationUnit(747) at 10", "Insert QualifiedName: org.apache.nutch.parse.ParseResult(34) into ImportDeclaration(35) at 0", "Update SimpleType: Parse(117) to ParseResult", "Update SimpleName: Parse(116) to ParseResult", "Insert MethodInvocation(613) into ReturnStatement(614) at 0", "Insert SimpleName: ParseResult(601) into MethodInvocation(613) at 0", "Insert SimpleName: createParseResult(602) into MethodInvocation(613) at 1", "Insert MethodInvocation(605) into MethodInvocation(613) at 2", "Move ClassInstanceCreation(602) into MethodInvocation(613) at 3", "Insert MethodInvocation(723) into VariableDeclarationFragment(724) at 1", "Insert SimpleName: content(603) into MethodInvocation(605) at 0", "Insert SimpleName: getUrl(604) into MethodInvocation(605) at 1", "Move MethodInvocation(707) into MethodInvocation(723) at 0", "Insert SimpleName: get(719) into MethodInvocation(723) at 1", "Insert MethodInvocation(722) into MethodInvocation(723) at 2", "Insert SimpleName: content(720) into MethodInvocation(722) at 0", "Insert SimpleName: getUrl(721) into MethodInvocation(722) at 1", "Update SimpleName: getEmptyParse(208) to getEmptyParseResult", "Insert MethodInvocation(213) into MethodInvocation(216) at 2", "Insert SimpleName: content(211) into MethodInvocation(213) at 0", "Insert SimpleName: getUrl(212) into MethodInvocation(213) at 1"]}}, {"SWFParser_cluster": {"actions": [{"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleName: p to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 5", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: args to ArrayAccess at 0", "INS StringLiteral: \"file:\" to InfixExpression: + at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parseResult to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ArrayAccess to InfixExpression: + at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: createParseResult to MethodInvocation at 1"]}, {"root": "INS SimpleType: ParseResult to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: ParseResult to SimpleType: ParseResult at 0", "INS SimpleType: ParseResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Parse to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from p to parseResult", "operations": ["UPD SimpleName: p from p to parseResult"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getConf to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: getConf to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from conf to content", "operations": ["UPD SimpleName: conf from conf to content", "UPD SimpleName: conf from conf to content"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: conf to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: conf to MethodInvocation at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"SWFParser_diff": {"operations": ["Update SimpleType: Parse(110) to ParseResult", "Update SimpleName: Parse(109) to ParseResult", "Insert VariableDeclarationStatement(501) into Block(526) at 5", "Insert MethodInvocation(404) into ReturnStatement(405) at 0", "Insert SimpleType: ParseResult(461) into VariableDeclarationStatement(488) at 0", "Move SimpleType: Parse(448) into VariableDeclarationStatement(501) at 0", "Insert VariableDeclarationFragment(500) into VariableDeclarationStatement(501) at 1", "Insert SimpleName: ParseResult(394) into MethodInvocation(404) at 0", "Insert SimpleName: createParseResult(395) into MethodInvocation(404) at 1", "Insert MethodInvocation(398) into MethodInvocation(404) at 2", "Move ClassInstanceCreation(391) into MethodInvocation(404) at 3", "Insert SimpleName: ParseResult(460) into SimpleType: ParseResult(461) at 0", "Update SimpleName: p(449) to parseResult", "Insert SimpleName: p(491) into VariableDeclarationFragment(500) at 0", "Insert MethodInvocation(499) into VariableDeclarationFragment(500) at 1", "Insert SimpleName: content(396) into MethodInvocation(398) at 0", "Insert SimpleName: getUrl(397) into MethodInvocation(398) at 1", "Insert SimpleName: parseResult(492) into MethodInvocation(499) at 0", "Insert SimpleName: get(493) into MethodInvocation(499) at 1", "Insert InfixExpression: +(498) into MethodInvocation(499) at 2", "Insert StringLiteral: \"file:\"(494) into InfixExpression: +(498) at 0", "Insert ArrayAccess(497) into InfixExpression: +(498) at 1", "Update SimpleName: getEmptyParse(334) to getEmptyParseResult", "Insert MethodInvocation(341) into MethodInvocation(344) at 2", "Insert MethodInvocation(343) into MethodInvocation(344) at 3", "Insert SimpleName: args(495) into ArrayAccess(497) at 0", "Insert NumberLiteral: 0(496) into ArrayAccess(497) at 1", "Update SimpleName: getEmptyParse(169) to getEmptyParseResult", "Insert MethodInvocation(172) into MethodInvocation(175) at 2", "Insert MethodInvocation(174) into MethodInvocation(175) at 3", "Update SimpleName: conf(335) to content", "Move SimpleName: conf(335) into MethodInvocation(341) at 0", "Insert SimpleName: getUrl(340) into MethodInvocation(341) at 1", "Insert SimpleName: getConf(342) into MethodInvocation(343) at 0", "Update SimpleName: conf(170) to content", "Move SimpleName: conf(170) into MethodInvocation(172) at 0", "Insert SimpleName: getUrl(171) into MethodInvocation(172) at 1", "Insert SimpleName: getConf(173) into MethodInvocation(174) at 0", "Delete Block(340)"]}}, {"TextParser_cluster": {"actions": [{"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleName: Parse from Parse to ParseResult", "UPD SimpleType: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}]}}, {"TextParser_diff": {"operations": ["Update SimpleType: Parse(36) to ParseResult", "Update SimpleName: Parse(35) to ParseResult", "Insert MethodInvocation(139) into ReturnStatement(140) at 0", "Insert SimpleName: ParseResult(129) into MethodInvocation(139) at 0", "Insert SimpleName: createParseResult(130) into MethodInvocation(139) at 1", "Insert MethodInvocation(133) into MethodInvocation(139) at 2", "Move ClassInstanceCreation(130) into MethodInvocation(139) at 3", "Insert SimpleName: content(131) into MethodInvocation(133) at 0", "Insert SimpleName: getUrl(132) into MethodInvocation(133) at 1", "Update SimpleName: getEmptyParse(80) to getEmptyParseResult", "Insert MethodInvocation(83) into MethodInvocation(86) at 2", "Insert SimpleName: content(81) into MethodInvocation(83) at 0", "Insert SimpleName: getUrl(82) into MethodInvocation(83) at 1"]}}, {"ZipParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult", "operations": ["UPD QualifiedName: org.apache.nutch.parse.Parse from org.apache.nutch.parse.Parse to org.apache.nutch.parse.ParseResult"]}, {"root": "UPDATE from Parse to ParseResult", "operations": ["UPD SimpleType: Parse from Parse to ParseResult", "UPD SimpleName: Parse from Parse to ParseResult"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS SimpleName: ParseResult to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS SimpleName: createParseResult to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from getEmptyParse to getEmptyParseResult", "operations": ["UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult", "UPD SimpleName: getEmptyParse from getEmptyParse to getEmptyParseResult"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: content to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getUrl to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0"]}]}}, {"ZipParser_diff": {"operations": ["Move ImportDeclaration(37) into CompilationUnit(370) at 14", "Update QualifiedName: org.apache.nutch.parse.Parse(36) to org.apache.nutch.parse.ParseResult", "Update SimpleType: Parse(89) to ParseResult", "Update SimpleName: Parse(88) to ParseResult", "Insert MethodInvocation(340) into ReturnStatement(341) at 0", "Insert SimpleName: ParseResult(330) into MethodInvocation(340) at 0", "Insert SimpleName: createParseResult(331) into MethodInvocation(340) at 1", "Insert MethodInvocation(334) into MethodInvocation(340) at 2", "Move ClassInstanceCreation(328) into MethodInvocation(340) at 3", "Insert SimpleName: content(332) into MethodInvocation(334) at 0", "Insert SimpleName: getUrl(333) into MethodInvocation(334) at 1", "Update SimpleName: getEmptyParse(249) to getEmptyParseResult", "Insert MethodInvocation(255) into MethodInvocation(258) at 2", "Update SimpleName: getEmptyParse(206) to getEmptyParseResult", "Insert MethodInvocation(209) into MethodInvocation(212) at 2", "Insert SimpleName: content(253) into MethodInvocation(255) at 0", "Insert SimpleName: getUrl(254) into MethodInvocation(255) at 1", "Insert SimpleName: content(207) into MethodInvocation(209) at 0", "Insert SimpleName: getUrl(208) into MethodInvocation(209) at 1"]}}, {"ZipTextExtractor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.nutch.parse.ParseImpl to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getUrl to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}]}}, {"ZipTextExtractor_diff": {"operations": ["Insert ImportDeclaration(45) into CompilationUnit(441) at 15", "Insert QualifiedName: org.apache.nutch.parse.ParseImpl(44) into ImportDeclaration(45) at 0", "Insert MethodInvocation(341) into VariableDeclarationFragment(342) at 1", "Move MethodInvocation(334) into MethodInvocation(341) at 0", "Insert SimpleName: get(337) into MethodInvocation(341) at 1", "Insert MethodInvocation(340) into MethodInvocation(341) at 2", "Insert SimpleName: content(338) into MethodInvocation(340) at 0", "Insert SimpleName: getUrl(339) into MethodInvocation(340) at 1"]}}], "commit_stats": [{"total_files": 41, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}