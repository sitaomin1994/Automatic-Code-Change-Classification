{"application": "apache-zookeeper", "csha": "0b3d1c6a7b46961e1fc501d66fb52173935306a1", "files": [{"KeeperException_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.List to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS TextElement: scope.  Non-multi requests will get a null if they try to access to TagElement at 2", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: these results. to TagElement at 3", "INS TagElement to Javadoc at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS TextElement: All multi-requests that result in an exception retain the results to TagElement at 0", "INS ParameterizedType: List<OpResult> to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS TextElement: here so that it is possible to examine the problems in the catch to TagElement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: results to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: setMultiResults to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 0", "INS SimpleName: results to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: results to SingleVariableDeclaration at 1", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS ParameterizedType: List<OpResult> to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 23", "INS ParameterizedType: ArrayList<OpResult> to ClassInstanceCreation at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: List to SimpleType: List at 0", "INS NullLiteral to InfixExpression: != at 1", "INS TextElement: and error codes can be retrieved using this getter. to TagElement at 1", "INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: results to InfixExpression: != at 0", "INS TextElement: If this exception was thrown by a multi-request then the (partial) results to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ParameterizedType: List<OpResult> to MethodDeclaration at 2", "INS ClassInstanceCreation to ConditionalExpression at 1", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: results to ClassInstanceCreation at 1", "INS TextElement:  A copy of the list of results from the operations in the multi-request. to TagElement: @return at 0", "INS Block to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<OpResult> at 0", "INS NullLiteral to ConditionalExpression at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: OpResult to ParameterizedType: ArrayList<OpResult> at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS SimpleName: getResults to MethodDeclaration at 3", "INS ConditionalExpression to ReturnStatement at 0"]}]}}, {"KeeperException_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(1721) at 1", "Insert ImportDeclaration(24) into CompilationUnit(1721) at 4", "Insert QualifiedName: java.util.ArrayList(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: java.util.List(23) into ImportDeclaration(24) at 0", "Insert FieldDeclaration(49) into TypeDeclaration: class(1720) at 5", "Insert MethodDeclaration(1257) into TypeDeclaration: class(1720) at 22", "Insert MethodDeclaration(1285) into TypeDeclaration: class(1720) at 23", "Insert Javadoc(40) into FieldDeclaration(49) at 0", "Insert Modifier: private(41) into FieldDeclaration(49) at 1", "Insert ParameterizedType: List<OpResult>(46) into FieldDeclaration(49) at 2", "Insert VariableDeclarationFragment(48) into FieldDeclaration(49) at 3", "Insert PrimitiveType: void(1241) into MethodDeclaration(1257) at 0", "Insert SimpleName: setMultiResults(1242) into MethodDeclaration(1257) at 1", "Insert SingleVariableDeclaration(1249) into MethodDeclaration(1257) at 2", "Insert Block(1256) into MethodDeclaration(1257) at 3", "Insert Javadoc(1263) into MethodDeclaration(1285) at 0", "Insert Modifier: public(1264) into MethodDeclaration(1285) at 1", "Insert ParameterizedType: List<OpResult>(1269) into MethodDeclaration(1285) at 2", "Insert SimpleName: getResults(1270) into MethodDeclaration(1285) at 3", "Insert Block(1284) into MethodDeclaration(1285) at 4", "Insert TagElement(39) into Javadoc(40) at 0", "Insert SimpleType: List(43) into ParameterizedType: List<OpResult>(46) at 0", "Insert SimpleType: OpResult(45) into ParameterizedType: List<OpResult>(46) at 1", "Insert SimpleName: results(47) into VariableDeclarationFragment(48) at 0", "Insert ParameterizedType: List<OpResult>(1247) into SingleVariableDeclaration(1249) at 0", "Insert SimpleName: results(1248) into SingleVariableDeclaration(1249) at 1", "Insert ExpressionStatement(1255) into Block(1256) at 0", "Insert TagElement(1260) into Javadoc(1263) at 0", "Insert TagElement: @return(1262) into Javadoc(1263) at 1", "Insert SimpleType: List(1266) into ParameterizedType: List<OpResult>(1269) at 0", "Insert SimpleType: OpResult(1268) into ParameterizedType: List<OpResult>(1269) at 1", "Insert ReturnStatement(1283) into Block(1284) at 0", "Insert TextElement: All multi-requests that result in an exception retain the results(35) into TagElement(39) at 0", "Insert TextElement: here so that it is possible to examine the problems in the catch(36) into TagElement(39) at 1", "Insert TextElement: scope.  Non-multi requests will get a null if they try to access(37) into TagElement(39) at 2", "Insert TextElement: these results.(38) into TagElement(39) at 3", "Insert SimpleName: List(42) into SimpleType: List(43) at 0", "Insert SimpleName: OpResult(44) into SimpleType: OpResult(45) at 0", "Insert SimpleType: List(1244) into ParameterizedType: List<OpResult>(1247) at 0", "Insert SimpleType: OpResult(1246) into ParameterizedType: List<OpResult>(1247) at 1", "Insert Assignment: =(1254) into ExpressionStatement(1255) at 0", "Insert TextElement: If this exception was thrown by a multi-request then the (partial) results(1258) into TagElement(1260) at 0", "Insert TextElement: and error codes can be retrieved using this getter.(1259) into TagElement(1260) at 1", "Insert TextElement:  A copy of the list of results from the operations in the multi-request.(1261) into TagElement: @return(1262) at 0", "Insert SimpleName: List(1265) into SimpleType: List(1266) at 0", "Insert SimpleName: OpResult(1267) into SimpleType: OpResult(1268) at 0", "Insert ConditionalExpression(1282) into ReturnStatement(1283) at 0", "Insert SimpleName: List(1243) into SimpleType: List(1244) at 0", "Insert SimpleName: OpResult(1245) into SimpleType: OpResult(1246) at 0", "Insert FieldAccess(1252) into Assignment: =(1254) at 0", "Insert SimpleName: results(1253) into Assignment: =(1254) at 1", "Insert InfixExpression: !=(1273) into ConditionalExpression(1282) at 0", "Insert ClassInstanceCreation(1280) into ConditionalExpression(1282) at 1", "Insert NullLiteral(1281) into ConditionalExpression(1282) at 2", "Insert ThisExpression(1250) into FieldAccess(1252) at 0", "Insert SimpleName: results(1251) into FieldAccess(1252) at 1", "Insert SimpleName: results(1271) into InfixExpression: !=(1273) at 0", "Insert NullLiteral(1272) into InfixExpression: !=(1273) at 1", "Insert ParameterizedType: ArrayList<OpResult>(1278) into ClassInstanceCreation(1280) at 0", "Insert SimpleName: results(1279) into ClassInstanceCreation(1280) at 1", "Insert SimpleType: ArrayList(1275) into ParameterizedType: ArrayList<OpResult>(1278) at 0", "Insert SimpleType: OpResult(1277) into ParameterizedType: ArrayList<OpResult>(1278) at 1", "Insert SimpleName: ArrayList(1274) into SimpleType: ArrayList(1275) at 0", "Insert SimpleName: OpResult(1276) into SimpleType: OpResult(1277) at 0"]}}, {"ZooDefs_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 14", "operations": ["INS NumberLiteral: 13 to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: interface at 14", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: check to VariableDeclarationFragment at 0", "INS PrimitiveType: int to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 15", "operations": ["INS SimpleName: multi to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0", "INS NumberLiteral: 14 to VariableDeclarationFragment at 1", "INS PrimitiveType: int to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: interface at 15", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}]}}, {"ZooDefs_diff": {"operations": ["Insert FieldDeclaration(119) into TypeDeclaration: interface(165) at 14", "Insert FieldDeclaration(126) into TypeDeclaration: interface(165) at 15", "Insert Modifier: public(113) into FieldDeclaration(119) at 0", "Insert Modifier: final(114) into FieldDeclaration(119) at 1", "Insert PrimitiveType: int(115) into FieldDeclaration(119) at 2", "Insert VariableDeclarationFragment(118) into FieldDeclaration(119) at 3", "Insert Modifier: public(120) into FieldDeclaration(126) at 0", "Insert Modifier: final(121) into FieldDeclaration(126) at 1", "Insert PrimitiveType: int(122) into FieldDeclaration(126) at 2", "Insert VariableDeclarationFragment(125) into FieldDeclaration(126) at 3", "Insert SimpleName: check(116) into VariableDeclarationFragment(118) at 0", "Insert NumberLiteral: 13(117) into VariableDeclarationFragment(118) at 1", "Insert SimpleName: multi(123) into VariableDeclarationFragment(125) at 0", "Insert NumberLiteral: 14(124) into VariableDeclarationFragment(125) at 1"]}}, {"ZooKeeper_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 45", "MOV ImportDeclaration to CompilationUnit at 47", "MOV ImportDeclaration to CompilationUnit at 45", "MOV ImportDeclaration to CompilationUnit at 47", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 47"]}, {"root": "UPDATE from org.apache.zookeeper.AsyncCallback.ACLCallback to org.apache.zookeeper.AsyncCallback", "operations": ["UPD QualifiedName: org.apache.zookeeper.AsyncCallback.ACLCallback from org.apache.zookeeper.AsyncCallback.ACLCallback to org.apache.zookeeper.AsyncCallback"]}, {"root": "UPDATE from org.apache.zookeeper.proto.CreateRequest to org.apache.zookeeper.OpResult.ErrorResult", "operations": ["UPD QualifiedName: org.apache.zookeeper.proto.CreateRequest from org.apache.zookeeper.proto.CreateRequest to org.apache.zookeeper.OpResult.ErrorResult"]}, {"root": "UPDATE from org.apache.zookeeper.proto.ReplyHeader to org.apache.zookeeper.proto", "operations": ["UPD QualifiedName: org.apache.zookeeper.proto.ReplyHeader from org.apache.zookeeper.proto.ReplyHeader to org.apache.zookeeper.proto"]}, {"root": "UPDATE from org.apache.zookeeper.proto.RequestHeader to java.util", "operations": ["UPD QualifiedName: org.apache.zookeeper.proto.RequestHeader from org.apache.zookeeper.proto.RequestHeader to java.util"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 31", "operations": ["INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: InterruptedException to TagElement: @throws at 0", "INS TextElement: On failure, only a single exception is returned.  If you want more details, it may be preferable to to TagElement at 1", "INS SimpleName: Op to TagElement: @see at 0", "INS SimpleType: Iterable to ParameterizedType: Iterable<Op> at 0", "INS SimpleType: MultiTransactionRecord to ClassInstanceCreation at 0", "INS TextElement: ops. to TagElement: @throws at 2", "INS TextElement:  If the operation could not be completed due to some error in doing one of the specified to TagElement: @throws at 1", "INS SimpleName: ops to ClassInstanceCreation at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Iterable to SimpleType: Iterable at 0", "INS SimpleName: MultiTransactionRecord to SimpleType: MultiTransactionRecord at 0", "INS TagElement: @see to Javadoc at 2", "INS TagElement to Javadoc at 0", "INS TextElement: will not have partially succeeded if this exception is thrown. to TagElement: @throws at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 31", "INS SimpleType: Op to ParameterizedType: Iterable<Op> at 1", "INS TextElement: factory methods on Op. to TagElement: @param at 2", "INS SimpleName: ops to TagElement: @param at 0", "INS TextElement: The maximum allowable size of all of the data arrays in all of the setData operations in this single to TagElement at 5", "INS TextElement:   If the operation was interrupted.  The operation may or may not have succeeded, but to TagElement: @throws at 1", "INS ReturnStatement to Block at 0", "INS TextElement:   An iterable that contains the operations to be done.  These should be created using the to TagElement: @param at 1", "INS TextElement: request is 1 MB (1,048,576 bytes). to TagElement at 6", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS SimpleName: Op to SimpleType: Op at 0", "INS TagElement: @throws to Javadoc at 4", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS SimpleType: KeeperException to MethodDeclaration at 6", "INS SimpleName: KeeperException to TagElement: @throws at 0", "INS ParameterizedType: List<OpResult> to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS TagElement: @return to Javadoc at 3", "INS TagElement: @throws to Javadoc at 5", "INS TextElement: Requests larger than this will cause a KeeperExecption to be thrown. to TagElement at 7", "INS SimpleType: InterruptedException to MethodDeclaration at 5", "INS SimpleName: multi to MethodDeclaration at 3", "INS TextElement: <p> to TagElement at 4", "INS TextElement: use the alternative form of this method that lets you pass a list into which individual results are to TagElement at 2", "INS SimpleName: ops to SingleVariableDeclaration at 1", "INS TextElement: placed so that you can zero in on exactly which operation failed and why. to TagElement at 3", "INS TextElement: Executes multiple Zookeeper operations or none of them.  On success, a list of results is returned. to TagElement at 0", "INS TagElement: @param to Javadoc at 1", "INS ClassInstanceCreation to MethodInvocation at 1", "INS SimpleName: multiInternal to MethodInvocation at 0", "INS ParameterizedType: Iterable<Op> to SingleVariableDeclaration at 0", "INS TextElement:  A list of results. to TagElement: @return at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS IfStatement to Block at 8", "INS SimpleType: MultiResponse to VariableDeclarationStatement at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: results to MethodInvocation at 2", "INS SimpleType: RequestHeader to ClassInstanceCreation at 0", "INS SimpleName: result to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: getErr to MethodInvocation at 1", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: ErrorResult to SimpleType: ErrorResult at 0", "INS SimpleType: RequestHeader to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ex to ThrowStatement at 0", "INS SimpleType: ErrorResult to InstanceofExpression at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: ex to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setMultiResults to MethodInvocation at 1", "INS SimpleName: r to MethodInvocation at 0", "INS SimpleType: KeeperException to VariableDeclarationStatement at 0", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: r to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ReplyHeader to SimpleType: ReplyHeader at 0", "INS SimpleName: response to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS QualifiedName: KeeperException.Code to MethodInvocation at 0", "INS SimpleType: InterruptedException to MethodDeclaration at 4", "INS SimpleName: multiInternal to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: MultiTransactionRecord to SimpleType: MultiTransactionRecord at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: response to MethodInvocation at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: MultiResponse to SimpleType: MultiResponse at 0", "INS SimpleType: KeeperException to MethodDeclaration at 5", "INS SimpleName: getResultList to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: fatalError to InfixExpression: != at 0", "INS SimpleName: KeeperException to MethodInvocation at 0", "INS SimpleName: h to VariableDeclarationFragment at 0", "INS SimpleName: getErr to MethodInvocation at 1", "INS SimpleName: response to VariableDeclarationFragment at 0", "INS ThrowStatement to Block at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS EnhancedForStatement to Block at 7", "INS SimpleName: ErrorResult to SimpleType: ErrorResult at 0", "INS SimpleType: ErrorResult to CastExpression at 0", "INS VariableDeclarationStatement to Block at 5", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: result to InstanceofExpression at 0", "INS QualifiedName: ZooDefs.OpCode.multi to MethodInvocation at 2", "INS SimpleName: ErrorResult to SimpleType: ErrorResult at 0", "INS SimpleName: request to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: fatalError to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 9", "INS SimpleName: submitRequest to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: MultiResponse to SimpleType: MultiResponse at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: != at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS SimpleName: h to MethodInvocation at 2", "INS SimpleType: ErrorResult to CastExpression at 0", "INS SimpleType: MultiResponse to ClassInstanceCreation at 0", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS ThrowStatement to Block at 2", "INS ParameterizedType: List<OpResult> to MethodDeclaration at 1", "INS QualifiedName: KeeperException.Code.OK to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleType: OpResult to SingleVariableDeclaration at 0", "INS BreakStatement to Block at 1", "INS SimpleName: request to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleType: ReplyHeader to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS IfStatement to Block at 4", "INS SimpleName: RequestHeader to SimpleType: RequestHeader at 0", "INS SimpleName: fatalError to Assignment: = at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ex to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getErr to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ErrorResult to SimpleType: ErrorResult at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleType: OpResult to ParameterizedType: List<OpResult> at 1", "INS SimpleName: result to CastExpression at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 1", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleType: MultiTransactionRecord to SingleVariableDeclaration at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: KeeperException to MethodInvocation at 0", "INS SimpleName: intValue to MethodInvocation at 1", "INS InstanceofExpression to InfixExpression: && at 0", "INS Modifier: protected to MethodDeclaration at 0", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS SimpleName: getErr to MethodInvocation at 1", "INS ParameterizedType: List<OpResult> to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: List to ParameterizedType: List<OpResult> at 0", "INS SimpleName: setType to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: RequestHeader to SimpleType: RequestHeader at 0", "INS IfStatement to Block at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: results to EnhancedForStatement at 1", "INS NullLiteral to MethodInvocation at 5", "INS QualifiedName: KeeperException.Code to MethodInvocation at 0", "INS SimpleName: r to MethodInvocation at 0", "INS SimpleName: fatalError to VariableDeclarationFragment at 0", "INS SimpleName: h to MethodInvocation at 0", "INS SimpleType: ErrorResult to VariableDeclarationStatement at 0", "INS CastExpression to Assignment: = at 1", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: result to CastExpression at 1", "INS SimpleName: cnxn to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Transaction to SimpleType: Transaction at 0", "INS SimpleName: transaction to MethodDeclaration at 2", "INS ThisExpression to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 33", "INS ReturnStatement to Block at 0", "INS SimpleName: Transaction to SimpleType: Transaction at 0", "INS SimpleType: Transaction to MethodDeclaration at 1", "INS SimpleType: Transaction to ClassInstanceCreation at 0"]}, {"root": "UPDATE from Arrays larger than this will cause a KeeperExecption to be thrown. to Arrays larger than this will cause a KeeperException to be thrown.", "operations": ["UPD TextElement: Arrays larger than this will cause a KeeperExecption to be thrown. from Arrays larger than this will cause a KeeperExecption to be thrown. to Arrays larger than this will cause a KeeperException to be thrown."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Deque"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.LinkedList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Set"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.AsyncCallback.Children2Callback", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.AsyncCallback.ChildrenCallback", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.AsyncCallback.DataCallback"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.AsyncCallback.StatCallback"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.AsyncCallback.StringCallback"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.AsyncCallback.VoidCallback"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.CreateResponse"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.DeleteRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.ExistsRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.GetACLRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.GetACLResponse"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetChildren2Request", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetChildren2Response", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetChildrenRequest", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetChildrenResponse", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetDataRequest", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.GetDataResponse", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.SetACLRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.SetACLResponse"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.SetDataRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.SetDataResponse", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.proto.SyncRequest", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.proto.SyncResponse"]}]}}, {"ZooKeeper_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(5618) at 47", "Move ImportDeclaration(20) into CompilationUnit(5618) at 47", "Move ImportDeclaration(38) into CompilationUnit(5618) at 45", "Move ImportDeclaration(40) into CompilationUnit(5618) at 45", "Move ImportDeclaration(68) into CompilationUnit(5618) at 10", "Move ImportDeclaration(94) into CompilationUnit(5618) at 47", "Update QualifiedName: org.apache.zookeeper.AsyncCallback.ACLCallback(41) to org.apache.zookeeper.AsyncCallback", "Update QualifiedName: org.apache.zookeeper.proto.CreateRequest(67) to org.apache.zookeeper.OpResult.ErrorResult", "Update QualifiedName: org.apache.zookeeper.proto.ReplyHeader(91) to org.apache.zookeeper.proto", "Update QualifiedName: org.apache.zookeeper.proto.RequestHeader(93) to java.util", "Insert MethodDeclaration(2239) into TypeDeclaration: class(5617) at 31", "Insert MethodDeclaration(2384) into TypeDeclaration: class(5617) at 32", "Insert MethodDeclaration(2395) into TypeDeclaration: class(5617) at 33", "Insert Javadoc(2212) into MethodDeclaration(2239) at 0", "Insert Modifier: public(2213) into MethodDeclaration(2239) at 1", "Insert ParameterizedType: List<OpResult>(2218) into MethodDeclaration(2239) at 2", "Insert SimpleName: multi(2219) into MethodDeclaration(2239) at 3", "Insert SingleVariableDeclaration(2226) into MethodDeclaration(2239) at 4", "Insert SimpleType: InterruptedException(2228) into MethodDeclaration(2239) at 5", "Insert SimpleType: KeeperException(2230) into MethodDeclaration(2239) at 6", "Insert Block(2238) into MethodDeclaration(2239) at 7", "Insert Modifier: protected(2240) into MethodDeclaration(2384) at 0", "Insert ParameterizedType: List<OpResult>(2245) into MethodDeclaration(2384) at 1", "Insert SimpleName: multiInternal(2246) into MethodDeclaration(2384) at 2", "Insert SingleVariableDeclaration(2250) into MethodDeclaration(2384) at 3", "Insert SimpleType: InterruptedException(2252) into MethodDeclaration(2384) at 4", "Insert SimpleType: KeeperException(2254) into MethodDeclaration(2384) at 5", "Insert Block(2383) into MethodDeclaration(2384) at 6", "Insert Modifier: public(2385) into MethodDeclaration(2395) at 0", "Insert SimpleType: Transaction(2387) into MethodDeclaration(2395) at 1", "Insert SimpleName: transaction(2388) into MethodDeclaration(2395) at 2", "Insert Block(2394) into MethodDeclaration(2395) at 3", "Insert TagElement(2195) into Javadoc(2212) at 0", "Insert TagElement: @param(2199) into Javadoc(2212) at 1", "Insert TagElement: @see(2201) into Javadoc(2212) at 2", "Insert TagElement: @return(2203) into Javadoc(2212) at 3", "Insert TagElement: @throws(2207) into Javadoc(2212) at 4", "Insert TagElement: @throws(2211) into Javadoc(2212) at 5", "Insert SimpleType: List(2215) into ParameterizedType: List<OpResult>(2218) at 0", "Insert SimpleType: OpResult(2217) into ParameterizedType: List<OpResult>(2218) at 1", "Insert ParameterizedType: Iterable<Op>(2224) into SingleVariableDeclaration(2226) at 0", "Insert SimpleName: ops(2225) into SingleVariableDeclaration(2226) at 1", "Insert SimpleName: InterruptedException(2227) into SimpleType: InterruptedException(2228) at 0", "Insert SimpleName: KeeperException(2229) into SimpleType: KeeperException(2230) at 0", "Insert ReturnStatement(2237) into Block(2238) at 0", "Insert SimpleType: List(2242) into ParameterizedType: List<OpResult>(2245) at 0", "Insert SimpleType: OpResult(2244) into ParameterizedType: List<OpResult>(2245) at 1", "Insert SimpleType: MultiTransactionRecord(2248) into SingleVariableDeclaration(2250) at 0", "Insert SimpleName: request(2249) into SingleVariableDeclaration(2250) at 1", "Insert SimpleName: InterruptedException(2251) into SimpleType: InterruptedException(2252) at 0", "Insert SimpleName: KeeperException(2253) into SimpleType: KeeperException(2254) at 0", "Insert VariableDeclarationStatement(2262) into Block(2383) at 0", "Insert ExpressionStatement(2267) into Block(2383) at 1", "Insert VariableDeclarationStatement(2275) into Block(2383) at 2", "Insert VariableDeclarationStatement(2287) into Block(2383) at 3", "Insert IfStatement(2304) into Block(2383) at 4", "Insert VariableDeclarationStatement(2315) into Block(2383) at 5", "Insert VariableDeclarationStatement(2321) into Block(2383) at 6", "Insert EnhancedForStatement(2354) into Block(2383) at 7", "Insert IfStatement(2380) into Block(2383) at 8", "Insert ReturnStatement(2382) into Block(2383) at 9", "Insert SimpleName: Transaction(2386) into SimpleType: Transaction(2387) at 0", "Insert ReturnStatement(2393) into Block(2394) at 0", "Insert TextElement: Executes multiple Zookeeper operations or none of them.  On success, a list of results is returned.(2187) into TagElement(2195) at 0", "Insert TextElement: On failure, only a single exception is returned.  If you want more details, it may be preferable to(2188) into TagElement(2195) at 1", "Insert TextElement: use the alternative form of this method that lets you pass a list into which individual results are(2189) into TagElement(2195) at 2", "Insert TextElement: placed so that you can zero in on exactly which operation failed and why.(2190) into TagElement(2195) at 3", "Insert TextElement: <p>(2191) into TagElement(2195) at 4", "Insert TextElement: The maximum allowable size of all of the data arrays in all of the setData operations in this single(2192) into TagElement(2195) at 5", "Insert TextElement: request is 1 MB (1,048,576 bytes).(2193) into TagElement(2195) at 6", "Insert TextElement: Requests larger than this will cause a KeeperExecption to be thrown.(2194) into TagElement(2195) at 7", "Insert SimpleName: ops(2196) into TagElement: @param(2199) at 0", "Insert TextElement:   An iterable that contains the operations to be done.  These should be created using the(2197) into TagElement: @param(2199) at 1", "Insert TextElement: factory methods on Op.(2198) into TagElement: @param(2199) at 2", "Insert SimpleName: Op(2200) into TagElement: @see(2201) at 0", "Insert TextElement:  A list of results.(2202) into TagElement: @return(2203) at 0", "Insert SimpleName: InterruptedException(2204) into TagElement: @throws(2207) at 0", "Insert TextElement:   If the operation was interrupted.  The operation may or may not have succeeded, but(2205) into TagElement: @throws(2207) at 1", "Insert TextElement: will not have partially succeeded if this exception is thrown.(2206) into TagElement: @throws(2207) at 2", "Insert SimpleName: KeeperException(2208) into TagElement: @throws(2211) at 0", "Insert TextElement:  If the operation could not be completed due to some error in doing one of the specified(2209) into TagElement: @throws(2211) at 1", "Insert TextElement: ops.(2210) into TagElement: @throws(2211) at 2", "Insert SimpleName: List(2214) into SimpleType: List(2215) at 0", "Insert SimpleName: OpResult(2216) into SimpleType: OpResult(2217) at 0", "Insert SimpleType: Iterable(2221) into ParameterizedType: Iterable<Op>(2224) at 0", "Insert SimpleType: Op(2223) into ParameterizedType: Iterable<Op>(2224) at 1", "Insert MethodInvocation(2236) into ReturnStatement(2237) at 0", "Insert SimpleName: List(2241) into SimpleType: List(2242) at 0", "Insert SimpleName: OpResult(2243) into SimpleType: OpResult(2244) at 0", "Insert SimpleName: MultiTransactionRecord(2247) into SimpleType: MultiTransactionRecord(2248) at 0", "Insert SimpleType: RequestHeader(2256) into VariableDeclarationStatement(2262) at 0", "Insert VariableDeclarationFragment(2261) into VariableDeclarationStatement(2262) at 1", "Insert MethodInvocation(2266) into ExpressionStatement(2267) at 0", "Insert SimpleType: MultiResponse(2269) into VariableDeclarationStatement(2275) at 0", "Insert VariableDeclarationFragment(2274) into VariableDeclarationStatement(2275) at 1", "Insert SimpleType: ReplyHeader(2277) into VariableDeclarationStatement(2287) at 0", "Insert VariableDeclarationFragment(2286) into VariableDeclarationStatement(2287) at 1", "Insert InfixExpression: !=(2292) into IfStatement(2304) at 0", "Insert Block(2303) into IfStatement(2304) at 1", "Insert ParameterizedType: List<OpResult>(2309) into VariableDeclarationStatement(2315) at 0", "Insert VariableDeclarationFragment(2314) into VariableDeclarationStatement(2315) at 1", "Insert SimpleType: ErrorResult(2317) into VariableDeclarationStatement(2321) at 0", "Insert VariableDeclarationFragment(2320) into VariableDeclarationStatement(2321) at 1", "Insert SingleVariableDeclaration(2325) into EnhancedForStatement(2354) at 0", "Insert SimpleName: results(2326) into EnhancedForStatement(2354) at 1", "Insert Block(2353) into EnhancedForStatement(2354) at 2", "Insert InfixExpression: !=(2357) into IfStatement(2380) at 0", "Insert Block(2379) into IfStatement(2380) at 1", "Insert SimpleName: results(2381) into ReturnStatement(2382) at 0", "Insert ClassInstanceCreation(2392) into ReturnStatement(2393) at 0", "Update TextElement: Arrays larger than this will cause a KeeperExecption to be thrown.(3523) to Arrays larger than this will cause a KeeperException to be thrown.", "Insert SimpleName: Iterable(2220) into SimpleType: Iterable(2221) at 0", "Insert SimpleName: Op(2222) into SimpleType: Op(2223) at 0", "Insert SimpleName: multiInternal(2231) into MethodInvocation(2236) at 0", "Insert ClassInstanceCreation(2235) into MethodInvocation(2236) at 1", "Insert SimpleName: RequestHeader(2255) into SimpleType: RequestHeader(2256) at 0", "Insert SimpleName: h(2257) into VariableDeclarationFragment(2261) at 0", "Insert ClassInstanceCreation(2260) into VariableDeclarationFragment(2261) at 1", "Insert SimpleName: h(2263) into MethodInvocation(2266) at 0", "Insert SimpleName: setType(2264) into MethodInvocation(2266) at 1", "Insert QualifiedName: ZooDefs.OpCode.multi(2265) into MethodInvocation(2266) at 2", "Insert SimpleName: MultiResponse(2268) into SimpleType: MultiResponse(2269) at 0", "Insert SimpleName: response(2270) into VariableDeclarationFragment(2274) at 0", "Insert ClassInstanceCreation(2273) into VariableDeclarationFragment(2274) at 1", "Insert SimpleName: ReplyHeader(2276) into SimpleType: ReplyHeader(2277) at 0", "Insert SimpleName: r(2278) into VariableDeclarationFragment(2286) at 0", "Insert MethodInvocation(2285) into VariableDeclarationFragment(2286) at 1", "Insert MethodInvocation(2290) into InfixExpression: !=(2292) at 0", "Insert NumberLiteral: 0(2291) into InfixExpression: !=(2292) at 1", "Insert ThrowStatement(2302) into Block(2303) at 0", "Insert SimpleType: List(2306) into ParameterizedType: List<OpResult>(2309) at 0", "Insert SimpleType: OpResult(2308) into ParameterizedType: List<OpResult>(2309) at 1", "Insert SimpleName: results(2310) into VariableDeclarationFragment(2314) at 0", "Insert MethodInvocation(2313) into VariableDeclarationFragment(2314) at 1", "Insert SimpleName: ErrorResult(2316) into SimpleType: ErrorResult(2317) at 0", "Insert SimpleName: fatalError(2318) into VariableDeclarationFragment(2320) at 0", "Insert NullLiteral(2319) into VariableDeclarationFragment(2320) at 1", "Insert SimpleType: OpResult(2323) into SingleVariableDeclaration(2325) at 0", "Insert SimpleName: result(2324) into SingleVariableDeclaration(2325) at 1", "Insert IfStatement(2352) into Block(2353) at 0", "Insert SimpleName: fatalError(2355) into InfixExpression: !=(2357) at 0", "Insert NullLiteral(2356) into InfixExpression: !=(2357) at 1", "Insert VariableDeclarationStatement(2371) into Block(2379) at 0", "Insert ExpressionStatement(2376) into Block(2379) at 1", "Insert ThrowStatement(2378) into Block(2379) at 2", "Insert SimpleType: Transaction(2390) into ClassInstanceCreation(2392) at 0", "Insert ThisExpression(2391) into ClassInstanceCreation(2392) at 1", "Insert SimpleType: MultiTransactionRecord(2233) into ClassInstanceCreation(2235) at 0", "Insert SimpleName: ops(2234) into ClassInstanceCreation(2235) at 1", "Insert SimpleType: RequestHeader(2259) into ClassInstanceCreation(2260) at 0", "Insert SimpleType: MultiResponse(2272) into ClassInstanceCreation(2273) at 0", "Insert SimpleName: cnxn(2279) into MethodInvocation(2285) at 0", "Insert SimpleName: submitRequest(2280) into MethodInvocation(2285) at 1", "Insert SimpleName: h(2281) into MethodInvocation(2285) at 2", "Insert SimpleName: request(2282) into MethodInvocation(2285) at 3", "Insert SimpleName: response(2283) into MethodInvocation(2285) at 4", "Insert NullLiteral(2284) into MethodInvocation(2285) at 5", "Insert SimpleName: r(2288) into MethodInvocation(2290) at 0", "Insert SimpleName: getErr(2289) into MethodInvocation(2290) at 1", "Insert MethodInvocation(2301) into ThrowStatement(2302) at 0", "Insert SimpleName: List(2305) into SimpleType: List(2306) at 0", "Insert SimpleName: OpResult(2307) into SimpleType: OpResult(2308) at 0", "Insert SimpleName: response(2311) into MethodInvocation(2313) at 0", "Insert SimpleName: getResultList(2312) into MethodInvocation(2313) at 1", "Insert SimpleName: OpResult(2322) into SimpleType: OpResult(2323) at 0", "Insert InfixExpression: &&(2342) into IfStatement(2352) at 0", "Insert Block(2351) into IfStatement(2352) at 1", "Insert SimpleType: KeeperException(2359) into VariableDeclarationStatement(2371) at 0", "Insert VariableDeclarationFragment(2370) into VariableDeclarationStatement(2371) at 1", "Insert MethodInvocation(2375) into ExpressionStatement(2376) at 0", "Insert SimpleName: ex(2377) into ThrowStatement(2378) at 0", "Insert SimpleName: Transaction(2389) into SimpleType: Transaction(2390) at 0", "Insert SimpleName: MultiTransactionRecord(2232) into SimpleType: MultiTransactionRecord(2233) at 0", "Insert SimpleName: RequestHeader(2258) into SimpleType: RequestHeader(2259) at 0", "Insert SimpleName: MultiResponse(2271) into SimpleType: MultiResponse(2272) at 0", "Insert SimpleName: KeeperException(2293) into MethodInvocation(2301) at 0", "Insert SimpleName: create(2294) into MethodInvocation(2301) at 1", "Insert MethodInvocation(2300) into MethodInvocation(2301) at 2", "Insert InstanceofExpression(2330) into InfixExpression: &&(2342) at 0", "Insert InfixExpression: !=(2341) into InfixExpression: &&(2342) at 1", "Insert ExpressionStatement(2349) into Block(2351) at 0", "Insert BreakStatement(2350) into Block(2351) at 1", "Insert SimpleName: KeeperException(2358) into SimpleType: KeeperException(2359) at 0", "Insert SimpleName: ex(2360) into VariableDeclarationFragment(2370) at 0", "Insert MethodInvocation(2369) into VariableDeclarationFragment(2370) at 1", "Insert SimpleName: ex(2372) into MethodInvocation(2375) at 0", "Insert SimpleName: setMultiResults(2373) into MethodInvocation(2375) at 1", "Insert SimpleName: results(2374) into MethodInvocation(2375) at 2", "Insert QualifiedName: KeeperException.Code(2295) into MethodInvocation(2300) at 0", "Insert SimpleName: get(2296) into MethodInvocation(2300) at 1", "Insert MethodInvocation(2299) into MethodInvocation(2300) at 2", "Insert SimpleName: result(2327) into InstanceofExpression(2330) at 0", "Insert SimpleType: ErrorResult(2329) into InstanceofExpression(2330) at 1", "Insert MethodInvocation(2337) into InfixExpression: !=(2341) at 0", "Insert MethodInvocation(2340) into InfixExpression: !=(2341) at 1", "Insert Assignment: =(2348) into ExpressionStatement(2349) at 0", "Insert SimpleName: KeeperException(2361) into MethodInvocation(2369) at 0", "Insert SimpleName: create(2362) into MethodInvocation(2369) at 1", "Insert MethodInvocation(2368) into MethodInvocation(2369) at 2", "Insert SimpleName: r(2297) into MethodInvocation(2299) at 0", "Insert SimpleName: getErr(2298) into MethodInvocation(2299) at 1", "Insert SimpleName: ErrorResult(2328) into SimpleType: ErrorResult(2329) at 0", "Insert ParenthesizedExpression(2335) into MethodInvocation(2337) at 0", "Insert SimpleName: getErr(2336) into MethodInvocation(2337) at 1", "Insert QualifiedName: KeeperException.Code.OK(2338) into MethodInvocation(2340) at 0", "Insert SimpleName: intValue(2339) into MethodInvocation(2340) at 1", "Insert SimpleName: fatalError(2343) into Assignment: =(2348) at 0", "Insert CastExpression(2347) into Assignment: =(2348) at 1", "Insert QualifiedName: KeeperException.Code(2363) into MethodInvocation(2368) at 0", "Insert SimpleName: get(2364) into MethodInvocation(2368) at 1", "Insert MethodInvocation(2367) into MethodInvocation(2368) at 2", "Insert CastExpression(2334) into ParenthesizedExpression(2335) at 0", "Insert SimpleType: ErrorResult(2345) into CastExpression(2347) at 0", "Insert SimpleName: result(2346) into CastExpression(2347) at 1", "Insert SimpleName: fatalError(2365) into MethodInvocation(2367) at 0", "Insert SimpleName: getErr(2366) into MethodInvocation(2367) at 1", "Insert SimpleType: ErrorResult(2332) into CastExpression(2334) at 0", "Insert SimpleName: result(2333) into CastExpression(2334) at 1", "Insert SimpleName: ErrorResult(2344) into SimpleType: ErrorResult(2345) at 0", "Insert SimpleName: ErrorResult(2331) into SimpleType: ErrorResult(2332) at 0", "Delete QualifiedName: java.util.ArrayList(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: java.util.Deque(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: java.util.HashMap(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: java.util.HashSet(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: java.util.LinkedList(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: java.util.List(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: java.util.Map(33)", "Delete ImportDeclaration(34)", "Delete QualifiedName: java.util.Set(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.Children2Callback(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.ChildrenCallback(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.DataCallback(47)", "Delete ImportDeclaration(48)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.StatCallback(49)", "Delete ImportDeclaration(50)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.StringCallback(51)", "Delete ImportDeclaration(52)", "Delete QualifiedName: org.apache.zookeeper.AsyncCallback.VoidCallback(53)", "Delete ImportDeclaration(54)", "Delete QualifiedName: org.apache.zookeeper.proto.CreateResponse(69)", "Delete ImportDeclaration(70)", "Delete QualifiedName: org.apache.zookeeper.proto.DeleteRequest(71)", "Delete ImportDeclaration(72)", "Delete QualifiedName: org.apache.zookeeper.proto.ExistsRequest(73)", "Delete ImportDeclaration(74)", "Delete QualifiedName: org.apache.zookeeper.proto.GetACLRequest(75)", "Delete ImportDeclaration(76)", "Delete QualifiedName: org.apache.zookeeper.proto.GetACLResponse(77)", "Delete ImportDeclaration(78)", "Delete QualifiedName: org.apache.zookeeper.proto.GetChildren2Request(79)", "Delete ImportDeclaration(80)", "Delete QualifiedName: org.apache.zookeeper.proto.GetChildren2Response(81)", "Delete ImportDeclaration(82)", "Delete QualifiedName: org.apache.zookeeper.proto.GetChildrenRequest(83)", "Delete ImportDeclaration(84)", "Delete QualifiedName: org.apache.zookeeper.proto.GetChildrenResponse(85)", "Delete ImportDeclaration(86)", "Delete QualifiedName: org.apache.zookeeper.proto.GetDataRequest(87)", "Delete ImportDeclaration(88)", "Delete QualifiedName: org.apache.zookeeper.proto.GetDataResponse(89)", "Delete ImportDeclaration(90)", "Delete QualifiedName: org.apache.zookeeper.proto.SetACLRequest(95)", "Delete ImportDeclaration(96)", "Delete QualifiedName: org.apache.zookeeper.proto.SetACLResponse(97)", "Delete ImportDeclaration(98)", "Delete QualifiedName: org.apache.zookeeper.proto.SetDataRequest(99)", "Delete ImportDeclaration(100)", "Delete QualifiedName: org.apache.zookeeper.proto.SetDataResponse(101)", "Delete ImportDeclaration(102)", "Delete QualifiedName: org.apache.zookeeper.proto.SyncRequest(103)", "Delete ImportDeclaration(104)", "Delete QualifiedName: org.apache.zookeeper.proto.SyncResponse(105)", "Delete ImportDeclaration(106)"]}}, {"DataTree_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.util.Arrays to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: java.nio.ByteBuffer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS ImportDeclaration to CompilationUnit at 40", "INS QualifiedName: org.apache.zookeeper.txn.CheckVersionTxn to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 41", "operations": ["INS QualifiedName: org.apache.zookeeper.txn.Txn to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 41"]}, {"root": "INS ImportDeclaration to CompilationUnit at 42", "operations": ["INS ImportDeclaration to CompilationUnit at 42", "INS QualifiedName: org.apache.zookeeper.txn.MultiTxn to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 44", "operations": ["INS QualifiedName: org.apache.zookeeper.proto.CreateRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 44"]}, {"root": "INS ImportDeclaration to CompilationUnit at 45", "operations": ["INS ImportDeclaration to CompilationUnit at 45", "INS QualifiedName: org.apache.zookeeper.proto.DeleteRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 46", "operations": ["INS QualifiedName: org.apache.zookeeper.proto.SetACLRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 46"]}, {"root": "INS ImportDeclaration to CompilationUnit at 47", "operations": ["INS QualifiedName: org.apache.zookeeper.proto.SetDataRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 47"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleType: ProcessTxnResult to ParameterizedType: List<ProcessTxnResult> at 1", "INS SimpleType: List to ParameterizedType: List<ProcessTxnResult> at 0", "INS SimpleName: ProcessTxnResult to SimpleType: ProcessTxnResult at 0", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: multiResult to VariableDeclarationFragment at 0", "INS Modifier: public to FieldDeclaration at 0", "INS ParameterizedType: List<ProcessTxnResult> to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 10"]}, {"root": "INS CatchClause to TryStatement at 2", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS StringLiteral: \"Failed:\" to InfixExpression: + at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: debug to InfixExpression: + at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS CatchClause to TryStatement at 2"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: rc.multiResult to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1", "INS ExpressionStatement to Block at 5"]}, {"root": "INS SwitchCase to SwitchStatement at 30", "operations": ["INS SwitchCase to SwitchStatement at 30", "INS QualifiedName: OpCode.check to SwitchCase at 0"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 31", "operations": ["INS SimpleType: CheckVersionTxn to CastExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to SwitchStatement at 31", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CheckVersionTxn to SimpleType: CheckVersionTxn at 0", "INS SimpleName: CheckVersionTxn to SimpleType: CheckVersionTxn at 0", "INS SimpleType: CheckVersionTxn to VariableDeclarationStatement at 0", "INS SimpleName: txn to CastExpression at 1", "INS SimpleName: checkTxn to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 32", "operations": ["INS SimpleName: getVersion to MethodInvocation at 1", "INS StringLiteral: \"Check Version transaction for \" to InfixExpression: + at 0", "INS StringLiteral: \" and version=\" to InfixExpression: + at 2", "INS MethodInvocation to InfixExpression: + at 3", "INS ExpressionStatement to SwitchStatement at 32", "INS MethodInvocation to InfixExpression: + at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: debug to Assignment: = at 0", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: checkTxn to MethodInvocation at 0", "INS SimpleName: getPath to MethodInvocation at 1", "INS SimpleName: checkTxn to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 33", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: rc.path to Assignment: = at 0", "INS ExpressionStatement to SwitchStatement at 33", "INS SimpleName: getPath to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: checkTxn to MethodInvocation at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 34", "operations": ["INS BreakStatement to SwitchStatement at 34"]}, {"root": "INS SwitchCase to SwitchStatement at 35", "operations": ["INS SwitchCase to SwitchStatement at 35", "INS QualifiedName: OpCode.multi to SwitchCase at 0"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 36", "operations": ["INS SimpleName: multiTxn to VariableDeclarationFragment at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: MultiTxn to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: MultiTxn to CastExpression at 0", "INS SimpleName: MultiTxn to SimpleType: MultiTxn at 0", "INS SimpleName: MultiTxn to SimpleType: MultiTxn at 0", "INS VariableDeclarationStatement to SwitchStatement at 36", "INS SimpleName: txn to CastExpression at 1"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 37", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: txns to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<Txn> at 0", "INS ParameterizedType: List<Txn> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS SimpleName: getTxns to MethodInvocation at 1", "INS SimpleType: Txn to ParameterizedType: List<Txn> at 1", "INS VariableDeclarationStatement to SwitchStatement at 37", "INS SimpleName: multiTxn to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 38", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: txns to MethodInvocation at 0", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: size to MethodInvocation at 1", "INS ExpressionStatement to SwitchStatement at 38", "INS SimpleName: debug to Assignment: = at 0", "INS StringLiteral: \"Multi transaction with \" to InfixExpression: + at 0", "INS StringLiteral: \" operations\" to InfixExpression: + at 2"]}, {"root": "INS ExpressionStatement to SwitchStatement at 39", "operations": ["INS SimpleName: ProcessTxnResult to SimpleType: ProcessTxnResult at 0", "INS SimpleType: ProcessTxnResult to ParameterizedType: ArrayList<ProcessTxnResult> at 1", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<ProcessTxnResult> at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ParameterizedType: ArrayList<ProcessTxnResult> to ClassInstanceCreation at 0", "INS QualifiedName: rc.multiResult to Assignment: = at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ExpressionStatement to SwitchStatement at 39", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 40", "operations": ["INS VariableDeclarationStatement to SwitchStatement at 40", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: failed to VariableDeclarationFragment at 0"]}, {"root": "INS EnhancedForStatement to SwitchStatement at 41", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: subtxn to MethodInvocation at 0", "INS SimpleName: txns to EnhancedForStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: subtxn to SingleVariableDeclaration at 1", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS EnhancedForStatement to SwitchStatement at 41", "INS SimpleType: Txn to SingleVariableDeclaration at 0", "INS SimpleName: failed to Assignment: = at 0", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS BreakStatement to Block at 1", "INS QualifiedName: OpCode.error to InfixExpression: == at 1", "INS SimpleName: getType to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 42", "operations": ["INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to SwitchStatement at 42", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: post_failed to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS EnhancedForStatement to SwitchStatement at 43", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: header to MethodInvocation at 0", "INS SimpleName: header to MethodInvocation at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS QualifiedName: subRc.err to Assignment: = at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getZxid to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 4", "INS SimpleName: subtxn to MethodInvocation at 0", "INS SimpleType: Record to VariableDeclarationStatement at 0", "INS SimpleName: record to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: record to Assignment: = at 0", "INS MethodInvocation to ClassInstanceCreation at 4", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: txns to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: record to MethodInvocation at 2", "INS SimpleType: TxnHeader to ClassInstanceCreation at 0", "INS SimpleName: header to MethodInvocation at 0", "INS SimpleType: ErrorTxn to ClassInstanceCreation at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS IfStatement to Block at 6", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: record to Assignment: = at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: record to InfixExpression: != at 0", "INS SimpleName: setType to MethodInvocation at 1", "INS SimpleName: SetDataTxn to SimpleType: SetDataTxn at 0", "INS BreakStatement to SwitchStatement at 13", "INS InfixExpression: && to IfStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS QualifiedName: subRc.err to InfixExpression: != at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: subtxn to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: subtxn to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: CreateTxn to ClassInstanceCreation at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SimpleName: byteBuffer2Record to MethodInvocation at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS QualifiedName: OpCode.error to SwitchCase at 0", "INS QualifiedName: OpCode.error to MethodInvocation at 2", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS SimpleName: DeleteTxn to SimpleType: DeleteTxn at 0", "INS SimpleType: ProcessTxnResult to VariableDeclarationStatement at 0", "INS SimpleName: subtxn to MethodInvocation at 0", "INS SimpleName: ErrorTxn to SimpleType: ErrorTxn at 0", "INS SwitchCase to SwitchStatement at 10", "INS AssertStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: rc.err to InfixExpression: == at 0", "INS SimpleName: header to MethodInvocation at 0", "INS ParenthesizedExpression to AssertStatement at 0", "INS SimpleName: subtxn to SingleVariableDeclaration at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS QualifiedName: OpCode.setData to SwitchCase at 0", "INS ExpressionStatement to SwitchStatement at 12", "INS IfStatement to Block at 5", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS QualifiedName: Code.OK to MethodInvocation at 0", "INS QualifiedName: OpCode.delete to SwitchCase at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS EnhancedForStatement to SwitchStatement at 43", "INS SimpleName: ErrorTxn to SimpleType: ErrorTxn at 0", "INS SimpleType: SetDataTxn to ClassInstanceCreation at 0", "INS SimpleName: record to Assignment: = at 0", "INS SwitchStatement to Block at 2", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS ExpressionStatement to SwitchStatement at 8", "INS SimpleName: subtxn to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: failed to IfStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: intValue to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: getData to MethodInvocation at 1", "INS SimpleType: ByteBuffer to VariableDeclarationStatement at 0", "INS SwitchCase to SwitchStatement at 14", "INS SimpleName: Record to SimpleType: Record at 0", "INS BreakStatement to SwitchStatement at 9", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: intValue to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: bb to MethodInvocation at 2", "INS SimpleName: subRc to MethodInvocation at 2", "INS SimpleName: CreateTxn to SimpleType: CreateTxn at 0", "INS QualifiedName: OpCode.error to InfixExpression: == at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: record to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 2", "INS SimpleName: record to Assignment: = at 0", "INS SimpleName: subtxn to MethodInvocation at 0", "INS SimpleName: CheckVersionTxn to SimpleType: CheckVersionTxn at 0", "INS SimpleName: ec to ClassInstanceCreation at 1", "INS BreakStatement to SwitchStatement at 6", "INS SimpleName: getClientId to MethodInvocation at 1", "INS ExpressionStatement to Block at 9", "INS ClassInstanceCreation to Assignment: = at 1", "INS QualifiedName: Code.RUNTIMEINCONSISTENCY to MethodInvocation at 0", "INS QualifiedName: OpCode.check to SwitchCase at 0", "INS ExpressionStatement to SwitchStatement at 5", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: ec to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: bb to VariableDeclarationFragment at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleType: ErrorTxn to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: TxnHeader to VariableDeclarationStatement at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: subtxn to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: subHdr to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS QualifiedName: rc.err to Assignment: = at 0", "INS SimpleName: ZooKeeperServer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 15", "INS ExpressionStatement to SwitchStatement at 11", "INS SimpleType: DeleteTxn to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 3", "INS ExpressionStatement to Block at 1", "INS SimpleName: subRc to VariableDeclarationFragment at 0", "INS InfixExpression: != to ParenthesizedExpression at 0", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ThrowStatement to SwitchStatement at 18", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: post_failed to Assignment: = at 0", "INS QualifiedName: OpCode.error to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Invalid type of op: \" to InfixExpression: + at 0", "INS SimpleName: record to MethodInvocation at 3", "INS SimpleName: processTxn to MethodInvocation at 0", "INS SimpleName: TxnHeader to SimpleType: TxnHeader at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to AssertStatement at 0", "INS SimpleType: Txn to SingleVariableDeclaration at 0", "INS SimpleName: ProcessTxnResult to SimpleType: ProcessTxnResult at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: TxnHeader to SimpleType: TxnHeader at 0", "INS SwitchCase to SwitchStatement at 7", "INS SimpleName: subHdr to MethodInvocation at 1", "INS SimpleName: failed to InfixExpression: && at 0", "INS MethodInvocation to SwitchStatement at 0", "INS SwitchCase to SwitchStatement at 17", "INS BreakStatement to SwitchStatement at 3", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ClassInstanceCreation at 5", "INS ExpressionStatement to Block at 0", "INS SimpleType: CheckVersionTxn to ClassInstanceCreation at 0", "INS AssertStatement to Block at 0", "INS SimpleName: record to Assignment: = at 0", "INS SimpleName: add to MethodInvocation at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 10", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: getCxid to MethodInvocation at 1", "INS QualifiedName: OpCode.create to SwitchCase at 0", "INS SimpleName: post_failed to ConditionalExpression at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS BreakStatement to SwitchStatement at 16", "INS QualifiedName: rc.multiResult to MethodInvocation at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 44", "operations": ["INS BreakStatement to SwitchStatement at 44"]}, {"root": "UPDATE from debug to warn", "operations": ["UPD SimpleName: debug from debug to warn"]}, {"root": "UPDATE from \"Set data for  transaction for \" to \"Set data transaction for \"", "operations": ["UPD StringLiteral: \"Set data for  transaction for \" from \"Set data for  transaction for \" to \"Set data transaction for \""]}, {"root": "INS StringLiteral: \" to new value=\" to InfixExpression: + at 2", "operations": ["INS StringLiteral: \" to new value=\" to InfixExpression: + at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 3", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setDataTxn to MethodInvocation at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: getData to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1"]}, {"root": "UPDATE from \"Set ACL for  transaction for \" to \"Set ACL transaction for \"", "operations": ["UPD StringLiteral: \"Set ACL for  transaction for \" from \"Set ACL for  transaction for \" to \"Set ACL transaction for \""]}]}}, {"DataTree_diff": {"operations": ["Insert ImportDeclaration(24) into CompilationUnit(5027) at 4", "Insert ImportDeclaration(40) into CompilationUnit(5027) at 12", "Insert ImportDeclaration(96) into CompilationUnit(5027) at 40", "Insert ImportDeclaration(98) into CompilationUnit(5027) at 41", "Insert ImportDeclaration(100) into CompilationUnit(5027) at 42", "Insert ImportDeclaration(104) into CompilationUnit(5027) at 44", "Insert ImportDeclaration(106) into CompilationUnit(5027) at 45", "Insert ImportDeclaration(108) into CompilationUnit(5027) at 46", "Insert ImportDeclaration(110) into CompilationUnit(5027) at 47", "Insert QualifiedName: java.util.Arrays(23) into ImportDeclaration(24) at 0", "Insert QualifiedName: java.nio.ByteBuffer(39) into ImportDeclaration(40) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.CheckVersionTxn(95) into ImportDeclaration(96) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.Txn(97) into ImportDeclaration(98) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.MultiTxn(99) into ImportDeclaration(100) at 0", "Insert QualifiedName: org.apache.zookeeper.proto.CreateRequest(103) into ImportDeclaration(104) at 0", "Insert QualifiedName: org.apache.zookeeper.proto.DeleteRequest(105) into ImportDeclaration(106) at 0", "Insert QualifiedName: org.apache.zookeeper.proto.SetACLRequest(107) into ImportDeclaration(108) at 0", "Insert QualifiedName: org.apache.zookeeper.proto.SetDataRequest(109) into ImportDeclaration(110) at 0", "Insert FieldDeclaration(2738) into TypeDeclaration: class(2817) at 10", "Insert Modifier: public(2730) into FieldDeclaration(2738) at 0", "Insert ParameterizedType: List<ProcessTxnResult>(2735) into FieldDeclaration(2738) at 1", "Insert VariableDeclarationFragment(2737) into FieldDeclaration(2738) at 2", "Insert SimpleType: List(2732) into ParameterizedType: List<ProcessTxnResult>(2735) at 0", "Insert SimpleType: ProcessTxnResult(2734) into ParameterizedType: List<ProcessTxnResult>(2735) at 1", "Insert SimpleName: multiResult(2736) into VariableDeclarationFragment(2737) at 0", "Insert CatchClause(3424) into TryStatement(3425) at 2", "Insert SimpleName: List(2731) into SimpleType: List(2732) at 0", "Insert SimpleName: ProcessTxnResult(2733) into SimpleType: ProcessTxnResult(2734) at 0", "Insert ExpressionStatement(2882) into Block(3388) at 5", "Insert SingleVariableDeclaration(3414) into CatchClause(3424) at 0", "Insert Block(3423) into CatchClause(3424) at 1", "Insert Assignment: =(2881) into ExpressionStatement(2882) at 0", "Insert SwitchCase(3097) into SwitchStatement(3387) at 30", "Insert VariableDeclarationStatement(3106) into SwitchStatement(3387) at 31", "Insert ExpressionStatement(3118) into SwitchStatement(3387) at 32", "Insert ExpressionStatement(3124) into SwitchStatement(3387) at 33", "Insert BreakStatement(3125) into SwitchStatement(3387) at 34", "Insert SwitchCase(3127) into SwitchStatement(3387) at 35", "Insert VariableDeclarationStatement(3136) into SwitchStatement(3387) at 36", "Insert VariableDeclarationStatement(3147) into SwitchStatement(3387) at 37", "Insert ExpressionStatement(3156) into SwitchStatement(3387) at 38", "Insert ExpressionStatement(3165) into SwitchStatement(3387) at 39", "Insert VariableDeclarationStatement(3170) into SwitchStatement(3387) at 40", "Insert EnhancedForStatement(3189) into SwitchStatement(3387) at 41", "Insert VariableDeclarationStatement(3194) into SwitchStatement(3387) at 42", "Insert EnhancedForStatement(3385) into SwitchStatement(3387) at 43", "Insert BreakStatement(3386) into SwitchStatement(3387) at 44", "Insert SimpleType: IOException(3412) into SingleVariableDeclaration(3414) at 0", "Insert SimpleName: e(3413) into SingleVariableDeclaration(3414) at 1", "Insert ExpressionStatement(3422) into Block(3423) at 0", "Insert QualifiedName: rc.multiResult(2879) into Assignment: =(2881) at 0", "Insert NullLiteral(2880) into Assignment: =(2881) at 1", "Insert QualifiedName: OpCode.check(3096) into SwitchCase(3097) at 0", "Insert SimpleType: CheckVersionTxn(3099) into VariableDeclarationStatement(3106) at 0", "Insert VariableDeclarationFragment(3105) into VariableDeclarationStatement(3106) at 1", "Insert Assignment: =(3117) into ExpressionStatement(3118) at 0", "Insert Assignment: =(3123) into ExpressionStatement(3124) at 0", "Insert QualifiedName: OpCode.multi(3126) into SwitchCase(3127) at 0", "Insert SimpleType: MultiTxn(3129) into VariableDeclarationStatement(3136) at 0", "Insert VariableDeclarationFragment(3135) into VariableDeclarationStatement(3136) at 1", "Insert ParameterizedType: List<Txn>(3141) into VariableDeclarationStatement(3147) at 0", "Insert VariableDeclarationFragment(3146) into VariableDeclarationStatement(3147) at 1", "Insert Assignment: =(3155) into ExpressionStatement(3156) at 0", "Insert Assignment: =(3164) into ExpressionStatement(3165) at 0", "Insert PrimitiveType: boolean(3166) into VariableDeclarationStatement(3170) at 0", "Insert VariableDeclarationFragment(3169) into VariableDeclarationStatement(3170) at 1", "Insert SingleVariableDeclaration(3174) into EnhancedForStatement(3189) at 0", "Insert SimpleName: txns(3175) into EnhancedForStatement(3189) at 1", "Insert Block(3188) into EnhancedForStatement(3189) at 2", "Insert PrimitiveType: boolean(3190) into VariableDeclarationStatement(3194) at 0", "Insert VariableDeclarationFragment(3193) into VariableDeclarationStatement(3194) at 1", "Insert SingleVariableDeclaration(3198) into EnhancedForStatement(3385) at 0", "Insert SimpleName: txns(3199) into EnhancedForStatement(3385) at 1", "Insert Block(3384) into EnhancedForStatement(3385) at 2", "Insert SimpleName: IOException(3411) into SimpleType: IOException(3412) at 0", "Insert MethodInvocation(3421) into ExpressionStatement(3422) at 0", "Insert SimpleName: CheckVersionTxn(3098) into SimpleType: CheckVersionTxn(3099) at 0", "Insert SimpleName: checkTxn(3100) into VariableDeclarationFragment(3105) at 0", "Insert CastExpression(3104) into VariableDeclarationFragment(3105) at 1", "Insert SimpleName: debug(3107) into Assignment: =(3117) at 0", "Insert InfixExpression: +(3116) into Assignment: =(3117) at 1", "Insert QualifiedName: rc.path(3119) into Assignment: =(3123) at 0", "Insert MethodInvocation(3122) into Assignment: =(3123) at 1", "Insert SimpleName: MultiTxn(3128) into SimpleType: MultiTxn(3129) at 0", "Insert SimpleName: multiTxn(3130) into VariableDeclarationFragment(3135) at 0", "Insert CastExpression(3134) into VariableDeclarationFragment(3135) at 1", "Insert SimpleType: List(3138) into ParameterizedType: List<Txn>(3141) at 0", "Insert SimpleType: Txn(3140) into ParameterizedType: List<Txn>(3141) at 1", "Insert SimpleName: txns(3142) into VariableDeclarationFragment(3146) at 0", "Insert MethodInvocation(3145) into VariableDeclarationFragment(3146) at 1", "Insert SimpleName: debug(3148) into Assignment: =(3155) at 0", "Insert InfixExpression: +(3154) into Assignment: =(3155) at 1", "Insert QualifiedName: rc.multiResult(3157) into Assignment: =(3164) at 0", "Insert ClassInstanceCreation(3163) into Assignment: =(3164) at 1", "Insert SimpleName: failed(3167) into VariableDeclarationFragment(3169) at 0", "Insert BooleanLiteral: false(3168) into VariableDeclarationFragment(3169) at 1", "Insert SimpleType: Txn(3172) into SingleVariableDeclaration(3174) at 0", "Insert SimpleName: subtxn(3173) into SingleVariableDeclaration(3174) at 1", "Insert IfStatement(3187) into Block(3188) at 0", "Insert SimpleName: post_failed(3191) into VariableDeclarationFragment(3193) at 0", "Insert BooleanLiteral: false(3192) into VariableDeclarationFragment(3193) at 1", "Insert SimpleType: Txn(3196) into SingleVariableDeclaration(3198) at 0", "Insert SimpleName: subtxn(3197) into SingleVariableDeclaration(3198) at 1", "Insert VariableDeclarationStatement(3210) into Block(3384) at 0", "Insert VariableDeclarationStatement(3216) into Block(3384) at 1", "Insert SwitchStatement(3279) into Block(3384) at 2", "Insert AssertStatement(3284) into Block(3384) at 3", "Insert ExpressionStatement(3290) into Block(3384) at 4", "Insert IfStatement(3323) into Block(3384) at 5", "Insert IfStatement(3333) into Block(3384) at 6", "Insert VariableDeclarationStatement(3356) into Block(3384) at 7", "Insert VariableDeclarationStatement(3365) into Block(3384) at 8", "Insert ExpressionStatement(3370) into Block(3384) at 9", "Insert IfStatement(3383) into Block(3384) at 10", "Update SimpleName: debug(3065) to warn", "Insert SimpleName: LOG(3415) into MethodInvocation(3421) at 0", "Insert SimpleName: warn(3416) into MethodInvocation(3421) at 1", "Insert InfixExpression: +(3419) into MethodInvocation(3421) at 2", "Insert SimpleName: e(3420) into MethodInvocation(3421) at 3", "Update StringLiteral: \"Set data for  transaction for \"(2966) to \"Set data transaction for \"", "Insert StringLiteral: \" to new value=\"(3001) into InfixExpression: +(3008) at 2", "Insert MethodInvocation(3007) into InfixExpression: +(3008) at 3", "Update StringLiteral: \"Set ACL for  transaction for \"(3006) to \"Set ACL transaction for \"", "Insert SimpleType: CheckVersionTxn(3102) into CastExpression(3104) at 0", "Insert SimpleName: txn(3103) into CastExpression(3104) at 1", "Insert StringLiteral: \"Check Version transaction for \"(3108) into InfixExpression: +(3116) at 0", "Insert MethodInvocation(3111) into InfixExpression: +(3116) at 1", "Insert StringLiteral: \" and version=\"(3112) into InfixExpression: +(3116) at 2", "Insert MethodInvocation(3115) into InfixExpression: +(3116) at 3", "Insert SimpleName: checkTxn(3120) into MethodInvocation(3122) at 0", "Insert SimpleName: getPath(3121) into MethodInvocation(3122) at 1", "Insert SimpleType: MultiTxn(3132) into CastExpression(3134) at 0", "Insert SimpleName: txn(3133) into CastExpression(3134) at 1", "Insert SimpleName: List(3137) into SimpleType: List(3138) at 0", "Insert SimpleName: Txn(3139) into SimpleType: Txn(3140) at 0", "Insert SimpleName: multiTxn(3143) into MethodInvocation(3145) at 0", "Insert SimpleName: getTxns(3144) into MethodInvocation(3145) at 1", "Insert StringLiteral: \"Multi transaction with \"(3149) into InfixExpression: +(3154) at 0", "Insert MethodInvocation(3152) into InfixExpression: +(3154) at 1", "Insert StringLiteral: \" operations\"(3153) into InfixExpression: +(3154) at 2", "Insert ParameterizedType: ArrayList<ProcessTxnResult>(3162) into ClassInstanceCreation(3163) at 0", "Insert SimpleName: Txn(3171) into SimpleType: Txn(3172) at 0", "Insert InfixExpression: ==(3180) into IfStatement(3187) at 0", "Insert Block(3186) into IfStatement(3187) at 1", "Insert SimpleName: Txn(3195) into SimpleType: Txn(3196) at 0", "Insert SimpleType: ByteBuffer(3201) into VariableDeclarationStatement(3210) at 0", "Insert VariableDeclarationFragment(3209) into VariableDeclarationStatement(3210) at 1", "Insert SimpleType: Record(3212) into VariableDeclarationStatement(3216) at 0", "Insert VariableDeclarationFragment(3215) into VariableDeclarationStatement(3216) at 1", "Insert MethodInvocation(3219) into SwitchStatement(3279) at 0", "Insert SwitchCase(3221) into SwitchStatement(3279) at 1", "Insert ExpressionStatement(3227) into SwitchStatement(3279) at 2", "Insert BreakStatement(3228) into SwitchStatement(3279) at 3", "Insert SwitchCase(3230) into SwitchStatement(3279) at 4", "Insert ExpressionStatement(3236) into SwitchStatement(3279) at 5", "Insert BreakStatement(3237) into SwitchStatement(3279) at 6", "Insert SwitchCase(3239) into SwitchStatement(3279) at 7", "Insert ExpressionStatement(3245) into SwitchStatement(3279) at 8", "Insert BreakStatement(3246) into SwitchStatement(3279) at 9", "Insert SwitchCase(3248) into SwitchStatement(3279) at 10", "Insert ExpressionStatement(3254) into SwitchStatement(3279) at 11", "Insert ExpressionStatement(3258) into SwitchStatement(3279) at 12", "Insert BreakStatement(3259) into SwitchStatement(3279) at 13", "Insert SwitchCase(3261) into SwitchStatement(3279) at 14", "Insert ExpressionStatement(3267) into SwitchStatement(3279) at 15", "Insert BreakStatement(3268) into SwitchStatement(3279) at 16", "Insert SwitchCase(3269) into SwitchStatement(3279) at 17", "Insert ThrowStatement(3278) into SwitchStatement(3279) at 18", "Insert ParenthesizedExpression(3283) into AssertStatement(3284) at 0", "Insert MethodInvocation(3289) into ExpressionStatement(3290) at 0", "Insert InfixExpression: &&(3297) into IfStatement(3323) at 0", "Insert Block(3322) into IfStatement(3323) at 1", "Insert SimpleName: failed(3324) into IfStatement(3333) at 0", "Insert Block(3332) into IfStatement(3333) at 1", "Insert SimpleType: TxnHeader(3335) into VariableDeclarationStatement(3356) at 0", "Insert VariableDeclarationFragment(3355) into VariableDeclarationStatement(3356) at 1", "Insert SimpleType: ProcessTxnResult(3358) into VariableDeclarationStatement(3365) at 0", "Insert VariableDeclarationFragment(3364) into VariableDeclarationStatement(3365) at 1", "Insert MethodInvocation(3369) into ExpressionStatement(3370) at 0", "Insert InfixExpression: &&(3377) into IfStatement(3383) at 0", "Insert Block(3382) into IfStatement(3383) at 1", "Insert StringLiteral: \"Failed:\"(3417) into InfixExpression: +(3419) at 0", "Insert SimpleName: debug(3418) into InfixExpression: +(3419) at 1", "Insert SimpleName: Arrays(3002) into MethodInvocation(3007) at 0", "Insert SimpleName: toString(3003) into MethodInvocation(3007) at 1", "Insert MethodInvocation(3006) into MethodInvocation(3007) at 2", "Insert SimpleName: CheckVersionTxn(3101) into SimpleType: CheckVersionTxn(3102) at 0", "Insert SimpleName: checkTxn(3109) into MethodInvocation(3111) at 0", "Insert SimpleName: getPath(3110) into MethodInvocation(3111) at 1", "Insert SimpleName: checkTxn(3113) into MethodInvocation(3115) at 0", "Insert SimpleName: getVersion(3114) into MethodInvocation(3115) at 1", "Insert SimpleName: MultiTxn(3131) into SimpleType: MultiTxn(3132) at 0", "Insert SimpleName: txns(3150) into MethodInvocation(3152) at 0", "Insert SimpleName: size(3151) into MethodInvocation(3152) at 1", "Insert SimpleType: ArrayList(3159) into ParameterizedType: ArrayList<ProcessTxnResult>(3162) at 0", "Insert SimpleType: ProcessTxnResult(3161) into ParameterizedType: ArrayList<ProcessTxnResult>(3162) at 1", "Insert MethodInvocation(3178) into InfixExpression: ==(3180) at 0", "Insert QualifiedName: OpCode.error(3179) into InfixExpression: ==(3180) at 1", "Insert ExpressionStatement(3184) into Block(3186) at 0", "Insert BreakStatement(3185) into Block(3186) at 1", "Insert SimpleName: ByteBuffer(3200) into SimpleType: ByteBuffer(3201) at 0", "Insert SimpleName: bb(3202) into VariableDeclarationFragment(3209) at 0", "Insert MethodInvocation(3208) into VariableDeclarationFragment(3209) at 1", "Insert SimpleName: Record(3211) into SimpleType: Record(3212) at 0", "Insert SimpleName: record(3213) into VariableDeclarationFragment(3215) at 0", "Insert NullLiteral(3214) into VariableDeclarationFragment(3215) at 1", "Insert SimpleName: subtxn(3217) into MethodInvocation(3219) at 0", "Insert SimpleName: getType(3218) into MethodInvocation(3219) at 1", "Insert QualifiedName: OpCode.create(3220) into SwitchCase(3221) at 0", "Insert Assignment: =(3226) into ExpressionStatement(3227) at 0", "Insert QualifiedName: OpCode.delete(3229) into SwitchCase(3230) at 0", "Insert Assignment: =(3235) into ExpressionStatement(3236) at 0", "Insert QualifiedName: OpCode.setData(3238) into SwitchCase(3239) at 0", "Insert Assignment: =(3244) into ExpressionStatement(3245) at 0", "Insert QualifiedName: OpCode.error(3247) into SwitchCase(3248) at 0", "Insert Assignment: =(3253) into ExpressionStatement(3254) at 0", "Insert Assignment: =(3257) into ExpressionStatement(3258) at 0", "Insert QualifiedName: OpCode.check(3260) into SwitchCase(3261) at 0", "Insert Assignment: =(3266) into ExpressionStatement(3267) at 0", "Insert ClassInstanceCreation(3277) into ThrowStatement(3278) at 0", "Insert InfixExpression: !=(3282) into ParenthesizedExpression(3283) at 0", "Insert SimpleName: ZooKeeperServer(3285) into MethodInvocation(3289) at 0", "Insert SimpleName: byteBuffer2Record(3286) into MethodInvocation(3289) at 1", "Insert SimpleName: bb(3287) into MethodInvocation(3289) at 2", "Insert SimpleName: record(3288) into MethodInvocation(3289) at 3", "Insert SimpleName: failed(3291) into InfixExpression: &&(3297) at 0", "Insert InfixExpression: !=(3296) into InfixExpression: &&(3297) at 1", "Insert VariableDeclarationStatement(3309) into Block(3322) at 0", "Insert ExpressionStatement(3314) into Block(3322) at 1", "Insert ExpressionStatement(3321) into Block(3322) at 2", "Insert AssertStatement(3331) into Block(3332) at 0", "Insert SimpleName: TxnHeader(3334) into SimpleType: TxnHeader(3335) at 0", "Insert SimpleName: subHdr(3336) into VariableDeclarationFragment(3355) at 0", "Insert ClassInstanceCreation(3354) into VariableDeclarationFragment(3355) at 1", "Insert SimpleName: ProcessTxnResult(3357) into SimpleType: ProcessTxnResult(3358) at 0", "Insert SimpleName: subRc(3359) into VariableDeclarationFragment(3364) at 0", "Insert MethodInvocation(3363) into VariableDeclarationFragment(3364) at 1", "Insert QualifiedName: rc.multiResult(3366) into MethodInvocation(3369) at 0", "Insert SimpleName: add(3367) into MethodInvocation(3369) at 1", "Insert SimpleName: subRc(3368) into MethodInvocation(3369) at 2", "Insert InfixExpression: !=(3373) into InfixExpression: &&(3377) at 0", "Insert InfixExpression: ==(3376) into InfixExpression: &&(3377) at 1", "Insert ExpressionStatement(3381) into Block(3382) at 0", "Insert SimpleName: setDataTxn(3004) into MethodInvocation(3006) at 0", "Insert SimpleName: getData(3005) into MethodInvocation(3006) at 1", "Insert SimpleName: ArrayList(3158) into SimpleType: ArrayList(3159) at 0", "Insert SimpleName: ProcessTxnResult(3160) into SimpleType: ProcessTxnResult(3161) at 0", "Insert SimpleName: subtxn(3176) into MethodInvocation(3178) at 0", "Insert SimpleName: getType(3177) into MethodInvocation(3178) at 1", "Insert Assignment: =(3183) into ExpressionStatement(3184) at 0", "Insert SimpleName: ByteBuffer(3203) into MethodInvocation(3208) at 0", "Insert SimpleName: wrap(3204) into MethodInvocation(3208) at 1", "Insert MethodInvocation(3207) into MethodInvocation(3208) at 2", "Insert SimpleName: record(3222) into Assignment: =(3226) at 0", "Insert ClassInstanceCreation(3225) into Assignment: =(3226) at 1", "Insert SimpleName: record(3231) into Assignment: =(3235) at 0", "Insert ClassInstanceCreation(3234) into Assignment: =(3235) at 1", "Insert SimpleName: record(3240) into Assignment: =(3244) at 0", "Insert ClassInstanceCreation(3243) into Assignment: =(3244) at 1", "Insert SimpleName: record(3249) into Assignment: =(3253) at 0", "Insert ClassInstanceCreation(3252) into Assignment: =(3253) at 1", "Insert SimpleName: post_failed(3255) into Assignment: =(3257) at 0", "Insert BooleanLiteral: true(3256) into Assignment: =(3257) at 1", "Insert SimpleName: record(3262) into Assignment: =(3266) at 0", "Insert ClassInstanceCreation(3265) into Assignment: =(3266) at 1", "Insert SimpleType: IOException(3271) into ClassInstanceCreation(3277) at 0", "Insert InfixExpression: +(3276) into ClassInstanceCreation(3277) at 1", "Insert SimpleName: record(3280) into InfixExpression: !=(3282) at 0", "Insert NullLiteral(3281) into InfixExpression: !=(3282) at 1", "Insert MethodInvocation(3294) into InfixExpression: !=(3296) at 0", "Insert QualifiedName: OpCode.error(3295) into InfixExpression: !=(3296) at 1", "Insert PrimitiveType: int(3298) into VariableDeclarationStatement(3309) at 0", "Insert VariableDeclarationFragment(3308) into VariableDeclarationStatement(3309) at 1", "Insert MethodInvocation(3313) into ExpressionStatement(3314) at 0", "Insert Assignment: =(3320) into ExpressionStatement(3321) at 0", "Insert ParenthesizedExpression(3330) into AssertStatement(3331) at 0", "Insert SimpleType: TxnHeader(3338) into ClassInstanceCreation(3354) at 0", "Insert MethodInvocation(3341) into ClassInstanceCreation(3354) at 1", "Insert MethodInvocation(3344) into ClassInstanceCreation(3354) at 2", "Insert MethodInvocation(3347) into ClassInstanceCreation(3354) at 3", "Insert MethodInvocation(3350) into ClassInstanceCreation(3354) at 4", "Insert MethodInvocation(3353) into ClassInstanceCreation(3354) at 5", "Insert SimpleName: processTxn(3360) into MethodInvocation(3363) at 0", "Insert SimpleName: subHdr(3361) into MethodInvocation(3363) at 1", "Insert SimpleName: record(3362) into MethodInvocation(3363) at 2", "Insert QualifiedName: subRc.err(3371) into InfixExpression: !=(3373) at 0", "Insert NumberLiteral: 0(3372) into InfixExpression: !=(3373) at 1", "Insert QualifiedName: rc.err(3374) into InfixExpression: ==(3376) at 0", "Insert NumberLiteral: 0(3375) into InfixExpression: ==(3376) at 1", "Insert Assignment: =(3380) into ExpressionStatement(3381) at 0", "Insert SimpleName: failed(3181) into Assignment: =(3183) at 0", "Insert BooleanLiteral: true(3182) into Assignment: =(3183) at 1", "Insert SimpleName: subtxn(3205) into MethodInvocation(3207) at 0", "Insert SimpleName: getData(3206) into MethodInvocation(3207) at 1", "Insert SimpleType: CreateTxn(3224) into ClassInstanceCreation(3225) at 0", "Insert SimpleType: DeleteTxn(3233) into ClassInstanceCreation(3234) at 0", "Insert SimpleType: SetDataTxn(3242) into ClassInstanceCreation(3243) at 0", "Insert SimpleType: ErrorTxn(3251) into ClassInstanceCreation(3252) at 0", "Insert SimpleType: CheckVersionTxn(3264) into ClassInstanceCreation(3265) at 0", "Insert SimpleName: IOException(3270) into SimpleType: IOException(3271) at 0", "Insert StringLiteral: \"Invalid type of op: \"(3272) into InfixExpression: +(3276) at 0", "Insert MethodInvocation(3275) into InfixExpression: +(3276) at 1", "Insert SimpleName: subtxn(3292) into MethodInvocation(3294) at 0", "Insert SimpleName: getType(3293) into MethodInvocation(3294) at 1", "Insert SimpleName: ec(3299) into VariableDeclarationFragment(3308) at 0", "Insert ConditionalExpression(3307) into VariableDeclarationFragment(3308) at 1", "Insert SimpleName: subtxn(3310) into MethodInvocation(3313) at 0", "Insert SimpleName: setType(3311) into MethodInvocation(3313) at 1", "Insert QualifiedName: OpCode.error(3312) into MethodInvocation(3313) at 2", "Insert SimpleName: record(3315) into Assignment: =(3320) at 0", "Insert ClassInstanceCreation(3319) into Assignment: =(3320) at 1", "Insert InfixExpression: ==(3329) into ParenthesizedExpression(3330) at 0", "Insert SimpleName: TxnHeader(3337) into SimpleType: TxnHeader(3338) at 0", "Insert SimpleName: header(3339) into MethodInvocation(3341) at 0", "Insert SimpleName: getClientId(3340) into MethodInvocation(3341) at 1", "Insert SimpleName: header(3342) into MethodInvocation(3344) at 0", "Insert SimpleName: getCxid(3343) into MethodInvocation(3344) at 1", "Insert SimpleName: header(3345) into MethodInvocation(3347) at 0", "Insert SimpleName: getZxid(3346) into MethodInvocation(3347) at 1", "Insert SimpleName: header(3348) into MethodInvocation(3350) at 0", "Insert SimpleName: getTime(3349) into MethodInvocation(3350) at 1", "Insert SimpleName: subtxn(3351) into MethodInvocation(3353) at 0", "Insert SimpleName: getType(3352) into MethodInvocation(3353) at 1", "Insert QualifiedName: rc.err(3378) into Assignment: =(3380) at 0", "Insert QualifiedName: subRc.err(3379) into Assignment: =(3380) at 1", "Insert SimpleName: CreateTxn(3223) into SimpleType: CreateTxn(3224) at 0", "Insert SimpleName: DeleteTxn(3232) into SimpleType: DeleteTxn(3233) at 0", "Insert SimpleName: SetDataTxn(3241) into SimpleType: SetDataTxn(3242) at 0", "Insert SimpleName: ErrorTxn(3250) into SimpleType: ErrorTxn(3251) at 0", "Insert SimpleName: CheckVersionTxn(3263) into SimpleType: CheckVersionTxn(3264) at 0", "Insert SimpleName: subtxn(3273) into MethodInvocation(3275) at 0", "Insert SimpleName: getType(3274) into MethodInvocation(3275) at 1", "Insert SimpleName: post_failed(3300) into ConditionalExpression(3307) at 0", "Insert MethodInvocation(3303) into ConditionalExpression(3307) at 1", "Insert MethodInvocation(3306) into ConditionalExpression(3307) at 2", "Insert SimpleType: ErrorTxn(3317) into ClassInstanceCreation(3319) at 0", "Insert SimpleName: ec(3318) into ClassInstanceCreation(3319) at 1", "Insert MethodInvocation(3327) into InfixExpression: ==(3329) at 0", "Insert QualifiedName: OpCode.error(3328) into InfixExpression: ==(3329) at 1", "Insert QualifiedName: Code.RUNTIMEINCONSISTENCY(3301) into MethodInvocation(3303) at 0", "Insert SimpleName: intValue(3302) into MethodInvocation(3303) at 1", "Insert QualifiedName: Code.OK(3304) into MethodInvocation(3306) at 0", "Insert SimpleName: intValue(3305) into MethodInvocation(3306) at 1", "Insert SimpleName: ErrorTxn(3316) into SimpleType: ErrorTxn(3317) at 0", "Insert SimpleName: subtxn(3325) into MethodInvocation(3327) at 0", "Insert SimpleName: getType(3326) into MethodInvocation(3327) at 1"]}}, {"FinalRequestProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.zookeeper.MultiResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 36", "operations": ["INS ImportDeclaration to CompilationUnit at 36", "INS QualifiedName: org.apache.zookeeper.MultiTransactionRecord to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 37", "operations": ["INS QualifiedName: org.apache.zookeeper.Op to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 37"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS QualifiedName: org.apache.zookeeper.OpResult to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 38"]}, {"root": "INS ImportDeclaration to CompilationUnit at 39", "operations": ["INS ImportDeclaration to CompilationUnit at 39", "INS QualifiedName: org.apache.zookeeper.OpResult.CheckResult to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS ImportDeclaration to CompilationUnit at 40", "INS QualifiedName: org.apache.zookeeper.OpResult.CreateResult to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 41", "operations": ["INS QualifiedName: org.apache.zookeeper.OpResult.DeleteResult to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 41"]}, {"root": "INS ImportDeclaration to CompilationUnit at 42", "operations": ["INS ImportDeclaration to CompilationUnit at 42", "INS QualifiedName: org.apache.zookeeper.OpResult.SetDataResult to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 43", "operations": ["INS ImportDeclaration to CompilationUnit at 43", "INS QualifiedName: org.apache.zookeeper.OpResult.ErrorResult to ImportDeclaration at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS QualifiedName: request.type to InfixExpression: != at 0", "INS QualifiedName: OpCode.multi to InfixExpression: != at 1"]}, {"root": "INS SwitchCase to SwitchStatement at 5", "operations": ["INS SwitchCase to SwitchStatement at 5", "INS QualifiedName: OpCode.multi to SwitchCase at 0"]}, {"root": "INS Block to SwitchStatement at 6", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to SwitchStatement at 6", "INS SimpleName: subResult to Assignment: = at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS QualifiedName: OpCode.check to SwitchCase at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: rsp to Assignment: = at 0", "INS SimpleName: subResult to Assignment: = at 0", "INS QualifiedName: subTxnResult.path to ClassInstanceCreation at 1", "INS QualifiedName: subTxnResult.stat to ClassInstanceCreation at 1", "INS SwitchCase to SwitchStatement at 4", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: ProcessTxnResult to SingleVariableDeclaration at 0", "INS BreakStatement to SwitchStatement at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SwitchCase to SwitchStatement at 10", "INS BreakStatement to Block at 3", "INS ExpressionStatement to SwitchStatement at 8", "INS SimpleName: subResult to Assignment: = at 0", "INS SimpleName: CheckResult to SimpleType: CheckResult at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: subResult to Assignment: = at 0", "INS SimpleName: subTxnResult to SingleVariableDeclaration at 1", "INS QualifiedName: OpCode.setData to SwitchCase at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS BreakStatement to SwitchStatement at 9", "INS ExpressionStatement to Block at 0", "INS SimpleType: CreateResult to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: subResult to Assignment: = at 0", "INS SimpleName: add to MethodInvocation at 1", "INS QualifiedName: OpCode.create to SwitchCase at 0", "INS SwitchStatement to Block at 1", "INS SimpleType: MultiResponse to CastExpression at 0", "INS BreakStatement to SwitchStatement at 6", "INS ClassInstanceCreation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS BreakStatement to SwitchStatement at 15", "INS QualifiedName: OpCode.error to SwitchCase at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: CheckResult to ClassInstanceCreation at 0", "INS SimpleName: subResult to VariableDeclarationFragment at 0", "INS SimpleName: MultiResponse to SimpleType: MultiResponse at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleType: DeleteResult to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: OpCode.delete to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: subResult to MethodInvocation at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS StringLiteral: \"Invalid type of op\" to ClassInstanceCreation at 1", "INS QualifiedName: subTxnResult.err to ClassInstanceCreation at 1", "INS SwitchCase to SwitchStatement at 7", "INS BreakStatement to SwitchStatement at 12", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: OpResult to VariableDeclarationStatement at 0", "INS SwitchCase to SwitchStatement at 13", "INS SimpleName: rsp to CastExpression at 1", "INS SimpleName: lastOp to Assignment: = at 0", "INS SimpleName: CreateResult to SimpleType: CreateResult at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to SwitchStatement at 14", "INS ClassInstanceCreation to Assignment: = at 1", "INS QualifiedName: rc.multiResult to EnhancedForStatement at 1", "INS SimpleName: ErrorResult to SimpleType: ErrorResult at 0", "INS ExpressionStatement to Block at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: DeleteResult to SimpleType: DeleteResult at 0", "INS SimpleType: SetDataResult to ClassInstanceCreation at 0", "INS SimpleName: ProcessTxnResult to SimpleType: ProcessTxnResult at 0", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"MULT\" to Assignment: = at 1", "INS SimpleType: MultiResponse to ClassInstanceCreation at 0", "INS SwitchCase to SwitchStatement at 16", "INS SimpleName: SetDataResult to SimpleType: SetDataResult at 0", "INS ThrowStatement to SwitchStatement at 17", "INS SimpleName: MultiResponse to SimpleType: MultiResponse at 0", "INS SimpleType: ErrorResult to ClassInstanceCreation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to SwitchStatement at 2", "INS ExpressionStatement to SwitchStatement at 5", "INS ExpressionStatement to SwitchStatement at 11", "INS QualifiedName: subTxnResult.type to SwitchStatement at 0", "INS SimpleName: OpResult to SimpleType: OpResult at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 19", "operations": ["INS SwitchCase to SwitchStatement at 19", "INS QualifiedName: OpCode.check to SwitchCase at 0"]}, {"root": "INS Block to SwitchStatement at 20", "operations": ["INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: SetDataResponse to SimpleType: SetDataResponse at 0", "INS SimpleName: err to Assignment: = at 0", "INS SimpleName: rsp to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS Block to SwitchStatement at 20", "INS BreakStatement to Block at 3", "INS QualifiedName: rc.stat to ClassInstanceCreation at 1", "INS SimpleName: Code to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS QualifiedName: rc.err to MethodInvocation at 2", "INS StringLiteral: \"CHEC\" to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: lastOp to Assignment: = at 0", "INS SimpleType: SetDataResponse to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: != to InfixExpression: && at 0"]}]}}, {"FinalRequestProcessor_diff": {"operations": ["Insert ImportDeclaration(32) into CompilationUnit(1427) at 8", "Insert ImportDeclaration(88) into CompilationUnit(1427) at 36", "Insert ImportDeclaration(90) into CompilationUnit(1427) at 37", "Insert ImportDeclaration(92) into CompilationUnit(1427) at 38", "Insert ImportDeclaration(94) into CompilationUnit(1427) at 39", "Insert ImportDeclaration(96) into CompilationUnit(1427) at 40", "Insert ImportDeclaration(98) into CompilationUnit(1427) at 41", "Insert ImportDeclaration(100) into CompilationUnit(1427) at 42", "Insert ImportDeclaration(102) into CompilationUnit(1427) at 43", "Insert QualifiedName: org.apache.zookeeper.MultiResponse(31) into ImportDeclaration(32) at 0", "Insert QualifiedName: org.apache.zookeeper.MultiTransactionRecord(87) into ImportDeclaration(88) at 0", "Insert QualifiedName: org.apache.zookeeper.Op(89) into ImportDeclaration(90) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult(91) into ImportDeclaration(92) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult.CheckResult(93) into ImportDeclaration(94) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult.CreateResult(95) into ImportDeclaration(96) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult.DeleteResult(97) into ImportDeclaration(98) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult.SetDataResult(99) into ImportDeclaration(100) at 0", "Insert QualifiedName: org.apache.zookeeper.OpResult.ErrorResult(101) into ImportDeclaration(102) at 0", "Insert InfixExpression: &&(447) into IfStatement(451) at 0", "Insert SwitchCase(540) into SwitchStatement(1267) at 5", "Insert Block(629) into SwitchStatement(1267) at 6", "Insert SwitchCase(762) into SwitchStatement(1267) at 19", "Insert Block(782) into SwitchStatement(1267) at 20", "Move InfixExpression: !=(425) into InfixExpression: &&(447) at 0", "Insert InfixExpression: !=(446) into InfixExpression: &&(447) at 1", "Insert QualifiedName: OpCode.multi(539) into SwitchCase(540) at 0", "Insert ExpressionStatement(544) into Block(629) at 0", "Insert ExpressionStatement(550) into Block(629) at 1", "Insert EnhancedForStatement(627) into Block(629) at 2", "Insert BreakStatement(628) into Block(629) at 3", "Insert QualifiedName: OpCode.check(761) into SwitchCase(762) at 0", "Insert ExpressionStatement(766) into Block(782) at 0", "Insert ExpressionStatement(773) into Block(782) at 1", "Insert ExpressionStatement(780) into Block(782) at 2", "Insert BreakStatement(781) into Block(782) at 3", "Insert QualifiedName: request.type(444) into InfixExpression: !=(446) at 0", "Insert QualifiedName: OpCode.multi(445) into InfixExpression: !=(446) at 1", "Insert Assignment: =(543) into ExpressionStatement(544) at 0", "Insert Assignment: =(549) into ExpressionStatement(550) at 0", "Insert SingleVariableDeclaration(554) into EnhancedForStatement(627) at 0", "Insert QualifiedName: rc.multiResult(555) into EnhancedForStatement(627) at 1", "Insert Block(626) into EnhancedForStatement(627) at 2", "Insert Assignment: =(765) into ExpressionStatement(766) at 0", "Insert Assignment: =(772) into ExpressionStatement(773) at 0", "Insert Assignment: =(779) into ExpressionStatement(780) at 0", "Insert SimpleName: lastOp(541) into Assignment: =(543) at 0", "Insert StringLiteral: \"MULT\"(542) into Assignment: =(543) at 1", "Insert SimpleName: rsp(545) into Assignment: =(549) at 0", "Insert ClassInstanceCreation(548) into Assignment: =(549) at 1", "Insert SimpleType: ProcessTxnResult(552) into SingleVariableDeclaration(554) at 0", "Insert SimpleName: subTxnResult(553) into SingleVariableDeclaration(554) at 1", "Insert VariableDeclarationStatement(560) into Block(626) at 0", "Insert SwitchStatement(616) into Block(626) at 1", "Insert ExpressionStatement(625) into Block(626) at 2", "Insert SimpleName: lastOp(763) into Assignment: =(765) at 0", "Insert StringLiteral: \"CHEC\"(764) into Assignment: =(765) at 1", "Insert SimpleName: rsp(767) into Assignment: =(772) at 0", "Insert ClassInstanceCreation(771) into Assignment: =(772) at 1", "Insert SimpleName: err(774) into Assignment: =(779) at 0", "Insert MethodInvocation(778) into Assignment: =(779) at 1", "Insert SimpleType: MultiResponse(547) into ClassInstanceCreation(548) at 0", "Insert SimpleName: ProcessTxnResult(551) into SimpleType: ProcessTxnResult(552) at 0", "Insert SimpleType: OpResult(557) into VariableDeclarationStatement(560) at 0", "Insert VariableDeclarationFragment(559) into VariableDeclarationStatement(560) at 1", "Insert QualifiedName: subTxnResult.type(561) into SwitchStatement(616) at 0", "Insert SwitchCase(563) into SwitchStatement(616) at 1", "Insert ExpressionStatement(569) into SwitchStatement(616) at 2", "Insert BreakStatement(570) into SwitchStatement(616) at 3", "Insert SwitchCase(572) into SwitchStatement(616) at 4", "Insert ExpressionStatement(579) into SwitchStatement(616) at 5", "Insert BreakStatement(580) into SwitchStatement(616) at 6", "Insert SwitchCase(582) into SwitchStatement(616) at 7", "Insert ExpressionStatement(588) into SwitchStatement(616) at 8", "Insert BreakStatement(589) into SwitchStatement(616) at 9", "Insert SwitchCase(591) into SwitchStatement(616) at 10", "Insert ExpressionStatement(598) into SwitchStatement(616) at 11", "Insert BreakStatement(599) into SwitchStatement(616) at 12", "Insert SwitchCase(601) into SwitchStatement(616) at 13", "Insert ExpressionStatement(608) into SwitchStatement(616) at 14", "Insert BreakStatement(609) into SwitchStatement(616) at 15", "Insert SwitchCase(610) into SwitchStatement(616) at 16", "Insert ThrowStatement(615) into SwitchStatement(616) at 17", "Insert MethodInvocation(624) into ExpressionStatement(625) at 0", "Insert SimpleType: SetDataResponse(769) into ClassInstanceCreation(771) at 0", "Insert QualifiedName: rc.stat(770) into ClassInstanceCreation(771) at 1", "Insert SimpleName: Code(775) into MethodInvocation(778) at 0", "Insert SimpleName: get(776) into MethodInvocation(778) at 1", "Insert QualifiedName: rc.err(777) into MethodInvocation(778) at 2", "Insert SimpleName: MultiResponse(546) into SimpleType: MultiResponse(547) at 0", "Insert SimpleName: OpResult(556) into SimpleType: OpResult(557) at 0", "Insert SimpleName: subResult(558) into VariableDeclarationFragment(559) at 0", "Insert QualifiedName: OpCode.check(562) into SwitchCase(563) at 0", "Insert Assignment: =(568) into ExpressionStatement(569) at 0", "Insert QualifiedName: OpCode.create(571) into SwitchCase(572) at 0", "Insert Assignment: =(578) into ExpressionStatement(579) at 0", "Insert QualifiedName: OpCode.delete(581) into SwitchCase(582) at 0", "Insert Assignment: =(587) into ExpressionStatement(588) at 0", "Insert QualifiedName: OpCode.setData(590) into SwitchCase(591) at 0", "Insert Assignment: =(597) into ExpressionStatement(598) at 0", "Insert QualifiedName: OpCode.error(600) into SwitchCase(601) at 0", "Insert Assignment: =(607) into ExpressionStatement(608) at 0", "Insert ClassInstanceCreation(614) into ThrowStatement(615) at 0", "Insert ParenthesizedExpression(621) into MethodInvocation(624) at 0", "Insert SimpleName: add(622) into MethodInvocation(624) at 1", "Insert SimpleName: subResult(623) into MethodInvocation(624) at 2", "Insert SimpleName: SetDataResponse(768) into SimpleType: SetDataResponse(769) at 0", "Insert SimpleName: subResult(564) into Assignment: =(568) at 0", "Insert ClassInstanceCreation(567) into Assignment: =(568) at 1", "Insert SimpleName: subResult(573) into Assignment: =(578) at 0", "Insert ClassInstanceCreation(577) into Assignment: =(578) at 1", "Insert SimpleName: subResult(583) into Assignment: =(587) at 0", "Insert ClassInstanceCreation(586) into Assignment: =(587) at 1", "Insert SimpleName: subResult(592) into Assignment: =(597) at 0", "Insert ClassInstanceCreation(596) into Assignment: =(597) at 1", "Insert SimpleName: subResult(602) into Assignment: =(607) at 0", "Insert ClassInstanceCreation(606) into Assignment: =(607) at 1", "Insert SimpleType: IOException(612) into ClassInstanceCreation(614) at 0", "Insert StringLiteral: \"Invalid type of op\"(613) into ClassInstanceCreation(614) at 1", "Insert CastExpression(620) into ParenthesizedExpression(621) at 0", "Insert SimpleType: CheckResult(566) into ClassInstanceCreation(567) at 0", "Insert SimpleType: CreateResult(575) into ClassInstanceCreation(577) at 0", "Insert QualifiedName: subTxnResult.path(576) into ClassInstanceCreation(577) at 1", "Insert SimpleType: DeleteResult(585) into ClassInstanceCreation(586) at 0", "Insert SimpleType: SetDataResult(594) into ClassInstanceCreation(596) at 0", "Insert QualifiedName: subTxnResult.stat(595) into ClassInstanceCreation(596) at 1", "Insert SimpleType: ErrorResult(604) into ClassInstanceCreation(606) at 0", "Insert QualifiedName: subTxnResult.err(605) into ClassInstanceCreation(606) at 1", "Insert SimpleName: IOException(611) into SimpleType: IOException(612) at 0", "Insert SimpleType: MultiResponse(618) into CastExpression(620) at 0", "Insert SimpleName: rsp(619) into CastExpression(620) at 1", "Insert SimpleName: CheckResult(565) into SimpleType: CheckResult(566) at 0", "Insert SimpleName: CreateResult(574) into SimpleType: CreateResult(575) at 0", "Insert SimpleName: DeleteResult(584) into SimpleType: DeleteResult(585) at 0", "Insert SimpleName: SetDataResult(593) into SimpleType: SetDataResult(594) at 0", "Insert SimpleName: ErrorResult(603) into SimpleType: ErrorResult(604) at 0", "Insert SimpleName: MultiResponse(617) into SimpleType: MultiResponse(618) at 0"]}}, {"PrepRequestProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.ByteArrayOutputStream to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.util.HashMap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: java.util.ListIterator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.jute.BinaryOutputArchive to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.apache.zookeeper.MultiTransactionRecord to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.zookeeper.Op to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: org.apache.zookeeper.proto.CheckVersionRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 41", "operations": ["INS ImportDeclaration to CompilationUnit at 41", "INS QualifiedName: org.apache.zookeeper.txn.CheckVersionTxn to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 42", "operations": ["INS ImportDeclaration to CompilationUnit at 42", "INS QualifiedName: org.apache.zookeeper.txn.Txn to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 43", "operations": ["INS QualifiedName: org.apache.zookeeper.txn.MultiTxn to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 43"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: ChangeRecord to ParameterizedType: HashMap<String,ChangeRecord> at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: cr to InfixExpression: != at 0", "INS QualifiedName: KeeperException.NoNodeException to SimpleType: KeeperException.NoNodeException at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,ChangeRecord> at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS SimpleType: ChangeRecord to ParameterizedType: HashMap<String,ChangeRecord> at 2", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: getRecordForPath to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS SimpleName: pendingChangeRecords to VariableDeclarationFragment at 0", "INS SimpleName: MultiTransactionRecord to SimpleType: MultiTransactionRecord at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,ChangeRecord> at 1", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,ChangeRecord> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: path to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: Op to SimpleType: Op at 0", "INS ParameterizedType: HashMap<String,ChangeRecord> to MethodDeclaration at 1", "INS TagElement: @param to Javadoc at 1", "INS TextElement: This is used inside MultiOp error code path to rollback in the event to TagElement at 1", "INS ParameterizedType: HashMap<String,ChangeRecord> to VariableDeclarationStatement at 0", "INS Block to TryStatement at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,ChangeRecord> at 1", "INS SimpleType: KeeperException.NoNodeException to SingleVariableDeclaration at 0", "INS SimpleName: pendingChangeRecords to MethodInvocation at 0", "INS TextElement: of a failed multi-op. to TagElement at 2", "INS SimpleName: path to VariableDeclarationFragment at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: getPath to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: HashMap<String,ChangeRecord> to ClassInstanceCreation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS TagElement to Javadoc at 0", "INS TryStatement to Block at 1", "INS TextElement: Grab current pending change records for each op in a multi-op. to TagElement at 0", "INS SimpleName: op to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,ChangeRecord> at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,ChangeRecord> at 1", "INS SimpleType: Op to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: pendingChangeRecords to ReturnStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: path to MethodInvocation at 2", "INS SimpleName: multiRequest to EnhancedForStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: MultiTransactionRecord to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: ChangeRecord to ParameterizedType: HashMap<String,ChangeRecord> at 2", "INS SimpleName: multiRequest to TagElement: @param at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: cr to VariableDeclarationFragment at 0", "INS SimpleName: multiRequest to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: cr to MethodInvocation at 3", "INS CatchClause to TryStatement at 1", "INS SimpleName: op to SingleVariableDeclaration at 1", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS ReturnStatement to Block at 2", "INS SimpleType: ChangeRecord to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS EnhancedForStatement to Block at 1", "INS SimpleName: getPendingChanges to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: c to MethodInvocation at 3", "INS BreakStatement to Block at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: zxid to SingleVariableDeclaration at 1", "INS SimpleType: ChangeRecord to ParameterizedType: HashMap<String,ChangeRecord> at 2", "INS SimpleName: iter to VariableDeclarationFragment at 0", "INS SimpleType: ChangeRecord to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,ChangeRecord> at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: next to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: pendingChangeRecords to TagElement: @param at 0", "INS MethodInvocation to WhileStatement at 0", "INS QualifiedName: c.path to MethodInvocation at 2", "INS QualifiedName: zks.outstandingChanges to MethodInvocation at 0", "INS SimpleName: firstZxid to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: listIterator to MethodInvocation at 1", "INS SimpleName: ListIterator to SimpleType: ListIterator at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: empty to PrefixExpression: ! at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<ChangeRecord> at 0", "INS Block to SynchronizedStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement: If a multi-op fails, we can't leave any invalid change records we created to TagElement at 1", "INS IfStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: priorIter to MethodInvocation at 0", "INS SimpleName: iter to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to WhileStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS QualifiedName: zks.outstandingChangesForPath to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SynchronizedStatement to Block at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS TextElement: value is still valid. to TagElement at 3", "INS QualifiedName: c.zxid to InfixExpression: < at 0", "INS SimpleName: rollbackPendingChanges to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: pendingChangeRecords to SingleVariableDeclaration at 1", "INS MethodInvocation to WhileStatement at 0", "INS SimpleName: empty to VariableDeclarationFragment at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS SimpleName: size to MethodInvocation at 1", "INS QualifiedName: zks.outstandingChanges to SynchronizedStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: ListIterator to ParameterizedType: ListIterator<ChangeRecord> at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,ChangeRecord> at 0", "INS Block to IfStatement at 2", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS FieldAccess to Assignment: = at 1", "INS SimpleName: firstZxid to VariableDeclarationFragment at 0", "INS TagElement: @param to Javadoc at 2", "INS Block to WhileStatement at 1", "INS TextElement: Rollback pending changes records from a failed multi-op. to TagElement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: firstZxid to InfixExpression: < at 1", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleType: ChangeRecord to VariableDeclarationStatement at 0", "INS SimpleName: zxid to TagElement: @param at 0", "INS QualifiedName: c.path to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: HashMap<String,ChangeRecord> to SingleVariableDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 5", "INS PrefixExpression: ! to IfStatement at 0", "INS WhileStatement to Block at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS WhileStatement to Block at 6", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS MethodInvocation to FieldAccess at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: iter to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ParameterizedType: ListIterator<ChangeRecord> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: iterator to MethodInvocation at 1", "INS TextElement: around. We also need to restore their prior value (if any) if their prior to TagElement at 2", "INS SimpleName: previous to MethodInvocation at 1", "INS SimpleName: zxid to FieldAccess at 1", "INS ParameterizedType: Iterator<ChangeRecord> to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: zxid to InfixExpression: == at 1", "INS IfStatement to Block at 1", "INS QualifiedName: zks.outstandingChanges to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: priorIter to MethodInvocation at 0", "INS SimpleName: iter to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ChangeRecord to ParameterizedType: Iterator<ChangeRecord> at 1", "INS InfixExpression: && to IfStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: empty to PrefixExpression: ! at 0", "INS SimpleName: hasPrevious to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: zks.outstandingChanges to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: ChangeRecord to ParameterizedType: ListIterator<ChangeRecord> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: zks.outstandingChangesForPath to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS QualifiedName: c.zxid to InfixExpression: == at 0", "INS SimpleName: priorIter to VariableDeclarationFragment at 0", "INS ContinueStatement to Block at 0", "INS QualifiedName: zks.outstandingChanges to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS InfixExpression: < to ParenthesizedExpression at 0", "INS SimpleName: pendingChangeRecords to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleType: Op to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: getNextZxid to MethodInvocation at 1", "INS QualifiedName: request.sessionId to ClassInstanceCreation at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: pendingChanges to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to SwitchStatement at 30", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS SimpleName: pRequest to MethodDeclaration at 4", "INS QualifiedName: request.hdr to Assignment: = at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleType: Txn to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: op to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS SimpleName: subrequest to MethodInvocation at 4", "INS SimpleName: op to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \" Error Path:\" to InfixExpression: + at 2", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS SimpleName: zxid to MethodInvocation at 2", "INS SimpleName: BinaryOutputArchive to MethodInvocation at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: MultiTxn to SimpleType: MultiTxn at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: e to MethodInvocation at 0", "INS ParameterizedType: List<Txn> to VariableDeclarationStatement at 0", "INS SimpleType: ChangeRecord to ParameterizedType: HashMap<String,ChangeRecord> at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: ErrorTxn to SimpleType: ErrorTxn at 0", "INS ExpressionStatement to SwitchStatement at 19", "INS VariableDeclarationStatement to SwitchStatement at 31", "INS VariableDeclarationStatement to SwitchStatement at 32", "INS SimpleName: ByteArrayOutputStream to SimpleType: ByteArrayOutputStream at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: zxid to VariableDeclarationFragment at 0", "INS StringLiteral: \">>>> Got user-level KeeperException when processing \" to InfixExpression: + at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: KeeperException to SingleVariableDeclaration at 0", "INS BreakStatement to SwitchStatement at 41", "INS SimpleName: intValue to MethodInvocation at 1", "INS Block to TryStatement at 0", "INS SimpleName: Record to SimpleType: Record at 0", "INS VariableDeclarationStatement to Block at 2", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: List to ParameterizedType: List<Txn> at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: ZooKeeperServer to MethodInvocation at 0", "INS QualifiedName: OpCode.error to MethodInvocation at 2", "INS ExpressionStatement to SwitchStatement at 24", "INS SimpleName: BinaryOutputArchive to SimpleType: BinaryOutputArchive at 0", "INS ExpressionStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: CheckVersionRequest to VariableDeclarationStatement at 0", "INS SimpleName: CheckVersionRequest to SimpleType: CheckVersionRequest at 0", "INS QualifiedName: OpCode.error to MethodInvocation at 2", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS ParameterizedType: HashMap<String,ChangeRecord> to VariableDeclarationStatement at 0", "INS SimpleName: setType to MethodInvocation at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to SwitchStatement at 33", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: CheckVersionRequest to ClassInstanceCreation at 0", "INS SimpleName: request to MethodInvocation at 3", "INS SwitchStatement to Block at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS BreakStatement to SwitchStatement at 20", "INS SimpleName: request to MethodInvocation at 3", "INS SimpleName: byteBuffer2Record to MethodInvocation at 1", "INS QualifiedName: request.hdr to MethodInvocation at 0", "INS NullLiteral to Assignment: = at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS QualifiedName: request.request to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: request.hdr to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: multiRequest to VariableDeclarationFragment at 0", "INS ExpressionStatement to SwitchStatement at 9", "INS QualifiedName: request.hdr to InfixExpression: != at 0", "INS QualifiedName: request.hdr to MethodInvocation at 0", "INS SimpleName: getArchive to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to SwitchStatement at 27", "INS SimpleType: MultiTransactionRecord to VariableDeclarationStatement at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to TryStatement at 0", "INS Block to IfStatement at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SwitchCase to SwitchStatement at 21", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: checkSession to MethodInvocation at 1", "INS SimpleName: multiRequest to EnhancedForStatement at 1", "INS StringLiteral: \"request\" to MethodInvocation at 3", "INS SingleMemberAnnotation to MethodDeclaration at 1", "INS SimpleType: Request to SingleVariableDeclaration at 0", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS QualifiedName: Code.RUNTIMEINCONSISTENCY to MethodInvocation at 0", "INS SimpleName: request to MethodInvocation at 3", "INS ExpressionStatement to SwitchStatement at 35", "INS ExpressionStatement to SwitchStatement at 36", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,ChangeRecord> at 0", "INS SimpleName: intValue to MethodInvocation at 1", "INS SimpleName: setAclRequest to MethodInvocation at 4", "INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: OpCode.createSession to SwitchCase at 0", "INS BreakStatement to SwitchStatement at 37", "INS SimpleName: request to MethodInvocation at 3", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationStatement to SwitchStatement at 22", "INS QualifiedName: OpCode.check to SwitchCase at 0", "INS SimpleName: Op to SimpleType: Op at 0", "INS StringLiteral: \" Error:\" to InfixExpression: + at 4", "INS TryStatement to Block at 2", "INS SimpleName: getPendingChanges to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS BreakStatement to SwitchStatement at 51", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ke to Assignment: = at 0", "INS QualifiedName: OpCode.closeSession to SwitchCase at 0", "INS ExpressionStatement to Block at 4", "INS ExpressionStatement to Block at 7", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS QualifiedName: request.txn to Assignment: = at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to SwitchStatement at 14", "INS QualifiedName: request.type to MethodInvocation at 1", "INS SimpleName: txns to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 39", "INS SimpleName: getPath to MethodInvocation at 1", "INS SimpleType: ByteBuffer to VariableDeclarationStatement at 0", "INS SimpleType: MultiTxn to ClassInstanceCreation at 0", "INS SimpleType: Record to VariableDeclarationStatement at 0", "INS SimpleName: baos to VariableDeclarationFragment at 0", "INS SimpleName: code to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 1", "INS QualifiedName: request.hdr to Assignment: = at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: zxid to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: request to MethodInvocation at 3", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: request.request to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: subrequest to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: OpCode.delete to SwitchCase at 0", "INS SimpleName: txns to VariableDeclarationFragment at 0", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: CheckVersionRequest to SimpleType: CheckVersionRequest at 0", "INS SimpleType: ErrorTxn to ClassInstanceCreation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS QualifiedName: request.txn to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SwitchCase to SwitchStatement at 1", "INS QualifiedName: request.type to ClassInstanceCreation at 5", "INS QualifiedName: OpCode.setData to SwitchCase at 0", "INS QualifiedName: OpCode.multi to SwitchCase at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: ke to VariableDeclarationFragment at 0", "INS SimpleName: ZooKeeperServer to MethodInvocation at 0", "INS SimpleName: error to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: OpCode.create to SwitchCase at 0", "INS SimpleName: request to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 5", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<Txn> at 0", "INS SimpleName: createRequest to MethodInvocation at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ErrorTxn to SimpleType: ErrorTxn at 0", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: e to MethodInvocation at 2", "INS QualifiedName: request.txn to Assignment: = at 0", "INS SimpleName: setType to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SwitchCase to SwitchStatement at 6", "INS SimpleType: String to ParameterizedType: HashMap<String,ChangeRecord> at 1", "INS SimpleType: ByteArrayOutputStream to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS QualifiedName: request.type to MethodInvocation at 1", "INS SimpleName: multiRequest to MethodInvocation at 3", "INS SimpleName: boa to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: byteBuffer2Record to MethodInvocation at 1", "INS QualifiedName: request.type to MethodInvocation at 1", "INS SimpleName: Request to SimpleType: Request at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: deleteRequest to MethodInvocation at 4", "INS SimpleName: serialize to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS EnhancedForStatement to SwitchStatement at 34", "INS IfStatement to Block at 0", "INS ParameterizedType: ArrayList<Txn> to ClassInstanceCreation at 0", "INS SimpleName: baos to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: ByteArrayOutputStream to SimpleType: ByteArrayOutputStream at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: op to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 38", "INS SimpleName: rollbackPendingChanges to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: checkRequest to MethodInvocation at 3", "INS SimpleName: request to MethodInvocation at 3", "INS BreakStatement to SwitchStatement at 10", "INS SimpleType: Txn to ParameterizedType: List<Txn> at 1", "INS QualifiedName: request.type to MethodInvocation at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS StringLiteral: \">>>> ABORTING remaing MultiOp ops\" to MethodInvocation at 2", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SimpleName: zxid to ClassInstanceCreation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SwitchCase to SwitchStatement at 11", "INS SimpleName: ke to InfixExpression: == at 0", "INS SimpleName: checkRequest to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to SwitchStatement at 29", "INS SimpleName: setException to MethodInvocation at 1", "INS SimpleName: checkRequest to MethodInvocation at 4", "INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to MethodInvocation at 4", "INS BreakStatement to SwitchStatement at 15", "INS SimpleName: MultiTransactionRecord to SimpleType: MultiTransactionRecord at 0", "INS SimpleName: e to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SwitchCase to SwitchStatement at 26", "INS SimpleName: getOwner to MethodInvocation at 1", "INS SimpleName: array to MethodInvocation at 1", "INS ExpressionStatement to SwitchStatement at 28", "INS SimpleName: multiRequest to MethodInvocation at 1", "INS SimpleType: MultiTransactionRecord to ClassInstanceCreation at 0", "INS QualifiedName: request.txn to Assignment: = at 0", "INS ExpressionStatement to Block at 3", "INS QualifiedName: request.type to SwitchStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: request to SingleVariableDeclaration at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: ke to InfixExpression: != at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 4", "INS SimpleName: zks to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to CatchClause at 1", "INS TryStatement to Block at 0", "INS QualifiedName: OpCode.setACL to SwitchCase at 0", "INS SimpleName: baos to MethodInvocation at 0", "INS SimpleName: ChangeRecord to SimpleType: ChangeRecord at 0", "INS SimpleName: request to MethodInvocation at 0", "INS BreakStatement to SwitchStatement at 25", "INS SimpleType: BinaryOutputArchive to VariableDeclarationStatement at 0", "INS SimpleName: getMessage to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: setDataRequest to MethodInvocation at 4", "INS QualifiedName: OpCode.error to MethodInvocation at 2", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: txns to ClassInstanceCreation at 1", "INS QualifiedName: request.sessionId to MethodInvocation at 2", "INS SimpleName: setType to MethodInvocation at 1", "INS QualifiedName: zks.sessionTracker to MethodInvocation at 0", "INS SimpleName: boa to VariableDeclarationFragment at 0", "INS SimpleType: KeeperException to VariableDeclarationStatement at 0", "INS QualifiedName: request.cxid to ClassInstanceCreation at 2", "INS BreakStatement to SwitchStatement at 5", "INS ExpressionStatement to SwitchStatement at 40", "INS SimpleType: Txn to ParameterizedType: ArrayList<Txn> at 1", "INS SimpleName: bb to VariableDeclarationFragment at 0", "INS QualifiedName: request.hdr to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleType: ByteArrayOutputStream to ClassInstanceCreation at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: pendingChanges to MethodInvocation at 2", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: Txn to SimpleType: Txn at 0", "INS ExpressionStatement to SwitchStatement at 23", "INS SwitchCase to SwitchStatement at 16", "INS SimpleType: ErrorTxn to ClassInstanceCreation at 0", "INS ExpressionStatement to SwitchStatement at 50", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: index to PostfixExpression: ++ at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: request.type to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: bb to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS QualifiedName: request.type to MethodInvocation at 1", "INS SimpleName: pRequest2Txn to MethodInvocation at 0", "INS QualifiedName: request.txn to Assignment: = at 0", "INS SimpleName: MultiTransactionRecord to SimpleType: MultiTransactionRecord at 0", "INS SimpleName: toRequestRecord to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS ExpressionStatement to Block at 1", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TagElement: @param to Javadoc at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: record to TagElement: @param at 0", "INS TextElement: This method will be called inside the ProcessRequestThread, which is a to TagElement at 0", "INS SimpleName: request to TagElement: @param at 0", "INS SimpleName: zxid to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @param to Javadoc at 4", "INS TagElement to Javadoc at 0", "INS SimpleName: type to TagElement: @param at 0", "INS TextElement: singleton, so there will be a single thread calling this code. to TagElement at 1"]}, {"root": "UPDATE from pRequest to pRequest2Txn", "operations": ["UPD SimpleName: pRequest from pRequest to pRequest2Txn"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: type to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: zxid to SingleVariableDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SimpleName: record to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 9"]}, {"root": "INS SimpleType: KeeperException to MethodDeclaration at 10", "operations": ["INS SimpleType: KeeperException to MethodDeclaration at 10", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 11", "MOV CatchClause to TryStatement at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Record to SingleVariableDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS QualifiedName: request.cxid to ClassInstanceCreation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS QualifiedName: request.hdr to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: request.sessionId to ClassInstanceCreation at 1", "INS SimpleName: zxid to ClassInstanceCreation at 3", "INS SimpleName: type to ClassInstanceCreation at 5"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV BreakStatement to SwitchStatement at 110", "MOV ExpressionStatement to SwitchStatement at 82", "MOV ExpressionStatement to SwitchStatement at 8", "MOV BreakStatement to SwitchStatement at 85", "MOV ExpressionStatement to SwitchStatement at 110", "MOV ExpressionStatement to SwitchStatement at 85", "MOV ExpressionStatement to SwitchStatement at 3", "MOV SwitchCase to SwitchStatement at 43", "MOV VariableDeclarationStatement to SwitchStatement at 17", "MOV SwitchCase to SwitchStatement at 44", "MOV VariableDeclarationStatement to SwitchStatement at 2", "MOV ExpressionStatement to SwitchStatement at 13", "MOV SwitchCase to SwitchStatement at 49", "MOV SwitchCase to SwitchStatement at 48", "MOV ExpressionStatement to SwitchStatement at 89", "MOV SwitchCase to SwitchStatement at 45", "MOV ExpressionStatement to SwitchStatement at 18", "MOV ExpressionStatement to SwitchStatement at 64", "MOV SwitchCase to SwitchStatement at 42", "MOV VariableDeclarationStatement to SwitchStatement at 12", "MOV SwitchCase to SwitchStatement at 47", "MOV ExpressionStatement to SwitchStatement at 110", "MOV SwitchCase to SwitchStatement at 46", "MOV ExpressionStatement to SwitchStatement at 110", "MOV VariableDeclarationStatement to SwitchStatement at 7"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 4"]}, {"root": "INS SimpleName: type to SwitchStatement at 0", "operations": ["INS SimpleName: type to SwitchStatement at 0"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 5", "operations": ["INS VariableDeclarationStatement to SwitchStatement at 5", "INS SimpleName: createRequest to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: CreateRequest to SimpleType: CreateRequest at 0", "INS SimpleType: CreateRequest to CastExpression at 0", "INS SimpleType: CreateRequest to VariableDeclarationStatement at 0", "INS SimpleName: record to CastExpression at 1"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 35", "operations": ["INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: DeleteRequest to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to SwitchStatement at 35", "INS SimpleName: DeleteRequest to SimpleType: DeleteRequest at 0", "INS SimpleType: DeleteRequest to CastExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: record to CastExpression at 1", "INS SimpleName: DeleteRequest to SimpleType: DeleteRequest at 0", "INS SimpleName: deleteRequest to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 56", "operations": ["INS SimpleType: SetDataRequest to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to SwitchStatement at 56", "INS SimpleType: SetDataRequest to CastExpression at 0", "INS SimpleName: SetDataRequest to SimpleType: SetDataRequest at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: record to CastExpression at 1", "INS SimpleName: SetDataRequest to SimpleType: SetDataRequest at 0", "INS SimpleName: setDataRequest to VariableDeclarationFragment at 0", "INS CastExpression to VariableDeclarationFragment at 1"]}, {"root": "INS BreakStatement to SwitchStatement at 70", "operations": ["INS BreakStatement to SwitchStatement at 70"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 73", "operations": ["INS SimpleName: SetACLRequest to SimpleType: SetACLRequest at 0", "INS VariableDeclarationStatement to SwitchStatement at 73", "INS SimpleType: SetACLRequest to VariableDeclarationStatement at 0", "INS SimpleName: SetACLRequest to SimpleType: SetACLRequest at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: SetACLRequest to CastExpression at 0", "INS SimpleName: record to CastExpression at 1", "INS SimpleName: setAclRequest to VariableDeclarationFragment at 0", "INS CastExpression to VariableDeclarationFragment at 1"]}, {"root": "INS BreakStatement to SwitchStatement at 98", "operations": ["INS BreakStatement to SwitchStatement at 98"]}, {"root": "INS BreakStatement to SwitchStatement at 104", "operations": ["INS BreakStatement to SwitchStatement at 104"]}, {"root": "INS SwitchCase to SwitchStatement at 105", "operations": ["INS SwitchCase to SwitchStatement at 105", "INS QualifiedName: OpCode.check to SwitchCase at 0"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 115", "operations": ["INS VariableDeclarationStatement to SwitchStatement at 115", "INS SimpleType: CheckVersionRequest to VariableDeclarationStatement at 0", "INS SimpleName: record to CastExpression at 1", "INS SimpleName: checkVersionRequest to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CheckVersionRequest to SimpleType: CheckVersionRequest at 0", "INS SimpleName: CheckVersionRequest to SimpleType: CheckVersionRequest at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: CheckVersionRequest to CastExpression at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 118", "operations": ["INS SimpleName: zks to MethodInvocation at 1", "INS QualifiedName: request.authInfo to MethodInvocation at 4", "INS QualifiedName: ZooDefs.Perms.READ to MethodInvocation at 3", "INS SimpleName: checkACL to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 118", "INS QualifiedName: nodeRecord.acl to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 119", "operations": ["INS SimpleName: version to Assignment: = at 0", "INS ExpressionStatement to SwitchStatement at 119", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 120", "operations": ["INS ExpressionStatement to SwitchStatement at 120", "INS SimpleName: getVersion to MethodInvocation at 1", "INS SimpleName: currentVersion to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: nodeRecord.stat to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to SwitchStatement at 121", "operations": ["INS SimpleName: version to InfixExpression: != at 0", "INS ThrowStatement to Block at 0", "INS Block to IfStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS IfStatement to SwitchStatement at 121", "INS InfixExpression: != to InfixExpression: && at 0", "INS QualifiedName: KeeperException.BadVersionException to SimpleType: KeeperException.BadVersionException at 0", "INS SimpleName: currentVersion to InfixExpression: != at 1", "INS SimpleType: KeeperException.BadVersionException to ClassInstanceCreation at 0", "INS SimpleName: version to InfixExpression: != at 0", "INS PrefixExpression: - to InfixExpression: != at 1", "INS SimpleName: path to ClassInstanceCreation at 1"]}, {"root": "INS ExpressionStatement to SwitchStatement at 122", "operations": ["INS SimpleName: version to Assignment: = at 0", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS ExpressionStatement to SwitchStatement at 122", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: currentVersion to InfixExpression: + at 0", "INS InfixExpression: + to Assignment: = at 1"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV MethodInvocation to ClassInstanceCreation at 4", "MOV SimpleType: TxnHeader to ClassInstanceCreation at 0"]}, {"root": "UPDATE from TxnHeader to CreateRequest", "operations": ["UPD SimpleName: TxnHeader from TxnHeader to CreateRequest"]}, {"root": "MOVE from SimpleType: CreateRequest", "operations": ["MOV SimpleName: TxnHeader to SimpleType: CreateRequest at 0"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "UPDATE from txnHeader to nodeRecord", "operations": ["UPD SimpleName: txnHeader from txnHeader to nodeRecord"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: request.hdr to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: nodeRecord to MethodInvocation at 0", "INS SimpleName: duplicate to MethodInvocation at 1"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "UPDATE from duplicate to path", "operations": ["UPD SimpleName: duplicate from duplicate to path", "UPD SimpleName: txnHeader from txnHeader to path"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleType: CheckVersionTxn to ClassInstanceCreation at 0", "INS SimpleName: version to ClassInstanceCreation at 2", "INS SimpleName: path to ClassInstanceCreation at 1", "INS SimpleName: CheckVersionTxn to SimpleType: CheckVersionTxn at 0", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from zks to checkVersionRequest", "operations": ["UPD SimpleName: zks from zks to checkVersionRequest", "UPD SimpleName: zks from zks to checkVersionRequest"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: zks to MethodInvocation at 0", "MOV SimpleName: getTime to MethodInvocation at 1"]}, {"root": "UPDATE from getTime to getPath", "operations": ["UPD SimpleName: getTime from getTime to getPath"]}, {"root": "UPDATE from nodeRecord to getRecordForPath", "operations": ["UPD SimpleName: nodeRecord from nodeRecord to getRecordForPath"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTime to MethodInvocation at 1", "MOV SimpleName: zks to MethodInvocation at 0"]}, {"root": "UPDATE from getTime to getVersion", "operations": ["UPD SimpleName: getTime from getTime to getVersion"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "UPDATE from getTime to getZxid", "operations": ["UPD SimpleName: getTime from getTime to getZxid"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTime to MethodInvocation at 1"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV MethodInvocation to ClassInstanceCreation at 4", "MOV SimpleType: TxnHeader to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: request.hdr to InfixExpression: != at 0", "operations": ["INS QualifiedName: request.hdr to InfixExpression: != at 0"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "INS QualifiedName: request.hdr to MethodInvocation at 0", "operations": ["INS QualifiedName: request.hdr to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS QualifiedName: request.txn to Assignment: = at 0", "operations": ["INS QualifiedName: request.txn to Assignment: = at 0"]}, {"root": "DEL QualifiedName: request.type", "operations": ["DEL QualifiedName: request.type"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getTime", "DEL SimpleName: txnHeader", "DEL Assignment: =", "DEL SimpleType: TxnHeader", "DEL SimpleName: zks", "DEL ExpressionStatement", "DEL QualifiedName: request.cxid", "DEL QualifiedName: request.sessionId", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL QualifiedName: OpCode.create"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: request.cxid", "DEL Assignment: =", "DEL QualifiedName: OpCode.delete", "DEL SimpleName: txnHeader", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL QualifiedName: request.sessionId"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MethodInvocation", "DEL QualifiedName: OpCode.setData", "DEL QualifiedName: request.sessionId", "DEL ClassInstanceCreation", "DEL SimpleName: TxnHeader", "DEL QualifiedName: request.cxid", "DEL SimpleType: TxnHeader", "DEL SimpleName: zks"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: request.sessionId", "DEL ExpressionStatement", "DEL SimpleName: txnHeader", "DEL ClassInstanceCreation", "DEL QualifiedName: OpCode.createSession", "DEL SimpleType: TxnHeader", "DEL QualifiedName: request.cxid", "DEL SimpleName: TxnHeader", "DEL MethodInvocation", "DEL Assignment: ="]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: TxnHeader", "DEL QualifiedName: OpCode.setACL", "DEL ClassInstanceCreation", "DEL SimpleName: TxnHeader", "DEL QualifiedName: request.sessionId", "DEL MethodInvocation", "DEL QualifiedName: request.cxid"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getZxid", "DEL SimpleName: txnHeader", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL QualifiedName: OpCode.closeSession", "DEL QualifiedName: request.sessionId", "DEL ClassInstanceCreation", "DEL QualifiedName: request.cxid"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL Block", "operations": ["DEL CatchClause", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL InfixExpression: !=", "DEL Block", "DEL Block", "DEL NullLiteral", "DEL SimpleName: txnHeader", "DEL SimpleName: txnHeader", "DEL QualifiedName: request.hdr", "DEL SimpleName: txnHeader", "DEL MethodInvocation", "DEL QualifiedName: OpCode.error", "DEL QualifiedName: request.txn", "DEL SimpleType: TxnHeader", "DEL Assignment: =", "DEL Block", "DEL NullLiteral", "DEL SimpleName: txn", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: TxnHeader", "DEL NullLiteral", "DEL SimpleName: setType", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: txnHeader", "DEL TryStatement", "DEL IfStatement", "DEL SimpleName: txn"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL SimpleName: txnHeader", "operations": ["DEL SimpleName: txnHeader"]}, {"root": "DEL SimpleName: txn", "operations": ["DEL SimpleName: txn"]}]}}, {"PrepRequestProcessor_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(2615) at 1", "Insert ImportDeclaration(22) into CompilationUnit(2615) at 3", "Insert ImportDeclaration(26) into CompilationUnit(2615) at 5", "Insert ImportDeclaration(34) into CompilationUnit(2615) at 9", "Insert ImportDeclaration(42) into CompilationUnit(2615) at 13", "Insert ImportDeclaration(52) into CompilationUnit(2615) at 18", "Insert ImportDeclaration(54) into CompilationUnit(2615) at 19", "Insert ImportDeclaration(78) into CompilationUnit(2615) at 31", "Insert ImportDeclaration(98) into CompilationUnit(2615) at 41", "Insert ImportDeclaration(100) into CompilationUnit(2615) at 42", "Insert ImportDeclaration(102) into CompilationUnit(2615) at 43", "Insert QualifiedName: java.io.ByteArrayOutputStream(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: java.util.ArrayList(21) into ImportDeclaration(22) at 0", "Insert QualifiedName: java.util.HashMap(25) into ImportDeclaration(26) at 0", "Insert QualifiedName: java.util.ListIterator(33) into ImportDeclaration(34) at 0", "Insert QualifiedName: org.apache.jute.BinaryOutputArchive(41) into ImportDeclaration(42) at 0", "Insert QualifiedName: org.apache.zookeeper.MultiTransactionRecord(51) into ImportDeclaration(52) at 0", "Insert QualifiedName: org.apache.zookeeper.Op(53) into ImportDeclaration(54) at 0", "Insert QualifiedName: org.apache.zookeeper.proto.CheckVersionRequest(77) into ImportDeclaration(78) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.CheckVersionTxn(97) into ImportDeclaration(98) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.Txn(99) into ImportDeclaration(100) at 0", "Insert QualifiedName: org.apache.zookeeper.txn.MultiTxn(101) into ImportDeclaration(102) at 0", "Insert MethodDeclaration(540) into TypeDeclaration: class(2614) at 17", "Insert MethodDeclaration(679) into TypeDeclaration: class(2614) at 18", "Insert MethodDeclaration(2329) into TypeDeclaration: class(2614) at 21", "Insert Javadoc(464) into MethodDeclaration(540) at 0", "Insert ParameterizedType: HashMap<String,ChangeRecord>(471) into MethodDeclaration(540) at 1", "Insert SimpleName: getPendingChanges(472) into MethodDeclaration(540) at 2", "Insert SingleVariableDeclaration(476) into MethodDeclaration(540) at 3", "Insert Block(539) into MethodDeclaration(540) at 4", "Insert Javadoc(550) into MethodDeclaration(679) at 0", "Insert PrimitiveType: void(551) into MethodDeclaration(679) at 1", "Insert SimpleName: rollbackPendingChanges(552) into MethodDeclaration(679) at 2", "Insert SingleVariableDeclaration(555) into MethodDeclaration(679) at 3", "Insert SingleVariableDeclaration(564) into MethodDeclaration(679) at 4", "Insert Block(678) into MethodDeclaration(679) at 5", "Insert Javadoc(840) into MethodDeclaration(1741) at 0", "Update SimpleName: pRequest(596) to pRequest2Txn", "Insert SingleVariableDeclaration(849) into MethodDeclaration(1741) at 5", "Insert SingleVariableDeclaration(852) into MethodDeclaration(1741) at 6", "Insert SingleVariableDeclaration(860) into MethodDeclaration(1741) at 8", "Insert SimpleType: KeeperException(862) into MethodDeclaration(1741) at 9", "Move Block(1532) into MethodDeclaration(1741) at 11", "Move Javadoc(590) into MethodDeclaration(2329) at 0", "Insert SingleMemberAnnotation(1750) into MethodDeclaration(2329) at 1", "Insert Modifier: protected(1751) into MethodDeclaration(2329) at 2", "Insert PrimitiveType: void(1752) into MethodDeclaration(2329) at 3", "Insert SimpleName: pRequest(1753) into MethodDeclaration(2329) at 4", "Insert SingleVariableDeclaration(1757) into MethodDeclaration(2329) at 5", "Insert Block(2328) into MethodDeclaration(2329) at 6", "Insert TagElement(461) into Javadoc(464) at 0", "Insert TagElement: @param(463) into Javadoc(464) at 1", "Insert SimpleType: HashMap(466) into ParameterizedType: HashMap<String,ChangeRecord>(471) at 0", "Insert SimpleType: String(468) into ParameterizedType: HashMap<String,ChangeRecord>(471) at 1", "Insert SimpleType: ChangeRecord(470) into ParameterizedType: HashMap<String,ChangeRecord>(471) at 2", "Insert SimpleType: MultiTransactionRecord(474) into SingleVariableDeclaration(476) at 0", "Insert SimpleName: multiRequest(475) into SingleVariableDeclaration(476) at 1", "Insert VariableDeclarationStatement(494) into Block(539) at 0", "Insert EnhancedForStatement(536) into Block(539) at 1", "Insert ReturnStatement(538) into Block(539) at 2", "Insert TagElement(545) into Javadoc(550) at 0", "Insert TagElement: @param(547) into Javadoc(550) at 1", "Insert TagElement: @param(549) into Javadoc(550) at 2", "Insert PrimitiveType: long(553) into SingleVariableDeclaration(555) at 0", "Insert SimpleName: zxid(554) into SingleVariableDeclaration(555) at 1", "Insert ParameterizedType: HashMap<String,ChangeRecord>(562) into SingleVariableDeclaration(564) at 0", "Insert SimpleName: pendingChangeRecords(563) into SingleVariableDeclaration(564) at 1", "Insert SynchronizedStatement(677) into Block(678) at 0", "Insert TagElement(831) into Javadoc(840) at 0", "Insert TagElement: @param(833) into Javadoc(840) at 1", "Insert TagElement: @param(835) into Javadoc(840) at 2", "Insert TagElement: @param(837) into Javadoc(840) at 3", "Insert TagElement: @param(839) into Javadoc(840) at 4", "Insert PrimitiveType: int(847) into SingleVariableDeclaration(849) at 0", "Insert SimpleName: type(848) into SingleVariableDeclaration(849) at 1", "Insert PrimitiveType: long(850) into SingleVariableDeclaration(852) at 0", "Insert SimpleName: zxid(851) into SingleVariableDeclaration(852) at 1", "Move SimpleType: Record(608) into SingleVariableDeclaration(860) at 0", "Insert SimpleName: record(859) into SingleVariableDeclaration(860) at 1", "Insert SimpleName: KeeperException(861) into SimpleType: KeeperException(862) at 0", "Insert ExpressionStatement(875) into Block(1740) at 0", "Move ExpressionStatement(1117) into SwitchStatement(1739) at 64", "Move ExpressionStatement(1212) into SwitchStatement(1739) at 82", "Move BreakStatement(1222) into SwitchStatement(1739) at 85", "Move ExpressionStatement(1239) into SwitchStatement(1739) at 110", "Move ExpressionStatement(1347) into SwitchStatement(1739) at 110", "Move ExpressionStatement(1378) into SwitchStatement(1739) at 89", "Move ExpressionStatement(1396) into SwitchStatement(1739) at 85", "Move ExpressionStatement(1428) into SwitchStatement(1739) at 110", "Move BreakStatement(1505) into SwitchStatement(1739) at 110", "Insert SimpleName: SuppressWarnings(1748) into SingleMemberAnnotation(1750) at 0", "Insert StringLiteral: \"unchecked\"(1749) into SingleMemberAnnotation(1750) at 1", "Insert SimpleType: Request(1755) into SingleVariableDeclaration(1757) at 0", "Insert SimpleName: request(1756) into SingleVariableDeclaration(1757) at 1", "Insert ExpressionStatement(1761) into Block(2328) at 0", "Insert ExpressionStatement(1765) into Block(2328) at 1", "Insert TryStatement(2316) into Block(2328) at 2", "Move ExpressionStatement(1684) into Block(2328) at 3", "Move ExpressionStatement(1689) into Block(2328) at 4", "Insert TextElement: Grab current pending change records for each op in a multi-op.(458) into TagElement(461) at 0", "Insert TextElement: This is used inside MultiOp error code path to rollback in the event(459) into TagElement(461) at 1", "Insert TextElement: of a failed multi-op.(460) into TagElement(461) at 2", "Insert SimpleName: multiRequest(462) into TagElement: @param(463) at 0", "Insert SimpleName: HashMap(465) into SimpleType: HashMap(466) at 0", "Insert SimpleName: String(467) into SimpleType: String(468) at 0", "Insert SimpleName: ChangeRecord(469) into SimpleType: ChangeRecord(470) at 0", "Insert SimpleName: MultiTransactionRecord(473) into SimpleType: MultiTransactionRecord(474) at 0", "Insert ParameterizedType: HashMap<String,ChangeRecord>(483) into VariableDeclarationStatement(494) at 0", "Insert VariableDeclarationFragment(493) into VariableDeclarationStatement(494) at 1", "Insert SingleVariableDeclaration(498) into EnhancedForStatement(536) at 0", "Insert SimpleName: multiRequest(499) into EnhancedForStatement(536) at 1", "Insert Block(535) into EnhancedForStatement(536) at 2", "Insert SimpleName: pendingChangeRecords(537) into ReturnStatement(538) at 0", "Insert TextElement: Rollback pending changes records from a failed multi-op.(541) into TagElement(545) at 0", "Insert TextElement: If a multi-op fails, we can't leave any invalid change records we created(542) into TagElement(545) at 1", "Insert TextElement: around. We also need to restore their prior value (if any) if their prior(543) into TagElement(545) at 2", "Insert TextElement: value is still valid.(544) into TagElement(545) at 3", "Insert SimpleName: zxid(546) into TagElement: @param(547) at 0", "Insert SimpleName: pendingChangeRecords(548) into TagElement: @param(549) at 0", "Insert SimpleType: HashMap(557) into ParameterizedType: HashMap<String,ChangeRecord>(562) at 0", "Insert SimpleType: String(559) into ParameterizedType: HashMap<String,ChangeRecord>(562) at 1", "Insert SimpleType: ChangeRecord(561) into ParameterizedType: HashMap<String,ChangeRecord>(562) at 2", "Insert QualifiedName: zks.outstandingChanges(565) into SynchronizedStatement(677) at 0", "Insert Block(676) into SynchronizedStatement(677) at 1", "Insert TextElement: This method will be called inside the ProcessRequestThread, which is a(829) into TagElement(831) at 0", "Insert TextElement: singleton, so there will be a single thread calling this code.(830) into TagElement(831) at 1", "Insert SimpleName: type(832) into TagElement: @param(833) at 0", "Insert SimpleName: zxid(834) into TagElement: @param(835) at 0", "Insert SimpleName: request(836) into TagElement: @param(837) at 0", "Insert SimpleName: record(838) into TagElement: @param(839) at 0", "Insert Assignment: =(874) into ExpressionStatement(875) at 0", "Insert SimpleName: type(876) into SwitchStatement(1739) at 0", "Insert VariableDeclarationStatement(895) into SwitchStatement(1739) at 3", "Insert VariableDeclarationStatement(1183) into SwitchStatement(1739) at 30", "Insert VariableDeclarationStatement(1342) into SwitchStatement(1739) at 49", "Insert BreakStatement(1425) into SwitchStatement(1739) at 61", "Insert VariableDeclarationStatement(1444) into SwitchStatement(1739) at 64", "Insert BreakStatement(1579) into SwitchStatement(1739) at 85", "Insert BreakStatement(1658) into SwitchStatement(1739) at 90", "Insert SwitchCase(1660) into SwitchStatement(1739) at 91", "Insert VariableDeclarationStatement(1677) into SwitchStatement(1739) at 93", "Insert ExpressionStatement(1696) into SwitchStatement(1739) at 96", "Insert ExpressionStatement(1702) into SwitchStatement(1739) at 97", "Insert ExpressionStatement(1708) into SwitchStatement(1739) at 98", "Insert IfStatement(1723) into SwitchStatement(1739) at 99", "Insert ExpressionStatement(1729) into SwitchStatement(1739) at 100", "Insert SimpleName: Request(1754) into SimpleType: Request(1755) at 0", "Insert Assignment: =(1760) into ExpressionStatement(1761) at 0", "Insert Assignment: =(1764) into ExpressionStatement(1765) at 0", "Insert Block(2178) into TryStatement(2316) at 0", "Insert CatchClause(2227) into TryStatement(2316) at 1", "Move CatchClause(1669) into TryStatement(2316) at 2", "Insert SimpleType: HashMap(478) into ParameterizedType: HashMap<String,ChangeRecord>(483) at 0", "Insert SimpleType: String(480) into ParameterizedType: HashMap<String,ChangeRecord>(483) at 1", "Insert SimpleType: ChangeRecord(482) into ParameterizedType: HashMap<String,ChangeRecord>(483) at 2", "Insert SimpleName: pendingChangeRecords(484) into VariableDeclarationFragment(493) at 0", "Insert ClassInstanceCreation(492) into VariableDeclarationFragment(493) at 1", "Insert SimpleType: Op(496) into SingleVariableDeclaration(498) at 0", "Insert SimpleName: op(497) into SingleVariableDeclaration(498) at 1", "Insert VariableDeclarationStatement(507) into Block(535) at 0", "Insert TryStatement(534) into Block(535) at 1", "Insert SimpleName: HashMap(556) into SimpleType: HashMap(557) at 0", "Insert SimpleName: String(558) into SimpleType: String(559) at 0", "Insert SimpleName: ChangeRecord(560) into SimpleType: ChangeRecord(561) at 0", "Insert VariableDeclarationStatement(579) into Block(676) at 0", "Insert WhileStatement(608) into Block(676) at 1", "Insert VariableDeclarationStatement(615) into Block(676) at 2", "Insert VariableDeclarationStatement(620) into Block(676) at 3", "Insert IfStatement(633) into Block(676) at 4", "Insert VariableDeclarationStatement(646) into Block(676) at 5", "Insert WhileStatement(675) into Block(676) at 6", "Insert QualifiedName: request.hdr(863) into Assignment: =(874) at 0", "Insert ClassInstanceCreation(873) into Assignment: =(874) at 1", "Insert SimpleType: CreateRequest(888) into VariableDeclarationStatement(895) at 0", "Insert VariableDeclarationFragment(894) into VariableDeclarationStatement(895) at 1", "Insert SimpleType: DeleteRequest(1176) into VariableDeclarationStatement(1183) at 0", "Insert VariableDeclarationFragment(1182) into VariableDeclarationStatement(1183) at 1", "Insert SimpleType: SetDataRequest(1335) into VariableDeclarationStatement(1342) at 0", "Insert VariableDeclarationFragment(1341) into VariableDeclarationStatement(1342) at 1", "Insert SimpleType: SetACLRequest(1437) into VariableDeclarationStatement(1444) at 0", "Insert VariableDeclarationFragment(1443) into VariableDeclarationStatement(1444) at 1", "Insert QualifiedName: OpCode.check(1659) into SwitchCase(1660) at 0", "Insert SimpleType: CheckVersionRequest(1670) into VariableDeclarationStatement(1677) at 0", "Insert VariableDeclarationFragment(1676) into VariableDeclarationStatement(1677) at 1", "Insert MethodInvocation(1695) into ExpressionStatement(1696) at 0", "Insert Assignment: =(1701) into ExpressionStatement(1702) at 0", "Insert Assignment: =(1707) into ExpressionStatement(1708) at 0", "Insert InfixExpression: &&(1716) into IfStatement(1723) at 0", "Insert Block(1722) into IfStatement(1723) at 1", "Insert Assignment: =(1728) into ExpressionStatement(1729) at 0", "Insert QualifiedName: request.hdr(1758) into Assignment: =(1760) at 0", "Insert NullLiteral(1759) into Assignment: =(1760) at 1", "Insert QualifiedName: request.txn(1762) into Assignment: =(1764) at 0", "Insert NullLiteral(1763) into Assignment: =(1764) at 1", "Insert SwitchStatement(2177) into Block(2178) at 0", "Move SingleVariableDeclaration(1536) into CatchClause(2227) at 0", "Insert Block(2226) into CatchClause(2227) at 1", "Insert SimpleName: HashMap(477) into SimpleType: HashMap(478) at 0", "Insert SimpleName: String(479) into SimpleType: String(480) at 0", "Insert SimpleName: ChangeRecord(481) into SimpleType: ChangeRecord(482) at 0", "Insert ParameterizedType: HashMap<String,ChangeRecord>(491) into ClassInstanceCreation(492) at 0", "Insert SimpleName: Op(495) into SimpleType: Op(496) at 0", "Insert SimpleType: String(501) into VariableDeclarationStatement(507) at 0", "Insert VariableDeclarationFragment(506) into VariableDeclarationStatement(507) at 1", "Insert Block(527) into TryStatement(534) at 0", "Insert CatchClause(533) into TryStatement(534) at 1", "Insert ParameterizedType: ListIterator<ChangeRecord>(570) into VariableDeclarationStatement(579) at 0", "Insert VariableDeclarationFragment(578) into VariableDeclarationStatement(579) at 1", "Insert MethodInvocation(582) into WhileStatement(608) at 0", "Insert Block(607) into WhileStatement(608) at 1", "Insert PrimitiveType: boolean(609) into VariableDeclarationStatement(615) at 0", "Insert VariableDeclarationFragment(614) into VariableDeclarationStatement(615) at 1", "Insert PrimitiveType: long(616) into VariableDeclarationStatement(620) at 0", "Insert VariableDeclarationFragment(619) into VariableDeclarationStatement(620) at 1", "Insert PrefixExpression: !(622) into IfStatement(633) at 0", "Insert Block(632) into IfStatement(633) at 1", "Insert ParameterizedType: Iterator<ChangeRecord>(638) into VariableDeclarationStatement(646) at 0", "Insert VariableDeclarationFragment(645) into VariableDeclarationStatement(646) at 1", "Insert MethodInvocation(649) into WhileStatement(675) at 0", "Insert Block(674) into WhileStatement(675) at 1", "Move SimpleType: TxnHeader(926) into ClassInstanceCreation(873) at 0", "Insert QualifiedName: request.sessionId(866) into ClassInstanceCreation(873) at 1", "Insert QualifiedName: request.cxid(867) into ClassInstanceCreation(873) at 2", "Insert SimpleName: zxid(868) into ClassInstanceCreation(873) at 3", "Move MethodInvocation(934) into ClassInstanceCreation(873) at 4", "Insert SimpleName: type(872) into ClassInstanceCreation(873) at 5", "Update SimpleName: TxnHeader(617) to CreateRequest", "Move SimpleName: TxnHeader(617) into SimpleType: CreateRequest(888) at 0", "Insert SimpleName: createRequest(889) into VariableDeclarationFragment(894) at 0", "Insert CastExpression(893) into VariableDeclarationFragment(894) at 1", "Insert QualifiedName: request.txn(1093) into Assignment: =(1108) at 0", "Insert SimpleName: DeleteRequest(1175) into SimpleType: DeleteRequest(1176) at 0", "Insert SimpleName: deleteRequest(1177) into VariableDeclarationFragment(1182) at 0", "Insert CastExpression(1181) into VariableDeclarationFragment(1182) at 1", "Insert QualifiedName: request.txn(1286) into Assignment: =(1291) at 0", "Insert SimpleName: SetDataRequest(1334) into SimpleType: SetDataRequest(1335) at 0", "Insert SimpleName: setDataRequest(1336) into VariableDeclarationFragment(1341) at 0", "Insert CastExpression(1340) into VariableDeclarationFragment(1341) at 1", "Insert QualifiedName: request.txn(1396) into Assignment: =(1405) at 0", "Update SimpleName: txnHeader(1103) to nodeRecord", "Insert MethodInvocation(1413) into Assignment: =(1414) at 1", "Insert SimpleName: SetACLRequest(1436) into SimpleType: SetACLRequest(1437) at 0", "Insert SimpleName: setAclRequest(1438) into VariableDeclarationFragment(1443) at 0", "Insert CastExpression(1442) into VariableDeclarationFragment(1443) at 1", "Insert QualifiedName: request.txn(1511) into Assignment: =(1520) at 0", "Insert QualifiedName: request.txn(1554) into Assignment: =(1559) at 0", "Insert SimpleName: CheckVersionRequest(1669) into SimpleType: CheckVersionRequest(1670) at 0", "Insert SimpleName: checkVersionRequest(1671) into VariableDeclarationFragment(1676) at 0", "Insert CastExpression(1675) into VariableDeclarationFragment(1676) at 1", "Update SimpleName: txnHeader(1225) to path", "Insert MethodInvocation(1681) into Assignment: =(1682) at 1", "Insert SimpleName: checkACL(1690) into MethodInvocation(1695) at 0", "Insert SimpleName: zks(1691) into MethodInvocation(1695) at 1", "Insert QualifiedName: nodeRecord.acl(1692) into MethodInvocation(1695) at 2", "Insert QualifiedName: ZooDefs.Perms.READ(1693) into MethodInvocation(1695) at 3", "Insert QualifiedName: request.authInfo(1694) into MethodInvocation(1695) at 4", "Insert SimpleName: version(1697) into Assignment: =(1701) at 0", "Insert MethodInvocation(1700) into Assignment: =(1701) at 1", "Insert SimpleName: currentVersion(1703) into Assignment: =(1707) at 0", "Insert MethodInvocation(1706) into Assignment: =(1707) at 1", "Insert InfixExpression: !=(1712) into InfixExpression: &&(1716) at 0", "Insert InfixExpression: !=(1715) into InfixExpression: &&(1716) at 1", "Insert ThrowStatement(1721) into Block(1722) at 0", "Insert SimpleName: version(1724) into Assignment: =(1728) at 0", "Insert InfixExpression: +(1727) into Assignment: =(1728) at 1", "Insert QualifiedName: request.txn(1730) into Assignment: =(1736) at 0", "Insert ClassInstanceCreation(1735) into Assignment: =(1736) at 1", "Insert QualifiedName: request.type(1766) into SwitchStatement(2177) at 0", "Insert SwitchCase(1768) into SwitchStatement(2177) at 1", "Move VariableDeclarationStatement(646) into SwitchStatement(2177) at 2", "Move ExpressionStatement(652) into SwitchStatement(2177) at 3", "Insert ExpressionStatement(1791) into SwitchStatement(2177) at 4", "Insert BreakStatement(1792) into SwitchStatement(2177) at 5", "Insert SwitchCase(1794) into SwitchStatement(2177) at 6", "Move VariableDeclarationStatement(954) into SwitchStatement(2177) at 7", "Move ExpressionStatement(960) into SwitchStatement(2177) at 8", "Insert ExpressionStatement(1817) into SwitchStatement(2177) at 9", "Insert BreakStatement(1818) into SwitchStatement(2177) at 10", "Insert SwitchCase(1820) into SwitchStatement(2177) at 11", "Move VariableDeclarationStatement(1133) into SwitchStatement(2177) at 12", "Move ExpressionStatement(1139) into SwitchStatement(2177) at 13", "Insert ExpressionStatement(1843) into SwitchStatement(2177) at 14", "Insert BreakStatement(1844) into SwitchStatement(2177) at 15", "Insert SwitchCase(1846) into SwitchStatement(2177) at 16", "Move VariableDeclarationStatement(1255) into SwitchStatement(2177) at 17", "Move ExpressionStatement(1261) into SwitchStatement(2177) at 18", "Insert ExpressionStatement(1869) into SwitchStatement(2177) at 19", "Insert BreakStatement(1870) into SwitchStatement(2177) at 20", "Insert SwitchCase(1872) into SwitchStatement(2177) at 21", "Insert VariableDeclarationStatement(1880) into SwitchStatement(2177) at 22", "Insert ExpressionStatement(1886) into SwitchStatement(2177) at 23", "Insert ExpressionStatement(1895) into SwitchStatement(2177) at 24", "Insert BreakStatement(1896) into SwitchStatement(2177) at 25", "Insert SwitchCase(1898) into SwitchStatement(2177) at 26", "Insert VariableDeclarationStatement(1906) into SwitchStatement(2177) at 27", "Insert ExpressionStatement(1912) into SwitchStatement(2177) at 28", "Insert VariableDeclarationStatement(1926) into SwitchStatement(2177) at 29", "Insert VariableDeclarationStatement(1933) into SwitchStatement(2177) at 30", "Insert VariableDeclarationStatement(1939) into SwitchStatement(2177) at 31", "Insert VariableDeclarationStatement(1952) into SwitchStatement(2177) at 32", "Insert VariableDeclarationStatement(1957) into SwitchStatement(2177) at 33", "Insert EnhancedForStatement(2116) into SwitchStatement(2177) at 34", "Insert ExpressionStatement(2129) into SwitchStatement(2177) at 35", "Insert ExpressionStatement(2136) into SwitchStatement(2177) at 36", "Insert BreakStatement(2137) into SwitchStatement(2177) at 37", "Insert SwitchCase(2139) into SwitchStatement(2177) at 38", "Insert SwitchCase(2141) into SwitchStatement(2177) at 39", "Insert ExpressionStatement(2150) into SwitchStatement(2177) at 40", "Insert BreakStatement(2151) into SwitchStatement(2177) at 41", "Move SwitchCase(1507) into SwitchStatement(2177) at 42", "Move SwitchCase(1509) into SwitchStatement(2177) at 43", "Move SwitchCase(1511) into SwitchStatement(2177) at 44", "Move SwitchCase(1513) into SwitchStatement(2177) at 45", "Move SwitchCase(1515) into SwitchStatement(2177) at 46", "Move SwitchCase(1517) into SwitchStatement(2177) at 47", "Move SwitchCase(1519) into SwitchStatement(2177) at 48", "Move SwitchCase(1521) into SwitchStatement(2177) at 49", "Insert ExpressionStatement(2175) into SwitchStatement(2177) at 50", "Insert BreakStatement(2176) into SwitchStatement(2177) at 51", "Insert IfStatement(2203) into Block(2226) at 0", "Move ExpressionStatement(1574) into Block(2226) at 1", "Move ExpressionStatement(1579) into Block(2226) at 2", "Insert SimpleType: HashMap(486) into ParameterizedType: HashMap<String,ChangeRecord>(491) at 0", "Insert SimpleType: String(488) into ParameterizedType: HashMap<String,ChangeRecord>(491) at 1", "Insert SimpleType: ChangeRecord(490) into ParameterizedType: HashMap<String,ChangeRecord>(491) at 2", "Insert SimpleName: String(500) into SimpleType: String(501) at 0", "Insert SimpleName: path(502) into VariableDeclarationFragment(506) at 0", "Insert MethodInvocation(505) into VariableDeclarationFragment(506) at 1", "Insert VariableDeclarationStatement(515) into Block(527) at 0", "Insert IfStatement(526) into Block(527) at 1", "Insert SingleVariableDeclaration(531) into CatchClause(533) at 0", "Insert Block(532) into CatchClause(533) at 1", "Insert SimpleType: ListIterator(567) into ParameterizedType: ListIterator<ChangeRecord>(570) at 0", "Insert SimpleType: ChangeRecord(569) into ParameterizedType: ListIterator<ChangeRecord>(570) at 1", "Insert SimpleName: iter(571) into VariableDeclarationFragment(578) at 0", "Insert MethodInvocation(577) into VariableDeclarationFragment(578) at 1", "Insert SimpleName: iter(580) into MethodInvocation(582) at 0", "Insert SimpleName: hasPrevious(581) into MethodInvocation(582) at 1", "Insert VariableDeclarationStatement(590) into Block(607) at 0", "Insert IfStatement(606) into Block(607) at 1", "Insert SimpleName: empty(610) into VariableDeclarationFragment(614) at 0", "Insert MethodInvocation(613) into VariableDeclarationFragment(614) at 1", "Insert SimpleName: firstZxid(617) into VariableDeclarationFragment(619) at 0", "Insert NumberLiteral: 0(618) into VariableDeclarationFragment(619) at 1", "Insert SimpleName: empty(621) into PrefixExpression: !(622) at 0", "Insert ExpressionStatement(631) into Block(632) at 0", "Insert SimpleType: Iterator(635) into ParameterizedType: Iterator<ChangeRecord>(638) at 0", "Insert SimpleType: ChangeRecord(637) into ParameterizedType: Iterator<ChangeRecord>(638) at 1", "Insert SimpleName: priorIter(639) into VariableDeclarationFragment(645) at 0", "Insert MethodInvocation(644) into VariableDeclarationFragment(645) at 1", "Insert SimpleName: priorIter(647) into MethodInvocation(649) at 0", "Insert SimpleName: hasNext(648) into MethodInvocation(649) at 1", "Insert VariableDeclarationStatement(657) into Block(674) at 0", "Insert IfStatement(667) into Block(674) at 1", "Insert ExpressionStatement(673) into Block(674) at 2", "Insert SimpleType: CreateRequest(891) into CastExpression(893) at 0", "Insert SimpleName: record(892) into CastExpression(893) at 1", "Insert SimpleType: DeleteRequest(1179) into CastExpression(1181) at 0", "Insert SimpleName: record(1180) into CastExpression(1181) at 1", "Insert SimpleType: SetDataRequest(1338) into CastExpression(1340) at 0", "Insert SimpleName: record(1339) into CastExpression(1340) at 1", "Insert SimpleName: nodeRecord(1408) into MethodInvocation(1413) at 0", "Insert SimpleName: duplicate(1409) into MethodInvocation(1413) at 1", "Insert MethodInvocation(1412) into MethodInvocation(1413) at 2", "Insert SimpleType: SetACLRequest(1440) into CastExpression(1442) at 0", "Insert SimpleName: record(1441) into CastExpression(1442) at 1", "Insert SimpleType: CheckVersionRequest(1673) into CastExpression(1675) at 0", "Insert SimpleName: record(1674) into CastExpression(1675) at 1", "Update SimpleName: zks(1233) to checkVersionRequest", "Move SimpleName: zks(1233) into MethodInvocation(1681) at 0", "Update SimpleName: getTime(1234) to getPath", "Move SimpleName: getTime(1234) into MethodInvocation(1681) at 1", "Update SimpleName: nodeRecord(1340) to getRecordForPath", "Update SimpleName: duplicate(1341) to path", "Update SimpleName: zks(1368) to checkVersionRequest", "Move SimpleName: zks(1368) into MethodInvocation(1700) at 0", "Update SimpleName: getTime(1369) to getVersion", "Move SimpleName: getTime(1369) into MethodInvocation(1700) at 1", "Insert QualifiedName: nodeRecord.stat(1704) into MethodInvocation(1706) at 0", "Insert SimpleName: getVersion(1705) into MethodInvocation(1706) at 1", "Insert SimpleName: version(1709) into InfixExpression: !=(1712) at 0", "Insert PrefixExpression: -(1711) into InfixExpression: !=(1712) at 1", "Insert SimpleName: version(1713) into InfixExpression: !=(1715) at 0", "Insert SimpleName: currentVersion(1714) into InfixExpression: !=(1715) at 1", "Insert ClassInstanceCreation(1720) into ThrowStatement(1721) at 0", "Insert SimpleName: currentVersion(1725) into InfixExpression: +(1727) at 0", "Insert NumberLiteral: 1(1726) into InfixExpression: +(1727) at 1", "Insert SimpleType: CheckVersionTxn(1732) into ClassInstanceCreation(1735) at 0", "Insert SimpleName: path(1733) into ClassInstanceCreation(1735) at 1", "Insert SimpleName: version(1734) into ClassInstanceCreation(1735) at 2", "Insert QualifiedName: OpCode.create(1767) into SwitchCase(1768) at 0", "Insert MethodInvocation(1790) into ExpressionStatement(1791) at 0", "Insert QualifiedName: OpCode.delete(1793) into SwitchCase(1794) at 0", "Insert MethodInvocation(1816) into ExpressionStatement(1817) at 0", "Insert QualifiedName: OpCode.setData(1819) into SwitchCase(1820) at 0", "Insert MethodInvocation(1842) into ExpressionStatement(1843) at 0", "Insert QualifiedName: OpCode.setACL(1845) into SwitchCase(1846) at 0", "Insert MethodInvocation(1868) into ExpressionStatement(1869) at 0", "Insert QualifiedName: OpCode.check(1871) into SwitchCase(1872) at 0", "Insert SimpleType: CheckVersionRequest(1874) into VariableDeclarationStatement(1880) at 0", "Insert VariableDeclarationFragment(1879) into VariableDeclarationStatement(1880) at 1", "Insert MethodInvocation(1885) into ExpressionStatement(1886) at 0", "Insert MethodInvocation(1894) into ExpressionStatement(1895) at 0", "Insert QualifiedName: OpCode.multi(1897) into SwitchCase(1898) at 0", "Insert SimpleType: MultiTransactionRecord(1900) into VariableDeclarationStatement(1906) at 0", "Insert VariableDeclarationFragment(1905) into VariableDeclarationStatement(1906) at 1", "Insert MethodInvocation(1911) into ExpressionStatement(1912) at 0", "Insert ParameterizedType: List<Txn>(1917) into VariableDeclarationStatement(1926) at 0", "Insert VariableDeclarationFragment(1925) into VariableDeclarationStatement(1926) at 1", "Insert PrimitiveType: long(1927) into VariableDeclarationStatement(1933) at 0", "Insert VariableDeclarationFragment(1932) into VariableDeclarationStatement(1933) at 1", "Insert SimpleType: KeeperException(1935) into VariableDeclarationStatement(1939) at 0", "Insert VariableDeclarationFragment(1938) into VariableDeclarationStatement(1939) at 1", "Insert ParameterizedType: HashMap<String,ChangeRecord>(1946) into VariableDeclarationStatement(1952) at 0", "Insert VariableDeclarationFragment(1951) into VariableDeclarationStatement(1952) at 1", "Insert PrimitiveType: int(1953) into VariableDeclarationStatement(1957) at 0", "Insert VariableDeclarationFragment(1956) into VariableDeclarationStatement(1957) at 1", "Insert SingleVariableDeclaration(1961) into EnhancedForStatement(2116) at 0", "Insert SimpleName: multiRequest(1962) into EnhancedForStatement(2116) at 1", "Insert Block(2115) into EnhancedForStatement(2116) at 2", "Insert Assignment: =(2128) into ExpressionStatement(2129) at 0", "Insert Assignment: =(2135) into ExpressionStatement(2136) at 0", "Insert QualifiedName: OpCode.createSession(2138) into SwitchCase(2139) at 0", "Insert QualifiedName: OpCode.closeSession(2140) into SwitchCase(2141) at 0", "Insert MethodInvocation(2149) into ExpressionStatement(2150) at 0", "Insert MethodInvocation(2174) into ExpressionStatement(2175) at 0", "Insert InfixExpression: !=(2185) into IfStatement(2203) at 0", "Insert Block(2202) into IfStatement(2203) at 1", "Insert SimpleName: HashMap(485) into SimpleType: HashMap(486) at 0", "Insert SimpleName: String(487) into SimpleType: String(488) at 0", "Insert SimpleName: ChangeRecord(489) into SimpleType: ChangeRecord(490) at 0", "Insert SimpleName: op(503) into MethodInvocation(505) at 0", "Insert SimpleName: getPath(504) into MethodInvocation(505) at 1", "Insert SimpleType: ChangeRecord(509) into VariableDeclarationStatement(515) at 0", "Insert VariableDeclarationFragment(514) into VariableDeclarationStatement(515) at 1", "Insert InfixExpression: !=(518) into IfStatement(526) at 0", "Insert Block(525) into IfStatement(526) at 1", "Insert SimpleType: KeeperException.NoNodeException(529) into SingleVariableDeclaration(531) at 0", "Insert SimpleName: e(530) into SingleVariableDeclaration(531) at 1", "Insert SimpleName: ListIterator(566) into SimpleType: ListIterator(567) at 0", "Insert SimpleName: ChangeRecord(568) into SimpleType: ChangeRecord(569) at 0", "Insert QualifiedName: zks.outstandingChanges(572) into MethodInvocation(577) at 0", "Insert SimpleName: listIterator(573) into MethodInvocation(577) at 1", "Insert MethodInvocation(576) into MethodInvocation(577) at 2", "Insert SimpleType: ChangeRecord(584) into VariableDeclarationStatement(590) at 0", "Insert VariableDeclarationFragment(589) into VariableDeclarationStatement(590) at 1", "Insert InfixExpression: ==(593) into IfStatement(606) at 0", "Insert Block(603) into IfStatement(606) at 1", "Insert Block(605) into IfStatement(606) at 2", "Insert QualifiedName: zks.outstandingChanges(611) into MethodInvocation(613) at 0", "Insert SimpleName: isEmpty(612) into MethodInvocation(613) at 1", "Insert Assignment: =(630) into ExpressionStatement(631) at 0", "Insert SimpleName: Iterator(634) into SimpleType: Iterator(635) at 0", "Insert SimpleName: ChangeRecord(636) into SimpleType: ChangeRecord(637) at 0", "Insert MethodInvocation(642) into MethodInvocation(644) at 0", "Insert SimpleName: iterator(643) into MethodInvocation(644) at 1", "Insert SimpleType: ChangeRecord(651) into VariableDeclarationStatement(657) at 0", "Insert VariableDeclarationFragment(656) into VariableDeclarationStatement(657) at 1", "Insert InfixExpression: &&(664) into IfStatement(667) at 0", "Insert Block(666) into IfStatement(667) at 1", "Insert MethodInvocation(672) into ExpressionStatement(673) at 0", "Insert SimpleName: CreateRequest(890) into SimpleType: CreateRequest(891) at 0", "Insert QualifiedName: request.hdr(1131) into MethodInvocation(1133) at 0", "Insert QualifiedName: request.hdr(1152) into MethodInvocation(1154) at 0", "Insert SimpleName: DeleteRequest(1178) into SimpleType: DeleteRequest(1179) at 0", "Insert QualifiedName: request.hdr(1296) into MethodInvocation(1298) at 0", "Insert QualifiedName: request.hdr(1312) into MethodInvocation(1314) at 0", "Insert SimpleName: SetDataRequest(1337) into SimpleType: SetDataRequest(1338) at 0", "Insert QualifiedName: request.hdr(1410) into MethodInvocation(1412) at 0", "Update SimpleName: getTime(1112) to getZxid", "Move SimpleName: getTime(1112) into MethodInvocation(1412) at 1", "Insert SimpleName: SetACLRequest(1439) into SimpleType: SetACLRequest(1440) at 0", "Insert QualifiedName: request.hdr(1525) into MethodInvocation(1527) at 0", "Insert SimpleName: CheckVersionRequest(1672) into SimpleType: CheckVersionRequest(1673) at 0", "Insert NumberLiteral: 1(1710) into PrefixExpression: -(1711) at 0", "Insert SimpleType: KeeperException.BadVersionException(1718) into ClassInstanceCreation(1720) at 0", "Insert SimpleName: path(1719) into ClassInstanceCreation(1720) at 1", "Insert SimpleName: CheckVersionTxn(1731) into SimpleType: CheckVersionTxn(1732) at 0", "Insert SimpleName: pRequest2Txn(1783) into MethodInvocation(1790) at 0", "Insert QualifiedName: request.type(1784) into MethodInvocation(1790) at 1", "Move MethodInvocation(1421) into MethodInvocation(1790) at 2", "Insert SimpleName: request(1788) into MethodInvocation(1790) at 3", "Insert SimpleName: createRequest(1789) into MethodInvocation(1790) at 4", "Insert SimpleName: pRequest2Txn(1809) into MethodInvocation(1816) at 0", "Insert QualifiedName: request.type(1810) into MethodInvocation(1816) at 1", "Move MethodInvocation(1367) into MethodInvocation(1816) at 2", "Insert SimpleName: request(1814) into MethodInvocation(1816) at 3", "Insert SimpleName: deleteRequest(1815) into MethodInvocation(1816) at 4", "Insert SimpleName: pRequest2Txn(1835) into MethodInvocation(1842) at 0", "Insert QualifiedName: request.type(1836) into MethodInvocation(1842) at 1", "Move MethodInvocation(1232) into MethodInvocation(1842) at 2", "Insert SimpleName: request(1840) into MethodInvocation(1842) at 3", "Insert SimpleName: setDataRequest(1841) into MethodInvocation(1842) at 4", "Insert SimpleName: pRequest2Txn(1861) into MethodInvocation(1868) at 0", "Insert QualifiedName: request.type(1862) into MethodInvocation(1868) at 1", "Move MethodInvocation(1110) into MethodInvocation(1868) at 2", "Insert SimpleName: request(1866) into MethodInvocation(1868) at 3", "Insert SimpleName: setAclRequest(1867) into MethodInvocation(1868) at 4", "Insert SimpleName: CheckVersionRequest(1873) into SimpleType: CheckVersionRequest(1874) at 0", "Insert SimpleName: checkRequest(1875) into VariableDeclarationFragment(1879) at 0", "Insert ClassInstanceCreation(1878) into VariableDeclarationFragment(1879) at 1", "Insert SimpleName: ZooKeeperServer(1881) into MethodInvocation(1885) at 0", "Insert SimpleName: byteBuffer2Record(1882) into MethodInvocation(1885) at 1", "Insert QualifiedName: request.request(1883) into MethodInvocation(1885) at 2", "Insert SimpleName: checkRequest(1884) into MethodInvocation(1885) at 3", "Insert SimpleName: pRequest2Txn(1887) into MethodInvocation(1894) at 0", "Insert QualifiedName: request.type(1888) into MethodInvocation(1894) at 1", "Move MethodInvocation(931) into MethodInvocation(1894) at 2", "Insert SimpleName: request(1892) into MethodInvocation(1894) at 3", "Insert SimpleName: checkRequest(1893) into MethodInvocation(1894) at 4", "Insert SimpleName: MultiTransactionRecord(1899) into SimpleType: MultiTransactionRecord(1900) at 0", "Insert SimpleName: multiRequest(1901) into VariableDeclarationFragment(1905) at 0", "Insert ClassInstanceCreation(1904) into VariableDeclarationFragment(1905) at 1", "Insert SimpleName: ZooKeeperServer(1907) into MethodInvocation(1911) at 0", "Insert SimpleName: byteBuffer2Record(1908) into MethodInvocation(1911) at 1", "Insert QualifiedName: request.request(1909) into MethodInvocation(1911) at 2", "Insert SimpleName: multiRequest(1910) into MethodInvocation(1911) at 3", "Insert SimpleType: List(1914) into ParameterizedType: List<Txn>(1917) at 0", "Insert SimpleType: Txn(1916) into ParameterizedType: List<Txn>(1917) at 1", "Insert SimpleName: txns(1918) into VariableDeclarationFragment(1925) at 0", "Insert ClassInstanceCreation(1924) into VariableDeclarationFragment(1925) at 1", "Insert SimpleName: zxid(1928) into VariableDeclarationFragment(1932) at 0", "Insert MethodInvocation(1931) into VariableDeclarationFragment(1932) at 1", "Insert SimpleName: KeeperException(1934) into SimpleType: KeeperException(1935) at 0", "Insert SimpleName: ke(1936) into VariableDeclarationFragment(1938) at 0", "Insert NullLiteral(1937) into VariableDeclarationFragment(1938) at 1", "Insert SimpleType: HashMap(1941) into ParameterizedType: HashMap<String,ChangeRecord>(1946) at 0", "Insert SimpleType: String(1943) into ParameterizedType: HashMap<String,ChangeRecord>(1946) at 1", "Insert SimpleType: ChangeRecord(1945) into ParameterizedType: HashMap<String,ChangeRecord>(1946) at 2", "Insert SimpleName: pendingChanges(1947) into VariableDeclarationFragment(1951) at 0", "Insert MethodInvocation(1950) into VariableDeclarationFragment(1951) at 1", "Insert SimpleName: index(1954) into VariableDeclarationFragment(1956) at 0", "Insert NumberLiteral: 0(1955) into VariableDeclarationFragment(1956) at 1", "Insert SimpleType: Op(1959) into SingleVariableDeclaration(1961) at 0", "Insert SimpleName: op(1960) into SingleVariableDeclaration(1961) at 1", "Insert VariableDeclarationStatement(1970) into Block(2115) at 0", "Insert IfStatement(2064) into Block(2115) at 1", "Insert VariableDeclarationStatement(2072) into Block(2115) at 2", "Insert VariableDeclarationStatement(2081) into Block(2115) at 3", "Insert ExpressionStatement(2087) into Block(2115) at 4", "Insert VariableDeclarationStatement(2098) into Block(2115) at 5", "Insert ExpressionStatement(2111) into Block(2115) at 6", "Insert ExpressionStatement(2114) into Block(2115) at 7", "Insert QualifiedName: request.hdr(2117) into Assignment: =(2128) at 0", "Insert ClassInstanceCreation(2127) into Assignment: =(2128) at 1", "Insert QualifiedName: request.txn(2130) into Assignment: =(2135) at 0", "Insert ClassInstanceCreation(2134) into Assignment: =(2135) at 1", "Insert SimpleName: pRequest2Txn(2142) into MethodInvocation(2149) at 0", "Insert QualifiedName: request.type(2143) into MethodInvocation(2149) at 1", "Move MethodInvocation(623) into MethodInvocation(2149) at 2", "Insert SimpleName: request(2147) into MethodInvocation(2149) at 3", "Insert NullLiteral(2148) into MethodInvocation(2149) at 4", "Insert QualifiedName: zks.sessionTracker(2168) into MethodInvocation(2174) at 0", "Insert SimpleName: checkSession(2169) into MethodInvocation(2174) at 1", "Insert QualifiedName: request.sessionId(2170) into MethodInvocation(2174) at 2", "Insert MethodInvocation(2173) into MethodInvocation(2174) at 3", "Insert QualifiedName: request.hdr(2183) into InfixExpression: !=(2185) at 0", "Insert NullLiteral(2184) into InfixExpression: !=(2185) at 1", "Insert ExpressionStatement(2190) into Block(2202) at 0", "Insert ExpressionStatement(2201) into Block(2202) at 1", "Insert QualifiedName: request.hdr(2295) into InfixExpression: !=(2297) at 0", "Insert SimpleName: ChangeRecord(508) into SimpleType: ChangeRecord(509) at 0", "Insert SimpleName: cr(510) into VariableDeclarationFragment(514) at 0", "Insert MethodInvocation(513) into VariableDeclarationFragment(514) at 1", "Insert SimpleName: cr(516) into InfixExpression: !=(518) at 0", "Insert NullLiteral(517) into InfixExpression: !=(518) at 1", "Insert ExpressionStatement(524) into Block(525) at 0", "Insert QualifiedName: KeeperException.NoNodeException(528) into SimpleType: KeeperException.NoNodeException(529) at 0", "Insert QualifiedName: zks.outstandingChanges(574) into MethodInvocation(576) at 0", "Insert SimpleName: size(575) into MethodInvocation(576) at 1", "Insert SimpleName: ChangeRecord(583) into SimpleType: ChangeRecord(584) at 0", "Insert SimpleName: c(585) into VariableDeclarationFragment(589) at 0", "Insert MethodInvocation(588) into VariableDeclarationFragment(589) at 1", "Insert QualifiedName: c.zxid(591) into InfixExpression: ==(593) at 0", "Insert SimpleName: zxid(592) into InfixExpression: ==(593) at 1", "Insert ExpressionStatement(597) into Block(603) at 0", "Insert ExpressionStatement(602) into Block(603) at 1", "Insert BreakStatement(604) into Block(605) at 0", "Insert SimpleName: firstZxid(623) into Assignment: =(630) at 0", "Insert FieldAccess(629) into Assignment: =(630) at 1", "Insert SimpleName: pendingChangeRecords(640) into MethodInvocation(642) at 0", "Insert SimpleName: values(641) into MethodInvocation(642) at 1", "Insert SimpleName: ChangeRecord(650) into SimpleType: ChangeRecord(651) at 0", "Insert SimpleName: c(652) into VariableDeclarationFragment(656) at 0", "Insert MethodInvocation(655) into VariableDeclarationFragment(656) at 1", "Insert PrefixExpression: !(659) into InfixExpression: &&(664) at 0", "Insert ParenthesizedExpression(663) into InfixExpression: &&(664) at 1", "Insert ContinueStatement(665) into Block(666) at 0", "Insert QualifiedName: zks.outstandingChangesForPath(668) into MethodInvocation(672) at 0", "Insert SimpleName: put(669) into MethodInvocation(672) at 1", "Insert QualifiedName: c.path(670) into MethodInvocation(672) at 2", "Insert SimpleName: c(671) into MethodInvocation(672) at 3", "Insert QualifiedName: KeeperException.BadVersionException(1717) into SimpleType: KeeperException.BadVersionException(1718) at 0", "Insert SimpleType: CheckVersionRequest(1877) into ClassInstanceCreation(1878) at 0", "Insert SimpleType: MultiTransactionRecord(1903) into ClassInstanceCreation(1904) at 0", "Insert SimpleName: List(1913) into SimpleType: List(1914) at 0", "Insert SimpleName: Txn(1915) into SimpleType: Txn(1916) at 0", "Insert ParameterizedType: ArrayList<Txn>(1923) into ClassInstanceCreation(1924) at 0", "Insert SimpleName: zks(1929) into MethodInvocation(1931) at 0", "Insert SimpleName: getNextZxid(1930) into MethodInvocation(1931) at 1", "Insert SimpleName: HashMap(1940) into SimpleType: HashMap(1941) at 0", "Insert SimpleName: String(1942) into SimpleType: String(1943) at 0", "Insert SimpleName: ChangeRecord(1944) into SimpleType: ChangeRecord(1945) at 0", "Insert SimpleName: getPendingChanges(1948) into MethodInvocation(1950) at 0", "Insert SimpleName: multiRequest(1949) into MethodInvocation(1950) at 1", "Insert SimpleName: Op(1958) into SimpleType: Op(1959) at 0", "Insert SimpleType: Record(1964) into VariableDeclarationStatement(1970) at 0", "Insert VariableDeclarationFragment(1969) into VariableDeclarationStatement(1970) at 1", "Insert InfixExpression: !=(1973) into IfStatement(2064) at 0", "Insert Block(1988) into IfStatement(2064) at 1", "Insert Block(2063) into IfStatement(2064) at 2", "Insert SimpleType: ByteArrayOutputStream(2066) into VariableDeclarationStatement(2072) at 0", "Insert VariableDeclarationFragment(2071) into VariableDeclarationStatement(2072) at 1", "Insert SimpleType: BinaryOutputArchive(2074) into VariableDeclarationStatement(2081) at 0", "Insert VariableDeclarationFragment(2080) into VariableDeclarationStatement(2081) at 1", "Insert MethodInvocation(2086) into ExpressionStatement(2087) at 0", "Insert SimpleType: ByteBuffer(2089) into VariableDeclarationStatement(2098) at 0", "Insert VariableDeclarationFragment(2097) into VariableDeclarationStatement(2098) at 1", "Insert MethodInvocation(2110) into ExpressionStatement(2111) at 0", "Insert PostfixExpression: ++(2113) into ExpressionStatement(2114) at 0", "Move SimpleType: TxnHeader(1416) into ClassInstanceCreation(2127) at 0", "Insert QualifiedName: request.sessionId(2120) into ClassInstanceCreation(2127) at 1", "Insert QualifiedName: request.cxid(2121) into ClassInstanceCreation(2127) at 2", "Insert SimpleName: zxid(2122) into ClassInstanceCreation(2127) at 3", "Move MethodInvocation(1424) into ClassInstanceCreation(2127) at 4", "Insert QualifiedName: request.type(2126) into ClassInstanceCreation(2127) at 5", "Insert SimpleType: MultiTxn(2132) into ClassInstanceCreation(2134) at 0", "Insert SimpleName: txns(2133) into ClassInstanceCreation(2134) at 1", "Insert SimpleName: request(2171) into MethodInvocation(2173) at 0", "Insert SimpleName: getOwner(2172) into MethodInvocation(2173) at 1", "Insert MethodInvocation(2189) into ExpressionStatement(2190) at 0", "Insert Assignment: =(2200) into ExpressionStatement(2201) at 0", "Insert SimpleName: getRecordForPath(511) into MethodInvocation(513) at 0", "Insert SimpleName: path(512) into MethodInvocation(513) at 1", "Insert MethodInvocation(523) into ExpressionStatement(524) at 0", "Insert SimpleName: iter(586) into MethodInvocation(588) at 0", "Insert SimpleName: previous(587) into MethodInvocation(588) at 1", "Insert MethodInvocation(596) into ExpressionStatement(597) at 0", "Insert MethodInvocation(601) into ExpressionStatement(602) at 0", "Insert MethodInvocation(627) into FieldAccess(629) at 0", "Insert SimpleName: zxid(628) into FieldAccess(629) at 1", "Insert SimpleName: priorIter(653) into MethodInvocation(655) at 0", "Insert SimpleName: next(654) into MethodInvocation(655) at 1", "Insert SimpleName: empty(658) into PrefixExpression: !(659) at 0", "Insert InfixExpression: <(662) into ParenthesizedExpression(663) at 0", "Insert SimpleName: CheckVersionRequest(1876) into SimpleType: CheckVersionRequest(1877) at 0", "Insert SimpleName: MultiTransactionRecord(1902) into SimpleType: MultiTransactionRecord(1903) at 0", "Insert SimpleType: ArrayList(1920) into ParameterizedType: ArrayList<Txn>(1923) at 0", "Insert SimpleType: Txn(1922) into ParameterizedType: ArrayList<Txn>(1923) at 1", "Insert SimpleName: Record(1963) into SimpleType: Record(1964) at 0", "Insert SimpleName: subrequest(1965) into VariableDeclarationFragment(1969) at 0", "Insert MethodInvocation(1968) into VariableDeclarationFragment(1969) at 1", "Insert SimpleName: ke(1971) into InfixExpression: !=(1973) at 0", "Insert NullLiteral(1972) into InfixExpression: !=(1973) at 1", "Insert ExpressionStatement(1978) into Block(1988) at 0", "Insert ExpressionStatement(1987) into Block(1988) at 1", "Insert TryStatement(2062) into Block(2063) at 0", "Insert SimpleName: ByteArrayOutputStream(2065) into SimpleType: ByteArrayOutputStream(2066) at 0", "Insert SimpleName: baos(2067) into VariableDeclarationFragment(2071) at 0", "Insert ClassInstanceCreation(2070) into VariableDeclarationFragment(2071) at 1", "Insert SimpleName: BinaryOutputArchive(2073) into SimpleType: BinaryOutputArchive(2074) at 0", "Insert SimpleName: boa(2075) into VariableDeclarationFragment(2080) at 0", "Insert MethodInvocation(2079) into VariableDeclarationFragment(2080) at 1", "Insert QualifiedName: request.txn(2082) into MethodInvocation(2086) at 0", "Insert SimpleName: serialize(2083) into MethodInvocation(2086) at 1", "Insert SimpleName: boa(2084) into MethodInvocation(2086) at 2", "Insert StringLiteral: \"request\"(2085) into MethodInvocation(2086) at 3", "Insert SimpleName: ByteBuffer(2088) into SimpleType: ByteBuffer(2089) at 0", "Insert SimpleName: bb(2090) into VariableDeclarationFragment(2097) at 0", "Insert MethodInvocation(2096) into VariableDeclarationFragment(2097) at 1", "Insert SimpleName: txns(2099) into MethodInvocation(2110) at 0", "Insert SimpleName: add(2100) into MethodInvocation(2110) at 1", "Insert ClassInstanceCreation(2109) into MethodInvocation(2110) at 2", "Insert SimpleName: index(2112) into PostfixExpression: ++(2113) at 0", "Insert SimpleName: MultiTxn(2131) into SimpleType: MultiTxn(2132) at 0", "Insert QualifiedName: request.hdr(2186) into MethodInvocation(2189) at 0", "Insert SimpleName: setType(2187) into MethodInvocation(2189) at 1", "Insert QualifiedName: OpCode.error(2188) into MethodInvocation(2189) at 2", "Insert QualifiedName: request.txn(2191) into Assignment: =(2200) at 0", "Insert ClassInstanceCreation(2199) into Assignment: =(2200) at 1", "Insert QualifiedName: request.hdr(2298) into MethodInvocation(2301) at 0", "Insert QualifiedName: request.txn(2303) into Assignment: =(2310) at 0", "Insert SimpleName: pendingChangeRecords(519) into MethodInvocation(523) at 0", "Insert SimpleName: put(520) into MethodInvocation(523) at 1", "Insert SimpleName: path(521) into MethodInvocation(523) at 2", "Insert SimpleName: cr(522) into MethodInvocation(523) at 3", "Insert SimpleName: iter(594) into MethodInvocation(596) at 0", "Insert SimpleName: remove(595) into MethodInvocation(596) at 1", "Insert QualifiedName: zks.outstandingChangesForPath(598) into MethodInvocation(601) at 0", "Insert SimpleName: remove(599) into MethodInvocation(601) at 1", "Insert QualifiedName: c.path(600) into MethodInvocation(601) at 2", "Insert QualifiedName: zks.outstandingChanges(624) into MethodInvocation(627) at 0", "Insert SimpleName: get(625) into MethodInvocation(627) at 1", "Insert NumberLiteral: 0(626) into MethodInvocation(627) at 2", "Insert QualifiedName: c.zxid(660) into InfixExpression: <(662) at 0", "Insert SimpleName: firstZxid(661) into InfixExpression: <(662) at 1", "Insert SimpleName: ArrayList(1919) into SimpleType: ArrayList(1920) at 0", "Insert SimpleName: Txn(1921) into SimpleType: Txn(1922) at 0", "Insert SimpleName: op(1966) into MethodInvocation(1968) at 0", "Insert SimpleName: toRequestRecord(1967) into MethodInvocation(1968) at 1", "Insert MethodInvocation(1977) into ExpressionStatement(1978) at 0", "Insert Assignment: =(1986) into ExpressionStatement(1987) at 0", "Insert Block(1998) into TryStatement(2062) at 0", "Insert CatchClause(2061) into TryStatement(2062) at 1", "Insert SimpleType: ByteArrayOutputStream(2069) into ClassInstanceCreation(2070) at 0", "Insert SimpleName: BinaryOutputArchive(2076) into MethodInvocation(2079) at 0", "Insert SimpleName: getArchive(2077) into MethodInvocation(2079) at 1", "Insert SimpleName: baos(2078) into MethodInvocation(2079) at 2", "Insert SimpleName: ByteBuffer(2091) into MethodInvocation(2096) at 0", "Insert SimpleName: wrap(2092) into MethodInvocation(2096) at 1", "Insert MethodInvocation(2095) into MethodInvocation(2096) at 2", "Insert SimpleType: Txn(2102) into ClassInstanceCreation(2109) at 0", "Insert MethodInvocation(2105) into ClassInstanceCreation(2109) at 1", "Insert MethodInvocation(2108) into ClassInstanceCreation(2109) at 2", "Insert SimpleType: ErrorTxn(2193) into ClassInstanceCreation(2199) at 0", "Insert MethodInvocation(2198) into ClassInstanceCreation(2199) at 1", "Insert QualifiedName: request.hdr(1634) into MethodInvocation(1636) at 0", "Insert QualifiedName: request.hdr(1974) into MethodInvocation(1977) at 0", "Insert SimpleName: setType(1975) into MethodInvocation(1977) at 1", "Insert QualifiedName: OpCode.error(1976) into MethodInvocation(1977) at 2", "Insert QualifiedName: request.txn(1979) into Assignment: =(1986) at 0", "Insert ClassInstanceCreation(1985) into Assignment: =(1986) at 1", "Insert ExpressionStatement(1997) into Block(1998) at 0", "Insert SingleVariableDeclaration(2002) into CatchClause(2061) at 0", "Insert Block(2060) into CatchClause(2061) at 1", "Insert SimpleName: ByteArrayOutputStream(2068) into SimpleType: ByteArrayOutputStream(2069) at 0", "Insert SimpleName: baos(2093) into MethodInvocation(2095) at 0", "Insert SimpleName: toByteArray(2094) into MethodInvocation(2095) at 1", "Insert SimpleName: Txn(2101) into SimpleType: Txn(2102) at 0", "Insert QualifiedName: request.hdr(2103) into MethodInvocation(2105) at 0", "Insert SimpleName: getType(2104) into MethodInvocation(2105) at 1", "Insert SimpleName: bb(2106) into MethodInvocation(2108) at 0", "Insert SimpleName: array(2107) into MethodInvocation(2108) at 1", "Insert SimpleName: ErrorTxn(2192) into SimpleType: ErrorTxn(2193) at 0", "Insert MethodInvocation(2196) into MethodInvocation(2198) at 0", "Insert SimpleName: intValue(2197) into MethodInvocation(2198) at 1", "Insert SimpleType: ErrorTxn(1981) into ClassInstanceCreation(1985) at 0", "Insert MethodInvocation(1984) into ClassInstanceCreation(1985) at 1", "Insert MethodInvocation(1996) into ExpressionStatement(1997) at 0", "Insert SimpleType: KeeperException(2000) into SingleVariableDeclaration(2002) at 0", "Insert SimpleName: e(2001) into SingleVariableDeclaration(2002) at 1", "Insert IfStatement(2011) into Block(2060) at 0", "Insert ExpressionStatement(2016) into Block(2060) at 1", "Move ExpressionStatement(1555) into Block(2060) at 2", "Insert ExpressionStatement(2044) into Block(2060) at 3", "Insert ExpressionStatement(2049) into Block(2060) at 4", "Insert ExpressionStatement(2054) into Block(2060) at 5", "Insert ExpressionStatement(2059) into Block(2060) at 6", "Insert SimpleName: e(2194) into MethodInvocation(2196) at 0", "Insert SimpleName: code(2195) into MethodInvocation(2196) at 1", "Insert SimpleName: ErrorTxn(1980) into SimpleType: ErrorTxn(1981) at 0", "Insert QualifiedName: Code.RUNTIMEINCONSISTENCY(1982) into MethodInvocation(1984) at 0", "Insert SimpleName: intValue(1983) into MethodInvocation(1984) at 1", "Insert SimpleName: pRequest2Txn(1989) into MethodInvocation(1996) at 0", "Insert MethodInvocation(1992) into MethodInvocation(1996) at 1", "Insert SimpleName: zxid(1993) into MethodInvocation(1996) at 2", "Insert SimpleName: request(1994) into MethodInvocation(1996) at 3", "Insert SimpleName: subrequest(1995) into MethodInvocation(1996) at 4", "Insert SimpleName: KeeperException(1999) into SimpleType: KeeperException(2000) at 0", "Insert InfixExpression: ==(2005) into IfStatement(2011) at 0", "Insert Block(2010) into IfStatement(2011) at 1", "Insert MethodInvocation(2015) into ExpressionStatement(2016) at 0", "Insert MethodInvocation(2043) into ExpressionStatement(2044) at 0", "Insert MethodInvocation(2048) into ExpressionStatement(2049) at 0", "Insert MethodInvocation(2053) into ExpressionStatement(2054) at 0", "Insert MethodInvocation(2058) into ExpressionStatement(2059) at 0", "Insert SimpleName: op(1990) into MethodInvocation(1992) at 0", "Insert SimpleName: getType(1991) into MethodInvocation(1992) at 1", "Insert SimpleName: ke(2003) into InfixExpression: ==(2005) at 0", "Insert NullLiteral(2004) into InfixExpression: ==(2005) at 1", "Insert ExpressionStatement(2009) into Block(2010) at 0", "Insert QualifiedName: request.hdr(2012) into MethodInvocation(2015) at 0", "Insert SimpleName: setType(2013) into MethodInvocation(2015) at 1", "Insert QualifiedName: OpCode.error(2014) into MethodInvocation(2015) at 2", "Insert QualifiedName: request.txn(2017) into Assignment: =(2026) at 0", "Insert SimpleName: LOG(2028) into MethodInvocation(2043) at 0", "Insert SimpleName: error(2029) into MethodInvocation(2043) at 1", "Insert InfixExpression: +(2042) into MethodInvocation(2043) at 2", "Insert SimpleName: LOG(2045) into MethodInvocation(2048) at 0", "Insert SimpleName: error(2046) into MethodInvocation(2048) at 1", "Insert StringLiteral: \">>>> ABORTING remaing MultiOp ops\"(2047) into MethodInvocation(2048) at 2", "Insert SimpleName: request(2050) into MethodInvocation(2053) at 0", "Insert SimpleName: setException(2051) into MethodInvocation(2053) at 1", "Insert SimpleName: e(2052) into MethodInvocation(2053) at 2", "Insert SimpleName: rollbackPendingChanges(2055) into MethodInvocation(2058) at 0", "Insert SimpleName: zxid(2056) into MethodInvocation(2058) at 1", "Insert SimpleName: pendingChanges(2057) into MethodInvocation(2058) at 2", "Insert Assignment: =(2008) into ExpressionStatement(2009) at 0", "Insert StringLiteral: \">>>> Got user-level KeeperException when processing \"(2030) into InfixExpression: +(2042) at 0", "Insert MethodInvocation(2033) into InfixExpression: +(2042) at 1", "Insert StringLiteral: \" Error Path:\"(2034) into InfixExpression: +(2042) at 2", "Insert MethodInvocation(2037) into InfixExpression: +(2042) at 3", "Insert StringLiteral: \" Error:\"(2038) into InfixExpression: +(2042) at 4", "Insert MethodInvocation(2041) into InfixExpression: +(2042) at 5", "Insert SimpleName: ke(2006) into Assignment: =(2008) at 0", "Insert SimpleName: e(2007) into Assignment: =(2008) at 1", "Insert SimpleName: request(2031) into MethodInvocation(2033) at 0", "Insert SimpleName: toString(2032) into MethodInvocation(2033) at 1", "Insert SimpleName: e(2035) into MethodInvocation(2037) at 0", "Insert SimpleName: getPath(2036) into MethodInvocation(2037) at 1", "Insert SimpleName: e(2039) into MethodInvocation(2041) at 0", "Insert SimpleName: getMessage(2040) into MethodInvocation(2041) at 1", "Delete QualifiedName: request.type(613)", "Delete SimpleName: txnHeader(616)", "Delete SimpleType: TxnHeader(618)", "Delete QualifiedName: request.sessionId(619)", "Delete QualifiedName: request.cxid(620)", "Delete SimpleName: zks(624)", "Delete SimpleName: getTime(625)", "Delete MethodInvocation(626)", "Delete QualifiedName: OpCode.create(627)", "Delete ClassInstanceCreation(628)", "Delete Assignment: =(629)", "Delete ExpressionStatement(630)", "Delete SimpleName: txn(850)", "Delete SimpleName: txnHeader(888)", "Delete SimpleName: txnHeader(909)", "Delete SimpleName: txnHeader(924)", "Delete QualifiedName: request.sessionId(927)", "Delete QualifiedName: request.cxid(928)", "Delete QualifiedName: OpCode.delete(935)", "Delete ClassInstanceCreation(936)", "Delete Assignment: =(937)", "Delete ExpressionStatement(938)", "Delete SimpleName: txn(1063)", "Delete SimpleName: txnHeader(1073)", "Delete SimpleName: txnHeader(1089)", "Delete SimpleName: txn(1193)", "Delete SimpleName: TxnHeader(1104)", "Delete SimpleType: TxnHeader(1105)", "Delete QualifiedName: request.sessionId(1106)", "Delete QualifiedName: request.cxid(1107)", "Delete SimpleName: zks(1111)", "Delete MethodInvocation(1113)", "Delete QualifiedName: OpCode.setData(1114)", "Delete ClassInstanceCreation(1115)", "Delete SimpleName: txn(1328)", "Delete SimpleName: txnHeader(1207)", "Delete BreakStatement(1357)", "Delete SimpleName: txnHeader(1360)", "Delete SimpleName: TxnHeader(1361)", "Delete SimpleType: TxnHeader(1362)", "Delete QualifiedName: request.sessionId(1363)", "Delete QualifiedName: request.cxid(1364)", "Delete MethodInvocation(1370)", "Delete QualifiedName: OpCode.createSession(1371)", "Delete ClassInstanceCreation(1372)", "Delete Assignment: =(1373)", "Delete ExpressionStatement(1374)", "Delete SimpleName: txn(1386)", "Delete BreakStatement(1411)", "Delete SimpleName: txnHeader(1481)", "Delete SimpleName: TxnHeader(1226)", "Delete SimpleType: TxnHeader(1227)", "Delete QualifiedName: request.sessionId(1228)", "Delete QualifiedName: request.cxid(1229)", "Delete MethodInvocation(1235)", "Delete QualifiedName: OpCode.setACL(1236)", "Delete ClassInstanceCreation(1237)", "Delete SimpleName: txnHeader(1342)", "Delete SimpleName: getZxid(1343)", "Delete MethodInvocation(1344)", "Delete SimpleName: txnHeader(1414)", "Delete QualifiedName: request.sessionId(1417)", "Delete QualifiedName: request.cxid(1418)", "Delete QualifiedName: OpCode.closeSession(1425)", "Delete ClassInstanceCreation(1426)", "Delete BreakStatement(1530)", "Delete SimpleName: TxnHeader(601)", "Delete SimpleType: TxnHeader(602)", "Delete SimpleName: txnHeader(603)", "Delete NullLiteral(604)", "Delete VariableDeclarationFragment(605)", "Delete VariableDeclarationStatement(606)", "Delete SimpleName: txn(609)", "Delete NullLiteral(610)", "Delete VariableDeclarationFragment(611)", "Delete VariableDeclarationStatement(612)", "Delete SimpleName: txnHeader(1537)", "Delete NullLiteral(1538)", "Delete InfixExpression: !=(1539)", "Delete SimpleName: txnHeader(1540)", "Delete SimpleName: setType(1541)", "Delete QualifiedName: OpCode.error(1542)", "Delete MethodInvocation(1543)", "Delete ExpressionStatement(1544)", "Delete Block(1556)", "Delete IfStatement(1557)", "Delete Block(1580)", "Delete CatchClause(1581)", "Delete TryStatement(1670)", "Delete QualifiedName: request.hdr(1671)", "Delete SimpleName: txnHeader(1672)", "Delete Assignment: =(1673)", "Delete ExpressionStatement(1674)", "Delete QualifiedName: request.txn(1675)", "Delete SimpleName: txn(1676)", "Delete Assignment: =(1677)", "Delete ExpressionStatement(1678)", "Delete Block(1690)", "Delete SimpleName: txn(1545)", "Delete SimpleName: txnHeader(1649)", "Delete SimpleName: txnHeader(1652)", "Delete SimpleName: txn(1657)"]}}, {"Request_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV ReturnStatement to SwitchStatement at 18", "MOV ReturnStatement to SwitchStatement at 16", "MOV SwitchCase to SwitchStatement at 8"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 13"]}, {"root": "INS SwitchCase to SwitchStatement at 9", "operations": ["INS QualifiedName: OpCode.multi to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 9"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV ReturnStatement to SwitchStatement at 21", "MOV ReturnStatement to SwitchStatement at 19"]}, {"root": "INS SwitchCase to SwitchStatement at 20", "operations": ["INS SwitchCase to SwitchStatement at 20"]}, {"root": "INS SwitchCase to SwitchStatement at 15", "operations": ["INS SwitchCase to SwitchStatement at 15", "INS QualifiedName: OpCode.multi to SwitchCase at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 17", "operations": ["INS SwitchCase to SwitchStatement at 17"]}, {"root": "INS ReturnStatement to SwitchStatement at 14", "operations": ["INS ReturnStatement to SwitchStatement at 14", "INS StringLiteral: \"check\" to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 15", "operations": ["INS QualifiedName: OpCode.multi to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 15"]}, {"root": "INS ReturnStatement to SwitchStatement at 16", "operations": ["INS ReturnStatement to SwitchStatement at 16", "INS StringLiteral: \"multi\" to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 37", "operations": ["INS SwitchCase to SwitchStatement at 37"]}, {"root": "INS QualifiedName: OpCode.check to SwitchCase at 0", "operations": ["INS QualifiedName: OpCode.check to SwitchCase at 0"]}, {"root": "INS QualifiedName: OpCode.check to SwitchCase at 0", "operations": ["INS QualifiedName: OpCode.check to SwitchCase at 0"]}, {"root": "INS QualifiedName: OpCode.check to SwitchCase at 0", "operations": ["INS QualifiedName: OpCode.check to SwitchCase at 0"]}]}}, {"Request_diff": {"operations": ["Move SwitchCase(302) into SwitchStatement(309) at 8", "Move SwitchCase(421) into SwitchStatement(442) at 13", "Insert SwitchCase(285) into SwitchStatement(309) at 9", "Move ReturnStatement(342) into SwitchStatement(309) at 19", "Insert SwitchCase(306) into SwitchStatement(309) at 20", "Move ReturnStatement(345) into SwitchStatement(309) at 21", "Insert SwitchCase(348) into SwitchStatement(354) at 15", "Move ReturnStatement(301) into SwitchStatement(354) at 16", "Insert SwitchCase(351) into SwitchStatement(354) at 17", "Move ReturnStatement(304) into SwitchStatement(354) at 18", "Insert ReturnStatement(392) into SwitchStatement(442) at 14", "Insert SwitchCase(394) into SwitchStatement(442) at 15", "Insert ReturnStatement(396) into SwitchStatement(442) at 16", "Insert SwitchCase(437) into SwitchStatement(442) at 37", "Insert QualifiedName: OpCode.check(282) into SwitchCase(283) at 0", "Insert QualifiedName: OpCode.multi(284) into SwitchCase(285) at 0", "Insert QualifiedName: OpCode.check(345) into SwitchCase(346) at 0", "Insert QualifiedName: OpCode.multi(347) into SwitchCase(348) at 0", "Insert QualifiedName: OpCode.check(389) into SwitchCase(390) at 0", "Insert StringLiteral: \"check\"(391) into ReturnStatement(392) at 0", "Insert QualifiedName: OpCode.multi(393) into SwitchCase(394) at 0", "Insert StringLiteral: \"multi\"(395) into ReturnStatement(396) at 0"]}}, {"RequestProcessor_cluster": {"actions": [{"root": "UPDATE from have slightly different RequestProcessors changed together. to have slightly different RequestProcessors chained together.", "operations": ["UPD TextElement: have slightly different RequestProcessors changed together. from have slightly different RequestProcessors changed together. to have slightly different RequestProcessors chained together."]}]}}, {"RequestProcessor_diff": {"operations": ["Update TextElement: have slightly different RequestProcessors changed together.(19) to have slightly different RequestProcessors chained together."]}}, {"TraceFormatter_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 13"]}, {"root": "INS ReturnStatement to SwitchStatement at 14", "operations": ["INS ReturnStatement to SwitchStatement at 14", "INS StringLiteral: \"multi\" to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 31", "operations": ["INS SwitchCase to SwitchStatement at 31"]}, {"root": "INS QualifiedName: OpCode.multi to SwitchCase at 0", "operations": ["INS QualifiedName: OpCode.multi to SwitchCase at 0"]}]}}, {"TraceFormatter_diff": {"operations": ["Move SwitchCase(97) into SwitchStatement(106) at 13", "Insert ReturnStatement(68) into SwitchStatement(106) at 14", "Insert SwitchCase(101) into SwitchStatement(106) at 31", "Insert QualifiedName: OpCode.multi(65) into SwitchCase(66) at 0", "Insert StringLiteral: \"multi\"(67) into ReturnStatement(68) at 0"]}}, {"CommitProcessor_cluster": {"actions": [{"root": "INS SwitchCase to SwitchStatement at 4", "operations": ["INS SwitchCase to SwitchStatement at 4", "INS QualifiedName: OpCode.multi to SwitchCase at 0"]}]}}, {"CommitProcessor_diff": {"operations": ["Insert SwitchCase(323) into SwitchStatement(357) at 4", "Insert QualifiedName: OpCode.multi(322) into SwitchCase(323) at 0"]}}], "commit_stats": [{"total_files": 30, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}