{"application": "google-gson", "csha": "0b6bbaf5f182acfddb696096fbf56366f1e8c72a", "files": [{"JsonArrayDeserializationVisitor_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collection", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: add", "DEL EnhancedForStatement", "DEL SimpleName: collection", "DEL SimpleName: childType", "DEL SimpleName: child", "DEL SimpleName: Object", "DEL SimpleName: childType", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: Collection", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: Type", "DEL SimpleType: Object", "DEL SimpleName: visitChild", "DEL SimpleName: jsonChild", "DEL SimpleName: Collection", "DEL SimpleName: collection", "DEL VariableDeclarationStatement", "DEL SimpleName: collection", "DEL SimpleType: Type", "DEL SimpleName: child", "DEL MethodInvocation", "DEL SimpleName: TypeUtils", "DEL SimpleName: getAsJsonArray", "DEL SimpleName: JsonElement", "DEL MethodInvocation", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: Type", "DEL TypeLiteral", "DEL InfixExpression: +", "DEL SimpleName: jsonChild", "DEL StringLiteral: \" must not be a raw collection. Try making it genericized instead.\"", "DEL SimpleType: JsonElement", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SingleMemberAnnotation", "DEL SimpleName: JsonParseException", "DEL StringLiteral: \"unchecked\"", "DEL SimpleName: json", "DEL Block", "DEL SimpleType: JsonParseException", "DEL Block", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL ThrowStatement", "DEL SimpleType: Type", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: getActualTypeForFirstTypeVariable", "DEL SimpleName: collectionType", "DEL SimpleName: visitCollection", "DEL SimpleName: Object", "DEL SimpleType: Object", "DEL SimpleName: childType", "DEL SimpleName: collectionType"]}]}}, {"JsonArrayDeserializationVisitor_diff": {"operations": ["Delete QualifiedName: java.util.Collection(8)", "Delete ImportDeclaration(9)", "Delete SimpleName: SuppressWarnings(312)", "Delete StringLiteral: \"unchecked\"(313)", "Delete SingleMemberAnnotation(314)", "Delete Modifier: public(315)", "Delete PrimitiveType: void(316)", "Delete SimpleName: visitCollection(317)", "Delete SimpleName: Collection(318)", "Delete SimpleType: Collection(319)", "Delete SimpleName: collection(320)", "Delete SingleVariableDeclaration(321)", "Delete SimpleName: Type(322)", "Delete SimpleType: Type(323)", "Delete SimpleName: collectionType(324)", "Delete SingleVariableDeclaration(325)", "Delete SimpleName: Type(326)", "Delete SimpleType: Type(327)", "Delete SimpleName: childType(328)", "Delete SimpleName: TypeUtils(329)", "Delete SimpleName: getActualTypeForFirstTypeVariable(330)", "Delete SimpleName: collectionType(331)", "Delete MethodInvocation(332)", "Delete VariableDeclarationFragment(333)", "Delete VariableDeclarationStatement(334)", "Delete SimpleName: JsonElement(335)", "Delete SimpleType: JsonElement(336)", "Delete SimpleName: jsonChild(337)", "Delete SingleVariableDeclaration(338)", "Delete SimpleName: json(339)", "Delete SimpleName: getAsJsonArray(340)", "Delete MethodInvocation(341)", "Delete SimpleName: childType(342)", "Delete SimpleName: Object(343)", "Delete SimpleType: Object(344)", "Delete TypeLiteral(345)", "Delete InfixExpression: ==(346)", "Delete SimpleName: JsonParseException(347)", "Delete SimpleType: JsonParseException(348)", "Delete SimpleName: collection(349)", "Delete StringLiteral: \" must not be a raw collection. Try making it genericized instead.\"(350)", "Delete InfixExpression: +(351)", "Delete ClassInstanceCreation(352)", "Delete ThrowStatement(353)", "Delete Block(354)", "Delete IfStatement(355)", "Delete SimpleName: Object(356)", "Delete SimpleType: Object(357)", "Delete SimpleName: child(358)", "Delete SimpleName: visitChild(359)", "Delete SimpleName: childType(360)", "Delete SimpleName: jsonChild(361)", "Delete MethodInvocation(362)", "Delete VariableDeclarationFragment(363)", "Delete VariableDeclarationStatement(364)", "Delete SimpleName: collection(365)", "Delete SimpleName: add(366)", "Delete SimpleName: child(367)", "Delete MethodInvocation(368)", "Delete ExpressionStatement(369)", "Delete Block(370)", "Delete EnhancedForStatement(371)", "Delete Block(372)", "Delete MethodDeclaration(373)"]}}, {"JsonObjectDeserializationVisitor_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: componentType", "DEL SimpleName: IllegalStateException", "DEL PrimitiveType: void", "DEL SimpleName: visitCollection", "DEL ThrowStatement", "DEL SimpleType: IllegalStateException", "DEL SimpleType: Type", "DEL SimpleName: collection", "DEL SimpleName: Type", "DEL Block", "DEL StringLiteral: \"unchecked\"", "DEL SimpleType: Collection", "DEL SingleMemberAnnotation", "DEL Modifier: public", "DEL SimpleName: Collection", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: SuppressWarnings"]}]}}, {"JsonObjectDeserializationVisitor_diff": {"operations": ["Delete Modifier: public(106)", "Delete PrimitiveType: void(107)", "Delete SimpleName: visitCollection(108)", "Delete SimpleName: SuppressWarnings(109)", "Delete StringLiteral: \"unchecked\"(110)", "Delete SingleMemberAnnotation(111)", "Delete SimpleName: Collection(112)", "Delete SimpleType: Collection(113)", "Delete SimpleName: collection(114)", "Delete SingleVariableDeclaration(115)", "Delete SimpleName: Type(116)", "Delete SimpleType: Type(117)", "Delete SimpleName: componentType(118)", "Delete SingleVariableDeclaration(119)", "Delete SimpleName: IllegalStateException(120)", "Delete SimpleType: IllegalStateException(121)", "Delete ClassInstanceCreation(122)", "Delete ThrowStatement(123)", "Delete Block(124)", "Delete MethodDeclaration(125)"]}}, {"JsonPrimitiveDeserializationVisitor_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: IllegalStateException", "DEL SimpleType: Type", "DEL SimpleName: visitCollection", "DEL StringLiteral: \"unchecked\"", "DEL Block", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: Collection", "DEL SimpleName: Type", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: collection", "DEL SingleMemberAnnotation", "DEL SimpleName: SuppressWarnings", "DEL ThrowStatement", "DEL SimpleType: Collection", "DEL PrimitiveType: void", "DEL SimpleName: IllegalStateException", "DEL ClassInstanceCreation", "DEL SimpleName: componentType"]}]}}, {"JsonPrimitiveDeserializationVisitor_diff": {"operations": ["Delete QualifiedName: java.util.Collection(6)", "Delete ImportDeclaration(7)", "Delete Modifier: public(103)", "Delete PrimitiveType: void(104)", "Delete SimpleName: visitCollection(105)", "Delete SimpleName: SuppressWarnings(106)", "Delete StringLiteral: \"unchecked\"(107)", "Delete SingleMemberAnnotation(108)", "Delete SimpleName: Collection(109)", "Delete SimpleType: Collection(110)", "Delete SimpleName: collection(111)", "Delete SingleVariableDeclaration(112)", "Delete SimpleName: Type(113)", "Delete SimpleType: Type(114)", "Delete SimpleName: componentType(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: IllegalStateException(117)", "Delete SimpleType: IllegalStateException(118)", "Delete ClassInstanceCreation(119)", "Delete ThrowStatement(120)", "Delete Block(121)", "Delete MethodDeclaration(122)"]}}, {"JsonSerializationVisitor_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Type", "DEL SimpleType: Object", "DEL SimpleType: Type", "DEL SimpleName: JsonArray", "DEL SimpleName: collectionType", "DEL SimpleName: assignToRoot", "DEL SimpleType: Object", "DEL SingleMemberAnnotation", "DEL SimpleName: visitCollection", "DEL SimpleName: Type", "DEL SimpleName: Object", "DEL Assignment: =", "DEL SimpleName: TypeUtils", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getActualTypeForFirstTypeVariable", "DEL SingleVariableDeclaration", "DEL EnhancedForStatement", "DEL IfStatement", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL SimpleName: childType", "DEL SimpleName: childType", "DEL SimpleName: child", "DEL InfixExpression: &&", "DEL Block", "DEL SimpleName: collectionType", "DEL SimpleName: child", "DEL InfixExpression: ==", "DEL SimpleName: getClass", "DEL NullLiteral", "DEL SimpleName: addAsArrayElement", "DEL PrimitiveType: void", "DEL SimpleName: collection", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL SimpleType: Type", "DEL ExpressionStatement", "DEL SimpleType: JsonArray", "DEL SimpleName: Collection", "DEL SimpleName: collection", "DEL SimpleName: childType", "DEL MethodInvocation", "DEL SimpleType: Collection", "DEL StringLiteral: \"unchecked\"", "DEL MethodDeclaration", "DEL SimpleName: child", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL InfixExpression: !=", "DEL Modifier: public", "DEL Block", "DEL SimpleName: childType", "DEL ExpressionStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: child", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: SuppressWarnings"]}]}}, {"JsonSerializationVisitor_diff": {"operations": ["Delete SimpleName: SuppressWarnings(203)", "Delete StringLiteral: \"unchecked\"(204)", "Delete SingleMemberAnnotation(205)", "Delete Modifier: public(206)", "Delete PrimitiveType: void(207)", "Delete SimpleName: visitCollection(208)", "Delete SimpleName: Collection(209)", "Delete SimpleType: Collection(210)", "Delete SimpleName: collection(211)", "Delete SingleVariableDeclaration(212)", "Delete SimpleName: Type(213)", "Delete SimpleType: Type(214)", "Delete SimpleName: collectionType(215)", "Delete SingleVariableDeclaration(216)", "Delete SimpleName: assignToRoot(217)", "Delete SimpleName: JsonArray(218)", "Delete SimpleType: JsonArray(219)", "Delete ClassInstanceCreation(220)", "Delete MethodInvocation(221)", "Delete ExpressionStatement(222)", "Delete SimpleName: Object(223)", "Delete SimpleType: Object(224)", "Delete SimpleName: child(225)", "Delete SingleVariableDeclaration(226)", "Delete SimpleName: collection(227)", "Delete SimpleName: Type(228)", "Delete SimpleType: Type(229)", "Delete SimpleName: childType(230)", "Delete SimpleName: TypeUtils(231)", "Delete SimpleName: getActualTypeForFirstTypeVariable(232)", "Delete SimpleName: collectionType(233)", "Delete MethodInvocation(234)", "Delete VariableDeclarationFragment(235)", "Delete VariableDeclarationStatement(236)", "Delete SimpleName: childType(237)", "Delete SimpleName: Object(238)", "Delete SimpleType: Object(239)", "Delete TypeLiteral(240)", "Delete InfixExpression: ==(241)", "Delete SimpleName: child(242)", "Delete NullLiteral(243)", "Delete InfixExpression: !=(244)", "Delete InfixExpression: &&(245)", "Delete SimpleName: childType(246)", "Delete SimpleName: child(247)", "Delete SimpleName: getClass(248)", "Delete MethodInvocation(249)", "Delete Assignment: =(250)", "Delete ExpressionStatement(251)", "Delete Block(252)", "Delete IfStatement(253)", "Delete SimpleName: addAsArrayElement(254)", "Delete SimpleName: childType(255)", "Delete SimpleName: child(256)", "Delete MethodInvocation(257)", "Delete ExpressionStatement(258)", "Delete Block(259)", "Delete EnhancedForStatement(260)", "Delete Block(261)", "Delete MethodDeclaration(262)"]}}, {"ObjectNavigator_cluster": {"actions": [{"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collection", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: Type", "DEL SimpleName: collection", "DEL SimpleName: visitCollection", "DEL SimpleName: componentType", "DEL SimpleName: Collection", "DEL SimpleType: Collection", "DEL TextElement:  the type of each element of the component", "DEL TextElement: This is called to visit the current object if it is an iterable", "DEL StringLiteral: \"unchecked\"", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL PrimitiveType: void", "DEL TagElement", "DEL SingleMemberAnnotation", "DEL SimpleName: componentType", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: Type", "DEL Javadoc", "DEL SingleVariableDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: objTypeInfo", "DEL SimpleName: isCollectionOrArray"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL MethodInvocation", "DEL SimpleName: Collection", "DEL Block", "DEL SimpleName: obj", "DEL WildcardType: ?", "DEL ExpressionStatement", "DEL SimpleType: Collection", "DEL CastExpression", "DEL IfStatement", "DEL ParameterizedType: Collection<?>", "DEL SimpleName: objType", "DEL SimpleName: visitor", "DEL SimpleName: visitCollection"]}]}}, {"ObjectNavigator_diff": {"operations": ["Move MethodInvocation(376) into IfStatement(431) at 0", "Move Block(383) into IfStatement(431) at 1", "Delete QualifiedName: java.util.Collection(8)", "Delete ImportDeclaration(9)", "Delete TextElement: This is called to visit the current object if it is an iterable(41)", "Delete TagElement(42)", "Delete SimpleName: componentType(43)", "Delete TextElement:  the type of each element of the component(44)", "Delete TagElement: @param(45)", "Delete Javadoc(46)", "Delete PrimitiveType: void(47)", "Delete SimpleName: visitCollection(48)", "Delete SimpleName: SuppressWarnings(49)", "Delete StringLiteral: \"unchecked\"(50)", "Delete SingleMemberAnnotation(51)", "Delete SimpleName: Collection(52)", "Delete SimpleType: Collection(53)", "Delete SimpleName: collection(54)", "Delete SingleVariableDeclaration(55)", "Delete SimpleName: Type(56)", "Delete SimpleType: Type(57)", "Delete SimpleName: componentType(58)", "Delete SingleVariableDeclaration(59)", "Delete MethodDeclaration(60)", "Delete SimpleName: objTypeInfo(371)", "Delete SimpleName: isCollectionOrArray(372)", "Delete MethodInvocation(373)", "Delete SimpleName: visitor(384)", "Delete SimpleName: visitCollection(385)", "Delete SimpleName: Collection(386)", "Delete SimpleType: Collection(387)", "Delete WildcardType: ?(388)", "Delete ParameterizedType: Collection<?>(389)", "Delete SimpleName: obj(390)", "Delete CastExpression(391)", "Delete SimpleName: objType(392)", "Delete MethodInvocation(393)", "Delete ExpressionStatement(394)", "Delete Block(395)", "Delete IfStatement(396)", "Delete Block(397)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}