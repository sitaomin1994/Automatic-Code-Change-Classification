{"application": "apache-nutch", "csha": "260615cc687f45bfde71e4895a59ac5730304c83", "files": [{"Fetcher_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: hash to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: content to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: hash to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS Block to IfStatement at 2", "INS SimpleName: hash to Assignment: = at 0", "INS IfStatement to Block at 3", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: content to Assignment: = at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MD5Hash to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: FetcherOutput to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: hash to ClassInstanceCreation at 3", "operations": ["INS SimpleName: hash to ClassInstanceCreation at 3"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: FetcherOutput to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: hash to ClassInstanceCreation at 2", "operations": ["INS SimpleName: hash to ClassInstanceCreation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: FetcherOutput to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: hash to ClassInstanceCreation at 2", "operations": ["INS SimpleName: hash to ClassInstanceCreation at 2"]}, {"root": "UPDATE from name to tname", "operations": ["UPD SimpleName: name from name to tname", "UPD SimpleName: name from name to tname"]}, {"root": "UPDATE from handleNoFetch to handleFetch", "operations": ["UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch", "UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch", "UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch", "UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch", "UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch", "UPD SimpleName: handleNoFetch from handleNoFetch to handleFetch"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS NullLiteral to ClassInstanceCreation at 1", "INS SimpleName: ProtocolOutput to SimpleType: ProtocolOutput at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS QualifiedName: ProtocolStatus.STATUS_NOTFETCHING to ClassInstanceCreation at 2", "INS SimpleType: ProtocolOutput to ClassInstanceCreation at 0"]}, {"root": "UPDATE from pstat to output", "operations": ["UPD SimpleName: pstat from pstat to output", "UPD SimpleName: pstat from pstat to output", "UPD SimpleName: pstat from pstat to output", "UPD SimpleName: pstat from pstat to output"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS SimpleType: ProtocolOutput to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: ProtocolOutput to SimpleType: ProtocolOutput at 0", "INS NullLiteral to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 2"]}, {"root": "DEL QualifiedName: ProtocolStatus.STATUS_NOTFETCHING", "operations": ["DEL QualifiedName: ProtocolStatus.STATUS_NOTFETCHING"]}, {"root": "DEL SimpleName: url", "operations": ["DEL SimpleName: url"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: url"]}, {"root": "DEL SimpleType: FetcherOutput", "operations": ["DEL SimpleName: FetcherOutput", "DEL SimpleType: FetcherOutput"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: digest", "DEL SimpleName: MD5Hash", "DEL MethodInvocation", "DEL SimpleName: getContent", "DEL SimpleName: content", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: content", "DEL SimpleName: getContent", "DEL SimpleName: MD5Hash", "DEL SimpleName: digest"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: hash", "DEL NullLiteral", "DEL SimpleName: fle", "DEL SimpleType: Properties", "DEL Block", "DEL SimpleType: Outlink", "DEL SimpleName: status", "DEL ArrayCreation", "DEL SimpleName: handleNoFetch", "DEL SingleVariableDeclaration", "DEL SimpleName: outputPage", "DEL SimpleName: parsing", "DEL ArrayType: byte[]", "DEL ExpressionStatement", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL ArrayCreation", "DEL SimpleName: fle", "DEL NumberLiteral: 0", "DEL ArrayType: Outlink[]", "DEL SimpleName: Properties", "DEL PrimitiveType: byte", "DEL SimpleType: FetcherOutput", "DEL SimpleName: hash", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: Fetcher", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL QualifiedName: ParseStatus.STATUS_NOTPARSED", "DEL NumberLiteral: 0", "DEL SimpleType: Properties", "DEL SimpleName: ParseData", "DEL SimpleName: Outlink", "DEL Modifier: private", "DEL Block", "DEL ThisExpression", "DEL SimpleName: status", "DEL SimpleName: status", "DEL StringLiteral: \"\"", "DEL MethodInvocation", "DEL SimpleName: url", "DEL SimpleType: FetchListEntry", "DEL StringLiteral: \"\"", "DEL SimpleType: ProtocolStatus", "DEL SimpleName: FetcherOutput", "DEL PrimitiveType: void", "DEL SimpleType: Content", "DEL StringLiteral: \"\"", "DEL SimpleName: hash", "DEL SimpleName: Content", "DEL SimpleType: ParseData", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL Block", "DEL Dimension", "DEL NullLiteral", "DEL SimpleType: ParseText", "DEL MethodDeclaration", "DEL SimpleName: outputPage", "DEL SimpleName: FetchListEntry", "DEL FieldAccess", "DEL SimpleName: ParseText", "DEL SimpleName: url", "DEL SimpleName: ProtocolStatus", "DEL MethodInvocation", "DEL SimpleName: fle", "DEL SimpleName: Properties"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL PrimitiveType: long", "DEL SimpleName: delay", "DEL PrefixExpression: -"]}]}}, {"Fetcher_diff": {"operations": ["Insert VariableDeclarationStatement(708) into Block(923) at 1", "Move VariableDeclarationStatement(902) into Block(923) at 2", "Insert IfStatement(759) into Block(923) at 3", "Move SimpleType: MD5Hash(904) into VariableDeclarationStatement(708) at 0", "Insert VariableDeclarationFragment(707) into VariableDeclarationStatement(708) at 1", "Insert InfixExpression: ==(723) into IfStatement(759) at 0", "Insert Block(748) into IfStatement(759) at 1", "Insert Block(758) into IfStatement(759) at 2", "Insert SimpleName: hash(705) into VariableDeclarationFragment(707) at 0", "Insert NullLiteral(706) into VariableDeclarationFragment(707) at 1", "Insert SimpleName: content(721) into InfixExpression: ==(723) at 0", "Insert NullLiteral(722) into InfixExpression: ==(723) at 1", "Insert ExpressionStatement(740) into Block(748) at 0", "Insert ExpressionStatement(747) into Block(748) at 1", "Insert ExpressionStatement(757) into Block(758) at 0", "Insert Assignment: =(739) into ExpressionStatement(740) at 0", "Insert Assignment: =(746) into ExpressionStatement(747) at 0", "Insert Assignment: =(756) into ExpressionStatement(757) at 0", "Insert SimpleName: content(724) into Assignment: =(739) at 0", "Move ClassInstanceCreation(936) into Assignment: =(739) at 1", "Insert SimpleName: hash(741) into Assignment: =(746) at 0", "Move MethodInvocation(909) into Assignment: =(746) at 1", "Insert SimpleName: hash(749) into Assignment: =(756) at 0", "Move MethodInvocation(722) into Assignment: =(756) at 1", "Move SimpleType: FetcherOutput(807) into ClassInstanceCreation(779) at 0", "Insert SimpleName: hash(777) into ClassInstanceCreation(779) at 2", "Move SimpleType: FetcherOutput(843) into ClassInstanceCreation(866) at 0", "Insert SimpleName: hash(864) into ClassInstanceCreation(866) at 2", "Move SimpleType: FetcherOutput(918) into ClassInstanceCreation(897) at 0", "Insert SimpleName: hash(895) into ClassInstanceCreation(897) at 2", "Update SimpleName: name(1375) to tname", "Update SimpleName: name(1383) to tname", "Update SimpleName: handleNoFetch(286) to handleFetch", "Insert ClassInstanceCreation(292) into MethodInvocation(293) at 2", "Insert SimpleType: ProtocolOutput(289) into ClassInstanceCreation(292) at 0", "Insert NullLiteral(290) into ClassInstanceCreation(292) at 1", "Insert QualifiedName: ProtocolStatus.STATUS_NOTFETCHING(291) into ClassInstanceCreation(292) at 2", "Update SimpleName: handleNoFetch(468) to handleFetch", "Update SimpleName: pstat(470) to output", "Update SimpleName: handleNoFetch(529) to handleFetch", "Update SimpleName: pstat(531) to output", "Update SimpleName: handleNoFetch(548) to handleFetch", "Update SimpleName: pstat(550) to output", "Update SimpleName: handleNoFetch(564) to handleFetch", "Update SimpleName: pstat(566) to output", "Update SimpleName: handleNoFetch(592) to handleFetch", "Insert ClassInstanceCreation(604) into MethodInvocation(605) at 2", "Insert SimpleName: ProtocolOutput(288) into SimpleType: ProtocolOutput(289) at 0", "Insert SimpleType: ProtocolOutput(598) into ClassInstanceCreation(604) at 0", "Insert NullLiteral(599) into ClassInstanceCreation(604) at 1", "Move ClassInstanceCreation(597) into ClassInstanceCreation(604) at 2", "Insert SimpleName: ProtocolOutput(597) into SimpleType: ProtocolOutput(598) at 0", "Delete QualifiedName: ProtocolStatus.STATUS_NOTFETCHING(288)", "Delete SimpleName: url(394)", "Delete SimpleName: String(680)", "Delete SimpleType: String(681)", "Delete SimpleName: url(682)", "Delete SingleVariableDeclaration(683)", "Delete SimpleName: FetcherOutput(714)", "Delete SimpleType: FetcherOutput(715)", "Delete SimpleName: MD5Hash(809)", "Delete SimpleName: digest(810)", "Delete SimpleName: content(811)", "Delete SimpleName: getContent(812)", "Delete MethodInvocation(813)", "Delete MethodInvocation(814)", "Delete SimpleName: MD5Hash(845)", "Delete SimpleName: digest(846)", "Delete SimpleName: content(847)", "Delete SimpleName: getContent(848)", "Delete MethodInvocation(849)", "Delete MethodInvocation(850)", "Delete Modifier: private(880)", "Delete PrimitiveType: void(881)", "Delete SimpleName: handleNoFetch(882)", "Delete SimpleName: FetchListEntry(883)", "Delete SimpleType: FetchListEntry(884)", "Delete SimpleName: fle(885)", "Delete SingleVariableDeclaration(886)", "Delete SimpleName: ProtocolStatus(887)", "Delete SimpleType: ProtocolStatus(888)", "Delete SimpleName: status(889)", "Delete SingleVariableDeclaration(890)", "Delete SimpleName: hash(905)", "Delete VariableDeclarationFragment(910)", "Delete VariableDeclarationStatement(911)", "Delete SimpleName: Fetcher(912)", "Delete ThisExpression(913)", "Delete SimpleName: parsing(914)", "Delete FieldAccess(915)", "Delete SimpleName: outputPage(916)", "Delete SimpleName: fle(919)", "Delete SimpleName: hash(920)", "Delete SimpleName: status(921)", "Delete ClassInstanceCreation(922)", "Delete SimpleName: ParseText(937)", "Delete SimpleType: ParseText(938)", "Delete StringLiteral: \"\"(939)", "Delete ClassInstanceCreation(940)", "Delete SimpleName: ParseData(941)", "Delete SimpleType: ParseData(942)", "Delete QualifiedName: ParseStatus.STATUS_NOTPARSED(943)", "Delete StringLiteral: \"\"(944)", "Delete SimpleName: Outlink(945)", "Delete SimpleType: Outlink(946)", "Delete Dimension(947)", "Delete ArrayType: Outlink[](948)", "Delete NumberLiteral: 0(949)", "Delete ArrayCreation(950)", "Delete SimpleName: Properties(951)", "Delete SimpleType: Properties(952)", "Delete ClassInstanceCreation(953)", "Delete ClassInstanceCreation(954)", "Delete MethodInvocation(955)", "Delete ExpressionStatement(956)", "Delete Block(957)", "Delete SimpleName: outputPage(958)", "Delete SimpleName: FetcherOutput(959)", "Delete SimpleType: FetcherOutput(960)", "Delete SimpleName: fle(961)", "Delete SimpleName: hash(962)", "Delete SimpleName: status(963)", "Delete ClassInstanceCreation(964)", "Delete SimpleName: Content(965)", "Delete SimpleType: Content(966)", "Delete SimpleName: url(967)", "Delete SimpleName: url(968)", "Delete PrimitiveType: byte(969)", "Delete Dimension(970)", "Delete ArrayType: byte[](971)", "Delete NumberLiteral: 0(972)", "Delete ArrayCreation(973)", "Delete StringLiteral: \"\"(974)", "Delete SimpleName: Properties(975)", "Delete SimpleType: Properties(976)", "Delete ClassInstanceCreation(977)", "Delete ClassInstanceCreation(978)", "Delete NullLiteral(979)", "Delete NullLiteral(980)", "Delete MethodInvocation(981)", "Delete ExpressionStatement(982)", "Delete Block(983)", "Delete IfStatement(984)", "Delete Block(985)", "Delete MethodDeclaration(986)", "Delete PrimitiveType: long(1771)", "Delete SimpleName: delay(1772)", "Delete NumberLiteral: 1(1773)", "Delete PrefixExpression: -(1774)", "Delete VariableDeclarationFragment(1775)", "Delete VariableDeclarationStatement(1776)"]}}, {"ParseStatus_cluster": {"actions": [{"root": "INS Modifier: public to TypeDeclaration: class at 1", "operations": ["INS Modifier: public to TypeDeclaration: class at 1"]}, {"root": "INS SimpleName: ParseStatus to TypeDeclaration: class at 2", "operations": ["INS SimpleName: ParseStatus to TypeDeclaration: class at 2"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 47", "operations": ["INS TypeDeclaration: class to TypeDeclaration: class at 47", "INS SimpleName: EmptyParseImpl to TypeDeclaration: class at 2", "INS Modifier: static to TypeDeclaration: class at 1", "INS Modifier: private to TypeDeclaration: class at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV SimpleType: Parse to TypeDeclaration: class at 3", "MOV MethodDeclaration to TypeDeclaration: class at 7", "MOV MethodDeclaration to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 6", "MOV FieldDeclaration to TypeDeclaration: class at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: name to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS QualifiedName: majorCodes.length to InfixExpression: < at 1", "INS InfixExpression: < to InfixExpression: && at 1", "INS ExpressionStatement to IfStatement at 2", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: name to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: majorCode to InfixExpression: < at 0", "INS StringLiteral: \"UNKNOWN!\" to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: name to Assignment: = at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: majorCode to InfixExpression: >= at 0", "INS InfixExpression: >= to InfixExpression: && at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ArrayAccess to Assignment: = at 1"]}, {"root": "INS SimpleName: name to InfixExpression: + at 0", "operations": ["INS SimpleName: name to InfixExpression: + at 0"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: ParseStatus", "operations": ["DEL SimpleName: ParseStatus"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: EmptyParseImpl", "DEL TypeDeclaration: class"]}]}}, {"ParseStatus_diff": {"operations": ["Insert Modifier: public(17) into TypeDeclaration: class(917) at 1", "Insert SimpleName: ParseStatus(18) into TypeDeclaration: class(917) at 2", "Insert TypeDeclaration: class(916) into TypeDeclaration: class(917) at 45", "Insert Modifier: private(863) into TypeDeclaration: class(916) at 0", "Insert Modifier: static(864) into TypeDeclaration: class(916) at 1", "Insert SimpleName: EmptyParseImpl(865) into TypeDeclaration: class(916) at 2", "Move SimpleType: Parse(844) into TypeDeclaration: class(916) at 3", "Move FieldDeclaration(851) into TypeDeclaration: class(916) at 4", "Move MethodDeclaration(876) into TypeDeclaration: class(916) at 5", "Move MethodDeclaration(884) into TypeDeclaration: class(916) at 6", "Move MethodDeclaration(892) into TypeDeclaration: class(916) at 7", "Insert VariableDeclarationStatement(570) into Block(659) at 1", "Insert IfStatement(588) into Block(659) at 2", "Insert SimpleType: String(566) into VariableDeclarationStatement(570) at 0", "Insert VariableDeclarationFragment(569) into VariableDeclarationStatement(570) at 1", "Insert InfixExpression: &&(577) into IfStatement(588) at 0", "Insert ExpressionStatement(583) into IfStatement(588) at 1", "Insert ExpressionStatement(587) into IfStatement(588) at 2", "Insert SimpleName: String(565) into SimpleType: String(566) at 0", "Insert SimpleName: name(567) into VariableDeclarationFragment(569) at 0", "Insert NullLiteral(568) into VariableDeclarationFragment(569) at 1", "Insert InfixExpression: >=(573) into InfixExpression: &&(577) at 0", "Insert InfixExpression: <(576) into InfixExpression: &&(577) at 1", "Insert Assignment: =(582) into ExpressionStatement(583) at 0", "Insert Assignment: =(586) into ExpressionStatement(587) at 0", "Insert SimpleName: majorCode(571) into InfixExpression: >=(573) at 0", "Insert NumberLiteral: 0(572) into InfixExpression: >=(573) at 1", "Insert SimpleName: majorCode(574) into InfixExpression: <(576) at 0", "Insert QualifiedName: majorCodes.length(575) into InfixExpression: <(576) at 1", "Insert SimpleName: name(578) into Assignment: =(582) at 0", "Move ArrayAccess(569) into Assignment: =(582) at 1", "Insert SimpleName: name(584) into Assignment: =(586) at 0", "Insert StringLiteral: \"UNKNOWN!\"(585) into Assignment: =(586) at 1", "Insert SimpleName: name(591) into InfixExpression: +(597) at 0", "Delete Modifier: public(17)", "Delete SimpleName: ParseStatus(18)", "Delete SimpleName: EmptyParseImpl(842)", "Delete TypeDeclaration: class(893)"]}}, {"ProtocolStatus_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.HashMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 31", "operations": ["INS SimpleType: HashMap to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: codeToName to VariableDeclarationFragment at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: HashMap to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 31", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS Initializer to TypeDeclaration: class at 32", "operations": ["INS SimpleName: MOVED to ClassInstanceCreation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"notfetching\" to MethodInvocation at 3", "INS SimpleName: NOTFETCHING to ClassInstanceCreation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS StringLiteral: \"temp_moved\" to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: codeToName to MethodInvocation at 0", "INS StringLiteral: \"notmodified\" to MethodInvocation at 3", "INS SimpleName: ACCESS_DENIED to ClassInstanceCreation at 1", "INS SimpleName: TEMP_MOVED to ClassInstanceCreation at 1", "INS SimpleName: PROTO_NOT_FOUND to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 5", "INS SimpleName: codeToName to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: FAILED to ClassInstanceCreation at 1", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 10", "INS ExpressionStatement to Block at 12", "INS SimpleName: EXCEPTION to ClassInstanceCreation at 1", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS SimpleName: REDIR_EXCEEDED to ClassInstanceCreation at 1", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS SimpleName: SUCCESS to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 8", "INS Modifier: static to Initializer at 0", "INS SimpleName: RETRY to ClassInstanceCreation at 1", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: NOTMODIFIED to ClassInstanceCreation at 1", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"success\" to MethodInvocation at 3", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"proto_not_found\" to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS StringLiteral: \"access_denied\" to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 2", "INS StringLiteral: \"failed\" to MethodInvocation at 3", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ExpressionStatement to Block at 9", "INS StringLiteral: \"notfound\" to MethodInvocation at 3", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS StringLiteral: \"exception\" to MethodInvocation at 3", "INS StringLiteral: \"redir_exceeded\" to MethodInvocation at 3", "INS SimpleName: codeToName to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 11", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: codeToName to MethodInvocation at 0", "INS Block to Initializer at 1", "INS SimpleName: codeToName to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: GONE to ClassInstanceCreation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 13", "INS SimpleName: NOTFOUND to ClassInstanceCreation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: ROBOTS_DENIED to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 7", "INS Initializer to TypeDeclaration: class at 32", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS StringLiteral: \"gone\" to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"moved\" to MethodInvocation at 3", "INS StringLiteral: \"retry\" to MethodInvocation at 3", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 6", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: codeToName to MethodInvocation at 0", "INS StringLiteral: \"robots_denied\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: code to ClassInstanceCreation at 1", "INS SimpleName: codeToName to MethodInvocation at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: + at 0"]}]}}, {"ProtocolStatus_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(1108) at 4", "Insert QualifiedName: java.util.HashMap(20) into ImportDeclaration(21) at 0", "Insert FieldDeclaration(332) into TypeDeclaration: class(1107) at 31", "Insert Initializer(461) into TypeDeclaration: class(1107) at 32", "Insert Modifier: private(323) into FieldDeclaration(332) at 0", "Insert Modifier: static(324) into FieldDeclaration(332) at 1", "Insert SimpleType: HashMap(326) into FieldDeclaration(332) at 2", "Insert VariableDeclarationFragment(331) into FieldDeclaration(332) at 3", "Insert Modifier: static(333) into Initializer(461) at 0", "Insert Block(460) into Initializer(461) at 1", "Insert SimpleName: HashMap(325) into SimpleType: HashMap(326) at 0", "Insert SimpleName: codeToName(327) into VariableDeclarationFragment(331) at 0", "Insert ClassInstanceCreation(330) into VariableDeclarationFragment(331) at 1", "Insert ExpressionStatement(342) into Block(460) at 0", "Insert ExpressionStatement(351) into Block(460) at 1", "Insert ExpressionStatement(360) into Block(460) at 2", "Insert ExpressionStatement(369) into Block(460) at 3", "Insert ExpressionStatement(378) into Block(460) at 4", "Insert ExpressionStatement(387) into Block(460) at 5", "Insert ExpressionStatement(396) into Block(460) at 6", "Insert ExpressionStatement(405) into Block(460) at 7", "Insert ExpressionStatement(414) into Block(460) at 8", "Insert ExpressionStatement(423) into Block(460) at 9", "Insert ExpressionStatement(432) into Block(460) at 10", "Insert ExpressionStatement(441) into Block(460) at 11", "Insert ExpressionStatement(450) into Block(460) at 12", "Insert ExpressionStatement(459) into Block(460) at 13", "Insert SimpleType: HashMap(329) into ClassInstanceCreation(330) at 0", "Insert MethodInvocation(341) into ExpressionStatement(342) at 0", "Insert MethodInvocation(350) into ExpressionStatement(351) at 0", "Insert MethodInvocation(359) into ExpressionStatement(360) at 0", "Insert MethodInvocation(368) into ExpressionStatement(369) at 0", "Insert MethodInvocation(377) into ExpressionStatement(378) at 0", "Insert MethodInvocation(386) into ExpressionStatement(387) at 0", "Insert MethodInvocation(395) into ExpressionStatement(396) at 0", "Insert MethodInvocation(404) into ExpressionStatement(405) at 0", "Insert MethodInvocation(413) into ExpressionStatement(414) at 0", "Insert MethodInvocation(422) into ExpressionStatement(423) at 0", "Insert MethodInvocation(431) into ExpressionStatement(432) at 0", "Insert MethodInvocation(440) into ExpressionStatement(441) at 0", "Insert MethodInvocation(449) into ExpressionStatement(450) at 0", "Insert MethodInvocation(458) into ExpressionStatement(459) at 0", "Insert SimpleName: HashMap(328) into SimpleType: HashMap(329) at 0", "Insert SimpleName: codeToName(334) into MethodInvocation(341) at 0", "Insert SimpleName: put(335) into MethodInvocation(341) at 1", "Insert ClassInstanceCreation(339) into MethodInvocation(341) at 2", "Insert StringLiteral: \"success\"(340) into MethodInvocation(341) at 3", "Insert SimpleName: codeToName(343) into MethodInvocation(350) at 0", "Insert SimpleName: put(344) into MethodInvocation(350) at 1", "Insert ClassInstanceCreation(348) into MethodInvocation(350) at 2", "Insert StringLiteral: \"failed\"(349) into MethodInvocation(350) at 3", "Insert SimpleName: codeToName(352) into MethodInvocation(359) at 0", "Insert SimpleName: put(353) into MethodInvocation(359) at 1", "Insert ClassInstanceCreation(357) into MethodInvocation(359) at 2", "Insert StringLiteral: \"proto_not_found\"(358) into MethodInvocation(359) at 3", "Insert SimpleName: codeToName(361) into MethodInvocation(368) at 0", "Insert SimpleName: put(362) into MethodInvocation(368) at 1", "Insert ClassInstanceCreation(366) into MethodInvocation(368) at 2", "Insert StringLiteral: \"gone\"(367) into MethodInvocation(368) at 3", "Insert SimpleName: codeToName(370) into MethodInvocation(377) at 0", "Insert SimpleName: put(371) into MethodInvocation(377) at 1", "Insert ClassInstanceCreation(375) into MethodInvocation(377) at 2", "Insert StringLiteral: \"moved\"(376) into MethodInvocation(377) at 3", "Insert SimpleName: codeToName(379) into MethodInvocation(386) at 0", "Insert SimpleName: put(380) into MethodInvocation(386) at 1", "Insert ClassInstanceCreation(384) into MethodInvocation(386) at 2", "Insert StringLiteral: \"temp_moved\"(385) into MethodInvocation(386) at 3", "Insert SimpleName: codeToName(388) into MethodInvocation(395) at 0", "Insert SimpleName: put(389) into MethodInvocation(395) at 1", "Insert ClassInstanceCreation(393) into MethodInvocation(395) at 2", "Insert StringLiteral: \"notfound\"(394) into MethodInvocation(395) at 3", "Insert SimpleName: codeToName(397) into MethodInvocation(404) at 0", "Insert SimpleName: put(398) into MethodInvocation(404) at 1", "Insert ClassInstanceCreation(402) into MethodInvocation(404) at 2", "Insert StringLiteral: \"retry\"(403) into MethodInvocation(404) at 3", "Insert SimpleName: codeToName(406) into MethodInvocation(413) at 0", "Insert SimpleName: put(407) into MethodInvocation(413) at 1", "Insert ClassInstanceCreation(411) into MethodInvocation(413) at 2", "Insert StringLiteral: \"exception\"(412) into MethodInvocation(413) at 3", "Insert SimpleName: codeToName(415) into MethodInvocation(422) at 0", "Insert SimpleName: put(416) into MethodInvocation(422) at 1", "Insert ClassInstanceCreation(420) into MethodInvocation(422) at 2", "Insert StringLiteral: \"access_denied\"(421) into MethodInvocation(422) at 3", "Insert SimpleName: codeToName(424) into MethodInvocation(431) at 0", "Insert SimpleName: put(425) into MethodInvocation(431) at 1", "Insert ClassInstanceCreation(429) into MethodInvocation(431) at 2", "Insert StringLiteral: \"robots_denied\"(430) into MethodInvocation(431) at 3", "Insert SimpleName: codeToName(433) into MethodInvocation(440) at 0", "Insert SimpleName: put(434) into MethodInvocation(440) at 1", "Insert ClassInstanceCreation(438) into MethodInvocation(440) at 2", "Insert StringLiteral: \"redir_exceeded\"(439) into MethodInvocation(440) at 3", "Insert SimpleName: codeToName(442) into MethodInvocation(449) at 0", "Insert SimpleName: put(443) into MethodInvocation(449) at 1", "Insert ClassInstanceCreation(447) into MethodInvocation(449) at 2", "Insert StringLiteral: \"notfetching\"(448) into MethodInvocation(449) at 3", "Insert SimpleName: codeToName(451) into MethodInvocation(458) at 0", "Insert SimpleName: put(452) into MethodInvocation(458) at 1", "Insert ClassInstanceCreation(456) into MethodInvocation(458) at 2", "Insert StringLiteral: \"notmodified\"(457) into MethodInvocation(458) at 3", "Insert SimpleType: Integer(337) into ClassInstanceCreation(339) at 0", "Insert SimpleName: SUCCESS(338) into ClassInstanceCreation(339) at 1", "Insert SimpleType: Integer(346) into ClassInstanceCreation(348) at 0", "Insert SimpleName: FAILED(347) into ClassInstanceCreation(348) at 1", "Insert SimpleType: Integer(355) into ClassInstanceCreation(357) at 0", "Insert SimpleName: PROTO_NOT_FOUND(356) into ClassInstanceCreation(357) at 1", "Insert SimpleType: Integer(364) into ClassInstanceCreation(366) at 0", "Insert SimpleName: GONE(365) into ClassInstanceCreation(366) at 1", "Insert SimpleType: Integer(373) into ClassInstanceCreation(375) at 0", "Insert SimpleName: MOVED(374) into ClassInstanceCreation(375) at 1", "Insert SimpleType: Integer(382) into ClassInstanceCreation(384) at 0", "Insert SimpleName: TEMP_MOVED(383) into ClassInstanceCreation(384) at 1", "Insert SimpleType: Integer(391) into ClassInstanceCreation(393) at 0", "Insert SimpleName: NOTFOUND(392) into ClassInstanceCreation(393) at 1", "Insert SimpleType: Integer(400) into ClassInstanceCreation(402) at 0", "Insert SimpleName: RETRY(401) into ClassInstanceCreation(402) at 1", "Insert SimpleType: Integer(409) into ClassInstanceCreation(411) at 0", "Insert SimpleName: EXCEPTION(410) into ClassInstanceCreation(411) at 1", "Insert SimpleType: Integer(418) into ClassInstanceCreation(420) at 0", "Insert SimpleName: ACCESS_DENIED(419) into ClassInstanceCreation(420) at 1", "Insert SimpleType: Integer(427) into ClassInstanceCreation(429) at 0", "Insert SimpleName: ROBOTS_DENIED(428) into ClassInstanceCreation(429) at 1", "Insert SimpleType: Integer(436) into ClassInstanceCreation(438) at 0", "Insert SimpleName: REDIR_EXCEEDED(437) into ClassInstanceCreation(438) at 1", "Insert SimpleType: Integer(445) into ClassInstanceCreation(447) at 0", "Insert SimpleName: NOTFETCHING(446) into ClassInstanceCreation(447) at 1", "Insert SimpleType: Integer(454) into ClassInstanceCreation(456) at 0", "Insert SimpleName: NOTMODIFIED(455) into ClassInstanceCreation(456) at 1", "Insert MethodInvocation(1038) into InfixExpression: +(1043) at 0", "Insert SimpleName: Integer(336) into SimpleType: Integer(337) at 0", "Insert SimpleName: Integer(345) into SimpleType: Integer(346) at 0", "Insert SimpleName: Integer(354) into SimpleType: Integer(355) at 0", "Insert SimpleName: Integer(363) into SimpleType: Integer(364) at 0", "Insert SimpleName: Integer(372) into SimpleType: Integer(373) at 0", "Insert SimpleName: Integer(381) into SimpleType: Integer(382) at 0", "Insert SimpleName: Integer(390) into SimpleType: Integer(391) at 0", "Insert SimpleName: Integer(399) into SimpleType: Integer(400) at 0", "Insert SimpleName: Integer(408) into SimpleType: Integer(409) at 0", "Insert SimpleName: Integer(417) into SimpleType: Integer(418) at 0", "Insert SimpleName: Integer(426) into SimpleType: Integer(427) at 0", "Insert SimpleName: Integer(435) into SimpleType: Integer(436) at 0", "Insert SimpleName: Integer(444) into SimpleType: Integer(445) at 0", "Insert SimpleName: Integer(453) into SimpleType: Integer(454) at 0", "Insert SimpleName: codeToName(1032) into MethodInvocation(1038) at 0", "Insert SimpleName: get(1033) into MethodInvocation(1038) at 1", "Insert ClassInstanceCreation(1037) into MethodInvocation(1038) at 2", "Insert SimpleType: Integer(1035) into ClassInstanceCreation(1037) at 0", "Insert SimpleName: code(1036) into ClassInstanceCreation(1037) at 1", "Insert SimpleName: Integer(1034) into SimpleType: Integer(1035) at 0"]}}, {"SegmentReader_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: printStackTrace to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: t to MethodInvocation at 0"]}]}}, {"SegmentReader_diff": {"operations": ["Insert ExpressionStatement(2434) into Block(2442) at 0", "Insert MethodInvocation(2433) into ExpressionStatement(2434) at 0", "Insert SimpleName: t(2431) into MethodInvocation(2433) at 0", "Insert SimpleName: printStackTrace(2432) into MethodInvocation(2433) at 1"]}}, {"ParseSegment_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: FetcherOutput to SimpleType: FetcherOutput at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: fo to SingleVariableDeclaration at 1", "INS SimpleType: FetcherOutput to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS Dimension to ArrayType: Outlink[] at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 4", "INS ArrayType: Outlink[] to ArrayCreation at 0", "INS SimpleName: outputPage to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: ParseData to SimpleType: ParseData at 0", "INS QualifiedName: ParseStatus.FAILED to ClassInstanceCreation at 1", "INS SimpleType: Outlink to ArrayType: Outlink[] at 0", "INS SimpleName: fo to MethodInvocation at 0", "INS SimpleName: url to VariableDeclarationFragment at 0", "INS QualifiedName: ParseStatus.FAILED_MISSING_CONTENT to ClassInstanceCreation at 2", "INS SimpleType: ParseData to ClassInstanceCreation at 0", "INS SimpleName: ParseText to SimpleType: ParseText at 0", "INS IfStatement to Block at 1", "INS SimpleName: Outlink to SimpleType: Outlink at 0", "INS Block to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getUrl to MethodInvocation at 1", "INS StringLiteral: \"\" to ClassInstanceCreation at 2", "INS SimpleName: content to InfixExpression: != at 0", "INS Block to MethodDeclaration at 7", "INS Block to IfStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to ArrayCreation at 1", "INS SimpleName: dryRun to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"To be handled as no content\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS FieldAccess to IfStatement at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleType: ParseText to ClassInstanceCreation at 0", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS ArrayCreation to ClassInstanceCreation at 3", "INS ExpressionStatement to Block at 1", "INS SimpleName: ParseSegment to ThisExpression at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"\" to ClassInstanceCreation at 1", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS InfixExpression: != to IfStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "UPDATE from handleNoContent to handleError", "operations": ["UPD SimpleName: handleNoContent from handleNoContent to handleError", "UPD SimpleName: handleNoContent from handleNoContent to handleError", "UPD SimpleName: handleNoContent from handleNoContent to handleError"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: t to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: printStackTrace to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV SynchronizedStatement to Block at 7", "MOV ExpressionStatement to Block at 6"]}, {"root": "UPDATE from \"To be handled as no content\" to \"To be handled as error\"", "operations": ["UPD StringLiteral: \"To be handled as no content\" from \"To be handled as no content\" to \"To be handled as error\""]}, {"root": "UPDATE from url to fetcherOutput", "operations": ["UPD SimpleName: url from url to fetcherOutput"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ParseStatus to ClassInstanceCreation at 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleType: ProtocolStatus", "DEL SimpleName: ProtocolStatus", "DEL SimpleName: fetcherOutput", "DEL SimpleName: getProtocolStatus", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: ps"]}, {"root": "DEL IfStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: handleNoContent", "DEL SimpleName: isSuccess", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: url", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: ps", "DEL QualifiedName: ParseStatus.FAILED_MISSING_CONTENT", "DEL MethodInvocation", "DEL IfStatement", "DEL Block", "DEL SimpleType: ProtocolException", "DEL SimpleName: ps", "DEL StringLiteral: \"Error at fetch stage: \"", "DEL SimpleName: logError", "DEL SimpleName: ProtocolException"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: url"]}]}}, {"ParseSegment_diff": {"operations": ["Insert SingleVariableDeclaration(511) into MethodDeclaration(628) at 3", "Insert Block(627) into MethodDeclaration(628) at 6", "Update SimpleName: handleNoContent(609) to handleError", "Insert SimpleType: FetcherOutput(509) into SingleVariableDeclaration(511) at 0", "Insert SimpleName: fo(510) into SingleVariableDeclaration(511) at 1", "Insert VariableDeclarationStatement(527) into Block(627) at 0", "Insert IfStatement(626) into Block(627) at 1", "Insert SimpleName: FetcherOutput(508) into SimpleType: FetcherOutput(509) at 0", "Move SimpleType: String(540) into VariableDeclarationStatement(527) at 0", "Insert VariableDeclarationFragment(526) into VariableDeclarationStatement(527) at 1", "Insert InfixExpression: !=(530) into IfStatement(626) at 0", "Move Block(605) into IfStatement(626) at 1", "Insert Block(625) into IfStatement(626) at 2", "Insert SimpleName: url(520) into VariableDeclarationFragment(526) at 0", "Insert MethodInvocation(525) into VariableDeclarationFragment(526) at 1", "Insert SimpleName: content(528) into InfixExpression: !=(530) at 0", "Insert NullLiteral(529) into InfixExpression: !=(530) at 1", "Insert IfStatement(599) into Block(625) at 0", "Insert ExpressionStatement(624) into Block(625) at 1", "Insert MethodInvocation(523) into MethodInvocation(525) at 0", "Insert SimpleName: toString(524) into MethodInvocation(525) at 1", "Insert FieldAccess(591) into IfStatement(599) at 0", "Insert Block(598) into IfStatement(599) at 1", "Insert MethodInvocation(623) into ExpressionStatement(624) at 0", "Insert ExpressionStatement(769) into Block(779) at 0", "Move ExpressionStatement(396) into Block(411) at 6", "Move SynchronizedStatement(421) into Block(411) at 7", "Insert SimpleName: fo(521) into MethodInvocation(523) at 0", "Insert SimpleName: getUrl(522) into MethodInvocation(523) at 1", "Insert ThisExpression(589) into FieldAccess(591) at 0", "Insert SimpleName: dryRun(590) into FieldAccess(591) at 1", "Insert ExpressionStatement(596) into Block(598) at 0", "Insert ReturnStatement(597) into Block(598) at 1", "Insert SimpleName: outputPage(600) into MethodInvocation(623) at 0", "Insert ClassInstanceCreation(604) into MethodInvocation(623) at 1", "Insert ClassInstanceCreation(622) into MethodInvocation(623) at 2", "Update StringLiteral: \"To be handled as no content\"(620) to \"To be handled as error\"", "Insert MethodInvocation(768) into ExpressionStatement(769) at 0", "Insert SimpleName: ParseSegment(588) into ThisExpression(589) at 0", "Insert MethodInvocation(595) into ExpressionStatement(596) at 0", "Insert SimpleType: ParseText(602) into ClassInstanceCreation(604) at 0", "Insert StringLiteral: \"\"(603) into ClassInstanceCreation(604) at 1", "Insert SimpleType: ParseData(606) into ClassInstanceCreation(622) at 0", "Insert ClassInstanceCreation(611) into ClassInstanceCreation(622) at 1", "Insert StringLiteral: \"\"(612) into ClassInstanceCreation(622) at 2", "Insert ArrayCreation(618) into ClassInstanceCreation(622) at 3", "Insert ClassInstanceCreation(621) into ClassInstanceCreation(622) at 4", "Insert SimpleName: t(766) into MethodInvocation(768) at 0", "Insert SimpleName: printStackTrace(767) into MethodInvocation(768) at 1", "Update SimpleName: url(393) to fetcherOutput", "Insert SimpleName: LOG(592) into MethodInvocation(595) at 0", "Insert SimpleName: info(593) into MethodInvocation(595) at 1", "Insert StringLiteral: \"To be handled as no content\"(594) into MethodInvocation(595) at 2", "Insert SimpleName: ParseText(601) into SimpleType: ParseText(602) at 0", "Insert SimpleName: ParseData(605) into SimpleType: ParseData(606) at 0", "Move SimpleType: ParseStatus(435) into ClassInstanceCreation(611) at 0", "Insert QualifiedName: ParseStatus.FAILED(609) into ClassInstanceCreation(611) at 1", "Insert QualifiedName: ParseStatus.FAILED_MISSING_CONTENT(610) into ClassInstanceCreation(611) at 2", "Insert ArrayType: Outlink[](616) into ArrayCreation(618) at 0", "Insert NumberLiteral: 0(617) into ArrayCreation(618) at 1", "Insert SimpleType: Properties(620) into ClassInstanceCreation(621) at 0", "Update SimpleName: handleNoContent(452) to handleError", "Insert SimpleType: Outlink(614) into ArrayType: Outlink[](616) at 0", "Insert Dimension(615) into ArrayType: Outlink[](616) at 1", "Insert SimpleName: Properties(619) into SimpleType: Properties(620) at 0", "Insert SimpleName: Outlink(613) into SimpleType: Outlink(614) at 0", "Update SimpleName: handleNoContent(473) to handleError", "Delete SimpleName: ProtocolStatus(381)", "Delete SimpleType: ProtocolStatus(382)", "Delete SimpleName: ps(383)", "Delete SimpleName: fetcherOutput(384)", "Delete SimpleName: getProtocolStatus(385)", "Delete MethodInvocation(386)", "Delete VariableDeclarationFragment(387)", "Delete VariableDeclarationStatement(388)", "Delete SimpleName: ps(389)", "Delete SimpleName: isSuccess(390)", "Delete MethodInvocation(391)", "Delete Block(422)", "Delete SimpleName: logError(423)", "Delete SimpleName: url(424)", "Delete SimpleName: ProtocolException(425)", "Delete SimpleType: ProtocolException(426)", "Delete StringLiteral: \"Error at fetch stage: \"(427)", "Delete SimpleName: ps(428)", "Delete InfixExpression: +(429)", "Delete ClassInstanceCreation(430)", "Delete MethodInvocation(431)", "Delete ExpressionStatement(432)", "Delete SimpleName: handleNoContent(433)", "Delete QualifiedName: ParseStatus.FAILED_MISSING_CONTENT(436)", "Delete ClassInstanceCreation(437)", "Delete MethodInvocation(438)", "Delete ExpressionStatement(439)", "Delete Block(440)", "Delete IfStatement(441)", "Delete SimpleName: url(541)", "Delete SingleVariableDeclaration(542)"]}}, {"Http_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleType: Content to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleName: Content to SimpleType: Content at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: location to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: getHeader to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: location to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: response to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: location to Assignment: = at 0", "INS InfixExpression: == to IfStatement at 0", "INS StringLiteral: \"location\" to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ExpressionStatement to IfStatement at 1", "INS SimpleName: location to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS StringLiteral: \"\" to Assignment: = at 1", "INS IfStatement to Block at 2", "INS SimpleName: location to Assignment: = at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: location to ClassInstanceCreation at 2", "operations": ["INS SimpleName: location to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "UPDATE from response to c", "operations": ["UPD SimpleName: response from response to c"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: response to MethodInvocation at 0"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: c to ClassInstanceCreation at 1", "operations": ["INS SimpleName: c to ClassInstanceCreation at 1"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: toContent", "DEL MethodInvocation"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"Http_diff": {"operations": ["Insert VariableDeclarationStatement(929) into Block(1192) at 5", "Insert SimpleType: Content(923) into VariableDeclarationStatement(929) at 0", "Insert VariableDeclarationFragment(928) into VariableDeclarationStatement(929) at 1", "Insert SimpleName: Content(922) into SimpleType: Content(923) at 0", "Insert SimpleName: c(924) into VariableDeclarationFragment(928) at 0", "Move MethodInvocation(929) into VariableDeclarationFragment(928) at 1", "Insert SimpleName: c(935) into ClassInstanceCreation(936) at 1", "Insert VariableDeclarationStatement(972) into Block(1055) at 0", "Insert IfStatement(983) into Block(1055) at 1", "Insert IfStatement(991) into Block(1055) at 2", "Insert SimpleName: c(944) into ClassInstanceCreation(954) at 1", "Insert SimpleType: String(965) into VariableDeclarationStatement(972) at 0", "Insert VariableDeclarationFragment(971) into VariableDeclarationStatement(972) at 1", "Insert InfixExpression: ==(975) into IfStatement(983) at 0", "Insert ExpressionStatement(982) into IfStatement(983) at 1", "Insert InfixExpression: ==(986) into IfStatement(991) at 0", "Insert ExpressionStatement(990) into IfStatement(991) at 1", "Insert SimpleName: String(964) into SimpleType: String(965) at 0", "Insert SimpleName: location(966) into VariableDeclarationFragment(971) at 0", "Move MethodInvocation(965) into VariableDeclarationFragment(971) at 1", "Insert SimpleName: location(973) into InfixExpression: ==(975) at 0", "Insert NullLiteral(974) into InfixExpression: ==(975) at 1", "Insert Assignment: =(981) into ExpressionStatement(982) at 0", "Insert SimpleName: location(984) into InfixExpression: ==(986) at 0", "Insert NullLiteral(985) into InfixExpression: ==(986) at 1", "Insert Assignment: =(989) into ExpressionStatement(990) at 0", "Insert SimpleName: c(1047) into ClassInstanceCreation(1053) at 1", "Insert SimpleName: location(976) into Assignment: =(981) at 0", "Insert MethodInvocation(980) into Assignment: =(981) at 1", "Insert SimpleName: location(987) into Assignment: =(989) at 0", "Insert StringLiteral: \"\"(988) into Assignment: =(989) at 1", "Insert SimpleName: location(996) into ClassInstanceCreation(997) at 2", "Insert SimpleName: c(1068) into ClassInstanceCreation(1074) at 1", "Insert SimpleName: response(977) into MethodInvocation(980) at 0", "Insert SimpleName: getHeader(978) into MethodInvocation(980) at 1", "Insert StringLiteral: \"location\"(979) into MethodInvocation(980) at 2", "Insert SimpleName: c(1090) into ClassInstanceCreation(1098) at 1", "Update SimpleName: response(1073) to c", "Move SimpleName: response(1073) into MethodInvocation(1106) at 0", "Insert SimpleName: c(1147) into ClassInstanceCreation(1153) at 1", "Insert SimpleName: c(1126) into ClassInstanceCreation(1134) at 1", "Insert SimpleName: c(1161) into ClassInstanceCreation(1167) at 1", "Insert SimpleName: c(1172) into ClassInstanceCreation(1182) at 1", "Delete NullLiteral(938)", "Delete NullLiteral(1016)", "Delete NullLiteral(1037)", "Delete NullLiteral(1059)", "Delete SimpleName: toContent(1074)", "Delete MethodInvocation(1075)", "Delete NullLiteral(1097)", "Delete NullLiteral(1118)", "Delete NullLiteral(1132)", "Delete NullLiteral(1143)"]}}, {"HttpResponse_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: EMPTY_CONTENT to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Modifier: final to FieldDeclaration at 2", "INS ArrayType: byte[] to FieldDeclaration at 3", "INS ArrayType: byte[] to ArrayCreation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS NumberLiteral: 0 to ArrayCreation at 1", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: content to Assignment: = at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: content to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: EMPTY_CONTENT to Assignment: = at 1", "INS IfStatement to Block at 2"]}, {"root": "INS TryStatement to Block at 3", "operations": ["INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS Block to CatchClause at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS CatchClause to TryStatement at 1", "INS TryStatement to Block at 3"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "INS ThrowStatement to IfStatement at 1", "operations": ["INS SimpleType: IOException to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ThrowStatement to IfStatement at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: e to MethodInvocation at 0"]}]}}, {"HttpResponse_diff": {"operations": ["Insert FieldDeclaration(61) into TypeDeclaration: class(449) at 6", "Insert Modifier: private(48) into FieldDeclaration(61) at 0", "Insert Modifier: static(49) into FieldDeclaration(61) at 1", "Insert Modifier: final(50) into FieldDeclaration(61) at 2", "Insert ArrayType: byte[](53) into FieldDeclaration(61) at 3", "Insert VariableDeclarationFragment(60) into FieldDeclaration(61) at 4", "Insert PrimitiveType: byte(51) into ArrayType: byte[](53) at 0", "Insert Dimension(52) into ArrayType: byte[](53) at 1", "Insert SimpleName: EMPTY_CONTENT(54) into VariableDeclarationFragment(60) at 0", "Insert ArrayCreation(59) into VariableDeclarationFragment(60) at 1", "Insert IfStatement(143) into Block(153) at 2", "Insert ArrayType: byte[](57) into ArrayCreation(59) at 0", "Insert NumberLiteral: 0(58) into ArrayCreation(59) at 1", "Insert InfixExpression: ==(138) into IfStatement(143) at 0", "Insert ExpressionStatement(142) into IfStatement(143) at 1", "Insert PrimitiveType: byte(55) into ArrayType: byte[](57) at 0", "Insert Dimension(56) into ArrayType: byte[](57) at 1", "Insert SimpleName: content(136) into InfixExpression: ==(138) at 0", "Insert NullLiteral(137) into InfixExpression: ==(138) at 1", "Insert Assignment: =(141) into ExpressionStatement(142) at 0", "Insert TryStatement(387) into Block(388) at 3", "Insert SimpleName: content(139) into Assignment: =(141) at 0", "Insert SimpleName: EMPTY_CONTENT(140) into Assignment: =(141) at 1", "Move Block(350) into TryStatement(387) at 0", "Insert CatchClause(386) into TryStatement(387) at 1", "Insert SingleVariableDeclaration(373) into CatchClause(386) at 0", "Insert Block(385) into CatchClause(386) at 1", "Insert SimpleType: Exception(371) into SingleVariableDeclaration(373) at 0", "Insert SimpleName: e(372) into SingleVariableDeclaration(373) at 1", "Move IfStatement(351) into Block(385) at 0", "Insert SimpleName: Exception(370) into SimpleType: Exception(371) at 0", "Insert ThrowStatement(383) into IfStatement(384) at 1", "Insert ClassInstanceCreation(382) into ThrowStatement(383) at 0", "Insert SimpleType: IOException(378) into ClassInstanceCreation(382) at 0", "Insert MethodInvocation(381) into ClassInstanceCreation(382) at 1", "Insert SimpleName: IOException(377) into SimpleType: IOException(378) at 0", "Insert SimpleName: e(379) into MethodInvocation(381) at 0", "Insert SimpleName: toString(380) into MethodInvocation(381) at 1"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}