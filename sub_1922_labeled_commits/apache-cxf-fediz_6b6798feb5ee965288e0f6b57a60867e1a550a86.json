{"application": "apache-cxf-fediz", "csha": "6b6798feb5ee965288e0f6b57a60867e1a550a86", "files": [{"FederationProcessorImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.cxf.fediz.core.spi.FreshnessCallback to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Unsupported protocol\" to MethodInvocation at 2", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: FederationProtocol to SimpleType: FederationProtocol at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: config to MethodInvocation at 0", "INS SimpleName: getProtocol to MethodInvocation at 1", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 1", "INS StringLiteral: \"Unsupported protocol\" to ClassInstanceCreation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: FederationProtocol to InstanceofExpression at 1", "INS SimpleName: error to MethodInvocation at 1", "INS ParenthesizedExpression to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 13"]}, {"root": "INS VariableDeclarationStatement to Block at 14", "operations": ["INS VariableDeclarationStatement to Block at 14", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getFreshness to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS SimpleName: freshnessObj to VariableDeclarationFragment at 0", "INS ParenthesizedExpression to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 16", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS SimpleName: getFreshness to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleType: FreshnessCallback to ClassInstanceCreation at 0", "INS SimpleName: frCB to MethodInvocation at 0", "INS SimpleType: CallbackHandler to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InstanceofExpression to IfStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: request to ClassInstanceCreation at 1", "INS ArrayCreation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: freshness to Assignment: = at 0", "INS CastExpression to Assignment: = at 1", "INS Dimension to ArrayType: Callback[] at 1", "INS SimpleName: Callback to SimpleType: Callback at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: FreshnessCallback to VariableDeclarationStatement at 0", "INS SimpleName: freshnessObj to CastExpression at 1", "INS ArrayType: Callback[] to ArrayCreation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: CallbackHandler to SimpleType: CallbackHandler at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS SimpleType: Callback to ArrayType: Callback[] at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: freshnessObj to InfixExpression: != at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: callback to VariableDeclarationFragment at 0", "INS SimpleName: callback to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: CallbackHandler to CastExpression at 0", "INS SimpleName: freshnessObj to InstanceofExpression at 0", "INS SimpleName: FreshnessCallback to SimpleType: FreshnessCallback at 0", "INS SimpleName: handle to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: CallbackHandler to SimpleType: CallbackHandler at 0", "INS SimpleName: freshness to Assignment: = at 0", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleType: String to CastExpression at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: freshnessObj to CastExpression at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS IfStatement to Block at 16", "INS SimpleName: CallbackHandler to SimpleType: CallbackHandler at 0", "INS SimpleName: callback to ArrayInitializer at 0", "INS SimpleName: freshnessObj to InstanceofExpression at 0", "INS SimpleType: CallbackHandler to InstanceofExpression at 1", "INS SimpleName: frCB to VariableDeclarationFragment at 0", "INS SimpleName: FreshnessCallback to SimpleType: FreshnessCallback at 0"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS StringLiteral: \"Freshness: \" to InfixExpression: + at 0", "INS SimpleName: freshness to InfixExpression: + at 1", "INS SimpleName: info to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 17"]}, {"root": "INS VariableDeclarationStatement to Block at 22", "operations": ["INS SimpleName: realm to VariableDeclarationFragment at 0", "INS SimpleType: FederationProtocol to CastExpression at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS VariableDeclarationStatement to Block at 22", "INS SimpleName: getRealm to MethodInvocation at 1", "INS SimpleName: getProtocol to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: config to MethodInvocation at 0", "INS ParenthesizedExpression to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 29", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: freshness to MethodInvocation at 2", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: freshness to InfixExpression: != at 0", "INS SimpleName: encode to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS CharacterLiteral: '=' to MethodInvocation at 2", "INS SimpleName: URLEncoder to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: freshness to MethodInvocation at 0", "INS InfixExpression: > to InfixExpression: && at 1", "INS StringLiteral: \"UTF-8\" to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 29", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: FederationConstants.PARAM_FRESHNESS to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: > at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: append to MethodInvocation at 1", "INS CharacterLiteral: '&' to MethodInvocation at 2", "INS InfixExpression: != to InfixExpression: && at 0"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS ParenthesizedExpression to PrefixExpression: ! at 0"]}, {"root": "UPDATE from != to ==", "operations": ["UPD InfixExpression: != from != to =="]}, {"root": "UPDATE from realm to freshness", "operations": ["UPD SimpleName: realm from realm to freshness"]}, {"root": "INS SimpleName: realm to InfixExpression: != at 0", "operations": ["INS SimpleName: realm to InfixExpression: != at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InstanceofExpression to ParenthesizedExpression at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV CastExpression to ParenthesizedExpression at 0"]}, {"root": "MOVE from SimpleType: FederationProtocol", "operations": ["MOV SimpleName: FederationProtocol to SimpleType: FederationProtocol at 0"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: fp", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Block"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: fp", "DEL SimpleType: FederationProtocol", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRealm", "DEL SimpleName: fp"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: realm", "DEL MethodInvocation", "DEL SimpleName: fp", "DEL SimpleName: getRealm"]}]}}, {"FederationProcessorImpl_diff": {"operations": ["Insert ImportDeclaration(53) into CompilationUnit(1728) at 18", "Insert QualifiedName: org.apache.cxf.fediz.core.spi.FreshnessCallback(52) into ImportDeclaration(53) at 0", "Insert IfStatement(133) into Block(174) at 0", "Insert PrefixExpression: !(121) into IfStatement(133) at 0", "Insert Block(132) into IfStatement(133) at 1", "Move VariableDeclarationStatement(1312) into Block(1704) at 13", "Move IfStatement(1346) into Block(1704) at 0", "Insert ParenthesizedExpression(120) into PrefixExpression: !(121) at 0", "Insert ExpressionStatement(126) into Block(132) at 0", "Insert ThrowStatement(131) into Block(132) at 1", "Insert VariableDeclarationStatement(1319) into Block(1704) at 14", "Insert IfStatement(1384) into Block(1704) at 16", "Insert ExpressionStatement(1391) into Block(1704) at 17", "Insert VariableDeclarationStatement(1448) into Block(1704) at 22", "Insert IfStatement(1651) into Block(1704) at 28", "Insert InstanceofExpression(119) into ParenthesizedExpression(120) at 0", "Insert MethodInvocation(125) into ExpressionStatement(126) at 0", "Insert ClassInstanceCreation(130) into ThrowStatement(131) at 0", "Insert PrefixExpression: !(1023) into IfStatement(1035) at 0", "Insert SimpleType: Object(1307) into VariableDeclarationStatement(1319) at 0", "Insert VariableDeclarationFragment(1318) into VariableDeclarationStatement(1319) at 1", "Insert InfixExpression: !=(1328) into IfStatement(1384) at 0", "Insert Block(1383) into IfStatement(1384) at 1", "Insert MethodInvocation(1390) into ExpressionStatement(1391) at 0", "Insert SimpleType: String(1436) into VariableDeclarationStatement(1448) at 0", "Insert VariableDeclarationFragment(1447) into VariableDeclarationStatement(1448) at 1", "Update InfixExpression: !=(1351) to ==", "Insert InfixExpression: &&(1631) into IfStatement(1651) at 0", "Insert Block(1650) into IfStatement(1651) at 1", "Insert MethodInvocation(116) into InstanceofExpression(119) at 0", "Insert SimpleType: FederationProtocol(118) into InstanceofExpression(119) at 1", "Insert SimpleName: LOG(122) into MethodInvocation(125) at 0", "Insert SimpleName: error(123) into MethodInvocation(125) at 1", "Insert StringLiteral: \"Unsupported protocol\"(124) into MethodInvocation(125) at 2", "Insert SimpleType: IllegalStateException(128) into ClassInstanceCreation(130) at 0", "Insert StringLiteral: \"Unsupported protocol\"(129) into ClassInstanceCreation(130) at 1", "Insert ParenthesizedExpression(1022) into PrefixExpression: !(1023) at 0", "Insert SimpleName: Object(1306) into SimpleType: Object(1307) at 0", "Insert SimpleName: freshnessObj(1308) into VariableDeclarationFragment(1318) at 0", "Insert MethodInvocation(1317) into VariableDeclarationFragment(1318) at 1", "Update SimpleName: realm(1309) to freshness", "Insert SimpleName: freshnessObj(1326) into InfixExpression: !=(1328) at 0", "Insert NullLiteral(1327) into InfixExpression: !=(1328) at 1", "Insert IfStatement(1382) into Block(1383) at 0", "Insert SimpleName: LOG(1385) into MethodInvocation(1390) at 0", "Insert SimpleName: info(1386) into MethodInvocation(1390) at 1", "Insert InfixExpression: +(1389) into MethodInvocation(1390) at 2", "Insert SimpleName: String(1435) into SimpleType: String(1436) at 0", "Insert SimpleName: realm(1437) into VariableDeclarationFragment(1447) at 0", "Insert MethodInvocation(1446) into VariableDeclarationFragment(1447) at 1", "Insert SimpleName: realm(1449) into InfixExpression: ==(1451) at 0", "Insert InfixExpression: !=(1625) into InfixExpression: &&(1631) at 0", "Insert InfixExpression: >(1630) into InfixExpression: &&(1631) at 1", "Insert ExpressionStatement(1649) into Block(1650) at 0", "Insert SimpleName: config(114) into MethodInvocation(116) at 0", "Insert SimpleName: getProtocol(115) into MethodInvocation(116) at 1", "Insert SimpleName: FederationProtocol(117) into SimpleType: FederationProtocol(118) at 0", "Insert SimpleName: IllegalStateException(127) into SimpleType: IllegalStateException(128) at 0", "Move InstanceofExpression(1324) into ParenthesizedExpression(1022) at 0", "Insert ParenthesizedExpression(1315) into MethodInvocation(1317) at 0", "Insert SimpleName: getFreshness(1316) into MethodInvocation(1317) at 1", "Insert InstanceofExpression(1332) into IfStatement(1382) at 0", "Insert Block(1340) into IfStatement(1382) at 1", "Insert IfStatement(1381) into IfStatement(1382) at 2", "Insert StringLiteral: \"Freshness: \"(1387) into InfixExpression: +(1389) at 0", "Insert SimpleName: freshness(1388) into InfixExpression: +(1389) at 1", "Insert ParenthesizedExpression(1444) into MethodInvocation(1446) at 0", "Insert SimpleName: getRealm(1445) into MethodInvocation(1446) at 1", "Insert SimpleName: freshness(1623) into InfixExpression: !=(1625) at 0", "Insert NullLiteral(1624) into InfixExpression: !=(1625) at 1", "Insert MethodInvocation(1628) into InfixExpression: >(1630) at 0", "Insert NumberLiteral: 0(1629) into InfixExpression: >(1630) at 1", "Insert MethodInvocation(1648) into ExpressionStatement(1649) at 0", "Move CastExpression(1331) into ParenthesizedExpression(1315) at 0", "Insert SimpleName: freshnessObj(1329) into InstanceofExpression(1332) at 0", "Insert SimpleType: String(1331) into InstanceofExpression(1332) at 1", "Insert ExpressionStatement(1339) into Block(1340) at 0", "Insert InstanceofExpression(1344) into IfStatement(1381) at 0", "Insert Block(1380) into IfStatement(1381) at 1", "Insert CastExpression(1443) into ParenthesizedExpression(1444) at 0", "Insert SimpleName: freshness(1626) into MethodInvocation(1628) at 0", "Insert SimpleName: length(1627) into MethodInvocation(1628) at 1", "Insert MethodInvocation(1641) into MethodInvocation(1648) at 0", "Insert SimpleName: append(1642) into MethodInvocation(1648) at 1", "Insert MethodInvocation(1647) into MethodInvocation(1648) at 2", "Insert SimpleName: String(1330) into SimpleType: String(1331) at 0", "Insert Assignment: =(1338) into ExpressionStatement(1339) at 0", "Insert SimpleName: freshnessObj(1341) into InstanceofExpression(1344) at 0", "Insert SimpleType: CallbackHandler(1343) into InstanceofExpression(1344) at 1", "Insert VariableDeclarationStatement(1353) into Block(1380) at 0", "Insert VariableDeclarationStatement(1362) into Block(1380) at 1", "Insert ExpressionStatement(1373) into Block(1380) at 2", "Insert ExpressionStatement(1379) into Block(1380) at 3", "Insert SimpleType: FederationProtocol(1439) into CastExpression(1443) at 0", "Insert MethodInvocation(1442) into CastExpression(1443) at 1", "Insert MethodInvocation(1638) into MethodInvocation(1641) at 0", "Insert SimpleName: append(1639) into MethodInvocation(1641) at 1", "Insert CharacterLiteral: '='(1640) into MethodInvocation(1641) at 2", "Insert SimpleName: URLEncoder(1643) into MethodInvocation(1647) at 0", "Insert SimpleName: encode(1644) into MethodInvocation(1647) at 1", "Insert SimpleName: freshness(1645) into MethodInvocation(1647) at 2", "Insert StringLiteral: \"UTF-8\"(1646) into MethodInvocation(1647) at 3", "Insert SimpleName: freshness(1333) into Assignment: =(1338) at 0", "Insert CastExpression(1337) into Assignment: =(1338) at 1", "Insert SimpleName: CallbackHandler(1342) into SimpleType: CallbackHandler(1343) at 0", "Insert SimpleType: CallbackHandler(1346) into VariableDeclarationStatement(1353) at 0", "Insert VariableDeclarationFragment(1352) into VariableDeclarationStatement(1353) at 1", "Insert SimpleType: FreshnessCallback(1355) into VariableDeclarationStatement(1362) at 0", "Insert VariableDeclarationFragment(1361) into VariableDeclarationStatement(1362) at 1", "Insert MethodInvocation(1372) into ExpressionStatement(1373) at 0", "Insert Assignment: =(1378) into ExpressionStatement(1379) at 0", "Move SimpleName: FederationProtocol(1313) into SimpleType: FederationProtocol(1439) at 0", "Insert SimpleName: config(1440) into MethodInvocation(1442) at 0", "Insert SimpleName: getProtocol(1441) into MethodInvocation(1442) at 1", "Insert MethodInvocation(1635) into MethodInvocation(1638) at 0", "Insert SimpleName: append(1636) into MethodInvocation(1638) at 1", "Insert QualifiedName: FederationConstants.PARAM_FRESHNESS(1637) into MethodInvocation(1638) at 2", "Insert SimpleType: String(1335) into CastExpression(1337) at 0", "Insert SimpleName: freshnessObj(1336) into CastExpression(1337) at 1", "Insert SimpleName: CallbackHandler(1345) into SimpleType: CallbackHandler(1346) at 0", "Insert SimpleName: frCB(1347) into VariableDeclarationFragment(1352) at 0", "Insert CastExpression(1351) into VariableDeclarationFragment(1352) at 1", "Insert SimpleName: FreshnessCallback(1354) into SimpleType: FreshnessCallback(1355) at 0", "Insert SimpleName: callback(1356) into VariableDeclarationFragment(1361) at 0", "Insert ClassInstanceCreation(1360) into VariableDeclarationFragment(1361) at 1", "Insert SimpleName: frCB(1363) into MethodInvocation(1372) at 0", "Insert SimpleName: handle(1364) into MethodInvocation(1372) at 1", "Insert ArrayCreation(1371) into MethodInvocation(1372) at 2", "Insert SimpleName: freshness(1374) into Assignment: =(1378) at 0", "Insert MethodInvocation(1377) into Assignment: =(1378) at 1", "Insert SimpleName: sb(1632) into MethodInvocation(1635) at 0", "Insert SimpleName: append(1633) into MethodInvocation(1635) at 1", "Insert CharacterLiteral: '&'(1634) into MethodInvocation(1635) at 2", "Insert SimpleName: String(1334) into SimpleType: String(1335) at 0", "Insert SimpleType: CallbackHandler(1349) into CastExpression(1351) at 0", "Insert SimpleName: freshnessObj(1350) into CastExpression(1351) at 1", "Insert SimpleType: FreshnessCallback(1358) into ClassInstanceCreation(1360) at 0", "Insert SimpleName: request(1359) into ClassInstanceCreation(1360) at 1", "Insert ArrayType: Callback[](1368) into ArrayCreation(1371) at 0", "Insert ArrayInitializer(1370) into ArrayCreation(1371) at 1", "Insert SimpleName: callback(1375) into MethodInvocation(1377) at 0", "Insert SimpleName: getFreshness(1376) into MethodInvocation(1377) at 1", "Insert SimpleName: CallbackHandler(1348) into SimpleType: CallbackHandler(1349) at 0", "Insert SimpleName: FreshnessCallback(1357) into SimpleType: FreshnessCallback(1358) at 0", "Insert SimpleType: Callback(1366) into ArrayType: Callback[](1368) at 0", "Insert Dimension(1367) into ArrayType: Callback[](1368) at 1", "Insert SimpleName: callback(1369) into ArrayInitializer(1370) at 0", "Insert SimpleName: Callback(1365) into SimpleType: Callback(1366) at 0", "Delete SimpleName: fp(1325)", "Delete Assignment: =(1332)", "Delete ExpressionStatement(1333)", "Delete Block(1334)", "Delete SimpleType: FederationProtocol(1314)", "Delete SimpleName: fp(1315)", "Delete NullLiteral(1316)", "Delete VariableDeclarationFragment(1317)", "Delete VariableDeclarationStatement(1318)", "Delete SimpleName: fp(1347)", "Delete SimpleName: getRealm(1348)", "Delete MethodInvocation(1349)", "Delete SimpleName: realm(1352)", "Delete SimpleName: fp(1353)", "Delete SimpleName: getRealm(1354)", "Delete MethodInvocation(1355)", "Delete Assignment: =(1356)", "Delete ExpressionStatement(1357)", "Delete Block(1358)"]}}, {"FederationProtocol_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: freshness to VariableDeclarationFragment at 0", "INS SimpleType: Object to FieldDeclaration at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS SimpleType: Object to MethodDeclaration at 1", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS MethodInvocation to InfixExpression: || at 1", "INS Block to IfStatement at 2", "INS StringLiteral: \"Only String and Class are supported for 'Freshness'\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Thread to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: cbt to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: freshness to FieldAccess at 1", "INS InfixExpression: != to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: freshness to FieldAccess at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getContextClassLoader to MethodInvocation at 1", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: cbt to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 1", "INS TryStatement to Block at 0", "INS SimpleType: CallbackType to VariableDeclarationStatement at 0", "INS ThrowStatement to Block at 1", "INS SimpleName: currentThread to MethodInvocation at 1", "INS SimpleName: cbt to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: cbt to MethodInvocation at 0", "INS SimpleName: CallbackType to SimpleType: CallbackType at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to IfStatement at 2", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS FieldAccess to InfixExpression: != at 0", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: cbt to MethodInvocation at 0", "INS StringLiteral: \"Failed to create instance of \" to InfixExpression: + at 0", "INS StringLiteral: \"Failed to create instance of \" to InfixExpression: + at 0", "INS SimpleName: error to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: cbt to VariableDeclarationFragment at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: freshness to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS StringLiteral: \"Only String and Class are supported for 'Freshness'\" to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 3", "INS QualifiedName: ArgumentType.STRING to MethodInvocation at 2", "INS SimpleName: cbt to MethodInvocation at 0", "INS SimpleName: cbt to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: loadClass to MethodInvocation at 1", "INS QualifiedName: ArgumentType.CLASS to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: freshness to FieldAccess at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: error to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: newInstance to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS ThisExpression to FieldAccess at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS CatchClause to TryStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS ThisExpression to FieldAccess at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: cbt to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS InfixExpression: == to InfixExpression: || at 0"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS InstanceofExpression to VariableDeclarationFragment at 1", "INS SimpleName: value to InstanceofExpression at 0", "INS Block to IfStatement at 2", "INS InfixExpression: || to IfStatement at 0", "INS ThrowStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: isString to InfixExpression: || at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS SimpleName: CallbackHandler to SimpleType: CallbackHandler at 0", "INS SimpleName: isString to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS SimpleName: error to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: isCallbackHandler to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"java.lang.String or javax.security.auth.callback.CallbackHandler.\" to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleType: CallbackHandler to InstanceofExpression at 1", "INS SimpleName: value to InstanceofExpression at 0", "INS SimpleName: isCallbackHandler to InfixExpression: || at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS StringLiteral: \"Unsupported 'Freshness' object. Type must be \" to InfixExpression: + at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 4", "INS InstanceofExpression to VariableDeclarationFragment at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 1", "INS StringLiteral: \"Unsupported 'Freshness' object\" to MethodInvocation at 2"]}, {"root": "INS SimpleType: Object to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS FieldAccess to ReturnStatement at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: freshness to FieldAccess at 1"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: String to InstanceofExpression at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: freshness to FieldAccess at 1", "INS SimpleName: value to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: String to ClassInstanceCreation at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: setFreshness", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: getFederationProtocol", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"FederationProtocol_diff": {"operations": ["Insert FieldDeclaration(85) into TypeDeclaration: class(1250) at 7", "Insert Modifier: private(80) into FieldDeclaration(85) at 0", "Insert SimpleType: Object(82) into FieldDeclaration(85) at 1", "Insert VariableDeclarationFragment(84) into FieldDeclaration(85) at 2", "Insert SimpleType: Object(910) into MethodDeclaration(1032) at 1", "Insert Block(1031) into MethodDeclaration(1032) at 3", "Insert Block(1082) into MethodDeclaration(1083) at 4", "Insert SimpleName: Object(81) into SimpleType: Object(82) at 0", "Insert SimpleName: freshness(83) into VariableDeclarationFragment(84) at 0", "Insert SimpleName: Object(909) into SimpleType: Object(910) at 0", "Insert IfStatement(922) into Block(1031) at 0", "Insert VariableDeclarationStatement(931) into Block(1031) at 1", "Insert IfStatement(938) into Block(1031) at 2", "Insert IfStatement(1026) into Block(1031) at 3", "Insert ReturnStatement(1030) into Block(1031) at 4", "Insert SimpleType: Object(1037) into SingleVariableDeclaration(1039) at 0", "Insert VariableDeclarationStatement(1048) into Block(1082) at 0", "Insert VariableDeclarationStatement(1057) into Block(1082) at 1", "Insert IfStatement(1081) into Block(1082) at 2", "Insert InfixExpression: !=(916) into IfStatement(922) at 0", "Insert Block(921) into IfStatement(922) at 1", "Insert SimpleType: CallbackType(924) into VariableDeclarationStatement(931) at 0", "Insert VariableDeclarationFragment(930) into VariableDeclarationStatement(931) at 1", "Insert InfixExpression: ==(934) into IfStatement(938) at 0", "Insert Block(937) into IfStatement(938) at 1", "Insert InfixExpression: ||(950) into IfStatement(1026) at 0", "Insert Block(962) into IfStatement(1026) at 1", "Insert IfStatement(1025) into IfStatement(1026) at 2", "Insert FieldAccess(1029) into ReturnStatement(1030) at 0", "Insert SimpleName: Object(1036) into SimpleType: Object(1037) at 0", "Insert Modifier: final(1040) into VariableDeclarationStatement(1048) at 0", "Insert PrimitiveType: boolean(1041) into VariableDeclarationStatement(1048) at 1", "Insert VariableDeclarationFragment(1047) into VariableDeclarationStatement(1048) at 2", "Insert Modifier: final(1049) into VariableDeclarationStatement(1057) at 0", "Insert PrimitiveType: boolean(1050) into VariableDeclarationStatement(1057) at 1", "Insert VariableDeclarationFragment(1056) into VariableDeclarationStatement(1057) at 2", "Insert InfixExpression: ||(1060) into IfStatement(1081) at 0", "Insert Block(1067) into IfStatement(1081) at 1", "Insert Block(1080) into IfStatement(1081) at 2", "Insert FieldAccess(914) into InfixExpression: !=(916) at 0", "Insert NullLiteral(915) into InfixExpression: !=(916) at 1", "Move ReturnStatement(910) into Block(921) at 0", "Insert SimpleName: CallbackType(923) into SimpleType: CallbackType(924) at 0", "Insert SimpleName: cbt(925) into VariableDeclarationFragment(930) at 0", "Move MethodInvocation(909) into VariableDeclarationFragment(930) at 1", "Insert SimpleName: cbt(932) into InfixExpression: ==(934) at 0", "Insert NullLiteral(933) into InfixExpression: ==(934) at 1", "Insert ReturnStatement(936) into Block(937) at 0", "Insert InfixExpression: ==(943) into InfixExpression: ||(950) at 0", "Insert MethodInvocation(949) into InfixExpression: ||(950) at 1", "Insert ExpressionStatement(961) into Block(962) at 0", "Insert MethodInvocation(968) into IfStatement(1025) at 0", "Insert Block(1013) into IfStatement(1025) at 1", "Insert Block(1024) into IfStatement(1025) at 2", "Insert ThisExpression(1027) into FieldAccess(1029) at 0", "Insert SimpleName: freshness(1028) into FieldAccess(1029) at 1", "Insert SimpleName: isString(1042) into VariableDeclarationFragment(1047) at 0", "Insert InstanceofExpression(1046) into VariableDeclarationFragment(1047) at 1", "Insert SimpleName: isCallbackHandler(1051) into VariableDeclarationFragment(1056) at 0", "Insert InstanceofExpression(1055) into VariableDeclarationFragment(1056) at 1", "Insert SimpleName: isString(1058) into InfixExpression: ||(1060) at 0", "Insert SimpleName: isCallbackHandler(1059) into InfixExpression: ||(1060) at 1", "Move ExpressionStatement(925) into Block(1067) at 0", "Insert ExpressionStatement(1072) into Block(1080) at 0", "Insert ThrowStatement(1079) into Block(1080) at 1", "Insert ThisExpression(912) into FieldAccess(914) at 0", "Insert SimpleName: freshness(913) into FieldAccess(914) at 1", "Insert FieldAccess(919) into ReturnStatement(920) at 0", "Insert NullLiteral(935) into ReturnStatement(936) at 0", "Insert MethodInvocation(941) into InfixExpression: ==(943) at 0", "Insert NullLiteral(942) into InfixExpression: ==(943) at 1", "Insert MethodInvocation(946) into MethodInvocation(949) at 0", "Insert SimpleName: equals(947) into MethodInvocation(949) at 1", "Insert QualifiedName: ArgumentType.STRING(948) into MethodInvocation(949) at 2", "Insert Assignment: =(960) into ExpressionStatement(961) at 0", "Insert MethodInvocation(965) into MethodInvocation(968) at 0", "Insert SimpleName: equals(966) into MethodInvocation(968) at 1", "Insert QualifiedName: ArgumentType.CLASS(967) into MethodInvocation(968) at 2", "Insert TryStatement(1012) into Block(1013) at 0", "Insert ExpressionStatement(1018) into Block(1024) at 0", "Insert ThrowStatement(1023) into Block(1024) at 1", "Insert SimpleName: value(1043) into InstanceofExpression(1046) at 0", "Move SimpleType: String(904) into InstanceofExpression(1046) at 1", "Insert SimpleName: value(1052) into InstanceofExpression(1055) at 0", "Insert SimpleType: CallbackHandler(1054) into InstanceofExpression(1055) at 1", "Insert Assignment: =(1065) into ExpressionStatement(1066) at 0", "Insert MethodInvocation(1071) into ExpressionStatement(1072) at 0", "Insert ClassInstanceCreation(1078) into ThrowStatement(1079) at 0", "Insert ThisExpression(917) into FieldAccess(919) at 0", "Insert SimpleName: freshness(918) into FieldAccess(919) at 1", "Insert SimpleName: cbt(939) into MethodInvocation(941) at 0", "Insert SimpleName: getType(940) into MethodInvocation(941) at 1", "Insert SimpleName: cbt(944) into MethodInvocation(946) at 0", "Insert SimpleName: getType(945) into MethodInvocation(946) at 1", "Insert FieldAccess(953) into Assignment: =(960) at 0", "Insert ClassInstanceCreation(959) into Assignment: =(960) at 1", "Insert SimpleName: cbt(963) into MethodInvocation(965) at 0", "Insert SimpleName: getType(964) into MethodInvocation(965) at 1", "Insert Block(986) into TryStatement(1012) at 0", "Insert CatchClause(1011) into TryStatement(1012) at 1", "Insert MethodInvocation(1017) into ExpressionStatement(1018) at 0", "Insert ClassInstanceCreation(1022) into ThrowStatement(1023) at 0", "Insert SimpleName: CallbackHandler(1053) into SimpleType: CallbackHandler(1054) at 0", "Insert FieldAccess(1063) into Assignment: =(1065) at 0", "Insert SimpleName: value(1064) into Assignment: =(1065) at 1", "Insert SimpleName: LOG(1068) into MethodInvocation(1071) at 0", "Insert SimpleName: error(1069) into MethodInvocation(1071) at 1", "Insert StringLiteral: \"Unsupported 'Freshness' object\"(1070) into MethodInvocation(1071) at 2", "Insert SimpleType: IllegalArgumentException(1074) into ClassInstanceCreation(1078) at 0", "Insert InfixExpression: +(1077) into ClassInstanceCreation(1078) at 1", "Insert ThisExpression(951) into FieldAccess(953) at 0", "Insert SimpleName: freshness(952) into FieldAccess(953) at 1", "Move SimpleType: String(917) into ClassInstanceCreation(959) at 0", "Insert MethodInvocation(958) into ClassInstanceCreation(959) at 1", "Insert ExpressionStatement(985) into Block(986) at 0", "Insert SingleVariableDeclaration(990) into CatchClause(1011) at 0", "Insert Block(1010) into CatchClause(1011) at 1", "Insert SimpleName: LOG(1014) into MethodInvocation(1017) at 0", "Insert SimpleName: error(1015) into MethodInvocation(1017) at 1", "Insert StringLiteral: \"Only String and Class are supported for 'Freshness'\"(1016) into MethodInvocation(1017) at 2", "Insert SimpleType: IllegalStateException(1020) into ClassInstanceCreation(1022) at 0", "Insert StringLiteral: \"Only String and Class are supported for 'Freshness'\"(1021) into ClassInstanceCreation(1022) at 1", "Insert ThisExpression(1061) into FieldAccess(1063) at 0", "Insert SimpleName: freshness(1062) into FieldAccess(1063) at 1", "Insert SimpleName: IllegalArgumentException(1073) into SimpleType: IllegalArgumentException(1074) at 0", "Insert StringLiteral: \"Unsupported 'Freshness' object. Type must be \"(1075) into InfixExpression: +(1077) at 0", "Insert StringLiteral: \"java.lang.String or javax.security.auth.callback.CallbackHandler.\"(1076) into InfixExpression: +(1077) at 1", "Insert SimpleName: cbt(956) into MethodInvocation(958) at 0", "Insert SimpleName: getValue(957) into MethodInvocation(958) at 1", "Insert Assignment: =(984) into ExpressionStatement(985) at 0", "Insert SimpleType: Exception(988) into SingleVariableDeclaration(990) at 0", "Insert SimpleName: e(989) into SingleVariableDeclaration(990) at 1", "Insert ExpressionStatement(1000) into Block(1010) at 0", "Insert ThrowStatement(1009) into Block(1010) at 1", "Insert SimpleName: IllegalStateException(1019) into SimpleType: IllegalStateException(1020) at 0", "Insert FieldAccess(971) into Assignment: =(984) at 0", "Insert MethodInvocation(983) into Assignment: =(984) at 1", "Insert SimpleName: Exception(987) into SimpleType: Exception(988) at 0", "Insert MethodInvocation(999) into ExpressionStatement(1000) at 0", "Insert ClassInstanceCreation(1008) into ThrowStatement(1009) at 0", "Insert ThisExpression(969) into FieldAccess(971) at 0", "Insert SimpleName: freshness(970) into FieldAccess(971) at 1", "Insert MethodInvocation(981) into MethodInvocation(983) at 0", "Insert SimpleName: newInstance(982) into MethodInvocation(983) at 1", "Insert SimpleName: LOG(991) into MethodInvocation(999) at 0", "Insert SimpleName: error(992) into MethodInvocation(999) at 1", "Insert InfixExpression: +(997) into MethodInvocation(999) at 2", "Insert SimpleName: e(998) into MethodInvocation(999) at 3", "Insert SimpleType: IllegalStateException(1002) into ClassInstanceCreation(1008) at 0", "Insert InfixExpression: +(1007) into ClassInstanceCreation(1008) at 1", "Insert MethodInvocation(976) into MethodInvocation(981) at 0", "Insert SimpleName: loadClass(977) into MethodInvocation(981) at 1", "Insert MethodInvocation(980) into MethodInvocation(981) at 2", "Insert StringLiteral: \"Failed to create instance of \"(993) into InfixExpression: +(997) at 0", "Insert MethodInvocation(996) into InfixExpression: +(997) at 1", "Insert SimpleName: IllegalStateException(1001) into SimpleType: IllegalStateException(1002) at 0", "Insert StringLiteral: \"Failed to create instance of \"(1003) into InfixExpression: +(1007) at 0", "Insert MethodInvocation(1006) into InfixExpression: +(1007) at 1", "Insert MethodInvocation(974) into MethodInvocation(976) at 0", "Insert SimpleName: getContextClassLoader(975) into MethodInvocation(976) at 1", "Insert SimpleName: cbt(978) into MethodInvocation(980) at 0", "Insert SimpleName: getValue(979) into MethodInvocation(980) at 1", "Insert SimpleName: cbt(994) into MethodInvocation(996) at 0", "Insert SimpleName: getValue(995) into MethodInvocation(996) at 1", "Insert SimpleName: cbt(1004) into MethodInvocation(1006) at 0", "Insert SimpleName: getValue(1005) into MethodInvocation(1006) at 1", "Insert SimpleName: Thread(972) into MethodInvocation(974) at 0", "Insert SimpleName: currentThread(973) into MethodInvocation(974) at 1", "Delete Block(911)", "Delete SimpleName: getFederationProtocol(920)", "Delete MethodInvocation(921)", "Delete SimpleName: setFreshness(922)", "Delete SimpleName: value(923)", "Delete MethodInvocation(924)", "Delete Block(926)"]}}, {"IdpServlet_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS StringLiteral: \"wfresh\" to VariableDeclarationFragment at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: PARAM_WFRESH to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationStatement to Block at 4", "INS SimpleName: PARAM_WFRESH to MethodInvocation at 2", "INS SimpleName: wfresh to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: getParameter to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS SimpleName: response to MethodInvocation at 0", "INS StringLiteral: \"Cache-Control\" to MethodInvocation at 2", "INS SimpleName: setHeader to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"no-store, no-cache, must-revalidate, private\" to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS StringLiteral: \"Cache-Control\" to MethodInvocation at 2", "INS StringLiteral: \"no-store, no-cache, must-revalidate, private\" to MethodInvocation at 3", "INS SimpleName: setHeader to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: response to MethodInvocation at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: info to MethodInvocation at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: wfresh to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: authenticationRequired to Assignment: = at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS StringLiteral: \"' valid but relying party requested new authentication\" to InfixExpression: + at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS StringLiteral: \"0\" to MethodInvocation at 2", "INS IfStatement to IfStatement at 2", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"IDP token of '\" to InfixExpression: + at 0", "INS SimpleName: wfresh to InfixExpression: != at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: user to InfixExpression: + at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}]}}, {"IdpServlet_diff": {"operations": ["Insert FieldDeclaration(150) into TypeDeclaration: class(1614) at 11", "Insert Modifier: public(142) into FieldDeclaration(150) at 0", "Insert Modifier: static(143) into FieldDeclaration(150) at 1", "Insert Modifier: final(144) into FieldDeclaration(150) at 2", "Insert SimpleType: String(146) into FieldDeclaration(150) at 3", "Insert VariableDeclarationFragment(149) into FieldDeclaration(150) at 4", "Insert SimpleName: String(145) into SimpleType: String(146) at 0", "Insert SimpleName: PARAM_WFRESH(147) into VariableDeclarationFragment(149) at 0", "Insert StringLiteral: \"wfresh\"(148) into VariableDeclarationFragment(149) at 1", "Insert VariableDeclarationStatement(478) into Block(1060) at 4", "Insert SimpleType: String(471) into VariableDeclarationStatement(478) at 0", "Insert VariableDeclarationFragment(477) into VariableDeclarationStatement(478) at 1", "Insert SimpleName: String(470) into SimpleType: String(471) at 0", "Insert SimpleName: wfresh(472) into VariableDeclarationFragment(477) at 0", "Insert MethodInvocation(476) into VariableDeclarationFragment(477) at 1", "Insert ExpressionStatement(1033) into Block(1045) at 12", "Insert SimpleName: request(473) into MethodInvocation(476) at 0", "Insert SimpleName: getParameter(474) into MethodInvocation(476) at 1", "Insert SimpleName: PARAM_WFRESH(475) into MethodInvocation(476) at 2", "Insert MethodInvocation(1032) into ExpressionStatement(1033) at 0", "Insert SimpleName: response(1028) into MethodInvocation(1032) at 0", "Insert SimpleName: setHeader(1029) into MethodInvocation(1032) at 1", "Insert StringLiteral: \"Cache-Control\"(1030) into MethodInvocation(1032) at 2", "Insert StringLiteral: \"no-store, no-cache, must-revalidate, private\"(1031) into MethodInvocation(1032) at 3", "Insert ExpressionStatement(722) into Block(729) at 3", "Insert IfStatement(654) into IfStatement(655) at 2", "Insert MethodInvocation(721) into ExpressionStatement(722) at 0", "Insert InfixExpression: &&(631) into IfStatement(654) at 0", "Insert Block(644) into IfStatement(654) at 1", "Move Block(614) into IfStatement(654) at 2", "Insert SimpleName: response(717) into MethodInvocation(721) at 0", "Insert SimpleName: setHeader(718) into MethodInvocation(721) at 1", "Insert StringLiteral: \"Cache-Control\"(719) into MethodInvocation(721) at 2", "Insert StringLiteral: \"no-store, no-cache, must-revalidate, private\"(720) into MethodInvocation(721) at 3", "Insert InfixExpression: !=(626) into InfixExpression: &&(631) at 0", "Insert MethodInvocation(630) into InfixExpression: &&(631) at 1", "Insert ExpressionStatement(639) into Block(644) at 0", "Insert ExpressionStatement(643) into Block(644) at 1", "Insert SimpleName: wfresh(624) into InfixExpression: !=(626) at 0", "Insert NullLiteral(625) into InfixExpression: !=(626) at 1", "Insert SimpleName: wfresh(627) into MethodInvocation(630) at 0", "Insert SimpleName: equals(628) into MethodInvocation(630) at 1", "Insert StringLiteral: \"0\"(629) into MethodInvocation(630) at 2", "Insert MethodInvocation(638) into ExpressionStatement(639) at 0", "Insert Assignment: =(642) into ExpressionStatement(643) at 0", "Insert SimpleName: LOG(632) into MethodInvocation(638) at 0", "Insert SimpleName: info(633) into MethodInvocation(638) at 1", "Insert InfixExpression: +(637) into MethodInvocation(638) at 2", "Insert SimpleName: authenticationRequired(640) into Assignment: =(642) at 0", "Insert BooleanLiteral: true(641) into Assignment: =(642) at 1", "Insert StringLiteral: \"IDP token of '\"(634) into InfixExpression: +(637) at 0", "Insert SimpleName: user(635) into InfixExpression: +(637) at 1", "Insert StringLiteral: \"' valid but relying party requested new authentication\"(636) into InfixExpression: +(637) at 2"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}