{"application": "google-closure-templates", "csha": "17946201c5b19f9a4e782d875b9006c62aaf9835", "files": [{"SoyModule_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.types.SoyTypeOps", "DEL ImportDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL TypeLiteral", "DEL SimpleName: bind", "DEL MethodInvocation", "DEL SimpleType: SoyTypeOps", "DEL SimpleName: SoyTypeOps", "DEL ExpressionStatement"]}]}}, {"SoyModule_diff": {"operations": ["Delete QualifiedName: com.google.template.soy.types.SoyTypeOps(32)", "Delete ImportDeclaration(33)", "Delete SimpleName: bind(117)", "Delete SimpleName: SoyTypeOps(118)", "Delete SimpleType: SoyTypeOps(119)", "Delete TypeLiteral(120)", "Delete MethodInvocation(121)", "Delete ExpressionStatement(122)"]}}, {"GenIncrementalDomCodeVisitor_cluster": {"actions": [{"root": "UPDATE from com.google.template.soy.types.SoyTypeOps to com.google.template.soy.types.SoyTypeRegistry", "operations": ["UPD QualifiedName: com.google.template.soy.types.SoyTypeOps from com.google.template.soy.types.SoyTypeOps to com.google.template.soy.types.SoyTypeRegistry"]}, {"root": "UPDATE from SoyTypeOps to SoyTypeRegistry", "operations": ["UPD SimpleType: SoyTypeOps from SoyTypeOps to SoyTypeRegistry", "UPD SimpleName: SoyTypeOps from SoyTypeOps to SoyTypeRegistry"]}, {"root": "UPDATE from typeOps to typeRegistry", "operations": ["UPD SimpleName: typeOps from typeOps to typeRegistry", "UPD SimpleName: typeOps from typeOps to typeRegistry"]}]}}, {"GenIncrementalDomCodeVisitor_diff": {"operations": ["Update QualifiedName: com.google.template.soy.types.SoyTypeOps(124) to com.google.template.soy.types.SoyTypeRegistry", "Update SimpleType: SoyTypeOps(240) to SoyTypeRegistry", "Update SimpleName: typeOps(241) to typeRegistry", "Update SimpleName: SoyTypeOps(239) to SoyTypeRegistry", "Update SimpleName: typeOps(250) to typeRegistry"]}}, {"ResolveExpressionTypesVisitor_cluster": {"actions": [{"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SoyType to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SoyType to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from typeOps to SoyTypes", "operations": ["UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes", "UPD SimpleName: typeOps from typeOps to SoyTypes"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.types.SoyTypeOps"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL Javadoc", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: SoyTypeOps", "DEL TextElement: Common operations on Soy types. ", "DEL SimpleType: SoyTypeOps", "DEL SimpleName: typeOps"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: typeOps", "DEL ThisExpression", "DEL SimpleName: SoyTypeOps", "DEL Assignment: =", "DEL SimpleType: SoyTypeOps", "DEL SimpleName: typeRegistry"]}]}}, {"ResolveExpressionTypesVisitor_diff": {"operations": ["Move SimpleType: SoyType(1657) into VariableDeclarationStatement(1637) at 0", "Move SimpleType: SoyType(1648) into VariableDeclarationStatement(1647) at 0", "Update SimpleName: typeOps(1912) to SoyTypes", "Update SimpleName: typeOps(1160) to SoyTypes", "Insert SimpleName: typeRegistry(1141) into MethodInvocation(1143) at 2", "Update SimpleName: typeOps(1650) to SoyTypes", "Insert SimpleName: typeRegistry(1633) into MethodInvocation(1635) at 2", "Update SimpleName: typeOps(1659) to SoyTypes", "Insert SimpleName: typeRegistry(1643) into MethodInvocation(1645) at 2", "Update SimpleName: typeOps(2009) to SoyTypes", "Update SimpleName: typeOps(2013) to SoyTypes", "Update SimpleName: typeOps(2097) to SoyTypes", "Update SimpleName: typeOps(2441) to SoyTypes", "Insert SimpleName: typeRegistry(2426) into MethodInvocation(2439) at 2", "Update SimpleName: typeOps(2534) to SoyTypes", "Insert SimpleName: typeRegistry(2520) into MethodInvocation(2533) at 2", "Update SimpleName: typeOps(3242) to SoyTypes", "Update SimpleName: typeOps(3592) to SoyTypes", "Insert SimpleName: typeRegistry(3579) into MethodInvocation(3581) at 2", "Update SimpleName: typeOps(3862) to SoyTypes", "Insert SimpleName: typeRegistry(3850) into MethodInvocation(3852) at 2", "Update SimpleName: typeOps(1420) to SoyTypes", "Insert SimpleName: typeRegistry(1402) into MethodInvocation(1404) at 2", "Update SimpleName: typeOps(4883) to SoyTypes", "Insert SimpleName: typeRegistry(4872) into MethodInvocation(4877) at 2", "Delete QualifiedName: com.google.template.soy.types.SoyTypeOps(128)", "Delete ImportDeclaration(129)", "Delete TextElement: Common operations on Soy types. (479)", "Delete TagElement(480)", "Delete Javadoc(481)", "Delete Modifier: private(482)", "Delete Modifier: final(483)", "Delete SimpleName: SoyTypeOps(484)", "Delete SimpleType: SoyTypeOps(485)", "Delete SimpleName: typeOps(486)", "Delete VariableDeclarationFragment(487)", "Delete FieldDeclaration(488)", "Delete ThisExpression(523)", "Delete SimpleName: typeOps(524)", "Delete FieldAccess(525)", "Delete SimpleName: SoyTypeOps(526)", "Delete SimpleType: SoyTypeOps(527)", "Delete SimpleName: typeRegistry(528)", "Delete ClassInstanceCreation(529)", "Delete Assignment: =(530)", "Delete ExpressionStatement(531)"]}}, {"SoyTypeOps_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.types", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Optional", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.types.primitive.ErrorType"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.types.primitive.FloatType"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.inject.Inject"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationStatement", "DEL InfixExpression: ||", "DEL InfixExpression: ||", "DEL TextElement:  A type that is assignable from both t0 and t1.", "DEL SimpleName: t0", "DEL SimpleName: getInstance", "DEL Block", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: computeLowestCommonType", "DEL InfixExpression: ==", "DEL MethodDeclaration", "DEL SimpleName: typeRegistry", "DEL Modifier: public", "DEL TextElement:  list of types.", "DEL TagElement: @param", "DEL MethodInvocation", "DEL SimpleName: Optional", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: isNumericOrUnknown", "DEL ThisExpression", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: t0", "DEL TextElement: meaning a subtype of 'number' or unknown.", "DEL SimpleName: typeRegistry", "DEL Assignment: =", "DEL TagElement: @param", "DEL SimpleName: type", "DEL IfStatement", "DEL QualifiedName: SoyTypes.NUMBER_TYPE", "DEL SimpleName: isAssignableFrom", "DEL Block", "DEL IfStatement", "DEL ExpressionStatement", "DEL IfStatement", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getTypeRegistry", "DEL SimpleName: computeLowestCommonType", "DEL SimpleName: type", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL SimpleName: t1", "DEL SimpleName: SoyType", "DEL MethodInvocation", "DEL SimpleName: absent", "DEL SimpleName: Inject", "DEL NullLiteral", "DEL SimpleName: SoyType", "DEL SingleVariableDeclaration", "DEL SimpleName: SoyType", "DEL SimpleType: Optional", "DEL SimpleName: t0", "DEL SimpleName: t1", "DEL SimpleName: type", "DEL SimpleName: SoyType", "DEL Block", "DEL TextElement:  Another type.", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: t1", "DEL SimpleName: getInstance", "DEL MethodInvocation", "DEL SimpleName: isAssignableFrom", "DEL SimpleType: SoyType", "DEL SimpleName: SoyTypeRegistry", "DEL SimpleName: t0", "DEL SimpleType: SoyTypeRegistry", "DEL SimpleType: SoyType", "DEL SimpleName: types", "DEL SimpleName: t0", "DEL Modifier: public", "DEL ParameterizedType: Collection<SoyType>", "DEL TagElement", "DEL InfixExpression: ==", "DEL SimpleName: getInstance", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: SoyType", "DEL SimpleName: SoyType", "DEL Block", "DEL SimpleName: Optional", "DEL InfixExpression: ==", "DEL Block", "DEL PrimitiveType: boolean", "DEL SimpleName: t0", "DEL SimpleName: of", "DEL TextElement:  Another type.", "DEL SimpleName: t1", "DEL SimpleName: isNumericOrUnknown", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: t1", "DEL Block", "DEL Block", "DEL TextElement: Compute the most specific type that is assignable from all types within a collection.", "DEL SimpleName: getOrCreateUnionType", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleType: SoyType", "DEL SimpleName: ErrorType", "DEL MethodInvocation", "DEL SimpleType: SoyType", "DEL TagElement", "DEL SimpleName: t0", "DEL SingleVariableDeclaration", "DEL SimpleName: typeRegistry", "DEL Modifier: public", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: t1", "DEL TypeDeclaration: class", "DEL IfStatement", "DEL TagElement: @param", "DEL SimpleName: t0", "DEL IfStatement", "DEL SimpleName: t1", "DEL SimpleName: SoyType", "DEL SimpleName: isNumericOrUnknown", "DEL IfStatement", "DEL SimpleType: SoyType", "DEL SimpleName: t1", "DEL SimpleName: t0", "DEL Block", "DEL SimpleName: SoyType", "DEL MethodInvocation", "DEL SimpleName: getInstance", "DEL SimpleName: SoyTypeOps", "DEL TagElement: @return", "DEL SimpleName: ErrorType", "DEL SimpleName: t1", "DEL TextElement: Common operations on types.", "DEL MethodInvocation", "DEL SimpleName: SoyType", "DEL MethodInvocation", "DEL SimpleName: SoyType", "DEL Block", "DEL Javadoc", "DEL IfStatement", "DEL SimpleName: Optional", "DEL SimpleName: Collection", "DEL Modifier: public", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: Collection", "DEL SimpleName: isAssignableFrom", "DEL SimpleName: t1", "DEL TagElement", "DEL SimpleName: t0", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: ErrorType", "DEL MethodDeclaration", "DEL SimpleName: t1", "DEL ReturnStatement", "DEL SimpleName: isAssignableFrom", "DEL SimpleType: SoyType", "DEL SimpleName: t0", "DEL SimpleType: SoyType", "DEL SimpleName: Optional", "DEL SimpleName: result", "DEL Block", "DEL SimpleName: of", "DEL SimpleName: t0", "DEL SimpleType: SoyType", "DEL SimpleName: t0", "DEL ConditionalExpression", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: ErrorType", "DEL SimpleName: SoyType", "DEL TextElement: Compute the most specific type that is assignable from both t0 and t1.", "DEL SimpleName: computeLowestCommonType", "DEL SimpleName: SoyType", "DEL SimpleName: types", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleType: SoyType", "DEL QualifiedName: SoyType.Kind.UNKNOWN", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: Optional", "DEL FieldAccess", "DEL SimpleName: getInstance", "DEL SimpleName: SoyTypeRegistry", "DEL SimpleName: of", "DEL Block", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: result", "DEL MethodInvocation", "DEL SimpleName: computeLowestCommonTypeArithmetic", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleType: SoyType", "DEL MethodInvocation", "DEL SimpleName: getKind", "DEL TextElement:  A type that is assignable from all of the listed types.", "DEL TextElement:  A type.", "DEL SimpleName: typeRegistry", "DEL TextElement:  A type.", "DEL SimpleName: t1", "DEL InfixExpression: ==", "DEL SimpleName: Optional", "DEL TagElement", "DEL SimpleName: ErrorType", "DEL Javadoc", "DEL SimpleName: of", "DEL SimpleName: t0", "DEL InfixExpression: ||", "DEL TextElement: arithmetic promotions - that is, converting int to float if needed.", "DEL MethodInvocation", "DEL SimpleType: SoyTypeRegistry", "DEL MethodInvocation", "DEL SimpleName: t0", "DEL Assignment: =", "DEL SimpleName: t1", "DEL SimpleName: SoyTypeOps", "DEL ReturnStatement", "DEL SimpleName: typeRegistry", "DEL InfixExpression: ==", "DEL SimpleName: t1", "DEL SimpleName: typeRegistry", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleType: SoyType", "DEL SimpleName: ErrorType", "DEL SimpleType: SoyType", "DEL NullLiteral", "DEL SimpleType: SoyType", "DEL SimpleName: t0", "DEL TextElement:  A type that is assignable from both t0 and t1 or absent if the types are not arithmetic", "DEL ParameterizedType: Optional<SoyType>", "DEL SimpleName: getInstance", "DEL InfixExpression: ||", "DEL TagElement: @param", "DEL SimpleName: types", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: FloatType", "DEL ReturnStatement", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleName: t0", "DEL SimpleName: SoyTypeRegistry", "DEL Block", "DEL MethodDeclaration", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL SimpleName: isAssignableFrom", "DEL SimpleName: result", "DEL FieldDeclaration", "DEL SimpleName: getInstance", "DEL InfixExpression: ==", "DEL TextElement: Compute the most specific type that is assignable from both t0 and t1, taking into account", "DEL Block", "DEL Block", "DEL SimpleType: SoyTypeRegistry", "DEL Modifier: final", "DEL TagElement: @return", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: SoyType"]}]}}, {"SoyTypeOps_diff": {"operations": ["Delete QualifiedName: com.google.template.soy.types(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: com.google.common.base.Optional(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: com.google.template.soy.types.primitive.ErrorType(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: com.google.template.soy.types.primitive.FloatType(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.Collection(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: javax.inject.Inject(10)", "Delete ImportDeclaration(11)", "Delete TextElement: Common operations on types.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete Modifier: public(15)", "Delete Modifier: final(16)", "Delete SimpleName: SoyTypeOps(17)", "Delete Modifier: private(18)", "Delete Modifier: final(19)", "Delete SimpleName: SoyTypeRegistry(20)", "Delete SimpleType: SoyTypeRegistry(21)", "Delete SimpleName: typeRegistry(22)", "Delete VariableDeclarationFragment(23)", "Delete FieldDeclaration(24)", "Delete SimpleName: Inject(25)", "Delete MarkerAnnotation(26)", "Delete Modifier: public(27)", "Delete SimpleName: SoyTypeOps(28)", "Delete SimpleName: SoyTypeRegistry(29)", "Delete SimpleType: SoyTypeRegistry(30)", "Delete SimpleName: typeRegistry(31)", "Delete SingleVariableDeclaration(32)", "Delete ThisExpression(33)", "Delete SimpleName: typeRegistry(34)", "Delete FieldAccess(35)", "Delete SimpleName: typeRegistry(36)", "Delete Assignment: =(37)", "Delete ExpressionStatement(38)", "Delete Block(39)", "Delete MethodDeclaration(40)", "Delete Modifier: public(41)", "Delete SimpleName: SoyTypeRegistry(42)", "Delete SimpleType: SoyTypeRegistry(43)", "Delete SimpleName: getTypeRegistry(44)", "Delete SimpleName: typeRegistry(45)", "Delete ReturnStatement(46)", "Delete Block(47)", "Delete MethodDeclaration(48)", "Delete TextElement: Compute the most specific type that is assignable from both t0 and t1.(49)", "Delete TagElement(50)", "Delete SimpleName: t0(51)", "Delete TextElement:  A type.(52)", "Delete TagElement: @param(53)", "Delete SimpleName: t1(54)", "Delete TextElement:  Another type.(55)", "Delete TagElement: @param(56)", "Delete TextElement:  A type that is assignable from both t0 and t1.(57)", "Delete TagElement: @return(58)", "Delete Javadoc(59)", "Delete Modifier: public(60)", "Delete SimpleName: SoyType(61)", "Delete SimpleType: SoyType(62)", "Delete SimpleName: computeLowestCommonType(63)", "Delete SimpleName: SoyType(64)", "Delete SimpleType: SoyType(65)", "Delete SimpleName: t0(66)", "Delete SingleVariableDeclaration(67)", "Delete SimpleName: SoyType(68)", "Delete SimpleType: SoyType(69)", "Delete SimpleName: t1(70)", "Delete SingleVariableDeclaration(71)", "Delete SimpleName: t0(72)", "Delete SimpleName: ErrorType(73)", "Delete SimpleName: getInstance(74)", "Delete MethodInvocation(75)", "Delete InfixExpression: ==(76)", "Delete SimpleName: t1(77)", "Delete SimpleName: ErrorType(78)", "Delete SimpleName: getInstance(79)", "Delete MethodInvocation(80)", "Delete InfixExpression: ==(81)", "Delete InfixExpression: ||(82)", "Delete SimpleName: ErrorType(83)", "Delete SimpleName: getInstance(84)", "Delete MethodInvocation(85)", "Delete ReturnStatement(86)", "Delete Block(87)", "Delete IfStatement(88)", "Delete SimpleName: t0(89)", "Delete SimpleName: isAssignableFrom(90)", "Delete SimpleName: t1(91)", "Delete MethodInvocation(92)", "Delete SimpleName: t0(93)", "Delete ReturnStatement(94)", "Delete Block(95)", "Delete SimpleName: t1(96)", "Delete SimpleName: isAssignableFrom(97)", "Delete SimpleName: t0(98)", "Delete MethodInvocation(99)", "Delete SimpleName: t1(100)", "Delete ReturnStatement(101)", "Delete Block(102)", "Delete SimpleName: typeRegistry(103)", "Delete SimpleName: getOrCreateUnionType(104)", "Delete SimpleName: t0(105)", "Delete SimpleName: t1(106)", "Delete MethodInvocation(107)", "Delete ReturnStatement(108)", "Delete Block(109)", "Delete IfStatement(110)", "Delete IfStatement(111)", "Delete Block(112)", "Delete MethodDeclaration(113)", "Delete TextElement: Compute the most specific type that is assignable from all types within a collection.(114)", "Delete TagElement(115)", "Delete SimpleName: types(116)", "Delete TextElement:  list of types.(117)", "Delete TagElement: @param(118)", "Delete TextElement:  A type that is assignable from all of the listed types.(119)", "Delete TagElement: @return(120)", "Delete Javadoc(121)", "Delete Modifier: public(122)", "Delete SimpleName: SoyType(123)", "Delete SimpleType: SoyType(124)", "Delete SimpleName: computeLowestCommonType(125)", "Delete SimpleName: Collection(126)", "Delete SimpleType: Collection(127)", "Delete SimpleName: SoyType(128)", "Delete SimpleType: SoyType(129)", "Delete ParameterizedType: Collection<SoyType>(130)", "Delete SimpleName: types(131)", "Delete SingleVariableDeclaration(132)", "Delete SimpleName: SoyType(133)", "Delete SimpleType: SoyType(134)", "Delete SimpleName: result(135)", "Delete NullLiteral(136)", "Delete VariableDeclarationFragment(137)", "Delete VariableDeclarationStatement(138)", "Delete SimpleName: SoyType(139)", "Delete SimpleType: SoyType(140)", "Delete SimpleName: type(141)", "Delete SingleVariableDeclaration(142)", "Delete SimpleName: types(143)", "Delete SimpleName: result(144)", "Delete SimpleName: result(145)", "Delete NullLiteral(146)", "Delete InfixExpression: ==(147)", "Delete ParenthesizedExpression(148)", "Delete SimpleName: type(149)", "Delete SimpleName: computeLowestCommonType(150)", "Delete SimpleName: result(151)", "Delete SimpleName: type(152)", "Delete MethodInvocation(153)", "Delete ConditionalExpression(154)", "Delete Assignment: =(155)", "Delete ExpressionStatement(156)", "Delete Block(157)", "Delete EnhancedForStatement(158)", "Delete SimpleName: result(159)", "Delete ReturnStatement(160)", "Delete Block(161)", "Delete MethodDeclaration(162)", "Delete TextElement: Compute the most specific type that is assignable from both t0 and t1, taking into account(163)", "Delete TextElement: arithmetic promotions - that is, converting int to float if needed.(164)", "Delete TagElement(165)", "Delete SimpleName: t0(166)", "Delete TextElement:  A type.(167)", "Delete TagElement: @param(168)", "Delete SimpleName: t1(169)", "Delete TextElement:  Another type.(170)", "Delete TagElement: @param(171)", "Delete TextElement:  A type that is assignable from both t0 and t1 or absent if the types are not arithmetic(172)", "Delete TextElement: meaning a subtype of 'number' or unknown.(173)", "Delete TagElement: @return(174)", "Delete Javadoc(175)", "Delete Modifier: public(176)", "Delete SimpleName: Optional(177)", "Delete SimpleType: Optional(178)", "Delete SimpleName: SoyType(179)", "Delete SimpleType: SoyType(180)", "Delete ParameterizedType: Optional<SoyType>(181)", "Delete SimpleName: computeLowestCommonTypeArithmetic(182)", "Delete SimpleName: SoyType(183)", "Delete SimpleType: SoyType(184)", "Delete SimpleName: t0(185)", "Delete SingleVariableDeclaration(186)", "Delete SimpleName: SoyType(187)", "Delete SimpleType: SoyType(188)", "Delete SimpleName: t1(189)", "Delete SingleVariableDeclaration(190)", "Delete SimpleName: t0(191)", "Delete SimpleName: ErrorType(192)", "Delete SimpleName: getInstance(193)", "Delete MethodInvocation(194)", "Delete InfixExpression: ==(195)", "Delete SimpleName: t1(196)", "Delete SimpleName: ErrorType(197)", "Delete SimpleName: getInstance(198)", "Delete MethodInvocation(199)", "Delete InfixExpression: ==(200)", "Delete InfixExpression: ||(201)", "Delete SimpleName: Optional(202)", "Delete SimpleName: SoyType(203)", "Delete SimpleType: SoyType(204)", "Delete SimpleName: of(205)", "Delete SimpleName: ErrorType(206)", "Delete SimpleName: getInstance(207)", "Delete MethodInvocation(208)", "Delete MethodInvocation(209)", "Delete ReturnStatement(210)", "Delete Block(211)", "Delete IfStatement(212)", "Delete SimpleName: isNumericOrUnknown(213)", "Delete SimpleName: t0(214)", "Delete MethodInvocation(215)", "Delete PrefixExpression: !(216)", "Delete SimpleName: isNumericOrUnknown(217)", "Delete SimpleName: t1(218)", "Delete MethodInvocation(219)", "Delete PrefixExpression: !(220)", "Delete InfixExpression: ||(221)", "Delete SimpleName: Optional(222)", "Delete SimpleName: absent(223)", "Delete MethodInvocation(224)", "Delete ReturnStatement(225)", "Delete Block(226)", "Delete IfStatement(227)", "Delete SimpleName: t0(228)", "Delete SimpleName: isAssignableFrom(229)", "Delete SimpleName: t1(230)", "Delete MethodInvocation(231)", "Delete SimpleName: Optional(232)", "Delete SimpleName: of(233)", "Delete SimpleName: t0(234)", "Delete MethodInvocation(235)", "Delete ReturnStatement(236)", "Delete Block(237)", "Delete SimpleName: t1(238)", "Delete SimpleName: isAssignableFrom(239)", "Delete SimpleName: t0(240)", "Delete MethodInvocation(241)", "Delete SimpleName: Optional(242)", "Delete SimpleName: of(243)", "Delete SimpleName: t1(244)", "Delete MethodInvocation(245)", "Delete ReturnStatement(246)", "Delete Block(247)", "Delete SimpleName: Optional(248)", "Delete SimpleName: SoyType(249)", "Delete SimpleType: SoyType(250)", "Delete SimpleName: of(251)", "Delete SimpleName: FloatType(252)", "Delete SimpleName: getInstance(253)", "Delete MethodInvocation(254)", "Delete MethodInvocation(255)", "Delete ReturnStatement(256)", "Delete Block(257)", "Delete IfStatement(258)", "Delete IfStatement(259)", "Delete Block(260)", "Delete MethodDeclaration(261)", "Delete Modifier: public(262)", "Delete PrimitiveType: boolean(263)", "Delete SimpleName: isNumericOrUnknown(264)", "Delete SimpleName: SoyType(265)", "Delete SimpleType: SoyType(266)", "Delete SimpleName: t0(267)", "Delete SingleVariableDeclaration(268)", "Delete SimpleName: t0(269)", "Delete SimpleName: getKind(270)", "Delete MethodInvocation(271)", "Delete QualifiedName: SoyType.Kind.UNKNOWN(272)", "Delete InfixExpression: ==(273)", "Delete QualifiedName: SoyTypes.NUMBER_TYPE(274)", "Delete SimpleName: isAssignableFrom(275)", "Delete SimpleName: t0(276)", "Delete MethodInvocation(277)", "Delete InfixExpression: ||(278)", "Delete ReturnStatement(279)", "Delete Block(280)", "Delete MethodDeclaration(281)", "Delete TypeDeclaration: class(282)"]}}, {"SoyTypes_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.base.Optional to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: com.google.template.soy.types.primitive.ErrorType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: java.util.Collection to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleName: isNumericOrUnknown to MethodDeclaration at 3", "INS InfixExpression: || to ReturnStatement at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SimpleName: NUMBER_TYPE to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: type to MethodInvocation at 0", "INS Modifier: static to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to InfixExpression: == at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: getKind to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: type to MethodInvocation at 2", "INS QualifiedName: SoyType.Kind.UNKNOWN to InfixExpression: == at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS TextElement:  Type registry. to TagElement: @param at 1", "INS Modifier: static to MethodDeclaration at 2", "INS IfStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS TextElement: Compute the most specific type that is assignable from both t0 and t1. to TagElement at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: t1 to MethodInvocation at 3", "INS Block to IfStatement at 1", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: t1 to InfixExpression: == at 0", "INS SimpleName: t1 to TagElement: @param at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS TextElement:  A type. to TagElement: @param at 1", "INS IfStatement to Block at 1", "INS Block to IfStatement at 2", "INS SimpleName: t0 to SingleVariableDeclaration at 1", "INS SimpleName: SoyTypeRegistry to SimpleType: SoyTypeRegistry at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: t1 to ReturnStatement at 0", "INS SimpleName: computeLowestCommonType to MethodDeclaration at 4", "INS SimpleName: t0 to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: typeRegistry to TagElement: @param at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: typeRegistry to SingleVariableDeclaration at 1", "INS SimpleName: getInstance to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS TagElement: @return to Javadoc at 4", "INS SimpleType: SoyTypeRegistry to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS SimpleName: t0 to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: == at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS InfixExpression: || to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: t0 to InfixExpression: == at 0", "INS SimpleName: t0 to ReturnStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS TextElement:  A type that is assignable from both t0 and t1. to TagElement: @return at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS Block to IfStatement at 1", "INS SimpleName: t1 to MethodInvocation at 2", "INS SimpleName: t1 to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: t0 to TagElement: @param at 0", "INS TextElement:  Another type. to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleType: SoyType to MethodDeclaration at 3", "INS SimpleName: t1 to SingleVariableDeclaration at 1", "INS SimpleName: getOrCreateUnionType to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: t0 to MethodInvocation at 0", "INS SimpleName: typeRegistry to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: SoyTypeRegistry to SimpleType: SoyTypeRegistry at 0", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: types to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS ReturnStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: computeLowestCommonType to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: type to ConditionalExpression at 1", "INS SimpleName: types to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 1", "INS SimpleName: result to ReturnStatement at 0", "INS ConditionalExpression to Assignment: = at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS TextElement: Compute the most specific type that is assignable from all types within a collection. to TagElement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: typeRegistry to TagElement: @param at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS ParameterizedType: Collection<SoyType> to SingleVariableDeclaration at 0", "INS TextElement:  List of types. to TagElement: @param at 1", "INS SimpleType: SoyTypeRegistry to SingleVariableDeclaration at 0", "INS SimpleType: Collection to ParameterizedType: Collection<SoyType> at 0", "INS SimpleType: SoyType to ParameterizedType: Collection<SoyType> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS TagElement: @return to Javadoc at 3", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: types to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: typeRegistry to SingleVariableDeclaration at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: type to MethodInvocation at 3", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: result to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to EnhancedForStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: typeRegistry to MethodInvocation at 1", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleType: SoyType to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleType: SoyType to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  Type registry. to TagElement: @param at 1", "INS SimpleName: result to MethodInvocation at 2", "INS TextElement:  A type that is assignable from all of the listed types. to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: computeLowestCommonType to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: t0 to MethodInvocation at 0", "INS InfixExpression: || to IfStatement at 0", "INS TextElement: Compute the most specific type that is assignable from both t0 and t1, taking into account to TagElement at 0", "INS TextElement:  A type. to TagElement: @param at 1", "INS Block to IfStatement at 1", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS TextElement: arithmetic promotions - that is, converting int to float if needed. to TagElement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: isNumericOrUnknown to MethodInvocation at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS ReturnStatement to Block at 0", "INS TagElement: @return to Javadoc at 3", "INS SimpleName: t1 to MethodInvocation at 0", "INS SimpleType: SoyType to MethodInvocation at 1", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: t1 to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: of to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: isNumericOrUnknown to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: t1 to SingleVariableDeclaration at 1", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: computeLowestCommonTypeArithmetic to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: FloatType to MethodInvocation at 0", "INS SimpleName: t0 to MethodInvocation at 1", "INS SimpleName: absent to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: t1 to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: SoyType to ParameterizedType: Optional<SoyType> at 1", "INS SimpleName: Optional to SimpleType: Optional at 0", "INS SimpleName: t0 to SingleVariableDeclaration at 1", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: t0 to InfixExpression: == at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleType: SoyType to MethodInvocation at 1", "INS TextElement:  A type that is assignable from both t0 and t1 or absent if the types are not arithmetic to TagElement: @return at 0", "INS SimpleName: Optional to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: Optional to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: of to MethodInvocation at 2", "INS SimpleName: t0 to MethodInvocation at 2", "INS SimpleName: Optional to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS SimpleName: t0 to MethodInvocation at 2", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: t1 to MethodInvocation at 1", "INS SimpleName: t1 to TagElement: @param at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: t0 to TagElement: @param at 0", "INS Block to IfStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleName: Optional to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ParameterizedType: Optional<SoyType> to MethodDeclaration at 3", "INS Block to IfStatement at 1", "INS TextElement: meaning a subtype of 'number' or unknown. to TagElement: @return at 1", "INS TextElement:  Another type. to TagElement: @param at 1", "INS InfixExpression: || to IfStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: t1 to MethodInvocation at 2", "INS SimpleName: ErrorType to MethodInvocation at 0", "INS SimpleName: Optional to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleType: Optional to ParameterizedType: Optional<SoyType> at 0"]}]}}, {"SoyTypes_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(526) at 2", "Insert ImportDeclaration(13) into CompilationUnit(526) at 6", "Insert ImportDeclaration(21) into CompilationUnit(526) at 10", "Insert QualifiedName: com.google.common.base.Optional(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: com.google.template.soy.types.primitive.ErrorType(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: java.util.Collection(20) into ImportDeclaration(21) at 0", "Insert MethodDeclaration(293) into TypeDeclaration: class(525) at 13", "Insert MethodDeclaration(366) into TypeDeclaration: class(525) at 14", "Insert MethodDeclaration(424) into TypeDeclaration: class(525) at 15", "Insert MethodDeclaration(524) into TypeDeclaration: class(525) at 16", "Insert Modifier: public(273) into MethodDeclaration(293) at 0", "Insert Modifier: static(274) into MethodDeclaration(293) at 1", "Insert PrimitiveType: boolean(275) into MethodDeclaration(293) at 2", "Insert SimpleName: isNumericOrUnknown(276) into MethodDeclaration(293) at 3", "Insert SingleVariableDeclaration(280) into MethodDeclaration(293) at 4", "Insert Block(292) into MethodDeclaration(293) at 5", "Insert Javadoc(307) into MethodDeclaration(366) at 0", "Insert Modifier: public(308) into MethodDeclaration(366) at 1", "Insert Modifier: static(309) into MethodDeclaration(366) at 2", "Insert SimpleType: SoyType(311) into MethodDeclaration(366) at 3", "Insert SimpleName: computeLowestCommonType(312) into MethodDeclaration(366) at 4", "Insert SingleVariableDeclaration(316) into MethodDeclaration(366) at 5", "Insert SingleVariableDeclaration(320) into MethodDeclaration(366) at 6", "Insert SingleVariableDeclaration(324) into MethodDeclaration(366) at 7", "Insert Block(365) into MethodDeclaration(366) at 8", "Insert Javadoc(377) into MethodDeclaration(424) at 0", "Insert Modifier: public(378) into MethodDeclaration(424) at 1", "Insert Modifier: static(379) into MethodDeclaration(424) at 2", "Insert SimpleType: SoyType(381) into MethodDeclaration(424) at 3", "Insert SimpleName: computeLowestCommonType(382) into MethodDeclaration(424) at 4", "Insert SingleVariableDeclaration(386) into MethodDeclaration(424) at 5", "Insert SingleVariableDeclaration(393) into MethodDeclaration(424) at 6", "Insert Block(423) into MethodDeclaration(424) at 7", "Insert Javadoc(437) into MethodDeclaration(524) at 0", "Insert Modifier: public(438) into MethodDeclaration(524) at 1", "Insert Modifier: static(439) into MethodDeclaration(524) at 2", "Insert ParameterizedType: Optional<SoyType>(444) into MethodDeclaration(524) at 3", "Insert SimpleName: computeLowestCommonTypeArithmetic(445) into MethodDeclaration(524) at 4", "Insert SingleVariableDeclaration(449) into MethodDeclaration(524) at 5", "Insert SingleVariableDeclaration(453) into MethodDeclaration(524) at 6", "Insert Block(523) into MethodDeclaration(524) at 7", "Insert SimpleType: SoyType(278) into SingleVariableDeclaration(280) at 0", "Insert SimpleName: type(279) into SingleVariableDeclaration(280) at 1", "Insert ReturnStatement(291) into Block(292) at 0", "Insert TagElement(295) into Javadoc(307) at 0", "Insert TagElement: @param(298) into Javadoc(307) at 1", "Insert TagElement: @param(301) into Javadoc(307) at 2", "Insert TagElement: @param(304) into Javadoc(307) at 3", "Insert TagElement: @return(306) into Javadoc(307) at 4", "Insert SimpleName: SoyType(310) into SimpleType: SoyType(311) at 0", "Insert SimpleType: SoyTypeRegistry(314) into SingleVariableDeclaration(316) at 0", "Insert SimpleName: typeRegistry(315) into SingleVariableDeclaration(316) at 1", "Insert SimpleType: SoyType(318) into SingleVariableDeclaration(320) at 0", "Insert SimpleName: t0(319) into SingleVariableDeclaration(320) at 1", "Insert SimpleType: SoyType(322) into SingleVariableDeclaration(324) at 0", "Insert SimpleName: t1(323) into SingleVariableDeclaration(324) at 1", "Insert IfStatement(341) into Block(365) at 0", "Insert IfStatement(364) into Block(365) at 1", "Insert TagElement(368) into Javadoc(377) at 0", "Insert TagElement: @param(371) into Javadoc(377) at 1", "Insert TagElement: @param(374) into Javadoc(377) at 2", "Insert TagElement: @return(376) into Javadoc(377) at 3", "Insert SimpleName: SoyType(380) into SimpleType: SoyType(381) at 0", "Insert SimpleType: SoyTypeRegistry(384) into SingleVariableDeclaration(386) at 0", "Insert SimpleName: typeRegistry(385) into SingleVariableDeclaration(386) at 1", "Insert ParameterizedType: Collection<SoyType>(391) into SingleVariableDeclaration(393) at 0", "Insert SimpleName: types(392) into SingleVariableDeclaration(393) at 1", "Insert VariableDeclarationStatement(399) into Block(423) at 0", "Insert EnhancedForStatement(420) into Block(423) at 1", "Insert ReturnStatement(422) into Block(423) at 2", "Insert TagElement(427) into Javadoc(437) at 0", "Insert TagElement: @param(430) into Javadoc(437) at 1", "Insert TagElement: @param(433) into Javadoc(437) at 2", "Insert TagElement: @return(436) into Javadoc(437) at 3", "Insert SimpleType: Optional(441) into ParameterizedType: Optional<SoyType>(444) at 0", "Insert SimpleType: SoyType(443) into ParameterizedType: Optional<SoyType>(444) at 1", "Insert SimpleType: SoyType(447) into SingleVariableDeclaration(449) at 0", "Insert SimpleName: t0(448) into SingleVariableDeclaration(449) at 1", "Insert SimpleType: SoyType(451) into SingleVariableDeclaration(453) at 0", "Insert SimpleName: t1(452) into SingleVariableDeclaration(453) at 1", "Insert IfStatement(475) into Block(523) at 0", "Insert IfStatement(490) into Block(523) at 1", "Insert IfStatement(522) into Block(523) at 2", "Insert SimpleName: SoyType(277) into SimpleType: SoyType(278) at 0", "Insert InfixExpression: ||(290) into ReturnStatement(291) at 0", "Insert TextElement: Compute the most specific type that is assignable from both t0 and t1.(294) into TagElement(295) at 0", "Insert SimpleName: typeRegistry(296) into TagElement: @param(298) at 0", "Insert TextElement:  Type registry.(297) into TagElement: @param(298) at 1", "Insert SimpleName: t0(299) into TagElement: @param(301) at 0", "Insert TextElement:  A type.(300) into TagElement: @param(301) at 1", "Insert SimpleName: t1(302) into TagElement: @param(304) at 0", "Insert TextElement:  Another type.(303) into TagElement: @param(304) at 1", "Insert TextElement:  A type that is assignable from both t0 and t1.(305) into TagElement: @return(306) at 0", "Insert SimpleName: SoyTypeRegistry(313) into SimpleType: SoyTypeRegistry(314) at 0", "Insert SimpleName: SoyType(317) into SimpleType: SoyType(318) at 0", "Insert SimpleName: SoyType(321) into SimpleType: SoyType(322) at 0", "Insert InfixExpression: ||(335) into IfStatement(341) at 0", "Insert Block(340) into IfStatement(341) at 1", "Insert MethodInvocation(345) into IfStatement(364) at 0", "Insert Block(348) into IfStatement(364) at 1", "Insert IfStatement(363) into IfStatement(364) at 2", "Insert TextElement: Compute the most specific type that is assignable from all types within a collection.(367) into TagElement(368) at 0", "Insert SimpleName: typeRegistry(369) into TagElement: @param(371) at 0", "Insert TextElement:  Type registry.(370) into TagElement: @param(371) at 1", "Insert SimpleName: types(372) into TagElement: @param(374) at 0", "Insert TextElement:  List of types.(373) into TagElement: @param(374) at 1", "Insert TextElement:  A type that is assignable from all of the listed types.(375) into TagElement: @return(376) at 0", "Insert SimpleName: SoyTypeRegistry(383) into SimpleType: SoyTypeRegistry(384) at 0", "Insert SimpleType: Collection(388) into ParameterizedType: Collection<SoyType>(391) at 0", "Insert SimpleType: SoyType(390) into ParameterizedType: Collection<SoyType>(391) at 1", "Insert SimpleType: SoyType(395) into VariableDeclarationStatement(399) at 0", "Insert VariableDeclarationFragment(398) into VariableDeclarationStatement(399) at 1", "Insert SingleVariableDeclaration(403) into EnhancedForStatement(420) at 0", "Insert SimpleName: types(404) into EnhancedForStatement(420) at 1", "Insert Block(419) into EnhancedForStatement(420) at 2", "Insert SimpleName: result(421) into ReturnStatement(422) at 0", "Insert TextElement: Compute the most specific type that is assignable from both t0 and t1, taking into account(425) into TagElement(427) at 0", "Insert TextElement: arithmetic promotions - that is, converting int to float if needed.(426) into TagElement(427) at 1", "Insert SimpleName: t0(428) into TagElement: @param(430) at 0", "Insert TextElement:  A type.(429) into TagElement: @param(430) at 1", "Insert SimpleName: t1(431) into TagElement: @param(433) at 0", "Insert TextElement:  Another type.(432) into TagElement: @param(433) at 1", "Insert TextElement:  A type that is assignable from both t0 and t1 or absent if the types are not arithmetic(434) into TagElement: @return(436) at 0", "Insert TextElement: meaning a subtype of 'number' or unknown.(435) into TagElement: @return(436) at 1", "Insert SimpleName: Optional(440) into SimpleType: Optional(441) at 0", "Insert SimpleName: SoyType(442) into SimpleType: SoyType(443) at 0", "Insert SimpleName: SoyType(446) into SimpleType: SoyType(447) at 0", "Insert SimpleName: SoyType(450) into SimpleType: SoyType(451) at 0", "Insert InfixExpression: ||(464) into IfStatement(475) at 0", "Insert Block(474) into IfStatement(475) at 1", "Insert InfixExpression: ||(484) into IfStatement(490) at 0", "Insert Block(489) into IfStatement(490) at 1", "Insert MethodInvocation(494) into IfStatement(522) at 0", "Insert Block(500) into IfStatement(522) at 1", "Insert IfStatement(521) into IfStatement(522) at 2", "Insert InfixExpression: ==(285) into InfixExpression: ||(290) at 0", "Insert MethodInvocation(289) into InfixExpression: ||(290) at 1", "Insert InfixExpression: ==(329) into InfixExpression: ||(335) at 0", "Insert InfixExpression: ==(334) into InfixExpression: ||(335) at 1", "Insert ReturnStatement(339) into Block(340) at 0", "Insert SimpleName: t0(342) into MethodInvocation(345) at 0", "Insert SimpleName: isAssignableFrom(343) into MethodInvocation(345) at 1", "Insert SimpleName: t1(344) into MethodInvocation(345) at 2", "Insert ReturnStatement(347) into Block(348) at 0", "Insert MethodInvocation(352) into IfStatement(363) at 0", "Insert Block(355) into IfStatement(363) at 1", "Insert Block(362) into IfStatement(363) at 2", "Insert SimpleName: Collection(387) into SimpleType: Collection(388) at 0", "Insert SimpleName: SoyType(389) into SimpleType: SoyType(390) at 0", "Insert SimpleName: SoyType(394) into SimpleType: SoyType(395) at 0", "Insert SimpleName: result(396) into VariableDeclarationFragment(398) at 0", "Insert NullLiteral(397) into VariableDeclarationFragment(398) at 1", "Insert SimpleType: SoyType(401) into SingleVariableDeclaration(403) at 0", "Insert SimpleName: type(402) into SingleVariableDeclaration(403) at 1", "Insert ExpressionStatement(418) into Block(419) at 0", "Insert InfixExpression: ==(458) into InfixExpression: ||(464) at 0", "Insert InfixExpression: ==(463) into InfixExpression: ||(464) at 1", "Insert ReturnStatement(473) into Block(474) at 0", "Insert PrefixExpression: !(479) into InfixExpression: ||(484) at 0", "Insert PrefixExpression: !(483) into InfixExpression: ||(484) at 1", "Insert ReturnStatement(488) into Block(489) at 0", "Insert SimpleName: t0(491) into MethodInvocation(494) at 0", "Insert SimpleName: isAssignableFrom(492) into MethodInvocation(494) at 1", "Insert SimpleName: t1(493) into MethodInvocation(494) at 2", "Insert ReturnStatement(499) into Block(500) at 0", "Insert MethodInvocation(504) into IfStatement(521) at 0", "Insert Block(510) into IfStatement(521) at 1", "Insert Block(520) into IfStatement(521) at 2", "Insert MethodInvocation(283) into InfixExpression: ==(285) at 0", "Insert QualifiedName: SoyType.Kind.UNKNOWN(284) into InfixExpression: ==(285) at 1", "Insert SimpleName: NUMBER_TYPE(286) into MethodInvocation(289) at 0", "Insert SimpleName: isAssignableFrom(287) into MethodInvocation(289) at 1", "Insert SimpleName: type(288) into MethodInvocation(289) at 2", "Insert SimpleName: t0(325) into InfixExpression: ==(329) at 0", "Insert MethodInvocation(328) into InfixExpression: ==(329) at 1", "Insert SimpleName: t1(330) into InfixExpression: ==(334) at 0", "Insert MethodInvocation(333) into InfixExpression: ==(334) at 1", "Insert MethodInvocation(338) into ReturnStatement(339) at 0", "Insert SimpleName: t0(346) into ReturnStatement(347) at 0", "Insert SimpleName: t1(349) into MethodInvocation(352) at 0", "Insert SimpleName: isAssignableFrom(350) into MethodInvocation(352) at 1", "Insert SimpleName: t0(351) into MethodInvocation(352) at 2", "Insert ReturnStatement(354) into Block(355) at 0", "Insert ReturnStatement(361) into Block(362) at 0", "Insert SimpleName: SoyType(400) into SimpleType: SoyType(401) at 0", "Insert Assignment: =(417) into ExpressionStatement(418) at 0", "Insert SimpleName: t0(454) into InfixExpression: ==(458) at 0", "Insert MethodInvocation(457) into InfixExpression: ==(458) at 1", "Insert SimpleName: t1(459) into InfixExpression: ==(463) at 0", "Insert MethodInvocation(462) into InfixExpression: ==(463) at 1", "Insert MethodInvocation(472) into ReturnStatement(473) at 0", "Insert MethodInvocation(478) into PrefixExpression: !(479) at 0", "Insert MethodInvocation(482) into PrefixExpression: !(483) at 0", "Insert MethodInvocation(487) into ReturnStatement(488) at 0", "Insert MethodInvocation(498) into ReturnStatement(499) at 0", "Insert SimpleName: t1(501) into MethodInvocation(504) at 0", "Insert SimpleName: isAssignableFrom(502) into MethodInvocation(504) at 1", "Insert SimpleName: t0(503) into MethodInvocation(504) at 2", "Insert ReturnStatement(509) into Block(510) at 0", "Insert ReturnStatement(519) into Block(520) at 0", "Insert SimpleName: type(281) into MethodInvocation(283) at 0", "Insert SimpleName: getKind(282) into MethodInvocation(283) at 1", "Insert SimpleName: ErrorType(326) into MethodInvocation(328) at 0", "Insert SimpleName: getInstance(327) into MethodInvocation(328) at 1", "Insert SimpleName: ErrorType(331) into MethodInvocation(333) at 0", "Insert SimpleName: getInstance(332) into MethodInvocation(333) at 1", "Insert SimpleName: ErrorType(336) into MethodInvocation(338) at 0", "Insert SimpleName: getInstance(337) into MethodInvocation(338) at 1", "Insert SimpleName: t1(353) into ReturnStatement(354) at 0", "Insert MethodInvocation(360) into ReturnStatement(361) at 0", "Insert SimpleName: result(405) into Assignment: =(417) at 0", "Insert ConditionalExpression(416) into Assignment: =(417) at 1", "Insert SimpleName: ErrorType(455) into MethodInvocation(457) at 0", "Insert SimpleName: getInstance(456) into MethodInvocation(457) at 1", "Insert SimpleName: ErrorType(460) into MethodInvocation(462) at 0", "Insert SimpleName: getInstance(461) into MethodInvocation(462) at 1", "Insert SimpleName: Optional(465) into MethodInvocation(472) at 0", "Insert SimpleType: SoyType(467) into MethodInvocation(472) at 1", "Insert SimpleName: of(468) into MethodInvocation(472) at 2", "Insert MethodInvocation(471) into MethodInvocation(472) at 3", "Insert SimpleName: isNumericOrUnknown(476) into MethodInvocation(478) at 0", "Insert SimpleName: t0(477) into MethodInvocation(478) at 1", "Insert SimpleName: isNumericOrUnknown(480) into MethodInvocation(482) at 0", "Insert SimpleName: t1(481) into MethodInvocation(482) at 1", "Insert SimpleName: Optional(485) into MethodInvocation(487) at 0", "Insert SimpleName: absent(486) into MethodInvocation(487) at 1", "Insert SimpleName: Optional(495) into MethodInvocation(498) at 0", "Insert SimpleName: of(496) into MethodInvocation(498) at 1", "Insert SimpleName: t0(497) into MethodInvocation(498) at 2", "Insert MethodInvocation(508) into ReturnStatement(509) at 0", "Insert MethodInvocation(518) into ReturnStatement(519) at 0", "Insert SimpleName: typeRegistry(356) into MethodInvocation(360) at 0", "Insert SimpleName: getOrCreateUnionType(357) into MethodInvocation(360) at 1", "Insert SimpleName: t0(358) into MethodInvocation(360) at 2", "Insert SimpleName: t1(359) into MethodInvocation(360) at 3", "Insert ParenthesizedExpression(409) into ConditionalExpression(416) at 0", "Insert SimpleName: type(410) into ConditionalExpression(416) at 1", "Insert MethodInvocation(415) into ConditionalExpression(416) at 2", "Insert SimpleName: SoyType(466) into SimpleType: SoyType(467) at 0", "Insert SimpleName: ErrorType(469) into MethodInvocation(471) at 0", "Insert SimpleName: getInstance(470) into MethodInvocation(471) at 1", "Insert SimpleName: Optional(505) into MethodInvocation(508) at 0", "Insert SimpleName: of(506) into MethodInvocation(508) at 1", "Insert SimpleName: t1(507) into MethodInvocation(508) at 2", "Insert SimpleName: Optional(511) into MethodInvocation(518) at 0", "Insert SimpleType: SoyType(513) into MethodInvocation(518) at 1", "Insert SimpleName: of(514) into MethodInvocation(518) at 2", "Insert MethodInvocation(517) into MethodInvocation(518) at 3", "Insert InfixExpression: ==(408) into ParenthesizedExpression(409) at 0", "Insert SimpleName: computeLowestCommonType(411) into MethodInvocation(415) at 0", "Insert SimpleName: typeRegistry(412) into MethodInvocation(415) at 1", "Insert SimpleName: result(413) into MethodInvocation(415) at 2", "Insert SimpleName: type(414) into MethodInvocation(415) at 3", "Insert SimpleName: SoyType(512) into SimpleType: SoyType(513) at 0", "Insert SimpleName: FloatType(515) into MethodInvocation(517) at 0", "Insert SimpleName: getInstance(516) into MethodInvocation(517) at 1", "Insert SimpleName: result(406) into InfixExpression: ==(408) at 0", "Insert NullLiteral(407) into InfixExpression: ==(408) at 1"]}}, {"GenJsCodeVisitor_cluster": {"actions": [{"root": "UPDATE from com.google.template.soy.types.SoyTypeOps to com.google.template.soy.types.SoyTypeRegistry", "operations": ["UPD QualifiedName: com.google.template.soy.types.SoyTypeOps from com.google.template.soy.types.SoyTypeOps to com.google.template.soy.types.SoyTypeRegistry"]}, {"root": "UPDATE from SoyTypeOps to SoyTypeRegistry", "operations": ["UPD SimpleType: SoyTypeOps from SoyTypeOps to SoyTypeRegistry", "UPD SimpleName: SoyTypeOps from SoyTypeOps to SoyTypeRegistry", "UPD SimpleName: SoyTypeOps from SoyTypeOps to SoyTypeRegistry", "UPD SimpleType: SoyTypeOps from SoyTypeOps to SoyTypeRegistry"]}, {"root": "UPDATE from typeOps to typeRegistry", "operations": ["UPD SimpleName: typeOps from typeOps to typeRegistry", "UPD SimpleName: typeOps from typeOps to typeRegistry", "UPD SimpleName: typeOps from typeOps to typeRegistry", "UPD SimpleName: typeOps from typeOps to typeRegistry", "UPD SimpleName: getTypeRegistry from getTypeRegistry to typeRegistry"]}, {"root": "UPDATE from typeOps to SoyTypes", "operations": ["UPD SimpleName: typeOps from typeOps to SoyTypes"]}, {"root": "INS SimpleName: typeRegistry to MethodInvocation at 2", "operations": ["INS SimpleName: typeRegistry to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTypeRegistry to MethodInvocation at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Type operators. ", "DEL Javadoc", "DEL TagElement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: typeOps", "DEL MethodInvocation"]}]}}, {"GenJsCodeVisitor_diff": {"operations": ["Update QualifiedName: com.google.template.soy.types.SoyTypeOps(176) to com.google.template.soy.types.SoyTypeRegistry", "Update SimpleType: SoyTypeOps(371) to SoyTypeRegistry", "Update SimpleName: SoyTypeOps(370) to SoyTypeRegistry", "Update SimpleName: typeOps(372) to typeRegistry", "Update SimpleType: SoyTypeOps(435) to SoyTypeRegistry", "Update SimpleName: typeOps(436) to typeRegistry", "Update SimpleName: SoyTypeOps(434) to SoyTypeRegistry", "Update SimpleName: typeOps(483) to typeRegistry", "Update SimpleName: typeOps(481) to typeRegistry", "Update SimpleName: typeOps(4379) to SoyTypes", "Insert SimpleName: typeRegistry(4378) into MethodInvocation(4380) at 2", "Update SimpleName: getTypeRegistry(4389) to typeRegistry", "Move SimpleName: getTypeRegistry(4389) into MethodInvocation(4392) at 0", "Delete TextElement: Type operators. (365)", "Delete TagElement(366)", "Delete Javadoc(367)", "Delete SimpleName: typeOps(4388)", "Delete MethodInvocation(4390)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 2, "testing": "True", "maintenance": "False", "build": "False"}]}