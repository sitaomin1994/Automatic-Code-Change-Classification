{"application": "apache-calcite", "csha": "2773c4846a67360de8301680e375779ce3b1304b", "files": [{"RelBuilder_cluster": {"actions": [{"root": "INS TypeDeclaration: class to TypeDeclaration: class at 145", "operations": ["INS TagElement: @link to TagElement at 5", "INS Modifier: static to TypeDeclaration: class at 2", "INS MethodRef to TagElement: @link at 0", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: rename to MethodRef at 0", "INS MethodRefParameter to MethodRef at 1", "INS TextElement:  or a to TagElement at 6", "INS SimpleName: project to MemberRef at 0", "INS SimpleName: aggregate to MemberRef at 0", "INS TextElement: Collects the extra expressions needed for  to TagElement at 0", "INS SimpleName: names to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 145", "INS SimpleName: Registrar to TypeDeclaration: class at 3", "INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: aggregate calls, and later there will be a  to TagElement at 4", "INS SimpleType: List to MethodRefParameter at 0", "INS Modifier: final to FieldDeclaration at 0", "INS TagElement: @link to TagElement at 7", "INS Modifier: private to TypeDeclaration: class at 1", "INS ParameterizedType: List<String> to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: registerExpression to MethodDeclaration at 1", "INS MemberRef to TagElement: @link at 0", "INS TextElement: . to TagElement at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS TextElement:  if necessary.  to TagElement at 8", "INS MemberRef to TagElement: @link at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS TagElement: @link to TagElement at 1", "INS TextElement: <p>The extra expressions come from the group key and as arguments to to TagElement at 3", "INS PrimitiveType: int to MethodDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 7"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getRowType to MethodInvocation at 1", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: getFieldNames to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: registrar.names to MethodInvocation at 0", "INS SimpleName: peek to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: registrar.names to MethodInvocation at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: rename to MethodInvocation at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: List<RexNode> to FieldDeclaration at 1", "MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV Block to MethodDeclaration at 3"]}, {"root": "INS SimpleType: Registrar to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: Registrar to SimpleType: Registrar at 0", "INS SimpleType: Registrar to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: Registrar to SimpleType: Registrar at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: registrar to VariableDeclarationFragment at 0", "INS SimpleType: Registrar to ClassInstanceCreation at 0"]}, {"root": "MOVE from ParameterizedType: List<String>", "operations": ["MOV SimpleType: RexNode to ParameterizedType: List<String> at 1", "MOV SimpleType: List to ParameterizedType: List<String> at 0"]}, {"root": "UPDATE from RexNode to String", "operations": ["UPD SimpleName: RexNode from RexNode to String", "UPD SimpleType: RexNode from RexNode to String"]}, {"root": "INS SwitchStatement to Block at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to SwitchStatement at 4", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: i to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: operands to FieldAccess at 1", "INS SimpleName: get to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ParenthesizedExpression to FieldAccess at 0", "INS SimpleName: operands to MethodInvocation at 0", "INS VariableDeclarationStatement to SwitchStatement at 2", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: node to CastExpression at 1", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleType: RexCall to CastExpression at 0", "INS SimpleName: AS to SwitchCase at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ReturnStatement to SwitchStatement at 5", "INS SimpleName: RexCall to SimpleType: RexCall at 0", "INS SimpleName: operands to VariableDeclarationFragment at 0", "INS SimpleName: i to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: names to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS VariableDeclarationStatement to SwitchStatement at 3", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: operands to MethodInvocation at 0", "INS SimpleName: getKind to MethodInvocation at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: RexLiteral to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: registerExpression to MethodInvocation at 0", "INS FieldAccess to VariableDeclarationFragment at 1", "INS SimpleName: set to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SwitchStatement to Block at 0", "INS SimpleName: stringValue to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: registrar.extraNodes to MethodInvocation at 1", "operations": ["INS QualifiedName: registrar.extraNodes to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: size to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS MethodInvocation to InfixExpression: == at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: fields to MethodInvocation at 0", "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: List<RexNode> to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS NullLiteral to MethodInvocation at 2", "INS SimpleName: names to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from registerExpressions to registrar", "operations": ["UPD SimpleName: registerExpressions from registerExpressions to registrar", "UPD SimpleName: registerExpression from registerExpression to registrar", "UPD SimpleName: registerExpressions from registerExpressions to registrar", "UPD SimpleName: registerExpressions from registerExpressions to registrar", "UPD SimpleName: registerExpressions from registerExpressions to registrar", "UPD SimpleName: registerExpression from registerExpression to registrar"]}, {"root": "UPDATE from extraNodes to registerExpressions", "operations": ["UPD SimpleName: extraNodes from extraNodes to registerExpressions", "UPD SimpleName: extraNodes from extraNodes to registerExpressions", "UPD SimpleName: extraNodes from extraNodes to registerExpressions", "UPD SimpleName: extraNodes from extraNodes to registerExpressions"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: size to MethodInvocation at 1", "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "UPDATE from exprList to extraNodes", "operations": ["UPD SimpleName: exprList from exprList to extraNodes", "UPD SimpleName: exprList from exprList to extraNodes"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0", "operations": ["INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0", "operations": ["INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0", "operations": ["INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "UPDATE from extraNodes to registerExpression", "operations": ["UPD SimpleName: extraNodes from extraNodes to registerExpression", "UPD SimpleName: extraNodes from extraNodes to registerExpression"]}, {"root": "INS QualifiedName: registrar.extraNodes to MethodInvocation at 0", "operations": ["INS QualifiedName: registrar.extraNodes to MethodInvocation at 0"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL ParameterizedType: List<RexNode>", "DEL SimpleName: registerExpression", "DEL Modifier: static", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: exprList"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: size", "DEL SimpleName: exprList"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: extraNodes"]}, {"root": "DEL SimpleName: extraNodes", "operations": ["DEL SimpleName: extraNodes"]}]}}, {"RelBuilder_diff": {"operations": ["Insert TypeDeclaration: class(8010) into TypeDeclaration: class(8376) at 143", "Insert Javadoc(7850) into TypeDeclaration: class(8010) at 0", "Insert Modifier: private(7851) into TypeDeclaration: class(8010) at 1", "Insert Modifier: static(7852) into TypeDeclaration: class(8010) at 2", "Insert SimpleName: Registrar(7853) into TypeDeclaration: class(8010) at 3", "Insert FieldDeclaration(7866) into TypeDeclaration: class(8010) at 4", "Insert FieldDeclaration(7879) into TypeDeclaration: class(8010) at 5", "Insert MethodDeclaration(7964) into TypeDeclaration: class(8010) at 6", "Move MethodDeclaration(5251) into TypeDeclaration: class(8010) at 7", "Insert ExpressionStatement(4451) into Block(5176) at 1", "Insert ExpressionStatement(4461) into Block(5176) at 2", "Insert ExpressionStatement(4747) into Block(5176) at 10", "Insert TagElement(7849) into Javadoc(7850) at 0", "Insert Modifier: final(7854) into FieldDeclaration(7866) at 0", "Move ParameterizedType: List<RexNode>(4442) into FieldDeclaration(7866) at 1", "Move VariableDeclarationFragment(4450) into FieldDeclaration(7866) at 2", "Insert Modifier: final(7867) into FieldDeclaration(7879) at 0", "Insert ParameterizedType: List<String>(7872) into FieldDeclaration(7879) at 1", "Insert VariableDeclarationFragment(7878) into FieldDeclaration(7879) at 2", "Insert PrimitiveType: int(7880) into MethodDeclaration(7964) at 0", "Insert SimpleName: registerExpression(7881) into MethodDeclaration(7964) at 1", "Move SingleVariableDeclaration(5168) into MethodDeclaration(7964) at 2", "Move Block(5195) into MethodDeclaration(7964) at 3", "Insert SimpleType: Registrar(4439) into VariableDeclarationStatement(4445) at 1", "Insert VariableDeclarationFragment(4444) into VariableDeclarationStatement(4445) at 2", "Insert MethodInvocation(4450) into ExpressionStatement(4451) at 0", "Insert MethodInvocation(4460) into ExpressionStatement(4461) at 0", "Insert MethodInvocation(4746) into ExpressionStatement(4747) at 0", "Insert TextElement: Collects the extra expressions needed for (7831) into TagElement(7849) at 0", "Insert TagElement: @link(7834) into TagElement(7849) at 1", "Insert TextElement: .(7835) into TagElement(7849) at 2", "Insert TextElement: <p>The extra expressions come from the group key and as arguments to(7836) into TagElement(7849) at 3", "Insert TextElement: aggregate calls, and later there will be a (7837) into TagElement(7849) at 4", "Insert TagElement: @link(7840) into TagElement(7849) at 5", "Insert TextElement:  or a(7841) into TagElement(7849) at 6", "Insert TagElement: @link(7847) into TagElement(7849) at 7", "Insert TextElement:  if necessary. (7848) into TagElement(7849) at 8", "Move SimpleType: List(5159) into ParameterizedType: List<String>(7872) at 0", "Update SimpleType: RexNode(5161) to String", "Move SimpleType: RexNode(5161) into ParameterizedType: List<String>(7872) at 1", "Insert SimpleName: names(7873) into VariableDeclarationFragment(7878) at 0", "Insert ClassInstanceCreation(7877) into VariableDeclarationFragment(7878) at 1", "Insert SwitchStatement(7931) into Block(7963) at 0", "Insert SimpleName: Registrar(4438) into SimpleType: Registrar(4439) at 0", "Insert SimpleName: registrar(4440) into VariableDeclarationFragment(4444) at 0", "Insert ClassInstanceCreation(4443) into VariableDeclarationFragment(4444) at 1", "Insert QualifiedName: registrar.extraNodes(4446) into MethodInvocation(4450) at 0", "Insert SimpleName: addAll(4447) into MethodInvocation(4450) at 1", "Move MethodInvocation(4448) into MethodInvocation(4450) at 2", "Insert QualifiedName: registrar.names(4452) into MethodInvocation(4460) at 0", "Insert SimpleName: addAll(4453) into MethodInvocation(4460) at 1", "Insert MethodInvocation(4459) into MethodInvocation(4460) at 2", "Insert QualifiedName: registrar.extraNodes(4741) into MethodInvocation(4742) at 1", "Insert SimpleName: rename(4744) into MethodInvocation(4746) at 0", "Insert QualifiedName: registrar.names(4745) into MethodInvocation(4746) at 1", "Insert MemberRef(7833) into TagElement: @link(7834) at 0", "Insert MemberRef(7839) into TagElement: @link(7840) at 0", "Insert MethodRef(7846) into TagElement: @link(7847) at 0", "Update SimpleName: RexNode(5160) to String", "Insert ParameterizedType: ArrayList<>(7876) into ClassInstanceCreation(7877) at 0", "Insert MethodInvocation(7888) into SwitchStatement(7931) at 0", "Insert SwitchCase(7890) into SwitchStatement(7931) at 1", "Insert VariableDeclarationStatement(7906) into SwitchStatement(7931) at 2", "Insert VariableDeclarationStatement(7916) into SwitchStatement(7931) at 3", "Insert ExpressionStatement(7928) into SwitchStatement(7931) at 4", "Insert ReturnStatement(7930) into SwitchStatement(7931) at 5", "Insert SimpleType: Registrar(4442) into ClassInstanceCreation(4443) at 0", "Insert MethodInvocation(4457) into MethodInvocation(4459) at 0", "Insert SimpleName: getFieldNames(4458) into MethodInvocation(4459) at 1", "Insert IfStatement(4562) into Block(4585) at 2", "Insert SimpleName: aggregate(7832) into MemberRef(7833) at 0", "Insert SimpleName: project(7838) into MemberRef(7839) at 0", "Insert SimpleName: rename(7842) into MethodRef(7846) at 0", "Insert MethodRefParameter(7845) into MethodRef(7846) at 1", "Insert SimpleType: ArrayList(7875) into ParameterizedType: ArrayList<>(7876) at 0", "Insert SimpleName: node(7886) into MethodInvocation(7888) at 0", "Insert SimpleName: getKind(7887) into MethodInvocation(7888) at 1", "Insert SimpleName: AS(7889) into SwitchCase(7890) at 0", "Insert Modifier: final(7891) into VariableDeclarationStatement(7906) at 0", "Move ParameterizedType: List<RexNode>(5209) into VariableDeclarationStatement(7906) at 1", "Insert VariableDeclarationFragment(7905) into VariableDeclarationStatement(7906) at 2", "Insert PrimitiveType: int(7907) into VariableDeclarationStatement(7916) at 0", "Insert VariableDeclarationFragment(7915) into VariableDeclarationStatement(7916) at 1", "Insert MethodInvocation(7927) into ExpressionStatement(7928) at 0", "Insert SimpleName: i(7929) into ReturnStatement(7930) at 0", "Insert ExpressionStatement(7958) into Block(7959) at 2", "Insert SimpleName: Registrar(4441) into SimpleType: Registrar(4442) at 0", "Insert MethodInvocation(4455) into MethodInvocation(4457) at 0", "Insert SimpleName: getRowType(4456) into MethodInvocation(4457) at 1", "Update SimpleName: registerExpressions(4468) to registrar", "Update SimpleName: extraNodes(4469) to registerExpressions", "Insert InfixExpression: ==(4539) into IfStatement(4562) at 0", "Insert Block(4561) into IfStatement(4562) at 1", "Insert MethodInvocation(4605) into VariableDeclarationFragment(4606) at 1", "Insert SimpleType: List(7844) into MethodRefParameter(7845) at 0", "Insert SimpleName: ArrayList(7874) into SimpleType: ArrayList(7875) at 0", "Insert SimpleName: operands(7897) into VariableDeclarationFragment(7905) at 0", "Insert FieldAccess(7904) into VariableDeclarationFragment(7905) at 1", "Insert SimpleName: i(7908) into VariableDeclarationFragment(7915) at 0", "Insert MethodInvocation(7914) into VariableDeclarationFragment(7915) at 1", "Insert SimpleName: names(7917) into MethodInvocation(7927) at 0", "Insert SimpleName: set(7918) into MethodInvocation(7927) at 1", "Insert SimpleName: i(7919) into MethodInvocation(7927) at 2", "Insert MethodInvocation(7926) into MethodInvocation(7927) at 3", "Update SimpleName: exprList(5171) to extraNodes", "Insert MethodInvocation(7957) into ExpressionStatement(7958) at 0", "Insert SimpleName: peek(4454) into MethodInvocation(4455) at 0", "Insert MethodInvocation(4534) into InfixExpression: ==(4539) at 0", "Insert MethodInvocation(4538) into InfixExpression: ==(4539) at 1", "Move VariableDeclarationStatement(4533) into Block(4561) at 0", "Move IfStatement(4542) into Block(4561) at 1", "Insert QualifiedName: registrar.extraNodes(4603) into MethodInvocation(4605) at 0", "Insert SimpleName: size(4604) into MethodInvocation(4605) at 1", "Insert QualifiedName: registrar.extraNodes(4672) into MethodInvocation(4674) at 0", "Insert QualifiedName: registrar.extraNodes(4966) into MethodInvocation(4969) at 0", "Insert SimpleName: List(7843) into SimpleType: List(7844) at 0", "Insert ParenthesizedExpression(7902) into FieldAccess(7904) at 0", "Insert SimpleName: operands(7903) into FieldAccess(7904) at 1", "Insert SimpleName: registerExpression(7909) into MethodInvocation(7914) at 0", "Insert MethodInvocation(7913) into MethodInvocation(7914) at 1", "Insert SimpleName: RexLiteral(7920) into MethodInvocation(7926) at 0", "Insert SimpleName: stringValue(7921) into MethodInvocation(7926) at 1", "Insert MethodInvocation(7925) into MethodInvocation(7926) at 2", "Move MethodInvocation(4585) into Assignment: =(7947) at 1", "Update SimpleName: exprList(5186) to extraNodes", "Insert SimpleName: names(7954) into MethodInvocation(7957) at 0", "Insert SimpleName: add(7955) into MethodInvocation(7957) at 1", "Insert NullLiteral(7956) into MethodInvocation(7957) at 2", "Insert QualifiedName: registrar.extraNodes(4532) into MethodInvocation(4534) at 0", "Insert SimpleName: size(4533) into MethodInvocation(4534) at 1", "Insert MethodInvocation(4536) into MethodInvocation(4538) at 0", "Insert SimpleName: size(4537) into MethodInvocation(4538) at 1", "Update SimpleName: registerExpressions(4701) to registrar", "Update SimpleName: extraNodes(4702) to registerExpressions", "Insert CastExpression(7901) into ParenthesizedExpression(7902) at 0", "Insert SimpleName: operands(7910) into MethodInvocation(7913) at 0", "Insert SimpleName: get(7911) into MethodInvocation(7913) at 1", "Insert NumberLiteral: 0(7912) into MethodInvocation(7913) at 2", "Insert SimpleName: operands(7922) into MethodInvocation(7925) at 0", "Insert SimpleName: get(7923) into MethodInvocation(7925) at 1", "Insert NumberLiteral: 1(7924) into MethodInvocation(7925) at 2", "Insert SimpleName: fields(4535) into MethodInvocation(4536) at 0", "Update SimpleName: registerExpressions(4785) to registrar", "Update SimpleName: extraNodes(4786) to registerExpressions", "Insert SimpleType: RexCall(7899) into CastExpression(7901) at 0", "Insert SimpleName: node(7900) into CastExpression(7901) at 1", "Update SimpleName: registerExpressions(4616) to registrar", "Update SimpleName: extraNodes(4617) to registerExpressions", "Insert QualifiedName: registrar.extraNodes(4680) into MethodInvocation(4686) at 0", "Update SimpleName: registerExpression(4709) to registrar", "Update SimpleName: extraNodes(4710) to registerExpression", "Update SimpleName: registerExpression(4799) to registrar", "Update SimpleName: extraNodes(4800) to registerExpression", "Insert SimpleName: RexCall(7898) into SimpleType: RexCall(7899) at 0", "Insert QualifiedName: registrar.extraNodes(4683) into MethodInvocation(4685) at 0", "Delete SimpleName: extraNodes(4652)", "Delete SimpleName: extraNodes(4660)", "Delete SimpleName: extraNodes(4663)", "Delete SimpleName: extraNodes(4721)", "Delete SimpleName: extraNodes(4942)", "Delete Modifier: private(5154)", "Delete Modifier: static(5155)", "Delete PrimitiveType: int(5156)", "Delete SimpleName: registerExpression(5157)", "Delete ParameterizedType: List<RexNode>(5162)", "Delete SimpleName: exprList(5163)", "Delete SingleVariableDeclaration(5164)", "Delete MethodDeclaration(5196)", "Delete SimpleName: exprList(5181)", "Delete SimpleName: size(5182)", "Delete MethodInvocation(5183)", "Delete Modifier: private(5197)", "Delete Modifier: static(5198)", "Delete SimpleName: extraNodes(5210)", "Delete SingleVariableDeclaration(5211)", "Delete SimpleName: extraNodes(5241)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}