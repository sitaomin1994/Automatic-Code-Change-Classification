{"application": "apache-commons-compress", "csha": "a6fbdae7e9d765ba175374c78050dc391ddb1cb5", "files": [{"TarArchiveEntry_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 75"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Block to MethodDeclaration at 5"]}, {"root": "INS Modifier: public to MethodDeclaration at 1", "operations": ["INS Modifier: public to MethodDeclaration at 1"]}, {"root": "UPDATE from adjustSize to writeEntryHeader", "operations": ["UPD SimpleName: adjustSize from adjustSize to writeEntryHeader"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: outbuf to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: outbuf to MethodInvocation at 1", "INS BooleanLiteral: false to MethodInvocation at 2", "INS SimpleName: writeEntryHeader to MethodInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: starMode to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from @throws to @param", "operations": ["UPD TagElement: @throws from @throws to @param"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement: extension for the size field if the size is bigger than 8GiB to TagElement: @param at 2", "INS TextElement:  whether to use the star/GNU tar/BSD tar to TagElement: @param at 1", "INS SimpleName: starMode to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 3"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS InfixExpression: > to InfixExpression: && at 0", "INS QualifiedName: TarConstants.MAXSIZE to InfixExpression: > at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: TarUtils to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: offset to MethodInvocation at 4", "INS SimpleName: outbuf to MethodInvocation at 3", "INS SimpleName: SIZELEN to MethodInvocation at 5", "INS Block to IfStatement at 1", "INS SimpleName: formatLongOctalBytes to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: size to InfixExpression: > at 0", "INS SimpleName: starMode to PrefixExpression: ! at 0", "INS IfStatement to Block at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: offset to Assignment: = at 0"]}, {"root": "UPDATE from  if the size is < 0 to  if the size is &lt; 0.", "operations": ["UPD TextElement:  if the size is < 0 from  if the size is < 0 to  if the size is &lt; 0."]}, {"root": "UPDATE from Set this entry's file size. to Write an entry's header information to a header buffer.", "operations": ["UPD TextElement: Set this entry's file size. from Set this entry's file size. to Write an entry's header information to a header buffer."]}, {"root": "UPDATE from <p>Invoked by input stream when reading a PAX header.</p> to <p>This method does not use the star/GNU tar/BSD tar extensions.</p>", "operations": ["UPD TextElement: <p>Invoked by input stream when reading a PAX header.</p> from <p>Invoked by input stream when reading a PAX header.</p> to <p>This method does not use the star/GNU tar/BSD tar extensions.</p>"]}, {"root": "UPDATE from IllegalArgumentException to outbuf", "operations": ["UPD SimpleName: IllegalArgumentException from IllegalArgumentException to outbuf"]}, {"root": "UPDATE from  if the size is &lt; 0 to  The tar entry header buffer to fill in.", "operations": ["UPD TextElement:  if the size is &lt; 0 from  if the size is &lt; 0 to  The tar entry header buffer to fill in."]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from formatLongOctalBytes to formatLongOctalOrBinaryBytes", "operations": ["UPD SimpleName: formatLongOctalBytes from formatLongOctalBytes to formatLongOctalOrBinaryBytes"]}, {"root": "DEL TextElement: or > ", "operations": ["DEL TextElement: or > "]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL SimpleName: TarConstants", "DEL MemberRef", "DEL SimpleName: MAXSIZE"]}, {"root": "DEL TextElement:  (077777777777L).", "operations": ["DEL TextElement:  (077777777777L)."]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: size", "DEL PrimitiveType: long", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ClassInstanceCreation", "DEL ThrowStatement", "DEL InfixExpression: +", "DEL SimpleName: MAXSIZE", "DEL SimpleName: size", "DEL Block", "DEL NumberLiteral: 0", "DEL InfixExpression: >", "DEL InfixExpression: ||", "DEL SimpleName: size", "DEL FieldAccess", "DEL SimpleName: size", "DEL ThisExpression", "DEL InfixExpression: <", "DEL Assignment: =", "DEL SimpleName: IllegalArgumentException", "DEL StringLiteral: \"Size is out of range: \"", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL SimpleType: IllegalArgumentException", "DEL IfStatement", "DEL SimpleName: size"]}]}}, {"TarArchiveEntry_diff": {"operations": ["Move MethodDeclaration(1344) into TypeDeclaration: class(2417) at 75", "Move SingleVariableDeclaration(1324) into MethodDeclaration(1300) at 4", "Move Block(1343) into MethodDeclaration(1300) at 5", "Insert Modifier: public(1631) into MethodDeclaration(1645) at 1", "Update SimpleName: adjustSize(1321) to writeEntryHeader", "Insert SingleVariableDeclaration(1638) into MethodDeclaration(1645) at 4", "Insert Block(1644) into MethodDeclaration(1645) at 5", "Insert SingleVariableDeclaration(1668) into MethodDeclaration(1885) at 5", "Update TagElement: @throws(1316) to @param", "Insert ArrayType: byte[](1636) into SingleVariableDeclaration(1638) at 0", "Insert SimpleName: outbuf(1637) into SingleVariableDeclaration(1638) at 1", "Insert ExpressionStatement(1643) into Block(1644) at 0", "Insert TagElement: @param(1654) into Javadoc(1657) at 2", "Move TagElement: @since(1318) into Javadoc(1657) at 3", "Insert PrimitiveType: boolean(1666) into SingleVariableDeclaration(1668) at 0", "Insert SimpleName: starMode(1667) into SingleVariableDeclaration(1668) at 1", "Insert IfStatement(1742) into Block(1884) at 5", "Update TextElement:  if the size is < 0(1272) to  if the size is &lt; 0.", "Update TextElement: Set this entry's file size.(1311) to Write an entry's header information to a header buffer.", "Update TextElement: <p>Invoked by input stream when reading a PAX header.</p>(1312) to <p>This method does not use the star/GNU tar/BSD tar extensions.</p>", "Update SimpleName: IllegalArgumentException(1314) to outbuf", "Update TextElement:  if the size is &lt; 0(1315) to  The tar entry header buffer to fill in.", "Insert PrimitiveType: byte(1634) into ArrayType: byte[](1636) at 0", "Insert Dimension(1635) into ArrayType: byte[](1636) at 1", "Insert MethodInvocation(1642) into ExpressionStatement(1643) at 0", "Insert SimpleName: starMode(1651) into TagElement: @param(1654) at 0", "Insert TextElement:  whether to use the star/GNU tar/BSD tar(1652) into TagElement: @param(1654) at 1", "Insert TextElement: extension for the size field if the size is bigger than 8GiB(1653) into TagElement: @param(1654) at 2", "Insert InfixExpression: &&(1719) into IfStatement(1742) at 0", "Insert Block(1730) into IfStatement(1742) at 1", "Insert Block(1741) into IfStatement(1742) at 2", "Insert SimpleName: writeEntryHeader(1639) into MethodInvocation(1642) at 0", "Insert SimpleName: outbuf(1640) into MethodInvocation(1642) at 1", "Insert BooleanLiteral: false(1641) into MethodInvocation(1642) at 2", "Insert InfixExpression: >(1716) into InfixExpression: &&(1719) at 0", "Insert PrefixExpression: !(1718) into InfixExpression: &&(1719) at 1", "Insert ExpressionStatement(1729) into Block(1730) at 0", "Move ExpressionStatement(1736) into Block(1741) at 0", "Insert SimpleName: size(1714) into InfixExpression: >(1716) at 0", "Insert QualifiedName: TarConstants.MAXSIZE(1715) into InfixExpression: >(1716) at 1", "Insert SimpleName: starMode(1717) into PrefixExpression: !(1718) at 0", "Insert Assignment: =(1728) into ExpressionStatement(1729) at 0", "Insert SimpleName: offset(1720) into Assignment: =(1728) at 0", "Insert MethodInvocation(1727) into Assignment: =(1728) at 1", "Insert SimpleName: TarUtils(1721) into MethodInvocation(1727) at 0", "Insert SimpleName: formatLongOctalBytes(1722) into MethodInvocation(1727) at 1", "Insert NumberLiteral: 0(1723) into MethodInvocation(1727) at 2", "Insert SimpleName: outbuf(1724) into MethodInvocation(1727) at 3", "Insert SimpleName: offset(1725) into MethodInvocation(1727) at 4", "Insert SimpleName: SIZELEN(1726) into MethodInvocation(1727) at 5", "Update SimpleName: formatLongOctalBytes(1729) to formatLongOctalOrBinaryBytes", "Delete TextElement: or > (1273)", "Delete SimpleName: TarConstants(1274)", "Delete SimpleName: MAXSIZE(1275)", "Delete MemberRef(1276)", "Delete TagElement: @link(1277)", "Delete TextElement:  (077777777777L).(1278)", "Delete PrimitiveType: long(1284)", "Delete SimpleName: size(1285)", "Delete SingleVariableDeclaration(1286)", "Delete SimpleName: size(1287)", "Delete SimpleName: MAXSIZE(1288)", "Delete InfixExpression: >(1289)", "Delete SimpleName: size(1290)", "Delete NumberLiteral: 0(1291)", "Delete InfixExpression: <(1292)", "Delete InfixExpression: ||(1293)", "Delete SimpleName: IllegalArgumentException(1294)", "Delete SimpleType: IllegalArgumentException(1295)", "Delete StringLiteral: \"Size is out of range: \"(1296)", "Delete SimpleName: size(1297)", "Delete InfixExpression: +(1298)", "Delete ClassInstanceCreation(1299)", "Delete ThrowStatement(1300)", "Delete Block(1301)", "Delete IfStatement(1302)", "Delete ThisExpression(1303)", "Delete SimpleName: size(1304)", "Delete FieldAccess(1305)", "Delete SimpleName: size(1306)", "Delete Assignment: =(1307)", "Delete ExpressionStatement(1308)", "Delete Block(1309)"]}}, {"TarArchiveInputStream_cluster": {"actions": [{"root": "UPDATE from adjustSize to setSize", "operations": ["UPD SimpleName: adjustSize from adjustSize to setSize"]}]}}, {"TarArchiveInputStream_diff": {"operations": ["Update SimpleName: adjustSize(989) to setSize"]}}, {"TarArchiveOutputStream_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 7", "INS TextElement: Fail if a big file (&gt; 8GiB) is required in the archive.  to TagElement at 0", "INS Modifier: public to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: BIGFILE_ERROR to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 2", "INS TagElement to Javadoc at 0", "INS PrimitiveType: int to FieldDeclaration at 4", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: public to FieldDeclaration at 1", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: BIGFILE_STAR to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 3", "INS TextElement: star/GNU tar/BSD tar extensions are used to store big file sizes in the archive.  to TagElement at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 4", "INS VariableDeclarationFragment to FieldDeclaration at 5"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS TagElement to Javadoc at 0", "INS Modifier: public to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Javadoc to FieldDeclaration at 0", "INS NumberLiteral: 2 to VariableDeclarationFragment at 1", "INS TextElement: POSIX/PAX extensions are used to store big file sizes in the archive.  to TagElement at 0", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleName: BIGFILE_POSIX to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 3", "INS PrimitiveType: int to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: BIGFILE_ERROR to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS PrimitiveType: int to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: bigFileMode to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS TagElement: @since to Javadoc at 2", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: bigFileMode to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: bigFileMode to Assignment: = at 1", "INS TextElement:  Apache Commons Compress 1.4 to TagElement: @since at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: bigFileMode to FieldAccess at 1", "INS TextElement: Default is BIGFILE_ERROR. to TagElement at 3", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: This specifies the treatment of big files (sizes &gt; TarConstants.MAXSIZE). to TagElement at 2", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TextElement: This can be BIGFILE_ERROR(0), BIGFILE_POSIX(1) or BIGFILE_STAR(2). to TagElement at 1", "INS TextElement:  the mode to use to TagElement: @param at 1", "INS SimpleName: setBigFileMode to MethodDeclaration at 3", "INS TextElement: Set the big file mode. to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: bigFileMode to SingleVariableDeclaration at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: bigFileMode to InfixExpression: != at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"file size '\" to InfixExpression: + at 0", "INS SimpleName: BIGFILE_STAR to InfixExpression: != at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS QualifiedName: TarConstants.MAXSIZE to InfixExpression: > at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: getSize to MethodInvocation at 1", "INS QualifiedName: TarConstants.MAXSIZE to InfixExpression: + at 3", "INS StringLiteral: \" bytes)\" to InfixExpression: + at 4", "INS IfStatement to Block at 3", "INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleName: getSize to MethodInvocation at 1", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS StringLiteral: \"' is too big ( > \" to InfixExpression: + at 2"]}, {"root": "INS InfixExpression: == to MethodInvocation at 3", "operations": ["INS SimpleName: bigFileMode to InfixExpression: == at 0", "INS InfixExpression: == to MethodInvocation at 3", "INS SimpleName: BIGFILE_STAR to InfixExpression: == at 1"]}]}}, {"TarArchiveOutputStream_diff": {"operations": ["Insert FieldDeclaration(69) into TypeDeclaration: class(1026) at 7", "Insert FieldDeclaration(80) into TypeDeclaration: class(1026) at 8", "Insert FieldDeclaration(91) into TypeDeclaration: class(1026) at 9", "Insert FieldDeclaration(147) into TypeDeclaration: class(1026) at 18", "Insert MethodDeclaration(338) into TypeDeclaration: class(1026) at 27", "Insert Javadoc(61) into FieldDeclaration(69) at 0", "Insert Modifier: public(62) into FieldDeclaration(69) at 1", "Insert Modifier: static(63) into FieldDeclaration(69) at 2", "Insert Modifier: final(64) into FieldDeclaration(69) at 3", "Insert PrimitiveType: int(65) into FieldDeclaration(69) at 4", "Insert VariableDeclarationFragment(68) into FieldDeclaration(69) at 5", "Insert Javadoc(72) into FieldDeclaration(80) at 0", "Insert Modifier: public(73) into FieldDeclaration(80) at 1", "Insert Modifier: static(74) into FieldDeclaration(80) at 2", "Insert Modifier: final(75) into FieldDeclaration(80) at 3", "Insert PrimitiveType: int(76) into FieldDeclaration(80) at 4", "Insert VariableDeclarationFragment(79) into FieldDeclaration(80) at 5", "Insert Javadoc(83) into FieldDeclaration(91) at 0", "Insert Modifier: public(84) into FieldDeclaration(91) at 1", "Insert Modifier: static(85) into FieldDeclaration(91) at 2", "Insert Modifier: final(86) into FieldDeclaration(91) at 3", "Insert PrimitiveType: int(87) into FieldDeclaration(91) at 4", "Insert VariableDeclarationFragment(90) into FieldDeclaration(91) at 5", "Insert Modifier: private(142) into FieldDeclaration(147) at 0", "Insert PrimitiveType: int(143) into FieldDeclaration(147) at 1", "Insert VariableDeclarationFragment(146) into FieldDeclaration(147) at 2", "Insert Javadoc(324) into MethodDeclaration(338) at 0", "Insert Modifier: public(325) into MethodDeclaration(338) at 1", "Insert PrimitiveType: void(326) into MethodDeclaration(338) at 2", "Insert SimpleName: setBigFileMode(327) into MethodDeclaration(338) at 3", "Insert SingleVariableDeclaration(330) into MethodDeclaration(338) at 4", "Insert Block(337) into MethodDeclaration(338) at 5", "Insert TagElement(60) into Javadoc(61) at 0", "Insert SimpleName: BIGFILE_ERROR(66) into VariableDeclarationFragment(68) at 0", "Insert NumberLiteral: 0(67) into VariableDeclarationFragment(68) at 1", "Insert TagElement(71) into Javadoc(72) at 0", "Insert SimpleName: BIGFILE_STAR(77) into VariableDeclarationFragment(79) at 0", "Insert NumberLiteral: 1(78) into VariableDeclarationFragment(79) at 1", "Insert TagElement(82) into Javadoc(83) at 0", "Insert SimpleName: BIGFILE_POSIX(88) into VariableDeclarationFragment(90) at 0", "Insert NumberLiteral: 2(89) into VariableDeclarationFragment(90) at 1", "Insert SimpleName: bigFileMode(144) into VariableDeclarationFragment(146) at 0", "Insert SimpleName: BIGFILE_ERROR(145) into VariableDeclarationFragment(146) at 1", "Insert TagElement(318) into Javadoc(324) at 0", "Insert TagElement: @param(321) into Javadoc(324) at 1", "Insert TagElement: @since(323) into Javadoc(324) at 2", "Insert PrimitiveType: int(328) into SingleVariableDeclaration(330) at 0", "Insert SimpleName: bigFileMode(329) into SingleVariableDeclaration(330) at 1", "Insert ExpressionStatement(336) into Block(337) at 0", "Insert IfStatement(613) into Block(657) at 3", "Insert TextElement: Fail if a big file (&gt; 8GiB) is required in the archive. (59) into TagElement(60) at 0", "Insert TextElement: star/GNU tar/BSD tar extensions are used to store big file sizes in the archive. (70) into TagElement(71) at 0", "Insert TextElement: POSIX/PAX extensions are used to store big file sizes in the archive. (81) into TagElement(82) at 0", "Insert TextElement: Set the big file mode.(314) into TagElement(318) at 0", "Insert TextElement: This can be BIGFILE_ERROR(0), BIGFILE_POSIX(1) or BIGFILE_STAR(2).(315) into TagElement(318) at 1", "Insert TextElement: This specifies the treatment of big files (sizes &gt; TarConstants.MAXSIZE).(316) into TagElement(318) at 2", "Insert TextElement: Default is BIGFILE_ERROR.(317) into TagElement(318) at 3", "Insert SimpleName: bigFileMode(319) into TagElement: @param(321) at 0", "Insert TextElement:  the mode to use(320) into TagElement: @param(321) at 1", "Insert TextElement:  Apache Commons Compress 1.4(322) into TagElement: @since(323) at 0", "Insert Assignment: =(335) into ExpressionStatement(336) at 0", "Insert InfixExpression: >(594) into IfStatement(613) at 0", "Insert Block(612) into IfStatement(613) at 1", "Insert FieldAccess(333) into Assignment: =(335) at 0", "Insert SimpleName: bigFileMode(334) into Assignment: =(335) at 1", "Insert MethodInvocation(592) into InfixExpression: >(594) at 0", "Insert QualifiedName: TarConstants.MAXSIZE(593) into InfixExpression: >(594) at 1", "Insert IfStatement(611) into Block(612) at 0", "Insert InfixExpression: ==(619) into MethodInvocation(620) at 3", "Insert ThisExpression(331) into FieldAccess(333) at 0", "Insert SimpleName: bigFileMode(332) into FieldAccess(333) at 1", "Insert SimpleName: entry(590) into MethodInvocation(592) at 0", "Insert SimpleName: getSize(591) into MethodInvocation(592) at 1", "Insert InfixExpression: !=(597) into IfStatement(611) at 0", "Insert Block(610) into IfStatement(611) at 1", "Insert SimpleName: bigFileMode(617) into InfixExpression: ==(619) at 0", "Insert SimpleName: BIGFILE_STAR(618) into InfixExpression: ==(619) at 1", "Insert SimpleName: bigFileMode(595) into InfixExpression: !=(597) at 0", "Insert SimpleName: BIGFILE_STAR(596) into InfixExpression: !=(597) at 1", "Insert ThrowStatement(609) into Block(610) at 0", "Insert ClassInstanceCreation(608) into ThrowStatement(609) at 0", "Insert SimpleType: RuntimeException(599) into ClassInstanceCreation(608) at 0", "Insert InfixExpression: +(607) into ClassInstanceCreation(608) at 1", "Insert SimpleName: RuntimeException(598) into SimpleType: RuntimeException(599) at 0", "Insert StringLiteral: \"file size '\"(600) into InfixExpression: +(607) at 0", "Insert MethodInvocation(603) into InfixExpression: +(607) at 1", "Insert StringLiteral: \"' is too big ( > \"(604) into InfixExpression: +(607) at 2", "Insert QualifiedName: TarConstants.MAXSIZE(605) into InfixExpression: +(607) at 3", "Insert StringLiteral: \" bytes)\"(606) into InfixExpression: +(607) at 4", "Insert SimpleName: entry(601) into MethodInvocation(603) at 0", "Insert SimpleName: getSize(602) into MethodInvocation(603) at 1"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}