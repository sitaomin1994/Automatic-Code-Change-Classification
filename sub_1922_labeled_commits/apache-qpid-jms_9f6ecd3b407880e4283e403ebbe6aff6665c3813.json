{"application": "apache-qpid-jms", "csha": "9f6ecd3b407880e4283e403ebbe6aff6665c3813", "files": [{"JmsMessageConsumer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: org.slf4j.Logger to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.slf4j.LoggerFactory to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleType: Logger to FieldDeclaration at 3", "INS SimpleName: LOG to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: getLogger to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS TypeLiteral to MethodInvocation at 2", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: LoggerFactory to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: JmsMessageConsumer to SimpleType: JmsMessageConsumer at 0", "INS SimpleName: Logger to SimpleType: Logger at 0", "INS SimpleType: JmsMessageConsumer to TypeLiteral at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 31", "operations": ["INS SimpleName: timeout to InfixExpression: > at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: max to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS NullLiteral to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: JmsExceptionSupport to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS Block to WhileStatement at 1", "INS IfStatement to Block at 0", "INS TextElement: This method may consume messages that are expired or exceed a configured to TagElement at 5", "INS InfixExpression: - to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: timeout to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: redeliveryExceeded to MethodInvocation at 0", "INS SimpleName: deadline to InfixExpression: - at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS MethodDeclaration to TypeDeclaration: class at 31", "INS StringLiteral: \"{} no message was available for this consumer: {}\" to MethodInvocation at 2", "INS SimpleName: timeout to InfixExpression: + at 1", "INS IfStatement to Block at 1", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS SimpleName: failureCause to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: timeout to MethodInvocation at 2", "INS InfixExpression: > to InfixExpression: && at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS TextElement: timeout < 0 then it blocks until a message is received. to TagElement at 2", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS BooleanLiteral: true to WhileStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: deadline to VariableDeclarationFragment at 0", "INS SimpleName: messageQueue to MethodInvocation at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS TryStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: > to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS SimpleName: envelope to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: deadline to Assignment: = at 0", "INS SimpleName: envelope to VariableDeclarationFragment at 0", "INS SimpleName: envelope to InfixExpression: + at 2", "INS SimpleType: JmsInboundMessageDispatch to VariableDeclarationStatement at 0", "INS TagElement to Javadoc at 0", "INS IfStatement to IfStatement at 2", "INS Modifier: private to MethodDeclaration at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS NullLiteral to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: - at 1", "INS SimpleName: getMessage to MethodInvocation at 1", "INS SimpleName: isClosed to MethodInvocation at 1", "INS TextElement: amount of time this method blocks is based on the timeout value. to TagElement at 1", "INS SimpleName: timeout to InfixExpression: > at 0", "INS SimpleName: deadline to InfixExpression: - at 0", "INS MethodInvocation to ThrowStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: timeout to Assignment: = at 0", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleType: JmsInboundMessageDispatch to MethodDeclaration at 2", "INS SimpleName: messageQueue to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: failureCause to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS SimpleName: envelope to MethodInvocation at 4", "INS TextElement:  null if we timeout or if the consumer is closed. to TagElement: @return at 0", "INS SimpleName: getMessage to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 2", "INS SimpleType: JMSException to MethodDeclaration at 5", "INS SimpleName: JMSException to SimpleType: JMSException at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS IfStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS TextElement: timeout > 0 then it blocks up to timeout amount of time. to TagElement at 4", "INS ExpressionStatement to Block at 2", "INS SimpleName: timeout to MethodInvocation at 1", "INS TextElement: timeout = 0 then it returns a message or null if none available to TagElement at 3", "INS SimpleName: failureCause to InfixExpression: != at 0", "INS MethodInvocation to InfixExpression: - at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS InfixExpression: - to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"{} receive failed: {}\" to MethodInvocation at 2", "INS SimpleName: System to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: max to MethodInvocation at 1", "INS SimpleName: System to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: isClosed to MethodInvocation at 1", "INS StringLiteral: \" received message: \" to InfixExpression: + at 1", "INS SimpleName: JMSException to TagElement: @throws at 0", "INS SimpleName: dequeue to MethodDeclaration at 3", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: envelope to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: sendPullCommand to MethodInvocation at 0", "INS InfixExpression: + to Assignment: = at 1", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: messageQueue to MethodInvocation at 0", "INS SimpleName: timeout to InfixExpression: > at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: envelope to InfixExpression: == at 0", "INS StringLiteral: \"{} received with excessive redelivered: {}\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS TagElement: @throws to Javadoc at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: timeout to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS WhileStatement to Block at 2", "INS SimpleName: Math to MethodInvocation at 0", "INS SimpleName: Math to MethodInvocation at 0", "INS SimpleName: envelope to MethodInvocation at 1", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS TextElement: Used to get an enqueued message from the unconsumedMessages list. The to TagElement at 0", "INS TextElement: delivery count value but will continue to wait for the configured timeout. to TagElement at 6", "INS MethodInvocation to PrefixExpression: ! at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: dequeue to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS SimpleType: JmsInboundMessageDispatch to SingleVariableDeclaration at 0", "INS SimpleName: envelope to SingleVariableDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: redeliveryExceeded to MethodDeclaration at 2", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 59", "operations": ["INS Block to MethodDeclaration at 3", "INS MethodInvocation to InfixExpression: == at 0", "INS MethodDeclaration to TypeDeclaration: class at 59", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: isPullConsumer to MethodDeclaration at 2", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: getPrefetchSize to MethodInvocation at 0", "INS InfixExpression: == to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleType: JmsInboundMessageDispatch to VariableDeclarationStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: envelope to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isPullConsumer to MethodInvocation at 0", "INS SimpleName: timeout to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 2", "INS SimpleName: dequeue to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: envelope to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 7"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sendPullCommand to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleType: JmsInboundMessageDispatch to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS SimpleName: envelope to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: envelope to Assignment: = at 0", "INS SimpleName: envelope to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS SimpleName: dequeue to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS PrefixExpression: - to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: dequeue to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 4", "INS SimpleName: isPullConsumer to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "UPDATE from Triggers a pull request from the connected Provider.  An attempt is made to set to Triggers a pull request from the connected Provider with the given timeout value.", "operations": ["UPD TextElement: Triggers a pull request from the connected Provider.  An attempt is made to set from Triggers a pull request from the connected Provider.  An attempt is made to set to Triggers a pull request from the connected Provider with the given timeout value."]}, {"root": "UPDATE from  to indicate that the request should expire immediately if no message.<br> to  to indicate that the request should never time out.<br>", "operations": ["UPD TextElement:  to indicate that the request should expire immediately if no message.<br> from  to indicate that the request should expire immediately if no message.<br> to  to indicate that the request should never time out.<br>"]}, {"root": "UPDATE from  to indicate that the request should never time out.<br> to  to indicate that the request should expire immediately if no message.<br>", "operations": ["UPD TextElement:  to indicate that the request should never time out.<br> from  to indicate that the request should never time out.<br> to  to indicate that the request should expire immediately if no message.<br>"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from  > 1 to  > 0", "operations": ["UPD TextElement:  > 1 from  > 1 to  > 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 0", "operations": ["INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: isClosed to MethodInvocation at 1", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS SimpleName: messageQueue to MethodInvocation at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: envelope to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from dequeue to envelope", "operations": ["UPD SimpleName: dequeue from dequeue to envelope"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dequeue to MethodInvocation at 1"]}, {"root": "INS SimpleName: envelope to MethodInvocation at 1", "operations": ["INS SimpleName: envelope to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: Thread to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: currentThread to MethodInvocation at 1", "INS SimpleName: interrupt to MethodInvocation at 1"]}, {"root": "UPDATE from wait to timeout", "operations": ["UPD SimpleName: wait from wait to timeout"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from sendPullCommand to dequeue", "operations": ["UPD SimpleName: sendPullCommand from sendPullCommand to dequeue"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: long", "DEL SimpleName: timeout", "DEL VariableDeclarationFragment", "DEL SimpleName: wait", "DEL VariableDeclarationStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: messageQueue", "DEL MethodInvocation", "DEL SimpleName: wait", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL TryStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: dequeueNoWait", "DEL FieldAccess", "DEL SimpleName: messageQueue", "DEL ThisExpression"]}, {"root": "DEL TextElement: a timeout on the pull request however some providers will not honor this value", "operations": ["DEL TextElement: a timeout on the pull request however some providers will not honor this value"]}, {"root": "DEL TextElement: and the pull will remain active until a message is dispatched.", "operations": ["DEL TextElement: and the pull will remain active until a message is dispatched."]}]}}, {"JmsMessageConsumer_diff": {"operations": ["Insert ImportDeclaration(61) into CompilationUnit(2092) at 23", "Insert ImportDeclaration(63) into CompilationUnit(2092) at 24", "Insert QualifiedName: org.slf4j.Logger(60) into ImportDeclaration(61) at 0", "Insert QualifiedName: org.slf4j.LoggerFactory(62) into ImportDeclaration(63) at 0", "Insert FieldDeclaration(88) into TypeDeclaration: class(2091) at 6", "Insert MethodDeclaration(974) into TypeDeclaration: class(2091) at 31", "Insert MethodDeclaration(985) into TypeDeclaration: class(2091) at 32", "Insert MethodDeclaration(1773) into TypeDeclaration: class(2091) at 59", "Insert Modifier: private(75) into FieldDeclaration(88) at 0", "Insert Modifier: static(76) into FieldDeclaration(88) at 1", "Insert Modifier: final(77) into FieldDeclaration(88) at 2", "Insert SimpleType: Logger(79) into FieldDeclaration(88) at 3", "Insert VariableDeclarationFragment(87) into FieldDeclaration(88) at 4", "Move ExpressionStatement(659) into Block(718) at 5", "Insert Javadoc(791) into MethodDeclaration(974) at 0", "Insert Modifier: private(792) into MethodDeclaration(974) at 1", "Insert SimpleType: JmsInboundMessageDispatch(794) into MethodDeclaration(974) at 2", "Insert SimpleName: dequeue(795) into MethodDeclaration(974) at 3", "Insert SingleVariableDeclaration(798) into MethodDeclaration(974) at 4", "Insert SimpleType: JMSException(800) into MethodDeclaration(974) at 5", "Insert Block(973) into MethodDeclaration(974) at 6", "Insert Modifier: protected(975) into MethodDeclaration(985) at 0", "Insert PrimitiveType: boolean(976) into MethodDeclaration(985) at 1", "Insert SimpleName: redeliveryExceeded(977) into MethodDeclaration(985) at 2", "Insert SingleVariableDeclaration(981) into MethodDeclaration(985) at 3", "Insert Block(984) into MethodDeclaration(985) at 4", "Insert Modifier: public(1764) into MethodDeclaration(1773) at 0", "Insert PrimitiveType: boolean(1765) into MethodDeclaration(1773) at 1", "Insert SimpleName: isPullConsumer(1766) into MethodDeclaration(1773) at 2", "Insert Block(1772) into MethodDeclaration(1773) at 3", "Insert SimpleName: Logger(78) into SimpleType: Logger(79) at 0", "Insert SimpleName: LOG(80) into VariableDeclarationFragment(87) at 0", "Insert MethodInvocation(86) into VariableDeclarationFragment(87) at 1", "Insert VariableDeclarationStatement(693) into Block(718) at 4", "Insert IfStatement(711) into Block(718) at 5", "Move ReturnStatement(685) into Block(718) at 7", "Insert ExpressionStatement(746) into Block(777) at 2", "Insert VariableDeclarationStatement(752) into Block(777) at 3", "Insert IfStatement(770) into Block(777) at 4", "Insert TagElement(786) into Javadoc(791) at 0", "Insert TagElement: @throws(788) into Javadoc(791) at 1", "Insert TagElement: @return(790) into Javadoc(791) at 2", "Insert SimpleName: JmsInboundMessageDispatch(793) into SimpleType: JmsInboundMessageDispatch(794) at 0", "Insert PrimitiveType: long(796) into SingleVariableDeclaration(798) at 0", "Insert SimpleName: timeout(797) into SingleVariableDeclaration(798) at 1", "Insert SimpleName: JMSException(799) into SimpleType: JMSException(800) at 0", "Insert TryStatement(972) into Block(973) at 0", "Insert SimpleType: JmsInboundMessageDispatch(979) into SingleVariableDeclaration(981) at 0", "Insert SimpleName: envelope(980) into SingleVariableDeclaration(981) at 1", "Insert ReturnStatement(983) into Block(984) at 0", "Insert ReturnStatement(1771) into Block(1772) at 0", "Insert SimpleName: LoggerFactory(81) into MethodInvocation(86) at 0", "Insert SimpleName: getLogger(82) into MethodInvocation(86) at 1", "Insert TypeLiteral(85) into MethodInvocation(86) at 2", "Insert SimpleType: JmsInboundMessageDispatch(689) into VariableDeclarationStatement(693) at 0", "Insert VariableDeclarationFragment(692) into VariableDeclarationStatement(693) at 1", "Insert MethodInvocation(695) into IfStatement(711) at 0", "Insert Block(703) into IfStatement(711) at 1", "Insert Block(710) into IfStatement(711) at 2", "Insert MethodInvocation(745) into ExpressionStatement(746) at 0", "Insert SimpleType: JmsInboundMessageDispatch(748) into VariableDeclarationStatement(752) at 0", "Insert VariableDeclarationFragment(751) into VariableDeclarationStatement(752) at 1", "Insert MethodInvocation(754) into IfStatement(770) at 0", "Insert Block(762) into IfStatement(770) at 1", "Insert Block(769) into IfStatement(770) at 2", "Insert TextElement: Used to get an enqueued message from the unconsumedMessages list. The(779) into TagElement(786) at 0", "Insert TextElement: amount of time this method blocks is based on the timeout value.(780) into TagElement(786) at 1", "Insert TextElement: timeout < 0 then it blocks until a message is received.(781) into TagElement(786) at 2", "Insert TextElement: timeout = 0 then it returns a message or null if none available(782) into TagElement(786) at 3", "Insert TextElement: timeout > 0 then it blocks up to timeout amount of time.(783) into TagElement(786) at 4", "Insert TextElement: This method may consume messages that are expired or exceed a configured(784) into TagElement(786) at 5", "Insert TextElement: delivery count value but will continue to wait for the configured timeout.(785) into TagElement(786) at 6", "Insert SimpleName: JMSException(787) into TagElement: @throws(788) at 0", "Insert TextElement:  null if we timeout or if the consumer is closed.(789) into TagElement: @return(790) at 0", "Insert Block(954) into TryStatement(972) at 0", "Move CatchClause(697) into TryStatement(972) at 1", "Insert SimpleName: JmsInboundMessageDispatch(978) into SimpleType: JmsInboundMessageDispatch(979) at 0", "Insert BooleanLiteral: false(982) into ReturnStatement(983) at 0", "Insert InfixExpression: ==(1770) into ReturnStatement(1771) at 0", "Update TextElement: Triggers a pull request from the connected Provider.  An attempt is made to set(1618) to Triggers a pull request from the connected Provider with the given timeout value.", "Update TextElement:  to indicate that the request should expire immediately if no message.<br>(1626) to  to indicate that the request should never time out.<br>", "Update TextElement:  to indicate that the request should never time out.<br>(1629) to  to indicate that the request should expire immediately if no message.<br>", "Insert SimpleType: JmsMessageConsumer(84) into TypeLiteral(85) at 0", "Insert SimpleName: JmsInboundMessageDispatch(688) into SimpleType: JmsInboundMessageDispatch(689) at 0", "Insert SimpleName: envelope(690) into VariableDeclarationFragment(692) at 0", "Insert NullLiteral(691) into VariableDeclarationFragment(692) at 1", "Insert SimpleName: isPullConsumer(694) into MethodInvocation(695) at 0", "Move ExpressionStatement(728) into Block(703) at 0", "Insert ExpressionStatement(709) into Block(710) at 0", "Insert SimpleName: sendPullCommand(743) into MethodInvocation(745) at 0", "Insert NumberLiteral: 0(744) into MethodInvocation(745) at 1", "Insert SimpleName: JmsInboundMessageDispatch(747) into SimpleType: JmsInboundMessageDispatch(748) at 0", "Insert SimpleName: envelope(749) into VariableDeclarationFragment(751) at 0", "Insert NullLiteral(750) into VariableDeclarationFragment(751) at 1", "Insert SimpleName: isPullConsumer(753) into MethodInvocation(754) at 0", "Insert ExpressionStatement(761) into Block(762) at 0", "Insert ExpressionStatement(768) into Block(769) at 0", "Insert VariableDeclarationStatement(805) into Block(954) at 0", "Insert IfStatement(818) into Block(954) at 1", "Insert WhileStatement(953) into Block(954) at 2", "Insert MethodInvocation(1768) into InfixExpression: ==(1770) at 0", "Insert NumberLiteral: 0(1769) into InfixExpression: ==(1770) at 1", "Update TextElement:  > 1(1630) to  > 0", "Insert PrefixExpression: !(1902) into InfixExpression: &&(1914) at 0", "Insert SimpleName: JmsMessageConsumer(83) into SimpleType: JmsMessageConsumer(84) at 0", "Insert Assignment: =(701) into ExpressionStatement(702) at 0", "Insert Assignment: =(708) into ExpressionStatement(709) at 0", "Update SimpleName: dequeue(680) to envelope", "Move SimpleName: dequeue(680) into MethodInvocation(715) at 1", "Insert Assignment: =(760) into ExpressionStatement(761) at 0", "Insert Assignment: =(767) into ExpressionStatement(768) at 0", "Insert SimpleName: envelope(773) into MethodInvocation(774) at 1", "Insert PrimitiveType: long(801) into VariableDeclarationStatement(805) at 0", "Insert VariableDeclarationFragment(804) into VariableDeclarationStatement(805) at 1", "Insert InfixExpression: >(808) into IfStatement(818) at 0", "Insert Block(817) into IfStatement(818) at 1", "Insert BooleanLiteral: true(819) into WhileStatement(953) at 0", "Insert Block(952) into WhileStatement(953) at 1", "Insert ExpressionStatement(964) into Block(970) at 0", "Insert SimpleName: getPrefetchSize(1767) into MethodInvocation(1768) at 0", "Insert MethodInvocation(1901) into PrefixExpression: !(1902) at 0", "Update SimpleName: wait(668) to timeout", "Insert SimpleName: envelope(696) into Assignment: =(701) at 0", "Move MethodInvocation(727) into Assignment: =(701) at 1", "Insert SimpleName: envelope(704) into Assignment: =(708) at 0", "Insert MethodInvocation(707) into Assignment: =(708) at 1", "Insert SimpleName: envelope(755) into Assignment: =(760) at 0", "Insert MethodInvocation(759) into Assignment: =(760) at 1", "Insert SimpleName: envelope(763) into Assignment: =(767) at 0", "Insert MethodInvocation(766) into Assignment: =(767) at 1", "Insert SimpleName: deadline(802) into VariableDeclarationFragment(804) at 0", "Insert NumberLiteral: 0(803) into VariableDeclarationFragment(804) at 1", "Insert SimpleName: timeout(806) into InfixExpression: >(808) at 0", "Insert NumberLiteral: 0(807) into InfixExpression: >(808) at 1", "Insert ExpressionStatement(816) into Block(817) at 0", "Insert VariableDeclarationStatement(828) into Block(952) at 0", "Insert IfStatement(951) into Block(952) at 1", "Insert MethodInvocation(963) into ExpressionStatement(964) at 0", "Insert SimpleName: messageQueue(1899) into MethodInvocation(1901) at 0", "Insert SimpleName: isClosed(1900) into MethodInvocation(1901) at 1", "Update SimpleName: sendPullCommand(724) to dequeue", "Insert SimpleName: dequeue(705) into MethodInvocation(707) at 0", "Insert SimpleName: timeout(706) into MethodInvocation(707) at 1", "Insert SimpleName: dequeue(756) into MethodInvocation(759) at 0", "Insert PrefixExpression: -(758) into MethodInvocation(759) at 1", "Insert SimpleName: dequeue(764) into MethodInvocation(766) at 0", "Insert NumberLiteral: 0(765) into MethodInvocation(766) at 1", "Insert Assignment: =(815) into ExpressionStatement(816) at 0", "Insert SimpleType: JmsInboundMessageDispatch(821) into VariableDeclarationStatement(828) at 0", "Insert VariableDeclarationFragment(827) into VariableDeclarationStatement(828) at 1", "Insert InfixExpression: ==(831) into IfStatement(951) at 0", "Insert Block(883) into IfStatement(951) at 1", "Insert IfStatement(950) into IfStatement(951) at 2", "Insert MethodInvocation(961) into MethodInvocation(963) at 0", "Insert SimpleName: interrupt(962) into MethodInvocation(963) at 1", "Insert NumberLiteral: 1(757) into PrefixExpression: -(758) at 0", "Insert SimpleName: deadline(809) into Assignment: =(815) at 0", "Insert InfixExpression: +(814) into Assignment: =(815) at 1", "Insert SimpleName: JmsInboundMessageDispatch(820) into SimpleType: JmsInboundMessageDispatch(821) at 0", "Insert SimpleName: envelope(822) into VariableDeclarationFragment(827) at 0", "Insert MethodInvocation(826) into VariableDeclarationFragment(827) at 1", "Insert SimpleName: envelope(829) into InfixExpression: ==(831) at 0", "Insert NullLiteral(830) into InfixExpression: ==(831) at 1", "Insert IfStatement(882) into Block(883) at 0", "Insert InfixExpression: ==(888) into IfStatement(950) at 0", "Insert Block(898) into IfStatement(950) at 1", "Insert IfStatement(949) into IfStatement(950) at 2", "Insert SimpleName: Thread(959) into MethodInvocation(961) at 0", "Insert SimpleName: currentThread(960) into MethodInvocation(961) at 1", "Insert MethodInvocation(812) into InfixExpression: +(814) at 0", "Insert SimpleName: timeout(813) into InfixExpression: +(814) at 1", "Insert SimpleName: messageQueue(823) into MethodInvocation(826) at 0", "Insert SimpleName: dequeue(824) into MethodInvocation(826) at 1", "Insert SimpleName: timeout(825) into MethodInvocation(826) at 2", "Insert InfixExpression: &&(839) into IfStatement(882) at 0", "Insert Block(852) into IfStatement(882) at 1", "Insert Block(881) into IfStatement(882) at 2", "Insert MethodInvocation(886) into InfixExpression: ==(888) at 0", "Insert NullLiteral(887) into InfixExpression: ==(888) at 1", "Insert ExpressionStatement(895) into Block(898) at 0", "Insert ReturnStatement(897) into Block(898) at 1", "Insert MethodInvocation(901) into IfStatement(949) at 0", "Insert Block(931) into IfStatement(949) at 1", "Insert Block(948) into IfStatement(949) at 2", "Insert SimpleName: System(810) into MethodInvocation(812) at 0", "Insert SimpleName: currentTimeMillis(811) into MethodInvocation(812) at 1", "Insert InfixExpression: >(834) into InfixExpression: &&(839) at 0", "Insert PrefixExpression: !(838) into InfixExpression: &&(839) at 1", "Insert ExpressionStatement(851) into Block(852) at 0", "Insert IfStatement(880) into Block(881) at 0", "Insert SimpleName: envelope(884) into MethodInvocation(886) at 0", "Insert SimpleName: getMessage(885) into MethodInvocation(886) at 1", "Insert MethodInvocation(894) into ExpressionStatement(895) at 0", "Insert NullLiteral(896) into ReturnStatement(897) at 0", "Insert SimpleName: redeliveryExceeded(899) into MethodInvocation(901) at 0", "Insert SimpleName: envelope(900) into MethodInvocation(901) at 1", "Insert ExpressionStatement(909) into Block(931) at 0", "Insert IfStatement(926) into Block(931) at 1", "Insert ExpressionStatement(930) into Block(931) at 2", "Insert IfStatement(945) into Block(948) at 0", "Insert ReturnStatement(947) into Block(948) at 1", "Insert SimpleName: timeout(832) into InfixExpression: >(834) at 0", "Insert NumberLiteral: 0(833) into InfixExpression: >(834) at 1", "Insert MethodInvocation(837) into PrefixExpression: !(838) at 0", "Insert Assignment: =(850) into ExpressionStatement(851) at 0", "Insert InfixExpression: &&(860) into IfStatement(880) at 0", "Insert Block(876) into IfStatement(880) at 1", "Insert Block(879) into IfStatement(880) at 2", "Insert SimpleName: LOG(889) into MethodInvocation(894) at 0", "Insert SimpleName: trace(890) into MethodInvocation(894) at 1", "Insert StringLiteral: \"{} no message was available for this consumer: {}\"(891) into MethodInvocation(894) at 2", "Insert MethodInvocation(893) into MethodInvocation(894) at 3", "Insert MethodInvocation(908) into ExpressionStatement(909) at 0", "Insert InfixExpression: >(912) into IfStatement(926) at 0", "Insert Block(925) into IfStatement(926) at 1", "Insert MethodInvocation(929) into ExpressionStatement(930) at 0", "Insert MethodInvocation(934) into IfStatement(945) at 0", "Insert Block(944) into IfStatement(945) at 1", "Insert SimpleName: envelope(946) into ReturnStatement(947) at 0", "Insert SimpleName: messageQueue(835) into MethodInvocation(837) at 0", "Insert SimpleName: isClosed(836) into MethodInvocation(837) at 1", "Insert SimpleName: timeout(840) into Assignment: =(850) at 0", "Insert MethodInvocation(849) into Assignment: =(850) at 1", "Insert InfixExpression: !=(855) into InfixExpression: &&(860) at 0", "Insert PrefixExpression: !(859) into InfixExpression: &&(860) at 1", "Insert ExpressionStatement(870) into Block(876) at 0", "Insert ThrowStatement(875) into Block(876) at 1", "Insert ReturnStatement(878) into Block(879) at 0", "Insert SimpleName: getConsumerId(892) into MethodInvocation(893) at 0", "Insert SimpleName: LOG(902) into MethodInvocation(908) at 0", "Insert SimpleName: debug(903) into MethodInvocation(908) at 1", "Insert StringLiteral: \"{} received with excessive redelivered: {}\"(904) into MethodInvocation(908) at 2", "Insert MethodInvocation(906) into MethodInvocation(908) at 3", "Insert SimpleName: envelope(907) into MethodInvocation(908) at 4", "Insert SimpleName: timeout(910) into InfixExpression: >(912) at 0", "Insert NumberLiteral: 0(911) into InfixExpression: >(912) at 1", "Insert ExpressionStatement(924) into Block(925) at 0", "Insert SimpleName: sendPullCommand(927) into MethodInvocation(929) at 0", "Insert SimpleName: timeout(928) into MethodInvocation(929) at 1", "Insert SimpleName: LOG(932) into MethodInvocation(934) at 0", "Insert SimpleName: isTraceEnabled(933) into MethodInvocation(934) at 1", "Insert ExpressionStatement(943) into Block(944) at 0", "Insert SimpleName: Math(841) into MethodInvocation(849) at 0", "Insert SimpleName: max(842) into MethodInvocation(849) at 1", "Insert InfixExpression: -(847) into MethodInvocation(849) at 2", "Insert NumberLiteral: 0(848) into MethodInvocation(849) at 3", "Insert SimpleName: failureCause(853) into InfixExpression: !=(855) at 0", "Insert NullLiteral(854) into InfixExpression: !=(855) at 1", "Insert MethodInvocation(858) into PrefixExpression: !(859) at 0", "Insert MethodInvocation(869) into ExpressionStatement(870) at 0", "Insert MethodInvocation(874) into ThrowStatement(875) at 0", "Insert NullLiteral(877) into ReturnStatement(878) at 0", "Insert SimpleName: getConsumerId(905) into MethodInvocation(906) at 0", "Insert Assignment: =(923) into ExpressionStatement(924) at 0", "Insert MethodInvocation(942) into ExpressionStatement(943) at 0", "Insert SimpleName: deadline(843) into InfixExpression: -(847) at 0", "Insert MethodInvocation(846) into InfixExpression: -(847) at 1", "Insert SimpleName: messageQueue(856) into MethodInvocation(858) at 0", "Insert SimpleName: isClosed(857) into MethodInvocation(858) at 1", "Insert SimpleName: LOG(861) into MethodInvocation(869) at 0", "Insert SimpleName: debug(862) into MethodInvocation(869) at 1", "Insert StringLiteral: \"{} receive failed: {}\"(863) into MethodInvocation(869) at 2", "Insert MethodInvocation(865) into MethodInvocation(869) at 3", "Insert MethodInvocation(868) into MethodInvocation(869) at 4", "Insert SimpleName: JmsExceptionSupport(871) into MethodInvocation(874) at 0", "Insert SimpleName: create(872) into MethodInvocation(874) at 1", "Insert SimpleName: failureCause(873) into MethodInvocation(874) at 2", "Insert SimpleName: timeout(913) into Assignment: =(923) at 0", "Insert MethodInvocation(922) into Assignment: =(923) at 1", "Insert SimpleName: LOG(935) into MethodInvocation(942) at 0", "Insert SimpleName: trace(936) into MethodInvocation(942) at 1", "Insert InfixExpression: +(941) into MethodInvocation(942) at 2", "Insert SimpleName: System(844) into MethodInvocation(846) at 0", "Insert SimpleName: currentTimeMillis(845) into MethodInvocation(846) at 1", "Insert SimpleName: getConsumerId(864) into MethodInvocation(865) at 0", "Insert SimpleName: failureCause(866) into MethodInvocation(868) at 0", "Insert SimpleName: getMessage(867) into MethodInvocation(868) at 1", "Insert SimpleName: Math(914) into MethodInvocation(922) at 0", "Insert SimpleName: max(915) into MethodInvocation(922) at 1", "Insert InfixExpression: -(920) into MethodInvocation(922) at 2", "Insert NumberLiteral: 0(921) into MethodInvocation(922) at 3", "Insert MethodInvocation(938) into InfixExpression: +(941) at 0", "Insert StringLiteral: \" received message: \"(939) into InfixExpression: +(941) at 1", "Insert SimpleName: envelope(940) into InfixExpression: +(941) at 2", "Insert SimpleName: deadline(916) into InfixExpression: -(920) at 0", "Insert MethodInvocation(919) into InfixExpression: -(920) at 1", "Insert SimpleName: getConsumerId(937) into MethodInvocation(938) at 0", "Insert SimpleName: System(917) into MethodInvocation(919) at 0", "Insert SimpleName: currentTimeMillis(918) into MethodInvocation(919) at 1", "Delete PrimitiveType: long(660)", "Delete SimpleName: wait(661)", "Delete SimpleName: timeout(662)", "Delete VariableDeclarationFragment(663)", "Delete VariableDeclarationStatement(664)", "Delete ThisExpression(677)", "Delete SimpleName: messageQueue(678)", "Delete FieldAccess(679)", "Delete SimpleName: wait(681)", "Delete MethodInvocation(682)", "Delete Block(686)", "Delete TryStatement(698)", "Delete ThisExpression(731)", "Delete SimpleName: messageQueue(732)", "Delete FieldAccess(733)", "Delete SimpleName: dequeueNoWait(734)", "Delete MethodInvocation(735)", "Delete TextElement: a timeout on the pull request however some providers will not honor this value(1619)", "Delete TextElement: and the pull will remain active until a message is dispatched.(1620)"]}}, {"Provider_cluster": {"actions": [{"root": "INS TextElement: timeout < 0 then it should remain open until a message is received. to TagElement at 4", "operations": ["INS TextElement: timeout < 0 then it should remain open until a message is received. to TagElement at 4"]}, {"root": "INS TextElement: timeout = 0 then it returns a message or null if none available to TagElement at 5", "operations": ["INS TextElement: timeout = 0 then it returns a message or null if none available to TagElement at 5"]}, {"root": "INS TextElement: timeout > 0 then it should remain open for timeout amount of time. to TagElement at 6", "operations": ["INS TextElement: timeout > 0 then it should remain open for timeout amount of time. to TagElement at 6"]}, {"root": "INS TextElement: The timeout value when positive is given in milliseconds. to TagElement at 7", "operations": ["INS TextElement: The timeout value when positive is given in milliseconds. to TagElement at 7"]}]}}, {"Provider_diff": {"operations": ["Insert TextElement: timeout < 0 then it should remain open until a message is received.(476) into TagElement(480) at 4", "Insert TextElement: timeout = 0 then it returns a message or null if none available(477) into TagElement(480) at 5", "Insert TextElement: timeout > 0 then it should remain open for timeout amount of time.(478) into TagElement(480) at 6", "Insert TextElement: The timeout value when positive is given in milliseconds.(479) into TagElement(480) at 7"]}}, {"AmqpConnection_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: java.util.concurrent.ScheduledFuture to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 48", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS ParameterizedType: ScheduledFuture<?> to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS TextElement: The Runnable task to be executed after the given delay. to TagElement: @param at 1", "INS SimpleName: getProvider to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 48", "INS TagElement: @return to Javadoc at 3", "INS SimpleName: getScheduler to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS StringLiteral: \"Resource attempted to schedule a null task.\" to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: delay to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS NullLiteral to ReturnStatement at 0", "INS WildcardType: ? to ParameterizedType: ScheduledFuture<?> at 1", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS SimpleName: schedule to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: task to TagElement: @param at 0", "INS SimpleName: delay to TagElement: @param at 0", "INS TextElement:  a ScheduledFuture instance that can be used to cancel the task. to TagElement: @return at 0", "INS SimpleType: ScheduledFuture to ParameterizedType: ScheduledFuture<?> at 0", "INS TextElement: Allows a connection resource to schedule a task for future execution. to TagElement at 0", "INS ReturnStatement to Block at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 4", "INS SimpleName: schedule to MethodDeclaration at 3", "INS SimpleName: task to InfixExpression: == at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: delay to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS InfixExpression: == to IfStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: trace to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: task to SingleVariableDeclaration at 2", "INS SimpleName: ScheduledFuture to SimpleType: ScheduledFuture at 0", "INS TextElement: The delay in milliseconds to schedule the given task for execution. to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: task to MethodInvocation at 2", "INS SimpleType: Runnable to SingleVariableDeclaration at 1", "INS IfStatement to Block at 0"]}]}}, {"AmqpConnection_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(1048) at 6", "Insert ImportDeclaration(29) into CompilationUnit(1048) at 7", "Insert QualifiedName: java.util.concurrent.ScheduledFuture(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.util.concurrent.TimeUnit(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(1030) into TypeDeclaration: class(1047) at 48", "Insert Javadoc(992) into MethodDeclaration(1030) at 0", "Insert Modifier: public(993) into MethodDeclaration(1030) at 1", "Insert ParameterizedType: ScheduledFuture<?>(997) into MethodDeclaration(1030) at 2", "Insert SimpleName: schedule(998) into MethodDeclaration(1030) at 3", "Insert SingleVariableDeclaration(1003) into MethodDeclaration(1030) at 4", "Insert SingleVariableDeclaration(1006) into MethodDeclaration(1030) at 5", "Insert Block(1029) into MethodDeclaration(1030) at 6", "Insert TagElement(983) into Javadoc(992) at 0", "Insert TagElement: @param(986) into Javadoc(992) at 1", "Insert TagElement: @param(989) into Javadoc(992) at 2", "Insert TagElement: @return(991) into Javadoc(992) at 3", "Insert SimpleType: ScheduledFuture(995) into ParameterizedType: ScheduledFuture<?>(997) at 0", "Insert WildcardType: ?(996) into ParameterizedType: ScheduledFuture<?>(997) at 1", "Insert Modifier: final(999) into SingleVariableDeclaration(1003) at 0", "Insert SimpleType: Runnable(1001) into SingleVariableDeclaration(1003) at 1", "Insert SimpleName: task(1002) into SingleVariableDeclaration(1003) at 2", "Insert PrimitiveType: long(1004) into SingleVariableDeclaration(1006) at 0", "Insert SimpleName: delay(1005) into SingleVariableDeclaration(1006) at 1", "Insert IfStatement(1018) into Block(1029) at 0", "Insert ReturnStatement(1028) into Block(1029) at 1", "Insert TextElement: Allows a connection resource to schedule a task for future execution.(982) into TagElement(983) at 0", "Insert SimpleName: task(984) into TagElement: @param(986) at 0", "Insert TextElement: The Runnable task to be executed after the given delay.(985) into TagElement: @param(986) at 1", "Insert SimpleName: delay(987) into TagElement: @param(989) at 0", "Insert TextElement: The delay in milliseconds to schedule the given task for execution.(988) into TagElement: @param(989) at 1", "Insert TextElement:  a ScheduledFuture instance that can be used to cancel the task.(990) into TagElement: @return(991) at 0", "Insert SimpleName: ScheduledFuture(994) into SimpleType: ScheduledFuture(995) at 0", "Insert SimpleName: Runnable(1000) into SimpleType: Runnable(1001) at 0", "Insert InfixExpression: ==(1009) into IfStatement(1018) at 0", "Insert Block(1017) into IfStatement(1018) at 1", "Insert MethodInvocation(1027) into ReturnStatement(1028) at 0", "Insert SimpleName: task(1007) into InfixExpression: ==(1009) at 0", "Insert NullLiteral(1008) into InfixExpression: ==(1009) at 1", "Insert ExpressionStatement(1014) into Block(1017) at 0", "Insert ReturnStatement(1016) into Block(1017) at 1", "Insert MethodInvocation(1022) into MethodInvocation(1027) at 0", "Insert SimpleName: schedule(1023) into MethodInvocation(1027) at 1", "Insert SimpleName: task(1024) into MethodInvocation(1027) at 2", "Insert SimpleName: delay(1025) into MethodInvocation(1027) at 3", "Insert QualifiedName: TimeUnit.MILLISECONDS(1026) into MethodInvocation(1027) at 4", "Insert MethodInvocation(1013) into ExpressionStatement(1014) at 0", "Insert NullLiteral(1015) into ReturnStatement(1016) at 0", "Insert MethodInvocation(1020) into MethodInvocation(1022) at 0", "Insert SimpleName: getScheduler(1021) into MethodInvocation(1022) at 1", "Insert SimpleName: LOG(1010) into MethodInvocation(1013) at 0", "Insert SimpleName: trace(1011) into MethodInvocation(1013) at 1", "Insert StringLiteral: \"Resource attempted to schedule a null task.\"(1012) into MethodInvocation(1013) at 2", "Insert SimpleName: getProvider(1019) into MethodInvocation(1020) at 0"]}}, {"AmqpConsumer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: java.util.concurrent.ScheduledFuture to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: AsyncResult to SimpleType: AsyncResult at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: AsyncResult to FieldDeclaration at 1", "INS SimpleName: pullRequest to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 55", "operations": ["INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: getSession to MethodInvocation at 0", "INS SimpleName: onFailure to MethodDeclaration at 3", "INS SimpleType: JmsInboundMessageDispatch to VariableDeclarationStatement at 0", "INS SimpleName: deliver to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS ReturnStatement to Block at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: AsyncResult to TypeDeclaration: class at 2", "INS SimpleName: DrainingPullRequest to TypeDeclaration: class at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: e to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getNextIncomingSequenceNumber to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to CatchClause at 1", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: JmsInboundMessageDispatch to ClassInstanceCreation at 0", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TryStatement to Block at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 55", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: pullDone to MethodInvocation at 1", "INS SimpleName: isComplete to MethodDeclaration at 3", "INS SimpleName: JmsInboundMessageDispatch to SimpleType: JmsInboundMessageDispatch at 0", "INS SimpleName: reportError to MethodInvocation at 1", "INS SimpleName: IOExceptionSupport to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: setConsumerId to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS Block to TryStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pullDone to VariableDeclarationFragment at 0", "INS SimpleName: AsyncResult to SimpleType: AsyncResult at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS SimpleName: pullDone to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: onSuccess to MethodDeclaration at 3"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 56", "operations": ["INS Modifier: private to TypeDeclaration: class at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TypeDeclaration: class to TypeDeclaration: class at 56", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: DrainingPullRequest to SimpleType: DrainingPullRequest at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: completionTask to VariableDeclarationFragment at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS ParameterizedType: ScheduledFuture<?> to SingleVariableDeclaration at 0", "INS SimpleType: ScheduledFuture to ParameterizedType: ScheduledFuture<?> at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: cancel to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: ScheduledFuture to SimpleType: ScheduledFuture at 0", "INS SimpleType: ScheduledFuture to ParameterizedType: ScheduledFuture<?> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: completionTask to Assignment: = at 1", "INS SimpleName: onSuccess to MethodDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS Block to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS WildcardType: ? to ParameterizedType: ScheduledFuture<?> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: completionTask to MethodInvocation at 0", "INS SimpleName: TimedPullRequest to TypeDeclaration: class at 1", "INS SimpleName: completionTask to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ScheduledFuture to SimpleType: ScheduledFuture at 0", "INS ParameterizedType: ScheduledFuture<?> to FieldDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: completionTask to SingleVariableDeclaration at 1", "INS BooleanLiteral: false to MethodInvocation at 2", "INS SimpleType: DrainingPullRequest to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 4", "INS WildcardType: ? to ParameterizedType: ScheduledFuture<?> at 1", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: TimedPullRequest to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS InfixExpression: <= to IfStatement at 0", "INS SimpleName: getEndpoint to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: onFailure to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: getRemoteCredit to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: onSuccess to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: receiver to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: pullRequest to InfixExpression: != at 0", "INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: <= at 0", "INS SimpleName: getRemoteCredit to MethodInvocation at 1", "INS SimpleName: pullRequest to MethodInvocation at 0", "INS SimpleName: Receiver to SimpleType: Receiver at 0", "INS MethodInvocation to InfixExpression: <= at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS SimpleName: pullRequest to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 1", "INS StringLiteral: \"Consumer {} flow updated, remote credit = {}\" to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS Block to IfStatement at 2", "INS SimpleName: getEndpoint to MethodInvocation at 0", "INS SimpleType: Receiver to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 6", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: <= to IfStatement at 0", "INS SimpleName: receiver to MethodInvocation at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS SimpleName: pullRequest to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: receiver to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getQueued to MethodInvocation at 1", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: timeout to InfixExpression: == at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS IfStatement to IfStatement at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS WildcardType: ? to ParameterizedType: ScheduledFuture<?> at 1", "INS SimpleName: pullRequest to Assignment: = at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: DrainingPullRequest to ClassInstanceCreation at 0", "INS SimpleName: future to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: schedule to MethodInvocation at 1", "INS SimpleName: flow to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: TimedPullRequest to SimpleType: TimedPullRequest at 0", "INS InfixExpression: < to IfStatement at 0", "INS SimpleType: ScheduledFuture to ParameterizedType: ScheduledFuture<?> at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS SimpleName: ScheduledFuture to SimpleType: ScheduledFuture at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: getEndpoint to MethodInvocation at 0", "INS SimpleType: Runnable to ClassInstanceCreation at 0", "INS SimpleName: drain to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: DrainingPullRequest to SimpleType: DrainingPullRequest at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getSession to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: timeout to InfixExpression: < at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS SimpleName: timeout to InfixExpression: > at 0", "INS SimpleName: getConsumerId to MethodInvocation at 0", "INS SimpleName: getEndpoint to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: TimedPullRequest to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: pullRequest to Assignment: = at 0", "INS SimpleName: timeout to MethodInvocation at 4", "INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS SimpleName: future to ClassInstanceCreation at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: timeout to MethodInvocation at 3", "INS StringLiteral: \"Pull called on consumer {} with timouet = {}\" to MethodInvocation at 2", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: ScheduledFuture<?> to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 2", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from For a consumer whose prefetch value is set to zero this method will attempt to solicite to Request a remote peer send a Message to this client.", "operations": ["UPD TextElement: For a consumer whose prefetch value is set to zero this method will attempt to solicite from For a consumer whose prefetch value is set to zero this method will attempt to solicite to Request a remote peer send a Message to this client."]}, {"root": "UPDATE from a new message dispatch from the broker. to timeout < 0 then it should remain open until a message is received.", "operations": ["UPD TextElement: a new message dispatch from the broker. from a new message dispatch from the broker. to timeout < 0 then it should remain open until a message is received."]}, {"root": "INS TextElement: timeout = 0 then it returns a message or null if none available to TagElement at 2", "operations": ["INS TextElement: timeout = 0 then it returns a message or null if none available to TagElement at 2"]}, {"root": "INS TextElement: timeout > 0 then it should remain open for timeout amount of time. to TagElement at 3", "operations": ["INS TextElement: timeout > 0 then it should remain open for timeout amount of time. to TagElement at 3"]}, {"root": "INS TextElement: The timeout value when positive is given in milliseconds. to TagElement at 4", "operations": ["INS TextElement: The timeout value when positive is given in milliseconds. to TagElement at 4"]}, {"root": "INS TextElement: the amount of time to tell the remote peer to keep this pull request valid. to TagElement: @param at 1", "operations": ["INS TextElement: the amount of time to tell the remote peer to keep this pull request valid. to TagElement: @param at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: && to IfStatement at 0"]}, {"root": "UPDATE from s to source", "operations": ["UPD SimpleName: s from s to source", "UPD SimpleName: s from s to source", "UPD SimpleName: s from s to source", "UPD SimpleName: s from s to source"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 1", "INS StringLiteral: \"Incoming null delivery\" to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS Block to IfStatement at 2", "INS SimpleName: info to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: pullRequest to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV InfixExpression: <= to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: onSuccess to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pullRequest to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: pullRequest to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: pullRequest to MethodInvocation at 0", "INS IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pullRequest to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: onFailure to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: pullRequest to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getRemoteCredit to MethodInvocation at 1", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS SimpleName: getEndpoint to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: drain to MethodInvocation at 1", "INS SimpleName: getEndpoint to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ExpressionStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&"]}]}}, {"AmqpConsumer_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(2223) at 11", "Insert QualifiedName: java.util.concurrent.ScheduledFuture(36) into ImportDeclaration(37) at 0", "Insert FieldDeclaration(283) into TypeDeclaration: class(2222) at 18", "Insert TypeDeclaration: class(2179) into TypeDeclaration: class(2222) at 55", "Insert TypeDeclaration: class(2221) into TypeDeclaration: class(2222) at 56", "Insert Modifier: private(278) into FieldDeclaration(283) at 0", "Insert SimpleType: AsyncResult(280) into FieldDeclaration(283) at 1", "Insert VariableDeclarationFragment(282) into FieldDeclaration(283) at 2", "Insert Block(488) into MethodDeclaration(489) at 6", "Insert Block(1433) into MethodDeclaration(1434) at 5", "Insert Modifier: private(2111) into TypeDeclaration: class(2179) at 0", "Insert SimpleName: DrainingPullRequest(2112) into TypeDeclaration: class(2179) at 1", "Insert SimpleType: AsyncResult(2114) into TypeDeclaration: class(2179) at 2", "Insert MethodDeclaration(2162) into TypeDeclaration: class(2179) at 3", "Insert MethodDeclaration(2169) into TypeDeclaration: class(2179) at 4", "Insert MethodDeclaration(2178) into TypeDeclaration: class(2179) at 5", "Insert Modifier: private(2180) into TypeDeclaration: class(2221) at 0", "Insert SimpleName: TimedPullRequest(2181) into TypeDeclaration: class(2221) at 1", "Insert SimpleType: DrainingPullRequest(2183) into TypeDeclaration: class(2221) at 2", "Insert FieldDeclaration(2192) into TypeDeclaration: class(2221) at 3", "Insert MethodDeclaration(2208) into TypeDeclaration: class(2221) at 4", "Insert MethodDeclaration(2220) into TypeDeclaration: class(2221) at 5", "Insert SimpleName: AsyncResult(279) into SimpleType: AsyncResult(280) at 0", "Insert SimpleName: pullRequest(281) into VariableDeclarationFragment(282) at 0", "Move IfStatement(424) into Block(488) at 0", "Insert IfStatement(472) into Block(488) at 1", "Insert ExpressionStatement(483) into Block(488) at 2", "Move ExpressionStatement(428) into Block(488) at 3", "Move VariableDeclarationStatement(601) into Block(644) at 0", "Move VariableDeclarationStatement(575) into Block(675) at 0", "Insert Modifier: final(1323) into SingleVariableDeclaration(1326) at 0", "Insert ExpressionStatement(1334) into Block(1433) at 0", "Insert IfStatement(1432) into Block(1433) at 1", "Insert SimpleName: AsyncResult(2113) into SimpleType: AsyncResult(2114) at 0", "Insert MarkerAnnotation(2116) into MethodDeclaration(2162) at 0", "Insert Modifier: public(2117) into MethodDeclaration(2162) at 1", "Insert PrimitiveType: void(2118) into MethodDeclaration(2162) at 2", "Insert SimpleName: onFailure(2119) into MethodDeclaration(2162) at 3", "Insert SingleVariableDeclaration(2123) into MethodDeclaration(2162) at 4", "Insert Block(2161) into MethodDeclaration(2162) at 5", "Insert MarkerAnnotation(2164) into MethodDeclaration(2169) at 0", "Insert Modifier: public(2165) into MethodDeclaration(2169) at 1", "Insert PrimitiveType: void(2166) into MethodDeclaration(2169) at 2", "Insert SimpleName: onSuccess(2167) into MethodDeclaration(2169) at 3", "Insert Block(2168) into MethodDeclaration(2169) at 4", "Insert MarkerAnnotation(2171) into MethodDeclaration(2178) at 0", "Insert Modifier: public(2172) into MethodDeclaration(2178) at 1", "Insert PrimitiveType: boolean(2173) into MethodDeclaration(2178) at 2", "Insert SimpleName: isComplete(2174) into MethodDeclaration(2178) at 3", "Insert Block(2177) into MethodDeclaration(2178) at 4", "Insert SimpleName: DrainingPullRequest(2182) into SimpleType: DrainingPullRequest(2183) at 0", "Insert Modifier: private(2184) into FieldDeclaration(2192) at 0", "Insert Modifier: final(2185) into FieldDeclaration(2192) at 1", "Insert ParameterizedType: ScheduledFuture<?>(2189) into FieldDeclaration(2192) at 2", "Insert VariableDeclarationFragment(2191) into FieldDeclaration(2192) at 3", "Insert Modifier: public(2193) into MethodDeclaration(2208) at 0", "Insert SimpleName: TimedPullRequest(2194) into MethodDeclaration(2208) at 1", "Insert SingleVariableDeclaration(2200) into MethodDeclaration(2208) at 2", "Insert Block(2207) into MethodDeclaration(2208) at 3", "Insert MarkerAnnotation(2210) into MethodDeclaration(2220) at 0", "Insert Modifier: public(2211) into MethodDeclaration(2220) at 1", "Insert PrimitiveType: void(2212) into MethodDeclaration(2220) at 2", "Insert SimpleName: onSuccess(2213) into MethodDeclaration(2220) at 3", "Insert Block(2219) into MethodDeclaration(2220) at 4", "Insert InfixExpression: !=(435) into IfStatement(472) at 0", "Insert Block(471) into IfStatement(472) at 1", "Insert MethodInvocation(482) into ExpressionStatement(483) at 0", "Update TextElement: For a consumer whose prefetch value is set to zero this method will attempt to solicite(1251) to Request a remote peer send a Message to this client.", "Update TextElement: a new message dispatch from the broker.(1252) to timeout < 0 then it should remain open until a message is received.", "Insert TextElement: timeout = 0 then it returns a message or null if none available(1312) into TagElement(1315) at 2", "Insert TextElement: timeout > 0 then it should remain open for timeout amount of time.(1313) into TagElement(1315) at 3", "Insert TextElement: The timeout value when positive is given in milliseconds.(1314) into TagElement(1315) at 4", "Insert TextElement: the amount of time to tell the remote peer to keep this pull request valid.(1317) into TagElement: @param(1318) at 1", "Insert MethodInvocation(1333) into ExpressionStatement(1334) at 0", "Move InfixExpression: &&(1274) into IfStatement(1432) at 0", "Insert Block(1431) into IfStatement(1432) at 1", "Insert SimpleName: Override(2115) into MarkerAnnotation(2116) at 0", "Insert SimpleType: Throwable(2121) into SingleVariableDeclaration(2123) at 0", "Insert SimpleName: result(2122) into SingleVariableDeclaration(2123) at 1", "Insert VariableDeclarationStatement(2133) into Block(2161) at 0", "Insert ExpressionStatement(2139) into Block(2161) at 1", "Insert TryStatement(2160) into Block(2161) at 2", "Insert SimpleName: Override(2163) into MarkerAnnotation(2164) at 0", "Insert SimpleName: Override(2170) into MarkerAnnotation(2171) at 0", "Insert ReturnStatement(2176) into Block(2177) at 0", "Insert SimpleType: ScheduledFuture(2187) into ParameterizedType: ScheduledFuture<?>(2189) at 0", "Insert WildcardType: ?(2188) into ParameterizedType: ScheduledFuture<?>(2189) at 1", "Insert SimpleName: completionTask(2190) into VariableDeclarationFragment(2191) at 0", "Insert ParameterizedType: ScheduledFuture<?>(2198) into SingleVariableDeclaration(2200) at 0", "Insert SimpleName: completionTask(2199) into SingleVariableDeclaration(2200) at 1", "Insert ExpressionStatement(2206) into Block(2207) at 0", "Insert SimpleName: Override(2209) into MarkerAnnotation(2210) at 0", "Insert ExpressionStatement(2218) into Block(2219) at 0", "Insert SimpleName: pullRequest(433) into InfixExpression: !=(435) at 0", "Insert NullLiteral(434) into InfixExpression: !=(435) at 1", "Insert VariableDeclarationStatement(442) into Block(471) at 0", "Insert IfStatement(470) into Block(471) at 1", "Insert SimpleName: LOG(473) into MethodInvocation(482) at 0", "Insert SimpleName: trace(474) into MethodInvocation(482) at 1", "Insert StringLiteral: \"Consumer {} flow updated, remote credit = {}\"(475) into MethodInvocation(482) at 2", "Insert MethodInvocation(477) into MethodInvocation(482) at 3", "Insert MethodInvocation(481) into MethodInvocation(482) at 4", "Update SimpleName: s(595) to source", "Update SimpleName: s(576) to source", "Update SimpleName: s(569) to source", "Update SimpleName: s(602) to source", "Insert SimpleName: LOG(1327) into MethodInvocation(1333) at 0", "Insert SimpleName: trace(1328) into MethodInvocation(1333) at 1", "Insert StringLiteral: \"Pull called on consumer {} with timouet = {}\"(1329) into MethodInvocation(1333) at 2", "Insert MethodInvocation(1331) into MethodInvocation(1333) at 3", "Insert SimpleName: timeout(1332) into MethodInvocation(1333) at 4", "Insert IfStatement(1430) into Block(1431) at 0", "Insert SimpleName: Throwable(2120) into SimpleType: Throwable(2121) at 0", "Insert SimpleType: JmsInboundMessageDispatch(2125) into VariableDeclarationStatement(2133) at 0", "Insert VariableDeclarationFragment(2132) into VariableDeclarationStatement(2133) at 1", "Insert MethodInvocation(2138) into ExpressionStatement(2139) at 0", "Insert Block(2144) into TryStatement(2160) at 0", "Insert CatchClause(2159) into TryStatement(2160) at 1", "Insert BooleanLiteral: false(2175) into ReturnStatement(2176) at 0", "Insert SimpleName: ScheduledFuture(2186) into SimpleType: ScheduledFuture(2187) at 0", "Insert SimpleType: ScheduledFuture(2196) into ParameterizedType: ScheduledFuture<?>(2198) at 0", "Insert WildcardType: ?(2197) into ParameterizedType: ScheduledFuture<?>(2198) at 1", "Insert Assignment: =(2205) into ExpressionStatement(2206) at 0", "Insert MethodInvocation(2217) into ExpressionStatement(2218) at 0", "Insert SimpleType: Receiver(437) into VariableDeclarationStatement(442) at 0", "Insert VariableDeclarationFragment(441) into VariableDeclarationStatement(442) at 1", "Insert InfixExpression: <=(447) into IfStatement(470) at 0", "Insert Block(469) into IfStatement(470) at 1", "Insert SimpleName: getConsumerId(476) into MethodInvocation(477) at 0", "Insert MethodInvocation(479) into MethodInvocation(481) at 0", "Insert SimpleName: getRemoteCredit(480) into MethodInvocation(481) at 1", "Insert SimpleName: getConsumerId(1330) into MethodInvocation(1331) at 0", "Insert InfixExpression: <(1349) into IfStatement(1430) at 0", "Move Block(1281) into IfStatement(1430) at 1", "Insert IfStatement(1429) into IfStatement(1430) at 2", "Insert Block(1560) into IfStatement(1561) at 2", "Insert SimpleName: JmsInboundMessageDispatch(2124) into SimpleType: JmsInboundMessageDispatch(2125) at 0", "Insert SimpleName: pullDone(2126) into VariableDeclarationFragment(2132) at 0", "Insert ClassInstanceCreation(2131) into VariableDeclarationFragment(2132) at 1", "Insert SimpleName: pullDone(2134) into MethodInvocation(2138) at 0", "Insert SimpleName: setConsumerId(2135) into MethodInvocation(2138) at 1", "Insert MethodInvocation(2137) into MethodInvocation(2138) at 2", "Insert ExpressionStatement(2143) into Block(2144) at 0", "Insert SingleVariableDeclaration(2148) into CatchClause(2159) at 0", "Insert Block(2158) into CatchClause(2159) at 1", "Insert SimpleName: ScheduledFuture(2195) into SimpleType: ScheduledFuture(2196) at 0", "Insert FieldAccess(2203) into Assignment: =(2205) at 0", "Insert SimpleName: completionTask(2204) into Assignment: =(2205) at 1", "Insert SimpleName: completionTask(2214) into MethodInvocation(2217) at 0", "Insert SimpleName: cancel(2215) into MethodInvocation(2217) at 1", "Insert BooleanLiteral: false(2216) into MethodInvocation(2217) at 2", "Insert SimpleName: Receiver(436) into SimpleType: Receiver(437) at 0", "Insert SimpleName: receiver(438) into VariableDeclarationFragment(441) at 0", "Insert MethodInvocation(440) into VariableDeclarationFragment(441) at 1", "Insert MethodInvocation(445) into InfixExpression: <=(447) at 0", "Insert NumberLiteral: 0(446) into InfixExpression: <=(447) at 1", "Insert IfStatement(464) into Block(469) at 0", "Insert ExpressionStatement(468) into Block(469) at 1", "Insert SimpleName: getEndpoint(478) into MethodInvocation(479) at 0", "Insert SimpleName: timeout(1347) into InfixExpression: <(1349) at 0", "Insert NumberLiteral: 0(1348) into InfixExpression: <(1349) at 1", "Insert InfixExpression: ==(1359) into IfStatement(1429) at 0", "Insert Block(1372) into IfStatement(1429) at 1", "Insert IfStatement(1428) into IfStatement(1429) at 2", "Insert ExpressionStatement(1524) into Block(1560) at 0", "Insert IfStatement(1559) into Block(1560) at 1", "Insert SimpleType: JmsInboundMessageDispatch(2128) into ClassInstanceCreation(2131) at 0", "Insert MethodInvocation(2130) into ClassInstanceCreation(2131) at 1", "Insert SimpleName: getConsumerId(2136) into MethodInvocation(2137) at 0", "Insert MethodInvocation(2142) into ExpressionStatement(2143) at 0", "Insert SimpleType: Exception(2146) into SingleVariableDeclaration(2148) at 0", "Insert SimpleName: e(2147) into SingleVariableDeclaration(2148) at 1", "Insert ExpressionStatement(2157) into Block(2158) at 0", "Insert ThisExpression(2201) into FieldAccess(2203) at 0", "Insert SimpleName: completionTask(2202) into FieldAccess(2203) at 1", "Insert SimpleName: getEndpoint(439) into MethodInvocation(440) at 0", "Insert SimpleName: receiver(443) into MethodInvocation(445) at 0", "Insert SimpleName: getRemoteCredit(444) into MethodInvocation(445) at 1", "Insert InfixExpression: <=(452) into IfStatement(464) at 0", "Insert Block(458) into IfStatement(464) at 1", "Insert Block(463) into IfStatement(464) at 2", "Insert Assignment: =(467) into ExpressionStatement(468) at 0", "Insert SimpleName: timeout(1357) into InfixExpression: ==(1359) at 0", "Insert NumberLiteral: 0(1358) into InfixExpression: ==(1359) at 1", "Insert ExpressionStatement(1365) into Block(1372) at 0", "Insert ExpressionStatement(1371) into Block(1372) at 1", "Insert InfixExpression: >(1375) into IfStatement(1428) at 0", "Insert Block(1427) into IfStatement(1428) at 1", "Insert MethodInvocation(1523) into ExpressionStatement(1524) at 0", "Move InfixExpression: <=(1365) into IfStatement(1559) at 0", "Insert Block(1558) into IfStatement(1559) at 1", "Insert SimpleName: JmsInboundMessageDispatch(2127) into SimpleType: JmsInboundMessageDispatch(2128) at 0", "Insert SimpleName: getNextIncomingSequenceNumber(2129) into MethodInvocation(2130) at 0", "Insert SimpleName: deliver(2140) into MethodInvocation(2142) at 0", "Insert SimpleName: pullDone(2141) into MethodInvocation(2142) at 1", "Insert SimpleName: Exception(2145) into SimpleType: Exception(2146) at 0", "Insert MethodInvocation(2156) into ExpressionStatement(2157) at 0", "Insert MethodInvocation(450) into InfixExpression: <=(452) at 0", "Insert NumberLiteral: 0(451) into InfixExpression: <=(452) at 1", "Insert ExpressionStatement(457) into Block(458) at 0", "Insert ExpressionStatement(462) into Block(463) at 0", "Insert SimpleName: pullRequest(465) into Assignment: =(467) at 0", "Insert NullLiteral(466) into Assignment: =(467) at 1", "Insert Assignment: =(1364) into ExpressionStatement(1365) at 0", "Insert MethodInvocation(1370) into ExpressionStatement(1371) at 0", "Insert SimpleName: timeout(1373) into InfixExpression: >(1375) at 0", "Insert NumberLiteral: 0(1374) into InfixExpression: >(1375) at 1", "Insert VariableDeclarationStatement(1413) into Block(1427) at 0", "Insert ExpressionStatement(1419) into Block(1427) at 1", "Insert ExpressionStatement(1426) into Block(1427) at 2", "Insert IfStatement(1488) into Block(1506) at 1", "Insert SimpleName: LOG(1520) into MethodInvocation(1523) at 0", "Insert SimpleName: info(1521) into MethodInvocation(1523) at 1", "Insert StringLiteral: \"Incoming null delivery\"(1522) into MethodInvocation(1523) at 2", "Move IfStatement(1376) into Block(1558) at 0", "Insert IfStatement(1557) into Block(1558) at 1", "Insert MethodInvocation(2150) into MethodInvocation(2156) at 0", "Insert SimpleName: reportError(2151) into MethodInvocation(2156) at 1", "Insert MethodInvocation(2155) into MethodInvocation(2156) at 2", "Insert SimpleName: receiver(448) into MethodInvocation(450) at 0", "Insert SimpleName: getQueued(449) into MethodInvocation(450) at 1", "Insert MethodInvocation(456) into ExpressionStatement(457) at 0", "Insert MethodInvocation(461) into ExpressionStatement(462) at 0", "Insert SimpleName: pullRequest(1360) into Assignment: =(1364) at 0", "Insert ClassInstanceCreation(1363) into Assignment: =(1364) at 1", "Insert MethodInvocation(1367) into MethodInvocation(1370) at 0", "Insert SimpleName: drain(1368) into MethodInvocation(1370) at 1", "Insert NumberLiteral: 1(1369) into MethodInvocation(1370) at 2", "Insert Modifier: final(1376) into VariableDeclarationStatement(1413) at 0", "Insert ParameterizedType: ScheduledFuture<?>(1380) into VariableDeclarationStatement(1413) at 1", "Insert VariableDeclarationFragment(1412) into VariableDeclarationStatement(1413) at 2", "Insert MethodInvocation(1418) into ExpressionStatement(1419) at 0", "Insert Assignment: =(1425) into ExpressionStatement(1426) at 0", "Insert InfixExpression: !=(1478) into IfStatement(1488) at 0", "Insert Block(1487) into IfStatement(1488) at 1", "Move InfixExpression: !=(1359) into IfStatement(1543) at 0", "Insert InfixExpression: !=(1546) into IfStatement(1557) at 0", "Move Block(1377) into IfStatement(1557) at 1", "Insert SimpleName: getSession(2149) into MethodInvocation(2150) at 0", "Insert SimpleName: IOExceptionSupport(2152) into MethodInvocation(2155) at 0", "Insert SimpleName: create(2153) into MethodInvocation(2155) at 1", "Insert SimpleName: e(2154) into MethodInvocation(2155) at 2", "Insert SimpleName: pullRequest(453) into MethodInvocation(456) at 0", "Insert SimpleName: onFailure(454) into MethodInvocation(456) at 1", "Insert NullLiteral(455) into MethodInvocation(456) at 2", "Insert SimpleName: pullRequest(459) into MethodInvocation(461) at 0", "Insert SimpleName: onSuccess(460) into MethodInvocation(461) at 1", "Insert SimpleType: DrainingPullRequest(1362) into ClassInstanceCreation(1363) at 0", "Insert SimpleName: getEndpoint(1366) into MethodInvocation(1367) at 0", "Insert SimpleType: ScheduledFuture(1378) into ParameterizedType: ScheduledFuture<?>(1380) at 0", "Insert WildcardType: ?(1379) into ParameterizedType: ScheduledFuture<?>(1380) at 1", "Insert SimpleName: future(1381) into VariableDeclarationFragment(1412) at 0", "Insert MethodInvocation(1411) into VariableDeclarationFragment(1412) at 1", "Insert MethodInvocation(1415) into MethodInvocation(1418) at 0", "Insert SimpleName: flow(1416) into MethodInvocation(1418) at 1", "Insert NumberLiteral: 1(1417) into MethodInvocation(1418) at 2", "Insert SimpleName: pullRequest(1420) into Assignment: =(1425) at 0", "Insert ClassInstanceCreation(1424) into Assignment: =(1425) at 1", "Insert SimpleName: pullRequest(1476) into InfixExpression: !=(1478) at 0", "Insert NullLiteral(1477) into InfixExpression: !=(1478) at 1", "Insert ExpressionStatement(1482) into Block(1487) at 0", "Insert ExpressionStatement(1486) into Block(1487) at 1", "Insert SimpleName: pullRequest(1544) into InfixExpression: !=(1546) at 0", "Insert NullLiteral(1545) into InfixExpression: !=(1546) at 1", "Insert ExpressionStatement(1551) into Block(1556) at 0", "Insert ExpressionStatement(1555) into Block(1556) at 1", "Insert SimpleName: DrainingPullRequest(1361) into SimpleType: DrainingPullRequest(1362) at 0", "Insert SimpleName: ScheduledFuture(1377) into SimpleType: ScheduledFuture(1378) at 0", "Insert MethodInvocation(1383) into MethodInvocation(1411) at 0", "Insert SimpleName: schedule(1384) into MethodInvocation(1411) at 1", "Insert ClassInstanceCreation(1409) into MethodInvocation(1411) at 2", "Insert SimpleName: timeout(1410) into MethodInvocation(1411) at 3", "Insert SimpleName: getEndpoint(1414) into MethodInvocation(1415) at 0", "Insert SimpleType: TimedPullRequest(1422) into ClassInstanceCreation(1424) at 0", "Insert SimpleName: future(1423) into ClassInstanceCreation(1424) at 1", "Insert MethodInvocation(1481) into ExpressionStatement(1482) at 0", "Insert Assignment: =(1485) into ExpressionStatement(1486) at 0", "Insert MethodInvocation(1550) into ExpressionStatement(1551) at 0", "Insert Assignment: =(1554) into ExpressionStatement(1555) at 0", "Insert SimpleName: getSession(1382) into MethodInvocation(1383) at 0", "Insert SimpleType: Runnable(1386) into ClassInstanceCreation(1409) at 0", "Insert AnonymousClassDeclaration(1408) into ClassInstanceCreation(1409) at 1", "Insert SimpleName: TimedPullRequest(1421) into SimpleType: TimedPullRequest(1422) at 0", "Insert SimpleName: pullRequest(1479) into MethodInvocation(1481) at 0", "Insert SimpleName: onSuccess(1480) into MethodInvocation(1481) at 1", "Insert SimpleName: pullRequest(1483) into Assignment: =(1485) at 0", "Insert NullLiteral(1484) into Assignment: =(1485) at 1", "Insert SimpleName: pullRequest(1547) into MethodInvocation(1550) at 0", "Insert SimpleName: onFailure(1548) into MethodInvocation(1550) at 1", "Insert NullLiteral(1549) into MethodInvocation(1550) at 2", "Insert SimpleName: pullRequest(1552) into Assignment: =(1554) at 0", "Insert NullLiteral(1553) into Assignment: =(1554) at 1", "Insert SimpleName: Runnable(1385) into SimpleType: Runnable(1386) at 0", "Insert MethodDeclaration(1407) into AnonymousClassDeclaration(1408) at 0", "Insert MarkerAnnotation(1388) into MethodDeclaration(1407) at 0", "Insert Modifier: public(1389) into MethodDeclaration(1407) at 1", "Insert PrimitiveType: void(1390) into MethodDeclaration(1407) at 2", "Insert SimpleName: run(1391) into MethodDeclaration(1407) at 3", "Move Block(1283) into MethodDeclaration(1407) at 4", "Insert SimpleName: Override(1387) into MarkerAnnotation(1388) at 0", "Insert InfixExpression: !=(1397) into IfStatement(1405) at 0", "Insert Block(1404) into IfStatement(1405) at 1", "Insert MethodInvocation(1395) into InfixExpression: !=(1397) at 0", "Insert NumberLiteral: 0(1396) into InfixExpression: !=(1397) at 1", "Insert ExpressionStatement(1403) into Block(1404) at 0", "Insert MethodInvocation(1393) into MethodInvocation(1395) at 0", "Insert SimpleName: getRemoteCredit(1394) into MethodInvocation(1395) at 1", "Insert MethodInvocation(1402) into ExpressionStatement(1403) at 0", "Insert SimpleName: getEndpoint(1392) into MethodInvocation(1393) at 0", "Insert MethodInvocation(1399) into MethodInvocation(1402) at 0", "Insert SimpleName: drain(1400) into MethodInvocation(1402) at 1", "Insert NumberLiteral: 0(1401) into MethodInvocation(1402) at 2", "Insert SimpleName: getEndpoint(1398) into MethodInvocation(1399) at 0", "Delete Block(429)", "Delete InfixExpression: &&(1366)"]}}, {"AmqpFixedProducer_cluster": {"actions": [{"root": "UPDATE from t to target", "operations": ["UPD SimpleName: t from t to target", "UPD SimpleName: t from t to target", "UPD SimpleName: t from t to target", "UPD SimpleName: t from t to target"]}]}}, {"AmqpFixedProducer_diff": {"operations": ["Update SimpleName: t(1021) to target", "Update SimpleName: t(1028) to target", "Update SimpleName: t(1047) to target", "Update SimpleName: t(1054) to target"]}}, {"AmqpProvider_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 97", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleType: ScheduledExecutorService to MethodDeclaration at 0", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS SimpleName: serializer to FieldAccess at 1", "INS Block to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 97", "INS SimpleName: getScheduler to MethodDeclaration at 1"]}]}}, {"AmqpProvider_diff": {"operations": ["Insert MethodDeclaration(3588) into TypeDeclaration: class(3778) at 97", "Insert SimpleType: ScheduledExecutorService(3581) into MethodDeclaration(3588) at 0", "Insert SimpleName: getScheduler(3582) into MethodDeclaration(3588) at 1", "Insert Block(3587) into MethodDeclaration(3588) at 2", "Insert SimpleName: ScheduledExecutorService(3580) into SimpleType: ScheduledExecutorService(3581) at 0", "Insert ReturnStatement(3586) into Block(3587) at 0", "Insert FieldAccess(3585) into ReturnStatement(3586) at 0", "Insert ThisExpression(3583) into FieldAccess(3585) at 0", "Insert SimpleName: serializer(3584) into FieldAccess(3585) at 1"]}}, {"AmqpSession_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.util.concurrent.ScheduledFuture to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS SimpleName: task to SingleVariableDeclaration at 2", "INS SimpleName: getProvider to MethodInvocation at 0", "INS SimpleType: Runnable to SingleVariableDeclaration at 1", "INS SimpleName: schedule to MethodDeclaration at 3", "INS ReturnStatement to Block at 1", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 4", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: delay to TagElement: @param at 0", "INS TextElement:  a ScheduledFuture instance that can be used to cancel the task. to TagElement: @return at 0", "INS SimpleName: task to TagElement: @param at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ScheduledFuture to ParameterizedType: ScheduledFuture<?> at 0", "INS Block to IfStatement at 1", "INS TextElement: Allows a session resource to schedule a task for future execution. to TagElement at 0", "INS SimpleName: delay to MethodInvocation at 3", "INS TextElement: The delay in milliseconds to schedule the given task for execution. to TagElement: @param at 1", "INS IfStatement to Block at 0", "INS WildcardType: ? to ParameterizedType: ScheduledFuture<?> at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: delay to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS StringLiteral: \"Resource attempted to schedule a null task.\" to MethodInvocation at 2", "INS ReturnStatement to Block at 1", "INS SimpleName: task to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @param to Javadoc at 2", "INS ParameterizedType: ScheduledFuture<?> to MethodDeclaration at 2", "INS SimpleName: getScheduler to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @return to Javadoc at 3", "INS TextElement: The Runnable task to be executed after the given delay. to TagElement: @param at 1", "INS SimpleName: ScheduledFuture to SimpleType: ScheduledFuture at 0", "INS NullLiteral to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: task to InfixExpression: == at 0", "INS SimpleName: schedule to MethodInvocation at 1"]}]}}, {"AmqpSession_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(866) at 3", "Insert ImportDeclaration(23) into CompilationUnit(866) at 4", "Insert QualifiedName: java.util.concurrent.ScheduledFuture(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: java.util.concurrent.TimeUnit(22) into ImportDeclaration(23) at 0", "Insert MethodDeclaration(687) into TypeDeclaration: class(865) at 23", "Insert Javadoc(649) into MethodDeclaration(687) at 0", "Insert Modifier: public(650) into MethodDeclaration(687) at 1", "Insert ParameterizedType: ScheduledFuture<?>(654) into MethodDeclaration(687) at 2", "Insert SimpleName: schedule(655) into MethodDeclaration(687) at 3", "Insert SingleVariableDeclaration(660) into MethodDeclaration(687) at 4", "Insert SingleVariableDeclaration(663) into MethodDeclaration(687) at 5", "Insert Block(686) into MethodDeclaration(687) at 6", "Insert TagElement(640) into Javadoc(649) at 0", "Insert TagElement: @param(643) into Javadoc(649) at 1", "Insert TagElement: @param(646) into Javadoc(649) at 2", "Insert TagElement: @return(648) into Javadoc(649) at 3", "Insert SimpleType: ScheduledFuture(652) into ParameterizedType: ScheduledFuture<?>(654) at 0", "Insert WildcardType: ?(653) into ParameterizedType: ScheduledFuture<?>(654) at 1", "Insert Modifier: final(656) into SingleVariableDeclaration(660) at 0", "Insert SimpleType: Runnable(658) into SingleVariableDeclaration(660) at 1", "Insert SimpleName: task(659) into SingleVariableDeclaration(660) at 2", "Insert PrimitiveType: long(661) into SingleVariableDeclaration(663) at 0", "Insert SimpleName: delay(662) into SingleVariableDeclaration(663) at 1", "Insert IfStatement(675) into Block(686) at 0", "Insert ReturnStatement(685) into Block(686) at 1", "Insert TextElement: Allows a session resource to schedule a task for future execution.(639) into TagElement(640) at 0", "Insert SimpleName: task(641) into TagElement: @param(643) at 0", "Insert TextElement: The Runnable task to be executed after the given delay.(642) into TagElement: @param(643) at 1", "Insert SimpleName: delay(644) into TagElement: @param(646) at 0", "Insert TextElement: The delay in milliseconds to schedule the given task for execution.(645) into TagElement: @param(646) at 1", "Insert TextElement:  a ScheduledFuture instance that can be used to cancel the task.(647) into TagElement: @return(648) at 0", "Insert SimpleName: ScheduledFuture(651) into SimpleType: ScheduledFuture(652) at 0", "Insert SimpleName: Runnable(657) into SimpleType: Runnable(658) at 0", "Insert InfixExpression: ==(666) into IfStatement(675) at 0", "Insert Block(674) into IfStatement(675) at 1", "Insert MethodInvocation(684) into ReturnStatement(685) at 0", "Insert SimpleName: task(664) into InfixExpression: ==(666) at 0", "Insert NullLiteral(665) into InfixExpression: ==(666) at 1", "Insert ExpressionStatement(671) into Block(674) at 0", "Insert ReturnStatement(673) into Block(674) at 1", "Insert MethodInvocation(679) into MethodInvocation(684) at 0", "Insert SimpleName: schedule(680) into MethodInvocation(684) at 1", "Insert SimpleName: task(681) into MethodInvocation(684) at 2", "Insert SimpleName: delay(682) into MethodInvocation(684) at 3", "Insert QualifiedName: TimeUnit.MILLISECONDS(683) into MethodInvocation(684) at 4", "Insert MethodInvocation(670) into ExpressionStatement(671) at 0", "Insert NullLiteral(672) into ReturnStatement(673) at 0", "Insert MethodInvocation(677) into MethodInvocation(679) at 0", "Insert SimpleName: getScheduler(678) into MethodInvocation(679) at 1", "Insert SimpleName: LOG(667) into MethodInvocation(670) at 0", "Insert SimpleName: trace(668) into MethodInvocation(670) at 1", "Insert StringLiteral: \"Resource attempted to schedule a null task.\"(669) into MethodInvocation(670) at 2", "Insert SimpleName: getProvider(676) into MethodInvocation(677) at 0"]}}, {"AmqpTemporaryDestination_cluster": {"actions": [{"root": "UPDATE from t to target", "operations": ["UPD SimpleName: t from t to target", "UPD SimpleName: t from t to target"]}]}}, {"AmqpTemporaryDestination_diff": {"operations": ["Update SimpleName: t(367) to target", "Update SimpleName: t(374) to target"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}