{"application": "apache-calcite", "csha": "c3bf95bb539ae78ffba1db82791b660118ca167f", "files": [{"Schemas_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfigImpl to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<OptiqConnectionProperty,String> at 0", "INS SimpleName: config to CastExpression at 1", "INS ParameterizedType: Map.Entry<OptiqConnectionProperty,String> to SingleVariableDeclaration at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: OptiqConnectionConfigImpl to CastExpression at 0", "INS Block to MethodDeclaration at 6", "INS EnhancedForStatement to Block at 0", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS SimpleName: mutate to MethodDeclaration at 3", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: OptiqConnectionConfig to MethodDeclaration at 2", "INS SimpleName: config to ReturnStatement at 0", "INS ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> to SingleVariableDeclaration at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: config to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleType: OptiqConnectionConfig to SingleVariableDeclaration at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: propValues to MethodInvocation at 0", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: OptiqConnectionProperty to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 1", "INS SimpleType: String to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: propValues to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: OptiqConnectionConfigImpl to SimpleType: OptiqConnectionConfigImpl at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: OptiqConnectionProperty to ParameterizedType: Map.Entry<OptiqConnectionProperty,String> at 1", "INS SimpleName: set to MethodInvocation at 1", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map.Entry<OptiqConnectionProperty,String> at 2", "INS SimpleName: e to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS ParenthesizedExpression to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: getSubSchema to MethodInvocation at 1", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: OptiqSchema to SingleVariableDeclaration at 0", "INS SimpleName: names to EnhancedForStatement at 1", "INS SimpleType: OptiqSchema to MethodDeclaration at 2", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: string to SingleVariableDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: schema to Assignment: = at 0", "INS SimpleName: subSchema to MethodDeclaration at 3", "INS SimpleName: schema to ReturnStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS EnhancedForStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to EnhancedForStatement at 2", "INS SimpleName: names to SingleVariableDeclaration at 1", "INS SimpleName: string to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SimpleType: OptiqConnectionProperty to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 1", "INS SimpleName: map to SingleVariableDeclaration at 2", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS SimpleType: String to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 2", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: context to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 10", "INS SimpleName: map to MethodInvocation at 4", "INS QualifiedName: OptiqPrepare.Dummy to MethodInvocation at 0", "INS SimpleName: context to MethodInvocation at 2", "INS QualifiedName: OptiqPrepare.Context to SimpleType: OptiqPrepare.Context at 0", "INS SimpleType: OptiqPrepare.Context to VariableDeclarationStatement at 1", "INS Block to TryStatement at 0", "INS SimpleName: prepare to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: push to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pop to MethodInvocation at 1", "INS TryStatement to Block at 3", "INS SimpleName: context to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: prepareSql to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: OptiqPrepare.Dummy to MethodInvocation at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 0", "INS ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> to SingleVariableDeclaration at 1", "INS SimpleType: OptiqConnectionProperty to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 1", "INS SimpleType: String to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 2", "INS SimpleName: propValues to SingleVariableDeclaration at 2", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: OptiqConnectionConfig to VariableDeclarationStatement at 1", "INS SimpleName: propValues to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: mutate to MethodInvocation at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS SimpleName: config to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS SimpleName: mutate to MethodInvocation at 0", "INS SimpleType: OptiqConnectionConfig to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: config to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: propValues to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS MethodInvocation to MethodInvocation at 4", "INS SimpleType: String to MethodInvocation at 2", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS SimpleType: OptiqConnectionProperty to MethodInvocation at 1", "INS SimpleName: of to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ImmutableMap to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS SimpleType: OptiqConnectionProperty to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to MethodInvocation at 2", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schema to MethodInvocation at 2", "MOV SimpleName: makeContext to MethodInvocation at 0", "MOV SimpleName: schemaPath to MethodInvocation at 3", "MOV SimpleName: connection to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sql to MethodInvocation at 3", "MOV PrefixExpression: - to MethodInvocation at 6", "MOV NullLiteral to MethodInvocation at 4", "MOV TypeLiteral to MethodInvocation at 5"]}, {"root": "INS SimpleName: config to MethodInvocation at 1", "operations": ["INS SimpleName: config to MethodInvocation at 1"]}, {"root": "INS SimpleName: config to MethodInvocation at 1", "operations": ["INS SimpleName: config to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: prepare", "DEL SimpleName: prepareSql", "DEL Block"]}]}}, {"Schemas_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(1606) at 5", "Insert ImportDeclaration(13) into CompilationUnit(1606) at 6", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfigImpl(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(12) into ImportDeclaration(13) at 0", "Insert MethodDeclaration(1119) into TypeDeclaration: class(1605) at 21", "Insert MethodDeclaration(1503) into TypeDeclaration: class(1605) at 29", "Insert SingleVariableDeclaration(919) into MethodDeclaration(969) at 9", "Insert Block(968) into MethodDeclaration(969) at 10", "Update Modifier: private(921) to public", "Insert SingleVariableDeclaration(1002) into MethodDeclaration(1067) at 7", "Insert Modifier: private(1068) into MethodDeclaration(1119) at 0", "Insert Modifier: static(1069) into MethodDeclaration(1119) at 1", "Insert SimpleType: OptiqConnectionConfig(1071) into MethodDeclaration(1119) at 2", "Insert SimpleName: mutate(1072) into MethodDeclaration(1119) at 3", "Insert SingleVariableDeclaration(1076) into MethodDeclaration(1119) at 4", "Insert SingleVariableDeclaration(1085) into MethodDeclaration(1119) at 5", "Insert Block(1118) into MethodDeclaration(1119) at 6", "Insert Modifier: public(1469) into MethodDeclaration(1503) at 0", "Insert Modifier: static(1470) into MethodDeclaration(1503) at 1", "Insert SimpleType: OptiqSchema(1472) into MethodDeclaration(1503) at 2", "Insert SimpleName: subSchema(1473) into MethodDeclaration(1503) at 3", "Insert SingleVariableDeclaration(1477) into MethodDeclaration(1503) at 4", "Insert SingleVariableDeclaration(1484) into MethodDeclaration(1503) at 5", "Insert Block(1502) into MethodDeclaration(1503) at 6", "Insert Modifier: final(910) into SingleVariableDeclaration(919) at 0", "Insert ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(917) into SingleVariableDeclaration(919) at 1", "Insert SimpleName: map(918) into SingleVariableDeclaration(919) at 2", "Move VariableDeclarationStatement(900) into Block(968) at 0", "Insert VariableDeclarationStatement(940) into Block(968) at 1", "Insert ExpressionStatement(945) into Block(968) at 2", "Insert TryStatement(967) into Block(968) at 3", "Insert Modifier: final(993) into SingleVariableDeclaration(1002) at 0", "Insert ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1000) into SingleVariableDeclaration(1002) at 1", "Insert SimpleName: propValues(1001) into SingleVariableDeclaration(1002) at 2", "Insert SimpleName: OptiqConnectionConfig(1070) into SimpleType: OptiqConnectionConfig(1071) at 0", "Insert SimpleType: OptiqConnectionConfig(1074) into SingleVariableDeclaration(1076) at 0", "Insert SimpleName: config(1075) into SingleVariableDeclaration(1076) at 1", "Insert ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1083) into SingleVariableDeclaration(1085) at 0", "Insert SimpleName: propValues(1084) into SingleVariableDeclaration(1085) at 1", "Insert EnhancedForStatement(1115) into Block(1118) at 0", "Insert ReturnStatement(1117) into Block(1118) at 1", "Insert SimpleName: OptiqSchema(1471) into SimpleType: OptiqSchema(1472) at 0", "Insert SimpleType: OptiqSchema(1475) into SingleVariableDeclaration(1477) at 0", "Insert SimpleName: schema(1476) into SingleVariableDeclaration(1477) at 1", "Insert ParameterizedType: List<String>(1482) into SingleVariableDeclaration(1484) at 0", "Insert SimpleName: names(1483) into SingleVariableDeclaration(1484) at 1", "Insert EnhancedForStatement(1499) into Block(1502) at 0", "Insert ReturnStatement(1501) into Block(1502) at 1", "Insert SimpleType: ImmutableMap(912) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(917) at 0", "Insert SimpleType: OptiqConnectionProperty(914) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(917) at 1", "Insert SimpleType: String(916) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(917) at 2", "Insert Modifier: final(929) into VariableDeclarationStatement(940) at 0", "Insert SimpleType: OptiqPrepare.Context(931) into VariableDeclarationStatement(940) at 1", "Insert VariableDeclarationFragment(939) into VariableDeclarationStatement(940) at 2", "Insert MethodInvocation(944) into ExpressionStatement(945) at 0", "Insert Block(960) into TryStatement(967) at 0", "Insert Block(966) into TryStatement(967) at 1", "Insert SimpleType: ImmutableMap(995) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1000) at 0", "Insert SimpleType: OptiqConnectionProperty(997) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1000) at 1", "Insert SimpleType: String(999) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1000) at 2", "Insert SimpleName: OptiqConnectionConfig(1073) into SimpleType: OptiqConnectionConfig(1074) at 0", "Insert SimpleType: ImmutableMap(1078) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1083) at 0", "Insert SimpleType: OptiqConnectionProperty(1080) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1083) at 1", "Insert SimpleType: String(1082) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(1083) at 2", "Insert SingleVariableDeclaration(1094) into EnhancedForStatement(1115) at 0", "Insert MethodInvocation(1097) into EnhancedForStatement(1115) at 1", "Insert Block(1114) into EnhancedForStatement(1115) at 2", "Insert SimpleName: config(1116) into ReturnStatement(1117) at 0", "Insert SimpleName: OptiqSchema(1474) into SimpleType: OptiqSchema(1475) at 0", "Insert SimpleType: List(1479) into ParameterizedType: List<String>(1482) at 0", "Insert SimpleType: String(1481) into ParameterizedType: List<String>(1482) at 1", "Insert SingleVariableDeclaration(1488) into EnhancedForStatement(1499) at 0", "Insert SimpleName: names(1489) into EnhancedForStatement(1499) at 1", "Insert Block(1498) into EnhancedForStatement(1499) at 2", "Insert SimpleName: schema(1500) into ReturnStatement(1501) at 0", "Insert SimpleName: ImmutableMap(911) into SimpleType: ImmutableMap(912) at 0", "Insert SimpleName: OptiqConnectionProperty(913) into SimpleType: OptiqConnectionProperty(914) at 0", "Insert SimpleName: String(915) into SimpleType: String(916) at 0", "Insert QualifiedName: OptiqPrepare.Context(930) into SimpleType: OptiqPrepare.Context(931) at 0", "Insert SimpleName: context(932) into VariableDeclarationFragment(939) at 0", "Insert MethodInvocation(938) into VariableDeclarationFragment(939) at 1", "Insert QualifiedName: OptiqPrepare.Dummy(941) into MethodInvocation(944) at 0", "Insert SimpleName: push(942) into MethodInvocation(944) at 1", "Insert SimpleName: context(943) into MethodInvocation(944) at 2", "Insert ReturnStatement(959) into Block(960) at 0", "Insert ExpressionStatement(965) into Block(966) at 0", "Insert SimpleName: ImmutableMap(994) into SimpleType: ImmutableMap(995) at 0", "Insert SimpleName: OptiqConnectionProperty(996) into SimpleType: OptiqConnectionProperty(997) at 0", "Insert SimpleName: String(998) into SimpleType: String(999) at 0", "Insert VariableDeclarationStatement(1026) into Block(1039) at 1", "Insert VariableDeclarationStatement(1051) into Block(1064) at 0", "Insert SimpleName: ImmutableMap(1077) into SimpleType: ImmutableMap(1078) at 0", "Insert SimpleName: OptiqConnectionProperty(1079) into SimpleType: OptiqConnectionProperty(1080) at 0", "Insert SimpleName: String(1081) into SimpleType: String(1082) at 0", "Insert ParameterizedType: Map.Entry<OptiqConnectionProperty,String>(1092) into SingleVariableDeclaration(1094) at 0", "Insert SimpleName: e(1093) into SingleVariableDeclaration(1094) at 1", "Insert SimpleName: propValues(1095) into MethodInvocation(1097) at 0", "Insert SimpleName: entrySet(1096) into MethodInvocation(1097) at 1", "Insert ExpressionStatement(1113) into Block(1114) at 0", "Insert SimpleName: List(1478) into SimpleType: List(1479) at 0", "Insert SimpleName: String(1480) into SimpleType: String(1481) at 0", "Insert SimpleType: String(1486) into SingleVariableDeclaration(1488) at 0", "Insert SimpleName: string(1487) into SingleVariableDeclaration(1488) at 1", "Insert ExpressionStatement(1497) into Block(1498) at 0", "Insert MethodInvocation(771) into MethodInvocation(772) at 4", "Insert MethodInvocation(851) into MethodInvocation(852) at 4", "Move SimpleName: makeContext(903) into MethodInvocation(938) at 0", "Move SimpleName: connection(904) into MethodInvocation(938) at 1", "Move SimpleName: schema(905) into MethodInvocation(938) at 2", "Move SimpleName: schemaPath(906) into MethodInvocation(938) at 3", "Insert SimpleName: map(937) into MethodInvocation(938) at 4", "Insert MethodInvocation(958) into ReturnStatement(959) at 0", "Insert MethodInvocation(964) into ExpressionStatement(965) at 0", "Insert Modifier: final(1015) into VariableDeclarationStatement(1026) at 0", "Insert SimpleType: OptiqConnectionConfig(1017) into VariableDeclarationStatement(1026) at 1", "Insert VariableDeclarationFragment(1025) into VariableDeclarationStatement(1026) at 2", "Insert Modifier: final(1040) into VariableDeclarationStatement(1051) at 0", "Insert SimpleType: OptiqConnectionConfig(1042) into VariableDeclarationStatement(1051) at 1", "Insert VariableDeclarationFragment(1050) into VariableDeclarationStatement(1051) at 2", "Insert SimpleType: Map.Entry(1087) into ParameterizedType: Map.Entry<OptiqConnectionProperty,String>(1092) at 0", "Insert SimpleType: OptiqConnectionProperty(1089) into ParameterizedType: Map.Entry<OptiqConnectionProperty,String>(1092) at 1", "Insert SimpleType: String(1091) into ParameterizedType: Map.Entry<OptiqConnectionProperty,String>(1092) at 2", "Insert Assignment: =(1112) into ExpressionStatement(1113) at 0", "Insert SimpleName: String(1485) into SimpleType: String(1486) at 0", "Insert Assignment: =(1496) into ExpressionStatement(1497) at 0", "Insert SimpleName: ImmutableMap(765) into MethodInvocation(771) at 0", "Insert SimpleType: OptiqConnectionProperty(767) into MethodInvocation(771) at 1", "Insert SimpleType: String(769) into MethodInvocation(771) at 2", "Insert SimpleName: of(770) into MethodInvocation(771) at 3", "Insert SimpleName: ImmutableMap(845) into MethodInvocation(851) at 0", "Insert SimpleType: OptiqConnectionProperty(847) into MethodInvocation(851) at 1", "Insert SimpleType: String(849) into MethodInvocation(851) at 2", "Insert SimpleName: of(850) into MethodInvocation(851) at 3", "Insert SimpleName: prepare(946) into MethodInvocation(958) at 0", "Insert SimpleName: prepareSql(947) into MethodInvocation(958) at 1", "Insert SimpleName: context(948) into MethodInvocation(958) at 2", "Move SimpleName: sql(908) into MethodInvocation(958) at 3", "Move NullLiteral(909) into MethodInvocation(958) at 4", "Move TypeLiteral(914) into MethodInvocation(958) at 5", "Move PrefixExpression: -(916) into MethodInvocation(958) at 6", "Insert QualifiedName: OptiqPrepare.Dummy(961) into MethodInvocation(964) at 0", "Insert SimpleName: pop(962) into MethodInvocation(964) at 1", "Insert SimpleName: context(963) into MethodInvocation(964) at 2", "Insert SimpleName: OptiqConnectionConfig(1016) into SimpleType: OptiqConnectionConfig(1017) at 0", "Insert SimpleName: config(1018) into VariableDeclarationFragment(1025) at 0", "Insert MethodInvocation(1024) into VariableDeclarationFragment(1025) at 1", "Insert SimpleName: config(1028) into MethodInvocation(1037) at 1", "Insert SimpleName: OptiqConnectionConfig(1041) into SimpleType: OptiqConnectionConfig(1042) at 0", "Insert SimpleName: config(1043) into VariableDeclarationFragment(1050) at 0", "Insert MethodInvocation(1049) into VariableDeclarationFragment(1050) at 1", "Insert SimpleName: config(1053) into MethodInvocation(1062) at 1", "Insert QualifiedName: Map.Entry(1086) into SimpleType: Map.Entry(1087) at 0", "Insert SimpleName: OptiqConnectionProperty(1088) into SimpleType: OptiqConnectionProperty(1089) at 0", "Insert SimpleName: String(1090) into SimpleType: String(1091) at 0", "Insert SimpleName: config(1098) into Assignment: =(1112) at 0", "Insert MethodInvocation(1111) into Assignment: =(1112) at 1", "Insert SimpleName: schema(1490) into Assignment: =(1496) at 0", "Insert MethodInvocation(1495) into Assignment: =(1496) at 1", "Insert SimpleName: OptiqConnectionProperty(766) into SimpleType: OptiqConnectionProperty(767) at 0", "Insert SimpleName: String(768) into SimpleType: String(769) at 0", "Insert SimpleName: OptiqConnectionProperty(846) into SimpleType: OptiqConnectionProperty(847) at 0", "Insert SimpleName: String(848) into SimpleType: String(849) at 0", "Insert SimpleName: mutate(1019) into MethodInvocation(1024) at 0", "Move MethodInvocation(959) into MethodInvocation(1024) at 1", "Insert SimpleName: propValues(1023) into MethodInvocation(1024) at 2", "Insert SimpleName: mutate(1044) into MethodInvocation(1049) at 0", "Move MethodInvocation(974) into MethodInvocation(1049) at 1", "Insert SimpleName: propValues(1048) into MethodInvocation(1049) at 2", "Insert ParenthesizedExpression(1103) into MethodInvocation(1111) at 0", "Insert SimpleName: set(1104) into MethodInvocation(1111) at 1", "Insert MethodInvocation(1107) into MethodInvocation(1111) at 2", "Insert MethodInvocation(1110) into MethodInvocation(1111) at 3", "Insert SimpleName: schema(1491) into MethodInvocation(1495) at 0", "Insert SimpleName: getSubSchema(1492) into MethodInvocation(1495) at 1", "Insert SimpleName: string(1493) into MethodInvocation(1495) at 2", "Insert BooleanLiteral: false(1494) into MethodInvocation(1495) at 3", "Insert CastExpression(1102) into ParenthesizedExpression(1103) at 0", "Insert SimpleName: e(1105) into MethodInvocation(1107) at 0", "Insert SimpleName: getKey(1106) into MethodInvocation(1107) at 1", "Insert SimpleName: e(1108) into MethodInvocation(1110) at 0", "Insert SimpleName: getValue(1109) into MethodInvocation(1110) at 1", "Insert SimpleType: OptiqConnectionConfigImpl(1100) into CastExpression(1102) at 0", "Insert SimpleName: config(1101) into CastExpression(1102) at 1", "Insert SimpleName: OptiqConnectionConfigImpl(1099) into SimpleType: OptiqConnectionConfigImpl(1100) at 0", "Delete SimpleName: prepare(901)", "Delete SimpleName: prepareSql(902)", "Delete MethodInvocation(907)", "Delete MethodInvocation(917)", "Delete ReturnStatement(918)", "Delete Block(919)"]}}, {"AggregateCall_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: aggregation to ClassInstanceCreation at 1", "INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS SimpleType: AggregateCall to ClassInstanceCreation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS TextElement:  AggregateCall that suits new inputs and GROUP BY columns to TagElement: @return at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: copy to MethodDeclaration at 3", "INS SimpleName: type to ClassInstanceCreation at 4", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: name to ClassInstanceCreation at 5", "INS SimpleName: args to TagElement: @param at 0", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: List<Integer> to SingleVariableDeclaration at 0", "INS TextElement: Creates an equivalent AggregateCall with new argument ordinals. to TagElement at 0", "INS SimpleName: distinct to ClassInstanceCreation at 2", "INS SimpleName: args to ClassInstanceCreation at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: AggregateCall to MethodDeclaration at 2", "INS TextElement:  Arguments to TagElement: @param at 1"]}]}}, {"AggregateCall_diff": {"operations": ["Insert MethodDeclaration(458) into TypeDeclaration: class(560) at 19", "Insert Javadoc(436) into MethodDeclaration(458) at 0", "Insert Modifier: public(437) into MethodDeclaration(458) at 1", "Insert SimpleType: AggregateCall(439) into MethodDeclaration(458) at 2", "Insert SimpleName: copy(440) into MethodDeclaration(458) at 3", "Insert SingleVariableDeclaration(447) into MethodDeclaration(458) at 4", "Insert Block(457) into MethodDeclaration(458) at 5", "Insert TagElement(430) into Javadoc(436) at 0", "Insert TagElement: @param(433) into Javadoc(436) at 1", "Insert TagElement: @return(435) into Javadoc(436) at 2", "Insert SimpleName: AggregateCall(438) into SimpleType: AggregateCall(439) at 0", "Insert ParameterizedType: List<Integer>(445) into SingleVariableDeclaration(447) at 0", "Insert SimpleName: args(446) into SingleVariableDeclaration(447) at 1", "Insert ReturnStatement(456) into Block(457) at 0", "Insert TextElement: Creates an equivalent AggregateCall with new argument ordinals.(429) into TagElement(430) at 0", "Insert SimpleName: args(431) into TagElement: @param(433) at 0", "Insert TextElement:  Arguments(432) into TagElement: @param(433) at 1", "Insert TextElement:  AggregateCall that suits new inputs and GROUP BY columns(434) into TagElement: @return(435) at 0", "Insert SimpleType: List(442) into ParameterizedType: List<Integer>(445) at 0", "Insert SimpleType: Integer(444) into ParameterizedType: List<Integer>(445) at 1", "Insert ClassInstanceCreation(455) into ReturnStatement(456) at 0", "Insert SimpleName: List(441) into SimpleType: List(442) at 0", "Insert SimpleName: Integer(443) into SimpleType: Integer(444) at 0", "Insert SimpleType: AggregateCall(449) into ClassInstanceCreation(455) at 0", "Insert SimpleName: aggregation(450) into ClassInstanceCreation(455) at 1", "Insert SimpleName: distinct(451) into ClassInstanceCreation(455) at 2", "Insert SimpleName: args(452) into ClassInstanceCreation(455) at 3", "Insert SimpleName: type(453) into ClassInstanceCreation(455) at 4", "Insert SimpleName: name(454) into ClassInstanceCreation(455) at 5", "Insert SimpleName: AggregateCall(448) into SimpleType: AggregateCall(449) at 0"]}}, {"AbstractRelOptPlanner_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 27", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: RelOptMaterialization to SimpleType: RelOptMaterialization at 0", "INS SimpleName: materialization to SingleVariableDeclaration at 1", "INS SimpleName: addMaterialization to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: RelOptMaterialization to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: addLattice to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: lattice to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS SimpleType: RelOptLattice to SingleVariableDeclaration at 0", "INS SimpleName: RelOptLattice to SimpleType: RelOptLattice at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS SimpleType: RelOptTable to SingleVariableDeclaration at 0", "INS SimpleType: RelOptLattice to MethodDeclaration at 1", "INS SimpleName: RelOptTable to SimpleType: RelOptTable at 0", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS SimpleName: getLattice to MethodDeclaration at 2", "INS SimpleName: RelOptLattice to SimpleType: RelOptLattice at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS NullLiteral to ReturnStatement at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: External context. Never null.  to TagElement at 0"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: context to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: context to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Contexts to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: empty to MethodInvocation at 1"]}]}}, {"AbstractRelOptPlanner_diff": {"operations": ["Insert MethodDeclaration(475) into TypeDeclaration: class(1132) at 27", "Insert MethodDeclaration(484) into TypeDeclaration: class(1132) at 28", "Insert MethodDeclaration(496) into TypeDeclaration: class(1132) at 29", "Insert Javadoc(142) into FieldDeclaration(149) at 0", "Update Modifier: private(140) to protected", "Insert Modifier: public(467) into MethodDeclaration(475) at 0", "Insert PrimitiveType: void(468) into MethodDeclaration(475) at 1", "Insert SimpleName: addMaterialization(469) into MethodDeclaration(475) at 2", "Insert SingleVariableDeclaration(473) into MethodDeclaration(475) at 3", "Insert Block(474) into MethodDeclaration(475) at 4", "Insert Modifier: public(476) into MethodDeclaration(484) at 0", "Insert PrimitiveType: void(477) into MethodDeclaration(484) at 1", "Insert SimpleName: addLattice(478) into MethodDeclaration(484) at 2", "Insert SingleVariableDeclaration(482) into MethodDeclaration(484) at 3", "Insert Block(483) into MethodDeclaration(484) at 4", "Insert Modifier: public(485) into MethodDeclaration(496) at 0", "Insert SimpleType: RelOptLattice(487) into MethodDeclaration(496) at 1", "Insert SimpleName: getLattice(488) into MethodDeclaration(496) at 2", "Insert SingleVariableDeclaration(492) into MethodDeclaration(496) at 3", "Insert Block(495) into MethodDeclaration(496) at 4", "Insert TagElement(141) into Javadoc(142) at 0", "Insert IfStatement(189) into Block(216) at 2", "Insert SimpleType: RelOptMaterialization(471) into SingleVariableDeclaration(473) at 0", "Insert SimpleName: materialization(472) into SingleVariableDeclaration(473) at 1", "Insert SimpleType: RelOptLattice(480) into SingleVariableDeclaration(482) at 0", "Insert SimpleName: lattice(481) into SingleVariableDeclaration(482) at 1", "Insert SimpleName: RelOptLattice(486) into SimpleType: RelOptLattice(487) at 0", "Insert SimpleType: RelOptTable(490) into SingleVariableDeclaration(492) at 0", "Insert SimpleName: table(491) into SingleVariableDeclaration(492) at 1", "Insert ReturnStatement(494) into Block(495) at 0", "Insert TextElement: External context. Never null. (140) into TagElement(141) at 0", "Insert InfixExpression: ==(181) into IfStatement(189) at 0", "Insert Block(188) into IfStatement(189) at 1", "Insert SimpleName: RelOptMaterialization(470) into SimpleType: RelOptMaterialization(471) at 0", "Insert SimpleName: RelOptLattice(479) into SimpleType: RelOptLattice(480) at 0", "Insert SimpleName: RelOptTable(489) into SimpleType: RelOptTable(490) at 0", "Insert NullLiteral(493) into ReturnStatement(494) at 0", "Insert SimpleName: context(179) into InfixExpression: ==(181) at 0", "Insert NullLiteral(180) into InfixExpression: ==(181) at 1", "Insert ExpressionStatement(187) into Block(188) at 0", "Insert Assignment: =(186) into ExpressionStatement(187) at 0", "Insert SimpleName: context(182) into Assignment: =(186) at 0", "Insert MethodInvocation(185) into Assignment: =(186) at 1", "Insert SimpleName: Contexts(183) into MethodInvocation(185) at 0", "Insert SimpleName: empty(184) into MethodInvocation(185) at 1"]}}, {"RelOptLattice_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.util.BitSet to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.eigenbase.rel.AggregateCall to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.eigenbase.reltype.RelDataTypeField to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.eigenbase.sql.SqlDialect to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.eigenbase.util.mapping.IntPair to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: net.hydromatic.optiq.jdbc.OptiqSchema to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: net.hydromatic.optiq.materialize.MaterializationKey to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: net.hydromatic.optiq.materialize.MaterializationService to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: net.hydromatic.optiq.prepare.OptiqPrepareImpl to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: net.hydromatic.optiq.util.BitSets to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS TextElement:  Current planner to TagElement: @param at 1", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS SimpleName: sql to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: OptiqSchema.TableEntry to MethodDeclaration at 2", "INS SimpleName: schema to MethodInvocation at 2", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS TextElement: level of aggregation, from which the desired result can be obtained by to TagElement at 4", "INS SimpleName: config to InfixExpression: == at 0", "INS ReturnStatement to Block at 6", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: groupSet to SingleVariableDeclaration at 1", "INS SimpleType: OptiqSchema to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS IfStatement to Block at 1", "INS SimpleName: service to MethodInvocation at 0", "INS SimpleName: config to MethodInvocation at 0", "INS SimpleType: MaterializationKey to VariableDeclarationStatement at 1", "INS TextElement:  Materialized table to TagElement: @return at 0", "INS SimpleType: MaterializationService to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: starRelOptTable to MethodInvocation at 0", "INS TextElement: <p>The current implementation creates a materialization and populates it. to TagElement at 2", "INS SimpleName: MaterializationKey to SimpleType: MaterializationKey at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: service to MethodInvocation at 0", "INS StringLiteral: \"m\" to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: path to MethodInvocation at 1", "INS SimpleName: BitSet to SimpleType: BitSet at 0", "INS SimpleName: unwrap to MethodInvocation at 1", "INS SimpleName: starRelOptTable to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS SimpleType: BitSet to SingleVariableDeclaration at 0", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS SimpleName: defineMaterialization to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: aggCallList to TagElement: @param at 0", "INS SimpleName: service to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: MaterializationService to MethodInvocation at 0", "INS SimpleName: checkValid to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 2", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: OptiqSchema to TypeLiteral at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: AggregateCall to ParameterizedType: List<AggregateCall> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: + to MethodInvocation at 5", "INS SimpleType: OptiqConnectionConfig to TypeLiteral at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleName: planner to MethodInvocation at 0", "INS SimpleName: planner to TagElement: @param at 0", "INS SimpleName: groupSet to TagElement: @param at 0", "INS SimpleName: MaterializationService to SimpleType: MaterializationService at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TagElement: @return to Javadoc at 4", "INS SimpleName: groupSet to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: aggCallList to SingleVariableDeclaration at 1", "INS TextElement:  Grouping key to TagElement: @param at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: materializationKey to VariableDeclarationFragment at 0", "INS TextElement: the star table. to TagElement at 1", "INS SimpleName: materializationKey to MethodInvocation at 2", "INS SimpleName: unwrap to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: planner to SingleVariableDeclaration at 1", "INS SimpleName: getAggregate to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to MethodInvocation at 0", "INS TextElement: rolling up. to TagElement at 5", "INS SimpleName: sql to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS TextElement: <p>Future implementations might return materializations at a different to TagElement at 3", "INS SimpleName: config to VariableDeclarationFragment at 0", "INS SimpleName: sql to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: RelOptPlanner to SingleVariableDeclaration at 0", "INS SimpleName: createMaterializations to MethodInvocation at 1", "INS SimpleName: RelOptPlanner to SimpleType: RelOptPlanner at 0", "INS SimpleName: instance to MethodInvocation at 1", "INS ParameterizedType: List<AggregateCall> to SingleVariableDeclaration at 0", "INS TextElement: Retrieves a materialized table that will satisfy an aggregate query on to TagElement at 0", "INS SimpleName: groupSet to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS NullLiteral to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement:  Aggregate functions to TagElement: @param at 1", "INS SimpleName: aggCallList to MethodInvocation at 3", "INS TagElement to Javadoc at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS NullLiteral to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: OptiqConnectionConfig to VariableDeclarationStatement at 1", "INS SimpleName: getContext to MethodInvocation at 1", "INS SimpleName: schema to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleType: List to ParameterizedType: List<Lattice.Node> at 0", "INS QualifiedName: Lattice.Node to SimpleType: Lattice.Node at 0", "INS SimpleName: k to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 3", "INS SimpleName: IntPair to SimpleType: IntPair at 0", "INS SimpleName: starRelOptTable to SingleVariableDeclaration at 1", "INS SimpleName: RelOptTable to SimpleType: RelOptTable at 0", "INS SimpleName: buf to MethodInvocation at 0", "INS SimpleType: Lattice.Node to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: node to MethodInvocation at 2", "INS ReturnStatement to Block at 12", "INS QualifiedName: Lattice.Node to SimpleType: Lattice.Node at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buf to VariableDeclarationFragment at 0", "INS SimpleName: lattice to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS SimpleName: k to PostfixExpression: ++ at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: pair to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleType: BitSet to SingleVariableDeclaration at 0", "INS EnhancedForStatement to Block at 8", "INS NumberLiteral: 0 to Assignment: = at 1", "INS SimpleName: BitSet to SimpleType: BitSet at 0", "INS SimpleName: aggCallList to SingleVariableDeclaration at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: buf to MethodInvocation at 0", "INS SimpleName: getDialect to MethodInvocation at 1", "INS SimpleName: quoteIdentifier to MethodInvocation at 1", "INS QualifiedName: node.scan to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: field to VariableDeclarationFragment at 0", "INS StringLiteral: \", \" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: groupSet to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: quoteIdentifier to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS Block to EnhancedForStatement at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: quoteIdentifier to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: SqlDialect to SimpleType: SqlDialect at 0", "INS StringLiteral: \" ON \" to MethodInvocation at 2", "INS SimpleType: AggregateCall to SingleVariableDeclaration at 0", "INS SimpleName: getColumn to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS Block to EnhancedForStatement at 2", "INS QualifiedName: node.startCol to InfixExpression: + at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS EnhancedForStatement to Block at 2", "INS QualifiedName: System.out to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: columns to MethodInvocation at 2", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: toIter to MethodInvocation at 1", "INS SimpleType: AggregateCall to ParameterizedType: List<AggregateCall> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \" = \" to MethodInvocation at 2", "INS SimpleName: set to MethodInvocation at 1", "INS InfixExpression: > to IfStatement at 0", "INS ExpressionStatement to Block at 9", "INS QualifiedName: pair.source to InfixExpression: + at 1", "INS QualifiedName: node.endCol to MethodInvocation at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS StringLiteral: \"\\nJOIN \" to MethodInvocation at 2", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: buf to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: List to SimpleType: List at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: OptiqPrepareImpl.DEBUG to IfStatement at 0", "INS SimpleType: RelOptTable to SingleVariableDeclaration at 0", "INS QualifiedName: node.parent to InfixExpression: != at 0", "INS QualifiedName: lattice.nodes to EnhancedForStatement at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: range to MethodInvocation at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS IfStatement to Block at 0", "INS IfStatement to Block at 11", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: sql to MethodDeclaration at 2", "INS SimpleName: buf to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: k to PostfixExpression: ++ at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: buf to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: starRelOptTable to MethodInvocation at 0", "INS SimpleType: RelDataTypeField to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 2", "INS QualifiedName: node.startCol to MethodInvocation at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: buf to MethodInvocation at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS SimpleType: BitSet to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS SimpleName: BitSets to MethodInvocation at 0", "INS SimpleName: buf to InfixExpression: + at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: aggCallList to EnhancedForStatement at 1", "INS SimpleName: dialect to MethodInvocation at 0", "INS SimpleName: groupSet to SingleVariableDeclaration at 1", "INS SimpleName: BitSets to MethodInvocation at 0", "INS SimpleName: usedNodes to EnhancedForStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: groupSet to MethodInvocation at 2", "INS SimpleName: getQualifiedName to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 7", "INS StringLiteral: \"SELECT DISTINCT \" to MethodInvocation at 2", "INS QualifiedName: node.parent.startCol to InfixExpression: + at 0", "INS SimpleName: BitSet to SimpleType: BitSet at 0", "INS QualifiedName: Lattice.Node to SimpleType: Lattice.Node at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: i to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: pair.target to InfixExpression: + at 1", "INS QualifiedName: node.alias to MethodInvocation at 3", "INS SimpleName: dialect to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ExpressionStatement to Block at 3", "INS SimpleName: append to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: call to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS PostfixExpression: ++ to InfixExpression: > at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: BitSet to SimpleType: BitSet at 0", "INS SimpleName: lattice to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: clone to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: Lattice.Node to ParameterizedType: List<Lattice.Node> at 1", "INS StringLiteral: \"Lattice SQL:\\n\" to InfixExpression: + at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS StringLiteral: \" AS \" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS EnhancedForStatement to Block at 10", "INS StringLiteral: \"\\nFROM \" to MethodInvocation at 2", "INS SimpleName: buf to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 5", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: arg to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS PostfixExpression: ++ to InfixExpression: > at 0", "INS SimpleName: quoteIdentifier to MethodInvocation at 1", "INS QualifiedName: node.link to EnhancedForStatement at 1", "INS SimpleName: k to VariableDeclarationFragment at 0", "INS SimpleName: append to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS QualifiedName: SqlDialect.DatabaseProduct.OPTIQ to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: use to MethodInvocation at 0", "INS SimpleName: buf to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: SqlDialect to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ExpressionStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: usedNodes to MethodInvocation at 1", "INS SimpleType: Lattice.Node to SingleVariableDeclaration at 0", "INS SimpleName: buf to MethodInvocation at 2", "INS SimpleType: StringBuilder to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buf to MethodInvocation at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: buf to MethodInvocation at 2", "INS SimpleName: getFieldList to MethodInvocation at 1", "INS SimpleName: arg to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: quoteIdentifier to MethodInvocation at 1", "INS SimpleName: getColumn to MethodInvocation at 1", "INS SimpleName: RelDataTypeField to SimpleType: RelDataTypeField at 0", "INS SimpleType: List to ParameterizedType: List<AggregateCall> at 0", "INS SimpleName: buf to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS StringLiteral: \" AND \" to MethodInvocation at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: List<AggregateCall> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: getRowType to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: buf to MethodInvocation at 0", "INS SimpleName: getArgList to MethodInvocation at 1", "INS SimpleName: columns to MethodInvocation at 0", "INS SimpleType: IntPair to SingleVariableDeclaration at 0", "INS EnhancedForStatement to Block at 0", "INS ParameterizedType: List<Lattice.Node> to VariableDeclarationStatement at 0", "INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS QualifiedName: node.parent to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: BitSet to CastExpression at 0", "INS SimpleName: buf to MethodInvocation at 2", "INS SimpleName: field to MethodInvocation at 0", "INS SimpleName: intersects to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: usedNodes to MethodInvocation at 0", "INS QualifiedName: node.parent to MethodInvocation at 2", "INS SimpleName: node to MethodInvocation at 2", "INS QualifiedName: Lattice.Node to SimpleType: Lattice.Node at 0", "INS SimpleType: Lattice.Node to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ExpressionStatement to Block at 1", "INS ParameterizedType: List<Lattice.Node> to SingleVariableDeclaration at 0", "INS SimpleName: usedNodes to SingleVariableDeclaration at 1", "INS QualifiedName: Lattice.Node to SimpleType: Lattice.Node at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: usedNodes to MethodInvocation at 0", "INS SimpleName: usedNodes to MethodInvocation at 1", "INS SimpleName: use to MethodDeclaration at 2", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: contains to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: node to MethodInvocation at 2", "INS SimpleType: Lattice.Node to ParameterizedType: List<Lattice.Node> at 1", "INS QualifiedName: node.parent to InfixExpression: != at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: use to MethodInvocation at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "MOVE from ParameterizedType: List<AggregateCall>", "operations": ["MOV SimpleType: List to ParameterizedType: List<AggregateCall> at 0", "MOV SimpleType: RelOptMaterialization to ParameterizedType: List<Lattice.Node> at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from RelOptMaterialization to List", "operations": ["UPD SimpleType: RelOptMaterialization from RelOptMaterialization to List", "UPD SimpleName: RelOptMaterialization from RelOptMaterialization to List"]}, {"root": "UPDATE from materializations to usedNodes", "operations": ["UPD SimpleName: materializations from materializations to usedNodes"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL Modifier: final", "DEL FieldDeclaration", "DEL ParameterizedType: List<RelOptMaterialization>"]}]}}, {"RelOptLattice_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(545) at 1", "Insert ImportDeclaration(7) into CompilationUnit(545) at 3", "Insert ImportDeclaration(11) into CompilationUnit(545) at 5", "Insert ImportDeclaration(13) into CompilationUnit(545) at 6", "Insert ImportDeclaration(15) into CompilationUnit(545) at 7", "Insert ImportDeclaration(17) into CompilationUnit(545) at 8", "Insert ImportDeclaration(19) into CompilationUnit(545) at 9", "Insert ImportDeclaration(23) into CompilationUnit(545) at 11", "Insert ImportDeclaration(25) into CompilationUnit(545) at 12", "Insert ImportDeclaration(27) into CompilationUnit(545) at 13", "Insert ImportDeclaration(29) into CompilationUnit(545) at 14", "Insert QualifiedName: java.util.BitSet(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.eigenbase.rel.AggregateCall(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.eigenbase.reltype.RelDataTypeField(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.eigenbase.sql.SqlDialect(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.eigenbase.util.mapping.IntPair(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfig(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: net.hydromatic.optiq.jdbc.OptiqSchema(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: net.hydromatic.optiq.materialize.MaterializationKey(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: net.hydromatic.optiq.materialize.MaterializationService(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: net.hydromatic.optiq.prepare.OptiqPrepareImpl(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: net.hydromatic.optiq.util.BitSets(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(234) into TypeDeclaration: class(544) at 8", "Insert MethodDeclaration(505) into TypeDeclaration: class(544) at 9", "Insert MethodDeclaration(543) into TypeDeclaration: class(544) at 10", "Update Modifier: private(22) to public", "Insert Javadoc(133) into MethodDeclaration(234) at 0", "Insert Modifier: public(134) into MethodDeclaration(234) at 1", "Insert SimpleType: OptiqSchema.TableEntry(136) into MethodDeclaration(234) at 2", "Insert SimpleName: getAggregate(137) into MethodDeclaration(234) at 3", "Insert SingleVariableDeclaration(141) into MethodDeclaration(234) at 4", "Insert SingleVariableDeclaration(145) into MethodDeclaration(234) at 5", "Insert SingleVariableDeclaration(152) into MethodDeclaration(234) at 6", "Insert Block(233) into MethodDeclaration(234) at 7", "Insert Modifier: private(235) into MethodDeclaration(505) at 0", "Insert SimpleType: String(237) into MethodDeclaration(505) at 1", "Insert SimpleName: sql(238) into MethodDeclaration(505) at 2", "Insert SingleVariableDeclaration(242) into MethodDeclaration(505) at 3", "Insert SingleVariableDeclaration(246) into MethodDeclaration(505) at 4", "Insert SingleVariableDeclaration(253) into MethodDeclaration(505) at 5", "Insert Block(504) into MethodDeclaration(505) at 6", "Insert Modifier: private(506) into MethodDeclaration(543) at 0", "Insert PrimitiveType: void(507) into MethodDeclaration(543) at 1", "Insert SimpleName: use(508) into MethodDeclaration(543) at 2", "Insert SingleVariableDeclaration(515) into MethodDeclaration(543) at 3", "Insert SingleVariableDeclaration(519) into MethodDeclaration(543) at 4", "Insert Block(542) into MethodDeclaration(543) at 5", "Insert TagElement(121) into Javadoc(133) at 0", "Insert TagElement: @param(124) into Javadoc(133) at 1", "Insert TagElement: @param(127) into Javadoc(133) at 2", "Insert TagElement: @param(130) into Javadoc(133) at 3", "Insert TagElement: @return(132) into Javadoc(133) at 4", "Insert QualifiedName: OptiqSchema.TableEntry(135) into SimpleType: OptiqSchema.TableEntry(136) at 0", "Insert SimpleType: RelOptPlanner(139) into SingleVariableDeclaration(141) at 0", "Insert SimpleName: planner(140) into SingleVariableDeclaration(141) at 1", "Insert SimpleType: BitSet(143) into SingleVariableDeclaration(145) at 0", "Insert SimpleName: groupSet(144) into SingleVariableDeclaration(145) at 1", "Insert ParameterizedType: List<AggregateCall>(150) into SingleVariableDeclaration(152) at 0", "Insert SimpleName: aggCallList(151) into SingleVariableDeclaration(152) at 1", "Insert VariableDeclarationStatement(166) into Block(233) at 0", "Insert IfStatement(178) into Block(233) at 1", "Insert VariableDeclarationStatement(188) into Block(233) at 2", "Insert VariableDeclarationStatement(197) into Block(233) at 3", "Insert VariableDeclarationStatement(209) into Block(233) at 4", "Insert VariableDeclarationStatement(227) into Block(233) at 5", "Insert ReturnStatement(232) into Block(233) at 6", "Insert SimpleName: String(236) into SimpleType: String(237) at 0", "Insert SimpleType: RelOptTable(240) into SingleVariableDeclaration(242) at 0", "Insert SimpleName: starRelOptTable(241) into SingleVariableDeclaration(242) at 1", "Insert SimpleType: BitSet(244) into SingleVariableDeclaration(246) at 0", "Insert SimpleName: groupSet(245) into SingleVariableDeclaration(246) at 1", "Insert ParameterizedType: List<AggregateCall>(251) into SingleVariableDeclaration(253) at 0", "Insert SimpleName: aggCallList(252) into SingleVariableDeclaration(253) at 1", "Insert VariableDeclarationStatement(264) into Block(504) at 0", "Insert EnhancedForStatement(284) into Block(504) at 1", "Insert VariableDeclarationStatement(295) into Block(504) at 2", "Insert EnhancedForStatement(317) into Block(504) at 3", "Insert VariableDeclarationStatement(326) into Block(504) at 4", "Insert VariableDeclarationStatement(335) into Block(504) at 5", "Insert ExpressionStatement(340) into Block(504) at 6", "Insert VariableDeclarationStatement(345) into Block(504) at 7", "Insert EnhancedForStatement(387) into Block(504) at 8", "Insert ExpressionStatement(392) into Block(504) at 9", "Insert EnhancedForStatement(489) into Block(504) at 10", "Insert IfStatement(499) into Block(504) at 11", "Insert ReturnStatement(503) into Block(504) at 12", "Insert ParameterizedType: List<Lattice.Node>(513) into SingleVariableDeclaration(515) at 0", "Insert SimpleName: usedNodes(514) into SingleVariableDeclaration(515) at 1", "Insert SimpleType: Lattice.Node(517) into SingleVariableDeclaration(519) at 0", "Insert SimpleName: node(518) into SingleVariableDeclaration(519) at 1", "Insert IfStatement(541) into Block(542) at 0", "Insert TextElement: Retrieves a materialized table that will satisfy an aggregate query on(115) into TagElement(121) at 0", "Insert TextElement: the star table.(116) into TagElement(121) at 1", "Insert TextElement: <p>The current implementation creates a materialization and populates it.(117) into TagElement(121) at 2", "Insert TextElement: <p>Future implementations might return materializations at a different(118) into TagElement(121) at 3", "Insert TextElement: level of aggregation, from which the desired result can be obtained by(119) into TagElement(121) at 4", "Insert TextElement: rolling up.(120) into TagElement(121) at 5", "Insert SimpleName: planner(122) into TagElement: @param(124) at 0", "Insert TextElement:  Current planner(123) into TagElement: @param(124) at 1", "Insert SimpleName: groupSet(125) into TagElement: @param(127) at 0", "Insert TextElement:  Grouping key(126) into TagElement: @param(127) at 1", "Insert SimpleName: aggCallList(128) into TagElement: @param(130) at 0", "Insert TextElement:  Aggregate functions(129) into TagElement: @param(130) at 1", "Insert TextElement:  Materialized table(131) into TagElement: @return(132) at 0", "Insert SimpleName: RelOptPlanner(138) into SimpleType: RelOptPlanner(139) at 0", "Insert SimpleName: BitSet(142) into SimpleType: BitSet(143) at 0", "Move SimpleType: List(32) into ParameterizedType: List<AggregateCall>(150) at 0", "Insert SimpleType: AggregateCall(149) into ParameterizedType: List<AggregateCall>(150) at 1", "Insert Modifier: final(153) into VariableDeclarationStatement(166) at 0", "Insert SimpleType: OptiqConnectionConfig(155) into VariableDeclarationStatement(166) at 1", "Insert VariableDeclarationFragment(165) into VariableDeclarationStatement(166) at 2", "Insert InfixExpression: ||(174) into IfStatement(178) at 0", "Insert Block(177) into IfStatement(178) at 1", "Insert SimpleType: String(180) into VariableDeclarationStatement(188) at 0", "Insert VariableDeclarationFragment(187) into VariableDeclarationStatement(188) at 1", "Insert Modifier: final(189) into VariableDeclarationStatement(197) at 0", "Insert SimpleType: MaterializationService(191) into VariableDeclarationStatement(197) at 1", "Insert VariableDeclarationFragment(196) into VariableDeclarationStatement(197) at 2", "Insert Modifier: final(198) into VariableDeclarationStatement(209) at 0", "Insert SimpleType: OptiqSchema(200) into VariableDeclarationStatement(209) at 1", "Insert VariableDeclarationFragment(208) into VariableDeclarationStatement(209) at 2", "Insert Modifier: final(210) into VariableDeclarationStatement(227) at 0", "Insert SimpleType: MaterializationKey(212) into VariableDeclarationStatement(227) at 1", "Insert VariableDeclarationFragment(226) into VariableDeclarationStatement(227) at 2", "Insert MethodInvocation(231) into ReturnStatement(232) at 0", "Insert SimpleName: RelOptTable(239) into SimpleType: RelOptTable(240) at 0", "Insert SimpleName: BitSet(243) into SimpleType: BitSet(244) at 0", "Insert SimpleType: List(248) into ParameterizedType: List<AggregateCall>(251) at 0", "Insert SimpleType: AggregateCall(250) into ParameterizedType: List<AggregateCall>(251) at 1", "Insert SimpleType: BitSet(255) into VariableDeclarationStatement(264) at 0", "Insert VariableDeclarationFragment(263) into VariableDeclarationStatement(264) at 1", "Insert SingleVariableDeclaration(268) into EnhancedForStatement(284) at 0", "Insert SimpleName: aggCallList(269) into EnhancedForStatement(284) at 1", "Insert Block(283) into EnhancedForStatement(284) at 2", "Insert ParameterizedType: List<Lattice.Node>(289) into VariableDeclarationStatement(295) at 0", "Move VariableDeclarationFragment(40) into VariableDeclarationStatement(295) at 1", "Insert SingleVariableDeclaration(299) into EnhancedForStatement(317) at 0", "Insert QualifiedName: lattice.nodes(300) into EnhancedForStatement(317) at 1", "Insert Block(316) into EnhancedForStatement(317) at 2", "Insert Modifier: final(318) into VariableDeclarationStatement(326) at 0", "Insert SimpleType: SqlDialect(320) into VariableDeclarationStatement(326) at 1", "Insert VariableDeclarationFragment(325) into VariableDeclarationStatement(326) at 2", "Insert Modifier: final(327) into VariableDeclarationStatement(335) at 0", "Insert SimpleType: StringBuilder(329) into VariableDeclarationStatement(335) at 1", "Insert VariableDeclarationFragment(334) into VariableDeclarationStatement(335) at 2", "Insert MethodInvocation(339) into ExpressionStatement(340) at 0", "Insert PrimitiveType: int(341) into VariableDeclarationStatement(345) at 0", "Insert VariableDeclarationFragment(344) into VariableDeclarationStatement(345) at 1", "Insert SingleVariableDeclaration(348) into EnhancedForStatement(387) at 0", "Insert MethodInvocation(352) into EnhancedForStatement(387) at 1", "Insert Block(386) into EnhancedForStatement(387) at 2", "Insert MethodInvocation(391) into ExpressionStatement(392) at 0", "Insert SingleVariableDeclaration(396) into EnhancedForStatement(489) at 0", "Insert SimpleName: usedNodes(397) into EnhancedForStatement(489) at 1", "Insert Block(488) into EnhancedForStatement(489) at 2", "Insert QualifiedName: OptiqPrepareImpl.DEBUG(490) into IfStatement(499) at 0", "Insert Block(498) into IfStatement(499) at 1", "Insert MethodInvocation(502) into ReturnStatement(503) at 0", "Update SimpleType: RelOptMaterialization(34) to List", "Move SimpleType: RelOptMaterialization(34) into ParameterizedType: List<Lattice.Node>(513) at 0", "Insert SimpleType: Lattice.Node(512) into ParameterizedType: List<Lattice.Node>(513) at 1", "Insert QualifiedName: Lattice.Node(516) into SimpleType: Lattice.Node(517) at 0", "Insert PrefixExpression: !(524) into IfStatement(541) at 0", "Insert Block(540) into IfStatement(541) at 1", "Insert SimpleName: AggregateCall(148) into SimpleType: AggregateCall(149) at 0", "Insert SimpleName: OptiqConnectionConfig(154) into SimpleType: OptiqConnectionConfig(155) at 0", "Insert SimpleName: config(156) into VariableDeclarationFragment(165) at 0", "Insert MethodInvocation(164) into VariableDeclarationFragment(165) at 1", "Insert InfixExpression: ==(169) into InfixExpression: ||(174) at 0", "Insert PrefixExpression: !(173) into InfixExpression: ||(174) at 1", "Insert ReturnStatement(176) into Block(177) at 0", "Insert SimpleName: String(179) into SimpleType: String(180) at 0", "Insert SimpleName: sql(181) into VariableDeclarationFragment(187) at 0", "Insert MethodInvocation(186) into VariableDeclarationFragment(187) at 1", "Insert SimpleName: MaterializationService(190) into SimpleType: MaterializationService(191) at 0", "Insert SimpleName: service(192) into VariableDeclarationFragment(196) at 0", "Insert MethodInvocation(195) into VariableDeclarationFragment(196) at 1", "Insert SimpleName: OptiqSchema(199) into SimpleType: OptiqSchema(200) at 0", "Insert SimpleName: schema(201) into VariableDeclarationFragment(208) at 0", "Insert MethodInvocation(207) into VariableDeclarationFragment(208) at 1", "Insert SimpleName: MaterializationKey(211) into SimpleType: MaterializationKey(212) at 0", "Insert SimpleName: materializationKey(213) into VariableDeclarationFragment(226) at 0", "Insert MethodInvocation(225) into VariableDeclarationFragment(226) at 1", "Insert SimpleName: service(228) into MethodInvocation(231) at 0", "Insert SimpleName: checkValid(229) into MethodInvocation(231) at 1", "Insert SimpleName: materializationKey(230) into MethodInvocation(231) at 2", "Insert SimpleName: List(247) into SimpleType: List(248) at 0", "Insert SimpleName: AggregateCall(249) into SimpleType: AggregateCall(250) at 0", "Insert SimpleName: BitSet(254) into SimpleType: BitSet(255) at 0", "Insert SimpleName: columns(256) into VariableDeclarationFragment(263) at 0", "Insert CastExpression(262) into VariableDeclarationFragment(263) at 1", "Insert SimpleType: AggregateCall(266) into SingleVariableDeclaration(268) at 0", "Insert SimpleName: call(267) into SingleVariableDeclaration(268) at 1", "Insert EnhancedForStatement(282) into Block(283) at 0", "Insert SimpleType: List(286) into ParameterizedType: List<Lattice.Node>(289) at 0", "Insert SimpleType: Lattice.Node(288) into ParameterizedType: List<Lattice.Node>(289) at 1", "Update SimpleName: materializations(36) to usedNodes", "Insert SimpleType: Lattice.Node(297) into SingleVariableDeclaration(299) at 0", "Insert SimpleName: node(298) into SingleVariableDeclaration(299) at 1", "Insert IfStatement(315) into Block(316) at 0", "Insert SimpleName: SqlDialect(319) into SimpleType: SqlDialect(320) at 0", "Insert SimpleName: dialect(321) into VariableDeclarationFragment(325) at 0", "Insert MethodInvocation(324) into VariableDeclarationFragment(325) at 1", "Insert SimpleName: StringBuilder(328) into SimpleType: StringBuilder(329) at 0", "Insert SimpleName: buf(330) into VariableDeclarationFragment(334) at 0", "Insert ClassInstanceCreation(333) into VariableDeclarationFragment(334) at 1", "Insert SimpleName: buf(336) into MethodInvocation(339) at 0", "Insert SimpleName: append(337) into MethodInvocation(339) at 1", "Insert StringLiteral: \"SELECT DISTINCT \"(338) into MethodInvocation(339) at 2", "Insert SimpleName: k(342) into VariableDeclarationFragment(344) at 0", "Insert NumberLiteral: 0(343) into VariableDeclarationFragment(344) at 1", "Insert PrimitiveType: int(346) into SingleVariableDeclaration(348) at 0", "Insert SimpleName: i(347) into SingleVariableDeclaration(348) at 1", "Insert SimpleName: BitSets(349) into MethodInvocation(352) at 0", "Insert SimpleName: toIter(350) into MethodInvocation(352) at 1", "Insert SimpleName: groupSet(351) into MethodInvocation(352) at 2", "Insert VariableDeclarationStatement(366) into Block(386) at 0", "Insert IfStatement(377) into Block(386) at 1", "Insert ExpressionStatement(385) into Block(386) at 2", "Insert SimpleName: buf(388) into MethodInvocation(391) at 0", "Insert SimpleName: append(389) into MethodInvocation(391) at 1", "Insert StringLiteral: \"\\nFROM \"(390) into MethodInvocation(391) at 2", "Insert SimpleType: Lattice.Node(394) into SingleVariableDeclaration(396) at 0", "Insert SimpleName: node(395) into SingleVariableDeclaration(396) at 1", "Insert IfStatement(407) into Block(488) at 0", "Insert ExpressionStatement(417) into Block(488) at 1", "Insert ExpressionStatement(422) into Block(488) at 2", "Insert ExpressionStatement(428) into Block(488) at 3", "Insert IfStatement(487) into Block(488) at 4", "Insert ExpressionStatement(497) into Block(498) at 0", "Insert SimpleName: buf(500) into MethodInvocation(502) at 0", "Insert SimpleName: toString(501) into MethodInvocation(502) at 1", "Update SimpleName: RelOptMaterialization(33) to List", "Insert QualifiedName: Lattice.Node(511) into SimpleType: Lattice.Node(512) at 0", "Insert MethodInvocation(523) into PrefixExpression: !(524) at 0", "Insert IfStatement(534) into Block(540) at 0", "Insert ExpressionStatement(539) into Block(540) at 1", "Insert MethodInvocation(159) into MethodInvocation(164) at 0", "Insert SimpleName: unwrap(160) into MethodInvocation(164) at 1", "Insert TypeLiteral(163) into MethodInvocation(164) at 2", "Insert SimpleName: config(167) into InfixExpression: ==(169) at 0", "Insert NullLiteral(168) into InfixExpression: ==(169) at 1", "Insert MethodInvocation(172) into PrefixExpression: !(173) at 0", "Insert NullLiteral(175) into ReturnStatement(176) at 0", "Insert SimpleName: sql(182) into MethodInvocation(186) at 0", "Insert SimpleName: starRelOptTable(183) into MethodInvocation(186) at 1", "Insert SimpleName: groupSet(184) into MethodInvocation(186) at 2", "Insert SimpleName: aggCallList(185) into MethodInvocation(186) at 3", "Insert SimpleName: MaterializationService(193) into MethodInvocation(195) at 0", "Insert SimpleName: instance(194) into MethodInvocation(195) at 1", "Insert SimpleName: starRelOptTable(202) into MethodInvocation(207) at 0", "Insert SimpleName: unwrap(203) into MethodInvocation(207) at 1", "Insert TypeLiteral(206) into MethodInvocation(207) at 2", "Insert SimpleName: service(214) into MethodInvocation(225) at 0", "Insert SimpleName: defineMaterialization(215) into MethodInvocation(225) at 1", "Insert SimpleName: schema(216) into MethodInvocation(225) at 2", "Insert SimpleName: sql(217) into MethodInvocation(225) at 3", "Insert MethodInvocation(221) into MethodInvocation(225) at 4", "Insert InfixExpression: +(224) into MethodInvocation(225) at 5", "Insert SimpleType: BitSet(258) into CastExpression(262) at 0", "Insert MethodInvocation(261) into CastExpression(262) at 1", "Insert SimpleName: AggregateCall(265) into SimpleType: AggregateCall(266) at 0", "Insert SingleVariableDeclaration(272) into EnhancedForStatement(282) at 0", "Insert MethodInvocation(275) into EnhancedForStatement(282) at 1", "Insert Block(281) into EnhancedForStatement(282) at 2", "Insert SimpleName: List(285) into SimpleType: List(286) at 0", "Insert QualifiedName: Lattice.Node(287) into SimpleType: Lattice.Node(288) at 0", "Insert QualifiedName: Lattice.Node(296) into SimpleType: Lattice.Node(297) at 0", "Insert MethodInvocation(308) into IfStatement(315) at 0", "Insert Block(314) into IfStatement(315) at 1", "Insert QualifiedName: SqlDialect.DatabaseProduct.OPTIQ(322) into MethodInvocation(324) at 0", "Insert SimpleName: getDialect(323) into MethodInvocation(324) at 1", "Insert SimpleType: StringBuilder(332) into ClassInstanceCreation(333) at 0", "Insert Modifier: final(353) into VariableDeclarationStatement(366) at 0", "Insert SimpleType: RelDataTypeField(355) into VariableDeclarationStatement(366) at 1", "Insert VariableDeclarationFragment(365) into VariableDeclarationStatement(366) at 2", "Insert InfixExpression: >(370) into IfStatement(377) at 0", "Insert Block(376) into IfStatement(377) at 1", "Insert MethodInvocation(384) into ExpressionStatement(385) at 0", "Insert QualifiedName: Lattice.Node(393) into SimpleType: Lattice.Node(394) at 0", "Insert InfixExpression: !=(400) into IfStatement(407) at 0", "Insert Block(406) into IfStatement(407) at 1", "Insert MethodInvocation(416) into ExpressionStatement(417) at 0", "Insert MethodInvocation(421) into ExpressionStatement(422) at 0", "Insert MethodInvocation(427) into ExpressionStatement(428) at 0", "Insert InfixExpression: !=(431) into IfStatement(487) at 0", "Insert Block(486) into IfStatement(487) at 1", "Insert MethodInvocation(496) into ExpressionStatement(497) at 0", "Insert SimpleName: usedNodes(520) into MethodInvocation(523) at 0", "Insert SimpleName: contains(521) into MethodInvocation(523) at 1", "Insert SimpleName: node(522) into MethodInvocation(523) at 2", "Insert InfixExpression: !=(527) into IfStatement(534) at 0", "Insert Block(533) into IfStatement(534) at 1", "Insert MethodInvocation(538) into ExpressionStatement(539) at 0", "Insert SimpleName: planner(157) into MethodInvocation(159) at 0", "Insert SimpleName: getContext(158) into MethodInvocation(159) at 1", "Insert SimpleType: OptiqConnectionConfig(162) into TypeLiteral(163) at 0", "Insert SimpleName: config(170) into MethodInvocation(172) at 0", "Insert SimpleName: createMaterializations(171) into MethodInvocation(172) at 1", "Insert SimpleType: OptiqSchema(205) into TypeLiteral(206) at 0", "Insert SimpleName: schema(218) into MethodInvocation(221) at 0", "Insert SimpleName: path(219) into MethodInvocation(221) at 1", "Insert NullLiteral(220) into MethodInvocation(221) at 2", "Insert StringLiteral: \"m\"(222) into InfixExpression: +(224) at 0", "Insert SimpleName: groupSet(223) into InfixExpression: +(224) at 1", "Insert SimpleName: BitSet(257) into SimpleType: BitSet(258) at 0", "Insert SimpleName: groupSet(259) into MethodInvocation(261) at 0", "Insert SimpleName: clone(260) into MethodInvocation(261) at 1", "Insert PrimitiveType: int(270) into SingleVariableDeclaration(272) at 0", "Insert SimpleName: arg(271) into SingleVariableDeclaration(272) at 1", "Insert SimpleName: call(273) into MethodInvocation(275) at 0", "Insert SimpleName: getArgList(274) into MethodInvocation(275) at 1", "Insert ExpressionStatement(280) into Block(281) at 0", "Insert MethodInvocation(305) into MethodInvocation(308) at 0", "Insert SimpleName: intersects(306) into MethodInvocation(308) at 1", "Insert SimpleName: columns(307) into MethodInvocation(308) at 2", "Insert ExpressionStatement(313) into Block(314) at 0", "Insert SimpleName: StringBuilder(331) into SimpleType: StringBuilder(332) at 0", "Insert SimpleName: RelDataTypeField(354) into SimpleType: RelDataTypeField(355) at 0", "Insert SimpleName: field(356) into VariableDeclarationFragment(365) at 0", "Insert MethodInvocation(364) into VariableDeclarationFragment(365) at 1", "Insert PostfixExpression: ++(368) into InfixExpression: >(370) at 0", "Insert NumberLiteral: 0(369) into InfixExpression: >(370) at 1", "Insert ExpressionStatement(375) into Block(376) at 0", "Insert SimpleName: dialect(378) into MethodInvocation(384) at 0", "Insert SimpleName: quoteIdentifier(379) into MethodInvocation(384) at 1", "Insert SimpleName: buf(380) into MethodInvocation(384) at 2", "Insert MethodInvocation(383) into MethodInvocation(384) at 3", "Insert QualifiedName: node.parent(398) into InfixExpression: !=(400) at 0", "Insert NullLiteral(399) into InfixExpression: !=(400) at 1", "Insert ExpressionStatement(405) into Block(406) at 0", "Insert SimpleName: dialect(408) into MethodInvocation(416) at 0", "Insert SimpleName: quoteIdentifier(409) into MethodInvocation(416) at 1", "Insert SimpleName: buf(410) into MethodInvocation(416) at 2", "Insert MethodInvocation(415) into MethodInvocation(416) at 3", "Insert SimpleName: buf(418) into MethodInvocation(421) at 0", "Insert SimpleName: append(419) into MethodInvocation(421) at 1", "Insert StringLiteral: \" AS \"(420) into MethodInvocation(421) at 2", "Insert SimpleName: dialect(423) into MethodInvocation(427) at 0", "Insert SimpleName: quoteIdentifier(424) into MethodInvocation(427) at 1", "Insert SimpleName: buf(425) into MethodInvocation(427) at 2", "Insert QualifiedName: node.alias(426) into MethodInvocation(427) at 3", "Insert QualifiedName: node.parent(429) into InfixExpression: !=(431) at 0", "Insert NullLiteral(430) into InfixExpression: !=(431) at 1", "Insert ExpressionStatement(436) into Block(486) at 0", "Insert ExpressionStatement(440) into Block(486) at 1", "Insert EnhancedForStatement(485) into Block(486) at 2", "Insert QualifiedName: System.out(491) into MethodInvocation(496) at 0", "Insert SimpleName: println(492) into MethodInvocation(496) at 1", "Insert InfixExpression: +(495) into MethodInvocation(496) at 2", "Insert QualifiedName: node.parent(525) into InfixExpression: !=(527) at 0", "Insert NullLiteral(526) into InfixExpression: !=(527) at 1", "Insert ExpressionStatement(532) into Block(533) at 0", "Insert SimpleName: usedNodes(535) into MethodInvocation(538) at 0", "Insert SimpleName: add(536) into MethodInvocation(538) at 1", "Insert SimpleName: node(537) into MethodInvocation(538) at 2", "Insert SimpleName: OptiqConnectionConfig(161) into SimpleType: OptiqConnectionConfig(162) at 0", "Insert SimpleName: OptiqSchema(204) into SimpleType: OptiqSchema(205) at 0", "Insert MethodInvocation(279) into ExpressionStatement(280) at 0", "Insert SimpleName: BitSets(301) into MethodInvocation(305) at 0", "Insert SimpleName: range(302) into MethodInvocation(305) at 1", "Insert QualifiedName: node.startCol(303) into MethodInvocation(305) at 2", "Insert QualifiedName: node.endCol(304) into MethodInvocation(305) at 3", "Insert MethodInvocation(312) into ExpressionStatement(313) at 0", "Insert MethodInvocation(361) into MethodInvocation(364) at 0", "Insert SimpleName: get(362) into MethodInvocation(364) at 1", "Insert SimpleName: i(363) into MethodInvocation(364) at 2", "Insert SimpleName: k(367) into PostfixExpression: ++(368) at 0", "Insert MethodInvocation(374) into ExpressionStatement(375) at 0", "Insert SimpleName: field(381) into MethodInvocation(383) at 0", "Insert SimpleName: getName(382) into MethodInvocation(383) at 1", "Insert MethodInvocation(404) into ExpressionStatement(405) at 0", "Insert MethodInvocation(413) into MethodInvocation(415) at 0", "Insert SimpleName: getQualifiedName(414) into MethodInvocation(415) at 1", "Insert MethodInvocation(435) into ExpressionStatement(436) at 0", "Insert Assignment: =(439) into ExpressionStatement(440) at 0", "Insert SingleVariableDeclaration(444) into EnhancedForStatement(485) at 0", "Insert QualifiedName: node.link(445) into EnhancedForStatement(485) at 1", "Insert Block(484) into EnhancedForStatement(485) at 2", "Insert StringLiteral: \"Lattice SQL:\\n\"(493) into InfixExpression: +(495) at 0", "Insert SimpleName: buf(494) into InfixExpression: +(495) at 1", "Insert MethodInvocation(531) into ExpressionStatement(532) at 0", "Insert SimpleName: columns(276) into MethodInvocation(279) at 0", "Insert SimpleName: set(277) into MethodInvocation(279) at 1", "Insert SimpleName: arg(278) into MethodInvocation(279) at 2", "Insert SimpleName: use(309) into MethodInvocation(312) at 0", "Insert SimpleName: usedNodes(310) into MethodInvocation(312) at 1", "Insert SimpleName: node(311) into MethodInvocation(312) at 2", "Insert MethodInvocation(359) into MethodInvocation(361) at 0", "Insert SimpleName: getFieldList(360) into MethodInvocation(361) at 1", "Insert SimpleName: buf(371) into MethodInvocation(374) at 0", "Insert SimpleName: append(372) into MethodInvocation(374) at 1", "Insert StringLiteral: \", \"(373) into MethodInvocation(374) at 2", "Insert SimpleName: buf(401) into MethodInvocation(404) at 0", "Insert SimpleName: append(402) into MethodInvocation(404) at 1", "Insert StringLiteral: \"\\nJOIN \"(403) into MethodInvocation(404) at 2", "Insert QualifiedName: node.scan(411) into MethodInvocation(413) at 0", "Insert SimpleName: getTable(412) into MethodInvocation(413) at 1", "Insert SimpleName: buf(432) into MethodInvocation(435) at 0", "Insert SimpleName: append(433) into MethodInvocation(435) at 1", "Insert StringLiteral: \" ON \"(434) into MethodInvocation(435) at 2", "Insert SimpleName: k(437) into Assignment: =(439) at 0", "Insert NumberLiteral: 0(438) into Assignment: =(439) at 1", "Insert SimpleType: IntPair(442) into SingleVariableDeclaration(444) at 0", "Insert SimpleName: pair(443) into SingleVariableDeclaration(444) at 1", "Insert IfStatement(456) into Block(484) at 0", "Insert ExpressionStatement(467) into Block(484) at 1", "Insert ExpressionStatement(472) into Block(484) at 2", "Insert ExpressionStatement(483) into Block(484) at 3", "Insert SimpleName: use(528) into MethodInvocation(531) at 0", "Insert SimpleName: usedNodes(529) into MethodInvocation(531) at 1", "Insert QualifiedName: node.parent(530) into MethodInvocation(531) at 2", "Insert SimpleName: starRelOptTable(357) into MethodInvocation(359) at 0", "Insert SimpleName: getRowType(358) into MethodInvocation(359) at 1", "Insert SimpleName: IntPair(441) into SimpleType: IntPair(442) at 0", "Insert InfixExpression: >(449) into IfStatement(456) at 0", "Insert Block(455) into IfStatement(456) at 1", "Insert MethodInvocation(466) into ExpressionStatement(467) at 0", "Insert MethodInvocation(471) into ExpressionStatement(472) at 0", "Insert MethodInvocation(482) into ExpressionStatement(483) at 0", "Insert PostfixExpression: ++(447) into InfixExpression: >(449) at 0", "Insert NumberLiteral: 0(448) into InfixExpression: >(449) at 1", "Insert ExpressionStatement(454) into Block(455) at 0", "Insert SimpleName: dialect(457) into MethodInvocation(466) at 0", "Insert SimpleName: quoteIdentifier(458) into MethodInvocation(466) at 1", "Insert SimpleName: buf(459) into MethodInvocation(466) at 2", "Insert MethodInvocation(465) into MethodInvocation(466) at 3", "Insert SimpleName: buf(468) into MethodInvocation(471) at 0", "Insert SimpleName: append(469) into MethodInvocation(471) at 1", "Insert StringLiteral: \" = \"(470) into MethodInvocation(471) at 2", "Insert SimpleName: dialect(473) into MethodInvocation(482) at 0", "Insert SimpleName: quoteIdentifier(474) into MethodInvocation(482) at 1", "Insert SimpleName: buf(475) into MethodInvocation(482) at 2", "Insert MethodInvocation(481) into MethodInvocation(482) at 3", "Insert SimpleName: k(446) into PostfixExpression: ++(447) at 0", "Insert MethodInvocation(453) into ExpressionStatement(454) at 0", "Insert SimpleName: lattice(460) into MethodInvocation(465) at 0", "Insert SimpleName: getColumn(461) into MethodInvocation(465) at 1", "Insert InfixExpression: +(464) into MethodInvocation(465) at 2", "Insert SimpleName: lattice(476) into MethodInvocation(481) at 0", "Insert SimpleName: getColumn(477) into MethodInvocation(481) at 1", "Insert InfixExpression: +(480) into MethodInvocation(481) at 2", "Insert SimpleName: buf(450) into MethodInvocation(453) at 0", "Insert SimpleName: append(451) into MethodInvocation(453) at 1", "Insert StringLiteral: \" AND \"(452) into MethodInvocation(453) at 2", "Insert QualifiedName: node.parent.startCol(462) into InfixExpression: +(464) at 0", "Insert QualifiedName: pair.source(463) into InfixExpression: +(464) at 1", "Insert QualifiedName: node.startCol(478) into InfixExpression: +(480) at 0", "Insert QualifiedName: pair.target(479) into InfixExpression: +(480) at 1", "Delete Modifier: private(29)", "Delete Modifier: final(30)", "Delete ParameterizedType: List<RelOptMaterialization>(35)", "Delete FieldDeclaration(41)"]}}, {"RelOptMaterialization_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: net.hydromatic.optiq.prepare.OptiqPrepareImpl to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: net.hydromatic.optiq.tools.Program to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: net.hydromatic.optiq.tools.Programs to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "UPDATE from org.eigenbase.relopt.hep.HepPlanner to org.eigenbase.rel.metadata.DefaultRelMetadataProvider", "operations": ["UPD QualifiedName: org.eigenbase.relopt.hep.HepPlanner from org.eigenbase.relopt.hep.HepPlanner to org.eigenbase.rel.metadata.DefaultRelMetadataProvider"]}, {"root": "UPDATE from org.eigenbase.relopt.hep.HepProgram to org.eigenbase.rel.rules.MergeProjectRule", "operations": ["UPD QualifiedName: org.eigenbase.relopt.hep.HepProgram from org.eigenbase.relopt.hep.HepProgram to org.eigenbase.rel.rules.MergeProjectRule"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS QualifiedName: OptiqPrepareImpl.DEBUG to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS QualifiedName: OptiqPrepareImpl.DEBUG to IfStatement at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from HepProgram to Program", "operations": ["UPD SimpleName: HepProgram from HepProgram to Program", "UPD SimpleType: HepProgram from HepProgram to Program"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelNode to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from planner to rel2", "operations": ["UPD SimpleName: planner from planner to rel2"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to MethodInvocation at 4", "INS NullLiteral to MethodInvocation at 2", "INS SimpleName: program to MethodInvocation at 0"]}, {"root": "UPDATE from HepProgram to Programs", "operations": ["UPD SimpleName: HepProgram from HepProgram to Programs"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: builder to MethodInvocation at 1", "MOV SimpleName: HepProgram to MethodInvocation at 0"]}, {"root": "UPDATE from builder to hep", "operations": ["UPD SimpleName: builder from builder to hep"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: MergeProjectRule.INSTANCE to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: of to MethodInvocation at 1"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 3", "operations": ["INS BooleanLiteral: false to MethodInvocation at 3"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 4", "operations": ["INS ClassInstanceCreation to MethodInvocation at 4", "INS SimpleType: DefaultRelMetadataProvider to ClassInstanceCreation at 0", "INS SimpleName: DefaultRelMetadataProvider to SimpleType: DefaultRelMetadataProvider at 0"]}, {"root": "UPDATE from rel to run", "operations": ["UPD SimpleName: rel from rel to run"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rel to MethodInvocation at 1", "MOV SimpleName: getCluster to MethodInvocation at 3"]}, {"root": "UPDATE from getCluster to rel", "operations": ["UPD SimpleName: getCluster from getCluster to rel"]}, {"root": "UPDATE from addRuleInstance to ImmutableList", "operations": ["UPD SimpleName: addRuleInstance from addRuleInstance to ImmutableList"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: PullUpProjectsAboveJoinRule.RIGHT_PROJECT to MethodInvocation at 2", "MOV SimpleName: addRuleInstance to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: PullUpProjectsAboveJoinRule.LEFT_PROJECT to MethodInvocation at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: RelOptCluster to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: RelOptCluster to SimpleType: RelOptCluster at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: cluster to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toRel to MethodInvocation at 1", "INS SimpleName: starRelOptTable to MethodInvocation at 0", "INS SimpleType: RelNode to VariableDeclarationStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: scan2 to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: cluster to MethodInvocation at 2", "INS SimpleName: getContext to MethodInvocation at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RelOptUtil to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: scan2 to MethodInvocation at 2", "operations": ["INS SimpleName: scan2 to MethodInvocation at 2"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: TableAccessRel", "DEL ClassInstanceCreation", "DEL SimpleName: starRelOptTable", "DEL SimpleName: TableAccessRel"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: addRuleInstance", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: build", "operations": ["DEL SimpleName: build"]}, {"root": "DEL SimpleType: HepPlanner", "operations": ["DEL SimpleType: HepPlanner", "DEL SimpleName: HepPlanner"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: HepPlanner", "DEL ClassInstanceCreation", "DEL SimpleName: getContext", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPlanner", "DEL SimpleName: program", "DEL SimpleType: HepPlanner", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: rel", "DEL ExpressionStatement", "DEL SimpleName: setRoot", "DEL SimpleName: planner", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: findBestExp", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: rel2", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: planner"]}]}}, {"RelOptMaterialization_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(845) at 5", "Insert ImportDeclaration(21) into CompilationUnit(845) at 10", "Insert ImportDeclaration(23) into CompilationUnit(845) at 11", "Insert ImportDeclaration(25) into CompilationUnit(845) at 12", "Insert ImportDeclaration(27) into CompilationUnit(845) at 13", "Update QualifiedName: org.eigenbase.relopt.hep.HepPlanner(6) to org.eigenbase.rel.metadata.DefaultRelMetadataProvider", "Update QualifiedName: org.eigenbase.relopt.hep.HepProgram(8) to org.eigenbase.rel.rules.MergeProjectRule", "Insert QualifiedName: net.hydromatic.optiq.prepare.OptiqPrepareImpl(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: net.hydromatic.optiq.tools.Program(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: net.hydromatic.optiq.tools.Programs(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: com.google.common.collect.ImmutableList(26) into ImportDeclaration(27) at 0", "Insert IfStatement(813) into Block(842) at 1", "Insert IfStatement(839) into Block(842) at 3", "Insert Modifier: final(781) into VariableDeclarationStatement(799) at 0", "Update SimpleType: HepProgram(758) to Program", "Insert QualifiedName: OptiqPrepareImpl.DEBUG(800) into IfStatement(813) at 0", "Insert Block(812) into IfStatement(813) at 1", "Move SimpleType: RelNode(808) into VariableDeclarationStatement(825) at 1", "Insert QualifiedName: OptiqPrepareImpl.DEBUG(826) into IfStatement(839) at 0", "Insert Block(838) into IfStatement(839) at 1", "Update SimpleName: HepProgram(757) to Program", "Move ExpressionStatement(805) into Block(812) at 0", "Update SimpleName: planner(776) to rel2", "Insert MethodInvocation(823) into VariableDeclarationFragment(824) at 1", "Move ExpressionStatement(825) into Block(838) at 0", "Update SimpleName: HepProgram(760) to Programs", "Move SimpleName: HepProgram(760) into MethodInvocation(797) at 0", "Update SimpleName: builder(761) to hep", "Move SimpleName: builder(761) into MethodInvocation(797) at 1", "Insert MethodInvocation(792) into MethodInvocation(797) at 2", "Insert BooleanLiteral: false(793) into MethodInvocation(797) at 3", "Insert ClassInstanceCreation(796) into MethodInvocation(797) at 4", "Insert SimpleName: program(818) into MethodInvocation(823) at 0", "Update SimpleName: rel(780) to run", "Move SimpleName: rel(780) into MethodInvocation(823) at 1", "Insert NullLiteral(820) into MethodInvocation(823) at 2", "Update SimpleName: getCluster(781) to rel", "Move SimpleName: getCluster(781) into MethodInvocation(823) at 3", "Insert NullLiteral(822) into MethodInvocation(823) at 4", "Update SimpleName: addRuleInstance(763) to ImmutableList", "Move SimpleName: addRuleInstance(763) into MethodInvocation(792) at 0", "Insert SimpleName: of(788) into MethodInvocation(792) at 1", "Move QualifiedName: PullUpProjectsAboveJoinRule.RIGHT_PROJECT(764) into MethodInvocation(792) at 2", "Move QualifiedName: PullUpProjectsAboveJoinRule.LEFT_PROJECT(767) into MethodInvocation(792) at 3", "Insert QualifiedName: MergeProjectRule.INSTANCE(791) into MethodInvocation(792) at 4", "Insert SimpleType: DefaultRelMetadataProvider(795) into ClassInstanceCreation(796) at 0", "Insert SimpleName: DefaultRelMetadataProvider(794) into SimpleType: DefaultRelMetadataProvider(795) at 0", "Insert VariableDeclarationStatement(253) into Block(278) at 1", "Insert VariableDeclarationStatement(266) into Block(278) at 2", "Insert Modifier: final(245) into VariableDeclarationStatement(253) at 0", "Insert SimpleType: RelOptCluster(247) into VariableDeclarationStatement(253) at 1", "Insert VariableDeclarationFragment(252) into VariableDeclarationStatement(253) at 2", "Insert Modifier: final(254) into VariableDeclarationStatement(266) at 0", "Insert SimpleType: RelNode(256) into VariableDeclarationStatement(266) at 1", "Insert VariableDeclarationFragment(265) into VariableDeclarationStatement(266) at 2", "Insert SimpleName: RelOptCluster(246) into SimpleType: RelOptCluster(247) at 0", "Insert SimpleName: cluster(248) into VariableDeclarationFragment(252) at 0", "Move MethodInvocation(243) into VariableDeclarationFragment(252) at 1", "Insert SimpleName: RelNode(255) into SimpleType: RelNode(256) at 0", "Insert SimpleName: scan2(257) into VariableDeclarationFragment(265) at 0", "Insert MethodInvocation(264) into VariableDeclarationFragment(265) at 1", "Insert SimpleName: scan2(269) into MethodInvocation(276) at 2", "Insert SimpleName: starRelOptTable(258) into MethodInvocation(264) at 0", "Insert SimpleName: toRel(259) into MethodInvocation(264) at 1", "Insert MethodInvocation(263) into MethodInvocation(264) at 2", "Insert SimpleName: RelOptUtil(260) into MethodInvocation(263) at 0", "Insert SimpleName: getContext(261) into MethodInvocation(263) at 1", "Insert SimpleName: cluster(262) into MethodInvocation(263) at 2", "Delete SimpleName: TableAccessRel(239)", "Delete SimpleType: TableAccessRel(240)", "Delete SimpleName: starRelOptTable(244)", "Delete ClassInstanceCreation(245)", "Delete MethodInvocation(762)", "Delete MethodInvocation(765)", "Delete SimpleName: addRuleInstance(766)", "Delete MethodInvocation(768)", "Delete SimpleName: build(769)", "Delete SimpleName: HepPlanner(774)", "Delete SimpleType: HepPlanner(775)", "Delete SimpleName: HepPlanner(777)", "Delete SimpleType: HepPlanner(778)", "Delete SimpleName: program(779)", "Delete MethodInvocation(782)", "Delete SimpleName: getPlanner(783)", "Delete MethodInvocation(784)", "Delete SimpleName: getContext(785)", "Delete MethodInvocation(786)", "Delete ClassInstanceCreation(787)", "Delete SimpleName: planner(790)", "Delete SimpleName: setRoot(791)", "Delete SimpleName: rel(792)", "Delete MethodInvocation(793)", "Delete ExpressionStatement(794)", "Delete Modifier: final(806)", "Delete SimpleName: rel2(809)", "Delete SimpleName: planner(810)", "Delete SimpleName: findBestExp(811)", "Delete MethodInvocation(812)", "Delete VariableDeclarationFragment(813)", "Delete VariableDeclarationStatement(814)"]}}, {"RelOptPlanner_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 19", "operations": ["INS SimpleType: RelOptLattice to MethodDeclaration at 1", "INS SimpleName: getLattice to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS TextElement: Retrieves a lattice, given its star table. to TagElement at 0", "INS SimpleName: RelOptTable to SimpleType: RelOptTable at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: interface at 19", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS SimpleType: RelOptTable to SingleVariableDeclaration at 0", "INS SimpleName: RelOptLattice to SimpleType: RelOptLattice at 0"]}, {"root": "UPDATE from  Either null or an externally defined context. to  Never null; either an externally defined context, or a dummy", "operations": ["UPD TextElement:  Either null or an externally defined context. from  Either null or an externally defined context. to  Never null; either an externally defined context, or a dummy"]}, {"root": "INS TextElement: context that returns null for each requested interface to TagElement: @return at 1", "operations": ["INS TextElement: context that returns null for each requested interface to TagElement: @return at 1"]}]}}, {"RelOptPlanner_diff": {"operations": ["Insert MethodDeclaration(282) into TypeDeclaration: interface(600) at 19", "Insert Javadoc(274) into MethodDeclaration(282) at 0", "Insert SimpleType: RelOptLattice(276) into MethodDeclaration(282) at 1", "Insert SimpleName: getLattice(277) into MethodDeclaration(282) at 2", "Insert SingleVariableDeclaration(281) into MethodDeclaration(282) at 3", "Insert TagElement(273) into Javadoc(274) at 0", "Insert SimpleName: RelOptLattice(275) into SimpleType: RelOptLattice(276) at 0", "Insert SimpleType: RelOptTable(279) into SingleVariableDeclaration(281) at 0", "Insert SimpleName: table(280) into SingleVariableDeclaration(281) at 1", "Update TextElement:  Either null or an externally defined context.(150) to  Never null; either an externally defined context, or a dummy", "Insert TextElement: context that returns null for each requested interface(151) into TagElement: @return(152) at 1", "Insert TextElement: Retrieves a lattice, given its star table.(272) into TagElement(273) at 0", "Insert SimpleName: RelOptTable(278) into SimpleType: RelOptTable(279) at 0"]}}, {"SubstitutionVisitor_cluster": {"actions": [{"root": "UPDATE from Based on to Based on ", "operations": ["UPD TextElement: Based on from Based on to Based on "]}, {"root": "UPDATE from . to . ", "operations": ["UPD TextElement: . from . to . "]}, {"root": "INS MemberRef to TagElement: @link at 0", "operations": ["INS SimpleName: RemoveTrivialProjectRule to MemberRef at 0", "INS SimpleName: strip to MemberRef at 1", "INS MemberRef to TagElement: @link at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: call to MethodInvocation at 0", "MOV SimpleName: getAggregation to MethodInvocation at 1"]}, {"root": "UPDATE from getAggregation to copy", "operations": ["UPD SimpleName: getAggregation from getAggregation to copy"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: getType", "DEL QualifiedName: call.name", "DEL MethodInvocation", "DEL SimpleName: call", "DEL SimpleName: call", "DEL MethodInvocation", "DEL SimpleName: isDistinct", "DEL MethodInvocation", "DEL SimpleType: AggregateCall", "DEL SimpleName: AggregateCall", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodRef", "operations": ["DEL SimpleName: RemoveTrivialProjectRule", "DEL MethodRef", "DEL SimpleName: strip", "DEL QualifiedName: org.eigenbase.rel.ProjectRelBase", "DEL SimpleType: org.eigenbase.rel.ProjectRelBase", "DEL MethodRefParameter"]}]}}, {"SubstitutionVisitor_diff": {"operations": ["Update TextElement: Based on(7154) to Based on ", "Update TextElement: .(7162) to . ", "Insert MemberRef(7147) into TagElement: @link(7148) at 0", "Insert SimpleName: RemoveTrivialProjectRule(7145) into MemberRef(7147) at 0", "Insert SimpleName: strip(7146) into MemberRef(7147) at 1", "Insert MethodInvocation(4251) into ReturnStatement(4252) at 0", "Move SimpleName: call(4244) into MethodInvocation(4251) at 0", "Update SimpleName: getAggregation(4245) to copy", "Move SimpleName: getAggregation(4245) into MethodInvocation(4251) at 1", "Move MethodInvocation(4256) into MethodInvocation(4251) at 2", "Delete SimpleName: AggregateCall(4242)", "Delete SimpleType: AggregateCall(4243)", "Delete MethodInvocation(4246)", "Delete SimpleName: call(4247)", "Delete SimpleName: isDistinct(4248)", "Delete MethodInvocation(4249)", "Delete SimpleName: call(4257)", "Delete SimpleName: getType(4258)", "Delete MethodInvocation(4259)", "Delete QualifiedName: call.name(4260)", "Delete ClassInstanceCreation(4261)", "Delete SimpleName: RemoveTrivialProjectRule(7155)", "Delete SimpleName: strip(7156)", "Delete QualifiedName: org.eigenbase.rel.ProjectRelBase(7157)", "Delete SimpleType: org.eigenbase.rel.ProjectRelBase(7158)", "Delete MethodRefParameter(7159)", "Delete MethodRef(7160)"]}}, {"RexBuilder_cluster": {"actions": [{"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: nullableArgs to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAggregation to MethodInvocation at 1", "MOV SimpleName: aggCall to MethodInvocation at 0"]}, {"root": "UPDATE from getAggregation to copy", "operations": ["UPD SimpleName: getAggregation from getAggregation to copy"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: getName", "DEL SimpleName: AggregateCall", "DEL MethodInvocation", "DEL SimpleName: aggCall", "DEL SimpleType: AggregateCall", "DEL SimpleName: nullableArgs", "DEL SimpleName: isDistinct", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: aggCall", "DEL SimpleName: aggCall"]}]}}, {"RexBuilder_diff": {"operations": ["Insert MethodInvocation(704) into Assignment: =(705) at 1", "Move SimpleName: aggCall(703) into MethodInvocation(704) at 0", "Update SimpleName: getAggregation(704) to copy", "Move SimpleName: getAggregation(704) into MethodInvocation(704) at 1", "Insert SimpleName: nullableArgs(703) into MethodInvocation(704) at 2", "Delete SimpleName: AggregateCall(701)", "Delete SimpleType: AggregateCall(702)", "Delete MethodInvocation(705)", "Delete SimpleName: aggCall(706)", "Delete SimpleName: isDistinct(707)", "Delete MethodInvocation(708)", "Delete SimpleName: nullableArgs(709)", "Delete SimpleName: aggCall(710)", "Delete SimpleName: getType(711)", "Delete MethodInvocation(712)", "Delete SimpleName: aggCall(713)", "Delete SimpleName: getName(714)", "Delete MethodInvocation(715)", "Delete ClassInstanceCreation(716)"]}}, {"SqlDialect_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 14", "operations": ["INS SimpleName: OPTIQ to EnumConstantDeclaration at 0", "INS StringLiteral: \"\\\"\" to EnumConstantDeclaration at 2", "INS EnumConstantDeclaration to EnumDeclaration at 14", "INS StringLiteral: \"Apache Optiq\" to EnumConstantDeclaration at 1"]}]}}, {"SqlDialect_diff": {"operations": ["Insert EnumConstantDeclaration(1386) into EnumDeclaration(1527) at 14", "Insert SimpleName: OPTIQ(1383) into EnumConstantDeclaration(1386) at 0", "Insert StringLiteral: \"Apache Optiq\"(1384) into EnumConstantDeclaration(1386) at 1", "Insert StringLiteral: \"\\\"\"(1385) into EnumConstantDeclaration(1386) at 2"]}}, {"RelFieldTrimmer_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleType: AggregateCall to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: aggCall to MethodInvocation at 0", "MOV SimpleName: getAggregation to MethodInvocation at 1"]}, {"root": "UPDATE from getAggregation to copy", "operations": ["UPD SimpleName: getAggregation from getAggregation to copy"]}, {"root": "DEL SimpleType: AggregateCall", "operations": ["DEL SimpleName: AggregateCall", "DEL SimpleType: AggregateCall"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MethodInvocation", "DEL SimpleName: aggCall", "DEL SimpleName: getName", "DEL MethodInvocation", "DEL SimpleName: aggCall", "DEL MethodInvocation", "DEL SimpleName: aggCall", "DEL MethodInvocation", "DEL SimpleName: isDistinct", "DEL SimpleName: getType", "DEL ClassInstanceCreation"]}]}}, {"RelFieldTrimmer_diff": {"operations": ["Move SimpleType: AggregateCall(2802) into VariableDeclarationStatement(2812) at 0", "Insert MethodInvocation(2810) into VariableDeclarationFragment(2811) at 1", "Move SimpleName: aggCall(2803) into MethodInvocation(2810) at 0", "Update SimpleName: getAggregation(2804) to copy", "Move SimpleName: getAggregation(2804) into MethodInvocation(2810) at 1", "Move MethodInvocation(2815) into MethodInvocation(2810) at 2", "Delete SimpleName: AggregateCall(2798)", "Delete SimpleType: AggregateCall(2799)", "Delete MethodInvocation(2805)", "Delete SimpleName: aggCall(2806)", "Delete SimpleName: isDistinct(2807)", "Delete MethodInvocation(2808)", "Delete SimpleName: aggCall(2816)", "Delete SimpleName: getType(2817)", "Delete MethodInvocation(2818)", "Delete SimpleName: aggCall(2819)", "Delete SimpleName: getName(2820)", "Delete MethodInvocation(2821)", "Delete ClassInstanceCreation(2822)"]}}, {"OptiqConnectionConfig_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 6", "operations": ["INS TagElement: @see to Javadoc at 0", "INS TextElement:   to TagElement: @see at 1", "INS SimpleName: CREATE_MATERIALIZATIONS to MemberRef at 1", "INS MethodDeclaration to TypeDeclaration: interface at 6", "INS SimpleName: createMaterializations to MethodDeclaration at 2", "INS MemberRef to TagElement: @see at 0", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:   to TagElement: @see at 1", "INS MemberRef to TagElement: @see at 0", "INS TagElement: @see to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: AUTO_TEMP to MemberRef at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @see to Javadoc at 0", "INS TextElement:   to TagElement: @see at 1", "INS MemberRef to TagElement: @see at 0", "INS SimpleName: MATERIALIZATIONS_ENABLED to MemberRef at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: MODEL to MemberRef at 1", "INS TextElement:   to TagElement: @see at 1", "INS MemberRef to TagElement: @see at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement:   to TagElement: @see at 1", "INS MemberRef to TagElement: @see at 0", "INS SimpleName: LEX to MemberRef at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS TagElement: @see to Javadoc at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MemberRef to TagElement: @see at 0", "INS TextElement:   to TagElement: @see at 1", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: QUOTING to MemberRef at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS MemberRef to TagElement: @see at 0", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: UNQUOTED_CASING to MemberRef at 1", "INS TextElement:   to TagElement: @see at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Casing to MethodDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: QUOTED_CASING to MemberRef at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS MemberRef to TagElement: @see at 0", "INS TextElement:   to TagElement: @see at 1", "INS TagElement: @see to Javadoc at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Casing to MethodDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: CASE_SENSITIVE to MemberRef at 1", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @see to Javadoc at 0", "INS TextElement:   to TagElement: @see at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0", "INS MemberRef to TagElement: @see at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MemberRef to TagElement: @see at 0", "INS TextElement:   to TagElement: @see at 1", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: SPARK to MemberRef at 1", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to MemberRef at 0"]}]}}, {"OptiqConnectionConfig_diff": {"operations": ["Insert MethodDeclaration(43) into TypeDeclaration: interface(112) at 6", "Insert Javadoc(22) into MethodDeclaration(25) at 0", "Insert Javadoc(31) into MethodDeclaration(34) at 0", "Insert Javadoc(40) into MethodDeclaration(43) at 0", "Insert PrimitiveType: boolean(41) into MethodDeclaration(43) at 1", "Insert SimpleName: createMaterializations(42) into MethodDeclaration(43) at 2", "Insert Javadoc(49) into MethodDeclaration(53) at 0", "Insert Javadoc(59) into MethodDeclaration(63) at 0", "Insert Javadoc(69) into MethodDeclaration(73) at 0", "Insert Javadoc(79) into MethodDeclaration(83) at 0", "Move SimpleType: Casing(40) into MethodDeclaration(83) at 1", "Insert Javadoc(89) into MethodDeclaration(93) at 0", "Move SimpleType: Casing(36) into MethodDeclaration(93) at 1", "Insert Javadoc(99) into MethodDeclaration(102) at 0", "Insert Javadoc(108) into MethodDeclaration(111) at 0", "Insert TagElement: @see(21) into Javadoc(22) at 0", "Insert TagElement: @see(30) into Javadoc(31) at 0", "Insert TagElement: @see(39) into Javadoc(40) at 0", "Insert TagElement: @see(48) into Javadoc(49) at 0", "Insert TagElement: @see(58) into Javadoc(59) at 0", "Insert TagElement: @see(68) into Javadoc(69) at 0", "Insert TagElement: @see(78) into Javadoc(79) at 0", "Insert TagElement: @see(88) into Javadoc(89) at 0", "Insert TagElement: @see(98) into Javadoc(99) at 0", "Insert TagElement: @see(107) into Javadoc(108) at 0", "Insert MemberRef(19) into TagElement: @see(21) at 0", "Insert TextElement:  (20) into TagElement: @see(21) at 1", "Insert MemberRef(28) into TagElement: @see(30) at 0", "Insert TextElement:  (29) into TagElement: @see(30) at 1", "Insert MemberRef(37) into TagElement: @see(39) at 0", "Insert TextElement:  (38) into TagElement: @see(39) at 1", "Insert MemberRef(46) into TagElement: @see(48) at 0", "Insert TextElement:  (47) into TagElement: @see(48) at 1", "Insert MemberRef(56) into TagElement: @see(58) at 0", "Insert TextElement:  (57) into TagElement: @see(58) at 1", "Insert MemberRef(66) into TagElement: @see(68) at 0", "Insert TextElement:  (67) into TagElement: @see(68) at 1", "Insert MemberRef(76) into TagElement: @see(78) at 0", "Insert TextElement:  (77) into TagElement: @see(78) at 1", "Insert MemberRef(86) into TagElement: @see(88) at 0", "Insert TextElement:  (87) into TagElement: @see(88) at 1", "Insert MemberRef(96) into TagElement: @see(98) at 0", "Insert TextElement:  (97) into TagElement: @see(98) at 1", "Insert MemberRef(105) into TagElement: @see(107) at 0", "Insert TextElement:  (106) into TagElement: @see(107) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(17) into MemberRef(19) at 0", "Insert SimpleName: AUTO_TEMP(18) into MemberRef(19) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(26) into MemberRef(28) at 0", "Insert SimpleName: MATERIALIZATIONS_ENABLED(27) into MemberRef(28) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(35) into MemberRef(37) at 0", "Insert SimpleName: CREATE_MATERIALIZATIONS(36) into MemberRef(37) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(44) into MemberRef(46) at 0", "Insert SimpleName: MODEL(45) into MemberRef(46) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(54) into MemberRef(56) at 0", "Insert SimpleName: LEX(55) into MemberRef(56) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(64) into MemberRef(66) at 0", "Insert SimpleName: QUOTING(65) into MemberRef(66) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(74) into MemberRef(76) at 0", "Insert SimpleName: UNQUOTED_CASING(75) into MemberRef(76) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(84) into MemberRef(86) at 0", "Insert SimpleName: QUOTED_CASING(85) into MemberRef(86) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(94) into MemberRef(96) at 0", "Insert SimpleName: CASE_SENSITIVE(95) into MemberRef(96) at 1", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(103) into MemberRef(105) at 0", "Insert SimpleName: SPARK(104) into MemberRef(105) at 1"]}}, {"OptiqConnectionProperty_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 6", "operations": ["INS SimpleName: CREATE_MATERIALIZATIONS to EnumConstantDeclaration at 1", "INS TextElement: Whether Optiq should create materializations.  to TagElement at 0", "INS StringLiteral: \"createMaterializations\" to EnumConstantDeclaration at 2", "INS QualifiedName: Type.BOOLEAN to EnumConstantDeclaration at 3", "INS EnumConstantDeclaration to EnumDeclaration at 6", "INS BooleanLiteral: true to EnumConstantDeclaration at 4", "INS Javadoc to EnumConstantDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from Whether materializations are enabled.  to Whether Optiq should use materializations. ", "operations": ["UPD TextElement: Whether materializations are enabled.  from Whether materializations are enabled.  to Whether Optiq should use materializations. "]}]}}, {"OptiqConnectionProperty_diff": {"operations": ["Insert EnumConstantDeclaration(42) into EnumDeclaration(295) at 6", "Insert Javadoc(37) into EnumConstantDeclaration(42) at 0", "Insert SimpleName: CREATE_MATERIALIZATIONS(38) into EnumConstantDeclaration(42) at 1", "Insert StringLiteral: \"createMaterializations\"(39) into EnumConstantDeclaration(42) at 2", "Insert QualifiedName: Type.BOOLEAN(40) into EnumConstantDeclaration(42) at 3", "Insert BooleanLiteral: true(41) into EnumConstantDeclaration(42) at 4", "Insert TagElement(36) into Javadoc(37) at 0", "Update TextElement: Whether materializations are enabled. (27) to Whether Optiq should use materializations. ", "Insert TextElement: Whether Optiq should create materializations. (35) into TagElement(36) at 0"]}}, {"StarTable_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: net.hydromatic.optiq.materialize.Lattice to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: com.google.common.base.Preconditions to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: Lattice to SimpleType: Lattice at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: lattice to VariableDeclarationFragment at 0", "INS SimpleType: Lattice to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: Lattice to SimpleType: Lattice at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: lattice to SingleVariableDeclaration at 1", "INS SimpleType: Lattice to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: lattice to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Lattice to SimpleType: Lattice at 0", "INS SimpleType: Lattice to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "UPDATE from List<Table> to ImmutableList<Table>", "operations": ["UPD ParameterizedType: List<Table> from List<Table> to ImmutableList<Table>"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: tables to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: builder to MethodInvocation at 2", "INS SimpleName: lattice to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 0", "INS SimpleName: addAll to MethodInvocation at 1"]}, {"root": "UPDATE from List to ImmutableList", "operations": ["UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList"]}, {"root": "MOVE from ParameterizedType: List<Table>", "operations": ["MOV SimpleType: Table to ParameterizedType: List<Table> at 1"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: lattice to FieldAccess at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: lattice to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2", "MOV FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from tables to lattice", "operations": ["UPD SimpleName: tables from tables to lattice"]}, {"root": "UPDATE from of to build", "operations": ["UPD SimpleName: of from of to build"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: of to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tables1 to MethodInvocation at 2", "MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: table to MethodInvocation at 2"]}, {"root": "UPDATE from tables1 to tables", "operations": ["UPD SimpleName: tables1 from tables1 to tables"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleType: Table to MethodInvocation at 1"]}, {"root": "DEL SimpleType: Table", "operations": ["DEL SimpleType: Table", "DEL SimpleName: Table"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL Modifier: final", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL ParameterizedType: ArrayList<Table>", "DEL ParameterizedType: List<Table>", "DEL SimpleType: ArrayList", "DEL SimpleName: tables", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: tables1", "DEL SimpleName: List", "DEL SimpleName: ArrayList"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: tables1", "DEL ReturnStatement", "DEL MethodInvocation"]}]}}, {"StarTable_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(418) at 3", "Insert ImportDeclaration(23) into CompilationUnit(418) at 11", "Insert QualifiedName: net.hydromatic.optiq.materialize.Lattice(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.common.base.Preconditions(22) into ImportDeclaration(23) at 0", "Insert FieldDeclaration(51) into TypeDeclaration: class(417) at 5", "Insert Modifier: public(45) into FieldDeclaration(51) at 0", "Insert Modifier: final(46) into FieldDeclaration(51) at 1", "Insert SimpleType: Lattice(48) into FieldDeclaration(51) at 2", "Insert VariableDeclarationFragment(50) into FieldDeclaration(51) at 3", "Update Modifier: public(63) to private", "Insert SingleVariableDeclaration(79) into MethodDeclaration(103) at 3", "Insert SingleVariableDeclaration(115) into MethodDeclaration(133) at 5", "Update Modifier: private(354) to public", "Insert SimpleName: Lattice(47) into SimpleType: Lattice(48) at 0", "Insert SimpleName: lattice(49) into VariableDeclarationFragment(50) at 0", "Insert SimpleType: Lattice(77) into SingleVariableDeclaration(79) at 0", "Insert SimpleName: lattice(78) into SingleVariableDeclaration(79) at 1", "Update ParameterizedType: List<Table>(69) to ImmutableList<Table>", "Insert ExpressionStatement(101) into Block(102) at 1", "Insert SimpleType: Lattice(113) into SingleVariableDeclaration(115) at 0", "Insert SimpleName: lattice(114) into SingleVariableDeclaration(115) at 1", "Insert ReturnStatement(299) into Block(300) at 0", "Insert SimpleName: Lattice(76) into SimpleType: Lattice(77) at 0", "Update SimpleType: List(66) to ImmutableList", "Move SimpleType: Table(259) into ParameterizedType: ImmutableList<Table>(84) at 1", "Insert Assignment: =(100) into ExpressionStatement(101) at 0", "Insert SimpleName: Lattice(112) into SimpleType: Lattice(113) at 0", "Insert MethodInvocation(298) into ReturnStatement(299) at 0", "Update SimpleName: List(65) to ImmutableList", "Insert FieldAccess(89) into Assignment: =(94) at 0", "Insert MethodInvocation(93) into Assignment: =(94) at 1", "Move FieldAccess(75) into Assignment: =(100) at 0", "Insert SimpleName: tables(99) into Assignment: =(100) at 1", "Update SimpleName: tables(101) to lattice", "Move MethodInvocation(79) into ClassInstanceCreation(130) at 2", "Insert SimpleName: of(283) into MethodInvocation(298) at 0", "Insert SimpleName: lattice(284) into MethodInvocation(298) at 1", "Insert MethodInvocation(297) into MethodInvocation(298) at 2", "Insert ThisExpression(87) into FieldAccess(89) at 0", "Insert SimpleName: lattice(88) into FieldAccess(89) at 1", "Insert SimpleName: Preconditions(90) into MethodInvocation(93) at 0", "Insert SimpleName: checkNotNull(91) into MethodInvocation(93) at 1", "Insert SimpleName: lattice(92) into MethodInvocation(93) at 2", "Insert MethodInvocation(295) into MethodInvocation(297) at 0", "Update SimpleName: of(276) to build", "Move SimpleName: of(276) into MethodInvocation(297) at 1", "Insert MethodInvocation(292) into MethodInvocation(295) at 0", "Move SimpleName: add(272) into MethodInvocation(295) at 1", "Move SimpleName: table(273) into MethodInvocation(295) at 2", "Insert MethodInvocation(289) into MethodInvocation(292) at 0", "Insert SimpleName: addAll(290) into MethodInvocation(292) at 1", "Update SimpleName: tables1(271) to tables", "Move SimpleName: tables1(271) into MethodInvocation(292) at 2", "Insert SimpleName: ImmutableList(285) into MethodInvocation(289) at 0", "Move SimpleType: Table(265) into MethodInvocation(289) at 1", "Insert SimpleName: builder(288) into MethodInvocation(289) at 2", "Delete SimpleName: Table(67)", "Delete SimpleType: Table(68)", "Delete SuperConstructorInvocation(72)", "Delete Modifier: final(255)", "Delete SimpleName: List(256)", "Delete SimpleType: List(257)", "Delete ParameterizedType: List<Table>(260)", "Delete SimpleName: tables1(261)", "Delete SimpleName: ArrayList(262)", "Delete SimpleType: ArrayList(263)", "Delete ParameterizedType: ArrayList<Table>(266)", "Delete SimpleName: tables(267)", "Delete ClassInstanceCreation(268)", "Delete VariableDeclarationFragment(269)", "Delete VariableDeclarationStatement(270)", "Delete MethodInvocation(274)", "Delete ExpressionStatement(275)", "Delete SimpleName: tables1(277)", "Delete MethodInvocation(278)", "Delete ReturnStatement(279)"]}}, {"OptiqConnectionImpl_cluster": {"actions": [{"root": "UPDATE from net.hydromatic.optiq.config.OptiqConnectionProperty to net.hydromatic.optiq.config.OptiqConnectionConfigImpl", "operations": ["UPD QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty from net.hydromatic.optiq.config.OptiqConnectionProperty to net.hydromatic.optiq.config.OptiqConnectionConfigImpl"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: net.hydromatic.optiq.config.Lex", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodDeclaration", "DEL TypeLiteral", "DEL MethodDeclaration", "DEL SimpleName: getEnum", "DEL SimpleName: Lex", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: properties", "DEL MethodDeclaration", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: materializationsEnabled", "DEL Block", "DEL SimpleType: String", "DEL SuperConstructorInvocation", "DEL SimpleName: wrap", "DEL Javadoc", "DEL SimpleName: Casing", "DEL ReturnStatement", "DEL MethodInvocation", "DEL FieldAccess", "DEL Modifier: public", "DEL ReturnStatement", "DEL TextElement: Implementation of ", "DEL Modifier: public", "DEL SimpleName: OptiqConnectionConfigImpl", "DEL Block", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL Block", "DEL SimpleType: Lex", "DEL MethodInvocation", "DEL SimpleName: quoting", "DEL Modifier: public", "DEL SimpleName: caseSensitive", "DEL SimpleName: autoTemp", "DEL Modifier: static", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL SimpleName: Properties", "DEL SimpleName: quotedCasing", "DEL FieldAccess", "DEL TypeLiteral", "DEL PrimitiveType: boolean", "DEL SimpleName: wrap", "DEL SimpleName: properties", "DEL SimpleName: wrap", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: properties", "DEL SimpleName: properties", "DEL SimpleName: getBoolean", "DEL TagElement", "DEL Modifier: public", "DEL SimpleType: Casing", "DEL SimpleName: properties", "DEL SimpleType: Casing", "DEL SimpleType: OptiqConnectionConfig", "DEL SimpleName: getEnum", "DEL MethodInvocation", "DEL SimpleName: properties", "DEL SimpleType: Properties", "DEL MethodInvocation", "DEL QualifiedName: OptiqConnectionProperty.CASE_SENSITIVE", "DEL SimpleName: properties", "DEL TagElement: @link", "DEL MethodInvocation", "DEL TextElement: . ", "DEL SimpleName: lex", "DEL SimpleName: wrap", "DEL SimpleName: getBoolean", "DEL ReturnStatement", "DEL QualifiedName: OptiqConnectionProperty.QUOTED_CASING", "DEL SimpleName: wrap", "DEL TypeLiteral", "DEL SimpleType: Casing", "DEL Block", "DEL FieldAccess", "DEL SimpleName: Casing", "DEL Modifier: public", "DEL SimpleName: Casing", "DEL QualifiedName: OptiqConnectionProperty.AUTO_TEMP", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getBoolean", "DEL SimpleName: lex", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Lex", "DEL SimpleName: getEnum", "DEL SimpleName: ConnectionConfigImpl", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleType: Casing", "DEL MethodInvocation", "DEL SimpleName: wrap", "DEL QualifiedName: OptiqConnectionProperty.MODEL", "DEL SimpleName: wrap", "DEL QualifiedName: OptiqConnectionProperty.QUOTING", "DEL Block", "DEL SimpleName: lex", "DEL ReturnStatement", "DEL SimpleName: unquotedCasing", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL QualifiedName: OptiqConnectionProperty.MATERIALIZATIONS_ENABLED", "DEL SimpleName: wrap", "DEL Block", "DEL SimpleName: caseSensitive", "DEL QualifiedName: OptiqConnectionProperty.LEX", "DEL SimpleName: getString", "DEL MethodInvocation", "DEL ReturnStatement", "DEL QualifiedName: OptiqConnectionProperty.UNQUOTED_CASING", "DEL SimpleName: OptiqConnectionConfig", "DEL SimpleName: getBoolean", "DEL MethodDeclaration", "DEL SimpleType: Quoting", "DEL SimpleName: Quoting", "DEL SimpleName: OptiqConnectionConfigImpl", "DEL SimpleName: properties", "DEL ReturnStatement", "DEL SimpleName: quotedCasing", "DEL SimpleName: lex", "DEL SimpleName: wrap", "DEL SimpleName: OptiqConnectionConfig", "DEL QualifiedName: OptiqConnectionProperty.SPARK", "DEL SimpleName: properties", "DEL SimpleType: ConnectionConfigImpl", "DEL SimpleName: quoting", "DEL SimpleName: unquotedCasing", "DEL MethodDeclaration", "DEL Block", "DEL Block", "DEL SimpleType: Quoting", "DEL ReturnStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: model", "DEL Modifier: public", "DEL SimpleName: getEnum", "DEL SimpleName: lex", "DEL MethodInvocation", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: properties", "DEL MethodInvocation", "DEL SimpleName: Casing", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: Quoting", "DEL MethodInvocation", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: spark", "DEL MethodInvocation", "DEL SimpleName: properties", "DEL SimpleType: Lex", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL MethodInvocation"]}]}}, {"OptiqConnectionImpl_diff": {"operations": ["Update QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(18) to net.hydromatic.optiq.config.OptiqConnectionConfigImpl", "Delete QualifiedName: net.hydromatic.optiq.config.Lex(14)", "Delete ImportDeclaration(15)", "Delete TextElement: Implementation of (1355)", "Delete SimpleName: OptiqConnectionConfig(1356)", "Delete TagElement: @link(1357)", "Delete TextElement: . (1358)", "Delete TagElement(1359)", "Delete Javadoc(1360)", "Delete Modifier: private(1361)", "Delete Modifier: static(1362)", "Delete SimpleName: OptiqConnectionConfigImpl(1363)", "Delete SimpleName: ConnectionConfigImpl(1364)", "Delete SimpleType: ConnectionConfigImpl(1365)", "Delete SimpleName: OptiqConnectionConfig(1366)", "Delete SimpleType: OptiqConnectionConfig(1367)", "Delete Modifier: public(1368)", "Delete SimpleName: OptiqConnectionConfigImpl(1369)", "Delete SimpleName: Properties(1370)", "Delete SimpleType: Properties(1371)", "Delete SimpleName: properties(1372)", "Delete SingleVariableDeclaration(1373)", "Delete SimpleName: properties(1374)", "Delete SuperConstructorInvocation(1375)", "Delete Block(1376)", "Delete MethodDeclaration(1377)", "Delete Modifier: public(1378)", "Delete PrimitiveType: boolean(1379)", "Delete SimpleName: autoTemp(1380)", "Delete QualifiedName: OptiqConnectionProperty.AUTO_TEMP(1381)", "Delete SimpleName: wrap(1382)", "Delete SimpleName: properties(1383)", "Delete MethodInvocation(1384)", "Delete SimpleName: getBoolean(1385)", "Delete MethodInvocation(1386)", "Delete ReturnStatement(1387)", "Delete Block(1388)", "Delete MethodDeclaration(1389)", "Delete Modifier: public(1390)", "Delete PrimitiveType: boolean(1391)", "Delete SimpleName: materializationsEnabled(1392)", "Delete QualifiedName: OptiqConnectionProperty.MATERIALIZATIONS_ENABLED(1393)", "Delete SimpleName: wrap(1394)", "Delete SimpleName: properties(1395)", "Delete MethodInvocation(1396)", "Delete SimpleName: getBoolean(1397)", "Delete MethodInvocation(1398)", "Delete ReturnStatement(1399)", "Delete Block(1400)", "Delete MethodDeclaration(1401)", "Delete Modifier: public(1402)", "Delete SimpleName: String(1403)", "Delete SimpleType: String(1404)", "Delete SimpleName: model(1405)", "Delete QualifiedName: OptiqConnectionProperty.MODEL(1406)", "Delete SimpleName: wrap(1407)", "Delete SimpleName: properties(1408)", "Delete MethodInvocation(1409)", "Delete SimpleName: getString(1410)", "Delete MethodInvocation(1411)", "Delete ReturnStatement(1412)", "Delete Block(1413)", "Delete MethodDeclaration(1414)", "Delete Modifier: public(1415)", "Delete SimpleName: Lex(1416)", "Delete SimpleType: Lex(1417)", "Delete SimpleName: lex(1418)", "Delete QualifiedName: OptiqConnectionProperty.LEX(1419)", "Delete SimpleName: wrap(1420)", "Delete SimpleName: properties(1421)", "Delete MethodInvocation(1422)", "Delete SimpleName: getEnum(1423)", "Delete SimpleName: Lex(1424)", "Delete SimpleType: Lex(1425)", "Delete TypeLiteral(1426)", "Delete MethodInvocation(1427)", "Delete ReturnStatement(1428)", "Delete Block(1429)", "Delete MethodDeclaration(1430)", "Delete Modifier: public(1431)", "Delete SimpleName: Quoting(1432)", "Delete SimpleType: Quoting(1433)", "Delete SimpleName: quoting(1434)", "Delete QualifiedName: OptiqConnectionProperty.QUOTING(1435)", "Delete SimpleName: wrap(1436)", "Delete SimpleName: properties(1437)", "Delete MethodInvocation(1438)", "Delete SimpleName: getEnum(1439)", "Delete SimpleName: Quoting(1440)", "Delete SimpleType: Quoting(1441)", "Delete TypeLiteral(1442)", "Delete SimpleName: lex(1443)", "Delete MethodInvocation(1444)", "Delete SimpleName: quoting(1445)", "Delete FieldAccess(1446)", "Delete MethodInvocation(1447)", "Delete ReturnStatement(1448)", "Delete Block(1449)", "Delete MethodDeclaration(1450)", "Delete Modifier: public(1451)", "Delete SimpleName: Casing(1452)", "Delete SimpleType: Casing(1453)", "Delete SimpleName: unquotedCasing(1454)", "Delete QualifiedName: OptiqConnectionProperty.UNQUOTED_CASING(1455)", "Delete SimpleName: wrap(1456)", "Delete SimpleName: properties(1457)", "Delete MethodInvocation(1458)", "Delete SimpleName: getEnum(1459)", "Delete SimpleName: Casing(1460)", "Delete SimpleType: Casing(1461)", "Delete TypeLiteral(1462)", "Delete SimpleName: lex(1463)", "Delete MethodInvocation(1464)", "Delete SimpleName: unquotedCasing(1465)", "Delete FieldAccess(1466)", "Delete MethodInvocation(1467)", "Delete ReturnStatement(1468)", "Delete Block(1469)", "Delete MethodDeclaration(1470)", "Delete Modifier: public(1471)", "Delete SimpleName: Casing(1472)", "Delete SimpleType: Casing(1473)", "Delete SimpleName: quotedCasing(1474)", "Delete QualifiedName: OptiqConnectionProperty.QUOTED_CASING(1475)", "Delete SimpleName: wrap(1476)", "Delete SimpleName: properties(1477)", "Delete MethodInvocation(1478)", "Delete SimpleName: getEnum(1479)", "Delete SimpleName: Casing(1480)", "Delete SimpleType: Casing(1481)", "Delete TypeLiteral(1482)", "Delete SimpleName: lex(1483)", "Delete MethodInvocation(1484)", "Delete SimpleName: quotedCasing(1485)", "Delete FieldAccess(1486)", "Delete MethodInvocation(1487)", "Delete ReturnStatement(1488)", "Delete Block(1489)", "Delete MethodDeclaration(1490)", "Delete Modifier: public(1491)", "Delete PrimitiveType: boolean(1492)", "Delete SimpleName: caseSensitive(1493)", "Delete QualifiedName: OptiqConnectionProperty.CASE_SENSITIVE(1494)", "Delete SimpleName: wrap(1495)", "Delete SimpleName: properties(1496)", "Delete MethodInvocation(1497)", "Delete SimpleName: getBoolean(1498)", "Delete SimpleName: lex(1499)", "Delete MethodInvocation(1500)", "Delete SimpleName: caseSensitive(1501)", "Delete FieldAccess(1502)", "Delete MethodInvocation(1503)", "Delete ReturnStatement(1504)", "Delete Block(1505)", "Delete MethodDeclaration(1506)", "Delete Modifier: public(1507)", "Delete PrimitiveType: boolean(1508)", "Delete SimpleName: spark(1509)", "Delete QualifiedName: OptiqConnectionProperty.SPARK(1510)", "Delete SimpleName: wrap(1511)", "Delete SimpleName: properties(1512)", "Delete MethodInvocation(1513)", "Delete SimpleName: getBoolean(1514)", "Delete MethodInvocation(1515)", "Delete ReturnStatement(1516)", "Delete Block(1517)", "Delete MethodDeclaration(1518)", "Delete TypeDeclaration: class(1519)"]}}, {"Lattice_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: org.eigenbase.sql.SqlJoin to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.eigenbase.sql.SqlKind to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.eigenbase.sql.SqlNode to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.eigenbase.sql.SqlSelect to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.eigenbase.sql.SqlUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: org.eigenbase.sql.validate.SqlValidatorUtil to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS ParameterizedType: List<String> to ParameterizedType: ImmutableList<List<String>> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<List<String>> at 0", "INS ParameterizedType: ImmutableList<List<String>> to FieldDeclaration at 2", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS SimpleName: SqlJoin to SimpleType: SqlJoin at 0", "INS QualifiedName: SqlKind.AS to InfixExpression: == at 1", "INS SimpleName: aliases to MethodInvocation at 0", "INS SimpleName: current to SingleVariableDeclaration at 1", "INS SimpleName: join to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS SimpleName: getRight to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: join to MethodInvocation at 0", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0", "INS IfStatement to Block at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: join to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS PrefixExpression: - to MethodInvocation at 3", "INS SimpleName: add to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: from to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS NullLiteral to InfixExpression: == at 1", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: stripAs to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: aliases to MethodInvocation at 2", "INS SimpleName: SqlUtil to MethodInvocation at 0", "INS SimpleType: SqlJoin to CastExpression at 0", "INS SimpleName: aliases to SingleVariableDeclaration at 1", "INS SimpleName: SqlJoin to SimpleType: SqlJoin at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: aliases to MethodInvocation at 2", "INS SimpleType: SqlJoin to VariableDeclarationStatement at 0", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: SqlValidatorUtil to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: from to InstanceofExpression at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: from to SingleVariableDeclaration at 1", "INS SimpleName: populateAliases to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: SqlValidatorUtil to MethodInvocation at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: current to InfixExpression: == at 0", "INS SimpleName: from to MethodInvocation at 2", "INS PrefixExpression: - to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: current to MethodInvocation at 2", "INS SimpleName: populateAliases to MethodDeclaration at 3", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: getAlias to MethodInvocation at 1", "INS SimpleName: from to MethodInvocation at 0", "INS SimpleType: SqlJoin to InstanceofExpression at 1", "INS IfStatement to IfStatement at 2", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: current to Assignment: = at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: populateAliases to MethodInvocation at 0", "INS SimpleName: aliases to MethodInvocation at 2", "INS Block to MethodDeclaration at 7", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: populateAliases to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: SqlNode to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: SqlJoin to SimpleType: SqlJoin at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS MethodInvocation to InfixExpression: == at 0", "INS NullLiteral to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getLeft to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: from to MethodInvocation at 2", "INS SimpleName: getAlias to MethodInvocation at 1", "INS SimpleName: from to CastExpression at 1", "INS SimpleName: getKind to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: getColumn to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: columns to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: i to MethodInvocation at 2", "INS ParameterizedType: List<String> to MethodDeclaration at 1", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to EnhancedForStatement at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getRowType to MethodInvocation at 1", "INS SimpleType: Node to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 4", "INS VariableDeclarationStatement to Block at 2", "INS EnhancedForStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Node to SimpleType: Node at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS SimpleName: columns to Assignment: = at 0", "INS SimpleName: of to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<List<String>> at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getFieldNames to MethodInvocation at 1", "INS QualifiedName: node.scan to InfixExpression: != at 0", "INS SimpleName: nodes to EnhancedForStatement at 1", "INS SimpleName: build to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ParameterizedType: List<String> to ParameterizedType: ImmutableList.Builder<List<String>> at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParameterizedType: ImmutableList.Builder<List<String>> to VariableDeclarationStatement at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS QualifiedName: node.alias to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 3", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: name to MethodInvocation at 3", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS QualifiedName: node.scan to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: int to FieldDeclaration at 2", "INS SimpleName: startCol to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: endCol to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: alias to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ForStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: aliases to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getFrom to MethodInvocation at 1", "INS SimpleName: aliases to MethodInvocation at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: SqlSelect to SimpleType: SqlSelect at 0", "INS SimpleName: populateAliases to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 3", "INS ExpressionStatement to Block at 5", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleType: SqlSelect to CastExpression at 0", "INS MethodInvocation to MethodInvocation at 1", "INS QualifiedName: parsed.sqlNode to CastExpression at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 12", "operations": ["INS SimpleName: previousColumn to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 12", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: startCol to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: endCol to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: alias to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: StarTable to MethodInvocation at 0", "INS ThisExpression to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: tables to MethodInvocation at 3", "INS SimpleName: of to MethodInvocation at 1"]}, {"root": "INS AssertStatement to Block at 4", "operations": ["INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS AssertStatement to Block at 4", "INS InfixExpression: >= to AssertStatement at 0", "INS SimpleName: startCol to InfixExpression: >= at 0"]}, {"root": "INS AssertStatement to Block at 5", "operations": ["INS SimpleName: endCol to InfixExpression: > at 0", "INS SimpleName: startCol to InfixExpression: > at 1", "INS AssertStatement to Block at 5", "INS InfixExpression: > to AssertStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: startCol to Assignment: = at 1", "INS SimpleName: startCol to FieldAccess at 1", "INS ExpressionStatement to Block at 6"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: endCol to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: endCol to Assignment: = at 1", "INS ExpressionStatement to Block at 7"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: alias to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 8", "INS SimpleName: alias to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: previousColumn to InfixExpression: + at 0", "INS SimpleName: getFieldCount to MethodInvocation at 1", "INS SimpleName: relNode to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: getRowType to MethodInvocation at 1", "INS SimpleName: column to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: column to Assignment: = at 1", "INS SimpleName: previousColumn to Assignment: = at 0", "INS ExpressionStatement to Block at 7", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS SimpleName: previousColumn to ClassInstanceCreation at 4", "operations": ["INS SimpleName: previousColumn to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: column to ClassInstanceCreation at 5", "operations": ["INS SimpleName: column to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS SimpleName: nodes to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 6", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: aliases to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1"]}, {"root": "INS SimpleName: previousColumn to ClassInstanceCreation at 4", "operations": ["INS SimpleName: previousColumn to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: column to ClassInstanceCreation at 5", "operations": ["INS SimpleName: column to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 6", "INS SimpleName: nodes to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: aliases to MethodInvocation at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: StarTable", "DEL SimpleName: StarTable", "DEL ClassInstanceCreation", "DEL SimpleName: tables"]}]}}, {"Lattice_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(1295) at 11", "Insert ImportDeclaration(25) into CompilationUnit(1295) at 12", "Insert ImportDeclaration(27) into CompilationUnit(1295) at 13", "Insert ImportDeclaration(29) into CompilationUnit(1295) at 14", "Insert ImportDeclaration(31) into CompilationUnit(1295) at 15", "Insert ImportDeclaration(33) into CompilationUnit(1295) at 16", "Insert QualifiedName: org.eigenbase.sql.SqlJoin(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.eigenbase.sql.SqlKind(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.eigenbase.sql.SqlNode(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.eigenbase.sql.SqlSelect(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.eigenbase.sql.SqlUtil(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.eigenbase.sql.validate.SqlValidatorUtil(32) into ImportDeclaration(33) at 0", "Insert FieldDeclaration(70) into TypeDeclaration: class(1294) at 4", "Insert MethodDeclaration(656) into TypeDeclaration: class(1294) at 7", "Insert MethodDeclaration(1046) into TypeDeclaration: class(1294) at 12", "Insert Modifier: public(58) into FieldDeclaration(70) at 0", "Insert Modifier: final(59) into FieldDeclaration(70) at 1", "Insert ParameterizedType: ImmutableList<List<String>>(67) into FieldDeclaration(70) at 2", "Insert VariableDeclarationFragment(69) into FieldDeclaration(70) at 3", "Insert Block(184) into MethodDeclaration(185) at 3", "Insert Modifier: private(564) into MethodDeclaration(656) at 0", "Insert Modifier: static(565) into MethodDeclaration(656) at 1", "Insert PrimitiveType: void(566) into MethodDeclaration(656) at 2", "Insert SimpleName: populateAliases(567) into MethodDeclaration(656) at 3", "Insert SingleVariableDeclaration(571) into MethodDeclaration(656) at 4", "Insert SingleVariableDeclaration(578) into MethodDeclaration(656) at 5", "Insert SingleVariableDeclaration(582) into MethodDeclaration(656) at 6", "Insert Block(655) into MethodDeclaration(656) at 7", "Insert Modifier: public(1030) into MethodDeclaration(1046) at 0", "Insert ParameterizedType: List<String>(1035) into MethodDeclaration(1046) at 1", "Insert SimpleName: getColumn(1036) into MethodDeclaration(1046) at 2", "Insert SingleVariableDeclaration(1039) into MethodDeclaration(1046) at 3", "Insert Block(1045) into MethodDeclaration(1046) at 4", "Insert FieldDeclaration(1085) into TypeDeclaration: class(1193) at 7", "Insert FieldDeclaration(1091) into TypeDeclaration: class(1193) at 8", "Insert FieldDeclaration(1098) into TypeDeclaration: class(1193) at 9", "Insert SimpleType: ImmutableList(61) into ParameterizedType: ImmutableList<List<String>>(67) at 0", "Insert ParameterizedType: List<String>(66) into ParameterizedType: ImmutableList<List<String>>(67) at 1", "Insert SimpleName: columns(68) into VariableDeclarationFragment(69) at 0", "Move ExpressionStatement(63) into Block(184) at 0", "Move ForStatement(105) into Block(184) at 1", "Insert VariableDeclarationStatement(145) into Block(184) at 2", "Insert EnhancedForStatement(177) into Block(184) at 3", "Insert ExpressionStatement(183) into Block(184) at 4", "Insert VariableDeclarationStatement(257) into Block(562) at 4", "Insert ExpressionStatement(269) into Block(562) at 5", "Insert VariableDeclarationStatement(409) into Block(562) at 12", "Insert SimpleType: SqlNode(569) into SingleVariableDeclaration(571) at 0", "Insert SimpleName: from(570) into SingleVariableDeclaration(571) at 1", "Insert ParameterizedType: List<String>(576) into SingleVariableDeclaration(578) at 0", "Insert SimpleName: aliases(577) into SingleVariableDeclaration(578) at 1", "Insert SimpleType: String(580) into SingleVariableDeclaration(582) at 0", "Insert SimpleName: current(581) into SingleVariableDeclaration(582) at 1", "Insert IfStatement(654) into Block(655) at 0", "Insert SimpleType: List(1032) into ParameterizedType: List<String>(1035) at 0", "Insert SimpleType: String(1034) into ParameterizedType: List<String>(1035) at 1", "Insert PrimitiveType: int(1037) into SingleVariableDeclaration(1039) at 0", "Insert SimpleName: i(1038) into SingleVariableDeclaration(1039) at 1", "Insert ReturnStatement(1044) into Block(1045) at 0", "Insert Modifier: public(1080) into FieldDeclaration(1085) at 0", "Insert Modifier: final(1081) into FieldDeclaration(1085) at 1", "Insert PrimitiveType: int(1082) into FieldDeclaration(1085) at 2", "Insert VariableDeclarationFragment(1084) into FieldDeclaration(1085) at 3", "Insert Modifier: public(1086) into FieldDeclaration(1091) at 0", "Insert Modifier: final(1087) into FieldDeclaration(1091) at 1", "Insert PrimitiveType: int(1088) into FieldDeclaration(1091) at 2", "Insert VariableDeclarationFragment(1090) into FieldDeclaration(1091) at 3", "Insert Modifier: public(1092) into FieldDeclaration(1098) at 0", "Insert Modifier: final(1093) into FieldDeclaration(1098) at 1", "Insert SimpleType: String(1095) into FieldDeclaration(1098) at 2", "Insert VariableDeclarationFragment(1097) into FieldDeclaration(1098) at 3", "Insert SingleVariableDeclaration(1118) into MethodDeclaration(1192) at 5", "Insert SingleVariableDeclaration(1121) into MethodDeclaration(1192) at 6", "Insert SingleVariableDeclaration(1125) into MethodDeclaration(1192) at 7", "Insert SimpleName: ImmutableList(60) into SimpleType: ImmutableList(61) at 0", "Insert SimpleType: List(63) into ParameterizedType: List<String>(66) at 0", "Insert SimpleType: String(65) into ParameterizedType: List<String>(66) at 1", "Insert Modifier: final(131) into VariableDeclarationStatement(145) at 0", "Insert ParameterizedType: ImmutableList.Builder<List<String>>(139) into VariableDeclarationStatement(145) at 1", "Insert VariableDeclarationFragment(144) into VariableDeclarationStatement(145) at 2", "Insert SingleVariableDeclaration(149) into EnhancedForStatement(177) at 0", "Insert SimpleName: nodes(150) into EnhancedForStatement(177) at 1", "Insert Block(176) into EnhancedForStatement(177) at 2", "Insert Assignment: =(182) into ExpressionStatement(183) at 0", "Insert ParameterizedType: List<String>(251) into VariableDeclarationStatement(257) at 0", "Insert VariableDeclarationFragment(256) into VariableDeclarationStatement(257) at 1", "Insert MethodInvocation(268) into ExpressionStatement(269) at 0", "Insert PrimitiveType: int(405) into VariableDeclarationStatement(409) at 0", "Insert VariableDeclarationFragment(408) into VariableDeclarationStatement(409) at 1", "Insert SimpleName: SqlNode(568) into SimpleType: SqlNode(569) at 0", "Insert SimpleType: List(573) into ParameterizedType: List<String>(576) at 0", "Insert SimpleType: String(575) into ParameterizedType: List<String>(576) at 1", "Insert SimpleName: String(579) into SimpleType: String(580) at 0", "Insert InstanceofExpression(586) into IfStatement(654) at 0", "Insert Block(612) into IfStatement(654) at 1", "Insert IfStatement(653) into IfStatement(654) at 2", "Insert MethodInvocation(1026) into ReturnStatement(1027) at 0", "Insert SimpleName: List(1031) into SimpleType: List(1032) at 0", "Insert SimpleName: String(1033) into SimpleType: String(1034) at 0", "Insert MethodInvocation(1043) into ReturnStatement(1044) at 0", "Insert SimpleName: startCol(1083) into VariableDeclarationFragment(1084) at 0", "Insert SimpleName: endCol(1089) into VariableDeclarationFragment(1090) at 0", "Insert SimpleName: String(1094) into SimpleType: String(1095) at 0", "Insert SimpleName: alias(1096) into VariableDeclarationFragment(1097) at 0", "Insert PrimitiveType: int(1116) into SingleVariableDeclaration(1118) at 0", "Insert SimpleName: startCol(1117) into SingleVariableDeclaration(1118) at 1", "Insert PrimitiveType: int(1119) into SingleVariableDeclaration(1121) at 0", "Insert SimpleName: endCol(1120) into SingleVariableDeclaration(1121) at 1", "Insert SimpleType: String(1123) into SingleVariableDeclaration(1125) at 0", "Insert SimpleName: alias(1124) into SingleVariableDeclaration(1125) at 1", "Insert AssertStatement(1168) into Block(1191) at 4", "Insert AssertStatement(1172) into Block(1191) at 5", "Insert ExpressionStatement(1178) into Block(1191) at 6", "Insert ExpressionStatement(1184) into Block(1191) at 7", "Insert ExpressionStatement(1190) into Block(1191) at 8", "Insert SimpleName: List(62) into SimpleType: List(63) at 0", "Insert SimpleName: String(64) into SimpleType: String(65) at 0", "Insert SimpleType: ImmutableList.Builder(133) into ParameterizedType: ImmutableList.Builder<List<String>>(139) at 0", "Insert ParameterizedType: List<String>(138) into ParameterizedType: ImmutableList.Builder<List<String>>(139) at 1", "Insert SimpleName: builder(140) into VariableDeclarationFragment(144) at 0", "Insert MethodInvocation(143) into VariableDeclarationFragment(144) at 1", "Insert SimpleType: Node(147) into SingleVariableDeclaration(149) at 0", "Insert SimpleName: node(148) into SingleVariableDeclaration(149) at 1", "Insert IfStatement(175) into Block(176) at 0", "Insert SimpleName: columns(178) into Assignment: =(182) at 0", "Insert MethodInvocation(181) into Assignment: =(182) at 1", "Insert SimpleType: List(248) into ParameterizedType: List<String>(251) at 0", "Insert SimpleType: String(250) into ParameterizedType: List<String>(251) at 1", "Insert SimpleName: aliases(252) into VariableDeclarationFragment(256) at 0", "Insert MethodInvocation(255) into VariableDeclarationFragment(256) at 1", "Insert SimpleName: populateAliases(258) into MethodInvocation(268) at 0", "Insert MethodInvocation(265) into MethodInvocation(268) at 1", "Insert SimpleName: aliases(266) into MethodInvocation(268) at 2", "Insert NullLiteral(267) into MethodInvocation(268) at 3", "Insert SimpleName: previousColumn(406) into VariableDeclarationFragment(408) at 0", "Insert NumberLiteral: 0(407) into VariableDeclarationFragment(408) at 1", "Insert VariableDeclarationStatement(447) into Block(555) at 2", "Insert ExpressionStatement(554) into Block(555) at 7", "Insert SimpleName: List(572) into SimpleType: List(573) at 0", "Insert SimpleName: String(574) into SimpleType: String(575) at 0", "Insert SimpleName: from(583) into InstanceofExpression(586) at 0", "Insert SimpleType: SqlJoin(585) into InstanceofExpression(586) at 1", "Insert VariableDeclarationStatement(595) into Block(612) at 0", "Insert ExpressionStatement(603) into Block(612) at 1", "Insert ExpressionStatement(611) into Block(612) at 2", "Insert InfixExpression: ==(617) into IfStatement(653) at 0", "Insert Block(632) into IfStatement(653) at 1", "Insert Block(652) into IfStatement(653) at 2", "Insert SimpleName: StarTable(1022) into MethodInvocation(1026) at 0", "Insert SimpleName: of(1023) into MethodInvocation(1026) at 1", "Insert ThisExpression(1024) into MethodInvocation(1026) at 2", "Insert SimpleName: tables(1025) into MethodInvocation(1026) at 3", "Insert SimpleName: columns(1040) into MethodInvocation(1043) at 0", "Insert SimpleName: get(1041) into MethodInvocation(1043) at 1", "Insert SimpleName: i(1042) into MethodInvocation(1043) at 2", "Insert SimpleName: String(1122) into SimpleType: String(1123) at 0", "Insert InfixExpression: >=(1167) into AssertStatement(1168) at 0", "Insert InfixExpression: >(1171) into AssertStatement(1172) at 0", "Insert Assignment: =(1177) into ExpressionStatement(1178) at 0", "Insert Assignment: =(1183) into ExpressionStatement(1184) at 0", "Insert Assignment: =(1189) into ExpressionStatement(1190) at 0", "Insert QualifiedName: ImmutableList.Builder(132) into SimpleType: ImmutableList.Builder(133) at 0", "Insert SimpleType: List(135) into ParameterizedType: List<String>(138) at 0", "Insert SimpleType: String(137) into ParameterizedType: List<String>(138) at 1", "Insert SimpleName: ImmutableList(141) into MethodInvocation(143) at 0", "Insert SimpleName: builder(142) into MethodInvocation(143) at 1", "Insert SimpleName: Node(146) into SimpleType: Node(147) at 0", "Insert InfixExpression: !=(153) into IfStatement(175) at 0", "Insert Block(174) into IfStatement(175) at 1", "Insert SimpleName: builder(179) into MethodInvocation(181) at 0", "Insert SimpleName: build(180) into MethodInvocation(181) at 1", "Insert SimpleName: List(247) into SimpleType: List(248) at 0", "Insert SimpleName: String(249) into SimpleType: String(250) at 0", "Insert SimpleName: Lists(253) into MethodInvocation(255) at 0", "Insert SimpleName: newArrayList(254) into MethodInvocation(255) at 1", "Insert ParenthesizedExpression(263) into MethodInvocation(265) at 0", "Insert SimpleName: getFrom(264) into MethodInvocation(265) at 1", "Insert Modifier: final(436) into VariableDeclarationStatement(447) at 0", "Insert PrimitiveType: int(437) into VariableDeclarationStatement(447) at 1", "Insert VariableDeclarationFragment(446) into VariableDeclarationStatement(447) at 2", "Insert Assignment: =(553) into ExpressionStatement(554) at 0", "Insert SimpleName: SqlJoin(584) into SimpleType: SqlJoin(585) at 0", "Insert SimpleType: SqlJoin(588) into VariableDeclarationStatement(595) at 0", "Insert VariableDeclarationFragment(594) into VariableDeclarationStatement(595) at 1", "Insert MethodInvocation(602) into ExpressionStatement(603) at 0", "Insert MethodInvocation(610) into ExpressionStatement(611) at 0", "Insert MethodInvocation(615) into InfixExpression: ==(617) at 0", "Insert QualifiedName: SqlKind.AS(616) into InfixExpression: ==(617) at 1", "Insert ExpressionStatement(631) into Block(632) at 0", "Insert IfStatement(646) into Block(652) at 0", "Insert ExpressionStatement(651) into Block(652) at 1", "Insert SimpleName: startCol(1165) into InfixExpression: >=(1167) at 0", "Insert NumberLiteral: 0(1166) into InfixExpression: >=(1167) at 1", "Insert SimpleName: endCol(1169) into InfixExpression: >(1171) at 0", "Insert SimpleName: startCol(1170) into InfixExpression: >(1171) at 1", "Insert FieldAccess(1175) into Assignment: =(1177) at 0", "Insert SimpleName: startCol(1176) into Assignment: =(1177) at 1", "Insert FieldAccess(1181) into Assignment: =(1183) at 0", "Insert SimpleName: endCol(1182) into Assignment: =(1183) at 1", "Insert FieldAccess(1187) into Assignment: =(1189) at 0", "Insert SimpleName: alias(1188) into Assignment: =(1189) at 1", "Insert SimpleName: List(134) into SimpleType: List(135) at 0", "Insert SimpleName: String(136) into SimpleType: String(137) at 0", "Insert QualifiedName: node.scan(151) into InfixExpression: !=(153) at 0", "Insert NullLiteral(152) into InfixExpression: !=(153) at 1", "Insert EnhancedForStatement(173) into Block(174) at 0", "Insert CastExpression(262) into ParenthesizedExpression(263) at 0", "Insert SimpleName: column(438) into VariableDeclarationFragment(446) at 0", "Insert InfixExpression: +(445) into VariableDeclarationFragment(446) at 1", "Insert SimpleName: previousColumn(551) into Assignment: =(553) at 0", "Insert SimpleName: column(552) into Assignment: =(553) at 1", "Insert SimpleName: SqlJoin(587) into SimpleType: SqlJoin(588) at 0", "Insert SimpleName: join(589) into VariableDeclarationFragment(594) at 0", "Insert CastExpression(593) into VariableDeclarationFragment(594) at 1", "Insert SimpleName: populateAliases(596) into MethodInvocation(602) at 0", "Insert MethodInvocation(599) into MethodInvocation(602) at 1", "Insert SimpleName: aliases(600) into MethodInvocation(602) at 2", "Insert NullLiteral(601) into MethodInvocation(602) at 3", "Insert SimpleName: populateAliases(604) into MethodInvocation(610) at 0", "Insert MethodInvocation(607) into MethodInvocation(610) at 1", "Insert SimpleName: aliases(608) into MethodInvocation(610) at 2", "Insert NullLiteral(609) into MethodInvocation(610) at 3", "Insert SimpleName: from(613) into MethodInvocation(615) at 0", "Insert SimpleName: getKind(614) into MethodInvocation(615) at 1", "Insert MethodInvocation(630) into ExpressionStatement(631) at 0", "Insert InfixExpression: ==(635) into IfStatement(646) at 0", "Insert Block(645) into IfStatement(646) at 1", "Insert MethodInvocation(650) into ExpressionStatement(651) at 0", "Insert ThisExpression(1173) into FieldAccess(1175) at 0", "Insert SimpleName: startCol(1174) into FieldAccess(1175) at 1", "Insert ThisExpression(1179) into FieldAccess(1181) at 0", "Insert SimpleName: endCol(1180) into FieldAccess(1181) at 1", "Insert ThisExpression(1185) into FieldAccess(1187) at 0", "Insert SimpleName: alias(1186) into FieldAccess(1187) at 1", "Insert SingleVariableDeclaration(157) into EnhancedForStatement(173) at 0", "Insert MethodInvocation(162) into EnhancedForStatement(173) at 1", "Insert Block(172) into EnhancedForStatement(173) at 2", "Insert SimpleType: SqlSelect(260) into CastExpression(262) at 0", "Insert QualifiedName: parsed.sqlNode(261) into CastExpression(262) at 1", "Insert SimpleName: previousColumn(439) into InfixExpression: +(445) at 0", "Insert MethodInvocation(444) into InfixExpression: +(445) at 1", "Insert SimpleType: SqlJoin(591) into CastExpression(593) at 0", "Insert SimpleName: from(592) into CastExpression(593) at 1", "Insert SimpleName: join(597) into MethodInvocation(599) at 0", "Insert SimpleName: getLeft(598) into MethodInvocation(599) at 1", "Insert SimpleName: join(605) into MethodInvocation(607) at 0", "Insert SimpleName: getRight(606) into MethodInvocation(607) at 1", "Insert SimpleName: populateAliases(618) into MethodInvocation(630) at 0", "Insert MethodInvocation(622) into MethodInvocation(630) at 1", "Insert SimpleName: aliases(623) into MethodInvocation(630) at 2", "Insert MethodInvocation(629) into MethodInvocation(630) at 3", "Insert SimpleName: current(633) into InfixExpression: ==(635) at 0", "Insert NullLiteral(634) into InfixExpression: ==(635) at 1", "Insert ExpressionStatement(644) into Block(645) at 0", "Insert SimpleName: aliases(647) into MethodInvocation(650) at 0", "Insert SimpleName: add(648) into MethodInvocation(650) at 1", "Insert SimpleName: current(649) into MethodInvocation(650) at 2", "Insert SimpleType: String(155) into SingleVariableDeclaration(157) at 0", "Insert SimpleName: name(156) into SingleVariableDeclaration(157) at 1", "Insert MethodInvocation(160) into MethodInvocation(162) at 0", "Insert SimpleName: getFieldNames(161) into MethodInvocation(162) at 1", "Insert ExpressionStatement(171) into Block(172) at 0", "Insert SimpleName: SqlSelect(259) into SimpleType: SqlSelect(260) at 0", "Insert MethodInvocation(442) into MethodInvocation(444) at 0", "Insert SimpleName: getFieldCount(443) into MethodInvocation(444) at 1", "Insert SimpleName: SqlJoin(590) into SimpleType: SqlJoin(591) at 0", "Insert SimpleName: SqlUtil(619) into MethodInvocation(622) at 0", "Insert SimpleName: stripAs(620) into MethodInvocation(622) at 1", "Insert SimpleName: from(621) into MethodInvocation(622) at 2", "Insert SimpleName: SqlValidatorUtil(624) into MethodInvocation(629) at 0", "Insert SimpleName: getAlias(625) into MethodInvocation(629) at 1", "Insert SimpleName: from(626) into MethodInvocation(629) at 2", "Insert PrefixExpression: -(628) into MethodInvocation(629) at 3", "Insert Assignment: =(643) into ExpressionStatement(644) at 0", "Insert SimpleName: String(154) into SimpleType: String(155) at 0", "Insert QualifiedName: node.scan(158) into MethodInvocation(160) at 0", "Insert SimpleName: getRowType(159) into MethodInvocation(160) at 1", "Insert MethodInvocation(170) into ExpressionStatement(171) at 0", "Insert SimpleName: relNode(440) into MethodInvocation(442) at 0", "Insert SimpleName: getRowType(441) into MethodInvocation(442) at 1", "Insert SimpleName: previousColumn(473) into ClassInstanceCreation(481) at 4", "Insert SimpleName: column(474) into ClassInstanceCreation(481) at 5", "Insert MethodInvocation(480) into ClassInstanceCreation(481) at 6", "Insert SimpleName: previousColumn(523) into ClassInstanceCreation(531) at 4", "Insert SimpleName: column(524) into ClassInstanceCreation(531) at 5", "Insert MethodInvocation(530) into ClassInstanceCreation(531) at 6", "Insert NumberLiteral: 1(627) into PrefixExpression: -(628) at 0", "Insert SimpleName: current(636) into Assignment: =(643) at 0", "Insert MethodInvocation(642) into Assignment: =(643) at 1", "Insert SimpleName: builder(163) into MethodInvocation(170) at 0", "Insert SimpleName: add(164) into MethodInvocation(170) at 1", "Insert MethodInvocation(169) into MethodInvocation(170) at 2", "Insert SimpleName: aliases(475) into MethodInvocation(480) at 0", "Insert SimpleName: get(476) into MethodInvocation(480) at 1", "Insert MethodInvocation(479) into MethodInvocation(480) at 2", "Insert SimpleName: aliases(525) into MethodInvocation(530) at 0", "Insert SimpleName: get(526) into MethodInvocation(530) at 1", "Insert MethodInvocation(529) into MethodInvocation(530) at 2", "Insert SimpleName: SqlValidatorUtil(637) into MethodInvocation(642) at 0", "Insert SimpleName: getAlias(638) into MethodInvocation(642) at 1", "Insert SimpleName: from(639) into MethodInvocation(642) at 2", "Insert PrefixExpression: -(641) into MethodInvocation(642) at 3", "Insert SimpleName: ImmutableList(165) into MethodInvocation(169) at 0", "Insert SimpleName: of(166) into MethodInvocation(169) at 1", "Insert QualifiedName: node.alias(167) into MethodInvocation(169) at 2", "Insert SimpleName: name(168) into MethodInvocation(169) at 3", "Insert SimpleName: nodes(477) into MethodInvocation(479) at 0", "Insert SimpleName: size(478) into MethodInvocation(479) at 1", "Insert SimpleName: nodes(527) into MethodInvocation(529) at 0", "Insert SimpleName: size(528) into MethodInvocation(529) at 1", "Insert NumberLiteral: 1(640) into PrefixExpression: -(641) at 0", "Delete Block(106)", "Delete SimpleName: StarTable(791)", "Delete SimpleType: StarTable(792)", "Delete SimpleName: tables(793)", "Delete ClassInstanceCreation(794)"]}}, {"MaterializationActor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.eigenbase.util.Util to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: com.google.common.collect.Maps to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 2", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: Maps to MethodInvocation at 0", "INS SimpleName: newHashMap to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS ParameterizedType: Map<QueryKey,MaterializationKey> to FieldDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Maps to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: newHashMap to MethodInvocation at 1", "INS SimpleName: keyBySql to VariableDeclarationFragment at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 6", "operations": ["INS MethodInvocation to InfixExpression: && at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: QueryKey to CastExpression at 0", "INS SimpleType: QueryKey to CastExpression at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: OptiqSchema to FieldDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: path to FieldAccess at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: schema to FieldAccess at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: QueryKey to SimpleType: QueryKey at 0", "INS SimpleName: path to MethodInvocation at 0", "INS SimpleName: path to Assignment: = at 1", "INS SimpleName: obj to CastExpression at 1", "INS SimpleName: sql to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS SimpleName: sql to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: sql to FieldAccess at 1", "INS SimpleName: path to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleType: OptiqSchema to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: sql to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: List to SimpleType: List at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Util to MethodInvocation at 0", "INS SimpleName: hashV to MethodInvocation at 1", "INS PrimitiveType: int to MethodDeclaration at 2", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleType: String to FieldDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleName: obj to InstanceofExpression at 0", "INS SimpleName: obj to SingleVariableDeclaration at 1", "INS ParenthesizedExpression to FieldAccess at 0", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS SimpleName: QueryKey to SimpleType: QueryKey at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS ParenthesizedExpression to FieldAccess at 0", "INS SimpleName: QueryKey to SimpleType: QueryKey at 0", "INS Modifier: final to FieldDeclaration at 0", "INS ParameterizedType: List<String> to FieldDeclaration at 1", "INS SimpleName: path to MethodInvocation at 4", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleType: QueryKey to InstanceofExpression at 1", "INS SimpleType: QueryKey to CastExpression at 0", "INS FieldAccess to Assignment: = at 0", "INS FieldAccess to Assignment: = at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 6", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: QueryKey to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS MethodInvocation to InfixExpression: && at 3", "INS SimpleName: schema to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS TextElement: A materialization can be re-used if it is the same SQL, on the same to TagElement at 0", "INS SimpleName: sql to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: sql to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to InfixExpression: == at 1", "INS SimpleName: QueryKey to TypeDeclaration: class at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: schema to Assignment: = at 1", "INS SimpleName: schema to MethodInvocation at 3", "INS SimpleName: path to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS ParenthesizedExpression to FieldAccess at 0", "INS TextElement: schema, with the same path for resolving functions.  to TagElement at 1", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: equals to MethodDeclaration at 3", "INS FieldAccess to MethodInvocation at 2", "INS Modifier: final to FieldDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: obj to InfixExpression: == at 0", "INS SimpleName: obj to CastExpression at 1", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: obj to CastExpression at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: schema to VariableDeclarationFragment at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS InfixExpression: && to InfixExpression: || at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: sql to FieldAccess at 1", "INS InstanceofExpression to InfixExpression: && at 0", "INS SimpleName: path to FieldAccess at 1", "INS SimpleName: QueryKey to SimpleType: QueryKey at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS InfixExpression: || to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: Map<MaterializationKey,Materialization> to FieldDeclaration at 1", "MOV Modifier: final to FieldDeclaration at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: keyMap to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from HashMap to Map", "operations": ["UPD SimpleName: HashMap from HashMap to Map", "UPD SimpleType: HashMap from HashMap to Map"]}, {"root": "MOVE from ParameterizedType: Map<QueryKey,MaterializationKey>", "operations": ["MOV SimpleType: MaterializationKey to ParameterizedType: Map<QueryKey,MaterializationKey> at 2", "MOV SimpleType: Materialization to ParameterizedType: Map<QueryKey,MaterializationKey> at 1", "MOV SimpleType: HashMap to ParameterizedType: Map<QueryKey,MaterializationKey> at 0"]}, {"root": "UPDATE from Materialization to QueryKey", "operations": ["UPD SimpleType: Materialization from Materialization to QueryKey", "UPD SimpleName: Materialization from Materialization to QueryKey"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL ParameterizedType: HashMap<MaterializationKey,Materialization>"]}]}}, {"MaterializationActor_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(284) at 4", "Insert ImportDeclaration(11) into CompilationUnit(284) at 5", "Insert QualifiedName: org.eigenbase.util.Util(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.google.common.collect.Maps(10) into ImportDeclaration(11) at 0", "Insert FieldDeclaration(31) into TypeDeclaration: class(283) at 2", "Insert FieldDeclaration(45) into TypeDeclaration: class(283) at 3", "Insert TypeDeclaration: class(282) into TypeDeclaration: class(283) at 5", "Move Modifier: final(14) into FieldDeclaration(31) at 0", "Move ParameterizedType: Map<MaterializationKey,Materialization>(21) into FieldDeclaration(31) at 1", "Insert VariableDeclarationFragment(30) into FieldDeclaration(31) at 2", "Insert Modifier: final(32) into FieldDeclaration(45) at 0", "Insert ParameterizedType: Map<QueryKey,MaterializationKey>(39) into FieldDeclaration(45) at 1", "Insert VariableDeclarationFragment(44) into FieldDeclaration(45) at 2", "Insert Javadoc(157) into TypeDeclaration: class(282) at 0", "Insert Modifier: static(158) into TypeDeclaration: class(282) at 1", "Insert SimpleName: QueryKey(159) into TypeDeclaration: class(282) at 2", "Insert FieldDeclaration(165) into TypeDeclaration: class(282) at 3", "Insert FieldDeclaration(171) into TypeDeclaration: class(282) at 4", "Insert FieldDeclaration(180) into TypeDeclaration: class(282) at 5", "Insert MethodDeclaration(216) into TypeDeclaration: class(282) at 6", "Insert MethodDeclaration(267) into TypeDeclaration: class(282) at 7", "Insert MethodDeclaration(281) into TypeDeclaration: class(282) at 8", "Move SimpleName: keyMap(22) into VariableDeclarationFragment(30) at 0", "Insert MethodInvocation(29) into VariableDeclarationFragment(30) at 1", "Update SimpleType: HashMap(24) to Map", "Move SimpleType: HashMap(24) into ParameterizedType: Map<QueryKey,MaterializationKey>(39) at 0", "Update SimpleType: Materialization(28) to QueryKey", "Move SimpleType: Materialization(28) into ParameterizedType: Map<QueryKey,MaterializationKey>(39) at 1", "Move SimpleType: MaterializationKey(26) into ParameterizedType: Map<QueryKey,MaterializationKey>(39) at 2", "Insert SimpleName: keyBySql(40) into VariableDeclarationFragment(44) at 0", "Insert MethodInvocation(43) into VariableDeclarationFragment(44) at 1", "Insert TagElement(156) into Javadoc(157) at 0", "Insert Modifier: final(160) into FieldDeclaration(165) at 0", "Insert SimpleType: String(162) into FieldDeclaration(165) at 1", "Insert VariableDeclarationFragment(164) into FieldDeclaration(165) at 2", "Insert Modifier: final(166) into FieldDeclaration(171) at 0", "Insert SimpleType: OptiqSchema(168) into FieldDeclaration(171) at 1", "Insert VariableDeclarationFragment(170) into FieldDeclaration(171) at 2", "Insert Modifier: final(172) into FieldDeclaration(180) at 0", "Insert ParameterizedType: List<String>(177) into FieldDeclaration(180) at 1", "Insert VariableDeclarationFragment(179) into FieldDeclaration(180) at 2", "Insert SimpleName: QueryKey(181) into MethodDeclaration(216) at 0", "Insert SingleVariableDeclaration(185) into MethodDeclaration(216) at 1", "Insert SingleVariableDeclaration(189) into MethodDeclaration(216) at 2", "Insert SingleVariableDeclaration(196) into MethodDeclaration(216) at 3", "Insert Block(215) into MethodDeclaration(216) at 4", "Insert MarkerAnnotation(218) into MethodDeclaration(267) at 0", "Insert Modifier: public(219) into MethodDeclaration(267) at 1", "Insert PrimitiveType: boolean(220) into MethodDeclaration(267) at 2", "Insert SimpleName: equals(221) into MethodDeclaration(267) at 3", "Insert SingleVariableDeclaration(225) into MethodDeclaration(267) at 4", "Insert Block(266) into MethodDeclaration(267) at 5", "Insert MarkerAnnotation(269) into MethodDeclaration(281) at 0", "Insert Modifier: public(270) into MethodDeclaration(281) at 1", "Insert PrimitiveType: int(271) into MethodDeclaration(281) at 2", "Insert SimpleName: hashCode(272) into MethodDeclaration(281) at 3", "Insert Block(280) into MethodDeclaration(281) at 4", "Insert SimpleName: Maps(27) into MethodInvocation(29) at 0", "Insert SimpleName: newHashMap(28) into MethodInvocation(29) at 1", "Update SimpleName: HashMap(23) to Map", "Update SimpleName: Materialization(27) to QueryKey", "Insert SimpleName: Maps(41) into MethodInvocation(43) at 0", "Insert SimpleName: newHashMap(42) into MethodInvocation(43) at 1", "Insert TextElement: A materialization can be re-used if it is the same SQL, on the same(154) into TagElement(156) at 0", "Insert TextElement: schema, with the same path for resolving functions. (155) into TagElement(156) at 1", "Insert SimpleName: String(161) into SimpleType: String(162) at 0", "Insert SimpleName: sql(163) into VariableDeclarationFragment(164) at 0", "Insert SimpleName: OptiqSchema(167) into SimpleType: OptiqSchema(168) at 0", "Insert SimpleName: schema(169) into VariableDeclarationFragment(170) at 0", "Insert SimpleType: List(174) into ParameterizedType: List<String>(177) at 0", "Insert SimpleType: String(176) into ParameterizedType: List<String>(177) at 1", "Insert SimpleName: path(178) into VariableDeclarationFragment(179) at 0", "Insert SimpleType: String(183) into SingleVariableDeclaration(185) at 0", "Insert SimpleName: sql(184) into SingleVariableDeclaration(185) at 1", "Insert SimpleType: OptiqSchema(187) into SingleVariableDeclaration(189) at 0", "Insert SimpleName: schema(188) into SingleVariableDeclaration(189) at 1", "Insert ParameterizedType: List<String>(194) into SingleVariableDeclaration(196) at 0", "Insert SimpleName: path(195) into SingleVariableDeclaration(196) at 1", "Insert ExpressionStatement(202) into Block(215) at 0", "Insert ExpressionStatement(208) into Block(215) at 1", "Insert ExpressionStatement(214) into Block(215) at 2", "Insert SimpleName: Override(217) into MarkerAnnotation(218) at 0", "Insert SimpleType: Object(223) into SingleVariableDeclaration(225) at 0", "Insert SimpleName: obj(224) into SingleVariableDeclaration(225) at 1", "Insert ReturnStatement(265) into Block(266) at 0", "Insert SimpleName: Override(268) into MarkerAnnotation(269) at 0", "Insert ReturnStatement(279) into Block(280) at 0", "Insert SimpleName: List(173) into SimpleType: List(174) at 0", "Insert SimpleName: String(175) into SimpleType: String(176) at 0", "Insert SimpleName: String(182) into SimpleType: String(183) at 0", "Insert SimpleName: OptiqSchema(186) into SimpleType: OptiqSchema(187) at 0", "Insert SimpleType: List(191) into ParameterizedType: List<String>(194) at 0", "Insert SimpleType: String(193) into ParameterizedType: List<String>(194) at 1", "Insert Assignment: =(201) into ExpressionStatement(202) at 0", "Insert Assignment: =(207) into ExpressionStatement(208) at 0", "Insert Assignment: =(213) into ExpressionStatement(214) at 0", "Insert SimpleName: Object(222) into SimpleType: Object(223) at 0", "Insert InfixExpression: ||(264) into ReturnStatement(265) at 0", "Insert MethodInvocation(278) into ReturnStatement(279) at 0", "Insert SimpleName: List(190) into SimpleType: List(191) at 0", "Insert SimpleName: String(192) into SimpleType: String(193) at 0", "Insert FieldAccess(199) into Assignment: =(201) at 0", "Insert SimpleName: sql(200) into Assignment: =(201) at 1", "Insert FieldAccess(205) into Assignment: =(207) at 0", "Insert SimpleName: schema(206) into Assignment: =(207) at 1", "Insert FieldAccess(211) into Assignment: =(213) at 0", "Insert SimpleName: path(212) into Assignment: =(213) at 1", "Insert InfixExpression: ==(228) into InfixExpression: ||(264) at 0", "Insert InfixExpression: &&(263) into InfixExpression: ||(264) at 1", "Insert SimpleName: Util(273) into MethodInvocation(278) at 0", "Insert SimpleName: hashV(274) into MethodInvocation(278) at 1", "Insert SimpleName: sql(275) into MethodInvocation(278) at 2", "Insert SimpleName: schema(276) into MethodInvocation(278) at 3", "Insert SimpleName: path(277) into MethodInvocation(278) at 4", "Insert ThisExpression(197) into FieldAccess(199) at 0", "Insert SimpleName: sql(198) into FieldAccess(199) at 1", "Insert ThisExpression(203) into FieldAccess(205) at 0", "Insert SimpleName: schema(204) into FieldAccess(205) at 1", "Insert ThisExpression(209) into FieldAccess(211) at 0", "Insert SimpleName: path(210) into FieldAccess(211) at 1", "Insert SimpleName: obj(226) into InfixExpression: ==(228) at 0", "Insert ThisExpression(227) into InfixExpression: ==(228) at 1", "Insert InstanceofExpression(232) into InfixExpression: &&(263) at 0", "Insert MethodInvocation(242) into InfixExpression: &&(263) at 1", "Insert MethodInvocation(252) into InfixExpression: &&(263) at 2", "Insert MethodInvocation(262) into InfixExpression: &&(263) at 3", "Insert SimpleName: obj(229) into InstanceofExpression(232) at 0", "Insert SimpleType: QueryKey(231) into InstanceofExpression(232) at 1", "Insert SimpleName: sql(233) into MethodInvocation(242) at 0", "Insert SimpleName: equals(234) into MethodInvocation(242) at 1", "Insert FieldAccess(241) into MethodInvocation(242) at 2", "Insert SimpleName: schema(243) into MethodInvocation(252) at 0", "Insert SimpleName: equals(244) into MethodInvocation(252) at 1", "Insert FieldAccess(251) into MethodInvocation(252) at 2", "Insert SimpleName: path(253) into MethodInvocation(262) at 0", "Insert SimpleName: equals(254) into MethodInvocation(262) at 1", "Insert FieldAccess(261) into MethodInvocation(262) at 2", "Insert SimpleName: QueryKey(230) into SimpleType: QueryKey(231) at 0", "Insert ParenthesizedExpression(239) into FieldAccess(241) at 0", "Insert SimpleName: sql(240) into FieldAccess(241) at 1", "Insert ParenthesizedExpression(249) into FieldAccess(251) at 0", "Insert SimpleName: schema(250) into FieldAccess(251) at 1", "Insert ParenthesizedExpression(259) into FieldAccess(261) at 0", "Insert SimpleName: path(260) into FieldAccess(261) at 1", "Insert CastExpression(238) into ParenthesizedExpression(239) at 0", "Insert CastExpression(248) into ParenthesizedExpression(249) at 0", "Insert CastExpression(258) into ParenthesizedExpression(259) at 0", "Insert SimpleType: QueryKey(236) into CastExpression(238) at 0", "Insert SimpleName: obj(237) into CastExpression(238) at 1", "Insert SimpleType: QueryKey(246) into CastExpression(248) at 0", "Insert SimpleName: obj(247) into CastExpression(248) at 1", "Insert SimpleType: QueryKey(256) into CastExpression(258) at 0", "Insert SimpleName: obj(257) into CastExpression(258) at 1", "Insert SimpleName: QueryKey(235) into SimpleType: QueryKey(236) at 0", "Insert SimpleName: QueryKey(245) into SimpleType: QueryKey(246) at 0", "Insert SimpleName: QueryKey(255) into SimpleType: QueryKey(256) at 0", "Delete ParameterizedType: HashMap<MaterializationKey,Materialization>(29)", "Delete ClassInstanceCreation(30)", "Delete VariableDeclarationFragment(31)", "Delete FieldDeclaration(32)"]}}, {"MaterializationService_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: net.hydromatic.optiq.runtime.Hook to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: com.google.common.collect.ImmutableMap to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: viewSchemaPath to ClassInstanceCreation at 3", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: MaterializationActor.QueryKey to SimpleType: MaterializationActor.QueryKey at 0", "INS SimpleName: queryKey to VariableDeclarationFragment at 0", "INS SimpleName: viewSql to ClassInstanceCreation at 1", "INS SimpleType: MaterializationActor.QueryKey to VariableDeclarationStatement at 1", "INS SimpleType: MaterializationActor.QueryKey to ClassInstanceCreation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: MaterializationActor.QueryKey to SimpleType: MaterializationActor.QueryKey at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: schema to ClassInstanceCreation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: actor.keyBySql to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: MaterializationKey to VariableDeclarationStatement at 1", "INS SimpleName: MaterializationKey to SimpleType: MaterializationKey at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: existingKey to VariableDeclarationFragment at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: queryKey to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: existingKey to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS SimpleName: existingKey to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS QualifiedName: actor.keyBySql to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: queryKey to MethodInvocation at 2", "INS QualifiedName: materialization.key to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS QualifiedName: Hook.CREATE_MATERIALIZATION to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: tableName to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS StringLiteral: \"false\" to MethodInvocation at 3", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS QualifiedName: OptiqConnectionProperty.CREATE_MATERIALIZATIONS to MethodInvocation at 2", "INS SimpleName: map to VariableDeclarationFragment at 0", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: OptiqConnectionProperty to SimpleType: OptiqConnectionProperty at 0", "INS SimpleType: OptiqConnectionProperty to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 0", "INS ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> to VariableDeclarationStatement at 1", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: ImmutableMap<OptiqConnectionProperty,String> at 2"]}, {"root": "INS SimpleName: map to MethodInvocation at 6", "operations": ["INS SimpleName: map to MethodInvocation at 6"]}]}}, {"MaterializationService_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(631) at 7", "Insert ImportDeclaration(25) into CompilationUnit(631) at 12", "Insert ImportDeclaration(33) into CompilationUnit(631) at 16", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionProperty(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: net.hydromatic.optiq.runtime.Hook(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: com.google.common.collect.ImmutableMap(32) into ImportDeclaration(33) at 0", "Insert VariableDeclarationStatement(140) into Block(472) at 0", "Insert VariableDeclarationStatement(150) into Block(472) at 1", "Insert IfStatement(157) into Block(472) at 2", "Insert ExpressionStatement(469) into Block(472) at 12", "Insert Modifier: final(129) into VariableDeclarationStatement(140) at 0", "Insert SimpleType: MaterializationActor.QueryKey(131) into VariableDeclarationStatement(140) at 1", "Insert VariableDeclarationFragment(139) into VariableDeclarationStatement(140) at 2", "Insert Modifier: final(141) into VariableDeclarationStatement(150) at 0", "Insert SimpleType: MaterializationKey(143) into VariableDeclarationStatement(150) at 1", "Insert VariableDeclarationFragment(149) into VariableDeclarationStatement(150) at 2", "Insert InfixExpression: !=(153) into IfStatement(157) at 0", "Insert Block(156) into IfStatement(157) at 1", "Insert MethodInvocation(468) into ExpressionStatement(469) at 0", "Insert QualifiedName: MaterializationActor.QueryKey(130) into SimpleType: MaterializationActor.QueryKey(131) at 0", "Insert SimpleName: queryKey(132) into VariableDeclarationFragment(139) at 0", "Insert ClassInstanceCreation(138) into VariableDeclarationFragment(139) at 1", "Insert SimpleName: MaterializationKey(142) into SimpleType: MaterializationKey(143) at 0", "Insert SimpleName: existingKey(144) into VariableDeclarationFragment(149) at 0", "Insert MethodInvocation(148) into VariableDeclarationFragment(149) at 1", "Insert SimpleName: existingKey(151) into InfixExpression: !=(153) at 0", "Insert NullLiteral(152) into InfixExpression: !=(153) at 1", "Insert ReturnStatement(155) into Block(156) at 0", "Insert ExpressionStatement(412) into Block(413) at 4", "Insert QualifiedName: actor.keyBySql(464) into MethodInvocation(468) at 0", "Insert SimpleName: put(465) into MethodInvocation(468) at 1", "Insert SimpleName: queryKey(466) into MethodInvocation(468) at 2", "Insert QualifiedName: materialization.key(467) into MethodInvocation(468) at 3", "Insert SimpleType: MaterializationActor.QueryKey(134) into ClassInstanceCreation(138) at 0", "Insert SimpleName: viewSql(135) into ClassInstanceCreation(138) at 1", "Insert SimpleName: schema(136) into ClassInstanceCreation(138) at 2", "Insert SimpleName: viewSchemaPath(137) into ClassInstanceCreation(138) at 3", "Insert QualifiedName: actor.keyBySql(145) into MethodInvocation(148) at 0", "Insert SimpleName: get(146) into MethodInvocation(148) at 1", "Insert SimpleName: queryKey(147) into MethodInvocation(148) at 2", "Insert SimpleName: existingKey(154) into ReturnStatement(155) at 0", "Insert MethodInvocation(411) into ExpressionStatement(412) at 0", "Insert QualifiedName: MaterializationActor.QueryKey(133) into SimpleType: MaterializationActor.QueryKey(134) at 0", "Insert VariableDeclarationStatement(242) into Block(398) at 0", "Insert QualifiedName: Hook.CREATE_MATERIALIZATION(408) into MethodInvocation(411) at 0", "Insert SimpleName: run(409) into MethodInvocation(411) at 1", "Insert SimpleName: tableName(410) into MethodInvocation(411) at 2", "Insert Modifier: final(227) into VariableDeclarationStatement(242) at 0", "Insert ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(234) into VariableDeclarationStatement(242) at 1", "Insert VariableDeclarationFragment(241) into VariableDeclarationStatement(242) at 2", "Insert SimpleType: ImmutableMap(229) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(234) at 0", "Insert SimpleType: OptiqConnectionProperty(231) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(234) at 1", "Insert SimpleType: String(233) into ParameterizedType: ImmutableMap<OptiqConnectionProperty,String>(234) at 2", "Insert SimpleName: map(235) into VariableDeclarationFragment(241) at 0", "Insert MethodInvocation(240) into VariableDeclarationFragment(241) at 1", "Insert SimpleName: ImmutableMap(228) into SimpleType: ImmutableMap(229) at 0", "Insert SimpleName: OptiqConnectionProperty(230) into SimpleType: OptiqConnectionProperty(231) at 0", "Insert SimpleName: String(232) into SimpleType: String(233) at 0", "Insert SimpleName: ImmutableMap(236) into MethodInvocation(240) at 0", "Insert SimpleName: of(237) into MethodInvocation(240) at 1", "Insert QualifiedName: OptiqConnectionProperty.CREATE_MATERIALIZATIONS(238) into MethodInvocation(240) at 2", "Insert StringLiteral: \"false\"(239) into MethodInvocation(240) at 3", "Insert SimpleName: map(256) into MethodInvocation(257) at 6"]}}, {"OptiqCatalogReader_cluster": {"actions": [{"root": "INS NullLiteral to MethodInvocation at 5", "operations": ["INS NullLiteral to MethodInvocation at 5"]}]}}, {"OptiqCatalogReader_diff": {"operations": ["Insert NullLiteral(301) into MethodInvocation(302) at 5"]}}, {"OptiqMaterializer_cluster": {"actions": [{"root": "INS NullLiteral to MethodInvocation at 5", "operations": ["INS NullLiteral to MethodInvocation at 5"]}]}}, {"OptiqMaterializer_diff": {"operations": ["Insert NullLiteral(315) into MethodInvocation(316) at 5"]}}, {"OptiqPrepareImpl_cluster": {"actions": [{"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: externalContext to Assignment: = at 0", "INS SimpleName: externalContext to InfixExpression: == at 0", "INS SimpleName: withConfig to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: config to MethodInvocation at 1", "INS SimpleName: Contexts to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: prepareContext to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS QualifiedName: AggregateStarTableRule.INSTANCE to MethodInvocation at 20", "operations": ["INS QualifiedName: AggregateStarTableRule.INSTANCE to MethodInvocation at 20"]}, {"root": "INS QualifiedName: AggregateStarTableRule.INSTANCE2 to MethodInvocation at 21", "operations": ["INS QualifiedName: AggregateStarTableRule.INSTANCE2 to MethodInvocation at 21"]}]}}, {"OptiqPrepareImpl_diff": {"operations": ["Insert Modifier: final(575) into SingleVariableDeclaration(579) at 0", "Insert IfStatement(601) into Block(704) at 0", "Insert QualifiedName: AggregateStarTableRule.INSTANCE(203) into MethodInvocation(218) at 20", "Insert QualifiedName: AggregateStarTableRule.INSTANCE2(204) into MethodInvocation(218) at 21", "Insert InfixExpression: ==(590) into IfStatement(601) at 0", "Insert Block(600) into IfStatement(601) at 1", "Insert SimpleName: externalContext(588) into InfixExpression: ==(590) at 0", "Insert NullLiteral(589) into InfixExpression: ==(590) at 1", "Insert ExpressionStatement(599) into Block(600) at 0", "Insert Assignment: =(598) into ExpressionStatement(599) at 0", "Insert SimpleName: externalContext(591) into Assignment: =(598) at 0", "Insert MethodInvocation(597) into Assignment: =(598) at 1", "Insert SimpleName: Contexts(592) into MethodInvocation(597) at 0", "Insert SimpleName: withConfig(593) into MethodInvocation(597) at 1", "Insert MethodInvocation(596) into MethodInvocation(597) at 2", "Insert SimpleName: prepareContext(594) into MethodInvocation(596) at 0", "Insert SimpleName: config(595) into MethodInvocation(596) at 1"]}}, {"Prepare_cluster": {"actions": [{"root": "INS NullLiteral to MethodInvocation at 5", "operations": ["INS NullLiteral to MethodInvocation at 5"]}]}}, {"Prepare_diff": {"operations": ["Insert NullLiteral(371) into MethodInvocation(372) at 5"]}}, {"QueryableRelBuilder_cluster": {"actions": [{"root": "INS NullLiteral to MethodInvocation at 5", "operations": ["INS NullLiteral to MethodInvocation at 5"]}]}}, {"QueryableRelBuilder_diff": {"operations": ["Insert NullLiteral(195) into MethodInvocation(196) at 5"]}}, {"RelOptTableImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: net.hydromatic.optiq.Schemas to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: org.eigenbase.util.Util to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TextElement: <p>If not null, overrides the estimate from the actual table. to TagElement at 1", "INS SimpleName: rowCount to VariableDeclarationFragment at 0", "INS TextElement: <p>Useful when a table that contains a materialized query result is being to TagElement at 2", "INS TextElement: count. Now the materialized table can tell the same lie.  to TagElement at 4", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS TextElement: used to replace a query expression that wildly underestimates the row to TagElement at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: Double to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS TextElement: Estimate for the row count, or null. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: Double to SimpleType: Double at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: Double to SimpleType: Double at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: rowCount to SingleVariableDeclaration at 1", "INS SimpleType: Double to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: Double to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: rowCount to SingleVariableDeclaration at 1", "INS SimpleName: Double to SimpleType: Double at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleType: OptiqCatalogReader to CastExpression at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: subSchema to MethodInvocation at 1", "INS SimpleName: getQualifiedName to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleType: OptiqSchema to TypeLiteral at 0", "INS SimpleName: cast to MethodInvocation at 1", "INS SimpleName: skipLast to MethodInvocation at 1", "INS SimpleName: Util to MethodInvocation at 0", "INS ParenthesizedExpression to FieldAccess at 0", "INS SimpleName: rootSchema to FieldAccess at 1", "INS SimpleName: clazz to InfixExpression: == at 0", "INS IfStatement to Block at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS TypeLiteral to InfixExpression: == at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: schema to CastExpression at 1", "INS SimpleName: clazz to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS Block to MethodDeclaration at 5", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Schemas to MethodInvocation at 0", "INS SimpleName: OptiqCatalogReader to SimpleType: OptiqCatalogReader at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: rowCount to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: rowCount to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV ReturnStatement to Block at 3", "MOV IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: rowCount to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: rowCount to ReturnStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 0"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 6", "operations": ["INS NullLiteral to ClassInstanceCreation at 6"]}, {"root": "INS SimpleName: rowCount to ClassInstanceCreation at 6", "operations": ["INS SimpleName: rowCount to ClassInstanceCreation at 6"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 6", "operations": ["INS NullLiteral to ClassInstanceCreation at 6"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"RelOptTableImpl_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(745) at 3", "Insert ImportDeclaration(33) into CompilationUnit(745) at 16", "Insert QualifiedName: net.hydromatic.optiq.Schemas(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.eigenbase.util.Util(32) into ImportDeclaration(33) at 0", "Insert FieldDeclaration(114) into TypeDeclaration: class(744) at 9", "Insert Javadoc(107) into FieldDeclaration(114) at 0", "Insert Modifier: private(108) into FieldDeclaration(114) at 1", "Insert Modifier: final(109) into FieldDeclaration(114) at 2", "Insert SimpleType: Double(111) into FieldDeclaration(114) at 3", "Insert VariableDeclarationFragment(113) into FieldDeclaration(114) at 4", "Insert SingleVariableDeclaration(148) into MethodDeclaration(197) at 7", "Insert SingleVariableDeclaration(273) into MethodDeclaration(377) at 7", "Insert Block(508) into MethodDeclaration(509) at 5", "Insert TagElement(106) into Javadoc(107) at 0", "Insert SimpleName: Double(110) into SimpleType: Double(111) at 0", "Insert SimpleName: rowCount(112) into VariableDeclarationFragment(113) at 0", "Insert SimpleType: Double(146) into SingleVariableDeclaration(148) at 0", "Insert SimpleName: rowCount(147) into SingleVariableDeclaration(148) at 1", "Insert ExpressionStatement(187) into Block(196) at 5", "Insert SimpleType: Double(271) into SingleVariableDeclaration(273) at 0", "Insert SimpleName: rowCount(272) into SingleVariableDeclaration(273) at 1", "Move IfStatement(433) into Block(508) at 0", "Move IfStatement(444) into Block(508) at 1", "Insert IfStatement(505) into Block(508) at 2", "Move ReturnStatement(446) into Block(508) at 3", "Insert IfStatement(534) into Block(560) at 0", "Insert TextElement: Estimate for the row count, or null.(101) into TagElement(106) at 0", "Insert TextElement: <p>If not null, overrides the estimate from the actual table.(102) into TagElement(106) at 1", "Insert TextElement: <p>Useful when a table that contains a materialized query result is being(103) into TagElement(106) at 2", "Insert TextElement: used to replace a query expression that wildly underestimates the row(104) into TagElement(106) at 3", "Insert TextElement: count. Now the materialized table can tell the same lie. (105) into TagElement(106) at 4", "Insert SimpleName: Double(145) into SimpleType: Double(146) at 0", "Insert Assignment: =(186) into ExpressionStatement(187) at 0", "Insert SimpleName: Double(270) into SimpleType: Double(271) at 0", "Insert InfixExpression: ==(484) into IfStatement(505) at 0", "Insert Block(504) into IfStatement(505) at 1", "Insert InfixExpression: !=(530) into IfStatement(534) at 0", "Insert Block(533) into IfStatement(534) at 1", "Insert FieldAccess(184) into Assignment: =(186) at 0", "Insert SimpleName: rowCount(185) into Assignment: =(186) at 1", "Insert NullLiteral(247) into ClassInstanceCreation(248) at 6", "Insert SimpleName: rowCount(373) into ClassInstanceCreation(374) at 6", "Insert NullLiteral(440) into ClassInstanceCreation(441) at 6", "Insert SimpleName: clazz(480) into InfixExpression: ==(484) at 0", "Insert TypeLiteral(483) into InfixExpression: ==(484) at 1", "Insert ReturnStatement(503) into Block(504) at 0", "Insert SimpleName: rowCount(528) into InfixExpression: !=(530) at 0", "Insert NullLiteral(529) into InfixExpression: !=(530) at 1", "Insert ReturnStatement(532) into Block(533) at 0", "Insert ThisExpression(182) into FieldAccess(184) at 0", "Insert SimpleName: rowCount(183) into FieldAccess(184) at 1", "Insert SimpleType: OptiqSchema(482) into TypeLiteral(483) at 0", "Insert MethodInvocation(502) into ReturnStatement(503) at 0", "Insert SimpleName: rowCount(531) into ReturnStatement(532) at 0", "Insert SimpleName: OptiqSchema(481) into SimpleType: OptiqSchema(482) at 0", "Insert SimpleName: clazz(485) into MethodInvocation(502) at 0", "Insert SimpleName: cast(486) into MethodInvocation(502) at 1", "Insert MethodInvocation(501) into MethodInvocation(502) at 2", "Insert SimpleName: Schemas(487) into MethodInvocation(501) at 0", "Insert SimpleName: subSchema(488) into MethodInvocation(501) at 1", "Insert FieldAccess(495) into MethodInvocation(501) at 2", "Insert MethodInvocation(500) into MethodInvocation(501) at 3", "Insert ParenthesizedExpression(493) into FieldAccess(495) at 0", "Insert SimpleName: rootSchema(494) into FieldAccess(495) at 1", "Insert SimpleName: Util(496) into MethodInvocation(500) at 0", "Insert SimpleName: skipLast(497) into MethodInvocation(500) at 1", "Insert MethodInvocation(499) into MethodInvocation(500) at 2", "Insert CastExpression(492) into ParenthesizedExpression(493) at 0", "Insert SimpleName: getQualifiedName(498) into MethodInvocation(499) at 0", "Insert SimpleType: OptiqCatalogReader(490) into CastExpression(492) at 0", "Insert SimpleName: schema(491) into CastExpression(492) at 1", "Insert SimpleName: OptiqCatalogReader(489) into SimpleType: OptiqCatalogReader(490) at 0", "Delete Block(447)"]}}, {"Hook_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 11", "operations": ["INS Javadoc to EnumConstantDeclaration at 0", "INS SimpleName: CREATE_MATERIALIZATION to EnumConstantDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Called when materialization is created.  to TagElement at 0", "INS EnumConstantDeclaration to EnumDeclaration at 11"]}]}}, {"Hook_diff": {"operations": ["Insert EnumConstantDeclaration(64) into EnumDeclaration(387) at 11", "Insert Javadoc(62) into EnumConstantDeclaration(64) at 0", "Insert SimpleName: CREATE_MATERIALIZATION(63) into EnumConstantDeclaration(64) at 1", "Insert TagElement(61) into Javadoc(62) at 0", "Insert TextElement: Called when materialization is created. (60) into TagElement(61) at 0"]}}, {"Programs_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 15"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleType: Program to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "UPDATE from run to of", "operations": ["UPD SimpleName: run from run to of"]}, {"root": "INS QualifiedName: AggregateStarTableRule.INSTANCE to MethodInvocation at 20", "operations": ["INS QualifiedName: AggregateStarTableRule.INSTANCE to MethodInvocation at 20"]}, {"root": "INS QualifiedName: AggregateStarTableRule.INSTANCE2 to MethodInvocation at 21", "operations": ["INS QualifiedName: AggregateStarTableRule.INSTANCE2 to MethodInvocation at 21"]}, {"root": "INS ClassInstanceCreation to ReturnStatement at 0", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: run to MethodDeclaration at 2", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Program to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: RelNode to MethodDeclaration at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to MethodDeclaration at 6"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 7"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 8", "operations": ["INS ReturnStatement to Block at 8"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: rules to MethodInvocation at 2"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 3", "operations": ["INS SimpleType: DefaultRelMetadataProvider to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: DefaultRelMetadataProvider to SimpleType: DefaultRelMetadataProvider at 0"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL ClassInstanceCreation", "DEL Modifier: static", "DEL SimpleName: of", "DEL Modifier: public", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL SimpleName: rules", "DEL SimpleName: ArrayList", "DEL SimpleName: RelOptRule", "DEL ParameterizedType: ArrayList<RelOptRule>", "DEL SimpleType: RelOptRule"]}]}}, {"Programs_diff": {"operations": ["Move MethodDeclaration(464) into TypeDeclaration: class(937) at 15", "Move Javadoc(360) into MethodDeclaration(471) at 0", "Insert Modifier: static(364) into MethodDeclaration(471) at 2", "Move SimpleType: Program(364) into MethodDeclaration(471) at 3", "Update SimpleName: run(385) to of", "Move SingleVariableDeclaration(370) into MethodDeclaration(471) at 6", "Move SingleVariableDeclaration(374) into MethodDeclaration(471) at 7", "Move SingleVariableDeclaration(379) into MethodDeclaration(471) at 8", "Insert QualifiedName: AggregateStarTableRule.INSTANCE(149) into MethodInvocation(159) at 20", "Insert QualifiedName: AggregateStarTableRule.INSTANCE2(150) into MethodInvocation(159) at 21", "Insert ClassInstanceCreation(468) into ReturnStatement(469) at 0", "Move SimpleType: Program(381) into ClassInstanceCreation(468) at 0", "Insert AnonymousClassDeclaration(467) into ClassInstanceCreation(468) at 1", "Insert MethodDeclaration(466) into AnonymousClassDeclaration(467) at 0", "Insert Modifier: public(384) into MethodDeclaration(466) at 0", "Move SimpleType: RelNode(384) into MethodDeclaration(466) at 1", "Insert SimpleName: run(387) into MethodDeclaration(466) at 2", "Move SingleVariableDeclaration(389) into MethodDeclaration(466) at 3", "Move SingleVariableDeclaration(393) into MethodDeclaration(466) at 4", "Move SingleVariableDeclaration(397) into MethodDeclaration(466) at 5", "Move Block(452) into MethodDeclaration(466) at 6", "Move VariableDeclarationStatement(411) into Block(465) at 0", "Insert IfStatement(434) into Block(465) at 2", "Move ExpressionStatement(458) into Block(465) at 7", "Insert ReturnStatement(464) into Block(465) at 7", "Move InfixExpression: !=(414) into IfStatement(434) at 0", "Insert Block(433) into IfStatement(434) at 1", "Move MethodInvocation(461) into ReturnStatement(464) at 0", "Move ExpressionStatement(430) into Block(433) at 0", "Insert MethodInvocation(593) into VariableDeclarationFragment(594) at 1", "Insert ClassInstanceCreation(579) into MethodInvocation(580) at 3", "Insert SimpleName: Lists(590) into MethodInvocation(593) at 0", "Insert SimpleName: newArrayList(591) into MethodInvocation(593) at 1", "Insert SimpleName: rules(592) into MethodInvocation(593) at 2", "Insert SimpleType: DefaultRelMetadataProvider(578) into ClassInstanceCreation(579) at 0", "Insert SimpleName: DefaultRelMetadataProvider(577) into SimpleType: DefaultRelMetadataProvider(578) at 0", "Delete IfStatement(453)", "Delete Modifier: public(361)", "Delete Modifier: static(362)", "Delete SimpleName: of(365)", "Delete AnonymousClassDeclaration(465)", "Delete ClassInstanceCreation(466)", "Delete ReturnStatement(467)", "Delete Block(468)", "Delete MethodDeclaration(469)", "Delete NullLiteral(575)", "Delete SimpleName: ArrayList(586)", "Delete SimpleType: ArrayList(587)", "Delete SimpleName: RelOptRule(588)", "Delete SimpleType: RelOptRule(589)", "Delete ParameterizedType: ArrayList<RelOptRule>(590)", "Delete SimpleName: rules(591)", "Delete ClassInstanceCreation(592)"]}}, {"PushAggregateThroughUnionRule_cluster": {"actions": []}}, {"PushAggregateThroughUnionRule_diff": {"operations": []}}, {"HepPlanner_cluster": {"actions": [{"root": "INS EnhancedForStatement to Block at 5", "operations": ["INS SimpleName: vertex to SingleVariableDeclaration at 1", "INS SimpleName: graph to MethodInvocation at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 5", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: root to MethodInvocation at 3", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: BreadthFirstIterator to MethodInvocation at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: HepRelVertex to SingleVariableDeclaration at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL SimpleName: addMaterialization", "DEL SingleVariableDeclaration", "DEL SimpleName: RelOptMaterialization", "DEL Block", "DEL SimpleName: materialization", "DEL SimpleType: RelOptMaterialization", "DEL MethodDeclaration", "DEL Modifier: public"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: lattice", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Block", "DEL SimpleName: RelOptLattice", "DEL SingleVariableDeclaration", "DEL PrimitiveType: void", "DEL SimpleType: RelOptLattice", "DEL SimpleName: addLattice"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: root", "DEL ParameterizedType: Iterator<HepRelVertex>", "DEL SimpleType: HepRelVertex", "DEL SimpleName: Iterator", "DEL VariableDeclarationFragment", "DEL SimpleName: BreadthFirstIterator", "DEL SimpleName: HepRelVertex", "DEL ParameterizedType: BreadthFirstIterator<HepRelVertex,DefaultEdge>", "DEL SimpleName: DefaultEdge", "DEL SimpleType: Iterator", "DEL SimpleName: HepRelVertex", "DEL SimpleType: BreadthFirstIterator", "DEL SimpleType: HepRelVertex", "DEL SimpleName: graph", "DEL SimpleName: bfsIter", "DEL SimpleType: DefaultEdge", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: next", "DEL SimpleName: vertex", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: bfsIter"]}, {"root": "DEL WhileStatement", "operations": ["DEL WhileStatement", "DEL SimpleName: hasNext", "DEL MethodInvocation", "DEL SimpleName: bfsIter"]}]}}, {"HepPlanner_diff": {"operations": ["Insert EnhancedForStatement(2854) into Block(2867) at 4", "Insert Modifier: final(2786) into VariableDeclarationStatement(2794) at 0", "Insert SingleVariableDeclaration(2803) into EnhancedForStatement(2854) at 0", "Insert MethodInvocation(2808) into EnhancedForStatement(2854) at 1", "Move Block(2890) into EnhancedForStatement(2854) at 2", "Move SimpleType: HepRelVertex(2839) into SingleVariableDeclaration(2803) at 0", "Insert SimpleName: vertex(2802) into SingleVariableDeclaration(2803) at 1", "Insert SimpleName: BreadthFirstIterator(2804) into MethodInvocation(2808) at 0", "Insert SimpleName: of(2805) into MethodInvocation(2808) at 1", "Insert SimpleName: graph(2806) into MethodInvocation(2808) at 2", "Insert SimpleName: root(2807) into MethodInvocation(2808) at 3", "Delete Modifier: public(301)", "Delete PrimitiveType: void(302)", "Delete SimpleName: addMaterialization(303)", "Delete SimpleName: RelOptMaterialization(304)", "Delete SimpleType: RelOptMaterialization(305)", "Delete SimpleName: materialization(306)", "Delete SingleVariableDeclaration(307)", "Delete Block(308)", "Delete MethodDeclaration(309)", "Delete Modifier: public(310)", "Delete PrimitiveType: void(311)", "Delete SimpleName: addLattice(312)", "Delete SimpleName: RelOptLattice(313)", "Delete SimpleType: RelOptLattice(314)", "Delete SimpleName: lattice(315)", "Delete SingleVariableDeclaration(316)", "Delete Block(317)", "Delete MethodDeclaration(318)", "Delete SimpleName: Iterator(2804)", "Delete SimpleType: Iterator(2805)", "Delete SimpleName: HepRelVertex(2806)", "Delete SimpleType: HepRelVertex(2807)", "Delete ParameterizedType: Iterator<HepRelVertex>(2808)", "Delete SimpleName: bfsIter(2809)", "Delete SimpleName: BreadthFirstIterator(2810)", "Delete SimpleType: BreadthFirstIterator(2811)", "Delete SimpleName: HepRelVertex(2812)", "Delete SimpleType: HepRelVertex(2813)", "Delete SimpleName: DefaultEdge(2814)", "Delete SimpleType: DefaultEdge(2815)", "Delete ParameterizedType: BreadthFirstIterator<HepRelVertex,DefaultEdge>(2816)", "Delete SimpleName: graph(2817)", "Delete SimpleName: root(2818)", "Delete ClassInstanceCreation(2819)", "Delete VariableDeclarationFragment(2820)", "Delete VariableDeclarationStatement(2821)", "Delete SimpleName: vertex(2840)", "Delete SimpleName: bfsIter(2841)", "Delete SimpleName: next(2842)", "Delete MethodInvocation(2843)", "Delete VariableDeclarationFragment(2844)", "Delete VariableDeclarationStatement(2845)", "Delete SimpleName: bfsIter(2835)", "Delete SimpleName: hasNext(2836)", "Delete MethodInvocation(2837)", "Delete WhileStatement(2891)"]}}, {"VolcanoPlanner_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: com.google.common.base.Supplier to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: com.google.common.base.Suppliers to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: RelOptTable to SimpleType: RelOptTable at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: latticeByName to MethodInvocation at 0", "INS SimpleName: getLattice to MethodDeclaration at 3", "INS SimpleName: RelOptLattice to SimpleType: RelOptLattice at 0", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS SimpleName: table to MethodInvocation at 0", "INS SimpleType: RelOptTable to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: RelOptLattice to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: getQualifiedName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Map of lattices by the qualified name of their star table.  to TagElement at 0", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "UPDATE from List<RelOptLattice> to Map<List<String>,RelOptLattice>", "operations": ["UPD ParameterizedType: List<RelOptLattice> from List<RelOptLattice> to Map<List<String>,RelOptLattice>"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SimpleType: Map to ParameterizedType: List<RelOptLattice> at 0", "operations": ["INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Map to ParameterizedType: List<RelOptLattice> at 0"]}, {"root": "INS ParameterizedType: List<String> to ParameterizedType: List<RelOptLattice> at 1", "operations": ["INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: List<String> to ParameterizedType: List<RelOptLattice> at 1"]}, {"root": "UPDATE from lattices to latticeByName", "operations": ["UPD SimpleName: lattices from lattices to latticeByName", "UPD SimpleName: lattices from lattices to latticeByName"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: OptiqConnectionConfig to VariableDeclarationStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: OptiqConnectionConfig to TypeLiteral at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: config to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: OptiqConnectionConfig to SimpleType: OptiqConnectionConfig at 0", "INS SimpleName: context to MethodInvocation at 0", "INS SimpleName: unwrap to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: config to InfixExpression: == at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS Block to IfStatement at 1", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: materializationsEnabled to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: config to MethodInvocation at 0", "INS IfStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: RelOptMaterialization to MethodInvocation at 0", "INS SimpleType: Supplier to ParameterizedType: Supplier<RelNode> at 0", "INS SimpleName: get to MethodDeclaration at 2", "INS SimpleName: Suppliers to MethodInvocation at 0", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SimpleName: toLeafJoinForm to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ParameterizedType: Supplier<RelNode> to VariableDeclarationStatement at 1", "INS SimpleName: memoize to MethodInvocation at 1", "INS SimpleType: RelNode to ParameterizedType: Supplier<RelNode> at 1", "INS SimpleType: RelNode to MethodDeclaration at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleName: leafJoinRoot to VariableDeclarationFragment at 0", "INS SimpleName: originalRoot to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS ParameterizedType: Supplier<RelNode> to ClassInstanceCreation at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: RelNode to ParameterizedType: Supplier<RelNode> at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: Supplier to ParameterizedType: Supplier<RelNode> at 0"]}, {"root": "MOVE from ParameterizedType: List<String>", "operations": ["MOV SimpleType: List to ParameterizedType: List<String> at 0"]}, {"root": "UPDATE from Lists to Maps", "operations": ["UPD SimpleName: Lists from Lists to Maps"]}, {"root": "UPDATE from newArrayList to newLinkedHashMap", "operations": ["UPD SimpleName: newArrayList from newArrayList to newLinkedHashMap"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: values to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: latticeByName to MethodInvocation at 0"]}, {"root": "UPDATE from add to put", "operations": ["UPD SimpleName: add from add to put"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: lattice.starRelOptTable to MethodInvocation at 0", "INS SimpleName: getQualifiedName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from originalRoot to leafJoinRoot", "operations": ["UPD SimpleName: originalRoot from originalRoot to leafJoinRoot"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: originalRoot to MethodInvocation at 0"]}, {"root": "DEL SimpleName: lattices", "operations": ["DEL SimpleName: lattices"]}]}}, {"VolcanoPlanner_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(6086) at 15", "Insert ImportDeclaration(43) into CompilationUnit(6086) at 21", "Insert ImportDeclaration(45) into CompilationUnit(6086) at 22", "Insert QualifiedName: net.hydromatic.optiq.config.OptiqConnectionConfig(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: com.google.common.base.Supplier(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: com.google.common.base.Suppliers(44) into ImportDeclaration(45) at 0", "Insert MethodDeclaration(778) into TypeDeclaration: class(6085) at 38", "Insert Javadoc(464) into FieldDeclaration(482) at 0", "Update ParameterizedType: List<RelOptLattice>(462) to Map<List<String>,RelOptLattice>", "Insert MarkerAnnotation(726) into MethodDeclaration(740) at 0", "Insert MarkerAnnotation(742) into MethodDeclaration(759) at 0", "Insert MarkerAnnotation(761) into MethodDeclaration(778) at 0", "Insert Modifier: public(762) into MethodDeclaration(778) at 1", "Insert SimpleType: RelOptLattice(764) into MethodDeclaration(778) at 2", "Insert SimpleName: getLattice(765) into MethodDeclaration(778) at 3", "Insert SingleVariableDeclaration(769) into MethodDeclaration(778) at 4", "Insert Block(777) into MethodDeclaration(778) at 5", "Insert TagElement(463) into Javadoc(464) at 0", "Insert SimpleType: Map(468) into ParameterizedType: Map<List<String>,RelOptLattice>(476) at 0", "Insert ParameterizedType: List<String>(473) into ParameterizedType: Map<List<String>,RelOptLattice>(476) at 1", "Update SimpleName: lattices(463) to latticeByName", "Insert SimpleName: Override(725) into MarkerAnnotation(726) at 0", "Insert SimpleName: Override(741) into MarkerAnnotation(742) at 0", "Insert SimpleName: Override(760) into MarkerAnnotation(761) at 0", "Insert SimpleName: RelOptLattice(763) into SimpleType: RelOptLattice(764) at 0", "Insert SimpleType: RelOptTable(767) into SingleVariableDeclaration(769) at 0", "Insert SimpleName: table(768) into SingleVariableDeclaration(769) at 1", "Insert ReturnStatement(776) into Block(777) at 0", "Insert VariableDeclarationStatement(969) into Block(1227) at 0", "Insert IfStatement(980) into Block(1227) at 1", "Insert VariableDeclarationStatement(1161) into Block(1227) at 9", "Insert TextElement: Map of lattices by the qualified name of their star table. (462) into TagElement(463) at 0", "Insert SimpleName: Map(467) into SimpleType: Map(468) at 0", "Move SimpleType: List(459) into ParameterizedType: List<String>(473) at 0", "Insert SimpleType: String(472) into ParameterizedType: List<String>(473) at 1", "Update SimpleName: Lists(464) to Maps", "Update SimpleName: newArrayList(465) to newLinkedHashMap", "Insert SimpleName: RelOptTable(766) into SimpleType: RelOptTable(767) at 0", "Insert MethodInvocation(775) into ReturnStatement(776) at 0", "Insert Modifier: final(958) into VariableDeclarationStatement(969) at 0", "Insert SimpleType: OptiqConnectionConfig(960) into VariableDeclarationStatement(969) at 1", "Insert VariableDeclarationFragment(968) into VariableDeclarationStatement(969) at 2", "Insert InfixExpression: ||(977) into IfStatement(980) at 0", "Insert Block(979) into IfStatement(980) at 1", "Insert Modifier: final(1132) into VariableDeclarationStatement(1161) at 0", "Insert ParameterizedType: Supplier<RelNode>(1137) into VariableDeclarationStatement(1161) at 1", "Insert VariableDeclarationFragment(1160) into VariableDeclarationStatement(1161) at 2", "Insert MethodInvocation(1168) into EnhancedForStatement(1205) at 1", "Insert SimpleName: String(471) into SimpleType: String(472) at 0", "Update SimpleName: lattices(732) to latticeByName", "Update SimpleName: add(733) to put", "Insert MethodInvocation(754) into MethodInvocation(756) at 2", "Insert SimpleName: latticeByName(770) into MethodInvocation(775) at 0", "Insert SimpleName: get(771) into MethodInvocation(775) at 1", "Insert MethodInvocation(774) into MethodInvocation(775) at 2", "Insert SimpleName: OptiqConnectionConfig(959) into SimpleType: OptiqConnectionConfig(960) at 0", "Insert SimpleName: config(961) into VariableDeclarationFragment(968) at 0", "Insert MethodInvocation(967) into VariableDeclarationFragment(968) at 1", "Insert InfixExpression: ==(972) into InfixExpression: ||(977) at 0", "Insert PrefixExpression: !(976) into InfixExpression: ||(977) at 1", "Insert ReturnStatement(978) into Block(979) at 0", "Insert SimpleType: Supplier(1134) into ParameterizedType: Supplier<RelNode>(1137) at 0", "Insert SimpleType: RelNode(1136) into ParameterizedType: Supplier<RelNode>(1137) at 1", "Insert SimpleName: leafJoinRoot(1138) into VariableDeclarationFragment(1160) at 0", "Insert MethodInvocation(1159) into VariableDeclarationFragment(1160) at 1", "Insert SimpleName: latticeByName(1166) into MethodInvocation(1168) at 0", "Insert SimpleName: values(1167) into MethodInvocation(1168) at 1", "Insert QualifiedName: lattice.starRelOptTable(752) into MethodInvocation(754) at 0", "Insert SimpleName: getQualifiedName(753) into MethodInvocation(754) at 1", "Insert SimpleName: table(772) into MethodInvocation(774) at 0", "Insert SimpleName: getQualifiedName(773) into MethodInvocation(774) at 1", "Insert SimpleName: context(962) into MethodInvocation(967) at 0", "Insert SimpleName: unwrap(963) into MethodInvocation(967) at 1", "Insert TypeLiteral(966) into MethodInvocation(967) at 2", "Insert SimpleName: config(970) into InfixExpression: ==(972) at 0", "Insert NullLiteral(971) into InfixExpression: ==(972) at 1", "Insert MethodInvocation(975) into PrefixExpression: !(976) at 0", "Insert SimpleName: Supplier(1133) into SimpleType: Supplier(1134) at 0", "Insert SimpleName: RelNode(1135) into SimpleType: RelNode(1136) at 0", "Insert SimpleName: Suppliers(1139) into MethodInvocation(1159) at 0", "Insert SimpleName: memoize(1140) into MethodInvocation(1159) at 1", "Insert ClassInstanceCreation(1158) into MethodInvocation(1159) at 2", "Insert SimpleType: OptiqConnectionConfig(965) into TypeLiteral(966) at 0", "Insert SimpleName: config(973) into MethodInvocation(975) at 0", "Insert SimpleName: materializationsEnabled(974) into MethodInvocation(975) at 1", "Insert ParameterizedType: Supplier<RelNode>(1145) into ClassInstanceCreation(1158) at 0", "Insert AnonymousClassDeclaration(1157) into ClassInstanceCreation(1158) at 1", "Insert SimpleName: OptiqConnectionConfig(964) into SimpleType: OptiqConnectionConfig(965) at 0", "Insert SimpleType: Supplier(1142) into ParameterizedType: Supplier<RelNode>(1145) at 0", "Insert SimpleType: RelNode(1144) into ParameterizedType: Supplier<RelNode>(1145) at 1", "Insert MethodDeclaration(1156) into AnonymousClassDeclaration(1157) at 0", "Insert SimpleName: Supplier(1141) into SimpleType: Supplier(1142) at 0", "Insert SimpleName: RelNode(1143) into SimpleType: RelNode(1144) at 0", "Insert Modifier: public(1146) into MethodDeclaration(1156) at 0", "Insert SimpleType: RelNode(1148) into MethodDeclaration(1156) at 1", "Insert SimpleName: get(1149) into MethodDeclaration(1156) at 2", "Insert Block(1155) into MethodDeclaration(1156) at 3", "Insert SimpleName: RelNode(1147) into SimpleType: RelNode(1148) at 0", "Insert ReturnStatement(1154) into Block(1155) at 0", "Insert MethodInvocation(1184) into MethodInvocation(1185) at 2", "Insert MethodInvocation(1153) into ReturnStatement(1154) at 0", "Update SimpleName: originalRoot(1087) to leafJoinRoot", "Move SimpleName: originalRoot(1087) into MethodInvocation(1184) at 0", "Insert SimpleName: get(1183) into MethodInvocation(1184) at 1", "Insert SimpleName: RelOptMaterialization(1150) into MethodInvocation(1153) at 0", "Insert SimpleName: toLeafJoinForm(1151) into MethodInvocation(1153) at 1", "Insert SimpleName: originalRoot(1152) into MethodInvocation(1153) at 2", "Delete SimpleName: lattices(1073)"]}}, {"JdbcImplementor_cluster": {"actions": [{"root": "UPDATE from Collections to clauseList", "operations": ["UPD SimpleName: Collections from Collections to clauseList"]}, {"root": "UPDATE from addAll to appendAll", "operations": ["UPD SimpleName: addAll from addAll to appendAll"]}, {"root": "DEL SimpleName: clauseList", "operations": ["DEL SimpleName: clauseList"]}]}}, {"JdbcImplementor_diff": {"operations": ["Update SimpleName: Collections(1722) to clauseList", "Update SimpleName: addAll(1723) to appendAll", "Delete SimpleName: clauseList(1724)"]}}, {"JavaRules_cluster": {"actions": [{"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: BitSets to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: groupSet to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: getRowType to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: child to MethodInvocation at 0", "INS SimpleName: getFieldCount to MethodInvocation at 1", "INS SimpleName: range to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 0"]}]}}, {"JavaRules_diff": {"operations": ["Insert InfixExpression: &&(4335) into IfStatement(4407) at 0", "Move MethodInvocation(4323) into InfixExpression: &&(4335) at 0", "Insert MethodInvocation(4334) into InfixExpression: &&(4335) at 1", "Insert SimpleName: groupSet(4324) into MethodInvocation(4334) at 0", "Insert SimpleName: equals(4325) into MethodInvocation(4334) at 1", "Insert MethodInvocation(4333) into MethodInvocation(4334) at 2", "Insert SimpleName: BitSets(4326) into MethodInvocation(4333) at 0", "Insert SimpleName: range(4327) into MethodInvocation(4333) at 1", "Insert MethodInvocation(4332) into MethodInvocation(4333) at 2", "Insert MethodInvocation(4330) into MethodInvocation(4332) at 0", "Insert SimpleName: getFieldCount(4331) into MethodInvocation(4332) at 1", "Insert SimpleName: child(4328) into MethodInvocation(4330) at 0", "Insert SimpleName: getRowType(4329) into MethodInvocation(4330) at 1"]}}], "commit_stats": [{"total_files": 42, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}