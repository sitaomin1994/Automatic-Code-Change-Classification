{"application": "google-closure-compiler", "csha": "fd79cc9e9b6d7a1a42291343555a32d2d3491148", "files": [{"PeepholeRemoveDeadCode_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 14"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS VariableDeclarationStatement to Block at 8", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: branchToRemove to VariableDeclarationFragment at 0", "INS SimpleType: Node to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 9"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: elseBody to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: branchToRemove to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: branchToKeep to Assignment: = at 0", "INS SimpleName: thenBody to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: elseBody to Assignment: = at 1", "INS SimpleName: branchToRemove to Assignment: = at 0", "INS SimpleName: thenBody to Assignment: = at 1", "INS SimpleName: branchToKeep to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 10", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: n to MethodInvocation at 0", "INS SimpleName: detachChildren to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Node to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: branchToKeep to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: NodeUtil to MethodInvocation at 0", "INS SimpleName: cond to MethodInvocation at 2", "INS SimpleName: compiler to MethodInvocation at 3", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: markFunctionsDeleted to MethodInvocation at 1"]}, {"root": "UPDATE from deleteChildren to markFunctionsDeleted", "operations": ["UPD SimpleName: deleteChildren from deleteChildren to markFunctionsDeleted"]}, {"root": "UPDATE from n to branchToRemove", "operations": ["UPD SimpleName: n from n to branchToRemove"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: elseBody", "DEL VariableDeclarationStatement", "DEL SimpleName: thenBody", "DEL ConditionalExpression"]}]}}, {"PeepholeRemoveDeadCode_diff": {"operations": ["Move ExpressionStatement(2882) into Block(2944) at 14", "Insert VariableDeclarationStatement(2857) into Block(2944) at 8", "Insert VariableDeclarationStatement(2862) into Block(2944) at 9", "Insert IfStatement(2885) into Block(2944) at 10", "Insert ExpressionStatement(2901) into Block(2944) at 13", "Move SimpleType: Node(2854) into VariableDeclarationStatement(2857) at 0", "Insert VariableDeclarationFragment(2856) into VariableDeclarationStatement(2857) at 1", "Insert SimpleType: Node(2859) into VariableDeclarationStatement(2862) at 0", "Insert VariableDeclarationFragment(2861) into VariableDeclarationStatement(2862) at 1", "Move MethodInvocation(2859) into IfStatement(2885) at 0", "Insert Block(2875) into IfStatement(2885) at 1", "Insert Block(2884) into IfStatement(2885) at 2", "Insert MethodInvocation(2900) into ExpressionStatement(2901) at 0", "Move SimpleName: branchToKeep(2855) into VariableDeclarationFragment(2856) at 0", "Insert SimpleName: Node(2858) into SimpleType: Node(2859) at 0", "Insert SimpleName: branchToRemove(2860) into VariableDeclarationFragment(2861) at 0", "Insert ExpressionStatement(2870) into Block(2875) at 0", "Insert ExpressionStatement(2874) into Block(2875) at 1", "Insert ExpressionStatement(2879) into Block(2884) at 0", "Insert ExpressionStatement(2883) into Block(2884) at 1", "Insert SimpleName: n(2898) into MethodInvocation(2900) at 0", "Insert SimpleName: detachChildren(2899) into MethodInvocation(2900) at 1", "Insert ExpressionStatement(2924) into Block(2925) at 1", "Update SimpleName: deleteChildren(2878) to markFunctionsDeleted", "Update SimpleName: n(2879) to branchToRemove", "Insert Assignment: =(2869) into ExpressionStatement(2870) at 0", "Insert Assignment: =(2873) into ExpressionStatement(2874) at 0", "Insert Assignment: =(2878) into ExpressionStatement(2879) at 0", "Insert Assignment: =(2882) into ExpressionStatement(2883) at 0", "Insert MethodInvocation(2923) into ExpressionStatement(2924) at 0", "Insert SimpleName: branchToKeep(2867) into Assignment: =(2869) at 0", "Insert SimpleName: thenBody(2868) into Assignment: =(2869) at 1", "Insert SimpleName: branchToRemove(2871) into Assignment: =(2873) at 0", "Insert SimpleName: elseBody(2872) into Assignment: =(2873) at 1", "Insert SimpleName: branchToKeep(2876) into Assignment: =(2878) at 0", "Insert SimpleName: elseBody(2877) into Assignment: =(2878) at 1", "Insert SimpleName: branchToRemove(2880) into Assignment: =(2882) at 0", "Insert SimpleName: thenBody(2881) into Assignment: =(2882) at 1", "Insert SimpleName: NodeUtil(2919) into MethodInvocation(2923) at 0", "Insert SimpleName: markFunctionsDeleted(2920) into MethodInvocation(2923) at 1", "Insert SimpleName: cond(2921) into MethodInvocation(2923) at 2", "Insert SimpleName: compiler(2922) into MethodInvocation(2923) at 3", "Delete SimpleName: thenBody(2860)", "Delete SimpleName: elseBody(2861)", "Delete ConditionalExpression(2862)", "Delete VariableDeclarationFragment(2863)", "Delete VariableDeclarationStatement(2864)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}