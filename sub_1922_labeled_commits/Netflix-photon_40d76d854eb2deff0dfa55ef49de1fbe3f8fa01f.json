{"application": "Netflix-photon", "csha": "40d76d854eb2deff0dfa55ef49de1fbe3f8fa01f", "files": [{"IMPValidator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: java.util.Collections to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: unmodifiableList to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: errors to MethodInvocation at 2", "INS SimpleName: Collections to MethodInvocation at 0"]}, {"root": "DEL SimpleName: errors", "operations": ["DEL SimpleName: errors"]}]}}, {"IMPValidator_diff": {"operations": ["Insert ImportDeclaration(51) into CompilationUnit(1094) at 25", "Insert QualifiedName: java.util.Collections(50) into ImportDeclaration(51) at 0", "Insert ClassInstanceCreation(827) into VariableDeclarationFragment(828) at 1", "Insert ParameterizedType: ArrayList<>(823) into ClassInstanceCreation(827) at 0", "Move MethodInvocation(821) into ClassInstanceCreation(827) at 1", "Insert MethodInvocation(845) into ReturnStatement(846) at 0", "Insert SimpleType: ArrayList(822) into ParameterizedType: ArrayList<>(823) at 0", "Insert SimpleName: Collections(842) into MethodInvocation(845) at 0", "Insert SimpleName: unmodifiableList(843) into MethodInvocation(845) at 1", "Insert SimpleName: errors(844) into MethodInvocation(845) at 2", "Insert SimpleName: ArrayList(821) into SimpleType: ArrayList(822) at 0", "Delete SimpleName: errors(836)"]}}, {"DOMNodeObjectModel_cluster": {"actions": [{"root": "INS ExpressionStatement to SwitchStatement at 5", "operations": ["INS SimpleName: child to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 5", "INS SimpleName: getNextSibling to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: child to Assignment: = at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 6", "operations": ["INS BreakStatement to SwitchStatement at 6"]}, {"root": "INS SwitchCase to SwitchStatement at 7", "operations": ["INS SwitchCase to SwitchStatement at 7"]}, {"root": "INS QualifiedName: Node.COMMENT_NODE to SwitchCase at 0", "operations": ["INS QualifiedName: Node.COMMENT_NODE to SwitchCase at 0"]}]}}, {"DOMNodeObjectModel_diff": {"operations": ["Insert ExpressionStatement(222) into SwitchStatement(233) at 5", "Insert BreakStatement(223) into SwitchStatement(233) at 6", "Insert SwitchCase(224) into SwitchStatement(233) at 7", "Insert QualifiedName: Node.COMMENT_NODE(215) into SwitchCase(216) at 0", "Insert Assignment: =(221) into ExpressionStatement(222) at 0", "Insert SimpleName: child(217) into Assignment: =(221) at 0", "Insert MethodInvocation(220) into Assignment: =(221) at 1", "Insert SimpleName: child(218) into MethodInvocation(220) at 0", "Insert SimpleName: getNextSibling(219) into MethodInvocation(220) at 1"]}}, {"CompositionPlaylist_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: IMFErrorLogger to SingleVariableDeclaration at 1", "INS SimpleName: IMFErrorLogger to SimpleType: IMFErrorLogger at 0", "INS SimpleName: imfErrorLogger to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: Nonnull to MarkerAnnotation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Unsupported sequence type or schema\" to MethodInvocation at 4", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR to MethodInvocation at 2", "INS SimpleName: JAXBElement to SimpleType: JAXBElement at 0", "INS SimpleType: JAXBElement to InstanceofExpression at 1", "INS SimpleName: addError to MethodInvocation at 1", "INS ContinueStatement to Block at 1", "INS IfStatement to Block at 0", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS Block to IfStatement at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS SimpleName: object to InstanceofExpression at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING to MethodInvocation at 3"]}, {"root": "INS SimpleName: imfErrorLogger to MethodInvocation at 2", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 2"]}, {"root": "INS SimpleName: imfErrorLogger to MethodInvocation at 2", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 2"]}, {"root": "INS SimpleName: imfErrorLogger to MethodInvocation at 3", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 3"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 0", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS SimpleName: JAXBElement to SimpleType: JAXBElement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: JAXBElement to InstanceofExpression at 1", "INS SimpleName: addError to MethodInvocation at 1", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ContinueStatement to Block at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING to MethodInvocation at 3", "INS SimpleName: object to InstanceofExpression at 0", "INS StringLiteral: \"Unsupported sequence type or schema\" to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: object to InstanceofExpression at 0", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS SimpleName: JAXBElement to SimpleType: JAXBElement at 0", "INS StringLiteral: \"Unsupported sequence type or schema\" to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS SimpleType: JAXBElement to InstanceofExpression at 1", "INS SimpleName: addError to MethodInvocation at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR to MethodInvocation at 2", "INS ContinueStatement to Block at 1"]}]}}, {"CompositionPlaylist_diff": {"operations": ["Insert SingleVariableDeclaration(2039) into MethodDeclaration(2243) at 4", "Insert MarkerAnnotation(2035) into SingleVariableDeclaration(2039) at 0", "Insert SimpleType: IMFErrorLogger(2037) into SingleVariableDeclaration(2039) at 1", "Insert SimpleName: imfErrorLogger(2038) into SingleVariableDeclaration(2039) at 2", "Insert SimpleName: Nonnull(2034) into MarkerAnnotation(2035) at 0", "Insert SimpleName: IMFErrorLogger(2036) into SimpleType: IMFErrorLogger(2037) at 0", "Insert IfStatement(1537) into Block(1742) at 0", "Insert SimpleName: imfErrorLogger(528) into MethodInvocation(529) at 2", "Insert SimpleName: imfErrorLogger(874) into MethodInvocation(875) at 2", "Insert SimpleName: imfErrorLogger(1379) into MethodInvocation(1380) at 3", "Insert PrefixExpression: !(1527) into IfStatement(1537) at 0", "Insert Block(1536) into IfStatement(1537) at 1", "Insert ParenthesizedExpression(1526) into PrefixExpression: !(1527) at 0", "Insert ExpressionStatement(1534) into Block(1536) at 0", "Insert ContinueStatement(1535) into Block(1536) at 1", "Insert IfStatement(1890) into Block(1968) at 0", "Insert IfStatement(2095) into Block(2200) at 0", "Insert InstanceofExpression(1525) into ParenthesizedExpression(1526) at 0", "Insert MethodInvocation(1533) into ExpressionStatement(1534) at 0", "Insert PrefixExpression: !(1880) into IfStatement(1890) at 0", "Insert Block(1889) into IfStatement(1890) at 1", "Insert PrefixExpression: !(2085) into IfStatement(2095) at 0", "Insert Block(2094) into IfStatement(2095) at 1", "Insert SimpleName: object(1522) into InstanceofExpression(1525) at 0", "Insert SimpleType: JAXBElement(1524) into InstanceofExpression(1525) at 1", "Insert SimpleName: imfErrorLogger(1528) into MethodInvocation(1533) at 0", "Insert SimpleName: addError(1529) into MethodInvocation(1533) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR(1530) into MethodInvocation(1533) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING(1531) into MethodInvocation(1533) at 3", "Insert StringLiteral: \"Unsupported sequence type or schema\"(1532) into MethodInvocation(1533) at 4", "Insert ParenthesizedExpression(1879) into PrefixExpression: !(1880) at 0", "Insert ExpressionStatement(1887) into Block(1889) at 0", "Insert ContinueStatement(1888) into Block(1889) at 1", "Insert ParenthesizedExpression(2084) into PrefixExpression: !(2085) at 0", "Insert ExpressionStatement(2092) into Block(2094) at 0", "Insert ContinueStatement(2093) into Block(2094) at 1", "Insert SimpleName: JAXBElement(1523) into SimpleType: JAXBElement(1524) at 0", "Insert InstanceofExpression(1878) into ParenthesizedExpression(1879) at 0", "Insert MethodInvocation(1886) into ExpressionStatement(1887) at 0", "Insert InstanceofExpression(2083) into ParenthesizedExpression(2084) at 0", "Insert MethodInvocation(2091) into ExpressionStatement(2092) at 0", "Insert SimpleName: object(1875) into InstanceofExpression(1878) at 0", "Insert SimpleType: JAXBElement(1877) into InstanceofExpression(1878) at 1", "Insert SimpleName: imfErrorLogger(1881) into MethodInvocation(1886) at 0", "Insert SimpleName: addError(1882) into MethodInvocation(1886) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR(1883) into MethodInvocation(1886) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING(1884) into MethodInvocation(1886) at 3", "Insert StringLiteral: \"Unsupported sequence type or schema\"(1885) into MethodInvocation(1886) at 4", "Insert SimpleName: object(2080) into InstanceofExpression(2083) at 0", "Insert SimpleType: JAXBElement(2082) into InstanceofExpression(2083) at 1", "Insert SimpleName: imfErrorLogger(2086) into MethodInvocation(2091) at 0", "Insert SimpleName: addError(2087) into MethodInvocation(2091) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR(2088) into MethodInvocation(2091) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.WARNING(2089) into MethodInvocation(2091) at 3", "Insert StringLiteral: \"Unsupported sequence type or schema\"(2090) into MethodInvocation(2091) at 4", "Insert SimpleName: JAXBElement(1876) into SimpleType: JAXBElement(1877) at 0", "Insert SimpleName: JAXBElement(2081) into SimpleType: JAXBElement(2082) at 0"]}}, {"CompositionPlaylistConformanceValidator_cluster": {"actions": [{"root": "UPDATE from equals to containsAll", "operations": ["UPD SimpleName: equals from equals to containsAll"]}]}}, {"CompositionPlaylistConformanceValidator_diff": {"operations": ["Update SimpleName: equals(429) to containsAll"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}