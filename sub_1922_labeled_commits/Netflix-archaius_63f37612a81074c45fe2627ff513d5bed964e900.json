{"application": "Netflix-archaius", "csha": "63f37612a81074c45fe2627ff513d5bed964e900", "files": [{"ConcurrentCompositeConfiguration_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: config to MethodInvocation at 0", "INS SimpleName: configList to EnhancedForStatement at 1", "INS SimpleName: it to VariableDeclarationFragment at 0", "INS SimpleName: it to MethodInvocation at 0", "INS SimpleName: prefix to MethodInvocation at 2", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS EnhancedForStatement to Block at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: getKeys to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS TagElement to Javadoc at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ForStatement at 1", "INS SimpleType: Iterator to ParameterizedType: Iterator<String> at 0", "INS ParameterizedType: Iterator<String> to VariableDeclarationExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS TextElement: Get the list of the keys contained in the sub configurations that match the to TagElement at 0", "INS Block to ForStatement at 2", "INS TextElement: specified prefix. to TagElement at 1", "INS SimpleType: String to ParameterizedType: Iterator<String> at 1", "INS Javadoc to MethodDeclaration at 0", "INS ForStatement to Block at 0", "INS Block to EnhancedForStatement at 2"]}, {"root": "UPDATE from setNewContainerConfiguration to setContainerConfiguration", "operations": ["UPD SimpleName: setNewContainerConfiguration from setNewContainerConfiguration to setContainerConfiguration"]}, {"root": "INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 7", "operations": ["INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 7", "INS SimpleName: IndexOutOfBoundsException to SimpleType: IndexOutOfBoundsException at 0"]}, {"root": "INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 5", "operations": ["INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 5", "INS SimpleName: IndexOutOfBoundsException to SimpleType: IndexOutOfBoundsException at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Add a configuration with a name at a particular index. to TagElement at 0", "INS SimpleName: IndexOutOfBoundsException to TagElement: @throws at 0", "INS TextElement:   to TagElement: @throws at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @throws to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 7", "operations": ["INS SimpleType: IndexOutOfBoundsException to MethodDeclaration at 7", "INS SimpleName: IndexOutOfBoundsException to SimpleType: IndexOutOfBoundsException at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Override the same property in any other configurations in the list. to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @link to TagElement at 1", "INS MethodRefParameter to MethodRef at 2", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Remove the overriding property set by  to TagElement at 0", "INS SimpleName: setOverrideProperty to MethodRef at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleType: Object to MethodRefParameter at 0", "INS MethodRefParameter to MethodRef at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: <em>container configuration</em> in the configurations list. to TagElement at 5", "INS SimpleName: getProperty to MethodRef at 0", "INS MethodRef to TagElement: @link at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: if there is any other configuration that contain the same property and is in front of the  to TagElement at 4", "INS TextElement:  on this key may not return the same value set by this method to TagElement at 3", "INS TextElement: Set the property with the <em>container configuration</em>.  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS TextElement: <b>Warning: </b> to TagElement at 1", "INS TagElement: @link to TagElement at 2", "INS SimpleType: String to MethodRefParameter at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @link to TagElement at 2", "INS TagElement to Javadoc at 0", "INS TextElement: <b>Warning: </b> to TagElement at 1", "INS TextElement: <em>container configuration</em> in the configurations list. to TagElement at 5", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: getProperty to MethodRef at 0", "INS MethodRefParameter to MethodRef at 1", "INS TextElement: if there is any other configuration that contain the same property and is in front of the  to TagElement at 4", "INS TextElement:  on this key may not return the same value set by this method to TagElement at 3", "INS TextElement: Add the property with the <em>container configuration</em>.  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS MethodRef to TagElement: @link at 0", "INS SimpleName: getProperty to MethodRef at 0", "INS TextElement: <b>Warning: </b> to TagElement at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS TextElement: Clear the property with the <em>container configuration</em>.  to TagElement at 0", "INS MethodRefParameter to MethodRef at 1", "INS TextElement: if there is any other configuration that contain the same property and is in front of the  to TagElement at 4", "INS TagElement: @link to TagElement at 2", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  on this key may still return some value  to TagElement at 3", "INS TextElement: <em>container configuration</em> in the configurations list. to TagElement at 5", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Get all the keys contained by sub configurations. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: getKeys to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV ParameterizedType: Iterator<String> to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement: Check if the any of the sub configurations contains the specified key. to TagElement at 0", "INS TextElement: key, <code>false</code> otherwise to TagElement: @return at 1", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  the key whose presence in this configuration is to be tested to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS TextElement:  <code>true</code> if the configuration contains a value for this to TagElement: @return at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: key to TagElement: @param at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @return to Javadoc at 3", "INS TextElement:  The default value. to TagElement: @param at 1", "INS TextElement: is returned. to TagElement at 2", "INS SimpleName: key to TagElement: @param at 0", "INS TextElement:  The associated List of value. to TagElement: @return at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement: Get a List of objects associated with the given configuration key. to TagElement at 0", "INS SimpleName: defaultValue to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: If the key doesn't map to an existing object, the default value to TagElement at 1", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  The configuration key. to TagElement: @param at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:  The configuration key. to TagElement: @param at 1", "INS TagElement: @return to Javadoc at 2", "INS TextElement: If the key doesn't map to an existing object an empty array is returned to TagElement at 1", "INS SimpleName: key to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Get an array of strings associated with the given configuration key. to TagElement at 0", "INS TextElement:  The associated string array if key is found. to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "UPDATE from getInMemoryConfiguration to getContainerConfiguration", "operations": ["UPD SimpleName: getInMemoryConfiguration from getInMemoryConfiguration to getContainerConfiguration", "UPD SimpleName: getInMemoryConfiguration from getInMemoryConfiguration to getContainerConfiguration", "UPD SimpleName: getInMemoryConfiguration from getInMemoryConfiguration to getContainerConfiguration"]}, {"root": "UPDATE from If Configuration1 doesn't have the property, then to Only if Configuration1 doesn't have the property, then", "operations": ["UPD TextElement: If Configuration1 doesn't have the property, then from If Configuration1 doesn't have the property, then to Only if Configuration1 doesn't have the property, then"]}, {"root": "UPDATE from There are two internal configurations for properties that are programmically set: to There are two internal configurations for properties that are programmatically set:", "operations": ["UPD TextElement: There are two internal configurations for properties that are programmically set: from There are two internal configurations for properties that are programmically set: to There are two internal configurations for properties that are programmatically set:"]}, {"root": "UPDATE from <li>Configuration to hold properties that are programmatically set to override values from any other  to <li>Configuration to hold properties that are programmatically set (using ", "operations": ["UPD TextElement: <li>Configuration to hold properties that are programmatically set to override values from any other  from <li>Configuration to hold properties that are programmatically set to override values from any other  to <li>Configuration to hold properties that are programmatically set (using "]}, {"root": "INS TagElement: @link to TagElement at 20", "operations": ["INS TagElement: @link to TagElement at 20", "INS SimpleType: Object to MethodRefParameter at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: setOverrideProperty to MethodRef at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodRefParameter to MethodRef at 2", "INS MethodRefParameter to MethodRef at 1", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS TextElement: ) to override values from any other  to TagElement at 21", "operations": ["INS TextElement: ) to override values from any other  to TagElement at 21"]}, {"root": "UPDATE from configurations on the list. As contract to container configuration, this configuration is always consulted first in  to configurations on the list. As contrast to container configuration, this configuration is always consulted first in ", "operations": ["UPD TextElement: configurations on the list. As contract to container configuration, this configuration is always consulted first in  from configurations on the list. As contract to container configuration, this configuration is always consulted first in  to configurations on the list. As contrast to container configuration, this configuration is always consulted first in "]}, {"root": "INS TagElement: @throws to Javadoc at 4", "operations": ["INS TagElement: @throws to Javadoc at 4", "INS SimpleName: IndexOutOfBoundsException to TagElement: @throws at 0"]}, {"root": "INS TagElement: @throws to Javadoc at 1", "operations": ["INS TagElement: @throws to Javadoc at 1", "INS SimpleName: IndexOutOfBoundsException to TagElement: @throws at 0"]}, {"root": "INS ForStatement to Block at 1", "operations": ["INS ForStatement to Block at 1", "INS SimpleName: it to VariableDeclarationFragment at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: getKeys to MethodInvocation at 1", "INS Block to ForStatement at 2", "INS ParameterizedType: Iterator<String> to VariableDeclarationExpression at 0", "INS SimpleType: String to ParameterizedType: Iterator<String> at 1", "INS SimpleName: it to MethodInvocation at 0", "INS SimpleName: keys to MethodInvocation at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: overrideProperties to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<String> at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ForStatement at 1", "INS SimpleName: it to MethodInvocation at 0"]}, {"root": "UPDATE from key to prefix", "operations": ["UPD SimpleName: key from key to prefix", "UPD SimpleName: key from key to prefix"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: overrideProperties to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: overrideProperties to MethodInvocation at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: list to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: overrideProperties to MethodInvocation at 2", "INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: overrideProperties to MethodInvocation at 0", "INS SimpleName: appendListProperty to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: key to MethodInvocation at 3"]}, {"root": "UPDATE from . If so, it returns the value that gets overridden. to  and if so return the overriding value.", "operations": ["UPD TextElement: . If so, it returns the value that gets overridden. from . If so, it returns the value that gets overridden. to  and if so return the overriding value."]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "UPDATE from Returns the &quot;in memory configuration&quot;. In this configuration to Returns the <em>container configuration</em> In this configuration", "operations": ["UPD TextElement: Returns the &quot;in memory configuration&quot;. In this configuration from Returns the &quot;in memory configuration&quot;. In this configuration to Returns the <em>container configuration</em> In this configuration"]}, {"root": "UPDATE from  the in memory configuration to  the container configuration", "operations": ["UPD TextElement:  the in memory configuration from  the in memory configuration to  the container configuration"]}, {"root": "UPDATE from config to overrideProperties", "operations": ["UPD SimpleName: config from config to overrideProperties"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from containerConfiguration to keys", "operations": ["UPD SimpleName: containerConfiguration from containerConfiguration to keys"]}, {"root": "UPDATE from clearProperty to add", "operations": ["UPD SimpleName: clearProperty from clearProperty to add"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: next to MethodInvocation at 1"]}, {"root": "UPDATE from key to it", "operations": ["UPD SimpleName: key from key to it"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 0"]}, {"root": "DEL TextElement: <p>When querying properties the order in which child configurations have been", "operations": ["DEL TextElement: <p>When querying properties the order in which child configurations have been"]}, {"root": "DEL TextElement: added is relevant. To deal with property updates, a so-called <em>in-memory", "operations": ["DEL TextElement: added is relevant. To deal with property updates, a so-called <em>in-memory"]}, {"root": "DEL TextElement: configuration</em> is used. Per default, such a configuration is created", "operations": ["DEL TextElement: configuration</em> is used. Per default, such a configuration is created"]}, {"root": "DEL TextElement: automatically. All property writes target this special configuration. There", "operations": ["DEL TextElement: automatically. All property writes target this special configuration. There"]}, {"root": "DEL TextElement: are constructors which allow you to provide a specific in-memory configuration.", "operations": ["DEL TextElement: are constructors which allow you to provide a specific in-memory configuration."]}, {"root": "DEL TextElement: If used that way, the in-memory configuration is always the last one in the", "operations": ["DEL TextElement: If used that way, the in-memory configuration is always the last one in the"]}, {"root": "DEL TextElement: list of child configurations. This means that for query operations all other", "operations": ["DEL TextElement: list of child configurations. This means that for query operations all other"]}, {"root": "DEL TextElement: configurations take precedence.</p>", "operations": ["DEL TextElement: configurations take precedence.</p>"]}, {"root": "DEL TextElement: <p>Alternatively it is possible to mark a child configuration as in-memory", "operations": ["DEL TextElement: <p>Alternatively it is possible to mark a child configuration as in-memory"]}, {"root": "DEL TextElement: configuration when it is added. In this case the treatment of the in-memory", "operations": ["DEL TextElement: configuration when it is added. In this case the treatment of the in-memory"]}, {"root": "DEL TextElement: configuration is slightly different: it remains in the list of child", "operations": ["DEL TextElement: configuration is slightly different: it remains in the list of child"]}, {"root": "DEL TextElement: configurations at the position it was added, i.e. its priority for property", "operations": ["DEL TextElement: configurations at the position it was added, i.e. its priority for property"]}, {"root": "DEL TextElement: queries can be defined by adding the child configurations in the correct", "operations": ["DEL TextElement: queries can be defined by adding the child configurations in the correct"]}, {"root": "DEL TextElement: order.</p>", "operations": ["DEL TextElement: order.</p>"]}, {"root": "DEL TextElement: This class adds with the following changes/improvements to ComositeConfiguration:", "operations": ["DEL TextElement: This class adds with the following changes/improvements to ComositeConfiguration:"]}, {"root": "DEL TextElement: <ul>", "operations": ["DEL TextElement: <ul>"]}, {"root": "DEL TextElement: <li>It holds the list of sub configuration on a CopyOnWriteArrayList, which is thread safe and does not throw ", "operations": ["DEL TextElement: <li>It holds the list of sub configuration on a CopyOnWriteArrayList, which is thread safe and does not throw "]}, {"root": "DEL TextElement: ConcurrentModificationException when it is modified while traversing its iterator.", "operations": ["DEL TextElement: ConcurrentModificationException when it is modified while traversing its iterator."]}, {"root": "DEL TextElement: <li>Its clearPropertyDirect() does not remove any property in the list of sub configurations other than ", "operations": ["DEL TextElement: <li>Its clearPropertyDirect() does not remove any property in the list of sub configurations other than "]}, {"root": "DEL TextElement: the one designated as in memory configuration.", "operations": ["DEL TextElement: the one designated as in memory configuration."]}, {"root": "DEL TextElement: <li>It maintains an additional Map that maps sub configuration to a name.", "operations": ["DEL TextElement: <li>It maintains an additional Map that maps sub configuration to a name."]}, {"root": "DEL TextElement: </ul>", "operations": ["DEL TextElement: </ul>"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL EnhancedForStatement", "DEL Block", "DEL Block", "DEL SimpleName: configList", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleType: String", "DEL SimpleName: clearPropertyDirect", "DEL SingleVariableDeclaration", "DEL SimpleName: key", "DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL Modifier: public"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  the copy"]}, {"root": "DEL TagElement: @since", "operations": ["DEL TagElement: @since", "DEL TextElement:  1.3"]}]}}, {"ConcurrentCompositeConfiguration_diff": {"operations": ["Insert MethodDeclaration(1633) into TypeDeclaration: class(2506) at 43", "Update SimpleName: setNewContainerConfiguration(796) to setContainerConfiguration", "Insert SimpleType: IndexOutOfBoundsException(799) into MethodDeclaration(834) at 7", "Insert SimpleType: IndexOutOfBoundsException(847) into MethodDeclaration(895) at 5", "Insert Javadoc(901) into MethodDeclaration(967) at 0", "Insert SimpleType: IndexOutOfBoundsException(917) into MethodDeclaration(967) at 7", "Insert Javadoc(1236) into MethodDeclaration(1255) at 0", "Insert Javadoc(1267) into MethodDeclaration(1281) at 0", "Insert Javadoc(1294) into MethodDeclaration(1315) at 0", "Insert Javadoc(1328) into MethodDeclaration(1349) at 0", "Insert Javadoc(1362) into MethodDeclaration(1378) at 0", "Insert Javadoc(1461) into MethodDeclaration(1541) at 0", "Insert Javadoc(1545) into MethodDeclaration(1633) at 0", "Move MarkerAnnotation(1459) into MethodDeclaration(1633) at 1", "Move Modifier: public(1460) into MethodDeclaration(1633) at 2", "Move ParameterizedType: Iterator<String>(1465) into MethodDeclaration(1633) at 3", "Move SimpleName: getKeys(1466) into MethodDeclaration(1633) at 4", "Move SingleVariableDeclaration(1470) into MethodDeclaration(1633) at 5", "Insert Block(1632) into MethodDeclaration(1633) at 6", "Move MarkerAnnotation(1566) into MethodDeclaration(1685) at 0", "Insert Javadoc(1694) into MethodDeclaration(1730) at 0", "Insert MarkerAnnotation(1696) into MethodDeclaration(1730) at 1", "Insert Javadoc(1743) into MethodDeclaration(1877) at 0", "Insert Javadoc(1886) into MethodDeclaration(1952) at 0", "Update SimpleName: getInMemoryConfiguration(1850) to getContainerConfiguration", "Update TextElement: If Configuration1 doesn't have the property, then(54) to Only if Configuration1 doesn't have the property, then", "Update TextElement: There are two internal configurations for properties that are programmically set:(56) to There are two internal configurations for properties that are programmatically set:", "Update TextElement: <li>Configuration to hold properties that are programmatically set to override values from any other (94) to <li>Configuration to hold properties that are programmatically set (using ", "Insert TagElement: @link(103) into TagElement(148) at 20", "Insert TextElement: ) to override values from any other (104) into TagElement(148) at 21", "Update TextElement: configurations on the list. As contract to container configuration, this configuration is always consulted first in (95) to configurations on the list. As contrast to container configuration, this configuration is always consulted first in ", "Insert TagElement: @throws(782) into Javadoc(783) at 4", "Insert SimpleName: IndexOutOfBoundsException(798) into SimpleType: IndexOutOfBoundsException(799) at 0", "Insert TagElement: @throws(838) into Javadoc(839) at 1", "Insert SimpleName: IndexOutOfBoundsException(846) into SimpleType: IndexOutOfBoundsException(847) at 0", "Insert TagElement(897) into Javadoc(901) at 0", "Insert TagElement: @throws(900) into Javadoc(901) at 1", "Insert SimpleName: IndexOutOfBoundsException(916) into SimpleType: IndexOutOfBoundsException(917) at 0", "Insert TagElement(1235) into Javadoc(1236) at 0", "Insert TagElement(1266) into Javadoc(1267) at 0", "Insert TagElement(1293) into Javadoc(1294) at 0", "Insert TagElement(1327) into Javadoc(1328) at 0", "Insert TagElement(1361) into Javadoc(1362) at 0", "Insert TagElement(1460) into Javadoc(1461) at 0", "Insert ForStatement(1505) into Block(1540) at 1", "Insert TagElement(1544) into Javadoc(1545) at 0", "Update SimpleName: key(1469) to prefix", "Move VariableDeclarationStatement(1484) into Block(1632) at 0", "Move ForStatement(1513) into Block(1632) at 1", "Insert EnhancedForStatement(1627) into Block(1632) at 2", "Move ReturnStatement(1519) into Block(1632) at 3", "Insert IfStatement(1666) into Block(1684) at 0", "Insert TagElement(1687) into Javadoc(1694) at 0", "Insert TagElement: @param(1690) into Javadoc(1694) at 1", "Insert TagElement: @return(1693) into Javadoc(1694) at 2", "Insert SimpleName: Override(1695) into MarkerAnnotation(1696) at 0", "Insert IfStatement(1711) into Block(1729) at 0", "Insert TagElement(1734) into Javadoc(1743) at 0", "Insert TagElement: @param(1737) into Javadoc(1743) at 1", "Insert TagElement: @param(1740) into Javadoc(1743) at 2", "Insert TagElement: @return(1742) into Javadoc(1743) at 3", "Insert IfStatement(1794) into Block(1876) at 2", "Insert TagElement(1880) into Javadoc(1886) at 0", "Insert TagElement: @param(1883) into Javadoc(1886) at 1", "Insert TagElement: @return(1885) into Javadoc(1886) at 2", "Insert MethodRef(102) into TagElement: @link(103) at 0", "Insert SimpleName: IndexOutOfBoundsException(781) into TagElement: @throws(782) at 0", "Insert SimpleName: IndexOutOfBoundsException(837) into TagElement: @throws(838) at 0", "Insert TextElement: Add a configuration with a name at a particular index.(896) into TagElement(897) at 0", "Insert SimpleName: IndexOutOfBoundsException(898) into TagElement: @throws(900) at 0", "Insert TextElement:  (899) into TagElement: @throws(900) at 1", "Insert TextElement: Override the same property in any other configurations in the list.(1234) into TagElement(1235) at 0", "Insert TextElement: Remove the overriding property set by (1256) into TagElement(1266) at 0", "Insert TagElement: @link(1265) into TagElement(1266) at 1", "Insert TextElement: Set the property with the <em>container configuration</em>. (1282) into TagElement(1293) at 0", "Insert TextElement: <b>Warning: </b>(1283) into TagElement(1293) at 1", "Insert TagElement: @link(1289) into TagElement(1293) at 2", "Insert TextElement:  on this key may not return the same value set by this method(1290) into TagElement(1293) at 3", "Insert TextElement: if there is any other configuration that contain the same property and is in front of the (1291) into TagElement(1293) at 4", "Insert TextElement: <em>container configuration</em> in the configurations list.(1292) into TagElement(1293) at 5", "Insert TextElement: Add the property with the <em>container configuration</em>. (1316) into TagElement(1327) at 0", "Insert TextElement: <b>Warning: </b>(1317) into TagElement(1327) at 1", "Insert TagElement: @link(1323) into TagElement(1327) at 2", "Insert TextElement:  on this key may not return the same value set by this method(1324) into TagElement(1327) at 3", "Insert TextElement: if there is any other configuration that contain the same property and is in front of the (1325) into TagElement(1327) at 4", "Insert TextElement: <em>container configuration</em> in the configurations list.(1326) into TagElement(1327) at 5", "Insert TextElement: Clear the property with the <em>container configuration</em>. (1350) into TagElement(1361) at 0", "Insert TextElement: <b>Warning: </b>(1351) into TagElement(1361) at 1", "Insert TagElement: @link(1357) into TagElement(1361) at 2", "Insert TextElement:  on this key may still return some value (1358) into TagElement(1361) at 3", "Insert TextElement: if there is any other configuration that contain the same property and is in front of the (1359) into TagElement(1361) at 4", "Insert TextElement: <em>container configuration</em> in the configurations list.(1360) into TagElement(1361) at 5", "Update TextElement: . If so, it returns the value that gets overridden.(1332) to  and if so return the overriding value.", "Insert TextElement: Get all the keys contained by sub configurations.(1459) into TagElement(1460) at 0", "Insert VariableDeclarationExpression(1493) into ForStatement(1505) at 0", "Insert MethodInvocation(1496) into ForStatement(1505) at 1", "Insert Block(1504) into ForStatement(1505) at 2", "Insert TextElement: Get the list of the keys contained in the sub configurations that match the(1542) into TagElement(1544) at 0", "Insert TextElement: specified prefix.(1543) into TagElement(1544) at 1", "Move SingleVariableDeclaration(1488) into EnhancedForStatement(1627) at 0", "Insert SimpleName: configList(1601) into EnhancedForStatement(1627) at 1", "Insert Block(1626) into EnhancedForStatement(1627) at 2", "Insert MethodInvocation(1662) into IfStatement(1666) at 0", "Insert Block(1665) into IfStatement(1666) at 1", "Insert TextElement: Check if the any of the sub configurations contains the specified key.(1686) into TagElement(1687) at 0", "Insert SimpleName: key(1688) into TagElement: @param(1690) at 0", "Insert TextElement:  the key whose presence in this configuration is to be tested(1689) into TagElement: @param(1690) at 1", "Insert TextElement:  <code>true</code> if the configuration contains a value for this(1691) into TagElement: @return(1693) at 0", "Insert TextElement: key, <code>false</code> otherwise(1692) into TagElement: @return(1693) at 1", "Insert MethodInvocation(1707) into IfStatement(1711) at 0", "Insert Block(1710) into IfStatement(1711) at 1", "Insert TextElement: Get a List of objects associated with the given configuration key.(1731) into TagElement(1734) at 0", "Insert TextElement: If the key doesn't map to an existing object, the default value(1732) into TagElement(1734) at 1", "Insert TextElement: is returned.(1733) into TagElement(1734) at 2", "Insert SimpleName: key(1735) into TagElement: @param(1737) at 0", "Insert TextElement:  The configuration key.(1736) into TagElement: @param(1737) at 1", "Insert SimpleName: defaultValue(1738) into TagElement: @param(1740) at 0", "Insert TextElement:  The default value.(1739) into TagElement: @param(1740) at 1", "Insert TextElement:  The associated List of value.(1741) into TagElement: @return(1742) at 0", "Insert MethodInvocation(1786) into IfStatement(1794) at 0", "Insert Block(1793) into IfStatement(1794) at 1", "Insert TextElement: Get an array of strings associated with the given configuration key.(1878) into TagElement(1880) at 0", "Insert TextElement: If the key doesn't map to an existing object an empty array is returned(1879) into TagElement(1880) at 1", "Insert SimpleName: key(1881) into TagElement: @param(1883) at 0", "Insert TextElement:  The configuration key.(1882) into TagElement: @param(1883) at 1", "Insert TextElement:  The associated string array if key is found.(1884) into TagElement: @return(1885) at 0", "Update TextElement: Returns the &quot;in memory configuration&quot;. In this configuration(1841) to Returns the <em>container configuration</em> In this configuration", "Update TextElement:  the in memory configuration(1844) to  the container configuration", "Insert SimpleName: setOverrideProperty(95) into MethodRef(102) at 0", "Insert MethodRefParameter(98) into MethodRef(102) at 1", "Insert MethodRefParameter(101) into MethodRef(102) at 2", "Insert MethodRef(1264) into TagElement: @link(1265) at 0", "Insert MethodRef(1288) into TagElement: @link(1289) at 0", "Insert MethodRef(1322) into TagElement: @link(1323) at 0", "Insert MethodRef(1356) into TagElement: @link(1357) at 0", "Insert ParameterizedType: Iterator<String>(1487) into VariableDeclarationExpression(1493) at 0", "Insert VariableDeclarationFragment(1492) into VariableDeclarationExpression(1493) at 1", "Insert SimpleName: it(1494) into MethodInvocation(1496) at 0", "Insert SimpleName: hasNext(1495) into MethodInvocation(1496) at 1", "Insert ExpressionStatement(1503) into Block(1504) at 0", "Insert ForStatement(1625) into Block(1626) at 0", "Insert SimpleName: overrideProperties(1660) into MethodInvocation(1662) at 0", "Insert SimpleName: isEmpty(1661) into MethodInvocation(1662) at 1", "Insert ReturnStatement(1664) into Block(1665) at 0", "Insert SimpleName: overrideProperties(1704) into MethodInvocation(1707) at 0", "Insert SimpleName: containsKey(1705) into MethodInvocation(1707) at 1", "Insert SimpleName: key(1706) into MethodInvocation(1707) at 2", "Insert ReturnStatement(1709) into Block(1710) at 0", "Insert SimpleName: overrideProperties(1783) into MethodInvocation(1786) at 0", "Insert SimpleName: containsKey(1784) into MethodInvocation(1786) at 1", "Insert SimpleName: key(1785) into MethodInvocation(1786) at 2", "Insert ExpressionStatement(1792) into Block(1793) at 0", "Insert SimpleType: String(97) into MethodRefParameter(98) at 0", "Insert SimpleType: Object(100) into MethodRefParameter(101) at 0", "Insert SimpleName: setOverrideProperty(1257) into MethodRef(1264) at 0", "Insert MethodRefParameter(1260) into MethodRef(1264) at 1", "Insert MethodRefParameter(1263) into MethodRef(1264) at 2", "Insert SimpleName: getProperty(1284) into MethodRef(1288) at 0", "Insert MethodRefParameter(1287) into MethodRef(1288) at 1", "Insert SimpleName: getProperty(1318) into MethodRef(1322) at 0", "Insert MethodRefParameter(1321) into MethodRef(1322) at 1", "Insert SimpleName: getProperty(1352) into MethodRef(1356) at 0", "Insert MethodRefParameter(1355) into MethodRef(1356) at 1", "Insert SimpleType: Iterator(1484) into ParameterizedType: Iterator<String>(1487) at 0", "Insert SimpleType: String(1486) into ParameterizedType: Iterator<String>(1487) at 1", "Insert SimpleName: it(1488) into VariableDeclarationFragment(1492) at 0", "Insert MethodInvocation(1491) into VariableDeclarationFragment(1492) at 1", "Insert MethodInvocation(1502) into ExpressionStatement(1503) at 0", "Insert VariableDeclarationExpression(1613) into ForStatement(1625) at 0", "Insert MethodInvocation(1616) into ForStatement(1625) at 1", "Insert Block(1624) into ForStatement(1625) at 2", "Insert BooleanLiteral: false(1663) into ReturnStatement(1664) at 0", "Insert BooleanLiteral: true(1708) into ReturnStatement(1709) at 0", "Insert MethodInvocation(1791) into ExpressionStatement(1792) at 0", "Insert SimpleName: String(96) into SimpleType: String(97) at 0", "Insert SimpleName: Object(99) into SimpleType: Object(100) at 0", "Insert SimpleType: String(1259) into MethodRefParameter(1260) at 0", "Insert SimpleType: Object(1262) into MethodRefParameter(1263) at 0", "Insert SimpleType: String(1286) into MethodRefParameter(1287) at 0", "Insert SimpleType: String(1320) into MethodRefParameter(1321) at 0", "Insert SimpleType: String(1354) into MethodRefParameter(1355) at 0", "Insert SimpleName: Iterator(1483) into SimpleType: Iterator(1484) at 0", "Insert SimpleName: String(1485) into SimpleType: String(1486) at 0", "Insert SimpleName: overrideProperties(1489) into MethodInvocation(1491) at 0", "Insert SimpleName: getKeys(1490) into MethodInvocation(1491) at 1", "Insert SimpleName: keys(1497) into MethodInvocation(1502) at 0", "Insert SimpleName: add(1498) into MethodInvocation(1502) at 1", "Insert MethodInvocation(1501) into MethodInvocation(1502) at 2", "Update SimpleName: config(1496) to overrideProperties", "Update SimpleName: key(1498) to prefix", "Insert ParameterizedType: Iterator<String>(1606) into VariableDeclarationExpression(1613) at 0", "Insert VariableDeclarationFragment(1612) into VariableDeclarationExpression(1613) at 1", "Insert SimpleName: it(1614) into MethodInvocation(1616) at 0", "Insert SimpleName: hasNext(1615) into MethodInvocation(1616) at 1", "Move ExpressionStatement(1578) into Block(1624) at 0", "Insert SimpleName: appendListProperty(1787) into MethodInvocation(1791) at 0", "Insert SimpleName: list(1788) into MethodInvocation(1791) at 1", "Insert SimpleName: overrideProperties(1789) into MethodInvocation(1791) at 2", "Insert SimpleName: key(1790) into MethodInvocation(1791) at 3", "Insert SimpleName: String(1258) into SimpleType: String(1259) at 0", "Insert SimpleName: Object(1261) into SimpleType: Object(1262) at 0", "Insert SimpleName: String(1285) into SimpleType: String(1286) at 0", "Insert SimpleName: String(1319) into SimpleType: String(1320) at 0", "Insert SimpleName: String(1353) into SimpleType: String(1354) at 0", "Insert SimpleName: it(1499) into MethodInvocation(1501) at 0", "Insert SimpleName: next(1500) into MethodInvocation(1501) at 1", "Insert SimpleType: Iterator(1603) into ParameterizedType: Iterator<String>(1606) at 0", "Insert SimpleType: String(1605) into ParameterizedType: Iterator<String>(1606) at 1", "Insert SimpleName: it(1607) into VariableDeclarationFragment(1612) at 0", "Insert MethodInvocation(1611) into VariableDeclarationFragment(1612) at 1", "Insert SimpleName: Iterator(1602) into SimpleType: Iterator(1603) at 0", "Move SimpleName: String(1570) into SimpleType: String(1605) at 0", "Insert SimpleName: config(1608) into MethodInvocation(1611) at 0", "Insert SimpleName: getKeys(1609) into MethodInvocation(1611) at 1", "Insert SimpleName: prefix(1610) into MethodInvocation(1611) at 2", "Update SimpleName: containerConfiguration(1574) to keys", "Update SimpleName: clearProperty(1575) to add", "Insert MethodInvocation(1621) into MethodInvocation(1622) at 2", "Update SimpleName: key(1576) to it", "Move SimpleName: key(1576) into MethodInvocation(1621) at 0", "Insert SimpleName: next(1620) into MethodInvocation(1621) at 1", "Update SimpleName: getInMemoryConfiguration(1900) to getContainerConfiguration", "Update SimpleName: getInMemoryConfiguration(1917) to getContainerConfiguration", "Delete TextElement: <p>When querying properties the order in which child configurations have been(104)", "Delete TextElement: added is relevant. To deal with property updates, a so-called <em>in-memory(105)", "Delete TextElement: configuration</em> is used. Per default, such a configuration is created(106)", "Delete TextElement: automatically. All property writes target this special configuration. There(107)", "Delete TextElement: are constructors which allow you to provide a specific in-memory configuration.(108)", "Delete TextElement: If used that way, the in-memory configuration is always the last one in the(109)", "Delete TextElement: list of child configurations. This means that for query operations all other(110)", "Delete TextElement: configurations take precedence.</p>(111)", "Delete TextElement: <p>Alternatively it is possible to mark a child configuration as in-memory(112)", "Delete TextElement: configuration when it is added. In this case the treatment of the in-memory(113)", "Delete TextElement: configuration is slightly different: it remains in the list of child(114)", "Delete TextElement: configurations at the position it was added, i.e. its priority for property(115)", "Delete TextElement: queries can be defined by adding the child configurations in the correct(116)", "Delete TextElement: order.</p>(117)", "Delete TextElement: This class adds with the following changes/improvements to ComositeConfiguration:(118)", "Delete TextElement: <ul>(119)", "Delete TextElement: <li>It holds the list of sub configuration on a CopyOnWriteArrayList, which is thread safe and does not throw (120)", "Delete TextElement: ConcurrentModificationException when it is modified while traversing its iterator.(121)", "Delete TextElement: <li>Its clearPropertyDirect() does not remove any property in the list of sub configurations other than (122)", "Delete TextElement: the one designated as in memory configuration.(123)", "Delete TextElement: <li>It maintains an additional Map that maps sub configuration to a name.(124)", "Delete TextElement: </ul>(125)", "Delete SimpleName: configList(1489)", "Delete Block(1514)", "Delete EnhancedForStatement(1515)", "Delete Block(1520)", "Delete MethodDeclaration(1521)", "Delete Modifier: public(1567)", "Delete PrimitiveType: void(1568)", "Delete SimpleName: clearPropertyDirect(1569)", "Delete SimpleType: String(1571)", "Delete SimpleName: key(1572)", "Delete SingleVariableDeclaration(1573)", "Delete Block(1579)", "Delete MethodDeclaration(1580)", "Delete TextElement:  the copy(1861)", "Delete TagElement: @return(1862)", "Delete TextElement:  1.3(1863)", "Delete TagElement: @since(1864)"]}}, {"ConcurrentMapConfiguration_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "UPDATE from java.util.Set to java.util.concurrent.locks.ReentrantLock", "operations": ["UPD QualifiedName: java.util.Set from java.util.Set to java.util.concurrent.locks.ReentrantLock"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS PrimitiveType: int to FieldDeclaration at 3", "INS SimpleName: NUM_LOCKS to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS NumberLiteral: 32 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: locks to VariableDeclarationFragment at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS ArrayType: ReentrantLock[] to ArrayCreation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: ReentrantLock to ArrayType: ReentrantLock[] at 0", "INS SimpleName: ReentrantLock to SimpleType: ReentrantLock at 0", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS Modifier: private to FieldDeclaration at 0", "INS ArrayType: ReentrantLock[] to FieldDeclaration at 1", "INS Dimension to ArrayType: ReentrantLock[] at 1", "INS SimpleName: ReentrantLock to SimpleType: ReentrantLock at 0", "INS SimpleName: NUM_LOCKS to ArrayCreation at 1", "INS SimpleType: ReentrantLock to ArrayType: ReentrantLock[] at 0", "INS Dimension to ArrayType: ReentrantLock[] at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ConditionalExpression to MethodInvocation at 3", "INS ConditionalExpression to MethodInvocation at 3", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: value to MethodInvocation at 2", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS SimpleName: addProperty to MethodDeclaration at 2", "INS SimpleName: value to MethodInvocation at 3", "INS IfStatement to Block at 2", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getListDelimiter to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: value to InstanceofExpression at 0", "INS BooleanLiteral: true to MethodInvocation at 4", "INS SimpleName: isDelimiterParsingDisabled to MethodInvocation at 0", "INS SimpleName: EVENT_ADD_PROPERTY to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: value to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS InfixExpression: < to InfixExpression: && at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: String to InstanceofExpression at 1", "INS SimpleName: value to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: EVENT_ADD_PROPERTY to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: previousValue to InfixExpression: != at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS CharacterLiteral: '\\0' to ConditionalExpression at 1", "INS CharacterLiteral: '\\0' to ConditionalExpression at 1", "INS SimpleName: map to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: indexOf to MethodInvocation at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleType: String to CastExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodInvocation to InfixExpression: < at 0", "INS ExpressionStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: addPropertyValues to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: isDelimiterParsingDisabled to MethodInvocation at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to CastExpression at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: value to MethodInvocation at 3", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: key to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS InfixExpression: != to IfStatement at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleName: isDelimiterParsingDisabled to MethodInvocation at 0", "INS SimpleName: previousValue to VariableDeclarationFragment at 0", "INS SimpleName: fireEvent to MethodInvocation at 0", "INS SimpleName: getListDelimiter to MethodInvocation at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS IfStatement to Block at 1", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS SimpleName: addPropertyValues to MethodInvocation at 0", "INS SimpleName: putIfAbsent to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS Block to IfStatement at 2", "INS SimpleName: key to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: fireEvent to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: previousValue to Assignment: = at 0", "INS SimpleName: getListDelimiter to MethodInvocation at 0"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS SimpleType: ReentrantLock to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: NUM_LOCKS to InfixExpression: < at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: i to ArrayAccess at 1", "INS Block to ForStatement at 3", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: locks to ArrayAccess at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS Block to MethodDeclaration at 3", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: ReentrantLock to SimpleType: ReentrantLock at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS ArrayAccess to Assignment: = at 0", "INS ForStatement to Block at 1", "INS InfixExpression: < to ForStatement at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS SimpleName: ReentrantLock to SimpleType: ReentrantLock at 0", "INS Block to TryStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: lock to VariableDeclarationFragment at 0", "INS TryStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS InfixExpression: % to ArrayAccess at 1", "INS SimpleName: hashCode to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Math to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: lock to MethodInvocation at 0", "INS SimpleName: NUM_LOCKS to InfixExpression: % at 1", "INS SimpleName: key to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: % at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS SimpleType: ReentrantLock to VariableDeclarationStatement at 0", "INS SimpleName: locks to ArrayAccess at 0", "INS SimpleName: lock to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: abs to MethodInvocation at 1"]}, {"root": "UPDATE from throughput and thread safety. Some methods from AbstractConfiguration are overridden to throughput and thread safety. The implementation is lock free for ", "operations": ["UPD TextElement: throughput and thread safety. Some methods from AbstractConfiguration are overridden from throughput and thread safety. Some methods from AbstractConfiguration are overridden to throughput and thread safety. The implementation is lock free for "]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS TagElement: @link to TagElement at 2", "INS SimpleName: getProperty to MethodRef at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRef to TagElement: @link at 0"]}, {"root": "UPDATE from to  to and ", "operations": ["UPD TextElement: to  from to  to and "]}, {"root": "INS TagElement: @link to TagElement at 4", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: setProperty to MethodRef at 0", "INS MethodRefParameter to MethodRef at 2", "INS MethodRef to TagElement: @link at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleType: Object to MethodRefParameter at 0", "INS TagElement: @link to TagElement at 4", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodRefParameter to MethodRef at 1"]}, {"root": "INS TextElement: , but has some synchronization cost for  to TagElement at 5", "operations": ["INS TextElement: , but has some synchronization cost for  to TagElement at 5"]}, {"root": "INS TagElement: @link to TagElement at 6", "operations": ["INS TagElement: @link to TagElement at 6", "INS SimpleName: addProperty to MethodRef at 0", "INS MethodRefParameter to MethodRef at 2", "INS SimpleType: String to MethodRefParameter at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleType: Object to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: Object to SimpleType: Object at 0"]}, {"root": "INS TextElement:  if the object to add is not a String or the key already exists. to TagElement at 7", "operations": ["INS TextElement:  if the object to add is not a String or the key already exists. to TagElement at 7"]}, {"root": "INS TextElement: <p>  to TagElement at 8", "operations": ["INS TextElement: <p>  to TagElement at 8"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS ConstructorInvocation to Block at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "UPDATE from LinkedList<Object> to CopyOnWriteArrayList<Object>", "operations": ["UPD ParameterizedType: LinkedList<Object> from LinkedList<Object> to CopyOnWriteArrayList<Object>", "UPD ParameterizedType: LinkedList<Object> from LinkedList<Object> to CopyOnWriteArrayList<Object>"]}, {"root": "UPDATE from LinkedList to CopyOnWriteArrayList", "operations": ["UPD SimpleType: LinkedList from LinkedList to CopyOnWriteArrayList", "UPD SimpleName: LinkedList from LinkedList to CopyOnWriteArrayList", "UPD SimpleType: LinkedList from LinkedList to CopyOnWriteArrayList", "UPD SimpleName: LinkedList from LinkedList to CopyOnWriteArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.LinkedList"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Modifier: synchronized", "operations": ["DEL Modifier: synchronized"]}]}}, {"ConcurrentMapConfiguration_diff": {"operations": ["Move ImportDeclaration(17) into CompilationUnit(1278) at 11", "Move MethodDeclaration(352) into TypeDeclaration: class(1277) at 10", "Update QualifiedName: java.util.Set(16) to java.util.concurrent.locks.ReentrantLock", "Insert FieldDeclaration(145) into TypeDeclaration: class(1277) at 8", "Insert FieldDeclaration(159) into TypeDeclaration: class(1277) at 9", "Insert MethodDeclaration(599) into TypeDeclaration: class(1277) at 20", "Update Modifier: protected(58) to private", "Insert Modifier: private(138) into FieldDeclaration(145) at 0", "Insert Modifier: static(139) into FieldDeclaration(145) at 1", "Insert Modifier: final(140) into FieldDeclaration(145) at 2", "Insert PrimitiveType: int(141) into FieldDeclaration(145) at 3", "Insert VariableDeclarationFragment(144) into FieldDeclaration(145) at 4", "Insert Modifier: private(146) into FieldDeclaration(159) at 0", "Insert ArrayType: ReentrantLock[](150) into FieldDeclaration(159) at 1", "Insert VariableDeclarationFragment(158) into FieldDeclaration(159) at 2", "Insert Block(196) into MethodDeclaration(197) at 3", "Insert Block(394) into MethodDeclaration(395) at 5", "Insert Modifier: public(508) into MethodDeclaration(599) at 0", "Insert PrimitiveType: void(509) into MethodDeclaration(599) at 1", "Insert SimpleName: addProperty(510) into MethodDeclaration(599) at 2", "Insert SingleVariableDeclaration(514) into MethodDeclaration(599) at 3", "Insert SingleVariableDeclaration(518) into MethodDeclaration(599) at 4", "Insert Block(598) into MethodDeclaration(599) at 5", "Update TextElement: throughput and thread safety. Some methods from AbstractConfiguration are overridden(41) to throughput and thread safety. The implementation is lock free for ", "Insert TagElement: @link(45) into TagElement(75) at 2", "Update TextElement: to (42) to and ", "Insert TagElement: @link(55) into TagElement(75) at 4", "Insert TextElement: , but has some synchronization cost for (56) into TagElement(75) at 5", "Insert TagElement: @link(65) into TagElement(75) at 6", "Insert TextElement:  if the object to add is not a String or the key already exists.(66) into TagElement(75) at 7", "Insert TextElement: <p> (67) into TagElement(75) at 8", "Insert SimpleName: NUM_LOCKS(142) into VariableDeclarationFragment(144) at 0", "Insert NumberLiteral: 32(143) into VariableDeclarationFragment(144) at 1", "Insert SimpleType: ReentrantLock(148) into ArrayType: ReentrantLock[](150) at 0", "Insert Dimension(149) into ArrayType: ReentrantLock[](150) at 1", "Insert SimpleName: locks(151) into VariableDeclarationFragment(158) at 0", "Insert ArrayCreation(157) into VariableDeclarationFragment(158) at 1", "Move ExpressionStatement(129) into Block(196) at 0", "Insert ForStatement(195) into Block(196) at 1", "Insert ConstructorInvocation(209) into Block(222) at 0", "Insert VariableDeclarationStatement(320) into Block(394) at 0", "Insert ExpressionStatement(324) into Block(394) at 1", "Insert TryStatement(393) into Block(394) at 2", "Insert SimpleType: String(512) into SingleVariableDeclaration(514) at 0", "Insert SimpleName: key(513) into SingleVariableDeclaration(514) at 1", "Insert SimpleType: Object(516) into SingleVariableDeclaration(518) at 0", "Insert SimpleName: value(517) into SingleVariableDeclaration(518) at 1", "Insert ExpressionStatement(525) into Block(598) at 0", "Insert VariableDeclarationStatement(531) into Block(598) at 1", "Insert IfStatement(590) into Block(598) at 2", "Insert ExpressionStatement(597) into Block(598) at 3", "Insert MethodRef(44) into TagElement: @link(45) at 0", "Insert MethodRef(54) into TagElement: @link(55) at 0", "Insert MethodRef(64) into TagElement: @link(65) at 0", "Insert SimpleName: ReentrantLock(147) into SimpleType: ReentrantLock(148) at 0", "Insert ArrayType: ReentrantLock[](155) into ArrayCreation(157) at 0", "Insert SimpleName: NUM_LOCKS(156) into ArrayCreation(157) at 1", "Insert VariableDeclarationExpression(180) into ForStatement(195) at 0", "Insert InfixExpression: <(183) into ForStatement(195) at 1", "Insert PostfixExpression: ++(185) into ForStatement(195) at 2", "Insert Block(194) into ForStatement(195) at 3", "Insert SimpleType: ReentrantLock(307) into VariableDeclarationStatement(320) at 0", "Insert VariableDeclarationFragment(319) into VariableDeclarationStatement(320) at 1", "Insert MethodInvocation(323) into ExpressionStatement(324) at 0", "Move Block(246) into TryStatement(393) at 0", "Insert Block(392) into TryStatement(393) at 1", "Insert SimpleName: String(511) into SimpleType: String(512) at 0", "Insert SimpleName: Object(515) into SimpleType: Object(516) at 0", "Insert MethodInvocation(524) into ExpressionStatement(525) at 0", "Insert SimpleType: Object(527) into VariableDeclarationStatement(531) at 0", "Insert VariableDeclarationFragment(530) into VariableDeclarationStatement(531) at 1", "Insert InfixExpression: ||(552) into IfStatement(590) at 0", "Insert Block(577) into IfStatement(590) at 1", "Insert Block(589) into IfStatement(590) at 2", "Insert MethodInvocation(596) into ExpressionStatement(597) at 0", "Insert SimpleName: getProperty(40) into MethodRef(44) at 0", "Insert MethodRefParameter(43) into MethodRef(44) at 1", "Insert SimpleName: setProperty(47) into MethodRef(54) at 0", "Insert MethodRefParameter(50) into MethodRef(54) at 1", "Insert MethodRefParameter(53) into MethodRef(54) at 2", "Insert SimpleName: addProperty(57) into MethodRef(64) at 0", "Insert MethodRefParameter(60) into MethodRef(64) at 1", "Insert MethodRefParameter(63) into MethodRef(64) at 2", "Insert SimpleType: ReentrantLock(153) into ArrayType: ReentrantLock[](155) at 0", "Insert Dimension(154) into ArrayType: ReentrantLock[](155) at 1", "Insert PrimitiveType: int(176) into VariableDeclarationExpression(180) at 0", "Insert VariableDeclarationFragment(179) into VariableDeclarationExpression(180) at 1", "Insert SimpleName: i(181) into InfixExpression: <(183) at 0", "Insert SimpleName: NUM_LOCKS(182) into InfixExpression: <(183) at 1", "Insert SimpleName: i(184) into PostfixExpression: ++(185) at 0", "Insert ExpressionStatement(193) into Block(194) at 0", "Insert SimpleName: ReentrantLock(306) into SimpleType: ReentrantLock(307) at 0", "Insert SimpleName: lock(308) into VariableDeclarationFragment(319) at 0", "Insert ArrayAccess(318) into VariableDeclarationFragment(319) at 1", "Insert SimpleName: lock(321) into MethodInvocation(323) at 0", "Insert SimpleName: lock(322) into MethodInvocation(323) at 1", "Insert ExpressionStatement(391) into Block(392) at 0", "Insert SimpleName: fireEvent(519) into MethodInvocation(524) at 0", "Insert SimpleName: EVENT_ADD_PROPERTY(520) into MethodInvocation(524) at 1", "Insert SimpleName: key(521) into MethodInvocation(524) at 2", "Insert SimpleName: value(522) into MethodInvocation(524) at 3", "Insert BooleanLiteral: true(523) into MethodInvocation(524) at 4", "Insert SimpleName: Object(526) into SimpleType: Object(527) at 0", "Insert SimpleName: previousValue(528) into VariableDeclarationFragment(530) at 0", "Insert NullLiteral(529) into VariableDeclarationFragment(530) at 1", "Insert MethodInvocation(533) into InfixExpression: ||(552) at 0", "Insert ParenthesizedExpression(551) into InfixExpression: ||(552) at 1", "Insert ExpressionStatement(560) into Block(577) at 0", "Insert IfStatement(576) into Block(577) at 1", "Insert ExpressionStatement(588) into Block(589) at 0", "Insert SimpleName: fireEvent(591) into MethodInvocation(596) at 0", "Insert SimpleName: EVENT_ADD_PROPERTY(592) into MethodInvocation(596) at 1", "Insert SimpleName: key(593) into MethodInvocation(596) at 2", "Insert SimpleName: value(594) into MethodInvocation(596) at 3", "Insert BooleanLiteral: false(595) into MethodInvocation(596) at 4", "Insert SimpleType: String(42) into MethodRefParameter(43) at 0", "Insert SimpleType: String(49) into MethodRefParameter(50) at 0", "Insert SimpleType: Object(52) into MethodRefParameter(53) at 0", "Insert SimpleType: String(59) into MethodRefParameter(60) at 0", "Insert SimpleType: Object(62) into MethodRefParameter(63) at 0", "Insert SimpleName: ReentrantLock(152) into SimpleType: ReentrantLock(153) at 0", "Insert SimpleName: i(177) into VariableDeclarationFragment(179) at 0", "Insert NumberLiteral: 0(178) into VariableDeclarationFragment(179) at 1", "Insert Assignment: =(192) into ExpressionStatement(193) at 0", "Insert SimpleName: locks(309) into ArrayAccess(318) at 0", "Insert InfixExpression: %(317) into ArrayAccess(318) at 1", "Insert MethodInvocation(390) into ExpressionStatement(391) at 0", "Insert SimpleName: isDelimiterParsingDisabled(532) into MethodInvocation(533) at 0", "Insert InfixExpression: &&(550) into ParenthesizedExpression(551) at 0", "Insert Assignment: =(559) into ExpressionStatement(560) at 0", "Insert InfixExpression: !=(563) into IfStatement(576) at 0", "Insert Block(575) into IfStatement(576) at 1", "Insert MethodInvocation(587) into ExpressionStatement(588) at 0", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleName: String(48) into SimpleType: String(49) at 0", "Insert SimpleName: Object(51) into SimpleType: Object(52) at 0", "Insert SimpleName: String(58) into SimpleType: String(59) at 0", "Insert SimpleName: Object(61) into SimpleType: Object(62) at 0", "Insert ArrayAccess(188) into Assignment: =(192) at 0", "Insert ClassInstanceCreation(191) into Assignment: =(192) at 1", "Insert MethodInvocation(315) into InfixExpression: %(317) at 0", "Insert SimpleName: NUM_LOCKS(316) into InfixExpression: %(317) at 1", "Insert SimpleName: lock(388) into MethodInvocation(390) at 0", "Insert SimpleName: unlock(389) into MethodInvocation(390) at 1", "Insert ParenthesizedExpression(538) into InfixExpression: &&(550) at 0", "Insert InfixExpression: <(549) into InfixExpression: &&(550) at 1", "Insert SimpleName: previousValue(553) into Assignment: =(559) at 0", "Insert MethodInvocation(558) into Assignment: =(559) at 1", "Insert SimpleName: previousValue(561) into InfixExpression: !=(563) at 0", "Insert NullLiteral(562) into InfixExpression: !=(563) at 1", "Insert ExpressionStatement(574) into Block(575) at 0", "Insert SimpleName: addPropertyValues(578) into MethodInvocation(587) at 0", "Insert SimpleName: key(579) into MethodInvocation(587) at 1", "Insert SimpleName: value(580) into MethodInvocation(587) at 2", "Insert ConditionalExpression(586) into MethodInvocation(587) at 3", "Insert SimpleName: locks(186) into ArrayAccess(188) at 0", "Insert SimpleName: i(187) into ArrayAccess(188) at 1", "Insert SimpleType: ReentrantLock(190) into ClassInstanceCreation(191) at 0", "Insert SimpleName: Math(310) into MethodInvocation(315) at 0", "Insert SimpleName: abs(311) into MethodInvocation(315) at 1", "Insert MethodInvocation(314) into MethodInvocation(315) at 2", "Insert InstanceofExpression(537) into ParenthesizedExpression(538) at 0", "Insert MethodInvocation(547) into InfixExpression: <(549) at 0", "Insert NumberLiteral: 0(548) into InfixExpression: <(549) at 1", "Insert SimpleName: map(554) into MethodInvocation(558) at 0", "Insert SimpleName: putIfAbsent(555) into MethodInvocation(558) at 1", "Insert SimpleName: key(556) into MethodInvocation(558) at 2", "Insert SimpleName: value(557) into MethodInvocation(558) at 3", "Insert MethodInvocation(573) into ExpressionStatement(574) at 0", "Insert MethodInvocation(582) into ConditionalExpression(586) at 0", "Insert CharacterLiteral: '\\0'(583) into ConditionalExpression(586) at 1", "Insert MethodInvocation(585) into ConditionalExpression(586) at 2", "Insert SimpleName: ReentrantLock(189) into SimpleType: ReentrantLock(190) at 0", "Insert SimpleName: key(312) into MethodInvocation(314) at 0", "Insert SimpleName: hashCode(313) into MethodInvocation(314) at 1", "Insert SimpleName: value(534) into InstanceofExpression(537) at 0", "Insert SimpleType: String(536) into InstanceofExpression(537) at 1", "Insert ParenthesizedExpression(543) into MethodInvocation(547) at 0", "Insert SimpleName: indexOf(544) into MethodInvocation(547) at 1", "Insert MethodInvocation(546) into MethodInvocation(547) at 2", "Insert SimpleName: addPropertyValues(564) into MethodInvocation(573) at 0", "Insert SimpleName: key(565) into MethodInvocation(573) at 1", "Insert SimpleName: value(566) into MethodInvocation(573) at 2", "Insert ConditionalExpression(572) into MethodInvocation(573) at 3", "Insert SimpleName: isDelimiterParsingDisabled(581) into MethodInvocation(582) at 0", "Insert SimpleName: getListDelimiter(584) into MethodInvocation(585) at 0", "Update ParameterizedType: LinkedList<Object>(514) to CopyOnWriteArrayList<Object>", "Update ParameterizedType: LinkedList<Object>(224) to CopyOnWriteArrayList<Object>", "Insert SimpleName: String(535) into SimpleType: String(536) at 0", "Insert CastExpression(542) into ParenthesizedExpression(543) at 0", "Insert SimpleName: getListDelimiter(545) into MethodInvocation(546) at 0", "Insert MethodInvocation(568) into ConditionalExpression(572) at 0", "Insert CharacterLiteral: '\\0'(569) into ConditionalExpression(572) at 1", "Insert MethodInvocation(571) into ConditionalExpression(572) at 2", "Update SimpleType: LinkedList(511) to CopyOnWriteArrayList", "Update SimpleType: LinkedList(221) to CopyOnWriteArrayList", "Insert SimpleType: String(540) into CastExpression(542) at 0", "Insert SimpleName: value(541) into CastExpression(542) at 1", "Insert SimpleName: isDelimiterParsingDisabled(567) into MethodInvocation(568) at 0", "Insert SimpleName: getListDelimiter(570) into MethodInvocation(571) at 0", "Update SimpleName: LinkedList(510) to CopyOnWriteArrayList", "Update SimpleName: LinkedList(220) to CopyOnWriteArrayList", "Insert SimpleName: String(539) into SimpleType: String(540) at 0", "Delete QualifiedName: java.util.LinkedList(8)", "Delete ImportDeclaration(9)", "Delete Modifier: final(59)", "Delete Block(130)", "Delete Modifier: synchronized(173)"]}}, {"DynamicBooleanProperty_cluster": {"actions": [{"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement at 2"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicBooleanProperty_diff": {"operations": ["Insert TextElement: <p>Use APIs in (3) into TagElement(7) at 1", "Insert TagElement: @link(5) into TagElement(7) at 2", "Insert TextElement:  to create instance of this class.(6) into TagElement(7) at 3", "Insert SimpleName: DynamicPropertyFactory(4) into TagElement: @link(5) at 0"]}}, {"DynamicDoubleProperty_cluster": {"actions": [{"root": "UPDATE from A dynamic property whose value is a double. to A dynamic property whose value is a double. ", "operations": ["UPD TextElement: A dynamic property whose value is a double. from A dynamic property whose value is a double. to A dynamic property whose value is a double. "]}, {"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement at 2"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicDoubleProperty_diff": {"operations": ["Update TextElement: A dynamic property whose value is a double.(2) to A dynamic property whose value is a double. ", "Insert TextElement: <p>Use APIs in (3) into TagElement(7) at 1", "Insert TagElement: @link(5) into TagElement(7) at 2", "Insert TextElement:  to create instance of this class.(6) into TagElement(7) at 3", "Insert SimpleName: DynamicPropertyFactory(4) into TagElement: @link(5) at 0"]}}, {"DynamicFloatProperty_cluster": {"actions": [{"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS TagElement: @link to TagElement at 2", "INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicFloatProperty_diff": {"operations": ["Insert TextElement: <p>Use APIs in (3) into TagElement(7) at 1", "Insert TagElement: @link(5) into TagElement(7) at 2", "Insert TextElement:  to create instance of this class.(6) into TagElement(7) at 3", "Insert SimpleName: DynamicPropertyFactory(4) into TagElement: @link(5) at 0"]}}, {"DynamicIntProperty_cluster": {"actions": [{"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement at 2"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicIntProperty_diff": {"operations": ["Insert TextElement: <p>Use APIs in (5) into TagElement(9) at 1", "Insert TagElement: @link(7) into TagElement(9) at 2", "Insert TextElement:  to create instance of this class.(8) into TagElement(9) at 3", "Insert SimpleName: DynamicPropertyFactory(6) into TagElement: @link(7) at 0"]}}, {"DynamicLongProperty_cluster": {"actions": [{"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS TagElement: @link to TagElement at 2", "INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicLongProperty_diff": {"operations": ["Insert TextElement: <p>Use APIs in (3) into TagElement(7) at 1", "Insert TagElement: @link(5) into TagElement(7) at 2", "Insert TextElement:  to create instance of this class.(6) into TagElement(7) at 3", "Insert SimpleName: DynamicPropertyFactory(4) into TagElement: @link(5) at 0"]}}, {"DynamicStringProperty_cluster": {"actions": [{"root": "INS TextElement: <p>Use APIs in  to TagElement at 1", "operations": ["INS TextElement: <p>Use APIs in  to TagElement at 1"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS SimpleName: DynamicPropertyFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement at 2"]}, {"root": "INS TextElement:  to create instance of this class. to TagElement at 3", "operations": ["INS TextElement:  to create instance of this class. to TagElement at 3"]}]}}, {"DynamicStringProperty_diff": {"operations": ["Insert TextElement: <p>Use APIs in (3) into TagElement(7) at 1", "Insert TagElement: @link(5) into TagElement(7) at 2", "Insert TextElement:  to create instance of this class.(6) into TagElement(7) at 3", "Insert SimpleName: DynamicPropertyFactory(4) into TagElement: @link(5) at 0"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}