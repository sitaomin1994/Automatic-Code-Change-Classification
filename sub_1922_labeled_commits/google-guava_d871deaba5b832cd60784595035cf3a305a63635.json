{"application": "google-guava", "csha": "d871deaba5b832cd60784595035cf3a305a63635", "files": [{"Ordering_cluster": {"actions": [{"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 18", "MOV TagElement: @link to TagElement at 15"]}, {"root": "UPDATE from A comparator, with additional methods to support common operations. This is to A comparator, with additional methods to support common operations. This is an \"enriched\"", "operations": ["UPD TextElement: A comparator, with additional methods to support common operations. This is from A comparator, with additional methods to support common operations. This is to A comparator, with additional methods to support common operations. This is an \"enriched\""]}, {"root": "UPDATE from an \"enriched\" version of  to version of ", "operations": ["UPD TextElement: an \"enriched\" version of  from an \"enriched\" version of  to version of "]}, {"root": "UPDATE from  is an enriched  to  is an enriched", "operations": ["UPD TextElement:  is an enriched  from  is an enriched  to  is an enriched"]}, {"root": "INS TextElement: <h3>Three types of methods</h3> to TagElement at 8", "operations": ["INS TextElement: <h3>Three types of methods</h3> to TagElement at 8"]}, {"root": "INS TextElement: Like other fluent types, there are three types of methods present: methods for <i>acquiring</i>, to TagElement at 9", "operations": ["INS TextElement: Like other fluent types, there are three types of methods present: methods for <i>acquiring</i>, to TagElement at 9"]}, {"root": "INS TextElement: <i>chaining</i>, and <i>using</i>. to TagElement at 10", "operations": ["INS TextElement: <i>chaining</i>, and <i>using</i>. to TagElement at 10"]}, {"root": "INS TextElement: <h4>Acquiring</h4> to TagElement at 11", "operations": ["INS TextElement: <h4>Acquiring</h4> to TagElement at 11"]}, {"root": "UPDATE from  instead of implementing to  instead of implementing ", "operations": ["UPD TextElement:  instead of implementing from  instead of implementing to  instead of implementing "]}, {"root": "UPDATE from  directly to directly", "operations": ["UPD TextElement:  directly from  directly to directly"]}, {"root": "UPDATE from <p>Then you can use the <i>chaining</i> methods to get an altered version of to <h4>Chaining</h4>", "operations": ["UPD TextElement: <p>Then you can use the <i>chaining</i> methods to get an altered version of from <p>Then you can use the <i>chaining</i> methods to get an altered version of to <h4>Chaining</h4>"]}, {"root": "UPDATE from that  to <p>Then you can use the <i>chaining</i> methods to get an altered version of that ", "operations": ["UPD TextElement: that  from that  to <p>Then you can use the <i>chaining</i> methods to get an altered version of that "]}, {"root": "INS TextElement: <h4>Using</h4> to TagElement at 44", "operations": ["INS TextElement: <h4>Using</h4> to TagElement at 44"]}, {"root": "INS TextElement:  is required, or use to TagElement at 49", "operations": ["INS TextElement:  is required, or use to TagElement at 49"]}, {"root": "UPDATE from is required, or use any of its special operations, such as:</p> to any of its special operations, such as:</p>", "operations": ["UPD TextElement: is required, or use any of its special operations, such as:</p> from is required, or use any of its special operations, such as:</p> to any of its special operations, such as:</p>"]}, {"root": "INS TextElement: <h3>Understanding complex orderings</h3> to TagElement at 63", "operations": ["INS TextElement: <h3>Understanding complex orderings</h3> to TagElement at 63"]}, {"root": "INS TextElement: <p>Complex chained orderings like the following example can be challenging to understand. to TagElement at 64", "operations": ["INS TextElement: <p>Complex chained orderings like the following example can be challenging to understand. to TagElement at 64"]}, {"root": "INS TextElement: <pre>    to TagElement at 65", "operations": ["INS TextElement: <pre>    to TagElement at 65"]}, {"root": "INS TagElement: @code to TagElement at 66", "operations": ["INS TextElement: Ordering.natural() to TagElement: @code at 1", "INS TextElement: .nullsFirst() to TagElement: @code at 2", "INS TextElement: .onResultOf(getBarFunction) to TagElement: @code at 3", "INS TextElement: .nullsLast(); to TagElement: @code at 4", "INS TextElement: Ordering<Foo> ordering = to TagElement: @code at 0", "INS TagElement: @code to TagElement at 66"]}, {"root": "INS TextElement: </pre> to TagElement at 67", "operations": ["INS TextElement: </pre> to TagElement at 67"]}, {"root": "INS TextElement: Note that each chaining method returns a new ordering instance which is backed by the previous to TagElement at 68", "operations": ["INS TextElement: Note that each chaining method returns a new ordering instance which is backed by the previous to TagElement at 68"]}, {"root": "INS TextElement: instance, but has the chance to act on values <i>before</i> handing off to that backing to TagElement at 69", "operations": ["INS TextElement: instance, but has the chance to act on values <i>before</i> handing off to that backing to TagElement at 69"]}, {"root": "INS TextElement: instance. As a result, it usually helps to read chained ordering expressions <i>backwards</i>. to TagElement at 70", "operations": ["INS TextElement: instance. As a result, it usually helps to read chained ordering expressions <i>backwards</i>. to TagElement at 70"]}, {"root": "INS TextElement: For example, when  to TagElement at 71", "operations": ["INS TextElement: For example, when  to TagElement at 71"]}, {"root": "INS TagElement: @code to TagElement at 72", "operations": ["INS TextElement:  compare to TagElement: @code at 0", "INS TagElement: @code to TagElement at 72"]}, {"root": "INS TextElement:  is called on the above ordering: to TagElement at 73", "operations": ["INS TextElement:  is called on the above ordering: to TagElement at 73"]}, {"root": "INS TextElement: <ol> to TagElement at 74", "operations": ["INS TextElement: <ol> to TagElement at 74"]}, {"root": "INS TextElement: <li>First, if only one  to TagElement at 75", "operations": ["INS TextElement: <li>First, if only one  to TagElement at 75"]}, {"root": "INS TagElement: @code to TagElement at 76", "operations": ["INS TagElement: @code to TagElement at 76", "INS TextElement:  Foo to TagElement: @code at 0"]}, {"root": "INS TextElement:  is null, that null value is treated as <i>greater</i> to TagElement at 77", "operations": ["INS TextElement:  is null, that null value is treated as <i>greater</i> to TagElement at 77"]}, {"root": "INS TextElement: <li>Next, non-null  to TagElement at 78", "operations": ["INS TextElement: <li>Next, non-null  to TagElement at 78"]}, {"root": "INS TagElement: @code to TagElement at 79", "operations": ["INS TagElement: @code to TagElement at 79", "INS TextElement:  Foo to TagElement: @code at 0"]}, {"root": "INS TextElement:  values are passed to  to TagElement at 80", "operations": ["INS TextElement:  values are passed to  to TagElement at 80"]}, {"root": "INS TagElement: @code to TagElement at 81", "operations": ["INS TextElement:  getBarFunction to TagElement: @code at 0", "INS TagElement: @code to TagElement at 81"]}, {"root": "INS TextElement:  (we will be to TagElement at 82", "operations": ["INS TextElement:  (we will be to TagElement at 82"]}, {"root": "INS TextElement: comparing  to TagElement at 83", "operations": ["INS TextElement: comparing  to TagElement at 83"]}, {"root": "INS TagElement: @code to TagElement at 84", "operations": ["INS TagElement: @code to TagElement at 84", "INS TextElement:  Bar to TagElement: @code at 0"]}, {"root": "INS TextElement:  values from now on) to TagElement at 85", "operations": ["INS TextElement:  values from now on) to TagElement at 85"]}, {"root": "INS TextElement: <li>Next, if only one  to TagElement at 86", "operations": ["INS TextElement: <li>Next, if only one  to TagElement at 86"]}, {"root": "INS TagElement: @code to TagElement at 87", "operations": ["INS TagElement: @code to TagElement at 87", "INS TextElement:  Bar to TagElement: @code at 0"]}, {"root": "INS TextElement:  is null, that null value is treated as <i>lesser</i> to TagElement at 88", "operations": ["INS TextElement:  is null, that null value is treated as <i>lesser</i> to TagElement at 88"]}, {"root": "INS TextElement: <li>Finally, natural ordering is used (i.e. the result of  to TagElement at 89", "operations": ["INS TextElement: <li>Finally, natural ordering is used (i.e. the result of  to TagElement at 89"]}, {"root": "INS TagElement: @code to TagElement at 90", "operations": ["INS TagElement: @code to TagElement at 90", "INS TextElement:  Bar.compareTo(Bar) to TagElement: @code at 0"]}, {"root": "INS TextElement:  is to TagElement at 91", "operations": ["INS TextElement:  is to TagElement at 91"]}, {"root": "INS TextElement: returned) to TagElement at 92", "operations": ["INS TextElement: returned) to TagElement at 92"]}, {"root": "INS TextElement: </ol> to TagElement at 93", "operations": ["INS TextElement: </ol> to TagElement at 93"]}, {"root": "INS TextElement: <p>Alas,  to TagElement at 94", "operations": ["INS TextElement: <p>Alas,  to TagElement at 94"]}, {"root": "INS TagElement: @link to TagElement at 95", "operations": ["INS MemberRef to TagElement: @link at 0", "INS SimpleName: reverse to MemberRef at 0", "INS TagElement: @link to TagElement at 95"]}, {"root": "INS TextElement:  is a little different. As you read backwards through a chain and to TagElement at 96", "operations": ["INS TextElement:  is a little different. As you read backwards through a chain and to TagElement at 96"]}, {"root": "INS TextElement: encounter a call to  to TagElement at 97", "operations": ["INS TextElement: encounter a call to  to TagElement at 97"]}, {"root": "INS TagElement: @code to TagElement at 98", "operations": ["INS TextElement:  reverse to TagElement: @code at 0", "INS TagElement: @code to TagElement at 98"]}, {"root": "INS TextElement: , continue working backwards until a result is determined, to TagElement at 99", "operations": ["INS TextElement: , continue working backwards until a result is determined, to TagElement at 99"]}, {"root": "INS TextElement: and then reverse that result. to TagElement at 100", "operations": ["INS TextElement: and then reverse that result. to TagElement at 100"]}, {"root": "INS TextElement: <h3>Additional notes</h3> to TagElement at 101", "operations": ["INS TextElement: <h3>Additional notes</h3> to TagElement at 101"]}, {"root": "UPDATE from \"https://github.com/google/guava/wiki/OrderingExplained\"> to \"http://code.google.com/p/guava-libraries/wiki/OrderingExplained\">", "operations": ["UPD TextElement: \"https://github.com/google/guava/wiki/OrderingExplained\"> from \"https://github.com/google/guava/wiki/OrderingExplained\"> to \"http://code.google.com/p/guava-libraries/wiki/OrderingExplained\">"]}, {"root": "UPDATE from  Ordering to Ordering", "operations": ["UPD TextElement:  Ordering from  Ordering to Ordering"]}]}}, {"Ordering_diff": {"operations": ["Move TagElement: @link(64) into TagElement(222) at 18", "Move TagElement: @link(68) into TagElement(222) at 15", "Update TextElement: A comparator, with additional methods to support common operations. This is(42) to A comparator, with additional methods to support common operations. This is an \"enriched\"", "Update TextElement: an \"enriched\" version of (43) to version of ", "Update TextElement:  is an enriched (49) to  is an enriched", "Insert TextElement: <h3>Three types of methods</h3>(53) into TagElement(222) at 8", "Insert TextElement: Like other fluent types, there are three types of methods present: methods for <i>acquiring</i>,(54) into TagElement(222) at 9", "Insert TextElement: <i>chaining</i>, and <i>using</i>.(55) into TagElement(222) at 10", "Insert TextElement: <h4>Acquiring</h4>(56) into TagElement(222) at 11", "Update TextElement:  instead of implementing(62) to  instead of implementing ", "Update TextElement:  directly(65) to directly", "Update TextElement: <p>Then you can use the <i>chaining</i> methods to get an altered version of(82) to <h4>Chaining</h4>", "Update TextElement: that (83) to <p>Then you can use the <i>chaining</i> methods to get an altered version of that ", "Insert TextElement: <h4>Using</h4>(119) into TagElement(222) at 44", "Insert TextElement:  is required, or use(126) into TagElement(222) at 49", "Update TextElement: is required, or use any of its special operations, such as:</p>(121) to any of its special operations, such as:</p>", "Insert TextElement: <h3>Understanding complex orderings</h3>(150) into TagElement(222) at 63", "Insert TextElement: <p>Complex chained orderings like the following example can be challenging to understand.(151) into TagElement(222) at 64", "Insert TextElement: <pre>   (152) into TagElement(222) at 65", "Insert TagElement: @code(158) into TagElement(222) at 66", "Insert TextElement: </pre>(159) into TagElement(222) at 67", "Insert TextElement: Note that each chaining method returns a new ordering instance which is backed by the previous(160) into TagElement(222) at 68", "Insert TextElement: instance, but has the chance to act on values <i>before</i> handing off to that backing(161) into TagElement(222) at 69", "Insert TextElement: instance. As a result, it usually helps to read chained ordering expressions <i>backwards</i>.(162) into TagElement(222) at 70", "Insert TextElement: For example, when (163) into TagElement(222) at 71", "Insert TagElement: @code(165) into TagElement(222) at 72", "Insert TextElement:  is called on the above ordering:(166) into TagElement(222) at 73", "Insert TextElement: <ol>(167) into TagElement(222) at 74", "Insert TextElement: <li>First, if only one (168) into TagElement(222) at 75", "Insert TagElement: @code(170) into TagElement(222) at 76", "Insert TextElement:  is null, that null value is treated as <i>greater</i>(171) into TagElement(222) at 77", "Insert TextElement: <li>Next, non-null (172) into TagElement(222) at 78", "Insert TagElement: @code(174) into TagElement(222) at 79", "Insert TextElement:  values are passed to (175) into TagElement(222) at 80", "Insert TagElement: @code(177) into TagElement(222) at 81", "Insert TextElement:  (we will be(178) into TagElement(222) at 82", "Insert TextElement: comparing (179) into TagElement(222) at 83", "Insert TagElement: @code(181) into TagElement(222) at 84", "Insert TextElement:  values from now on)(182) into TagElement(222) at 85", "Insert TextElement: <li>Next, if only one (183) into TagElement(222) at 86", "Insert TagElement: @code(185) into TagElement(222) at 87", "Insert TextElement:  is null, that null value is treated as <i>lesser</i>(186) into TagElement(222) at 88", "Insert TextElement: <li>Finally, natural ordering is used (i.e. the result of (187) into TagElement(222) at 89", "Insert TagElement: @code(189) into TagElement(222) at 90", "Insert TextElement:  is(190) into TagElement(222) at 91", "Insert TextElement: returned)(191) into TagElement(222) at 92", "Insert TextElement: </ol>(192) into TagElement(222) at 93", "Insert TextElement: <p>Alas, (193) into TagElement(222) at 94", "Insert TagElement: @link(196) into TagElement(222) at 95", "Insert TextElement:  is a little different. As you read backwards through a chain and(197) into TagElement(222) at 96", "Insert TextElement: encounter a call to (198) into TagElement(222) at 97", "Insert TagElement: @code(200) into TagElement(222) at 98", "Insert TextElement: , continue working backwards until a result is determined,(201) into TagElement(222) at 99", "Insert TextElement: and then reverse that result.(202) into TagElement(222) at 100", "Insert TextElement: <h3>Additional notes</h3>(203) into TagElement(222) at 101", "Update TextElement: \"https://github.com/google/guava/wiki/OrderingExplained\">(158) to \"http://code.google.com/p/guava-libraries/wiki/OrderingExplained\">", "Update TextElement:  Ordering(84) to Ordering", "Insert TextElement: Ordering<Foo> ordering =(153) into TagElement: @code(158) at 0", "Insert TextElement: Ordering.natural()(154) into TagElement: @code(158) at 1", "Insert TextElement: .nullsFirst()(155) into TagElement: @code(158) at 2", "Insert TextElement: .onResultOf(getBarFunction)(156) into TagElement: @code(158) at 3", "Insert TextElement: .nullsLast();(157) into TagElement: @code(158) at 4", "Insert TextElement:  compare(164) into TagElement: @code(165) at 0", "Insert TextElement:  Foo(169) into TagElement: @code(170) at 0", "Insert TextElement:  Foo(173) into TagElement: @code(174) at 0", "Insert TextElement:  getBarFunction(176) into TagElement: @code(177) at 0", "Insert TextElement:  Bar(180) into TagElement: @code(181) at 0", "Insert TextElement:  Bar(184) into TagElement: @code(185) at 0", "Insert TextElement:  Bar.compareTo(Bar)(188) into TagElement: @code(189) at 0", "Insert MemberRef(195) into TagElement: @link(196) at 0", "Insert TextElement:  reverse(199) into TagElement: @code(200) at 0", "Insert SimpleName: reverse(194) into MemberRef(195) at 0"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}