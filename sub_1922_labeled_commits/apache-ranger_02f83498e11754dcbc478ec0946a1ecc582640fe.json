{"application": "apache-ranger", "csha": "02f83498e11754dcbc478ec0946a1ecc582640fe", "files": [{"RangerHiveAuthorizer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: uri to SingleVariableDeclaration at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS SimpleName: hivePlugin to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: uri to MethodInvocation at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ForStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ExpressionStatement to Block at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getFSScheme to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: uri to MethodInvocation at 0", "INS SimpleName: fsScheme to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS BreakStatement to Block at 1", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS QualifiedName: fsScheme.length to InfixExpression: < at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Dimension to ArrayType: String[] at 1", "INS IfStatement to Block at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: ret to ReturnStatement at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ArrayAccess to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: fsScheme to InfixExpression: != at 0", "INS Block to ForStatement at 3", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: isPathInFSScheme to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS IfStatement to Block at 2", "INS SimpleName: ret to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ret to Assignment: = at 0", "INS SimpleName: startsWith to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: fsScheme to ArrayAccess at 0", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 10", "operations": ["INS SimpleName: READ to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 10"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 11", "operations": ["INS SimpleName: WRITE to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 11"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS StringLiteral: \"ranger.plugin.hive.urlauth.filesystem.schemes\" to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS StringLiteral: \"hdfs:,file:\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES_DEFAULT to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleName: FILESYSTEM_SCHEMES_SEPARATOR_CHAR to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleType: String to FieldDeclaration at 2", "INS StringLiteral: \",\" to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS ArrayType: String[] to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: String to ArrayType: String[] at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: fsScheme to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: getFSScheme to MethodDeclaration at 2", "INS SimpleType: String to ArrayType: String[] at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ArrayType: String[] to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 3", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: fsScheme to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: HiveObjectType to SingleVariableDeclaration at 0", "INS SimpleName: hiveObjectType to SingleVariableDeclaration at 1", "INS SimpleName: HiveObjectType to SimpleType: HiveObjectType at 0"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS SimpleName: i to PostfixExpression: ++ at 0", "INS ForStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to Assignment: = at 1", "INS Block to ForStatement at 3", "INS SimpleName: fsScheme to ArrayAccess at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: FILESYSTEM_SCHEMES_SEPARATOR_CHAR to MethodInvocation at 3", "INS SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES to MethodInvocation at 2", "INS SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES_DEFAULT to MethodInvocation at 3", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationStatement to Block at 4", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: i to ArrayAccess at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: fsScheme to ArrayAccess at 0", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: fsSchemesString to MethodInvocation at 2", "INS SimpleName: RangerConfiguration to MethodInvocation at 0", "INS IfStatement to Block at 6", "INS SimpleName: fsSchemesString to VariableDeclarationFragment at 0", "INS SimpleName: fsScheme to InfixExpression: != at 0", "INS SimpleName: split to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: fsScheme to Assignment: = at 0", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: trim to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS QualifiedName: fsScheme.length to InfixExpression: < at 1", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS InfixExpression: == to InfixExpression: && at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: HiveObjectType.URI to InfixExpression: == at 1", "INS SimpleName: hiveObjectType to InfixExpression: == at 0", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: HiveAccessType.READ to Assignment: = at 1", "INS IfStatement to Block at 2", "INS SimpleName: isInput to InfixExpression: && at 1", "INS SimpleName: accessType to Assignment: = at 0", "INS SimpleName: accessType to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS Block to IfStatement at 1", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS SimpleName: accessType to ReturnStatement at 0", "INS QualifiedName: HiveAccessType.WRITE to Assignment: = at 1", "INS ReturnStatement to Block at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS QualifiedName: HiveObjectType.URI to InfixExpression: == at 1", "INS SimpleName: hiveObjectType to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: accessType to Assignment: = at 0", "INS InfixExpression: && to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: isInput to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: hiveObjType to VariableDeclarationFragment at 0", "INS SimpleName: HiveObjectType to SimpleType: HiveObjectType at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: HiveObjectType to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HiveObjectType to VariableDeclarationStatement at 0", "INS SimpleName: HiveObjectType to SimpleType: HiveObjectType at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: hiveObjType to VariableDeclarationFragment at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: == to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isPathInFSScheme to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: hiveObjType to InfixExpression: == at 0", "INS SimpleName: path to MethodInvocation at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: isPathInFSScheme to MethodInvocation at 0", "INS SimpleName: hiveObjType to InfixExpression: == at 0", "INS SimpleName: path to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV QualifiedName: HiveObjectType.URI to InfixExpression: == at 1", "MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV QualifiedName: HiveObjectType.URI to InfixExpression: == at 1", "MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: hiveObjType to MethodInvocation at 3", "operations": ["INS SimpleName: hiveObjType to MethodInvocation at 3"]}, {"root": "INS SimpleName: hiveObjType to MethodInvocation at 3", "operations": ["INS SimpleName: hiveObjType to MethodInvocation at 3"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: =="]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: =="]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"RangerHiveAuthorizer_diff": {"operations": ["Insert MethodDeclaration(3781) into TypeDeclaration: class(5109) at 26", "Insert EnumConstantDeclaration(5150) into EnumDeclaration(5157) at 10", "Insert EnumConstantDeclaration(5152) into EnumDeclaration(5157) at 11", "Insert FieldDeclaration(5190) into TypeDeclaration: class(5324) at 5", "Insert FieldDeclaration(5198) into TypeDeclaration: class(5324) at 6", "Insert FieldDeclaration(5206) into TypeDeclaration: class(5324) at 7", "Insert FieldDeclaration(5215) into TypeDeclaration: class(5324) at 8", "Insert MethodDeclaration(5323) into TypeDeclaration: class(5324) at 11", "Insert SingleVariableDeclaration(3095) into MethodDeclaration(3479) at 5", "Insert Modifier: private(3721) into MethodDeclaration(3781) at 0", "Insert PrimitiveType: boolean(3722) into MethodDeclaration(3781) at 1", "Insert SimpleName: isPathInFSScheme(3723) into MethodDeclaration(3781) at 2", "Insert SingleVariableDeclaration(3727) into MethodDeclaration(3781) at 3", "Insert Block(3780) into MethodDeclaration(3781) at 4", "Insert SimpleName: READ(5149) into EnumConstantDeclaration(5150) at 0", "Insert SimpleName: WRITE(5151) into EnumConstantDeclaration(5152) at 0", "Insert Modifier: private(5183) into FieldDeclaration(5190) at 0", "Insert Modifier: static(5184) into FieldDeclaration(5190) at 1", "Insert SimpleType: String(5186) into FieldDeclaration(5190) at 2", "Insert VariableDeclarationFragment(5189) into FieldDeclaration(5190) at 3", "Insert Modifier: private(5191) into FieldDeclaration(5198) at 0", "Insert Modifier: static(5192) into FieldDeclaration(5198) at 1", "Insert SimpleType: String(5194) into FieldDeclaration(5198) at 2", "Insert VariableDeclarationFragment(5197) into FieldDeclaration(5198) at 3", "Insert Modifier: private(5199) into FieldDeclaration(5206) at 0", "Insert Modifier: static(5200) into FieldDeclaration(5206) at 1", "Insert SimpleType: String(5202) into FieldDeclaration(5206) at 2", "Insert VariableDeclarationFragment(5205) into FieldDeclaration(5206) at 3", "Insert Modifier: private(5207) into FieldDeclaration(5215) at 0", "Insert ArrayType: String[](5211) into FieldDeclaration(5215) at 1", "Insert VariableDeclarationFragment(5214) into FieldDeclaration(5215) at 2", "Insert Block(5312) into MethodDeclaration(5313) at 4", "Insert Modifier: public(5314) into MethodDeclaration(5323) at 0", "Insert ArrayType: String[](5318) into MethodDeclaration(5323) at 1", "Insert SimpleName: getFSScheme(5319) into MethodDeclaration(5323) at 2", "Insert Block(5322) into MethodDeclaration(5323) at 3", "Insert SimpleType: HiveObjectType(3093) into SingleVariableDeclaration(3095) at 0", "Insert SimpleName: hiveObjectType(3094) into SingleVariableDeclaration(3095) at 1", "Insert IfStatement(3125) into Block(3478) at 2", "Insert IfStatement(3139) into Block(3478) at 3", "Insert SimpleType: String(3725) into SingleVariableDeclaration(3727) at 0", "Insert SimpleName: uri(3726) into SingleVariableDeclaration(3727) at 1", "Insert VariableDeclarationStatement(3732) into Block(3780) at 0", "Insert VariableDeclarationStatement(3742) into Block(3780) at 1", "Insert IfStatement(3777) into Block(3780) at 2", "Insert ReturnStatement(3779) into Block(3780) at 3", "Insert SimpleName: String(5185) into SimpleType: String(5186) at 0", "Insert SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES(5187) into VariableDeclarationFragment(5189) at 0", "Insert StringLiteral: \"ranger.plugin.hive.urlauth.filesystem.schemes\"(5188) into VariableDeclarationFragment(5189) at 1", "Insert SimpleName: String(5193) into SimpleType: String(5194) at 0", "Insert SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES_DEFAULT(5195) into VariableDeclarationFragment(5197) at 0", "Insert StringLiteral: \"hdfs:,file:\"(5196) into VariableDeclarationFragment(5197) at 1", "Insert SimpleName: String(5201) into SimpleType: String(5202) at 0", "Insert SimpleName: FILESYSTEM_SCHEMES_SEPARATOR_CHAR(5203) into VariableDeclarationFragment(5205) at 0", "Insert StringLiteral: \",\"(5204) into VariableDeclarationFragment(5205) at 1", "Insert SimpleType: String(5209) into ArrayType: String[](5211) at 0", "Insert Dimension(5210) into ArrayType: String[](5211) at 1", "Insert SimpleName: fsScheme(5212) into VariableDeclarationFragment(5214) at 0", "Insert NullLiteral(5213) into VariableDeclarationFragment(5214) at 1", "Move ExpressionStatement(5083) into Block(5312) at 0", "Move ExpressionStatement(5093) into Block(5312) at 1", "Move ExpressionStatement(5103) into Block(5312) at 2", "Move ExpressionStatement(5113) into Block(5312) at 3", "Insert VariableDeclarationStatement(5276) into Block(5312) at 4", "Insert ExpressionStatement(5284) into Block(5312) at 5", "Insert IfStatement(5311) into Block(5312) at 6", "Insert SimpleType: String(5316) into ArrayType: String[](5318) at 0", "Insert Dimension(5317) into ArrayType: String[](5318) at 1", "Insert ReturnStatement(5321) into Block(5322) at 0", "Insert SimpleName: HiveObjectType(3092) into SimpleType: HiveObjectType(3093) at 0", "Insert InfixExpression: &&(3117) into IfStatement(3125) at 0", "Insert Block(3124) into IfStatement(3125) at 1", "Insert InfixExpression: &&(3131) into IfStatement(3139) at 0", "Insert Block(3138) into IfStatement(3139) at 1", "Insert SimpleName: String(3724) into SimpleType: String(3725) at 0", "Insert PrimitiveType: boolean(3728) into VariableDeclarationStatement(3732) at 0", "Insert VariableDeclarationFragment(3731) into VariableDeclarationStatement(3732) at 1", "Insert ArrayType: String[](3736) into VariableDeclarationStatement(3742) at 0", "Insert VariableDeclarationFragment(3741) into VariableDeclarationStatement(3742) at 1", "Insert InfixExpression: !=(3745) into IfStatement(3777) at 0", "Insert Block(3776) into IfStatement(3777) at 1", "Insert SimpleName: ret(3778) into ReturnStatement(3779) at 0", "Insert SimpleName: String(5208) into SimpleType: String(5209) at 0", "Insert SimpleType: String(5266) into VariableDeclarationStatement(5276) at 0", "Insert VariableDeclarationFragment(5275) into VariableDeclarationStatement(5276) at 1", "Insert Assignment: =(5283) into ExpressionStatement(5284) at 0", "Insert InfixExpression: !=(5287) into IfStatement(5311) at 0", "Insert Block(5310) into IfStatement(5311) at 1", "Insert SimpleName: String(5315) into SimpleType: String(5316) at 0", "Insert SimpleName: fsScheme(5320) into ReturnStatement(5321) at 0", "Insert InfixExpression: ==(3115) into InfixExpression: &&(3117) at 0", "Insert SimpleName: isInput(3116) into InfixExpression: &&(3117) at 1", "Insert ExpressionStatement(3121) into Block(3124) at 0", "Insert ReturnStatement(3123) into Block(3124) at 1", "Insert InfixExpression: ==(3128) into InfixExpression: &&(3131) at 0", "Insert PrefixExpression: !(3130) into InfixExpression: &&(3131) at 1", "Insert ExpressionStatement(3135) into Block(3138) at 0", "Insert ReturnStatement(3137) into Block(3138) at 1", "Insert SimpleName: ret(3729) into VariableDeclarationFragment(3731) at 0", "Insert BooleanLiteral: false(3730) into VariableDeclarationFragment(3731) at 1", "Insert SimpleType: String(3734) into ArrayType: String[](3736) at 0", "Insert Dimension(3735) into ArrayType: String[](3736) at 1", "Insert SimpleName: fsScheme(3737) into VariableDeclarationFragment(3741) at 0", "Insert MethodInvocation(3740) into VariableDeclarationFragment(3741) at 1", "Insert SimpleName: fsScheme(3743) into InfixExpression: !=(3745) at 0", "Insert NullLiteral(3744) into InfixExpression: !=(3745) at 1", "Insert ForStatement(3775) into Block(3776) at 0", "Insert SimpleName: String(5265) into SimpleType: String(5266) at 0", "Insert SimpleName: fsSchemesString(5267) into VariableDeclarationFragment(5275) at 0", "Insert MethodInvocation(5274) into VariableDeclarationFragment(5275) at 1", "Insert SimpleName: fsScheme(5277) into Assignment: =(5283) at 0", "Insert MethodInvocation(5282) into Assignment: =(5283) at 1", "Insert SimpleName: fsScheme(5285) into InfixExpression: !=(5287) at 0", "Insert NullLiteral(5286) into InfixExpression: !=(5287) at 1", "Insert ForStatement(5309) into Block(5310) at 0", "Insert SimpleName: hiveObjectType(3113) into InfixExpression: ==(3115) at 0", "Insert QualifiedName: HiveObjectType.URI(3114) into InfixExpression: ==(3115) at 1", "Insert Assignment: =(3120) into ExpressionStatement(3121) at 0", "Insert SimpleName: accessType(3122) into ReturnStatement(3123) at 0", "Insert SimpleName: hiveObjectType(3126) into InfixExpression: ==(3128) at 0", "Insert QualifiedName: HiveObjectType.URI(3127) into InfixExpression: ==(3128) at 1", "Insert SimpleName: isInput(3129) into PrefixExpression: !(3130) at 0", "Insert Assignment: =(3134) into ExpressionStatement(3135) at 0", "Insert SimpleName: accessType(3136) into ReturnStatement(3137) at 0", "Insert SimpleName: String(3733) into SimpleType: String(3734) at 0", "Insert SimpleName: hivePlugin(3738) into MethodInvocation(3740) at 0", "Insert SimpleName: getFSScheme(3739) into MethodInvocation(3740) at 1", "Insert VariableDeclarationExpression(3750) into ForStatement(3775) at 0", "Insert InfixExpression: <(3753) into ForStatement(3775) at 1", "Insert PostfixExpression: ++(3755) into ForStatement(3775) at 2", "Insert Block(3774) into ForStatement(3775) at 3", "Insert MethodInvocation(5270) into MethodInvocation(5274) at 0", "Insert SimpleName: get(5271) into MethodInvocation(5274) at 1", "Insert SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES(5272) into MethodInvocation(5274) at 2", "Insert SimpleName: RANGER_PLUGIN_HIVE_ULRAUTH_FILESYSTEM_SCHEMES_DEFAULT(5273) into MethodInvocation(5274) at 3", "Insert SimpleName: StringUtils(5278) into MethodInvocation(5282) at 0", "Insert SimpleName: split(5279) into MethodInvocation(5282) at 1", "Insert SimpleName: fsSchemesString(5280) into MethodInvocation(5282) at 2", "Insert SimpleName: FILESYSTEM_SCHEMES_SEPARATOR_CHAR(5281) into MethodInvocation(5282) at 3", "Insert VariableDeclarationExpression(5292) into ForStatement(5309) at 0", "Insert InfixExpression: <(5295) into ForStatement(5309) at 1", "Insert PostfixExpression: ++(5297) into ForStatement(5309) at 2", "Insert Block(5308) into ForStatement(5309) at 3", "Insert SimpleName: accessType(3118) into Assignment: =(3120) at 0", "Insert QualifiedName: HiveAccessType.READ(3119) into Assignment: =(3120) at 1", "Insert SimpleName: accessType(3132) into Assignment: =(3134) at 0", "Insert QualifiedName: HiveAccessType.WRITE(3133) into Assignment: =(3134) at 1", "Insert PrimitiveType: int(3746) into VariableDeclarationExpression(3750) at 0", "Insert VariableDeclarationFragment(3749) into VariableDeclarationExpression(3750) at 1", "Insert SimpleName: i(3751) into InfixExpression: <(3753) at 0", "Insert QualifiedName: fsScheme.length(3752) into InfixExpression: <(3753) at 1", "Insert SimpleName: i(3754) into PostfixExpression: ++(3755) at 0", "Insert IfStatement(3773) into Block(3774) at 0", "Insert SimpleName: RangerConfiguration(5268) into MethodInvocation(5270) at 0", "Insert SimpleName: getInstance(5269) into MethodInvocation(5270) at 1", "Insert PrimitiveType: int(5288) into VariableDeclarationExpression(5292) at 0", "Insert VariableDeclarationFragment(5291) into VariableDeclarationExpression(5292) at 1", "Insert SimpleName: i(5293) into InfixExpression: <(5295) at 0", "Insert QualifiedName: fsScheme.length(5294) into InfixExpression: <(5295) at 1", "Insert SimpleName: i(5296) into PostfixExpression: ++(5297) at 0", "Insert ExpressionStatement(5307) into Block(5308) at 0", "Insert SimpleName: i(3747) into VariableDeclarationFragment(3749) at 0", "Insert NumberLiteral: 0(3748) into VariableDeclarationFragment(3749) at 1", "Insert InfixExpression: &&(3766) into IfStatement(3773) at 0", "Insert Block(3772) into IfStatement(3773) at 1", "Insert SimpleName: i(5289) into VariableDeclarationFragment(5291) at 0", "Insert NumberLiteral: 0(5290) into VariableDeclarationFragment(5291) at 1", "Insert Assignment: =(5306) into ExpressionStatement(5307) at 0", "Move VariableDeclarationStatement(705) into Block(794) at 2", "Insert VariableDeclarationStatement(708) into Block(794) at 3", "Move VariableDeclarationStatement(877) into Block(977) at 2", "Insert VariableDeclarationStatement(891) into Block(977) at 3", "Insert PrefixExpression: !(3759) into InfixExpression: &&(3766) at 0", "Insert MethodInvocation(3765) into InfixExpression: &&(3766) at 1", "Insert ExpressionStatement(3770) into Block(3772) at 0", "Insert BreakStatement(3771) into Block(3772) at 1", "Insert ArrayAccess(5300) into Assignment: =(5306) at 0", "Insert MethodInvocation(5305) into Assignment: =(5306) at 1", "Insert SimpleType: HiveObjectType(702) into VariableDeclarationStatement(708) at 0", "Insert VariableDeclarationFragment(707) into VariableDeclarationStatement(708) at 1", "Insert InfixExpression: &&(715) into IfStatement(747) at 0", "Insert SimpleType: HiveObjectType(885) into VariableDeclarationStatement(891) at 0", "Insert VariableDeclarationFragment(890) into VariableDeclarationStatement(891) at 1", "Insert InfixExpression: &&(898) into IfStatement(930) at 0", "Insert MethodInvocation(3758) into PrefixExpression: !(3759) at 0", "Insert SimpleName: uri(3760) into MethodInvocation(3765) at 0", "Insert SimpleName: startsWith(3761) into MethodInvocation(3765) at 1", "Insert ArrayAccess(3764) into MethodInvocation(3765) at 2", "Insert Assignment: =(3769) into ExpressionStatement(3770) at 0", "Insert SimpleName: fsScheme(5298) into ArrayAccess(5300) at 0", "Insert SimpleName: i(5299) into ArrayAccess(5300) at 1", "Insert ArrayAccess(5303) into MethodInvocation(5305) at 0", "Insert SimpleName: trim(5304) into MethodInvocation(5305) at 1", "Insert SimpleName: HiveObjectType(701) into SimpleType: HiveObjectType(702) at 0", "Insert SimpleName: hiveObjType(703) into VariableDeclarationFragment(707) at 0", "Move MethodInvocation(695) into VariableDeclarationFragment(707) at 1", "Insert InfixExpression: ==(711) into InfixExpression: &&(715) at 0", "Insert MethodInvocation(714) into InfixExpression: &&(715) at 1", "Insert SimpleName: HiveObjectType(884) into SimpleType: HiveObjectType(885) at 0", "Insert SimpleName: hiveObjType(886) into VariableDeclarationFragment(890) at 0", "Move MethodInvocation(867) into VariableDeclarationFragment(890) at 1", "Insert InfixExpression: ==(894) into InfixExpression: &&(898) at 0", "Insert MethodInvocation(897) into InfixExpression: &&(898) at 1", "Insert SimpleName: uri(3756) into MethodInvocation(3758) at 0", "Insert SimpleName: isEmpty(3757) into MethodInvocation(3758) at 1", "Insert SimpleName: fsScheme(3762) into ArrayAccess(3764) at 0", "Insert SimpleName: i(3763) into ArrayAccess(3764) at 1", "Insert SimpleName: ret(3767) into Assignment: =(3769) at 0", "Insert BooleanLiteral: true(3768) into Assignment: =(3769) at 1", "Insert SimpleName: fsScheme(5301) into ArrayAccess(5303) at 0", "Insert SimpleName: i(5302) into ArrayAccess(5303) at 1", "Insert SimpleName: hiveObjType(709) into InfixExpression: ==(711) at 0", "Move QualifiedName: HiveObjectType.URI(696) into InfixExpression: ==(711) at 1", "Insert SimpleName: isPathInFSScheme(712) into MethodInvocation(714) at 0", "Insert SimpleName: path(713) into MethodInvocation(714) at 1", "Insert SimpleName: hiveObjType(754) into MethodInvocation(756) at 3", "Insert SimpleName: hiveObjType(892) into InfixExpression: ==(894) at 0", "Move QualifiedName: HiveObjectType.URI(868) into InfixExpression: ==(894) at 1", "Insert SimpleName: isPathInFSScheme(895) into MethodInvocation(897) at 0", "Insert SimpleName: path(896) into MethodInvocation(897) at 1", "Insert SimpleName: hiveObjType(937) into MethodInvocation(939) at 3", "Delete InfixExpression: ==(697)", "Delete InfixExpression: ==(869)", "Delete Block(5114)"]}}, {"RangerHiveResource_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleName: KEY_URL to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS StringLiteral: \"url\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: KEY_URL to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getUrl to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getValue to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from database to databaseorUrl", "operations": ["UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl", "UPD SimpleName: database from database to databaseorUrl"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 22"]}, {"root": "INS ExpressionStatement to SwitchStatement at 21", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: databaseorUrl to MethodInvocation at 2", "INS SimpleName: KEY_URL to MethodInvocation at 1", "INS SimpleName: setValue to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 21"]}, {"root": "INS BreakStatement to SwitchStatement at 22", "operations": ["INS BreakStatement to SwitchStatement at 22"]}]}}, {"RangerHiveResource_diff": {"operations": ["Insert FieldDeclaration(52) into TypeDeclaration: class(254) at 7", "Insert MethodDeclaration(253) into TypeDeclaration: class(254) at 17", "Insert Modifier: public(44) into FieldDeclaration(52) at 0", "Insert Modifier: static(45) into FieldDeclaration(52) at 1", "Insert Modifier: final(46) into FieldDeclaration(52) at 2", "Insert SimpleType: String(48) into FieldDeclaration(52) at 3", "Insert VariableDeclarationFragment(51) into FieldDeclaration(52) at 4", "Move SingleVariableDeclaration(73) into MethodDeclaration(76) at 2", "Move SingleVariableDeclaration(77) into MethodDeclaration(76) at 3", "Move SingleVariableDeclaration(56) into MethodDeclaration(97) at 2", "Move SingleVariableDeclaration(60) into MethodDeclaration(97) at 3", "Insert Modifier: public(244) into MethodDeclaration(253) at 0", "Insert SimpleType: String(246) into MethodDeclaration(253) at 1", "Insert SimpleName: getUrl(247) into MethodDeclaration(253) at 2", "Insert Block(252) into MethodDeclaration(253) at 3", "Insert SimpleName: String(47) into SimpleType: String(48) at 0", "Insert SimpleName: KEY_URL(49) into VariableDeclarationFragment(51) at 0", "Insert StringLiteral: \"url\"(50) into VariableDeclarationFragment(51) at 1", "Update SimpleName: database(76) to databaseorUrl", "Update SimpleName: database(59) to databaseorUrl", "Update SimpleName: database(97) to databaseorUrl", "Move SwitchCase(173) into SwitchStatement(193) at 22", "Insert SimpleName: String(245) into SimpleType: String(246) at 0", "Insert ReturnStatement(251) into Block(252) at 0", "Update SimpleName: database(62) to databaseorUrl", "Update SimpleName: database(83) to databaseorUrl", "Insert ExpressionStatement(187) into SwitchStatement(193) at 21", "Insert BreakStatement(188) into SwitchStatement(193) at 22", "Insert MethodInvocation(250) into ReturnStatement(251) at 0", "Insert MethodInvocation(186) into ExpressionStatement(187) at 0", "Insert SimpleName: getValue(248) into MethodInvocation(250) at 0", "Insert SimpleName: KEY_URL(249) into MethodInvocation(250) at 1", "Update SimpleName: database(118) to databaseorUrl", "Update SimpleName: database(126) to databaseorUrl", "Update SimpleName: database(139) to databaseorUrl", "Update SimpleName: database(163) to databaseorUrl", "Insert SimpleName: setValue(183) into MethodInvocation(186) at 0", "Insert SimpleName: KEY_URL(184) into MethodInvocation(186) at 1", "Insert SimpleName: databaseorUrl(185) into MethodInvocation(186) at 2"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}