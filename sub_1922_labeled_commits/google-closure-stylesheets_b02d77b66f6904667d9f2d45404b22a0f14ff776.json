{"application": "google-closure-stylesheets", "csha": "b02d77b66f6904667d9f2d45404b22a0f14ff776", "files": [{"SourceCodeLocation_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: UNKNOWN_SOURCE_CODE to VariableDeclarationFragment at 0", "INS StringLiteral: \"\" to ClassInstanceCreation at 2", "INS SimpleType: SourceCode to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleType: SourceCode to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \"unknown\" to ClassInstanceCreation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: SourceCode to SimpleType: SourceCode at 0", "INS SimpleName: SourceCode to SimpleType: SourceCode at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleName: result to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS TextElement: Returns an unknown location. to TagElement at 0", "INS SimpleName: SourceCodeLocation to SimpleType: SourceCodeLocation at 0", "INS PrefixExpression: - to ClassInstanceCreation at 2", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS QualifiedName: result.begin to MethodInvocation at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 3", "INS SimpleName: SourceCodeLocation to SimpleType: SourceCodeLocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: SourceCodeLocation to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: SourceCodeLocation to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SimpleName: checkState to MethodInvocation at 1", "INS QualifiedName: result.end to MethodInvocation at 0", "INS SimpleName: hasValidUnknownCoordinates to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: hasValidUnknownCoordinates to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS SimpleName: SourceCodeLocation to SimpleType: SourceCodeLocation at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrefixExpression: - to ClassInstanceCreation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 7", "INS MethodInvocation to MethodInvocation at 2", "INS NumberLiteral: 0 to ClassInstanceCreation at 6", "INS NumberLiteral: 0 to ClassInstanceCreation at 4", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: checkState to MethodInvocation at 1", "INS SimpleName: UNKNOWN_SOURCE_CODE to ClassInstanceCreation at 1", "INS SimpleType: SourceCodeLocation to VariableDeclarationStatement at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: checkState to MethodInvocation at 1", "INS SimpleName: getUnknownLocation to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: isUnknown to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 2", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getBegin to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: SourceCodePoint to SimpleType: SourceCodePoint at 0", "INS SimpleType: SourceCodePoint to MethodDeclaration at 1", "INS SimpleName: begin to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleName: end to ReturnStatement at 0", "INS SimpleType: SourceCodePoint to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getEnd to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: SourceCodePoint to SimpleType: SourceCodePoint at 0"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 2", "operations": ["INS Modifier: public to TypeDeclaration: class at 2"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: indexInLine to MethodInvocation at 4", "INS StringLiteral: \"(lineNumber %d, indexInLine %d, characterIndex %d) \" to InfixExpression: + at 1", "INS StringLiteral: \"The location passed \" to InfixExpression: + at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: lineNumber to MethodInvocation at 3", "INS IfStatement to Block at 3", "INS SimpleName: characterIndex to MethodInvocation at 5", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 0", "INS StringLiteral: \"is not valid.\" to InfixExpression: + at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: indexInLine to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS StringLiteral: \"(lineNumber %d, indexInLine %d, characterIndex %d) \" to InfixExpression: + at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: lineNumber to MethodInvocation at 3", "INS StringLiteral: \"is not plausible.\" to InfixExpression: + at 2", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"The location passed \" to InfixExpression: + at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: characterIndex to MethodInvocation at 5", "INS IfStatement to Block at 4", "INS ThrowStatement to Block at 0", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from || to &&", "operations": ["UPD InfixExpression: || from || to &&"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0", "MOV SimpleName: Preconditions to MethodInvocation at 0", "MOV SimpleName: checkArgument to MethodInvocation at 1"]}, {"root": "INS PrefixExpression: ! to InfixExpression: || at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: || at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: || at 1", "operations": ["INS PrefixExpression: ! to InfixExpression: || at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Preconditions to MethodInvocation at 0", "MOV MethodInvocation to PrefixExpression: ! at 0", "MOV SimpleName: checkArgument to MethodInvocation at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0", "MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from Preconditions to String", "operations": ["UPD SimpleName: Preconditions from Preconditions to String", "UPD SimpleName: Preconditions from Preconditions to String"]}, {"root": "UPDATE from checkArgument to format", "operations": ["UPD SimpleName: checkArgument from checkArgument to format", "UPD SimpleName: checkArgument from checkArgument to format"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL StringLiteral: \"The location passed is not valid.\"", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"The location passed is not valid.\"", "DEL ExpressionStatement"]}]}}, {"SourceCodeLocation_diff": {"operations": ["Insert FieldDeclaration(387) into TypeDeclaration: class(823) at 5", "Insert MethodDeclaration(437) into TypeDeclaration: class(823) at 6", "Insert MethodDeclaration(660) into TypeDeclaration: class(823) at 22", "Insert MethodDeclaration(668) into TypeDeclaration: class(823) at 23", "Insert Modifier: public(52) into TypeDeclaration: class(374) at 2", "Insert Modifier: private(375) into FieldDeclaration(387) at 0", "Insert Modifier: static(376) into FieldDeclaration(387) at 1", "Insert Modifier: final(377) into FieldDeclaration(387) at 2", "Insert SimpleType: SourceCode(379) into FieldDeclaration(387) at 3", "Insert VariableDeclarationFragment(386) into FieldDeclaration(387) at 4", "Insert Javadoc(390) into MethodDeclaration(437) at 0", "Insert Modifier: public(391) into MethodDeclaration(437) at 1", "Insert Modifier: static(392) into MethodDeclaration(437) at 2", "Insert SimpleType: SourceCodeLocation(394) into MethodDeclaration(437) at 3", "Insert SimpleName: getUnknownLocation(395) into MethodDeclaration(437) at 4", "Insert Block(436) into MethodDeclaration(437) at 5", "Insert Modifier: public(653) into MethodDeclaration(660) at 0", "Insert SimpleType: SourceCodePoint(655) into MethodDeclaration(660) at 1", "Insert SimpleName: getBegin(656) into MethodDeclaration(660) at 2", "Insert Block(659) into MethodDeclaration(660) at 3", "Insert Modifier: public(661) into MethodDeclaration(668) at 0", "Insert SimpleType: SourceCodePoint(663) into MethodDeclaration(668) at 1", "Insert SimpleName: getEnd(664) into MethodDeclaration(668) at 2", "Insert Block(667) into MethodDeclaration(668) at 3", "Insert SimpleName: SourceCode(378) into SimpleType: SourceCode(379) at 0", "Insert SimpleName: UNKNOWN_SOURCE_CODE(380) into VariableDeclarationFragment(386) at 0", "Insert ClassInstanceCreation(385) into VariableDeclarationFragment(386) at 1", "Insert TagElement(389) into Javadoc(390) at 0", "Insert SimpleName: SourceCodeLocation(393) into SimpleType: SourceCodeLocation(394) at 0", "Insert VariableDeclarationStatement(412) into Block(436) at 0", "Insert ExpressionStatement(419) into Block(436) at 1", "Insert ExpressionStatement(426) into Block(436) at 2", "Insert ExpressionStatement(433) into Block(436) at 3", "Insert ReturnStatement(435) into Block(436) at 4", "Insert SimpleName: SourceCodePoint(654) into SimpleType: SourceCodePoint(655) at 0", "Insert ReturnStatement(658) into Block(659) at 0", "Insert SimpleName: SourceCodePoint(662) into SimpleType: SourceCodePoint(663) at 0", "Insert ReturnStatement(666) into Block(667) at 0", "Insert IfStatement(140) into Block(160) at 3", "Insert IfStatement(159) into Block(160) at 4", "Insert SimpleType: SourceCode(382) into ClassInstanceCreation(385) at 0", "Insert StringLiteral: \"unknown\"(383) into ClassInstanceCreation(385) at 1", "Insert StringLiteral: \"\"(384) into ClassInstanceCreation(385) at 2", "Insert TextElement: Returns an unknown location.(388) into TagElement(389) at 0", "Insert SimpleType: SourceCodeLocation(397) into VariableDeclarationStatement(412) at 0", "Insert VariableDeclarationFragment(411) into VariableDeclarationStatement(412) at 1", "Insert MethodInvocation(418) into ExpressionStatement(419) at 0", "Insert MethodInvocation(425) into ExpressionStatement(426) at 0", "Insert MethodInvocation(432) into ExpressionStatement(433) at 0", "Insert SimpleName: result(434) into ReturnStatement(435) at 0", "Insert SimpleName: begin(657) into ReturnStatement(658) at 0", "Insert SimpleName: end(665) into ReturnStatement(666) at 0", "Update InfixExpression: ||(123) to &&", "Move InfixExpression: ||(123) into IfStatement(140) at 0", "Insert Block(139) into IfStatement(140) at 1", "Insert PrefixExpression: !(143) into IfStatement(159) at 0", "Insert Block(158) into IfStatement(159) at 1", "Insert SimpleName: SourceCode(381) into SimpleType: SourceCode(382) at 0", "Insert SimpleName: SourceCodeLocation(396) into SimpleType: SourceCodeLocation(397) at 0", "Insert SimpleName: result(398) into VariableDeclarationFragment(411) at 0", "Insert ClassInstanceCreation(410) into VariableDeclarationFragment(411) at 1", "Insert SimpleName: Preconditions(413) into MethodInvocation(418) at 0", "Insert SimpleName: checkState(414) into MethodInvocation(418) at 1", "Insert MethodInvocation(417) into MethodInvocation(418) at 2", "Insert SimpleName: Preconditions(420) into MethodInvocation(425) at 0", "Insert SimpleName: checkState(421) into MethodInvocation(425) at 1", "Insert MethodInvocation(424) into MethodInvocation(425) at 2", "Insert SimpleName: Preconditions(427) into MethodInvocation(432) at 0", "Insert SimpleName: checkState(428) into MethodInvocation(432) at 1", "Insert MethodInvocation(431) into MethodInvocation(432) at 2", "Insert PrefixExpression: !(120) into InfixExpression: &&(124) at 0", "Insert PrefixExpression: !(123) into InfixExpression: &&(124) at 1", "Insert ThrowStatement(138) into Block(139) at 0", "Move MethodInvocation(130) into PrefixExpression: !(143) at 0", "Insert ThrowStatement(157) into Block(158) at 0", "Insert SimpleType: SourceCodeLocation(400) into ClassInstanceCreation(410) at 0", "Insert SimpleName: UNKNOWN_SOURCE_CODE(401) into ClassInstanceCreation(410) at 1", "Insert PrefixExpression: -(403) into ClassInstanceCreation(410) at 2", "Insert NumberLiteral: 0(404) into ClassInstanceCreation(410) at 3", "Insert NumberLiteral: 0(405) into ClassInstanceCreation(410) at 4", "Insert PrefixExpression: -(407) into ClassInstanceCreation(410) at 5", "Insert NumberLiteral: 0(408) into ClassInstanceCreation(410) at 6", "Insert NumberLiteral: 0(409) into ClassInstanceCreation(410) at 7", "Insert SimpleName: result(415) into MethodInvocation(417) at 0", "Insert SimpleName: isUnknown(416) into MethodInvocation(417) at 1", "Insert QualifiedName: result.begin(422) into MethodInvocation(424) at 0", "Insert SimpleName: hasValidUnknownCoordinates(423) into MethodInvocation(424) at 1", "Insert QualifiedName: result.end(429) into MethodInvocation(431) at 0", "Insert SimpleName: hasValidUnknownCoordinates(430) into MethodInvocation(431) at 1", "Move MethodInvocation(120) into PrefixExpression: !(120) at 0", "Move MethodInvocation(122) into PrefixExpression: !(123) at 0", "Insert ClassInstanceCreation(137) into ThrowStatement(138) at 0", "Insert ClassInstanceCreation(156) into ThrowStatement(157) at 0", "Insert SimpleName: SourceCodeLocation(399) into SimpleType: SourceCodeLocation(400) at 0", "Insert NumberLiteral: 1(402) into PrefixExpression: -(403) at 0", "Insert NumberLiteral: 1(406) into PrefixExpression: -(407) at 0", "Insert SimpleType: IllegalArgumentException(126) into ClassInstanceCreation(137) at 0", "Insert MethodInvocation(136) into ClassInstanceCreation(137) at 1", "Insert SimpleType: IllegalArgumentException(145) into ClassInstanceCreation(156) at 0", "Insert MethodInvocation(155) into ClassInstanceCreation(156) at 1", "Insert SimpleName: IllegalArgumentException(125) into SimpleType: IllegalArgumentException(126) at 0", "Update SimpleName: Preconditions(117) to String", "Move SimpleName: Preconditions(117) into MethodInvocation(136) at 0", "Update SimpleName: checkArgument(118) to format", "Move SimpleName: checkArgument(118) into MethodInvocation(136) at 1", "Insert InfixExpression: +(132) into MethodInvocation(136) at 2", "Insert SimpleName: lineNumber(133) into MethodInvocation(136) at 3", "Insert SimpleName: indexInLine(134) into MethodInvocation(136) at 4", "Insert SimpleName: characterIndex(135) into MethodInvocation(136) at 5", "Insert SimpleName: IllegalArgumentException(144) into SimpleType: IllegalArgumentException(145) at 0", "Update SimpleName: Preconditions(127) to String", "Move SimpleName: Preconditions(127) into MethodInvocation(155) at 0", "Update SimpleName: checkArgument(128) to format", "Move SimpleName: checkArgument(128) into MethodInvocation(155) at 1", "Insert InfixExpression: +(151) into MethodInvocation(155) at 2", "Insert SimpleName: lineNumber(152) into MethodInvocation(155) at 3", "Insert SimpleName: indexInLine(153) into MethodInvocation(155) at 4", "Insert SimpleName: characterIndex(154) into MethodInvocation(155) at 5", "Insert StringLiteral: \"The location passed \"(129) into InfixExpression: +(132) at 0", "Insert StringLiteral: \"(lineNumber %d, indexInLine %d, characterIndex %d) \"(130) into InfixExpression: +(132) at 1", "Insert StringLiteral: \"is not valid.\"(131) into InfixExpression: +(132) at 2", "Insert StringLiteral: \"The location passed \"(148) into InfixExpression: +(151) at 0", "Insert StringLiteral: \"(lineNumber %d, indexInLine %d, characterIndex %d) \"(149) into InfixExpression: +(151) at 1", "Insert StringLiteral: \"is not plausible.\"(150) into InfixExpression: +(151) at 2", "Delete StringLiteral: \"The location passed is not valid.\"(124)", "Delete MethodInvocation(125)", "Delete ExpressionStatement(126)", "Delete StringLiteral: \"The location passed is not valid.\"(131)", "Delete MethodInvocation(132)", "Delete ExpressionStatement(133)"]}}, {"SourceCodeLocationBuilder_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS QualifiedName: SourceCodeLocation.SourceCodePoint to SimpleType: SourceCodeLocation.SourceCodePoint at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: begin to MethodInvocation at 2", "INS SimpleName: checkLocationIsNotAlreadyCreated to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ThisExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: setBeginLocation to MethodInvocation at 0", "INS SimpleName: begin to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: SourceCodeLocationBuilder to MethodDeclaration at 1", "INS SimpleName: getIndexInLine to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: getCharacterIndex to MethodInvocation at 1", "INS ReturnStatement to Block at 3", "INS SimpleName: begin to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: begin to MethodInvocation at 0", "INS SimpleType: SourceCodeLocation.SourceCodePoint to SingleVariableDeclaration at 0", "INS SimpleName: begin to MethodInvocation at 0", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS SimpleName: getLineNumber to MethodInvocation at 1", "INS SimpleName: setBeginLocation to MethodDeclaration at 2", "INS SimpleName: SourceCodeLocationBuilder to SimpleType: SourceCodeLocationBuilder at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: getIndexInLine to MethodInvocation at 1", "INS SimpleName: setEndLocation to MethodDeclaration at 2", "INS SimpleName: setEndLocation to MethodInvocation at 0", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS QualifiedName: SourceCodeLocation.SourceCodePoint to SimpleType: SourceCodeLocation.SourceCodePoint at 0", "INS SimpleName: end to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: end to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: SourceCodeLocationBuilder to SimpleType: SourceCodeLocationBuilder at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS ReturnStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: checkLocationIsNotAlreadyCreated to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: end to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: end to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: getCharacterIndex to MethodInvocation at 1", "INS SimpleType: SourceCodeLocationBuilder to MethodDeclaration at 1", "INS SimpleName: end to MethodInvocation at 2", "INS SimpleType: SourceCodeLocation.SourceCodePoint to SingleVariableDeclaration at 0", "INS SimpleName: getLineNumber to MethodInvocation at 1", "INS ThisExpression to ReturnStatement at 0"]}]}}, {"SourceCodeLocationBuilder_diff": {"operations": ["Insert MethodDeclaration(246) into TypeDeclaration: class(456) at 16", "Insert MethodDeclaration(352) into TypeDeclaration: class(456) at 19", "Insert Modifier: public(215) into MethodDeclaration(246) at 0", "Insert SimpleType: SourceCodeLocationBuilder(217) into MethodDeclaration(246) at 1", "Insert SimpleName: setBeginLocation(218) into MethodDeclaration(246) at 2", "Insert SingleVariableDeclaration(222) into MethodDeclaration(246) at 3", "Insert Block(245) into MethodDeclaration(246) at 4", "Insert Modifier: public(321) into MethodDeclaration(352) at 0", "Insert SimpleType: SourceCodeLocationBuilder(323) into MethodDeclaration(352) at 1", "Insert SimpleName: setEndLocation(324) into MethodDeclaration(352) at 2", "Insert SingleVariableDeclaration(328) into MethodDeclaration(352) at 3", "Insert Block(351) into MethodDeclaration(352) at 4", "Insert SimpleName: SourceCodeLocationBuilder(216) into SimpleType: SourceCodeLocationBuilder(217) at 0", "Insert SimpleType: SourceCodeLocation.SourceCodePoint(220) into SingleVariableDeclaration(222) at 0", "Insert SimpleName: begin(221) into SingleVariableDeclaration(222) at 1", "Insert ExpressionStatement(225) into Block(245) at 0", "Insert ExpressionStatement(230) into Block(245) at 1", "Insert ExpressionStatement(242) into Block(245) at 2", "Insert ReturnStatement(244) into Block(245) at 3", "Insert SimpleName: SourceCodeLocationBuilder(322) into SimpleType: SourceCodeLocationBuilder(323) at 0", "Insert SimpleType: SourceCodeLocation.SourceCodePoint(326) into SingleVariableDeclaration(328) at 0", "Insert SimpleName: end(327) into SingleVariableDeclaration(328) at 1", "Insert ExpressionStatement(331) into Block(351) at 0", "Insert ExpressionStatement(336) into Block(351) at 1", "Insert ExpressionStatement(348) into Block(351) at 2", "Insert ReturnStatement(350) into Block(351) at 3", "Insert QualifiedName: SourceCodeLocation.SourceCodePoint(219) into SimpleType: SourceCodeLocation.SourceCodePoint(220) at 0", "Insert MethodInvocation(224) into ExpressionStatement(225) at 0", "Insert MethodInvocation(229) into ExpressionStatement(230) at 0", "Insert MethodInvocation(241) into ExpressionStatement(242) at 0", "Insert ThisExpression(243) into ReturnStatement(244) at 0", "Insert QualifiedName: SourceCodeLocation.SourceCodePoint(325) into SimpleType: SourceCodeLocation.SourceCodePoint(326) at 0", "Insert MethodInvocation(330) into ExpressionStatement(331) at 0", "Insert MethodInvocation(335) into ExpressionStatement(336) at 0", "Insert MethodInvocation(347) into ExpressionStatement(348) at 0", "Insert ThisExpression(349) into ReturnStatement(350) at 0", "Insert SimpleName: checkLocationIsNotAlreadyCreated(223) into MethodInvocation(224) at 0", "Insert SimpleName: Preconditions(226) into MethodInvocation(229) at 0", "Insert SimpleName: checkNotNull(227) into MethodInvocation(229) at 1", "Insert SimpleName: begin(228) into MethodInvocation(229) at 2", "Insert SimpleName: setBeginLocation(231) into MethodInvocation(241) at 0", "Insert MethodInvocation(234) into MethodInvocation(241) at 1", "Insert MethodInvocation(237) into MethodInvocation(241) at 2", "Insert MethodInvocation(240) into MethodInvocation(241) at 3", "Insert SimpleName: checkLocationIsNotAlreadyCreated(329) into MethodInvocation(330) at 0", "Insert SimpleName: Preconditions(332) into MethodInvocation(335) at 0", "Insert SimpleName: checkNotNull(333) into MethodInvocation(335) at 1", "Insert SimpleName: end(334) into MethodInvocation(335) at 2", "Insert SimpleName: setEndLocation(337) into MethodInvocation(347) at 0", "Insert MethodInvocation(340) into MethodInvocation(347) at 1", "Insert MethodInvocation(343) into MethodInvocation(347) at 2", "Insert MethodInvocation(346) into MethodInvocation(347) at 3", "Insert SimpleName: begin(232) into MethodInvocation(234) at 0", "Insert SimpleName: getCharacterIndex(233) into MethodInvocation(234) at 1", "Insert SimpleName: begin(235) into MethodInvocation(237) at 0", "Insert SimpleName: getLineNumber(236) into MethodInvocation(237) at 1", "Insert SimpleName: begin(238) into MethodInvocation(240) at 0", "Insert SimpleName: getIndexInLine(239) into MethodInvocation(240) at 1", "Insert SimpleName: end(338) into MethodInvocation(340) at 0", "Insert SimpleName: getCharacterIndex(339) into MethodInvocation(340) at 1", "Insert SimpleName: end(341) into MethodInvocation(343) at 0", "Insert SimpleName: getLineNumber(342) into MethodInvocation(343) at 1", "Insert SimpleName: end(344) into MethodInvocation(346) at 0", "Insert SimpleName: getIndexInLine(345) into MethodInvocation(346) at 1"]}}, {"GssError_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.common.base.Strings to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.text.MessageFormat to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: apply to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: format to Assignment: = at 0", "INS IfStatement to Block at 0", "INS SimpleName: messageFormat to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 13", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: pattern to Assignment: = at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 13", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS Modifier: final to FieldDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: static to TypeDeclaration: class at 2", "INS SimpleType: Object to ArrayType: Object[] at 0", "INS FieldAccess to Assignment: = at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TextElement:  java.text.MessageFormat to TagElement: @see at 0", "INS Modifier: public to FieldDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: MessageFormatArgs to MethodDeclaration at 1", "INS Dimension to ArrayType: Object[] at 1", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: arguments to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS TagElement: @see to TagElement at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: pattern to SingleVariableDeclaration at 1", "INS Modifier: public to TypeDeclaration: class at 1", "INS SimpleName: MessageFormatArgs to TypeDeclaration: class at 3", "INS ArrayType: Object[] to FieldDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: A String template, together with values for the template holes. to TagElement at 0", "INS SimpleName: apply to MethodDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: pattern to FieldAccess at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: arguments to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS TagElement: @link to TagElement at 2", "INS StringLiteral: \"{0} in {1} at line {2} column {3}:\\n{4}\\n{5}^\\n\" to ClassInstanceCreation at 1", "INS SimpleName: MessageFormatArgs to SimpleType: MessageFormatArgs at 0", "INS Javadoc to MethodDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: MessageFormatArgs to ClassInstanceCreation at 0", "INS StringLiteral: \" \" to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS TagElement to Javadoc at 0", "INS Block to IfStatement at 2", "INS TextElement: intended for use in FormattingLoggers and other contexts where it to TagElement at 4", "INS Block to IfStatement at 1", "INS SimpleName: message to ClassInstanceCreation at 2", "INS SimpleName: MessageFormatArgs to SimpleType: MessageFormatArgs at 0", "INS TextElement: , to TagElement at 3", "INS SimpleName: messageFormat to MethodDeclaration at 3", "INS SimpleType: MessageFormatArgs to MethodDeclaration at 2", "INS TextElement: Returns a MessageFormatArgs representation of the object. This is to TagElement at 0", "INS SimpleName: format to MemberRef at 0", "INS StringLiteral: \"{0} at unknown location\" to ClassInstanceCreation at 1", "INS MemberRef to TagElement: @link at 0", "INS MethodInvocation to ClassInstanceCreation at 7", "INS SimpleName: MessageFormatArgs to SimpleType: MessageFormatArgs at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: MessageFormatArgs to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 4", "INS TextElement: a parbaked precursor to the value given by  to TagElement at 1", "INS TextElement: is useful to maintain separation between boilerplate and details. to TagElement at 5", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: message to ClassInstanceCreation at 2", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: format to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 0", "MOV SimpleType: String to MethodDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from StringBuilder to String", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to String", "UPD SimpleName: StringBuilder from StringBuilder to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: StringBuilder to SimpleType: String at 0"]}, {"root": "UPDATE from sb to pattern", "operations": ["UPD SimpleName: sb from sb to pattern", "UPD SimpleName: append from append to pattern"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: sb to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: StringBuilder to SimpleType: String at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: arguments to Assignment: = at 1", "INS SimpleName: arguments to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from sb to location", "operations": ["UPD SimpleName: sb from sb to location"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from append to isUnknown", "operations": ["UPD SimpleName: append from append to isUnknown"]}, {"root": "UPDATE from sb to MessageFormat", "operations": ["UPD SimpleName: sb from sb to MessageFormat"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from append to format", "operations": ["UPD SimpleName: append from append to format"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 6", "MOV SimpleName: append to MethodInvocation at 2"]}, {"root": "UPDATE from append to arguments", "operations": ["UPD SimpleName: append from append to arguments"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 3"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 5"]}, {"root": "UPDATE from sb to Strings", "operations": ["UPD SimpleName: sb from sb to Strings"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: toString to MethodInvocation at 1"]}, {"root": "UPDATE from toString to repeat", "operations": ["UPD SimpleName: toString from toString to repeat"]}, {"root": "UPDATE from < to -", "operations": ["UPD InfixExpression: < from < to -"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: < to MethodInvocation at 3"]}, {"root": "INS NumberLiteral: 1 to InfixExpression: < at 2", "operations": ["INS NumberLiteral: 1 to InfixExpression: < at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: sb", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: append", "DEL StringLiteral: \" at line \"", "DEL SimpleName: append"]}, {"root": "DEL SimpleName: i", "operations": ["DEL SimpleName: i"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL ForStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: append", "DEL VariableDeclarationExpression", "DEL SimpleName: sb", "DEL SimpleName: append", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: format", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL CharacterLiteral: '\\n'", "DEL SimpleName: append", "DEL StringLiteral: \" column \"", "DEL Block", "DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: append", "DEL CharacterLiteral: '^'", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: sb", "DEL VariableDeclarationFragment", "DEL CharacterLiteral: '\\n'", "DEL CharacterLiteral: ' '", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: append", "DEL SimpleName: append", "DEL StringLiteral: \":\\n\"", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: message", "DEL SimpleName: append", "DEL SimpleName: sb", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \" in \"", "DEL IfStatement"]}]}}, {"GssError_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(472) at 2", "Insert ImportDeclaration(9) into CompilationUnit(472) at 4", "Insert QualifiedName: com.google.common.base.Strings(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.text.MessageFormat(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(182) into TypeDeclaration: class(471) at 12", "Insert TypeDeclaration: class(243) into TypeDeclaration: class(471) at 13", "Insert MethodDeclaration(299) into TypeDeclaration: class(471) at 14", "Move Modifier: public(159) into MethodDeclaration(182) at 0", "Move SimpleType: String(161) into MethodDeclaration(182) at 1", "Move SimpleName: format(162) into MethodDeclaration(182) at 2", "Insert Block(181) into MethodDeclaration(182) at 3", "Insert Javadoc(187) into TypeDeclaration: class(243) at 0", "Insert Modifier: public(188) into TypeDeclaration: class(243) at 1", "Insert Modifier: static(189) into TypeDeclaration: class(243) at 2", "Insert SimpleName: MessageFormatArgs(190) into TypeDeclaration: class(243) at 3", "Insert FieldDeclaration(197) into TypeDeclaration: class(243) at 4", "Insert FieldDeclaration(206) into TypeDeclaration: class(243) at 5", "Insert MethodDeclaration(230) into TypeDeclaration: class(243) at 6", "Insert MethodDeclaration(242) into TypeDeclaration: class(243) at 7", "Insert Javadoc(253) into MethodDeclaration(299) at 0", "Insert Modifier: public(254) into MethodDeclaration(299) at 1", "Insert SimpleType: MessageFormatArgs(256) into MethodDeclaration(299) at 2", "Insert SimpleName: messageFormat(257) into MethodDeclaration(299) at 3", "Insert Block(298) into MethodDeclaration(299) at 4", "Insert IfStatement(178) into Block(181) at 0", "Move ReturnStatement(257) into Block(181) at 1", "Insert TagElement(186) into Javadoc(187) at 0", "Insert Modifier: public(191) into FieldDeclaration(197) at 0", "Insert Modifier: final(192) into FieldDeclaration(197) at 1", "Insert SimpleType: String(194) into FieldDeclaration(197) at 2", "Insert VariableDeclarationFragment(196) into FieldDeclaration(197) at 3", "Insert Modifier: public(198) into FieldDeclaration(206) at 0", "Insert Modifier: final(199) into FieldDeclaration(206) at 1", "Insert ArrayType: Object[](203) into FieldDeclaration(206) at 2", "Insert VariableDeclarationFragment(205) into FieldDeclaration(206) at 3", "Insert Modifier: public(207) into MethodDeclaration(230) at 0", "Insert SimpleName: MessageFormatArgs(208) into MethodDeclaration(230) at 1", "Insert SingleVariableDeclaration(212) into MethodDeclaration(230) at 2", "Insert SingleVariableDeclaration(216) into MethodDeclaration(230) at 3", "Insert Block(229) into MethodDeclaration(230) at 4", "Insert Modifier: public(231) into MethodDeclaration(242) at 0", "Insert SimpleType: String(233) into MethodDeclaration(242) at 1", "Insert SimpleName: apply(234) into MethodDeclaration(242) at 2", "Insert Block(241) into MethodDeclaration(242) at 3", "Insert TagElement(252) into Javadoc(253) at 0", "Insert SimpleName: MessageFormatArgs(255) into SimpleType: MessageFormatArgs(256) at 0", "Insert IfStatement(297) into Block(298) at 0", "Move InfixExpression: ==(165) into IfStatement(178) at 0", "Insert Block(177) into IfStatement(178) at 1", "Insert TextElement: A String template, together with values for the template holes.(183) into TagElement(186) at 0", "Insert TagElement: @see(185) into TagElement(186) at 1", "Update SimpleName: StringBuilder(166) to String", "Move SimpleName: StringBuilder(166) into SimpleType: String(194) at 0", "Update SimpleName: sb(168) to pattern", "Move SimpleName: sb(168) into VariableDeclarationFragment(196) at 0", "Insert SimpleType: Object(201) into ArrayType: Object[](203) at 0", "Insert Dimension(202) into ArrayType: Object[](203) at 1", "Insert SimpleName: arguments(204) into VariableDeclarationFragment(205) at 0", "Insert SimpleType: String(210) into SingleVariableDeclaration(212) at 0", "Insert SimpleName: pattern(211) into SingleVariableDeclaration(212) at 1", "Insert SimpleType: Object(214) into SingleVariableDeclaration(216) at 0", "Insert SimpleName: arguments(215) into SingleVariableDeclaration(216) at 1", "Insert ExpressionStatement(222) into Block(229) at 0", "Move ExpressionStatement(198) into Block(229) at 1", "Insert SimpleName: String(232) into SimpleType: String(233) at 0", "Insert ReturnStatement(240) into Block(241) at 0", "Insert TextElement: Returns a MessageFormatArgs representation of the object. This is(244) into TagElement(252) at 0", "Insert TextElement: a parbaked precursor to the value given by (245) into TagElement(252) at 1", "Insert TagElement: @link(248) into TagElement(252) at 2", "Insert TextElement: ,(249) into TagElement(252) at 3", "Insert TextElement: intended for use in FormattingLoggers and other contexts where it(250) into TagElement(252) at 4", "Insert TextElement: is useful to maintain separation between boilerplate and details.(251) into TagElement(252) at 5", "Insert MethodInvocation(260) into IfStatement(297) at 0", "Insert Block(267) into IfStatement(297) at 1", "Insert Block(296) into IfStatement(297) at 2", "Insert ExpressionStatement(176) into Block(177) at 0", "Insert TextElement:  java.text.MessageFormat(184) into TagElement: @see(185) at 0", "Insert SimpleName: Object(200) into SimpleType: Object(201) at 0", "Update SimpleName: StringBuilder(169) to String", "Move SimpleName: StringBuilder(169) into SimpleType: String(210) at 0", "Insert SimpleName: Object(213) into SimpleType: Object(214) at 0", "Insert Assignment: =(221) into ExpressionStatement(222) at 0", "Insert Assignment: =(227) into ExpressionStatement(228) at 0", "Insert MethodInvocation(239) into ReturnStatement(240) at 0", "Insert MemberRef(247) into TagElement: @link(248) at 0", "Update SimpleName: sb(233) to location", "Move SimpleName: sb(233) into MethodInvocation(260) at 0", "Update SimpleName: append(234) to isUnknown", "Move SimpleName: append(234) into MethodInvocation(260) at 1", "Insert ReturnStatement(266) into Block(267) at 0", "Insert ReturnStatement(295) into Block(296) at 0", "Insert Assignment: =(175) into ExpressionStatement(176) at 0", "Insert FieldAccess(219) into Assignment: =(221) at 0", "Insert SimpleName: pattern(220) into Assignment: =(221) at 1", "Insert FieldAccess(225) into Assignment: =(227) at 0", "Insert SimpleName: arguments(226) into Assignment: =(227) at 1", "Update SimpleName: sb(209) to MessageFormat", "Move SimpleName: sb(209) into MethodInvocation(239) at 0", "Update SimpleName: append(210) to format", "Move SimpleName: append(210) into MethodInvocation(239) at 1", "Update SimpleName: append(213) to pattern", "Move SimpleName: append(213) into MethodInvocation(239) at 2", "Update SimpleName: append(217) to arguments", "Move SimpleName: append(217) into MethodInvocation(239) at 3", "Insert SimpleName: format(246) into MemberRef(247) at 0", "Insert ClassInstanceCreation(265) into ReturnStatement(266) at 0", "Insert ClassInstanceCreation(294) into ReturnStatement(295) at 0", "Insert SimpleName: format(170) into Assignment: =(175) at 0", "Insert MethodInvocation(174) into Assignment: =(175) at 1", "Insert ThisExpression(217) into FieldAccess(219) at 0", "Insert SimpleName: pattern(218) into FieldAccess(219) at 1", "Insert ThisExpression(223) into FieldAccess(225) at 0", "Insert SimpleName: arguments(224) into FieldAccess(225) at 1", "Insert SimpleType: MessageFormatArgs(262) into ClassInstanceCreation(265) at 0", "Insert StringLiteral: \"{0} at unknown location\"(263) into ClassInstanceCreation(265) at 1", "Insert SimpleName: message(264) into ClassInstanceCreation(265) at 2", "Insert SimpleType: MessageFormatArgs(269) into ClassInstanceCreation(294) at 0", "Insert StringLiteral: \"{0} in {1} at line {2} column {3}:\\n{4}\\n{5}^\\n\"(270) into ClassInstanceCreation(294) at 1", "Insert SimpleName: message(271) into ClassInstanceCreation(294) at 2", "Move MethodInvocation(186) into ClassInstanceCreation(294) at 3", "Move MethodInvocation(196) into ClassInstanceCreation(294) at 4", "Move MethodInvocation(206) into ClassInstanceCreation(294) at 5", "Move MethodInvocation(215) into ClassInstanceCreation(294) at 6", "Insert MethodInvocation(293) into ClassInstanceCreation(294) at 7", "Insert MethodInvocation(172) into MethodInvocation(174) at 0", "Insert SimpleName: apply(173) into MethodInvocation(174) at 1", "Insert SimpleName: MessageFormatArgs(261) into SimpleType: MessageFormatArgs(262) at 0", "Insert SimpleName: MessageFormatArgs(268) into SimpleType: MessageFormatArgs(269) at 0", "Update SimpleName: sb(249) to Strings", "Move SimpleName: sb(249) into MethodInvocation(293) at 0", "Update SimpleName: toString(250) to repeat", "Move SimpleName: toString(250) into MethodInvocation(293) at 1", "Insert StringLiteral: \" \"(287) into MethodInvocation(293) at 2", "Update InfixExpression: <(230) to -", "Move InfixExpression: <(230) into MethodInvocation(293) at 3", "Insert SimpleName: messageFormat(171) into MethodInvocation(172) at 0", "Insert NumberLiteral: 1(291) into InfixExpression: -(292) at 1", "Delete SimpleName: sb(189)", "Delete SimpleName: append(190)", "Delete StringLiteral: \" at line \"(191)", "Delete MethodInvocation(192)", "Delete SimpleName: append(193)", "Delete MethodInvocation(197)", "Delete SimpleName: i(226)", "Delete SimpleType: StringBuilder(167)", "Delete SimpleType: StringBuilder(170)", "Delete ClassInstanceCreation(171)", "Delete VariableDeclarationFragment(172)", "Delete VariableDeclarationStatement(173)", "Delete SimpleName: sb(174)", "Delete SimpleName: append(175)", "Delete SimpleName: message(176)", "Delete MethodInvocation(177)", "Delete SimpleName: append(178)", "Delete StringLiteral: \" in \"(179)", "Delete MethodInvocation(180)", "Delete SimpleName: append(181)", "Delete MethodInvocation(187)", "Delete ExpressionStatement(188)", "Delete SimpleName: sb(199)", "Delete SimpleName: append(200)", "Delete StringLiteral: \" column \"(201)", "Delete MethodInvocation(202)", "Delete SimpleName: append(203)", "Delete MethodInvocation(207)", "Delete ExpressionStatement(208)", "Delete StringLiteral: \":\\n\"(211)", "Delete MethodInvocation(212)", "Delete MethodInvocation(216)", "Delete CharacterLiteral: '\\n'(218)", "Delete MethodInvocation(219)", "Delete ExpressionStatement(220)", "Delete PrimitiveType: int(221)", "Delete SimpleName: i(222)", "Delete NumberLiteral: 1(223)", "Delete VariableDeclarationFragment(224)", "Delete VariableDeclarationExpression(225)", "Delete SimpleName: i(231)", "Delete PostfixExpression: ++(232)", "Delete CharacterLiteral: ' '(235)", "Delete MethodInvocation(236)", "Delete ExpressionStatement(237)", "Delete Block(238)", "Delete ForStatement(239)", "Delete SimpleName: sb(240)", "Delete SimpleName: append(241)", "Delete CharacterLiteral: '^'(242)", "Delete MethodInvocation(243)", "Delete SimpleName: append(244)", "Delete CharacterLiteral: '\\n'(245)", "Delete MethodInvocation(246)", "Delete ExpressionStatement(247)", "Delete SimpleName: format(248)", "Delete MethodInvocation(251)", "Delete Assignment: =(252)", "Delete ExpressionStatement(253)", "Delete Block(254)", "Delete IfStatement(255)", "Delete Block(258)", "Delete MethodDeclaration(259)"]}}, {"GssParserException_cluster": {"actions": [{"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}]}}, {"GssParserException_diff": {"operations": ["Insert Modifier: public(58) into MethodDeclaration(65) at 0"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}