{"application": "google-guava", "csha": "4ffdee5fc692bf7b5ab8c95269e3aeec1c806eec", "files": [{"UnsignedBytes_cluster": {"actions": [{"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS InfixExpression: % to ParenthesizedExpression at 0", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS StringLiteral: \"sun.arch.data.model\" to MethodInvocation at 2", "INS StringLiteral: \"64\" to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: System to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS InfixExpression: && to InfixExpression: && at 0", "INS SimpleName: BYTE_ARRAY_BASE_OFFSET to InfixExpression: % at 0", "INS NumberLiteral: 8 to InfixExpression: % at 1", "INS IfStatement to Block at 0", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ParenthesizedExpression to InfixExpression: == at 0", "INS SimpleName: getProperty to MethodInvocation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS MethodInvocation to InfixExpression: && at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS SimpleName: stride to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS NumberLiteral: 8 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: != to InfixExpression: && at 1"]}, {"root": "INS Assignment: = to ForStatement at 0", "operations": ["INS SimpleName: i to Assignment: = at 0", "INS NumberLiteral: 0 to Assignment: = at 1", "INS Assignment: = to ForStatement at 0"]}, {"root": "UPDATE from minWords to strideLimit", "operations": ["UPD SimpleName: minWords from minWords to strideLimit", "UPD SimpleName: minWords from minWords to strideLimit"]}, {"root": "UPDATE from / to &", "operations": ["UPD InfixExpression: / from / to &"]}, {"root": "MOVE from InfixExpression: <", "operations": ["MOV SimpleName: minWords to InfixExpression: < at 1"]}, {"root": "INS SimpleName: stride to Assignment: += at 1", "operations": ["INS SimpleName: stride to Assignment: += at 1"]}, {"root": "INS PrefixExpression: ~ to InfixExpression: / at 1", "operations": ["INS ParenthesizedExpression to PrefixExpression: ~ at 0", "INS SimpleName: stride to InfixExpression: - at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS PrefixExpression: ~ to InfixExpression: / at 1", "INS NumberLiteral: 1 to InfixExpression: - at 1"]}, {"root": "UPDATE from != to ==", "operations": ["UPD InfixExpression: != from != to =="]}, {"root": "UPDATE from AssertionError to Error", "operations": ["UPD SimpleType: AssertionError from AssertionError to Error", "UPD SimpleName: AssertionError from AssertionError to Error"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: theUnsafe", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: BYTE_ARRAY_BASE_OFFSET", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}, {"root": "DEL QualifiedName: Longs.BYTES", "operations": ["DEL QualifiedName: Longs.BYTES"]}, {"root": "DEL VariableDeclarationExpression", "operations": ["DEL VariableDeclarationExpression", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL PrimitiveType: int"]}, {"root": "DEL InfixExpression: *", "operations": ["DEL InfixExpression: *", "DEL QualifiedName: Longs.BYTES"]}, {"root": "DEL QualifiedName: Longs.BYTES", "operations": ["DEL QualifiedName: Longs.BYTES"]}, {"root": "DEL VariableDeclarationExpression", "operations": ["DEL InfixExpression: *", "DEL SimpleName: minWords", "DEL PrimitiveType: int", "DEL QualifiedName: Longs.BYTES", "DEL VariableDeclarationFragment", "DEL VariableDeclarationExpression", "DEL SimpleName: i"]}]}}, {"UnsignedBytes_diff": {"operations": ["Move MethodInvocation(976) into VariableDeclarationFragment(964) at 1", "Move MethodInvocation(986) into VariableDeclarationFragment(980) at 1", "Insert IfStatement(1014) into Block(1015) at 0", "Insert VariableDeclarationStatement(1149) into Block(1291) at 0", "Insert VariableDeclarationStatement(1173) into Block(1291) at 3", "Insert PrefixExpression: !(1008) into IfStatement(1014) at 0", "Move Block(1002) into IfStatement(1014) at 1", "Insert Modifier: final(1144) into VariableDeclarationStatement(1149) at 0", "Insert PrimitiveType: int(1145) into VariableDeclarationStatement(1149) at 1", "Insert VariableDeclarationFragment(1148) into VariableDeclarationStatement(1149) at 2", "Insert PrimitiveType: int(1170) into VariableDeclarationStatement(1173) at 0", "Insert VariableDeclarationFragment(1172) into VariableDeclarationStatement(1173) at 1", "Insert Assignment: =(1176) into ForStatement(1259) at 0", "Insert ParenthesizedExpression(1007) into PrefixExpression: !(1008) at 0", "Insert SimpleName: stride(1146) into VariableDeclarationFragment(1148) at 0", "Insert NumberLiteral: 8(1147) into VariableDeclarationFragment(1148) at 1", "Update SimpleName: minWords(1143) to strideLimit", "Update InfixExpression: /(1146) to &", "Insert SimpleName: i(1171) into VariableDeclarationFragment(1172) at 0", "Insert SimpleName: i(1174) into Assignment: =(1176) at 0", "Insert NumberLiteral: 0(1175) into Assignment: =(1176) at 1", "Update SimpleName: minWords(1155) to strideLimit", "Move SimpleName: minWords(1155) into InfixExpression: <(1179) at 1", "Insert SimpleName: stride(1181) into Assignment: +=(1182) at 1", "Insert InfixExpression: &&(1006) into ParenthesizedExpression(1007) at 0", "Insert PrefixExpression: ~(1166) into InfixExpression: &(1167) at 1", "Insert InfixExpression: &&(996) into InfixExpression: &&(1006) at 0", "Update InfixExpression: !=(997) to ==", "Move InfixExpression: !=(997) into InfixExpression: &&(1006) at 1", "Update SimpleType: AssertionError(999) to Error", "Insert ParenthesizedExpression(1165) into PrefixExpression: ~(1166) at 0", "Insert MethodInvocation(989) into InfixExpression: &&(996) at 0", "Insert InfixExpression: ==(995) into InfixExpression: &&(996) at 1", "Update SimpleName: AssertionError(998) to Error", "Insert InfixExpression: -(1164) into ParenthesizedExpression(1165) at 0", "Insert StringLiteral: \"64\"(983) into MethodInvocation(989) at 0", "Insert SimpleName: equals(984) into MethodInvocation(989) at 1", "Insert MethodInvocation(988) into MethodInvocation(989) at 2", "Insert ParenthesizedExpression(993) into InfixExpression: ==(995) at 0", "Insert NumberLiteral: 0(994) into InfixExpression: ==(995) at 1", "Insert SimpleName: stride(1162) into InfixExpression: -(1164) at 0", "Insert NumberLiteral: 1(1163) into InfixExpression: -(1164) at 1", "Insert SimpleName: System(985) into MethodInvocation(988) at 0", "Insert SimpleName: getProperty(986) into MethodInvocation(988) at 1", "Insert StringLiteral: \"sun.arch.data.model\"(987) into MethodInvocation(988) at 2", "Insert InfixExpression: %(992) into ParenthesizedExpression(993) at 0", "Insert SimpleName: BYTE_ARRAY_BASE_OFFSET(990) into InfixExpression: %(992) at 0", "Insert NumberLiteral: 8(991) into InfixExpression: %(992) at 1", "Delete SimpleName: theUnsafe(974)", "Delete Assignment: =(977)", "Delete ExpressionStatement(978)", "Delete SimpleName: BYTE_ARRAY_BASE_OFFSET(979)", "Delete Assignment: =(987)", "Delete ExpressionStatement(988)", "Delete IfStatement(1003)", "Delete QualifiedName: Longs.BYTES(1145)", "Delete PrimitiveType: int(1149)", "Delete SimpleName: i(1150)", "Delete NumberLiteral: 0(1151)", "Delete VariableDeclarationFragment(1152)", "Delete VariableDeclarationExpression(1153)", "Delete QualifiedName: Longs.BYTES(1156)", "Delete InfixExpression: *(1157)", "Delete QualifiedName: Longs.BYTES(1160)", "Delete PrimitiveType: int(1239)", "Delete SimpleName: i(1240)", "Delete SimpleName: minWords(1241)", "Delete QualifiedName: Longs.BYTES(1242)", "Delete InfixExpression: *(1243)", "Delete VariableDeclarationFragment(1244)", "Delete VariableDeclarationExpression(1245)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}