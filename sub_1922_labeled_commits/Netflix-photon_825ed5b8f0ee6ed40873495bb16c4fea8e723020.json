{"application": "Netflix-photon", "csha": "825ed5b8f0ee6ed40873495bb16c4fea8e723020", "files": [{"IMFConstraints_cluster": {"actions": [{"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV IfStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from \"Lower four bits of Operational Pattern qualifier byte = 0x%x\" to \"Lower four bits of Operational Pattern qualifier byte = 0x%x, should be = 0x%x per the definition of OperationalPattern-1A\"", "operations": ["UPD StringLiteral: \"Lower four bits of Operational Pattern qualifier byte = 0x%x\" from \"Lower four bits of Operational Pattern qualifier byte = 0x%x\" to \"Lower four bits of Operational Pattern qualifier byte = 0x%x, should be = 0x%x per the definition of OperationalPattern-1A\""]}, {"root": "UPDATE from \"primary package identifier for Preface is not set to the top-level file package\" to \"Primary package identifier for Preface is not set to the top-level file package\"", "operations": ["UPD StringLiteral: \"primary package identifier for Preface is not set to the top-level file package\" from \"primary package identifier for Preface is not set to the top-level file package\" to \"Primary package identifier for Preface is not set to the top-level file package\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0", "MOV Block to IfStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS QualifiedName: IMFConstraints.IMF_ESSENCE_EXCEPTION_PREFIX to InfixExpression: + at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ParenthesizedExpression to ClassInstanceCreation at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: getAudioEssenceSpokenLanguage to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS SimpleName: MXFException to SimpleType: MXFException at 0", "INS SimpleType: MXFException to ClassInstanceCreation at 0", "INS StringLiteral: \"WaveAudioEssenceDescriptor does not have a RFC5646 spoken language indicated\" to InfixExpression: + at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: headerPartition to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: || at 1", "INS SimpleName: waveAudioEssenceDescriptor to MethodInvocation at 0", "INS SimpleName: waveAudioEssenceDescriptor to MethodInvocation at 0", "INS SimpleName: getChannelAssignmentUL to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleType: MXFUID to ClassInstanceCreation at 0", "INS ParenthesizedExpression to InfixExpression: || at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: getChannelAssignmentUL to MethodInvocation at 1", "INS QualifiedName: IMFConstraints.IMF_CHANNEL_ASSIGNMENT_UL to ClassInstanceCreation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS PrefixExpression: ! to ParenthesizedExpression at 0"]}, {"root": "INS ThrowStatement to Block at 0", "operations": ["INS SimpleName: getChannelAssignmentUL to MethodInvocation at 1", "INS SimpleName: MXFException to SimpleType: MXFException at 0", "INS SimpleName: waveAudioEssenceDescriptor to MethodInvocation at 0", "INS SimpleName: format to MethodInvocation at 1", "INS StringLiteral: \"ChannelAssignment UL for WaveAudioEssenceDescriptor = %s is different from %s\" to MethodInvocation at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS SimpleType: MXFException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 4", "INS QualifiedName: IMFConstraints.IMF_ESSENCE_EXCEPTION_PREFIX to InfixExpression: + at 0", "INS SimpleName: String to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: MXFUID to ClassInstanceCreation at 0", "INS QualifiedName: IMFConstraints.IMF_CHANNEL_ASSIGNMENT_UL to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"IMFConstraints_diff": {"operations": ["Insert Block(382) into EnhancedForStatement(383) at 2", "Move VariableDeclarationStatement(284) into Block(382) at 0", "Move VariableDeclarationStatement(292) into Block(382) at 1", "Insert IfStatement(381) into Block(382) at 2", "Move MethodInvocation(296) into IfStatement(381) at 0", "Insert Block(380) into IfStatement(381) at 1", "Move VariableDeclarationStatement(304) into Block(380) at 0", "Move IfStatement(329) into Block(380) at 1", "Update StringLiteral: \"Lower four bits of Operational Pattern qualifier byte = 0x%x\"(133) to \"Lower four bits of Operational Pattern qualifier byte = 0x%x, should be = 0x%x per the definition of OperationalPattern-1A\"", "Update StringLiteral: \"primary package identifier for Preface is not set to the top-level file package\"(172) to \"Primary package identifier for Preface is not set to the top-level file package\"", "Move InstanceofExpression(308) into IfStatement(379) at 0", "Move Block(326) into IfStatement(379) at 2", "Move VariableDeclarationStatement(317) into Block(370) at 0", "Insert IfStatement(369) into Block(370) at 2", "Insert InfixExpression: ||(335) into IfStatement(354) at 0", "Insert InfixExpression: ==(359) into IfStatement(369) at 0", "Insert Block(368) into IfStatement(369) at 1", "Insert ParenthesizedExpression(323) into InfixExpression: ||(335) at 0", "Insert ParenthesizedExpression(334) into InfixExpression: ||(335) at 1", "Insert ThrowStatement(352) into Block(353) at 0", "Insert MethodInvocation(357) into InfixExpression: ==(359) at 0", "Insert NullLiteral(358) into InfixExpression: ==(359) at 1", "Insert ThrowStatement(367) into Block(368) at 0", "Insert InfixExpression: ==(322) into ParenthesizedExpression(323) at 0", "Insert PrefixExpression: !(333) into ParenthesizedExpression(334) at 0", "Insert ClassInstanceCreation(351) into ThrowStatement(352) at 0", "Insert SimpleName: headerPartition(355) into MethodInvocation(357) at 0", "Insert SimpleName: getAudioEssenceSpokenLanguage(356) into MethodInvocation(357) at 1", "Insert ClassInstanceCreation(366) into ThrowStatement(367) at 0", "Insert MethodInvocation(320) into InfixExpression: ==(322) at 0", "Insert NullLiteral(321) into InfixExpression: ==(322) at 1", "Insert MethodInvocation(332) into PrefixExpression: !(333) at 0", "Insert SimpleType: MXFException(337) into ClassInstanceCreation(351) at 0", "Insert InfixExpression: +(350) into ClassInstanceCreation(351) at 1", "Insert SimpleType: MXFException(361) into ClassInstanceCreation(366) at 0", "Insert ParenthesizedExpression(365) into ClassInstanceCreation(366) at 1", "Insert SimpleName: waveAudioEssenceDescriptor(318) into MethodInvocation(320) at 0", "Insert SimpleName: getChannelAssignmentUL(319) into MethodInvocation(320) at 1", "Insert MethodInvocation(326) into MethodInvocation(332) at 0", "Insert SimpleName: equals(327) into MethodInvocation(332) at 1", "Insert ClassInstanceCreation(331) into MethodInvocation(332) at 2", "Insert SimpleName: MXFException(336) into SimpleType: MXFException(337) at 0", "Insert QualifiedName: IMFConstraints.IMF_ESSENCE_EXCEPTION_PREFIX(338) into InfixExpression: +(350) at 0", "Insert MethodInvocation(349) into InfixExpression: +(350) at 1", "Insert SimpleName: MXFException(360) into SimpleType: MXFException(361) at 0", "Insert InfixExpression: +(364) into ParenthesizedExpression(365) at 0", "Insert SimpleName: waveAudioEssenceDescriptor(324) into MethodInvocation(326) at 0", "Insert SimpleName: getChannelAssignmentUL(325) into MethodInvocation(326) at 1", "Insert SimpleType: MXFUID(329) into ClassInstanceCreation(331) at 0", "Insert QualifiedName: IMFConstraints.IMF_CHANNEL_ASSIGNMENT_UL(330) into ClassInstanceCreation(331) at 1", "Insert SimpleName: String(339) into MethodInvocation(349) at 0", "Insert SimpleName: format(340) into MethodInvocation(349) at 1", "Insert StringLiteral: \"ChannelAssignment UL for WaveAudioEssenceDescriptor = %s is different from %s\"(341) into MethodInvocation(349) at 2", "Insert MethodInvocation(344) into MethodInvocation(349) at 3", "Insert ClassInstanceCreation(348) into MethodInvocation(349) at 4", "Insert QualifiedName: IMFConstraints.IMF_ESSENCE_EXCEPTION_PREFIX(362) into InfixExpression: +(364) at 0", "Insert StringLiteral: \"WaveAudioEssenceDescriptor does not have a RFC5646 spoken language indicated\"(363) into InfixExpression: +(364) at 1", "Insert SimpleName: MXFUID(328) into SimpleType: MXFUID(329) at 0", "Insert SimpleName: waveAudioEssenceDescriptor(342) into MethodInvocation(344) at 0", "Insert SimpleName: getChannelAssignmentUL(343) into MethodInvocation(344) at 1", "Insert SimpleType: MXFUID(346) into ClassInstanceCreation(348) at 0", "Insert QualifiedName: IMFConstraints.IMF_CHANNEL_ASSIGNMENT_UL(347) into ClassInstanceCreation(348) at 1", "Insert SimpleName: MXFUID(345) into SimpleType: MXFUID(346) at 0", "Delete Block(330)"]}}, {"MXFOperationalPattern1A_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: IMFErrorLogger to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: IMFErrorLoggerImpl to SimpleType: IMFErrorLoggerImpl at 0", "INS SimpleName: imfErrorLogger to VariableDeclarationFragment at 0", "INS SimpleType: IMFErrorLoggerImpl to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: IMFErrorLogger to SimpleType: IMFErrorLogger at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: contentStorage to InfixExpression: == at 0", "INS InfixExpression: + to MethodInvocation at 4", "INS QualifiedName: MXFOperationalPattern1A.OP1A_EXCEPTION_PREFIX to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS SimpleName: String to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: format to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 2", "INS MethodInvocation to InfixExpression: + at 1", "INS InfixExpression: == to IfStatement at 0", "INS StringLiteral: \"No Content Storage set was found in header partition\" to MethodInvocation at 2", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS SimpleName: addError to MethodInvocation at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: addError to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS SimpleName: addError to MethodInvocation at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: sequence to InfixExpression: != at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: sequence to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS SimpleName: addError to MethodInvocation at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS SimpleName: addError to MethodInvocation at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: addError to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 4"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: MXFException", "DEL ThrowStatement", "DEL SimpleType: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL SimpleType: MXFException", "DEL SimpleName: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: MXFException", "DEL ThrowStatement", "DEL SimpleType: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: MXFException", "DEL ClassInstanceCreation", "DEL SimpleType: MXFException", "DEL ThrowStatement"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleType: MXFException", "DEL ThrowStatement", "DEL SimpleName: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL SimpleType: MXFException", "DEL SimpleName: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: MXFException", "DEL ThrowStatement", "DEL SimpleType: MXFException", "DEL ClassInstanceCreation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: MXFException", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: MXFException"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: MXFException", "DEL SimpleName: MXFException"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleType: MXFException", "DEL SimpleName: MXFException", "DEL ClassInstanceCreation", "DEL ThrowStatement"]}]}}, {"MXFOperationalPattern1A_diff": {"operations": ["Insert VariableDeclarationStatement(148) into Block(891) at 1", "Insert SimpleType: IMFErrorLogger(142) into VariableDeclarationStatement(148) at 0", "Insert VariableDeclarationFragment(147) into VariableDeclarationStatement(148) at 1", "Insert IfStatement(303) into Block(304) at 2", "Insert SimpleName: IMFErrorLogger(141) into SimpleType: IMFErrorLogger(142) at 0", "Insert SimpleName: imfErrorLogger(143) into VariableDeclarationFragment(147) at 0", "Insert ClassInstanceCreation(146) into VariableDeclarationFragment(147) at 1", "Insert InfixExpression: ==(267) into IfStatement(303) at 0", "Insert Block(280) into IfStatement(303) at 1", "Move IfStatement(270) into IfStatement(303) at 2", "Insert ExpressionStatement(355) into Block(356) at 0", "Insert SimpleType: IMFErrorLoggerImpl(145) into ClassInstanceCreation(146) at 0", "Insert ExpressionStatement(227) into Block(228) at 0", "Insert ExpressionStatement(254) into Block(255) at 0", "Insert SimpleName: contentStorage(265) into InfixExpression: ==(267) at 0", "Insert NullLiteral(266) into InfixExpression: ==(267) at 1", "Insert ExpressionStatement(279) into Block(280) at 0", "Insert ExpressionStatement(328) into Block(329) at 0", "Insert MethodInvocation(354) into ExpressionStatement(355) at 0", "Insert ExpressionStatement(582) into Block(583) at 0", "Insert SimpleName: IMFErrorLoggerImpl(144) into SimpleType: IMFErrorLoggerImpl(145) at 0", "Insert MethodInvocation(226) into ExpressionStatement(227) at 0", "Insert MethodInvocation(253) into ExpressionStatement(254) at 0", "Insert MethodInvocation(278) into ExpressionStatement(279) at 0", "Insert ExpressionStatement(300) into Block(301) at 0", "Insert MethodInvocation(327) into ExpressionStatement(328) at 0", "Insert SimpleName: imfErrorLogger(339) into MethodInvocation(354) at 0", "Insert SimpleName: addError(340) into MethodInvocation(354) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(341) into MethodInvocation(354) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(342) into MethodInvocation(354) at 3", "Move InfixExpression: +(316) into MethodInvocation(354) at 4", "Insert InfixExpression: &&(417) into IfStatement(448) at 0", "Insert InfixExpression: &&(482) into IfStatement(530) at 0", "Insert MethodInvocation(581) into ExpressionStatement(582) at 0", "Insert ExpressionStatement(203) into Block(204) at 0", "Insert SimpleName: imfErrorLogger(213) into MethodInvocation(226) at 0", "Insert SimpleName: addError(214) into MethodInvocation(226) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(215) into MethodInvocation(226) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(216) into MethodInvocation(226) at 3", "Move InfixExpression: +(213) into MethodInvocation(226) at 4", "Insert SimpleName: imfErrorLogger(238) into MethodInvocation(253) at 0", "Insert SimpleName: addError(239) into MethodInvocation(253) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(240) into MethodInvocation(253) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(241) into MethodInvocation(253) at 3", "Move InfixExpression: +(238) into MethodInvocation(253) at 4", "Insert SimpleName: imfErrorLogger(268) into MethodInvocation(278) at 0", "Insert SimpleName: addError(269) into MethodInvocation(278) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(270) into MethodInvocation(278) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(271) into MethodInvocation(278) at 3", "Insert InfixExpression: +(277) into MethodInvocation(278) at 4", "Insert MethodInvocation(299) into ExpressionStatement(300) at 0", "Insert SimpleName: imfErrorLogger(312) into MethodInvocation(327) at 0", "Insert SimpleName: addError(313) into MethodInvocation(327) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(314) into MethodInvocation(327) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(315) into MethodInvocation(327) at 3", "Move InfixExpression: +(291) into MethodInvocation(327) at 4", "Insert ExpressionStatement(404) into Block(405) at 0", "Insert InfixExpression: !=(409) into InfixExpression: &&(417) at 0", "Move PrefixExpression: !(433) into InfixExpression: &&(417) at 1", "Insert InfixExpression: !=(474) into InfixExpression: &&(482) at 0", "Move PrefixExpression: !(374) into InfixExpression: &&(482) at 1", "Insert SimpleName: imfErrorLogger(570) into MethodInvocation(581) at 0", "Insert SimpleName: addError(571) into MethodInvocation(581) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(572) into MethodInvocation(581) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(573) into MethodInvocation(581) at 3", "Move InfixExpression: +(527) into MethodInvocation(581) at 4", "Insert MethodInvocation(202) into ExpressionStatement(203) at 0", "Insert QualifiedName: MXFOperationalPattern1A.OP1A_EXCEPTION_PREFIX(272) into InfixExpression: +(277) at 0", "Insert MethodInvocation(276) into InfixExpression: +(277) at 1", "Insert SimpleName: imfErrorLogger(286) into MethodInvocation(299) at 0", "Insert SimpleName: addError(287) into MethodInvocation(299) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(288) into MethodInvocation(299) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(289) into MethodInvocation(299) at 3", "Move InfixExpression: +(266) into MethodInvocation(299) at 4", "Insert MethodInvocation(403) into ExpressionStatement(404) at 0", "Insert SimpleName: sequence(407) into InfixExpression: !=(409) at 0", "Insert NullLiteral(408) into InfixExpression: !=(409) at 1", "Insert SimpleName: sequence(472) into InfixExpression: !=(474) at 0", "Insert NullLiteral(473) into InfixExpression: !=(474) at 1", "Insert SimpleName: imfErrorLogger(185) into MethodInvocation(202) at 0", "Insert SimpleName: addError(186) into MethodInvocation(202) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(187) into MethodInvocation(202) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(188) into MethodInvocation(202) at 3", "Move InfixExpression: +(191) into MethodInvocation(202) at 4", "Insert SimpleName: String(273) into MethodInvocation(276) at 0", "Insert SimpleName: format(274) into MethodInvocation(276) at 1", "Insert StringLiteral: \"No Content Storage set was found in header partition\"(275) into MethodInvocation(276) at 2", "Insert SimpleName: imfErrorLogger(390) into MethodInvocation(403) at 0", "Insert SimpleName: addError(391) into MethodInvocation(403) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(392) into MethodInvocation(403) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(393) into MethodInvocation(403) at 3", "Move InfixExpression: +(363) into MethodInvocation(403) at 4", "Insert ExpressionStatement(444) into Block(445) at 0", "Insert MethodInvocation(443) into ExpressionStatement(444) at 0", "Insert ExpressionStatement(525) into Block(526) at 0", "Insert SimpleName: imfErrorLogger(425) into MethodInvocation(443) at 0", "Insert SimpleName: addError(426) into MethodInvocation(443) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(427) into MethodInvocation(443) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(428) into MethodInvocation(443) at 3", "Move InfixExpression: +(397) into MethodInvocation(443) at 4", "Insert MethodInvocation(524) into ExpressionStatement(525) at 0", "Insert SimpleName: imfErrorLogger(509) into MethodInvocation(524) at 0", "Insert SimpleName: addError(510) into MethodInvocation(524) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.IMF_ESSENCE_COMPONENT_ERROR(511) into MethodInvocation(524) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.FATAL(512) into MethodInvocation(524) at 3", "Move InfixExpression: +(472) into MethodInvocation(524) at 4", "Delete SimpleName: MXFException(177)", "Delete SimpleType: MXFException(178)", "Delete ClassInstanceCreation(192)", "Delete ThrowStatement(193)", "Delete SimpleName: MXFException(203)", "Delete SimpleType: MXFException(204)", "Delete ClassInstanceCreation(214)", "Delete ThrowStatement(215)", "Delete SimpleName: MXFException(226)", "Delete SimpleType: MXFException(227)", "Delete ClassInstanceCreation(239)", "Delete ThrowStatement(240)", "Delete SimpleName: MXFException(256)", "Delete SimpleType: MXFException(257)", "Delete ClassInstanceCreation(267)", "Delete ThrowStatement(268)", "Delete SimpleName: MXFException(279)", "Delete SimpleType: MXFException(280)", "Delete ClassInstanceCreation(292)", "Delete ThrowStatement(293)", "Delete SimpleName: MXFException(304)", "Delete SimpleType: MXFException(305)", "Delete ClassInstanceCreation(317)", "Delete ThrowStatement(318)", "Delete SimpleName: MXFException(353)", "Delete SimpleType: MXFException(354)", "Delete ClassInstanceCreation(364)", "Delete ThrowStatement(365)", "Delete SimpleName: MXFException(382)", "Delete SimpleType: MXFException(383)", "Delete ClassInstanceCreation(398)", "Delete ThrowStatement(399)", "Delete SimpleName: MXFException(460)", "Delete SimpleType: MXFException(461)", "Delete ClassInstanceCreation(473)", "Delete ThrowStatement(474)", "Delete SimpleName: MXFException(519)", "Delete SimpleType: MXFException(520)", "Delete ClassInstanceCreation(528)", "Delete ThrowStatement(529)"]}}, {"AssetMap_cluster": {"actions": [{"root": "INS InfixExpression: + to MethodInvocation at 4", "operations": ["INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: error to MethodInvocation at 0", "INS StringLiteral: \" - \" to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 4", "INS SimpleName: getLineNumber to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 2"]}]}}, {"AssetMap_diff": {"operations": ["Insert InfixExpression: +(565) into MethodInvocation(566) at 4", "Insert MethodInvocation(560) into InfixExpression: +(565) at 0", "Insert StringLiteral: \" - \"(561) into InfixExpression: +(565) at 1", "Move MethodInvocation(560) into InfixExpression: +(565) at 2", "Insert SimpleName: error(558) into MethodInvocation(560) at 0", "Insert SimpleName: getLineNumber(559) into MethodInvocation(560) at 1"]}}, {"Composition_cluster": {"actions": [{"root": "INS InfixExpression: + to ClassInstanceCreation at 3", "operations": ["INS InfixExpression: + to ClassInstanceCreation at 3", "INS MethodInvocation to InfixExpression: + at 0", "INS StringLiteral: \" - \" to InfixExpression: + at 1", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: getLineNumber to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 2"]}]}}, {"Composition_diff": {"operations": ["Insert InfixExpression: +(708) into ClassInstanceCreation(709) at 3", "Insert MethodInvocation(703) into InfixExpression: +(708) at 0", "Insert StringLiteral: \" - \"(704) into InfixExpression: +(708) at 1", "Move MethodInvocation(701) into InfixExpression: +(708) at 2", "Insert MethodInvocation(701) into MethodInvocation(703) at 0", "Insert SimpleName: toString(702) into MethodInvocation(703) at 1", "Insert SimpleName: e(699) into MethodInvocation(701) at 0", "Insert SimpleName: getLineNumber(700) into MethodInvocation(701) at 1"]}}, {"GenericSoundEssenceDescriptor_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS MemberValuePair to NormalAnnotation at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: protected to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleName: MXFProperty to NormalAnnotation at 0", "INS SimpleName: size to MemberValuePair at 0", "INS NumberLiteral: 8 to MemberValuePair at 1", "INS NormalAnnotation to FieldDeclaration at 0", "INS SimpleType: CompoundDataTypes.Rational to FieldDeclaration at 3", "INS SimpleName: reference_image_edit_rate to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS QualifiedName: CompoundDataTypes.Rational to SimpleType: CompoundDataTypes.Rational at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: size to MemberValuePair at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: reference_audio_alignment_level to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to MemberValuePair at 1", "INS SimpleType: Integer to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: MXFProperty to NormalAnnotation at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Modifier: protected to FieldDeclaration at 1", "INS NormalAnnotation to FieldDeclaration at 0"]}]}}, {"GenericSoundEssenceDescriptor_diff": {"operations": ["Insert FieldDeclaration(86) into TypeDeclaration: class(116) at 9", "Insert FieldDeclaration(99) into TypeDeclaration: class(116) at 10", "Insert NormalAnnotation(78) into FieldDeclaration(86) at 0", "Insert Modifier: protected(79) into FieldDeclaration(86) at 1", "Insert Modifier: final(80) into FieldDeclaration(86) at 2", "Insert SimpleType: CompoundDataTypes.Rational(82) into FieldDeclaration(86) at 3", "Insert VariableDeclarationFragment(85) into FieldDeclaration(86) at 4", "Insert NormalAnnotation(91) into FieldDeclaration(99) at 0", "Insert Modifier: protected(92) into FieldDeclaration(99) at 1", "Insert Modifier: final(93) into FieldDeclaration(99) at 2", "Insert SimpleType: Integer(95) into FieldDeclaration(99) at 3", "Insert VariableDeclarationFragment(98) into FieldDeclaration(99) at 4", "Insert SimpleName: MXFProperty(74) into NormalAnnotation(78) at 0", "Insert MemberValuePair(77) into NormalAnnotation(78) at 1", "Insert QualifiedName: CompoundDataTypes.Rational(81) into SimpleType: CompoundDataTypes.Rational(82) at 0", "Insert SimpleName: reference_image_edit_rate(83) into VariableDeclarationFragment(85) at 0", "Insert NullLiteral(84) into VariableDeclarationFragment(85) at 1", "Insert SimpleName: MXFProperty(87) into NormalAnnotation(91) at 0", "Insert MemberValuePair(90) into NormalAnnotation(91) at 1", "Insert SimpleName: Integer(94) into SimpleType: Integer(95) at 0", "Insert SimpleName: reference_audio_alignment_level(96) into VariableDeclarationFragment(98) at 0", "Insert NullLiteral(97) into VariableDeclarationFragment(98) at 1", "Insert SimpleName: size(75) into MemberValuePair(77) at 0", "Insert NumberLiteral: 8(76) into MemberValuePair(77) at 1", "Insert SimpleName: size(88) into MemberValuePair(90) at 0", "Insert NumberLiteral: 1(89) into MemberValuePair(90) at 1"]}}, {"SoundFieldGroupLabelSubDescriptor_cluster": {"actions": [{"root": "INS IfStatement to Block at 7", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: rfc_5646_spoken_language to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS StringLiteral: \"rfc_5646_spoken_language is not present, implying this SoundFieldGroupLabelSubDescriptor is not associated with a primary spoken language\" to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 7", "INS InfixExpression: + to MethodInvocation at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addError to MethodInvocation at 1", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.MXF_PARTITION_FIELD_ERROR to MethodInvocation at 2", "INS QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.NON_FATAL to MethodInvocation at 3", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: imfErrorLogger to MethodInvocation at 0", "INS QualifiedName: SoundFieldGroupLabelSubDescriptor.ERROR_DESCRIPTION_PREFIX to InfixExpression: + at 0", "INS FieldAccess to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0"]}]}}, {"SoundFieldGroupLabelSubDescriptor_diff": {"operations": ["Insert IfStatement(300) into Block(301) at 7", "Insert InfixExpression: ==(289) into IfStatement(300) at 0", "Insert Block(299) into IfStatement(300) at 1", "Insert FieldAccess(287) into InfixExpression: ==(289) at 0", "Insert NullLiteral(288) into InfixExpression: ==(289) at 1", "Insert ExpressionStatement(298) into Block(299) at 0", "Insert ThisExpression(285) into FieldAccess(287) at 0", "Insert SimpleName: rfc_5646_spoken_language(286) into FieldAccess(287) at 1", "Insert MethodInvocation(297) into ExpressionStatement(298) at 0", "Insert SimpleName: imfErrorLogger(290) into MethodInvocation(297) at 0", "Insert SimpleName: addError(291) into MethodInvocation(297) at 1", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorCodes.MXF_PARTITION_FIELD_ERROR(292) into MethodInvocation(297) at 2", "Insert QualifiedName: IMFErrorLogger.IMFErrors.ErrorLevels.NON_FATAL(293) into MethodInvocation(297) at 3", "Insert InfixExpression: +(296) into MethodInvocation(297) at 4", "Insert QualifiedName: SoundFieldGroupLabelSubDescriptor.ERROR_DESCRIPTION_PREFIX(294) into InfixExpression: +(296) at 0", "Insert StringLiteral: \"rfc_5646_spoken_language is not present, implying this SoundFieldGroupLabelSubDescriptor is not associated with a primary spoken language\"(295) into InfixExpression: +(296) at 1"]}}, {"StructuralMetadata_cluster": {"actions": [{"root": "INS Block to Block at 49", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0x00 to ArrayInitializer at 15", "INS ExpressionStatement to Block at 2", "INS NumberLiteral: 0x01 to ArrayInitializer at 11", "INS NumberLiteral: 0x0e to ArrayInitializer at 7", "INS SimpleName: byteArray to VariableDeclarationFragment at 0", "INS NumberLiteral: 0x06 to ArrayInitializer at 0", "INS NumberLiteral: 0x01 to ArrayInitializer at 4", "INS SimpleName: put to MethodInvocation at 1", "INS NumberLiteral: 0x34 to ArrayInitializer at 3", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS NumberLiteral: 0x2b to ArrayInitializer at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: mxfUL to MethodInvocation at 2", "INS NumberLiteral: 0x00 to ArrayInitializer at 13", "INS StringLiteral: \"reference_image_edit_rate\" to MethodInvocation at 3", "INS SimpleName: mxfUL to VariableDeclarationFragment at 0", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS VariableDeclarationStatement to Block at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS NumberLiteral: 0x01 to ArrayInitializer at 5", "INS NumberLiteral: 0x06 to ArrayInitializer at 12", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0x02 to ArrayInitializer at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: MXFUID to ClassInstanceCreation at 0", "INS ArrayInitializer to VariableDeclarationFragment at 1", "INS NumberLiteral: 0x01 to ArrayInitializer at 10", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: byteArray to ClassInstanceCreation at 1", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS NumberLiteral: 0x01 to ArrayInitializer at 6", "INS Block to Block at 49", "INS NumberLiteral: 0x04 to ArrayInitializer at 8", "INS NumberLiteral: 0x0e to ArrayInitializer at 1", "INS SimpleType: MXFUID to VariableDeclarationStatement at 0", "INS NumberLiteral: 0x00 to ArrayInitializer at 14", "INS SimpleName: map to MethodInvocation at 0"]}, {"root": "INS Block to Block at 50", "operations": ["INS ArrayInitializer to VariableDeclarationFragment at 1", "INS SimpleName: map to MethodInvocation at 0", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS NumberLiteral: 0x01 to ArrayInitializer at 11", "INS SimpleType: MXFUID to ClassInstanceCreation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS NumberLiteral: 0x02 to ArrayInitializer at 9", "INS NumberLiteral: 0x00 to ArrayInitializer at 13", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0x01 to ArrayInitializer at 5", "INS NumberLiteral: 0x07 to ArrayInitializer at 12", "INS ExpressionStatement to Block at 2", "INS SimpleType: MXFUID to VariableDeclarationStatement at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: mxfUL to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: mxfUL to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: MXFUID to SimpleType: MXFUID at 0", "INS NumberLiteral: 0x01 to ArrayInitializer at 6", "INS SimpleName: byteArray to VariableDeclarationFragment at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS NumberLiteral: 0x0e to ArrayInitializer at 7", "INS NumberLiteral: 0x2b to ArrayInitializer at 2", "INS NumberLiteral: 0x01 to ArrayInitializer at 4", "INS NumberLiteral: 0x06 to ArrayInitializer at 0", "INS NumberLiteral: 0x00 to ArrayInitializer at 15", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0x34 to ArrayInitializer at 3", "INS NumberLiteral: 0x00 to ArrayInitializer at 14", "INS SimpleName: byteArray to ClassInstanceCreation at 1", "INS NumberLiteral: 0x0e to ArrayInitializer at 1", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"reference_audio_alignment_level\" to MethodInvocation at 3", "INS NumberLiteral: 0x04 to ArrayInitializer at 8", "INS NumberLiteral: 0x01 to ArrayInitializer at 10", "INS Block to Block at 50"]}]}}, {"StructuralMetadata_diff": {"operations": ["Insert Block(2048) into Block(3031) at 49", "Insert Block(2087) into Block(3031) at 50", "Insert VariableDeclarationStatement(2032) into Block(2048) at 0", "Insert VariableDeclarationStatement(2041) into Block(2048) at 1", "Insert ExpressionStatement(2047) into Block(2048) at 2", "Insert VariableDeclarationStatement(2071) into Block(2087) at 0", "Insert VariableDeclarationStatement(2080) into Block(2087) at 1", "Insert ExpressionStatement(2086) into Block(2087) at 2", "Insert ArrayType: byte[](2012) into VariableDeclarationStatement(2032) at 0", "Insert VariableDeclarationFragment(2031) into VariableDeclarationStatement(2032) at 1", "Insert SimpleType: MXFUID(2034) into VariableDeclarationStatement(2041) at 0", "Insert VariableDeclarationFragment(2040) into VariableDeclarationStatement(2041) at 1", "Insert MethodInvocation(2046) into ExpressionStatement(2047) at 0", "Insert ArrayType: byte[](2051) into VariableDeclarationStatement(2071) at 0", "Insert VariableDeclarationFragment(2070) into VariableDeclarationStatement(2071) at 1", "Insert SimpleType: MXFUID(2073) into VariableDeclarationStatement(2080) at 0", "Insert VariableDeclarationFragment(2079) into VariableDeclarationStatement(2080) at 1", "Insert MethodInvocation(2085) into ExpressionStatement(2086) at 0", "Insert PrimitiveType: byte(2010) into ArrayType: byte[](2012) at 0", "Insert Dimension(2011) into ArrayType: byte[](2012) at 1", "Insert SimpleName: byteArray(2013) into VariableDeclarationFragment(2031) at 0", "Insert ArrayInitializer(2030) into VariableDeclarationFragment(2031) at 1", "Insert SimpleName: MXFUID(2033) into SimpleType: MXFUID(2034) at 0", "Insert SimpleName: mxfUL(2035) into VariableDeclarationFragment(2040) at 0", "Insert ClassInstanceCreation(2039) into VariableDeclarationFragment(2040) at 1", "Insert SimpleName: map(2042) into MethodInvocation(2046) at 0", "Insert SimpleName: put(2043) into MethodInvocation(2046) at 1", "Insert SimpleName: mxfUL(2044) into MethodInvocation(2046) at 2", "Insert StringLiteral: \"reference_image_edit_rate\"(2045) into MethodInvocation(2046) at 3", "Insert PrimitiveType: byte(2049) into ArrayType: byte[](2051) at 0", "Insert Dimension(2050) into ArrayType: byte[](2051) at 1", "Insert SimpleName: byteArray(2052) into VariableDeclarationFragment(2070) at 0", "Insert ArrayInitializer(2069) into VariableDeclarationFragment(2070) at 1", "Insert SimpleName: MXFUID(2072) into SimpleType: MXFUID(2073) at 0", "Insert SimpleName: mxfUL(2074) into VariableDeclarationFragment(2079) at 0", "Insert ClassInstanceCreation(2078) into VariableDeclarationFragment(2079) at 1", "Insert SimpleName: map(2081) into MethodInvocation(2085) at 0", "Insert SimpleName: put(2082) into MethodInvocation(2085) at 1", "Insert SimpleName: mxfUL(2083) into MethodInvocation(2085) at 2", "Insert StringLiteral: \"reference_audio_alignment_level\"(2084) into MethodInvocation(2085) at 3", "Insert NumberLiteral: 0x06(2014) into ArrayInitializer(2030) at 0", "Insert NumberLiteral: 0x0e(2015) into ArrayInitializer(2030) at 1", "Insert NumberLiteral: 0x2b(2016) into ArrayInitializer(2030) at 2", "Insert NumberLiteral: 0x34(2017) into ArrayInitializer(2030) at 3", "Insert NumberLiteral: 0x01(2018) into ArrayInitializer(2030) at 4", "Insert NumberLiteral: 0x01(2019) into ArrayInitializer(2030) at 5", "Insert NumberLiteral: 0x01(2020) into ArrayInitializer(2030) at 6", "Insert NumberLiteral: 0x0e(2021) into ArrayInitializer(2030) at 7", "Insert NumberLiteral: 0x04(2022) into ArrayInitializer(2030) at 8", "Insert NumberLiteral: 0x02(2023) into ArrayInitializer(2030) at 9", "Insert NumberLiteral: 0x01(2024) into ArrayInitializer(2030) at 10", "Insert NumberLiteral: 0x01(2025) into ArrayInitializer(2030) at 11", "Insert NumberLiteral: 0x06(2026) into ArrayInitializer(2030) at 12", "Insert NumberLiteral: 0x00(2027) into ArrayInitializer(2030) at 13", "Insert NumberLiteral: 0x00(2028) into ArrayInitializer(2030) at 14", "Insert NumberLiteral: 0x00(2029) into ArrayInitializer(2030) at 15", "Insert SimpleType: MXFUID(2037) into ClassInstanceCreation(2039) at 0", "Insert SimpleName: byteArray(2038) into ClassInstanceCreation(2039) at 1", "Insert NumberLiteral: 0x06(2053) into ArrayInitializer(2069) at 0", "Insert NumberLiteral: 0x0e(2054) into ArrayInitializer(2069) at 1", "Insert NumberLiteral: 0x2b(2055) into ArrayInitializer(2069) at 2", "Insert NumberLiteral: 0x34(2056) into ArrayInitializer(2069) at 3", "Insert NumberLiteral: 0x01(2057) into ArrayInitializer(2069) at 4", "Insert NumberLiteral: 0x01(2058) into ArrayInitializer(2069) at 5", "Insert NumberLiteral: 0x01(2059) into ArrayInitializer(2069) at 6", "Insert NumberLiteral: 0x0e(2060) into ArrayInitializer(2069) at 7", "Insert NumberLiteral: 0x04(2061) into ArrayInitializer(2069) at 8", "Insert NumberLiteral: 0x02(2062) into ArrayInitializer(2069) at 9", "Insert NumberLiteral: 0x01(2063) into ArrayInitializer(2069) at 10", "Insert NumberLiteral: 0x01(2064) into ArrayInitializer(2069) at 11", "Insert NumberLiteral: 0x07(2065) into ArrayInitializer(2069) at 12", "Insert NumberLiteral: 0x00(2066) into ArrayInitializer(2069) at 13", "Insert NumberLiteral: 0x00(2067) into ArrayInitializer(2069) at 14", "Insert NumberLiteral: 0x00(2068) into ArrayInitializer(2069) at 15", "Insert SimpleType: MXFUID(2076) into ClassInstanceCreation(2078) at 0", "Insert SimpleName: byteArray(2077) into ClassInstanceCreation(2078) at 1", "Insert SimpleName: MXFUID(2036) into SimpleType: MXFUID(2037) at 0", "Insert SimpleName: MXFUID(2075) into SimpleType: MXFUID(2076) at 0"]}}], "commit_stats": [{"total_files": 8, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}