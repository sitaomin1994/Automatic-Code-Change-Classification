{"application": "apache-mina-sshd", "csha": "e70fb3d11521d5776c6eb6d76e045c8d35228368", "files": [{"AbstractFactoryManager_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 25", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 25", "INS SimpleName: PropertyResolver to SimpleType: PropertyResolver at 0", "INS SimpleName: parentResolver to VariableDeclarationFragment at 0", "INS QualifiedName: SyspropsMapWrapper.SYSPROPS_RESOLVER to VariableDeclarationFragment at 1", "INS SimpleType: PropertyResolver to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS SimpleType: PropertyResolver to SingleVariableDeclaration at 0", "INS SimpleName: parent to SingleVariableDeclaration at 1", "INS SimpleName: setParentPropertyResolver to MethodDeclaration at 2", "INS SimpleName: parentResolver to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: parent to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: PropertyResolver to SimpleType: PropertyResolver at 0"]}, {"root": "INS SimpleName: parentResolver to ReturnStatement at 0", "operations": ["INS SimpleName: parentResolver to ReturnStatement at 0"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"AbstractFactoryManager_diff": {"operations": ["Insert FieldDeclaration(237) into TypeDeclaration: class(1087) at 25", "Insert MethodDeclaration(389) into TypeDeclaration: class(1087) at 34", "Insert Modifier: private(231) into FieldDeclaration(237) at 0", "Insert SimpleType: PropertyResolver(233) into FieldDeclaration(237) at 1", "Insert VariableDeclarationFragment(236) into FieldDeclaration(237) at 2", "Insert Modifier: public(377) into MethodDeclaration(389) at 0", "Insert PrimitiveType: void(378) into MethodDeclaration(389) at 1", "Insert SimpleName: setParentPropertyResolver(379) into MethodDeclaration(389) at 2", "Insert SingleVariableDeclaration(383) into MethodDeclaration(389) at 3", "Insert Block(388) into MethodDeclaration(389) at 4", "Insert SimpleName: PropertyResolver(232) into SimpleType: PropertyResolver(233) at 0", "Insert SimpleName: parentResolver(234) into VariableDeclarationFragment(236) at 0", "Insert QualifiedName: SyspropsMapWrapper.SYSPROPS_RESOLVER(235) into VariableDeclarationFragment(236) at 1", "Insert SimpleType: PropertyResolver(381) into SingleVariableDeclaration(383) at 0", "Insert SimpleName: parent(382) into SingleVariableDeclaration(383) at 1", "Insert ExpressionStatement(387) into Block(388) at 0", "Insert SimpleName: parentResolver(373) into ReturnStatement(374) at 0", "Insert SimpleName: PropertyResolver(380) into SimpleType: PropertyResolver(381) at 0", "Insert Assignment: =(386) into ExpressionStatement(387) at 0", "Insert SimpleName: parentResolver(384) into Assignment: =(386) at 0", "Insert SimpleName: parent(385) into Assignment: =(386) at 1", "Delete NullLiteral(366)"]}}, {"PropertyResolver_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.util.Collections to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 3", "operations": ["INS SimpleType: PropertyResolver to MethodDeclaration at 2", "INS SimpleName: getParentPropertyResolver to MethodDeclaration at 3", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Collections to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: interface at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: PropertyResolver to SimpleType: PropertyResolver at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: PropertyResolver to FieldDeclaration at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: emptyMap to MethodInvocation at 1", "INS SimpleName: toString to MethodDeclaration at 3", "INS TextElement: An &quot;empty&quot; resolver with no properties and no parent to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: EMPTY to VariableDeclarationFragment at 0", "INS SimpleName: getProperties to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: PropertyResolver to SimpleType: PropertyResolver at 0", "INS StringLiteral: \"EMPTY\" to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS Javadoc to FieldDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: PropertyResolver to ClassInstanceCreation at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: PropertyResolver to SimpleType: PropertyResolver at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 4", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to ReturnStatement at 0"]}, {"root": "UPDATE from that differ from each other only in case sensitivity. Also, implementations may to that differ from each other only in case sensitivity. Also, implementations", "operations": ["UPD TextElement: that differ from each other only in case sensitivity. Also, implementations may from that differ from each other only in case sensitivity. Also, implementations may to that differ from each other only in case sensitivity. Also, implementations"]}, {"root": "UPDATE from choose to trim whitespaces, thus such are also highly discouraged. to may choose to trim whitespaces, thus such are also highly discouraged.", "operations": ["UPD TextElement: choose to trim whitespaces, thus such are also highly discouraged. from choose to trim whitespaces, thus such are also highly discouraged. to may choose to trim whitespaces, thus such are also highly discouraged."]}, {"root": "INS TextElement: <P> to TagElement at 0", "operations": ["INS TextElement: <P> to TagElement at 0"]}, {"root": "UPDATE from <P>A map of properties that can be used to configure the SSH server to A map of properties that can be used to configure the SSH server or", "operations": ["UPD TextElement: <P>A map of properties that can be used to configure the SSH server from <P>A map of properties that can be used to configure the SSH server to A map of properties that can be used to configure the SSH server or"]}, {"root": "UPDATE from or client.  This map will never be changed by either the server or to client. This map will never be changed by either the server or client and", "operations": ["UPD TextElement: or client.  This map will never be changed by either the server or from or client.  This map will never be changed by either the server or to client. This map will never be changed by either the server or client and"]}, {"root": "UPDATE from client and is not supposed to be changed at runtime (changes are not to is not supposed to be changed at runtime (changes are not bound to have", "operations": ["UPD TextElement: client and is not supposed to be changed at runtime (changes are not from client and is not supposed to be changed at runtime (changes are not to is not supposed to be changed at runtime (changes are not bound to have"]}, {"root": "UPDATE from bound to have any effect on a running client or server), though it may to any effect on a running client or server), though it may affect the", "operations": ["UPD TextElement: bound to have any effect on a running client or server), though it may from bound to have any effect on a running client or server), though it may to any effect on a running client or server), though it may affect the"]}, {"root": "UPDATE from affect the creation of sessions later as these values are usually not to creation of sessions later as these values are usually not cached.", "operations": ["UPD TextElement: affect the creation of sessions later as these values are usually not from affect the creation of sessions later as these values are usually not to creation of sessions later as these values are usually not cached."]}, {"root": "UPDATE from cached.</P> to </P>", "operations": ["UPD TextElement: cached.</P> from cached.</P> to </P>"]}, {"root": "INS TextElement: <P> to TagElement at 7", "operations": ["INS TextElement: <P> to TagElement at 7"]}, {"root": "UPDATE from <P><B>Note:</B> the <U>type</U> of the mapped property should match the to <B>Note:</B> the <U>type</U> of the mapped property should match the", "operations": ["UPD TextElement: <P><B>Note:</B> the <U>type</U> of the mapped property should match the from <P><B>Note:</B> the <U>type</U> of the mapped property should match the to <B>Note:</B> the <U>type</U> of the mapped property should match the"]}, {"root": "UPDATE from mapped value is used to convert it to the required type. E.g., if to mapped value is used to convert it to the required type. E.g., if the", "operations": ["UPD TextElement: mapped value is used to convert it to the required type. E.g., if from mapped value is used to convert it to the required type. E.g., if to mapped value is used to convert it to the required type. E.g., if the"]}, {"root": "UPDATE from the mapped value is the <U>string</U> &quot;1234&quot; and the expected to mapped value is the <U>string</U> &quot;1234&quot; and the expected value", "operations": ["UPD TextElement: the mapped value is the <U>string</U> &quot;1234&quot; and the expected from the mapped value is the <U>string</U> &quot;1234&quot; and the expected to mapped value is the <U>string</U> &quot;1234&quot; and the expected value"]}, {"root": "UPDATE from value is a  to is a ", "operations": ["UPD TextElement: value is a  from value is a  to is a "]}, {"root": "UPDATE from  then it will be parsed into one. Also, if to  then it will be parsed into one. Also, if the mapped", "operations": ["UPD TextElement:  then it will be parsed into one. Also, if from  then it will be parsed into one. Also, if to  then it will be parsed into one. Also, if the mapped"]}, {"root": "UPDATE from the mapped value is an  to value is an ", "operations": ["UPD TextElement: the mapped value is an  from the mapped value is an  to value is an "]}, {"root": "UPDATE from  is expected, to  is expected, then it will", "operations": ["UPD TextElement:  is expected, from  is expected, to  is expected, then it will"]}, {"root": "UPDATE from then it will be converted into one.</P> to be converted into one.", "operations": ["UPD TextElement: then it will be converted into one.</P> from then it will be converted into one.</P> to be converted into one."]}, {"root": "INS TextElement: </P> to TagElement at 25", "operations": ["INS TextElement: </P> to TagElement at 25"]}, {"root": "UPDATE from  a valid <code>Map</code> containing configuration values, never  to  a valid <code>Map</code> containing configuration values, never", "operations": ["UPD TextElement:  a valid <code>Map</code> containing configuration values, never  from  a valid <code>Map</code> containing configuration values, never  to  a valid <code>Map</code> containing configuration values, never"]}]}}, {"PropertyResolver_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(137) at 1", "Insert QualifiedName: java.util.Collections(2) into ImportDeclaration(3) at 0", "Insert FieldDeclaration(77) into TypeDeclaration: interface(136) at 3", "Insert Javadoc(31) into FieldDeclaration(77) at 0", "Insert SimpleType: PropertyResolver(33) into FieldDeclaration(77) at 1", "Insert VariableDeclarationFragment(76) into FieldDeclaration(77) at 2", "Update TextElement: that differ from each other only in case sensitivity. Also, implementations may(19) to that differ from each other only in case sensitivity. Also, implementations", "Update TextElement: choose to trim whitespaces, thus such are also highly discouraged.(20) to may choose to trim whitespaces, thus such are also highly discouraged.", "Insert TagElement(30) into Javadoc(31) at 0", "Insert SimpleName: PropertyResolver(32) into SimpleType: PropertyResolver(33) at 0", "Insert SimpleName: EMPTY(34) into VariableDeclarationFragment(76) at 0", "Insert ClassInstanceCreation(75) into VariableDeclarationFragment(76) at 1", "Insert TextElement: An &quot;empty&quot; resolver with no properties and no parent(29) into TagElement(30) at 0", "Insert SimpleType: PropertyResolver(36) into ClassInstanceCreation(75) at 0", "Insert AnonymousClassDeclaration(74) into ClassInstanceCreation(75) at 1", "Insert TextElement: <P>(89) into TagElement(121) at 0", "Update TextElement: <P>A map of properties that can be used to configure the SSH server(38) to A map of properties that can be used to configure the SSH server or", "Update TextElement: or client.  This map will never be changed by either the server or(39) to client. This map will never be changed by either the server or client and", "Update TextElement: client and is not supposed to be changed at runtime (changes are not(40) to is not supposed to be changed at runtime (changes are not bound to have", "Update TextElement: bound to have any effect on a running client or server), though it may(41) to any effect on a running client or server), though it may affect the", "Update TextElement: affect the creation of sessions later as these values are usually not(42) to creation of sessions later as these values are usually not cached.", "Update TextElement: cached.</P>(43) to </P>", "Insert TextElement: <P>(96) into TagElement(121) at 7", "Update TextElement: <P><B>Note:</B> the <U>type</U> of the mapped property should match the(44) to <B>Note:</B> the <U>type</U> of the mapped property should match the", "Update TextElement: mapped value is used to convert it to the required type. E.g., if(53) to mapped value is used to convert it to the required type. E.g., if the", "Update TextElement: the mapped value is the <U>string</U> &quot;1234&quot; and the expected(54) to mapped value is the <U>string</U> &quot;1234&quot; and the expected value", "Update TextElement: value is a (55) to is a ", "Update TextElement:  then it will be parsed into one. Also, if(58) to  then it will be parsed into one. Also, if the mapped", "Update TextElement: the mapped value is an (59) to value is an ", "Update TextElement:  is expected,(65) to  is expected, then it will", "Update TextElement: then it will be converted into one.</P>(66) to be converted into one.", "Insert TextElement: </P>(120) into TagElement(121) at 25", "Update TextElement:  a valid <code>Map</code> containing configuration values, never (68) to  a valid <code>Map</code> containing configuration values, never", "Insert SimpleName: PropertyResolver(35) into SimpleType: PropertyResolver(36) at 0", "Insert MethodDeclaration(46) into AnonymousClassDeclaration(74) at 0", "Insert MethodDeclaration(63) into AnonymousClassDeclaration(74) at 1", "Insert MethodDeclaration(73) into AnonymousClassDeclaration(74) at 2", "Insert MarkerAnnotation(38) into MethodDeclaration(46) at 0", "Insert Modifier: public(39) into MethodDeclaration(46) at 1", "Insert SimpleType: PropertyResolver(41) into MethodDeclaration(46) at 2", "Insert SimpleName: getParentPropertyResolver(42) into MethodDeclaration(46) at 3", "Insert Block(45) into MethodDeclaration(46) at 4", "Insert MarkerAnnotation(48) into MethodDeclaration(63) at 0", "Insert Modifier: public(49) into MethodDeclaration(63) at 1", "Insert ParameterizedType: Map<String,Object>(56) into MethodDeclaration(63) at 2", "Insert SimpleName: getProperties(57) into MethodDeclaration(63) at 3", "Insert Block(62) into MethodDeclaration(63) at 4", "Insert MarkerAnnotation(65) into MethodDeclaration(73) at 0", "Insert Modifier: public(66) into MethodDeclaration(73) at 1", "Insert SimpleType: String(68) into MethodDeclaration(73) at 2", "Insert SimpleName: toString(69) into MethodDeclaration(73) at 3", "Insert Block(72) into MethodDeclaration(73) at 4", "Insert SimpleName: Override(37) into MarkerAnnotation(38) at 0", "Insert SimpleName: PropertyResolver(40) into SimpleType: PropertyResolver(41) at 0", "Insert ReturnStatement(44) into Block(45) at 0", "Insert SimpleName: Override(47) into MarkerAnnotation(48) at 0", "Insert SimpleType: Map(51) into ParameterizedType: Map<String,Object>(56) at 0", "Insert SimpleType: String(53) into ParameterizedType: Map<String,Object>(56) at 1", "Insert SimpleType: Object(55) into ParameterizedType: Map<String,Object>(56) at 2", "Insert ReturnStatement(61) into Block(62) at 0", "Insert SimpleName: Override(64) into MarkerAnnotation(65) at 0", "Insert SimpleName: String(67) into SimpleType: String(68) at 0", "Insert ReturnStatement(71) into Block(72) at 0", "Insert NullLiteral(43) into ReturnStatement(44) at 0", "Insert SimpleName: Map(50) into SimpleType: Map(51) at 0", "Insert SimpleName: String(52) into SimpleType: String(53) at 0", "Insert SimpleName: Object(54) into SimpleType: Object(55) at 0", "Insert MethodInvocation(60) into ReturnStatement(61) at 0", "Insert StringLiteral: \"EMPTY\"(70) into ReturnStatement(71) at 0", "Insert SimpleName: Collections(58) into MethodInvocation(60) at 0", "Insert SimpleName: emptyMap(59) into MethodInvocation(60) at 1"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}