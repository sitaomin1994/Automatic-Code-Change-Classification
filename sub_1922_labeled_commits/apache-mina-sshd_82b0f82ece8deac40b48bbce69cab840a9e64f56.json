{"application": "apache-mina-sshd", "csha": "82b0f82ece8deac40b48bbce69cab840a9e64f56", "files": [{"BaseCipher_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.sshd.common.SshException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"]\" to InfixExpression: + at 9", "INS SimpleName: bsize to InfixExpression: + at 6", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ivsize to InfixExpression: + at 4", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS StringLiteral: \",\" to InfixExpression: + at 7", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS StringLiteral: \",\" to InfixExpression: + at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: transformation to InfixExpression: + at 8", "INS SimpleName: algorithm to InfixExpression: + at 2", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS StringLiteral: \",\" to InfixExpression: + at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: toString to MethodDeclaration at 3"]}, {"root": "INS ClassInstanceCreation to ThrowStatement at 0", "operations": ["INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: SshException to ClassInstanceCreation at 0", "INS StringLiteral: \"Unable to initialize cipher \" to InfixExpression: + at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ThisExpression to InfixExpression: + at 1", "INS SimpleName: SshException to SimpleType: SshException at 0", "INS SimpleName: e to ClassInstanceCreation at 2"]}, {"root": "DEL SimpleName: e", "operations": ["DEL SimpleName: e"]}]}}, {"BaseCipher_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(289) at 4", "Insert QualifiedName: org.apache.sshd.common.SshException(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(287) into TypeDeclaration: class(288) at 15", "Insert MarkerAnnotation(266) into MethodDeclaration(287) at 0", "Insert Modifier: public(267) into MethodDeclaration(287) at 1", "Insert SimpleType: String(269) into MethodDeclaration(287) at 2", "Insert SimpleName: toString(270) into MethodDeclaration(287) at 3", "Insert Block(286) into MethodDeclaration(287) at 4", "Insert SimpleName: Override(265) into MarkerAnnotation(266) at 0", "Insert SimpleName: String(268) into SimpleType: String(269) at 0", "Insert ReturnStatement(285) into Block(286) at 0", "Insert InfixExpression: +(284) into ReturnStatement(285) at 0", "Insert MethodInvocation(274) into InfixExpression: +(284) at 0", "Insert StringLiteral: \"[\"(275) into InfixExpression: +(284) at 1", "Insert SimpleName: algorithm(276) into InfixExpression: +(284) at 2", "Insert StringLiteral: \",\"(277) into InfixExpression: +(284) at 3", "Insert SimpleName: ivsize(278) into InfixExpression: +(284) at 4", "Insert StringLiteral: \",\"(279) into InfixExpression: +(284) at 5", "Insert SimpleName: bsize(280) into InfixExpression: +(284) at 6", "Insert StringLiteral: \",\"(281) into InfixExpression: +(284) at 7", "Insert SimpleName: transformation(282) into InfixExpression: +(284) at 8", "Insert StringLiteral: \"]\"(283) into InfixExpression: +(284) at 9", "Insert MethodInvocation(272) into MethodInvocation(274) at 0", "Insert SimpleName: getSimpleName(273) into MethodInvocation(274) at 1", "Insert ClassInstanceCreation(184) into ThrowStatement(185) at 0", "Insert SimpleName: getClass(271) into MethodInvocation(272) at 0", "Insert SimpleType: SshException(179) into ClassInstanceCreation(184) at 0", "Insert InfixExpression: +(182) into ClassInstanceCreation(184) at 1", "Insert SimpleName: e(183) into ClassInstanceCreation(184) at 2", "Insert SimpleName: SshException(178) into SimpleType: SshException(179) at 0", "Insert StringLiteral: \"Unable to initialize cipher \"(180) into InfixExpression: +(182) at 0", "Insert ThisExpression(181) into InfixExpression: +(182) at 1", "Delete SimpleName: e(176)"]}}, {"BuiltinCiphers_cluster": {"actions": [{"root": "INS FieldDeclaration to EnumDeclaration at 17", "operations": ["INS PrimitiveType: int to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: ivsize to VariableDeclarationFragment at 0", "INS FieldDeclaration to EnumDeclaration at 17", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 18", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: int to FieldDeclaration at 2", "INS FieldDeclaration to EnumDeclaration at 18", "INS SimpleName: blocksize to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 19", "operations": ["INS FieldDeclaration to EnumDeclaration at 19", "INS SimpleName: algorithm to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 20", "operations": ["INS FieldDeclaration to EnumDeclaration at 20", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 22", "operations": ["INS SimpleName: algorithm to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: factoryName to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: blocksize to Assignment: = at 1", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: blocksize to SingleVariableDeclaration at 1", "INS SimpleName: transformation to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: factoryName to SingleVariableDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: BuiltinCiphers to MethodDeclaration at 0", "INS SimpleName: ivsize to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: transformation to Assignment: = at 1", "INS SimpleName: ivsize to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: ivsize to Assignment: = at 1", "INS SimpleName: blocksize to FieldAccess at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to EnumDeclaration at 22", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: algorithm to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: factoryName to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: algorithm to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 23", "operations": ["INS SimpleName: isSupported to MethodDeclaration at 4", "INS MethodDeclaration to EnumDeclaration at 23", "INS Modifier: public to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: boolean to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 24", "operations": ["INS SimpleName: getIVSize to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS TextElement: Retrieves the size of the initialization vector to TagElement at 0", "INS MethodDeclaration to EnumDeclaration at 24", "INS SimpleName: ivsize to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 25", "operations": ["INS SimpleName: getBlockSize to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: blocksize to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to EnumDeclaration at 25", "INS TextElement: Retrieves the block size for this cipher to TagElement at 0", "INS ReturnStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 26", "operations": ["INS TextElement: Retrieves the algorithm for this cipher to TagElement at 0", "INS SimpleName: algorithm to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to EnumDeclaration at 26", "INS Block to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS SimpleName: getAlgorithm to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 27", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to EnumDeclaration at 27", "INS TagElement to Javadoc at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: getTransformation to MethodDeclaration at 3", "INS TextElement: Retrieves the algorithm for this cipher to TagElement at 0", "INS Block to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: transformation to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 28", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: create to MethodDeclaration at 3", "INS MethodDeclaration to EnumDeclaration at 28"]}, {"root": "INS NumberLiteral: 0 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 0 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 0 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 0 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"None\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"None\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"None\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"None\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 24 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 24 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 24 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 24 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 32 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 32 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CBC/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 32 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 32 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"AES\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"AES/CTR/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 8 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 8 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"ARCFOUR\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"ARCFOUR\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"RC4\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"RC4\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 8 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 8 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 32 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 32 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"ARCFOUR\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"ARCFOUR\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"RC4\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"RC4\" to EnumConstantDeclaration at 5"]}, {"root": "INS NumberLiteral: 8 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 8 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"Blowfish\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"Blowfish\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"Blowfish/CBC/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"Blowfish/CBC/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "UPDATE from Constants.DES_CBC to Constants.TRIPLE_DES_CBC", "operations": ["UPD QualifiedName: Constants.DES_CBC from Constants.DES_CBC to Constants.TRIPLE_DES_CBC"]}, {"root": "INS NumberLiteral: 8 to EnumConstantDeclaration at 2", "operations": ["INS NumberLiteral: 8 to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 24 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 24 to EnumConstantDeclaration at 3"]}, {"root": "INS StringLiteral: \"DESede\" to EnumConstantDeclaration at 4", "operations": ["INS StringLiteral: \"DESede\" to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"DESede/CBC/NoPadding\" to EnumConstantDeclaration at 5", "operations": ["INS StringLiteral: \"DESede/CBC/NoPadding\" to EnumConstantDeclaration at 5"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: final to FieldDeclaration at 1", "MOV Modifier: private to FieldDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Cipher to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from AtomicReference to String", "operations": ["UPD SimpleName: AtomicReference from AtomicReference to String", "UPD SimpleName: Boolean from Boolean to String", "UPD SimpleName: Boolean from Boolean to String", "UPD SimpleName: AtomicReference from AtomicReference to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: AtomicReference to SimpleType: String at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Boolean to SimpleType: String at 0"]}, {"root": "UPDATE from facName to transformation", "operations": ["UPD SimpleName: facName from facName to transformation", "UPD SimpleName: _supported from _supported to transformation"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: _supported to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: Cipher to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Cipher to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: AtomicReference to SimpleType: String at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Boolean to SimpleType: String at 0"]}, {"root": "INS ClassInstanceCreation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: getIVSize to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: getTransformation to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 4", "INS SimpleName: getBlockSize to MethodInvocation at 0", "INS SimpleName: getAlgorithm to MethodInvocation at 0"]}, {"root": "UPDATE from DES_CBC to TRIPLE_DES_CBC", "operations": ["UPD SimpleName: DES_CBC from DES_CBC to TRIPLE_DES_CBC"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS InfixExpression: >= to ReturnStatement at 0", "INS InfixExpression: << to ParenthesizedExpression at 0", "INS SimpleName: maxKeyLength to InfixExpression: >= at 0", "INS MethodInvocation to InfixExpression: << at 1", "INS NumberLiteral: 1l to InfixExpression: << at 0", "INS SimpleName: getBlockSize to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS ParenthesizedExpression to InfixExpression: >= at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: BaseCipher to ClassInstanceCreation at 0"]}, {"root": "INS PrimitiveType: int to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: BaseRC4Cipher to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: getIVSize to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: getBlockSize to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: BaseRC4Cipher to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: getIVSize to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: getBlockSize to MethodInvocation at 0"]}, {"root": "UPDATE from t to maxKeyLength", "operations": ["UPD SimpleName: t from t to maxKeyLength"]}, {"root": "INS QualifiedName: javax.crypto.Cipher to MethodInvocation at 0", "operations": ["INS QualifiedName: javax.crypto.Cipher to MethodInvocation at 0"]}, {"root": "UPDATE from CipherUtils to getMaxAllowedKeyLength", "operations": ["UPD SimpleName: CipherUtils from CipherUtils to getMaxAllowedKeyLength"]}, {"root": "UPDATE from create to getAlgorithm", "operations": ["UPD SimpleName: create from create to getAlgorithm"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.atomic.AtomicReference", "DEL ImportDeclaration"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL StringLiteral: \"AES/CBC/NoPadding\"", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: Cipher", "DEL NumberLiteral: 16", "DEL ClassInstanceCreation", "DEL SimpleType: BaseCipher", "DEL MarkerAnnotation", "DEL NumberLiteral: 16", "DEL StringLiteral: \"AES\"", "DEL SimpleName: Override", "DEL SimpleName: BaseCipher", "DEL SimpleType: Cipher", "DEL AnonymousClassDeclaration", "DEL Block", "DEL SimpleName: create", "DEL Modifier: public"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL Modifier: public", "DEL AnonymousClassDeclaration", "DEL SimpleType: Cipher", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL NumberLiteral: 16", "DEL StringLiteral: \"AES/CTR/NoPadding\"", "DEL SimpleName: Cipher", "DEL ClassInstanceCreation", "DEL SimpleName: create", "DEL NumberLiteral: 16", "DEL SimpleType: BaseCipher", "DEL Block", "DEL StringLiteral: \"AES\"", "DEL ReturnStatement", "DEL SimpleName: BaseCipher", "DEL MethodDeclaration"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL Block", "DEL SimpleName: create", "DEL NumberLiteral: 16", "DEL StringLiteral: \"AES/CBC/NoPadding\"", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleName: BaseCipher", "DEL MethodDeclaration", "DEL Modifier: public", "DEL StringLiteral: \"AES\"", "DEL SimpleType: BaseCipher", "DEL NumberLiteral: 24", "DEL AnonymousClassDeclaration"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL NumberLiteral: 24", "DEL StringLiteral: \"AES/CTR/NoPadding\"", "DEL SimpleName: Cipher", "DEL StringLiteral: \"AES\"", "DEL Modifier: public", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: create", "DEL NumberLiteral: 16", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL SimpleName: Override", "DEL SimpleType: Cipher", "DEL SimpleType: BaseCipher", "DEL SimpleName: BaseCipher", "DEL MarkerAnnotation"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL SimpleName: create", "DEL NumberLiteral: 16", "DEL AnonymousClassDeclaration", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SimpleType: BaseCipher", "DEL StringLiteral: \"AES/CBC/NoPadding\"", "DEL SimpleName: BaseCipher", "DEL NumberLiteral: 32", "DEL Modifier: public", "DEL Block", "DEL StringLiteral: \"AES\""]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL NumberLiteral: 32", "DEL AnonymousClassDeclaration", "DEL ClassInstanceCreation", "DEL MarkerAnnotation", "DEL StringLiteral: \"AES\"", "DEL SimpleName: Override", "DEL Block", "DEL NumberLiteral: 16", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: create", "DEL StringLiteral: \"AES/CTR/NoPadding\"", "DEL SimpleType: BaseCipher", "DEL SimpleName: Cipher", "DEL ReturnStatement", "DEL SimpleName: BaseCipher", "DEL SimpleType: Cipher"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL SimpleType: Cipher", "operations": ["DEL SimpleType: Cipher", "DEL SimpleName: Cipher"]}, {"root": "DEL NumberLiteral: 8", "operations": ["DEL NumberLiteral: 8"]}, {"root": "DEL NumberLiteral: 16", "operations": ["DEL NumberLiteral: 16"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL SimpleType: Cipher", "operations": ["DEL SimpleType: Cipher", "DEL SimpleName: Cipher"]}, {"root": "DEL NumberLiteral: 8", "operations": ["DEL NumberLiteral: 8"]}, {"root": "DEL NumberLiteral: 32", "operations": ["DEL NumberLiteral: 32"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SimpleType: Cipher", "DEL SimpleName: BaseCipher", "DEL Modifier: public", "DEL SimpleName: Cipher", "DEL ReturnStatement", "DEL SimpleType: BaseCipher", "DEL StringLiteral: \"Blowfish\"", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: create", "DEL NumberLiteral: 16", "DEL StringLiteral: \"Blowfish/CBC/NoPadding\"", "DEL Block", "DEL AnonymousClassDeclaration", "DEL NumberLiteral: 8"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL ReturnStatement", "DEL NumberLiteral: 8", "DEL AnonymousClassDeclaration", "DEL Block", "DEL Modifier: public", "DEL SimpleName: create", "DEL StringLiteral: \"DESede/CBC/NoPadding\"", "DEL StringLiteral: \"DESede\"", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL NumberLiteral: 24"]}, {"root": "DEL SimpleType: Exception", "operations": ["DEL SimpleType: Exception", "DEL SimpleName: Exception"]}, {"root": "DEL SimpleName: checkSupported", "operations": ["DEL SimpleName: checkSupported"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: t", "DEL ExpressionStatement", "DEL NullLiteral", "DEL Assignment: =", "DEL SimpleName: value"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: value", "DEL QualifiedName: Boolean.FALSE", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: value", "operations": ["DEL SimpleName: value"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: facName", "DEL Assignment: =", "DEL SimpleName: BuiltinCiphers", "DEL ExpressionStatement", "DEL SimpleName: factoryName", "DEL MethodDeclaration", "DEL Block"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: AtomicReference", "DEL FieldDeclaration", "DEL SimpleType: Boolean", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL ParameterizedType: AtomicReference<>", "DEL SimpleType: AtomicReference", "DEL ParameterizedType: AtomicReference<Boolean>", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Modifier: public", "DEL SimpleName: value", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: value", "DEL SimpleName: _supported", "DEL Block", "DEL VariableDeclarationStatement", "DEL PrimitiveType: boolean", "DEL Block", "DEL IfStatement", "DEL InfixExpression: ==", "DEL SimpleName: _supported", "DEL SimpleName: isSupported", "DEL MethodInvocation", "DEL NullLiteral", "DEL MethodDeclaration", "DEL SimpleName: _supported", "DEL SimpleName: get", "DEL Assignment: =", "DEL SynchronizedStatement", "DEL SimpleName: set", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL SimpleType: Boolean", "DEL ExpressionStatement"]}]}}, {"BuiltinCiphers_diff": {"operations": ["Insert FieldDeclaration(166) into EnumDeclaration(646) at 17", "Insert FieldDeclaration(172) into EnumDeclaration(646) at 18", "Insert FieldDeclaration(179) into EnumDeclaration(646) at 19", "Insert FieldDeclaration(186) into EnumDeclaration(646) at 20", "Insert MethodDeclaration(248) into EnumDeclaration(646) at 22", "Insert MethodDeclaration(290) into EnumDeclaration(646) at 23", "Insert MethodDeclaration(301) into EnumDeclaration(646) at 24", "Insert MethodDeclaration(312) into EnumDeclaration(646) at 25", "Insert MethodDeclaration(324) into EnumDeclaration(646) at 26", "Insert MethodDeclaration(336) into EnumDeclaration(646) at 27", "Insert MethodDeclaration(356) into EnumDeclaration(646) at 28", "Insert NumberLiteral: 0(32) into EnumConstantDeclaration(49) at 2", "Insert NumberLiteral: 0(33) into EnumConstantDeclaration(49) at 3", "Insert StringLiteral: \"None\"(34) into EnumConstantDeclaration(49) at 4", "Insert StringLiteral: \"None\"(35) into EnumConstantDeclaration(49) at 5", "Insert NumberLiteral: 16(52) into EnumConstantDeclaration(56) at 2", "Insert NumberLiteral: 16(53) into EnumConstantDeclaration(56) at 3", "Insert StringLiteral: \"AES\"(54) into EnumConstantDeclaration(56) at 4", "Insert StringLiteral: \"AES/CBC/NoPadding\"(55) into EnumConstantDeclaration(56) at 5", "Insert NumberLiteral: 16(59) into EnumConstantDeclaration(63) at 2", "Insert NumberLiteral: 16(60) into EnumConstantDeclaration(63) at 3", "Insert StringLiteral: \"AES\"(61) into EnumConstantDeclaration(63) at 4", "Insert StringLiteral: \"AES/CTR/NoPadding\"(62) into EnumConstantDeclaration(63) at 5", "Insert NumberLiteral: 16(66) into EnumConstantDeclaration(70) at 2", "Insert NumberLiteral: 24(67) into EnumConstantDeclaration(70) at 3", "Insert StringLiteral: \"AES\"(68) into EnumConstantDeclaration(70) at 4", "Insert StringLiteral: \"AES/CBC/NoPadding\"(69) into EnumConstantDeclaration(70) at 5", "Insert NumberLiteral: 16(73) into EnumConstantDeclaration(77) at 2", "Insert NumberLiteral: 24(74) into EnumConstantDeclaration(77) at 3", "Insert StringLiteral: \"AES\"(75) into EnumConstantDeclaration(77) at 4", "Insert StringLiteral: \"AES/CTR/NoPadding\"(76) into EnumConstantDeclaration(77) at 5", "Insert NumberLiteral: 16(80) into EnumConstantDeclaration(84) at 2", "Insert NumberLiteral: 32(81) into EnumConstantDeclaration(84) at 3", "Insert StringLiteral: \"AES\"(82) into EnumConstantDeclaration(84) at 4", "Insert StringLiteral: \"AES/CBC/NoPadding\"(83) into EnumConstantDeclaration(84) at 5", "Insert NumberLiteral: 16(87) into EnumConstantDeclaration(91) at 2", "Insert NumberLiteral: 32(88) into EnumConstantDeclaration(91) at 3", "Insert StringLiteral: \"AES\"(89) into EnumConstantDeclaration(91) at 4", "Insert StringLiteral: \"AES/CTR/NoPadding\"(90) into EnumConstantDeclaration(91) at 5", "Insert NumberLiteral: 8(94) into EnumConstantDeclaration(115) at 2", "Insert NumberLiteral: 16(95) into EnumConstantDeclaration(115) at 3", "Insert StringLiteral: \"ARCFOUR\"(96) into EnumConstantDeclaration(115) at 4", "Insert StringLiteral: \"RC4\"(97) into EnumConstantDeclaration(115) at 5", "Insert NumberLiteral: 8(118) into EnumConstantDeclaration(139) at 2", "Insert NumberLiteral: 32(119) into EnumConstantDeclaration(139) at 3", "Insert StringLiteral: \"ARCFOUR\"(120) into EnumConstantDeclaration(139) at 4", "Insert StringLiteral: \"RC4\"(121) into EnumConstantDeclaration(139) at 5", "Insert NumberLiteral: 8(142) into EnumConstantDeclaration(146) at 2", "Insert NumberLiteral: 16(143) into EnumConstantDeclaration(146) at 3", "Insert StringLiteral: \"Blowfish\"(144) into EnumConstantDeclaration(146) at 4", "Insert StringLiteral: \"Blowfish/CBC/NoPadding\"(145) into EnumConstantDeclaration(146) at 5", "Update QualifiedName: Constants.DES_CBC(225) to Constants.TRIPLE_DES_CBC", "Insert NumberLiteral: 8(149) into EnumConstantDeclaration(153) at 2", "Insert NumberLiteral: 24(150) into EnumConstantDeclaration(153) at 3", "Insert StringLiteral: \"DESede\"(151) into EnumConstantDeclaration(153) at 4", "Insert StringLiteral: \"DESede/CBC/NoPadding\"(152) into EnumConstantDeclaration(153) at 5", "Insert Modifier: private(161) into FieldDeclaration(166) at 0", "Insert Modifier: final(162) into FieldDeclaration(166) at 1", "Insert PrimitiveType: int(163) into FieldDeclaration(166) at 2", "Insert VariableDeclarationFragment(165) into FieldDeclaration(166) at 3", "Insert Modifier: private(167) into FieldDeclaration(172) at 0", "Insert Modifier: final(168) into FieldDeclaration(172) at 1", "Insert PrimitiveType: int(169) into FieldDeclaration(172) at 2", "Insert VariableDeclarationFragment(171) into FieldDeclaration(172) at 3", "Move Modifier: private(273) into FieldDeclaration(179) at 0", "Move Modifier: final(274) into FieldDeclaration(179) at 1", "Insert SimpleType: String(176) into FieldDeclaration(179) at 2", "Insert VariableDeclarationFragment(178) into FieldDeclaration(179) at 3", "Insert Modifier: private(180) into FieldDeclaration(186) at 0", "Insert Modifier: final(181) into FieldDeclaration(186) at 1", "Insert SimpleType: String(183) into FieldDeclaration(186) at 2", "Insert VariableDeclarationFragment(185) into FieldDeclaration(186) at 3", "Insert SimpleName: BuiltinCiphers(198) into MethodDeclaration(248) at 0", "Insert SingleVariableDeclaration(202) into MethodDeclaration(248) at 1", "Insert SingleVariableDeclaration(205) into MethodDeclaration(248) at 2", "Insert SingleVariableDeclaration(208) into MethodDeclaration(248) at 3", "Insert SingleVariableDeclaration(212) into MethodDeclaration(248) at 4", "Move SingleVariableDeclaration(266) into MethodDeclaration(248) at 5", "Insert Block(247) into MethodDeclaration(248) at 6", "Move Javadoc(295) into MethodDeclaration(290) at 0", "Move MarkerAnnotation(297) into MethodDeclaration(290) at 1", "Insert Modifier: public(259) into MethodDeclaration(290) at 2", "Insert PrimitiveType: boolean(260) into MethodDeclaration(290) at 3", "Insert SimpleName: isSupported(261) into MethodDeclaration(290) at 4", "Insert Block(289) into MethodDeclaration(290) at 5", "Insert Javadoc(294) into MethodDeclaration(301) at 0", "Insert Modifier: public(295) into MethodDeclaration(301) at 1", "Insert PrimitiveType: int(296) into MethodDeclaration(301) at 2", "Insert SimpleName: getIVSize(297) into MethodDeclaration(301) at 3", "Insert Block(300) into MethodDeclaration(301) at 4", "Insert Javadoc(305) into MethodDeclaration(312) at 0", "Insert Modifier: public(306) into MethodDeclaration(312) at 1", "Insert PrimitiveType: int(307) into MethodDeclaration(312) at 2", "Insert SimpleName: getBlockSize(308) into MethodDeclaration(312) at 3", "Insert Block(311) into MethodDeclaration(312) at 4", "Insert Javadoc(316) into MethodDeclaration(324) at 0", "Insert Modifier: public(317) into MethodDeclaration(324) at 1", "Insert SimpleType: String(319) into MethodDeclaration(324) at 2", "Insert SimpleName: getAlgorithm(320) into MethodDeclaration(324) at 3", "Insert Block(323) into MethodDeclaration(324) at 4", "Insert Javadoc(328) into MethodDeclaration(336) at 0", "Insert Modifier: public(329) into MethodDeclaration(336) at 1", "Insert SimpleType: String(331) into MethodDeclaration(336) at 2", "Insert SimpleName: getTransformation(332) into MethodDeclaration(336) at 3", "Insert Block(335) into MethodDeclaration(336) at 4", "Move MarkerAnnotation(227) into MethodDeclaration(356) at 0", "Insert Modifier: public(339) into MethodDeclaration(356) at 1", "Move SimpleType: Cipher(230) into MethodDeclaration(356) at 2", "Insert SimpleName: create(342) into MethodDeclaration(356) at 3", "Insert Block(355) into MethodDeclaration(356) at 4", "Insert SimpleName: ivsize(164) into VariableDeclarationFragment(165) at 0", "Insert SimpleName: blocksize(170) into VariableDeclarationFragment(171) at 0", "Update SimpleName: AtomicReference(275) to String", "Move SimpleName: AtomicReference(275) into SimpleType: String(176) at 0", "Insert SimpleName: algorithm(177) into VariableDeclarationFragment(178) at 0", "Update SimpleName: Boolean(277) to String", "Move SimpleName: Boolean(277) into SimpleType: String(183) at 0", "Update SimpleName: _supported(280) to transformation", "Move SimpleName: _supported(280) into VariableDeclarationFragment(185) at 0", "Insert SimpleType: String(200) into SingleVariableDeclaration(202) at 0", "Insert SimpleName: factoryName(201) into SingleVariableDeclaration(202) at 1", "Insert PrimitiveType: int(203) into SingleVariableDeclaration(205) at 0", "Insert SimpleName: ivsize(204) into SingleVariableDeclaration(205) at 1", "Insert PrimitiveType: int(206) into SingleVariableDeclaration(208) at 0", "Insert SimpleName: blocksize(207) into SingleVariableDeclaration(208) at 1", "Insert SimpleType: String(210) into SingleVariableDeclaration(212) at 0", "Insert SimpleName: algorithm(211) into SingleVariableDeclaration(212) at 1", "Update SimpleName: facName(265) to transformation", "Insert ExpressionStatement(222) into Block(247) at 0", "Insert ExpressionStatement(228) into Block(247) at 1", "Insert ExpressionStatement(234) into Block(247) at 2", "Insert ExpressionStatement(240) into Block(247) at 3", "Insert ExpressionStatement(246) into Block(247) at 4", "Move TryStatement(342) into Block(289) at 0", "Insert TagElement(292) into Javadoc(294) at 0", "Insert TagElement: @return(293) into Javadoc(294) at 1", "Insert ReturnStatement(299) into Block(300) at 0", "Insert TagElement(303) into Javadoc(305) at 0", "Insert TagElement: @return(304) into Javadoc(305) at 1", "Insert ReturnStatement(310) into Block(311) at 0", "Insert TagElement(314) into Javadoc(316) at 0", "Insert TagElement: @return(315) into Javadoc(316) at 1", "Insert SimpleName: String(318) into SimpleType: String(319) at 0", "Insert ReturnStatement(322) into Block(323) at 0", "Insert TagElement(326) into Javadoc(328) at 0", "Insert TagElement: @return(327) into Javadoc(328) at 1", "Insert SimpleName: String(330) into SimpleType: String(331) at 0", "Insert ReturnStatement(334) into Block(335) at 0", "Move ReturnStatement(353) into Block(355) at 0", "Move MarkerAnnotation(91) into MethodDeclaration(113) at 0", "Move SimpleType: Cipher(94) into MethodDeclaration(113) at 3", "Move MarkerAnnotation(131) into MethodDeclaration(137) at 0", "Move SimpleType: Cipher(134) into MethodDeclaration(137) at 3", "Update SimpleName: AtomicReference(281) to String", "Move SimpleName: AtomicReference(281) into SimpleType: String(200) at 0", "Update SimpleName: Boolean(301) to String", "Move SimpleName: Boolean(301) into SimpleType: String(210) at 0", "Insert Assignment: =(221) into ExpressionStatement(222) at 0", "Insert Assignment: =(227) into ExpressionStatement(228) at 0", "Insert Assignment: =(233) into ExpressionStatement(234) at 0", "Insert Assignment: =(239) into ExpressionStatement(240) at 0", "Insert Assignment: =(245) into ExpressionStatement(246) at 0", "Insert TextElement: Retrieves the size of the initialization vector(291) into TagElement(292) at 0", "Insert SimpleName: ivsize(298) into ReturnStatement(299) at 0", "Insert TextElement: Retrieves the block size for this cipher(302) into TagElement(303) at 0", "Insert SimpleName: blocksize(309) into ReturnStatement(310) at 0", "Insert TextElement: Retrieves the algorithm for this cipher(313) into TagElement(314) at 0", "Insert SimpleName: algorithm(321) into ReturnStatement(322) at 0", "Insert TextElement: Retrieves the algorithm for this cipher(325) into TagElement(326) at 0", "Insert SimpleName: transformation(333) into ReturnStatement(334) at 0", "Insert ClassInstanceCreation(353) into ReturnStatement(354) at 0", "Update SimpleName: DES_CBC(640) to TRIPLE_DES_CBC", "Insert FieldAccess(219) into Assignment: =(221) at 0", "Insert SimpleName: factoryName(220) into Assignment: =(221) at 1", "Insert FieldAccess(225) into Assignment: =(227) at 0", "Insert SimpleName: ivsize(226) into Assignment: =(227) at 1", "Insert FieldAccess(231) into Assignment: =(233) at 0", "Insert SimpleName: blocksize(232) into Assignment: =(233) at 1", "Insert FieldAccess(237) into Assignment: =(239) at 0", "Insert SimpleName: algorithm(238) into Assignment: =(239) at 1", "Insert FieldAccess(243) into Assignment: =(245) at 0", "Insert SimpleName: transformation(244) into Assignment: =(245) at 1", "Insert ReturnStatement(278) into Block(279) at 1", "Move SimpleType: BaseCipher(233) into ClassInstanceCreation(353) at 0", "Insert MethodInvocation(346) into ClassInstanceCreation(353) at 1", "Insert MethodInvocation(348) into ClassInstanceCreation(353) at 2", "Insert MethodInvocation(350) into ClassInstanceCreation(353) at 3", "Insert MethodInvocation(352) into ClassInstanceCreation(353) at 4", "Insert ThisExpression(217) into FieldAccess(219) at 0", "Insert SimpleName: factoryName(218) into FieldAccess(219) at 1", "Insert ThisExpression(223) into FieldAccess(225) at 0", "Insert SimpleName: ivsize(224) into FieldAccess(225) at 1", "Insert ThisExpression(229) into FieldAccess(231) at 0", "Insert SimpleName: blocksize(230) into FieldAccess(231) at 1", "Insert ThisExpression(235) into FieldAccess(237) at 0", "Insert SimpleName: algorithm(236) into FieldAccess(237) at 1", "Insert ThisExpression(241) into FieldAccess(243) at 0", "Insert SimpleName: transformation(242) into FieldAccess(243) at 1", "Insert PrimitiveType: int(262) into VariableDeclarationStatement(270) at 0", "Insert InfixExpression: >=(277) into ReturnStatement(278) at 0", "Insert ReturnStatement(285) into Block(286) at 0", "Insert SimpleName: getIVSize(345) into MethodInvocation(346) at 0", "Insert SimpleName: getBlockSize(347) into MethodInvocation(348) at 0", "Insert SimpleName: getAlgorithm(349) into MethodInvocation(350) at 0", "Insert SimpleName: getTransformation(351) into MethodInvocation(352) at 0", "Move SimpleType: BaseRC4Cipher(195) into ClassInstanceCreation(110) at 0", "Insert MethodInvocation(107) into ClassInstanceCreation(110) at 1", "Insert MethodInvocation(109) into ClassInstanceCreation(110) at 2", "Move SimpleType: BaseRC4Cipher(177) into ClassInstanceCreation(134) at 0", "Insert MethodInvocation(131) into ClassInstanceCreation(134) at 1", "Insert MethodInvocation(133) into ClassInstanceCreation(134) at 2", "Update SimpleName: t(317) to maxKeyLength", "Insert SimpleName: maxKeyLength(271) into InfixExpression: >=(277) at 0", "Insert ParenthesizedExpression(276) into InfixExpression: >=(277) at 1", "Insert BooleanLiteral: false(284) into ReturnStatement(285) at 0", "Insert SimpleName: getIVSize(106) into MethodInvocation(107) at 0", "Insert SimpleName: getBlockSize(108) into MethodInvocation(109) at 0", "Insert SimpleName: getIVSize(130) into MethodInvocation(131) at 0", "Insert SimpleName: getBlockSize(132) into MethodInvocation(133) at 0", "Insert QualifiedName: javax.crypto.Cipher(264) into MethodInvocation(268) at 0", "Update SimpleName: CipherUtils(318) to getMaxAllowedKeyLength", "Insert InfixExpression: <<(275) into ParenthesizedExpression(276) at 0", "Update SimpleName: create(320) to getAlgorithm", "Insert NumberLiteral: 1l(272) into InfixExpression: <<(275) at 0", "Insert MethodInvocation(274) into InfixExpression: <<(275) at 1", "Insert SimpleName: getBlockSize(273) into MethodInvocation(274) at 0", "Delete QualifiedName: java.util.concurrent.atomic.AtomicReference(8)", "Delete ImportDeclaration(9)", "Delete SimpleName: Override(50)", "Delete MarkerAnnotation(51)", "Delete Modifier: public(52)", "Delete SimpleName: Cipher(53)", "Delete SimpleType: Cipher(54)", "Delete SimpleName: create(55)", "Delete SimpleName: BaseCipher(56)", "Delete SimpleType: BaseCipher(57)", "Delete NumberLiteral: 16(58)", "Delete NumberLiteral: 16(59)", "Delete StringLiteral: \"AES\"(60)", "Delete StringLiteral: \"AES/CBC/NoPadding\"(61)", "Delete ClassInstanceCreation(62)", "Delete ReturnStatement(63)", "Delete Block(64)", "Delete MethodDeclaration(65)", "Delete AnonymousClassDeclaration(66)", "Delete SimpleName: Override(70)", "Delete MarkerAnnotation(71)", "Delete Modifier: public(72)", "Delete SimpleName: Cipher(73)", "Delete SimpleType: Cipher(74)", "Delete SimpleName: create(75)", "Delete SimpleName: BaseCipher(76)", "Delete SimpleType: BaseCipher(77)", "Delete NumberLiteral: 16(78)", "Delete NumberLiteral: 16(79)", "Delete StringLiteral: \"AES\"(80)", "Delete StringLiteral: \"AES/CTR/NoPadding\"(81)", "Delete ClassInstanceCreation(82)", "Delete ReturnStatement(83)", "Delete Block(84)", "Delete MethodDeclaration(85)", "Delete AnonymousClassDeclaration(86)", "Delete Modifier: public(92)", "Delete SimpleName: create(95)", "Delete SimpleName: BaseCipher(96)", "Delete SimpleType: BaseCipher(97)", "Delete NumberLiteral: 16(98)", "Delete NumberLiteral: 24(99)", "Delete StringLiteral: \"AES\"(100)", "Delete StringLiteral: \"AES/CBC/NoPadding\"(101)", "Delete ClassInstanceCreation(102)", "Delete ReturnStatement(103)", "Delete Block(104)", "Delete MethodDeclaration(105)", "Delete AnonymousClassDeclaration(106)", "Delete SimpleName: Override(110)", "Delete MarkerAnnotation(111)", "Delete Modifier: public(112)", "Delete SimpleName: Cipher(113)", "Delete SimpleType: Cipher(114)", "Delete SimpleName: create(115)", "Delete SimpleName: BaseCipher(116)", "Delete SimpleType: BaseCipher(117)", "Delete NumberLiteral: 16(118)", "Delete NumberLiteral: 24(119)", "Delete StringLiteral: \"AES\"(120)", "Delete StringLiteral: \"AES/CTR/NoPadding\"(121)", "Delete ClassInstanceCreation(122)", "Delete ReturnStatement(123)", "Delete Block(124)", "Delete MethodDeclaration(125)", "Delete AnonymousClassDeclaration(126)", "Delete Modifier: public(132)", "Delete SimpleName: create(135)", "Delete SimpleName: BaseCipher(136)", "Delete SimpleType: BaseCipher(137)", "Delete NumberLiteral: 16(138)", "Delete NumberLiteral: 32(139)", "Delete StringLiteral: \"AES\"(140)", "Delete StringLiteral: \"AES/CBC/NoPadding\"(141)", "Delete ClassInstanceCreation(142)", "Delete ReturnStatement(143)", "Delete Block(144)", "Delete MethodDeclaration(145)", "Delete AnonymousClassDeclaration(146)", "Delete SimpleName: Override(150)", "Delete MarkerAnnotation(151)", "Delete Modifier: public(152)", "Delete SimpleName: Cipher(153)", "Delete SimpleType: Cipher(154)", "Delete SimpleName: create(155)", "Delete SimpleName: BaseCipher(156)", "Delete SimpleType: BaseCipher(157)", "Delete NumberLiteral: 16(158)", "Delete NumberLiteral: 32(159)", "Delete StringLiteral: \"AES\"(160)", "Delete StringLiteral: \"AES/CTR/NoPadding\"(161)", "Delete ClassInstanceCreation(162)", "Delete ReturnStatement(163)", "Delete Block(164)", "Delete MethodDeclaration(165)", "Delete AnonymousClassDeclaration(166)", "Delete SimpleName: Override(170)", "Delete MarkerAnnotation(171)", "Delete SimpleName: Cipher(173)", "Delete SimpleType: Cipher(174)", "Delete NumberLiteral: 8(178)", "Delete NumberLiteral: 16(179)", "Delete SimpleName: Override(188)", "Delete MarkerAnnotation(189)", "Delete SimpleName: Cipher(191)", "Delete SimpleType: Cipher(192)", "Delete NumberLiteral: 8(196)", "Delete NumberLiteral: 32(197)", "Delete SimpleName: Override(206)", "Delete MarkerAnnotation(207)", "Delete Modifier: public(208)", "Delete SimpleName: Cipher(209)", "Delete SimpleType: Cipher(210)", "Delete SimpleName: create(211)", "Delete SimpleName: BaseCipher(212)", "Delete SimpleType: BaseCipher(213)", "Delete NumberLiteral: 8(214)", "Delete NumberLiteral: 16(215)", "Delete StringLiteral: \"Blowfish\"(216)", "Delete StringLiteral: \"Blowfish/CBC/NoPadding\"(217)", "Delete ClassInstanceCreation(218)", "Delete ReturnStatement(219)", "Delete Block(220)", "Delete MethodDeclaration(221)", "Delete AnonymousClassDeclaration(222)", "Delete Modifier: public(228)", "Delete SimpleName: create(231)", "Delete NumberLiteral: 8(234)", "Delete NumberLiteral: 24(235)", "Delete StringLiteral: \"DESede\"(236)", "Delete StringLiteral: \"DESede/CBC/NoPadding\"(237)", "Delete ClassInstanceCreation(238)", "Delete ReturnStatement(239)", "Delete Block(240)", "Delete MethodDeclaration(241)", "Delete AnonymousClassDeclaration(242)", "Delete SimpleName: Exception(315)", "Delete SimpleType: Exception(316)", "Delete SimpleName: checkSupported(319)", "Delete SimpleName: value(325)", "Delete SimpleName: t(326)", "Delete NullLiteral(327)", "Delete InfixExpression: ==(328)", "Delete Assignment: =(329)", "Delete ExpressionStatement(330)", "Delete SimpleName: value(336)", "Delete QualifiedName: Boolean.FALSE(337)", "Delete Assignment: =(338)", "Delete ExpressionStatement(339)", "Delete SimpleName: value(352)", "Delete SimpleName: BuiltinCiphers(262)", "Delete SimpleName: factoryName(267)", "Delete SimpleName: facName(268)", "Delete Assignment: =(269)", "Delete ExpressionStatement(270)", "Delete Block(271)", "Delete MethodDeclaration(272)", "Delete SimpleType: AtomicReference(276)", "Delete SimpleType: Boolean(278)", "Delete ParameterizedType: AtomicReference<Boolean>(279)", "Delete SimpleType: AtomicReference(282)", "Delete ParameterizedType: AtomicReference<>(283)", "Delete NullLiteral(284)", "Delete ClassInstanceCreation(285)", "Delete VariableDeclarationFragment(286)", "Delete FieldDeclaration(287)", "Delete Modifier: public(298)", "Delete PrimitiveType: boolean(299)", "Delete SimpleName: isSupported(300)", "Delete SimpleType: Boolean(302)", "Delete SimpleName: value(303)", "Delete VariableDeclarationFragment(304)", "Delete VariableDeclarationStatement(305)", "Delete SimpleName: _supported(306)", "Delete SimpleName: value(307)", "Delete SimpleName: _supported(308)", "Delete SimpleName: get(309)", "Delete MethodInvocation(310)", "Delete Assignment: =(311)", "Delete ParenthesizedExpression(312)", "Delete NullLiteral(313)", "Delete InfixExpression: ==(314)", "Delete SimpleName: _supported(343)", "Delete SimpleName: set(344)", "Delete SimpleName: value(345)", "Delete MethodInvocation(346)", "Delete ExpressionStatement(347)", "Delete Block(348)", "Delete IfStatement(349)", "Delete Block(350)", "Delete SynchronizedStatement(351)", "Delete Block(354)", "Delete MethodDeclaration(355)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 1, "testing": "True", "maintenance": "True", "build": "False"}]}