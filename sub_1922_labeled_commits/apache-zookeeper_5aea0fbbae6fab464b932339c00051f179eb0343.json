{"application": "apache-zookeeper", "csha": "5aea0fbbae6fab464b932339c00051f179eb0343", "files": [{"DataTree_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 62", "operations": ["INS ExpressionStatement to Block at 0", "INS TextElement: Summary of the watches on the datatree. to TagElement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: dumpWatchesSummary to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: pwriter to TagElement: @param at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 62", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS SimpleName: dataWatches to MethodInvocation at 0", "INS Modifier: synchronized to MethodDeclaration at 2", "INS TextElement:  the output to write to to TagElement: @param at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 63", "operations": ["INS ExpressionStatement to Block at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement: Warning, this is expensive, use sparingly! to TagElement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: pwriter to TagElement: @param at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: byPath to MethodInvocation at 3", "INS Modifier: synchronized to MethodDeclaration at 2", "INS SimpleName: pwriter to MethodInvocation at 2", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: dataWatches to MethodInvocation at 0", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 63", "INS Block to MethodDeclaration at 7", "INS TextElement:  the output to write to to TagElement: @param at 1", "INS TextElement: Write a text dump of all the watches on the datatree. to TagElement at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: byPath to SingleVariableDeclaration at 1", "INS SimpleName: dumpWatches to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 64", "operations": ["INS SimpleName: pwriter to TagElement: @param at 0", "INS MethodDeclaration to TypeDeclaration: class at 64", "INS TagElement to Javadoc at 0", "INS SimpleName: println to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS TextElement: Write a text dump of all the ephemerals in the datatree. to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS TextElement:  the output to write to to TagElement: @param at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: dumpEphemerals to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: dumpEphemerals to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "UPDATE from dumpEphemerals to dumpWatches", "operations": ["UPD SimpleName: dumpEphemerals from dumpEphemerals to dumpWatches"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV EnhancedForStatement to Block at 2"]}, {"root": "UPDATE from StringBuilder to PrintWriter", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to PrintWriter", "UPD SimpleName: StringBuilder from StringBuilder to PrintWriter", "UPD SimpleName: String from String to PrintWriter"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: String to SimpleType: PrintWriter at 0"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: StringBuilder to SimpleType: PrintWriter at 0"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: StringBuilder to SimpleType: PrintWriter at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1", "MOV StringLiteral: \"):\\n\" to InfixExpression: + at 2", "MOV StringLiteral: \"Sessions with Ephemerals (\" to InfixExpression: + at 0"]}, {"root": "UPDATE from \"):\\n\" to \"):\"", "operations": ["UPD StringLiteral: \"):\\n\" from \"):\\n\" to \"):\""]}, {"root": "UPDATE from sb to pwriter", "operations": ["UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sb from sb to pwriter"]}, {"root": "UPDATE from append to print", "operations": ["UPD SimpleName: append from append to print"]}, {"root": "UPDATE from append to println", "operations": ["UPD SimpleName: append from append to println", "UPD SimpleName: append from append to println"]}, {"root": "UPDATE from \":\\n\" to \":\"", "operations": ["UPD StringLiteral: \":\\n\" from \":\\n\" to \":\""]}, {"root": "DEL StringLiteral: \"\\n\"", "operations": ["DEL StringLiteral: \"\\n\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: sb", "DEL SimpleType: StringBuilder", "DEL SimpleName: sb", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: toString", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleType: StringBuilder", "DEL InfixExpression: +", "DEL VariableDeclarationStatement"]}]}}, {"DataTree_diff": {"operations": ["Insert ImportDeclaration(20) into CompilationUnit(4514) at 2", "Insert QualifiedName: java.io.PrintWriter(19) into ImportDeclaration(20) at 0", "Insert MethodDeclaration(4104) into TypeDeclaration: class(4513) at 62", "Insert MethodDeclaration(4130) into TypeDeclaration: class(4513) at 63", "Insert MethodDeclaration(4216) into TypeDeclaration: class(4513) at 64", "Insert Javadoc(4087) into MethodDeclaration(4104) at 0", "Move Modifier: public(4080) into MethodDeclaration(4104) at 1", "Insert Modifier: synchronized(4089) into MethodDeclaration(4104) at 2", "Insert PrimitiveType: void(4090) into MethodDeclaration(4104) at 3", "Insert SimpleName: dumpWatchesSummary(4091) into MethodDeclaration(4104) at 4", "Insert SingleVariableDeclaration(4095) into MethodDeclaration(4104) at 5", "Insert Block(4103) into MethodDeclaration(4104) at 6", "Insert Javadoc(4111) into MethodDeclaration(4130) at 0", "Insert Modifier: public(4112) into MethodDeclaration(4130) at 1", "Insert Modifier: synchronized(4113) into MethodDeclaration(4130) at 2", "Insert PrimitiveType: void(4114) into MethodDeclaration(4130) at 3", "Update SimpleName: dumpEphemerals(4083) to dumpWatches", "Move SimpleName: dumpEphemerals(4083) into MethodDeclaration(4130) at 4", "Insert SingleVariableDeclaration(4119) into MethodDeclaration(4130) at 5", "Insert SingleVariableDeclaration(4122) into MethodDeclaration(4130) at 6", "Insert Block(4129) into MethodDeclaration(4130) at 7", "Insert Javadoc(4136) into MethodDeclaration(4216) at 0", "Insert Modifier: public(4137) into MethodDeclaration(4216) at 1", "Insert PrimitiveType: void(4138) into MethodDeclaration(4216) at 2", "Insert SimpleName: dumpEphemerals(4139) into MethodDeclaration(4216) at 3", "Insert SingleVariableDeclaration(4143) into MethodDeclaration(4216) at 4", "Insert Block(4215) into MethodDeclaration(4216) at 5", "Insert TagElement(4083) into Javadoc(4087) at 0", "Insert TagElement: @param(4086) into Javadoc(4087) at 1", "Insert SimpleType: PrintWriter(4093) into SingleVariableDeclaration(4095) at 0", "Insert SimpleName: pwriter(4094) into SingleVariableDeclaration(4095) at 1", "Insert ExpressionStatement(4102) into Block(4103) at 0", "Insert TagElement(4107) into Javadoc(4111) at 0", "Insert TagElement: @param(4110) into Javadoc(4111) at 1", "Insert SimpleType: PrintWriter(4117) into SingleVariableDeclaration(4119) at 0", "Insert SimpleName: pwriter(4118) into SingleVariableDeclaration(4119) at 1", "Insert PrimitiveType: boolean(4120) into SingleVariableDeclaration(4122) at 0", "Insert SimpleName: byPath(4121) into SingleVariableDeclaration(4122) at 1", "Insert ExpressionStatement(4128) into Block(4129) at 0", "Insert TagElement(4132) into Javadoc(4136) at 0", "Insert TagElement: @param(4135) into Javadoc(4136) at 1", "Insert SimpleType: PrintWriter(4141) into SingleVariableDeclaration(4143) at 0", "Insert SimpleName: pwriter(4142) into SingleVariableDeclaration(4143) at 1", "Move VariableDeclarationStatement(4094) into Block(4215) at 0", "Insert ExpressionStatement(4164) into Block(4215) at 1", "Move EnhancedForStatement(4159) into Block(4215) at 2", "Insert TextElement: Summary of the watches on the datatree.(4082) into TagElement(4083) at 0", "Insert SimpleName: pwriter(4084) into TagElement: @param(4086) at 0", "Insert TextElement:  the output to write to(4085) into TagElement: @param(4086) at 1", "Update SimpleName: String(4081) to PrintWriter", "Move SimpleName: String(4081) into SimpleType: PrintWriter(4093) at 0", "Insert MethodInvocation(4101) into ExpressionStatement(4102) at 0", "Insert TextElement: Write a text dump of all the watches on the datatree.(4105) into TagElement(4107) at 0", "Insert TextElement: Warning, this is expensive, use sparingly!(4106) into TagElement(4107) at 1", "Insert SimpleName: pwriter(4108) into TagElement: @param(4110) at 0", "Insert TextElement:  the output to write to(4109) into TagElement: @param(4110) at 1", "Update SimpleName: StringBuilder(4095) to PrintWriter", "Move SimpleName: StringBuilder(4095) into SimpleType: PrintWriter(4117) at 0", "Insert MethodInvocation(4127) into ExpressionStatement(4128) at 0", "Insert TextElement: Write a text dump of all the ephemerals in the datatree.(4131) into TagElement(4132) at 0", "Insert SimpleName: pwriter(4133) into TagElement: @param(4135) at 0", "Insert TextElement:  the output to write to(4134) into TagElement: @param(4135) at 1", "Update SimpleName: StringBuilder(4098) to PrintWriter", "Move SimpleName: StringBuilder(4098) into SimpleType: PrintWriter(4141) at 0", "Insert MethodInvocation(4163) into ExpressionStatement(4164) at 0", "Insert SimpleName: pwriter(4096) into MethodInvocation(4101) at 0", "Insert SimpleName: print(4097) into MethodInvocation(4101) at 1", "Insert MethodInvocation(4100) into MethodInvocation(4101) at 2", "Insert SimpleName: dataWatches(4123) into MethodInvocation(4127) at 0", "Insert SimpleName: dumpWatches(4124) into MethodInvocation(4127) at 1", "Insert SimpleName: pwriter(4125) into MethodInvocation(4127) at 2", "Insert SimpleName: byPath(4126) into MethodInvocation(4127) at 3", "Insert SimpleName: pwriter(4155) into MethodInvocation(4163) at 0", "Insert SimpleName: println(4156) into MethodInvocation(4163) at 1", "Insert InfixExpression: +(4162) into MethodInvocation(4163) at 2", "Insert SimpleName: dataWatches(4098) into MethodInvocation(4100) at 0", "Insert SimpleName: toString(4099) into MethodInvocation(4100) at 1", "Move StringLiteral: \"Sessions with Ephemerals (\"(4100) into InfixExpression: +(4162) at 0", "Move MethodInvocation(4103) into InfixExpression: +(4162) at 1", "Update StringLiteral: \"):\\n\"(4104) to \"):\"", "Move StringLiteral: \"):\\n\"(4104) into InfixExpression: +(4162) at 2", "Update SimpleName: sb(4113) to pwriter", "Update SimpleName: append(4114) to print", "Update SimpleName: sb(4123) to pwriter", "Update SimpleName: append(4124) to println", "Update StringLiteral: \":\\n\"(4125) to \":\"", "Update SimpleName: sb(4146) to pwriter", "Update SimpleName: append(4147) to println", "Delete StringLiteral: \"\\n\"(4150)", "Delete SimpleType: String(4082)", "Delete SimpleType: StringBuilder(4096)", "Delete SimpleName: sb(4097)", "Delete SimpleType: StringBuilder(4099)", "Delete InfixExpression: +(4105)", "Delete ClassInstanceCreation(4106)", "Delete VariableDeclarationFragment(4107)", "Delete VariableDeclarationStatement(4108)", "Delete SimpleName: sb(4160)", "Delete SimpleName: toString(4161)", "Delete MethodInvocation(4162)", "Delete ReturnStatement(4163)", "Delete Block(4164)", "Delete MethodDeclaration(4165)"]}}, {"FinalRequestProcessor_cluster": {"actions": [{"root": "UPDATE from \"SETD\" to \"SETA\"", "operations": ["UPD StringLiteral: \"SETD\" from \"SETD\" to \"SETA\""]}]}}, {"FinalRequestProcessor_diff": {"operations": ["Update StringLiteral: \"SETD\"(589) to \"SETA\""]}}, {"NIOServerCnxn_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.BufferedWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: java.io.StringWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.io.Writer to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 31", "operations": ["INS SimpleName: consCmd to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"cons\" to MethodInvocation at 0", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 31", "INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 32", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS StringLiteral: \"crst\" to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: crstCmd to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 32", "INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 33", "operations": ["INS PrimitiveType: int to FieldDeclaration at 3", "INS MethodInvocation to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 33", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Modifier: private to FieldDeclaration at 0", "INS StringLiteral: \"dump\" to MethodInvocation at 0", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: dumpCmd to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 34", "operations": ["INS Modifier: static to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: enviCmd to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 34", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS StringLiteral: \"envi\" to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: int to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 35", "operations": ["INS SimpleName: getTraceMaskCmd to VariableDeclarationFragment at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS StringLiteral: \"gtmk\" to MethodInvocation at 0", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 35", "INS Modifier: final to FieldDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleName: wrap to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 36", "INS SimpleName: ruokCmd to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 2", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"ruok\" to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 37", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: int to FieldDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: setTraceMaskCmd to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 37", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: getBytes to MethodInvocation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to MethodInvocation at 2", "INS FieldDeclaration to TypeDeclaration: class at 38", "INS PrimitiveType: int to FieldDeclaration at 3", "INS StringLiteral: \"srvr\" to MethodInvocation at 0", "INS SimpleName: srvrCmd to VariableDeclarationFragment at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 39", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 39", "INS Modifier: static to FieldDeclaration at 2", "INS StringLiteral: \"srst\" to MethodInvocation at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: int to FieldDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getBytes to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 40", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS FieldDeclaration to TypeDeclaration: class at 40", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: statCmd to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS StringLiteral: \"stat\" to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 41", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: wchcCmd to VariableDeclarationFragment at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"wchc\" to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 41"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 42", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Modifier: static to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 42", "INS PrimitiveType: int to FieldDeclaration at 3", "INS StringLiteral: \"wchp\" to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: wchpCmd to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 43", "operations": ["INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS SimpleName: wchsCmd to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 43", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: getInt to MethodInvocation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 44", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: Integer to ParameterizedType: HashMap<Integer,String> at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS Modifier: final to FieldDeclaration at 1", "INS ParameterizedType: HashMap<Integer,String> to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to ParameterizedType: HashMap<Integer,String> at 2", "INS FieldDeclaration to TypeDeclaration: class at 44", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<Integer,String> at 0", "INS Modifier: static to FieldDeclaration at 2"]}, {"root": "INS Initializer to TypeDeclaration: class at 45", "operations": ["INS StringLiteral: \"wchc\" to MethodInvocation at 3", "INS StringLiteral: \"stat\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 9", "INS SimpleName: statCmd to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 7", "INS SimpleName: wchcCmd to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"wchp\" to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: srstCmd to MethodInvocation at 2", "INS SimpleName: cmd2String to MethodInvocation at 0", "INS SimpleName: cmd2String to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"ruok\" to MethodInvocation at 3", "INS StringLiteral: \"srst\" to MethodInvocation at 3", "INS Initializer to TypeDeclaration: class at 45", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cmd2String to MethodInvocation at 0", "INS Block to Initializer at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS ExpressionStatement to Block at 10", "INS ExpressionStatement to Block at 4", "INS ExpressionStatement to Block at 11", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: srvrCmd to MethodInvocation at 2", "INS Modifier: static to Initializer at 0", "INS ExpressionStatement to Block at 8", "INS SimpleName: cmd2String to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"srvr\" to MethodInvocation at 3", "INS SimpleName: wchpCmd to MethodInvocation at 2", "INS StringLiteral: \"gtmk\" to MethodInvocation at 3", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 46", "operations": ["INS ParenthesizedExpression to InfixExpression: || at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: StringBuffer to FieldDeclaration at 1", "INS SimpleName: SendBufferWriter to TypeDeclaration: class at 2", "INS Block to SynchronizedStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS NumberLiteral: 2048 to InfixExpression: > at 1", "INS SimpleName: sel to TagElement: @param at 0", "INS TextElement: This class wraps the sendBuffer method of NIOServerCnxn. It is to TagElement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS IfStatement to Block at 0", "INS SimpleName: off to SingleVariableDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: checkFlush to MethodInvocation at 0", "INS SimpleName: cbuf to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: than cons'ing up a response fully in memory, which may be large to TagElement at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: close to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to InfixExpression: > at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: Writer to SimpleType: Writer at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS TextElement: Wakeup the selector. This is necessary as the cnxn is to TagElement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Dimension to ArrayType: char[] at 1", "INS Block to MethodDeclaration at 5", "INS TextElement: for some commands, this class chunks up the result. to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: sb to InfixExpression: == at 0", "INS SimpleType: Writer to TypeDeclaration: class at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 1", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: write to MethodDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: force to SingleVariableDeclaration at 1", "INS SimpleName: factory to SynchronizedStatement at 0", "INS TextElement:  the new interest ops to TagElement: @param at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS TypeDeclaration: class to TypeDeclaration: class at 46", "INS SimpleName: sel to SingleVariableDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS TextElement: Check if we are ready to send another chunk. to TagElement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: || to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SynchronizedStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS IfStatement to Block at 0", "INS BooleanLiteral: true to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleType: IOException to MethodDeclaration at 4", "INS Javadoc to TypeDeclaration: class at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: sb to Assignment: = at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: checkFlush to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: flush to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS TextElement:  force sending, even if not a full chunk to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS InfixExpression: > to InfixExpression: && at 1", "INS ArrayType: char[] to SingleVariableDeclaration at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement: waiting for interestOps to be satisfied. If we want the to TagElement at 1", "INS SimpleName: force to InfixExpression: && at 0", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS TextElement: responsible for chunking up the response to a client. Rather to TagElement at 1", "INS InfixExpression: > to InfixExpression: || at 1", "INS BooleanLiteral: true to MethodInvocation at 1", "INS TextElement: selector to wakeup immediately (rather than the last to TagElement at 2", "INS SimpleName: force to TagElement: @param at 0", "INS SimpleName: checkFlush to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: wakeup to MethodDeclaration at 3", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement: select(timeout) period) we need to force a wakeup. to TagElement at 3", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS TagElement to Javadoc at 0", "INS ReturnStatement to IfStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: private to MethodDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 47", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 47", "INS Modifier: final to FieldDeclaration at 2", "INS StringLiteral: \"This ZooKeeper instance is not currently serving requests\" to VariableDeclarationFragment at 1", "INS SimpleName: ZK_NOT_SERVING to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 48", "operations": ["INS StringLiteral: \"Zookeeper version: \" to MethodInvocation at 2", "INS SimpleName: pwriter to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Thread to SimpleType: Thread at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: traceMask to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ExpressionStatement to Block at 4", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: dumpEphemerals to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: traceMask to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS BooleanLiteral: true to ReturnStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: Thread to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: factory.cnxns to SynchronizedStatement at 0", "INS VariableDeclarationStatement to Block at 4", "INS Block to IfStatement at 1", "INS SimpleName: zk to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: start to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS SimpleName: len to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 1", "INS SynchronizedStatement to Block at 2", "INS ReturnStatement to Block at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: zk to InfixExpression: == at 0", "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS Block to IfStatement at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: PrintWriter to VariableDeclarationStatement at 1", "INS IfStatement to IfStatement at 2", "INS InfixExpression: == to InfixExpression: || at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 5", "INS Block to IfStatement at 1", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: BufferedWriter to SimpleType: BufferedWriter at 0", "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: SelectionKey to SimpleType: SelectionKey at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 2", "INS Block to IfStatement at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to IfStatement at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS InfixExpression: || to InfixExpression: || at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to SynchronizedStatement at 1", "INS SimpleName: Thread to SimpleType: Thread at 0", "INS SimpleType: BufferedWriter to ClassInstanceCreation at 0", "INS SimpleName: println to MethodInvocation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: len to InfixExpression: == at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: NIOServerCnxn to SimpleType: NIOServerCnxn at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: threadWillClosePWriter to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS ExpressionStatement to Block at 5", "INS ReturnStatement to Block at 1", "INS IfStatement to Block at 2", "INS SimpleName: len to InfixExpression: == at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: threadWillClosePWriter to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 48", "INS IfStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS SimpleName: k to SingleVariableDeclaration at 2", "INS SimpleName: flush to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: println to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS ExpressionStatement to Block at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: pwriter to VariableDeclarationFragment at 0", "INS SimpleName: threadWillClosePWriter to Assignment: = at 0", "INS SimpleName: println to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS IfStatement to IfStatement at 2", "INS Block to TryStatement at 1", "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS Modifier: private to MethodDeclaration at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS MarkerAnnotation to MethodDeclaration at 1", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS TryStatement to Block at 6", "INS ExpressionStatement to Block at 3", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: SendBufferWriter to SimpleType: SendBufferWriter at 0", "INS SimpleName: wchcCmd to InfixExpression: == at 1", "INS ReturnStatement to Block at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: SelectionKey to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: threadWillClosePWriter to Assignment: = at 0", "INS StringLiteral: \"Environment:\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: zk to InfixExpression: == at 0", "INS SimpleName: wchsCmd to InfixExpression: == at 1", "INS SimpleName: checkFourLetterWord to MethodDeclaration at 3", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: zk to MethodInvocation at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleType: Thread to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS QualifiedName: zk.sessionTracker to MethodInvocation at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 1", "INS ParameterizedType: HashSet<NIOServerCnxn> to VariableDeclarationStatement at 0", "INS IfStatement to Block at 0", "INS Block to TryStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: PrintWriter to ClassInstanceCreation at 0", "INS SimpleName: wchpCmd to InfixExpression: == at 1", "INS SimpleName: run to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS IfStatement to IfStatement at 2", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 0", "INS SimpleType: SendBufferWriter to ClassInstanceCreation at 0", "INS SimpleType: NIOServerCnxn to ParameterizedType: HashSet<NIOServerCnxn> at 1", "INS SimpleName: threadWillClosePWriter to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS IfStatement to IfStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS Modifier: public to MethodDeclaration at 2", "INS StringLiteral: \"=\" to MethodInvocation at 2", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS Block to TryStatement at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<NIOServerCnxn> at 0", "INS SimpleName: zk to InfixExpression: == at 0", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: zk to InfixExpression: == at 0", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: env to EnhancedForStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: len to SingleVariableDeclaration at 2", "INS IfStatement to IfStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: cnxns to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: println to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS Block to TryStatement at 0", "INS SimpleName: threadWillClosePWriter to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Clients:\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "UPDATE from resp to srstCmd", "operations": ["UPD SimpleName: resp from resp to srstCmd"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: resp to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from sb to cmd2String", "operations": ["UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: LOG from LOG to cmd2String", "UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: sendBuffer from sendBuffer to cmd2String", "UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: sb from sb to cmd2String", "UPD SimpleName: k from k to cmd2String"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1", "MOV SimpleName: sb to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV ExpressionStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV ExpressionStatement to Block at 12", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ReturnStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3", "MOV ExpressionStatement to Block at 3", "MOV IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 7"]}, {"root": "INS Modifier: synchronized to MethodDeclaration at 2", "operations": ["INS Modifier: synchronized to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 3", "operations": ["INS PrimitiveType: void to MethodDeclaration at 3"]}, {"root": "UPDATE from toString to dumpConnectionInfo", "operations": ["UPD SimpleName: toString from toString to dumpConnectionInfo", "UPD SimpleName: toString from toString to dumpConnectionInfo", "UPD SimpleName: toString from toString to dumpConnectionInfo", "UPD SimpleName: toString from toString to dumpConnectionInfo"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: pwriter to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS Block to MethodDeclaration at 8"]}, {"root": "UPDATE from getRemoteSocketAddress to getInt", "operations": ["UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to getInt", "UPD SimpleName: resp from resp to getInt", "UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to getInt", "UPD SimpleName: LOG from LOG to getInt", "UPD SimpleName: k from k to getInt", "UPD SimpleName: k from k to getInt", "UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to getInt", "UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to getInt", "UPD SimpleName: sendBuffer from sendBuffer to getInt", "UPD SimpleName: resp from resp to getInt"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: k to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: resp to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: resp to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: k to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from StringBuilder to String", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to String", "UPD SimpleName: StringBuilder from StringBuilder to String", "UPD SimpleType: StringBuilder from StringBuilder to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: StringBuilder to SimpleType: String at 0"]}, {"root": "INS ParameterizedType: HashMap<Integer,String> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Integer to ParameterizedType: HashMap<Integer,String> at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS ParameterizedType: HashMap<Integer,String> to ClassInstanceCreation at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<Integer,String> at 0"]}, {"root": "UPDATE from StringBuilder to StringBuffer", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to StringBuffer", "UPD SimpleType: StringBuilder from StringBuilder to StringBuffer", "UPD SimpleName: StringBuilder from StringBuilder to StringBuffer"]}, {"root": "MOVE from SimpleType: StringBuffer", "operations": ["MOV SimpleName: StringBuilder to SimpleType: StringBuffer at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: sb to VariableDeclarationFragment at 0", "MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from != to ==", "operations": ["UPD InfixExpression: != from != to =="]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: StringWriter to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: StringWriter to SimpleType: StringWriter at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: sw to VariableDeclarationFragment at 0", "INS SimpleType: StringWriter to ClassInstanceCreation at 0", "INS SimpleName: StringWriter to SimpleType: StringWriter at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: pwriter to VariableDeclarationFragment at 0", "INS SimpleName: sw to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS SimpleType: PrintWriter to VariableDeclarationStatement at 0", "INS SimpleType: PrintWriter to ClassInstanceCreation at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: pwriter to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: flush to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: close to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS SimpleName: sw to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ReturnStatement to Block at 5", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from sock to ByteBuffer", "operations": ["UPD SimpleName: sock from sock to ByteBuffer", "UPD SimpleName: sendBuffer from sendBuffer to ByteBuffer", "UPD SimpleName: resp from resp to ByteBuffer", "UPD SimpleName: k from k to ByteBuffer", "UPD SimpleName: sendBuffer from sendBuffer to ByteBuffer", "UPD SimpleName: resp from resp to ByteBuffer", "UPD SimpleName: LOG from LOG to ByteBuffer", "UPD SimpleName: LOG from LOG to ByteBuffer", "UPD SimpleName: LOG from LOG to ByteBuffer"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: info to MethodInvocation at 1"]}, {"root": "UPDATE from flip to wrap", "operations": ["UPD SimpleName: flip from flip to wrap", "UPD SimpleName: socket from socket to wrap", "UPD SimpleName: putLong from putLong to wrap", "UPD SimpleName: info from info to wrap", "UPD SimpleName: info from info to wrap", "UPD SimpleName: resp from resp to wrap", "UPD SimpleName: allocate from allocate to wrap", "UPD SimpleName: allocate from allocate to wrap", "UPD SimpleName: info from info to wrap", "UPD SimpleName: imok from imok to wrap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: duplicate to MethodInvocation at 1", "MOV SimpleName: imok to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: info to MethodInvocation at 1", "MOV SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: flip to MethodInvocation at 1", "MOV SimpleName: resp to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: k to MethodInvocation at 0", "MOV SimpleName: interestOps to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getBytes to MethodInvocation at 1", "INS StringLiteral: \"stmk\" to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: allocate to MethodInvocation at 1", "MOV SimpleName: ByteBuffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 0", "MOV SimpleName: allocate to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: traceMask to MethodInvocation at 1", "MOV SimpleName: putLong to MethodInvocation at 1", "MOV SimpleName: resp to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 0", "MOV SimpleName: resp to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: info to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: HashMap<Integer,String>", "operations": ["MOV SimpleType: String to ParameterizedType: HashMap<Integer,String> at 2"]}, {"root": "INS SimpleName: put to MethodInvocation at 1", "operations": ["INS SimpleName: put to MethodInvocation at 1"]}, {"root": "UPDATE from append to consCmd", "operations": ["UPD SimpleName: append from append to consCmd"]}, {"root": "UPDATE from \"SessionTracker dump: \\n\" to \"cons\"", "operations": ["UPD StringLiteral: \"SessionTracker dump: \\n\" from \"SessionTracker dump: \\n\" to \"cons\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from append to put", "operations": ["UPD SimpleName: append from append to put", "UPD SimpleName: interestOps from interestOps to put", "UPD SimpleName: append from append to put", "UPD SimpleName: packetReceived from packetReceived to put", "UPD SimpleName: toString from toString to put", "UPD SimpleName: info from info to put", "UPD SimpleName: ByteBuffer from ByteBuffer to put"]}, {"root": "UPDATE from append to crstCmd", "operations": ["UPD SimpleName: append from append to crstCmd"]}, {"root": "UPDATE from \"\\n\" to \"crst\"", "operations": ["UPD StringLiteral: \"\\n\" from \"\\n\" to \"crst\""]}, {"root": "INS SimpleName: put to MethodInvocation at 1", "operations": ["INS SimpleName: put to MethodInvocation at 1"]}, {"root": "UPDATE from append to dumpCmd", "operations": ["UPD SimpleName: append from append to dumpCmd"]}, {"root": "UPDATE from \"ephemeral nodes dump:\\n\" to \"dump\"", "operations": ["UPD StringLiteral: \"ephemeral nodes dump:\\n\" from \"ephemeral nodes dump:\\n\" to \"dump\""]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from append to enviCmd", "operations": ["UPD SimpleName: append from append to enviCmd"]}, {"root": "UPDATE from \"\\n\" to \"envi\"", "operations": ["UPD StringLiteral: \"\\n\" from \"\\n\" to \"envi\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: wrap to MethodInvocation at 2", "MOV SimpleName: ByteBuffer to MethodInvocation at 1"]}, {"root": "UPDATE from wrap to getTraceMaskCmd", "operations": ["UPD SimpleName: wrap from wrap to getTraceMaskCmd"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toString to MethodInvocation at 1", "MOV SimpleName: sb to MethodInvocation at 0"]}, {"root": "UPDATE from getBytes to ruokCmd", "operations": ["UPD SimpleName: getBytes from getBytes to ruokCmd"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 2"]}, {"root": "INS SimpleName: setTraceMaskCmd to MethodInvocation at 2", "operations": ["INS SimpleName: setTraceMaskCmd to MethodInvocation at 2"]}, {"root": "INS StringLiteral: \"stmk\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"stmk\" to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: info to MethodInvocation at 1", "MOV SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS SimpleName: cmd2String to MethodInvocation at 0", "operations": ["INS SimpleName: cmd2String to MethodInvocation at 0"]}, {"root": "INS SimpleName: wchsCmd to MethodInvocation at 2", "operations": ["INS SimpleName: wchsCmd to MethodInvocation at 2"]}, {"root": "INS StringLiteral: \"wchs\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"wchs\" to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from sb to cmd", "operations": ["UPD SimpleName: sb from sb to cmd", "UPD SimpleName: zk from zk to cmd"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: len to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: cmd2String to MethodInvocation at 0"]}, {"root": "UPDATE from sb to LOG", "operations": ["UPD SimpleName: sb from sb to LOG"]}, {"root": "INS SimpleName: info to MethodInvocation at 1", "operations": ["INS SimpleName: info to MethodInvocation at 1"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS StringLiteral: \"Processing \" to InfixExpression: + at 0", "INS SimpleName: cmd to InfixExpression: + at 1", "INS StringLiteral: \" command from \" to InfixExpression: + at 2", "INS InfixExpression: + to MethodInvocation at 2"]}, {"root": "UPDATE from Prints brief stats information for the connection. to Prints detailed stats information for the connection.", "operations": ["UPD TextElement: Prints brief stats information for the connection. from Prints brief stats information for the connection. to Prints detailed stats information for the connection."]}, {"root": "UPDATE from  toString(boolean) for detailed stats to  dumpConnectionInfo(PrintWriter, boolean) for brief stats", "operations": ["UPD TextElement:  toString(boolean) for detailed stats from  toString(boolean) for detailed stats to  dumpConnectionInfo(PrintWriter, boolean) for brief stats"]}, {"root": "UPDATE from StringBuilder to PrintWriter", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to PrintWriter"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: StringBuilder to SimpleType: PrintWriter at 0"]}, {"root": "UPDATE from sock to getBytes", "operations": ["UPD SimpleName: sock from sock to getBytes", "UPD SimpleName: sock from sock to getBytes", "UPD SimpleName: duplicate from duplicate to getBytes", "UPD SimpleName: traceMask from traceMask to getBytes", "UPD SimpleName: sock from sock to getBytes", "UPD SimpleName: ByteBuffer from ByteBuffer to getBytes", "UPD SimpleName: interestOps from interestOps to getBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sock to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sock to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sock to MethodInvocation at 1"]}, {"root": "UPDATE from \"ZooKeeper not active \\n\" to \"wchs\"", "operations": ["UPD StringLiteral: \"ZooKeeper not active \\n\" from \"ZooKeeper not active \\n\" to \"wchs\""]}, {"root": "UPDATE from StringBuilder to Integer", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to Integer"]}, {"root": "MOVE from SimpleType: Integer", "operations": ["MOV SimpleName: StringBuilder to SimpleType: Integer at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from k to wakeup", "operations": ["UPD SimpleName: k from k to wakeup", "UPD SimpleName: append from append to wakeup", "UPD SimpleName: sb from sb to wakeup"]}, {"root": "UPDATE from append to sb", "operations": ["UPD SimpleName: append from append to sb", "UPD SimpleName: LOG from LOG to sb"]}, {"root": "UPDATE from info to append", "operations": ["UPD SimpleName: info from info to append"]}, {"root": "UPDATE from sock to cbuf", "operations": ["UPD SimpleName: sock from sock to cbuf"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: socket to MethodInvocation at 3", "MOV SimpleName: sock to MethodInvocation at 2"]}, {"root": "UPDATE from socket to off", "operations": ["UPD SimpleName: socket from socket to off"]}, {"root": "UPDATE from getRemoteSocketAddress to len", "operations": ["UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to len"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 4"]}, {"root": "UPDATE from packetReceived to checkFlush", "operations": ["UPD SimpleName: packetReceived from packetReceived to checkFlush"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 1", "operations": ["INS BooleanLiteral: false to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV BooleanLiteral: false to MethodInvocation at 2", "MOV SimpleName: toString to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" \" to MethodInvocation at 2", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS ExpressionStatement to Block at 7", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS ExpressionStatement to Block at 8", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS BooleanLiteral: true to ReturnStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV SynchronizedStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 2", "MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to ExpressionStatement at 0", "MOV StringLiteral: \"[\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from append to length", "operations": ["UPD SimpleName: append from append to length", "UPD SimpleName: append from append to length"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS InfixExpression: | to MethodInvocation at 1", "operations": ["INS InfixExpression: | to MethodInvocation at 1", "INS QualifiedName: SelectionKey.OP_WRITE to InfixExpression: | at 1", "INS QualifiedName: SelectionKey.OP_READ to InfixExpression: | at 0"]}, {"root": "UPDATE from append to setLength", "operations": ["UPD SimpleName: append from append to setLength"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from sb to sk", "operations": ["UPD SimpleName: sb from sb to sk", "UPD SimpleName: sb from sb to sk"]}, {"root": "UPDATE from append to interestOps", "operations": ["UPD SimpleName: append from append to interestOps"]}, {"root": "INS SimpleName: sel to MethodInvocation at 2", "operations": ["INS SimpleName: sel to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from k to pwriter", "operations": ["UPD SimpleName: k from k to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: ByteBuffer from ByteBuffer to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sock from sock to pwriter", "UPD SimpleName: sendBuffer from sendBuffer to pwriter", "UPD SimpleName: k from k to pwriter", "UPD SimpleName: ByteBuffer from ByteBuffer to pwriter", "UPD SimpleName: LOG from LOG to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sendBuffer from sendBuffer to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sock from sock to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: k from k to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sock from sock to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: k from k to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: ByteBuffer from ByteBuffer to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: packetReceived from packetReceived to pwriter", "UPD SimpleName: LOG from LOG to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: packetReceived from packetReceived to pwriter", "UPD SimpleName: ByteBuffer from ByteBuffer to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: getRemoteSocketAddress from getRemoteSocketAddress to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sendBuffer from sendBuffer to pwriter"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from append to print", "operations": ["UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: info from info to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: wrap from wrap to print", "UPD SimpleName: append from append to print", "UPD SimpleName: wrap from wrap to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: interestOps from interestOps to print", "UPD SimpleName: info from info to print", "UPD SimpleName: append from append to print"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \"](queued=\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \",recved=\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \",sent=\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from append to println", "operations": ["UPD SimpleName: append from append to println", "UPD SimpleName: append from append to println", "UPD SimpleName: socket from socket to println", "UPD SimpleName: interestOps from interestOps to println", "UPD SimpleName: socket from socket to println", "UPD SimpleName: toString from toString to println", "UPD SimpleName: append from append to println", "UPD SimpleName: interestOps from interestOps to println", "UPD SimpleName: socket from socket to println"]}, {"root": "UPDATE from \")\\n\" to \")\"", "operations": ["UPD StringLiteral: \")\\n\" from \")\\n\" to \")\""]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cnxn to MethodInvocation at 2", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: s to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2"]}, {"root": "UPDATE from append to selector", "operations": ["UPD SimpleName: append from append to selector"]}, {"root": "UPDATE from \"ZooKeeperServer not running\\n\" to \"imok\"", "operations": ["UPD StringLiteral: \"ZooKeeperServer not running\\n\" from \"ZooKeeperServer not running\\n\" to \"imok\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from interestOps to flush", "operations": ["UPD SimpleName: interestOps from interestOps to flush", "UPD SimpleName: wrap from wrap to flush"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV SimpleName: sb to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 6"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 11"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS ExpressionStatement to Block at 13", "INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 14"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 15", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: print to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 16"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS ExpressionStatement to Block at 17", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 18", "operations": ["INS ExpressionStatement to Block at 18", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 19", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 19"]}, {"root": "INS ExpressionStatement to Block at 20", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 20"]}, {"root": "INS ExpressionStatement to Block at 21", "operations": ["INS ExpressionStatement to Block at 21", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 22", "operations": ["INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 22"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: incomingBuffer to MethodInvocation at 0", "INS SimpleName: clear to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 0", "MOV SimpleName: wrap to MethodInvocation at 1"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ReturnStatement to Block at 3", "MOV ExpressionStatement to Block at 5", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: toString to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV StringLiteral: \",sid=0x\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",lop=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \",est=\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",to=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV SimpleName: sb to MethodInvocation at 0", "MOV StringLiteral: \",lzxid=0x\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",lresp=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \",llat=\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",minlat=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",avglat=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",maxlat=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "INS NumberLiteral: 2 to ClassInstanceCreation at 1", "operations": ["INS NumberLiteral: 2 to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: println to MethodInvocation at 1", "operations": ["INS SimpleName: println to MethodInvocation at 1"]}, {"root": "INS StringLiteral: \"Server stats reset.\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"Server stats reset.\" to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: sb to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: info to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sock to MethodInvocation at 0", "MOV SimpleName: socket to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from \"Environment:\\n\" to \"Connection stats reset.\"", "operations": ["UPD StringLiteral: \"Environment:\\n\" from \"Environment:\\n\" to \"Connection stats reset.\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \",lcxid=0x\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 0"]}, {"root": "UPDATE from getBytes to start", "operations": ["UPD SimpleName: getBytes from getBytes to start"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 0", "operations": ["INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS CastExpression to Assignment: = at 1", "INS SimpleType: HashSet to ParameterizedType: HashSet<NIOServerCnxn> at 0", "INS Block to TryStatement at 1", "INS QualifiedName: factory.cnxns to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to SynchronizedStatement at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: NIOServerCnxn to SimpleType: NIOServerCnxn at 0", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Thread to ClassInstanceCreation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: run to MethodDeclaration at 4", "INS TryStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 2", "INS QualifiedName: factory.cnxns to SynchronizedStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cnxns to Assignment: = at 0", "INS SimpleName: flush to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS ClassInstanceCreation to MethodInvocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: NIOServerCnxn to SimpleType: NIOServerCnxn at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SynchronizedStatement to Block at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS ParameterizedType: HashSet<NIOServerCnxn> to VariableDeclarationStatement at 0", "INS SimpleType: NIOServerCnxn to ParameterizedType: HashSet<NIOServerCnxn> at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleType: HashSet to ParameterizedType: HashSet<NIOServerCnxn> at 0", "INS SimpleType: NIOServerCnxn to ParameterizedType: HashSet<NIOServerCnxn> at 1", "INS ParameterizedType: HashSet<NIOServerCnxn> to CastExpression at 0", "INS SimpleName: Thread to SimpleType: Thread at 0", "INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 3", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: cnxns to VariableDeclarationFragment at 0", "INS SimpleName: clone to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: start to MethodInvocation at 1", "operations": ["INS SimpleName: start to MethodInvocation at 1"]}, {"root": "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "operations": ["INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 0", "operations": ["INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: dt to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: dt to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: dumpWatches to MethodInvocation at 1", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: dt to MethodInvocation at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: dt to VariableDeclarationFragment at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: wchsCmd to InfixExpression: == at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: wchpCmd to InfixExpression: == at 1", "INS SimpleName: flush to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Thread to ClassInstanceCreation at 0", "INS SimpleName: Thread to SimpleType: Thread at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 2", "INS Block to TryStatement at 1", "INS SimpleName: len to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS SimpleType: DataTree to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS Block to TryStatement at 0", "INS SimpleName: len to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: DataTree to SimpleType: DataTree at 0", "INS SimpleName: dumpWatchesSummary to MethodInvocation at 1", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SimpleName: pwriter to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: close to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Block to IfStatement at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: pwriter to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: start to MethodInvocation at 1", "operations": ["INS SimpleName: start to MethodInvocation at 1"]}, {"root": "INS SimpleName: println to MethodInvocation at 1", "operations": ["INS SimpleName: println to MethodInvocation at 1"]}, {"root": "INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2", "operations": ["INS SimpleName: ZK_NOT_SERVING to MethodInvocation at 2"]}, {"root": "UPDATE from \"=\" to \"SessionTracker dump:\"", "operations": ["UPD StringLiteral: \"=\" from \"=\" to \"SessionTracker dump:\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"=\" to MethodInvocation at 2"]}, {"root": "UPDATE from append to dumpSessions", "operations": ["UPD SimpleName: append from append to dumpSessions"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 2"]}, {"root": "UPDATE from \"\\n\" to \"ephemeral nodes dump:\"", "operations": ["UPD StringLiteral: \"\\n\" from \"\\n\" to \"ephemeral nodes dump:\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 0", "MOV SimpleName: wrap to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: toString to MethodInvocation at 1"]}, {"root": "UPDATE from toString to close", "operations": ["UPD SimpleName: toString from toString to close"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: info to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sock to MethodInvocation at 0", "MOV SimpleName: socket to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 0", "MOV SimpleName: wrap to MethodInvocation at 1"]}, {"root": "UPDATE from \"Server stats reset.\\n\" to \"Node count: \"", "operations": ["UPD StringLiteral: \"Server stats reset.\\n\" from \"Server stats reset.\\n\" to \"Node count: \""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"Server stats reset.\\n\" to MethodInvocation at 2"]}, {"root": "INS SimpleName: cnxns to EnhancedForStatement at 1", "operations": ["INS SimpleName: cnxns to EnhancedForStatement at 1"]}, {"root": "INS SimpleName: cnxns to EnhancedForStatement at 1", "operations": ["INS SimpleName: cnxns to EnhancedForStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: socket to MethodInvocation at 1", "MOV SimpleName: sock to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteSocketAddress to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: sendBuffer to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleType: HashSet to ParameterizedType: HashSet<NIOServerCnxn> at 0", "INS QualifiedName: factory.cnxns to MethodInvocation at 0", "INS ParameterizedType: HashSet<NIOServerCnxn> to CastExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: cnxns to Assignment: = at 0", "INS SimpleType: NIOServerCnxn to ParameterizedType: HashSet<NIOServerCnxn> at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: NIOServerCnxn to SimpleType: NIOServerCnxn at 0", "INS MethodInvocation to CastExpression at 1", "INS CastExpression to Assignment: = at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: pwriter to MethodInvocation at 2", "operations": ["INS SimpleName: pwriter to MethodInvocation at 2"]}, {"root": "UPDATE from true to false", "operations": ["UPD BooleanLiteral: true from true to false"]}, {"root": "UPDATE from dumpEphemerals to getDataTree", "operations": ["UPD SimpleName: dumpEphemerals from dumpEphemerals to getDataTree"]}, {"root": "INS SimpleName: pwriter to MethodInvocation at 2", "operations": ["INS SimpleName: pwriter to MethodInvocation at 2"]}, {"root": "UPDATE from false to true", "operations": ["UPD BooleanLiteral: false from false to true"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ByteBuffer to MethodInvocation at 2"]}, {"root": "UPDATE from getBytes to dumpWatches", "operations": ["UPD SimpleName: getBytes from getBytes to dumpWatches"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1"]}, {"root": "UPDATE from packetReceived to clone", "operations": ["UPD SimpleName: packetReceived from packetReceived to clone"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: packetReceived to MethodInvocation at 1"]}, {"root": "DEL SimpleType: StringBuilder", "operations": ["DEL SimpleType: StringBuilder"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: toString", "DEL MethodInvocation", "DEL QualifiedName: zk.sessionTracker", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL QualifiedName: SelectionKey.OP_WRITE", "operations": ["DEL QualifiedName: SelectionKey.OP_WRITE"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \"Clients:\\n\"", "operations": ["DEL StringLiteral: \"Clients:\\n\""]}, {"root": "DEL SynchronizedStatement", "operations": ["DEL Block", "DEL SynchronizedStatement", "DEL QualifiedName: factory.cnxns"]}, {"root": "DEL StringLiteral: \"\\n\"", "operations": ["DEL StringLiteral: \"\\n\""]}, {"root": "DEL StringLiteral: \"Node count: \"", "operations": ["DEL StringLiteral: \"Node count: \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: append", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"\\n\""]}, {"root": "DEL StringLiteral: \"ZooKeeperServer not running\\n\"", "operations": ["DEL StringLiteral: \"ZooKeeperServer not running\\n\""]}, {"root": "DEL SimpleName: interestOps", "operations": ["DEL SimpleName: interestOps"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL StringLiteral: \"Processing cons command from \""]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: StringBuilder", "DEL ClassInstanceCreation", "DEL SimpleType: StringBuilder"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \"\\n\"", "operations": ["DEL StringLiteral: \"\\n\""]}, {"root": "DEL QualifiedName: SelectionKey.OP_WRITE", "operations": ["DEL QualifiedName: SelectionKey.OP_WRITE"]}, {"root": "DEL QualifiedName: SelectionKey.OP_WRITE", "operations": ["DEL QualifiedName: SelectionKey.OP_WRITE"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL QualifiedName: factory.cnxns", "operations": ["DEL QualifiedName: factory.cnxns"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: sb", "DEL SimpleName: append", "DEL MethodInvocation"]}, {"root": "DEL QualifiedName: SelectionKey.OP_WRITE", "operations": ["DEL QualifiedName: SelectionKey.OP_WRITE"]}, {"root": "DEL QualifiedName: factory.cnxns", "operations": ["DEL QualifiedName: factory.cnxns"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: sb", "DEL MethodInvocation", "DEL SimpleName: append"]}, {"root": "DEL SimpleName: LOG", "operations": ["DEL SimpleName: LOG"]}, {"root": "DEL SimpleName: info", "operations": ["DEL SimpleName: info"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL StringLiteral: \"Processing crst command from \"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: +"]}, {"root": "DEL SimpleName: sendBuffer", "operations": ["DEL SimpleName: sendBuffer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"Connection stats reset.\\n\"", "DEL MethodInvocation", "DEL SimpleName: wrap"]}, {"root": "DEL QualifiedName: SelectionKey.OP_WRITE", "operations": ["DEL QualifiedName: SelectionKey.OP_WRITE"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: incomingBuffer", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: println", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL QualifiedName: SelectionKey.OP_WRITE", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: len", "DEL SimpleName: traceMask", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 8", "DEL IfStatement", "DEL MethodInvocation", "DEL QualifiedName: factory.cnxns", "DEL ExpressionStatement", "DEL StringLiteral: \"Processing getracemask command from \"", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: info", "DEL StringLiteral: \"srvr\"", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"Zookeeper version: \"", "DEL StringLiteral: \"Processing settracemask command from \"", "DEL ExpressionStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrimitiveType: boolean", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: flip", "DEL MethodInvocation", "DEL SimpleName: checkFourLetterWord", "DEL InfixExpression: +", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: socket", "DEL StringLiteral: \"Processing dump command from \"", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL IfStatement", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL StringLiteral: \"rc=\"", "DEL VariableDeclarationFragment", "DEL SimpleType: StringBuilder", "DEL SimpleType: SelectionKey", "DEL Block", "DEL NullLiteral", "DEL IfStatement", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL QualifiedName: System.out", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getRemoteSocketAddress", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL QualifiedName: SelectionKey.OP_WRITE", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: ByteBuffer", "DEL SimpleName: socket", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL StringLiteral: \"stat\"", "DEL SimpleName: allocate", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: getBytes", "DEL SimpleName: SelectionKey", "DEL SimpleName: putLong", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL SimpleName: interestOps", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: socket", "DEL IfStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: packetReceived", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 8", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: ByteBuffer", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"Processing srst command from \"", "DEL SimpleName: k", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: zk", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: resp", "DEL MethodInvocation", "DEL NumberLiteral: 8", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL StringLiteral: \"Processing envi command from \"", "DEL IfStatement", "DEL QualifiedName: SelectionKey.OP_WRITE", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \" command from \"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: sb", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: resp", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: ByteBuffer", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL StringLiteral: \"\\n\"", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL StringLiteral: \"Processing ruok command from \"", "DEL Block", "DEL SimpleName: rc", "DEL InfixExpression: +", "DEL IfStatement", "DEL SimpleName: statCmd", "DEL Block", "DEL StringLiteral: \"Processing \"", "DEL SimpleName: sendBuffer", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: ByteBuffer", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SynchronizedStatement", "DEL IfStatement", "DEL Block", "DEL SimpleName: env", "DEL SimpleName: append", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: packetReceived", "DEL SimpleName: interestOps", "DEL SimpleName: packetReceived", "DEL SimpleName: getBytes", "DEL ParenthesizedExpression"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \" \""]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL SimpleName: sb", "DEL SimpleName: sb", "DEL Block", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: toString", "DEL SimpleName: StringBuilder"]}]}}, {"NIOServerCnxn_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(5181) at 1", "Insert ImportDeclaration(26) into CompilationUnit(5181) at 5", "Insert ImportDeclaration(28) into CompilationUnit(5181) at 6", "Insert ImportDeclaration(30) into CompilationUnit(5181) at 7", "Insert QualifiedName: java.io.BufferedWriter(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: java.io.PrintWriter(25) into ImportDeclaration(26) at 0", "Insert QualifiedName: java.io.StringWriter(27) into ImportDeclaration(28) at 0", "Insert QualifiedName: java.io.Writer(29) into ImportDeclaration(30) at 0", "Insert FieldDeclaration(2423) into TypeDeclaration: class(5180) at 31", "Insert FieldDeclaration(2438) into TypeDeclaration: class(5180) at 32", "Insert FieldDeclaration(2453) into TypeDeclaration: class(5180) at 33", "Insert FieldDeclaration(2468) into TypeDeclaration: class(5180) at 34", "Insert FieldDeclaration(2483) into TypeDeclaration: class(5180) at 35", "Insert FieldDeclaration(2498) into TypeDeclaration: class(5180) at 36", "Insert FieldDeclaration(2513) into TypeDeclaration: class(5180) at 37", "Insert FieldDeclaration(2528) into TypeDeclaration: class(5180) at 38", "Insert FieldDeclaration(2543) into TypeDeclaration: class(5180) at 39", "Insert FieldDeclaration(2558) into TypeDeclaration: class(5180) at 40", "Insert FieldDeclaration(2573) into TypeDeclaration: class(5180) at 41", "Insert FieldDeclaration(2588) into TypeDeclaration: class(5180) at 42", "Insert FieldDeclaration(2603) into TypeDeclaration: class(5180) at 43", "Insert FieldDeclaration(2624) into TypeDeclaration: class(5180) at 44", "Insert Initializer(2705) into TypeDeclaration: class(5180) at 45", "Insert TypeDeclaration: class(2878) into TypeDeclaration: class(5180) at 46", "Insert FieldDeclaration(2887) into TypeDeclaration: class(5180) at 47", "Insert MethodDeclaration(3580) into TypeDeclaration: class(5180) at 48", "Insert Modifier: private(2409) into FieldDeclaration(2423) at 0", "Insert Modifier: final(2410) into FieldDeclaration(2423) at 1", "Insert Modifier: static(2411) into FieldDeclaration(2423) at 2", "Insert PrimitiveType: int(2412) into FieldDeclaration(2423) at 3", "Insert VariableDeclarationFragment(2422) into FieldDeclaration(2423) at 4", "Insert Modifier: private(2424) into FieldDeclaration(2438) at 0", "Insert Modifier: final(2425) into FieldDeclaration(2438) at 1", "Insert Modifier: static(2426) into FieldDeclaration(2438) at 2", "Insert PrimitiveType: int(2427) into FieldDeclaration(2438) at 3", "Insert VariableDeclarationFragment(2437) into FieldDeclaration(2438) at 4", "Insert Modifier: private(2439) into FieldDeclaration(2453) at 0", "Insert Modifier: final(2440) into FieldDeclaration(2453) at 1", "Insert Modifier: static(2441) into FieldDeclaration(2453) at 2", "Insert PrimitiveType: int(2442) into FieldDeclaration(2453) at 3", "Insert VariableDeclarationFragment(2452) into FieldDeclaration(2453) at 4", "Insert Modifier: private(2454) into FieldDeclaration(2468) at 0", "Insert Modifier: final(2455) into FieldDeclaration(2468) at 1", "Insert Modifier: static(2456) into FieldDeclaration(2468) at 2", "Insert PrimitiveType: int(2457) into FieldDeclaration(2468) at 3", "Insert VariableDeclarationFragment(2467) into FieldDeclaration(2468) at 4", "Insert Modifier: private(2469) into FieldDeclaration(2483) at 0", "Insert Modifier: final(2470) into FieldDeclaration(2483) at 1", "Insert Modifier: static(2471) into FieldDeclaration(2483) at 2", "Insert PrimitiveType: int(2472) into FieldDeclaration(2483) at 3", "Insert VariableDeclarationFragment(2482) into FieldDeclaration(2483) at 4", "Insert Modifier: private(2484) into FieldDeclaration(2498) at 0", "Insert Modifier: final(2485) into FieldDeclaration(2498) at 1", "Insert Modifier: static(2486) into FieldDeclaration(2498) at 2", "Insert PrimitiveType: int(2487) into FieldDeclaration(2498) at 3", "Insert VariableDeclarationFragment(2497) into FieldDeclaration(2498) at 4", "Insert Modifier: private(2499) into FieldDeclaration(2513) at 0", "Insert Modifier: final(2500) into FieldDeclaration(2513) at 1", "Insert Modifier: static(2501) into FieldDeclaration(2513) at 2", "Insert PrimitiveType: int(2502) into FieldDeclaration(2513) at 3", "Insert VariableDeclarationFragment(2512) into FieldDeclaration(2513) at 4", "Insert Modifier: private(2514) into FieldDeclaration(2528) at 0", "Insert Modifier: final(2515) into FieldDeclaration(2528) at 1", "Insert Modifier: static(2516) into FieldDeclaration(2528) at 2", "Insert PrimitiveType: int(2517) into FieldDeclaration(2528) at 3", "Insert VariableDeclarationFragment(2527) into FieldDeclaration(2528) at 4", "Insert Modifier: private(2529) into FieldDeclaration(2543) at 0", "Insert Modifier: final(2530) into FieldDeclaration(2543) at 1", "Insert Modifier: static(2531) into FieldDeclaration(2543) at 2", "Insert PrimitiveType: int(2532) into FieldDeclaration(2543) at 3", "Insert VariableDeclarationFragment(2542) into FieldDeclaration(2543) at 4", "Insert Modifier: private(2544) into FieldDeclaration(2558) at 0", "Insert Modifier: final(2545) into FieldDeclaration(2558) at 1", "Insert Modifier: static(2546) into FieldDeclaration(2558) at 2", "Insert PrimitiveType: int(2547) into FieldDeclaration(2558) at 3", "Insert VariableDeclarationFragment(2557) into FieldDeclaration(2558) at 4", "Insert Modifier: private(2559) into FieldDeclaration(2573) at 0", "Insert Modifier: final(2560) into FieldDeclaration(2573) at 1", "Insert Modifier: static(2561) into FieldDeclaration(2573) at 2", "Insert PrimitiveType: int(2562) into FieldDeclaration(2573) at 3", "Insert VariableDeclarationFragment(2572) into FieldDeclaration(2573) at 4", "Insert Modifier: private(2574) into FieldDeclaration(2588) at 0", "Insert Modifier: final(2575) into FieldDeclaration(2588) at 1", "Insert Modifier: static(2576) into FieldDeclaration(2588) at 2", "Insert PrimitiveType: int(2577) into FieldDeclaration(2588) at 3", "Insert VariableDeclarationFragment(2587) into FieldDeclaration(2588) at 4", "Insert Modifier: private(2589) into FieldDeclaration(2603) at 0", "Insert Modifier: final(2590) into FieldDeclaration(2603) at 1", "Insert Modifier: static(2591) into FieldDeclaration(2603) at 2", "Insert PrimitiveType: int(2592) into FieldDeclaration(2603) at 3", "Insert VariableDeclarationFragment(2602) into FieldDeclaration(2603) at 4", "Insert Modifier: private(2604) into FieldDeclaration(2624) at 0", "Insert Modifier: final(2605) into FieldDeclaration(2624) at 1", "Insert Modifier: static(2606) into FieldDeclaration(2624) at 2", "Insert ParameterizedType: HashMap<Integer,String>(2613) into FieldDeclaration(2624) at 3", "Insert VariableDeclarationFragment(2623) into FieldDeclaration(2624) at 4", "Insert Modifier: static(2625) into Initializer(2705) at 0", "Insert Block(2704) into Initializer(2705) at 1", "Insert Javadoc(2711) into TypeDeclaration: class(2878) at 0", "Insert Modifier: private(2712) into TypeDeclaration: class(2878) at 1", "Insert SimpleName: SendBufferWriter(2713) into TypeDeclaration: class(2878) at 2", "Insert SimpleType: Writer(2715) into TypeDeclaration: class(2878) at 3", "Insert FieldDeclaration(2724) into TypeDeclaration: class(2878) at 4", "Insert MethodDeclaration(2776) into TypeDeclaration: class(2878) at 5", "Insert MethodDeclaration(2807) into TypeDeclaration: class(2878) at 6", "Insert MethodDeclaration(2833) into TypeDeclaration: class(2878) at 7", "Insert MethodDeclaration(2846) into TypeDeclaration: class(2878) at 8", "Insert MethodDeclaration(2877) into TypeDeclaration: class(2878) at 9", "Insert Modifier: private(2879) into FieldDeclaration(2887) at 0", "Insert Modifier: static(2880) into FieldDeclaration(2887) at 1", "Insert Modifier: final(2881) into FieldDeclaration(2887) at 2", "Insert SimpleType: String(2883) into FieldDeclaration(2887) at 3", "Insert VariableDeclarationFragment(2886) into FieldDeclaration(2887) at 4", "Move Javadoc(2392) into MethodDeclaration(3580) at 0", "Insert Modifier: private(2891) into MethodDeclaration(3580) at 1", "Insert PrimitiveType: boolean(2892) into MethodDeclaration(3580) at 2", "Insert SimpleName: checkFourLetterWord(2893) into MethodDeclaration(3580) at 3", "Insert SingleVariableDeclaration(2898) into MethodDeclaration(3580) at 4", "Insert SingleVariableDeclaration(2902) into MethodDeclaration(3580) at 5", "Move SimpleType: IOException(2404) into MethodDeclaration(3580) at 6", "Insert Block(3579) into MethodDeclaration(3580) at 7", "Insert SimpleName: consCmd(2413) into VariableDeclarationFragment(2422) at 0", "Insert MethodInvocation(2421) into VariableDeclarationFragment(2422) at 1", "Insert SimpleName: crstCmd(2428) into VariableDeclarationFragment(2437) at 0", "Insert MethodInvocation(2436) into VariableDeclarationFragment(2437) at 1", "Insert SimpleName: dumpCmd(2443) into VariableDeclarationFragment(2452) at 0", "Insert MethodInvocation(2451) into VariableDeclarationFragment(2452) at 1", "Insert SimpleName: enviCmd(2458) into VariableDeclarationFragment(2467) at 0", "Insert MethodInvocation(2466) into VariableDeclarationFragment(2467) at 1", "Insert SimpleName: getTraceMaskCmd(2473) into VariableDeclarationFragment(2482) at 0", "Insert MethodInvocation(2481) into VariableDeclarationFragment(2482) at 1", "Insert SimpleName: ruokCmd(2488) into VariableDeclarationFragment(2497) at 0", "Insert MethodInvocation(2496) into VariableDeclarationFragment(2497) at 1", "Insert SimpleName: setTraceMaskCmd(2503) into VariableDeclarationFragment(2512) at 0", "Insert MethodInvocation(2511) into VariableDeclarationFragment(2512) at 1", "Insert SimpleName: srvrCmd(2518) into VariableDeclarationFragment(2527) at 0", "Insert MethodInvocation(2526) into VariableDeclarationFragment(2527) at 1", "Update SimpleName: resp(2557) to srstCmd", "Move SimpleName: resp(2557) into VariableDeclarationFragment(2542) at 0", "Insert MethodInvocation(2541) into VariableDeclarationFragment(2542) at 1", "Insert SimpleName: statCmd(2548) into VariableDeclarationFragment(2557) at 0", "Insert MethodInvocation(2556) into VariableDeclarationFragment(2557) at 1", "Insert SimpleName: wchcCmd(2563) into VariableDeclarationFragment(2572) at 0", "Insert MethodInvocation(2571) into VariableDeclarationFragment(2572) at 1", "Insert SimpleName: wchpCmd(2578) into VariableDeclarationFragment(2587) at 0", "Insert MethodInvocation(2586) into VariableDeclarationFragment(2587) at 1", "Insert SimpleName: wchsCmd(2593) into VariableDeclarationFragment(2602) at 0", "Insert MethodInvocation(2601) into VariableDeclarationFragment(2602) at 1", "Insert SimpleType: HashMap(2608) into ParameterizedType: HashMap<Integer,String>(2613) at 0", "Insert SimpleType: Integer(2610) into ParameterizedType: HashMap<Integer,String>(2613) at 1", "Insert SimpleType: String(2612) into ParameterizedType: HashMap<Integer,String>(2613) at 2", "Update SimpleName: sb(2617) to cmd2String", "Move SimpleName: sb(2617) into VariableDeclarationFragment(2623) at 0", "Move ClassInstanceCreation(2620) into VariableDeclarationFragment(2623) at 1", "Move ExpressionStatement(2627) into Block(2704) at 0", "Move ExpressionStatement(2637) into Block(2704) at 1", "Move ExpressionStatement(2642) into Block(2704) at 2", "Move ExpressionStatement(2654) into Block(2704) at 3", "Insert ExpressionStatement(2655) into Block(2704) at 4", "Insert ExpressionStatement(2661) into Block(2704) at 5", "Move ExpressionStatement(2672) into Block(2704) at 6", "Insert ExpressionStatement(2673) into Block(2704) at 7", "Insert ExpressionStatement(2679) into Block(2704) at 8", "Insert ExpressionStatement(2685) into Block(2704) at 9", "Insert ExpressionStatement(2691) into Block(2704) at 10", "Insert ExpressionStatement(2697) into Block(2704) at 11", "Move ExpressionStatement(2704) into Block(2704) at 12", "Insert TagElement(2710) into Javadoc(2711) at 0", "Insert SimpleName: Writer(2714) into SimpleType: Writer(2715) at 0", "Insert Modifier: private(2716) into FieldDeclaration(2724) at 0", "Insert SimpleType: StringBuffer(2718) into FieldDeclaration(2724) at 1", "Insert VariableDeclarationFragment(2723) into FieldDeclaration(2724) at 2", "Insert Javadoc(2730) into MethodDeclaration(2776) at 0", "Insert Modifier: private(2731) into MethodDeclaration(2776) at 1", "Insert PrimitiveType: void(2732) into MethodDeclaration(2776) at 2", "Insert SimpleName: checkFlush(2733) into MethodDeclaration(2776) at 3", "Insert SingleVariableDeclaration(2736) into MethodDeclaration(2776) at 4", "Insert Block(2775) into MethodDeclaration(2776) at 5", "Insert Javadoc(2785) into MethodDeclaration(2807) at 0", "Insert Modifier: private(2786) into MethodDeclaration(2807) at 1", "Insert PrimitiveType: void(2787) into MethodDeclaration(2807) at 2", "Insert SimpleName: wakeup(2788) into MethodDeclaration(2807) at 3", "Insert SingleVariableDeclaration(2791) into MethodDeclaration(2807) at 4", "Insert Block(2806) into MethodDeclaration(2807) at 5", "Insert MarkerAnnotation(2809) into MethodDeclaration(2833) at 0", "Insert Modifier: public(2810) into MethodDeclaration(2833) at 1", "Insert PrimitiveType: void(2811) into MethodDeclaration(2833) at 2", "Insert SimpleName: close(2812) into MethodDeclaration(2833) at 3", "Insert SimpleType: IOException(2814) into MethodDeclaration(2833) at 4", "Insert Block(2832) into MethodDeclaration(2833) at 5", "Insert MarkerAnnotation(2835) into MethodDeclaration(2846) at 0", "Insert Modifier: public(2836) into MethodDeclaration(2846) at 1", "Insert PrimitiveType: void(2837) into MethodDeclaration(2846) at 2", "Insert SimpleName: flush(2838) into MethodDeclaration(2846) at 3", "Insert SimpleType: IOException(2840) into MethodDeclaration(2846) at 4", "Insert Block(2845) into MethodDeclaration(2846) at 5", "Insert MarkerAnnotation(2848) into MethodDeclaration(2877) at 0", "Insert Modifier: public(2849) into MethodDeclaration(2877) at 1", "Insert PrimitiveType: void(2850) into MethodDeclaration(2877) at 2", "Insert SimpleName: write(2851) into MethodDeclaration(2877) at 3", "Insert SingleVariableDeclaration(2856) into MethodDeclaration(2877) at 4", "Insert SingleVariableDeclaration(2859) into MethodDeclaration(2877) at 5", "Move SingleVariableDeclaration(2402) into MethodDeclaration(2877) at 6", "Insert SimpleType: IOException(2864) into MethodDeclaration(2877) at 7", "Insert Block(2876) into MethodDeclaration(2877) at 8", "Insert SimpleName: String(2882) into SimpleType: String(2883) at 0", "Insert SimpleName: ZK_NOT_SERVING(2884) into VariableDeclarationFragment(2886) at 0", "Insert StringLiteral: \"This ZooKeeper instance is not currently serving requests\"(2885) into VariableDeclarationFragment(2886) at 1", "Insert Modifier: final(2894) into SingleVariableDeclaration(2898) at 0", "Insert SimpleType: SelectionKey(2896) into SingleVariableDeclaration(2898) at 1", "Insert SimpleName: k(2897) into SingleVariableDeclaration(2898) at 2", "Insert Modifier: final(2899) into SingleVariableDeclaration(2902) at 0", "Insert PrimitiveType: int(2900) into SingleVariableDeclaration(2902) at 1", "Insert SimpleName: len(2901) into SingleVariableDeclaration(2902) at 2", "Move VariableDeclarationStatement(2843) into Block(3579) at 0", "Insert IfStatement(2920) into Block(3579) at 1", "Move ExpressionStatement(2875) into Block(3579) at 2", "Move ExpressionStatement(2531) into Block(3579) at 3", "Insert VariableDeclarationStatement(2951) into Block(3579) at 4", "Insert VariableDeclarationStatement(2956) into Block(3579) at 5", "Insert TryStatement(3576) into Block(3579) at 6", "Move ReturnStatement(3088) into Block(3579) at 7", "Insert Modifier: synchronized(4908) into MethodDeclaration(5160) at 2", "Insert PrimitiveType: void(4909) into MethodDeclaration(5160) at 3", "Update SimpleName: toString(4390) to dumpConnectionInfo", "Insert SingleVariableDeclaration(4914) into MethodDeclaration(5160) at 5", "Insert Block(5159) into MethodDeclaration(5160) at 7", "Insert MethodInvocation(2419) into MethodInvocation(2421) at 0", "Update SimpleName: getRemoteSocketAddress(2414) to getInt", "Move SimpleName: getRemoteSocketAddress(2414) into MethodInvocation(2421) at 1", "Insert MethodInvocation(2434) into MethodInvocation(2436) at 0", "Update SimpleName: k(2428) to getInt", "Move SimpleName: k(2428) into MethodInvocation(2436) at 1", "Insert MethodInvocation(2449) into MethodInvocation(2451) at 0", "Update SimpleName: getRemoteSocketAddress(2445) to getInt", "Move SimpleName: getRemoteSocketAddress(2445) into MethodInvocation(2451) at 1", "Insert MethodInvocation(2464) into MethodInvocation(2466) at 0", "Update SimpleName: resp(2469) to getInt", "Move SimpleName: resp(2469) into MethodInvocation(2466) at 1", "Insert MethodInvocation(2479) into MethodInvocation(2481) at 0", "Update SimpleName: sendBuffer(2478) to getInt", "Move SimpleName: sendBuffer(2478) into MethodInvocation(2481) at 1", "Insert MethodInvocation(2494) into MethodInvocation(2496) at 0", "Update SimpleName: LOG(2493) to getInt", "Move SimpleName: LOG(2493) into MethodInvocation(2496) at 1", "Move MethodInvocation(2498) into MethodInvocation(2511) at 0", "Update SimpleName: getRemoteSocketAddress(2499) to getInt", "Move SimpleName: getRemoteSocketAddress(2499) into MethodInvocation(2511) at 1", "Insert MethodInvocation(2524) into MethodInvocation(2526) at 0", "Insert SimpleName: getInt(2525) into MethodInvocation(2526) at 1", "Insert MethodInvocation(2539) into MethodInvocation(2541) at 0", "Insert SimpleName: getInt(2540) into MethodInvocation(2541) at 1", "Insert MethodInvocation(2554) into MethodInvocation(2556) at 0", "Update SimpleName: resp(2569) to getInt", "Move SimpleName: resp(2569) into MethodInvocation(2556) at 1", "Insert MethodInvocation(2569) into MethodInvocation(2571) at 0", "Update SimpleName: k(2577) to getInt", "Move SimpleName: k(2577) into MethodInvocation(2571) at 1", "Insert MethodInvocation(2584) into MethodInvocation(2586) at 0", "Update SimpleName: getRemoteSocketAddress(2594) to getInt", "Move SimpleName: getRemoteSocketAddress(2594) into MethodInvocation(2586) at 1", "Move MethodInvocation(2611) into MethodInvocation(2601) at 0", "Insert SimpleName: getInt(2600) into MethodInvocation(2601) at 1", "Insert SimpleName: HashMap(2607) into SimpleType: HashMap(2608) at 0", "Insert SimpleName: Integer(2609) into SimpleType: Integer(2610) at 0", "Update SimpleName: StringBuilder(2615) to String", "Move SimpleName: StringBuilder(2615) into SimpleType: String(2612) at 0", "Insert ParameterizedType: HashMap<Integer,String>(2621) into ClassInstanceCreation(2622) at 0", "Insert MethodInvocation(2654) into ExpressionStatement(2655) at 0", "Insert MethodInvocation(2660) into ExpressionStatement(2661) at 0", "Insert MethodInvocation(2672) into ExpressionStatement(2673) at 0", "Insert MethodInvocation(2678) into ExpressionStatement(2679) at 0", "Insert MethodInvocation(2684) into ExpressionStatement(2685) at 0", "Insert MethodInvocation(2690) into ExpressionStatement(2691) at 0", "Insert MethodInvocation(2696) into ExpressionStatement(2697) at 0", "Insert TextElement: This class wraps the sendBuffer method of NIOServerCnxn. It is(2706) into TagElement(2710) at 0", "Insert TextElement: responsible for chunking up the response to a client. Rather(2707) into TagElement(2710) at 1", "Insert TextElement: than cons'ing up a response fully in memory, which may be large(2708) into TagElement(2710) at 2", "Insert TextElement: for some commands, this class chunks up the result.(2709) into TagElement(2710) at 3", "Update SimpleName: StringBuilder(2705) to StringBuffer", "Move SimpleName: StringBuilder(2705) into SimpleType: StringBuffer(2718) at 0", "Move SimpleName: sb(2707) into VariableDeclarationFragment(2723) at 0", "Move ClassInstanceCreation(2710) into VariableDeclarationFragment(2723) at 1", "Insert TagElement(2726) into Javadoc(2730) at 0", "Insert TagElement: @param(2729) into Javadoc(2730) at 1", "Insert PrimitiveType: boolean(2734) into SingleVariableDeclaration(2736) at 0", "Insert SimpleName: force(2735) into SingleVariableDeclaration(2736) at 1", "Insert IfStatement(2774) into Block(2775) at 0", "Insert TagElement(2781) into Javadoc(2785) at 0", "Insert TagElement: @param(2784) into Javadoc(2785) at 1", "Insert PrimitiveType: int(2789) into SingleVariableDeclaration(2791) at 0", "Insert SimpleName: sel(2790) into SingleVariableDeclaration(2791) at 1", "Insert SynchronizedStatement(2805) into Block(2806) at 0", "Insert SimpleName: Override(2808) into MarkerAnnotation(2809) at 0", "Insert SimpleName: IOException(2813) into SimpleType: IOException(2814) at 0", "Insert IfStatement(2819) into Block(2832) at 0", "Insert ExpressionStatement(2823) into Block(2832) at 1", "Move ExpressionStatement(2815) into Block(2832) at 2", "Insert ExpressionStatement(2831) into Block(2832) at 3", "Insert SimpleName: Override(2834) into MarkerAnnotation(2835) at 0", "Insert SimpleName: IOException(2839) into SimpleType: IOException(2840) at 0", "Insert ExpressionStatement(2844) into Block(2845) at 0", "Insert SimpleName: Override(2847) into MarkerAnnotation(2848) at 0", "Insert ArrayType: char[](2854) into SingleVariableDeclaration(2856) at 0", "Insert SimpleName: cbuf(2855) into SingleVariableDeclaration(2856) at 1", "Insert PrimitiveType: int(2857) into SingleVariableDeclaration(2859) at 0", "Insert SimpleName: off(2858) into SingleVariableDeclaration(2859) at 1", "Insert SimpleName: IOException(2863) into SimpleType: IOException(2864) at 0", "Move ExpressionStatement(2832) into Block(2876) at 0", "Move ExpressionStatement(2835) into Block(2876) at 1", "Insert SimpleName: SelectionKey(2895) into SimpleType: SelectionKey(2896) at 0", "Update SimpleType: StringBuilder(2837) to String", "Update InfixExpression: !=(2846) to ==", "Move InfixExpression: !=(2846) into IfStatement(2920) at 0", "Insert Block(2919) into IfStatement(2920) at 1", "Insert Modifier: final(2937) into VariableDeclarationStatement(2951) at 0", "Insert SimpleType: PrintWriter(2939) into VariableDeclarationStatement(2951) at 1", "Insert VariableDeclarationFragment(2950) into VariableDeclarationStatement(2951) at 2", "Insert PrimitiveType: boolean(2952) into VariableDeclarationStatement(2956) at 0", "Insert VariableDeclarationFragment(2955) into VariableDeclarationStatement(2956) at 1", "Insert Block(3562) into TryStatement(3576) at 0", "Insert Block(3575) into TryStatement(3576) at 1", "Insert VariableDeclarationStatement(4870) into Block(4897) at 0", "Insert VariableDeclarationStatement(4879) into Block(4897) at 1", "Insert ExpressionStatement(4884) into Block(4897) at 2", "Insert ExpressionStatement(4888) into Block(4897) at 3", "Insert ExpressionStatement(4892) into Block(4897) at 4", "Insert ReturnStatement(4896) into Block(4897) at 5", "Insert SimpleType: PrintWriter(4912) into SingleVariableDeclaration(4914) at 0", "Insert SimpleName: pwriter(4913) into SingleVariableDeclaration(4914) at 1", "Move VariableDeclarationStatement(4409) into Block(5159) at 0", "Move IfStatement(4586) into Block(5159) at 1", "Update SimpleName: LOG(2408) to ByteBuffer", "Move SimpleName: LOG(2408) into MethodInvocation(2419) at 0", "Update SimpleName: info(2409) to wrap", "Move SimpleName: info(2409) into MethodInvocation(2419) at 1", "Insert MethodInvocation(2418) into MethodInvocation(2419) at 2", "Update SimpleName: sendBuffer(2422) to ByteBuffer", "Move SimpleName: sendBuffer(2422) into MethodInvocation(2434) at 0", "Update SimpleName: imok(2423) to wrap", "Move SimpleName: imok(2423) into MethodInvocation(2434) at 1", "Insert MethodInvocation(2433) into MethodInvocation(2434) at 2", "Update SimpleName: LOG(2439) to ByteBuffer", "Move SimpleName: LOG(2439) into MethodInvocation(2449) at 0", "Update SimpleName: info(2440) to wrap", "Move SimpleName: info(2440) into MethodInvocation(2449) at 1", "Insert MethodInvocation(2448) into MethodInvocation(2449) at 2", "Insert SimpleName: ByteBuffer(2459) into MethodInvocation(2464) at 0", "Insert SimpleName: wrap(2460) into MethodInvocation(2464) at 1", "Insert MethodInvocation(2463) into MethodInvocation(2464) at 2", "Update SimpleName: resp(2474) to ByteBuffer", "Move SimpleName: resp(2474) into MethodInvocation(2479) at 0", "Update SimpleName: flip(2475) to wrap", "Move SimpleName: flip(2475) into MethodInvocation(2479) at 1", "Insert MethodInvocation(2478) into MethodInvocation(2479) at 2", "Update SimpleName: k(2482) to ByteBuffer", "Move SimpleName: k(2482) into MethodInvocation(2494) at 0", "Insert SimpleName: wrap(2490) into MethodInvocation(2494) at 1", "Insert MethodInvocation(2493) into MethodInvocation(2494) at 2", "Update SimpleName: sock(2496) to ByteBuffer", "Update SimpleName: socket(2497) to wrap", "Insert MethodInvocation(2508) into MethodInvocation(2509) at 2", "Move SimpleName: ByteBuffer(2505) into MethodInvocation(2524) at 0", "Update SimpleName: allocate(2506) to wrap", "Move SimpleName: allocate(2506) into MethodInvocation(2524) at 1", "Insert MethodInvocation(2523) into MethodInvocation(2524) at 2", "Move SimpleName: ByteBuffer(2558) into MethodInvocation(2539) at 0", "Update SimpleName: allocate(2559) to wrap", "Move SimpleName: allocate(2559) into MethodInvocation(2539) at 1", "Insert MethodInvocation(2538) into MethodInvocation(2539) at 2", "Update SimpleName: resp(2564) to ByteBuffer", "Move SimpleName: resp(2564) into MethodInvocation(2554) at 0", "Update SimpleName: putLong(2565) to wrap", "Move SimpleName: putLong(2565) into MethodInvocation(2554) at 1", "Insert MethodInvocation(2553) into MethodInvocation(2554) at 2", "Update SimpleName: sendBuffer(2573) to ByteBuffer", "Move SimpleName: sendBuffer(2573) into MethodInvocation(2569) at 0", "Update SimpleName: resp(2574) to wrap", "Move SimpleName: resp(2574) into MethodInvocation(2569) at 1", "Insert MethodInvocation(2568) into MethodInvocation(2569) at 2", "Update SimpleName: LOG(2588) to ByteBuffer", "Move SimpleName: LOG(2588) into MethodInvocation(2584) at 0", "Update SimpleName: info(2589) to wrap", "Move SimpleName: info(2589) into MethodInvocation(2584) at 1", "Insert MethodInvocation(2583) into MethodInvocation(2584) at 2", "Insert SimpleType: HashMap(2616) into ParameterizedType: HashMap<Integer,String>(2621) at 0", "Insert SimpleType: Integer(2618) into ParameterizedType: HashMap<Integer,String>(2621) at 1", "Move SimpleType: String(4389) into ParameterizedType: HashMap<Integer,String>(2621) at 2", "Update SimpleName: sb(2623) to cmd2String", "Insert SimpleName: put(2627) into MethodInvocation(2630) at 1", "Update SimpleName: append(2624) to consCmd", "Update StringLiteral: \"SessionTracker dump: \\n\"(2625) to \"cons\"", "Update SimpleName: sb(2628) to cmd2String", "Move SimpleName: sb(2628) into MethodInvocation(2636) at 0", "Update SimpleName: append(2629) to put", "Move SimpleName: append(2629) into MethodInvocation(2636) at 1", "Update SimpleName: append(2634) to crstCmd", "Update StringLiteral: \"\\n\"(2635) to \"crst\"", "Update SimpleName: sb(2638) to cmd2String", "Insert SimpleName: put(2639) into MethodInvocation(2642) at 1", "Update SimpleName: append(2639) to dumpCmd", "Update StringLiteral: \"ephemeral nodes dump:\\n\"(2640) to \"dump\"", "Update SimpleName: sb(2643) to cmd2String", "Move SimpleName: sb(2643) into MethodInvocation(2648) at 0", "Update SimpleName: append(2644) to put", "Move SimpleName: append(2644) into MethodInvocation(2648) at 1", "Update SimpleName: append(2651) to enviCmd", "Update StringLiteral: \"\\n\"(2652) to \"envi\"", "Update SimpleName: sendBuffer(2655) to cmd2String", "Move SimpleName: sendBuffer(2655) into MethodInvocation(2654) at 0", "Update SimpleName: ByteBuffer(2656) to put", "Move SimpleName: ByteBuffer(2656) into MethodInvocation(2654) at 1", "Update SimpleName: wrap(2657) to getTraceMaskCmd", "Move SimpleName: wrap(2657) into MethodInvocation(2654) at 2", "Insert StringLiteral: \"gtmk\"(2653) into MethodInvocation(2654) at 3", "Update SimpleName: sb(2658) to cmd2String", "Move SimpleName: sb(2658) into MethodInvocation(2660) at 0", "Update SimpleName: toString(2659) to put", "Move SimpleName: toString(2659) into MethodInvocation(2660) at 1", "Update SimpleName: getBytes(2661) to ruokCmd", "Move SimpleName: getBytes(2661) into MethodInvocation(2660) at 2", "Insert StringLiteral: \"ruok\"(2659) into MethodInvocation(2660) at 3", "Update SimpleName: k(2668) to cmd2String", "Update SimpleName: interestOps(2669) to put", "Insert SimpleName: setTraceMaskCmd(2664) into MethodInvocation(2666) at 2", "Insert StringLiteral: \"stmk\"(2665) into MethodInvocation(2666) at 3", "Update SimpleName: LOG(2683) to cmd2String", "Move SimpleName: LOG(2683) into MethodInvocation(2672) at 0", "Update SimpleName: info(2684) to put", "Move SimpleName: info(2684) into MethodInvocation(2672) at 1", "Insert SimpleName: srstCmd(2670) into MethodInvocation(2672) at 2", "Insert StringLiteral: \"srst\"(2671) into MethodInvocation(2672) at 3", "Insert SimpleName: cmd2String(2674) into MethodInvocation(2678) at 0", "Insert SimpleName: put(2675) into MethodInvocation(2678) at 1", "Insert SimpleName: srvrCmd(2676) into MethodInvocation(2678) at 2", "Insert StringLiteral: \"srvr\"(2677) into MethodInvocation(2678) at 3", "Insert SimpleName: cmd2String(2680) into MethodInvocation(2684) at 0", "Insert SimpleName: put(2681) into MethodInvocation(2684) at 1", "Insert SimpleName: statCmd(2682) into MethodInvocation(2684) at 2", "Insert StringLiteral: \"stat\"(2683) into MethodInvocation(2684) at 3", "Insert SimpleName: cmd2String(2686) into MethodInvocation(2690) at 0", "Insert SimpleName: put(2687) into MethodInvocation(2690) at 1", "Insert SimpleName: wchcCmd(2688) into MethodInvocation(2690) at 2", "Insert StringLiteral: \"wchc\"(2689) into MethodInvocation(2690) at 3", "Insert SimpleName: cmd2String(2692) into MethodInvocation(2696) at 0", "Insert SimpleName: put(2693) into MethodInvocation(2696) at 1", "Insert SimpleName: wchpCmd(2694) into MethodInvocation(2696) at 2", "Insert StringLiteral: \"wchp\"(2695) into MethodInvocation(2696) at 3", "Insert SimpleName: cmd2String(2698) into MethodInvocation(2702) at 0", "Update SimpleName: packetReceived(2702) to put", "Insert SimpleName: wchsCmd(2700) into MethodInvocation(2702) at 2", "Insert StringLiteral: \"wchs\"(2701) into MethodInvocation(2702) at 3", "Update SimpleType: StringBuilder(2709) to StringBuffer", "Insert TextElement: Check if we are ready to send another chunk.(2725) into TagElement(2726) at 0", "Insert SimpleName: force(2727) into TagElement: @param(2729) at 0", "Insert TextElement:  force sending, even if not a full chunk(2728) into TagElement: @param(2729) at 1", "Insert InfixExpression: ||(2750) into IfStatement(2774) at 0", "Move Block(2766) into IfStatement(2774) at 1", "Insert TextElement: Wakeup the selector. This is necessary as the cnxn is(2777) into TagElement(2781) at 0", "Insert TextElement: waiting for interestOps to be satisfied. If we want the(2778) into TagElement(2781) at 1", "Insert TextElement: selector to wakeup immediately (rather than the last(2779) into TagElement(2781) at 2", "Insert TextElement: select(timeout) period) we need to force a wakeup.(2780) into TagElement(2781) at 3", "Insert SimpleName: sel(2782) into TagElement: @param(2784) at 0", "Insert TextElement:  the new interest ops(2783) into TagElement: @param(2784) at 1", "Insert SimpleName: factory(2792) into SynchronizedStatement(2805) at 0", "Insert Block(2804) into SynchronizedStatement(2805) at 1", "Insert InfixExpression: ==(2817) into IfStatement(2819) at 0", "Insert ReturnStatement(2818) into IfStatement(2819) at 1", "Insert MethodInvocation(2822) into ExpressionStatement(2823) at 0", "Insert Assignment: =(2830) into ExpressionStatement(2831) at 0", "Insert MethodInvocation(2843) into ExpressionStatement(2844) at 0", "Insert PrimitiveType: char(2852) into ArrayType: char[](2854) at 0", "Insert Dimension(2853) into ArrayType: char[](2854) at 1", "Update SimpleName: StringBuilder(2836) to String", "Update SimpleName: sb(2838) to cmd", "Insert MethodInvocation(2911) into VariableDeclarationFragment(2912) at 1", "Update SimpleName: zk(2844) to cmd", "Insert ReturnStatement(2918) into Block(2919) at 0", "Update SimpleName: sb(2871) to LOG", "Insert SimpleName: info(2922) into MethodInvocation(2932) at 1", "Insert InfixExpression: +(2931) into MethodInvocation(2932) at 2", "Insert SimpleName: PrintWriter(2938) into SimpleType: PrintWriter(2939) at 0", "Insert SimpleName: pwriter(2940) into VariableDeclarationFragment(2950) at 0", "Insert ClassInstanceCreation(2949) into VariableDeclarationFragment(2950) at 1", "Insert SimpleName: threadWillClosePWriter(2953) into VariableDeclarationFragment(2955) at 0", "Insert BooleanLiteral: false(2954) into VariableDeclarationFragment(2955) at 1", "Insert IfStatement(3561) into Block(3562) at 0", "Insert IfStatement(3574) into Block(3575) at 0", "Update TextElement: Prints brief stats information for the connection.(4362) to Prints detailed stats information for the connection.", "Update TextElement:  toString(boolean) for detailed stats(4364) to  dumpConnectionInfo(PrintWriter, boolean) for brief stats", "Insert SimpleType: StringWriter(4864) into VariableDeclarationStatement(4870) at 0", "Insert VariableDeclarationFragment(4869) into VariableDeclarationStatement(4870) at 1", "Insert SimpleType: PrintWriter(4872) into VariableDeclarationStatement(4879) at 0", "Insert VariableDeclarationFragment(4878) into VariableDeclarationStatement(4879) at 1", "Insert MethodInvocation(4883) into ExpressionStatement(4884) at 0", "Insert MethodInvocation(4887) into ExpressionStatement(4888) at 0", "Insert MethodInvocation(4891) into ExpressionStatement(4892) at 0", "Insert MethodInvocation(4895) into ReturnStatement(4896) at 0", "Update SimpleName: StringBuilder(4394) to PrintWriter", "Move SimpleName: StringBuilder(4394) into SimpleType: PrintWriter(4912) at 0", "Insert StringLiteral: \"cons\"(2416) into MethodInvocation(2418) at 0", "Update SimpleName: sock(2411) to getBytes", "Move SimpleName: sock(2411) into MethodInvocation(2418) at 1", "Insert StringLiteral: \"crst\"(2431) into MethodInvocation(2433) at 0", "Update SimpleName: duplicate(2424) to getBytes", "Move SimpleName: duplicate(2424) into MethodInvocation(2433) at 1", "Insert StringLiteral: \"dump\"(2446) into MethodInvocation(2448) at 0", "Update SimpleName: sock(2442) to getBytes", "Move SimpleName: sock(2442) into MethodInvocation(2448) at 1", "Insert StringLiteral: \"envi\"(2461) into MethodInvocation(2463) at 0", "Update SimpleName: ByteBuffer(2463) to getBytes", "Move SimpleName: ByteBuffer(2463) into MethodInvocation(2463) at 1", "Insert StringLiteral: \"gtmk\"(2476) into MethodInvocation(2478) at 0", "Insert SimpleName: getBytes(2477) into MethodInvocation(2478) at 1", "Insert StringLiteral: \"ruok\"(2491) into MethodInvocation(2493) at 0", "Update SimpleName: interestOps(2483) to getBytes", "Move SimpleName: interestOps(2483) into MethodInvocation(2493) at 1", "Insert StringLiteral: \"stmk\"(2506) into MethodInvocation(2508) at 0", "Insert SimpleName: getBytes(2507) into MethodInvocation(2508) at 1", "Insert StringLiteral: \"srvr\"(2521) into MethodInvocation(2523) at 0", "Insert SimpleName: getBytes(2522) into MethodInvocation(2523) at 1", "Insert StringLiteral: \"srst\"(2536) into MethodInvocation(2538) at 0", "Insert SimpleName: getBytes(2537) into MethodInvocation(2538) at 1", "Insert StringLiteral: \"stat\"(2551) into MethodInvocation(2553) at 0", "Update SimpleName: traceMask(2566) to getBytes", "Move SimpleName: traceMask(2566) into MethodInvocation(2553) at 1", "Insert StringLiteral: \"wchc\"(2566) into MethodInvocation(2568) at 0", "Insert SimpleName: getBytes(2567) into MethodInvocation(2568) at 1", "Insert StringLiteral: \"wchp\"(2581) into MethodInvocation(2583) at 0", "Update SimpleName: sock(2591) to getBytes", "Move SimpleName: sock(2591) into MethodInvocation(2583) at 1", "Update StringLiteral: \"ZooKeeper not active \\n\"(2608) to \"wchs\"", "Insert SimpleName: HashMap(2615) into SimpleType: HashMap(2616) at 0", "Update SimpleName: StringBuilder(2618) to Integer", "Move SimpleName: StringBuilder(2618) into SimpleType: Integer(2618) at 0", "Update SimpleName: StringBuilder(2708) to StringBuffer", "Insert ParenthesizedExpression(2744) into InfixExpression: ||(2750) at 0", "Insert InfixExpression: >(2749) into InfixExpression: ||(2750) at 1", "Move ExpressionStatement(2810) into Block(2773) at 0", "Move ExpressionStatement(2791) into Block(2804) at 0", "Move ExpressionStatement(2797) into Block(2804) at 1", "Insert SimpleName: sb(2815) into InfixExpression: ==(2817) at 0", "Insert NullLiteral(2816) into InfixExpression: ==(2817) at 1", "Insert SimpleName: checkFlush(2820) into MethodInvocation(2822) at 0", "Insert BooleanLiteral: true(2821) into MethodInvocation(2822) at 1", "Update SimpleName: k(2811) to wakeup", "Insert SimpleName: sb(2828) into Assignment: =(2830) at 0", "Insert NullLiteral(2829) into Assignment: =(2830) at 1", "Insert SimpleName: checkFlush(2841) into MethodInvocation(2843) at 0", "Insert BooleanLiteral: true(2842) into MethodInvocation(2843) at 1", "Update SimpleName: LOG(2822) to sb", "Update SimpleName: info(2823) to append", "Update SimpleName: sock(2825) to cbuf", "Move SimpleName: sock(2825) into MethodInvocation(2870) at 2", "Update SimpleName: socket(2826) to off", "Move SimpleName: socket(2826) into MethodInvocation(2870) at 3", "Update SimpleName: getRemoteSocketAddress(2828) to len", "Move SimpleName: getRemoteSocketAddress(2828) into MethodInvocation(2870) at 4", "Update SimpleName: packetReceived(2833) to checkFlush", "Insert BooleanLiteral: false(2873) into MethodInvocation(2874) at 1", "Insert SimpleName: cmd2String(2908) into MethodInvocation(2911) at 0", "Insert SimpleName: get(2909) into MethodInvocation(2911) at 1", "Insert SimpleName: len(2910) into MethodInvocation(2911) at 2", "Insert BooleanLiteral: false(2917) into ReturnStatement(2918) at 0", "Insert StringLiteral: \"Processing \"(2923) into InfixExpression: +(2931) at 0", "Insert SimpleName: cmd(2924) into InfixExpression: +(2931) at 1", "Insert StringLiteral: \" command from \"(2925) into InfixExpression: +(2931) at 2", "Move MethodInvocation(2698) into InfixExpression: +(2931) at 3", "Insert SimpleType: PrintWriter(2942) into ClassInstanceCreation(2949) at 0", "Insert ClassInstanceCreation(2948) into ClassInstanceCreation(2949) at 1", "Move InfixExpression: ==(2407) into IfStatement(3561) at 0", "Move Block(2882) into IfStatement(3561) at 1", "Insert IfStatement(3560) into IfStatement(3561) at 2", "Insert PrefixExpression: !(3564) into IfStatement(3574) at 0", "Insert Block(3573) into IfStatement(3574) at 1", "Insert SimpleName: StringWriter(4863) into SimpleType: StringWriter(4864) at 0", "Insert SimpleName: sw(4865) into VariableDeclarationFragment(4869) at 0", "Insert ClassInstanceCreation(4868) into VariableDeclarationFragment(4869) at 1", "Insert SimpleName: PrintWriter(4871) into SimpleType: PrintWriter(4872) at 0", "Insert SimpleName: pwriter(4873) into VariableDeclarationFragment(4878) at 0", "Insert ClassInstanceCreation(4877) into VariableDeclarationFragment(4878) at 1", "Update SimpleName: toString(4373) to dumpConnectionInfo", "Move SimpleName: toString(4373) into MethodInvocation(4883) at 0", "Insert SimpleName: pwriter(4881) into MethodInvocation(4883) at 1", "Move BooleanLiteral: false(4374) into MethodInvocation(4883) at 2", "Insert SimpleName: pwriter(4885) into MethodInvocation(4887) at 0", "Insert SimpleName: flush(4886) into MethodInvocation(4887) at 1", "Insert SimpleName: pwriter(4889) into MethodInvocation(4891) at 0", "Insert SimpleName: close(4890) into MethodInvocation(4891) at 1", "Insert SimpleName: sw(4893) into MethodInvocation(4895) at 0", "Insert SimpleName: toString(4894) into MethodInvocation(4895) at 1", "Insert ExpressionStatement(4934) into Block(5157) at 0", "Insert ExpressionStatement(4947) into Block(5157) at 1", "Insert ExpressionStatement(4952) into Block(5157) at 2", "Insert ExpressionStatement(4962) into Block(5157) at 3", "Insert ExpressionStatement(4967) into Block(5157) at 4", "Insert ExpressionStatement(4973) into Block(5157) at 5", "Insert ExpressionStatement(4978) into Block(5157) at 6", "Insert ExpressionStatement(4984) into Block(5157) at 7", "Insert ExpressionStatement(4989) into Block(5157) at 8", "Insert ExpressionStatement(4995) into Block(5157) at 9", "Insert InfixExpression: &&(2743) into ParenthesizedExpression(2744) at 0", "Insert MethodInvocation(2747) into InfixExpression: >(2749) at 0", "Insert NumberLiteral: 2048(2748) into InfixExpression: >(2749) at 1", "Insert MethodInvocation(2797) into ExpressionStatement(2798) at 0", "Insert SimpleName: PrintWriter(2941) into SimpleType: PrintWriter(2942) at 0", "Insert SimpleType: BufferedWriter(2944) into ClassInstanceCreation(2948) at 0", "Insert ClassInstanceCreation(2947) into ClassInstanceCreation(2948) at 1", "Insert ReturnStatement(2966) into Block(2967) at 1", "Move InfixExpression: ==(2438) into IfStatement(3560) at 0", "Insert Block(2985) into IfStatement(3560) at 1", "Insert IfStatement(3559) into IfStatement(3560) at 2", "Insert SimpleName: threadWillClosePWriter(3563) into PrefixExpression: !(3564) at 0", "Move ExpressionStatement(3074) into Block(3573) at 0", "Insert ExpressionStatement(3572) into Block(3573) at 1", "Insert SimpleType: StringWriter(4867) into ClassInstanceCreation(4868) at 0", "Insert SimpleType: PrintWriter(4875) into ClassInstanceCreation(4877) at 0", "Insert SimpleName: sw(4876) into ClassInstanceCreation(4877) at 1", "Insert MethodInvocation(4933) into ExpressionStatement(4934) at 0", "Move MethodInvocation(4428) into ExpressionStatement(4947) at 0", "Insert MethodInvocation(4951) into ExpressionStatement(4952) at 0", "Insert MethodInvocation(4961) into ExpressionStatement(4962) at 0", "Insert MethodInvocation(4966) into ExpressionStatement(4967) at 0", "Insert MethodInvocation(4972) into ExpressionStatement(4973) at 0", "Insert MethodInvocation(4977) into ExpressionStatement(4978) at 0", "Insert MethodInvocation(4983) into ExpressionStatement(4984) at 0", "Insert MethodInvocation(4988) into ExpressionStatement(4989) at 0", "Insert MethodInvocation(4994) into ExpressionStatement(4995) at 0", "Insert SimpleName: force(2737) into InfixExpression: &&(2743) at 0", "Insert InfixExpression: >(2742) into InfixExpression: &&(2743) at 1", "Update SimpleName: append(2720) to sb", "Move SimpleName: append(2720) into MethodInvocation(2747) at 0", "Update SimpleName: append(2725) to length", "Move SimpleName: append(2725) into MethodInvocation(2747) at 1", "Update SimpleName: sb(2732) to wakeup", "Insert InfixExpression: |(2765) into MethodInvocation(2766) at 1", "Update SimpleName: append(2762) to setLength", "Insert NumberLiteral: 0(2770) into MethodInvocation(2771) at 2", "Move MethodInvocation(2780) into MethodInvocation(2797) at 0", "Update SimpleName: append(2781) to wakeup", "Move SimpleName: append(2781) into MethodInvocation(2797) at 1", "Update SimpleName: sb(2793) to sk", "Update SimpleName: append(2794) to interestOps", "Insert SimpleName: sel(2801) into MethodInvocation(2802) at 2", "Insert SimpleName: BufferedWriter(2943) into SimpleType: BufferedWriter(2944) at 0", "Insert SimpleType: SendBufferWriter(2946) into ClassInstanceCreation(2947) at 0", "Insert BooleanLiteral: true(2965) into ReturnStatement(2966) at 0", "Move VariableDeclarationStatement(2459) into Block(2985) at 0", "Insert ExpressionStatement(2982) into Block(2985) at 1", "Move ReturnStatement(2488) into Block(2985) at 2", "Move InfixExpression: ==(2492) into IfStatement(3559) at 0", "Insert Block(3030) into IfStatement(3559) at 1", "Insert IfStatement(3558) into IfStatement(3559) at 2", "Insert MethodInvocation(3571) into ExpressionStatement(3572) at 0", "Insert SimpleName: StringWriter(4866) into SimpleType: StringWriter(4867) at 0", "Insert SimpleName: PrintWriter(4874) into SimpleType: PrintWriter(4875) at 0", "Insert SimpleName: pwriter(4930) into MethodInvocation(4933) at 0", "Insert SimpleName: print(4931) into MethodInvocation(4933) at 1", "Insert StringLiteral: \" \"(4932) into MethodInvocation(4933) at 2", "Update SimpleName: sb(4414) to pwriter", "Move SimpleName: sb(4414) into MethodInvocation(4946) at 0", "Update SimpleName: append(4415) to print", "Move SimpleName: append(4415) into MethodInvocation(4946) at 1", "Update SimpleName: append(4429) to pwriter", "Move SimpleName: append(4429) into MethodInvocation(4951) at 0", "Insert SimpleName: print(4949) into MethodInvocation(4951) at 1", "Move StringLiteral: \"[\"(4430) into MethodInvocation(4951) at 2", "Update SimpleName: append(4432) to pwriter", "Move SimpleName: append(4432) into MethodInvocation(4961) at 0", "Update SimpleName: append(4440) to print", "Move SimpleName: append(4440) into MethodInvocation(4961) at 1", "Move MethodInvocation(4438) into MethodInvocation(4961) at 2", "Insert SimpleName: pwriter(4963) into MethodInvocation(4966) at 0", "Insert SimpleName: print(4964) into MethodInvocation(4966) at 1", "Move StringLiteral: \"](queued=\"(4441) into MethodInvocation(4966) at 2", "Update SimpleName: append(4443) to pwriter", "Move SimpleName: append(4443) into MethodInvocation(4972) at 0", "Update SimpleName: append(4447) to print", "Move SimpleName: append(4447) into MethodInvocation(4972) at 1", "Move MethodInvocation(4445) into MethodInvocation(4972) at 2", "Insert SimpleName: pwriter(4974) into MethodInvocation(4977) at 0", "Insert SimpleName: print(4975) into MethodInvocation(4977) at 1", "Move StringLiteral: \",recved=\"(4448) into MethodInvocation(4977) at 2", "Update SimpleName: append(4450) to pwriter", "Move SimpleName: append(4450) into MethodInvocation(4983) at 0", "Update SimpleName: append(4454) to print", "Move SimpleName: append(4454) into MethodInvocation(4983) at 1", "Move MethodInvocation(4452) into MethodInvocation(4983) at 2", "Insert SimpleName: pwriter(4985) into MethodInvocation(4988) at 0", "Insert SimpleName: print(4986) into MethodInvocation(4988) at 1", "Move StringLiteral: \",sent=\"(4455) into MethodInvocation(4988) at 2", "Update SimpleName: append(4457) to pwriter", "Move SimpleName: append(4457) into MethodInvocation(4994) at 0", "Insert SimpleName: print(4991) into MethodInvocation(4994) at 1", "Move MethodInvocation(4459) into MethodInvocation(4994) at 2", "Update SimpleName: sb(4580) to pwriter", "Update SimpleName: append(4581) to println", "Update StringLiteral: \")\\n\"(4582) to \")\"", "Insert Block(567) into IfStatement(568) at 2", "Insert MethodInvocation(2740) into InfixExpression: >(2742) at 0", "Insert NumberLiteral: 0(2741) into InfixExpression: >(2742) at 1", "Insert QualifiedName: SelectionKey.OP_READ(2763) into InfixExpression: |(2765) at 0", "Insert QualifiedName: SelectionKey.OP_WRITE(2764) into InfixExpression: |(2765) at 1", "Update SimpleName: sb(2777) to sk", "Update SimpleName: append(2778) to selector", "Insert SimpleName: SendBufferWriter(2945) into SimpleType: SendBufferWriter(2946) at 0", "Update SimpleName: sb(2877) to pwriter", "Update SimpleName: append(2878) to print", "Update StringLiteral: \"ZooKeeperServer not running\\n\"(2879) to \"imok\"", "Insert MethodInvocation(2981) into ExpressionStatement(2982) at 0", "Move VariableDeclarationStatement(2518) into Block(3030) at 0", "Move IfStatement(2528) into Block(3030) at 1", "Move ExpressionStatement(2542) into Block(3030) at 2", "Move VariableDeclarationStatement(2549) into Block(3030) at 3", "Move ExpressionStatement(2554) into Block(3030) at 4", "Insert ExpressionStatement(3027) into Block(3030) at 5", "Move ReturnStatement(2583) into Block(3030) at 6", "Move InfixExpression: ==(2905) into IfStatement(3558) at 0", "Insert Block(3078) into IfStatement(3558) at 1", "Insert IfStatement(3557) into IfStatement(3558) at 2", "Update SimpleName: k(3070) to pwriter", "Update SimpleName: interestOps(3071) to flush", "Insert SimpleName: pwriter(3569) into MethodInvocation(3571) at 0", "Insert SimpleName: close(3570) into MethodInvocation(3571) at 1", "Move ExpressionStatement(547) into Block(561) at 1", "Move ExpressionStatement(553) into Block(561) at 2", "Insert ExpressionStatement(566) into Block(567) at 0", "Move SimpleName: sb(2716) into MethodInvocation(2740) at 0", "Update SimpleName: append(2717) to length", "Move SimpleName: append(2717) into MethodInvocation(2740) at 1", "Update SimpleName: sendBuffer(2884) to pwriter", "Move SimpleName: sendBuffer(2884) into MethodInvocation(2981) at 0", "Insert SimpleName: print(2979) into MethodInvocation(2981) at 1", "Insert SimpleName: traceMask(2980) into MethodInvocation(2981) at 2", "Insert MethodInvocation(3026) into ExpressionStatement(3027) at 0", "Move VariableDeclarationStatement(2938) into Block(3078) at 0", "Insert ExpressionStatement(3049) into Block(3078) at 1", "Insert EnhancedForStatement(3075) into Block(3078) at 2", "Move ReturnStatement(2986) into Block(3078) at 3", "Move InfixExpression: ==(2990) into IfStatement(3557) at 0", "Insert Block(3107) into IfStatement(3557) at 1", "Insert IfStatement(3556) into IfStatement(3557) at 2", "Insert ExpressionStatement(5011) into Block(5148) at 0", "Insert ExpressionStatement(5019) into Block(5148) at 1", "Insert ExpressionStatement(5024) into Block(5148) at 2", "Insert ExpressionStatement(5030) into Block(5148) at 3", "Insert ExpressionStatement(5035) into Block(5148) at 4", "Insert ExpressionStatement(5043) into Block(5148) at 5", "Insert ExpressionStatement(5048) into Block(5148) at 6", "Insert ExpressionStatement(5054) into Block(5148) at 7", "Insert ExpressionStatement(5083) into Block(5148) at 10", "Insert ExpressionStatement(5092) into Block(5148) at 11", "Insert ExpressionStatement(5097) into Block(5148) at 12", "Insert ExpressionStatement(5103) into Block(5148) at 13", "Insert ExpressionStatement(5108) into Block(5148) at 14", "Insert ExpressionStatement(5114) into Block(5148) at 15", "Insert ExpressionStatement(5119) into Block(5148) at 16", "Insert ExpressionStatement(5125) into Block(5148) at 17", "Insert ExpressionStatement(5130) into Block(5148) at 18", "Insert ExpressionStatement(5136) into Block(5148) at 19", "Insert ExpressionStatement(5141) into Block(5148) at 20", "Insert ExpressionStatement(5147) into Block(5148) at 21", "Insert MethodInvocation(565) into ExpressionStatement(566) at 0", "Insert ExpressionStatement(1522) into Block(1523) at 2", "Update SimpleName: ByteBuffer(2885) to pwriter", "Move SimpleName: ByteBuffer(2885) into MethodInvocation(3026) at 0", "Update SimpleName: wrap(2886) to print", "Move SimpleName: wrap(2886) into MethodInvocation(3026) at 1", "Insert SimpleName: traceMask(3025) into MethodInvocation(3026) at 2", "Insert MethodInvocation(3048) into ExpressionStatement(3049) at 0", "Move SingleVariableDeclaration(2947) into EnhancedForStatement(3075) at 0", "Insert SimpleName: env(3054) into EnhancedForStatement(3075) at 1", "Insert Block(3074) into EnhancedForStatement(3075) at 2", "Insert IfStatement(3093) into Block(3107) at 0", "Move ExpressionStatement(3010) into Block(3107) at 1", "Move ExpressionStatement(2919) into Block(3107) at 2", "Move ReturnStatement(3026) into Block(3107) at 3", "Move InfixExpression: ==(3030) into IfStatement(3556) at 0", "Insert Block(3146) into IfStatement(3556) at 1", "Insert IfStatement(3555) into IfStatement(3556) at 2", "Insert MethodInvocation(5010) into ExpressionStatement(5011) at 0", "Insert MethodInvocation(5018) into ExpressionStatement(5019) at 0", "Insert MethodInvocation(5023) into ExpressionStatement(5024) at 0", "Insert MethodInvocation(5029) into ExpressionStatement(5030) at 0", "Insert MethodInvocation(5034) into ExpressionStatement(5035) at 0", "Insert MethodInvocation(5042) into ExpressionStatement(5043) at 0", "Insert MethodInvocation(5047) into ExpressionStatement(5048) at 0", "Insert MethodInvocation(5053) into ExpressionStatement(5054) at 0", "Insert MethodInvocation(5082) into ExpressionStatement(5083) at 0", "Insert MethodInvocation(5091) into ExpressionStatement(5092) at 0", "Insert MethodInvocation(5096) into ExpressionStatement(5097) at 0", "Insert MethodInvocation(5102) into ExpressionStatement(5103) at 0", "Insert MethodInvocation(5107) into ExpressionStatement(5108) at 0", "Insert MethodInvocation(5113) into ExpressionStatement(5114) at 0", "Insert MethodInvocation(5118) into ExpressionStatement(5119) at 0", "Insert MethodInvocation(5124) into ExpressionStatement(5125) at 0", "Insert MethodInvocation(5129) into ExpressionStatement(5130) at 0", "Insert MethodInvocation(5135) into ExpressionStatement(5136) at 0", "Insert MethodInvocation(5140) into ExpressionStatement(5141) at 0", "Insert MethodInvocation(5146) into ExpressionStatement(5147) at 0", "Insert SimpleName: s(562) into MethodInvocation(565) at 0", "Insert SimpleName: add(563) into MethodInvocation(565) at 1", "Insert SimpleName: cnxn(564) into MethodInvocation(565) at 2", "Insert MethodInvocation(1521) into ExpressionStatement(1522) at 0", "Update SimpleName: sb(2887) to pwriter", "Move SimpleName: sb(2887) into MethodInvocation(3048) at 0", "Update SimpleName: toString(2888) to println", "Move SimpleName: toString(2888) into MethodInvocation(3048) at 1", "Insert StringLiteral: \"Environment:\"(3047) into MethodInvocation(3048) at 2", "Move ExpressionStatement(2899) into Block(3074) at 0", "Insert ExpressionStatement(3066) into Block(3074) at 1", "Insert ExpressionStatement(3073) into Block(3074) at 2", "Move InfixExpression: ==(2604) into IfStatement(3093) at 0", "Insert Block(3092) into IfStatement(3093) at 1", "Insert IfStatement(3122) into Block(3146) at 0", "Move SynchronizedStatement(3060) into Block(3146) at 1", "Move ExpressionStatement(2943) into Block(3146) at 2", "Move ReturnStatement(3076) into Block(3146) at 3", "Move InfixExpression: ==(2587) into IfStatement(3555) at 0", "Insert Block(3213) into IfStatement(3555) at 1", "Insert IfStatement(3554) into IfStatement(3555) at 2", "Update SimpleName: sb(4473) to pwriter", "Move SimpleName: sb(4473) into MethodInvocation(5010) at 0", "Update SimpleName: append(4474) to print", "Move SimpleName: append(4474) into MethodInvocation(5010) at 1", "Move StringLiteral: \",sid=0x\"(4475) into MethodInvocation(5010) at 2", "Update SimpleName: append(4477) to pwriter", "Move SimpleName: append(4477) into MethodInvocation(5018) at 0", "Update SimpleName: append(4483) to print", "Move SimpleName: append(4483) into MethodInvocation(5018) at 1", "Move MethodInvocation(4481) into MethodInvocation(5018) at 2", "Insert SimpleName: pwriter(5020) into MethodInvocation(5023) at 0", "Insert SimpleName: print(5021) into MethodInvocation(5023) at 1", "Move StringLiteral: \",lop=\"(4484) into MethodInvocation(5023) at 2", "Update SimpleName: append(4486) to pwriter", "Move SimpleName: append(4486) into MethodInvocation(5029) at 0", "Update SimpleName: append(4490) to print", "Move SimpleName: append(4490) into MethodInvocation(5029) at 1", "Move MethodInvocation(4488) into MethodInvocation(5029) at 2", "Insert SimpleName: pwriter(5031) into MethodInvocation(5034) at 0", "Insert SimpleName: print(5032) into MethodInvocation(5034) at 1", "Move StringLiteral: \",est=\"(4491) into MethodInvocation(5034) at 2", "Update SimpleName: append(4493) to pwriter", "Move SimpleName: append(4493) into MethodInvocation(5042) at 0", "Update SimpleName: append(4499) to print", "Move SimpleName: append(4499) into MethodInvocation(5042) at 1", "Move MethodInvocation(4497) into MethodInvocation(5042) at 2", "Insert SimpleName: pwriter(5044) into MethodInvocation(5047) at 0", "Insert SimpleName: print(5045) into MethodInvocation(5047) at 1", "Move StringLiteral: \",to=\"(4500) into MethodInvocation(5047) at 2", "Update SimpleName: append(4502) to pwriter", "Move SimpleName: append(4502) into MethodInvocation(5053) at 0", "Insert SimpleName: print(5050) into MethodInvocation(5053) at 1", "Move MethodInvocation(4504) into MethodInvocation(5053) at 2", "Insert ExpressionStatement(5068) into Block(5077) at 0", "Insert ExpressionStatement(5076) into Block(5077) at 1", "Update SimpleName: sb(4529) to pwriter", "Move SimpleName: sb(4529) into MethodInvocation(5082) at 0", "Update SimpleName: append(4530) to print", "Move SimpleName: append(4530) into MethodInvocation(5082) at 1", "Move StringLiteral: \",lzxid=0x\"(4531) into MethodInvocation(5082) at 2", "Update SimpleName: append(4533) to pwriter", "Move SimpleName: append(4533) into MethodInvocation(5091) at 0", "Update SimpleName: append(4540) to print", "Move SimpleName: append(4540) into MethodInvocation(5091) at 1", "Move MethodInvocation(4538) into MethodInvocation(5091) at 2", "Insert SimpleName: pwriter(5093) into MethodInvocation(5096) at 0", "Insert SimpleName: print(5094) into MethodInvocation(5096) at 1", "Move StringLiteral: \",lresp=\"(4541) into MethodInvocation(5096) at 2", "Update SimpleName: append(4543) to pwriter", "Move SimpleName: append(4543) into MethodInvocation(5102) at 0", "Update SimpleName: append(4547) to print", "Move SimpleName: append(4547) into MethodInvocation(5102) at 1", "Move MethodInvocation(4545) into MethodInvocation(5102) at 2", "Insert SimpleName: pwriter(5104) into MethodInvocation(5107) at 0", "Insert SimpleName: print(5105) into MethodInvocation(5107) at 1", "Move StringLiteral: \",llat=\"(4548) into MethodInvocation(5107) at 2", "Update SimpleName: append(4550) to pwriter", "Move SimpleName: append(4550) into MethodInvocation(5113) at 0", "Update SimpleName: append(4554) to print", "Move SimpleName: append(4554) into MethodInvocation(5113) at 1", "Move MethodInvocation(4552) into MethodInvocation(5113) at 2", "Insert SimpleName: pwriter(5115) into MethodInvocation(5118) at 0", "Insert SimpleName: print(5116) into MethodInvocation(5118) at 1", "Move StringLiteral: \",minlat=\"(4555) into MethodInvocation(5118) at 2", "Update SimpleName: append(4557) to pwriter", "Move SimpleName: append(4557) into MethodInvocation(5124) at 0", "Update SimpleName: append(4561) to print", "Move SimpleName: append(4561) into MethodInvocation(5124) at 1", "Move MethodInvocation(4559) into MethodInvocation(5124) at 2", "Insert SimpleName: pwriter(5126) into MethodInvocation(5129) at 0", "Insert SimpleName: print(5127) into MethodInvocation(5129) at 1", "Move StringLiteral: \",avglat=\"(4562) into MethodInvocation(5129) at 2", "Update SimpleName: append(4564) to pwriter", "Move SimpleName: append(4564) into MethodInvocation(5135) at 0", "Update SimpleName: append(4568) to print", "Move SimpleName: append(4568) into MethodInvocation(5135) at 1", "Move MethodInvocation(4566) into MethodInvocation(5135) at 2", "Insert SimpleName: pwriter(5137) into MethodInvocation(5140) at 0", "Insert SimpleName: print(5138) into MethodInvocation(5140) at 1", "Move StringLiteral: \",maxlat=\"(4569) into MethodInvocation(5140) at 2", "Update SimpleName: append(4571) to pwriter", "Move SimpleName: append(4571) into MethodInvocation(5146) at 0", "Insert SimpleName: print(5143) into MethodInvocation(5146) at 1", "Move MethodInvocation(4573) into MethodInvocation(5146) at 2", "Insert NumberLiteral: 2(546) into ClassInstanceCreation(547) at 1", "Insert SimpleName: incomingBuffer(1519) into MethodInvocation(1521) at 0", "Insert SimpleName: clear(1520) into MethodInvocation(1521) at 1", "Insert MethodInvocation(3065) into ExpressionStatement(3066) at 0", "Insert MethodInvocation(3072) into ExpressionStatement(3073) at 0", "Insert ExpressionStatement(3089) into Block(3092) at 0", "Insert ReturnStatement(3091) into Block(3092) at 1", "Update SimpleName: packetReceived(2917) to pwriter", "Insert SimpleName: println(3101) into MethodInvocation(3103) at 1", "Insert StringLiteral: \"Server stats reset.\"(3102) into MethodInvocation(3103) at 2", "Insert InfixExpression: ==(3113) into IfStatement(3122) at 0", "Insert Block(3121) into IfStatement(3122) at 1", "Insert IfStatement(3161) into Block(3213) at 0", "Insert ExpressionStatement(3165) into Block(3213) at 1", "Insert ExpressionStatement(3210) into Block(3213) at 2", "Move ReturnStatement(2434) into Block(3213) at 3", "Move InfixExpression: ||(2682) into IfStatement(3554) at 0", "Insert Block(3358) into IfStatement(3554) at 1", "Insert IfStatement(3553) into IfStatement(3554) at 2", "Insert MethodInvocation(5067) into ExpressionStatement(5068) at 0", "Insert MethodInvocation(5075) into ExpressionStatement(5076) at 0", "Update SimpleName: k(2895) to pwriter", "Update SimpleName: interestOps(2896) to print", "Move MethodInvocation(2953) into MethodInvocation(3060) at 2", "Update SimpleName: LOG(2906) to pwriter", "Move SimpleName: LOG(2906) into MethodInvocation(3065) at 0", "Update SimpleName: info(2907) to print", "Move SimpleName: info(2907) into MethodInvocation(3065) at 1", "Insert StringLiteral: \"=\"(3064) into MethodInvocation(3065) at 2", "Update SimpleName: sock(2909) to pwriter", "Move SimpleName: sock(2909) into MethodInvocation(3072) at 0", "Update SimpleName: socket(2910) to println", "Move SimpleName: socket(2910) into MethodInvocation(3072) at 1", "Move MethodInvocation(2961) into MethodInvocation(3072) at 2", "Insert MethodInvocation(3088) into ExpressionStatement(3089) at 0", "Insert BooleanLiteral: true(3090) into ReturnStatement(3091) at 0", "Insert SimpleName: zk(3111) into InfixExpression: ==(3113) at 0", "Insert NullLiteral(3112) into InfixExpression: ==(3113) at 1", "Insert ExpressionStatement(3118) into Block(3121) at 0", "Insert ReturnStatement(3120) into Block(3121) at 1", "Update SimpleName: sb(2939) to pwriter", "Update SimpleName: append(2940) to println", "Update StringLiteral: \"Environment:\\n\"(2941) to \"Connection stats reset.\"", "Insert InfixExpression: ==(3152) into IfStatement(3161) at 0", "Insert Block(3160) into IfStatement(3161) at 1", "Insert Assignment: =(3164) into ExpressionStatement(3165) at 0", "Insert MethodInvocation(3209) into ExpressionStatement(3210) at 0", "Insert IfStatement(3232) into Block(3358) at 0", "Insert ExpressionStatement(3236) into Block(3358) at 1", "Insert ExpressionStatement(3355) into Block(3358) at 2", "Move ReturnStatement(2817) into Block(3358) at 3", "Move InfixExpression: ==(2821) into IfStatement(3553) at 0", "Insert Block(3454) into IfStatement(3553) at 1", "Insert IfStatement(3552) into IfStatement(3553) at 2", "Update SimpleName: sb(4516) to pwriter", "Move SimpleName: sb(4516) into MethodInvocation(5067) at 0", "Update SimpleName: append(4517) to print", "Move SimpleName: append(4517) into MethodInvocation(5067) at 1", "Move StringLiteral: \",lcxid=0x\"(4518) into MethodInvocation(5067) at 2", "Update SimpleName: append(4520) to pwriter", "Move SimpleName: append(4520) into MethodInvocation(5075) at 0", "Insert SimpleName: print(5070) into MethodInvocation(5075) at 1", "Move MethodInvocation(4524) into MethodInvocation(5075) at 2", "Update SimpleName: getRemoteSocketAddress(2912) to pwriter", "Move SimpleName: getRemoteSocketAddress(2912) into MethodInvocation(3088) at 0", "Insert SimpleName: println(3086) into MethodInvocation(3088) at 1", "Insert SimpleName: ZK_NOT_SERVING(3087) into MethodInvocation(3088) at 2", "Insert MethodInvocation(3117) into ExpressionStatement(3118) at 0", "Insert BooleanLiteral: true(3119) into ReturnStatement(3120) at 0", "Insert SimpleName: zk(3150) into InfixExpression: ==(3152) at 0", "Insert NullLiteral(3151) into InfixExpression: ==(3152) at 1", "Insert ExpressionStatement(3157) into Block(3160) at 0", "Insert ReturnStatement(3159) into Block(3160) at 1", "Insert SimpleName: threadWillClosePWriter(3162) into Assignment: =(3164) at 0", "Insert BooleanLiteral: true(3163) into Assignment: =(3164) at 1", "Insert ClassInstanceCreation(3207) into MethodInvocation(3209) at 0", "Update SimpleName: getBytes(2975) to start", "Move SimpleName: getBytes(2975) into MethodInvocation(3209) at 1", "Insert InfixExpression: ==(3223) into IfStatement(3232) at 0", "Insert Block(3231) into IfStatement(3232) at 1", "Insert Assignment: =(3235) into ExpressionStatement(3236) at 0", "Insert MethodInvocation(3354) into ExpressionStatement(3355) at 0", "Insert IfStatement(3373) into Block(3454) at 0", "Insert ExpressionStatement(3377) into Block(3454) at 1", "Move ExpressionStatement(3041) into Block(3454) at 2", "Move ReturnStatement(2901) into Block(3454) at 3", "Insert InfixExpression: ||(3465) into IfStatement(3552) at 0", "Insert Block(3551) into IfStatement(3552) at 1", "Insert SimpleName: pwriter(3114) into MethodInvocation(3117) at 0", "Insert SimpleName: println(3115) into MethodInvocation(3117) at 1", "Insert SimpleName: ZK_NOT_SERVING(3116) into MethodInvocation(3117) at 2", "Insert MethodInvocation(3156) into ExpressionStatement(3157) at 0", "Insert BooleanLiteral: true(3158) into ReturnStatement(3159) at 0", "Insert SimpleType: Thread(3167) into ClassInstanceCreation(3207) at 0", "Insert AnonymousClassDeclaration(3206) into ClassInstanceCreation(3207) at 1", "Insert SimpleName: zk(3221) into InfixExpression: ==(3223) at 0", "Insert NullLiteral(3222) into InfixExpression: ==(3223) at 1", "Move ExpressionStatement(2984) into Block(3231) at 0", "Insert ReturnStatement(3230) into Block(3231) at 1", "Insert SimpleName: threadWillClosePWriter(3233) into Assignment: =(3235) at 0", "Insert BooleanLiteral: true(3234) into Assignment: =(3235) at 1", "Insert ClassInstanceCreation(3352) into MethodInvocation(3354) at 0", "Insert SimpleName: start(3353) into MethodInvocation(3354) at 1", "Insert InfixExpression: ==(3364) into IfStatement(3373) at 0", "Insert Block(3372) into IfStatement(3373) at 1", "Insert Assignment: =(3376) into ExpressionStatement(3377) at 0", "Insert InfixExpression: ||(3461) into InfixExpression: ||(3465) at 0", "Insert InfixExpression: ==(3464) into InfixExpression: ||(3465) at 1", "Insert IfStatement(3477) into Block(3551) at 0", "Insert ExpressionStatement(3481) into Block(3551) at 1", "Move ExpressionStatement(3069) into Block(3551) at 2", "Move ReturnStatement(2674) into Block(3551) at 3", "Update SimpleName: sb(2949) to pwriter", "Move SimpleName: sb(2949) into MethodInvocation(3156) at 0", "Update SimpleName: append(2950) to println", "Move SimpleName: append(2950) into MethodInvocation(3156) at 1", "Insert SimpleName: ZK_NOT_SERVING(3155) into MethodInvocation(3156) at 2", "Insert SimpleName: Thread(3166) into SimpleType: Thread(3167) at 0", "Insert MethodDeclaration(3205) into AnonymousClassDeclaration(3206) at 0", "Insert BooleanLiteral: true(3229) into ReturnStatement(3230) at 0", "Insert SimpleType: Thread(3238) into ClassInstanceCreation(3352) at 0", "Insert AnonymousClassDeclaration(3351) into ClassInstanceCreation(3352) at 1", "Insert SimpleName: zk(3362) into InfixExpression: ==(3364) at 0", "Insert NullLiteral(3363) into InfixExpression: ==(3364) at 1", "Insert ExpressionStatement(3369) into Block(3372) at 0", "Insert ReturnStatement(3371) into Block(3372) at 1", "Insert SimpleName: threadWillClosePWriter(3374) into Assignment: =(3376) at 0", "Insert BooleanLiteral: true(3375) into Assignment: =(3376) at 1", "Insert ClassInstanceCreation(3448) into MethodInvocation(3450) at 0", "Insert SimpleName: start(3449) into MethodInvocation(3450) at 1", "Insert InfixExpression: ==(3457) into InfixExpression: ||(3461) at 0", "Insert InfixExpression: ==(3460) into InfixExpression: ||(3461) at 1", "Insert SimpleName: len(3462) into InfixExpression: ==(3464) at 0", "Insert SimpleName: wchsCmd(3463) into InfixExpression: ==(3464) at 1", "Insert InfixExpression: ==(3468) into IfStatement(3477) at 0", "Insert Block(3476) into IfStatement(3477) at 1", "Insert Assignment: =(3480) into ExpressionStatement(3481) at 0", "Insert MarkerAnnotation(3169) into MethodDeclaration(3205) at 0", "Insert Modifier: public(3170) into MethodDeclaration(3205) at 1", "Insert PrimitiveType: void(3171) into MethodDeclaration(3205) at 2", "Insert SimpleName: run(3172) into MethodDeclaration(3205) at 3", "Insert Block(3204) into MethodDeclaration(3205) at 4", "Update SimpleName: k(2980) to pwriter", "Update SimpleName: interestOps(2981) to println", "Insert SimpleName: ZK_NOT_SERVING(3226) into MethodInvocation(3227) at 2", "Insert SimpleName: Thread(3237) into SimpleType: Thread(3238) at 0", "Insert MethodDeclaration(3350) into AnonymousClassDeclaration(3351) at 0", "Insert MethodInvocation(3368) into ExpressionStatement(3369) at 0", "Insert BooleanLiteral: true(3370) into ReturnStatement(3371) at 0", "Insert SimpleType: Thread(3379) into ClassInstanceCreation(3448) at 0", "Insert AnonymousClassDeclaration(3447) into ClassInstanceCreation(3448) at 1", "Insert SimpleName: len(3455) into InfixExpression: ==(3457) at 0", "Insert SimpleName: wchpCmd(3456) into InfixExpression: ==(3457) at 1", "Insert SimpleName: len(3458) into InfixExpression: ==(3460) at 0", "Insert SimpleName: wchcCmd(3459) into InfixExpression: ==(3460) at 1", "Insert SimpleName: zk(3466) into InfixExpression: ==(3468) at 0", "Insert NullLiteral(3467) into InfixExpression: ==(3468) at 1", "Move ExpressionStatement(3044) into Block(3476) at 0", "Insert ReturnStatement(3475) into Block(3476) at 1", "Insert SimpleName: threadWillClosePWriter(3478) into Assignment: =(3480) at 0", "Insert BooleanLiteral: true(3479) into Assignment: =(3480) at 1", "Insert ClassInstanceCreation(3545) into MethodInvocation(3547) at 0", "Insert SimpleName: start(3546) into MethodInvocation(3547) at 1", "Insert SimpleName: Override(3168) into MarkerAnnotation(3169) at 0", "Insert TryStatement(3203) into Block(3204) at 0", "Insert SingleMemberAnnotation(3241) into MethodDeclaration(3350) at 0", "Insert MarkerAnnotation(3243) into MethodDeclaration(3350) at 1", "Insert Modifier: public(3244) into MethodDeclaration(3350) at 2", "Insert PrimitiveType: void(3245) into MethodDeclaration(3350) at 3", "Insert SimpleName: run(3246) into MethodDeclaration(3350) at 4", "Insert Block(3349) into MethodDeclaration(3350) at 5", "Insert SimpleName: pwriter(3365) into MethodInvocation(3368) at 0", "Insert SimpleName: println(3366) into MethodInvocation(3368) at 1", "Insert SimpleName: ZK_NOT_SERVING(3367) into MethodInvocation(3368) at 2", "Insert SimpleName: Thread(3378) into SimpleType: Thread(3379) at 0", "Insert MethodDeclaration(3446) into AnonymousClassDeclaration(3447) at 0", "Insert BooleanLiteral: true(3474) into ReturnStatement(3475) at 0", "Insert SimpleType: Thread(3483) into ClassInstanceCreation(3545) at 0", "Insert AnonymousClassDeclaration(3544) into ClassInstanceCreation(3545) at 1", "Insert Block(3193) into TryStatement(3203) at 0", "Insert Block(3202) into TryStatement(3203) at 1", "Insert SimpleName: SuppressWarnings(3239) into SingleMemberAnnotation(3241) at 0", "Insert StringLiteral: \"unchecked\"(3240) into SingleMemberAnnotation(3241) at 1", "Insert SimpleName: Override(3242) into MarkerAnnotation(3243) at 0", "Insert TryStatement(3348) into Block(3349) at 0", "Insert SingleMemberAnnotation(3382) into MethodDeclaration(3446) at 0", "Insert MarkerAnnotation(3384) into MethodDeclaration(3446) at 1", "Insert Modifier: public(3385) into MethodDeclaration(3446) at 2", "Insert PrimitiveType: void(3386) into MethodDeclaration(3446) at 3", "Insert SimpleName: run(3387) into MethodDeclaration(3446) at 4", "Insert Block(3445) into MethodDeclaration(3446) at 5", "Update SimpleName: packetReceived(3042) to pwriter", "Insert SimpleName: println(3470) into MethodInvocation(3472) at 1", "Insert SimpleName: ZK_NOT_SERVING(3471) into MethodInvocation(3472) at 2", "Insert SimpleName: Thread(3482) into SimpleType: Thread(3483) at 0", "Insert MethodDeclaration(3543) into AnonymousClassDeclaration(3544) at 0", "Insert ExpressionStatement(3177) into Block(3193) at 0", "Insert ExpressionStatement(3182) into Block(3193) at 1", "Insert ExpressionStatement(3187) into Block(3193) at 2", "Insert ExpressionStatement(3192) into Block(3193) at 3", "Insert ExpressionStatement(3197) into Block(3202) at 0", "Insert ExpressionStatement(3201) into Block(3202) at 1", "Insert Block(3338) into TryStatement(3348) at 0", "Insert Block(3347) into TryStatement(3348) at 1", "Insert SimpleName: SuppressWarnings(3380) into SingleMemberAnnotation(3382) at 0", "Insert StringLiteral: \"unchecked\"(3381) into SingleMemberAnnotation(3382) at 1", "Insert SimpleName: Override(3383) into MarkerAnnotation(3384) at 0", "Insert TryStatement(3444) into Block(3445) at 0", "Insert MarkerAnnotation(3485) into MethodDeclaration(3543) at 0", "Insert Modifier: public(3486) into MethodDeclaration(3543) at 1", "Insert PrimitiveType: void(3487) into MethodDeclaration(3543) at 2", "Insert SimpleName: run(3488) into MethodDeclaration(3543) at 3", "Insert Block(3542) into MethodDeclaration(3543) at 4", "Insert MethodInvocation(3176) into ExpressionStatement(3177) at 0", "Insert MethodInvocation(3181) into ExpressionStatement(3182) at 0", "Insert MethodInvocation(3186) into ExpressionStatement(3187) at 0", "Insert MethodInvocation(3191) into ExpressionStatement(3192) at 0", "Insert MethodInvocation(3196) into ExpressionStatement(3197) at 0", "Insert MethodInvocation(3200) into ExpressionStatement(3201) at 0", "Insert ExpressionStatement(3251) into Block(3338) at 0", "Insert ExpressionStatement(3258) into Block(3338) at 1", "Insert IfStatement(3314) into Block(3338) at 2", "Move ExpressionStatement(2776) into Block(3338) at 3", "Insert ExpressionStatement(3328) into Block(3338) at 4", "Move ExpressionStatement(3024) into Block(3338) at 5", "Insert ExpressionStatement(3342) into Block(3347) at 0", "Insert ExpressionStatement(3346) into Block(3347) at 1", "Insert Block(3434) into TryStatement(3444) at 0", "Insert Block(3443) into TryStatement(3444) at 1", "Insert SimpleName: Override(3484) into MarkerAnnotation(3485) at 0", "Insert TryStatement(3541) into Block(3542) at 0", "Insert SimpleName: pwriter(3173) into MethodInvocation(3176) at 0", "Insert SimpleName: println(3174) into MethodInvocation(3176) at 1", "Update StringLiteral: \"=\"(2956) to \"SessionTracker dump:\"", "Move StringLiteral: \"=\"(2956) into MethodInvocation(3176) at 2", "Insert QualifiedName: zk.sessionTracker(3178) into MethodInvocation(3181) at 0", "Update SimpleName: append(2958) to dumpSessions", "Move SimpleName: append(2958) into MethodInvocation(3181) at 1", "Update SimpleName: append(2963) to pwriter", "Move SimpleName: append(2963) into MethodInvocation(3181) at 2", "Insert SimpleName: pwriter(3183) into MethodInvocation(3186) at 0", "Insert SimpleName: println(3184) into MethodInvocation(3186) at 1", "Update StringLiteral: \"\\n\"(2964) to \"ephemeral nodes dump:\"", "Move StringLiteral: \"\\n\"(2964) into MethodInvocation(3186) at 2", "Insert SimpleName: zk(3188) into MethodInvocation(3191) at 0", "Insert SimpleName: dumpEphemerals(3189) into MethodInvocation(3191) at 1", "Update SimpleName: sendBuffer(2969) to pwriter", "Move SimpleName: sendBuffer(2969) into MethodInvocation(3191) at 2", "Update SimpleName: ByteBuffer(2970) to pwriter", "Move SimpleName: ByteBuffer(2970) into MethodInvocation(3196) at 0", "Update SimpleName: wrap(2971) to flush", "Move SimpleName: wrap(2971) into MethodInvocation(3196) at 1", "Update SimpleName: sb(2972) to pwriter", "Move SimpleName: sb(2972) into MethodInvocation(3200) at 0", "Update SimpleName: toString(2973) to close", "Move SimpleName: toString(2973) into MethodInvocation(3200) at 1", "Insert MethodInvocation(3250) into ExpressionStatement(3251) at 0", "Insert MethodInvocation(3257) into ExpressionStatement(3258) at 0", "Move InfixExpression: ==(2731) into IfStatement(3314) at 0", "Insert Block(3313) into IfStatement(3314) at 1", "Insert MethodInvocation(3327) into ExpressionStatement(3328) at 0", "Insert MethodInvocation(3341) into ExpressionStatement(3342) at 0", "Insert MethodInvocation(3345) into ExpressionStatement(3346) at 0", "Insert VariableDeclarationStatement(3395) into Block(3434) at 0", "Insert SynchronizedStatement(3410) into Block(3434) at 1", "Move EnhancedForStatement(2758) into Block(3434) at 2", "Insert ExpressionStatement(3433) into Block(3434) at 3", "Insert ExpressionStatement(3438) into Block(3443) at 0", "Insert ExpressionStatement(3442) into Block(3443) at 1", "Insert Block(3531) into TryStatement(3541) at 0", "Insert Block(3540) into TryStatement(3541) at 1", "Update SimpleName: LOG(2991) to pwriter", "Move SimpleName: LOG(2991) into MethodInvocation(3250) at 0", "Update SimpleName: info(2992) to print", "Move SimpleName: info(2992) into MethodInvocation(3250) at 1", "Insert StringLiteral: \"Zookeeper version: \"(3249) into MethodInvocation(3250) at 2", "Update SimpleName: sock(2994) to pwriter", "Move SimpleName: sock(2994) into MethodInvocation(3257) at 0", "Update SimpleName: socket(2995) to println", "Move SimpleName: socket(2995) into MethodInvocation(3257) at 1", "Move MethodInvocation(2723) into MethodInvocation(3257) at 2", "Insert ExpressionStatement(3266) into Block(3313) at 0", "Insert VariableDeclarationStatement(3274) into Block(3313) at 1", "Insert SynchronizedStatement(3289) into Block(3313) at 2", "Move EnhancedForStatement(2868) into Block(3313) at 3", "Insert ExpressionStatement(3312) into Block(3313) at 4", "Update SimpleName: sb(2768) to pwriter", "Update SimpleName: append(2769) to print", "Update SimpleName: ByteBuffer(3012) to pwriter", "Move SimpleName: ByteBuffer(3012) into MethodInvocation(3327) at 0", "Update SimpleName: wrap(3013) to print", "Move SimpleName: wrap(3013) into MethodInvocation(3327) at 1", "Update StringLiteral: \"Server stats reset.\\n\"(3014) to \"Node count: \"", "Move StringLiteral: \"Server stats reset.\\n\"(3014) into MethodInvocation(3327) at 2", "Update SimpleName: k(3020) to pwriter", "Update SimpleName: interestOps(3021) to println", "Move MethodInvocation(2786) into MethodInvocation(3336) at 2", "Insert SimpleName: pwriter(3339) into MethodInvocation(3341) at 0", "Insert SimpleName: flush(3340) into MethodInvocation(3341) at 1", "Insert SimpleName: pwriter(3343) into MethodInvocation(3345) at 0", "Insert SimpleName: close(3344) into MethodInvocation(3345) at 1", "Insert ParameterizedType: HashSet<NIOServerCnxn>(3392) into VariableDeclarationStatement(3395) at 0", "Insert VariableDeclarationFragment(3394) into VariableDeclarationStatement(3395) at 1", "Insert QualifiedName: factory.cnxns(3396) into SynchronizedStatement(3410) at 0", "Insert Block(3409) into SynchronizedStatement(3410) at 1", "Insert SimpleName: cnxns(3415) into EnhancedForStatement(3429) at 1", "Insert MethodInvocation(3432) into ExpressionStatement(3433) at 0", "Insert MethodInvocation(3437) into ExpressionStatement(3438) at 0", "Insert MethodInvocation(3441) into ExpressionStatement(3442) at 0", "Insert VariableDeclarationStatement(3498) into Block(3531) at 0", "Insert IfStatement(3526) into Block(3531) at 1", "Insert ExpressionStatement(3530) into Block(3531) at 2", "Insert ExpressionStatement(3535) into Block(3540) at 0", "Insert ExpressionStatement(3539) into Block(3540) at 1", "Insert MethodInvocation(3265) into ExpressionStatement(3266) at 0", "Insert ParameterizedType: HashSet<NIOServerCnxn>(3271) into VariableDeclarationStatement(3274) at 0", "Insert VariableDeclarationFragment(3273) into VariableDeclarationStatement(3274) at 1", "Insert QualifiedName: factory.cnxns(3275) into SynchronizedStatement(3289) at 0", "Insert Block(3288) into SynchronizedStatement(3289) at 1", "Insert SimpleName: cnxns(3294) into EnhancedForStatement(3308) at 1", "Insert MethodInvocation(3311) into ExpressionStatement(3312) at 0", "Insert SimpleType: HashSet(3389) into ParameterizedType: HashSet<NIOServerCnxn>(3392) at 0", "Insert SimpleType: NIOServerCnxn(3391) into ParameterizedType: HashSet<NIOServerCnxn>(3392) at 1", "Insert SimpleName: cnxns(3393) into VariableDeclarationFragment(3394) at 0", "Insert ExpressionStatement(3408) into Block(3409) at 0", "Update SimpleName: sock(3034) to pwriter", "Move SimpleName: sock(3034) into MethodInvocation(3432) at 0", "Update SimpleName: socket(3035) to println", "Move SimpleName: socket(3035) into MethodInvocation(3432) at 1", "Update SimpleName: getRemoteSocketAddress(3037) to pwriter", "Move SimpleName: getRemoteSocketAddress(3037) into MethodInvocation(3437) at 0", "Insert SimpleName: flush(3436) into MethodInvocation(3437) at 1", "Insert SimpleName: pwriter(3439) into MethodInvocation(3441) at 0", "Insert SimpleName: close(3440) into MethodInvocation(3441) at 1", "Insert SimpleType: DataTree(3490) into VariableDeclarationStatement(3498) at 0", "Insert VariableDeclarationFragment(3497) into VariableDeclarationStatement(3498) at 1", "Insert InfixExpression: ==(3501) into IfStatement(3526) at 0", "Insert Block(3507) into IfStatement(3526) at 1", "Insert IfStatement(3525) into IfStatement(3526) at 2", "Insert MethodInvocation(3529) into ExpressionStatement(3530) at 0", "Insert MethodInvocation(3534) into ExpressionStatement(3535) at 0", "Insert MethodInvocation(3538) into ExpressionStatement(3539) at 0", "Insert SimpleName: pwriter(3262) into MethodInvocation(3265) at 0", "Insert SimpleName: println(3263) into MethodInvocation(3265) at 1", "Insert StringLiteral: \"Clients:\"(3264) into MethodInvocation(3265) at 2", "Insert SimpleType: HashSet(3268) into ParameterizedType: HashSet<NIOServerCnxn>(3271) at 0", "Insert SimpleType: NIOServerCnxn(3270) into ParameterizedType: HashSet<NIOServerCnxn>(3271) at 1", "Insert SimpleName: cnxns(3272) into VariableDeclarationFragment(3273) at 0", "Move ExpressionStatement(3004) into Block(3288) at 0", "Update SimpleName: sendBuffer(3011) to pwriter", "Move SimpleName: sendBuffer(3011) into MethodInvocation(3311) at 0", "Insert SimpleName: println(3310) into MethodInvocation(3311) at 1", "Insert SimpleName: HashSet(3388) into SimpleType: HashSet(3389) at 0", "Insert SimpleName: NIOServerCnxn(3390) into SimpleType: NIOServerCnxn(3391) at 0", "Insert Assignment: =(3407) into ExpressionStatement(3408) at 0", "Move MethodInvocation(2754) into ExpressionStatement(3427) at 0", "Insert SimpleName: DataTree(3489) into SimpleType: DataTree(3490) at 0", "Insert SimpleName: dt(3491) into VariableDeclarationFragment(3497) at 0", "Move MethodInvocation(2649) into VariableDeclarationFragment(3497) at 1", "Insert SimpleName: len(3499) into InfixExpression: ==(3501) at 0", "Insert SimpleName: wchsCmd(3500) into InfixExpression: ==(3501) at 1", "Insert ExpressionStatement(3506) into Block(3507) at 0", "Insert InfixExpression: ==(3510) into IfStatement(3525) at 0", "Insert Block(3517) into IfStatement(3525) at 1", "Insert Block(3524) into IfStatement(3525) at 2", "Insert SimpleName: pwriter(3527) into MethodInvocation(3529) at 0", "Insert SimpleName: println(3528) into MethodInvocation(3529) at 1", "Insert SimpleName: pwriter(3532) into MethodInvocation(3534) at 0", "Insert SimpleName: flush(3533) into MethodInvocation(3534) at 1", "Insert SimpleName: pwriter(3536) into MethodInvocation(3538) at 0", "Insert SimpleName: close(3537) into MethodInvocation(3538) at 1", "Insert SimpleName: HashSet(3267) into SimpleType: HashSet(3268) at 0", "Insert SimpleName: NIOServerCnxn(3269) into SimpleType: NIOServerCnxn(3270) at 0", "Insert Assignment: =(3286) into ExpressionStatement(3287) at 0", "Move MethodInvocation(2864) into ExpressionStatement(3306) at 0", "Insert SimpleName: cnxns(3397) into Assignment: =(3407) at 0", "Insert CastExpression(3406) into Assignment: =(3407) at 1", "Update SimpleName: toString(2752) to dumpConnectionInfo", "Insert SimpleName: pwriter(3424) into MethodInvocation(3426) at 2", "Update BooleanLiteral: true(2753) to false", "Update SimpleName: dumpEphemerals(2648) to getDataTree", "Insert MethodInvocation(3505) into ExpressionStatement(3506) at 0", "Insert SimpleName: len(3508) into InfixExpression: ==(3510) at 0", "Insert SimpleName: wchpCmd(3509) into InfixExpression: ==(3510) at 1", "Insert ExpressionStatement(3516) into Block(3517) at 0", "Insert ExpressionStatement(3523) into Block(3524) at 0", "Insert SimpleName: cnxns(3276) into Assignment: =(3286) at 0", "Insert CastExpression(3285) into Assignment: =(3286) at 1", "Update SimpleName: toString(2862) to dumpConnectionInfo", "Insert SimpleName: pwriter(3303) into MethodInvocation(3305) at 2", "Update BooleanLiteral: false(2863) to true", "Insert ParameterizedType: HashSet<NIOServerCnxn>(3402) into CastExpression(3406) at 0", "Insert MethodInvocation(3405) into CastExpression(3406) at 1", "Insert SimpleName: dt(3502) into MethodInvocation(3505) at 0", "Insert SimpleName: dumpWatchesSummary(3503) into MethodInvocation(3505) at 1", "Update SimpleName: ByteBuffer(3062) to pwriter", "Move SimpleName: ByteBuffer(3062) into MethodInvocation(3505) at 2", "Insert MethodInvocation(3515) into ExpressionStatement(3516) at 0", "Insert MethodInvocation(3522) into ExpressionStatement(3523) at 0", "Insert ParameterizedType: HashSet<NIOServerCnxn>(3281) into CastExpression(3285) at 0", "Insert MethodInvocation(3284) into CastExpression(3285) at 1", "Insert SimpleType: HashSet(3399) into ParameterizedType: HashSet<NIOServerCnxn>(3402) at 0", "Insert SimpleType: NIOServerCnxn(3401) into ParameterizedType: HashSet<NIOServerCnxn>(3402) at 1", "Insert QualifiedName: factory.cnxns(3403) into MethodInvocation(3405) at 0", "Insert SimpleName: clone(3404) into MethodInvocation(3405) at 1", "Insert SimpleName: dt(3511) into MethodInvocation(3515) at 0", "Update SimpleName: getBytes(3065) to dumpWatches", "Move SimpleName: getBytes(3065) into MethodInvocation(3515) at 1", "Insert SimpleName: pwriter(3513) into MethodInvocation(3515) at 2", "Insert BooleanLiteral: true(3514) into MethodInvocation(3515) at 3", "Insert SimpleName: dt(3518) into MethodInvocation(3522) at 0", "Insert SimpleName: dumpWatches(3519) into MethodInvocation(3522) at 1", "Insert SimpleName: pwriter(3520) into MethodInvocation(3522) at 2", "Insert BooleanLiteral: false(3521) into MethodInvocation(3522) at 3", "Insert SimpleType: HashSet(3278) into ParameterizedType: HashSet<NIOServerCnxn>(3281) at 0", "Insert SimpleType: NIOServerCnxn(3280) into ParameterizedType: HashSet<NIOServerCnxn>(3281) at 1", "Insert QualifiedName: factory.cnxns(3282) into MethodInvocation(3284) at 0", "Update SimpleName: packetReceived(3002) to clone", "Move SimpleName: packetReceived(3002) into MethodInvocation(3284) at 1", "Insert SimpleName: HashSet(3398) into SimpleType: HashSet(3399) at 0", "Insert SimpleName: NIOServerCnxn(3400) into SimpleType: NIOServerCnxn(3401) at 0", "Insert SimpleName: HashSet(3277) into SimpleType: HashSet(3278) at 0", "Insert SimpleName: NIOServerCnxn(3279) into SimpleType: NIOServerCnxn(3280) at 0", "Delete SimpleType: StringBuilder(2619)", "Delete QualifiedName: zk.sessionTracker(2630)", "Delete SimpleName: toString(2631)", "Delete MethodInvocation(2632)", "Delete MethodInvocation(2633)", "Delete MethodInvocation(2650)", "Delete QualifiedName: SelectionKey.OP_WRITE(2670)", "Delete SimpleName: append(2733)", "Delete StringLiteral: \"Clients:\\n\"(2734)", "Delete QualifiedName: factory.cnxns(2737)", "Delete Block(2759)", "Delete SynchronizedStatement(2760)", "Delete StringLiteral: \"\\n\"(2763)", "Delete StringLiteral: \"Node count: \"(2779)", "Delete MethodInvocation(2787)", "Delete SimpleName: append(2788)", "Delete StringLiteral: \"\\n\"(2789)", "Delete MethodInvocation(2790)", "Delete StringLiteral: \"ZooKeeperServer not running\\n\"(2795)", "Delete SimpleName: interestOps(2812)", "Delete StringLiteral: \"Processing cons command from \"(2824)", "Delete MethodInvocation(2827)", "Delete MethodInvocation(2829)", "Delete InfixExpression: +(2830)", "Delete SimpleName: StringBuilder(2839)", "Delete SimpleType: StringBuilder(2840)", "Delete ClassInstanceCreation(2841)", "Delete SimpleName: append(2872)", "Delete StringLiteral: \"\\n\"(2873)", "Delete QualifiedName: SelectionKey.OP_WRITE(2897)", "Delete QualifiedName: SelectionKey.OP_WRITE(2982)", "Delete MethodInvocation(3003)", "Delete QualifiedName: factory.cnxns(2852)", "Delete SimpleName: sb(2853)", "Delete SimpleName: append(2854)", "Delete MethodInvocation(2865)", "Delete QualifiedName: SelectionKey.OP_WRITE(3022)", "Delete QualifiedName: factory.cnxns(2742)", "Delete SimpleName: sb(2743)", "Delete SimpleName: append(2744)", "Delete MethodInvocation(2755)", "Delete SimpleName: LOG(3031)", "Delete SimpleName: info(3032)", "Delete StringLiteral: \"Processing crst command from \"(3033)", "Delete MethodInvocation(3036)", "Delete MethodInvocation(3038)", "Delete InfixExpression: +(3039)", "Delete SimpleName: sendBuffer(3061)", "Delete SimpleName: wrap(3063)", "Delete StringLiteral: \"Connection stats reset.\\n\"(3064)", "Delete MethodInvocation(3066)", "Delete MethodInvocation(3067)", "Delete QualifiedName: SelectionKey.OP_WRITE(3072)", "Delete Modifier: private(2393)", "Delete PrimitiveType: boolean(2394)", "Delete SimpleName: checkFourLetterWord(2395)", "Delete SimpleName: SelectionKey(2396)", "Delete SimpleType: SelectionKey(2397)", "Delete SimpleName: k(2398)", "Delete SingleVariableDeclaration(2399)", "Delete StringLiteral: \"Processing ruok command from \"(2410)", "Delete SimpleName: socket(2412)", "Delete MethodInvocation(2413)", "Delete MethodInvocation(2415)", "Delete InfixExpression: +(2416)", "Delete MethodInvocation(2417)", "Delete ExpressionStatement(2418)", "Delete SimpleName: packetReceived(2419)", "Delete MethodInvocation(2420)", "Delete ExpressionStatement(2421)", "Delete MethodInvocation(2425)", "Delete MethodInvocation(2426)", "Delete ExpressionStatement(2427)", "Delete SimpleName: interestOps(2429)", "Delete QualifiedName: SelectionKey.OP_WRITE(2430)", "Delete MethodInvocation(2431)", "Delete ExpressionStatement(2432)", "Delete Block(2435)", "Delete StringLiteral: \"Processing getracemask command from \"(2441)", "Delete SimpleName: socket(2443)", "Delete MethodInvocation(2444)", "Delete MethodInvocation(2446)", "Delete InfixExpression: +(2447)", "Delete MethodInvocation(2448)", "Delete ExpressionStatement(2449)", "Delete SimpleName: packetReceived(2450)", "Delete MethodInvocation(2451)", "Delete ExpressionStatement(2452)", "Delete SimpleName: ByteBuffer(2460)", "Delete SimpleType: ByteBuffer(2461)", "Delete SimpleName: resp(2462)", "Delete SimpleName: allocate(2464)", "Delete NumberLiteral: 8(2465)", "Delete MethodInvocation(2466)", "Delete VariableDeclarationFragment(2467)", "Delete VariableDeclarationStatement(2468)", "Delete SimpleName: putLong(2470)", "Delete SimpleName: traceMask(2471)", "Delete MethodInvocation(2472)", "Delete ExpressionStatement(2473)", "Delete MethodInvocation(2476)", "Delete ExpressionStatement(2477)", "Delete SimpleName: resp(2479)", "Delete MethodInvocation(2480)", "Delete ExpressionStatement(2481)", "Delete QualifiedName: SelectionKey.OP_WRITE(2484)", "Delete MethodInvocation(2485)", "Delete ExpressionStatement(2486)", "Delete Block(2489)", "Delete SimpleName: info(2494)", "Delete StringLiteral: \"Processing settracemask command from \"(2495)", "Delete MethodInvocation(2500)", "Delete InfixExpression: +(2501)", "Delete MethodInvocation(2502)", "Delete ExpressionStatement(2503)", "Delete SimpleName: incomingBuffer(2504)", "Delete NumberLiteral: 8(2507)", "Delete MethodInvocation(2508)", "Delete Assignment: =(2509)", "Delete ExpressionStatement(2510)", "Delete QualifiedName: System.out(2532)", "Delete SimpleName: println(2533)", "Delete StringLiteral: \"rc=\"(2534)", "Delete SimpleName: rc(2535)", "Delete InfixExpression: +(2536)", "Delete MethodInvocation(2537)", "Delete ExpressionStatement(2538)", "Delete SimpleName: ByteBuffer(2555)", "Delete SimpleType: ByteBuffer(2556)", "Delete NumberLiteral: 8(2560)", "Delete MethodInvocation(2561)", "Delete VariableDeclarationFragment(2562)", "Delete VariableDeclarationStatement(2563)", "Delete MethodInvocation(2567)", "Delete ExpressionStatement(2568)", "Delete SimpleName: flip(2570)", "Delete MethodInvocation(2571)", "Delete ExpressionStatement(2572)", "Delete MethodInvocation(2575)", "Delete ExpressionStatement(2576)", "Delete SimpleName: interestOps(2578)", "Delete QualifiedName: SelectionKey.OP_WRITE(2579)", "Delete MethodInvocation(2580)", "Delete ExpressionStatement(2581)", "Delete Block(2584)", "Delete StringLiteral: \"Processing dump command from \"(2590)", "Delete SimpleName: socket(2592)", "Delete MethodInvocation(2593)", "Delete MethodInvocation(2595)", "Delete InfixExpression: +(2596)", "Delete MethodInvocation(2597)", "Delete ExpressionStatement(2598)", "Delete SimpleName: packetReceived(2599)", "Delete MethodInvocation(2600)", "Delete ExpressionStatement(2601)", "Delete SimpleName: sendBuffer(2605)", "Delete MethodInvocation(2612)", "Delete ExpressionStatement(2613)", "Delete Block(2614)", "Delete SimpleType: StringBuilder(2616)", "Delete VariableDeclarationFragment(2621)", "Delete VariableDeclarationStatement(2622)", "Delete MethodInvocation(2660)", "Delete MethodInvocation(2662)", "Delete MethodInvocation(2663)", "Delete MethodInvocation(2664)", "Delete ExpressionStatement(2665)", "Delete Block(2666)", "Delete IfStatement(2667)", "Delete Block(2675)", "Delete StringLiteral: \"Processing \"(2685)", "Delete SimpleName: len(2686)", "Delete SimpleName: statCmd(2687)", "Delete InfixExpression: ==(2688)", "Delete StringLiteral: \"stat\"(2689)", "Delete StringLiteral: \"srvr\"(2690)", "Delete ConditionalExpression(2691)", "Delete ParenthesizedExpression(2692)", "Delete StringLiteral: \" command from \"(2693)", "Delete InfixExpression: +(2699)", "Delete MethodInvocation(2700)", "Delete ExpressionStatement(2701)", "Delete SimpleType: StringBuilder(2706)", "Delete VariableDeclarationFragment(2711)", "Delete VariableDeclarationStatement(2712)", "Delete SimpleName: zk(2713)", "Delete NullLiteral(2714)", "Delete InfixExpression: !=(2715)", "Delete StringLiteral: \"Zookeeper version: \"(2718)", "Delete MethodInvocation(2719)", "Delete MethodInvocation(2724)", "Delete StringLiteral: \"\\n\"(2726)", "Delete MethodInvocation(2727)", "Delete ExpressionStatement(2728)", "Delete IfStatement(2767)", "Delete Block(2792)", "Delete Block(2798)", "Delete IfStatement(2799)", "Delete Block(2818)", "Delete QualifiedName: factory.cnxns(2847)", "Delete Block(2869)", "Delete SynchronizedStatement(2870)", "Delete Block(2876)", "Delete IfStatement(2883)", "Delete MethodInvocation(2889)", "Delete SimpleName: getBytes(2890)", "Delete MethodInvocation(2891)", "Delete MethodInvocation(2892)", "Delete MethodInvocation(2893)", "Delete ExpressionStatement(2894)", "Delete Block(2902)", "Delete StringLiteral: \"Processing envi command from \"(2908)", "Delete MethodInvocation(2911)", "Delete MethodInvocation(2913)", "Delete InfixExpression: +(2914)", "Delete MethodInvocation(2915)", "Delete ExpressionStatement(2916)", "Delete SimpleName: StringBuilder(2920)", "Delete SimpleType: StringBuilder(2921)", "Delete SimpleName: sb(2922)", "Delete SimpleName: StringBuilder(2923)", "Delete SimpleType: StringBuilder(2924)", "Delete ClassInstanceCreation(2925)", "Delete VariableDeclarationFragment(2926)", "Delete VariableDeclarationStatement(2927)", "Delete SimpleName: env(2948)", "Delete MethodInvocation(2954)", "Delete SimpleName: append(2955)", "Delete MethodInvocation(2957)", "Delete MethodInvocation(2962)", "Delete MethodInvocation(2965)", "Delete ExpressionStatement(2966)", "Delete Block(2967)", "Delete EnhancedForStatement(2968)", "Delete MethodInvocation(2974)", "Delete MethodInvocation(2976)", "Delete MethodInvocation(2977)", "Delete MethodInvocation(2978)", "Delete ExpressionStatement(2979)", "Delete Block(2987)", "Delete StringLiteral: \"Processing srst command from \"(2993)", "Delete MethodInvocation(2996)", "Delete SimpleName: getRemoteSocketAddress(2997)", "Delete MethodInvocation(2998)", "Delete InfixExpression: +(2999)", "Delete MethodInvocation(3000)", "Delete ExpressionStatement(3001)", "Delete SimpleName: getBytes(3015)", "Delete MethodInvocation(3016)", "Delete MethodInvocation(3017)", "Delete MethodInvocation(3018)", "Delete ExpressionStatement(3019)", "Delete Block(3027)", "Delete Block(3077)", "Delete IfStatement(3078)", "Delete IfStatement(3079)", "Delete IfStatement(3080)", "Delete IfStatement(3081)", "Delete IfStatement(3082)", "Delete IfStatement(3083)", "Delete IfStatement(3084)", "Delete IfStatement(3085)", "Delete IfStatement(3086)", "Delete Block(3089)", "Delete MethodDeclaration(3090)", "Delete MethodInvocation(4375)", "Delete ReturnStatement(4376)", "Delete StringLiteral: \" \"(4416)", "Delete MethodInvocation(4417)", "Delete SimpleName: append(4418)", "Delete MethodInvocation(4431)", "Delete MethodInvocation(4439)", "Delete MethodInvocation(4442)", "Delete MethodInvocation(4446)", "Delete MethodInvocation(4449)", "Delete MethodInvocation(4453)", "Delete MethodInvocation(4456)", "Delete MethodInvocation(4460)", "Delete ExpressionStatement(4461)", "Delete MethodInvocation(4476)", "Delete MethodInvocation(4482)", "Delete MethodInvocation(4485)", "Delete MethodInvocation(4489)", "Delete MethodInvocation(4492)", "Delete MethodInvocation(4498)", "Delete MethodInvocation(4501)", "Delete MethodInvocation(4505)", "Delete ExpressionStatement(4506)", "Delete MethodInvocation(4519)", "Delete MethodInvocation(4525)", "Delete ExpressionStatement(4526)", "Delete MethodInvocation(4532)", "Delete MethodInvocation(4539)", "Delete MethodInvocation(4542)", "Delete MethodInvocation(4546)", "Delete MethodInvocation(4549)", "Delete MethodInvocation(4553)", "Delete MethodInvocation(4556)", "Delete MethodInvocation(4560)", "Delete MethodInvocation(4563)", "Delete MethodInvocation(4567)", "Delete MethodInvocation(4570)", "Delete MethodInvocation(4574)", "Delete ExpressionStatement(4575)", "Delete SimpleType: StringBuilder(4395)", "Delete SimpleName: sb(4396)", "Delete SimpleName: StringBuilder(4397)", "Delete SimpleType: StringBuilder(4398)", "Delete ClassInstanceCreation(4399)", "Delete VariableDeclarationFragment(4400)", "Delete VariableDeclarationStatement(4401)", "Delete SimpleName: sb(4587)", "Delete SimpleName: toString(4588)", "Delete MethodInvocation(4589)", "Delete ReturnStatement(4590)", "Delete Block(4591)"]}}, {"PrepRequestProcessor_cluster": {"actions": [{"root": "UPDATE from \" with session \" to \" with session 0x\"", "operations": ["UPD StringLiteral: \" with session \" from \" with session \" to \" with session 0x\"", "UPD StringLiteral: \" with session \" from \" with session \" to \" with session 0x\""]}]}}, {"PrepRequestProcessor_diff": {"operations": ["Update StringLiteral: \" with session \"(673) to \" with session 0x\"", "Update StringLiteral: \" with session \"(774) to \" with session 0x\""]}}, {"ServerCnxn_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.nio.ByteBuffer"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SimpleName: ByteBuffer", "DEL Modifier: final", "DEL StringLiteral: \"ruok\"", "DEL TagElement", "DEL TextElement: Zk Admin</a>. this link is for all the commands.", "DEL SimpleName: wrap", "DEL TextElement: See <a href=\"", "DEL MethodInvocation", "DEL SimpleName: getInt", "DEL TagElement: @docRoot", "DEL SimpleName: ruokCmd", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL SimpleName: getBytes", "DEL TextElement: /../../../docs/zookeeperAdmin.html#sc_zkCommands\">", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: static"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL MethodInvocation", "DEL Modifier: static", "DEL FieldDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: getInt", "DEL SimpleName: dumpCmd", "DEL MethodInvocation", "DEL SimpleName: wrap", "DEL Modifier: final", "DEL StringLiteral: \"dump\"", "DEL SimpleName: ByteBuffer", "DEL VariableDeclarationFragment", "DEL SimpleName: getBytes", "DEL MethodInvocation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: wrap", "DEL SimpleName: statCmd", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: getBytes", "DEL SimpleName: getInt", "DEL SimpleName: ByteBuffer", "DEL MethodInvocation", "DEL StringLiteral: \"stat\"", "DEL FieldDeclaration", "DEL Modifier: final", "DEL MethodInvocation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: ByteBuffer", "DEL PrimitiveType: int", "DEL StringLiteral: \"srvr\"", "DEL SimpleName: getBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: srvrCmd", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: wrap", "DEL SimpleName: getInt", "DEL FieldDeclaration", "DEL Modifier: static"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: ByteBuffer", "DEL FieldDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: wrap", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: consCmd", "DEL SimpleName: getBytes", "DEL Modifier: static", "DEL MethodInvocation", "DEL StringLiteral: \"cons\"", "DEL SimpleName: getInt", "DEL Modifier: final", "DEL MethodInvocation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: getBytes", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL Modifier: static", "DEL MethodInvocation", "DEL StringLiteral: \"stmk\"", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: getInt", "DEL SimpleName: ByteBuffer", "DEL SimpleName: wrap", "DEL SimpleName: setTraceMaskCmd"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: getTraceMaskCmd", "DEL MethodInvocation", "DEL SimpleName: getBytes", "DEL Modifier: final", "DEL FieldDeclaration", "DEL SimpleName: ByteBuffer", "DEL StringLiteral: \"gtmk\"", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: wrap", "DEL SimpleName: getInt", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: ByteBuffer", "DEL Modifier: static", "DEL SimpleName: wrap", "DEL SimpleName: getBytes", "DEL StringLiteral: \"envi\"", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleName: enviCmd", "DEL SimpleName: getInt", "DEL MethodInvocation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: getInt", "DEL Modifier: static", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: ByteBuffer", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: wrap", "DEL SimpleName: srstCmd", "DEL SimpleName: getBytes", "DEL StringLiteral: \"srst\"", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SimpleName: getBytes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: crstCmd", "DEL SimpleName: getInt", "DEL StringLiteral: \"crst\"", "DEL SimpleName: ByteBuffer", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: wrap", "DEL Modifier: static", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: ByteBuffer", "DEL FieldDeclaration", "DEL StringLiteral: \"imok\"", "DEL Modifier: final", "DEL SimpleName: wrap", "DEL MethodInvocation", "DEL SimpleName: imok", "DEL SimpleType: ByteBuffer", "DEL SimpleName: getBytes", "DEL SimpleName: ByteBuffer", "DEL MethodInvocation", "DEL Modifier: static"]}]}}, {"ServerCnxn_diff": {"operations": ["Delete QualifiedName: java.nio.ByteBuffer(21)", "Delete ImportDeclaration(22)", "Delete TextElement: See <a href=\"(45)", "Delete TagElement: @docRoot(46)", "Delete TextElement: /../../../docs/zookeeperAdmin.html#sc_zkCommands\">(47)", "Delete TextElement: Zk Admin</a>. this link is for all the commands.(48)", "Delete TagElement(49)", "Delete Javadoc(50)", "Delete Modifier: final(51)", "Delete Modifier: static(52)", "Delete PrimitiveType: int(53)", "Delete SimpleName: ruokCmd(54)", "Delete SimpleName: ByteBuffer(55)", "Delete SimpleName: wrap(56)", "Delete StringLiteral: \"ruok\"(57)", "Delete SimpleName: getBytes(58)", "Delete MethodInvocation(59)", "Delete MethodInvocation(60)", "Delete SimpleName: getInt(61)", "Delete MethodInvocation(62)", "Delete VariableDeclarationFragment(63)", "Delete FieldDeclaration(64)", "Delete Modifier: final(65)", "Delete Modifier: static(66)", "Delete PrimitiveType: int(67)", "Delete SimpleName: dumpCmd(68)", "Delete SimpleName: ByteBuffer(69)", "Delete SimpleName: wrap(70)", "Delete StringLiteral: \"dump\"(71)", "Delete SimpleName: getBytes(72)", "Delete MethodInvocation(73)", "Delete MethodInvocation(74)", "Delete SimpleName: getInt(75)", "Delete MethodInvocation(76)", "Delete VariableDeclarationFragment(77)", "Delete FieldDeclaration(78)", "Delete Modifier: final(79)", "Delete Modifier: static(80)", "Delete PrimitiveType: int(81)", "Delete SimpleName: statCmd(82)", "Delete SimpleName: ByteBuffer(83)", "Delete SimpleName: wrap(84)", "Delete StringLiteral: \"stat\"(85)", "Delete SimpleName: getBytes(86)", "Delete MethodInvocation(87)", "Delete MethodInvocation(88)", "Delete SimpleName: getInt(89)", "Delete MethodInvocation(90)", "Delete VariableDeclarationFragment(91)", "Delete FieldDeclaration(92)", "Delete Modifier: final(93)", "Delete Modifier: static(94)", "Delete PrimitiveType: int(95)", "Delete SimpleName: srvrCmd(96)", "Delete SimpleName: ByteBuffer(97)", "Delete SimpleName: wrap(98)", "Delete StringLiteral: \"srvr\"(99)", "Delete SimpleName: getBytes(100)", "Delete MethodInvocation(101)", "Delete MethodInvocation(102)", "Delete SimpleName: getInt(103)", "Delete MethodInvocation(104)", "Delete VariableDeclarationFragment(105)", "Delete FieldDeclaration(106)", "Delete Modifier: final(107)", "Delete Modifier: static(108)", "Delete PrimitiveType: int(109)", "Delete SimpleName: consCmd(110)", "Delete SimpleName: ByteBuffer(111)", "Delete SimpleName: wrap(112)", "Delete StringLiteral: \"cons\"(113)", "Delete SimpleName: getBytes(114)", "Delete MethodInvocation(115)", "Delete MethodInvocation(116)", "Delete SimpleName: getInt(117)", "Delete MethodInvocation(118)", "Delete VariableDeclarationFragment(119)", "Delete FieldDeclaration(120)", "Delete Modifier: final(121)", "Delete Modifier: static(122)", "Delete PrimitiveType: int(123)", "Delete SimpleName: setTraceMaskCmd(124)", "Delete SimpleName: ByteBuffer(125)", "Delete SimpleName: wrap(126)", "Delete StringLiteral: \"stmk\"(127)", "Delete SimpleName: getBytes(128)", "Delete MethodInvocation(129)", "Delete MethodInvocation(130)", "Delete SimpleName: getInt(131)", "Delete MethodInvocation(132)", "Delete VariableDeclarationFragment(133)", "Delete FieldDeclaration(134)", "Delete Modifier: final(135)", "Delete Modifier: static(136)", "Delete PrimitiveType: int(137)", "Delete SimpleName: getTraceMaskCmd(138)", "Delete SimpleName: ByteBuffer(139)", "Delete SimpleName: wrap(140)", "Delete StringLiteral: \"gtmk\"(141)", "Delete SimpleName: getBytes(142)", "Delete MethodInvocation(143)", "Delete MethodInvocation(144)", "Delete SimpleName: getInt(145)", "Delete MethodInvocation(146)", "Delete VariableDeclarationFragment(147)", "Delete FieldDeclaration(148)", "Delete Modifier: final(149)", "Delete Modifier: static(150)", "Delete PrimitiveType: int(151)", "Delete SimpleName: enviCmd(152)", "Delete SimpleName: ByteBuffer(153)", "Delete SimpleName: wrap(154)", "Delete StringLiteral: \"envi\"(155)", "Delete SimpleName: getBytes(156)", "Delete MethodInvocation(157)", "Delete MethodInvocation(158)", "Delete SimpleName: getInt(159)", "Delete MethodInvocation(160)", "Delete VariableDeclarationFragment(161)", "Delete FieldDeclaration(162)", "Delete Modifier: final(163)", "Delete Modifier: static(164)", "Delete PrimitiveType: int(165)", "Delete SimpleName: srstCmd(166)", "Delete SimpleName: ByteBuffer(167)", "Delete SimpleName: wrap(168)", "Delete StringLiteral: \"srst\"(169)", "Delete SimpleName: getBytes(170)", "Delete MethodInvocation(171)", "Delete MethodInvocation(172)", "Delete SimpleName: getInt(173)", "Delete MethodInvocation(174)", "Delete VariableDeclarationFragment(175)", "Delete FieldDeclaration(176)", "Delete Modifier: final(177)", "Delete Modifier: static(178)", "Delete PrimitiveType: int(179)", "Delete SimpleName: crstCmd(180)", "Delete SimpleName: ByteBuffer(181)", "Delete SimpleName: wrap(182)", "Delete StringLiteral: \"crst\"(183)", "Delete SimpleName: getBytes(184)", "Delete MethodInvocation(185)", "Delete MethodInvocation(186)", "Delete SimpleName: getInt(187)", "Delete MethodInvocation(188)", "Delete VariableDeclarationFragment(189)", "Delete FieldDeclaration(190)", "Delete Modifier: final(191)", "Delete Modifier: static(192)", "Delete SimpleName: ByteBuffer(193)", "Delete SimpleType: ByteBuffer(194)", "Delete SimpleName: imok(195)", "Delete SimpleName: ByteBuffer(196)", "Delete SimpleName: wrap(197)", "Delete StringLiteral: \"imok\"(198)", "Delete SimpleName: getBytes(199)", "Delete MethodInvocation(200)", "Delete MethodInvocation(201)", "Delete VariableDeclarationFragment(202)", "Delete FieldDeclaration(203)"]}}, {"SessionTracker_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 12", "operations": ["INS TextElement:  the output writer to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS MethodDeclaration to TypeDeclaration: interface at 12", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Text dump of session information, suitable for debugging. to TagElement at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS SimpleName: pwriter to TagElement: @param at 0", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS SimpleName: dumpSessions to MethodDeclaration at 2"]}]}}, {"SessionTracker_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(141) at 1", "Insert QualifiedName: java.io.PrintWriter(17) into ImportDeclaration(18) at 0", "Insert MethodDeclaration(139) into TypeDeclaration: interface(140) at 12", "Insert Javadoc(132) into MethodDeclaration(139) at 0", "Insert PrimitiveType: void(133) into MethodDeclaration(139) at 1", "Insert SimpleName: dumpSessions(134) into MethodDeclaration(139) at 2", "Insert SingleVariableDeclaration(138) into MethodDeclaration(139) at 3", "Insert TagElement(128) into Javadoc(132) at 0", "Insert TagElement: @param(131) into Javadoc(132) at 1", "Insert SimpleType: PrintWriter(136) into SingleVariableDeclaration(138) at 0", "Insert SimpleName: pwriter(137) into SingleVariableDeclaration(138) at 1", "Insert TextElement: Text dump of session information, suitable for debugging.(127) into TagElement(128) at 0", "Insert SimpleName: pwriter(129) into TagElement: @param(131) at 0", "Insert TextElement:  the output writer(130) into TagElement: @param(131) at 1", "Insert SimpleName: PrintWriter(135) into SimpleType: PrintWriter(136) at 0"]}}, {"SessionTrackerImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.io.StringWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS ExpressionStatement to Block at 2", "INS StringLiteral: \"Session Sets (\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SimpleName: println to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: print to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: pwriter to VariableDeclarationFragment at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: flush to MethodInvocation at 1", "INS SimpleType: PrintWriter to VariableDeclarationStatement at 0", "INS SimpleName: sw to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: toString to MethodDeclaration at 4", "INS SimpleType: StringWriter to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: StringWriter to SimpleType: StringWriter at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: StringWriter to SimpleType: StringWriter at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: dumpSessions to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS ExpressionStatement to Block at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: synchronized to MethodDeclaration at 1", "INS SimpleName: sw to VariableDeclarationFragment at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS SimpleName: close to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: pwriter to MethodInvocation at 1", "INS SimpleType: PrintWriter to ClassInstanceCreation at 0", "INS SimpleType: StringWriter to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: synchronized to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: toString to MethodDeclaration at 3", "MOV SimpleType: String to MethodDeclaration at 3"]}, {"root": "UPDATE from toString to dumpSessions", "operations": ["UPD SimpleName: toString from toString to dumpSessions"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 3", "MOV EnhancedForStatement to Block at 5", "MOV ExpressionStatement to Block at 4"]}, {"root": "UPDATE from StringBuilder to PrintWriter", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to PrintWriter"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: StringBuilder to SimpleType: PrintWriter at 0"]}, {"root": "UPDATE from sb to pwriter", "operations": ["UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: append from append to pwriter", "UPD SimpleName: sb from sb to pwriter", "UPD SimpleName: append from append to pwriter"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"):\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from \"):\\n\" to \"):\"", "operations": ["UPD StringLiteral: \"):\\n\" from \"):\\n\" to \"):\""]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS SimpleName: println to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0"]}, {"root": "UPDATE from sb to sw", "operations": ["UPD SimpleName: sb from sb to sw"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \" expire at \" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0", "MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from append to print", "operations": ["UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print", "UPD SimpleName: append from append to print"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 0", "MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \":\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from \":\\n\" to \":\"", "operations": ["UPD StringLiteral: \":\\n\" from \":\\n\" to \":\""]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"\\t0x\" to MethodInvocation at 2", "MOV SimpleName: sb to MethodInvocation at 0", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 0"]}, {"root": "UPDATE from append to println", "operations": ["UPD SimpleName: append from append to println"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"\\n\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: StringBuilder", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Session Sets (\"", "DEL MethodInvocation", "DEL SimpleName: StringBuilder", "DEL MethodDeclaration", "DEL SimpleName: sb", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL SimpleName: append", "DEL Block"]}]}}, {"SessionTrackerImpl_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(994) at 1", "Insert ImportDeclaration(20) into CompilationUnit(994) at 2", "Insert QualifiedName: java.io.PrintWriter(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: java.io.StringWriter(19) into ImportDeclaration(20) at 0", "Insert MethodDeclaration(472) into TypeDeclaration: class(993) at 20", "Insert MethodDeclaration(514) into TypeDeclaration: class(993) at 21", "Move Modifier: synchronized(361) into MethodDeclaration(472) at 0", "Move Modifier: public(362) into MethodDeclaration(472) at 1", "Insert PrimitiveType: void(365) into MethodDeclaration(472) at 2", "Update SimpleName: toString(365) to dumpSessions", "Move SimpleName: toString(365) into MethodDeclaration(472) at 3", "Insert SingleVariableDeclaration(370) into MethodDeclaration(472) at 4", "Insert Block(471) into MethodDeclaration(472) at 5", "Move MarkerAnnotation(360) into MethodDeclaration(514) at 0", "Insert Modifier: synchronized(475) into MethodDeclaration(514) at 1", "Insert Modifier: public(476) into MethodDeclaration(514) at 2", "Move SimpleType: String(364) into MethodDeclaration(514) at 3", "Insert SimpleName: toString(479) into MethodDeclaration(514) at 4", "Insert Block(513) into MethodDeclaration(514) at 5", "Insert SimpleType: PrintWriter(368) into SingleVariableDeclaration(370) at 0", "Insert SimpleName: pwriter(369) into SingleVariableDeclaration(370) at 1", "Insert ExpressionStatement(375) into Block(471) at 0", "Insert ExpressionStatement(382) into Block(471) at 1", "Insert ExpressionStatement(387) into Block(471) at 2", "Move VariableDeclarationStatement(399) into Block(471) at 3", "Move ExpressionStatement(404) into Block(471) at 4", "Move EnhancedForStatement(460) into Block(471) at 5", "Insert VariableDeclarationStatement(487) into Block(513) at 0", "Insert VariableDeclarationStatement(496) into Block(513) at 1", "Insert ExpressionStatement(500) into Block(513) at 2", "Insert ExpressionStatement(504) into Block(513) at 3", "Insert ExpressionStatement(508) into Block(513) at 4", "Move ReturnStatement(464) into Block(513) at 5", "Update SimpleName: StringBuilder(366) to PrintWriter", "Move SimpleName: StringBuilder(366) into SimpleType: PrintWriter(368) at 0", "Insert MethodInvocation(374) into ExpressionStatement(375) at 0", "Insert MethodInvocation(381) into ExpressionStatement(382) at 0", "Insert MethodInvocation(386) into ExpressionStatement(387) at 0", "Insert SimpleType: StringWriter(481) into VariableDeclarationStatement(487) at 0", "Insert VariableDeclarationFragment(486) into VariableDeclarationStatement(487) at 1", "Insert SimpleType: PrintWriter(489) into VariableDeclarationStatement(496) at 0", "Insert VariableDeclarationFragment(495) into VariableDeclarationStatement(496) at 1", "Insert MethodInvocation(499) into ExpressionStatement(500) at 0", "Insert MethodInvocation(503) into ExpressionStatement(504) at 0", "Insert MethodInvocation(507) into ExpressionStatement(508) at 0", "Insert SimpleName: pwriter(371) into MethodInvocation(374) at 0", "Insert SimpleName: print(372) into MethodInvocation(374) at 1", "Insert StringLiteral: \"Session Sets (\"(373) into MethodInvocation(374) at 2", "Update SimpleName: append(378) to pwriter", "Move SimpleName: append(378) into MethodInvocation(381) at 0", "Insert SimpleName: print(377) into MethodInvocation(381) at 1", "Move MethodInvocation(376) into MethodInvocation(381) at 2", "Insert SimpleName: pwriter(383) into MethodInvocation(386) at 0", "Insert SimpleName: println(384) into MethodInvocation(386) at 1", "Update StringLiteral: \"):\\n\"(379) to \"):\"", "Move StringLiteral: \"):\\n\"(379) into MethodInvocation(386) at 2", "Insert ExpressionStatement(425) into Block(469) at 0", "Insert ExpressionStatement(430) into Block(469) at 1", "Insert ExpressionStatement(438) into Block(469) at 2", "Insert ExpressionStatement(443) into Block(469) at 3", "Insert SimpleName: StringWriter(480) into SimpleType: StringWriter(481) at 0", "Insert SimpleName: sw(482) into VariableDeclarationFragment(486) at 0", "Insert ClassInstanceCreation(485) into VariableDeclarationFragment(486) at 1", "Insert SimpleName: PrintWriter(488) into SimpleType: PrintWriter(489) at 0", "Insert SimpleName: pwriter(490) into VariableDeclarationFragment(495) at 0", "Insert ClassInstanceCreation(494) into VariableDeclarationFragment(495) at 1", "Insert SimpleName: dumpSessions(497) into MethodInvocation(499) at 0", "Insert SimpleName: pwriter(498) into MethodInvocation(499) at 1", "Insert SimpleName: pwriter(501) into MethodInvocation(503) at 0", "Insert SimpleName: flush(502) into MethodInvocation(503) at 1", "Insert SimpleName: pwriter(505) into MethodInvocation(507) at 0", "Insert SimpleName: close(506) into MethodInvocation(507) at 1", "Update SimpleName: sb(461) to sw", "Move MethodInvocation(419) into ExpressionStatement(425) at 0", "Insert MethodInvocation(429) into ExpressionStatement(430) at 0", "Insert MethodInvocation(437) into ExpressionStatement(438) at 0", "Insert MethodInvocation(442) into ExpressionStatement(443) at 0", "Insert SimpleType: StringWriter(484) into ClassInstanceCreation(485) at 0", "Insert SimpleType: PrintWriter(492) into ClassInstanceCreation(494) at 0", "Insert SimpleName: sw(493) into ClassInstanceCreation(494) at 1", "Update SimpleName: sb(409) to pwriter", "Update SimpleName: append(410) to print", "Update SimpleName: append(420) to pwriter", "Move SimpleName: append(420) into MethodInvocation(429) at 0", "Insert SimpleName: print(427) into MethodInvocation(429) at 1", "Move StringLiteral: \" expire at \"(421) into MethodInvocation(429) at 2", "Update SimpleName: append(423) to pwriter", "Move SimpleName: append(423) into MethodInvocation(437) at 0", "Update SimpleName: append(429) to print", "Move SimpleName: append(429) into MethodInvocation(437) at 1", "Move ClassInstanceCreation(427) into MethodInvocation(437) at 2", "Insert SimpleName: pwriter(439) into MethodInvocation(442) at 0", "Insert SimpleName: println(440) into MethodInvocation(442) at 1", "Update StringLiteral: \":\\n\"(430) to \":\"", "Move StringLiteral: \":\\n\"(430) into MethodInvocation(442) at 2", "Insert ExpressionStatement(458) into Block(467) at 0", "Insert ExpressionStatement(466) into Block(467) at 1", "Insert SimpleName: StringWriter(483) into SimpleType: StringWriter(484) at 0", "Insert SimpleName: PrintWriter(491) into SimpleType: PrintWriter(492) at 0", "Insert MethodInvocation(457) into ExpressionStatement(458) at 0", "Insert MethodInvocation(465) into ExpressionStatement(466) at 0", "Update SimpleName: sb(443) to pwriter", "Move SimpleName: sb(443) into MethodInvocation(457) at 0", "Update SimpleName: append(444) to print", "Move SimpleName: append(444) into MethodInvocation(457) at 1", "Move StringLiteral: \"\\t0x\"(445) into MethodInvocation(457) at 2", "Update SimpleName: append(447) to pwriter", "Move SimpleName: append(447) into MethodInvocation(465) at 0", "Update SimpleName: append(453) to println", "Move SimpleName: append(453) into MethodInvocation(465) at 1", "Move MethodInvocation(451) into MethodInvocation(465) at 2", "Delete MethodInvocation(422)", "Delete MethodInvocation(428)", "Delete MethodInvocation(431)", "Delete ExpressionStatement(432)", "Delete MethodInvocation(446)", "Delete MethodInvocation(452)", "Delete StringLiteral: \"\\n\"(454)", "Delete MethodInvocation(455)", "Delete ExpressionStatement(456)", "Delete SimpleType: StringBuilder(367)", "Delete SimpleName: sb(368)", "Delete SimpleName: StringBuilder(369)", "Delete SimpleType: StringBuilder(370)", "Delete StringLiteral: \"Session Sets (\"(371)", "Delete ClassInstanceCreation(372)", "Delete SimpleName: append(373)", "Delete MethodInvocation(377)", "Delete MethodInvocation(380)", "Delete VariableDeclarationFragment(381)", "Delete VariableDeclarationStatement(382)", "Delete Block(465)", "Delete MethodDeclaration(466)"]}}, {"WatchManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ParameterizedType: HashSet<String> to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: watchTable to MethodInvocation at 0", "INS SimpleName: toString to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: watch2Paths to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: watch2Paths to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: StringBuffer to VariableDeclarationStatement at 0", "INS SimpleName: total to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 5", "INS Modifier: public to MethodDeclaration at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: append to MethodInvocation at 1", "INS Modifier: synchronized to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: size to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS StringLiteral: \"Total watches:\" to MethodInvocation at 2", "INS SimpleName: StringBuffer to SimpleType: StringBuffer at 0", "INS SimpleName: values to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleType: String to MethodDeclaration at 4", "INS SimpleName: StringBuffer to SimpleType: StringBuffer at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: StringBuffer to ClassInstanceCreation at 0", "INS StringLiteral: \" connections watching \" to MethodInvocation at 2", "INS MethodInvocation to Assignment: += at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1", "INS SimpleName: total to VariableDeclarationFragment at 0", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: paths to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: total to Assignment: += at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS EnhancedForStatement to Block at 3", "INS SimpleName: sb to VariableDeclarationFragment at 0", "INS SimpleName: append to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: append to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \" paths\\n\" to MethodInvocation at 2", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS TextElement: Brief description of this object. to TagElement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: paths to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: byPath to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 0", "INS StringLiteral: \"\\t0x\" to MethodInvocation at 2", "INS SimpleName: w to SingleVariableDeclaration at 1", "INS TagElement: @param to Javadoc at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleType: Watcher to SingleVariableDeclaration at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ServerCnxn to SimpleType: ServerCnxn at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to MethodInvocation at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: ServerCnxn to CastExpression at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: dumpWatches to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS EnhancedForStatement to Block at 0", "INS ParameterizedType: HashSet<String> to ParameterizedType: Entry<Watcher,HashSet<String>> at 2", "INS ParameterizedType: HashSet<Watcher> to ParameterizedType: Entry<String,HashSet<Watcher>> at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: Watcher to SimpleType: Watcher at 0", "INS ParameterizedType: Entry<Watcher,HashSet<String>> to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement:  string representation of watches to TagElement: @return at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: synchronized to MethodDeclaration at 2", "INS TagElement: @return to Javadoc at 2", "INS StringLiteral: \"0x\" to MethodInvocation at 2", "INS SimpleName: Watcher to SimpleType: Watcher at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS TextElement: String representation of watches. Warning, may be large! to TagElement at 0", "INS SimpleName: toHexString to MethodInvocation at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0", "INS ParameterizedType: Entry<String,HashSet<Watcher>> to SingleVariableDeclaration at 0", "INS IfStatement to Block at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS StringLiteral: \"\\n\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Entry to ParameterizedType: Entry<Watcher,HashSet<String>> at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: watchTable to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1", "INS SimpleName: path to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<Watcher> at 0", "INS SimpleName: e to MethodInvocation at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Entry<String,HashSet<Watcher>> at 1", "INS TextElement: watches by connection to TagElement: @param at 2", "INS SimpleType: Watcher to ParameterizedType: HashSet<Watcher> at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: Watcher to SimpleType: Watcher at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: pwriter to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: toHexString to MethodInvocation at 1", "INS SimpleName: getSessionId to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleType: Entry to ParameterizedType: Entry<String,HashSet<Watcher>> at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: Watcher to ParameterizedType: Entry<Watcher,HashSet<String>> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS EnhancedForStatement to Block at 0", "INS SimpleName: e to MethodInvocation at 0", "INS TextElement:  iff true output watches by paths, otw output to TagElement: @param at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: byPath to TagElement: @param at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleType: ServerCnxn to CastExpression at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS StringLiteral: \"\\t\" to MethodInvocation at 2", "INS SimpleName: getSessionId to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: watch2Paths to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: w to CastExpression at 1", "INS SimpleName: println to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: ServerCnxn to SimpleType: ServerCnxn at 0", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: byPath to IfStatement at 0", "INS SimpleName: path to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 12"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS NumberLiteral: 4 to ClassInstanceCreation at 1", "operations": ["INS NumberLiteral: 4 to ClassInstanceCreation at 1"]}]}}, {"WatchManager_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(646) at 1", "Insert ImportDeclaration(26) into CompilationUnit(646) at 5", "Insert QualifiedName: java.io.PrintWriter(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: java.util.Map.Entry(25) into ImportDeclaration(26) at 0", "Insert MethodDeclaration(504) into TypeDeclaration: class(645) at 11", "Insert MethodDeclaration(644) into TypeDeclaration: class(645) at 12", "Insert Modifier: final(58) into FieldDeclaration(82) at 1", "Insert Modifier: final(84) into FieldDeclaration(108) at 1", "Insert Javadoc(434) into MethodDeclaration(504) at 0", "Insert MarkerAnnotation(436) into MethodDeclaration(504) at 1", "Insert Modifier: public(437) into MethodDeclaration(504) at 2", "Insert Modifier: synchronized(438) into MethodDeclaration(504) at 3", "Insert SimpleType: String(440) into MethodDeclaration(504) at 4", "Insert SimpleName: toString(441) into MethodDeclaration(504) at 5", "Insert Block(503) into MethodDeclaration(504) at 6", "Insert Javadoc(513) into MethodDeclaration(644) at 0", "Insert Modifier: public(514) into MethodDeclaration(644) at 1", "Insert Modifier: synchronized(515) into MethodDeclaration(644) at 2", "Insert PrimitiveType: void(516) into MethodDeclaration(644) at 3", "Insert SimpleName: dumpWatches(517) into MethodDeclaration(644) at 4", "Insert SingleVariableDeclaration(521) into MethodDeclaration(644) at 5", "Insert SingleVariableDeclaration(524) into MethodDeclaration(644) at 6", "Insert Block(643) into MethodDeclaration(644) at 7", "Insert TagElement(433) into Javadoc(434) at 0", "Insert SimpleName: Override(435) into MarkerAnnotation(436) at 0", "Insert SimpleName: String(439) into SimpleType: String(440) at 0", "Insert VariableDeclarationStatement(449) into Block(503) at 0", "Insert ExpressionStatement(467) into Block(503) at 1", "Insert VariableDeclarationStatement(472) into Block(503) at 2", "Insert EnhancedForStatement(490) into Block(503) at 3", "Insert ExpressionStatement(498) into Block(503) at 4", "Insert ReturnStatement(502) into Block(503) at 5", "Insert TagElement(506) into Javadoc(513) at 0", "Insert TagElement: @param(510) into Javadoc(513) at 1", "Insert TagElement: @return(512) into Javadoc(513) at 2", "Insert SimpleType: PrintWriter(519) into SingleVariableDeclaration(521) at 0", "Insert SimpleName: pwriter(520) into SingleVariableDeclaration(521) at 1", "Insert PrimitiveType: boolean(522) into SingleVariableDeclaration(524) at 0", "Insert SimpleName: byPath(523) into SingleVariableDeclaration(524) at 1", "Insert IfStatement(642) into Block(643) at 0", "Insert TextElement: Brief description of this object.(432) into TagElement(433) at 0", "Insert SimpleType: StringBuffer(443) into VariableDeclarationStatement(449) at 0", "Insert VariableDeclarationFragment(448) into VariableDeclarationStatement(449) at 1", "Insert MethodInvocation(466) into ExpressionStatement(467) at 0", "Insert PrimitiveType: int(468) into VariableDeclarationStatement(472) at 0", "Insert VariableDeclarationFragment(471) into VariableDeclarationStatement(472) at 1", "Insert SingleVariableDeclaration(479) into EnhancedForStatement(490) at 0", "Insert MethodInvocation(482) into EnhancedForStatement(490) at 1", "Insert Block(489) into EnhancedForStatement(490) at 2", "Insert MethodInvocation(497) into ExpressionStatement(498) at 0", "Insert MethodInvocation(501) into ReturnStatement(502) at 0", "Insert TextElement: String representation of watches. Warning, may be large!(505) into TagElement(506) at 0", "Insert SimpleName: byPath(507) into TagElement: @param(510) at 0", "Insert TextElement:  iff true output watches by paths, otw output(508) into TagElement: @param(510) at 1", "Insert TextElement: watches by connection(509) into TagElement: @param(510) at 2", "Insert TextElement:  string representation of watches(511) into TagElement: @return(512) at 0", "Insert SimpleName: PrintWriter(518) into SimpleType: PrintWriter(519) at 0", "Insert SimpleName: byPath(525) into IfStatement(642) at 0", "Insert Block(583) into IfStatement(642) at 1", "Insert Block(641) into IfStatement(642) at 2", "Insert SimpleName: StringBuffer(442) into SimpleType: StringBuffer(443) at 0", "Insert SimpleName: sb(444) into VariableDeclarationFragment(448) at 0", "Insert ClassInstanceCreation(447) into VariableDeclarationFragment(448) at 1", "Insert MethodInvocation(463) into MethodInvocation(466) at 0", "Insert SimpleName: append(464) into MethodInvocation(466) at 1", "Insert StringLiteral: \" paths\\n\"(465) into MethodInvocation(466) at 2", "Insert SimpleName: total(469) into VariableDeclarationFragment(471) at 0", "Insert NumberLiteral: 0(470) into VariableDeclarationFragment(471) at 1", "Insert ParameterizedType: HashSet<String>(477) into SingleVariableDeclaration(479) at 0", "Insert SimpleName: paths(478) into SingleVariableDeclaration(479) at 1", "Insert SimpleName: watch2Paths(480) into MethodInvocation(482) at 0", "Insert SimpleName: values(481) into MethodInvocation(482) at 1", "Insert ExpressionStatement(488) into Block(489) at 0", "Insert MethodInvocation(494) into MethodInvocation(497) at 0", "Insert SimpleName: append(495) into MethodInvocation(497) at 1", "Insert SimpleName: total(496) into MethodInvocation(497) at 2", "Insert SimpleName: sb(499) into MethodInvocation(501) at 0", "Insert SimpleName: toString(500) into MethodInvocation(501) at 1", "Insert EnhancedForStatement(582) into Block(583) at 0", "Insert EnhancedForStatement(640) into Block(641) at 0", "Insert SimpleType: StringBuffer(446) into ClassInstanceCreation(447) at 0", "Insert MethodInvocation(458) into MethodInvocation(463) at 0", "Insert SimpleName: append(459) into MethodInvocation(463) at 1", "Insert MethodInvocation(462) into MethodInvocation(463) at 2", "Insert SimpleType: HashSet(474) into ParameterizedType: HashSet<String>(477) at 0", "Insert SimpleType: String(476) into ParameterizedType: HashSet<String>(477) at 1", "Insert Assignment: +=(487) into ExpressionStatement(488) at 0", "Insert SimpleName: sb(491) into MethodInvocation(494) at 0", "Insert SimpleName: append(492) into MethodInvocation(494) at 1", "Insert StringLiteral: \"Total watches:\"(493) into MethodInvocation(494) at 2", "Insert SingleVariableDeclaration(537) into EnhancedForStatement(582) at 0", "Insert MethodInvocation(540) into EnhancedForStatement(582) at 1", "Insert Block(581) into EnhancedForStatement(582) at 2", "Insert SingleVariableDeclaration(595) into EnhancedForStatement(640) at 0", "Insert MethodInvocation(598) into EnhancedForStatement(640) at 1", "Insert Block(639) into EnhancedForStatement(640) at 2", "Insert SimpleName: StringBuffer(445) into SimpleType: StringBuffer(446) at 0", "Insert MethodInvocation(455) into MethodInvocation(458) at 0", "Insert SimpleName: append(456) into MethodInvocation(458) at 1", "Insert StringLiteral: \" connections watching \"(457) into MethodInvocation(458) at 2", "Insert SimpleName: watchTable(460) into MethodInvocation(462) at 0", "Insert SimpleName: size(461) into MethodInvocation(462) at 1", "Insert SimpleName: HashSet(473) into SimpleType: HashSet(474) at 0", "Insert SimpleName: String(475) into SimpleType: String(476) at 0", "Insert SimpleName: total(483) into Assignment: +=(487) at 0", "Insert MethodInvocation(486) into Assignment: +=(487) at 1", "Insert ParameterizedType: Entry<String,HashSet<Watcher>>(535) into SingleVariableDeclaration(537) at 0", "Insert SimpleName: e(536) into SingleVariableDeclaration(537) at 1", "Insert SimpleName: watchTable(538) into MethodInvocation(540) at 0", "Insert SimpleName: entrySet(539) into MethodInvocation(540) at 1", "Insert ExpressionStatement(547) into Block(581) at 0", "Insert EnhancedForStatement(580) into Block(581) at 1", "Insert ParameterizedType: Entry<Watcher,HashSet<String>>(593) into SingleVariableDeclaration(595) at 0", "Insert SimpleName: e(594) into SingleVariableDeclaration(595) at 1", "Insert SimpleName: watch2Paths(596) into MethodInvocation(598) at 0", "Insert SimpleName: entrySet(597) into MethodInvocation(598) at 1", "Insert ExpressionStatement(603) into Block(639) at 0", "Insert ExpressionStatement(619) into Block(639) at 1", "Insert EnhancedForStatement(638) into Block(639) at 2", "Insert NumberLiteral: 4(152) into ClassInstanceCreation(153) at 1", "Insert SimpleName: sb(450) into MethodInvocation(455) at 0", "Insert SimpleName: append(451) into MethodInvocation(455) at 1", "Insert MethodInvocation(454) into MethodInvocation(455) at 2", "Insert SimpleName: paths(484) into MethodInvocation(486) at 0", "Insert SimpleName: size(485) into MethodInvocation(486) at 1", "Insert SimpleType: Entry(527) into ParameterizedType: Entry<String,HashSet<Watcher>>(535) at 0", "Insert SimpleType: String(529) into ParameterizedType: Entry<String,HashSet<Watcher>>(535) at 1", "Insert ParameterizedType: HashSet<Watcher>(534) into ParameterizedType: Entry<String,HashSet<Watcher>>(535) at 2", "Insert MethodInvocation(546) into ExpressionStatement(547) at 0", "Insert SingleVariableDeclaration(551) into EnhancedForStatement(580) at 0", "Insert MethodInvocation(554) into EnhancedForStatement(580) at 1", "Insert Block(579) into EnhancedForStatement(580) at 2", "Insert SimpleType: Entry(585) into ParameterizedType: Entry<Watcher,HashSet<String>>(593) at 0", "Insert SimpleType: Watcher(587) into ParameterizedType: Entry<Watcher,HashSet<String>>(593) at 1", "Insert ParameterizedType: HashSet<String>(592) into ParameterizedType: Entry<Watcher,HashSet<String>>(593) at 2", "Insert MethodInvocation(602) into ExpressionStatement(603) at 0", "Insert MethodInvocation(618) into ExpressionStatement(619) at 0", "Insert SingleVariableDeclaration(623) into EnhancedForStatement(638) at 0", "Insert MethodInvocation(626) into EnhancedForStatement(638) at 1", "Insert Block(637) into EnhancedForStatement(638) at 2", "Insert SimpleName: watch2Paths(452) into MethodInvocation(454) at 0", "Insert SimpleName: size(453) into MethodInvocation(454) at 1", "Insert SimpleName: Entry(526) into SimpleType: Entry(527) at 0", "Insert SimpleName: String(528) into SimpleType: String(529) at 0", "Insert SimpleType: HashSet(531) into ParameterizedType: HashSet<Watcher>(534) at 0", "Insert SimpleType: Watcher(533) into ParameterizedType: HashSet<Watcher>(534) at 1", "Insert SimpleName: pwriter(541) into MethodInvocation(546) at 0", "Insert SimpleName: println(542) into MethodInvocation(546) at 1", "Insert MethodInvocation(545) into MethodInvocation(546) at 2", "Insert SimpleType: Watcher(549) into SingleVariableDeclaration(551) at 0", "Insert SimpleName: w(550) into SingleVariableDeclaration(551) at 1", "Insert SimpleName: e(552) into MethodInvocation(554) at 0", "Insert SimpleName: getValue(553) into MethodInvocation(554) at 1", "Insert ExpressionStatement(559) into Block(579) at 0", "Insert ExpressionStatement(573) into Block(579) at 1", "Insert ExpressionStatement(578) into Block(579) at 2", "Insert SimpleName: Entry(584) into SimpleType: Entry(585) at 0", "Insert SimpleName: Watcher(586) into SimpleType: Watcher(587) at 0", "Insert SimpleType: HashSet(589) into ParameterizedType: HashSet<String>(592) at 0", "Insert SimpleType: String(591) into ParameterizedType: HashSet<String>(592) at 1", "Insert SimpleName: pwriter(599) into MethodInvocation(602) at 0", "Insert SimpleName: print(600) into MethodInvocation(602) at 1", "Insert StringLiteral: \"0x\"(601) into MethodInvocation(602) at 2", "Insert SimpleName: pwriter(604) into MethodInvocation(618) at 0", "Insert SimpleName: println(605) into MethodInvocation(618) at 1", "Insert MethodInvocation(617) into MethodInvocation(618) at 2", "Insert SimpleType: String(621) into SingleVariableDeclaration(623) at 0", "Insert SimpleName: path(622) into SingleVariableDeclaration(623) at 1", "Insert SimpleName: e(624) into MethodInvocation(626) at 0", "Insert SimpleName: getValue(625) into MethodInvocation(626) at 1", "Insert ExpressionStatement(631) into Block(637) at 0", "Insert ExpressionStatement(636) into Block(637) at 1", "Insert SimpleName: HashSet(530) into SimpleType: HashSet(531) at 0", "Insert SimpleName: Watcher(532) into SimpleType: Watcher(533) at 0", "Insert SimpleName: e(543) into MethodInvocation(545) at 0", "Insert SimpleName: getKey(544) into MethodInvocation(545) at 1", "Insert SimpleName: Watcher(548) into SimpleType: Watcher(549) at 0", "Insert MethodInvocation(558) into ExpressionStatement(559) at 0", "Insert MethodInvocation(572) into ExpressionStatement(573) at 0", "Insert MethodInvocation(577) into ExpressionStatement(578) at 0", "Insert SimpleName: HashSet(588) into SimpleType: HashSet(589) at 0", "Insert SimpleName: String(590) into SimpleType: String(591) at 0", "Insert SimpleName: Long(606) into MethodInvocation(617) at 0", "Insert SimpleName: toHexString(607) into MethodInvocation(617) at 1", "Insert MethodInvocation(616) into MethodInvocation(617) at 2", "Insert SimpleName: String(620) into SimpleType: String(621) at 0", "Insert MethodInvocation(630) into ExpressionStatement(631) at 0", "Insert MethodInvocation(635) into ExpressionStatement(636) at 0", "Insert SimpleName: pwriter(555) into MethodInvocation(558) at 0", "Insert SimpleName: print(556) into MethodInvocation(558) at 1", "Insert StringLiteral: \"\\t0x\"(557) into MethodInvocation(558) at 2", "Insert SimpleName: pwriter(560) into MethodInvocation(572) at 0", "Insert SimpleName: print(561) into MethodInvocation(572) at 1", "Insert MethodInvocation(571) into MethodInvocation(572) at 2", "Insert SimpleName: pwriter(574) into MethodInvocation(577) at 0", "Insert SimpleName: print(575) into MethodInvocation(577) at 1", "Insert StringLiteral: \"\\n\"(576) into MethodInvocation(577) at 2", "Insert ParenthesizedExpression(614) into MethodInvocation(616) at 0", "Insert SimpleName: getSessionId(615) into MethodInvocation(616) at 1", "Insert SimpleName: pwriter(627) into MethodInvocation(630) at 0", "Insert SimpleName: print(628) into MethodInvocation(630) at 1", "Insert StringLiteral: \"\\t\"(629) into MethodInvocation(630) at 2", "Insert SimpleName: pwriter(632) into MethodInvocation(635) at 0", "Insert SimpleName: println(633) into MethodInvocation(635) at 1", "Insert SimpleName: path(634) into MethodInvocation(635) at 2", "Insert SimpleName: Long(562) into MethodInvocation(571) at 0", "Insert SimpleName: toHexString(563) into MethodInvocation(571) at 1", "Insert MethodInvocation(570) into MethodInvocation(571) at 2", "Insert CastExpression(613) into ParenthesizedExpression(614) at 0", "Insert ParenthesizedExpression(568) into MethodInvocation(570) at 0", "Insert SimpleName: getSessionId(569) into MethodInvocation(570) at 1", "Insert SimpleType: ServerCnxn(609) into CastExpression(613) at 0", "Insert MethodInvocation(612) into CastExpression(613) at 1", "Insert CastExpression(567) into ParenthesizedExpression(568) at 0", "Insert SimpleName: ServerCnxn(608) into SimpleType: ServerCnxn(609) at 0", "Insert SimpleName: e(610) into MethodInvocation(612) at 0", "Insert SimpleName: getKey(611) into MethodInvocation(612) at 1", "Insert SimpleType: ServerCnxn(565) into CastExpression(567) at 0", "Insert SimpleName: w(566) into CastExpression(567) at 1", "Insert SimpleName: ServerCnxn(564) into SimpleType: ServerCnxn(565) at 0"]}}, {"ZKDatabase_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SimpleName: dumpEphemerals to MethodDeclaration at 3", "operations": ["INS SimpleName: dumpEphemerals to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from @return to @param", "operations": ["UPD TagElement: @return from @return to @param"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: pwriter to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from get a string dump of all the ephemerals in to write a text dump of all the ephemerals in the datatree", "operations": ["UPD TextElement: get a string dump of all the ephemerals in from get a string dump of all the ephemerals in to write a text dump of all the ephemerals in the datatree"]}, {"root": "INS SimpleName: pwriter to TagElement: @return at 0", "operations": ["INS SimpleName: pwriter to TagElement: @return at 0"]}, {"root": "UPDATE from  the string dump of ephemerals to  the output to write to", "operations": ["UPD TextElement:  the string dump of ephemerals from  the string dump of ephemerals to  the output to write to"]}, {"root": "UPDATE from String to PrintWriter", "operations": ["UPD SimpleName: String from String to PrintWriter"]}, {"root": "MOVE from SimpleType: PrintWriter", "operations": ["MOV SimpleName: String to SimpleType: PrintWriter at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dataTree to MethodInvocation at 0", "MOV SimpleName: dumpEphemerals to MethodInvocation at 1"]}, {"root": "DEL TextElement: the datatree", "operations": ["DEL TextElement: the datatree"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String"]}, {"root": "DEL SimpleName: dumpEphemerals", "operations": ["DEL SimpleName: dumpEphemerals"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}]}}, {"ZKDatabase_diff": {"operations": ["Insert ImportDeclaration(22) into CompilationUnit(1237) at 3", "Insert QualifiedName: java.io.PrintWriter(21) into ImportDeclaration(22) at 0", "Insert PrimitiveType: void(662) into MethodDeclaration(674) at 2", "Insert SimpleName: dumpEphemerals(663) into MethodDeclaration(674) at 3", "Insert SingleVariableDeclaration(667) into MethodDeclaration(674) at 4", "Update TagElement: @return(657) to @param", "Insert SimpleType: PrintWriter(665) into SingleVariableDeclaration(667) at 0", "Insert SimpleName: pwriter(666) into SingleVariableDeclaration(667) at 1", "Insert ExpressionStatement(672) into Block(673) at 0", "Update TextElement: get a string dump of all the ephemerals in(653) to write a text dump of all the ephemerals in the datatree", "Insert SimpleName: pwriter(657) into TagElement: @param(659) at 0", "Update TextElement:  the string dump of ephemerals(656) to  the output to write to", "Update SimpleName: String(660) to PrintWriter", "Move SimpleName: String(660) into SimpleType: PrintWriter(665) at 0", "Insert MethodInvocation(671) into ExpressionStatement(672) at 0", "Move SimpleName: dataTree(663) into MethodInvocation(671) at 0", "Move SimpleName: dumpEphemerals(664) into MethodInvocation(671) at 1", "Insert SimpleName: pwriter(670) into MethodInvocation(671) at 2", "Delete TextElement: the datatree(654)", "Delete SimpleType: String(661)", "Delete SimpleName: dumpEphemerals(662)", "Delete MethodInvocation(665)", "Delete ReturnStatement(666)"]}}, {"ZooKeeperServer_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from java.io.ByteArrayOutputStream to java.io.PrintWriter", "operations": ["UPD QualifiedName: java.io.ByteArrayOutputStream from java.io.ByteArrayOutputStream to java.io.PrintWriter"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 84", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 84", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: dumpEphemerals to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: dumpEphemerals to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: zkDb to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: pwriter to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.jute.BinaryOutputArchive", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.jute.InputArchive", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.jute.OutputArchive"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.server.persistence.FileTxnSnapLog.PlayBackListener"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.server.quorum.Leader"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.server.quorum.QuorumPacket"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.server.quorum.Leader.Proposal", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.zookeeper.server.util.SerializeUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.zookeeper.txn.TxnHeader"]}]}}, {"ZooKeeperServer_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(2084) at 4", "Update QualifiedName: java.io.ByteArrayOutputStream(17) to java.io.PrintWriter", "Insert MethodDeclaration(2082) into TypeDeclaration: class(2083) at 84", "Insert Modifier: public(2069) into MethodDeclaration(2082) at 0", "Insert PrimitiveType: void(2070) into MethodDeclaration(2082) at 1", "Insert SimpleName: dumpEphemerals(2071) into MethodDeclaration(2082) at 2", "Insert SingleVariableDeclaration(2075) into MethodDeclaration(2082) at 3", "Insert Block(2081) into MethodDeclaration(2082) at 4", "Insert SimpleType: PrintWriter(2073) into SingleVariableDeclaration(2075) at 0", "Insert SimpleName: pwriter(2074) into SingleVariableDeclaration(2075) at 1", "Insert ExpressionStatement(2080) into Block(2081) at 0", "Insert SimpleName: PrintWriter(2072) into SimpleType: PrintWriter(2073) at 0", "Insert MethodInvocation(2079) into ExpressionStatement(2080) at 0", "Insert SimpleName: zkDb(2076) into MethodInvocation(2079) at 0", "Insert SimpleName: dumpEphemerals(2077) into MethodInvocation(2079) at 1", "Insert SimpleName: pwriter(2078) into MethodInvocation(2079) at 2", "Delete QualifiedName: java.util.Collection(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: org.apache.jute.BinaryOutputArchive(43)", "Delete ImportDeclaration(44)", "Delete QualifiedName: org.apache.jute.InputArchive(45)", "Delete ImportDeclaration(46)", "Delete QualifiedName: org.apache.jute.OutputArchive(47)", "Delete ImportDeclaration(48)", "Delete QualifiedName: org.apache.zookeeper.server.persistence.FileTxnSnapLog.PlayBackListener(75)", "Delete ImportDeclaration(76)", "Delete QualifiedName: org.apache.zookeeper.server.quorum.Leader(77)", "Delete ImportDeclaration(78)", "Delete QualifiedName: org.apache.zookeeper.server.quorum.QuorumPacket(79)", "Delete ImportDeclaration(80)", "Delete QualifiedName: org.apache.zookeeper.server.quorum.Leader.Proposal(81)", "Delete ImportDeclaration(82)", "Delete QualifiedName: org.apache.zookeeper.server.util.SerializeUtils(83)", "Delete ImportDeclaration(84)", "Delete QualifiedName: org.apache.zookeeper.txn.TxnHeader(85)", "Delete ImportDeclaration(86)"]}}, {"LearnerSessionTracker_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.PrintWriter to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: println to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: dumpSessions to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: pwriter to SingleVariableDeclaration at 1", "INS SimpleName: toString to MethodInvocation at 0", "INS SimpleName: pwriter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS MethodInvocation to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc"]}]}}, {"LearnerSessionTracker_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(282) at 1", "Insert QualifiedName: java.io.PrintWriter(17) into ImportDeclaration(18) at 0", "Insert MethodDeclaration(280) into TypeDeclaration: class(281) at 18", "Insert Modifier: public(266) into MethodDeclaration(280) at 0", "Insert PrimitiveType: void(267) into MethodDeclaration(280) at 1", "Insert SimpleName: dumpSessions(268) into MethodDeclaration(280) at 2", "Insert SingleVariableDeclaration(272) into MethodDeclaration(280) at 3", "Insert Block(279) into MethodDeclaration(280) at 4", "Insert SimpleType: PrintWriter(270) into SingleVariableDeclaration(272) at 0", "Insert SimpleName: pwriter(271) into SingleVariableDeclaration(272) at 1", "Insert ExpressionStatement(278) into Block(279) at 0", "Insert SimpleName: PrintWriter(269) into SimpleType: PrintWriter(270) at 0", "Insert MethodInvocation(277) into ExpressionStatement(278) at 0", "Insert SimpleName: pwriter(273) into MethodInvocation(277) at 0", "Insert SimpleName: println(274) into MethodInvocation(277) at 1", "Insert MethodInvocation(276) into MethodInvocation(277) at 2", "Insert SimpleName: toString(275) into MethodInvocation(276) at 0", "Delete Javadoc(77)"]}}], "commit_stats": [{"total_files": 17, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}