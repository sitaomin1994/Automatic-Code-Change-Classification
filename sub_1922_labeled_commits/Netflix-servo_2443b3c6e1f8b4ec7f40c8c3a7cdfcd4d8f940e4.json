{"application": "Netflix-servo", "csha": "2443b3c6e1f8b4ec7f40c8c3a7cdfcd4d8f940e4", "files": [{"DynamicCounter_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: DEFAULT_POLLING_INT", "DEL Modifier: static", "DEL Modifier: final", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL StringLiteral: \"60\"", "DEL FieldDeclaration", "DEL SimpleType: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleType: String", "DEL Modifier: final", "DEL StringLiteral: \"SECONDS\"", "DEL Modifier: static", "DEL SimpleName: DEFAULT_POLLING_INT_UNIT", "DEL SimpleName: String", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: CLASS_NAME", "DEL SimpleType: String", "DEL SimpleName: POLLING_INT_PROP", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: static", "DEL InfixExpression: +", "DEL StringLiteral: \".pollingInterval\"", "DEL Modifier: private", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: CLASS_NAME", "DEL InfixExpression: +", "DEL SimpleName: POLLING_INT_PROP_UNIT", "DEL Modifier: static", "DEL FieldDeclaration", "DEL StringLiteral: \".pollingIntervalUnit\"", "DEL Modifier: private", "DEL Modifier: final", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: interval", "DEL SimpleName: System", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: POLLING_INT_PROP", "DEL Modifier: final", "DEL SimpleName: getProperty", "DEL VariableDeclarationFragment", "DEL SimpleName: DEFAULT_POLLING_INT"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: intervalUnit", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: getProperty", "DEL SimpleName: DEFAULT_POLLING_INT_UNIT", "DEL SimpleName: POLLING_INT_PROP_UNIT", "DEL VariableDeclarationStatement", "DEL SimpleName: System", "DEL SimpleType: String"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: valueOf", "DEL SimpleName: Long", "DEL SimpleName: interval", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: pollingInterval", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: TimeUnit", "DEL Modifier: final", "DEL SimpleName: TimeUnit", "DEL SimpleName: pollingUnit", "DEL VariableDeclarationStatement", "DEL SimpleName: intervalUnit", "DEL SimpleType: TimeUnit", "DEL SimpleName: valueOf"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: pollingIntervalMs", "DEL SimpleName: toMillis", "DEL SimpleName: pollingInterval", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL PrimitiveType: long", "DEL SimpleName: pollingUnit", "DEL MethodInvocation", "DEL VariableDeclarationFragment"]}, {"root": "DEL SimpleName: pollingIntervalMs", "operations": ["DEL SimpleName: pollingIntervalMs"]}]}}, {"DynamicCounter_diff": {"operations": ["Delete Modifier: private(90)", "Delete Modifier: static(91)", "Delete Modifier: final(92)", "Delete SimpleName: String(93)", "Delete SimpleType: String(94)", "Delete SimpleName: DEFAULT_POLLING_INT(95)", "Delete StringLiteral: \"60\"(96)", "Delete VariableDeclarationFragment(97)", "Delete FieldDeclaration(98)", "Delete Modifier: private(99)", "Delete Modifier: static(100)", "Delete Modifier: final(101)", "Delete SimpleName: String(102)", "Delete SimpleType: String(103)", "Delete SimpleName: DEFAULT_POLLING_INT_UNIT(104)", "Delete StringLiteral: \"SECONDS\"(105)", "Delete VariableDeclarationFragment(106)", "Delete FieldDeclaration(107)", "Delete Modifier: private(143)", "Delete Modifier: static(144)", "Delete Modifier: final(145)", "Delete SimpleName: String(146)", "Delete SimpleType: String(147)", "Delete SimpleName: POLLING_INT_PROP(148)", "Delete SimpleName: CLASS_NAME(149)", "Delete StringLiteral: \".pollingInterval\"(150)", "Delete InfixExpression: +(151)", "Delete VariableDeclarationFragment(152)", "Delete FieldDeclaration(153)", "Delete Modifier: private(154)", "Delete Modifier: static(155)", "Delete Modifier: final(156)", "Delete SimpleName: String(157)", "Delete SimpleType: String(158)", "Delete SimpleName: POLLING_INT_PROP_UNIT(159)", "Delete SimpleName: CLASS_NAME(160)", "Delete StringLiteral: \".pollingIntervalUnit\"(161)", "Delete InfixExpression: +(162)", "Delete VariableDeclarationFragment(163)", "Delete FieldDeclaration(164)", "Delete Modifier: final(272)", "Delete SimpleName: String(273)", "Delete SimpleType: String(274)", "Delete SimpleName: interval(275)", "Delete SimpleName: System(276)", "Delete SimpleName: getProperty(277)", "Delete SimpleName: POLLING_INT_PROP(278)", "Delete SimpleName: DEFAULT_POLLING_INT(279)", "Delete MethodInvocation(280)", "Delete VariableDeclarationFragment(281)", "Delete VariableDeclarationStatement(282)", "Delete Modifier: final(283)", "Delete SimpleName: String(284)", "Delete SimpleType: String(285)", "Delete SimpleName: intervalUnit(286)", "Delete SimpleName: System(287)", "Delete SimpleName: getProperty(288)", "Delete SimpleName: POLLING_INT_PROP_UNIT(289)", "Delete SimpleName: DEFAULT_POLLING_INT_UNIT(290)", "Delete MethodInvocation(291)", "Delete VariableDeclarationFragment(292)", "Delete VariableDeclarationStatement(293)", "Delete Modifier: final(294)", "Delete PrimitiveType: long(295)", "Delete SimpleName: pollingInterval(296)", "Delete SimpleName: Long(297)", "Delete SimpleName: valueOf(298)", "Delete SimpleName: interval(299)", "Delete MethodInvocation(300)", "Delete VariableDeclarationFragment(301)", "Delete VariableDeclarationStatement(302)", "Delete Modifier: final(303)", "Delete SimpleName: TimeUnit(304)", "Delete SimpleType: TimeUnit(305)", "Delete SimpleName: pollingUnit(306)", "Delete SimpleName: TimeUnit(307)", "Delete SimpleName: valueOf(308)", "Delete SimpleName: intervalUnit(309)", "Delete MethodInvocation(310)", "Delete VariableDeclarationFragment(311)", "Delete VariableDeclarationStatement(312)", "Delete Modifier: final(313)", "Delete PrimitiveType: long(314)", "Delete SimpleName: pollingIntervalMs(315)", "Delete SimpleName: pollingUnit(316)", "Delete SimpleName: toMillis(317)", "Delete SimpleName: pollingInterval(318)", "Delete MethodInvocation(319)", "Delete VariableDeclarationFragment(320)", "Delete VariableDeclarationStatement(321)", "Delete SimpleName: pollingIntervalMs(354)"]}}, {"MaxGauge_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray", "operations": ["UPD QualifiedName: java.util.concurrent.atomic.AtomicLong from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: i to InfixExpression: < at 0", "INS Block to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: update to MethodDeclaration at 3", "INS SimpleName: length to MethodInvocation at 1", "INS PrefixExpression: ++ to ForStatement at 2", "INS TextElement: Update the max if the provided value is larger than the current max. to TagElement at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Block to ForStatement at 3", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: v to MethodInvocation at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: max to MethodInvocation at 0", "INS SimpleName: updateMax to MethodInvocation at 0", "INS ForStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: i to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 1", "INS SimpleName: getAndResetValue to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: getAndResetValue to MethodInvocation at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "UPDATE from AtomicLong to AtomicLongArray", "operations": ["UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from update to updateMax", "operations": ["UPD SimpleName: update from update to updateMax"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: idx to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: Long to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: Long to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS SimpleType: Long to MethodDeclaration at 3", "operations": ["INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: Long to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: idx to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS QualifiedName: Pollers.NUM_POLLERS to ClassInstanceCreation at 1", "operations": ["INS QualifiedName: Pollers.NUM_POLLERS to ClassInstanceCreation at 1"]}, {"root": "UPDATE from Update the max if the provided value is larger than the current max.  to Update the max for the given index if the provided value is larger than the current max.", "operations": ["UPD TextElement: Update the max if the provided value is larger than the current max.  from Update the max if the provided value is larger than the current max.  to Update the max for the given index if the provided value is larger than the current max."]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: && at 1", "operations": ["INS SimpleName: AtomicUtils to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: max to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: m.max to MethodInvocation at 3"]}, {"root": "INS SimpleName: AtomicUtils to MethodInvocation at 0", "operations": ["INS SimpleName: AtomicUtils to MethodInvocation at 0"]}, {"root": "INS SimpleName: hashCode to MethodInvocation at 1", "operations": ["INS SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: max to MethodInvocation at 3"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "DEL NumberLiteral: 0L", "operations": ["DEL NumberLiteral: 0L"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: get", "DEL InfixExpression: =="]}, {"root": "DEL SimpleName: get", "operations": ["DEL SimpleName: get"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: get", "DEL MethodInvocation"]}]}}, {"MaxGauge_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(293) at 3", "Update QualifiedName: java.util.concurrent.atomic.AtomicLong(18) to java.util.concurrent.atomic.AtomicLongArray", "Insert MethodDeclaration(140) into TypeDeclaration: class(292) at 9", "Insert MethodDeclaration(173) into TypeDeclaration: class(292) at 11", "Update SimpleType: AtomicLong(44) to AtomicLongArray", "Update Modifier: public(71) to private", "Update SimpleName: update(73) to updateMax", "Insert SingleVariableDeclaration(76) into MethodDeclaration(110) at 4", "Insert Javadoc(113) into MethodDeclaration(140) at 0", "Insert Modifier: public(114) into MethodDeclaration(140) at 1", "Insert PrimitiveType: void(115) into MethodDeclaration(140) at 2", "Insert SimpleName: update(116) into MethodDeclaration(140) at 3", "Insert SingleVariableDeclaration(119) into MethodDeclaration(140) at 4", "Insert Block(139) into MethodDeclaration(140) at 5", "Move Javadoc(141) into MethodDeclaration(157) at 0", "Move MarkerAnnotation(126) into MethodDeclaration(157) at 1", "Move SimpleType: Long(129) into MethodDeclaration(157) at 5", "Move Javadoc(124) into MethodDeclaration(173) at 0", "Move MarkerAnnotation(110) into MethodDeclaration(173) at 1", "Insert Modifier: public(164) into MethodDeclaration(173) at 2", "Move SimpleType: Long(113) into MethodDeclaration(173) at 3", "Insert SimpleName: getAndResetValue(167) into MethodDeclaration(173) at 4", "Insert Block(172) into MethodDeclaration(173) at 5", "Move Javadoc(194) into MethodDeclaration(194) at 0", "Move MarkerAnnotation(196) into MethodDeclaration(194) at 1", "Insert SimpleType: Long(182) into MethodDeclaration(194) at 3", "Insert SingleVariableDeclaration(186) into MethodDeclaration(194) at 5", "Insert Javadoc(197) into MethodDeclaration(244) at 0", "Move Javadoc(108) into MethodDeclaration(264) at 0", "Insert MarkerAnnotation(250) into MethodDeclaration(264) at 1", "Update SimpleName: AtomicLong(43) to AtomicLongArray", "Insert PrimitiveType: int(74) into SingleVariableDeclaration(76) at 0", "Insert SimpleName: idx(75) into SingleVariableDeclaration(76) at 1", "Insert TagElement(112) into Javadoc(113) at 0", "Insert PrimitiveType: long(117) into SingleVariableDeclaration(119) at 0", "Insert SimpleName: v(118) into SingleVariableDeclaration(119) at 1", "Insert ForStatement(138) into Block(139) at 0", "Insert ReturnStatement(171) into Block(172) at 0", "Insert SimpleName: Long(181) into SimpleType: Long(182) at 0", "Insert PrimitiveType: int(184) into SingleVariableDeclaration(186) at 0", "Insert SimpleName: idx(185) into SingleVariableDeclaration(186) at 1", "Insert TagElement(196) into Javadoc(197) at 0", "Insert SimpleName: Override(249) into MarkerAnnotation(250) at 0", "Update SimpleType: AtomicLong(47) to AtomicLongArray", "Insert QualifiedName: Pollers.NUM_POLLERS(48) into ClassInstanceCreation(49) at 1", "Update TextElement: Update the max if the provided value is larger than the current max. (68) to Update the max for the given index if the provided value is larger than the current max.", "Insert TextElement: Update the max if the provided value is larger than the current max.(111) into TagElement(112) at 0", "Insert VariableDeclarationExpression(124) into ForStatement(138) at 0", "Insert InfixExpression: <(129) into ForStatement(138) at 1", "Insert PrefixExpression: ++(131) into ForStatement(138) at 2", "Insert Block(137) into ForStatement(138) at 3", "Insert MethodInvocation(170) into ReturnStatement(171) at 0", "Insert TagElement: @inheritDoc(195) into TagElement(196) at 0", "Update SimpleName: AtomicLong(46) to AtomicLongArray", "Insert PrimitiveType: int(120) into VariableDeclarationExpression(124) at 0", "Insert VariableDeclarationFragment(123) into VariableDeclarationExpression(124) at 1", "Insert SimpleName: i(125) into InfixExpression: <(129) at 0", "Insert MethodInvocation(128) into InfixExpression: <(129) at 1", "Insert SimpleName: i(130) into PrefixExpression: ++(131) at 0", "Insert ExpressionStatement(136) into Block(137) at 0", "Insert NumberLiteral: 0(153) into MethodInvocation(154) at 2", "Insert SimpleName: getAndResetValue(168) into MethodInvocation(170) at 0", "Insert NumberLiteral: 0(169) into MethodInvocation(170) at 1", "Insert SimpleName: idx(189) into MethodInvocation(191) at 2", "Insert MethodInvocation(240) into InfixExpression: &&(241) at 1", "Insert SimpleName: idx(84) into MethodInvocation(85) at 2", "Insert SimpleName: i(121) into VariableDeclarationFragment(123) at 0", "Insert NumberLiteral: 0(122) into VariableDeclarationFragment(123) at 1", "Insert SimpleName: max(126) into MethodInvocation(128) at 0", "Insert SimpleName: length(127) into MethodInvocation(128) at 1", "Insert MethodInvocation(135) into ExpressionStatement(136) at 0", "Insert SimpleName: AtomicUtils(236) into MethodInvocation(240) at 0", "Insert SimpleName: equals(237) into MethodInvocation(240) at 1", "Move SimpleName: max(180) into MethodInvocation(240) at 2", "Move QualifiedName: m.max(183) into MethodInvocation(240) at 3", "Insert SimpleName: AtomicUtils(257) into MethodInvocation(260) at 0", "Insert SimpleName: hashCode(258) into MethodInvocation(260) at 1", "Move SimpleName: max(230) into MethodInvocation(286) at 3", "Insert SimpleName: idx(93) into MethodInvocation(96) at 2", "Insert SimpleName: updateMax(132) into MethodInvocation(135) at 0", "Insert SimpleName: i(133) into MethodInvocation(135) at 1", "Insert SimpleName: v(134) into MethodInvocation(135) at 2", "Insert SimpleName: idx(103) into MethodInvocation(104) at 2", "Delete NumberLiteral: 0L(48)", "Delete SimpleName: get(181)", "Delete MethodInvocation(182)", "Delete SimpleName: get(184)", "Delete MethodInvocation(185)", "Delete InfixExpression: ==(186)", "Delete SimpleName: get(204)", "Delete SimpleName: get(231)", "Delete MethodInvocation(232)"]}}, {"MinGauge_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray", "operations": ["UPD QualifiedName: java.util.concurrent.atomic.AtomicLong from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: length to MethodInvocation at 1", "INS ForStatement to Block at 0", "INS InfixExpression: < to ForStatement at 1", "INS Block to MethodDeclaration at 5", "INS PrefixExpression: ++ to ForStatement at 2", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS TextElement: Update the min if the provided value is smaller than the current min. to TagElement at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: i to InfixExpression: < at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: updateMin to MethodInvocation at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: i to MethodInvocation at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: v to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Block to ForStatement at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: update to MethodDeclaration at 3", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: min to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS SimpleName: getAndResetValue to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleType: Long to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: getAndResetValue to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Long to SimpleType: Long at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: pollerIdx to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "UPDATE from AtomicLong to AtomicLongArray", "operations": ["UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: length to MethodInvocation at 1", "INS QualifiedName: Long.MAX_VALUE to MethodInvocation at 3", "INS VariableDeclarationExpression to ForStatement at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: min to MethodInvocation at 0", "INS SimpleName: set to MethodInvocation at 1", "INS ForStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: min to MethodInvocation at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS MethodInvocation to InfixExpression: < at 1", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS Block to ForStatement at 3", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: i to MethodInvocation at 2"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from update to updateMin", "operations": ["UPD SimpleName: update from update to updateMin"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: idx to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Long to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 5", "MOV SimpleName: getAndResetValue to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Long to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "UPDATE from Long.MAX_VALUE to Pollers.NUM_POLLERS", "operations": ["UPD QualifiedName: Long.MAX_VALUE from Long.MAX_VALUE to Pollers.NUM_POLLERS"]}, {"root": "UPDATE from Creates a new instance of the gauge.  to Creates a new instance of the gauge.", "operations": ["UPD TextElement: Creates a new instance of the gauge.  from Creates a new instance of the gauge.  to Creates a new instance of the gauge."]}, {"root": "INS MethodInvocation to InfixExpression: && at 1", "operations": ["INS SimpleName: AtomicUtils to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS SimpleName: pollerIdx to MethodInvocation at 2", "operations": ["INS SimpleName: pollerIdx to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: min to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: m.min to MethodInvocation at 3"]}, {"root": "INS SimpleName: AtomicUtils to MethodInvocation at 0", "operations": ["INS SimpleName: AtomicUtils to MethodInvocation at 0"]}, {"root": "INS SimpleName: hashCode to MethodInvocation at 1", "operations": ["INS SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: min to MethodInvocation at 3"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "INS SimpleName: idx to MethodInvocation at 2", "operations": ["INS SimpleName: idx to MethodInvocation at 2"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TagElement", "DEL TextElement: Update the min if the provided value is smaller than the current min. "]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL MethodInvocation", "DEL SimpleName: get", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: get"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL SimpleName: get", "operations": ["DEL SimpleName: get"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: get"]}]}}, {"MinGauge_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(328) at 3", "Update QualifiedName: java.util.concurrent.atomic.AtomicLong(18) to java.util.concurrent.atomic.AtomicLongArray", "Insert MethodDeclaration(161) into TypeDeclaration: class(327) at 9", "Insert MethodDeclaration(203) into TypeDeclaration: class(327) at 11", "Insert MethodDeclaration(231) into TypeDeclaration: class(327) at 12", "Update SimpleType: AtomicLong(48) to AtomicLongArray", "Insert Block(90) into MethodDeclaration(91) at 4", "Update Modifier: public(75) to private", "Update SimpleName: update(77) to updateMin", "Insert SingleVariableDeclaration(97) into MethodDeclaration(131) at 3", "Insert Javadoc(134) into MethodDeclaration(161) at 0", "Insert Modifier: public(135) into MethodDeclaration(161) at 1", "Insert PrimitiveType: void(136) into MethodDeclaration(161) at 2", "Insert SimpleName: update(137) into MethodDeclaration(161) at 3", "Insert SingleVariableDeclaration(140) into MethodDeclaration(161) at 4", "Insert Block(160) into MethodDeclaration(161) at 5", "Move MarkerAnnotation(141) into MethodDeclaration(188) at 1", "Move SimpleType: Long(144) into MethodDeclaration(188) at 4", "Move Javadoc(139) into MethodDeclaration(203) at 0", "Move MarkerAnnotation(222) into MethodDeclaration(203) at 1", "Move Modifier: public(142) into MethodDeclaration(203) at 2", "Move SimpleType: Long(117) into MethodDeclaration(203) at 3", "Move SimpleName: getAndResetValue(145) into MethodDeclaration(203) at 4", "Insert Block(202) into MethodDeclaration(203) at 5", "Insert MarkerAnnotation(205) into MethodDeclaration(231) at 0", "Insert Modifier: public(206) into MethodDeclaration(231) at 1", "Insert SimpleType: Long(208) into MethodDeclaration(231) at 2", "Insert SimpleName: getAndResetValue(209) into MethodDeclaration(231) at 3", "Insert SingleVariableDeclaration(212) into MethodDeclaration(231) at 4", "Move Block(162) into MethodDeclaration(231) at 5", "Move MarkerAnnotation(114) into MethodDeclaration(300) at 1", "Update SimpleName: AtomicLong(47) to AtomicLongArray", "Move SuperConstructorInvocation(69) into Block(90) at 0", "Insert ForStatement(89) into Block(90) at 1", "Insert PrimitiveType: int(95) into SingleVariableDeclaration(97) at 0", "Insert SimpleName: idx(96) into SingleVariableDeclaration(97) at 1", "Insert TagElement(133) into Javadoc(134) at 0", "Insert PrimitiveType: long(138) into SingleVariableDeclaration(140) at 0", "Insert SimpleName: v(139) into SingleVariableDeclaration(140) at 1", "Insert ForStatement(159) into Block(160) at 0", "Move ReturnStatement(161) into Block(187) at 1", "Insert ReturnStatement(201) into Block(202) at 0", "Insert SimpleName: Override(204) into MarkerAnnotation(205) at 0", "Insert SimpleName: Long(207) into SimpleType: Long(208) at 0", "Insert PrimitiveType: int(210) into SingleVariableDeclaration(212) at 0", "Insert SimpleName: pollerIdx(211) into SingleVariableDeclaration(212) at 1", "Move ReturnStatement(133) into Block(230) at 1", "Update SimpleType: AtomicLong(51) to AtomicLongArray", "Update QualifiedName: Long.MAX_VALUE(52) to Pollers.NUM_POLLERS", "Update TextElement: Creates a new instance of the gauge. (56) to Creates a new instance of the gauge.", "Insert VariableDeclarationExpression(74) into ForStatement(89) at 0", "Insert InfixExpression: <(79) into ForStatement(89) at 1", "Insert PrefixExpression: ++(81) into ForStatement(89) at 2", "Insert Block(88) into ForStatement(89) at 3", "Insert TextElement: Update the min if the provided value is smaller than the current min.(132) into TagElement(133) at 0", "Insert VariableDeclarationExpression(145) into ForStatement(159) at 0", "Insert InfixExpression: <(150) into ForStatement(159) at 1", "Insert PrefixExpression: ++(152) into ForStatement(159) at 2", "Insert Block(158) into ForStatement(159) at 3", "Insert MethodInvocation(200) into ReturnStatement(201) at 0", "Update SimpleName: AtomicLong(50) to AtomicLongArray", "Insert PrimitiveType: int(70) into VariableDeclarationExpression(74) at 0", "Insert VariableDeclarationFragment(73) into VariableDeclarationExpression(74) at 1", "Insert SimpleName: i(75) into InfixExpression: <(79) at 0", "Insert MethodInvocation(78) into InfixExpression: <(79) at 1", "Insert SimpleName: i(80) into PrefixExpression: ++(81) at 0", "Insert ExpressionStatement(87) into Block(88) at 0", "Insert PrimitiveType: int(141) into VariableDeclarationExpression(145) at 0", "Insert VariableDeclarationFragment(144) into VariableDeclarationExpression(145) at 1", "Insert SimpleName: i(146) into InfixExpression: <(150) at 0", "Insert MethodInvocation(149) into InfixExpression: <(150) at 1", "Insert SimpleName: i(151) into PrefixExpression: ++(152) at 0", "Insert ExpressionStatement(157) into Block(158) at 0", "Insert SimpleName: getAndResetValue(198) into MethodInvocation(200) at 0", "Insert NumberLiteral: 0(199) into MethodInvocation(200) at 1", "Insert MethodInvocation(277) into InfixExpression: &&(278) at 1", "Insert SimpleName: i(71) into VariableDeclarationFragment(73) at 0", "Insert NumberLiteral: 0(72) into VariableDeclarationFragment(73) at 1", "Insert SimpleName: min(76) into MethodInvocation(78) at 0", "Insert SimpleName: length(77) into MethodInvocation(78) at 1", "Insert MethodInvocation(86) into ExpressionStatement(87) at 0", "Insert SimpleName: idx(105) into MethodInvocation(106) at 2", "Insert SimpleName: i(142) into VariableDeclarationFragment(144) at 0", "Insert NumberLiteral: 0(143) into VariableDeclarationFragment(144) at 1", "Insert SimpleName: min(147) into MethodInvocation(149) at 0", "Insert SimpleName: length(148) into MethodInvocation(149) at 1", "Insert MethodInvocation(156) into ExpressionStatement(157) at 0", "Insert NumberLiteral: 0(175) into MethodInvocation(176) at 2", "Insert SimpleName: pollerIdx(217) into MethodInvocation(219) at 2", "Insert SimpleName: AtomicUtils(273) into MethodInvocation(277) at 0", "Insert SimpleName: equals(274) into MethodInvocation(277) at 1", "Move SimpleName: min(206) into MethodInvocation(277) at 2", "Move QualifiedName: m.min(209) into MethodInvocation(277) at 3", "Insert SimpleName: AtomicUtils(293) into MethodInvocation(296) at 0", "Insert SimpleName: hashCode(294) into MethodInvocation(296) at 1", "Move SimpleName: min(256) into MethodInvocation(321) at 3", "Insert SimpleName: min(82) into MethodInvocation(86) at 0", "Insert SimpleName: set(83) into MethodInvocation(86) at 1", "Insert SimpleName: i(84) into MethodInvocation(86) at 2", "Insert QualifiedName: Long.MAX_VALUE(85) into MethodInvocation(86) at 3", "Insert SimpleName: idx(114) into MethodInvocation(117) at 2", "Insert SimpleName: updateMin(153) into MethodInvocation(156) at 0", "Insert SimpleName: i(154) into MethodInvocation(156) at 1", "Insert SimpleName: v(155) into MethodInvocation(156) at 2", "Insert SimpleName: idx(124) into MethodInvocation(125) at 2", "Delete Block(70)", "Delete TextElement: Update the min if the provided value is smaller than the current min. (72)", "Delete TagElement(73)", "Delete Javadoc(74)", "Delete TextElement:  (110)", "Delete TextElement:  (137)", "Delete MethodDeclaration(163)", "Delete TextElement:  (165)", "Delete SimpleName: get(207)", "Delete MethodInvocation(208)", "Delete SimpleName: get(210)", "Delete MethodInvocation(211)", "Delete InfixExpression: ==(212)", "Delete TextElement:  (218)", "Delete SimpleName: get(230)", "Delete TextElement:  (237)", "Delete SimpleName: get(257)", "Delete MethodInvocation(258)"]}}, {"MonitorWrapper_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleType: T to MethodDeclaration at 3", "INS SimpleType: ResettableMonitor to ParameterizedType: ResettableMonitor<T> at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: pollerIdx to MethodInvocation at 2", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: ResettableMonitor to ParameterizedType: ResettableMonitor<?> at 0", "INS SimpleName: ResettableMonitor to SimpleType: ResettableMonitor at 0", "INS SimpleName: getAndResetValue to MethodDeclaration at 4", "INS SimpleName: pollerIdx to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: getAndResetValue to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: monitor to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: ResettableMonitor to SimpleType: ResettableMonitor at 0", "INS SimpleName: T to SimpleType: T at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS WildcardType: ? to ParameterizedType: ResettableMonitor<?> at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS ParameterizedType: ResettableMonitor<?> to InstanceofExpression at 1", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS ParameterizedType: ResettableMonitor<T> to CastExpression at 0", "INS SimpleType: T to ParameterizedType: ResettableMonitor<T> at 1", "INS SimpleName: monitor to InstanceofExpression at 0", "INS SimpleName: monitor to CastExpression at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}]}}, {"MonitorWrapper_diff": {"operations": ["Insert MethodDeclaration(162) into TypeDeclaration: class(258) at 9", "Move Javadoc(128) into MethodDeclaration(162) at 0", "Insert MarkerAnnotation(130) into MethodDeclaration(162) at 1", "Insert Modifier: public(131) into MethodDeclaration(162) at 2", "Insert SimpleType: T(133) into MethodDeclaration(162) at 3", "Insert SimpleName: getAndResetValue(134) into MethodDeclaration(162) at 4", "Insert SingleVariableDeclaration(137) into MethodDeclaration(162) at 5", "Insert Block(161) into MethodDeclaration(162) at 6", "Insert Javadoc(165) into MethodDeclaration(213) at 0", "Insert SimpleName: Override(129) into MarkerAnnotation(130) at 0", "Insert SimpleName: T(132) into SimpleType: T(133) at 0", "Insert PrimitiveType: int(135) into SingleVariableDeclaration(137) at 0", "Insert SimpleName: pollerIdx(136) into SingleVariableDeclaration(137) at 1", "Insert ReturnStatement(160) into Block(161) at 0", "Insert TagElement(164) into Javadoc(165) at 0", "Insert ConditionalExpression(159) into ReturnStatement(160) at 0", "Insert TagElement: @inheritDoc(163) into TagElement(164) at 0", "Insert ParenthesizedExpression(144) into ConditionalExpression(159) at 0", "Insert MethodInvocation(155) into ConditionalExpression(159) at 1", "Insert MethodInvocation(158) into ConditionalExpression(159) at 2", "Insert InstanceofExpression(143) into ParenthesizedExpression(144) at 0", "Insert ParenthesizedExpression(152) into MethodInvocation(155) at 0", "Insert SimpleName: getAndResetValue(153) into MethodInvocation(155) at 1", "Insert SimpleName: pollerIdx(154) into MethodInvocation(155) at 2", "Insert SimpleName: monitor(156) into MethodInvocation(158) at 0", "Insert SimpleName: getValue(157) into MethodInvocation(158) at 1", "Insert SimpleName: monitor(138) into InstanceofExpression(143) at 0", "Insert ParameterizedType: ResettableMonitor<?>(142) into InstanceofExpression(143) at 1", "Insert CastExpression(151) into ParenthesizedExpression(152) at 0", "Insert SimpleType: ResettableMonitor(140) into ParameterizedType: ResettableMonitor<?>(142) at 0", "Insert WildcardType: ?(141) into ParameterizedType: ResettableMonitor<?>(142) at 1", "Insert ParameterizedType: ResettableMonitor<T>(149) into CastExpression(151) at 0", "Insert SimpleName: monitor(150) into CastExpression(151) at 1", "Insert SimpleName: ResettableMonitor(139) into SimpleType: ResettableMonitor(140) at 0", "Insert SimpleType: ResettableMonitor(146) into ParameterizedType: ResettableMonitor<T>(149) at 0", "Insert SimpleType: T(148) into ParameterizedType: ResettableMonitor<T>(149) at 1", "Insert SimpleName: ResettableMonitor(145) into SimpleType: ResettableMonitor(146) at 0", "Insert SimpleName: T(147) into SimpleType: T(148) at 0"]}}, {"PeakRateCounter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.util.Arrays to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: AtomicUtils to MethodInvocation at 0", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS BooleanLiteral: true to ReturnStatement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 6", "INS SimpleName: equals to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to InfixExpression: == at 0", "INS MethodInvocation to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: o to CastExpression at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: PeakInterval to TypeDeclaration: class at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: PeakInterval to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: o to InfixExpression: == at 0", "INS SimpleName: amount to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: o to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: countsRef to MethodInvocation at 0", "INS ReturnStatement to Block at 3", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleType: PeakInterval to VariableDeclarationStatement at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 1", "INS SimpleName: o to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS IfStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: static to TypeDeclaration: class at 1", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: numBuckets to SingleVariableDeclaration at 1", "INS SimpleName: AtomicUtils to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: o to InfixExpression: == at 1", "INS SimpleName: that to VariableDeclarationFragment at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: countsRef to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS MarkerAnnotation to MethodDeclaration at 0", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS InfixExpression: != to InfixExpression: || at 1", "INS SimpleType: PeakInterval to CastExpression at 0", "INS QualifiedName: that.countsRef to MethodInvocation at 0", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS SimpleName: now to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS ArrayType: PeakInterval[] to FieldDeclaration at 2", "INS Dimension to ArrayType: PeakInterval[] at 1", "INS SimpleType: PeakInterval to ArrayType: PeakInterval[] at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: peakIntervals to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: config to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to MethodDeclaration at 3", "INS SimpleName: config to ConstructorInvocation at 0", "INS SimpleType: MonitorConfig to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: MonitorConfig to SimpleType: MonitorConfig at 0", "INS QualifiedName: Pollers.POLLING_INTERVALS to ConstructorInvocation at 1", "INS SimpleName: PeakRateCounter to MethodDeclaration at 1", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS InfixExpression: / to ParenthesizedExpression at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: PeakInterval to ClassInstanceCreation at 0", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to InfixExpression: / at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: pollingIntervals to SingleVariableDeclaration at 1", "INS SimpleType: MonitorConfig to SingleVariableDeclaration at 0", "INS Block to ForStatement at 3", "INS VariableDeclarationExpression to ForStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS PrefixExpression: ++ to ForStatement at 2", "INS QualifiedName: peakIntervals.length to InfixExpression: < at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS SimpleName: pollingIntervals to ArrayAccess at 0", "INS ArrayType: PeakInterval[] to ArrayCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: PeakRateCounter to MethodDeclaration at 0", "INS CastExpression to ClassInstanceCreation at 1", "INS SimpleName: MonitorConfig to SimpleType: MonitorConfig at 0", "INS ArrayCreation to Assignment: = at 1", "INS ForStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ArrayType: long[] to SingleVariableDeclaration at 0", "INS Dimension to ArrayType: long[] at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS PrimitiveType: long to ArrayType: long[] at 0", "INS Dimension to ArrayType: PeakInterval[] at 1", "INS SimpleType: PeakInterval to ArrayType: PeakInterval[] at 0", "INS NumberLiteral: 1000L to InfixExpression: / at 1", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS ArrayAccess to Assignment: = at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PrimitiveType: int to CastExpression at 0", "INS QualifiedName: pollingIntervals.length to ArrayCreation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: peakIntervals to ArrayAccess at 0", "INS InfixExpression: < to ForStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: peakIntervals to Assignment: = at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS TagElement: @deprecated to Javadoc at 1", "INS QualifiedName: Pollers.POLLING_INTERVALS to ConstructorInvocation at 1", "INS SimpleName: PeakRateCounter to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: config to ConstructorInvocation at 0", "INS TextElement: Create a new instance with the specified interval. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS TextElement:  Polling intervals are configured using the system property servo.pollers to TagElement: @deprecated at 0", "INS Block to MethodDeclaration at 6", "INS TagElement to Javadoc at 0", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: peakIntervals to ArrayAccess at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 2", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: getValue to MethodDeclaration at 4", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ReturnStatement to Block at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleType: Number to MethodDeclaration at 3", "INS SimpleName: getAndResetValue to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS NumberLiteral: 0 to MethodInvocation at 1", "INS SimpleName: Number to SimpleType: Number at 0", "INS SimpleName: getAndResetValue to MethodInvocation at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: pollerIdx to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleType: Number to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleName: getAndResetValue to MethodInvocation at 1", "INS SimpleName: getAndResetValue to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: peakIntervals to ArrayAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: Number to SimpleType: Number at 0", "INS SimpleName: pollerIdx to ArrayAccess at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleType: PeakInterval to SingleVariableDeclaration at 0", "INS SimpleName: peakIntervals to EnhancedForStatement at 1", "INS SimpleName: now to MethodInvocation at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: PeakInterval to SimpleType: PeakInterval at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: peakInterval to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: peakInterval to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: increment to MethodInvocation at 1", "INS SimpleName: increment to MethodDeclaration at 4", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: amount to MethodInvocation at 3", "INS PrimitiveType: void to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 2"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 6", "MOV MethodDeclaration to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Block to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Number to MethodDeclaration at 3", "MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SimpleName: increment to MethodDeclaration at 1", "MOV PrimitiveType: void to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2", "MOV Modifier: final to FieldDeclaration at 0", "MOV ParameterizedType: AtomicReference<AtomicLongArray> to FieldDeclaration at 1"]}, {"root": "INS SimpleType: Number to MethodDeclaration at 0", "operations": ["INS SimpleName: Number to SimpleType: Number at 0", "INS SimpleType: Number to MethodDeclaration at 0"]}, {"root": "INS SimpleName: getValue to MethodDeclaration at 1", "operations": ["INS SimpleName: getValue to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 2", "operations": ["INS SimpleName: getValue to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 2", "INS SimpleName: countsRef to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: counts to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Number to MethodDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from buckets to countsRef", "operations": ["UPD SimpleName: buckets from buckets to countsRef", "UPD SimpleName: buckets from buckets to countsRef", "UPD SimpleName: buckets from buckets to countsRef", "UPD SimpleName: buckets from buckets to countsRef"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: AtomicLongArray to SingleVariableDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: AtomicLongArray to SimpleType: AtomicLongArray at 0", "INS SimpleType: AtomicLongArray to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: counts to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: counts to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getValue to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ParenthesizedExpression at 0", "operations": ["INS SimpleName: peakIntervals to FieldAccess at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: Arrays to MethodInvocation at 0", "INS QualifiedName: c.peakIntervals to MethodInvocation at 3", "INS MethodInvocation to ParenthesizedExpression at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2", "MOV SimpleName: set to MethodInvocation at 1", "MOV SimpleName: buckets to MethodInvocation at 0"]}, {"root": "UPDATE from set to getAndSet", "operations": ["UPD SimpleName: set from set to getAndSet"]}, {"root": "INS MethodInvocation to InfixExpression: % at 1", "operations": ["INS SimpleName: countsRef to MethodInvocation at 0", "INS SimpleName: length to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: % at 1", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: countsRef to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: numBuckets", "DEL Assignment: =", "DEL SimpleName: intervalSeconds", "DEL ExpressionStatement"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL Javadoc", "DEL TextElement: Create a new instance with the specified interval. "]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: PeakRateCounter", "operations": ["DEL SimpleName: PeakRateCounter"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: buckets", "DEL SimpleName: counts", "DEL VariableDeclarationStatement"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: numBuckets", "operations": ["DEL SimpleName: numBuckets"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: getValue"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: value", "operations": ["DEL SimpleName: value"]}, {"root": "DEL SimpleName: numBuckets", "operations": ["DEL SimpleName: numBuckets"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL PrimitiveType: int", "DEL SimpleName: numBuckets", "DEL VariableDeclarationFragment", "DEL Modifier: private"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL ThisExpression", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL InfixExpression: ==", "DEL SimpleName: c"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration"]}]}}, {"PeakRateCounter_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(555) at 3", "Insert QualifiedName: java.util.Arrays(18) into ImportDeclaration(19) at 0", "Insert TypeDeclaration: class(253) into TypeDeclaration: class(554) at 6", "Insert FieldDeclaration(262) into TypeDeclaration: class(554) at 7", "Insert MethodDeclaration(273) into TypeDeclaration: class(554) at 8", "Insert MethodDeclaration(327) into TypeDeclaration: class(554) at 9", "Insert MethodDeclaration(348) into TypeDeclaration: class(554) at 10", "Insert MethodDeclaration(366) into TypeDeclaration: class(554) at 11", "Insert MethodDeclaration(382) into TypeDeclaration: class(554) at 12", "Insert MethodDeclaration(403) into TypeDeclaration: class(554) at 13", "Insert MethodDeclaration(553) into TypeDeclaration: class(554) at 18", "Insert Modifier: private(42) into TypeDeclaration: class(253) at 0", "Insert Modifier: static(43) into TypeDeclaration: class(253) at 1", "Insert SimpleName: PeakInterval(44) into TypeDeclaration: class(253) at 2", "Insert FieldDeclaration(53) into TypeDeclaration: class(253) at 3", "Insert MethodDeclaration(72) into TypeDeclaration: class(253) at 4", "Move MethodDeclaration(91) into TypeDeclaration: class(253) at 5", "Move MethodDeclaration(152) into TypeDeclaration: class(253) at 6", "Move MethodDeclaration(181) into TypeDeclaration: class(253) at 7", "Insert MethodDeclaration(207) into TypeDeclaration: class(253) at 8", "Insert MethodDeclaration(221) into TypeDeclaration: class(253) at 9", "Insert MethodDeclaration(252) into TypeDeclaration: class(253) at 10", "Insert Modifier: private(254) into FieldDeclaration(262) at 0", "Insert Modifier: final(255) into FieldDeclaration(262) at 1", "Insert ArrayType: PeakInterval[](259) into FieldDeclaration(262) at 2", "Insert VariableDeclarationFragment(261) into FieldDeclaration(262) at 3", "Insert Modifier: public(263) into MethodDeclaration(273) at 0", "Insert SimpleName: PeakRateCounter(264) into MethodDeclaration(273) at 1", "Insert SingleVariableDeclaration(268) into MethodDeclaration(273) at 2", "Insert Block(272) into MethodDeclaration(273) at 3", "Insert SimpleName: PeakRateCounter(274) into MethodDeclaration(327) at 0", "Insert SingleVariableDeclaration(278) into MethodDeclaration(327) at 1", "Insert SingleVariableDeclaration(283) into MethodDeclaration(327) at 2", "Insert Block(326) into MethodDeclaration(327) at 3", "Insert Javadoc(332) into MethodDeclaration(348) at 0", "Insert MarkerAnnotation(334) into MethodDeclaration(348) at 1", "Insert Modifier: public(335) into MethodDeclaration(348) at 2", "Insert SimpleName: PeakRateCounter(336) into MethodDeclaration(348) at 3", "Move SingleVariableDeclaration(64) into MethodDeclaration(348) at 4", "Move SingleVariableDeclaration(67) into MethodDeclaration(348) at 5", "Insert Block(347) into MethodDeclaration(348) at 6", "Move Javadoc(185) into MethodDeclaration(366) at 0", "Move MarkerAnnotation(158) into MethodDeclaration(366) at 1", "Insert Modifier: public(355) into MethodDeclaration(366) at 2", "Move SimpleType: Number(161) into MethodDeclaration(366) at 3", "Insert SimpleName: getValue(358) into MethodDeclaration(366) at 4", "Insert Block(365) into MethodDeclaration(366) at 5", "Move Javadoc(156) into MethodDeclaration(382) at 0", "Move MarkerAnnotation(97) into MethodDeclaration(382) at 1", "Insert Modifier: public(373) into MethodDeclaration(382) at 2", "Insert SimpleType: Number(375) into MethodDeclaration(382) at 3", "Insert SimpleName: getAndResetValue(376) into MethodDeclaration(382) at 4", "Insert Block(381) into MethodDeclaration(382) at 5", "Move Javadoc(95) into MethodDeclaration(403) at 0", "Insert MarkerAnnotation(388) into MethodDeclaration(403) at 1", "Insert Modifier: public(389) into MethodDeclaration(403) at 2", "Insert SimpleType: Number(391) into MethodDeclaration(403) at 3", "Insert SimpleName: getAndResetValue(392) into MethodDeclaration(403) at 4", "Insert SingleVariableDeclaration(395) into MethodDeclaration(403) at 5", "Insert Block(402) into MethodDeclaration(403) at 6", "Insert Javadoc(406) into MethodDeclaration(456) at 0", "Move Javadoc(300) into MethodDeclaration(553) at 0", "Move MarkerAnnotation(302) into MethodDeclaration(553) at 1", "Insert Modifier: public(524) into MethodDeclaration(553) at 2", "Insert PrimitiveType: void(525) into MethodDeclaration(553) at 3", "Insert SimpleName: increment(526) into MethodDeclaration(553) at 4", "Move SingleVariableDeclaration(308) into MethodDeclaration(553) at 5", "Insert Block(552) into MethodDeclaration(553) at 6", "Move Modifier: final(41) into FieldDeclaration(53) at 0", "Move ParameterizedType: AtomicReference<AtomicLongArray>(46) into FieldDeclaration(53) at 1", "Move VariableDeclarationFragment(48) into FieldDeclaration(53) at 2", "Insert SimpleName: PeakInterval(54) into MethodDeclaration(72) at 0", "Insert SingleVariableDeclaration(57) into MethodDeclaration(72) at 1", "Move Block(90) into MethodDeclaration(72) at 2", "Insert SimpleType: Number(74) into MethodDeclaration(83) at 0", "Insert SimpleName: getValue(75) into MethodDeclaration(83) at 1", "Insert Block(82) into MethodDeclaration(83) at 2", "Insert SingleVariableDeclaration(90) into MethodDeclaration(133) at 2", "Move SimpleType: Number(164) into MethodDeclaration(158) at 0", "Insert MarkerAnnotation(160) into MethodDeclaration(207) at 0", "Move Modifier: public(303) into MethodDeclaration(207) at 1", "Insert PrimitiveType: boolean(162) into MethodDeclaration(207) at 2", "Insert SimpleName: equals(163) into MethodDeclaration(207) at 3", "Insert SingleVariableDeclaration(167) into MethodDeclaration(207) at 4", "Insert Block(206) into MethodDeclaration(207) at 5", "Insert MarkerAnnotation(209) into MethodDeclaration(221) at 0", "Insert Modifier: public(210) into MethodDeclaration(221) at 1", "Insert PrimitiveType: int(211) into MethodDeclaration(221) at 2", "Insert SimpleName: hashCode(212) into MethodDeclaration(221) at 3", "Insert Block(220) into MethodDeclaration(221) at 4", "Move PrimitiveType: void(304) into MethodDeclaration(252) at 0", "Move SimpleName: increment(305) into MethodDeclaration(252) at 1", "Insert SingleVariableDeclaration(226) into MethodDeclaration(252) at 2", "Insert SingleVariableDeclaration(229) into MethodDeclaration(252) at 3", "Move Block(335) into MethodDeclaration(252) at 4", "Insert SimpleType: PeakInterval(257) into ArrayType: PeakInterval[](259) at 0", "Insert Dimension(258) into ArrayType: PeakInterval[](259) at 1", "Insert SimpleName: peakIntervals(260) into VariableDeclarationFragment(261) at 0", "Insert SimpleType: MonitorConfig(266) into SingleVariableDeclaration(268) at 0", "Insert SimpleName: config(267) into SingleVariableDeclaration(268) at 1", "Insert ConstructorInvocation(271) into Block(272) at 0", "Insert SimpleType: MonitorConfig(276) into SingleVariableDeclaration(278) at 0", "Insert SimpleName: config(277) into SingleVariableDeclaration(278) at 1", "Insert ArrayType: long[](281) into SingleVariableDeclaration(283) at 0", "Insert SimpleName: pollingIntervals(282) into SingleVariableDeclaration(283) at 1", "Move SuperConstructorInvocation(72) into Block(326) at 0", "Insert ExpressionStatement(297) into Block(326) at 1", "Insert ForStatement(325) into Block(326) at 2", "Insert TagElement(329) into Javadoc(332) at 0", "Insert TagElement: @deprecated(331) into Javadoc(332) at 1", "Insert SimpleName: Deprecated(333) into MarkerAnnotation(334) at 0", "Insert ConstructorInvocation(346) into Block(347) at 0", "Insert ReturnStatement(364) into Block(365) at 0", "Insert SimpleName: Number(374) into SimpleType: Number(375) at 0", "Insert ReturnStatement(380) into Block(381) at 0", "Insert SimpleName: Override(387) into MarkerAnnotation(388) at 0", "Insert SimpleName: Number(390) into SimpleType: Number(391) at 0", "Insert PrimitiveType: int(393) into SingleVariableDeclaration(395) at 0", "Insert SimpleName: pollerIdx(394) into SingleVariableDeclaration(395) at 1", "Insert ReturnStatement(401) into Block(402) at 0", "Insert TagElement(405) into Javadoc(406) at 0", "Move VariableDeclarationStatement(317) into Block(552) at 0", "Insert EnhancedForStatement(551) into Block(552) at 1", "Update SimpleName: buckets(47) to countsRef", "Insert PrimitiveType: int(55) into SingleVariableDeclaration(57) at 0", "Insert SimpleName: numBuckets(56) into SingleVariableDeclaration(57) at 1", "Insert SimpleName: Number(73) into SimpleType: Number(74) at 0", "Insert ReturnStatement(81) into Block(82) at 0", "Move SimpleType: AtomicLongArray(103) into SingleVariableDeclaration(90) at 0", "Insert SimpleName: counts(89) into SingleVariableDeclaration(90) at 1", "Insert VariableDeclarationStatement(152) into Block(157) at 0", "Insert SimpleName: Override(159) into MarkerAnnotation(160) at 0", "Insert SimpleType: Object(165) into SingleVariableDeclaration(167) at 0", "Insert SimpleName: o(166) into SingleVariableDeclaration(167) at 1", "Insert IfStatement(173) into Block(206) at 0", "Insert IfStatement(186) into Block(206) at 1", "Insert VariableDeclarationStatement(195) into Block(206) at 2", "Insert ReturnStatement(205) into Block(206) at 3", "Insert SimpleName: Override(208) into MarkerAnnotation(209) at 0", "Insert ReturnStatement(219) into Block(220) at 0", "Insert PrimitiveType: long(224) into SingleVariableDeclaration(226) at 0", "Insert SimpleName: now(225) into SingleVariableDeclaration(226) at 1", "Insert PrimitiveType: long(227) into SingleVariableDeclaration(229) at 0", "Insert SimpleName: amount(228) into SingleVariableDeclaration(229) at 1", "Insert SimpleName: PeakInterval(256) into SimpleType: PeakInterval(257) at 0", "Insert SimpleName: MonitorConfig(265) into SimpleType: MonitorConfig(266) at 0", "Insert SimpleName: config(269) into ConstructorInvocation(271) at 0", "Insert QualifiedName: Pollers.POLLING_INTERVALS(270) into ConstructorInvocation(271) at 1", "Insert SimpleName: MonitorConfig(275) into SimpleType: MonitorConfig(276) at 0", "Insert PrimitiveType: long(279) into ArrayType: long[](281) at 0", "Insert Dimension(280) into ArrayType: long[](281) at 1", "Insert Assignment: =(296) into ExpressionStatement(297) at 0", "Insert VariableDeclarationExpression(302) into ForStatement(325) at 0", "Insert InfixExpression: <(305) into ForStatement(325) at 1", "Insert PrefixExpression: ++(307) into ForStatement(325) at 2", "Insert Block(324) into ForStatement(325) at 3", "Insert TextElement: Create a new instance with the specified interval.(328) into TagElement(329) at 0", "Insert TextElement:  Polling intervals are configured using the system property servo.pollers(330) into TagElement: @deprecated(331) at 0", "Insert SimpleName: config(344) into ConstructorInvocation(346) at 0", "Insert QualifiedName: Pollers.POLLING_INTERVALS(345) into ConstructorInvocation(346) at 1", "Insert MethodInvocation(363) into ReturnStatement(364) at 0", "Insert MethodInvocation(379) into ReturnStatement(380) at 0", "Insert MethodInvocation(400) into ReturnStatement(401) at 0", "Insert TagElement: @inheritDoc(404) into TagElement(405) at 0", "Insert SingleVariableDeclaration(542) into EnhancedForStatement(551) at 0", "Insert SimpleName: peakIntervals(543) into EnhancedForStatement(551) at 1", "Insert Block(550) into EnhancedForStatement(551) at 2", "Insert MethodInvocation(80) into ReturnStatement(81) at 0", "Insert SimpleType: AtomicLongArray(138) into VariableDeclarationStatement(152) at 0", "Insert VariableDeclarationFragment(151) into VariableDeclarationStatement(152) at 1", "Insert MethodInvocation(155) into ReturnStatement(156) at 0", "Insert SimpleName: Object(164) into SimpleType: Object(165) at 0", "Insert InfixExpression: ==(170) into IfStatement(173) at 0", "Insert ReturnStatement(172) into IfStatement(173) at 1", "Insert InfixExpression: ||(183) into IfStatement(186) at 0", "Insert ReturnStatement(185) into IfStatement(186) at 1", "Insert SimpleType: PeakInterval(188) into VariableDeclarationStatement(195) at 0", "Insert VariableDeclarationFragment(194) into VariableDeclarationStatement(195) at 1", "Insert MethodInvocation(204) into ReturnStatement(205) at 0", "Insert MethodInvocation(218) into ReturnStatement(219) at 0", "Insert SimpleName: peakIntervals(289) into Assignment: =(296) at 0", "Insert ArrayCreation(295) into Assignment: =(296) at 1", "Insert PrimitiveType: int(298) into VariableDeclarationExpression(302) at 0", "Insert VariableDeclarationFragment(301) into VariableDeclarationExpression(302) at 1", "Insert SimpleName: i(303) into InfixExpression: <(305) at 0", "Insert QualifiedName: peakIntervals.length(304) into InfixExpression: <(305) at 1", "Insert SimpleName: i(306) into PrefixExpression: ++(307) at 0", "Insert ExpressionStatement(323) into Block(324) at 0", "Insert ArrayAccess(361) into MethodInvocation(363) at 0", "Insert SimpleName: getValue(362) into MethodInvocation(363) at 1", "Insert SimpleName: getAndResetValue(377) into MethodInvocation(379) at 0", "Insert NumberLiteral: 0(378) into MethodInvocation(379) at 1", "Insert ArrayAccess(398) into MethodInvocation(400) at 0", "Insert SimpleName: getAndResetValue(399) into MethodInvocation(400) at 1", "Insert SimpleType: PeakInterval(540) into SingleVariableDeclaration(542) at 0", "Insert SimpleName: peakInterval(541) into SingleVariableDeclaration(542) at 1", "Insert ExpressionStatement(549) into Block(550) at 0", "Update SimpleName: buckets(77) to countsRef", "Insert SimpleName: getValue(76) into MethodInvocation(80) at 0", "Insert MethodInvocation(79) into MethodInvocation(80) at 1", "Insert SimpleName: AtomicLongArray(137) into SimpleType: AtomicLongArray(138) at 0", "Insert SimpleName: counts(139) into VariableDeclarationFragment(151) at 0", "Insert MethodInvocation(150) into VariableDeclarationFragment(151) at 1", "Insert SimpleName: getValue(153) into MethodInvocation(155) at 0", "Insert SimpleName: counts(154) into MethodInvocation(155) at 1", "Insert ThisExpression(168) into InfixExpression: ==(170) at 0", "Insert SimpleName: o(169) into InfixExpression: ==(170) at 1", "Insert BooleanLiteral: true(171) into ReturnStatement(172) at 0", "Insert InfixExpression: ==(176) into InfixExpression: ||(183) at 0", "Insert InfixExpression: !=(182) into InfixExpression: ||(183) at 1", "Insert BooleanLiteral: false(184) into ReturnStatement(185) at 0", "Insert SimpleName: PeakInterval(187) into SimpleType: PeakInterval(188) at 0", "Insert SimpleName: that(189) into VariableDeclarationFragment(194) at 0", "Insert CastExpression(193) into VariableDeclarationFragment(194) at 1", "Insert SimpleName: AtomicUtils(196) into MethodInvocation(204) at 0", "Insert SimpleName: equals(197) into MethodInvocation(204) at 1", "Insert MethodInvocation(200) into MethodInvocation(204) at 2", "Insert MethodInvocation(203) into MethodInvocation(204) at 3", "Insert SimpleName: AtomicUtils(213) into MethodInvocation(218) at 0", "Insert SimpleName: hashCode(214) into MethodInvocation(218) at 1", "Insert MethodInvocation(217) into MethodInvocation(218) at 2", "Insert ArrayType: PeakInterval[](293) into ArrayCreation(295) at 0", "Insert QualifiedName: pollingIntervals.length(294) into ArrayCreation(295) at 1", "Insert SimpleName: i(299) into VariableDeclarationFragment(301) at 0", "Insert NumberLiteral: 0(300) into VariableDeclarationFragment(301) at 1", "Insert Assignment: =(322) into ExpressionStatement(323) at 0", "Insert SimpleName: peakIntervals(359) into ArrayAccess(361) at 0", "Insert NumberLiteral: 0(360) into ArrayAccess(361) at 1", "Insert SimpleName: peakIntervals(396) into ArrayAccess(398) at 0", "Insert SimpleName: pollerIdx(397) into ArrayAccess(398) at 1", "Insert MethodInvocation(451) into ParenthesizedExpression(452) at 0", "Insert SimpleName: PeakInterval(539) into SimpleType: PeakInterval(540) at 0", "Insert MethodInvocation(548) into ExpressionStatement(549) at 0", "Insert SimpleName: countsRef(77) into MethodInvocation(79) at 0", "Insert SimpleName: get(78) into MethodInvocation(79) at 1", "Update SimpleName: buckets(170) to countsRef", "Move SimpleName: buckets(170) into MethodInvocation(150) at 0", "Update SimpleName: set(171) to getAndSet", "Move SimpleName: set(171) into MethodInvocation(150) at 1", "Move ClassInstanceCreation(175) into MethodInvocation(150) at 2", "Insert SimpleName: o(174) into InfixExpression: ==(176) at 0", "Insert NullLiteral(175) into InfixExpression: ==(176) at 1", "Insert MethodInvocation(178) into InfixExpression: !=(182) at 0", "Insert MethodInvocation(181) into InfixExpression: !=(182) at 1", "Insert SimpleType: PeakInterval(191) into CastExpression(193) at 0", "Insert SimpleName: o(192) into CastExpression(193) at 1", "Insert SimpleName: countsRef(198) into MethodInvocation(200) at 0", "Insert SimpleName: get(199) into MethodInvocation(200) at 1", "Insert QualifiedName: that.countsRef(201) into MethodInvocation(203) at 0", "Insert SimpleName: get(202) into MethodInvocation(203) at 1", "Insert SimpleName: countsRef(215) into MethodInvocation(217) at 0", "Insert SimpleName: get(216) into MethodInvocation(217) at 1", "Insert MethodInvocation(239) into InfixExpression: %(240) at 1", "Update SimpleName: buckets(327) to countsRef", "Insert SimpleType: PeakInterval(291) into ArrayType: PeakInterval[](293) at 0", "Insert Dimension(292) into ArrayType: PeakInterval[](293) at 1", "Insert ArrayAccess(310) into Assignment: =(322) at 0", "Insert ClassInstanceCreation(321) into Assignment: =(322) at 1", "Insert SimpleName: Arrays(445) into MethodInvocation(451) at 0", "Insert SimpleName: equals(446) into MethodInvocation(451) at 1", "Insert FieldAccess(449) into MethodInvocation(451) at 2", "Insert QualifiedName: c.peakIntervals(450) into MethodInvocation(451) at 3", "Insert SimpleName: peakInterval(544) into MethodInvocation(548) at 0", "Insert SimpleName: increment(545) into MethodInvocation(548) at 1", "Insert SimpleName: now(546) into MethodInvocation(548) at 2", "Insert SimpleName: amount(547) into MethodInvocation(548) at 3", "Insert MethodInvocation(148) into ClassInstanceCreation(149) at 1", "Insert SimpleName: getClass(177) into MethodInvocation(178) at 0", "Insert SimpleName: o(179) into MethodInvocation(181) at 0", "Insert SimpleName: getClass(180) into MethodInvocation(181) at 1", "Insert SimpleName: PeakInterval(190) into SimpleType: PeakInterval(191) at 0", "Insert MethodInvocation(237) into MethodInvocation(239) at 0", "Insert SimpleName: length(238) into MethodInvocation(239) at 1", "Insert SimpleName: PeakInterval(290) into SimpleType: PeakInterval(291) at 0", "Insert SimpleName: peakIntervals(308) into ArrayAccess(310) at 0", "Insert SimpleName: i(309) into ArrayAccess(310) at 1", "Insert SimpleType: PeakInterval(312) into ClassInstanceCreation(321) at 0", "Insert CastExpression(320) into ClassInstanceCreation(321) at 1", "Insert ThisExpression(447) into FieldAccess(449) at 0", "Insert SimpleName: peakIntervals(448) into FieldAccess(449) at 1", "Insert MethodInvocation(146) into MethodInvocation(148) at 0", "Insert SimpleName: length(147) into MethodInvocation(148) at 1", "Insert SimpleName: countsRef(235) into MethodInvocation(237) at 0", "Insert SimpleName: get(236) into MethodInvocation(237) at 1", "Insert SimpleName: PeakInterval(311) into SimpleType: PeakInterval(312) at 0", "Insert PrimitiveType: int(313) into CastExpression(320) at 0", "Insert ParenthesizedExpression(319) into CastExpression(320) at 1", "Insert SimpleName: countsRef(144) into MethodInvocation(146) at 0", "Insert SimpleName: get(145) into MethodInvocation(146) at 1", "Insert InfixExpression: /(318) into ParenthesizedExpression(319) at 0", "Insert ArrayAccess(316) into InfixExpression: /(318) at 0", "Insert NumberLiteral: 1000L(317) into InfixExpression: /(318) at 1", "Insert SimpleName: pollingIntervals(314) into ArrayAccess(316) at 0", "Insert SimpleName: i(315) into ArrayAccess(316) at 1", "Delete SimpleName: numBuckets(73)", "Delete SimpleName: intervalSeconds(74)", "Delete Assignment: =(75)", "Delete ExpressionStatement(76)", "Delete TextElement: Create a new instance with the specified interval. (56)", "Delete TagElement(57)", "Delete Javadoc(58)", "Delete Modifier: public(59)", "Delete SimpleName: PeakRateCounter(60)", "Delete Modifier: public(98)", "Delete SimpleName: counts(104)", "Delete SimpleName: buckets(105)", "Delete SimpleName: get(106)", "Delete MethodInvocation(107)", "Delete VariableDeclarationFragment(108)", "Delete VariableDeclarationStatement(109)", "Delete Modifier: public(159)", "Delete SimpleName: numBuckets(174)", "Delete SimpleName: value(165)", "Delete SimpleName: getValue(166)", "Delete MethodInvocation(167)", "Delete VariableDeclarationFragment(168)", "Delete VariableDeclarationStatement(169)", "Delete MethodInvocation(176)", "Delete ExpressionStatement(177)", "Delete SimpleName: value(178)", "Delete SimpleName: numBuckets(323)", "Delete Modifier: private(40)", "Delete FieldDeclaration(49)", "Delete Modifier: private(50)", "Delete Modifier: final(51)", "Delete PrimitiveType: int(52)", "Delete SimpleName: numBuckets(53)", "Delete VariableDeclarationFragment(54)", "Delete FieldDeclaration(55)", "Delete ThisExpression(224)", "Delete SimpleName: getValue(225)", "Delete MethodInvocation(226)", "Delete SimpleName: c(227)", "Delete SimpleName: getValue(228)", "Delete MethodInvocation(229)", "Delete InfixExpression: ==(230)", "Delete MethodDeclaration(336)"]}}, {"ResettableCounter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray", "operations": ["UPD QualifiedName: java.util.concurrent.atomic.AtomicLong from java.util.concurrent.atomic.AtomicLong to java.util.concurrent.atomic.AtomicLongArray"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleType: MonitorConfig to SingleVariableDeclaration at 0", "INS SimpleName: MonitorConfig to SimpleType: MonitorConfig at 0", "INS QualifiedName: pollingIntervals.length to InfixExpression: < at 1", "INS ArrayType: long[] to ArrayCreation at 0", "INS PrimitiveType: long to ArrayType: long[] at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS VariableDeclarationStatement to Block at 4", "INS TextElement:            configuration for the monitor to TagElement: @param at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS TextElement: Create a new instance of the counter. to TagElement at 0", "INS QualifiedName: pollingIntervals.length to ClassInstanceCreation at 1", "INS QualifiedName: pollingIntervals.length to ClassInstanceCreation at 1", "INS ArrayType: long[] to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: pollingIntervals.length to ArrayCreation at 1", "INS ForStatement to Block at 5", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS PrefixExpression: ++ to ForStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: AtomicLongArray to SimpleType: AtomicLongArray at 0", "INS Block to ForStatement at 3", "INS SimpleName: lastResetTime to Assignment: = at 0", "INS SimpleType: AtomicLongArray to ClassInstanceCreation at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Dimension to ArrayType: long[] at 1", "INS PrimitiveType: long to ArrayType: long[] at 0", "INS SimpleName: config to TagElement: @param at 0", "INS ArrayCreation to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: count to Assignment: = at 0", "INS Dimension to ArrayType: long[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: pollingIntervals to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 1", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS SimpleName: now to VariableDeclarationFragment at 0", "INS SimpleName: AtomicLongArray to SimpleType: AtomicLongArray at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleType: AtomicLongArray to ClassInstanceCreation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to Block at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS QualifiedName: Pollers.POLLING_INTERVALS to ConstructorInvocation at 1", "INS SimpleName: config to ConstructorInvocation at 0", "INS Block to MethodDeclaration at 4", "INS ConstructorInvocation to Block at 0", "INS SimpleName: ResettableCounter to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: config to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 6", "INS TextElement:  Polling intervals are configured via the system wide property servo.pollers instead to TagElement: @deprecated at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement:   estimated polling interval in milliseconds. to TagElement: @param at 1", "INS TagElement: @deprecated to Javadoc at 3", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: ResettableCounter to MethodDeclaration at 3", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleName: estPollingInterval to TagElement: @param at 0", "INS QualifiedName: Pollers.POLLING_INTERVALS to ConstructorInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: getAndResetValue to MethodInvocation at 0", "INS SimpleName: getAndResetValue to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS Modifier: public to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 1"]}, {"root": "INS ArrayType: long[] to FieldDeclaration at 2", "operations": ["INS Dimension to ArrayType: long[] at 1", "INS ArrayType: long[] to FieldDeclaration at 2", "INS PrimitiveType: long to ArrayType: long[] at 0"]}, {"root": "UPDATE from AtomicLong to AtomicLongArray", "operations": ["UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleType: AtomicLong from AtomicLong to AtomicLongArray", "UPD SimpleName: AtomicLong from AtomicLong to AtomicLongArray"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleName: ResettableCounter to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: Number to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS Block to MethodDeclaration at 7", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: count to MethodInvocation at 0", "INS InfixExpression: < to ForStatement at 1", "INS PrefixExpression: ++ to ForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS ForStatement to Block at 0", "INS Block to ForStatement at 3", "INS MethodInvocation to InfixExpression: < at 1", "INS SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS SimpleName: i to PrefixExpression: ++ at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: count to MethodInvocation at 0", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: < at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to ForStatement at 3", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS ForStatement to Block at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS PrefixExpression: ++ to ForStatement at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Number to MethodDeclaration at 3"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS SimpleType: Number to MethodDeclaration at 3", "operations": ["INS SimpleName: Number to SimpleType: Number at 0", "INS SimpleType: Number to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: pollerIdx to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: pollingInterval to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS PrimitiveType: long to SingleVariableDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1", "MOV TagElement: @param to Javadoc at 2", "MOV TagElement to Javadoc at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from estPollingInterval to pollingIntervals", "operations": ["UPD SimpleName: estPollingInterval from estPollingInterval to pollingIntervals"]}, {"root": "UPDATE from   estimated polling interval in milliseconds to use for the first to  polling intervals in milliseconds.", "operations": ["UPD TextElement:   estimated polling interval in milliseconds to use for the first from   estimated polling interval in milliseconds to use for the first to  polling intervals in milliseconds."]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: toString to MethodInvocation at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ArrayAccess to MethodInvocation at 4", "operations": ["INS ArrayAccess to MethodInvocation at 4", "INS SimpleName: estPollingInterval to ArrayAccess at 0", "INS NumberLiteral: 0 to ArrayAccess at 1"]}, {"root": "INS ArrayAccess to MethodInvocation at 4", "operations": ["INS SimpleName: pollerIdx to ArrayAccess at 1", "INS SimpleName: estPollingInterval to ArrayAccess at 0", "INS ArrayAccess to MethodInvocation at 4"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: && at 1", "operations": ["INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: now to MethodInvocation at 3", "INS SimpleName: i to MethodInvocation at 2", "INS SimpleName: lastResetTime to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: set to MethodInvocation at 1"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS SimpleName: pollerIdx to MethodInvocation at 2", "operations": ["INS SimpleName: pollerIdx to MethodInvocation at 2"]}, {"root": "INS SimpleName: pollerIdx to MethodInvocation at 2", "operations": ["INS SimpleName: pollerIdx to MethodInvocation at 2"]}, {"root": "UPDATE from count to AtomicUtils", "operations": ["UPD SimpleName: count from count to AtomicUtils", "UPD SimpleName: count from count to AtomicUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: count to MethodInvocation at 0", "MOV SimpleName: get to MethodInvocation at 2"]}, {"root": "UPDATE from get to count", "operations": ["UPD SimpleName: get from get to count", "UPD SimpleName: get from get to count"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: m.count to MethodInvocation at 3"]}, {"root": "INS SimpleName: hashCode to MethodInvocation at 1", "operations": ["INS SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "UPDATE from toString to add", "operations": ["UPD SimpleName: toString from toString to add"]}, {"root": "INS StringLiteral: \"resets\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"resets\" to MethodInvocation at 2"]}, {"root": "INS SimpleName: lastResetTime to MethodInvocation at 3", "operations": ["INS SimpleName: lastResetTime to MethodInvocation at 3"]}, {"root": "INS ArrayAccess to Assignment: = at 0", "operations": ["INS SimpleName: estPollingInterval to FieldAccess at 1", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: i to ArrayAccess at 1", "INS FieldAccess to ArrayAccess at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ArrayAccess to Assignment: = at 1", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to Assignment: = at 1", "INS SimpleName: pollingIntervals to ArrayAccess at 0"]}, {"root": "INS ArrayAccess to InfixExpression: > at 0", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to InfixExpression: > at 0", "INS SimpleName: estPollingInterval to ArrayAccess at 0"]}, {"root": "UPDATE from incrementAndGet to getAndIncrement", "operations": ["UPD SimpleName: incrementAndGet from incrementAndGet to getAndIncrement"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: count to MethodInvocation at 3"]}, {"root": "UPDATE from estPollingInterval to pollingInterval", "operations": ["UPD SimpleName: estPollingInterval from estPollingInterval to pollingInterval"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: AtomicLong", "DEL NumberLiteral: 0L", "DEL ClassInstanceCreation", "DEL SimpleType: AtomicLong"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: AtomicLong", "DEL SimpleName: AtomicLong"]}, {"root": "DEL TextElement: call. If this is set to 0 the time delta for the first call to", "operations": ["DEL TextElement: call. If this is set to 0 the time delta for the first call to"]}, {"root": "DEL TextElement: getAndResetValue will be calculated based on the creation time", "operations": ["DEL TextElement: getAndResetValue will be calculated based on the creation time"]}, {"root": "DEL TextElement: which can result in overweighting the values if counters are", "operations": ["DEL TextElement: which can result in overweighting the values if counters are"]}, {"root": "DEL TextElement: dynamically created during the middle of a polling interval.", "operations": ["DEL TextElement: dynamically created during the middle of a polling interval."]}, {"root": "DEL SimpleName: estPollingInterval", "operations": ["DEL SimpleName: estPollingInterval"]}, {"root": "DEL SimpleName: estPollingInterval", "operations": ["DEL SimpleName: estPollingInterval"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL ConstructorInvocation", "DEL SimpleName: config", "DEL NumberLiteral: 0L", "DEL SimpleName: ResettableCounter", "DEL MethodDeclaration", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Modifier: public", "DEL Javadoc", "DEL MethodDeclaration"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: get", "DEL MethodInvocation"]}]}}, {"ResettableCounter_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(534) at 3", "Update QualifiedName: java.util.concurrent.atomic.AtomicLong(18) to java.util.concurrent.atomic.AtomicLongArray", "Insert MethodDeclaration(158) into TypeDeclaration: class(533) at 9", "Insert MethodDeclaration(172) into TypeDeclaration: class(533) at 10", "Insert MethodDeclaration(199) into TypeDeclaration: class(533) at 11", "Insert MethodDeclaration(314) into TypeDeclaration: class(533) at 15", "Insert ArrayType: long[](41) into FieldDeclaration(44) at 2", "Update SimpleType: AtomicLong(46) to AtomicLongArray", "Update SimpleType: AtomicLong(57) to AtomicLongArray", "Insert Javadoc(67) into MethodDeclaration(158) at 0", "Move SimpleName: ResettableCounter(95) into MethodDeclaration(158) at 1", "Insert SingleVariableDeclaration(72) into MethodDeclaration(158) at 2", "Insert SingleVariableDeclaration(77) into MethodDeclaration(158) at 3", "Insert Block(157) into MethodDeclaration(158) at 4", "Move Javadoc(69) into MethodDeclaration(172) at 0", "Insert Modifier: public(162) into MethodDeclaration(172) at 1", "Insert SimpleName: ResettableCounter(163) into MethodDeclaration(172) at 2", "Move SingleVariableDeclaration(75) into MethodDeclaration(172) at 3", "Insert Block(171) into MethodDeclaration(172) at 4", "Insert Javadoc(183) into MethodDeclaration(199) at 0", "Insert MarkerAnnotation(185) into MethodDeclaration(199) at 1", "Insert Modifier: public(186) into MethodDeclaration(199) at 2", "Insert SimpleName: ResettableCounter(187) into MethodDeclaration(199) at 3", "Move SingleVariableDeclaration(99) into MethodDeclaration(199) at 4", "Move SingleVariableDeclaration(102) into MethodDeclaration(199) at 5", "Insert Block(198) into MethodDeclaration(199) at 6", "Move Javadoc(194) into MethodDeclaration(229) at 0", "Move MarkerAnnotation(196) into MethodDeclaration(229) at 1", "Insert Block(228) into MethodDeclaration(229) at 5", "Insert Block(262) into MethodDeclaration(263) at 6", "Move SimpleType: Number(199) into MethodDeclaration(298) at 3", "Move Javadoc(352) into MethodDeclaration(314) at 0", "Move MarkerAnnotation(132) into MethodDeclaration(314) at 1", "Insert Modifier: public(305) into MethodDeclaration(314) at 2", "Move SimpleType: Number(169) into MethodDeclaration(314) at 3", "Insert SimpleName: getAndResetValue(308) into MethodDeclaration(314) at 4", "Insert Block(313) into MethodDeclaration(314) at 5", "Insert Javadoc(317) into MethodDeclaration(365) at 0", "Move MarkerAnnotation(354) into MethodDeclaration(365) at 1", "Insert SimpleType: Number(322) into MethodDeclaration(365) at 3", "Insert SingleVariableDeclaration(326) into MethodDeclaration(365) at 5", "Insert SingleVariableDeclaration(396) into MethodDeclaration(430) at 7", "Move Javadoc(130) into MethodDeclaration(501) at 0", "Insert MarkerAnnotation(487) into MethodDeclaration(501) at 1", "Insert PrimitiveType: long(39) into ArrayType: long[](41) at 0", "Insert Dimension(40) into ArrayType: long[](41) at 1", "Update SimpleName: AtomicLong(45) to AtomicLongArray", "Update SimpleName: AtomicLong(56) to AtomicLongArray", "Insert TagElement(60) into Javadoc(67) at 0", "Insert TagElement: @param(63) into Javadoc(67) at 1", "Move TagElement: @param(92) into Javadoc(67) at 2", "Insert SimpleType: MonitorConfig(70) into SingleVariableDeclaration(72) at 0", "Insert SimpleName: config(71) into SingleVariableDeclaration(72) at 1", "Insert ArrayType: long[](75) into SingleVariableDeclaration(77) at 0", "Insert SimpleName: pollingIntervals(76) into SingleVariableDeclaration(77) at 1", "Move SuperConstructorInvocation(107) into Block(157) at 0", "Insert ExpressionStatement(89) into Block(157) at 1", "Insert ExpressionStatement(96) into Block(157) at 2", "Insert ExpressionStatement(106) into Block(157) at 3", "Insert VariableDeclarationStatement(113) into Block(157) at 4", "Insert ForStatement(156) into Block(157) at 5", "Insert ConstructorInvocation(170) into Block(171) at 0", "Move TagElement(82) into Javadoc(183) at 0", "Move TagElement: @param(85) into Javadoc(183) at 1", "Insert TagElement: @param(180) into Javadoc(183) at 2", "Insert TagElement: @deprecated(182) into Javadoc(183) at 3", "Insert SimpleName: Deprecated(184) into MarkerAnnotation(185) at 0", "Insert ConstructorInvocation(197) into Block(198) at 0", "Insert ForStatement(227) into Block(228) at 0", "Insert ForStatement(261) into Block(262) at 0", "Move VariableDeclarationStatement(208) into Block(297) at 0", "Insert ReturnStatement(312) into Block(313) at 0", "Insert TagElement(316) into Javadoc(317) at 0", "Insert SimpleName: Number(321) into SimpleType: Number(322) at 0", "Insert PrimitiveType: int(324) into SingleVariableDeclaration(326) at 0", "Insert SimpleName: pollerIdx(325) into SingleVariableDeclaration(326) at 1", "Move VariableDeclarationStatement(178) into Block(364) at 0", "Insert PrimitiveType: long(394) into SingleVariableDeclaration(396) at 0", "Insert SimpleName: pollingInterval(395) into SingleVariableDeclaration(396) at 1", "Insert SimpleName: Override(486) into MarkerAnnotation(487) at 0", "Insert TextElement: Create a new instance of the counter.(59) into TagElement(60) at 0", "Insert SimpleName: config(61) into TagElement: @param(63) at 0", "Insert TextElement:            configuration for the monitor(62) into TagElement: @param(63) at 1", "Update SimpleName: estPollingInterval(86) to pollingIntervals", "Update TextElement:   estimated polling interval in milliseconds to use for the first(87) to  polling intervals in milliseconds.", "Insert SimpleName: MonitorConfig(69) into SimpleType: MonitorConfig(70) at 0", "Insert PrimitiveType: long(73) into ArrayType: long[](75) at 0", "Insert Dimension(74) into ArrayType: long[](75) at 1", "Insert Assignment: =(88) into ExpressionStatement(89) at 0", "Insert Assignment: =(95) into ExpressionStatement(96) at 0", "Insert Assignment: =(105) into ExpressionStatement(106) at 0", "Insert PrimitiveType: long(107) into VariableDeclarationStatement(113) at 0", "Insert VariableDeclarationFragment(112) into VariableDeclarationStatement(113) at 1", "Insert VariableDeclarationExpression(118) into ForStatement(156) at 0", "Insert InfixExpression: <(121) into ForStatement(156) at 1", "Insert PrefixExpression: ++(123) into ForStatement(156) at 2", "Insert Block(155) into ForStatement(156) at 3", "Insert SimpleName: config(168) into ConstructorInvocation(170) at 0", "Insert QualifiedName: Pollers.POLLING_INTERVALS(169) into ConstructorInvocation(170) at 1", "Insert SimpleName: estPollingInterval(178) into TagElement: @param(180) at 0", "Insert TextElement:   estimated polling interval in milliseconds.(179) into TagElement: @param(180) at 1", "Insert TextElement:  Polling intervals are configured via the system wide property servo.pollers instead(181) into TagElement: @deprecated(182) at 0", "Insert SimpleName: config(195) into ConstructorInvocation(197) at 0", "Insert QualifiedName: Pollers.POLLING_INTERVALS(196) into ConstructorInvocation(197) at 1", "Insert VariableDeclarationExpression(213) into ForStatement(227) at 0", "Insert InfixExpression: <(218) into ForStatement(227) at 1", "Insert PrefixExpression: ++(220) into ForStatement(227) at 2", "Insert Block(226) into ForStatement(227) at 3", "Insert VariableDeclarationExpression(246) into ForStatement(261) at 0", "Insert InfixExpression: <(251) into ForStatement(261) at 1", "Insert PrefixExpression: ++(253) into ForStatement(261) at 2", "Insert Block(260) into ForStatement(261) at 3", "Insert MethodInvocation(311) into ReturnStatement(312) at 0", "Insert TagElement: @inheritDoc(315) into TagElement(316) at 0", "Insert MethodInvocation(529) into ReturnStatement(530) at 0", "Insert SimpleName: count(83) into Assignment: =(88) at 0", "Insert ClassInstanceCreation(87) into Assignment: =(88) at 1", "Insert SimpleName: lastResetTime(90) into Assignment: =(95) at 0", "Insert ClassInstanceCreation(94) into Assignment: =(95) at 1", "Move FieldAccess(110) into Assignment: =(105) at 0", "Insert ArrayCreation(104) into Assignment: =(105) at 1", "Insert SimpleName: now(108) into VariableDeclarationFragment(112) at 0", "Move MethodInvocation(63) into VariableDeclarationFragment(112) at 1", "Insert PrimitiveType: int(114) into VariableDeclarationExpression(118) at 0", "Insert VariableDeclarationFragment(117) into VariableDeclarationExpression(118) at 1", "Insert SimpleName: i(119) into InfixExpression: <(121) at 0", "Insert QualifiedName: pollingIntervals.length(120) into InfixExpression: <(121) at 1", "Insert SimpleName: i(122) into PrefixExpression: ++(123) at 0", "Move ExpressionStatement(113) into Block(155) at 0", "Move IfStatement(124) into Block(155) at 1", "Insert PrimitiveType: int(209) into VariableDeclarationExpression(213) at 0", "Insert VariableDeclarationFragment(212) into VariableDeclarationExpression(213) at 1", "Insert SimpleName: i(214) into InfixExpression: <(218) at 0", "Insert MethodInvocation(217) into InfixExpression: <(218) at 1", "Insert SimpleName: i(219) into PrefixExpression: ++(220) at 0", "Move ExpressionStatement(139) into Block(226) at 0", "Insert PrimitiveType: int(242) into VariableDeclarationExpression(246) at 0", "Insert VariableDeclarationFragment(245) into VariableDeclarationExpression(246) at 1", "Insert SimpleName: i(247) into InfixExpression: <(251) at 0", "Insert MethodInvocation(250) into InfixExpression: <(251) at 1", "Insert SimpleName: i(252) into PrefixExpression: ++(253) at 0", "Move ExpressionStatement(158) into Block(260) at 0", "Insert ArrayAccess(294) into MethodInvocation(295) at 4", "Insert SimpleName: getAndResetValue(309) into MethodInvocation(311) at 0", "Insert NumberLiteral: 0(310) into MethodInvocation(311) at 1", "Insert ArrayAccess(361) into MethodInvocation(362) at 4", "Insert NumberLiteral: 0(374) into MethodInvocation(375) at 2", "Insert MethodInvocation(477) into InfixExpression: &&(478) at 1", "Move MethodInvocation(393) into MethodInvocation(529) at 0", "Insert SimpleName: toString(528) into MethodInvocation(529) at 1", "Insert SimpleType: AtomicLongArray(85) into ClassInstanceCreation(87) at 0", "Insert QualifiedName: pollingIntervals.length(86) into ClassInstanceCreation(87) at 1", "Insert SimpleType: AtomicLongArray(92) into ClassInstanceCreation(94) at 0", "Insert QualifiedName: pollingIntervals.length(93) into ClassInstanceCreation(94) at 1", "Insert ArrayType: long[](102) into ArrayCreation(104) at 0", "Insert QualifiedName: pollingIntervals.length(103) into ArrayCreation(104) at 1", "Insert SimpleName: i(115) into VariableDeclarationFragment(117) at 0", "Insert NumberLiteral: 0(116) into VariableDeclarationFragment(117) at 1", "Insert Block(153) into IfStatement(154) at 2", "Insert SimpleName: i(210) into VariableDeclarationFragment(212) at 0", "Insert NumberLiteral: 0(211) into VariableDeclarationFragment(212) at 1", "Insert SimpleName: count(215) into MethodInvocation(217) at 0", "Insert SimpleName: length(216) into MethodInvocation(217) at 1", "Insert SimpleName: i(243) into VariableDeclarationFragment(245) at 0", "Insert NumberLiteral: 0(244) into VariableDeclarationFragment(245) at 1", "Insert SimpleName: count(248) into MethodInvocation(250) at 0", "Insert SimpleName: length(249) into MethodInvocation(250) at 1", "Insert NumberLiteral: 0(286) into MethodInvocation(287) at 2", "Insert NumberLiteral: 0(290) into MethodInvocation(291) at 2", "Insert SimpleName: estPollingInterval(292) into ArrayAccess(294) at 0", "Insert NumberLiteral: 0(293) into ArrayAccess(294) at 1", "Insert SimpleName: pollerIdx(340) into MethodInvocation(342) at 2", "Insert SimpleName: pollerIdx(350) into MethodInvocation(352) at 2", "Insert SimpleName: estPollingInterval(359) into ArrayAccess(361) at 0", "Insert SimpleName: pollerIdx(360) into ArrayAccess(361) at 1", "Update SimpleName: count(338) to AtomicUtils", "Move SimpleName: count(338) into MethodInvocation(477) at 0", "Insert SimpleName: equals(474) into MethodInvocation(477) at 1", "Update SimpleName: get(339) to count", "Move SimpleName: get(339) into MethodInvocation(477) at 2", "Move QualifiedName: m.count(341) into MethodInvocation(477) at 3", "Update SimpleName: count(361) to AtomicUtils", "Insert SimpleName: hashCode(495) into MethodInvocation(497) at 1", "Update SimpleName: get(362) to count", "Update SimpleName: toString(392) to add", "Insert StringLiteral: \"resets\"(525) into MethodInvocation(527) at 2", "Insert SimpleName: lastResetTime(526) into MethodInvocation(527) at 3", "Insert SimpleName: AtomicLongArray(84) into SimpleType: AtomicLongArray(85) at 0", "Insert SimpleName: AtomicLongArray(91) into SimpleType: AtomicLongArray(92) at 0", "Insert PrimitiveType: long(100) into ArrayType: long[](102) at 0", "Insert Dimension(101) into ArrayType: long[](102) at 1", "Insert ArrayAccess(128) into Assignment: =(132) at 0", "Insert ArrayAccess(131) into Assignment: =(132) at 1", "Insert ArrayAccess(136) into InfixExpression: >(138) at 0", "Insert ExpressionStatement(152) into Block(153) at 0", "Update SimpleName: incrementAndGet(137) to getAndIncrement", "Insert SimpleName: i(223) into MethodInvocation(224) at 2", "Insert SimpleName: i(256) into MethodInvocation(258) at 2", "Move SimpleName: count(388) into MethodInvocation(523) at 3", "Insert FieldAccess(126) into ArrayAccess(128) at 0", "Insert SimpleName: i(127) into ArrayAccess(128) at 1", "Insert SimpleName: pollingIntervals(129) into ArrayAccess(131) at 0", "Insert SimpleName: i(130) into ArrayAccess(131) at 1", "Insert SimpleName: estPollingInterval(134) into ArrayAccess(136) at 0", "Insert SimpleName: i(135) into ArrayAccess(136) at 1", "Insert MethodInvocation(151) into ExpressionStatement(152) at 0", "Update SimpleName: estPollingInterval(273) to pollingInterval", "Insert ThisExpression(124) into FieldAccess(126) at 0", "Insert SimpleName: estPollingInterval(125) into FieldAccess(126) at 1", "Insert SimpleName: i(141) into MethodInvocation(144) at 2", "Insert SimpleName: lastResetTime(147) into MethodInvocation(151) at 0", "Insert SimpleName: set(148) into MethodInvocation(151) at 1", "Insert SimpleName: i(149) into MethodInvocation(151) at 2", "Insert SimpleName: now(150) into MethodInvocation(151) at 3", "Delete PrimitiveType: long(39)", "Delete SimpleName: AtomicLong(48)", "Delete SimpleType: AtomicLong(49)", "Delete NumberLiteral: 0L(50)", "Delete ClassInstanceCreation(51)", "Delete SimpleName: AtomicLong(59)", "Delete SimpleType: AtomicLong(60)", "Delete ClassInstanceCreation(64)", "Delete TextElement: call. If this is set to 0 the time delta for the first call to(88)", "Delete TextElement: getAndResetValue will be calculated based on the creation time(89)", "Delete TextElement: which can result in overweighting the values if counters are(90)", "Delete TextElement: dynamically created during the middle of a polling interval.(91)", "Delete SimpleName: estPollingInterval(111)", "Delete SimpleName: estPollingInterval(114)", "Delete Modifier: public(70)", "Delete SimpleName: ResettableCounter(71)", "Delete SimpleName: config(76)", "Delete NumberLiteral: 0L(77)", "Delete ConstructorInvocation(78)", "Delete Block(79)", "Delete MethodDeclaration(80)", "Delete Javadoc(93)", "Delete Modifier: public(94)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete Block(140)", "Delete Block(159)", "Delete MethodInvocation(340)", "Delete SimpleName: get(342)", "Delete MethodInvocation(343)", "Delete InfixExpression: ==(344)", "Delete SimpleName: get(389)", "Delete MethodInvocation(390)"]}}, {"ResettableMonitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 6", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleType: T to MethodDeclaration at 1", "INS SimpleName: getAndResetValue to MethodDeclaration at 2", "INS TextElement: allows us to support multiple pollers, for example a 10second and 60second poller. to TagElement at 1", "INS SimpleName: pollerIdx to SingleVariableDeclaration at 1", "INS TextElement: Return the value and reset the monitor state for a given polling interval. This to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: interface at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from Return the value and reset the monitor state for the next polling interval.  to Return the value and reset the monitor state for the default polling interval.", "operations": ["UPD TextElement: Return the value and reset the monitor state for the next polling interval.  from Return the value and reset the monitor state for the next polling interval.  to Return the value and reset the monitor state for the default polling interval."]}]}}, {"ResettableMonitor_diff": {"operations": ["Insert MethodDeclaration(51) into TypeDeclaration: interface(52) at 6", "Insert Javadoc(44) into MethodDeclaration(51) at 0", "Insert SimpleType: T(46) into MethodDeclaration(51) at 1", "Insert SimpleName: getAndResetValue(47) into MethodDeclaration(51) at 2", "Insert SingleVariableDeclaration(50) into MethodDeclaration(51) at 3", "Insert TagElement(43) into Javadoc(44) at 0", "Insert SimpleName: T(45) into SimpleType: T(46) at 0", "Insert PrimitiveType: int(48) into SingleVariableDeclaration(50) at 0", "Insert SimpleName: pollerIdx(49) into SingleVariableDeclaration(50) at 1", "Update TextElement: Return the value and reset the monitor state for the next polling interval. (34) to Return the value and reset the monitor state for the default polling interval.", "Insert TextElement: Return the value and reset the monitor state for a given polling interval. This(41) into TagElement(43) at 0", "Insert TextElement: allows us to support multiple pollers, for example a 10second and 60second poller.(42) into TagElement(43) at 1"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}