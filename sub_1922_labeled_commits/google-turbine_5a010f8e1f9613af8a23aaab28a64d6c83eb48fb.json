{"application": "google-turbine", "csha": "5a010f8e1f9613af8a23aaab28a64d6c83eb48fb", "files": [{"Binder_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: com.google.turbine.binder.lookup.CanonicalSymbolResolver to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.Arrays to com.google.turbine.binder.Resolve.CanonicalResolver", "operations": ["UPD QualifiedName: java.util.Arrays from java.util.Arrays to com.google.turbine.binder.Resolve.CanonicalResolver"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleType: CanonicalResolver to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CanonicalSymbolResolver to SimpleType: CanonicalSymbolResolver at 0", "INS SimpleType: CanonicalSymbolResolver to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: CanonicalResolver to SimpleType: CanonicalResolver at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: importResolver to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from Iterable<String> to ImmutableList<String>", "operations": ["UPD ParameterizedType: Iterable<String> from Iterable<String> to ImmutableList<String>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MemberImportIndex to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Iterable to ImmutableList", "operations": ["UPD SimpleType: Iterable from Iterable to ImmutableList", "UPD SimpleName: Arrays from Arrays to ImmutableList", "UPD SimpleName: Iterable from Iterable to ImmutableList"]}, {"root": "UPDATE from asList to of", "operations": ["UPD SimpleName: asList from asList to of"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: importResolver to MethodInvocation at 2", "operations": ["INS SimpleName: importResolver to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MemberImportIndex to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: importResolver to ClassInstanceCreation at 1", "operations": ["INS SimpleName: importResolver to ClassInstanceCreation at 1"]}]}}, {"Binder_diff": {"operations": ["Move ImportDeclaration(69) into CompilationUnit(1530) at 9", "Insert ImportDeclaration(47) into CompilationUnit(1530) at 23", "Update QualifiedName: java.util.Arrays(68) to com.google.turbine.binder.Resolve.CanonicalResolver", "Insert QualifiedName: com.google.turbine.binder.lookup.CanonicalSymbolResolver(46) into ImportDeclaration(47) at 0", "Insert VariableDeclarationStatement(775) into Block(837) at 3", "Update ParameterizedType: Iterable<String>(726) to ImmutableList<String>", "Insert SimpleType: CanonicalSymbolResolver(758) into VariableDeclarationStatement(775) at 0", "Insert VariableDeclarationFragment(774) into VariableDeclarationStatement(775) at 1", "Move SimpleType: MemberImportIndex(782) into VariableDeclarationStatement(801) at 0", "Update SimpleType: Iterable(723) to ImmutableList", "Insert SimpleName: CanonicalSymbolResolver(757) into SimpleType: CanonicalSymbolResolver(758) at 0", "Insert SimpleName: importResolver(759) into VariableDeclarationFragment(774) at 0", "Insert ClassInstanceCreation(773) into VariableDeclarationFragment(774) at 1", "Update SimpleName: Arrays(676) to ImmutableList", "Update SimpleName: asList(677) to of", "Update SimpleName: Iterable(722) to ImmutableList", "Insert SimpleType: CanonicalResolver(761) into ClassInstanceCreation(773) at 0", "Move MethodInvocation(770) into ClassInstanceCreation(773) at 1", "Insert SimpleName: importResolver(781) into MethodInvocation(786) at 2", "Move SimpleType: MemberImportIndex(779) into ClassInstanceCreation(799) at 0", "Insert SimpleName: importResolver(794) into ClassInstanceCreation(799) at 1", "Insert SimpleName: CanonicalResolver(760) into SimpleType: CanonicalResolver(761) at 0"]}}, {"ConstEvaluator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 32", "MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from com.google.common.base.Verify.verifyNotNull to com.google.common.collect.Iterables", "operations": ["UPD QualifiedName: com.google.common.base.Verify.verifyNotNull from com.google.common.base.Verify.verifyNotNull to com.google.common.collect.Iterables"]}, {"root": "UPDATE from com.google.common.base.Joiner to java.util.Iterator", "operations": ["UPD QualifiedName: com.google.common.base.Joiner from com.google.common.base.Joiner to java.util.Iterator"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: ConstVarName to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Block to MethodDeclaration at 4", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS SimpleName: evalConstVar to MethodDeclaration at 2", "INS SimpleType: FieldInfo to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: FieldInfo to SimpleType: FieldInfo at 0", "INS SimpleName: field to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS NullLiteral to ReturnStatement at 0", "INS SimpleName: field to ReturnStatement at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<ClassSymbol> at 0", "INS Block to IfStatement at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: env to MethodInvocation at 1", "INS ReturnStatement to Block at 10", "INS IfStatement to Block at 4", "INS SimpleName: classSymbol to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS WhileStatement to Block at 9", "INS ReturnStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ParameterizedType: Iterator<ClassSymbol> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: field to InfixExpression: != at 0", "INS SimpleName: it to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS ExpressionStatement to Block at 6", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: field to ReturnStatement at 0", "INS MethodInvocation to WhileStatement at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Iterator<ClassSymbol> at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: resolveField to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: classSymbol to MethodInvocation at 2", "INS SimpleName: field to Assignment: = at 0", "INS SimpleName: field to InfixExpression: != at 0", "INS Block to WhileStatement at 1", "INS IfStatement to Block at 7", "INS ExpressionStatement to Block at 0", "INS SimpleName: field to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: ClassSymbol to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Const to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: FieldInfo to MethodDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 1", "MOV ReturnStatement to Block at 2", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "UPDATE from Const to ConstVarName", "operations": ["UPD SimpleName: Const from Const to ConstVarName"]}, {"root": "MOVE from SimpleType: ConstVarName", "operations": ["MOV SimpleName: Const to SimpleType: ConstVarName at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: FieldInfo to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from on to simpleName", "operations": ["UPD SimpleName: on from on to simpleName", "UPD SimpleName: name from name to simpleName", "UPD SimpleName: simple from simple to simpleName", "UPD SimpleName: simple from simple to simpleName", "UPD SimpleName: name from name to simpleName"]}, {"root": "UPDATE from result to field", "operations": ["UPD SimpleName: result from result to field", "UPD SimpleName: info from info to field", "UPD SimpleName: info from info to field"]}, {"root": "UPDATE from String to ClassSymbol", "operations": ["UPD SimpleName: String from String to ClassSymbol", "UPD SimpleName: AssertionError from AssertionError to ClassSymbol"]}, {"root": "MOVE from SimpleType: ClassSymbol", "operations": ["MOV SimpleName: AssertionError to SimpleType: ClassSymbol at 0"]}, {"root": "INS SimpleName: it to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: it to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from resolve to resolveField", "operations": ["UPD SimpleName: resolve from resolve to resolveField"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: result to MethodInvocation at 1", "MOV SimpleName: resolve to MethodInvocation at 0"]}, {"root": "UPDATE from result to t", "operations": ["UPD SimpleName: result from result to t"]}, {"root": "INS SimpleName: field to ReturnStatement at 0", "operations": ["INS SimpleName: field to ReturnStatement at 0"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS SimpleName: field to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from Joiner to singleMemberImport", "operations": ["UPD SimpleName: Joiner from Joiner to singleMemberImport"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: on to MethodInvocation at 2", "MOV SimpleName: Joiner to MethodInvocation at 1"]}, {"root": "UPDATE from t to inheritedField", "operations": ["UPD SimpleName: t from t to inheritedField", "UPD SimpleName: lookup from lookup to inheritedField"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: name to MethodInvocation at 3", "MOV SimpleName: t to MethodInvocation at 0"]}, {"root": "UPDATE from LookupResult to Iterator", "operations": ["UPD SimpleName: LookupResult from LookupResult to Iterator"]}, {"root": "MOVE from SimpleType: Iterator", "operations": ["MOV SimpleName: LookupResult to SimpleType: Iterator at 0"]}, {"root": "MOVE from SimpleType: ClassSymbol", "operations": ["MOV SimpleName: String to SimpleType: ClassSymbol at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to onDemandImports", "operations": ["UPD SimpleName: size from size to onDemandImports"]}, {"root": "UPDATE from result to owner", "operations": ["UPD SimpleName: result from result to owner"]}, {"root": "UPDATE from remaining to memberImports", "operations": ["UPD SimpleName: remaining from remaining to memberImports"]}, {"root": "INS SimpleName: env to MethodInvocation at 1", "operations": ["INS SimpleName: env to MethodInvocation at 1"]}, {"root": "UPDATE from simple to sym", "operations": ["UPD SimpleName: simple from simple to sym"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Iterables to MethodInvocation at 0", "INS SimpleName: getLast to MethodInvocation at 1"]}, {"root": "INS SimpleName: field to ReturnStatement at 0", "operations": ["INS SimpleName: field to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: env to MethodInvocation at 1", "MOV SimpleName: sym to MethodInvocation at 0", "MOV SimpleName: name to MethodInvocation at 3", "MOV SimpleName: inheritedField to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from sym to it", "operations": ["UPD SimpleName: sym from sym to it"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: info", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: sym", "DEL SimpleName: values", "DEL SimpleName: get"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: resolve"]}, {"root": "DEL SimpleName: name", "operations": ["DEL SimpleName: name"]}, {"root": "DEL MethodInvocation", "operations": ["DEL NumberLiteral: 1", "DEL SimpleName: get", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: Const", "DEL NullLiteral", "DEL SimpleType: AssertionError", "DEL Block", "DEL SimpleName: join", "DEL ReturnStatement", "DEL SimpleName: evalConstVar", "DEL ThrowStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: result", "DEL Block", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL CharacterLiteral: '.'", "DEL IfStatement", "DEL InfixExpression: !="]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: private", "DEL Block", "DEL SimpleType: String", "DEL SimpleName: verifyNotNull", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: result", "DEL SimpleType: LookupResult", "DEL SimpleName: resolve", "DEL SimpleName: field", "DEL StringLiteral: \"%s\"", "DEL MethodDeclaration", "DEL SimpleName: result", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: field", "DEL MethodInvocation"]}]}}, {"ConstEvaluator_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(4165) at 6", "Move ImportDeclaration(7) into CompilationUnit(4165) at 32", "Update QualifiedName: com.google.common.base.Verify.verifyNotNull(4) to com.google.common.collect.Iterables", "Update QualifiedName: com.google.common.base.Joiner(6) to java.util.Iterator", "Insert MethodDeclaration(552) into TypeDeclaration: class(4164) at 10", "Insert MethodDeclaration(736) into TypeDeclaration: class(4164) at 11", "Move Javadoc(511) into MethodDeclaration(552) at 0", "Move SimpleType: Const(612) into MethodDeclaration(552) at 1", "Insert SimpleName: evalConstVar(514) into MethodDeclaration(552) at 2", "Insert SingleVariableDeclaration(518) into MethodDeclaration(552) at 3", "Insert Block(551) into MethodDeclaration(552) at 4", "Move SimpleType: FieldInfo(556) into MethodDeclaration(736) at 0", "Insert SimpleName: resolveField(555) into MethodDeclaration(736) at 1", "Move SingleVariableDeclaration(518) into MethodDeclaration(736) at 2", "Insert Block(735) into MethodDeclaration(736) at 3", "Insert SimpleType: ConstVarName(516) into SingleVariableDeclaration(518) at 0", "Insert SimpleName: t(517) into SingleVariableDeclaration(518) at 1", "Insert VariableDeclarationStatement(526) into Block(551) at 0", "Move IfStatement(704) into Block(551) at 1", "Move ReturnStatement(717) into Block(551) at 2", "Move VariableDeclarationStatement(554) into Block(735) at 0", "Move VariableDeclarationStatement(564) into Block(735) at 1", "Move IfStatement(576) into Block(735) at 2", "Move VariableDeclarationStatement(534) into Block(735) at 3", "Insert IfStatement(671) into Block(735) at 4", "Insert VariableDeclarationStatement(682) into Block(735) at 5", "Insert ExpressionStatement(690) into Block(735) at 6", "Insert IfStatement(697) into Block(735) at 7", "Insert VariableDeclarationStatement(710) into Block(735) at 8", "Insert WhileStatement(732) into Block(735) at 9", "Insert ReturnStatement(734) into Block(735) at 10", "Update SimpleName: Const(512) to ConstVarName", "Move SimpleName: Const(512) into SimpleType: ConstVarName(516) at 0", "Insert SimpleType: FieldInfo(520) into VariableDeclarationStatement(526) at 0", "Insert VariableDeclarationFragment(525) into VariableDeclarationStatement(526) at 1", "Move SimpleType: FieldInfo(679) into VariableDeclarationStatement(580) at 0", "Move InfixExpression: !=(588) into IfStatement(671) at 0", "Insert Block(670) into IfStatement(671) at 1", "Insert SimpleType: ClassSymbol(673) into VariableDeclarationStatement(682) at 0", "Insert VariableDeclarationFragment(681) into VariableDeclarationStatement(682) at 1", "Insert Assignment: =(689) into ExpressionStatement(690) at 0", "Insert InfixExpression: !=(693) into IfStatement(697) at 0", "Insert Block(696) into IfStatement(697) at 1", "Insert ParameterizedType: Iterator<ClassSymbol>(702) into VariableDeclarationStatement(710) at 0", "Move VariableDeclarationFragment(676) into VariableDeclarationStatement(710) at 1", "Insert MethodInvocation(713) into WhileStatement(732) at 0", "Insert Block(731) into WhileStatement(732) at 1", "Insert NullLiteral(733) into ReturnStatement(734) at 0", "Insert SimpleName: FieldInfo(519) into SimpleType: FieldInfo(520) at 0", "Insert SimpleName: field(521) into VariableDeclarationFragment(525) at 0", "Insert MethodInvocation(524) into VariableDeclarationFragment(525) at 1", "Update SimpleName: simple(546) to simpleName", "Update SimpleName: info(557) to field", "Update SimpleName: info(565) to field", "Move VariableDeclarationStatement(628) into Block(670) at 0", "Move ForStatement(660) into Block(670) at 1", "Move ExpressionStatement(585) into Block(670) at 2", "Move IfStatement(594) into Block(670) at 3", "Update SimpleName: AssertionError(595) to ClassSymbol", "Move SimpleName: AssertionError(595) into SimpleType: ClassSymbol(673) at 0", "Insert SimpleName: classSymbol(674) into VariableDeclarationFragment(681) at 0", "Insert MethodInvocation(680) into VariableDeclarationFragment(681) at 1", "Insert SimpleName: field(683) into Assignment: =(689) at 0", "Insert MethodInvocation(688) into Assignment: =(689) at 1", "Insert SimpleName: field(691) into InfixExpression: !=(693) at 0", "Insert NullLiteral(692) into InfixExpression: !=(693) at 1", "Insert ReturnStatement(695) into Block(696) at 0", "Insert SimpleType: Iterator(699) into ParameterizedType: Iterator<ClassSymbol>(702) at 0", "Insert SimpleType: ClassSymbol(701) into ParameterizedType: Iterator<ClassSymbol>(702) at 1", "Insert SimpleName: it(703) into VariableDeclarationFragment(709) at 0", "Insert MethodInvocation(708) into VariableDeclarationFragment(709) at 1", "Insert SimpleName: it(711) into MethodInvocation(713) at 0", "Insert SimpleName: hasNext(712) into MethodInvocation(713) at 1", "Insert ExpressionStatement(723) into Block(731) at 0", "Insert IfStatement(730) into Block(731) at 1", "Update SimpleName: resolve(538) to resolveField", "Move SimpleName: resolve(538) into MethodInvocation(524) at 0", "Update SimpleName: result(539) to t", "Move SimpleName: result(539) into MethodInvocation(524) at 1", "Update SimpleName: simple(561) to simpleName", "Insert SimpleName: field(584) into ReturnStatement(585) at 0", "Insert InfixExpression: !=(665) into IfStatement(669) at 0", "Move MethodInvocation(580) into MethodInvocation(680) at 0", "Update SimpleName: Joiner(597) to singleMemberImport", "Move SimpleName: Joiner(597) into MethodInvocation(680) at 1", "Update SimpleName: on(598) to simpleName", "Move SimpleName: on(598) into MethodInvocation(680) at 2", "Update SimpleName: t(602) to inheritedField", "Move SimpleName: t(602) into MethodInvocation(688) at 0", "Insert SimpleName: env(685) into MethodInvocation(688) at 1", "Insert SimpleName: classSymbol(686) into MethodInvocation(688) at 2", "Update SimpleName: name(603) to simpleName", "Move SimpleName: name(603) into MethodInvocation(688) at 3", "Insert SimpleName: field(694) into ReturnStatement(695) at 0", "Update SimpleName: LookupResult(614) to Iterator", "Move SimpleName: LookupResult(614) into SimpleType: Iterator(699) at 0", "Update SimpleName: String(661) to ClassSymbol", "Move SimpleName: String(661) into SimpleType: ClassSymbol(701) at 0", "Move MethodInvocation(670) into MethodInvocation(708) at 0", "Update SimpleName: size(671) to onDemandImports", "Move SimpleName: size(671) into MethodInvocation(708) at 1", "Insert Assignment: =(722) into ExpressionStatement(723) at 0", "Insert InfixExpression: !=(726) into IfStatement(730) at 0", "Insert Block(729) into IfStatement(730) at 1", "Update SimpleName: result(577) to field", "Insert SimpleName: field(663) into InfixExpression: !=(665) at 0", "Insert NullLiteral(664) into InfixExpression: !=(665) at 1", "Update SimpleName: result(668) to owner", "Update SimpleName: remaining(669) to memberImports", "Insert SimpleName: field(714) into Assignment: =(722) at 0", "Insert MethodInvocation(721) into Assignment: =(722) at 1", "Insert SimpleName: field(724) into InfixExpression: !=(726) at 0", "Insert NullLiteral(725) into InfixExpression: !=(726) at 1", "Insert ReturnStatement(728) into Block(729) at 0", "Update SimpleName: lookup(581) to inheritedField", "Insert SimpleName: env(652) into MethodInvocation(660) at 1", "Update SimpleName: simple(582) to sym", "Insert MethodInvocation(659) into MethodInvocation(660) at 3", "Insert SimpleName: field(666) into ReturnStatement(667) at 0", "Move SimpleName: inheritedField(681) into MethodInvocation(721) at 0", "Move SimpleName: env(682) into MethodInvocation(721) at 1", "Insert MethodInvocation(719) into MethodInvocation(721) at 2", "Update SimpleName: name(684) to simpleName", "Move SimpleName: name(684) into MethodInvocation(721) at 3", "Insert SimpleName: field(727) into ReturnStatement(728) at 0", "Insert SimpleName: Iterables(654) into MethodInvocation(659) at 0", "Insert SimpleName: getLast(655) into MethodInvocation(659) at 1", "Move MethodInvocation(666) into MethodInvocation(659) at 2", "Update SimpleName: sym(683) to it", "Move SimpleName: sym(683) into MethodInvocation(719) at 0", "Insert SimpleName: next(718) into MethodInvocation(719) at 1", "Delete SimpleName: values(568)", "Delete SimpleName: get(569)", "Delete SimpleName: info(570)", "Delete SimpleName: sym(571)", "Delete MethodInvocation(572)", "Delete MethodInvocation(573)", "Delete SimpleName: resolve(589)", "Delete SimpleName: result(590)", "Delete MethodInvocation(591)", "Delete SimpleName: name(663)", "Delete SimpleName: get(667)", "Delete MethodInvocation(672)", "Delete NumberLiteral: 1(673)", "Delete InfixExpression: -(674)", "Delete MethodInvocation(675)", "Delete SimpleType: Const(513)", "Delete SimpleName: evalConstVar(514)", "Delete SimpleName: result(535)", "Delete NullLiteral(536)", "Delete InfixExpression: !=(537)", "Delete MethodInvocation(540)", "Delete ReturnStatement(541)", "Delete Block(542)", "Delete IfStatement(543)", "Delete SimpleType: AssertionError(596)", "Delete CharacterLiteral: '.'(599)", "Delete MethodInvocation(600)", "Delete SimpleName: join(601)", "Delete MethodInvocation(604)", "Delete MethodInvocation(605)", "Delete ClassInstanceCreation(606)", "Delete ThrowStatement(607)", "Delete Block(608)", "Delete MethodDeclaration(609)", "Delete Modifier: private(610)", "Delete SimpleName: resolve(613)", "Delete SimpleType: LookupResult(615)", "Delete SimpleName: result(616)", "Delete SingleVariableDeclaration(617)", "Delete SimpleType: String(662)", "Delete VariableDeclarationStatement(677)", "Delete SimpleName: field(680)", "Delete MethodInvocation(685)", "Delete VariableDeclarationFragment(686)", "Delete VariableDeclarationStatement(687)", "Delete SimpleName: verifyNotNull(705)", "Delete SimpleName: field(706)", "Delete StringLiteral: \"%s\"(707)", "Delete SimpleName: result(708)", "Delete MethodInvocation(709)", "Delete ExpressionStatement(710)", "Delete Block(718)", "Delete MethodDeclaration(719)"]}}, {"Resolve_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.turbine.binder.bound.BoundClass to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.turbine.binder.env.CompoundEnv to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: com.google.turbine.binder.lookup.CanonicalSymbolResolver to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: com.google.turbine.binder.lookup.LookupResult to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 4", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> to FieldDeclaration at 2", "INS SimpleType: LookupResult to SingleVariableDeclaration at 0", "INS SimpleName: ci to VariableDeclarationFragment at 0", "INS SimpleType: CanonicalSymbolResolver to TypeDeclaration: class at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS IfStatement to Block at 1", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: resolveOne to MethodDeclaration at 3", "INS Block to EnhancedForStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleType: BoundClass to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 2", "INS SimpleName: CanonicalResolver to TypeDeclaration: class at 1", "INS Modifier: static to TypeDeclaration: class at 0", "INS SimpleType: ClassSymbol to VariableDeclarationStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: BoundClass to SimpleType: BoundClass at 0", "INS SimpleName: bit to SingleVariableDeclaration at 1", "INS ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> to SingleVariableDeclaration at 0", "INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: LookupResult to SimpleType: LookupResult at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 4", "INS SimpleType: ClassSymbol to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 1", "INS SimpleName: children to MethodInvocation at 1", "INS SimpleType: ClassSymbol to SingleVariableDeclaration at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: sym to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS SimpleType: CompoundEnv to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 0", "INS SimpleName: env to Assignment: = at 1", "INS SimpleName: env to FieldAccess at 1", "INS SimpleName: CompoundEnv to SimpleType: CompoundEnv at 0", "INS InfixExpression: == to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: BoundClass to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: sym to InfixExpression: == at 0", "INS SimpleName: sym to InfixExpression: == at 0", "INS SimpleName: bit to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS IfStatement to Block at 1", "INS SimpleName: resolveOne to MethodInvocation at 0", "INS SimpleName: sym to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: bit to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: env to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: sym to MethodInvocation at 1", "INS SimpleType: CompoundEnv to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 0", "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "INS SimpleName: sym to Assignment: = at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: sym to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: bit to SingleVariableDeclaration at 1", "INS SimpleType: ClassSymbol to CastExpression at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 1", "INS SimpleName: result to SingleVariableDeclaration at 1", "INS NullLiteral to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: BoundClass to SimpleType: BoundClass at 0", "INS NullLiteral to ReturnStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: sym to MethodInvocation at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: env to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: BoundClass to SimpleType: BoundClass at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: ci to InfixExpression: == at 0", "INS SimpleName: CanonicalSymbolResolver to SimpleType: CanonicalSymbolResolver at 0", "INS SimpleName: CanonicalResolver to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: sym to ReturnStatement at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: env to SingleVariableDeclaration at 1", "INS SimpleName: sym to ReturnStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: remaining to MethodInvocation at 1", "INS SimpleType: BoundClass to ParameterizedType: CompoundEnv<ClassSymbol,BoundClass> at 2", "INS IfStatement to Block at 3", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: CompoundEnv to SimpleType: CompoundEnv at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: resolve to MethodDeclaration at 3", "INS Block to MethodDeclaration at 3", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ci to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: sym to VariableDeclarationFragment at 0", "INS NullLiteral to ReturnStatement at 0"]}]}}, {"Resolve_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(273) at 1", "Insert ImportDeclaration(7) into CompilationUnit(273) at 3", "Insert ImportDeclaration(11) into CompilationUnit(273) at 5", "Insert ImportDeclaration(13) into CompilationUnit(273) at 6", "Insert QualifiedName: com.google.turbine.binder.bound.BoundClass(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.turbine.binder.env.CompoundEnv(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.turbine.binder.lookup.CanonicalSymbolResolver(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: com.google.turbine.binder.lookup.LookupResult(12) into ImportDeclaration(13) at 0", "Insert TypeDeclaration: class(271) into TypeDeclaration: class(272) at 4", "Insert Modifier: static(138) into TypeDeclaration: class(271) at 0", "Insert SimpleName: CanonicalResolver(139) into TypeDeclaration: class(271) at 1", "Insert SimpleType: CanonicalSymbolResolver(141) into TypeDeclaration: class(271) at 2", "Insert FieldDeclaration(153) into TypeDeclaration: class(271) at 3", "Insert MethodDeclaration(172) into TypeDeclaration: class(271) at 4", "Insert MethodDeclaration(220) into TypeDeclaration: class(271) at 5", "Insert MethodDeclaration(270) into TypeDeclaration: class(271) at 6", "Insert SimpleName: CanonicalSymbolResolver(140) into SimpleType: CanonicalSymbolResolver(141) at 0", "Insert Modifier: private(142) into FieldDeclaration(153) at 0", "Insert Modifier: final(143) into FieldDeclaration(153) at 1", "Insert ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(150) into FieldDeclaration(153) at 2", "Insert VariableDeclarationFragment(152) into FieldDeclaration(153) at 3", "Insert Modifier: public(154) into MethodDeclaration(172) at 0", "Insert SimpleName: CanonicalResolver(155) into MethodDeclaration(172) at 1", "Insert SingleVariableDeclaration(164) into MethodDeclaration(172) at 2", "Insert Block(171) into MethodDeclaration(172) at 3", "Insert MarkerAnnotation(174) into MethodDeclaration(220) at 0", "Insert Modifier: public(175) into MethodDeclaration(220) at 1", "Insert SimpleType: ClassSymbol(177) into MethodDeclaration(220) at 2", "Insert SimpleName: resolve(178) into MethodDeclaration(220) at 3", "Insert SingleVariableDeclaration(182) into MethodDeclaration(220) at 4", "Insert Block(219) into MethodDeclaration(220) at 5", "Insert MarkerAnnotation(222) into MethodDeclaration(270) at 0", "Insert Modifier: public(223) into MethodDeclaration(270) at 1", "Insert SimpleType: ClassSymbol(225) into MethodDeclaration(270) at 2", "Insert SimpleName: resolveOne(226) into MethodDeclaration(270) at 3", "Insert SingleVariableDeclaration(230) into MethodDeclaration(270) at 4", "Insert SingleVariableDeclaration(234) into MethodDeclaration(270) at 5", "Insert Block(269) into MethodDeclaration(270) at 6", "Insert SimpleType: CompoundEnv(145) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(150) at 0", "Insert SimpleType: ClassSymbol(147) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(150) at 1", "Insert SimpleType: BoundClass(149) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(150) at 2", "Insert SimpleName: env(151) into VariableDeclarationFragment(152) at 0", "Insert ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(162) into SingleVariableDeclaration(164) at 0", "Insert SimpleName: env(163) into SingleVariableDeclaration(164) at 1", "Insert ExpressionStatement(170) into Block(171) at 0", "Insert SimpleName: Override(173) into MarkerAnnotation(174) at 0", "Insert SimpleName: ClassSymbol(176) into SimpleType: ClassSymbol(177) at 0", "Insert SimpleType: LookupResult(180) into SingleVariableDeclaration(182) at 0", "Insert SimpleName: result(181) into SingleVariableDeclaration(182) at 1", "Insert VariableDeclarationStatement(193) into Block(219) at 0", "Insert EnhancedForStatement(216) into Block(219) at 1", "Insert ReturnStatement(218) into Block(219) at 2", "Insert SimpleName: Override(221) into MarkerAnnotation(222) at 0", "Insert SimpleName: ClassSymbol(224) into SimpleType: ClassSymbol(225) at 0", "Insert SimpleType: ClassSymbol(228) into SingleVariableDeclaration(230) at 0", "Insert SimpleName: sym(229) into SingleVariableDeclaration(230) at 1", "Insert SimpleType: String(232) into SingleVariableDeclaration(234) at 0", "Insert SimpleName: bit(233) into SingleVariableDeclaration(234) at 1", "Insert VariableDeclarationStatement(243) into Block(269) at 0", "Insert IfStatement(250) into Block(269) at 1", "Insert ExpressionStatement(259) into Block(269) at 2", "Insert IfStatement(266) into Block(269) at 3", "Insert ReturnStatement(268) into Block(269) at 4", "Insert SimpleName: CompoundEnv(144) into SimpleType: CompoundEnv(145) at 0", "Insert SimpleName: ClassSymbol(146) into SimpleType: ClassSymbol(147) at 0", "Insert SimpleName: BoundClass(148) into SimpleType: BoundClass(149) at 0", "Insert SimpleType: CompoundEnv(157) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(162) at 0", "Insert SimpleType: ClassSymbol(159) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(162) at 1", "Insert SimpleType: BoundClass(161) into ParameterizedType: CompoundEnv<ClassSymbol,BoundClass>(162) at 2", "Insert Assignment: =(169) into ExpressionStatement(170) at 0", "Insert SimpleName: LookupResult(179) into SimpleType: LookupResult(180) at 0", "Insert SimpleType: ClassSymbol(184) into VariableDeclarationStatement(193) at 0", "Insert VariableDeclarationFragment(192) into VariableDeclarationStatement(193) at 1", "Insert SingleVariableDeclaration(197) into EnhancedForStatement(216) at 0", "Insert MethodInvocation(200) into EnhancedForStatement(216) at 1", "Insert Block(215) into EnhancedForStatement(216) at 2", "Insert SimpleName: sym(217) into ReturnStatement(218) at 0", "Insert SimpleName: ClassSymbol(227) into SimpleType: ClassSymbol(228) at 0", "Insert SimpleName: String(231) into SimpleType: String(232) at 0", "Insert SimpleType: BoundClass(236) into VariableDeclarationStatement(243) at 0", "Insert VariableDeclarationFragment(242) into VariableDeclarationStatement(243) at 1", "Insert InfixExpression: ==(246) into IfStatement(250) at 0", "Insert Block(249) into IfStatement(250) at 1", "Insert Assignment: =(258) into ExpressionStatement(259) at 0", "Insert InfixExpression: ==(262) into IfStatement(266) at 0", "Insert Block(265) into IfStatement(266) at 1", "Insert SimpleName: sym(267) into ReturnStatement(268) at 0", "Insert SimpleName: CompoundEnv(156) into SimpleType: CompoundEnv(157) at 0", "Insert SimpleName: ClassSymbol(158) into SimpleType: ClassSymbol(159) at 0", "Insert SimpleName: BoundClass(160) into SimpleType: BoundClass(161) at 0", "Insert FieldAccess(167) into Assignment: =(169) at 0", "Insert SimpleName: env(168) into Assignment: =(169) at 1", "Insert SimpleName: ClassSymbol(183) into SimpleType: ClassSymbol(184) at 0", "Insert SimpleName: sym(185) into VariableDeclarationFragment(192) at 0", "Insert CastExpression(191) into VariableDeclarationFragment(192) at 1", "Insert SimpleType: String(195) into SingleVariableDeclaration(197) at 0", "Insert SimpleName: bit(196) into SingleVariableDeclaration(197) at 1", "Insert SimpleName: result(198) into MethodInvocation(200) at 0", "Insert SimpleName: remaining(199) into MethodInvocation(200) at 1", "Insert ExpressionStatement(207) into Block(215) at 0", "Insert IfStatement(214) into Block(215) at 1", "Insert SimpleName: BoundClass(235) into SimpleType: BoundClass(236) at 0", "Insert SimpleName: ci(237) into VariableDeclarationFragment(242) at 0", "Insert MethodInvocation(241) into VariableDeclarationFragment(242) at 1", "Insert SimpleName: ci(244) into InfixExpression: ==(246) at 0", "Insert NullLiteral(245) into InfixExpression: ==(246) at 1", "Insert ReturnStatement(248) into Block(249) at 0", "Insert SimpleName: sym(251) into Assignment: =(258) at 0", "Insert MethodInvocation(257) into Assignment: =(258) at 1", "Insert SimpleName: sym(260) into InfixExpression: ==(262) at 0", "Insert NullLiteral(261) into InfixExpression: ==(262) at 1", "Insert ReturnStatement(264) into Block(265) at 0", "Insert ThisExpression(165) into FieldAccess(167) at 0", "Insert SimpleName: env(166) into FieldAccess(167) at 1", "Insert SimpleType: ClassSymbol(187) into CastExpression(191) at 0", "Insert MethodInvocation(190) into CastExpression(191) at 1", "Insert SimpleName: String(194) into SimpleType: String(195) at 0", "Insert Assignment: =(206) into ExpressionStatement(207) at 0", "Insert InfixExpression: ==(210) into IfStatement(214) at 0", "Insert Block(213) into IfStatement(214) at 1", "Insert SimpleName: env(238) into MethodInvocation(241) at 0", "Insert SimpleName: get(239) into MethodInvocation(241) at 1", "Insert SimpleName: sym(240) into MethodInvocation(241) at 2", "Insert NullLiteral(247) into ReturnStatement(248) at 0", "Insert MethodInvocation(254) into MethodInvocation(257) at 0", "Insert SimpleName: get(255) into MethodInvocation(257) at 1", "Insert SimpleName: bit(256) into MethodInvocation(257) at 2", "Insert NullLiteral(263) into ReturnStatement(264) at 0", "Insert SimpleName: ClassSymbol(186) into SimpleType: ClassSymbol(187) at 0", "Insert SimpleName: result(188) into MethodInvocation(190) at 0", "Insert SimpleName: sym(189) into MethodInvocation(190) at 1", "Insert SimpleName: sym(201) into Assignment: =(206) at 0", "Insert MethodInvocation(205) into Assignment: =(206) at 1", "Insert SimpleName: sym(208) into InfixExpression: ==(210) at 0", "Insert NullLiteral(209) into InfixExpression: ==(210) at 1", "Insert ReturnStatement(212) into Block(213) at 0", "Insert SimpleName: ci(252) into MethodInvocation(254) at 0", "Insert SimpleName: children(253) into MethodInvocation(254) at 1", "Insert SimpleName: resolveOne(202) into MethodInvocation(205) at 0", "Insert SimpleName: sym(203) into MethodInvocation(205) at 1", "Insert SimpleName: bit(204) into MethodInvocation(205) at 2", "Insert NullLiteral(211) into ReturnStatement(212) at 0"]}}, {"Parser_cluster": {"actions": [{"root": "INS SimpleName: wild to ClassInstanceCreation at 3", "operations": ["INS SimpleName: wild to ClassInstanceCreation at 3"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL BooleanLiteral: true", "DEL Modifier: final", "DEL Modifier: private", "DEL PrimitiveType: boolean", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: disallowWild"]}, {"root": "DEL IfStatement", "operations": ["DEL ThrowStatement", "DEL StringLiteral: \"wildcard import\"", "DEL SimpleName: error", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: disallowWild"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: wild", "DEL ReturnStatement", "DEL NullLiteral", "DEL Block", "DEL IfStatement"]}]}}, {"Parser_diff": {"operations": ["Insert SimpleName: wild(3628) into ClassInstanceCreation(3629) at 3", "Delete Modifier: private(84)", "Delete Modifier: final(85)", "Delete PrimitiveType: boolean(86)", "Delete SimpleName: disallowWild(87)", "Delete BooleanLiteral: true(88)", "Delete VariableDeclarationFragment(89)", "Delete FieldDeclaration(90)", "Delete SimpleName: disallowWild(3609)", "Delete SimpleName: error(3610)", "Delete StringLiteral: \"wildcard import\"(3611)", "Delete MethodInvocation(3612)", "Delete ThrowStatement(3613)", "Delete Block(3614)", "Delete IfStatement(3615)", "Delete SimpleName: wild(3636)", "Delete NullLiteral(3637)", "Delete ReturnStatement(3638)", "Delete Block(3639)", "Delete IfStatement(3640)"]}}, {"Tree_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleName: wild to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: wild to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: wild to ReturnStatement at 0", "INS TextElement: Returns true for wildcard imports.  to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: wild to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Returns true for static member imports.  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: wild to Assignment: = at 1", "INS SimpleName: wild to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}]}}, {"Tree_diff": {"operations": ["Insert FieldDeclaration(1843) into TypeDeclaration: class(1951) at 7", "Insert MethodDeclaration(1950) into TypeDeclaration: class(1951) at 13", "Insert Modifier: private(1838) into FieldDeclaration(1843) at 0", "Insert Modifier: final(1839) into FieldDeclaration(1843) at 1", "Insert PrimitiveType: boolean(1840) into FieldDeclaration(1843) at 2", "Insert VariableDeclarationFragment(1842) into FieldDeclaration(1843) at 3", "Insert SingleVariableDeclaration(1858) into MethodDeclaration(1878) at 4", "Insert Javadoc(1933) into MethodDeclaration(1940) at 0", "Insert Javadoc(1943) into MethodDeclaration(1950) at 0", "Insert Modifier: public(1944) into MethodDeclaration(1950) at 1", "Insert PrimitiveType: boolean(1945) into MethodDeclaration(1950) at 2", "Insert SimpleName: wild(1946) into MethodDeclaration(1950) at 3", "Insert Block(1949) into MethodDeclaration(1950) at 4", "Insert SimpleName: wild(1841) into VariableDeclarationFragment(1842) at 0", "Insert PrimitiveType: boolean(1856) into SingleVariableDeclaration(1858) at 0", "Insert SimpleName: wild(1857) into SingleVariableDeclaration(1858) at 1", "Insert ExpressionStatement(1876) into Block(1877) at 2", "Insert TagElement(1932) into Javadoc(1933) at 0", "Insert TagElement(1942) into Javadoc(1943) at 0", "Insert ReturnStatement(1948) into Block(1949) at 0", "Insert Assignment: =(1875) into ExpressionStatement(1876) at 0", "Insert TextElement: Returns true for static member imports. (1931) into TagElement(1932) at 0", "Insert TextElement: Returns true for wildcard imports. (1941) into TagElement(1942) at 0", "Insert SimpleName: wild(1947) into ReturnStatement(1948) at 0", "Insert FieldAccess(1873) into Assignment: =(1875) at 0", "Insert SimpleName: wild(1874) into Assignment: =(1875) at 1", "Insert ThisExpression(1871) into FieldAccess(1873) at 0", "Insert SimpleName: wild(1872) into FieldAccess(1873) at 1"]}}, {"ImportIndex_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from com.google.turbine.binder.bound.BoundClass to com.google.common.collect.Iterables.getLast", "operations": ["UPD QualifiedName: com.google.turbine.binder.bound.BoundClass from com.google.turbine.binder.bound.BoundClass to com.google.common.collect.Iterables.getLast"]}, {"root": "UPDATE from com.google.turbine.binder.env.Env to com.google.turbine.tree.Tree.ImportDecl", "operations": ["UPD QualifiedName: com.google.turbine.binder.env.Env from com.google.turbine.binder.env.Env to com.google.turbine.tree.Tree.ImportDecl"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<Supplier<Scope>> at 0", "INS SimpleName: packages to VariableDeclarationFragment at 0", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: Supplier to ParameterizedType: Supplier<Scope> at 0", "INS ParameterizedType: ImmutableList<Supplier<Scope>> to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Scope to ParameterizedType: Supplier<Scope> at 1", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS ParameterizedType: Supplier<Scope> to ParameterizedType: ImmutableList<Supplier<Scope>> at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS SimpleName: packageIndex to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 3", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: Scope to ParameterizedType: Supplier<Scope> at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: Scope to ClassInstanceCreation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: LookupResult to ClassInstanceCreation at 0", "INS ParameterizedType: ImmutableList.Builder<Supplier<Scope>> to VariableDeclarationStatement at 0", "INS SimpleType: Supplier to ParameterizedType: Supplier<Scope> at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: result to InfixExpression: == at 0", "INS IfStatement to Block at 1", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS MethodInvocation to ExpressionStatement at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 3", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: LookupResult to MethodDeclaration at 2", "INS ClassInstanceCreation to ConditionalExpression at 1", "INS VariableDeclarationStatement to Block at 2", "INS Block to IfStatement at 1", "INS SimpleType: Scope to ParameterizedType: Supplier<Scope> at 1", "INS ParameterizedType: Supplier<Scope> to ParameterizedType: ImmutableList.Builder<Supplier<Scope>> at 1", "INS IfStatement to Block at 1", "INS NullLiteral to ConditionalExpression at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: packageIndex to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: member to ClassInstanceCreation at 1", "INS SimpleName: Suppliers to MethodInvocation at 0", "INS SimpleName: lookupKey to ClassInstanceCreation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleName: lookup to MethodDeclaration at 3", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: getLast to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<Supplier<Scope>> at 0", "INS ParameterizedType: Supplier<Scope> to ClassInstanceCreation at 0", "INS Block to EnhancedForStatement at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleName: get to MethodDeclaration at 3", "INS SimpleType: Scope to MethodDeclaration at 2", "INS Block to MethodDeclaration at 8", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: i to MethodInvocation at 0", "INS SimpleName: imports to EnhancedForStatement at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 4", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: Supplier to ParameterizedType: Supplier<Scope> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: wild to MethodInvocation at 1", "INS SimpleName: thunks to MethodInvocation at 0", "INS SimpleName: memoize to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to IfStatement at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: Scope to ParameterizedType: Supplier<Scope> at 1", "INS ParameterizedType: ImmutableList<Supplier<Scope>> to SingleVariableDeclaration at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS SimpleName: packages to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ParameterizedType: Supplier<Scope> to ParameterizedType: ImmutableList<Supplier<Scope>> at 1", "INS SimpleType: Supplier to ParameterizedType: Supplier<Scope> at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: static to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Javadoc to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: create to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleType: ImportIndex to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: packages to Assignment: = at 1", "INS SimpleName: packages to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 1", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS SimpleType: CanonicalSymbolResolver to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: CanonicalSymbolResolver to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: resolve to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: resolve to SingleVariableDeclaration at 2"]}, {"root": "UPDATE from ImmutableList<Tree.ImportDecl> to ImmutableList<ImportDecl>", "operations": ["UPD ParameterizedType: ImmutableList<Tree.ImportDecl> from ImmutableList<Tree.ImportDecl> to ImmutableList<ImportDecl>"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from ParameterizedType: ImmutableList<Supplier<Scope>>", "operations": ["MOV SimpleType: ImmutableList to ParameterizedType: ImmutableList<Supplier<Scope>> at 0"]}, {"root": "UPDATE from ClassSymbol to CanonicalSymbolResolver", "operations": ["UPD SimpleName: ClassSymbol from ClassSymbol to CanonicalSymbolResolver"]}, {"root": "MOVE from SimpleType: CanonicalSymbolResolver", "operations": ["MOV SimpleName: ClassSymbol to SimpleType: CanonicalSymbolResolver at 0"]}, {"root": "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<Tree.ImportDecl> at 0", "operations": ["INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<Tree.ImportDecl> at 0", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0"]}, {"root": "UPDATE from Tree.ImportDecl to ImportDecl", "operations": ["UPD SimpleType: Tree.ImportDecl from Tree.ImportDecl to ImportDecl"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS SimpleName: ImportDecl to SimpleType: Tree.ImportDecl at 0", "operations": ["INS SimpleName: ImportDecl to SimpleType: Tree.ImportDecl at 0"]}, {"root": "UPDATE from last to packageScopes", "operations": ["UPD SimpleName: last from last to packageScopes", "UPD SimpleName: put from put to packageScopes"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: packageScopes to MethodInvocation at 0"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: packageScope to SingleVariableDeclaration at 1", "INS SimpleName: packages to EnhancedForStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: lookup to MethodInvocation at 2", "INS SimpleName: lookup to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleType: Supplier to ParameterizedType: Supplier<Scope> at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS IfStatement to Block at 1", "INS ParameterizedType: Supplier<Scope> to SingleVariableDeclaration at 0", "INS SimpleName: LookupResult to SimpleType: LookupResult at 0", "INS EnhancedForStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: LookupResult to VariableDeclarationStatement at 0", "INS SimpleName: result to InfixExpression: != at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Scope to ParameterizedType: Supplier<Scope> at 1", "INS SimpleName: packageScope to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "UPDATE from get to ImmutableList", "operations": ["UPD SimpleName: get from get to ImmutableList"]}, {"root": "INS SimpleName: builder to MethodInvocation at 2", "operations": ["INS SimpleName: builder to MethodInvocation at 2"]}, {"root": "UPDATE from String to Scope", "operations": ["UPD SimpleName: String from String to Scope", "UPD SimpleName: ClassSymbol from ClassSymbol to Scope"]}, {"root": "MOVE from SimpleType: Scope", "operations": ["MOV SimpleName: String to SimpleType: Scope at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: put to MethodInvocation at 0", "MOV SimpleName: last to MethodInvocation at 1"]}, {"root": "UPDATE from last to add", "operations": ["UPD SimpleName: last from last to add"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: Supplier<ClassSymbol> to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Suppliers to MethodInvocation at 0", "MOV SimpleName: memoize to MethodInvocation at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ClassSymbol to MethodDeclaration at 2", "MOV SimpleName: get to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LookupResult to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from get to result", "operations": ["UPD SimpleName: get from get to result", "UPD SimpleName: ci from ci to result"]}, {"root": "UPDATE from ci to resolve", "operations": ["UPD SimpleName: ci from ci to resolve", "UPD SimpleName: children from children to resolve", "UPD SimpleName: result from result to resolve"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: children to MethodInvocation at 1", "MOV SimpleName: ci to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 2"]}, {"root": "INS SimpleType: Scope to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Scope to VariableDeclarationStatement at 0", "INS SimpleName: Scope to SimpleType: Scope at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: packageIndex to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LookupResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: LookupKey to SingleVariableDeclaration at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from env to cpi", "operations": ["UPD SimpleName: env from env to cpi"]}, {"root": "UPDATE from get to lookup", "operations": ["UPD SimpleName: get from get to lookup"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS SimpleName: LookupKey to SimpleType: LookupKey at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: LookupKey to ClassInstanceCreation at 0", "INS SimpleName: type to MethodInvocation at 1", "INS SimpleName: i to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: result to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: result to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: cpi to MethodInvocation at 0", "INS SimpleName: lookup to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: cpi to MethodInvocation at 0", "operations": ["INS SimpleName: cpi to MethodInvocation at 0"]}, {"root": "UPDATE from size to lookupPackage", "operations": ["UPD SimpleName: size from size to lookupPackage"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from SimpleType: Scope", "operations": ["MOV SimpleName: ClassSymbol to SimpleType: Scope at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from ClassSymbol to LookupResult", "operations": ["UPD SimpleName: ClassSymbol from ClassSymbol to LookupResult", "UPD SimpleName: Env from Env to LookupResult"]}, {"root": "MOVE from SimpleType: LookupResult", "operations": ["MOV SimpleName: Env to SimpleType: LookupResult at 0"]}, {"root": "UPDATE from result to lookupKey", "operations": ["UPD SimpleName: result from result to lookupKey", "UPD SimpleName: lookupOneCanonical from lookupOneCanonical to lookupKey"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ClassSymbol to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from sym to member", "operations": ["UPD SimpleName: sym from sym to member", "UPD SimpleName: sym from sym to member"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: sym to VariableDeclarationFragment at 0", "MOV CastExpression to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: result to MethodInvocation at 0", "MOV SimpleName: remaining to MethodInvocation at 1"]}, {"root": "UPDATE from remaining to resolveOne", "operations": ["UPD SimpleName: remaining from remaining to resolveOne"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1", "MOV SimpleName: sym to InfixExpression: != at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: bit to MethodInvocation at 1", "MOV SimpleName: lookupOneCanonical to MethodInvocation at 0"]}, {"root": "UPDATE from bit to first", "operations": ["UPD SimpleName: bit from bit to first"]}, {"root": "MOVE from SimpleType: LookupResult", "operations": ["MOV SimpleName: ClassSymbol to SimpleType: LookupResult at 0"]}, {"root": "DEL ParameterizedType: Env<ClassSymbol,? extends BoundClass>", "operations": ["DEL SimpleType: BoundClass", "DEL ParameterizedType: Env<ClassSymbol,? extends BoundClass>", "DEL SimpleName: Env", "DEL SimpleType: Env", "DEL WildcardType: ? extends BoundClass", "DEL SimpleName: BoundClass", "DEL SimpleType: ClassSymbol"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL QualifiedName: Tree.ImportDecl", "operations": ["DEL QualifiedName: Tree.ImportDecl"]}, {"root": "DEL InfixExpression: -", "operations": ["DEL NumberLiteral: 1", "DEL InfixExpression: -"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL SimpleName: cpi", "DEL SimpleName: lookup", "DEL MethodInvocation", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL SimpleName: lookup"]}, {"root": "DEL SimpleName: lookup", "operations": ["DEL SimpleName: lookup"]}, {"root": "DEL SimpleType: BoundClass", "operations": ["DEL SimpleName: BoundClass", "DEL SimpleType: BoundClass"]}, {"root": "DEL SimpleName: sym", "operations": ["DEL SimpleName: sym"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block", "DEL SimpleName: ci", "DEL NullLiteral", "DEL InfixExpression: =="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: sym", "DEL SimpleName: bit", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL NullLiteral", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleName: sym", "DEL InfixExpression: ==", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: sym", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL AnonymousClassDeclaration", "DEL Block", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL Modifier: final", "DEL ClassInstanceCreation", "DEL SimpleName: lookupCanonical", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL SimpleName: imports", "DEL MethodInvocation", "DEL SimpleName: env", "DEL MethodDeclaration", "DEL SimpleName: thunks", "DEL Block", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: result", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleType: Env", "DEL SimpleName: lookupCanonical", "DEL SimpleName: ClassSymbol", "DEL MethodDeclaration", "DEL SimpleName: sym", "DEL ReturnStatement", "DEL SimpleType: ClassSymbol", "DEL SimpleName: BoundClass", "DEL SimpleType: BoundClass", "DEL Block", "DEL Assignment: =", "DEL TextElement: them, not by types that are inherited into).", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL SimpleName: sym", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: sym", "DEL SimpleType: ClassSymbol", "DEL SimpleName: bit", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleType: String", "DEL SimpleName: String", "DEL ReturnStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL Modifier: public", "DEL ParameterizedType: Env<ClassSymbol,? extends BoundClass>", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: env", "DEL WildcardType: ? extends BoundClass", "DEL Modifier: static", "DEL Block", "DEL TextElement: Resolves a type by canonical name (member types must be qualified by the type that declares", "DEL SimpleName: env"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: ClassSymbol", "DEL SimpleName: BoundClass", "DEL WildcardType: ? extends BoundClass", "DEL SimpleType: ClassSymbol", "DEL SimpleName: Env", "DEL SingleVariableDeclaration", "DEL SimpleType: BoundClass", "DEL SimpleName: sym", "DEL SimpleType: Env", "DEL Modifier: static", "DEL Javadoc", "DEL SimpleName: ClassSymbol", "DEL SimpleName: lookupOneCanonical", "DEL SimpleName: env", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL SimpleName: ClassSymbol", "DEL SimpleType: ClassSymbol", "DEL SimpleName: bit", "DEL TagElement", "DEL SimpleName: String", "DEL TextElement: Resolves a single member type of the given symbol by canonical name. ", "DEL MethodDeclaration", "DEL ParameterizedType: Env<ClassSymbol,? extends BoundClass>", "DEL SingleVariableDeclaration", "DEL SimpleType: String"]}]}}, {"ImportIndex_diff": {"operations": ["Move ImportDeclaration(11) into CompilationUnit(425) at 1", "Move ImportDeclaration(13) into CompilationUnit(425) at 9", "Update QualifiedName: com.google.turbine.binder.bound.BoundClass(10) to com.google.common.collect.Iterables.getLast", "Update QualifiedName: com.google.turbine.binder.env.Env(12) to com.google.turbine.tree.Tree.ImportDecl", "Insert FieldDeclaration(58) into TypeDeclaration: class(424) at 5", "Insert MethodDeclaration(341) into TypeDeclaration: class(424) at 7", "Insert Modifier: private(46) into FieldDeclaration(58) at 0", "Insert Modifier: final(47) into FieldDeclaration(58) at 1", "Insert ParameterizedType: ImmutableList<Supplier<Scope>>(55) into FieldDeclaration(58) at 2", "Insert VariableDeclarationFragment(57) into FieldDeclaration(58) at 3", "Insert SingleVariableDeclaration(82) into MethodDeclaration(96) at 3", "Move Javadoc(70) into MethodDeclaration(341) at 0", "Move Modifier: public(71) into MethodDeclaration(341) at 1", "Move Modifier: static(72) into MethodDeclaration(341) at 2", "Move SimpleType: ImportIndex(74) into MethodDeclaration(341) at 3", "Move SimpleName: create(75) into MethodDeclaration(341) at 4", "Move SingleVariableDeclaration(86) into MethodDeclaration(341) at 5", "Move SingleVariableDeclaration(91) into MethodDeclaration(341) at 6", "Move SingleVariableDeclaration(98) into MethodDeclaration(341) at 7", "Insert Block(340) into MethodDeclaration(341) at 8", "Insert SimpleType: ImmutableList(49) into ParameterizedType: ImmutableList<Supplier<Scope>>(55) at 0", "Insert ParameterizedType: Supplier<Scope>(54) into ParameterizedType: ImmutableList<Supplier<Scope>>(55) at 1", "Insert SimpleName: packages(56) into VariableDeclarationFragment(57) at 0", "Insert ParameterizedType: ImmutableList<Supplier<Scope>>(80) into SingleVariableDeclaration(82) at 0", "Insert SimpleName: packages(81) into SingleVariableDeclaration(82) at 1", "Insert ExpressionStatement(94) into Block(95) at 1", "Insert SimpleType: CanonicalSymbolResolver(107) into SingleVariableDeclaration(109) at 1", "Insert SimpleName: resolve(108) into SingleVariableDeclaration(109) at 2", "Update ParameterizedType: ImmutableList<Tree.ImportDecl>(96) to ImmutableList<ImportDecl>", "Insert VariableDeclarationStatement(135) into Block(340) at 0", "Move VariableDeclarationStatement(114) into Block(340) at 1", "Insert EnhancedForStatement(329) into Block(340) at 2", "Move ReturnStatement(209) into Block(340) at 3", "Insert SimpleName: ImmutableList(48) into SimpleType: ImmutableList(49) at 0", "Insert SimpleType: Supplier(51) into ParameterizedType: Supplier<Scope>(54) at 0", "Insert SimpleType: Scope(53) into ParameterizedType: Supplier<Scope>(54) at 1", "Move SimpleType: ImmutableList(93) into ParameterizedType: ImmutableList<Supplier<Scope>>(80) at 0", "Insert ParameterizedType: Supplier<Scope>(79) into ParameterizedType: ImmutableList<Supplier<Scope>>(80) at 1", "Insert Assignment: =(93) into ExpressionStatement(94) at 0", "Update SimpleName: ClassSymbol(79) to CanonicalSymbolResolver", "Move SimpleName: ClassSymbol(79) into SimpleType: CanonicalSymbolResolver(107) at 0", "Insert SimpleType: ImmutableList(116) into ParameterizedType: ImmutableList<ImportDecl>(119) at 0", "Update SimpleType: Tree.ImportDecl(95) to ImportDecl", "Insert ParameterizedType: ImmutableList.Builder<Supplier<Scope>>(129) into VariableDeclarationStatement(135) at 0", "Move VariableDeclarationFragment(143) into VariableDeclarationStatement(135) at 1", "Move SingleVariableDeclaration(119) into EnhancedForStatement(329) at 0", "Insert SimpleName: imports(157) into EnhancedForStatement(329) at 1", "Insert Block(328) into EnhancedForStatement(329) at 2", "Insert SimpleName: Supplier(50) into SimpleType: Supplier(51) at 0", "Insert SimpleName: Scope(52) into SimpleType: Scope(53) at 0", "Insert SimpleType: Supplier(76) into ParameterizedType: Supplier<Scope>(79) at 0", "Insert SimpleType: Scope(78) into ParameterizedType: Supplier<Scope>(79) at 1", "Insert FieldAccess(91) into Assignment: =(93) at 0", "Insert SimpleName: packages(92) into Assignment: =(93) at 1", "Insert SimpleName: ImmutableList(115) into SimpleType: ImmutableList(116) at 0", "Insert SimpleName: ImportDecl(117) into SimpleType: ImportDecl(118) at 0", "Insert SimpleType: ImmutableList.Builder(123) into ParameterizedType: ImmutableList.Builder<Supplier<Scope>>(129) at 0", "Insert ParameterizedType: Supplier<Scope>(128) into ParameterizedType: ImmutableList.Builder<Supplier<Scope>>(129) at 1", "Update SimpleName: last(130) to packageScopes", "Move IfStatement(126) into Block(328) at 0", "Insert IfStatement(274) into Block(328) at 1", "Insert ExpressionStatement(327) into Block(328) at 2", "Insert MethodInvocation(337) into ClassInstanceCreation(338) at 2", "Insert EnhancedForStatement(396) into Block(399) at 0", "Move ReturnStatement(367) into Block(399) at 1", "Insert SimpleName: Supplier(75) into SimpleType: Supplier(76) at 0", "Insert SimpleName: Scope(77) into SimpleType: Scope(78) at 0", "Insert ThisExpression(89) into FieldAccess(91) at 0", "Insert SimpleName: packages(90) into FieldAccess(91) at 1", "Insert QualifiedName: ImmutableList.Builder(122) into SimpleType: ImmutableList.Builder(123) at 0", "Insert SimpleType: Supplier(125) into ParameterizedType: Supplier<Scope>(128) at 0", "Insert SimpleType: Scope(127) into ParameterizedType: Supplier<Scope>(128) at 1", "Update SimpleName: get(134) to ImmutableList", "Insert SimpleName: builder(132) into MethodInvocation(133) at 1", "Insert MethodInvocation(166) into IfStatement(274) at 0", "Insert Block(273) into IfStatement(274) at 1", "Insert MethodInvocation(326) into ExpressionStatement(327) at 0", "Insert SimpleName: packageScopes(335) into MethodInvocation(337) at 0", "Insert SimpleName: build(336) into MethodInvocation(337) at 1", "Insert SingleVariableDeclaration(375) into EnhancedForStatement(396) at 0", "Insert SimpleName: packages(376) into EnhancedForStatement(396) at 1", "Insert Block(395) into EnhancedForStatement(396) at 2", "Move NullLiteral(239) into ReturnStatement(398) at 0", "Insert SimpleName: Supplier(124) into SimpleType: Supplier(125) at 0", "Update SimpleName: String(128) to Scope", "Move SimpleName: String(128) into SimpleType: Scope(127) at 0", "Insert SimpleName: i(164) into MethodInvocation(166) at 0", "Insert SimpleName: wild(165) into MethodInvocation(166) at 1", "Insert ExpressionStatement(272) into Block(273) at 0", "Insert SimpleName: thunks(275) into MethodInvocation(326) at 0", "Insert SimpleName: put(276) into MethodInvocation(326) at 1", "Insert MethodInvocation(281) into MethodInvocation(326) at 2", "Insert MethodInvocation(325) into MethodInvocation(326) at 3", "Insert ParameterizedType: Supplier<Scope>(373) into SingleVariableDeclaration(375) at 0", "Insert SimpleName: packageScope(374) into SingleVariableDeclaration(375) at 1", "Insert VariableDeclarationStatement(387) into Block(395) at 0", "Insert IfStatement(394) into Block(395) at 1", "Insert MethodInvocation(271) into ExpressionStatement(272) at 0", "Insert SimpleName: getLast(277) into MethodInvocation(281) at 0", "Move MethodInvocation(133) into MethodInvocation(281) at 1", "Insert SimpleName: Suppliers(282) into MethodInvocation(325) at 0", "Insert SimpleName: memoize(283) into MethodInvocation(325) at 1", "Insert ClassInstanceCreation(324) into MethodInvocation(325) at 2", "Insert SimpleType: Supplier(370) into ParameterizedType: Supplier<Scope>(373) at 0", "Insert SimpleType: Scope(372) into ParameterizedType: Supplier<Scope>(373) at 1", "Insert SimpleType: LookupResult(378) into VariableDeclarationStatement(387) at 0", "Insert VariableDeclarationFragment(386) into VariableDeclarationStatement(387) at 1", "Insert InfixExpression: !=(390) into IfStatement(394) at 0", "Insert Block(393) into IfStatement(394) at 1", "Update SimpleName: put(158) to packageScopes", "Move SimpleName: put(158) into MethodInvocation(271) at 0", "Update SimpleName: last(159) to add", "Move SimpleName: last(159) into MethodInvocation(271) at 1", "Insert MethodInvocation(270) into MethodInvocation(271) at 2", "Move ParameterizedType: Supplier<ClassSymbol>(166) into ClassInstanceCreation(324) at 0", "Insert AnonymousClassDeclaration(323) into ClassInstanceCreation(324) at 1", "Insert SimpleName: Supplier(369) into SimpleType: Supplier(370) at 0", "Insert SimpleName: Scope(371) into SimpleType: Scope(372) at 0", "Insert SimpleName: LookupResult(377) into SimpleType: LookupResult(378) at 0", "Insert SimpleName: result(379) into VariableDeclarationFragment(386) at 0", "Insert MethodInvocation(385) into VariableDeclarationFragment(386) at 1", "Insert SimpleName: result(388) into InfixExpression: !=(390) at 0", "Insert NullLiteral(389) into InfixExpression: !=(390) at 1", "Insert ReturnStatement(392) into Block(393) at 0", "Move SimpleName: Suppliers(160) into MethodInvocation(270) at 0", "Move SimpleName: memoize(161) into MethodInvocation(270) at 1", "Insert ClassInstanceCreation(269) into MethodInvocation(270) at 2", "Insert MethodDeclaration(322) into AnonymousClassDeclaration(323) at 0", "Insert MethodInvocation(382) into MethodInvocation(385) at 0", "Insert SimpleName: lookup(383) into MethodInvocation(385) at 1", "Insert SimpleName: lookup(384) into MethodInvocation(385) at 2", "Insert SimpleName: result(391) into ReturnStatement(392) at 0", "Insert ParameterizedType: Supplier<Scope>(175) into ClassInstanceCreation(269) at 0", "Insert AnonymousClassDeclaration(268) into ClassInstanceCreation(269) at 1", "Insert MarkerAnnotation(290) into MethodDeclaration(322) at 0", "Insert Modifier: public(291) into MethodDeclaration(322) at 1", "Move SimpleType: ClassSymbol(171) into MethodDeclaration(322) at 2", "Insert SimpleName: get(294) into MethodDeclaration(322) at 3", "Move Block(388) into MethodDeclaration(322) at 4", "Insert SimpleName: packageScope(380) into MethodInvocation(382) at 0", "Insert SimpleName: get(381) into MethodInvocation(382) at 1", "Insert SimpleType: Supplier(172) into ParameterizedType: Supplier<Scope>(175) at 0", "Insert SimpleType: Scope(174) into ParameterizedType: Supplier<Scope>(175) at 1", "Insert MethodDeclaration(267) into AnonymousClassDeclaration(268) at 0", "Insert SimpleName: Override(289) into MarkerAnnotation(290) at 0", "Move IfStatement(188) into Block(321) at 1", "Insert ReturnStatement(320) into Block(321) at 2", "Insert SimpleName: Supplier(171) into SimpleType: Supplier(172) at 0", "Insert SimpleName: Scope(173) into SimpleType: Scope(174) at 0", "Move MarkerAnnotation(168) into MethodDeclaration(267) at 0", "Move Modifier: public(169) into MethodDeclaration(267) at 1", "Insert SimpleType: Scope(180) into MethodDeclaration(267) at 2", "Move SimpleName: get(172) into MethodDeclaration(267) at 3", "Insert Block(266) into MethodDeclaration(267) at 4", "Move SimpleType: LookupResult(286) into VariableDeclarationStatement(308) at 0", "Insert MethodInvocation(319) into ReturnStatement(320) at 0", "Insert SimpleName: Scope(179) into SimpleType: Scope(180) at 0", "Move VariableDeclarationStatement(181) into Block(266) at 0", "Insert IfStatement(199) into Block(266) at 1", "Insert VariableDeclarationStatement(213) into Block(266) at 2", "Insert IfStatement(220) into Block(266) at 3", "Insert ReturnStatement(265) into Block(266) at 4", "Update SimpleName: ci(356) to result", "Update SimpleName: ci(371) to resolve", "Move SimpleName: ci(371) into MethodInvocation(319) at 0", "Update SimpleName: children(372) to resolve", "Move SimpleName: children(372) into MethodInvocation(319) at 1", "Update SimpleName: get(374) to result", "Move SimpleName: get(374) into MethodInvocation(319) at 2", "Insert SimpleType: Scope(183) into VariableDeclarationStatement(192) at 0", "Insert VariableDeclarationFragment(191) into VariableDeclarationStatement(192) at 1", "Insert InfixExpression: !=(195) into IfStatement(199) at 0", "Insert Block(198) into IfStatement(199) at 1", "Move SimpleType: LookupResult(174) into VariableDeclarationStatement(213) at 0", "Move VariableDeclarationFragment(155) into VariableDeclarationStatement(213) at 1", "Insert InfixExpression: ==(216) into IfStatement(220) at 0", "Insert Block(219) into IfStatement(220) at 1", "Insert ClassInstanceCreation(264) into ReturnStatement(265) at 0", "Update SimpleName: env(357) to cpi", "Update SimpleName: get(358) to lookup", "Insert ClassInstanceCreation(305) into MethodInvocation(306) at 2", "Insert SimpleName: Scope(182) into SimpleType: Scope(183) at 0", "Insert SimpleName: packageIndex(184) into VariableDeclarationFragment(191) at 0", "Move MethodInvocation(139) into VariableDeclarationFragment(191) at 1", "Move MethodInvocation(137) into MethodInvocation(190) at 2", "Insert SimpleName: packageIndex(193) into InfixExpression: !=(195) at 0", "Insert NullLiteral(194) into InfixExpression: !=(195) at 1", "Insert ReturnStatement(197) into Block(198) at 0", "Insert SimpleName: result(202) into VariableDeclarationFragment(212) at 0", "Insert MethodInvocation(211) into VariableDeclarationFragment(212) at 1", "Insert SimpleName: result(214) into InfixExpression: ==(216) at 0", "Insert NullLiteral(215) into InfixExpression: ==(216) at 1", "Insert ReturnStatement(218) into Block(219) at 0", "Insert SimpleType: Scope(222) into ClassInstanceCreation(264) at 0", "Insert AnonymousClassDeclaration(263) into ClassInstanceCreation(264) at 1", "Insert SimpleType: LookupKey(301) into ClassInstanceCreation(305) at 0", "Insert MethodInvocation(304) into ClassInstanceCreation(305) at 1", "Insert SimpleName: cpi(185) into MethodInvocation(190) at 0", "Update SimpleName: size(138) to lookupPackage", "Insert SimpleName: packageIndex(196) into ReturnStatement(197) at 0", "Insert SimpleName: cpi(203) into MethodInvocation(211) at 0", "Insert SimpleName: lookup(204) into MethodInvocation(211) at 1", "Move ClassInstanceCreation(154) into MethodInvocation(211) at 2", "Insert NullLiteral(217) into ReturnStatement(218) at 0", "Update SimpleName: ClassSymbol(272) to Scope", "Move SimpleName: ClassSymbol(272) into SimpleType: Scope(222) at 0", "Insert MethodDeclaration(262) into AnonymousClassDeclaration(263) at 0", "Insert SimpleName: LookupKey(300) into SimpleType: LookupKey(301) at 0", "Insert SimpleName: i(302) into MethodInvocation(304) at 0", "Insert SimpleName: type(303) into MethodInvocation(304) at 1", "Insert MarkerAnnotation(224) into MethodDeclaration(262) at 0", "Insert Modifier: public(225) into MethodDeclaration(262) at 1", "Insert SimpleType: LookupResult(227) into MethodDeclaration(262) at 2", "Insert SimpleName: lookup(228) into MethodDeclaration(262) at 3", "Move SingleVariableDeclaration(288) into MethodDeclaration(262) at 4", "Insert Block(261) into MethodDeclaration(262) at 5", "Insert SimpleName: Override(223) into MarkerAnnotation(224) at 0", "Update SimpleName: Env(275) to LookupResult", "Move SimpleName: Env(275) into SimpleType: LookupResult(227) at 0", "Move SimpleType: LookupKey(147) into SingleVariableDeclaration(232) at 0", "Update SimpleName: result(287) to lookupKey", "Insert VariableDeclarationStatement(249) into Block(261) at 0", "Insert ReturnStatement(260) into Block(261) at 1", "Move SimpleType: ClassSymbol(290) into VariableDeclarationStatement(249) at 0", "Insert VariableDeclarationFragment(248) into VariableDeclarationStatement(249) at 1", "Insert ConditionalExpression(259) into ReturnStatement(260) at 0", "Update SimpleName: sym(291) to member", "Move SimpleName: sym(291) into VariableDeclarationFragment(248) at 0", "Insert MethodInvocation(247) into VariableDeclarationFragment(248) at 1", "Insert InfixExpression: !=(252) into ConditionalExpression(259) at 0", "Insert ClassInstanceCreation(257) into ConditionalExpression(259) at 1", "Insert NullLiteral(258) into ConditionalExpression(259) at 2", "Update SimpleName: result(304) to resolve", "Move SimpleName: result(304) into MethodInvocation(247) at 0", "Update SimpleName: remaining(305) to resolveOne", "Move SimpleName: remaining(305) into MethodInvocation(247) at 1", "Move CastExpression(297) into MethodInvocation(247) at 2", "Insert MethodInvocation(246) into MethodInvocation(247) at 3", "Update SimpleName: sym(315) to member", "Move SimpleName: sym(315) into InfixExpression: !=(252) at 0", "Move NullLiteral(316) into InfixExpression: !=(252) at 1", "Insert SimpleType: LookupResult(254) into ClassInstanceCreation(257) at 0", "Insert SimpleName: member(255) into ClassInstanceCreation(257) at 1", "Insert SimpleName: lookupKey(256) into ClassInstanceCreation(257) at 2", "Update SimpleName: lookupOneCanonical(308) to lookupKey", "Move SimpleName: lookupOneCanonical(308) into MethodInvocation(246) at 0", "Update SimpleName: bit(311) to first", "Move SimpleName: bit(311) into MethodInvocation(246) at 1", "Update SimpleName: ClassSymbol(333) to LookupResult", "Move SimpleName: ClassSymbol(333) into SimpleType: LookupResult(254) at 0", "Delete SimpleName: Env(77)", "Delete SimpleType: Env(78)", "Delete SimpleType: ClassSymbol(80)", "Delete SimpleName: BoundClass(81)", "Delete SimpleType: BoundClass(82)", "Delete WildcardType: ? extends BoundClass(83)", "Delete ParameterizedType: Env<ClassSymbol,? extends BoundClass>(84)", "Delete SimpleName: env(85)", "Delete QualifiedName: Tree.ImportDecl(94)", "Delete NumberLiteral: 1(140)", "Delete InfixExpression: -(141)", "Delete SimpleName: result(175)", "Delete SimpleName: cpi(176)", "Delete SimpleName: lookup(177)", "Delete SimpleName: lookup(178)", "Delete MethodInvocation(179)", "Delete VariableDeclarationFragment(180)", "Delete SimpleName: lookup(148)", "Delete SimpleName: BoundClass(354)", "Delete SimpleType: BoundClass(355)", "Delete SimpleName: sym(359)", "Delete SimpleName: ci(363)", "Delete NullLiteral(364)", "Delete InfixExpression: ==(365)", "Delete Block(368)", "Delete IfStatement(369)", "Delete SimpleName: sym(370)", "Delete MethodInvocation(373)", "Delete SimpleName: bit(375)", "Delete MethodInvocation(376)", "Delete Assignment: =(377)", "Delete ExpressionStatement(378)", "Delete SimpleName: sym(379)", "Delete NullLiteral(380)", "Delete InfixExpression: ==(381)", "Delete NullLiteral(382)", "Delete ReturnStatement(383)", "Delete Block(384)", "Delete IfStatement(385)", "Delete SimpleName: sym(386)", "Delete ReturnStatement(387)", "Delete SimpleName: imports(120)", "Delete Modifier: final(127)", "Delete SimpleType: String(129)", "Delete VariableDeclarationStatement(144)", "Delete Modifier: final(145)", "Delete VariableDeclarationStatement(156)", "Delete SimpleName: thunks(157)", "Delete SimpleName: lookupCanonical(189)", "Delete SimpleName: env(190)", "Delete SimpleName: result(191)", "Delete MethodInvocation(192)", "Delete ReturnStatement(193)", "Delete Block(194)", "Delete MethodDeclaration(195)", "Delete AnonymousClassDeclaration(196)", "Delete ClassInstanceCreation(197)", "Delete MethodInvocation(198)", "Delete MethodInvocation(199)", "Delete ExpressionStatement(200)", "Delete Block(201)", "Delete EnhancedForStatement(202)", "Delete Block(210)", "Delete MethodDeclaration(211)", "Delete TextElement: Resolves a type by canonical name (member types must be qualified by the type that declares(266)", "Delete TextElement: them, not by types that are inherited into).(267)", "Delete TagElement(268)", "Delete Javadoc(269)", "Delete Modifier: public(270)", "Delete Modifier: static(271)", "Delete SimpleType: ClassSymbol(273)", "Delete SimpleName: lookupCanonical(274)", "Delete SimpleType: Env(276)", "Delete SimpleName: ClassSymbol(277)", "Delete SimpleType: ClassSymbol(278)", "Delete SimpleName: BoundClass(279)", "Delete SimpleType: BoundClass(280)", "Delete WildcardType: ? extends BoundClass(281)", "Delete ParameterizedType: Env<ClassSymbol,? extends BoundClass>(282)", "Delete SimpleName: env(283)", "Delete SingleVariableDeclaration(284)", "Delete VariableDeclarationFragment(298)", "Delete VariableDeclarationStatement(299)", "Delete SimpleName: String(300)", "Delete SimpleType: String(301)", "Delete SimpleName: bit(302)", "Delete SingleVariableDeclaration(303)", "Delete MethodInvocation(306)", "Delete SimpleName: sym(307)", "Delete SimpleName: env(309)", "Delete SimpleName: sym(310)", "Delete MethodInvocation(312)", "Delete Assignment: =(313)", "Delete ExpressionStatement(314)", "Delete InfixExpression: ==(317)", "Delete NullLiteral(318)", "Delete ReturnStatement(319)", "Delete Block(320)", "Delete IfStatement(321)", "Delete Block(322)", "Delete EnhancedForStatement(323)", "Delete SimpleName: sym(324)", "Delete ReturnStatement(325)", "Delete Block(326)", "Delete MethodDeclaration(327)", "Delete TextElement: Resolves a single member type of the given symbol by canonical name. (328)", "Delete TagElement(329)", "Delete Javadoc(330)", "Delete Modifier: private(331)", "Delete Modifier: static(332)", "Delete SimpleType: ClassSymbol(334)", "Delete SimpleName: lookupOneCanonical(335)", "Delete SimpleName: Env(336)", "Delete SimpleType: Env(337)", "Delete SimpleName: ClassSymbol(338)", "Delete SimpleType: ClassSymbol(339)", "Delete SimpleName: BoundClass(340)", "Delete SimpleType: BoundClass(341)", "Delete WildcardType: ? extends BoundClass(342)", "Delete ParameterizedType: Env<ClassSymbol,? extends BoundClass>(343)", "Delete SimpleName: env(344)", "Delete SingleVariableDeclaration(345)", "Delete SimpleName: ClassSymbol(346)", "Delete SimpleType: ClassSymbol(347)", "Delete SimpleName: sym(348)", "Delete SingleVariableDeclaration(349)", "Delete SimpleName: String(350)", "Delete SimpleType: String(351)", "Delete SimpleName: bit(352)", "Delete SingleVariableDeclaration(353)", "Delete MethodDeclaration(389)"]}}, {"MemberImportIndex_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: com.google.turbine.binder.sym.ClassSymbol to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: java.util.Iterator to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.common.collect.Iterables to com.google.common.collect.Iterables.getLast", "operations": ["UPD QualifiedName: com.google.common.collect.Iterables from com.google.common.collect.Iterables to com.google.common.collect.Iterables.getLast"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: classes to VariableDeclarationFragment at 0", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<Supplier<ClassSymbol>> at 0", "INS ParameterizedType: ImmutableList<Supplier<ClassSymbol>> to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: Supplier to ParameterizedType: Supplier<ClassSymbol> at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS ParameterizedType: Supplier<ClassSymbol> to ParameterizedType: ImmutableList<Supplier<ClassSymbol>> at 1", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<ClassSymbol> at 1", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to MethodDeclaration at 4", "INS ParameterizedType: Iterator<ClassSymbol> to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Returns an iterator over all classes whose members are on-demand imported into the current to TagElement at 0", "INS SimpleType: WildcardSymbols to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: WildcardSymbols to SimpleType: WildcardSymbols at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleType: Iterator to ParameterizedType: Iterator<ClassSymbol> at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS TextElement: compilation unit. to TagElement at 1", "INS SimpleName: onDemandImports to MethodDeclaration at 3", "INS SimpleType: ClassSymbol to ParameterizedType: Iterator<ClassSymbol> at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: classes to MethodInvocation at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 8", "operations": ["INS SimpleName: it to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Supplier<ClassSymbol>> at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleType: Iterator to ParameterizedType: Iterator<ClassSymbol> at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParameterizedType: Iterator<Supplier<ClassSymbol>> to SingleVariableDeclaration at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<ClassSymbol> at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ParameterizedType: Supplier<ClassSymbol> to ParameterizedType: Iterator<Supplier<ClassSymbol>> at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<ClassSymbol> at 1", "INS Modifier: public to MethodDeclaration at 0", "INS StringLiteral: \"remove\" to ClassInstanceCreation at 1", "INS SimpleType: Iterator to ParameterizedType: Iterator<Supplier<ClassSymbol>> at 0", "INS SimpleName: remove to MethodDeclaration at 3", "INS ParameterizedType: Supplier<ClassSymbol> to ParameterizedType: Iterator<Supplier<ClassSymbol>> at 1", "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "INS ParameterizedType: Iterator<ClassSymbol> to TypeDeclaration: class at 3", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: it to FieldAccess at 1", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Iterator<ClassSymbol> at 1", "INS ParameterizedType: Iterator<Supplier<ClassSymbol>> to FieldDeclaration at 2", "INS SimpleName: it to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS ThrowStatement to Block at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: it to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleType: Supplier to ParameterizedType: Supplier<ClassSymbol> at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 8", "INS SimpleName: hasNext to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Block to MethodDeclaration at 3", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: it to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleName: it to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: WildcardSymbols to TypeDeclaration: class at 2", "INS SimpleName: WildcardSymbols to MethodDeclaration at 1", "INS SimpleName: hasNext to MethodDeclaration at 3", "INS SimpleName: next to MethodDeclaration at 3", "INS SimpleType: Supplier to ParameterizedType: Supplier<ClassSymbol> at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from Map<String,Supplier<LookupResult>> to Map<String,Supplier<ClassSymbol>>", "operations": ["UPD ParameterizedType: Map<String,Supplier<LookupResult>> from Map<String,Supplier<LookupResult>> to Map<String,Supplier<ClassSymbol>>"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleType: CanonicalSymbolResolver to SingleVariableDeclaration at 0", "INS SimpleName: resolve to SingleVariableDeclaration at 1", "INS SimpleName: CanonicalSymbolResolver to SimpleType: CanonicalSymbolResolver at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "operations": ["INS SimpleType: ClassSymbol to MethodDeclaration at 2", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0"]}, {"root": "INS SimpleName: singleMemberImport to MethodDeclaration at 3", "operations": ["INS SimpleName: singleMemberImport to MethodDeclaration at 3"]}, {"root": "UPDATE from Supplier<LookupResult> to Supplier<ClassSymbol>", "operations": ["UPD ParameterizedType: Supplier<LookupResult> from Supplier<LookupResult> to Supplier<ClassSymbol>", "UPD ParameterizedType: Supplier<LookupResult> from Supplier<LookupResult> to Supplier<ClassSymbol>", "UPD ParameterizedType: Supplier<LookupResult> from Supplier<LookupResult> to Supplier<ClassSymbol>"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 1", "INS ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>> to VariableDeclarationStatement at 0", "INS ParameterizedType: Supplier<ClassSymbol> to ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>> at 1", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<ClassSymbol> at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: packageScopes to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>> at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: packageScopes to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: classes to FieldAccess at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS NullLiteral to ConditionalExpression at 2", "INS ConditionalExpression to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to ConditionalExpression at 1"]}, {"root": "UPDATE from LookupResult to ClassSymbol", "operations": ["UPD SimpleType: LookupResult from LookupResult to ClassSymbol", "UPD SimpleName: LookupResult from LookupResult to ClassSymbol", "UPD SimpleName: LookupKey from LookupKey to ClassSymbol"]}, {"root": "UPDATE from Look up an imported static member by simple name.  to Resolves the owner of a single-member static import of the given simple name. ", "operations": ["UPD TextElement: Look up an imported static member by simple name.  from Look up an imported static member by simple name.  to Resolves the owner of a single-member static import of the given simple name. "]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: get to MethodDeclaration at 3", "INS Block to IfStatement at 2", "INS SimpleName: Suppliers to MethodInvocation at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleName: memoize to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<ClassSymbol> at 1", "INS SimpleName: i to MethodInvocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: wild to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: resolve to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ParameterizedType: Supplier<ClassSymbol> to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: result to InfixExpression: != at 0", "INS ReturnStatement to Block at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: add to MethodInvocation at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: resolve to MethodInvocation at 1", "INS SimpleName: packageScopes to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: result to MethodInvocation at 2"]}, {"root": "UPDATE from LookupResult to Supplier", "operations": ["UPD SimpleName: LookupResult from LookupResult to Supplier", "UPD SimpleType: LookupResult from LookupResult to Supplier", "UPD SimpleType: LookupResult from LookupResult to Supplier", "UPD SimpleName: LookupResult from LookupResult to Supplier"]}, {"root": "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<LookupResult> at 2", "operations": ["INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<LookupResult> at 2"]}, {"root": "UPDATE from result to cachedResult", "operations": ["UPD SimpleName: result from result to cachedResult", "UPD SimpleName: result from result to cachedResult", "UPD SimpleName: result from result to cachedResult"]}, {"root": "MOVE from ParameterizedType: Supplier<ClassSymbol>", "operations": ["MOV SimpleType: Supplier to ParameterizedType: Supplier<ClassSymbol> at 0"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: result to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: result to MethodInvocation at 0", "MOV SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: Supplier<ClassSymbol>", "operations": ["MOV SimpleType: Supplier to ParameterizedType: Supplier<ClassSymbol> at 0"]}, {"root": "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<LookupResult> at 1", "operations": ["INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to ParameterizedType: Supplier<LookupResult> at 1"]}, {"root": "MOVE from SimpleType: ClassSymbol", "operations": ["MOV SimpleName: LookupKey to SimpleType: ClassSymbol at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LookupResult to VariableDeclarationStatement at 0", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS SimpleType: ClassSymbol to MethodDeclaration at 2", "operations": ["INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to MethodDeclaration at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: i to MethodInvocation at 0", "INS SimpleName: result1 to VariableDeclarationFragment at 0", "INS SimpleType: LookupKey to ClassInstanceCreation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: LookupKey to SimpleType: LookupKey at 0", "INS SimpleName: type to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: result1 to InfixExpression: == at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS SimpleName: sym to VariableDeclarationFragment at 0", "INS SimpleName: sym to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result1 to MethodInvocation at 0", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: ClassSymbol to CastExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: ClassSymbol to SimpleType: ClassSymbol at 0", "INS SimpleType: ClassSymbol to VariableDeclarationStatement at 0"]}, {"root": "INS ForStatement to Block at 3", "operations": ["INS SimpleName: resolve to MethodInvocation at 0", "INS SimpleName: result1 to MethodInvocation at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ForStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: resolveOne to MethodInvocation at 1", "INS SimpleName: sym to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS MethodInvocation to InfixExpression: - at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: sym to Assignment: = at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: remaining to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS InfixExpression: < to ForStatement at 1", "INS Block to ForStatement at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to MethodInvocation at 2", "INS SimpleName: result1 to MethodInvocation at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: remaining to MethodInvocation at 1", "INS InfixExpression: - to InfixExpression: < at 1"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS SimpleName: sym to ReturnStatement at 0", "INS ReturnStatement to Block at 4"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LookupResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS SimpleName: result to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: result to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: lookup to MethodInvocation at 1", "INS SimpleName: tli to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tli to MethodInvocation at 0", "MOV SimpleName: lookup to MethodInvocation at 1"]}, {"root": "DEL SimpleName: lookup", "operations": ["DEL SimpleName: lookup"]}, {"root": "DEL SimpleName: Iterables", "operations": ["DEL SimpleName: Iterables"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: lookup"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: LookupKey", "DEL VariableDeclarationStatement"]}, {"root": "DEL SimpleName: lookup", "operations": ["DEL SimpleName: lookup"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL IfStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}]}}, {"MemberImportIndex_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(393) at 1", "Insert ImportDeclaration(11) into CompilationUnit(393) at 5", "Insert ImportDeclaration(15) into CompilationUnit(393) at 7", "Update QualifiedName: com.google.common.collect.Iterables(8) to com.google.common.collect.Iterables.getLast", "Insert QualifiedName: com.google.turbine.binder.sym.ClassSymbol(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.util.Iterator(14) into ImportDeclaration(15) at 0", "Insert FieldDeclaration(59) into TypeDeclaration: class(392) at 4", "Insert MethodDeclaration(312) into TypeDeclaration: class(392) at 7", "Insert TypeDeclaration: class(391) into TypeDeclaration: class(392) at 8", "Update ParameterizedType: Map<String,Supplier<LookupResult>>(35) to Map<String,Supplier<ClassSymbol>>", "Insert Modifier: private(47) into FieldDeclaration(59) at 0", "Insert Modifier: final(48) into FieldDeclaration(59) at 1", "Insert ParameterizedType: ImmutableList<Supplier<ClassSymbol>>(56) into FieldDeclaration(59) at 2", "Insert VariableDeclarationFragment(58) into FieldDeclaration(59) at 3", "Insert SingleVariableDeclaration(65) into MethodDeclaration(258) at 2", "Insert SimpleType: ClassSymbol(264) into MethodDeclaration(292) at 2", "Insert SimpleName: singleMemberImport(265) into MethodDeclaration(292) at 3", "Insert Javadoc(296) into MethodDeclaration(312) at 0", "Insert Modifier: public(297) into MethodDeclaration(312) at 1", "Insert ParameterizedType: Iterator<ClassSymbol>(302) into MethodDeclaration(312) at 2", "Insert SimpleName: onDemandImports(303) into MethodDeclaration(312) at 3", "Insert Block(311) into MethodDeclaration(312) at 4", "Insert Modifier: private(313) into TypeDeclaration: class(391) at 0", "Insert Modifier: static(314) into TypeDeclaration: class(391) at 1", "Insert SimpleName: WildcardSymbols(315) into TypeDeclaration: class(391) at 2", "Insert ParameterizedType: Iterator<ClassSymbol>(320) into TypeDeclaration: class(391) at 3", "Insert FieldDeclaration(333) into TypeDeclaration: class(391) at 4", "Insert MethodDeclaration(353) into TypeDeclaration: class(391) at 5", "Insert MethodDeclaration(364) into TypeDeclaration: class(391) at 6", "Insert MethodDeclaration(378) into TypeDeclaration: class(391) at 7", "Insert MethodDeclaration(390) into TypeDeclaration: class(391) at 8", "Update ParameterizedType: Supplier<LookupResult>(34) to Supplier<ClassSymbol>", "Insert SimpleType: ImmutableList(50) into ParameterizedType: ImmutableList<Supplier<ClassSymbol>>(56) at 0", "Insert ParameterizedType: Supplier<ClassSymbol>(55) into ParameterizedType: ImmutableList<Supplier<ClassSymbol>>(56) at 1", "Insert SimpleName: classes(57) into VariableDeclarationFragment(58) at 0", "Insert SimpleType: CanonicalSymbolResolver(63) into SingleVariableDeclaration(65) at 0", "Insert SimpleName: resolve(64) into SingleVariableDeclaration(65) at 1", "Insert VariableDeclarationStatement(90) into Block(257) at 0", "Insert ExpressionStatement(256) into Block(257) at 2", "Insert SimpleName: ClassSymbol(263) into SimpleType: ClassSymbol(264) at 0", "Insert ReturnStatement(290) into Block(291) at 1", "Insert TagElement(295) into Javadoc(296) at 0", "Insert SimpleType: Iterator(299) into ParameterizedType: Iterator<ClassSymbol>(302) at 0", "Insert SimpleType: ClassSymbol(301) into ParameterizedType: Iterator<ClassSymbol>(302) at 1", "Insert ReturnStatement(310) into Block(311) at 0", "Insert SimpleType: Iterator(317) into ParameterizedType: Iterator<ClassSymbol>(320) at 0", "Insert SimpleType: ClassSymbol(319) into ParameterizedType: Iterator<ClassSymbol>(320) at 1", "Insert Modifier: private(321) into FieldDeclaration(333) at 0", "Insert Modifier: final(322) into FieldDeclaration(333) at 1", "Insert ParameterizedType: Iterator<Supplier<ClassSymbol>>(330) into FieldDeclaration(333) at 2", "Insert VariableDeclarationFragment(332) into FieldDeclaration(333) at 3", "Insert Modifier: public(334) into MethodDeclaration(353) at 0", "Insert SimpleName: WildcardSymbols(335) into MethodDeclaration(353) at 1", "Insert SingleVariableDeclaration(345) into MethodDeclaration(353) at 2", "Insert Block(352) into MethodDeclaration(353) at 3", "Insert MarkerAnnotation(355) into MethodDeclaration(364) at 0", "Insert Modifier: public(356) into MethodDeclaration(364) at 1", "Insert PrimitiveType: boolean(357) into MethodDeclaration(364) at 2", "Insert SimpleName: hasNext(358) into MethodDeclaration(364) at 3", "Insert Block(363) into MethodDeclaration(364) at 4", "Insert MarkerAnnotation(366) into MethodDeclaration(378) at 0", "Insert Modifier: public(367) into MethodDeclaration(378) at 1", "Insert SimpleType: ClassSymbol(369) into MethodDeclaration(378) at 2", "Insert SimpleName: next(370) into MethodDeclaration(378) at 3", "Insert Block(377) into MethodDeclaration(378) at 4", "Insert MarkerAnnotation(380) into MethodDeclaration(390) at 0", "Insert Modifier: public(381) into MethodDeclaration(390) at 1", "Insert PrimitiveType: void(382) into MethodDeclaration(390) at 2", "Insert SimpleName: remove(383) into MethodDeclaration(390) at 3", "Insert Block(389) into MethodDeclaration(390) at 4", "Update SimpleType: LookupResult(33) to ClassSymbol", "Insert SimpleName: ImmutableList(49) into SimpleType: ImmutableList(50) at 0", "Insert SimpleType: Supplier(52) into ParameterizedType: Supplier<ClassSymbol>(55) at 0", "Insert SimpleType: ClassSymbol(54) into ParameterizedType: Supplier<ClassSymbol>(55) at 1", "Insert SimpleName: CanonicalSymbolResolver(62) into SimpleType: CanonicalSymbolResolver(63) at 0", "Insert ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>>(84) into VariableDeclarationStatement(90) at 0", "Insert VariableDeclarationFragment(89) into VariableDeclarationStatement(90) at 1", "Insert Assignment: =(255) into ExpressionStatement(256) at 0", "Update TextElement: Look up an imported static member by simple name. (116) to Resolves the owner of a single-member static import of the given simple name. ", "Update ParameterizedType: Supplier<LookupResult>(131) to Supplier<ClassSymbol>", "Insert ConditionalExpression(289) into ReturnStatement(290) at 0", "Insert TextElement: Returns an iterator over all classes whose members are on-demand imported into the current(293) into TagElement(295) at 0", "Insert TextElement: compilation unit.(294) into TagElement(295) at 1", "Insert SimpleName: Iterator(298) into SimpleType: Iterator(299) at 0", "Insert SimpleName: ClassSymbol(300) into SimpleType: ClassSymbol(301) at 0", "Insert ClassInstanceCreation(309) into ReturnStatement(310) at 0", "Insert SimpleName: Iterator(316) into SimpleType: Iterator(317) at 0", "Insert SimpleName: ClassSymbol(318) into SimpleType: ClassSymbol(319) at 0", "Insert SimpleType: Iterator(324) into ParameterizedType: Iterator<Supplier<ClassSymbol>>(330) at 0", "Insert ParameterizedType: Supplier<ClassSymbol>(329) into ParameterizedType: Iterator<Supplier<ClassSymbol>>(330) at 1", "Insert SimpleName: it(331) into VariableDeclarationFragment(332) at 0", "Insert ParameterizedType: Iterator<Supplier<ClassSymbol>>(343) into SingleVariableDeclaration(345) at 0", "Insert SimpleName: it(344) into SingleVariableDeclaration(345) at 1", "Insert ExpressionStatement(351) into Block(352) at 0", "Insert SimpleName: Override(354) into MarkerAnnotation(355) at 0", "Insert ReturnStatement(362) into Block(363) at 0", "Insert SimpleName: Override(365) into MarkerAnnotation(366) at 0", "Insert SimpleName: ClassSymbol(368) into SimpleType: ClassSymbol(369) at 0", "Insert ReturnStatement(376) into Block(377) at 0", "Insert SimpleName: Override(379) into MarkerAnnotation(380) at 0", "Insert ThrowStatement(388) into Block(389) at 0", "Update SimpleName: LookupResult(32) to ClassSymbol", "Insert SimpleName: Supplier(51) into SimpleType: Supplier(52) at 0", "Insert SimpleName: ClassSymbol(53) into SimpleType: ClassSymbol(54) at 0", "Insert SimpleType: ImmutableList.Builder(78) into ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>>(84) at 0", "Insert ParameterizedType: Supplier<ClassSymbol>(83) into ParameterizedType: ImmutableList.Builder<Supplier<ClassSymbol>>(84) at 1", "Insert SimpleName: packageScopes(85) into VariableDeclarationFragment(89) at 0", "Insert MethodInvocation(88) into VariableDeclarationFragment(89) at 1", "Insert IfStatement(246) into Block(247) at 1", "Insert FieldAccess(251) into Assignment: =(255) at 0", "Insert MethodInvocation(254) into Assignment: =(255) at 1", "Update SimpleType: LookupResult(130) to Supplier", "Insert SimpleType: ClassSymbol(273) into ParameterizedType: Supplier<ClassSymbol>(274) at 1", "Update SimpleName: result(132) to cachedResult", "Insert InfixExpression: !=(284) into ConditionalExpression(289) at 0", "Insert MethodInvocation(287) into ConditionalExpression(289) at 1", "Insert NullLiteral(288) into ConditionalExpression(289) at 2", "Insert SimpleType: WildcardSymbols(305) into ClassInstanceCreation(309) at 0", "Insert MethodInvocation(308) into ClassInstanceCreation(309) at 1", "Insert SimpleName: Iterator(323) into SimpleType: Iterator(324) at 0", "Insert SimpleType: Supplier(326) into ParameterizedType: Supplier<ClassSymbol>(329) at 0", "Insert SimpleType: ClassSymbol(328) into ParameterizedType: Supplier<ClassSymbol>(329) at 1", "Insert SimpleType: Iterator(337) into ParameterizedType: Iterator<Supplier<ClassSymbol>>(343) at 0", "Insert ParameterizedType: Supplier<ClassSymbol>(342) into ParameterizedType: Iterator<Supplier<ClassSymbol>>(343) at 1", "Insert Assignment: =(350) into ExpressionStatement(351) at 0", "Insert MethodInvocation(361) into ReturnStatement(362) at 0", "Insert MethodInvocation(375) into ReturnStatement(376) at 0", "Insert ClassInstanceCreation(387) into ThrowStatement(388) at 0", "Insert QualifiedName: ImmutableList.Builder(77) into SimpleType: ImmutableList.Builder(78) at 0", "Move SimpleType: Supplier(90) into ParameterizedType: Supplier<ClassSymbol>(83) at 0", "Insert SimpleType: ClassSymbol(82) into ParameterizedType: Supplier<ClassSymbol>(83) at 1", "Insert SimpleName: ImmutableList(86) into MethodInvocation(88) at 0", "Insert SimpleName: builder(87) into MethodInvocation(88) at 1", "Insert MethodInvocation(105) into IfStatement(246) at 0", "Insert Block(152) into IfStatement(246) at 1", "Insert Block(245) into IfStatement(246) at 2", "Insert ThisExpression(249) into FieldAccess(251) at 0", "Insert SimpleName: classes(250) into FieldAccess(251) at 1", "Insert SimpleName: packageScopes(252) into MethodInvocation(254) at 0", "Insert SimpleName: build(253) into MethodInvocation(254) at 1", "Update SimpleName: LookupResult(129) to Supplier", "Insert SimpleName: ClassSymbol(272) into SimpleType: ClassSymbol(273) at 0", "Update SimpleName: result(139) to cachedResult", "Move SimpleName: result(139) into InfixExpression: !=(284) at 0", "Move NullLiteral(140) into InfixExpression: !=(284) at 1", "Update SimpleName: result(146) to cachedResult", "Move SimpleName: result(146) into MethodInvocation(287) at 0", "Move SimpleName: get(147) into MethodInvocation(287) at 1", "Insert SimpleName: WildcardSymbols(304) into SimpleType: WildcardSymbols(305) at 0", "Insert SimpleName: classes(306) into MethodInvocation(308) at 0", "Insert SimpleName: iterator(307) into MethodInvocation(308) at 1", "Insert SimpleName: Supplier(325) into SimpleType: Supplier(326) at 0", "Insert SimpleName: ClassSymbol(327) into SimpleType: ClassSymbol(328) at 0", "Insert SimpleName: Iterator(336) into SimpleType: Iterator(337) at 0", "Insert SimpleType: Supplier(339) into ParameterizedType: Supplier<ClassSymbol>(342) at 0", "Insert SimpleType: ClassSymbol(341) into ParameterizedType: Supplier<ClassSymbol>(342) at 1", "Insert FieldAccess(348) into Assignment: =(350) at 0", "Insert SimpleName: it(349) into Assignment: =(350) at 1", "Insert SimpleName: it(359) into MethodInvocation(361) at 0", "Insert SimpleName: hasNext(360) into MethodInvocation(361) at 1", "Insert MethodInvocation(373) into MethodInvocation(375) at 0", "Insert SimpleName: get(374) into MethodInvocation(375) at 1", "Insert SimpleType: UnsupportedOperationException(385) into ClassInstanceCreation(387) at 0", "Insert StringLiteral: \"remove\"(386) into ClassInstanceCreation(387) at 1", "Insert SimpleName: ClassSymbol(81) into SimpleType: ClassSymbol(82) at 0", "Insert SimpleName: i(103) into MethodInvocation(105) at 0", "Insert SimpleName: wild(104) into MethodInvocation(105) at 1", "Insert ExpressionStatement(151) into Block(152) at 0", "Move ExpressionStatement(111) into Block(245) at 0", "Insert SimpleName: Supplier(338) into SimpleType: Supplier(339) at 0", "Insert SimpleName: ClassSymbol(340) into SimpleType: ClassSymbol(341) at 0", "Insert ThisExpression(346) into FieldAccess(348) at 0", "Insert SimpleName: it(347) into FieldAccess(348) at 1", "Insert SimpleName: it(371) into MethodInvocation(373) at 0", "Insert SimpleName: next(372) into MethodInvocation(373) at 1", "Insert SimpleName: UnsupportedOperationException(384) into SimpleType: UnsupportedOperationException(385) at 0", "Insert MethodInvocation(150) into ExpressionStatement(151) at 0", "Insert SimpleName: packageScopes(106) into MethodInvocation(150) at 0", "Insert SimpleName: add(107) into MethodInvocation(150) at 1", "Insert MethodInvocation(149) into MethodInvocation(150) at 2", "Insert SimpleName: Suppliers(108) into MethodInvocation(149) at 0", "Insert SimpleName: memoize(109) into MethodInvocation(149) at 1", "Insert ClassInstanceCreation(148) into MethodInvocation(149) at 2", "Insert ParameterizedType: Supplier<ClassSymbol>(114) into ClassInstanceCreation(148) at 0", "Insert AnonymousClassDeclaration(147) into ClassInstanceCreation(148) at 1", "Update ParameterizedType: Supplier<LookupResult>(93) to Supplier<ClassSymbol>", "Move SimpleType: Supplier(128) into ParameterizedType: Supplier<ClassSymbol>(114) at 0", "Insert SimpleType: ClassSymbol(113) into ParameterizedType: Supplier<ClassSymbol>(114) at 1", "Insert MethodDeclaration(146) into AnonymousClassDeclaration(147) at 0", "Update SimpleType: LookupResult(92) to Supplier", "Insert SimpleType: ClassSymbol(165) into ParameterizedType: Supplier<ClassSymbol>(166) at 1", "Update SimpleName: LookupKey(68) to ClassSymbol", "Move SimpleName: LookupKey(68) into SimpleType: ClassSymbol(113) at 0", "Move MarkerAnnotation(95) into MethodDeclaration(146) at 0", "Insert Modifier: public(117) into MethodDeclaration(146) at 1", "Insert SimpleType: ClassSymbol(119) into MethodDeclaration(146) at 2", "Insert SimpleName: get(120) into MethodDeclaration(146) at 3", "Insert Block(145) into MethodDeclaration(146) at 4", "Update SimpleName: LookupResult(91) to Supplier", "Insert SimpleName: ClassSymbol(164) into SimpleType: ClassSymbol(165) at 0", "Insert MarkerAnnotation(168) into MethodDeclaration(239) at 0", "Insert SimpleType: ClassSymbol(171) into MethodDeclaration(239) at 2", "Insert SimpleName: ClassSymbol(118) into SimpleType: ClassSymbol(119) at 0", "Insert VariableDeclarationStatement(134) into Block(145) at 0", "Insert ReturnStatement(144) into Block(145) at 1", "Insert SimpleName: Override(167) into MarkerAnnotation(168) at 0", "Insert SimpleName: ClassSymbol(170) into SimpleType: ClassSymbol(171) at 0", "Insert VariableDeclarationStatement(186) into Block(238) at 0", "Insert IfStatement(193) into Block(238) at 1", "Insert VariableDeclarationStatement(204) into Block(238) at 2", "Insert ForStatement(235) into Block(238) at 3", "Insert ReturnStatement(237) into Block(238) at 4", "Move SimpleType: LookupResult(121) into VariableDeclarationStatement(134) at 0", "Move VariableDeclarationFragment(77) into VariableDeclarationStatement(134) at 1", "Insert ConditionalExpression(143) into ReturnStatement(144) at 0", "Move SimpleType: LookupResult(98) into VariableDeclarationStatement(186) at 0", "Insert VariableDeclarationFragment(185) into VariableDeclarationStatement(186) at 1", "Insert InfixExpression: ==(189) into IfStatement(193) at 0", "Move Block(144) into IfStatement(193) at 1", "Insert SimpleType: ClassSymbol(195) into VariableDeclarationStatement(204) at 0", "Insert VariableDeclarationFragment(203) into VariableDeclarationStatement(204) at 1", "Insert VariableDeclarationExpression(209) into ForStatement(235) at 0", "Insert InfixExpression: <(218) into ForStatement(235) at 1", "Insert PostfixExpression: ++(220) into ForStatement(235) at 2", "Insert Block(234) into ForStatement(235) at 3", "Insert SimpleName: sym(236) into ReturnStatement(237) at 0", "Insert SimpleName: result(123) into VariableDeclarationFragment(133) at 0", "Insert MethodInvocation(132) into VariableDeclarationFragment(133) at 1", "Insert InfixExpression: !=(137) into ConditionalExpression(143) at 0", "Insert MethodInvocation(141) into ConditionalExpression(143) at 1", "Insert NullLiteral(142) into ConditionalExpression(143) at 2", "Insert SimpleName: result1(175) into VariableDeclarationFragment(185) at 0", "Insert MethodInvocation(184) into VariableDeclarationFragment(185) at 1", "Insert SimpleName: result1(187) into InfixExpression: ==(189) at 0", "Insert NullLiteral(188) into InfixExpression: ==(189) at 1", "Insert SimpleName: ClassSymbol(194) into SimpleType: ClassSymbol(195) at 0", "Insert SimpleName: sym(196) into VariableDeclarationFragment(203) at 0", "Insert CastExpression(202) into VariableDeclarationFragment(203) at 1", "Insert PrimitiveType: int(205) into VariableDeclarationExpression(209) at 0", "Insert VariableDeclarationFragment(208) into VariableDeclarationExpression(209) at 1", "Insert SimpleName: i(210) into InfixExpression: <(218) at 0", "Insert InfixExpression: -(217) into InfixExpression: <(218) at 1", "Insert SimpleName: i(219) into PostfixExpression: ++(220) at 0", "Insert ExpressionStatement(233) into Block(234) at 0", "Insert SimpleName: tli(124) into MethodInvocation(132) at 0", "Insert SimpleName: lookup(125) into MethodInvocation(132) at 1", "Move ClassInstanceCreation(76) into MethodInvocation(132) at 2", "Insert SimpleName: result(135) into InfixExpression: !=(137) at 0", "Insert NullLiteral(136) into InfixExpression: !=(137) at 1", "Insert SimpleName: resolve(138) into MethodInvocation(141) at 0", "Insert SimpleName: resolve(139) into MethodInvocation(141) at 1", "Insert SimpleName: result(140) into MethodInvocation(141) at 2", "Move SimpleName: tli(100) into MethodInvocation(184) at 0", "Move SimpleName: lookup(101) into MethodInvocation(184) at 1", "Insert ClassInstanceCreation(183) into MethodInvocation(184) at 2", "Insert SimpleType: ClassSymbol(198) into CastExpression(202) at 0", "Insert MethodInvocation(201) into CastExpression(202) at 1", "Insert SimpleName: i(206) into VariableDeclarationFragment(208) at 0", "Insert NumberLiteral: 0(207) into VariableDeclarationFragment(208) at 1", "Insert MethodInvocation(215) into InfixExpression: -(217) at 0", "Insert NumberLiteral: 1(216) into InfixExpression: -(217) at 1", "Insert Assignment: =(232) into ExpressionStatement(233) at 0", "Insert SimpleType: LookupKey(179) into ClassInstanceCreation(183) at 0", "Insert MethodInvocation(182) into ClassInstanceCreation(183) at 1", "Insert SimpleName: ClassSymbol(197) into SimpleType: ClassSymbol(198) at 0", "Insert SimpleName: result1(199) into MethodInvocation(201) at 0", "Insert SimpleName: sym(200) into MethodInvocation(201) at 1", "Insert MethodInvocation(213) into MethodInvocation(215) at 0", "Insert SimpleName: size(214) into MethodInvocation(215) at 1", "Insert SimpleName: sym(221) into Assignment: =(232) at 0", "Insert MethodInvocation(231) into Assignment: =(232) at 1", "Insert SimpleName: LookupKey(178) into SimpleType: LookupKey(179) at 0", "Insert SimpleName: i(180) into MethodInvocation(182) at 0", "Insert SimpleName: type(181) into MethodInvocation(182) at 1", "Insert SimpleName: result1(211) into MethodInvocation(213) at 0", "Insert SimpleName: remaining(212) into MethodInvocation(213) at 1", "Insert SimpleName: resolve(222) into MethodInvocation(231) at 0", "Insert SimpleName: resolveOne(223) into MethodInvocation(231) at 1", "Insert SimpleName: sym(224) into MethodInvocation(231) at 2", "Insert MethodInvocation(230) into MethodInvocation(231) at 3", "Insert MethodInvocation(227) into MethodInvocation(230) at 0", "Insert SimpleName: get(228) into MethodInvocation(230) at 1", "Insert SimpleName: i(229) into MethodInvocation(230) at 2", "Insert SimpleName: result1(225) into MethodInvocation(227) at 0", "Insert SimpleName: remaining(226) into MethodInvocation(227) at 1", "Delete SimpleName: lookup(70)", "Delete SimpleName: Iterables(81)", "Delete SimpleName: lookup(102)", "Delete MethodInvocation(103)", "Delete ReturnStatement(104)", "Delete SimpleType: LookupKey(69)", "Delete VariableDeclarationStatement(78)", "Delete SimpleName: lookup(122)", "Delete InfixExpression: ==(141)", "Delete IfStatement(145)", "Delete MethodInvocation(148)", "Delete ReturnStatement(149)"]}}, {"TopLevelIndex_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from Iterable<String> to ImmutableList<String>", "operations": ["UPD ParameterizedType: Iterable<String> from Iterable<String> to ImmutableList<String>"]}, {"root": "UPDATE from Iterable to ImmutableList", "operations": ["UPD SimpleType: Iterable from Iterable to ImmutableList", "UPD SimpleName: Iterable from Iterable to ImmutableList"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: || to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: != to InfixExpression: || at 1"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL IfStatement", "DEL NullLiteral", "DEL Block", "DEL Block"]}]}}, {"TopLevelIndex_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(507) at 2", "Insert QualifiedName: com.google.common.collect.ImmutableList(4) into ImportDeclaration(5) at 0", "Update ParameterizedType: Iterable<String>(397) to ImmutableList<String>", "Update SimpleType: Iterable(394) to ImmutableList", "Insert Block(431) into EnhancedForStatement(432) at 2", "Update SimpleName: Iterable(393) to ImmutableList", "Move ExpressionStatement(417) into Block(431) at 0", "Move IfStatement(433) into Block(431) at 1", "Insert InfixExpression: ||(426) into IfStatement(430) at 0", "Move InfixExpression: ==(420) into InfixExpression: ||(426) at 0", "Move InfixExpression: !=(429) into InfixExpression: ||(426) at 1", "Delete NullLiteral(421)", "Delete ReturnStatement(422)", "Delete Block(423)", "Delete IfStatement(424)", "Delete Block(425)"]}}], "commit_stats": [{"total_files": 15, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}