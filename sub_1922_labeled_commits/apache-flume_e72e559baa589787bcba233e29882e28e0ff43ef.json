{"application": "apache-flume", "csha": "e72e559baa589787bcba233e29882e28e0ff43ef", "files": [{"AbstractRpcSink_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "INS TextElement: <tr> to TagElement at 72", "operations": ["INS TextElement: <tr> to TagElement at 72"]}, {"root": "INS TextElement: <td><tt>compression-type</tt></td> to TagElement at 73", "operations": ["INS TextElement: <td><tt>compression-type</tt></td> to TagElement at 73"]}, {"root": "INS TextElement: <td>Select compression type.  Default is \"none\" and the only compression type available is \"deflate\"</td> to TagElement at 74", "operations": ["INS TextElement: <td>Select compression type.  Default is \"none\" and the only compression type available is \"deflate\"</td> to TagElement at 74"]}, {"root": "INS TextElement: <td>compression type</td> to TagElement at 75", "operations": ["INS TextElement: <td>compression type</td> to TagElement at 75"]}, {"root": "INS TextElement: <td>none</td> to TagElement at 76", "operations": ["INS TextElement: <td>none</td> to TagElement at 76"]}, {"root": "INS TextElement: </tr> to TagElement at 77", "operations": ["INS TextElement: </tr> to TagElement at 77"]}, {"root": "INS TextElement: <tr> to TagElement at 78", "operations": ["INS TextElement: <tr> to TagElement at 78"]}, {"root": "INS TextElement: <td><tt>compression-level</tt></td> to TagElement at 79", "operations": ["INS TextElement: <td><tt>compression-level</tt></td> to TagElement at 79"]}, {"root": "INS TextElement: <td>In the case compression type is \"deflate\" this value can be between 0-9.  0 being no compression and to TagElement at 80", "operations": ["INS TextElement: <td>In the case compression type is \"deflate\" this value can be between 0-9.  0 being no compression and to TagElement at 80"]}, {"root": "INS TextElement: 1-9 is compression.  The higher the number the better the compression.  6 is the default.</td> to TagElement at 81", "operations": ["INS TextElement: 1-9 is compression.  The higher the number the better the compression.  6 is the default.</td> to TagElement at 81"]}, {"root": "INS TextElement: <td>compression level</td> to TagElement at 82", "operations": ["INS TextElement: <td>compression level</td> to TagElement at 82"]}, {"root": "INS TextElement: <td>6</td> to TagElement at 83", "operations": ["INS TextElement: <td>6</td> to TagElement at 83"]}, {"root": "INS TextElement: </tr> to TagElement at 84", "operations": ["INS TextElement: </tr> to TagElement at 84"]}, {"root": "INS EnhancedForStatement to Block at 7", "operations": ["INS EnhancedForStatement to Block at 7", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Entry<String,String> at 2", "INS SimpleName: entrySet to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Entry<String,String> at 1", "INS ParameterizedType: Entry<String,String> to SingleVariableDeclaration at 0", "INS SimpleType: Entry to ParameterizedType: Entry<String,String> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getLong to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getLong to getParameters", "operations": ["UPD SimpleName: getLong from getLong to getParameters"]}, {"root": "UPDATE from Integer to Entry", "operations": ["UPD SimpleName: Integer from Integer to Entry"]}, {"root": "MOVE from SimpleType: Entry", "operations": ["MOV SimpleName: Integer to SimpleType: Entry at 0"]}, {"root": "UPDATE from Long to String", "operations": ["UPD SimpleName: Long from Long to String", "UPD SimpleName: Long from Long to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Long to SimpleType: String at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Long to SimpleType: String at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: entry to MethodInvocation at 0"]}, {"root": "UPDATE from String to entry", "operations": ["UPD SimpleName: String from String to entry"]}, {"root": "UPDATE from valueOf to getValue", "operations": ["UPD SimpleName: valueOf from valueOf to getValue"]}, {"root": "DEL QualifiedName: RpcClientConfigurationConstants.CONFIG_REQUEST_TIMEOUT", "operations": ["DEL QualifiedName: RpcClientConfigurationConstants.CONFIG_REQUEST_TIMEOUT"]}, {"root": "DEL SimpleName: requestTimeout", "operations": ["DEL SimpleName: requestTimeout"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: batchSize", "DEL SimpleType: Integer", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"batch-size\"", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: getInteger", "DEL SimpleName: context"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: setProperty", "DEL NullLiteral", "DEL IfStatement", "DEL SimpleName: batchSize", "DEL QualifiedName: RpcClientConfigurationConstants.CONFIG_BATCH_SIZE", "DEL MethodInvocation", "DEL SimpleName: clientProps", "DEL SimpleName: String", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL Block", "DEL SimpleName: valueOf", "DEL ExpressionStatement", "DEL SimpleName: batchSize"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: connectTimeout", "DEL MethodInvocation", "DEL SimpleName: context", "DEL SimpleName: getLong", "DEL SimpleType: Long", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"connect-timeout\"", "DEL VariableDeclarationFragment"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: connectTimeout", "DEL SimpleName: clientProps", "DEL SimpleName: String", "DEL SimpleName: setProperty", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement", "DEL QualifiedName: RpcClientConfigurationConstants.CONFIG_CONNECT_TIMEOUT", "DEL MethodInvocation", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: valueOf", "DEL NullLiteral", "DEL SimpleName: connectTimeout"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Long", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"request-timeout\"", "DEL VariableDeclarationFragment", "DEL SimpleName: requestTimeout", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: requestTimeout", "DEL IfStatement", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL Block"]}]}}, {"AbstractRpcSink_diff": {"operations": ["Insert ImportDeclaration(35) into CompilationUnit(827) at 17", "Insert QualifiedName: java.util.Map.Entry(34) into ImportDeclaration(35) at 0", "Insert TextElement: <tr>(114) into TagElement(145) at 72", "Insert TextElement: <td><tt>compression-type</tt></td>(115) into TagElement(145) at 73", "Insert TextElement: <td>Select compression type.  Default is \"none\" and the only compression type available is \"deflate\"</td>(116) into TagElement(145) at 74", "Insert TextElement: <td>compression type</td>(117) into TagElement(145) at 75", "Insert TextElement: <td>none</td>(118) into TagElement(145) at 76", "Insert TextElement: </tr>(119) into TagElement(145) at 77", "Insert TextElement: <tr>(120) into TagElement(145) at 78", "Insert TextElement: <td><tt>compression-level</tt></td>(121) into TagElement(145) at 79", "Insert TextElement: <td>In the case compression type is \"deflate\" this value can be between 0-9.  0 being no compression and(122) into TagElement(145) at 80", "Insert TextElement: 1-9 is compression.  The higher the number the better the compression.  6 is the default.</td>(123) into TagElement(145) at 81", "Insert TextElement: <td>compression level</td>(124) into TagElement(145) at 82", "Insert TextElement: <td>6</td>(125) into TagElement(145) at 83", "Insert TextElement: </tr>(126) into TagElement(145) at 84", "Insert EnhancedForStatement(285) into Block(299) at 7", "Insert SingleVariableDeclaration(268) into EnhancedForStatement(285) at 0", "Insert MethodInvocation(273) into EnhancedForStatement(285) at 1", "Insert Block(284) into EnhancedForStatement(285) at 2", "Insert ParameterizedType: Entry<String,String>(266) into SingleVariableDeclaration(268) at 0", "Insert SimpleName: entry(267) into SingleVariableDeclaration(268) at 1", "Insert MethodInvocation(271) into MethodInvocation(273) at 0", "Insert SimpleName: entrySet(272) into MethodInvocation(273) at 1", "Move ExpressionStatement(311) into Block(284) at 0", "Insert SimpleType: Entry(261) into ParameterizedType: Entry<String,String>(266) at 0", "Insert SimpleType: String(263) into ParameterizedType: Entry<String,String>(266) at 1", "Insert SimpleType: String(265) into ParameterizedType: Entry<String,String>(266) at 2", "Move SimpleName: context(294) into MethodInvocation(271) at 0", "Update SimpleName: getLong(295) to getParameters", "Move SimpleName: getLong(295) into MethodInvocation(271) at 1", "Update SimpleName: Integer(245) to Entry", "Move SimpleName: Integer(245) into SimpleType: Entry(261) at 0", "Update SimpleName: Long(268) to String", "Move SimpleName: Long(268) into SimpleType: String(263) at 0", "Update SimpleName: Long(291) to String", "Move SimpleName: Long(291) into SimpleType: String(265) at 0", "Insert MethodInvocation(278) into MethodInvocation(282) at 2", "Insert SimpleName: entry(276) into MethodInvocation(278) at 0", "Insert SimpleName: getKey(277) into MethodInvocation(278) at 1", "Update SimpleName: String(306) to entry", "Update SimpleName: valueOf(307) to getValue", "Delete QualifiedName: RpcClientConfigurationConstants.CONFIG_REQUEST_TIMEOUT(305)", "Delete SimpleName: requestTimeout(308)", "Delete SimpleType: Integer(246)", "Delete SimpleName: batchSize(247)", "Delete SimpleName: context(248)", "Delete SimpleName: getInteger(249)", "Delete StringLiteral: \"batch-size\"(250)", "Delete MethodInvocation(251)", "Delete VariableDeclarationFragment(252)", "Delete VariableDeclarationStatement(253)", "Delete SimpleName: batchSize(254)", "Delete NullLiteral(255)", "Delete InfixExpression: !=(256)", "Delete SimpleName: clientProps(257)", "Delete SimpleName: setProperty(258)", "Delete QualifiedName: RpcClientConfigurationConstants.CONFIG_BATCH_SIZE(259)", "Delete SimpleName: String(260)", "Delete SimpleName: valueOf(261)", "Delete SimpleName: batchSize(262)", "Delete MethodInvocation(263)", "Delete MethodInvocation(264)", "Delete ExpressionStatement(265)", "Delete Block(266)", "Delete IfStatement(267)", "Delete SimpleType: Long(269)", "Delete SimpleName: connectTimeout(270)", "Delete SimpleName: context(271)", "Delete SimpleName: getLong(272)", "Delete StringLiteral: \"connect-timeout\"(273)", "Delete MethodInvocation(274)", "Delete VariableDeclarationFragment(275)", "Delete VariableDeclarationStatement(276)", "Delete SimpleName: connectTimeout(277)", "Delete NullLiteral(278)", "Delete InfixExpression: !=(279)", "Delete SimpleName: clientProps(280)", "Delete SimpleName: setProperty(281)", "Delete QualifiedName: RpcClientConfigurationConstants.CONFIG_CONNECT_TIMEOUT(282)", "Delete SimpleName: String(283)", "Delete SimpleName: valueOf(284)", "Delete SimpleName: connectTimeout(285)", "Delete MethodInvocation(286)", "Delete MethodInvocation(287)", "Delete ExpressionStatement(288)", "Delete Block(289)", "Delete IfStatement(290)", "Delete SimpleType: Long(292)", "Delete SimpleName: requestTimeout(293)", "Delete StringLiteral: \"request-timeout\"(296)", "Delete MethodInvocation(297)", "Delete VariableDeclarationFragment(298)", "Delete VariableDeclarationStatement(299)", "Delete SimpleName: requestTimeout(300)", "Delete NullLiteral(301)", "Delete InfixExpression: !=(302)", "Delete Block(312)", "Delete IfStatement(313)"]}}, {"AvroSource_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: org.jboss.netty.channel.ChannelPipelineFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS ImportDeclaration to CompilationUnit at 28", "operations": ["INS ImportDeclaration to CompilationUnit at 28", "INS QualifiedName: org.jboss.netty.channel.ChannelPipeline to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 30", "operations": ["INS QualifiedName: org.jboss.netty.channel.Channels to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 30"]}, {"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: org.jboss.netty.handler.codec.compression.ZlibDecoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS QualifiedName: org.jboss.netty.handler.codec.compression.ZlibEncoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 32"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: COMPRESSION_TYPE to VariableDeclarationFragment at 0", "INS StringLiteral: \"compression-type\" to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 1", "INS SimpleName: compressionType to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: Executors to MethodInvocation at 0", "INS SimpleType: NioServerSocketChannelFactory to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: NioServerSocketChannelFactory to SimpleType: NioServerSocketChannelFactory at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS Block to IfStatement at 2", "INS ReturnStatement to Block at 2", "INS Modifier: private to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: socketChannelFactory to ReturnStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: socketChannelFactory to VariableDeclarationFragment at 0", "INS SimpleType: NioServerSocketChannelFactory to ClassInstanceCreation at 0", "INS SimpleName: initSocketChannelFactory to MethodDeclaration at 2", "INS SimpleName: newCachedThreadPool to MethodInvocation at 1", "INS SimpleName: NioServerSocketChannelFactory to SimpleType: NioServerSocketChannelFactory at 0", "INS SimpleName: newCachedThreadPool to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleType: NioServerSocketChannelFactory to MethodDeclaration at 1", "INS SimpleName: socketChannelFactory to Assignment: = at 0", "INS SimpleName: socketChannelFactory to Assignment: = at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: Executors to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: NioServerSocketChannelFactory to SimpleType: NioServerSocketChannelFactory at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS Block to IfStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: CompressionChannelPipelineFactory to ClassInstanceCreation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: CompressionChannelPipelineFactory to SimpleType: CompressionChannelPipelineFactory at 0", "INS IfStatement to Block at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: ChannelPipelineFactory to ClassInstanceCreation at 0", "INS SimpleName: compressionType to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ChannelPipeline to SimpleType: ChannelPipeline at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: Channels to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: ChannelPipelineFactory to MethodDeclaration at 1", "INS SimpleName: ChannelPipelineFactory to SimpleType: ChannelPipelineFactory at 0", "INS SimpleName: pipelineFactory to Assignment: = at 0", "INS SimpleName: ChannelPipelineFactory to SimpleType: ChannelPipelineFactory at 0", "INS SimpleName: pipelineFactory to VariableDeclarationFragment at 0", "INS SimpleName: pipelineFactory to Assignment: = at 0", "INS SimpleName: pipelineFactory to ReturnStatement at 0", "INS SimpleType: ChannelPipeline to MethodDeclaration at 2", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: ChannelPipelineFactory to VariableDeclarationStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: ChannelPipelineFactory to SimpleType: ChannelPipelineFactory at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS StringLiteral: \"deflate\" to MethodInvocation at 2", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: getPipeline to MethodDeclaration at 3", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: initChannelPipelineFactory to MethodDeclaration at 2", "INS SimpleName: pipeline to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 28", "operations": ["INS SimpleName: getPipeline to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: encoder to VariableDeclarationFragment at 0", "INS SimpleName: Channels to MethodInvocation at 0", "INS SimpleName: pipeline to MethodInvocation at 0", "INS StringLiteral: \"deflater\" to MethodInvocation at 2", "INS Modifier: private to TypeDeclaration: class at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: ChannelPipeline to SimpleType: ChannelPipeline at 0", "INS SimpleName: pipeline to VariableDeclarationFragment at 0", "INS SimpleName: addFirst to MethodInvocation at 1", "INS SimpleName: ZlibEncoder to SimpleType: ZlibEncoder at 0", "INS SimpleName: addFirst to MethodInvocation at 1", "INS SimpleType: ZlibEncoder to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ChannelPipelineFactory to TypeDeclaration: class at 3", "INS SimpleName: pipeline to MethodInvocation at 1", "INS SimpleType: ChannelPipeline to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 6 to ClassInstanceCreation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: ChannelPipelineFactory to SimpleType: ChannelPipelineFactory at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: ZlibDecoder to SimpleType: ZlibDecoder at 0", "INS StringLiteral: \"inflater\" to MethodInvocation at 2", "INS SimpleName: encoder to MethodInvocation at 3", "INS SimpleType: ChannelPipeline to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: pipeline to MethodInvocation at 0", "INS ReturnStatement to Block at 4", "INS SimpleType: ZlibDecoder to ClassInstanceCreation at 0", "INS SimpleName: ChannelPipeline to SimpleType: ChannelPipeline at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: pipeline to ReturnStatement at 0", "INS SimpleName: CompressionChannelPipelineFactory to TypeDeclaration: class at 2", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: ZlibEncoder to VariableDeclarationStatement at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 28", "INS SimpleName: ZlibEncoder to SimpleType: ZlibEncoder at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: Exception to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: getString to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \"none\" to MethodInvocation at 3", "INS SimpleName: compressionType to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: context to MethodInvocation at 0", "INS SimpleName: COMPRESSION_TYPE to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: NioServerSocketChannelFactory to VariableDeclarationStatement at 0", "INS SimpleName: socketChannelFactory to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: initSocketChannelFactory to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleType: ChannelPipelineFactory to VariableDeclarationStatement at 0", "INS SimpleName: pipelineFactory to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: initChannelPipelineFactory to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: <= to IfStatement at 0"]}, {"root": "UPDATE from NettyServer to NioServerSocketChannelFactory", "operations": ["UPD SimpleName: NettyServer from NettyServer to NioServerSocketChannelFactory"]}, {"root": "MOVE from SimpleType: NioServerSocketChannelFactory", "operations": ["MOV SimpleName: NettyServer to SimpleType: NioServerSocketChannelFactory at 0"]}, {"root": "UPDATE from InetSocketAddress to ChannelPipelineFactory", "operations": ["UPD SimpleName: InetSocketAddress from InetSocketAddress to ChannelPipelineFactory"]}, {"root": "MOVE from SimpleType: ChannelPipelineFactory", "operations": ["MOV SimpleName: InetSocketAddress to SimpleType: ChannelPipelineFactory at 0"]}, {"root": "INS SimpleName: socketChannelFactory to ClassInstanceCreation at 3", "operations": ["INS SimpleName: socketChannelFactory to ClassInstanceCreation at 3"]}, {"root": "INS SimpleName: pipelineFactory to ClassInstanceCreation at 4", "operations": ["INS SimpleName: pipelineFactory to ClassInstanceCreation at 4"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 5", "operations": ["INS NullLiteral to ClassInstanceCreation at 5"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: server", "DEL ExpressionStatement", "DEL SimpleName: port", "DEL SimpleType: NettyServer", "DEL Assignment: =", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: bindAddress", "DEL SimpleName: responder", "DEL SimpleType: InetSocketAddress", "DEL Block", "DEL Block"]}]}}, {"AvroSource_diff": {"operations": ["Insert ImportDeclaration(55) into CompilationUnit(968) at 27", "Insert ImportDeclaration(57) into CompilationUnit(968) at 28", "Insert ImportDeclaration(61) into CompilationUnit(968) at 30", "Insert ImportDeclaration(63) into CompilationUnit(968) at 31", "Insert ImportDeclaration(65) into CompilationUnit(968) at 32", "Insert QualifiedName: org.jboss.netty.channel.ChannelPipelineFactory(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: org.jboss.netty.channel.ChannelPipeline(56) into ImportDeclaration(57) at 0", "Insert QualifiedName: org.jboss.netty.channel.Channels(60) into ImportDeclaration(61) at 0", "Insert QualifiedName: org.jboss.netty.handler.codec.compression.ZlibDecoder(62) into ImportDeclaration(63) at 0", "Insert QualifiedName: org.jboss.netty.handler.codec.compression.ZlibEncoder(64) into ImportDeclaration(65) at 0", "Insert FieldDeclaration(195) into TypeDeclaration: class(967) at 11", "Insert FieldDeclaration(212) into TypeDeclaration: class(967) at 14", "Insert MethodDeclaration(473) into TypeDeclaration: class(967) at 21", "Insert MethodDeclaration(520) into TypeDeclaration: class(967) at 22", "Insert TypeDeclaration: class(966) into TypeDeclaration: class(967) at 28", "Insert Modifier: private(187) into FieldDeclaration(195) at 0", "Insert Modifier: static(188) into FieldDeclaration(195) at 1", "Insert Modifier: final(189) into FieldDeclaration(195) at 2", "Insert SimpleType: String(191) into FieldDeclaration(195) at 3", "Insert VariableDeclarationFragment(194) into FieldDeclaration(195) at 4", "Insert Modifier: private(207) into FieldDeclaration(212) at 0", "Insert SimpleType: String(209) into FieldDeclaration(212) at 1", "Insert VariableDeclarationFragment(211) into FieldDeclaration(212) at 2", "Insert Modifier: private(430) into MethodDeclaration(473) at 0", "Insert SimpleType: NioServerSocketChannelFactory(432) into MethodDeclaration(473) at 1", "Insert SimpleName: initSocketChannelFactory(433) into MethodDeclaration(473) at 2", "Insert Block(472) into MethodDeclaration(473) at 3", "Insert Modifier: private(474) into MethodDeclaration(520) at 0", "Insert SimpleType: ChannelPipelineFactory(476) into MethodDeclaration(520) at 1", "Insert SimpleName: initChannelPipelineFactory(477) into MethodDeclaration(520) at 2", "Insert Block(519) into MethodDeclaration(520) at 3", "Insert Modifier: private(918) into TypeDeclaration: class(966) at 0", "Insert Modifier: static(919) into TypeDeclaration: class(966) at 1", "Insert SimpleName: CompressionChannelPipelineFactory(920) into TypeDeclaration: class(966) at 2", "Insert SimpleType: ChannelPipelineFactory(922) into TypeDeclaration: class(966) at 3", "Insert MethodDeclaration(965) into TypeDeclaration: class(966) at 4", "Insert SimpleName: String(190) into SimpleType: String(191) at 0", "Insert SimpleName: COMPRESSION_TYPE(192) into VariableDeclarationFragment(194) at 0", "Insert StringLiteral: \"compression-type\"(193) into VariableDeclarationFragment(194) at 1", "Insert SimpleName: String(208) into SimpleType: String(209) at 0", "Insert SimpleName: compressionType(210) into VariableDeclarationFragment(211) at 0", "Insert ExpressionStatement(273) into Block(312) at 3", "Insert VariableDeclarationStatement(343) into Block(428) at 2", "Insert VariableDeclarationStatement(350) into Block(428) at 3", "Move ExpressionStatement(341) into Block(428) at 4", "Insert SimpleName: NioServerSocketChannelFactory(431) into SimpleType: NioServerSocketChannelFactory(432) at 0", "Insert VariableDeclarationStatement(438) into Block(472) at 0", "Insert IfStatement(469) into Block(472) at 1", "Insert ReturnStatement(471) into Block(472) at 2", "Insert SimpleName: ChannelPipelineFactory(475) into SimpleType: ChannelPipelineFactory(476) at 0", "Insert VariableDeclarationStatement(482) into Block(519) at 0", "Insert IfStatement(516) into Block(519) at 1", "Insert ReturnStatement(518) into Block(519) at 2", "Insert SimpleName: ChannelPipelineFactory(921) into SimpleType: ChannelPipelineFactory(922) at 0", "Insert MarkerAnnotation(924) into MethodDeclaration(965) at 0", "Insert Modifier: public(925) into MethodDeclaration(965) at 1", "Insert SimpleType: ChannelPipeline(927) into MethodDeclaration(965) at 2", "Insert SimpleName: getPipeline(928) into MethodDeclaration(965) at 3", "Insert SimpleType: Exception(930) into MethodDeclaration(965) at 4", "Insert Block(964) into MethodDeclaration(965) at 5", "Insert Assignment: =(272) into ExpressionStatement(273) at 0", "Insert SimpleType: NioServerSocketChannelFactory(338) into VariableDeclarationStatement(343) at 0", "Insert VariableDeclarationFragment(342) into VariableDeclarationStatement(343) at 1", "Insert SimpleType: ChannelPipelineFactory(345) into VariableDeclarationStatement(350) at 0", "Insert VariableDeclarationFragment(349) into VariableDeclarationStatement(350) at 1", "Insert SimpleType: NioServerSocketChannelFactory(435) into VariableDeclarationStatement(438) at 0", "Insert VariableDeclarationFragment(437) into VariableDeclarationStatement(438) at 1", "Move InfixExpression: <=(306) into IfStatement(469) at 0", "Insert Block(454) into IfStatement(469) at 1", "Insert Block(468) into IfStatement(469) at 2", "Insert SimpleName: socketChannelFactory(470) into ReturnStatement(471) at 0", "Insert SimpleType: ChannelPipelineFactory(479) into VariableDeclarationStatement(482) at 0", "Insert VariableDeclarationFragment(481) into VariableDeclarationStatement(482) at 1", "Insert MethodInvocation(486) into IfStatement(516) at 0", "Insert Block(493) into IfStatement(516) at 1", "Insert Block(515) into IfStatement(516) at 2", "Insert SimpleName: pipelineFactory(517) into ReturnStatement(518) at 0", "Insert SimpleName: Override(923) into MarkerAnnotation(924) at 0", "Insert SimpleName: ChannelPipeline(926) into SimpleType: ChannelPipeline(927) at 0", "Insert SimpleName: Exception(929) into SimpleType: Exception(930) at 0", "Insert VariableDeclarationStatement(938) into Block(964) at 0", "Insert VariableDeclarationStatement(947) into Block(964) at 1", "Insert ExpressionStatement(953) into Block(964) at 2", "Insert ExpressionStatement(961) into Block(964) at 3", "Insert ReturnStatement(963) into Block(964) at 4", "Insert SimpleName: compressionType(266) into Assignment: =(272) at 0", "Insert MethodInvocation(271) into Assignment: =(272) at 1", "Update SimpleName: NettyServer(308) to NioServerSocketChannelFactory", "Move SimpleName: NettyServer(308) into SimpleType: NioServerSocketChannelFactory(338) at 0", "Insert SimpleName: socketChannelFactory(339) into VariableDeclarationFragment(342) at 0", "Insert MethodInvocation(341) into VariableDeclarationFragment(342) at 1", "Update SimpleName: InetSocketAddress(311) to ChannelPipelineFactory", "Move SimpleName: InetSocketAddress(311) into SimpleType: ChannelPipelineFactory(345) at 0", "Insert SimpleName: pipelineFactory(346) into VariableDeclarationFragment(349) at 0", "Insert MethodInvocation(348) into VariableDeclarationFragment(349) at 1", "Insert SimpleName: NioServerSocketChannelFactory(434) into SimpleType: NioServerSocketChannelFactory(435) at 0", "Insert SimpleName: socketChannelFactory(436) into VariableDeclarationFragment(437) at 0", "Insert ExpressionStatement(453) into Block(454) at 0", "Insert ExpressionStatement(467) into Block(468) at 0", "Insert SimpleName: ChannelPipelineFactory(478) into SimpleType: ChannelPipelineFactory(479) at 0", "Insert SimpleName: pipelineFactory(480) into VariableDeclarationFragment(481) at 0", "Insert SimpleName: compressionType(483) into MethodInvocation(486) at 0", "Insert SimpleName: equalsIgnoreCase(484) into MethodInvocation(486) at 1", "Insert StringLiteral: \"deflate\"(485) into MethodInvocation(486) at 2", "Insert ExpressionStatement(492) into Block(493) at 0", "Insert ExpressionStatement(514) into Block(515) at 0", "Insert SimpleType: ChannelPipeline(932) into VariableDeclarationStatement(938) at 0", "Insert VariableDeclarationFragment(937) into VariableDeclarationStatement(938) at 1", "Insert SimpleType: ZlibEncoder(940) into VariableDeclarationStatement(947) at 0", "Insert VariableDeclarationFragment(946) into VariableDeclarationStatement(947) at 1", "Insert MethodInvocation(952) into ExpressionStatement(953) at 0", "Insert MethodInvocation(960) into ExpressionStatement(961) at 0", "Insert SimpleName: pipeline(962) into ReturnStatement(963) at 0", "Insert SimpleName: context(267) into MethodInvocation(271) at 0", "Insert SimpleName: getString(268) into MethodInvocation(271) at 1", "Insert SimpleName: COMPRESSION_TYPE(269) into MethodInvocation(271) at 2", "Insert StringLiteral: \"none\"(270) into MethodInvocation(271) at 3", "Insert SimpleName: initSocketChannelFactory(340) into MethodInvocation(341) at 0", "Insert SimpleName: initChannelPipelineFactory(347) into MethodInvocation(348) at 0", "Insert SimpleName: socketChannelFactory(360) into ClassInstanceCreation(363) at 3", "Insert SimpleName: pipelineFactory(361) into ClassInstanceCreation(363) at 4", "Insert NullLiteral(362) into ClassInstanceCreation(363) at 5", "Insert Assignment: =(452) into ExpressionStatement(453) at 0", "Insert Assignment: =(466) into ExpressionStatement(467) at 0", "Insert Assignment: =(491) into ExpressionStatement(492) at 0", "Insert Assignment: =(513) into ExpressionStatement(514) at 0", "Insert SimpleName: ChannelPipeline(931) into SimpleType: ChannelPipeline(932) at 0", "Insert SimpleName: pipeline(933) into VariableDeclarationFragment(937) at 0", "Insert MethodInvocation(936) into VariableDeclarationFragment(937) at 1", "Insert SimpleName: ZlibEncoder(939) into SimpleType: ZlibEncoder(940) at 0", "Insert SimpleName: encoder(941) into VariableDeclarationFragment(946) at 0", "Insert ClassInstanceCreation(945) into VariableDeclarationFragment(946) at 1", "Insert SimpleName: pipeline(948) into MethodInvocation(952) at 0", "Insert SimpleName: addFirst(949) into MethodInvocation(952) at 1", "Insert StringLiteral: \"deflater\"(950) into MethodInvocation(952) at 2", "Insert SimpleName: encoder(951) into MethodInvocation(952) at 3", "Insert SimpleName: pipeline(954) into MethodInvocation(960) at 0", "Insert SimpleName: addFirst(955) into MethodInvocation(960) at 1", "Insert StringLiteral: \"inflater\"(956) into MethodInvocation(960) at 2", "Insert ClassInstanceCreation(959) into MethodInvocation(960) at 3", "Insert SimpleName: socketChannelFactory(442) into Assignment: =(452) at 0", "Insert ClassInstanceCreation(451) into Assignment: =(452) at 1", "Insert SimpleName: socketChannelFactory(455) into Assignment: =(466) at 0", "Move ClassInstanceCreation(338) into Assignment: =(466) at 1", "Insert SimpleName: pipelineFactory(487) into Assignment: =(491) at 0", "Insert ClassInstanceCreation(490) into Assignment: =(491) at 1", "Insert SimpleName: pipelineFactory(494) into Assignment: =(513) at 0", "Insert ClassInstanceCreation(512) into Assignment: =(513) at 1", "Insert SimpleName: Channels(934) into MethodInvocation(936) at 0", "Insert SimpleName: pipeline(935) into MethodInvocation(936) at 1", "Insert SimpleType: ZlibEncoder(943) into ClassInstanceCreation(945) at 0", "Insert NumberLiteral: 6(944) into ClassInstanceCreation(945) at 1", "Insert SimpleType: ZlibDecoder(958) into ClassInstanceCreation(959) at 0", "Insert SimpleType: NioServerSocketChannelFactory(444) into ClassInstanceCreation(451) at 0", "Insert MethodInvocation(447) into ClassInstanceCreation(451) at 1", "Insert MethodInvocation(450) into ClassInstanceCreation(451) at 2", "Insert SimpleType: CompressionChannelPipelineFactory(489) into ClassInstanceCreation(490) at 0", "Insert SimpleType: ChannelPipelineFactory(496) into ClassInstanceCreation(512) at 0", "Insert AnonymousClassDeclaration(511) into ClassInstanceCreation(512) at 1", "Insert SimpleName: ZlibEncoder(942) into SimpleType: ZlibEncoder(943) at 0", "Insert SimpleName: ZlibDecoder(957) into SimpleType: ZlibDecoder(958) at 0", "Insert SimpleName: NioServerSocketChannelFactory(443) into SimpleType: NioServerSocketChannelFactory(444) at 0", "Insert SimpleName: Executors(445) into MethodInvocation(447) at 0", "Insert SimpleName: newCachedThreadPool(446) into MethodInvocation(447) at 1", "Insert SimpleName: Executors(448) into MethodInvocation(450) at 0", "Insert SimpleName: newCachedThreadPool(449) into MethodInvocation(450) at 1", "Insert SimpleName: CompressionChannelPipelineFactory(488) into SimpleType: CompressionChannelPipelineFactory(489) at 0", "Insert SimpleName: ChannelPipelineFactory(495) into SimpleType: ChannelPipelineFactory(496) at 0", "Insert MethodDeclaration(510) into AnonymousClassDeclaration(511) at 0", "Insert MarkerAnnotation(498) into MethodDeclaration(510) at 0", "Insert Modifier: public(499) into MethodDeclaration(510) at 1", "Insert SimpleType: ChannelPipeline(501) into MethodDeclaration(510) at 2", "Insert SimpleName: getPipeline(502) into MethodDeclaration(510) at 3", "Insert SimpleType: Exception(504) into MethodDeclaration(510) at 4", "Insert Block(509) into MethodDeclaration(510) at 5", "Insert SimpleName: Override(497) into MarkerAnnotation(498) at 0", "Insert SimpleName: ChannelPipeline(500) into SimpleType: ChannelPipeline(501) at 0", "Insert SimpleName: Exception(503) into SimpleType: Exception(504) at 0", "Insert ReturnStatement(508) into Block(509) at 0", "Insert MethodInvocation(507) into ReturnStatement(508) at 0", "Insert SimpleName: Channels(505) into MethodInvocation(507) at 0", "Insert SimpleName: pipeline(506) into MethodInvocation(507) at 1", "Delete SimpleName: server(307)", "Delete SimpleType: NettyServer(309)", "Delete SimpleName: responder(310)", "Delete SimpleType: InetSocketAddress(312)", "Delete SimpleName: bindAddress(313)", "Delete SimpleName: port(314)", "Delete ClassInstanceCreation(315)", "Delete ClassInstanceCreation(316)", "Delete Assignment: =(317)", "Delete ExpressionStatement(318)", "Delete Block(319)", "Delete Block(342)", "Delete IfStatement(343)"]}}, {"NettyAvroRpcClient_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.util.concurrent.Executor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS ImportDeclaration to CompilationUnit at 34", "INS QualifiedName: org.jboss.netty.channel.ChannelFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 35", "operations": ["INS QualifiedName: org.jboss.netty.channel.ChannelPipeline to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 35"]}, {"root": "INS ImportDeclaration to CompilationUnit at 36", "operations": ["INS QualifiedName: org.jboss.netty.channel.socket.SocketChannel to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 36"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS QualifiedName: org.jboss.netty.handler.codec.compression.ZlibDecoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 38"]}, {"root": "INS ImportDeclaration to CompilationUnit at 39", "operations": ["INS ImportDeclaration to CompilationUnit at 39", "INS QualifiedName: org.jboss.netty.handler.codec.compression.ZlibEncoder to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: enableDeflateCompression to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS PrimitiveType: int to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: compressionLevel to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 13", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 31", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: compressionLevel to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: encoder to MethodInvocation at 3", "INS SimpleName: ChannelPipeline to SimpleType: ChannelPipeline at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: ZlibEncoder to SimpleType: ZlibEncoder at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: pipeline to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: pipeline to SingleVariableDeclaration at 1", "INS SimpleName: ZlibDecoder to SimpleType: ZlibDecoder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS StringLiteral: \"inflater\" to MethodInvocation at 2", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleType: ChannelPipeline to SingleVariableDeclaration at 0", "INS SimpleName: workerExecutor to SuperConstructorInvocation at 1", "INS StringLiteral: \"deflater\" to MethodInvocation at 2", "INS SimpleName: compressionLevel to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Executor to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: NioClientSocketChannelFactory to SimpleType: NioClientSocketChannelFactory at 0", "INS SimpleName: pipeline to MethodInvocation at 0", "INS SimpleName: SocketChannel to SimpleType: SocketChannel at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: ZlibEncoder to VariableDeclarationStatement at 0", "INS SimpleName: encoder to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ex to ClassInstanceCreation at 2", "INS SimpleName: CompressionChannelFactory to TypeDeclaration: class at 2", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: workerExecutor to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: pipeline to SuperMethodInvocation at 1", "INS SimpleType: SocketChannel to MethodDeclaration at 2", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Executor to SimpleType: Executor at 0", "INS SimpleName: addFirst to MethodInvocation at 1", "INS SuperMethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: newChannel to SuperMethodInvocation at 0", "INS SimpleName: bossExecutor to SingleVariableDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleType: Executor to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: compressionLevel to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleName: addFirst to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 31", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: compressionLevel to FieldAccess at 1", "INS Block to CatchClause at 1", "INS SimpleName: ZlibEncoder to SimpleType: ZlibEncoder at 0", "INS SimpleName: CompressionChannelFactory to MethodDeclaration at 1", "INS SimpleType: NioClientSocketChannelFactory to TypeDeclaration: class at 3", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Block to MethodDeclaration at 5", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Executor to SimpleType: Executor at 0", "INS Block to TryStatement at 0", "INS ReturnStatement to Block at 3", "INS PrimitiveType: int to FieldDeclaration at 1", "INS SimpleType: ZlibEncoder to ClassInstanceCreation at 0", "INS TryStatement to Block at 0", "INS StringLiteral: \"Cannot create Compression channel\" to ClassInstanceCreation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS SimpleType: ZlibDecoder to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: bossExecutor to SuperConstructorInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: newChannel to MethodDeclaration at 3", "INS SimpleName: compressionLevel to Assignment: = at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 23", "operations": ["INS SimpleName: enableCompressionStr to VariableDeclarationFragment at 0", "INS QualifiedName: RpcClientConfigurationConstants.CONFIG_COMPRESSION_TYPE to MethodInvocation at 2", "INS SimpleName: getProperty to MethodInvocation at 1", "INS SimpleName: properties to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 23", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 24", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: getProperty to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS QualifiedName: RpcClientConfigurationConstants.CONFIG_COMPRESSION_LEVEL to MethodInvocation at 2", "INS SimpleName: enableCompressionStr to InfixExpression: != at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: compressionLvlStr to MethodInvocation at 2", "INS SimpleName: compressionLvlStr to InfixExpression: != at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"Invalid compression level: \" to InfixExpression: + at 0", "INS SimpleName: properties to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: NumberFormatException to SimpleType: NumberFormatException at 0", "INS VariableDeclarationStatement to Block at 1", "INS Block to CatchClause at 1", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: enableCompressionStr to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: enableDeflateCompression to FieldAccess at 1", "INS SimpleName: compressionLvlStr to VariableDeclarationFragment at 0", "INS StringLiteral: \"deflate\" to MethodInvocation at 2", "INS SimpleName: Integer to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS TryStatement to Block at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS CatchClause to TryStatement at 1", "INS QualifiedName: RpcClientConfigurationConstants.DEFAULT_COMPRESSION_LEVEL to Assignment: = at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: compressionLevel to Assignment: = at 0", "INS SimpleName: compressionLvlStr to InfixExpression: + at 1", "INS SimpleType: NumberFormatException to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 24", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: compressionLevel to Assignment: = at 0", "INS Block to TryStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS IfStatement to Block at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: TransceiverThreadFactory to ClassInstanceCreation at 0", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleType: NioClientSocketChannelFactory to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: socketChannelFactory to ClassInstanceCreation at 2", "INS SimpleName: CompressionChannelFactory to SimpleType: CompressionChannelFactory at 0", "INS StringLiteral: \" Boss\" to InfixExpression: + at 2", "INS StringLiteral: \"Avro \" to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: NettyTransceiver to SimpleType: NettyTransceiver at 0", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleName: Executors to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: newCachedThreadPool to MethodInvocation at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: Executors to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: socketChannelFactory to Assignment: = at 0", "INS SimpleName: TransceiverThreadFactory to SimpleType: TransceiverThreadFactory at 0", "INS StringLiteral: \"Avro \" to InfixExpression: + at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: compressionLevel to ClassInstanceCreation at 3", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: CompressionChannelFactory to ClassInstanceCreation at 0", "INS SimpleName: NettyTransceiver to SimpleType: NettyTransceiver at 0", "INS SimpleName: NioClientSocketChannelFactory to SimpleType: NioClientSocketChannelFactory at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: enableDeflateCompression to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleType: NettyTransceiver to TypeLiteral at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: socketChannelFactory to VariableDeclarationFragment at 0", "INS SimpleName: TransceiverThreadFactory to SimpleType: TransceiverThreadFactory at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS Block to TryStatement at 0", "INS SimpleName: newCachedThreadPool to MethodInvocation at 1", "INS StringLiteral: \" I/O Worker\" to InfixExpression: + at 2", "INS SimpleType: TransceiverThreadFactory to ClassInstanceCreation at 0", "INS SimpleName: transceiver to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: NettyTransceiver to TypeLiteral at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 1", "MOV ClassInstanceCreation to Assignment: = at 1", "MOV SimpleType: NettyTransceiver to ClassInstanceCreation at 0", "MOV MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "UPDATE from transceiver to socketChannelFactory", "operations": ["UPD SimpleName: transceiver from transceiver to socketChannelFactory"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}]}}, {"NettyAvroRpcClient_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(2074) at 13", "Insert ImportDeclaration(69) into CompilationUnit(2074) at 34", "Insert ImportDeclaration(71) into CompilationUnit(2074) at 35", "Insert ImportDeclaration(73) into CompilationUnit(2074) at 36", "Insert ImportDeclaration(77) into CompilationUnit(2074) at 38", "Insert ImportDeclaration(79) into CompilationUnit(2074) at 39", "Insert QualifiedName: java.util.concurrent.Executor(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.jboss.netty.channel.ChannelFactory(68) into ImportDeclaration(69) at 0", "Insert QualifiedName: org.jboss.netty.channel.ChannelPipeline(70) into ImportDeclaration(71) at 0", "Insert QualifiedName: org.jboss.netty.channel.socket.SocketChannel(72) into ImportDeclaration(73) at 0", "Insert QualifiedName: org.jboss.netty.handler.codec.compression.ZlibDecoder(76) into ImportDeclaration(77) at 0", "Insert QualifiedName: org.jboss.netty.handler.codec.compression.ZlibEncoder(78) into ImportDeclaration(79) at 0", "Insert FieldDeclaration(161) into TypeDeclaration: class(2073) at 12", "Insert FieldDeclaration(166) into TypeDeclaration: class(2073) at 13", "Insert TypeDeclaration: class(2072) into TypeDeclaration: class(2073) at 31", "Insert Modifier: private(157) into FieldDeclaration(161) at 0", "Insert PrimitiveType: boolean(158) into FieldDeclaration(161) at 1", "Insert VariableDeclarationFragment(160) into FieldDeclaration(161) at 2", "Insert Modifier: private(162) into FieldDeclaration(166) at 0", "Insert PrimitiveType: int(163) into FieldDeclaration(166) at 1", "Insert VariableDeclarationFragment(165) into FieldDeclaration(166) at 2", "Insert Modifier: private(1985) into TypeDeclaration: class(2072) at 0", "Insert Modifier: static(1986) into TypeDeclaration: class(2072) at 1", "Insert SimpleName: CompressionChannelFactory(1987) into TypeDeclaration: class(2072) at 2", "Insert SimpleType: NioClientSocketChannelFactory(1989) into TypeDeclaration: class(2072) at 3", "Insert FieldDeclaration(1994) into TypeDeclaration: class(2072) at 4", "Insert MethodDeclaration(2018) into TypeDeclaration: class(2072) at 5", "Insert MethodDeclaration(2071) into TypeDeclaration: class(2072) at 6", "Insert SimpleName: enableDeflateCompression(159) into VariableDeclarationFragment(160) at 0", "Insert SimpleName: compressionLevel(164) into VariableDeclarationFragment(165) at 0", "Insert VariableDeclarationStatement(1829) into Block(1890) at 23", "Insert IfStatement(1885) into Block(1890) at 24", "Insert SimpleName: NioClientSocketChannelFactory(1988) into SimpleType: NioClientSocketChannelFactory(1989) at 0", "Insert Modifier: private(1990) into FieldDeclaration(1994) at 0", "Insert PrimitiveType: int(1991) into FieldDeclaration(1994) at 1", "Insert VariableDeclarationFragment(1993) into FieldDeclaration(1994) at 2", "Insert Modifier: public(1995) into MethodDeclaration(2018) at 0", "Insert SimpleName: CompressionChannelFactory(1996) into MethodDeclaration(2018) at 1", "Insert SingleVariableDeclaration(2000) into MethodDeclaration(2018) at 2", "Insert SingleVariableDeclaration(2004) into MethodDeclaration(2018) at 3", "Insert SingleVariableDeclaration(2007) into MethodDeclaration(2018) at 4", "Insert Block(2017) into MethodDeclaration(2018) at 5", "Insert MarkerAnnotation(2020) into MethodDeclaration(2071) at 0", "Insert Modifier: public(2021) into MethodDeclaration(2071) at 1", "Insert SimpleType: SocketChannel(2023) into MethodDeclaration(2071) at 2", "Insert SimpleName: newChannel(2024) into MethodDeclaration(2071) at 3", "Insert SingleVariableDeclaration(2028) into MethodDeclaration(2071) at 4", "Insert Block(2070) into MethodDeclaration(2071) at 5", "Insert Block(328) into TryStatement(343) at 0", "Insert SimpleType: String(1822) into VariableDeclarationStatement(1829) at 0", "Insert VariableDeclarationFragment(1828) into VariableDeclarationStatement(1829) at 1", "Insert InfixExpression: &&(1837) into IfStatement(1885) at 0", "Insert Block(1884) into IfStatement(1885) at 1", "Insert SimpleName: compressionLevel(1992) into VariableDeclarationFragment(1993) at 0", "Insert SimpleType: Executor(1998) into SingleVariableDeclaration(2000) at 0", "Insert SimpleName: bossExecutor(1999) into SingleVariableDeclaration(2000) at 1", "Insert SimpleType: Executor(2002) into SingleVariableDeclaration(2004) at 0", "Insert SimpleName: workerExecutor(2003) into SingleVariableDeclaration(2004) at 1", "Insert PrimitiveType: int(2005) into SingleVariableDeclaration(2007) at 0", "Insert SimpleName: compressionLevel(2006) into SingleVariableDeclaration(2007) at 1", "Insert SuperConstructorInvocation(2010) into Block(2017) at 0", "Insert ExpressionStatement(2016) into Block(2017) at 1", "Insert SimpleName: Override(2019) into MarkerAnnotation(2020) at 0", "Insert SimpleName: SocketChannel(2022) into SimpleType: SocketChannel(2023) at 0", "Insert SimpleType: ChannelPipeline(2026) into SingleVariableDeclaration(2028) at 0", "Insert SimpleName: pipeline(2027) into SingleVariableDeclaration(2028) at 1", "Insert TryStatement(2069) into Block(2070) at 0", "Insert VariableDeclarationStatement(230) into Block(328) at 0", "Insert IfStatement(303) into Block(328) at 1", "Insert ExpressionStatement(317) into Block(328) at 2", "Move ExpressionStatement(257) into Block(328) at 3", "Insert SimpleName: String(1821) into SimpleType: String(1822) at 0", "Insert SimpleName: enableCompressionStr(1823) into VariableDeclarationFragment(1828) at 0", "Insert MethodInvocation(1827) into VariableDeclarationFragment(1828) at 1", "Insert InfixExpression: !=(1832) into InfixExpression: &&(1837) at 0", "Insert MethodInvocation(1836) into InfixExpression: &&(1837) at 1", "Insert ExpressionStatement(1843) into Block(1884) at 0", "Insert VariableDeclarationStatement(1852) into Block(1884) at 1", "Insert ExpressionStatement(1856) into Block(1884) at 2", "Insert IfStatement(1883) into Block(1884) at 3", "Insert SimpleName: Executor(1997) into SimpleType: Executor(1998) at 0", "Insert SimpleName: Executor(2001) into SimpleType: Executor(2002) at 0", "Insert SimpleName: bossExecutor(2008) into SuperConstructorInvocation(2010) at 0", "Insert SimpleName: workerExecutor(2009) into SuperConstructorInvocation(2010) at 1", "Insert Assignment: =(2015) into ExpressionStatement(2016) at 0", "Insert SimpleName: ChannelPipeline(2025) into SimpleType: ChannelPipeline(2026) at 0", "Insert Block(2056) into TryStatement(2069) at 0", "Insert CatchClause(2068) into TryStatement(2069) at 1", "Insert SimpleType: NioClientSocketChannelFactory(227) into VariableDeclarationStatement(230) at 0", "Insert VariableDeclarationFragment(229) into VariableDeclarationStatement(230) at 1", "Insert SimpleName: enableDeflateCompression(231) into IfStatement(303) at 0", "Insert Block(267) into IfStatement(303) at 1", "Move Block(258) into IfStatement(303) at 2", "Insert Assignment: =(316) into ExpressionStatement(317) at 0", "Insert SimpleName: properties(1824) into MethodInvocation(1827) at 0", "Insert SimpleName: getProperty(1825) into MethodInvocation(1827) at 1", "Insert QualifiedName: RpcClientConfigurationConstants.CONFIG_COMPRESSION_TYPE(1826) into MethodInvocation(1827) at 2", "Insert SimpleName: enableCompressionStr(1830) into InfixExpression: !=(1832) at 0", "Insert NullLiteral(1831) into InfixExpression: !=(1832) at 1", "Insert SimpleName: enableCompressionStr(1833) into MethodInvocation(1836) at 0", "Insert SimpleName: equalsIgnoreCase(1834) into MethodInvocation(1836) at 1", "Insert StringLiteral: \"deflate\"(1835) into MethodInvocation(1836) at 2", "Insert Assignment: =(1842) into ExpressionStatement(1843) at 0", "Insert SimpleType: String(1845) into VariableDeclarationStatement(1852) at 0", "Insert VariableDeclarationFragment(1851) into VariableDeclarationStatement(1852) at 1", "Insert Assignment: =(1855) into ExpressionStatement(1856) at 0", "Insert InfixExpression: !=(1859) into IfStatement(1883) at 0", "Insert Block(1882) into IfStatement(1883) at 1", "Insert FieldAccess(2013) into Assignment: =(2015) at 0", "Insert SimpleName: compressionLevel(2014) into Assignment: =(2015) at 1", "Insert VariableDeclarationStatement(2037) into Block(2056) at 0", "Insert ExpressionStatement(2043) into Block(2056) at 1", "Insert ExpressionStatement(2051) into Block(2056) at 2", "Insert ReturnStatement(2055) into Block(2056) at 3", "Insert SingleVariableDeclaration(2060) into CatchClause(2068) at 0", "Insert Block(2067) into CatchClause(2068) at 1", "Insert SimpleName: NioClientSocketChannelFactory(226) into SimpleType: NioClientSocketChannelFactory(227) at 0", "Insert SimpleName: socketChannelFactory(228) into VariableDeclarationFragment(229) at 0", "Insert ExpressionStatement(266) into Block(267) at 0", "Insert SimpleName: transceiver(304) into Assignment: =(316) at 0", "Insert ClassInstanceCreation(315) into Assignment: =(316) at 1", "Insert FieldAccess(1840) into Assignment: =(1842) at 0", "Insert BooleanLiteral: true(1841) into Assignment: =(1842) at 1", "Insert SimpleName: String(1844) into SimpleType: String(1845) at 0", "Insert SimpleName: compressionLvlStr(1846) into VariableDeclarationFragment(1851) at 0", "Insert MethodInvocation(1850) into VariableDeclarationFragment(1851) at 1", "Insert SimpleName: compressionLevel(1853) into Assignment: =(1855) at 0", "Insert QualifiedName: RpcClientConfigurationConstants.DEFAULT_COMPRESSION_LEVEL(1854) into Assignment: =(1855) at 1", "Insert SimpleName: compressionLvlStr(1857) into InfixExpression: !=(1859) at 0", "Insert NullLiteral(1858) into InfixExpression: !=(1859) at 1", "Insert TryStatement(1881) into Block(1882) at 0", "Insert ThisExpression(2011) into FieldAccess(2013) at 0", "Insert SimpleName: compressionLevel(2012) into FieldAccess(2013) at 1", "Insert SimpleType: ZlibEncoder(2030) into VariableDeclarationStatement(2037) at 0", "Insert VariableDeclarationFragment(2036) into VariableDeclarationStatement(2037) at 1", "Insert MethodInvocation(2042) into ExpressionStatement(2043) at 0", "Insert MethodInvocation(2050) into ExpressionStatement(2051) at 0", "Insert SuperMethodInvocation(2054) into ReturnStatement(2055) at 0", "Insert SimpleType: Exception(2058) into SingleVariableDeclaration(2060) at 0", "Insert SimpleName: ex(2059) into SingleVariableDeclaration(2060) at 1", "Insert ThrowStatement(2066) into Block(2067) at 0", "Insert Assignment: =(265) into ExpressionStatement(266) at 0", "Move SimpleType: NettyTransceiver(206) into ClassInstanceCreation(315) at 0", "Move FieldAccess(209) into ClassInstanceCreation(315) at 1", "Insert SimpleName: socketChannelFactory(310) into ClassInstanceCreation(315) at 2", "Move MethodInvocation(244) into ClassInstanceCreation(315) at 3", "Insert ThisExpression(1838) into FieldAccess(1840) at 0", "Insert SimpleName: enableDeflateCompression(1839) into FieldAccess(1840) at 1", "Insert SimpleName: properties(1847) into MethodInvocation(1850) at 0", "Insert SimpleName: getProperty(1848) into MethodInvocation(1850) at 1", "Insert QualifiedName: RpcClientConfigurationConstants.CONFIG_COMPRESSION_LEVEL(1849) into MethodInvocation(1850) at 2", "Insert Block(1867) into TryStatement(1881) at 0", "Insert CatchClause(1880) into TryStatement(1881) at 1", "Insert SimpleName: ZlibEncoder(2029) into SimpleType: ZlibEncoder(2030) at 0", "Insert SimpleName: encoder(2031) into VariableDeclarationFragment(2036) at 0", "Insert ClassInstanceCreation(2035) into VariableDeclarationFragment(2036) at 1", "Insert SimpleName: pipeline(2038) into MethodInvocation(2042) at 0", "Insert SimpleName: addFirst(2039) into MethodInvocation(2042) at 1", "Insert StringLiteral: \"deflater\"(2040) into MethodInvocation(2042) at 2", "Insert SimpleName: encoder(2041) into MethodInvocation(2042) at 3", "Insert SimpleName: pipeline(2044) into MethodInvocation(2050) at 0", "Insert SimpleName: addFirst(2045) into MethodInvocation(2050) at 1", "Insert StringLiteral: \"inflater\"(2046) into MethodInvocation(2050) at 2", "Insert ClassInstanceCreation(2049) into MethodInvocation(2050) at 3", "Insert SimpleName: newChannel(2052) into SuperMethodInvocation(2054) at 0", "Insert SimpleName: pipeline(2053) into SuperMethodInvocation(2054) at 1", "Insert SimpleName: Exception(2057) into SimpleType: Exception(2058) at 0", "Insert ClassInstanceCreation(2065) into ThrowStatement(2066) at 0", "Insert SimpleName: socketChannelFactory(232) into Assignment: =(265) at 0", "Insert ClassInstanceCreation(264) into Assignment: =(265) at 1", "Update SimpleName: transceiver(204) to socketChannelFactory", "Move ClassInstanceCreation(240) into Assignment: =(300) at 1", "Insert ExpressionStatement(1866) into Block(1867) at 0", "Insert SingleVariableDeclaration(1871) into CatchClause(1880) at 0", "Insert Block(1879) into CatchClause(1880) at 1", "Insert SimpleType: ZlibEncoder(2033) into ClassInstanceCreation(2035) at 0", "Insert SimpleName: compressionLevel(2034) into ClassInstanceCreation(2035) at 1", "Insert SimpleType: ZlibDecoder(2048) into ClassInstanceCreation(2049) at 0", "Insert SimpleType: RuntimeException(2062) into ClassInstanceCreation(2065) at 0", "Insert StringLiteral: \"Cannot create Compression channel\"(2063) into ClassInstanceCreation(2065) at 1", "Insert SimpleName: ex(2064) into ClassInstanceCreation(2065) at 2", "Insert SimpleType: CompressionChannelFactory(234) into ClassInstanceCreation(264) at 0", "Insert MethodInvocation(248) into ClassInstanceCreation(264) at 1", "Insert MethodInvocation(262) into ClassInstanceCreation(264) at 2", "Insert SimpleName: compressionLevel(263) into ClassInstanceCreation(264) at 3", "Insert Assignment: =(1865) into ExpressionStatement(1866) at 0", "Insert SimpleType: NumberFormatException(1869) into SingleVariableDeclaration(1871) at 0", "Insert SimpleName: ex(1870) into SingleVariableDeclaration(1871) at 1", "Insert ExpressionStatement(1878) into Block(1879) at 0", "Insert SimpleName: ZlibEncoder(2032) into SimpleType: ZlibEncoder(2033) at 0", "Insert SimpleName: ZlibDecoder(2047) into SimpleType: ZlibDecoder(2048) at 0", "Insert SimpleName: RuntimeException(2061) into SimpleType: RuntimeException(2062) at 0", "Insert SimpleName: CompressionChannelFactory(233) into SimpleType: CompressionChannelFactory(234) at 0", "Insert SimpleName: Executors(235) into MethodInvocation(248) at 0", "Insert SimpleName: newCachedThreadPool(236) into MethodInvocation(248) at 1", "Insert ClassInstanceCreation(247) into MethodInvocation(248) at 2", "Insert SimpleName: Executors(249) into MethodInvocation(262) at 0", "Insert SimpleName: newCachedThreadPool(250) into MethodInvocation(262) at 1", "Insert ClassInstanceCreation(261) into MethodInvocation(262) at 2", "Insert SimpleName: compressionLevel(1860) into Assignment: =(1865) at 0", "Insert MethodInvocation(1864) into Assignment: =(1865) at 1", "Insert SimpleName: NumberFormatException(1868) into SimpleType: NumberFormatException(1869) at 0", "Insert MethodInvocation(1877) into ExpressionStatement(1878) at 0", "Insert SimpleType: TransceiverThreadFactory(238) into ClassInstanceCreation(247) at 0", "Insert InfixExpression: +(246) into ClassInstanceCreation(247) at 1", "Insert SimpleType: TransceiverThreadFactory(252) into ClassInstanceCreation(261) at 0", "Insert InfixExpression: +(260) into ClassInstanceCreation(261) at 1", "Insert SimpleName: Integer(1861) into MethodInvocation(1864) at 0", "Insert SimpleName: parseInt(1862) into MethodInvocation(1864) at 1", "Insert SimpleName: compressionLvlStr(1863) into MethodInvocation(1864) at 2", "Insert SimpleName: logger(1872) into MethodInvocation(1877) at 0", "Insert SimpleName: error(1873) into MethodInvocation(1877) at 1", "Insert InfixExpression: +(1876) into MethodInvocation(1877) at 2", "Insert SimpleName: TransceiverThreadFactory(237) into SimpleType: TransceiverThreadFactory(238) at 0", "Insert StringLiteral: \"Avro \"(239) into InfixExpression: +(246) at 0", "Insert MethodInvocation(244) into InfixExpression: +(246) at 1", "Insert StringLiteral: \" Boss\"(245) into InfixExpression: +(246) at 2", "Insert SimpleName: TransceiverThreadFactory(251) into SimpleType: TransceiverThreadFactory(252) at 0", "Insert StringLiteral: \"Avro \"(253) into InfixExpression: +(260) at 0", "Insert MethodInvocation(258) into InfixExpression: +(260) at 1", "Insert StringLiteral: \" I/O Worker\"(259) into InfixExpression: +(260) at 2", "Insert StringLiteral: \"Invalid compression level: \"(1874) into InfixExpression: +(1876) at 0", "Insert SimpleName: compressionLvlStr(1875) into InfixExpression: +(1876) at 1", "Insert TypeLiteral(242) into MethodInvocation(244) at 0", "Insert SimpleName: getSimpleName(243) into MethodInvocation(244) at 1", "Insert TypeLiteral(256) into MethodInvocation(258) at 0", "Insert SimpleName: getSimpleName(257) into MethodInvocation(258) at 1", "Insert SimpleType: NettyTransceiver(241) into TypeLiteral(242) at 0", "Insert SimpleType: NettyTransceiver(255) into TypeLiteral(256) at 0", "Insert SimpleName: NettyTransceiver(240) into SimpleType: NettyTransceiver(241) at 0", "Insert SimpleName: NettyTransceiver(254) into SimpleType: NettyTransceiver(255) at 0", "Delete ClassInstanceCreation(245)"]}}, {"RpcClientConfigurationConstants_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleName: CONFIG_COMPRESSION_TYPE to VariableDeclarationFragment at 0", "INS TextElement: and set a compression level to TagElement at 1", "INS Javadoc to FieldDeclaration at 0", "INS StringLiteral: \"compression-type\" to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS FieldDeclaration to TypeDeclaration: class at 23", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleType: String to FieldDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: The following are const for the NettyAvro Client.  To enable compression to TagElement at 0", "INS Modifier: public to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 24", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 2", "INS StringLiteral: \"compression-level\" to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 24", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: CONFIG_COMPRESSION_LEVEL to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 25", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: DEFAULT_COMPRESSION_LEVEL to VariableDeclarationFragment at 0", "INS NumberLiteral: 6 to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 25", "INS Modifier: static to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}]}}, {"RpcClientConfigurationConstants_diff": {"operations": ["Insert FieldDeclaration(274) into TypeDeclaration: class(296) at 23", "Insert FieldDeclaration(283) into TypeDeclaration: class(296) at 24", "Insert FieldDeclaration(291) into TypeDeclaration: class(296) at 25", "Insert Javadoc(265) into FieldDeclaration(274) at 0", "Insert Modifier: public(266) into FieldDeclaration(274) at 1", "Insert Modifier: static(267) into FieldDeclaration(274) at 2", "Insert Modifier: final(268) into FieldDeclaration(274) at 3", "Insert SimpleType: String(270) into FieldDeclaration(274) at 4", "Insert VariableDeclarationFragment(273) into FieldDeclaration(274) at 5", "Insert Modifier: public(275) into FieldDeclaration(283) at 0", "Insert Modifier: static(276) into FieldDeclaration(283) at 1", "Insert Modifier: final(277) into FieldDeclaration(283) at 2", "Insert SimpleType: String(279) into FieldDeclaration(283) at 3", "Insert VariableDeclarationFragment(282) into FieldDeclaration(283) at 4", "Insert Modifier: public(284) into FieldDeclaration(291) at 0", "Insert Modifier: static(285) into FieldDeclaration(291) at 1", "Insert Modifier: final(286) into FieldDeclaration(291) at 2", "Insert PrimitiveType: int(287) into FieldDeclaration(291) at 3", "Insert VariableDeclarationFragment(290) into FieldDeclaration(291) at 4", "Insert TagElement(264) into Javadoc(265) at 0", "Insert SimpleName: String(269) into SimpleType: String(270) at 0", "Insert SimpleName: CONFIG_COMPRESSION_TYPE(271) into VariableDeclarationFragment(273) at 0", "Insert StringLiteral: \"compression-type\"(272) into VariableDeclarationFragment(273) at 1", "Insert SimpleName: String(278) into SimpleType: String(279) at 0", "Insert SimpleName: CONFIG_COMPRESSION_LEVEL(280) into VariableDeclarationFragment(282) at 0", "Insert StringLiteral: \"compression-level\"(281) into VariableDeclarationFragment(282) at 1", "Insert SimpleName: DEFAULT_COMPRESSION_LEVEL(288) into VariableDeclarationFragment(290) at 0", "Insert NumberLiteral: 6(289) into VariableDeclarationFragment(290) at 1", "Insert TextElement: The following are const for the NettyAvro Client.  To enable compression(262) into TagElement(264) at 0", "Insert TextElement: and set a compression level(263) into TagElement(264) at 1"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}