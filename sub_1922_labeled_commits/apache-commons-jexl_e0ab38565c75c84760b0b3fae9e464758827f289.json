{"application": "apache-commons-jexl", "csha": "e0ab38565c75c84760b0b3fae9e464758827f289", "files": [{"JexlEngine_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: instance fulfilling that pattern.", "DEL MarkerAnnotation", "DEL SimpleName: JexlEngine", "DEL TextElement: ExpressionFactory & ScriptFactory need a singleton and this is the package", "DEL Modifier: private", "DEL TagElement", "DEL FieldDeclaration", "DEL Modifier: volatile", "DEL SimpleType: JexlEngine", "DEL Modifier: static", "DEL SimpleName: Deprecated", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleName: DEFAULT"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement:  the singleton", "DEL MarkerAnnotation", "DEL Block", "DEL Block", "DEL MethodDeclaration", "DEL TextElement: Retrieves a default JEXL engine.", "DEL Modifier: static", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: JexlEngine", "DEL Block", "DEL InfixExpression: ==", "DEL SimpleName: DEFAULT", "DEL SimpleName: Deprecated", "DEL NullLiteral", "DEL SimpleName: DEFAULT", "DEL SynchronizedStatement", "DEL Assignment: =", "DEL SimpleType: JexlEngine", "DEL TagElement: @deprecated", "DEL SimpleName: DEFAULT", "DEL SimpleName: JexlEngine", "DEL TagElement: @return", "DEL Block", "DEL TypeLiteral", "DEL SimpleType: JexlEngine", "DEL ClassInstanceCreation", "DEL SimpleType: JexlEngine", "DEL TagElement", "DEL TextElement:  use a new instance JexlEngine instead.", "DEL SimpleName: DEFAULT", "DEL NullLiteral", "DEL SimpleName: JexlEngine", "DEL InfixExpression: ==", "DEL Javadoc", "DEL SimpleName: getDefault", "DEL IfStatement", "DEL IfStatement"]}]}}, {"JexlEngine_diff": {"operations": ["Delete TextElement: ExpressionFactory & ScriptFactory need a singleton and this is the package(2071)", "Delete TextElement: instance fulfilling that pattern.(2072)", "Delete TagElement(2073)", "Delete Javadoc(2074)", "Delete SimpleName: Deprecated(2075)", "Delete MarkerAnnotation(2076)", "Delete Modifier: private(2077)", "Delete Modifier: static(2078)", "Delete Modifier: volatile(2079)", "Delete SimpleName: JexlEngine(2080)", "Delete SimpleType: JexlEngine(2081)", "Delete SimpleName: DEFAULT(2082)", "Delete NullLiteral(2083)", "Delete VariableDeclarationFragment(2084)", "Delete FieldDeclaration(2085)", "Delete TextElement: Retrieves a default JEXL engine.(2086)", "Delete TagElement(2087)", "Delete TextElement:  the singleton(2088)", "Delete TagElement: @return(2089)", "Delete TextElement:  use a new instance JexlEngine instead.(2090)", "Delete TagElement: @deprecated(2091)", "Delete Javadoc(2092)", "Delete SimpleName: Deprecated(2093)", "Delete MarkerAnnotation(2094)", "Delete Modifier: static(2095)", "Delete SimpleName: JexlEngine(2096)", "Delete SimpleType: JexlEngine(2097)", "Delete SimpleName: getDefault(2098)", "Delete SimpleName: DEFAULT(2099)", "Delete NullLiteral(2100)", "Delete InfixExpression: ==(2101)", "Delete SimpleName: JexlEngine(2102)", "Delete SimpleType: JexlEngine(2103)", "Delete TypeLiteral(2104)", "Delete SimpleName: DEFAULT(2105)", "Delete NullLiteral(2106)", "Delete InfixExpression: ==(2107)", "Delete SimpleName: DEFAULT(2108)", "Delete SimpleName: JexlEngine(2109)", "Delete SimpleType: JexlEngine(2110)", "Delete ClassInstanceCreation(2111)", "Delete Assignment: =(2112)", "Delete ExpressionStatement(2113)", "Delete Block(2114)", "Delete IfStatement(2115)", "Delete Block(2116)", "Delete SynchronizedStatement(2117)", "Delete Block(2118)", "Delete IfStatement(2119)", "Delete SimpleName: DEFAULT(2120)", "Delete ReturnStatement(2121)", "Delete Block(2122)", "Delete MethodDeclaration(2123)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}