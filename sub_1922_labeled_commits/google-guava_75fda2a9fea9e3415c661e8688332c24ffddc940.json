{"application": "google-guava", "csha": "75fda2a9fea9e3415c661e8688332c24ffddc940", "files": [{"CaseFormat_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 14", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodDeclaration to EnumDeclaration at 14", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS Block to MethodDeclaration at 5", "INS TextElement: . to TagElement at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: s to InfixExpression: == at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: s to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Converter<String,String> at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleName: s to MethodInvocation at 2", "INS SimpleName: CaseFormat to ThisExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS TextElement:  Converter to TagElement: @code at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ThisExpression to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleType: CaseFormat to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS Modifier: public to MethodDeclaration at 2", "INS TextElement:  targetFormat to TagElement: @code at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement: @code to TagElement at 3", "INS SimpleType: String to ParameterizedType: Converter<String,String> at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: targetFormat to MethodInvocation at 0", "INS SimpleName: s to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Returns a  to TagElement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS ReturnStatement to Block at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: Converter to ParameterizedType: Converter<String,String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: s to InfixExpression: == at 0", "INS SimpleName: converterTo to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,String> at 0", "INS SimpleName: to to MethodInvocation at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS SimpleName: to to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: targetFormat to MethodInvocation at 1", "INS SimpleName: targetFormat to SingleVariableDeclaration at 2", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS ParameterizedType: Converter<String,String> to ClassInstanceCreation at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: CaseFormat to SimpleType: CaseFormat at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  16.0 to TagElement: @since at 0", "INS ReturnStatement to Block at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS TextElement:  that converts strings from this format to  to TagElement at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS TagElement: @code to TagElement at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to ParameterizedType: Converter<String,String> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: targetFormat to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Converter<String,String> at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS ParameterizedType: Converter<String,String> to MethodDeclaration at 3", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS SimpleName: s to SingleVariableDeclaration at 1", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 5"]}]}}, {"CaseFormat_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(663) at 2", "Insert QualifiedName: com.google.common.annotations.Beta(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(585) into EnumDeclaration(662) at 14", "Insert Javadoc(507) into MethodDeclaration(585) at 0", "Insert MarkerAnnotation(509) into MethodDeclaration(585) at 1", "Insert Modifier: public(510) into MethodDeclaration(585) at 2", "Insert ParameterizedType: Converter<String,String>(517) into MethodDeclaration(585) at 3", "Insert SimpleName: converterTo(518) into MethodDeclaration(585) at 4", "Insert SingleVariableDeclaration(523) into MethodDeclaration(585) at 5", "Insert Block(584) into MethodDeclaration(585) at 6", "Insert TagElement(504) into Javadoc(507) at 0", "Insert TagElement: @since(506) into Javadoc(507) at 1", "Insert SimpleName: Beta(508) into MarkerAnnotation(509) at 0", "Insert SimpleType: Converter(512) into ParameterizedType: Converter<String,String>(517) at 0", "Insert SimpleType: String(514) into ParameterizedType: Converter<String,String>(517) at 1", "Insert SimpleType: String(516) into ParameterizedType: Converter<String,String>(517) at 2", "Insert Modifier: final(519) into SingleVariableDeclaration(523) at 0", "Insert SimpleType: CaseFormat(521) into SingleVariableDeclaration(523) at 1", "Insert SimpleName: targetFormat(522) into SingleVariableDeclaration(523) at 2", "Insert ExpressionStatement(527) into Block(584) at 0", "Insert ReturnStatement(583) into Block(584) at 1", "Insert TextElement: Returns a (497) into TagElement(504) at 0", "Insert TagElement: @code(499) into TagElement(504) at 1", "Insert TextElement:  that converts strings from this format to (500) into TagElement(504) at 2", "Insert TagElement: @code(502) into TagElement(504) at 3", "Insert TextElement: .(503) into TagElement(504) at 4", "Insert TextElement:  16.0(505) into TagElement: @since(506) at 0", "Insert SimpleName: Converter(511) into SimpleType: Converter(512) at 0", "Insert SimpleName: String(513) into SimpleType: String(514) at 0", "Insert SimpleName: String(515) into SimpleType: String(516) at 0", "Insert SimpleName: CaseFormat(520) into SimpleType: CaseFormat(521) at 0", "Insert MethodInvocation(526) into ExpressionStatement(527) at 0", "Insert ClassInstanceCreation(582) into ReturnStatement(583) at 0", "Insert TextElement:  Converter(498) into TagElement: @code(499) at 0", "Insert TextElement:  targetFormat(501) into TagElement: @code(502) at 0", "Insert SimpleName: checkNotNull(524) into MethodInvocation(526) at 0", "Insert SimpleName: targetFormat(525) into MethodInvocation(526) at 1", "Insert ParameterizedType: Converter<String,String>(534) into ClassInstanceCreation(582) at 0", "Insert AnonymousClassDeclaration(581) into ClassInstanceCreation(582) at 1", "Insert SimpleType: Converter(529) into ParameterizedType: Converter<String,String>(534) at 0", "Insert SimpleType: String(531) into ParameterizedType: Converter<String,String>(534) at 1", "Insert SimpleType: String(533) into ParameterizedType: Converter<String,String>(534) at 2", "Insert MethodDeclaration(556) into AnonymousClassDeclaration(581) at 0", "Insert MethodDeclaration(580) into AnonymousClassDeclaration(581) at 1", "Insert SimpleName: Converter(528) into SimpleType: Converter(529) at 0", "Insert SimpleName: String(530) into SimpleType: String(531) at 0", "Insert SimpleName: String(532) into SimpleType: String(533) at 0", "Insert MarkerAnnotation(536) into MethodDeclaration(556) at 0", "Insert Modifier: protected(537) into MethodDeclaration(556) at 1", "Insert SimpleType: String(539) into MethodDeclaration(556) at 2", "Insert SimpleName: doForward(540) into MethodDeclaration(556) at 3", "Insert SingleVariableDeclaration(544) into MethodDeclaration(556) at 4", "Insert Block(555) into MethodDeclaration(556) at 5", "Insert MarkerAnnotation(558) into MethodDeclaration(580) at 0", "Insert Modifier: protected(559) into MethodDeclaration(580) at 1", "Insert SimpleType: String(561) into MethodDeclaration(580) at 2", "Insert SimpleName: doBackward(562) into MethodDeclaration(580) at 3", "Insert SingleVariableDeclaration(566) into MethodDeclaration(580) at 4", "Insert Block(579) into MethodDeclaration(580) at 5", "Insert SimpleName: Override(535) into MarkerAnnotation(536) at 0", "Insert SimpleName: String(538) into SimpleType: String(539) at 0", "Insert SimpleType: String(542) into SingleVariableDeclaration(544) at 0", "Insert SimpleName: s(543) into SingleVariableDeclaration(544) at 1", "Insert ReturnStatement(554) into Block(555) at 0", "Insert SimpleName: Override(557) into MarkerAnnotation(558) at 0", "Insert SimpleName: String(560) into SimpleType: String(561) at 0", "Insert SimpleType: String(564) into SingleVariableDeclaration(566) at 0", "Insert SimpleName: s(565) into SingleVariableDeclaration(566) at 1", "Insert ReturnStatement(578) into Block(579) at 0", "Insert SimpleName: String(541) into SimpleType: String(542) at 0", "Insert ConditionalExpression(553) into ReturnStatement(554) at 0", "Insert SimpleName: String(563) into SimpleType: String(564) at 0", "Insert ConditionalExpression(577) into ReturnStatement(578) at 0", "Insert InfixExpression: ==(547) into ConditionalExpression(553) at 0", "Insert NullLiteral(548) into ConditionalExpression(553) at 1", "Insert MethodInvocation(552) into ConditionalExpression(553) at 2", "Insert InfixExpression: ==(569) into ConditionalExpression(577) at 0", "Insert NullLiteral(570) into ConditionalExpression(577) at 1", "Insert MethodInvocation(576) into ConditionalExpression(577) at 2", "Insert SimpleName: s(545) into InfixExpression: ==(547) at 0", "Insert NullLiteral(546) into InfixExpression: ==(547) at 1", "Insert SimpleName: to(549) into MethodInvocation(552) at 0", "Insert SimpleName: targetFormat(550) into MethodInvocation(552) at 1", "Insert SimpleName: s(551) into MethodInvocation(552) at 2", "Insert SimpleName: s(567) into InfixExpression: ==(569) at 0", "Insert NullLiteral(568) into InfixExpression: ==(569) at 1", "Insert SimpleName: targetFormat(571) into MethodInvocation(576) at 0", "Insert SimpleName: to(572) into MethodInvocation(576) at 1", "Insert ThisExpression(574) into MethodInvocation(576) at 2", "Insert SimpleName: s(575) into MethodInvocation(576) at 3", "Insert SimpleName: CaseFormat(573) into ThisExpression(574) at 0"]}}, {"Enums_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: enumClass to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: name to MethodInvocation at 1", "INS TextElement:  enum to TagElement: @code at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS TextElement: of type  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @code to TagElement at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS TagElement: @code to TagElement at 11", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS TagElement: @code to TagElement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: T to ParameterizedType: Class<T> at 1", "INS SimpleType: Class to MethodRefParameter at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleType: T to ParameterizedType: Enum<T> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: enumValue to InfixExpression: == at 0", "INS ParameterizedType: Converter<String,T> to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleType: String to ParameterizedType: Converter<String,T> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: static to MethodDeclaration at 2", "INS TextElement:  IllegalArgumentException to TagElement: @code at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS TextElement: argument is not the name of any enum constant in the specified enum. to TagElement at 13", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: T to SimpleType: T at 0", "INS TextElement:  and to TagElement at 7", "INS MethodRefParameter to MethodRef at 2", "INS SimpleName: enumClass to SingleVariableDeclaration at 2", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TextElement: . to TagElement at 9", "INS SimpleName: enumValue to SingleVariableDeclaration at 1", "INS SimpleType: Class to ParameterizedType: Class<T> at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: enumValue to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS TextElement:  using  to TagElement at 5", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleType: String to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 8", "INS StringLiteral: \"Enums.stringConverter(\" to InfixExpression: + at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS TextElement:  enumClass to TagElement: @code at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS Block to MethodDeclaration at 7", "INS ConditionalExpression to ReturnStatement at 0", "INS TagElement: @link to TagElement at 6", "INS SimpleName: value to MethodInvocation at 3", "INS SimpleType: T to ParameterizedType: Converter<String,T> at 2", "INS SimpleName: name to MethodRef at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: valueOf to MethodRef at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  values to TagElement at 2", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  if the to TagElement at 12", "INS MethodRef to TagElement: @link at 0", "INS StringLiteral: \")\" to InfixExpression: + at 2", "INS SimpleName: String to SimpleType: String at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,T> at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS Block to MethodDeclaration at 4", "INS TextElement: Returns a converter that converts between strings and  to TagElement at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to MethodDeclaration at 2", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: enumClass to InfixExpression: + at 1", "INS ParameterizedType: Enum<T> to TypeParameter at 1", "INS SimpleType: String to ParameterizedType: Converter<String,T> at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleType: T to ParameterizedType: Converter<String,T> at 2", "INS MethodRefParameter to MethodRef at 3", "INS SimpleName: Enum to MethodRef at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParameterizedType: Class<T> to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS NullLiteral to ConditionalExpression at 1", "INS ParameterizedType: Converter<String,T> to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: enumClass to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: Enum to ParameterizedType: Enum<T> at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: Enum to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Enum to SimpleType: Enum at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: The converter will throw an  to TagElement at 10", "INS SimpleName: Enum to MethodRef at 0"]}]}}, {"Enums_diff": {"operations": ["Insert MethodDeclaration(533) into TypeDeclaration: class(534) at 11", "Insert Javadoc(435) into MethodDeclaration(533) at 0", "Insert Modifier: public(436) into MethodDeclaration(533) at 1", "Insert Modifier: static(437) into MethodDeclaration(533) at 2", "Insert TypeParameter(444) into MethodDeclaration(533) at 3", "Insert ParameterizedType: Converter<String,T>(451) into MethodDeclaration(533) at 4", "Insert SimpleName: stringConverter(452) into MethodDeclaration(533) at 5", "Insert SingleVariableDeclaration(460) into MethodDeclaration(533) at 6", "Insert Block(532) into MethodDeclaration(533) at 7", "Insert TagElement(432) into Javadoc(435) at 0", "Insert TagElement: @since(434) into Javadoc(435) at 1", "Insert SimpleName: T(438) into TypeParameter(444) at 0", "Insert ParameterizedType: Enum<T>(443) into TypeParameter(444) at 1", "Insert SimpleType: Converter(446) into ParameterizedType: Converter<String,T>(451) at 0", "Insert SimpleType: String(448) into ParameterizedType: Converter<String,T>(451) at 1", "Insert SimpleType: T(450) into ParameterizedType: Converter<String,T>(451) at 2", "Insert Modifier: final(453) into SingleVariableDeclaration(460) at 0", "Insert ParameterizedType: Class<T>(458) into SingleVariableDeclaration(460) at 1", "Insert SimpleName: enumClass(459) into SingleVariableDeclaration(460) at 2", "Insert ExpressionStatement(464) into Block(532) at 0", "Insert ReturnStatement(531) into Block(532) at 1", "Insert TextElement: Returns a converter that converts between strings and (403) into TagElement(432) at 0", "Insert TagElement: @code(405) into TagElement(432) at 1", "Insert TextElement:  values(406) into TagElement(432) at 2", "Insert TextElement: of type (407) into TagElement(432) at 3", "Insert TagElement: @code(409) into TagElement(432) at 4", "Insert TextElement:  using (410) into TagElement(432) at 5", "Insert TagElement: @link(420) into TagElement(432) at 6", "Insert TextElement:  and(421) into TagElement(432) at 7", "Insert TagElement: @link(425) into TagElement(432) at 8", "Insert TextElement: .(426) into TagElement(432) at 9", "Insert TextElement: The converter will throw an (427) into TagElement(432) at 10", "Insert TagElement: @code(429) into TagElement(432) at 11", "Insert TextElement:  if the(430) into TagElement(432) at 12", "Insert TextElement: argument is not the name of any enum constant in the specified enum.(431) into TagElement(432) at 13", "Insert TextElement:  16.0(433) into TagElement: @since(434) at 0", "Insert SimpleType: Enum(440) into ParameterizedType: Enum<T>(443) at 0", "Insert SimpleType: T(442) into ParameterizedType: Enum<T>(443) at 1", "Insert SimpleName: Converter(445) into SimpleType: Converter(446) at 0", "Insert SimpleName: String(447) into SimpleType: String(448) at 0", "Insert SimpleName: T(449) into SimpleType: T(450) at 0", "Insert SimpleType: Class(455) into ParameterizedType: Class<T>(458) at 0", "Insert SimpleType: T(457) into ParameterizedType: Class<T>(458) at 1", "Insert MethodInvocation(463) into ExpressionStatement(464) at 0", "Insert ClassInstanceCreation(530) into ReturnStatement(531) at 0", "Insert TextElement:  enum(404) into TagElement: @code(405) at 0", "Insert TextElement:  enumClass(408) into TagElement: @code(409) at 0", "Insert MethodRef(419) into TagElement: @link(420) at 0", "Insert MethodRef(424) into TagElement: @link(425) at 0", "Insert TextElement:  IllegalArgumentException(428) into TagElement: @code(429) at 0", "Insert SimpleName: Enum(439) into SimpleType: Enum(440) at 0", "Insert SimpleName: T(441) into SimpleType: T(442) at 0", "Insert SimpleName: Class(454) into SimpleType: Class(455) at 0", "Insert SimpleName: T(456) into SimpleType: T(457) at 0", "Insert SimpleName: checkNotNull(461) into MethodInvocation(463) at 0", "Insert SimpleName: enumClass(462) into MethodInvocation(463) at 1", "Insert ParameterizedType: Converter<String,T>(471) into ClassInstanceCreation(530) at 0", "Insert AnonymousClassDeclaration(529) into ClassInstanceCreation(530) at 1", "Insert SimpleName: Enum(411) into MethodRef(419) at 0", "Insert SimpleName: valueOf(412) into MethodRef(419) at 1", "Insert MethodRefParameter(415) into MethodRef(419) at 2", "Insert MethodRefParameter(418) into MethodRef(419) at 3", "Insert SimpleName: Enum(422) into MethodRef(424) at 0", "Insert SimpleName: name(423) into MethodRef(424) at 1", "Insert SimpleType: Converter(466) into ParameterizedType: Converter<String,T>(471) at 0", "Insert SimpleType: String(468) into ParameterizedType: Converter<String,T>(471) at 1", "Insert SimpleType: T(470) into ParameterizedType: Converter<String,T>(471) at 2", "Insert MethodDeclaration(494) into AnonymousClassDeclaration(529) at 0", "Insert MethodDeclaration(515) into AnonymousClassDeclaration(529) at 1", "Insert MethodDeclaration(528) into AnonymousClassDeclaration(529) at 2", "Insert SimpleType: Class(414) into MethodRefParameter(415) at 0", "Insert SimpleType: String(417) into MethodRefParameter(418) at 0", "Insert SimpleName: Converter(465) into SimpleType: Converter(466) at 0", "Insert SimpleName: String(467) into SimpleType: String(468) at 0", "Insert SimpleName: T(469) into SimpleType: T(470) at 0", "Insert MarkerAnnotation(473) into MethodDeclaration(494) at 0", "Insert Modifier: protected(474) into MethodDeclaration(494) at 1", "Insert SimpleType: T(476) into MethodDeclaration(494) at 2", "Insert SimpleName: doForward(477) into MethodDeclaration(494) at 3", "Insert SingleVariableDeclaration(481) into MethodDeclaration(494) at 4", "Insert Block(493) into MethodDeclaration(494) at 5", "Insert MarkerAnnotation(496) into MethodDeclaration(515) at 0", "Insert Modifier: protected(497) into MethodDeclaration(515) at 1", "Insert SimpleType: String(499) into MethodDeclaration(515) at 2", "Insert SimpleName: doBackward(500) into MethodDeclaration(515) at 3", "Insert SingleVariableDeclaration(504) into MethodDeclaration(515) at 4", "Insert Block(514) into MethodDeclaration(515) at 5", "Insert MarkerAnnotation(517) into MethodDeclaration(528) at 0", "Insert Modifier: public(518) into MethodDeclaration(528) at 1", "Insert SimpleType: String(520) into MethodDeclaration(528) at 2", "Insert SimpleName: toString(521) into MethodDeclaration(528) at 3", "Insert Block(527) into MethodDeclaration(528) at 4", "Insert SimpleName: Class(413) into SimpleType: Class(414) at 0", "Insert SimpleName: String(416) into SimpleType: String(417) at 0", "Insert SimpleName: Override(472) into MarkerAnnotation(473) at 0", "Insert SimpleName: T(475) into SimpleType: T(476) at 0", "Insert SimpleType: String(479) into SingleVariableDeclaration(481) at 0", "Insert SimpleName: value(480) into SingleVariableDeclaration(481) at 1", "Insert ReturnStatement(492) into Block(493) at 0", "Insert SimpleName: Override(495) into MarkerAnnotation(496) at 0", "Insert SimpleName: String(498) into SimpleType: String(499) at 0", "Insert SimpleType: T(502) into SingleVariableDeclaration(504) at 0", "Insert SimpleName: enumValue(503) into SingleVariableDeclaration(504) at 1", "Insert ReturnStatement(513) into Block(514) at 0", "Insert SimpleName: Override(516) into MarkerAnnotation(517) at 0", "Insert SimpleName: String(519) into SimpleType: String(520) at 0", "Insert ReturnStatement(526) into Block(527) at 0", "Insert SimpleName: String(478) into SimpleType: String(479) at 0", "Insert ConditionalExpression(491) into ReturnStatement(492) at 0", "Insert SimpleName: T(501) into SimpleType: T(502) at 0", "Insert ConditionalExpression(512) into ReturnStatement(513) at 0", "Insert InfixExpression: +(525) into ReturnStatement(526) at 0", "Insert InfixExpression: ==(484) into ConditionalExpression(491) at 0", "Insert NullLiteral(485) into ConditionalExpression(491) at 1", "Insert MethodInvocation(490) into ConditionalExpression(491) at 2", "Insert InfixExpression: ==(507) into ConditionalExpression(512) at 0", "Insert NullLiteral(508) into ConditionalExpression(512) at 1", "Insert MethodInvocation(511) into ConditionalExpression(512) at 2", "Insert StringLiteral: \"Enums.stringConverter(\"(522) into InfixExpression: +(525) at 0", "Insert SimpleName: enumClass(523) into InfixExpression: +(525) at 1", "Insert StringLiteral: \")\"(524) into InfixExpression: +(525) at 2", "Insert SimpleName: value(482) into InfixExpression: ==(484) at 0", "Insert NullLiteral(483) into InfixExpression: ==(484) at 1", "Insert SimpleName: Enum(486) into MethodInvocation(490) at 0", "Insert SimpleName: valueOf(487) into MethodInvocation(490) at 1", "Insert SimpleName: enumClass(488) into MethodInvocation(490) at 2", "Insert SimpleName: value(489) into MethodInvocation(490) at 3", "Insert SimpleName: enumValue(505) into InfixExpression: ==(507) at 0", "Insert NullLiteral(506) into InfixExpression: ==(507) at 1", "Insert SimpleName: enumValue(509) into MethodInvocation(511) at 0", "Insert SimpleName: name(510) into MethodInvocation(511) at 1"]}}, {"package-info_cluster": {"actions": [{"root": "INS TagElement: @link to TagElement at 34", "operations": ["INS TagElement: @link to TagElement at 34", "INS QualifiedName: com.google.common.base.Converter to TagElement: @link at 0"]}, {"root": "INS TextElement: <li> to TagElement at 35", "operations": ["INS TextElement: <li> to TagElement at 35"]}]}}, {"package-info_diff": {"operations": ["Insert TagElement: @link(47) into TagElement(79) at 34", "Insert TextElement: <li>(48) into TagElement(79) at 35", "Insert QualifiedName: com.google.common.base.Converter(46) into TagElement: @link(47) at 0"]}}, {"Maps_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 56", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: X to TypeParameter at 0", "INS TextElement:  a converter that is a view of the specified bimap to TagElement: @return at 0", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: X to ParameterizedType: BiMap<X,Y> at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: B to ParameterizedType: Converter<A,B> at 2", "INS TextElement: , to TagElement at 4", "INS SimpleType: B to ParameterizedType: BiMap<A,B> at 2", "INS SimpleName: bimap to MethodInvocation at 0", "INS SimpleType: Y to MethodDeclaration at 3", "INS SimpleName: bimap to TagElement: @param at 0", "INS SimpleName: bimap to SingleVariableDeclaration at 1", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS SimpleType: Converter to ParameterizedType: Converter<A,B> at 0", "INS SimpleType: Y to ParameterizedType: BiMap<X,Y> at 2", "INS SimpleType: Converter to ParameterizedType: Converter<A,B> at 0", "INS SimpleName: convert to MethodInvocation at 0", "INS MemberRef to TagElement: @link at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: asConverter to MethodDeclaration at 7", "INS ParameterizedType: BiMap<A,B> to SingleVariableDeclaration at 1", "INS SimpleName: Converter to TagElement: @link at 0", "INS SimpleType: A to SingleVariableDeclaration at 0", "INS SimpleName: b to SingleVariableDeclaration at 1", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Y to VariableDeclarationStatement at 0", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleName: inverse to MemberRef at 1", "INS IfStatement to Block at 0", "INS SimpleType: BiMap to ParameterizedType: BiMap<X,Y> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS TagElement: @since to Javadoc at 3", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: bimap to MethodInvocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS ReturnStatement to Block at 3", "INS ReturnStatement to Block at 1", "INS StringLiteral: \"No non-null mapping present for input: %s\" to MethodInvocation at 2", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: input to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 9", "INS MethodInvocation to ReturnStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: A to ParameterizedType: BiMap<A,B> at 1", "INS SimpleName: get to MemberRef at 1", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleType: B to ParameterizedType: Converter<A,B> at 2", "INS TextElement:  .get() to TagElement: @code at 0", "INS ParameterizedType: Converter<A,B> to MethodDeclaration at 6", "INS SimpleName: convert to MethodInvocation at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS TypeParameter to MethodDeclaration at 5", "INS TextElement:  that converts values using  to TagElement at 2", "INS MethodInvocation to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS TextElement:  bimap.inverse() to TagElement: @link at 1", "INS SimpleName: X to SimpleType: X at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: B to TypeParameter at 0", "INS SimpleName: A to SimpleType: A at 0", "INS InfixExpression: != to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleName: input to InfixExpression: == at 0", "INS SimpleName: checkArgument to MethodInvocation at 0", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleType: B to SingleVariableDeclaration at 0", "INS SimpleName: output to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS TagElement: @link to TagElement at 6", "INS TagElement to Javadoc at 0", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: BiMap to SimpleType: BiMap at 0", "INS TextElement:  bimap.get() to TagElement: @link at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleType: A to MethodDeclaration at 2", "INS TypeParameter to MethodDeclaration at 4", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS InfixExpression: == to IfStatement at 0", "INS TagElement: @code to TagElement at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: A to ParameterizedType: Converter<A,B> at 1", "INS SimpleName: X to SimpleType: X at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: b to MethodInvocation at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: BiMap to SimpleType: BiMap at 0", "INS SimpleName: convert to MethodDeclaration at 4", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleType: BiMap to ParameterizedType: BiMap<A,B> at 0", "INS TagElement: @link to TagElement at 1", "INS SimpleName: Y to TypeParameter at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: A to ParameterizedType: Converter<A,B> at 1", "INS TagElement: @link to TagElement at 3", "INS SimpleName: a to SingleVariableDeclaration at 1", "INS SimpleType: X to SingleVariableDeclaration at 0", "INS TextElement: Returns a  to TagElement at 0", "INS SimpleName: BiMap to MemberRef at 0", "INS TagElement: @return to Javadoc at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleName: A to SimpleType: A at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: output to InfixExpression: != at 0", "INS SimpleName: bimap to MethodInvocation at 1", "INS ParameterizedType: Converter<A,B> to ClassInstanceCreation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: BiMap to MemberRef at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS TextElement:  the bimap to view as a converter to TagElement: @param at 1", "INS SimpleName: A to TypeParameter at 0", "INS SimpleName: input to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: B to SimpleType: B at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: B to SimpleType: B at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodDeclaration to TypeDeclaration: class at 56", "INS SimpleName: bimap to MethodInvocation at 1", "INS SimpleName: inverse to MethodInvocation at 1", "INS SimpleName: bimap to SingleVariableDeclaration at 2", "INS MemberRef to TagElement: @link at 0", "INS TypeParameter to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: B to MethodDeclaration at 2", "INS SimpleName: a to MethodInvocation at 2", "INS ParameterizedType: BiMap<X,Y> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: and whose inverse view converts values using to TagElement at 5", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Modifier: final to SingleVariableDeclaration at 0"]}]}}, {"Maps_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(16797) at 11", "Insert QualifiedName: com.google.common.base.Converter(22) into ImportDeclaration(23) at 0", "Insert MethodDeclaration(5635) into TypeDeclaration: class(16796) at 56", "Insert Javadoc(5508) into MethodDeclaration(5635) at 0", "Insert MarkerAnnotation(5510) into MethodDeclaration(5635) at 1", "Insert Modifier: public(5511) into MethodDeclaration(5635) at 2", "Insert Modifier: static(5512) into MethodDeclaration(5635) at 3", "Insert TypeParameter(5514) into MethodDeclaration(5635) at 4", "Insert TypeParameter(5516) into MethodDeclaration(5635) at 5", "Insert ParameterizedType: Converter<A,B>(5523) into MethodDeclaration(5635) at 6", "Insert SimpleName: asConverter(5524) into MethodDeclaration(5635) at 7", "Insert SingleVariableDeclaration(5534) into MethodDeclaration(5635) at 8", "Insert Block(5634) into MethodDeclaration(5635) at 9", "Insert TagElement(5500) into Javadoc(5508) at 0", "Insert TagElement: @param(5503) into Javadoc(5508) at 1", "Insert TagElement: @return(5505) into Javadoc(5508) at 2", "Insert TagElement: @since(5507) into Javadoc(5508) at 3", "Insert SimpleName: Beta(5509) into MarkerAnnotation(5510) at 0", "Insert SimpleName: A(5513) into TypeParameter(5514) at 0", "Insert SimpleName: B(5515) into TypeParameter(5516) at 0", "Insert SimpleType: Converter(5518) into ParameterizedType: Converter<A,B>(5523) at 0", "Insert SimpleType: A(5520) into ParameterizedType: Converter<A,B>(5523) at 1", "Insert SimpleType: B(5522) into ParameterizedType: Converter<A,B>(5523) at 2", "Insert Modifier: final(5525) into SingleVariableDeclaration(5534) at 0", "Insert ParameterizedType: BiMap<A,B>(5532) into SingleVariableDeclaration(5534) at 1", "Insert SimpleName: bimap(5533) into SingleVariableDeclaration(5534) at 2", "Insert ExpressionStatement(5538) into Block(5634) at 0", "Insert ReturnStatement(5633) into Block(5634) at 1", "Insert TextElement: Returns a (5482) into TagElement(5500) at 0", "Insert TagElement: @link(5484) into TagElement(5500) at 1", "Insert TextElement:  that converts values using (5485) into TagElement(5500) at 2", "Insert TagElement: @link(5490) into TagElement(5500) at 3", "Insert TextElement: ,(5491) into TagElement(5500) at 4", "Insert TextElement: and whose inverse view converts values using(5492) into TagElement(5500) at 5", "Insert TagElement: @link(5497) into TagElement(5500) at 6", "Insert TagElement: @code(5499) into TagElement(5500) at 7", "Insert SimpleName: bimap(5501) into TagElement: @param(5503) at 0", "Insert TextElement:  the bimap to view as a converter(5502) into TagElement: @param(5503) at 1", "Insert TextElement:  a converter that is a view of the specified bimap(5504) into TagElement: @return(5505) at 0", "Insert TextElement:  16.0(5506) into TagElement: @since(5507) at 0", "Insert SimpleName: Converter(5517) into SimpleType: Converter(5518) at 0", "Insert SimpleName: A(5519) into SimpleType: A(5520) at 0", "Insert SimpleName: B(5521) into SimpleType: B(5522) at 0", "Insert SimpleType: BiMap(5527) into ParameterizedType: BiMap<A,B>(5532) at 0", "Insert SimpleType: A(5529) into ParameterizedType: BiMap<A,B>(5532) at 1", "Insert SimpleType: B(5531) into ParameterizedType: BiMap<A,B>(5532) at 2", "Insert MethodInvocation(5537) into ExpressionStatement(5538) at 0", "Insert ClassInstanceCreation(5632) into ReturnStatement(5633) at 0", "Insert SimpleName: Converter(5483) into TagElement: @link(5484) at 0", "Insert MemberRef(5488) into TagElement: @link(5490) at 0", "Insert TextElement:  bimap.get()(5489) into TagElement: @link(5490) at 1", "Insert MemberRef(5495) into TagElement: @link(5497) at 0", "Insert TextElement:  bimap.inverse()(5496) into TagElement: @link(5497) at 1", "Insert TextElement:  .get()(5498) into TagElement: @code(5499) at 0", "Insert SimpleName: BiMap(5526) into SimpleType: BiMap(5527) at 0", "Insert SimpleName: A(5528) into SimpleType: A(5529) at 0", "Insert SimpleName: B(5530) into SimpleType: B(5531) at 0", "Insert SimpleName: checkNotNull(5535) into MethodInvocation(5537) at 0", "Insert SimpleName: bimap(5536) into MethodInvocation(5537) at 1", "Insert ParameterizedType: Converter<A,B>(5545) into ClassInstanceCreation(5632) at 0", "Insert AnonymousClassDeclaration(5631) into ClassInstanceCreation(5632) at 1", "Insert SimpleName: BiMap(5486) into MemberRef(5488) at 0", "Insert SimpleName: get(5487) into MemberRef(5488) at 1", "Insert SimpleName: BiMap(5493) into MemberRef(5495) at 0", "Insert SimpleName: inverse(5494) into MemberRef(5495) at 1", "Insert SimpleType: Converter(5540) into ParameterizedType: Converter<A,B>(5545) at 0", "Insert SimpleType: A(5542) into ParameterizedType: Converter<A,B>(5545) at 1", "Insert SimpleType: B(5544) into ParameterizedType: Converter<A,B>(5545) at 2", "Insert MethodDeclaration(5562) into AnonymousClassDeclaration(5631) at 0", "Insert MethodDeclaration(5581) into AnonymousClassDeclaration(5631) at 1", "Insert MethodDeclaration(5630) into AnonymousClassDeclaration(5631) at 2", "Insert SimpleName: Converter(5539) into SimpleType: Converter(5540) at 0", "Insert SimpleName: A(5541) into SimpleType: A(5542) at 0", "Insert SimpleName: B(5543) into SimpleType: B(5544) at 0", "Insert MarkerAnnotation(5547) into MethodDeclaration(5562) at 0", "Insert Modifier: protected(5548) into MethodDeclaration(5562) at 1", "Insert SimpleType: B(5550) into MethodDeclaration(5562) at 2", "Insert SimpleName: doForward(5551) into MethodDeclaration(5562) at 3", "Insert SingleVariableDeclaration(5555) into MethodDeclaration(5562) at 4", "Insert Block(5561) into MethodDeclaration(5562) at 5", "Insert MarkerAnnotation(5564) into MethodDeclaration(5581) at 0", "Insert Modifier: protected(5565) into MethodDeclaration(5581) at 1", "Insert SimpleType: A(5567) into MethodDeclaration(5581) at 2", "Insert SimpleName: doBackward(5568) into MethodDeclaration(5581) at 3", "Insert SingleVariableDeclaration(5572) into MethodDeclaration(5581) at 4", "Insert Block(5580) into MethodDeclaration(5581) at 5", "Insert Modifier: private(5582) into MethodDeclaration(5630) at 0", "Insert TypeParameter(5584) into MethodDeclaration(5630) at 1", "Insert TypeParameter(5586) into MethodDeclaration(5630) at 2", "Insert SimpleType: Y(5588) into MethodDeclaration(5630) at 3", "Insert SimpleName: convert(5589) into MethodDeclaration(5630) at 4", "Insert SingleVariableDeclaration(5598) into MethodDeclaration(5630) at 5", "Insert SingleVariableDeclaration(5602) into MethodDeclaration(5630) at 6", "Insert Block(5629) into MethodDeclaration(5630) at 7", "Insert SimpleName: Override(5546) into MarkerAnnotation(5547) at 0", "Insert SimpleName: B(5549) into SimpleType: B(5550) at 0", "Insert SimpleType: A(5553) into SingleVariableDeclaration(5555) at 0", "Insert SimpleName: a(5554) into SingleVariableDeclaration(5555) at 1", "Insert ReturnStatement(5560) into Block(5561) at 0", "Insert SimpleName: Override(5563) into MarkerAnnotation(5564) at 0", "Insert SimpleName: A(5566) into SimpleType: A(5567) at 0", "Insert SimpleType: B(5570) into SingleVariableDeclaration(5572) at 0", "Insert SimpleName: b(5571) into SingleVariableDeclaration(5572) at 1", "Insert ReturnStatement(5579) into Block(5580) at 0", "Insert SimpleName: X(5583) into TypeParameter(5584) at 0", "Insert SimpleName: Y(5585) into TypeParameter(5586) at 0", "Insert SimpleName: Y(5587) into SimpleType: Y(5588) at 0", "Insert ParameterizedType: BiMap<X,Y>(5596) into SingleVariableDeclaration(5598) at 0", "Insert SimpleName: bimap(5597) into SingleVariableDeclaration(5598) at 1", "Insert SimpleType: X(5600) into SingleVariableDeclaration(5602) at 0", "Insert SimpleName: input(5601) into SingleVariableDeclaration(5602) at 1", "Insert IfStatement(5609) into Block(5629) at 0", "Insert VariableDeclarationStatement(5618) into Block(5629) at 1", "Insert ExpressionStatement(5626) into Block(5629) at 2", "Insert ReturnStatement(5628) into Block(5629) at 3", "Insert SimpleName: A(5552) into SimpleType: A(5553) at 0", "Insert MethodInvocation(5559) into ReturnStatement(5560) at 0", "Insert SimpleName: B(5569) into SimpleType: B(5570) at 0", "Insert MethodInvocation(5578) into ReturnStatement(5579) at 0", "Insert SimpleType: BiMap(5591) into ParameterizedType: BiMap<X,Y>(5596) at 0", "Insert SimpleType: X(5593) into ParameterizedType: BiMap<X,Y>(5596) at 1", "Insert SimpleType: Y(5595) into ParameterizedType: BiMap<X,Y>(5596) at 2", "Insert SimpleName: X(5599) into SimpleType: X(5600) at 0", "Insert InfixExpression: ==(5605) into IfStatement(5609) at 0", "Insert Block(5608) into IfStatement(5609) at 1", "Insert SimpleType: Y(5611) into VariableDeclarationStatement(5618) at 0", "Insert VariableDeclarationFragment(5617) into VariableDeclarationStatement(5618) at 1", "Insert MethodInvocation(5625) into ExpressionStatement(5626) at 0", "Insert SimpleName: output(5627) into ReturnStatement(5628) at 0", "Insert SimpleName: convert(5556) into MethodInvocation(5559) at 0", "Insert SimpleName: bimap(5557) into MethodInvocation(5559) at 1", "Insert SimpleName: a(5558) into MethodInvocation(5559) at 2", "Insert SimpleName: convert(5573) into MethodInvocation(5578) at 0", "Insert MethodInvocation(5576) into MethodInvocation(5578) at 1", "Insert SimpleName: b(5577) into MethodInvocation(5578) at 2", "Insert SimpleName: BiMap(5590) into SimpleType: BiMap(5591) at 0", "Insert SimpleName: X(5592) into SimpleType: X(5593) at 0", "Insert SimpleName: Y(5594) into SimpleType: Y(5595) at 0", "Insert SimpleName: input(5603) into InfixExpression: ==(5605) at 0", "Insert NullLiteral(5604) into InfixExpression: ==(5605) at 1", "Insert ReturnStatement(5607) into Block(5608) at 0", "Insert SimpleName: Y(5610) into SimpleType: Y(5611) at 0", "Insert SimpleName: output(5612) into VariableDeclarationFragment(5617) at 0", "Insert MethodInvocation(5616) into VariableDeclarationFragment(5617) at 1", "Insert SimpleName: checkArgument(5619) into MethodInvocation(5625) at 0", "Insert InfixExpression: !=(5622) into MethodInvocation(5625) at 1", "Insert StringLiteral: \"No non-null mapping present for input: %s\"(5623) into MethodInvocation(5625) at 2", "Insert SimpleName: input(5624) into MethodInvocation(5625) at 3", "Insert SimpleName: bimap(5574) into MethodInvocation(5576) at 0", "Insert SimpleName: inverse(5575) into MethodInvocation(5576) at 1", "Insert NullLiteral(5606) into ReturnStatement(5607) at 0", "Insert SimpleName: bimap(5613) into MethodInvocation(5616) at 0", "Insert SimpleName: get(5614) into MethodInvocation(5616) at 1", "Insert SimpleName: input(5615) into MethodInvocation(5616) at 2", "Insert SimpleName: output(5620) into InfixExpression: !=(5622) at 0", "Insert NullLiteral(5621) into InfixExpression: !=(5622) at 1"]}}, {"Doubles_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 19", "operations": ["INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,Double> at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: DoubleConverter to SimpleType: DoubleConverter at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: value to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS NullLiteral to ConditionalExpression at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS NullLiteral to ConditionalExpression at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Double> at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleName: DoubleConverter to SimpleType: DoubleConverter at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS Block to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: DoubleConverter to FieldDeclaration at 2", "INS Modifier: static to TypeDeclaration: class at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleType: DoubleConverter to ClassInstanceCreation at 0", "INS SimpleType: Double to ParameterizedType: Converter<String,Double> at 2", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Modifier: static to FieldDeclaration at 0", "INS StringLiteral: \"Doubles.stringConverter()\" to ReturnStatement at 0", "INS Modifier: private to FieldDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 19", "INS SimpleName: Double to SimpleType: Double at 0", "INS ParameterizedType: Converter<String,Double> to TypeDeclaration: class at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Double to MethodDeclaration at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: Double to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: DoubleConverter to TypeDeclaration: class at 3", "INS PrimitiveType: long to FieldDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleType: Double to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleType: Converter to ParameterizedType: Converter<String,Double> at 0", "INS SimpleName: Double to MemberRef at 0", "INS Modifier: static to MethodDeclaration at 3", "INS TextElement:  and  to TagElement at 3", "INS TextElement: . to TagElement at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: toString to MethodRef at 1", "INS ParameterizedType: Converter<String,Double> to MethodDeclaration at 4", "INS TagElement: @since to Javadoc at 1", "INS TextElement: doubles using  to TagElement at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: Double to SimpleType: Double at 0", "INS MemberRef to TagElement: @link at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: valueOf to MemberRef at 1", "INS SimpleName: Double to MethodRef at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Double to ParameterizedType: Converter<String,Double> at 2", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TagElement: @link to TagElement at 2", "INS TagElement: @link to TagElement at 4", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS QualifiedName: DoubleConverter.INSTANCE to ReturnStatement at 0", "INS MethodRef to TagElement: @link at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleType: String to ParameterizedType: Converter<String,Double> at 1"]}]}}, {"Doubles_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1187) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1314)", "Insert ImportDeclaration(21) into CompilationUnit(2341) at 10", "Insert QualifiedName: com.google.common.base.Converter(20) into ImportDeclaration(21) at 0", "Insert TypeDeclaration: class(980) into TypeDeclaration: class(2340) at 19", "Insert MethodDeclaration(1012) into TypeDeclaration: class(2340) at 20", "Insert Modifier: private(888) into TypeDeclaration: class(980) at 0", "Insert Modifier: static(889) into TypeDeclaration: class(980) at 1", "Insert Modifier: final(890) into TypeDeclaration: class(980) at 2", "Insert SimpleName: DoubleConverter(891) into TypeDeclaration: class(980) at 3", "Insert ParameterizedType: Converter<String,Double>(898) into TypeDeclaration: class(980) at 4", "Insert SimpleType: Serializable(900) into TypeDeclaration: class(980) at 5", "Insert FieldDeclaration(910) into TypeDeclaration: class(980) at 6", "Insert MethodDeclaration(932) into TypeDeclaration: class(980) at 7", "Insert MethodDeclaration(953) into TypeDeclaration: class(980) at 8", "Insert MethodDeclaration(963) into TypeDeclaration: class(980) at 9", "Insert MethodDeclaration(971) into TypeDeclaration: class(980) at 10", "Insert FieldDeclaration(979) into TypeDeclaration: class(980) at 11", "Insert Javadoc(996) into MethodDeclaration(1012) at 0", "Insert MarkerAnnotation(998) into MethodDeclaration(1012) at 1", "Insert Modifier: public(999) into MethodDeclaration(1012) at 2", "Insert Modifier: static(1000) into MethodDeclaration(1012) at 3", "Insert ParameterizedType: Converter<String,Double>(1007) into MethodDeclaration(1012) at 4", "Insert SimpleName: stringConverter(1008) into MethodDeclaration(1012) at 5", "Insert Block(1011) into MethodDeclaration(1012) at 6", "Insert SimpleType: Converter(893) into ParameterizedType: Converter<String,Double>(898) at 0", "Insert SimpleType: String(895) into ParameterizedType: Converter<String,Double>(898) at 1", "Insert SimpleType: Double(897) into ParameterizedType: Converter<String,Double>(898) at 2", "Insert SimpleName: Serializable(899) into SimpleType: Serializable(900) at 0", "Insert Modifier: static(901) into FieldDeclaration(910) at 0", "Insert Modifier: final(902) into FieldDeclaration(910) at 1", "Insert SimpleType: DoubleConverter(904) into FieldDeclaration(910) at 2", "Insert VariableDeclarationFragment(909) into FieldDeclaration(910) at 3", "Insert MarkerAnnotation(912) into MethodDeclaration(932) at 0", "Insert Modifier: protected(913) into MethodDeclaration(932) at 1", "Insert SimpleType: Double(915) into MethodDeclaration(932) at 2", "Insert SimpleName: doForward(916) into MethodDeclaration(932) at 3", "Insert SingleVariableDeclaration(920) into MethodDeclaration(932) at 4", "Insert Block(931) into MethodDeclaration(932) at 5", "Insert MarkerAnnotation(934) into MethodDeclaration(953) at 0", "Insert Modifier: protected(935) into MethodDeclaration(953) at 1", "Insert SimpleType: String(937) into MethodDeclaration(953) at 2", "Insert SimpleName: doBackward(938) into MethodDeclaration(953) at 3", "Insert SingleVariableDeclaration(942) into MethodDeclaration(953) at 4", "Insert Block(952) into MethodDeclaration(953) at 5", "Insert MarkerAnnotation(955) into MethodDeclaration(963) at 0", "Insert Modifier: public(956) into MethodDeclaration(963) at 1", "Insert SimpleType: String(958) into MethodDeclaration(963) at 2", "Insert SimpleName: toString(959) into MethodDeclaration(963) at 3", "Insert Block(962) into MethodDeclaration(963) at 4", "Insert Modifier: private(964) into MethodDeclaration(971) at 0", "Insert SimpleType: Object(966) into MethodDeclaration(971) at 1", "Insert SimpleName: readResolve(967) into MethodDeclaration(971) at 2", "Insert Block(970) into MethodDeclaration(971) at 3", "Insert Modifier: private(972) into FieldDeclaration(979) at 0", "Insert Modifier: static(973) into FieldDeclaration(979) at 1", "Insert Modifier: final(974) into FieldDeclaration(979) at 2", "Insert PrimitiveType: long(975) into FieldDeclaration(979) at 3", "Insert VariableDeclarationFragment(978) into FieldDeclaration(979) at 4", "Insert TagElement(993) into Javadoc(996) at 0", "Insert TagElement: @since(995) into Javadoc(996) at 1", "Insert SimpleName: Beta(997) into MarkerAnnotation(998) at 0", "Insert SimpleType: Converter(1002) into ParameterizedType: Converter<String,Double>(1007) at 0", "Insert SimpleType: String(1004) into ParameterizedType: Converter<String,Double>(1007) at 1", "Insert SimpleType: Double(1006) into ParameterizedType: Converter<String,Double>(1007) at 2", "Insert ReturnStatement(1010) into Block(1011) at 0", "Insert SimpleName: Converter(892) into SimpleType: Converter(893) at 0", "Insert SimpleName: String(894) into SimpleType: String(895) at 0", "Insert SimpleName: Double(896) into SimpleType: Double(897) at 0", "Insert SimpleName: DoubleConverter(903) into SimpleType: DoubleConverter(904) at 0", "Insert SimpleName: INSTANCE(905) into VariableDeclarationFragment(909) at 0", "Insert ClassInstanceCreation(908) into VariableDeclarationFragment(909) at 1", "Insert SimpleName: Override(911) into MarkerAnnotation(912) at 0", "Insert SimpleName: Double(914) into SimpleType: Double(915) at 0", "Insert SimpleType: String(918) into SingleVariableDeclaration(920) at 0", "Insert SimpleName: value(919) into SingleVariableDeclaration(920) at 1", "Insert ReturnStatement(930) into Block(931) at 0", "Insert SimpleName: Override(933) into MarkerAnnotation(934) at 0", "Insert SimpleName: String(936) into SimpleType: String(937) at 0", "Insert SimpleType: Double(940) into SingleVariableDeclaration(942) at 0", "Insert SimpleName: value(941) into SingleVariableDeclaration(942) at 1", "Insert ReturnStatement(951) into Block(952) at 0", "Insert SimpleName: Override(954) into MarkerAnnotation(955) at 0", "Insert SimpleName: String(957) into SimpleType: String(958) at 0", "Insert ReturnStatement(961) into Block(962) at 0", "Insert SimpleName: Object(965) into SimpleType: Object(966) at 0", "Insert ReturnStatement(969) into Block(970) at 0", "Insert SimpleName: serialVersionUID(976) into VariableDeclarationFragment(978) at 0", "Insert NumberLiteral: 1(977) into VariableDeclarationFragment(978) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(981) into TagElement(993) at 0", "Insert TextElement: doubles using (982) into TagElement(993) at 1", "Insert TagElement: @link(986) into TagElement(993) at 2", "Insert TextElement:  and (987) into TagElement(993) at 3", "Insert TagElement: @link(991) into TagElement(993) at 4", "Insert TextElement: .(992) into TagElement(993) at 5", "Insert TextElement:  16.0(994) into TagElement: @since(995) at 0", "Insert SimpleName: Converter(1001) into SimpleType: Converter(1002) at 0", "Insert SimpleName: String(1003) into SimpleType: String(1004) at 0", "Insert SimpleName: Double(1005) into SimpleType: Double(1006) at 0", "Insert QualifiedName: DoubleConverter.INSTANCE(1009) into ReturnStatement(1010) at 0", "Insert SimpleType: DoubleConverter(907) into ClassInstanceCreation(908) at 0", "Insert SimpleName: String(917) into SimpleType: String(918) at 0", "Insert ConditionalExpression(929) into ReturnStatement(930) at 0", "Insert SimpleName: Double(939) into SimpleType: Double(940) at 0", "Insert ConditionalExpression(950) into ReturnStatement(951) at 0", "Insert StringLiteral: \"Doubles.stringConverter()\"(960) into ReturnStatement(961) at 0", "Insert SimpleName: INSTANCE(968) into ReturnStatement(969) at 0", "Insert MemberRef(985) into TagElement: @link(986) at 0", "Insert MethodRef(990) into TagElement: @link(991) at 0", "Insert SimpleName: DoubleConverter(906) into SimpleType: DoubleConverter(907) at 0", "Insert InfixExpression: ==(923) into ConditionalExpression(929) at 0", "Insert NullLiteral(924) into ConditionalExpression(929) at 1", "Insert MethodInvocation(928) into ConditionalExpression(929) at 2", "Insert InfixExpression: ==(945) into ConditionalExpression(950) at 0", "Insert NullLiteral(946) into ConditionalExpression(950) at 1", "Insert MethodInvocation(949) into ConditionalExpression(950) at 2", "Insert SimpleName: Double(983) into MemberRef(985) at 0", "Insert SimpleName: valueOf(984) into MemberRef(985) at 1", "Insert SimpleName: Double(988) into MethodRef(990) at 0", "Insert SimpleName: toString(989) into MethodRef(990) at 1", "Insert SimpleName: value(921) into InfixExpression: ==(923) at 0", "Insert NullLiteral(922) into InfixExpression: ==(923) at 1", "Insert SimpleName: Double(925) into MethodInvocation(928) at 0", "Insert SimpleName: valueOf(926) into MethodInvocation(928) at 1", "Insert SimpleName: value(927) into MethodInvocation(928) at 2", "Insert SimpleName: value(943) into InfixExpression: ==(945) at 0", "Insert NullLiteral(944) into InfixExpression: ==(945) at 1", "Insert SimpleName: value(947) into MethodInvocation(949) at 0", "Insert SimpleName: toString(948) into MethodInvocation(949) at 1"]}}, {"Floats_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 19", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ConditionalExpression at 2", "INS Modifier: static to FieldDeclaration at 1", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS ParameterizedType: Converter<String,Float> to TypeDeclaration: class at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: FloatConverter to SimpleType: FloatConverter at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: FloatConverter to TypeDeclaration: class at 3", "INS SimpleName: value to MethodInvocation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 19", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Float> at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: Float to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS MethodInvocation to ConditionalExpression at 2", "INS Modifier: private to TypeDeclaration: class at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: FloatConverter to FieldDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Float to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to ConditionalExpression at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Float to SimpleType: Float at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: Float to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS StringLiteral: \"Floats.stringConverter()\" to ReturnStatement at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS SimpleName: FloatConverter to SimpleType: FloatConverter at 0", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleType: Converter to ParameterizedType: Converter<String,Float> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleType: FloatConverter to ClassInstanceCreation at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 3", "INS PrimitiveType: long to FieldDeclaration at 3", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: value to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ReturnStatement to Block at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleType: Float to ParameterizedType: Converter<String,Float> at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS SimpleName: value to InfixExpression: == at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS ReturnStatement to Block at 0", "INS TextElement: floats using  to TagElement at 1", "INS TagElement: @link to TagElement at 2", "INS SimpleName: toString to MethodRef at 1", "INS TextElement:  16.0 to TagElement: @since at 0", "INS TagElement to Javadoc at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: Float to MethodRef at 0", "INS SimpleName: Float to MemberRef at 0", "INS SimpleName: valueOf to MemberRef at 1", "INS Javadoc to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleType: String to ParameterizedType: Converter<String,Float> at 1", "INS ParameterizedType: Converter<String,Float> to MethodDeclaration at 4", "INS SimpleType: Float to ParameterizedType: Converter<String,Float> at 2", "INS TextElement:  and  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,Float> at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS SimpleName: Float to SimpleType: Float at 0", "INS Block to MethodDeclaration at 6", "INS TagElement: @link to TagElement at 4", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MemberRef to TagElement: @link at 0", "INS QualifiedName: FloatConverter.INSTANCE to ReturnStatement at 0", "INS TextElement: . to TagElement at 5", "INS TagElement: @since to Javadoc at 1"]}]}}, {"Floats_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1175) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1302)", "Insert ImportDeclaration(21) into CompilationUnit(2249) at 10", "Insert QualifiedName: com.google.common.base.Converter(20) into ImportDeclaration(21) at 0", "Insert TypeDeclaration: class(970) into TypeDeclaration: class(2248) at 19", "Insert MethodDeclaration(1002) into TypeDeclaration: class(2248) at 20", "Insert Modifier: private(878) into TypeDeclaration: class(970) at 0", "Insert Modifier: static(879) into TypeDeclaration: class(970) at 1", "Insert Modifier: final(880) into TypeDeclaration: class(970) at 2", "Insert SimpleName: FloatConverter(881) into TypeDeclaration: class(970) at 3", "Insert ParameterizedType: Converter<String,Float>(888) into TypeDeclaration: class(970) at 4", "Insert SimpleType: Serializable(890) into TypeDeclaration: class(970) at 5", "Insert FieldDeclaration(900) into TypeDeclaration: class(970) at 6", "Insert MethodDeclaration(922) into TypeDeclaration: class(970) at 7", "Insert MethodDeclaration(943) into TypeDeclaration: class(970) at 8", "Insert MethodDeclaration(953) into TypeDeclaration: class(970) at 9", "Insert MethodDeclaration(961) into TypeDeclaration: class(970) at 10", "Insert FieldDeclaration(969) into TypeDeclaration: class(970) at 11", "Insert Javadoc(986) into MethodDeclaration(1002) at 0", "Insert MarkerAnnotation(988) into MethodDeclaration(1002) at 1", "Insert Modifier: public(989) into MethodDeclaration(1002) at 2", "Insert Modifier: static(990) into MethodDeclaration(1002) at 3", "Insert ParameterizedType: Converter<String,Float>(997) into MethodDeclaration(1002) at 4", "Insert SimpleName: stringConverter(998) into MethodDeclaration(1002) at 5", "Insert Block(1001) into MethodDeclaration(1002) at 6", "Insert SimpleType: Converter(883) into ParameterizedType: Converter<String,Float>(888) at 0", "Insert SimpleType: String(885) into ParameterizedType: Converter<String,Float>(888) at 1", "Insert SimpleType: Float(887) into ParameterizedType: Converter<String,Float>(888) at 2", "Insert SimpleName: Serializable(889) into SimpleType: Serializable(890) at 0", "Insert Modifier: static(891) into FieldDeclaration(900) at 0", "Insert Modifier: final(892) into FieldDeclaration(900) at 1", "Insert SimpleType: FloatConverter(894) into FieldDeclaration(900) at 2", "Insert VariableDeclarationFragment(899) into FieldDeclaration(900) at 3", "Insert MarkerAnnotation(902) into MethodDeclaration(922) at 0", "Insert Modifier: protected(903) into MethodDeclaration(922) at 1", "Insert SimpleType: Float(905) into MethodDeclaration(922) at 2", "Insert SimpleName: doForward(906) into MethodDeclaration(922) at 3", "Insert SingleVariableDeclaration(910) into MethodDeclaration(922) at 4", "Insert Block(921) into MethodDeclaration(922) at 5", "Insert MarkerAnnotation(924) into MethodDeclaration(943) at 0", "Insert Modifier: protected(925) into MethodDeclaration(943) at 1", "Insert SimpleType: String(927) into MethodDeclaration(943) at 2", "Insert SimpleName: doBackward(928) into MethodDeclaration(943) at 3", "Insert SingleVariableDeclaration(932) into MethodDeclaration(943) at 4", "Insert Block(942) into MethodDeclaration(943) at 5", "Insert MarkerAnnotation(945) into MethodDeclaration(953) at 0", "Insert Modifier: public(946) into MethodDeclaration(953) at 1", "Insert SimpleType: String(948) into MethodDeclaration(953) at 2", "Insert SimpleName: toString(949) into MethodDeclaration(953) at 3", "Insert Block(952) into MethodDeclaration(953) at 4", "Insert Modifier: private(954) into MethodDeclaration(961) at 0", "Insert SimpleType: Object(956) into MethodDeclaration(961) at 1", "Insert SimpleName: readResolve(957) into MethodDeclaration(961) at 2", "Insert Block(960) into MethodDeclaration(961) at 3", "Insert Modifier: private(962) into FieldDeclaration(969) at 0", "Insert Modifier: static(963) into FieldDeclaration(969) at 1", "Insert Modifier: final(964) into FieldDeclaration(969) at 2", "Insert PrimitiveType: long(965) into FieldDeclaration(969) at 3", "Insert VariableDeclarationFragment(968) into FieldDeclaration(969) at 4", "Insert TagElement(983) into Javadoc(986) at 0", "Insert TagElement: @since(985) into Javadoc(986) at 1", "Insert SimpleName: Beta(987) into MarkerAnnotation(988) at 0", "Insert SimpleType: Converter(992) into ParameterizedType: Converter<String,Float>(997) at 0", "Insert SimpleType: String(994) into ParameterizedType: Converter<String,Float>(997) at 1", "Insert SimpleType: Float(996) into ParameterizedType: Converter<String,Float>(997) at 2", "Insert ReturnStatement(1000) into Block(1001) at 0", "Insert SimpleName: Converter(882) into SimpleType: Converter(883) at 0", "Insert SimpleName: String(884) into SimpleType: String(885) at 0", "Insert SimpleName: Float(886) into SimpleType: Float(887) at 0", "Insert SimpleName: FloatConverter(893) into SimpleType: FloatConverter(894) at 0", "Insert SimpleName: INSTANCE(895) into VariableDeclarationFragment(899) at 0", "Insert ClassInstanceCreation(898) into VariableDeclarationFragment(899) at 1", "Insert SimpleName: Override(901) into MarkerAnnotation(902) at 0", "Insert SimpleName: Float(904) into SimpleType: Float(905) at 0", "Insert SimpleType: String(908) into SingleVariableDeclaration(910) at 0", "Insert SimpleName: value(909) into SingleVariableDeclaration(910) at 1", "Insert ReturnStatement(920) into Block(921) at 0", "Insert SimpleName: Override(923) into MarkerAnnotation(924) at 0", "Insert SimpleName: String(926) into SimpleType: String(927) at 0", "Insert SimpleType: Float(930) into SingleVariableDeclaration(932) at 0", "Insert SimpleName: value(931) into SingleVariableDeclaration(932) at 1", "Insert ReturnStatement(941) into Block(942) at 0", "Insert SimpleName: Override(944) into MarkerAnnotation(945) at 0", "Insert SimpleName: String(947) into SimpleType: String(948) at 0", "Insert ReturnStatement(951) into Block(952) at 0", "Insert SimpleName: Object(955) into SimpleType: Object(956) at 0", "Insert ReturnStatement(959) into Block(960) at 0", "Insert SimpleName: serialVersionUID(966) into VariableDeclarationFragment(968) at 0", "Insert NumberLiteral: 1(967) into VariableDeclarationFragment(968) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(971) into TagElement(983) at 0", "Insert TextElement: floats using (972) into TagElement(983) at 1", "Insert TagElement: @link(976) into TagElement(983) at 2", "Insert TextElement:  and (977) into TagElement(983) at 3", "Insert TagElement: @link(981) into TagElement(983) at 4", "Insert TextElement: .(982) into TagElement(983) at 5", "Insert TextElement:  16.0(984) into TagElement: @since(985) at 0", "Insert SimpleName: Converter(991) into SimpleType: Converter(992) at 0", "Insert SimpleName: String(993) into SimpleType: String(994) at 0", "Insert SimpleName: Float(995) into SimpleType: Float(996) at 0", "Insert QualifiedName: FloatConverter.INSTANCE(999) into ReturnStatement(1000) at 0", "Insert SimpleType: FloatConverter(897) into ClassInstanceCreation(898) at 0", "Insert SimpleName: String(907) into SimpleType: String(908) at 0", "Insert ConditionalExpression(919) into ReturnStatement(920) at 0", "Insert SimpleName: Float(929) into SimpleType: Float(930) at 0", "Insert ConditionalExpression(940) into ReturnStatement(941) at 0", "Insert StringLiteral: \"Floats.stringConverter()\"(950) into ReturnStatement(951) at 0", "Insert SimpleName: INSTANCE(958) into ReturnStatement(959) at 0", "Insert MemberRef(975) into TagElement: @link(976) at 0", "Insert MethodRef(980) into TagElement: @link(981) at 0", "Insert SimpleName: FloatConverter(896) into SimpleType: FloatConverter(897) at 0", "Insert InfixExpression: ==(913) into ConditionalExpression(919) at 0", "Insert NullLiteral(914) into ConditionalExpression(919) at 1", "Insert MethodInvocation(918) into ConditionalExpression(919) at 2", "Insert InfixExpression: ==(935) into ConditionalExpression(940) at 0", "Insert NullLiteral(936) into ConditionalExpression(940) at 1", "Insert MethodInvocation(939) into ConditionalExpression(940) at 2", "Insert SimpleName: Float(973) into MemberRef(975) at 0", "Insert SimpleName: valueOf(974) into MemberRef(975) at 1", "Insert SimpleName: Float(978) into MethodRef(980) at 0", "Insert SimpleName: toString(979) into MethodRef(980) at 1", "Insert SimpleName: value(911) into InfixExpression: ==(913) at 0", "Insert NullLiteral(912) into InfixExpression: ==(913) at 1", "Insert SimpleName: Float(915) into MethodInvocation(918) at 0", "Insert SimpleName: valueOf(916) into MethodInvocation(918) at 1", "Insert SimpleName: value(917) into MethodInvocation(918) at 2", "Insert SimpleName: value(933) into InfixExpression: ==(935) at 0", "Insert NullLiteral(934) into InfixExpression: ==(935) at 1", "Insert SimpleName: value(937) into MethodInvocation(939) at 0", "Insert SimpleName: toString(938) into MethodInvocation(939) at 1"]}}, {"Ints_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 24", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: IntConverter to SimpleType: IntConverter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS StringLiteral: \"Ints.stringConverter()\" to ReturnStatement at 0", "INS SimpleType: Integer to ParameterizedType: Converter<String,Integer> at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: Integer to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 3", "INS Modifier: static to TypeDeclaration: class at 1", "INS ParameterizedType: Converter<String,Integer> to TypeDeclaration: class at 4", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: value to MethodInvocation at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: doForward to MethodDeclaration at 3", "INS InfixExpression: == to ConditionalExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: decode to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: IntConverter to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Modifier: static to FieldDeclaration at 0", "INS NullLiteral to ConditionalExpression at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 24", "INS SimpleType: Integer to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: toString to MethodDeclaration at 3", "INS Modifier: private to TypeDeclaration: class at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: IntConverter to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleType: String to ParameterizedType: Converter<String,Integer> at 1", "INS SimpleType: Converter to ParameterizedType: Converter<String,Integer> at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: IntConverter to SimpleType: IntConverter at 0", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS ReturnStatement to Block at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Block to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: IntConverter to TypeDeclaration: class at 3", "INS SimpleName: value to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 25", "INS TagElement: @link to TagElement at 2", "INS SimpleName: Integer to MethodRef at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  and  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS ParameterizedType: Converter<String,Integer> to MethodDeclaration at 4", "INS TextElement: integers using  to TagElement at 1", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleName: toString to MethodRef at 1", "INS TagElement: @link to TagElement at 4", "INS TextElement:  16.0 to TagElement: @since at 0", "INS QualifiedName: IntConverter.INSTANCE to ReturnStatement at 0", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS SimpleType: String to ParameterizedType: Converter<String,Integer> at 1", "INS TextElement: . to TagElement at 5", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: Integer to MemberRef at 0", "INS SimpleName: decode to MemberRef at 1", "INS Block to MethodDeclaration at 6", "INS SimpleType: Converter to ParameterizedType: Converter<String,Integer> at 0", "INS SimpleType: Integer to ParameterizedType: Converter<String,Integer> at 2", "INS Modifier: public to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS TagElement: @since to Javadoc at 1"]}]}}, {"Ints_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1409) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1536)", "Insert ImportDeclaration(17) into CompilationUnit(2453) at 8", "Insert QualifiedName: com.google.common.base.Converter(16) into ImportDeclaration(17) at 0", "Insert TypeDeclaration: class(1225) into TypeDeclaration: class(2452) at 24", "Insert MethodDeclaration(1257) into TypeDeclaration: class(2452) at 25", "Insert Modifier: private(1133) into TypeDeclaration: class(1225) at 0", "Insert Modifier: static(1134) into TypeDeclaration: class(1225) at 1", "Insert Modifier: final(1135) into TypeDeclaration: class(1225) at 2", "Insert SimpleName: IntConverter(1136) into TypeDeclaration: class(1225) at 3", "Insert ParameterizedType: Converter<String,Integer>(1143) into TypeDeclaration: class(1225) at 4", "Insert SimpleType: Serializable(1145) into TypeDeclaration: class(1225) at 5", "Insert FieldDeclaration(1155) into TypeDeclaration: class(1225) at 6", "Insert MethodDeclaration(1177) into TypeDeclaration: class(1225) at 7", "Insert MethodDeclaration(1198) into TypeDeclaration: class(1225) at 8", "Insert MethodDeclaration(1208) into TypeDeclaration: class(1225) at 9", "Insert MethodDeclaration(1216) into TypeDeclaration: class(1225) at 10", "Insert FieldDeclaration(1224) into TypeDeclaration: class(1225) at 11", "Insert Javadoc(1241) into MethodDeclaration(1257) at 0", "Insert MarkerAnnotation(1243) into MethodDeclaration(1257) at 1", "Insert Modifier: public(1244) into MethodDeclaration(1257) at 2", "Insert Modifier: static(1245) into MethodDeclaration(1257) at 3", "Insert ParameterizedType: Converter<String,Integer>(1252) into MethodDeclaration(1257) at 4", "Insert SimpleName: stringConverter(1253) into MethodDeclaration(1257) at 5", "Insert Block(1256) into MethodDeclaration(1257) at 6", "Insert SimpleType: Converter(1138) into ParameterizedType: Converter<String,Integer>(1143) at 0", "Insert SimpleType: String(1140) into ParameterizedType: Converter<String,Integer>(1143) at 1", "Insert SimpleType: Integer(1142) into ParameterizedType: Converter<String,Integer>(1143) at 2", "Insert SimpleName: Serializable(1144) into SimpleType: Serializable(1145) at 0", "Insert Modifier: static(1146) into FieldDeclaration(1155) at 0", "Insert Modifier: final(1147) into FieldDeclaration(1155) at 1", "Insert SimpleType: IntConverter(1149) into FieldDeclaration(1155) at 2", "Insert VariableDeclarationFragment(1154) into FieldDeclaration(1155) at 3", "Insert MarkerAnnotation(1157) into MethodDeclaration(1177) at 0", "Insert Modifier: protected(1158) into MethodDeclaration(1177) at 1", "Insert SimpleType: Integer(1160) into MethodDeclaration(1177) at 2", "Insert SimpleName: doForward(1161) into MethodDeclaration(1177) at 3", "Insert SingleVariableDeclaration(1165) into MethodDeclaration(1177) at 4", "Insert Block(1176) into MethodDeclaration(1177) at 5", "Insert MarkerAnnotation(1179) into MethodDeclaration(1198) at 0", "Insert Modifier: protected(1180) into MethodDeclaration(1198) at 1", "Insert SimpleType: String(1182) into MethodDeclaration(1198) at 2", "Insert SimpleName: doBackward(1183) into MethodDeclaration(1198) at 3", "Insert SingleVariableDeclaration(1187) into MethodDeclaration(1198) at 4", "Insert Block(1197) into MethodDeclaration(1198) at 5", "Insert MarkerAnnotation(1200) into MethodDeclaration(1208) at 0", "Insert Modifier: public(1201) into MethodDeclaration(1208) at 1", "Insert SimpleType: String(1203) into MethodDeclaration(1208) at 2", "Insert SimpleName: toString(1204) into MethodDeclaration(1208) at 3", "Insert Block(1207) into MethodDeclaration(1208) at 4", "Insert Modifier: private(1209) into MethodDeclaration(1216) at 0", "Insert SimpleType: Object(1211) into MethodDeclaration(1216) at 1", "Insert SimpleName: readResolve(1212) into MethodDeclaration(1216) at 2", "Insert Block(1215) into MethodDeclaration(1216) at 3", "Insert Modifier: private(1217) into FieldDeclaration(1224) at 0", "Insert Modifier: static(1218) into FieldDeclaration(1224) at 1", "Insert Modifier: final(1219) into FieldDeclaration(1224) at 2", "Insert PrimitiveType: long(1220) into FieldDeclaration(1224) at 3", "Insert VariableDeclarationFragment(1223) into FieldDeclaration(1224) at 4", "Insert TagElement(1238) into Javadoc(1241) at 0", "Insert TagElement: @since(1240) into Javadoc(1241) at 1", "Insert SimpleName: Beta(1242) into MarkerAnnotation(1243) at 0", "Insert SimpleType: Converter(1247) into ParameterizedType: Converter<String,Integer>(1252) at 0", "Insert SimpleType: String(1249) into ParameterizedType: Converter<String,Integer>(1252) at 1", "Insert SimpleType: Integer(1251) into ParameterizedType: Converter<String,Integer>(1252) at 2", "Insert ReturnStatement(1255) into Block(1256) at 0", "Insert SimpleName: Converter(1137) into SimpleType: Converter(1138) at 0", "Insert SimpleName: String(1139) into SimpleType: String(1140) at 0", "Insert SimpleName: Integer(1141) into SimpleType: Integer(1142) at 0", "Insert SimpleName: IntConverter(1148) into SimpleType: IntConverter(1149) at 0", "Insert SimpleName: INSTANCE(1150) into VariableDeclarationFragment(1154) at 0", "Insert ClassInstanceCreation(1153) into VariableDeclarationFragment(1154) at 1", "Insert SimpleName: Override(1156) into MarkerAnnotation(1157) at 0", "Insert SimpleName: Integer(1159) into SimpleType: Integer(1160) at 0", "Insert SimpleType: String(1163) into SingleVariableDeclaration(1165) at 0", "Insert SimpleName: value(1164) into SingleVariableDeclaration(1165) at 1", "Insert ReturnStatement(1175) into Block(1176) at 0", "Insert SimpleName: Override(1178) into MarkerAnnotation(1179) at 0", "Insert SimpleName: String(1181) into SimpleType: String(1182) at 0", "Insert SimpleType: Integer(1185) into SingleVariableDeclaration(1187) at 0", "Insert SimpleName: value(1186) into SingleVariableDeclaration(1187) at 1", "Insert ReturnStatement(1196) into Block(1197) at 0", "Insert SimpleName: Override(1199) into MarkerAnnotation(1200) at 0", "Insert SimpleName: String(1202) into SimpleType: String(1203) at 0", "Insert ReturnStatement(1206) into Block(1207) at 0", "Insert SimpleName: Object(1210) into SimpleType: Object(1211) at 0", "Insert ReturnStatement(1214) into Block(1215) at 0", "Insert SimpleName: serialVersionUID(1221) into VariableDeclarationFragment(1223) at 0", "Insert NumberLiteral: 1(1222) into VariableDeclarationFragment(1223) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(1226) into TagElement(1238) at 0", "Insert TextElement: integers using (1227) into TagElement(1238) at 1", "Insert TagElement: @link(1231) into TagElement(1238) at 2", "Insert TextElement:  and (1232) into TagElement(1238) at 3", "Insert TagElement: @link(1236) into TagElement(1238) at 4", "Insert TextElement: .(1237) into TagElement(1238) at 5", "Insert TextElement:  16.0(1239) into TagElement: @since(1240) at 0", "Insert SimpleName: Converter(1246) into SimpleType: Converter(1247) at 0", "Insert SimpleName: String(1248) into SimpleType: String(1249) at 0", "Insert SimpleName: Integer(1250) into SimpleType: Integer(1251) at 0", "Insert QualifiedName: IntConverter.INSTANCE(1254) into ReturnStatement(1255) at 0", "Insert SimpleType: IntConverter(1152) into ClassInstanceCreation(1153) at 0", "Insert SimpleName: String(1162) into SimpleType: String(1163) at 0", "Insert ConditionalExpression(1174) into ReturnStatement(1175) at 0", "Insert SimpleName: Integer(1184) into SimpleType: Integer(1185) at 0", "Insert ConditionalExpression(1195) into ReturnStatement(1196) at 0", "Insert StringLiteral: \"Ints.stringConverter()\"(1205) into ReturnStatement(1206) at 0", "Insert SimpleName: INSTANCE(1213) into ReturnStatement(1214) at 0", "Insert MemberRef(1230) into TagElement: @link(1231) at 0", "Insert MethodRef(1235) into TagElement: @link(1236) at 0", "Insert SimpleName: IntConverter(1151) into SimpleType: IntConverter(1152) at 0", "Insert InfixExpression: ==(1168) into ConditionalExpression(1174) at 0", "Insert NullLiteral(1169) into ConditionalExpression(1174) at 1", "Insert MethodInvocation(1173) into ConditionalExpression(1174) at 2", "Insert InfixExpression: ==(1190) into ConditionalExpression(1195) at 0", "Insert NullLiteral(1191) into ConditionalExpression(1195) at 1", "Insert MethodInvocation(1194) into ConditionalExpression(1195) at 2", "Insert SimpleName: Integer(1228) into MemberRef(1230) at 0", "Insert SimpleName: decode(1229) into MemberRef(1230) at 1", "Insert SimpleName: Integer(1233) into MethodRef(1235) at 0", "Insert SimpleName: toString(1234) into MethodRef(1235) at 1", "Insert SimpleName: value(1166) into InfixExpression: ==(1168) at 0", "Insert NullLiteral(1167) into InfixExpression: ==(1168) at 1", "Insert SimpleName: Integer(1170) into MethodInvocation(1173) at 0", "Insert SimpleName: decode(1171) into MethodInvocation(1173) at 1", "Insert SimpleName: value(1172) into MethodInvocation(1173) at 2", "Insert SimpleName: value(1188) into InfixExpression: ==(1190) at 0", "Insert NullLiteral(1189) into InfixExpression: ==(1190) at 1", "Insert SimpleName: value(1192) into MethodInvocation(1194) at 0", "Insert SimpleName: toString(1193) into MethodInvocation(1194) at 1"]}}, {"Longs_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 23", "operations": ["INS SimpleType: String to ParameterizedType: Converter<String,Long> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleType: Converter to ParameterizedType: Converter<String,Long> at 0", "INS SimpleType: LongConverter to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Long to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ConditionalExpression at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: Object to SimpleType: Object at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS ReturnStatement to Block at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleName: decode to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 2", "INS InfixExpression: == to ConditionalExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: LongConverter to SimpleType: LongConverter at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS Modifier: static to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleType: LongConverter to ClassInstanceCreation at 0", "INS SimpleName: LongConverter to TypeDeclaration: class at 3", "INS SimpleName: Long to SimpleType: Long at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: Long to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleType: Object to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS StringLiteral: \"Longs.stringConverter()\" to ReturnStatement at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ReturnStatement to Block at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ParameterizedType: Converter<String,Long> to TypeDeclaration: class at 4", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: Long to MethodInvocation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 23", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: value to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: value to MethodInvocation at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleName: LongConverter to SimpleType: LongConverter at 0", "INS SimpleType: Long to ParameterizedType: Converter<String,Long> at 2", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS Modifier: private to TypeDeclaration: class at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS SimpleName: Beta to MarkerAnnotation at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Long> at 1", "INS SimpleName: Long to MemberRef at 0", "INS TextElement:  and  to TagElement at 3", "INS ReturnStatement to Block at 0", "INS QualifiedName: LongConverter.INSTANCE to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Converter<String,Long> to MethodDeclaration at 4", "INS TextElement:  16.0 to TagElement: @since at 0", "INS Block to MethodDeclaration at 6", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: Long to MethodRef at 0", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TagElement: @link to TagElement at 4", "INS TagElement: @link to TagElement at 2", "INS SimpleType: Converter to ParameterizedType: Converter<String,Long> at 0", "INS TextElement: longs using  to TagElement at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: decode to MemberRef at 1", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: toString to MethodRef at 1", "INS Modifier: static to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleType: Long to ParameterizedType: Converter<String,Long> at 2", "INS MarkerAnnotation to MethodDeclaration at 1", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS TextElement: . to TagElement at 5"]}]}}, {"Longs_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1552) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1679)", "Insert ImportDeclaration(15) into CompilationUnit(2521) at 7", "Insert QualifiedName: com.google.common.base.Converter(14) into ImportDeclaration(15) at 0", "Insert TypeDeclaration: class(1368) into TypeDeclaration: class(2520) at 23", "Insert MethodDeclaration(1400) into TypeDeclaration: class(2520) at 24", "Insert Modifier: private(1276) into TypeDeclaration: class(1368) at 0", "Insert Modifier: static(1277) into TypeDeclaration: class(1368) at 1", "Insert Modifier: final(1278) into TypeDeclaration: class(1368) at 2", "Insert SimpleName: LongConverter(1279) into TypeDeclaration: class(1368) at 3", "Insert ParameterizedType: Converter<String,Long>(1286) into TypeDeclaration: class(1368) at 4", "Insert SimpleType: Serializable(1288) into TypeDeclaration: class(1368) at 5", "Insert FieldDeclaration(1298) into TypeDeclaration: class(1368) at 6", "Insert MethodDeclaration(1320) into TypeDeclaration: class(1368) at 7", "Insert MethodDeclaration(1341) into TypeDeclaration: class(1368) at 8", "Insert MethodDeclaration(1351) into TypeDeclaration: class(1368) at 9", "Insert MethodDeclaration(1359) into TypeDeclaration: class(1368) at 10", "Insert FieldDeclaration(1367) into TypeDeclaration: class(1368) at 11", "Insert Javadoc(1384) into MethodDeclaration(1400) at 0", "Insert MarkerAnnotation(1386) into MethodDeclaration(1400) at 1", "Insert Modifier: public(1387) into MethodDeclaration(1400) at 2", "Insert Modifier: static(1388) into MethodDeclaration(1400) at 3", "Insert ParameterizedType: Converter<String,Long>(1395) into MethodDeclaration(1400) at 4", "Insert SimpleName: stringConverter(1396) into MethodDeclaration(1400) at 5", "Insert Block(1399) into MethodDeclaration(1400) at 6", "Insert SimpleType: Converter(1281) into ParameterizedType: Converter<String,Long>(1286) at 0", "Insert SimpleType: String(1283) into ParameterizedType: Converter<String,Long>(1286) at 1", "Insert SimpleType: Long(1285) into ParameterizedType: Converter<String,Long>(1286) at 2", "Insert SimpleName: Serializable(1287) into SimpleType: Serializable(1288) at 0", "Insert Modifier: static(1289) into FieldDeclaration(1298) at 0", "Insert Modifier: final(1290) into FieldDeclaration(1298) at 1", "Insert SimpleType: LongConverter(1292) into FieldDeclaration(1298) at 2", "Insert VariableDeclarationFragment(1297) into FieldDeclaration(1298) at 3", "Insert MarkerAnnotation(1300) into MethodDeclaration(1320) at 0", "Insert Modifier: protected(1301) into MethodDeclaration(1320) at 1", "Insert SimpleType: Long(1303) into MethodDeclaration(1320) at 2", "Insert SimpleName: doForward(1304) into MethodDeclaration(1320) at 3", "Insert SingleVariableDeclaration(1308) into MethodDeclaration(1320) at 4", "Insert Block(1319) into MethodDeclaration(1320) at 5", "Insert MarkerAnnotation(1322) into MethodDeclaration(1341) at 0", "Insert Modifier: protected(1323) into MethodDeclaration(1341) at 1", "Insert SimpleType: String(1325) into MethodDeclaration(1341) at 2", "Insert SimpleName: doBackward(1326) into MethodDeclaration(1341) at 3", "Insert SingleVariableDeclaration(1330) into MethodDeclaration(1341) at 4", "Insert Block(1340) into MethodDeclaration(1341) at 5", "Insert MarkerAnnotation(1343) into MethodDeclaration(1351) at 0", "Insert Modifier: public(1344) into MethodDeclaration(1351) at 1", "Insert SimpleType: String(1346) into MethodDeclaration(1351) at 2", "Insert SimpleName: toString(1347) into MethodDeclaration(1351) at 3", "Insert Block(1350) into MethodDeclaration(1351) at 4", "Insert Modifier: private(1352) into MethodDeclaration(1359) at 0", "Insert SimpleType: Object(1354) into MethodDeclaration(1359) at 1", "Insert SimpleName: readResolve(1355) into MethodDeclaration(1359) at 2", "Insert Block(1358) into MethodDeclaration(1359) at 3", "Insert Modifier: private(1360) into FieldDeclaration(1367) at 0", "Insert Modifier: static(1361) into FieldDeclaration(1367) at 1", "Insert Modifier: final(1362) into FieldDeclaration(1367) at 2", "Insert PrimitiveType: long(1363) into FieldDeclaration(1367) at 3", "Insert VariableDeclarationFragment(1366) into FieldDeclaration(1367) at 4", "Insert TagElement(1381) into Javadoc(1384) at 0", "Insert TagElement: @since(1383) into Javadoc(1384) at 1", "Insert SimpleName: Beta(1385) into MarkerAnnotation(1386) at 0", "Insert SimpleType: Converter(1390) into ParameterizedType: Converter<String,Long>(1395) at 0", "Insert SimpleType: String(1392) into ParameterizedType: Converter<String,Long>(1395) at 1", "Insert SimpleType: Long(1394) into ParameterizedType: Converter<String,Long>(1395) at 2", "Insert ReturnStatement(1398) into Block(1399) at 0", "Insert SimpleName: Converter(1280) into SimpleType: Converter(1281) at 0", "Insert SimpleName: String(1282) into SimpleType: String(1283) at 0", "Insert SimpleName: Long(1284) into SimpleType: Long(1285) at 0", "Insert SimpleName: LongConverter(1291) into SimpleType: LongConverter(1292) at 0", "Insert SimpleName: INSTANCE(1293) into VariableDeclarationFragment(1297) at 0", "Insert ClassInstanceCreation(1296) into VariableDeclarationFragment(1297) at 1", "Insert SimpleName: Override(1299) into MarkerAnnotation(1300) at 0", "Insert SimpleName: Long(1302) into SimpleType: Long(1303) at 0", "Insert SimpleType: String(1306) into SingleVariableDeclaration(1308) at 0", "Insert SimpleName: value(1307) into SingleVariableDeclaration(1308) at 1", "Insert ReturnStatement(1318) into Block(1319) at 0", "Insert SimpleName: Override(1321) into MarkerAnnotation(1322) at 0", "Insert SimpleName: String(1324) into SimpleType: String(1325) at 0", "Insert SimpleType: Long(1328) into SingleVariableDeclaration(1330) at 0", "Insert SimpleName: value(1329) into SingleVariableDeclaration(1330) at 1", "Insert ReturnStatement(1339) into Block(1340) at 0", "Insert SimpleName: Override(1342) into MarkerAnnotation(1343) at 0", "Insert SimpleName: String(1345) into SimpleType: String(1346) at 0", "Insert ReturnStatement(1349) into Block(1350) at 0", "Insert SimpleName: Object(1353) into SimpleType: Object(1354) at 0", "Insert ReturnStatement(1357) into Block(1358) at 0", "Insert SimpleName: serialVersionUID(1364) into VariableDeclarationFragment(1366) at 0", "Insert NumberLiteral: 1(1365) into VariableDeclarationFragment(1366) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(1369) into TagElement(1381) at 0", "Insert TextElement: longs using (1370) into TagElement(1381) at 1", "Insert TagElement: @link(1374) into TagElement(1381) at 2", "Insert TextElement:  and (1375) into TagElement(1381) at 3", "Insert TagElement: @link(1379) into TagElement(1381) at 4", "Insert TextElement: .(1380) into TagElement(1381) at 5", "Insert TextElement:  16.0(1382) into TagElement: @since(1383) at 0", "Insert SimpleName: Converter(1389) into SimpleType: Converter(1390) at 0", "Insert SimpleName: String(1391) into SimpleType: String(1392) at 0", "Insert SimpleName: Long(1393) into SimpleType: Long(1394) at 0", "Insert QualifiedName: LongConverter.INSTANCE(1397) into ReturnStatement(1398) at 0", "Insert SimpleType: LongConverter(1295) into ClassInstanceCreation(1296) at 0", "Insert SimpleName: String(1305) into SimpleType: String(1306) at 0", "Insert ConditionalExpression(1317) into ReturnStatement(1318) at 0", "Insert SimpleName: Long(1327) into SimpleType: Long(1328) at 0", "Insert ConditionalExpression(1338) into ReturnStatement(1339) at 0", "Insert StringLiteral: \"Longs.stringConverter()\"(1348) into ReturnStatement(1349) at 0", "Insert SimpleName: INSTANCE(1356) into ReturnStatement(1357) at 0", "Insert MemberRef(1373) into TagElement: @link(1374) at 0", "Insert MethodRef(1378) into TagElement: @link(1379) at 0", "Insert SimpleName: LongConverter(1294) into SimpleType: LongConverter(1295) at 0", "Insert InfixExpression: ==(1311) into ConditionalExpression(1317) at 0", "Insert NullLiteral(1312) into ConditionalExpression(1317) at 1", "Insert MethodInvocation(1316) into ConditionalExpression(1317) at 2", "Insert InfixExpression: ==(1333) into ConditionalExpression(1338) at 0", "Insert NullLiteral(1334) into ConditionalExpression(1338) at 1", "Insert MethodInvocation(1337) into ConditionalExpression(1338) at 2", "Insert SimpleName: Long(1371) into MemberRef(1373) at 0", "Insert SimpleName: decode(1372) into MemberRef(1373) at 1", "Insert SimpleName: Long(1376) into MethodRef(1378) at 0", "Insert SimpleName: toString(1377) into MethodRef(1378) at 1", "Insert SimpleName: value(1309) into InfixExpression: ==(1311) at 0", "Insert NullLiteral(1310) into InfixExpression: ==(1311) at 1", "Insert SimpleName: Long(1313) into MethodInvocation(1316) at 0", "Insert SimpleName: decode(1314) into MethodInvocation(1316) at 1", "Insert SimpleName: value(1315) into MethodInvocation(1316) at 2", "Insert SimpleName: value(1331) into InfixExpression: ==(1333) at 0", "Insert NullLiteral(1332) into InfixExpression: ==(1333) at 1", "Insert SimpleName: value(1335) into MethodInvocation(1337) at 0", "Insert SimpleName: toString(1336) into MethodInvocation(1337) at 1"]}}, {"Shorts_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 24", "operations": ["INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: ShortConverter to SimpleType: ShortConverter at 0", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to MethodInvocation at 0", "INS SimpleType: Short to MethodDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS NullLiteral to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleType: Converter to ParameterizedType: Converter<String,Short> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ShortConverter to TypeDeclaration: class at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS ParameterizedType: Converter<String,Short> to TypeDeclaration: class at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS SimpleName: Short to SimpleType: Short at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS InfixExpression: == to ConditionalExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS Modifier: final to TypeDeclaration: class at 2", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: Short to ParameterizedType: Converter<String,Short> at 2", "INS SimpleType: ShortConverter to ClassInstanceCreation at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleType: ShortConverter to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Short to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: Object to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS NullLiteral to InfixExpression: == at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Short> at 1", "INS NullLiteral to ConditionalExpression at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 24", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Modifier: static to FieldDeclaration at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS StringLiteral: \"Shorts.stringConverter()\" to ReturnStatement at 0", "INS SimpleName: ShortConverter to SimpleType: ShortConverter at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: decode to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS ReturnStatement to Block at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS SimpleName: Short to MemberRef at 0", "INS SimpleType: Short to ParameterizedType: Converter<String,Short> at 2", "INS QualifiedName: ShortConverter.INSTANCE to ReturnStatement at 0", "INS SimpleName: Short to MethodRef at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: toString to MethodRef at 1", "INS TextElement:  and  to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS MethodRef to TagElement: @link at 0", "INS TextElement: shorts using  to TagElement at 1", "INS SimpleName: Short to SimpleType: Short at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: decode to MemberRef at 1", "INS Modifier: static to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TextElement: . to TagElement at 5", "INS SimpleType: Converter to ParameterizedType: Converter<String,Short> at 0", "INS ParameterizedType: Converter<String,Short> to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 4", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS TagElement: @link to TagElement at 2", "INS SimpleType: String to ParameterizedType: Converter<String,Short> at 1", "INS MemberRef to TagElement: @link at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS TagElement to Javadoc at 0"]}]}}, {"Shorts_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1363) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1492)", "Insert ImportDeclaration(11) into CompilationUnit(2334) at 5", "Insert ImportDeclaration(17) into CompilationUnit(2334) at 8", "Insert QualifiedName: com.google.common.annotations.Beta(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: com.google.common.base.Converter(16) into ImportDeclaration(17) at 0", "Insert TypeDeclaration: class(1180) into TypeDeclaration: class(2333) at 24", "Insert MethodDeclaration(1212) into TypeDeclaration: class(2333) at 25", "Insert Modifier: private(1088) into TypeDeclaration: class(1180) at 0", "Insert Modifier: static(1089) into TypeDeclaration: class(1180) at 1", "Insert Modifier: final(1090) into TypeDeclaration: class(1180) at 2", "Insert SimpleName: ShortConverter(1091) into TypeDeclaration: class(1180) at 3", "Insert ParameterizedType: Converter<String,Short>(1098) into TypeDeclaration: class(1180) at 4", "Insert SimpleType: Serializable(1100) into TypeDeclaration: class(1180) at 5", "Insert FieldDeclaration(1110) into TypeDeclaration: class(1180) at 6", "Insert MethodDeclaration(1132) into TypeDeclaration: class(1180) at 7", "Insert MethodDeclaration(1153) into TypeDeclaration: class(1180) at 8", "Insert MethodDeclaration(1163) into TypeDeclaration: class(1180) at 9", "Insert MethodDeclaration(1171) into TypeDeclaration: class(1180) at 10", "Insert FieldDeclaration(1179) into TypeDeclaration: class(1180) at 11", "Insert Javadoc(1196) into MethodDeclaration(1212) at 0", "Insert MarkerAnnotation(1198) into MethodDeclaration(1212) at 1", "Insert Modifier: public(1199) into MethodDeclaration(1212) at 2", "Insert Modifier: static(1200) into MethodDeclaration(1212) at 3", "Insert ParameterizedType: Converter<String,Short>(1207) into MethodDeclaration(1212) at 4", "Insert SimpleName: stringConverter(1208) into MethodDeclaration(1212) at 5", "Insert Block(1211) into MethodDeclaration(1212) at 6", "Insert SimpleType: Converter(1093) into ParameterizedType: Converter<String,Short>(1098) at 0", "Insert SimpleType: String(1095) into ParameterizedType: Converter<String,Short>(1098) at 1", "Insert SimpleType: Short(1097) into ParameterizedType: Converter<String,Short>(1098) at 2", "Insert SimpleName: Serializable(1099) into SimpleType: Serializable(1100) at 0", "Insert Modifier: static(1101) into FieldDeclaration(1110) at 0", "Insert Modifier: final(1102) into FieldDeclaration(1110) at 1", "Insert SimpleType: ShortConverter(1104) into FieldDeclaration(1110) at 2", "Insert VariableDeclarationFragment(1109) into FieldDeclaration(1110) at 3", "Insert MarkerAnnotation(1112) into MethodDeclaration(1132) at 0", "Insert Modifier: protected(1113) into MethodDeclaration(1132) at 1", "Insert SimpleType: Short(1115) into MethodDeclaration(1132) at 2", "Insert SimpleName: doForward(1116) into MethodDeclaration(1132) at 3", "Insert SingleVariableDeclaration(1120) into MethodDeclaration(1132) at 4", "Insert Block(1131) into MethodDeclaration(1132) at 5", "Insert MarkerAnnotation(1134) into MethodDeclaration(1153) at 0", "Insert Modifier: protected(1135) into MethodDeclaration(1153) at 1", "Insert SimpleType: String(1137) into MethodDeclaration(1153) at 2", "Insert SimpleName: doBackward(1138) into MethodDeclaration(1153) at 3", "Insert SingleVariableDeclaration(1142) into MethodDeclaration(1153) at 4", "Insert Block(1152) into MethodDeclaration(1153) at 5", "Insert MarkerAnnotation(1155) into MethodDeclaration(1163) at 0", "Insert Modifier: public(1156) into MethodDeclaration(1163) at 1", "Insert SimpleType: String(1158) into MethodDeclaration(1163) at 2", "Insert SimpleName: toString(1159) into MethodDeclaration(1163) at 3", "Insert Block(1162) into MethodDeclaration(1163) at 4", "Insert Modifier: private(1164) into MethodDeclaration(1171) at 0", "Insert SimpleType: Object(1166) into MethodDeclaration(1171) at 1", "Insert SimpleName: readResolve(1167) into MethodDeclaration(1171) at 2", "Insert Block(1170) into MethodDeclaration(1171) at 3", "Insert Modifier: private(1172) into FieldDeclaration(1179) at 0", "Insert Modifier: static(1173) into FieldDeclaration(1179) at 1", "Insert Modifier: final(1174) into FieldDeclaration(1179) at 2", "Insert PrimitiveType: long(1175) into FieldDeclaration(1179) at 3", "Insert VariableDeclarationFragment(1178) into FieldDeclaration(1179) at 4", "Insert TagElement(1193) into Javadoc(1196) at 0", "Insert TagElement: @since(1195) into Javadoc(1196) at 1", "Insert SimpleName: Beta(1197) into MarkerAnnotation(1198) at 0", "Insert SimpleType: Converter(1202) into ParameterizedType: Converter<String,Short>(1207) at 0", "Insert SimpleType: String(1204) into ParameterizedType: Converter<String,Short>(1207) at 1", "Insert SimpleType: Short(1206) into ParameterizedType: Converter<String,Short>(1207) at 2", "Insert ReturnStatement(1210) into Block(1211) at 0", "Insert SimpleName: Converter(1092) into SimpleType: Converter(1093) at 0", "Insert SimpleName: String(1094) into SimpleType: String(1095) at 0", "Insert SimpleName: Short(1096) into SimpleType: Short(1097) at 0", "Insert SimpleName: ShortConverter(1103) into SimpleType: ShortConverter(1104) at 0", "Insert SimpleName: INSTANCE(1105) into VariableDeclarationFragment(1109) at 0", "Insert ClassInstanceCreation(1108) into VariableDeclarationFragment(1109) at 1", "Insert SimpleName: Override(1111) into MarkerAnnotation(1112) at 0", "Insert SimpleName: Short(1114) into SimpleType: Short(1115) at 0", "Insert SimpleType: String(1118) into SingleVariableDeclaration(1120) at 0", "Insert SimpleName: value(1119) into SingleVariableDeclaration(1120) at 1", "Insert ReturnStatement(1130) into Block(1131) at 0", "Insert SimpleName: Override(1133) into MarkerAnnotation(1134) at 0", "Insert SimpleName: String(1136) into SimpleType: String(1137) at 0", "Insert SimpleType: Short(1140) into SingleVariableDeclaration(1142) at 0", "Insert SimpleName: value(1141) into SingleVariableDeclaration(1142) at 1", "Insert ReturnStatement(1151) into Block(1152) at 0", "Insert SimpleName: Override(1154) into MarkerAnnotation(1155) at 0", "Insert SimpleName: String(1157) into SimpleType: String(1158) at 0", "Insert ReturnStatement(1161) into Block(1162) at 0", "Insert SimpleName: Object(1165) into SimpleType: Object(1166) at 0", "Insert ReturnStatement(1169) into Block(1170) at 0", "Insert SimpleName: serialVersionUID(1176) into VariableDeclarationFragment(1178) at 0", "Insert NumberLiteral: 1(1177) into VariableDeclarationFragment(1178) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(1181) into TagElement(1193) at 0", "Insert TextElement: shorts using (1182) into TagElement(1193) at 1", "Insert TagElement: @link(1186) into TagElement(1193) at 2", "Insert TextElement:  and (1187) into TagElement(1193) at 3", "Insert TagElement: @link(1191) into TagElement(1193) at 4", "Insert TextElement: .(1192) into TagElement(1193) at 5", "Insert TextElement:  16.0(1194) into TagElement: @since(1195) at 0", "Insert SimpleName: Converter(1201) into SimpleType: Converter(1202) at 0", "Insert SimpleName: String(1203) into SimpleType: String(1204) at 0", "Insert SimpleName: Short(1205) into SimpleType: Short(1206) at 0", "Insert QualifiedName: ShortConverter.INSTANCE(1209) into ReturnStatement(1210) at 0", "Insert SimpleType: ShortConverter(1107) into ClassInstanceCreation(1108) at 0", "Insert SimpleName: String(1117) into SimpleType: String(1118) at 0", "Insert ConditionalExpression(1129) into ReturnStatement(1130) at 0", "Insert SimpleName: Short(1139) into SimpleType: Short(1140) at 0", "Insert ConditionalExpression(1150) into ReturnStatement(1151) at 0", "Insert StringLiteral: \"Shorts.stringConverter()\"(1160) into ReturnStatement(1161) at 0", "Insert SimpleName: INSTANCE(1168) into ReturnStatement(1169) at 0", "Insert MemberRef(1185) into TagElement: @link(1186) at 0", "Insert MethodRef(1190) into TagElement: @link(1191) at 0", "Insert SimpleName: ShortConverter(1106) into SimpleType: ShortConverter(1107) at 0", "Insert InfixExpression: ==(1123) into ConditionalExpression(1129) at 0", "Insert NullLiteral(1124) into ConditionalExpression(1129) at 1", "Insert MethodInvocation(1128) into ConditionalExpression(1129) at 2", "Insert InfixExpression: ==(1145) into ConditionalExpression(1150) at 0", "Insert NullLiteral(1146) into ConditionalExpression(1150) at 1", "Insert MethodInvocation(1149) into ConditionalExpression(1150) at 2", "Insert SimpleName: Short(1183) into MemberRef(1185) at 0", "Insert SimpleName: decode(1184) into MemberRef(1185) at 1", "Insert SimpleName: Short(1188) into MethodRef(1190) at 0", "Insert SimpleName: toString(1189) into MethodRef(1190) at 1", "Insert SimpleName: value(1121) into InfixExpression: ==(1123) at 0", "Insert NullLiteral(1122) into InfixExpression: ==(1123) at 1", "Insert SimpleName: Short(1125) into MethodInvocation(1128) at 0", "Insert SimpleName: decode(1126) into MethodInvocation(1128) at 1", "Insert SimpleName: value(1127) into MethodInvocation(1128) at 2", "Insert SimpleName: value(1143) into InfixExpression: ==(1145) at 0", "Insert NullLiteral(1144) into InfixExpression: ==(1145) at 1", "Insert SimpleName: value(1147) into MethodInvocation(1149) at 0", "Insert SimpleName: toString(1148) into MethodInvocation(1149) at 1"]}}, {"Enums_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: enumClass to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: name to MethodInvocation at 1", "INS TextElement:  enum to TagElement: @code at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS TextElement: of type  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @code to TagElement at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS TagElement: @code to TagElement at 11", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS TagElement: @code to TagElement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: T to ParameterizedType: Class<T> at 1", "INS SimpleType: Class to MethodRefParameter at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleType: T to ParameterizedType: Enum<T> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: enumValue to InfixExpression: == at 0", "INS ParameterizedType: Converter<String,T> to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleType: String to ParameterizedType: Converter<String,T> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: static to MethodDeclaration at 2", "INS TextElement:  IllegalArgumentException to TagElement: @code at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS TextElement: argument is not the name of any enum constant in the specified enum. to TagElement at 13", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: T to SimpleType: T at 0", "INS TextElement:  and to TagElement at 7", "INS MethodRefParameter to MethodRef at 2", "INS SimpleName: enumClass to SingleVariableDeclaration at 2", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TextElement: . to TagElement at 9", "INS SimpleName: enumValue to SingleVariableDeclaration at 1", "INS SimpleType: Class to ParameterizedType: Class<T> at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: enumValue to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS TextElement:  using  to TagElement at 5", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleType: String to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 8", "INS StringLiteral: \"Enums.stringConverter(\" to InfixExpression: + at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS TextElement:  enumClass to TagElement: @code at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS Block to MethodDeclaration at 7", "INS ConditionalExpression to ReturnStatement at 0", "INS TagElement: @link to TagElement at 6", "INS SimpleName: value to MethodInvocation at 3", "INS SimpleType: T to ParameterizedType: Converter<String,T> at 2", "INS SimpleName: name to MethodRef at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: valueOf to MethodRef at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  values to TagElement at 2", "INS MethodInvocation to ConditionalExpression at 2", "INS TextElement:  if the to TagElement at 12", "INS MethodRef to TagElement: @link at 0", "INS StringLiteral: \")\" to InfixExpression: + at 2", "INS SimpleName: String to SimpleType: String at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,T> at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS Block to MethodDeclaration at 4", "INS TextElement: Returns a converter that converts between strings and  to TagElement at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to MethodDeclaration at 2", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: enumClass to InfixExpression: + at 1", "INS ParameterizedType: Enum<T> to TypeParameter at 1", "INS SimpleType: String to ParameterizedType: Converter<String,T> at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleType: T to ParameterizedType: Converter<String,T> at 2", "INS MethodRefParameter to MethodRef at 3", "INS SimpleName: Enum to MethodRef at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParameterizedType: Class<T> to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS NullLiteral to ConditionalExpression at 1", "INS ParameterizedType: Converter<String,T> to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: enumClass to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: Enum to ParameterizedType: Enum<T> at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: Enum to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Enum to SimpleType: Enum at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: The converter will throw an  to TagElement at 10", "INS SimpleName: Enum to MethodRef at 0"]}]}}, {"Enums_diff": {"operations": ["Insert MethodDeclaration(533) into TypeDeclaration: class(534) at 11", "Insert Javadoc(435) into MethodDeclaration(533) at 0", "Insert Modifier: public(436) into MethodDeclaration(533) at 1", "Insert Modifier: static(437) into MethodDeclaration(533) at 2", "Insert TypeParameter(444) into MethodDeclaration(533) at 3", "Insert ParameterizedType: Converter<String,T>(451) into MethodDeclaration(533) at 4", "Insert SimpleName: stringConverter(452) into MethodDeclaration(533) at 5", "Insert SingleVariableDeclaration(460) into MethodDeclaration(533) at 6", "Insert Block(532) into MethodDeclaration(533) at 7", "Insert TagElement(432) into Javadoc(435) at 0", "Insert TagElement: @since(434) into Javadoc(435) at 1", "Insert SimpleName: T(438) into TypeParameter(444) at 0", "Insert ParameterizedType: Enum<T>(443) into TypeParameter(444) at 1", "Insert SimpleType: Converter(446) into ParameterizedType: Converter<String,T>(451) at 0", "Insert SimpleType: String(448) into ParameterizedType: Converter<String,T>(451) at 1", "Insert SimpleType: T(450) into ParameterizedType: Converter<String,T>(451) at 2", "Insert Modifier: final(453) into SingleVariableDeclaration(460) at 0", "Insert ParameterizedType: Class<T>(458) into SingleVariableDeclaration(460) at 1", "Insert SimpleName: enumClass(459) into SingleVariableDeclaration(460) at 2", "Insert ExpressionStatement(464) into Block(532) at 0", "Insert ReturnStatement(531) into Block(532) at 1", "Insert TextElement: Returns a converter that converts between strings and (403) into TagElement(432) at 0", "Insert TagElement: @code(405) into TagElement(432) at 1", "Insert TextElement:  values(406) into TagElement(432) at 2", "Insert TextElement: of type (407) into TagElement(432) at 3", "Insert TagElement: @code(409) into TagElement(432) at 4", "Insert TextElement:  using (410) into TagElement(432) at 5", "Insert TagElement: @link(420) into TagElement(432) at 6", "Insert TextElement:  and(421) into TagElement(432) at 7", "Insert TagElement: @link(425) into TagElement(432) at 8", "Insert TextElement: .(426) into TagElement(432) at 9", "Insert TextElement: The converter will throw an (427) into TagElement(432) at 10", "Insert TagElement: @code(429) into TagElement(432) at 11", "Insert TextElement:  if the(430) into TagElement(432) at 12", "Insert TextElement: argument is not the name of any enum constant in the specified enum.(431) into TagElement(432) at 13", "Insert TextElement:  16.0(433) into TagElement: @since(434) at 0", "Insert SimpleType: Enum(440) into ParameterizedType: Enum<T>(443) at 0", "Insert SimpleType: T(442) into ParameterizedType: Enum<T>(443) at 1", "Insert SimpleName: Converter(445) into SimpleType: Converter(446) at 0", "Insert SimpleName: String(447) into SimpleType: String(448) at 0", "Insert SimpleName: T(449) into SimpleType: T(450) at 0", "Insert SimpleType: Class(455) into ParameterizedType: Class<T>(458) at 0", "Insert SimpleType: T(457) into ParameterizedType: Class<T>(458) at 1", "Insert MethodInvocation(463) into ExpressionStatement(464) at 0", "Insert ClassInstanceCreation(530) into ReturnStatement(531) at 0", "Insert TextElement:  enum(404) into TagElement: @code(405) at 0", "Insert TextElement:  enumClass(408) into TagElement: @code(409) at 0", "Insert MethodRef(419) into TagElement: @link(420) at 0", "Insert MethodRef(424) into TagElement: @link(425) at 0", "Insert TextElement:  IllegalArgumentException(428) into TagElement: @code(429) at 0", "Insert SimpleName: Enum(439) into SimpleType: Enum(440) at 0", "Insert SimpleName: T(441) into SimpleType: T(442) at 0", "Insert SimpleName: Class(454) into SimpleType: Class(455) at 0", "Insert SimpleName: T(456) into SimpleType: T(457) at 0", "Insert SimpleName: checkNotNull(461) into MethodInvocation(463) at 0", "Insert SimpleName: enumClass(462) into MethodInvocation(463) at 1", "Insert ParameterizedType: Converter<String,T>(471) into ClassInstanceCreation(530) at 0", "Insert AnonymousClassDeclaration(529) into ClassInstanceCreation(530) at 1", "Insert SimpleName: Enum(411) into MethodRef(419) at 0", "Insert SimpleName: valueOf(412) into MethodRef(419) at 1", "Insert MethodRefParameter(415) into MethodRef(419) at 2", "Insert MethodRefParameter(418) into MethodRef(419) at 3", "Insert SimpleName: Enum(422) into MethodRef(424) at 0", "Insert SimpleName: name(423) into MethodRef(424) at 1", "Insert SimpleType: Converter(466) into ParameterizedType: Converter<String,T>(471) at 0", "Insert SimpleType: String(468) into ParameterizedType: Converter<String,T>(471) at 1", "Insert SimpleType: T(470) into ParameterizedType: Converter<String,T>(471) at 2", "Insert MethodDeclaration(494) into AnonymousClassDeclaration(529) at 0", "Insert MethodDeclaration(515) into AnonymousClassDeclaration(529) at 1", "Insert MethodDeclaration(528) into AnonymousClassDeclaration(529) at 2", "Insert SimpleType: Class(414) into MethodRefParameter(415) at 0", "Insert SimpleType: String(417) into MethodRefParameter(418) at 0", "Insert SimpleName: Converter(465) into SimpleType: Converter(466) at 0", "Insert SimpleName: String(467) into SimpleType: String(468) at 0", "Insert SimpleName: T(469) into SimpleType: T(470) at 0", "Insert MarkerAnnotation(473) into MethodDeclaration(494) at 0", "Insert Modifier: protected(474) into MethodDeclaration(494) at 1", "Insert SimpleType: T(476) into MethodDeclaration(494) at 2", "Insert SimpleName: doForward(477) into MethodDeclaration(494) at 3", "Insert SingleVariableDeclaration(481) into MethodDeclaration(494) at 4", "Insert Block(493) into MethodDeclaration(494) at 5", "Insert MarkerAnnotation(496) into MethodDeclaration(515) at 0", "Insert Modifier: protected(497) into MethodDeclaration(515) at 1", "Insert SimpleType: String(499) into MethodDeclaration(515) at 2", "Insert SimpleName: doBackward(500) into MethodDeclaration(515) at 3", "Insert SingleVariableDeclaration(504) into MethodDeclaration(515) at 4", "Insert Block(514) into MethodDeclaration(515) at 5", "Insert MarkerAnnotation(517) into MethodDeclaration(528) at 0", "Insert Modifier: public(518) into MethodDeclaration(528) at 1", "Insert SimpleType: String(520) into MethodDeclaration(528) at 2", "Insert SimpleName: toString(521) into MethodDeclaration(528) at 3", "Insert Block(527) into MethodDeclaration(528) at 4", "Insert SimpleName: Class(413) into SimpleType: Class(414) at 0", "Insert SimpleName: String(416) into SimpleType: String(417) at 0", "Insert SimpleName: Override(472) into MarkerAnnotation(473) at 0", "Insert SimpleName: T(475) into SimpleType: T(476) at 0", "Insert SimpleType: String(479) into SingleVariableDeclaration(481) at 0", "Insert SimpleName: value(480) into SingleVariableDeclaration(481) at 1", "Insert ReturnStatement(492) into Block(493) at 0", "Insert SimpleName: Override(495) into MarkerAnnotation(496) at 0", "Insert SimpleName: String(498) into SimpleType: String(499) at 0", "Insert SimpleType: T(502) into SingleVariableDeclaration(504) at 0", "Insert SimpleName: enumValue(503) into SingleVariableDeclaration(504) at 1", "Insert ReturnStatement(513) into Block(514) at 0", "Insert SimpleName: Override(516) into MarkerAnnotation(517) at 0", "Insert SimpleName: String(519) into SimpleType: String(520) at 0", "Insert ReturnStatement(526) into Block(527) at 0", "Insert SimpleName: String(478) into SimpleType: String(479) at 0", "Insert ConditionalExpression(491) into ReturnStatement(492) at 0", "Insert SimpleName: T(501) into SimpleType: T(502) at 0", "Insert ConditionalExpression(512) into ReturnStatement(513) at 0", "Insert InfixExpression: +(525) into ReturnStatement(526) at 0", "Insert InfixExpression: ==(484) into ConditionalExpression(491) at 0", "Insert NullLiteral(485) into ConditionalExpression(491) at 1", "Insert MethodInvocation(490) into ConditionalExpression(491) at 2", "Insert InfixExpression: ==(507) into ConditionalExpression(512) at 0", "Insert NullLiteral(508) into ConditionalExpression(512) at 1", "Insert MethodInvocation(511) into ConditionalExpression(512) at 2", "Insert StringLiteral: \"Enums.stringConverter(\"(522) into InfixExpression: +(525) at 0", "Insert SimpleName: enumClass(523) into InfixExpression: +(525) at 1", "Insert StringLiteral: \")\"(524) into InfixExpression: +(525) at 2", "Insert SimpleName: value(482) into InfixExpression: ==(484) at 0", "Insert NullLiteral(483) into InfixExpression: ==(484) at 1", "Insert SimpleName: Enum(486) into MethodInvocation(490) at 0", "Insert SimpleName: valueOf(487) into MethodInvocation(490) at 1", "Insert SimpleName: enumClass(488) into MethodInvocation(490) at 2", "Insert SimpleName: value(489) into MethodInvocation(490) at 3", "Insert SimpleName: enumValue(505) into InfixExpression: ==(507) at 0", "Insert NullLiteral(506) into InfixExpression: ==(507) at 1", "Insert SimpleName: enumValue(509) into MethodInvocation(511) at 0", "Insert SimpleName: name(510) into MethodInvocation(511) at 1"]}}, {"Maps_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 56", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: X to TypeParameter at 0", "INS TextElement:  a converter that is a view of the specified bimap to TagElement: @return at 0", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: X to ParameterizedType: BiMap<X,Y> at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: B to ParameterizedType: Converter<A,B> at 2", "INS TextElement: , to TagElement at 4", "INS SimpleType: B to ParameterizedType: BiMap<A,B> at 2", "INS SimpleName: bimap to MethodInvocation at 0", "INS SimpleType: Y to MethodDeclaration at 3", "INS SimpleName: bimap to TagElement: @param at 0", "INS SimpleName: bimap to SingleVariableDeclaration at 1", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS SimpleType: Converter to ParameterizedType: Converter<A,B> at 0", "INS SimpleType: Y to ParameterizedType: BiMap<X,Y> at 2", "INS SimpleType: Converter to ParameterizedType: Converter<A,B> at 0", "INS SimpleName: convert to MethodInvocation at 0", "INS MemberRef to TagElement: @link at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: asConverter to MethodDeclaration at 7", "INS ParameterizedType: BiMap<A,B> to SingleVariableDeclaration at 1", "INS SimpleName: Converter to TagElement: @link at 0", "INS SimpleType: A to SingleVariableDeclaration at 0", "INS SimpleName: b to SingleVariableDeclaration at 1", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Y to VariableDeclarationStatement at 0", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleName: inverse to MemberRef at 1", "INS IfStatement to Block at 0", "INS SimpleType: BiMap to ParameterizedType: BiMap<X,Y> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS TagElement: @since to Javadoc at 3", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: bimap to MethodInvocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS ReturnStatement to Block at 3", "INS ReturnStatement to Block at 1", "INS StringLiteral: \"No non-null mapping present for input: %s\" to MethodInvocation at 2", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: input to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 9", "INS MethodInvocation to ReturnStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: A to ParameterizedType: BiMap<A,B> at 1", "INS SimpleName: get to MemberRef at 1", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleType: B to ParameterizedType: Converter<A,B> at 2", "INS TextElement:  .get() to TagElement: @code at 0", "INS ParameterizedType: Converter<A,B> to MethodDeclaration at 6", "INS SimpleName: convert to MethodInvocation at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS TypeParameter to MethodDeclaration at 5", "INS TextElement:  that converts values using  to TagElement at 2", "INS MethodInvocation to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS TextElement:  bimap.inverse() to TagElement: @link at 1", "INS SimpleName: X to SimpleType: X at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: B to TypeParameter at 0", "INS SimpleName: A to SimpleType: A at 0", "INS InfixExpression: != to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleName: input to InfixExpression: == at 0", "INS SimpleName: checkArgument to MethodInvocation at 0", "INS SimpleName: A to SimpleType: A at 0", "INS SimpleType: B to SingleVariableDeclaration at 0", "INS SimpleName: output to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS TagElement: @link to TagElement at 6", "INS TagElement to Javadoc at 0", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: BiMap to SimpleType: BiMap at 0", "INS TextElement:  bimap.get() to TagElement: @link at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleType: A to MethodDeclaration at 2", "INS TypeParameter to MethodDeclaration at 4", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS InfixExpression: == to IfStatement at 0", "INS TagElement: @code to TagElement at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: A to ParameterizedType: Converter<A,B> at 1", "INS SimpleName: X to SimpleType: X at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: b to MethodInvocation at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: BiMap to SimpleType: BiMap at 0", "INS SimpleName: convert to MethodDeclaration at 4", "INS SimpleName: Y to SimpleType: Y at 0", "INS SimpleType: BiMap to ParameterizedType: BiMap<A,B> at 0", "INS TagElement: @link to TagElement at 1", "INS SimpleName: Y to TypeParameter at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: A to ParameterizedType: Converter<A,B> at 1", "INS TagElement: @link to TagElement at 3", "INS SimpleName: a to SingleVariableDeclaration at 1", "INS SimpleType: X to SingleVariableDeclaration at 0", "INS TextElement: Returns a  to TagElement at 0", "INS SimpleName: BiMap to MemberRef at 0", "INS TagElement: @return to Javadoc at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleName: A to SimpleType: A at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: output to InfixExpression: != at 0", "INS SimpleName: bimap to MethodInvocation at 1", "INS ParameterizedType: Converter<A,B> to ClassInstanceCreation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleName: B to SimpleType: B at 0", "INS SimpleName: BiMap to MemberRef at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS TextElement:  the bimap to view as a converter to TagElement: @param at 1", "INS SimpleName: A to TypeParameter at 0", "INS SimpleName: input to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: B to SimpleType: B at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: B to SimpleType: B at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodDeclaration to TypeDeclaration: class at 56", "INS SimpleName: bimap to MethodInvocation at 1", "INS SimpleName: inverse to MethodInvocation at 1", "INS SimpleName: bimap to SingleVariableDeclaration at 2", "INS MemberRef to TagElement: @link at 0", "INS TypeParameter to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: B to MethodDeclaration at 2", "INS SimpleName: a to MethodInvocation at 2", "INS ParameterizedType: BiMap<X,Y> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: and whose inverse view converts values using to TagElement at 5", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Modifier: final to SingleVariableDeclaration at 0"]}]}}, {"Maps_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(16797) at 11", "Insert QualifiedName: com.google.common.base.Converter(22) into ImportDeclaration(23) at 0", "Insert MethodDeclaration(5635) into TypeDeclaration: class(16796) at 56", "Insert Javadoc(5508) into MethodDeclaration(5635) at 0", "Insert MarkerAnnotation(5510) into MethodDeclaration(5635) at 1", "Insert Modifier: public(5511) into MethodDeclaration(5635) at 2", "Insert Modifier: static(5512) into MethodDeclaration(5635) at 3", "Insert TypeParameter(5514) into MethodDeclaration(5635) at 4", "Insert TypeParameter(5516) into MethodDeclaration(5635) at 5", "Insert ParameterizedType: Converter<A,B>(5523) into MethodDeclaration(5635) at 6", "Insert SimpleName: asConverter(5524) into MethodDeclaration(5635) at 7", "Insert SingleVariableDeclaration(5534) into MethodDeclaration(5635) at 8", "Insert Block(5634) into MethodDeclaration(5635) at 9", "Insert TagElement(5500) into Javadoc(5508) at 0", "Insert TagElement: @param(5503) into Javadoc(5508) at 1", "Insert TagElement: @return(5505) into Javadoc(5508) at 2", "Insert TagElement: @since(5507) into Javadoc(5508) at 3", "Insert SimpleName: Beta(5509) into MarkerAnnotation(5510) at 0", "Insert SimpleName: A(5513) into TypeParameter(5514) at 0", "Insert SimpleName: B(5515) into TypeParameter(5516) at 0", "Insert SimpleType: Converter(5518) into ParameterizedType: Converter<A,B>(5523) at 0", "Insert SimpleType: A(5520) into ParameterizedType: Converter<A,B>(5523) at 1", "Insert SimpleType: B(5522) into ParameterizedType: Converter<A,B>(5523) at 2", "Insert Modifier: final(5525) into SingleVariableDeclaration(5534) at 0", "Insert ParameterizedType: BiMap<A,B>(5532) into SingleVariableDeclaration(5534) at 1", "Insert SimpleName: bimap(5533) into SingleVariableDeclaration(5534) at 2", "Insert ExpressionStatement(5538) into Block(5634) at 0", "Insert ReturnStatement(5633) into Block(5634) at 1", "Insert TextElement: Returns a (5482) into TagElement(5500) at 0", "Insert TagElement: @link(5484) into TagElement(5500) at 1", "Insert TextElement:  that converts values using (5485) into TagElement(5500) at 2", "Insert TagElement: @link(5490) into TagElement(5500) at 3", "Insert TextElement: ,(5491) into TagElement(5500) at 4", "Insert TextElement: and whose inverse view converts values using(5492) into TagElement(5500) at 5", "Insert TagElement: @link(5497) into TagElement(5500) at 6", "Insert TagElement: @code(5499) into TagElement(5500) at 7", "Insert SimpleName: bimap(5501) into TagElement: @param(5503) at 0", "Insert TextElement:  the bimap to view as a converter(5502) into TagElement: @param(5503) at 1", "Insert TextElement:  a converter that is a view of the specified bimap(5504) into TagElement: @return(5505) at 0", "Insert TextElement:  16.0(5506) into TagElement: @since(5507) at 0", "Insert SimpleName: Converter(5517) into SimpleType: Converter(5518) at 0", "Insert SimpleName: A(5519) into SimpleType: A(5520) at 0", "Insert SimpleName: B(5521) into SimpleType: B(5522) at 0", "Insert SimpleType: BiMap(5527) into ParameterizedType: BiMap<A,B>(5532) at 0", "Insert SimpleType: A(5529) into ParameterizedType: BiMap<A,B>(5532) at 1", "Insert SimpleType: B(5531) into ParameterizedType: BiMap<A,B>(5532) at 2", "Insert MethodInvocation(5537) into ExpressionStatement(5538) at 0", "Insert ClassInstanceCreation(5632) into ReturnStatement(5633) at 0", "Insert SimpleName: Converter(5483) into TagElement: @link(5484) at 0", "Insert MemberRef(5488) into TagElement: @link(5490) at 0", "Insert TextElement:  bimap.get()(5489) into TagElement: @link(5490) at 1", "Insert MemberRef(5495) into TagElement: @link(5497) at 0", "Insert TextElement:  bimap.inverse()(5496) into TagElement: @link(5497) at 1", "Insert TextElement:  .get()(5498) into TagElement: @code(5499) at 0", "Insert SimpleName: BiMap(5526) into SimpleType: BiMap(5527) at 0", "Insert SimpleName: A(5528) into SimpleType: A(5529) at 0", "Insert SimpleName: B(5530) into SimpleType: B(5531) at 0", "Insert SimpleName: checkNotNull(5535) into MethodInvocation(5537) at 0", "Insert SimpleName: bimap(5536) into MethodInvocation(5537) at 1", "Insert ParameterizedType: Converter<A,B>(5545) into ClassInstanceCreation(5632) at 0", "Insert AnonymousClassDeclaration(5631) into ClassInstanceCreation(5632) at 1", "Insert SimpleName: BiMap(5486) into MemberRef(5488) at 0", "Insert SimpleName: get(5487) into MemberRef(5488) at 1", "Insert SimpleName: BiMap(5493) into MemberRef(5495) at 0", "Insert SimpleName: inverse(5494) into MemberRef(5495) at 1", "Insert SimpleType: Converter(5540) into ParameterizedType: Converter<A,B>(5545) at 0", "Insert SimpleType: A(5542) into ParameterizedType: Converter<A,B>(5545) at 1", "Insert SimpleType: B(5544) into ParameterizedType: Converter<A,B>(5545) at 2", "Insert MethodDeclaration(5562) into AnonymousClassDeclaration(5631) at 0", "Insert MethodDeclaration(5581) into AnonymousClassDeclaration(5631) at 1", "Insert MethodDeclaration(5630) into AnonymousClassDeclaration(5631) at 2", "Insert SimpleName: Converter(5539) into SimpleType: Converter(5540) at 0", "Insert SimpleName: A(5541) into SimpleType: A(5542) at 0", "Insert SimpleName: B(5543) into SimpleType: B(5544) at 0", "Insert MarkerAnnotation(5547) into MethodDeclaration(5562) at 0", "Insert Modifier: protected(5548) into MethodDeclaration(5562) at 1", "Insert SimpleType: B(5550) into MethodDeclaration(5562) at 2", "Insert SimpleName: doForward(5551) into MethodDeclaration(5562) at 3", "Insert SingleVariableDeclaration(5555) into MethodDeclaration(5562) at 4", "Insert Block(5561) into MethodDeclaration(5562) at 5", "Insert MarkerAnnotation(5564) into MethodDeclaration(5581) at 0", "Insert Modifier: protected(5565) into MethodDeclaration(5581) at 1", "Insert SimpleType: A(5567) into MethodDeclaration(5581) at 2", "Insert SimpleName: doBackward(5568) into MethodDeclaration(5581) at 3", "Insert SingleVariableDeclaration(5572) into MethodDeclaration(5581) at 4", "Insert Block(5580) into MethodDeclaration(5581) at 5", "Insert Modifier: private(5582) into MethodDeclaration(5630) at 0", "Insert TypeParameter(5584) into MethodDeclaration(5630) at 1", "Insert TypeParameter(5586) into MethodDeclaration(5630) at 2", "Insert SimpleType: Y(5588) into MethodDeclaration(5630) at 3", "Insert SimpleName: convert(5589) into MethodDeclaration(5630) at 4", "Insert SingleVariableDeclaration(5598) into MethodDeclaration(5630) at 5", "Insert SingleVariableDeclaration(5602) into MethodDeclaration(5630) at 6", "Insert Block(5629) into MethodDeclaration(5630) at 7", "Insert SimpleName: Override(5546) into MarkerAnnotation(5547) at 0", "Insert SimpleName: B(5549) into SimpleType: B(5550) at 0", "Insert SimpleType: A(5553) into SingleVariableDeclaration(5555) at 0", "Insert SimpleName: a(5554) into SingleVariableDeclaration(5555) at 1", "Insert ReturnStatement(5560) into Block(5561) at 0", "Insert SimpleName: Override(5563) into MarkerAnnotation(5564) at 0", "Insert SimpleName: A(5566) into SimpleType: A(5567) at 0", "Insert SimpleType: B(5570) into SingleVariableDeclaration(5572) at 0", "Insert SimpleName: b(5571) into SingleVariableDeclaration(5572) at 1", "Insert ReturnStatement(5579) into Block(5580) at 0", "Insert SimpleName: X(5583) into TypeParameter(5584) at 0", "Insert SimpleName: Y(5585) into TypeParameter(5586) at 0", "Insert SimpleName: Y(5587) into SimpleType: Y(5588) at 0", "Insert ParameterizedType: BiMap<X,Y>(5596) into SingleVariableDeclaration(5598) at 0", "Insert SimpleName: bimap(5597) into SingleVariableDeclaration(5598) at 1", "Insert SimpleType: X(5600) into SingleVariableDeclaration(5602) at 0", "Insert SimpleName: input(5601) into SingleVariableDeclaration(5602) at 1", "Insert IfStatement(5609) into Block(5629) at 0", "Insert VariableDeclarationStatement(5618) into Block(5629) at 1", "Insert ExpressionStatement(5626) into Block(5629) at 2", "Insert ReturnStatement(5628) into Block(5629) at 3", "Insert SimpleName: A(5552) into SimpleType: A(5553) at 0", "Insert MethodInvocation(5559) into ReturnStatement(5560) at 0", "Insert SimpleName: B(5569) into SimpleType: B(5570) at 0", "Insert MethodInvocation(5578) into ReturnStatement(5579) at 0", "Insert SimpleType: BiMap(5591) into ParameterizedType: BiMap<X,Y>(5596) at 0", "Insert SimpleType: X(5593) into ParameterizedType: BiMap<X,Y>(5596) at 1", "Insert SimpleType: Y(5595) into ParameterizedType: BiMap<X,Y>(5596) at 2", "Insert SimpleName: X(5599) into SimpleType: X(5600) at 0", "Insert InfixExpression: ==(5605) into IfStatement(5609) at 0", "Insert Block(5608) into IfStatement(5609) at 1", "Insert SimpleType: Y(5611) into VariableDeclarationStatement(5618) at 0", "Insert VariableDeclarationFragment(5617) into VariableDeclarationStatement(5618) at 1", "Insert MethodInvocation(5625) into ExpressionStatement(5626) at 0", "Insert SimpleName: output(5627) into ReturnStatement(5628) at 0", "Insert SimpleName: convert(5556) into MethodInvocation(5559) at 0", "Insert SimpleName: bimap(5557) into MethodInvocation(5559) at 1", "Insert SimpleName: a(5558) into MethodInvocation(5559) at 2", "Insert SimpleName: convert(5573) into MethodInvocation(5578) at 0", "Insert MethodInvocation(5576) into MethodInvocation(5578) at 1", "Insert SimpleName: b(5577) into MethodInvocation(5578) at 2", "Insert SimpleName: BiMap(5590) into SimpleType: BiMap(5591) at 0", "Insert SimpleName: X(5592) into SimpleType: X(5593) at 0", "Insert SimpleName: Y(5594) into SimpleType: Y(5595) at 0", "Insert SimpleName: input(5603) into InfixExpression: ==(5605) at 0", "Insert NullLiteral(5604) into InfixExpression: ==(5605) at 1", "Insert ReturnStatement(5607) into Block(5608) at 0", "Insert SimpleName: Y(5610) into SimpleType: Y(5611) at 0", "Insert SimpleName: output(5612) into VariableDeclarationFragment(5617) at 0", "Insert MethodInvocation(5616) into VariableDeclarationFragment(5617) at 1", "Insert SimpleName: checkArgument(5619) into MethodInvocation(5625) at 0", "Insert InfixExpression: !=(5622) into MethodInvocation(5625) at 1", "Insert StringLiteral: \"No non-null mapping present for input: %s\"(5623) into MethodInvocation(5625) at 2", "Insert SimpleName: input(5624) into MethodInvocation(5625) at 3", "Insert SimpleName: bimap(5574) into MethodInvocation(5576) at 0", "Insert SimpleName: inverse(5575) into MethodInvocation(5576) at 1", "Insert NullLiteral(5606) into ReturnStatement(5607) at 0", "Insert SimpleName: bimap(5613) into MethodInvocation(5616) at 0", "Insert SimpleName: get(5614) into MethodInvocation(5616) at 1", "Insert SimpleName: input(5615) into MethodInvocation(5616) at 2", "Insert SimpleName: output(5620) into InfixExpression: !=(5622) at 0", "Insert NullLiteral(5621) into InfixExpression: !=(5622) at 1"]}}, {"Doubles_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 19", "operations": ["INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,Double> at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: DoubleConverter to SimpleType: DoubleConverter at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: value to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS NullLiteral to ConditionalExpression at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS NullLiteral to ConditionalExpression at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Double> at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleName: DoubleConverter to SimpleType: DoubleConverter at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS Block to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: DoubleConverter to FieldDeclaration at 2", "INS Modifier: static to TypeDeclaration: class at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleType: DoubleConverter to ClassInstanceCreation at 0", "INS SimpleType: Double to ParameterizedType: Converter<String,Double> at 2", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Modifier: static to FieldDeclaration at 0", "INS StringLiteral: \"Doubles.stringConverter()\" to ReturnStatement at 0", "INS Modifier: private to FieldDeclaration at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 19", "INS SimpleName: Double to SimpleType: Double at 0", "INS ParameterizedType: Converter<String,Double> to TypeDeclaration: class at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Double to MethodDeclaration at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: Double to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: DoubleConverter to TypeDeclaration: class at 3", "INS PrimitiveType: long to FieldDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleType: Double to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleType: Converter to ParameterizedType: Converter<String,Double> at 0", "INS SimpleName: Double to MemberRef at 0", "INS Modifier: static to MethodDeclaration at 3", "INS TextElement:  and  to TagElement at 3", "INS TextElement: . to TagElement at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: toString to MethodRef at 1", "INS ParameterizedType: Converter<String,Double> to MethodDeclaration at 4", "INS TagElement: @since to Javadoc at 1", "INS TextElement: doubles using  to TagElement at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: Double to SimpleType: Double at 0", "INS MemberRef to TagElement: @link at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: valueOf to MemberRef at 1", "INS SimpleName: Double to MethodRef at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Double to ParameterizedType: Converter<String,Double> at 2", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TagElement: @link to TagElement at 2", "INS TagElement: @link to TagElement at 4", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS QualifiedName: DoubleConverter.INSTANCE to ReturnStatement at 0", "INS MethodRef to TagElement: @link at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleType: String to ParameterizedType: Converter<String,Double> at 1"]}]}}, {"Doubles_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1187) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1314)", "Insert ImportDeclaration(21) into CompilationUnit(2341) at 10", "Insert QualifiedName: com.google.common.base.Converter(20) into ImportDeclaration(21) at 0", "Insert TypeDeclaration: class(980) into TypeDeclaration: class(2340) at 19", "Insert MethodDeclaration(1012) into TypeDeclaration: class(2340) at 20", "Insert Modifier: private(888) into TypeDeclaration: class(980) at 0", "Insert Modifier: static(889) into TypeDeclaration: class(980) at 1", "Insert Modifier: final(890) into TypeDeclaration: class(980) at 2", "Insert SimpleName: DoubleConverter(891) into TypeDeclaration: class(980) at 3", "Insert ParameterizedType: Converter<String,Double>(898) into TypeDeclaration: class(980) at 4", "Insert SimpleType: Serializable(900) into TypeDeclaration: class(980) at 5", "Insert FieldDeclaration(910) into TypeDeclaration: class(980) at 6", "Insert MethodDeclaration(932) into TypeDeclaration: class(980) at 7", "Insert MethodDeclaration(953) into TypeDeclaration: class(980) at 8", "Insert MethodDeclaration(963) into TypeDeclaration: class(980) at 9", "Insert MethodDeclaration(971) into TypeDeclaration: class(980) at 10", "Insert FieldDeclaration(979) into TypeDeclaration: class(980) at 11", "Insert Javadoc(996) into MethodDeclaration(1012) at 0", "Insert MarkerAnnotation(998) into MethodDeclaration(1012) at 1", "Insert Modifier: public(999) into MethodDeclaration(1012) at 2", "Insert Modifier: static(1000) into MethodDeclaration(1012) at 3", "Insert ParameterizedType: Converter<String,Double>(1007) into MethodDeclaration(1012) at 4", "Insert SimpleName: stringConverter(1008) into MethodDeclaration(1012) at 5", "Insert Block(1011) into MethodDeclaration(1012) at 6", "Insert SimpleType: Converter(893) into ParameterizedType: Converter<String,Double>(898) at 0", "Insert SimpleType: String(895) into ParameterizedType: Converter<String,Double>(898) at 1", "Insert SimpleType: Double(897) into ParameterizedType: Converter<String,Double>(898) at 2", "Insert SimpleName: Serializable(899) into SimpleType: Serializable(900) at 0", "Insert Modifier: static(901) into FieldDeclaration(910) at 0", "Insert Modifier: final(902) into FieldDeclaration(910) at 1", "Insert SimpleType: DoubleConverter(904) into FieldDeclaration(910) at 2", "Insert VariableDeclarationFragment(909) into FieldDeclaration(910) at 3", "Insert MarkerAnnotation(912) into MethodDeclaration(932) at 0", "Insert Modifier: protected(913) into MethodDeclaration(932) at 1", "Insert SimpleType: Double(915) into MethodDeclaration(932) at 2", "Insert SimpleName: doForward(916) into MethodDeclaration(932) at 3", "Insert SingleVariableDeclaration(920) into MethodDeclaration(932) at 4", "Insert Block(931) into MethodDeclaration(932) at 5", "Insert MarkerAnnotation(934) into MethodDeclaration(953) at 0", "Insert Modifier: protected(935) into MethodDeclaration(953) at 1", "Insert SimpleType: String(937) into MethodDeclaration(953) at 2", "Insert SimpleName: doBackward(938) into MethodDeclaration(953) at 3", "Insert SingleVariableDeclaration(942) into MethodDeclaration(953) at 4", "Insert Block(952) into MethodDeclaration(953) at 5", "Insert MarkerAnnotation(955) into MethodDeclaration(963) at 0", "Insert Modifier: public(956) into MethodDeclaration(963) at 1", "Insert SimpleType: String(958) into MethodDeclaration(963) at 2", "Insert SimpleName: toString(959) into MethodDeclaration(963) at 3", "Insert Block(962) into MethodDeclaration(963) at 4", "Insert Modifier: private(964) into MethodDeclaration(971) at 0", "Insert SimpleType: Object(966) into MethodDeclaration(971) at 1", "Insert SimpleName: readResolve(967) into MethodDeclaration(971) at 2", "Insert Block(970) into MethodDeclaration(971) at 3", "Insert Modifier: private(972) into FieldDeclaration(979) at 0", "Insert Modifier: static(973) into FieldDeclaration(979) at 1", "Insert Modifier: final(974) into FieldDeclaration(979) at 2", "Insert PrimitiveType: long(975) into FieldDeclaration(979) at 3", "Insert VariableDeclarationFragment(978) into FieldDeclaration(979) at 4", "Insert TagElement(993) into Javadoc(996) at 0", "Insert TagElement: @since(995) into Javadoc(996) at 1", "Insert SimpleName: Beta(997) into MarkerAnnotation(998) at 0", "Insert SimpleType: Converter(1002) into ParameterizedType: Converter<String,Double>(1007) at 0", "Insert SimpleType: String(1004) into ParameterizedType: Converter<String,Double>(1007) at 1", "Insert SimpleType: Double(1006) into ParameterizedType: Converter<String,Double>(1007) at 2", "Insert ReturnStatement(1010) into Block(1011) at 0", "Insert SimpleName: Converter(892) into SimpleType: Converter(893) at 0", "Insert SimpleName: String(894) into SimpleType: String(895) at 0", "Insert SimpleName: Double(896) into SimpleType: Double(897) at 0", "Insert SimpleName: DoubleConverter(903) into SimpleType: DoubleConverter(904) at 0", "Insert SimpleName: INSTANCE(905) into VariableDeclarationFragment(909) at 0", "Insert ClassInstanceCreation(908) into VariableDeclarationFragment(909) at 1", "Insert SimpleName: Override(911) into MarkerAnnotation(912) at 0", "Insert SimpleName: Double(914) into SimpleType: Double(915) at 0", "Insert SimpleType: String(918) into SingleVariableDeclaration(920) at 0", "Insert SimpleName: value(919) into SingleVariableDeclaration(920) at 1", "Insert ReturnStatement(930) into Block(931) at 0", "Insert SimpleName: Override(933) into MarkerAnnotation(934) at 0", "Insert SimpleName: String(936) into SimpleType: String(937) at 0", "Insert SimpleType: Double(940) into SingleVariableDeclaration(942) at 0", "Insert SimpleName: value(941) into SingleVariableDeclaration(942) at 1", "Insert ReturnStatement(951) into Block(952) at 0", "Insert SimpleName: Override(954) into MarkerAnnotation(955) at 0", "Insert SimpleName: String(957) into SimpleType: String(958) at 0", "Insert ReturnStatement(961) into Block(962) at 0", "Insert SimpleName: Object(965) into SimpleType: Object(966) at 0", "Insert ReturnStatement(969) into Block(970) at 0", "Insert SimpleName: serialVersionUID(976) into VariableDeclarationFragment(978) at 0", "Insert NumberLiteral: 1(977) into VariableDeclarationFragment(978) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(981) into TagElement(993) at 0", "Insert TextElement: doubles using (982) into TagElement(993) at 1", "Insert TagElement: @link(986) into TagElement(993) at 2", "Insert TextElement:  and (987) into TagElement(993) at 3", "Insert TagElement: @link(991) into TagElement(993) at 4", "Insert TextElement: .(992) into TagElement(993) at 5", "Insert TextElement:  16.0(994) into TagElement: @since(995) at 0", "Insert SimpleName: Converter(1001) into SimpleType: Converter(1002) at 0", "Insert SimpleName: String(1003) into SimpleType: String(1004) at 0", "Insert SimpleName: Double(1005) into SimpleType: Double(1006) at 0", "Insert QualifiedName: DoubleConverter.INSTANCE(1009) into ReturnStatement(1010) at 0", "Insert SimpleType: DoubleConverter(907) into ClassInstanceCreation(908) at 0", "Insert SimpleName: String(917) into SimpleType: String(918) at 0", "Insert ConditionalExpression(929) into ReturnStatement(930) at 0", "Insert SimpleName: Double(939) into SimpleType: Double(940) at 0", "Insert ConditionalExpression(950) into ReturnStatement(951) at 0", "Insert StringLiteral: \"Doubles.stringConverter()\"(960) into ReturnStatement(961) at 0", "Insert SimpleName: INSTANCE(968) into ReturnStatement(969) at 0", "Insert MemberRef(985) into TagElement: @link(986) at 0", "Insert MethodRef(990) into TagElement: @link(991) at 0", "Insert SimpleName: DoubleConverter(906) into SimpleType: DoubleConverter(907) at 0", "Insert InfixExpression: ==(923) into ConditionalExpression(929) at 0", "Insert NullLiteral(924) into ConditionalExpression(929) at 1", "Insert MethodInvocation(928) into ConditionalExpression(929) at 2", "Insert InfixExpression: ==(945) into ConditionalExpression(950) at 0", "Insert NullLiteral(946) into ConditionalExpression(950) at 1", "Insert MethodInvocation(949) into ConditionalExpression(950) at 2", "Insert SimpleName: Double(983) into MemberRef(985) at 0", "Insert SimpleName: valueOf(984) into MemberRef(985) at 1", "Insert SimpleName: Double(988) into MethodRef(990) at 0", "Insert SimpleName: toString(989) into MethodRef(990) at 1", "Insert SimpleName: value(921) into InfixExpression: ==(923) at 0", "Insert NullLiteral(922) into InfixExpression: ==(923) at 1", "Insert SimpleName: Double(925) into MethodInvocation(928) at 0", "Insert SimpleName: valueOf(926) into MethodInvocation(928) at 1", "Insert SimpleName: value(927) into MethodInvocation(928) at 2", "Insert SimpleName: value(943) into InfixExpression: ==(945) at 0", "Insert NullLiteral(944) into InfixExpression: ==(945) at 1", "Insert SimpleName: value(947) into MethodInvocation(949) at 0", "Insert SimpleName: toString(948) into MethodInvocation(949) at 1"]}}, {"Floats_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 19", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ConditionalExpression at 2", "INS Modifier: static to FieldDeclaration at 1", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS ParameterizedType: Converter<String,Float> to TypeDeclaration: class at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: FloatConverter to SimpleType: FloatConverter at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: FloatConverter to TypeDeclaration: class at 3", "INS SimpleName: value to MethodInvocation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 19", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Float> at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: Float to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS MethodInvocation to ConditionalExpression at 2", "INS Modifier: private to TypeDeclaration: class at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: FloatConverter to FieldDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Float to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to ConditionalExpression at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Float to SimpleType: Float at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: Float to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS StringLiteral: \"Floats.stringConverter()\" to ReturnStatement at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS SimpleName: FloatConverter to SimpleType: FloatConverter at 0", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleType: Converter to ParameterizedType: Converter<String,Float> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleType: FloatConverter to ClassInstanceCreation at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 3", "INS PrimitiveType: long to FieldDeclaration at 3", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: value to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ReturnStatement to Block at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleType: Float to ParameterizedType: Converter<String,Float> at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS SimpleName: value to InfixExpression: == at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS ReturnStatement to Block at 0", "INS TextElement: floats using  to TagElement at 1", "INS TagElement: @link to TagElement at 2", "INS SimpleName: toString to MethodRef at 1", "INS TextElement:  16.0 to TagElement: @since at 0", "INS TagElement to Javadoc at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: Float to MethodRef at 0", "INS SimpleName: Float to MemberRef at 0", "INS SimpleName: valueOf to MemberRef at 1", "INS Javadoc to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleType: String to ParameterizedType: Converter<String,Float> at 1", "INS ParameterizedType: Converter<String,Float> to MethodDeclaration at 4", "INS SimpleType: Float to ParameterizedType: Converter<String,Float> at 2", "INS TextElement:  and  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Converter to ParameterizedType: Converter<String,Float> at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS SimpleName: Float to SimpleType: Float at 0", "INS Block to MethodDeclaration at 6", "INS TagElement: @link to TagElement at 4", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS MemberRef to TagElement: @link at 0", "INS QualifiedName: FloatConverter.INSTANCE to ReturnStatement at 0", "INS TextElement: . to TagElement at 5", "INS TagElement: @since to Javadoc at 1"]}]}}, {"Floats_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1175) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1302)", "Insert ImportDeclaration(21) into CompilationUnit(2249) at 10", "Insert QualifiedName: com.google.common.base.Converter(20) into ImportDeclaration(21) at 0", "Insert TypeDeclaration: class(970) into TypeDeclaration: class(2248) at 19", "Insert MethodDeclaration(1002) into TypeDeclaration: class(2248) at 20", "Insert Modifier: private(878) into TypeDeclaration: class(970) at 0", "Insert Modifier: static(879) into TypeDeclaration: class(970) at 1", "Insert Modifier: final(880) into TypeDeclaration: class(970) at 2", "Insert SimpleName: FloatConverter(881) into TypeDeclaration: class(970) at 3", "Insert ParameterizedType: Converter<String,Float>(888) into TypeDeclaration: class(970) at 4", "Insert SimpleType: Serializable(890) into TypeDeclaration: class(970) at 5", "Insert FieldDeclaration(900) into TypeDeclaration: class(970) at 6", "Insert MethodDeclaration(922) into TypeDeclaration: class(970) at 7", "Insert MethodDeclaration(943) into TypeDeclaration: class(970) at 8", "Insert MethodDeclaration(953) into TypeDeclaration: class(970) at 9", "Insert MethodDeclaration(961) into TypeDeclaration: class(970) at 10", "Insert FieldDeclaration(969) into TypeDeclaration: class(970) at 11", "Insert Javadoc(986) into MethodDeclaration(1002) at 0", "Insert MarkerAnnotation(988) into MethodDeclaration(1002) at 1", "Insert Modifier: public(989) into MethodDeclaration(1002) at 2", "Insert Modifier: static(990) into MethodDeclaration(1002) at 3", "Insert ParameterizedType: Converter<String,Float>(997) into MethodDeclaration(1002) at 4", "Insert SimpleName: stringConverter(998) into MethodDeclaration(1002) at 5", "Insert Block(1001) into MethodDeclaration(1002) at 6", "Insert SimpleType: Converter(883) into ParameterizedType: Converter<String,Float>(888) at 0", "Insert SimpleType: String(885) into ParameterizedType: Converter<String,Float>(888) at 1", "Insert SimpleType: Float(887) into ParameterizedType: Converter<String,Float>(888) at 2", "Insert SimpleName: Serializable(889) into SimpleType: Serializable(890) at 0", "Insert Modifier: static(891) into FieldDeclaration(900) at 0", "Insert Modifier: final(892) into FieldDeclaration(900) at 1", "Insert SimpleType: FloatConverter(894) into FieldDeclaration(900) at 2", "Insert VariableDeclarationFragment(899) into FieldDeclaration(900) at 3", "Insert MarkerAnnotation(902) into MethodDeclaration(922) at 0", "Insert Modifier: protected(903) into MethodDeclaration(922) at 1", "Insert SimpleType: Float(905) into MethodDeclaration(922) at 2", "Insert SimpleName: doForward(906) into MethodDeclaration(922) at 3", "Insert SingleVariableDeclaration(910) into MethodDeclaration(922) at 4", "Insert Block(921) into MethodDeclaration(922) at 5", "Insert MarkerAnnotation(924) into MethodDeclaration(943) at 0", "Insert Modifier: protected(925) into MethodDeclaration(943) at 1", "Insert SimpleType: String(927) into MethodDeclaration(943) at 2", "Insert SimpleName: doBackward(928) into MethodDeclaration(943) at 3", "Insert SingleVariableDeclaration(932) into MethodDeclaration(943) at 4", "Insert Block(942) into MethodDeclaration(943) at 5", "Insert MarkerAnnotation(945) into MethodDeclaration(953) at 0", "Insert Modifier: public(946) into MethodDeclaration(953) at 1", "Insert SimpleType: String(948) into MethodDeclaration(953) at 2", "Insert SimpleName: toString(949) into MethodDeclaration(953) at 3", "Insert Block(952) into MethodDeclaration(953) at 4", "Insert Modifier: private(954) into MethodDeclaration(961) at 0", "Insert SimpleType: Object(956) into MethodDeclaration(961) at 1", "Insert SimpleName: readResolve(957) into MethodDeclaration(961) at 2", "Insert Block(960) into MethodDeclaration(961) at 3", "Insert Modifier: private(962) into FieldDeclaration(969) at 0", "Insert Modifier: static(963) into FieldDeclaration(969) at 1", "Insert Modifier: final(964) into FieldDeclaration(969) at 2", "Insert PrimitiveType: long(965) into FieldDeclaration(969) at 3", "Insert VariableDeclarationFragment(968) into FieldDeclaration(969) at 4", "Insert TagElement(983) into Javadoc(986) at 0", "Insert TagElement: @since(985) into Javadoc(986) at 1", "Insert SimpleName: Beta(987) into MarkerAnnotation(988) at 0", "Insert SimpleType: Converter(992) into ParameterizedType: Converter<String,Float>(997) at 0", "Insert SimpleType: String(994) into ParameterizedType: Converter<String,Float>(997) at 1", "Insert SimpleType: Float(996) into ParameterizedType: Converter<String,Float>(997) at 2", "Insert ReturnStatement(1000) into Block(1001) at 0", "Insert SimpleName: Converter(882) into SimpleType: Converter(883) at 0", "Insert SimpleName: String(884) into SimpleType: String(885) at 0", "Insert SimpleName: Float(886) into SimpleType: Float(887) at 0", "Insert SimpleName: FloatConverter(893) into SimpleType: FloatConverter(894) at 0", "Insert SimpleName: INSTANCE(895) into VariableDeclarationFragment(899) at 0", "Insert ClassInstanceCreation(898) into VariableDeclarationFragment(899) at 1", "Insert SimpleName: Override(901) into MarkerAnnotation(902) at 0", "Insert SimpleName: Float(904) into SimpleType: Float(905) at 0", "Insert SimpleType: String(908) into SingleVariableDeclaration(910) at 0", "Insert SimpleName: value(909) into SingleVariableDeclaration(910) at 1", "Insert ReturnStatement(920) into Block(921) at 0", "Insert SimpleName: Override(923) into MarkerAnnotation(924) at 0", "Insert SimpleName: String(926) into SimpleType: String(927) at 0", "Insert SimpleType: Float(930) into SingleVariableDeclaration(932) at 0", "Insert SimpleName: value(931) into SingleVariableDeclaration(932) at 1", "Insert ReturnStatement(941) into Block(942) at 0", "Insert SimpleName: Override(944) into MarkerAnnotation(945) at 0", "Insert SimpleName: String(947) into SimpleType: String(948) at 0", "Insert ReturnStatement(951) into Block(952) at 0", "Insert SimpleName: Object(955) into SimpleType: Object(956) at 0", "Insert ReturnStatement(959) into Block(960) at 0", "Insert SimpleName: serialVersionUID(966) into VariableDeclarationFragment(968) at 0", "Insert NumberLiteral: 1(967) into VariableDeclarationFragment(968) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(971) into TagElement(983) at 0", "Insert TextElement: floats using (972) into TagElement(983) at 1", "Insert TagElement: @link(976) into TagElement(983) at 2", "Insert TextElement:  and (977) into TagElement(983) at 3", "Insert TagElement: @link(981) into TagElement(983) at 4", "Insert TextElement: .(982) into TagElement(983) at 5", "Insert TextElement:  16.0(984) into TagElement: @since(985) at 0", "Insert SimpleName: Converter(991) into SimpleType: Converter(992) at 0", "Insert SimpleName: String(993) into SimpleType: String(994) at 0", "Insert SimpleName: Float(995) into SimpleType: Float(996) at 0", "Insert QualifiedName: FloatConverter.INSTANCE(999) into ReturnStatement(1000) at 0", "Insert SimpleType: FloatConverter(897) into ClassInstanceCreation(898) at 0", "Insert SimpleName: String(907) into SimpleType: String(908) at 0", "Insert ConditionalExpression(919) into ReturnStatement(920) at 0", "Insert SimpleName: Float(929) into SimpleType: Float(930) at 0", "Insert ConditionalExpression(940) into ReturnStatement(941) at 0", "Insert StringLiteral: \"Floats.stringConverter()\"(950) into ReturnStatement(951) at 0", "Insert SimpleName: INSTANCE(958) into ReturnStatement(959) at 0", "Insert MemberRef(975) into TagElement: @link(976) at 0", "Insert MethodRef(980) into TagElement: @link(981) at 0", "Insert SimpleName: FloatConverter(896) into SimpleType: FloatConverter(897) at 0", "Insert InfixExpression: ==(913) into ConditionalExpression(919) at 0", "Insert NullLiteral(914) into ConditionalExpression(919) at 1", "Insert MethodInvocation(918) into ConditionalExpression(919) at 2", "Insert InfixExpression: ==(935) into ConditionalExpression(940) at 0", "Insert NullLiteral(936) into ConditionalExpression(940) at 1", "Insert MethodInvocation(939) into ConditionalExpression(940) at 2", "Insert SimpleName: Float(973) into MemberRef(975) at 0", "Insert SimpleName: valueOf(974) into MemberRef(975) at 1", "Insert SimpleName: Float(978) into MethodRef(980) at 0", "Insert SimpleName: toString(979) into MethodRef(980) at 1", "Insert SimpleName: value(911) into InfixExpression: ==(913) at 0", "Insert NullLiteral(912) into InfixExpression: ==(913) at 1", "Insert SimpleName: Float(915) into MethodInvocation(918) at 0", "Insert SimpleName: valueOf(916) into MethodInvocation(918) at 1", "Insert SimpleName: value(917) into MethodInvocation(918) at 2", "Insert SimpleName: value(933) into InfixExpression: ==(935) at 0", "Insert NullLiteral(934) into InfixExpression: ==(935) at 1", "Insert SimpleName: value(937) into MethodInvocation(939) at 0", "Insert SimpleName: toString(938) into MethodInvocation(939) at 1"]}}, {"Ints_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 24", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: IntConverter to SimpleType: IntConverter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS StringLiteral: \"Ints.stringConverter()\" to ReturnStatement at 0", "INS SimpleType: Integer to ParameterizedType: Converter<String,Integer> at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: Integer to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 3", "INS Modifier: static to TypeDeclaration: class at 1", "INS ParameterizedType: Converter<String,Integer> to TypeDeclaration: class at 4", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: value to MethodInvocation at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: doForward to MethodDeclaration at 3", "INS InfixExpression: == to ConditionalExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: decode to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: IntConverter to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Modifier: static to FieldDeclaration at 0", "INS NullLiteral to ConditionalExpression at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 24", "INS SimpleType: Integer to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: toString to MethodDeclaration at 3", "INS Modifier: private to TypeDeclaration: class at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: IntConverter to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleType: String to ParameterizedType: Converter<String,Integer> at 1", "INS SimpleType: Converter to ParameterizedType: Converter<String,Integer> at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: IntConverter to SimpleType: IntConverter at 0", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS ReturnStatement to Block at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Block to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: IntConverter to TypeDeclaration: class at 3", "INS SimpleName: value to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 25", "INS TagElement: @link to TagElement at 2", "INS SimpleName: Integer to MethodRef at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  and  to TagElement at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS ParameterizedType: Converter<String,Integer> to MethodDeclaration at 4", "INS TextElement: integers using  to TagElement at 1", "INS Modifier: static to MethodDeclaration at 3", "INS SimpleName: toString to MethodRef at 1", "INS TagElement: @link to TagElement at 4", "INS TextElement:  16.0 to TagElement: @since at 0", "INS QualifiedName: IntConverter.INSTANCE to ReturnStatement at 0", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS SimpleType: String to ParameterizedType: Converter<String,Integer> at 1", "INS TextElement: . to TagElement at 5", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: Integer to MemberRef at 0", "INS SimpleName: decode to MemberRef at 1", "INS Block to MethodDeclaration at 6", "INS SimpleType: Converter to ParameterizedType: Converter<String,Integer> at 0", "INS SimpleType: Integer to ParameterizedType: Converter<String,Integer> at 2", "INS Modifier: public to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS TagElement: @since to Javadoc at 1"]}]}}, {"Ints_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1409) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1536)", "Insert ImportDeclaration(17) into CompilationUnit(2453) at 8", "Insert QualifiedName: com.google.common.base.Converter(16) into ImportDeclaration(17) at 0", "Insert TypeDeclaration: class(1225) into TypeDeclaration: class(2452) at 24", "Insert MethodDeclaration(1257) into TypeDeclaration: class(2452) at 25", "Insert Modifier: private(1133) into TypeDeclaration: class(1225) at 0", "Insert Modifier: static(1134) into TypeDeclaration: class(1225) at 1", "Insert Modifier: final(1135) into TypeDeclaration: class(1225) at 2", "Insert SimpleName: IntConverter(1136) into TypeDeclaration: class(1225) at 3", "Insert ParameterizedType: Converter<String,Integer>(1143) into TypeDeclaration: class(1225) at 4", "Insert SimpleType: Serializable(1145) into TypeDeclaration: class(1225) at 5", "Insert FieldDeclaration(1155) into TypeDeclaration: class(1225) at 6", "Insert MethodDeclaration(1177) into TypeDeclaration: class(1225) at 7", "Insert MethodDeclaration(1198) into TypeDeclaration: class(1225) at 8", "Insert MethodDeclaration(1208) into TypeDeclaration: class(1225) at 9", "Insert MethodDeclaration(1216) into TypeDeclaration: class(1225) at 10", "Insert FieldDeclaration(1224) into TypeDeclaration: class(1225) at 11", "Insert Javadoc(1241) into MethodDeclaration(1257) at 0", "Insert MarkerAnnotation(1243) into MethodDeclaration(1257) at 1", "Insert Modifier: public(1244) into MethodDeclaration(1257) at 2", "Insert Modifier: static(1245) into MethodDeclaration(1257) at 3", "Insert ParameterizedType: Converter<String,Integer>(1252) into MethodDeclaration(1257) at 4", "Insert SimpleName: stringConverter(1253) into MethodDeclaration(1257) at 5", "Insert Block(1256) into MethodDeclaration(1257) at 6", "Insert SimpleType: Converter(1138) into ParameterizedType: Converter<String,Integer>(1143) at 0", "Insert SimpleType: String(1140) into ParameterizedType: Converter<String,Integer>(1143) at 1", "Insert SimpleType: Integer(1142) into ParameterizedType: Converter<String,Integer>(1143) at 2", "Insert SimpleName: Serializable(1144) into SimpleType: Serializable(1145) at 0", "Insert Modifier: static(1146) into FieldDeclaration(1155) at 0", "Insert Modifier: final(1147) into FieldDeclaration(1155) at 1", "Insert SimpleType: IntConverter(1149) into FieldDeclaration(1155) at 2", "Insert VariableDeclarationFragment(1154) into FieldDeclaration(1155) at 3", "Insert MarkerAnnotation(1157) into MethodDeclaration(1177) at 0", "Insert Modifier: protected(1158) into MethodDeclaration(1177) at 1", "Insert SimpleType: Integer(1160) into MethodDeclaration(1177) at 2", "Insert SimpleName: doForward(1161) into MethodDeclaration(1177) at 3", "Insert SingleVariableDeclaration(1165) into MethodDeclaration(1177) at 4", "Insert Block(1176) into MethodDeclaration(1177) at 5", "Insert MarkerAnnotation(1179) into MethodDeclaration(1198) at 0", "Insert Modifier: protected(1180) into MethodDeclaration(1198) at 1", "Insert SimpleType: String(1182) into MethodDeclaration(1198) at 2", "Insert SimpleName: doBackward(1183) into MethodDeclaration(1198) at 3", "Insert SingleVariableDeclaration(1187) into MethodDeclaration(1198) at 4", "Insert Block(1197) into MethodDeclaration(1198) at 5", "Insert MarkerAnnotation(1200) into MethodDeclaration(1208) at 0", "Insert Modifier: public(1201) into MethodDeclaration(1208) at 1", "Insert SimpleType: String(1203) into MethodDeclaration(1208) at 2", "Insert SimpleName: toString(1204) into MethodDeclaration(1208) at 3", "Insert Block(1207) into MethodDeclaration(1208) at 4", "Insert Modifier: private(1209) into MethodDeclaration(1216) at 0", "Insert SimpleType: Object(1211) into MethodDeclaration(1216) at 1", "Insert SimpleName: readResolve(1212) into MethodDeclaration(1216) at 2", "Insert Block(1215) into MethodDeclaration(1216) at 3", "Insert Modifier: private(1217) into FieldDeclaration(1224) at 0", "Insert Modifier: static(1218) into FieldDeclaration(1224) at 1", "Insert Modifier: final(1219) into FieldDeclaration(1224) at 2", "Insert PrimitiveType: long(1220) into FieldDeclaration(1224) at 3", "Insert VariableDeclarationFragment(1223) into FieldDeclaration(1224) at 4", "Insert TagElement(1238) into Javadoc(1241) at 0", "Insert TagElement: @since(1240) into Javadoc(1241) at 1", "Insert SimpleName: Beta(1242) into MarkerAnnotation(1243) at 0", "Insert SimpleType: Converter(1247) into ParameterizedType: Converter<String,Integer>(1252) at 0", "Insert SimpleType: String(1249) into ParameterizedType: Converter<String,Integer>(1252) at 1", "Insert SimpleType: Integer(1251) into ParameterizedType: Converter<String,Integer>(1252) at 2", "Insert ReturnStatement(1255) into Block(1256) at 0", "Insert SimpleName: Converter(1137) into SimpleType: Converter(1138) at 0", "Insert SimpleName: String(1139) into SimpleType: String(1140) at 0", "Insert SimpleName: Integer(1141) into SimpleType: Integer(1142) at 0", "Insert SimpleName: IntConverter(1148) into SimpleType: IntConverter(1149) at 0", "Insert SimpleName: INSTANCE(1150) into VariableDeclarationFragment(1154) at 0", "Insert ClassInstanceCreation(1153) into VariableDeclarationFragment(1154) at 1", "Insert SimpleName: Override(1156) into MarkerAnnotation(1157) at 0", "Insert SimpleName: Integer(1159) into SimpleType: Integer(1160) at 0", "Insert SimpleType: String(1163) into SingleVariableDeclaration(1165) at 0", "Insert SimpleName: value(1164) into SingleVariableDeclaration(1165) at 1", "Insert ReturnStatement(1175) into Block(1176) at 0", "Insert SimpleName: Override(1178) into MarkerAnnotation(1179) at 0", "Insert SimpleName: String(1181) into SimpleType: String(1182) at 0", "Insert SimpleType: Integer(1185) into SingleVariableDeclaration(1187) at 0", "Insert SimpleName: value(1186) into SingleVariableDeclaration(1187) at 1", "Insert ReturnStatement(1196) into Block(1197) at 0", "Insert SimpleName: Override(1199) into MarkerAnnotation(1200) at 0", "Insert SimpleName: String(1202) into SimpleType: String(1203) at 0", "Insert ReturnStatement(1206) into Block(1207) at 0", "Insert SimpleName: Object(1210) into SimpleType: Object(1211) at 0", "Insert ReturnStatement(1214) into Block(1215) at 0", "Insert SimpleName: serialVersionUID(1221) into VariableDeclarationFragment(1223) at 0", "Insert NumberLiteral: 1(1222) into VariableDeclarationFragment(1223) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(1226) into TagElement(1238) at 0", "Insert TextElement: integers using (1227) into TagElement(1238) at 1", "Insert TagElement: @link(1231) into TagElement(1238) at 2", "Insert TextElement:  and (1232) into TagElement(1238) at 3", "Insert TagElement: @link(1236) into TagElement(1238) at 4", "Insert TextElement: .(1237) into TagElement(1238) at 5", "Insert TextElement:  16.0(1239) into TagElement: @since(1240) at 0", "Insert SimpleName: Converter(1246) into SimpleType: Converter(1247) at 0", "Insert SimpleName: String(1248) into SimpleType: String(1249) at 0", "Insert SimpleName: Integer(1250) into SimpleType: Integer(1251) at 0", "Insert QualifiedName: IntConverter.INSTANCE(1254) into ReturnStatement(1255) at 0", "Insert SimpleType: IntConverter(1152) into ClassInstanceCreation(1153) at 0", "Insert SimpleName: String(1162) into SimpleType: String(1163) at 0", "Insert ConditionalExpression(1174) into ReturnStatement(1175) at 0", "Insert SimpleName: Integer(1184) into SimpleType: Integer(1185) at 0", "Insert ConditionalExpression(1195) into ReturnStatement(1196) at 0", "Insert StringLiteral: \"Ints.stringConverter()\"(1205) into ReturnStatement(1206) at 0", "Insert SimpleName: INSTANCE(1213) into ReturnStatement(1214) at 0", "Insert MemberRef(1230) into TagElement: @link(1231) at 0", "Insert MethodRef(1235) into TagElement: @link(1236) at 0", "Insert SimpleName: IntConverter(1151) into SimpleType: IntConverter(1152) at 0", "Insert InfixExpression: ==(1168) into ConditionalExpression(1174) at 0", "Insert NullLiteral(1169) into ConditionalExpression(1174) at 1", "Insert MethodInvocation(1173) into ConditionalExpression(1174) at 2", "Insert InfixExpression: ==(1190) into ConditionalExpression(1195) at 0", "Insert NullLiteral(1191) into ConditionalExpression(1195) at 1", "Insert MethodInvocation(1194) into ConditionalExpression(1195) at 2", "Insert SimpleName: Integer(1228) into MemberRef(1230) at 0", "Insert SimpleName: decode(1229) into MemberRef(1230) at 1", "Insert SimpleName: Integer(1233) into MethodRef(1235) at 0", "Insert SimpleName: toString(1234) into MethodRef(1235) at 1", "Insert SimpleName: value(1166) into InfixExpression: ==(1168) at 0", "Insert NullLiteral(1167) into InfixExpression: ==(1168) at 1", "Insert SimpleName: Integer(1170) into MethodInvocation(1173) at 0", "Insert SimpleName: decode(1171) into MethodInvocation(1173) at 1", "Insert SimpleName: value(1172) into MethodInvocation(1173) at 2", "Insert SimpleName: value(1188) into InfixExpression: ==(1190) at 0", "Insert NullLiteral(1189) into InfixExpression: ==(1190) at 1", "Insert SimpleName: value(1192) into MethodInvocation(1194) at 0", "Insert SimpleName: toString(1193) into MethodInvocation(1194) at 1"]}}, {"Shorts_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: com.google.common.base.Converter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 24", "operations": ["INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: ShortConverter to SimpleType: ShortConverter at 0", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to MethodInvocation at 0", "INS SimpleType: Short to MethodDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS NullLiteral to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleType: Converter to ParameterizedType: Converter<String,Short> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ShortConverter to TypeDeclaration: class at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS ParameterizedType: Converter<String,Short> to TypeDeclaration: class at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: readResolve to MethodDeclaration at 2", "INS SimpleName: doBackward to MethodDeclaration at 3", "INS SimpleName: Short to SimpleType: Short at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS InfixExpression: == to ConditionalExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS Modifier: final to TypeDeclaration: class at 2", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: Short to ParameterizedType: Converter<String,Short> at 2", "INS SimpleType: ShortConverter to ClassInstanceCreation at 0", "INS SimpleName: INSTANCE to ReturnStatement at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: doForward to MethodDeclaration at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleType: ShortConverter to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Short to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: Object to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS NullLiteral to InfixExpression: == at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: String to ParameterizedType: Converter<String,Short> at 1", "INS NullLiteral to ConditionalExpression at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 24", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Modifier: static to FieldDeclaration at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS StringLiteral: \"Shorts.stringConverter()\" to ReturnStatement at 0", "INS SimpleName: ShortConverter to SimpleType: ShortConverter at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: decode to MethodInvocation at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS ReturnStatement to Block at 0", "INS TextElement:  16.0 to TagElement: @since at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Beta to MarkerAnnotation at 0", "INS SimpleName: Short to MemberRef at 0", "INS SimpleType: Short to ParameterizedType: Converter<String,Short> at 2", "INS QualifiedName: ShortConverter.INSTANCE to ReturnStatement at 0", "INS SimpleName: Short to MethodRef at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: toString to MethodRef at 1", "INS TextElement:  and  to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS MethodRef to TagElement: @link at 0", "INS TextElement: shorts using  to TagElement at 1", "INS SimpleName: Short to SimpleType: Short at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: decode to MemberRef at 1", "INS Modifier: static to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleName: stringConverter to MethodDeclaration at 5", "INS TextElement: . to TagElement at 5", "INS SimpleType: Converter to ParameterizedType: Converter<String,Short> at 0", "INS ParameterizedType: Converter<String,Short> to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 4", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Converter to SimpleType: Converter at 0", "INS TagElement: @link to TagElement at 2", "INS SimpleType: String to ParameterizedType: Converter<String,Short> at 1", "INS MemberRef to TagElement: @link at 0", "INS TextElement: Returns a serializable converter object that converts between strings and to TagElement at 0", "INS TagElement to Javadoc at 0"]}]}}, {"Shorts_diff": {"operations": ["   *     Lexicographical order article at Wikipedia</a>(1363) to TextElement:  <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">", "   *     Lexicographical order article at Wikipedia</a>(1492)", "Insert ImportDeclaration(11) into CompilationUnit(2334) at 5", "Insert ImportDeclaration(17) into CompilationUnit(2334) at 8", "Insert QualifiedName: com.google.common.annotations.Beta(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: com.google.common.base.Converter(16) into ImportDeclaration(17) at 0", "Insert TypeDeclaration: class(1180) into TypeDeclaration: class(2333) at 24", "Insert MethodDeclaration(1212) into TypeDeclaration: class(2333) at 25", "Insert Modifier: private(1088) into TypeDeclaration: class(1180) at 0", "Insert Modifier: static(1089) into TypeDeclaration: class(1180) at 1", "Insert Modifier: final(1090) into TypeDeclaration: class(1180) at 2", "Insert SimpleName: ShortConverter(1091) into TypeDeclaration: class(1180) at 3", "Insert ParameterizedType: Converter<String,Short>(1098) into TypeDeclaration: class(1180) at 4", "Insert SimpleType: Serializable(1100) into TypeDeclaration: class(1180) at 5", "Insert FieldDeclaration(1110) into TypeDeclaration: class(1180) at 6", "Insert MethodDeclaration(1132) into TypeDeclaration: class(1180) at 7", "Insert MethodDeclaration(1153) into TypeDeclaration: class(1180) at 8", "Insert MethodDeclaration(1163) into TypeDeclaration: class(1180) at 9", "Insert MethodDeclaration(1171) into TypeDeclaration: class(1180) at 10", "Insert FieldDeclaration(1179) into TypeDeclaration: class(1180) at 11", "Insert Javadoc(1196) into MethodDeclaration(1212) at 0", "Insert MarkerAnnotation(1198) into MethodDeclaration(1212) at 1", "Insert Modifier: public(1199) into MethodDeclaration(1212) at 2", "Insert Modifier: static(1200) into MethodDeclaration(1212) at 3", "Insert ParameterizedType: Converter<String,Short>(1207) into MethodDeclaration(1212) at 4", "Insert SimpleName: stringConverter(1208) into MethodDeclaration(1212) at 5", "Insert Block(1211) into MethodDeclaration(1212) at 6", "Insert SimpleType: Converter(1093) into ParameterizedType: Converter<String,Short>(1098) at 0", "Insert SimpleType: String(1095) into ParameterizedType: Converter<String,Short>(1098) at 1", "Insert SimpleType: Short(1097) into ParameterizedType: Converter<String,Short>(1098) at 2", "Insert SimpleName: Serializable(1099) into SimpleType: Serializable(1100) at 0", "Insert Modifier: static(1101) into FieldDeclaration(1110) at 0", "Insert Modifier: final(1102) into FieldDeclaration(1110) at 1", "Insert SimpleType: ShortConverter(1104) into FieldDeclaration(1110) at 2", "Insert VariableDeclarationFragment(1109) into FieldDeclaration(1110) at 3", "Insert MarkerAnnotation(1112) into MethodDeclaration(1132) at 0", "Insert Modifier: protected(1113) into MethodDeclaration(1132) at 1", "Insert SimpleType: Short(1115) into MethodDeclaration(1132) at 2", "Insert SimpleName: doForward(1116) into MethodDeclaration(1132) at 3", "Insert SingleVariableDeclaration(1120) into MethodDeclaration(1132) at 4", "Insert Block(1131) into MethodDeclaration(1132) at 5", "Insert MarkerAnnotation(1134) into MethodDeclaration(1153) at 0", "Insert Modifier: protected(1135) into MethodDeclaration(1153) at 1", "Insert SimpleType: String(1137) into MethodDeclaration(1153) at 2", "Insert SimpleName: doBackward(1138) into MethodDeclaration(1153) at 3", "Insert SingleVariableDeclaration(1142) into MethodDeclaration(1153) at 4", "Insert Block(1152) into MethodDeclaration(1153) at 5", "Insert MarkerAnnotation(1155) into MethodDeclaration(1163) at 0", "Insert Modifier: public(1156) into MethodDeclaration(1163) at 1", "Insert SimpleType: String(1158) into MethodDeclaration(1163) at 2", "Insert SimpleName: toString(1159) into MethodDeclaration(1163) at 3", "Insert Block(1162) into MethodDeclaration(1163) at 4", "Insert Modifier: private(1164) into MethodDeclaration(1171) at 0", "Insert SimpleType: Object(1166) into MethodDeclaration(1171) at 1", "Insert SimpleName: readResolve(1167) into MethodDeclaration(1171) at 2", "Insert Block(1170) into MethodDeclaration(1171) at 3", "Insert Modifier: private(1172) into FieldDeclaration(1179) at 0", "Insert Modifier: static(1173) into FieldDeclaration(1179) at 1", "Insert Modifier: final(1174) into FieldDeclaration(1179) at 2", "Insert PrimitiveType: long(1175) into FieldDeclaration(1179) at 3", "Insert VariableDeclarationFragment(1178) into FieldDeclaration(1179) at 4", "Insert TagElement(1193) into Javadoc(1196) at 0", "Insert TagElement: @since(1195) into Javadoc(1196) at 1", "Insert SimpleName: Beta(1197) into MarkerAnnotation(1198) at 0", "Insert SimpleType: Converter(1202) into ParameterizedType: Converter<String,Short>(1207) at 0", "Insert SimpleType: String(1204) into ParameterizedType: Converter<String,Short>(1207) at 1", "Insert SimpleType: Short(1206) into ParameterizedType: Converter<String,Short>(1207) at 2", "Insert ReturnStatement(1210) into Block(1211) at 0", "Insert SimpleName: Converter(1092) into SimpleType: Converter(1093) at 0", "Insert SimpleName: String(1094) into SimpleType: String(1095) at 0", "Insert SimpleName: Short(1096) into SimpleType: Short(1097) at 0", "Insert SimpleName: ShortConverter(1103) into SimpleType: ShortConverter(1104) at 0", "Insert SimpleName: INSTANCE(1105) into VariableDeclarationFragment(1109) at 0", "Insert ClassInstanceCreation(1108) into VariableDeclarationFragment(1109) at 1", "Insert SimpleName: Override(1111) into MarkerAnnotation(1112) at 0", "Insert SimpleName: Short(1114) into SimpleType: Short(1115) at 0", "Insert SimpleType: String(1118) into SingleVariableDeclaration(1120) at 0", "Insert SimpleName: value(1119) into SingleVariableDeclaration(1120) at 1", "Insert ReturnStatement(1130) into Block(1131) at 0", "Insert SimpleName: Override(1133) into MarkerAnnotation(1134) at 0", "Insert SimpleName: String(1136) into SimpleType: String(1137) at 0", "Insert SimpleType: Short(1140) into SingleVariableDeclaration(1142) at 0", "Insert SimpleName: value(1141) into SingleVariableDeclaration(1142) at 1", "Insert ReturnStatement(1151) into Block(1152) at 0", "Insert SimpleName: Override(1154) into MarkerAnnotation(1155) at 0", "Insert SimpleName: String(1157) into SimpleType: String(1158) at 0", "Insert ReturnStatement(1161) into Block(1162) at 0", "Insert SimpleName: Object(1165) into SimpleType: Object(1166) at 0", "Insert ReturnStatement(1169) into Block(1170) at 0", "Insert SimpleName: serialVersionUID(1176) into VariableDeclarationFragment(1178) at 0", "Insert NumberLiteral: 1(1177) into VariableDeclarationFragment(1178) at 1", "Insert TextElement: Returns a serializable converter object that converts between strings and(1181) into TagElement(1193) at 0", "Insert TextElement: shorts using (1182) into TagElement(1193) at 1", "Insert TagElement: @link(1186) into TagElement(1193) at 2", "Insert TextElement:  and (1187) into TagElement(1193) at 3", "Insert TagElement: @link(1191) into TagElement(1193) at 4", "Insert TextElement: .(1192) into TagElement(1193) at 5", "Insert TextElement:  16.0(1194) into TagElement: @since(1195) at 0", "Insert SimpleName: Converter(1201) into SimpleType: Converter(1202) at 0", "Insert SimpleName: String(1203) into SimpleType: String(1204) at 0", "Insert SimpleName: Short(1205) into SimpleType: Short(1206) at 0", "Insert QualifiedName: ShortConverter.INSTANCE(1209) into ReturnStatement(1210) at 0", "Insert SimpleType: ShortConverter(1107) into ClassInstanceCreation(1108) at 0", "Insert SimpleName: String(1117) into SimpleType: String(1118) at 0", "Insert ConditionalExpression(1129) into ReturnStatement(1130) at 0", "Insert SimpleName: Short(1139) into SimpleType: Short(1140) at 0", "Insert ConditionalExpression(1150) into ReturnStatement(1151) at 0", "Insert StringLiteral: \"Shorts.stringConverter()\"(1160) into ReturnStatement(1161) at 0", "Insert SimpleName: INSTANCE(1168) into ReturnStatement(1169) at 0", "Insert MemberRef(1185) into TagElement: @link(1186) at 0", "Insert MethodRef(1190) into TagElement: @link(1191) at 0", "Insert SimpleName: ShortConverter(1106) into SimpleType: ShortConverter(1107) at 0", "Insert InfixExpression: ==(1123) into ConditionalExpression(1129) at 0", "Insert NullLiteral(1124) into ConditionalExpression(1129) at 1", "Insert MethodInvocation(1128) into ConditionalExpression(1129) at 2", "Insert InfixExpression: ==(1145) into ConditionalExpression(1150) at 0", "Insert NullLiteral(1146) into ConditionalExpression(1150) at 1", "Insert MethodInvocation(1149) into ConditionalExpression(1150) at 2", "Insert SimpleName: Short(1183) into MemberRef(1185) at 0", "Insert SimpleName: decode(1184) into MemberRef(1185) at 1", "Insert SimpleName: Short(1188) into MethodRef(1190) at 0", "Insert SimpleName: toString(1189) into MethodRef(1190) at 1", "Insert SimpleName: value(1121) into InfixExpression: ==(1123) at 0", "Insert NullLiteral(1122) into InfixExpression: ==(1123) at 1", "Insert SimpleName: Short(1125) into MethodInvocation(1128) at 0", "Insert SimpleName: decode(1126) into MethodInvocation(1128) at 1", "Insert SimpleName: value(1127) into MethodInvocation(1128) at 2", "Insert SimpleName: value(1143) into InfixExpression: ==(1145) at 0", "Insert NullLiteral(1144) into InfixExpression: ==(1145) at 1", "Insert SimpleName: value(1147) into MethodInvocation(1149) at 0", "Insert SimpleName: toString(1148) into MethodInvocation(1149) at 1"]}}], "commit_stats": [{"total_files": 44, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}