{"application": "apache-zookeeper", "csha": "9be9a3a1d03d6f78b4e55423d15f46c5d3a82f74", "files": [{"ClientCnxn_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: java.io.BufferedReader to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.io.InputStreamReader to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: java.net.ConnectException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: java.net.Socket to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS TextElement: is sent, besides other data, during session creation handshake. If the to TagElement at 1", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: server on the other side of the wire is partitioned it'll accept to TagElement at 2", "INS TextElement: If true, the connection is allowed to go to r-o mode. This field's value to TagElement at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: readOnly to VariableDeclarationFragment at 0", "INS TextElement: read-only clients only. to TagElement at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 24", "operations": ["INS TextElement: If this field is false (which implies we haven't seen r/w server before) to TagElement at 9", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS TextElement: Is set to true when a connection to a r/w server is established for the to TagElement at 0", "INS Modifier: volatile to FieldDeclaration at 1", "INS TextElement: read-only server. Such client receives \"fake\" sessionId from read-only to TagElement at 4", "INS SimpleName: seenRwServerBefore to VariableDeclarationFragment at 0", "INS TextElement: <p> to TagElement at 8", "INS TextElement: server, but this sessionId is invalid for other servers. So when such to TagElement at 5", "INS TextElement: then non-zero sessionId is fake, otherwise it is valid. to TagElement at 10", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: <p> to TagElement at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS TextElement: first time; never changed afterwards. to TagElement at 1", "INS TextElement: Is used to handle situations when client without sessionId connects to a to TagElement at 3", "INS TextElement: client finds a r/w server, it sends 0 instead of fake sessionId during to TagElement at 6", "INS TextElement: connection handshake and establishes new, valid session. to TagElement at 7", "INS FieldDeclaration to TypeDeclaration: class at 24"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 46", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS Modifier: public to MethodDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: msg to SuperConstructorInvocation at 0", "INS SimpleType: IOException to TypeDeclaration: class at 3", "INS SimpleName: msg to SingleVariableDeclaration at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 46", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: RWServerFoundException to TypeDeclaration: class at 2", "INS SuperConstructorInvocation to Block at 0", "INS NumberLiteral: 90431199887158758L to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: private to TypeDeclaration: class at 0", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS Block to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: RWServerFoundException to MethodDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: request to SingleVariableDeclaration at 1", "INS SimpleName: watchRegistration to SingleVariableDeclaration at 1", "INS SimpleName: Packet to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: response to ConstructorInvocation at 3", "INS SimpleName: replyHeader to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Record to SimpleType: Record at 0", "INS SimpleType: Record to SingleVariableDeclaration at 0", "INS SimpleName: WatchRegistration to SimpleType: WatchRegistration at 0", "INS ConstructorInvocation to Block at 0", "INS SimpleType: WatchRegistration to SingleVariableDeclaration at 0", "INS SimpleType: ReplyHeader to SingleVariableDeclaration at 0", "INS SimpleType: RequestHeader to SingleVariableDeclaration at 0", "INS SimpleName: request to ConstructorInvocation at 2", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS BooleanLiteral: false to ConstructorInvocation at 5", "INS TextElement: Convenience ctor  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: requestHeader to ConstructorInvocation at 0", "INS SimpleName: watchRegistration to ConstructorInvocation at 4", "INS SimpleName: requestHeader to SingleVariableDeclaration at 1", "INS SimpleName: Record to SimpleType: Record at 0", "INS SimpleName: replyHeader to ConstructorInvocation at 1", "INS SimpleName: ReplyHeader to SimpleType: ReplyHeader at 0", "INS SimpleName: RequestHeader to SimpleType: RequestHeader at 0", "INS SimpleName: response to SingleVariableDeclaration at 1", "INS SimpleType: Record to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleName: canBeReadOnly to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 11", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS SimpleName: canBeReadOnly to SingleVariableDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 13", "INS SimpleType: InetSocketAddress to FieldDeclaration at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: rwServerAddress to VariableDeclarationFragment at 0", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS NumberLiteral: 100 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: minPingRwTimeout to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS Modifier: static to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS SimpleName: maxPingRwTimeout to VariableDeclarationFragment at 0", "INS NumberLiteral: 60000 to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 16", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 1", "INS SimpleName: minPingRwTimeout to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: pingRwTimeout to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 16"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: minPingRwTimeout to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: getOutputStream to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleType: InputStreamReader to ClassInstanceCreation at 0", "INS SimpleName: br to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 1000 to MethodInvocation at 2", "INS SimpleName: e to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: addr to VariableDeclarationFragment at 0", "INS PrefixExpression: - to MethodInvocation at 3", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \" for being r/w.\" to InfixExpression: + at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: BufferedReader to SimpleType: BufferedReader at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: BufferedReader to SimpleType: BufferedReader at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: getInputStream to MethodInvocation at 1", "INS SimpleName: addr to InfixExpression: + at 1", "INS SimpleName: sock to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addr to MethodInvocation at 0", "INS BooleanLiteral: false to MethodInvocation at 2", "INS SimpleName: br to MethodInvocation at 0", "INS SimpleName: hostProvider to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS SimpleName: setSoTimeout to MethodInvocation at 1", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleType: BufferedReader to ClassInstanceCreation at 0", "INS SimpleType: Socket to VariableDeclarationStatement at 0", "INS SimpleType: RWServerFoundException to ClassInstanceCreation at 0", "INS StringLiteral: \" Timeout \" to InfixExpression: + at 3", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: setTcpNoDelay to MethodInvocation at 1", "INS StringLiteral: \"Exception while seeking for r/w server \" to InfixExpression: + at 0", "INS SimpleName: e to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TryStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 10", "INS CatchClause to TryStatement at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleType: Socket to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 4", "INS VariableDeclarationStatement to Block at 0", "INS Block to TryStatement at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS SimpleName: br to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: pingRwServer to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: setSoLinger to MethodInvocation at 1", "INS StringLiteral: \":\" to InfixExpression: + at 2", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS StringLiteral: \"isro\" to MethodInvocation at 0", "INS SimpleName: readLine to MethodInvocation at 1", "INS ExpressionStatement to Block at 6", "INS SimpleName: rwServerAddress to Assignment: = at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"Checking server \" to InfixExpression: + at 0", "INS SimpleName: info to MethodInvocation at 1", "INS ExpressionStatement to Block at 9", "INS SimpleName: pingRwTimeout to Assignment: = at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS StringLiteral: \"rw\" to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: flush to MethodInvocation at 1", "INS SimpleName: addr to MethodInvocation at 0", "INS SimpleType: RWServerFoundException to MethodDeclaration at 3", "INS SimpleName: getPort to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: write to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: pingRwTimeout to InfixExpression: + at 4", "INS SimpleName: shutdownOutput to MethodInvocation at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: getHostName to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: ConnectException to SingleVariableDeclaration at 0", "INS StringLiteral: \"Majority server found at \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 1", "INS ThrowStatement to Block at 2", "INS SimpleName: RWServerFoundException to SimpleType: RWServerFoundException at 0", "INS SimpleName: ConnectException to SimpleType: ConnectException at 0", "INS Block to IfStatement at 1", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: RWServerFoundException to SimpleType: RWServerFoundException at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS SimpleName: result to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: addr to MethodInvocation at 0", "INS SimpleName: InputStreamReader to SimpleType: InputStreamReader at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: getOutputStream to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: addr to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getPort to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: addr to Assignment: = at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: BufferedReader to VariableDeclarationStatement at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS SimpleName: getMessage to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 4", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: sock to VariableDeclarationFragment at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: getHostName to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ExpressionStatement to Block at 8", "INS SimpleName: close to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: readOnly to SingleVariableDeclaration at 1"]}, {"root": "INS TagElement: @param to Javadoc at 7", "operations": ["INS SimpleName: canBeReadOnly to TagElement: @param at 0", "INS TextElement: mode in case of partitioning to TagElement: @param at 2", "INS TextElement: whether the connection is allowed to go to read-only to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 7"]}, {"root": "INS TagElement: @param to Javadoc at 9", "operations": ["INS TextElement: mode in case of partitioning to TagElement: @param at 2", "INS TextElement: whether the connection is allowed to go to read-only to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 9", "INS SimpleName: canBeReadOnly to TagElement: @param at 0"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS SimpleName: canBeReadOnly to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: readOnly to Assignment: = at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: isRO to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS SimpleName: canBeReadOnly to ConstructorInvocation at 8", "operations": ["INS SimpleName: canBeReadOnly to ConstructorInvocation at 8"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: sessId to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: sessionId to ConditionalExpression at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: seenRwServerBefore to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to ConditionalExpression at 2"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: rwServerAddress to Assignment: = at 1", "INS NullLiteral to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: rwServerAddress to Assignment: = at 0", "INS SimpleName: addr to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 2", "INS SimpleName: addr to Assignment: = at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: rwServerAddress to InfixExpression: != at 0", "INS Block to IfStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: System to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: lastPingRwServer to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0"]}, {"root": "INS TagElement: @param to Javadoc at 4", "operations": ["INS SimpleName: isRO to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 4"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isRO to InfixExpression: && at 1", "INS SimpleName: readOnly to PrefixExpression: ! at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS StringLiteral: \"Read/write client got connected to read-only server\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: error to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS Block to IfStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: seenRwServerBefore to Assignment: |= at 0", "INS ExpressionStatement to Block at 9", "INS PrefixExpression: ! to Assignment: |= at 1", "INS SimpleName: isRO to PrefixExpression: ! at 0", "INS Assignment: |= to ExpressionStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 11", "operations": ["INS SimpleName: KeeperState to SimpleType: KeeperState at 0", "INS SimpleName: eventState to VariableDeclarationFragment at 0", "INS SimpleName: isRO to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: KeeperState.SyncConnected to ConditionalExpression at 2", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS VariableDeclarationStatement to Block at 11", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS QualifiedName: KeeperState.ConnectedReadOnly to ConditionalExpression at 1", "INS SimpleType: KeeperState to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ConnectRequest to VariableDeclarationStatement at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS QualifiedName: States.CONNECTED to ConditionalExpression at 2", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS QualifiedName: States.CONNECTEDREADONLY to ConditionalExpression at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: isRO to ParenthesizedExpression at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ConnectRequest to ClassInstanceCreation at 0"]}, {"root": "UPDATE from sessionId to sessId", "operations": ["UPD SimpleName: sessionId from sessionId to sessId"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 6", "operations": ["INS ConditionalExpression to ParenthesizedExpression at 0", "INS StringLiteral: \" (READ-ONLY mode)\" to ConditionalExpression at 1", "INS ParenthesizedExpression to InfixExpression: + at 6", "INS SimpleName: isRO to ConditionalExpression at 0", "INS StringLiteral: \"\" to ConditionalExpression at 2"]}, {"root": "INS SimpleName: eventState to ClassInstanceCreation at 2", "operations": ["INS SimpleName: eventState to ClassInstanceCreation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: writeBool to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"readOnly\" to MethodInvocation at 3", "INS SimpleName: boa to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: readOnly to MethodInvocation at 2"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: readOnly to ClassInstanceCreation at 6"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS NumberLiteral: 0 to Assignment: = at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: - to MethodInvocation at 3", "INS SimpleName: min to MethodInvocation at 1", "INS SimpleName: lastPingRwServer to InfixExpression: - at 1", "INS QualifiedName: States.CONNECTEDREADONLY to InfixExpression: == at 1", "INS SimpleName: pingRwTimeout to InfixExpression: * at 1", "INS SimpleName: to to Assignment: = at 0", "INS SimpleName: now to Assignment: = at 1", "INS IfStatement to Block at 4", "INS SimpleName: idlePingRwServer to Assignment: = at 0", "INS Block to IfStatement at 1", "INS SimpleName: maxPingRwTimeout to MethodInvocation at 3", "INS ExpressionStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: now to InfixExpression: - at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: pingRwTimeout to InfixExpression: - at 0", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: to to MethodInvocation at 2", "INS InfixExpression: >= to IfStatement at 0", "INS SimpleName: idlePingRwServer to InfixExpression: - at 1", "INS SimpleName: pingRwServer to MethodInvocation at 0", "INS SimpleName: lastPingRwServer to Assignment: = at 0", "INS SimpleName: System to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS PrimitiveType: int to CastExpression at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: pingRwTimeout to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS InfixExpression: * to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: idlePingRwServer to VariableDeclarationFragment at 0", "INS SimpleName: now to VariableDeclarationFragment at 0", "INS NumberLiteral: 2 to InfixExpression: * at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: state to InfixExpression: == at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: pingRwTimeout to InfixExpression: >= at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: idlePingRwServer to InfixExpression: >= at 0", "INS IfStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS SimpleName: min to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Packet to ClassInstanceCreation at 0", "MOV NullLiteral to ClassInstanceCreation at 1", "MOV SimpleName: conReq to ClassInstanceCreation at 3", "MOV NullLiteral to ClassInstanceCreation at 5", "MOV NullLiteral to ClassInstanceCreation at 2", "MOV NullLiteral to ClassInstanceCreation at 4"]}, {"root": "UPDATE from e1 to e", "operations": ["UPD SimpleName: e1 from e1 to e", "UPD SimpleName: e1 from e1 to e"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: state to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isConnected to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: state to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isConnected to MethodInvocation at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: e to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleType: RWServerFoundException to InstanceofExpression at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: RWServerFoundException to SimpleType: RWServerFoundException at 0", "INS SimpleName: getMessage to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ClassInstanceCreation", "DEL ParenthesizedExpression"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL QualifiedName: States.CONNECTED", "DEL SimpleName: state"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: state", "DEL QualifiedName: States.CONNECTED"]}, {"root": "DEL QualifiedName: States.CONNECTED", "operations": ["DEL QualifiedName: States.CONNECTED"]}, {"root": "DEL QualifiedName: Watcher.Event.KeeperState.SyncConnected", "operations": ["DEL QualifiedName: Watcher.Event.KeeperState.SyncConnected"]}]}}, {"ClientCnxn_diff": {"operations": ["Insert ImportDeclaration(40) into CompilationUnit(4158) at 12", "Insert ImportDeclaration(42) into CompilationUnit(4158) at 13", "Insert ImportDeclaration(44) into CompilationUnit(4158) at 14", "Insert ImportDeclaration(46) into CompilationUnit(4158) at 15", "Insert QualifiedName: java.io.BufferedReader(39) into ImportDeclaration(40) at 0", "Insert QualifiedName: java.io.InputStreamReader(41) into ImportDeclaration(42) at 0", "Insert QualifiedName: java.net.ConnectException(43) into ImportDeclaration(44) at 0", "Insert QualifiedName: java.net.Socket(45) into ImportDeclaration(46) at 0", "Insert FieldDeclaration(330) into TypeDeclaration: class(4157) at 18", "Insert FieldDeclaration(390) into TypeDeclaration: class(4157) at 24", "Insert TypeDeclaration: class(2203) into TypeDeclaration: class(4157) at 46", "Insert Javadoc(325) into FieldDeclaration(330) at 0", "Insert Modifier: private(326) into FieldDeclaration(330) at 1", "Insert PrimitiveType: boolean(327) into FieldDeclaration(330) at 2", "Insert VariableDeclarationFragment(329) into FieldDeclaration(330) at 3", "Insert Javadoc(384) into FieldDeclaration(390) at 0", "Insert Modifier: volatile(385) into FieldDeclaration(390) at 1", "Insert PrimitiveType: boolean(386) into FieldDeclaration(390) at 2", "Insert VariableDeclarationFragment(389) into FieldDeclaration(390) at 3", "Insert MethodDeclaration(631) into TypeDeclaration: class(873) at 14", "Insert SingleVariableDeclaration(930) into MethodDeclaration(948) at 9", "Insert SingleVariableDeclaration(1019) into MethodDeclaration(1096) at 11", "Insert Modifier: private(2180) into TypeDeclaration: class(2203) at 0", "Insert Modifier: static(2181) into TypeDeclaration: class(2203) at 1", "Insert SimpleName: RWServerFoundException(2182) into TypeDeclaration: class(2203) at 2", "Insert SimpleType: IOException(2184) into TypeDeclaration: class(2203) at 3", "Insert FieldDeclaration(2192) into TypeDeclaration: class(2203) at 4", "Insert MethodDeclaration(2202) into TypeDeclaration: class(2203) at 5", "Insert FieldDeclaration(2898) into TypeDeclaration: class(3786) at 13", "Insert FieldDeclaration(2906) into TypeDeclaration: class(3786) at 14", "Insert FieldDeclaration(2914) into TypeDeclaration: class(3786) at 15", "Insert FieldDeclaration(2920) into TypeDeclaration: class(3786) at 16", "Insert MethodDeclaration(3553) into TypeDeclaration: class(3786) at 20", "Insert TagElement(324) into Javadoc(325) at 0", "Insert SimpleName: readOnly(328) into VariableDeclarationFragment(329) at 0", "Insert TagElement(383) into Javadoc(384) at 0", "Insert SimpleName: seenRwServerBefore(387) into VariableDeclarationFragment(389) at 0", "Insert BooleanLiteral: false(388) into VariableDeclarationFragment(389) at 1", "Insert Javadoc(601) into MethodDeclaration(631) at 0", "Insert SimpleName: Packet(602) into MethodDeclaration(631) at 1", "Insert SingleVariableDeclaration(606) into MethodDeclaration(631) at 2", "Insert SingleVariableDeclaration(610) into MethodDeclaration(631) at 3", "Insert SingleVariableDeclaration(614) into MethodDeclaration(631) at 4", "Insert SingleVariableDeclaration(618) into MethodDeclaration(631) at 5", "Insert SingleVariableDeclaration(622) into MethodDeclaration(631) at 6", "Insert Block(630) into MethodDeclaration(631) at 7", "Insert SingleVariableDeclaration(655) into MethodDeclaration(799) at 6", "Insert TagElement: @param(899) into Javadoc(902) at 7", "Insert PrimitiveType: boolean(928) into SingleVariableDeclaration(930) at 0", "Insert SimpleName: canBeReadOnly(929) into SingleVariableDeclaration(930) at 1", "Insert TagElement: @param(980) into Javadoc(983) at 9", "Insert PrimitiveType: boolean(1017) into SingleVariableDeclaration(1019) at 0", "Insert SimpleName: canBeReadOnly(1018) into SingleVariableDeclaration(1019) at 1", "Insert ExpressionStatement(1081) into Block(1095) at 9", "Insert SimpleName: IOException(2183) into SimpleType: IOException(2184) at 0", "Insert Modifier: private(2185) into FieldDeclaration(2192) at 0", "Insert Modifier: static(2186) into FieldDeclaration(2192) at 1", "Insert Modifier: final(2187) into FieldDeclaration(2192) at 2", "Insert PrimitiveType: long(2188) into FieldDeclaration(2192) at 3", "Insert VariableDeclarationFragment(2191) into FieldDeclaration(2192) at 4", "Insert Modifier: public(2193) into MethodDeclaration(2202) at 0", "Insert SimpleName: RWServerFoundException(2194) into MethodDeclaration(2202) at 1", "Insert SingleVariableDeclaration(2198) into MethodDeclaration(2202) at 2", "Insert Block(2201) into MethodDeclaration(2202) at 3", "Insert Modifier: private(2892) into FieldDeclaration(2898) at 0", "Insert SimpleType: InetSocketAddress(2894) into FieldDeclaration(2898) at 1", "Insert VariableDeclarationFragment(2897) into FieldDeclaration(2898) at 2", "Insert Modifier: private(2899) into FieldDeclaration(2906) at 0", "Insert Modifier: final(2900) into FieldDeclaration(2906) at 1", "Insert Modifier: static(2901) into FieldDeclaration(2906) at 2", "Insert PrimitiveType: int(2902) into FieldDeclaration(2906) at 3", "Insert VariableDeclarationFragment(2905) into FieldDeclaration(2906) at 4", "Insert Modifier: private(2907) into FieldDeclaration(2914) at 0", "Insert Modifier: final(2908) into FieldDeclaration(2914) at 1", "Insert Modifier: static(2909) into FieldDeclaration(2914) at 2", "Insert PrimitiveType: int(2910) into FieldDeclaration(2914) at 3", "Insert VariableDeclarationFragment(2913) into FieldDeclaration(2914) at 4", "Insert Modifier: private(2915) into FieldDeclaration(2920) at 0", "Insert PrimitiveType: int(2916) into FieldDeclaration(2920) at 1", "Insert VariableDeclarationFragment(2919) into FieldDeclaration(2920) at 2", "Insert Modifier: private(3393) into MethodDeclaration(3553) at 0", "Insert PrimitiveType: void(3394) into MethodDeclaration(3553) at 1", "Insert SimpleName: pingRwServer(3395) into MethodDeclaration(3553) at 2", "Insert SimpleType: RWServerFoundException(3397) into MethodDeclaration(3553) at 3", "Insert Block(3552) into MethodDeclaration(3553) at 4", "Insert SingleVariableDeclaration(3628) into MethodDeclaration(3763) at 6", "Insert TextElement: If true, the connection is allowed to go to r-o mode. This field's value(320) into TagElement(324) at 0", "Insert TextElement: is sent, besides other data, during session creation handshake. If the(321) into TagElement(324) at 1", "Insert TextElement: server on the other side of the wire is partitioned it'll accept(322) into TagElement(324) at 2", "Insert TextElement: read-only clients only.(323) into TagElement(324) at 3", "Insert TextElement: Is set to true when a connection to a r/w server is established for the(372) into TagElement(383) at 0", "Insert TextElement: first time; never changed afterwards.(373) into TagElement(383) at 1", "Insert TextElement: <p>(374) into TagElement(383) at 2", "Insert TextElement: Is used to handle situations when client without sessionId connects to a(375) into TagElement(383) at 3", "Insert TextElement: read-only server. Such client receives \"fake\" sessionId from read-only(376) into TagElement(383) at 4", "Insert TextElement: server, but this sessionId is invalid for other servers. So when such(377) into TagElement(383) at 5", "Insert TextElement: client finds a r/w server, it sends 0 instead of fake sessionId during(378) into TagElement(383) at 6", "Insert TextElement: connection handshake and establishes new, valid session.(379) into TagElement(383) at 7", "Insert TextElement: <p>(380) into TagElement(383) at 8", "Insert TextElement: If this field is false (which implies we haven't seen r/w server before)(381) into TagElement(383) at 9", "Insert TextElement: then non-zero sessionId is fake, otherwise it is valid.(382) into TagElement(383) at 10", "Insert TagElement(600) into Javadoc(601) at 0", "Insert SimpleType: RequestHeader(604) into SingleVariableDeclaration(606) at 0", "Insert SimpleName: requestHeader(605) into SingleVariableDeclaration(606) at 1", "Insert SimpleType: ReplyHeader(608) into SingleVariableDeclaration(610) at 0", "Insert SimpleName: replyHeader(609) into SingleVariableDeclaration(610) at 1", "Insert SimpleType: Record(612) into SingleVariableDeclaration(614) at 0", "Insert SimpleName: request(613) into SingleVariableDeclaration(614) at 1", "Insert SimpleType: Record(616) into SingleVariableDeclaration(618) at 0", "Insert SimpleName: response(617) into SingleVariableDeclaration(618) at 1", "Insert SimpleType: WatchRegistration(620) into SingleVariableDeclaration(622) at 0", "Insert SimpleName: watchRegistration(621) into SingleVariableDeclaration(622) at 1", "Insert ConstructorInvocation(629) into Block(630) at 0", "Insert PrimitiveType: boolean(653) into SingleVariableDeclaration(655) at 0", "Insert SimpleName: readOnly(654) into SingleVariableDeclaration(655) at 1", "Insert SimpleName: canBeReadOnly(896) into TagElement: @param(899) at 0", "Insert TextElement: whether the connection is allowed to go to read-only(897) into TagElement: @param(899) at 1", "Insert TextElement: mode in case of partitioning(898) into TagElement: @param(899) at 2", "Insert SimpleName: canBeReadOnly(945) into ConstructorInvocation(946) at 8", "Insert SimpleName: canBeReadOnly(977) into TagElement: @param(980) at 0", "Insert TextElement: whether the connection is allowed to go to read-only(978) into TagElement: @param(980) at 1", "Insert TextElement: mode in case of partitioning(979) into TagElement: @param(980) at 2", "Insert Assignment: =(1080) into ExpressionStatement(1081) at 0", "Insert SimpleName: serialVersionUID(2189) into VariableDeclarationFragment(2191) at 0", "Insert NumberLiteral: 90431199887158758L(2190) into VariableDeclarationFragment(2191) at 1", "Insert SimpleType: String(2196) into SingleVariableDeclaration(2198) at 0", "Insert SimpleName: msg(2197) into SingleVariableDeclaration(2198) at 1", "Insert SuperConstructorInvocation(2200) into Block(2201) at 0", "Insert VariableDeclarationStatement(2697) into Block(2856) at 2", "Insert SimpleName: InetSocketAddress(2893) into SimpleType: InetSocketAddress(2894) at 0", "Insert SimpleName: rwServerAddress(2895) into VariableDeclarationFragment(2897) at 0", "Insert NullLiteral(2896) into VariableDeclarationFragment(2897) at 1", "Insert SimpleName: minPingRwTimeout(2903) into VariableDeclarationFragment(2905) at 0", "Insert NumberLiteral: 100(2904) into VariableDeclarationFragment(2905) at 1", "Insert SimpleName: maxPingRwTimeout(2911) into VariableDeclarationFragment(2913) at 0", "Insert NumberLiteral: 60000(2912) into VariableDeclarationFragment(2913) at 1", "Insert SimpleName: pingRwTimeout(2917) into VariableDeclarationFragment(2919) at 0", "Insert SimpleName: minPingRwTimeout(2918) into VariableDeclarationFragment(2919) at 1", "Insert IfStatement(2981) into Block(3012) at 3", "Insert VariableDeclarationStatement(3052) into Block(3391) at 4", "Insert SimpleName: RWServerFoundException(3396) into SimpleType: RWServerFoundException(3397) at 0", "Insert VariableDeclarationStatement(3403) into Block(3552) at 0", "Insert VariableDeclarationStatement(3412) into Block(3552) at 1", "Insert ExpressionStatement(3422) into Block(3552) at 2", "Insert TryStatement(3524) into Block(3552) at 3", "Insert IfStatement(3551) into Block(3552) at 4", "Insert TagElement: @param(3609) into Javadoc(3612) at 4", "Insert PrimitiveType: boolean(3626) into SingleVariableDeclaration(3628) at 0", "Insert SimpleName: isRO(3627) into SingleVariableDeclaration(3628) at 1", "Insert IfStatement(3679) into Block(3762) at 2", "Insert ExpressionStatement(3720) into Block(3762) at 9", "Insert VariableDeclarationStatement(3751) into Block(3762) at 11", "Insert TextElement: Convenience ctor (599) into TagElement(600) at 0", "Insert SimpleName: RequestHeader(603) into SimpleType: RequestHeader(604) at 0", "Insert SimpleName: ReplyHeader(607) into SimpleType: ReplyHeader(608) at 0", "Insert SimpleName: Record(611) into SimpleType: Record(612) at 0", "Insert SimpleName: Record(615) into SimpleType: Record(616) at 0", "Insert SimpleName: WatchRegistration(619) into SimpleType: WatchRegistration(620) at 0", "Insert SimpleName: requestHeader(623) into ConstructorInvocation(629) at 0", "Insert SimpleName: replyHeader(624) into ConstructorInvocation(629) at 1", "Insert SimpleName: request(625) into ConstructorInvocation(629) at 2", "Insert SimpleName: response(626) into ConstructorInvocation(629) at 3", "Insert SimpleName: watchRegistration(627) into ConstructorInvocation(629) at 4", "Insert BooleanLiteral: false(628) into ConstructorInvocation(629) at 5", "Insert SimpleName: readOnly(1078) into Assignment: =(1080) at 0", "Insert SimpleName: canBeReadOnly(1079) into Assignment: =(1080) at 1", "Insert SimpleName: String(2195) into SimpleType: String(2196) at 0", "Insert SimpleName: msg(2199) into SuperConstructorInvocation(2200) at 0", "Insert PrimitiveType: long(2689) into VariableDeclarationStatement(2697) at 0", "Insert VariableDeclarationFragment(2696) into VariableDeclarationStatement(2697) at 1", "Move SimpleType: ConnectRequest(2570) into VariableDeclarationStatement(2710) at 0", "Insert InfixExpression: !=(2963) into IfStatement(2981) at 0", "Insert Block(2972) into IfStatement(2981) at 1", "Insert Block(2980) into IfStatement(2981) at 2", "Insert PrimitiveType: long(3046) into VariableDeclarationStatement(3052) at 0", "Insert VariableDeclarationFragment(3051) into VariableDeclarationStatement(3052) at 1", "Insert SimpleType: String(3399) into VariableDeclarationStatement(3403) at 0", "Insert VariableDeclarationFragment(3402) into VariableDeclarationStatement(3403) at 1", "Insert SimpleType: InetSocketAddress(3405) into VariableDeclarationStatement(3412) at 0", "Insert VariableDeclarationFragment(3411) into VariableDeclarationStatement(3412) at 1", "Insert MethodInvocation(3421) into ExpressionStatement(3422) at 0", "Insert Block(3501) into TryStatement(3524) at 0", "Insert CatchClause(3507) into TryStatement(3524) at 1", "Insert CatchClause(3523) into TryStatement(3524) at 2", "Insert MethodInvocation(3528) into IfStatement(3551) at 0", "Insert Block(3550) into IfStatement(3551) at 1", "Insert SimpleName: isRO(3608) into TagElement: @param(3609) at 0", "Insert InfixExpression: &&(3672) into IfStatement(3679) at 0", "Insert Block(3678) into IfStatement(3679) at 1", "Insert Assignment: |=(3719) into ExpressionStatement(3720) at 0", "Insert SimpleType: KeeperState(3743) into VariableDeclarationStatement(3751) at 0", "Insert VariableDeclarationFragment(3750) into VariableDeclarationStatement(3751) at 1", "Insert SimpleName: sessId(2690) into VariableDeclarationFragment(2696) at 0", "Insert ConditionalExpression(2695) into VariableDeclarationFragment(2696) at 1", "Insert SimpleName: rwServerAddress(2961) into InfixExpression: !=(2963) at 0", "Insert NullLiteral(2962) into InfixExpression: !=(2963) at 1", "Insert ExpressionStatement(2967) into Block(2972) at 0", "Insert ExpressionStatement(2971) into Block(2972) at 1", "Insert ExpressionStatement(2979) into Block(2980) at 0", "Insert SimpleName: lastPingRwServer(3047) into VariableDeclarationFragment(3051) at 0", "Insert MethodInvocation(3050) into VariableDeclarationFragment(3051) at 1", "Insert SimpleName: String(3398) into SimpleType: String(3399) at 0", "Insert SimpleName: result(3400) into VariableDeclarationFragment(3402) at 0", "Insert NullLiteral(3401) into VariableDeclarationFragment(3402) at 1", "Insert SimpleName: InetSocketAddress(3404) into SimpleType: InetSocketAddress(3405) at 0", "Insert SimpleName: addr(3406) into VariableDeclarationFragment(3411) at 0", "Insert MethodInvocation(3410) into VariableDeclarationFragment(3411) at 1", "Insert SimpleName: LOG(3413) into MethodInvocation(3421) at 0", "Insert SimpleName: info(3414) into MethodInvocation(3421) at 1", "Insert InfixExpression: +(3420) into MethodInvocation(3421) at 2", "Insert VariableDeclarationStatement(3436) into Block(3501) at 0", "Insert ExpressionStatement(3443) into Block(3501) at 1", "Insert ExpressionStatement(3448) into Block(3501) at 2", "Insert ExpressionStatement(3453) into Block(3501) at 3", "Insert ExpressionStatement(3462) into Block(3501) at 4", "Insert ExpressionStatement(3468) into Block(3501) at 5", "Insert ExpressionStatement(3472) into Block(3501) at 6", "Insert VariableDeclarationStatement(3486) into Block(3501) at 7", "Insert ExpressionStatement(3492) into Block(3501) at 8", "Insert ExpressionStatement(3496) into Block(3501) at 9", "Insert ExpressionStatement(3500) into Block(3501) at 10", "Insert SingleVariableDeclaration(3505) into CatchClause(3507) at 0", "Insert Block(3506) into CatchClause(3507) at 1", "Insert SingleVariableDeclaration(3511) into CatchClause(3523) at 0", "Insert Block(3522) into CatchClause(3523) at 1", "Insert StringLiteral: \"rw\"(3525) into MethodInvocation(3528) at 0", "Insert SimpleName: equals(3526) into MethodInvocation(3528) at 1", "Insert SimpleName: result(3527) into MethodInvocation(3528) at 2", "Insert ExpressionStatement(3532) into Block(3550) at 0", "Insert ExpressionStatement(3536) into Block(3550) at 1", "Insert ThrowStatement(3549) into Block(3550) at 2", "Insert PrefixExpression: !(3670) into InfixExpression: &&(3672) at 0", "Insert SimpleName: isRO(3671) into InfixExpression: &&(3672) at 1", "Insert ExpressionStatement(3677) into Block(3678) at 0", "Insert ConditionalExpression(3713) into Assignment: =(3714) at 1", "Insert SimpleName: seenRwServerBefore(3716) into Assignment: |=(3719) at 0", "Insert PrefixExpression: !(3718) into Assignment: |=(3719) at 1", "Insert SimpleName: KeeperState(3742) into SimpleType: KeeperState(3743) at 0", "Insert SimpleName: eventState(3744) into VariableDeclarationFragment(3750) at 0", "Insert ConditionalExpression(3749) into VariableDeclarationFragment(3750) at 1", "Insert ParenthesizedExpression(2692) into ConditionalExpression(2695) at 0", "Insert SimpleName: sessionId(2693) into ConditionalExpression(2695) at 1", "Insert NumberLiteral: 0(2694) into ConditionalExpression(2695) at 2", "Move SimpleType: ConnectRequest(2567) into ClassInstanceCreation(2708) at 0", "Update SimpleName: sessionId(2574) to sessId", "Insert Assignment: =(2966) into ExpressionStatement(2967) at 0", "Insert Assignment: =(2970) into ExpressionStatement(2971) at 0", "Insert Assignment: =(2978) into ExpressionStatement(2979) at 0", "Insert SimpleName: System(3048) into MethodInvocation(3050) at 0", "Insert SimpleName: currentTimeMillis(3049) into MethodInvocation(3050) at 1", "Insert SimpleName: hostProvider(3407) into MethodInvocation(3410) at 0", "Insert SimpleName: next(3408) into MethodInvocation(3410) at 1", "Insert NumberLiteral: 0(3409) into MethodInvocation(3410) at 2", "Insert StringLiteral: \"Checking server \"(3415) into InfixExpression: +(3420) at 0", "Insert SimpleName: addr(3416) into InfixExpression: +(3420) at 1", "Insert StringLiteral: \" for being r/w.\"(3417) into InfixExpression: +(3420) at 2", "Insert StringLiteral: \" Timeout \"(3418) into InfixExpression: +(3420) at 3", "Insert SimpleName: pingRwTimeout(3419) into InfixExpression: +(3420) at 4", "Insert SimpleType: Socket(3424) into VariableDeclarationStatement(3436) at 0", "Insert VariableDeclarationFragment(3435) into VariableDeclarationStatement(3436) at 1", "Insert MethodInvocation(3442) into ExpressionStatement(3443) at 0", "Insert MethodInvocation(3447) into ExpressionStatement(3448) at 0", "Insert MethodInvocation(3452) into ExpressionStatement(3453) at 0", "Insert MethodInvocation(3461) into ExpressionStatement(3462) at 0", "Insert MethodInvocation(3467) into ExpressionStatement(3468) at 0", "Insert MethodInvocation(3471) into ExpressionStatement(3472) at 0", "Insert SimpleType: BufferedReader(3474) into VariableDeclarationStatement(3486) at 0", "Insert VariableDeclarationFragment(3485) into VariableDeclarationStatement(3486) at 1", "Insert Assignment: =(3491) into ExpressionStatement(3492) at 0", "Insert MethodInvocation(3495) into ExpressionStatement(3496) at 0", "Insert MethodInvocation(3499) into ExpressionStatement(3500) at 0", "Insert SimpleType: ConnectException(3503) into SingleVariableDeclaration(3505) at 0", "Insert SimpleName: e(3504) into SingleVariableDeclaration(3505) at 1", "Insert SimpleType: IOException(3509) into SingleVariableDeclaration(3511) at 0", "Insert SimpleName: e(3510) into SingleVariableDeclaration(3511) at 1", "Insert ExpressionStatement(3521) into Block(3522) at 0", "Insert Assignment: =(3531) into ExpressionStatement(3532) at 0", "Insert Assignment: =(3535) into ExpressionStatement(3536) at 0", "Insert ClassInstanceCreation(3548) into ThrowStatement(3549) at 0", "Insert SimpleName: readOnly(3669) into PrefixExpression: !(3670) at 0", "Insert MethodInvocation(3676) into ExpressionStatement(3677) at 0", "Insert ParenthesizedExpression(3710) into ConditionalExpression(3713) at 0", "Insert QualifiedName: States.CONNECTEDREADONLY(3711) into ConditionalExpression(3713) at 1", "Insert QualifiedName: States.CONNECTED(3712) into ConditionalExpression(3713) at 2", "Insert SimpleName: isRO(3717) into PrefixExpression: !(3718) at 0", "Insert ParenthesizedExpression(3738) into InfixExpression: +(3739) at 6", "Insert ParenthesizedExpression(3746) into ConditionalExpression(3749) at 0", "Insert QualifiedName: KeeperState.ConnectedReadOnly(3747) into ConditionalExpression(3749) at 1", "Insert QualifiedName: KeeperState.SyncConnected(3748) into ConditionalExpression(3749) at 2", "Insert SimpleName: eventState(3757) into ClassInstanceCreation(3759) at 2", "Insert ExpressionStatement(730) into Block(731) at 1", "Insert SimpleName: seenRwServerBefore(2691) into ParenthesizedExpression(2692) at 0", "Insert ClassInstanceCreation(2833) into MethodInvocation(2834) at 2", "Insert SimpleName: addr(2964) into Assignment: =(2966) at 0", "Insert SimpleName: rwServerAddress(2965) into Assignment: =(2966) at 1", "Insert SimpleName: rwServerAddress(2968) into Assignment: =(2970) at 0", "Insert NullLiteral(2969) into Assignment: =(2970) at 1", "Insert SimpleName: addr(2973) into Assignment: =(2978) at 0", "Move MethodInvocation(2801) into Assignment: =(2978) at 1", "Insert IfStatement(3214) into Block(3222) at 4", "Insert SimpleName: Socket(3423) into SimpleType: Socket(3424) at 0", "Insert SimpleName: sock(3425) into VariableDeclarationFragment(3435) at 0", "Insert ClassInstanceCreation(3434) into VariableDeclarationFragment(3435) at 1", "Insert SimpleName: sock(3437) into MethodInvocation(3442) at 0", "Insert SimpleName: setSoLinger(3438) into MethodInvocation(3442) at 1", "Insert BooleanLiteral: false(3439) into MethodInvocation(3442) at 2", "Insert PrefixExpression: -(3441) into MethodInvocation(3442) at 3", "Insert SimpleName: sock(3444) into MethodInvocation(3447) at 0", "Insert SimpleName: setSoTimeout(3445) into MethodInvocation(3447) at 1", "Insert NumberLiteral: 1000(3446) into MethodInvocation(3447) at 2", "Insert SimpleName: sock(3449) into MethodInvocation(3452) at 0", "Insert SimpleName: setTcpNoDelay(3450) into MethodInvocation(3452) at 1", "Insert BooleanLiteral: true(3451) into MethodInvocation(3452) at 2", "Insert MethodInvocation(3456) into MethodInvocation(3461) at 0", "Insert SimpleName: write(3457) into MethodInvocation(3461) at 1", "Insert MethodInvocation(3460) into MethodInvocation(3461) at 2", "Insert MethodInvocation(3465) into MethodInvocation(3467) at 0", "Insert SimpleName: flush(3466) into MethodInvocation(3467) at 1", "Insert SimpleName: sock(3469) into MethodInvocation(3471) at 0", "Insert SimpleName: shutdownOutput(3470) into MethodInvocation(3471) at 1", "Insert SimpleName: BufferedReader(3473) into SimpleType: BufferedReader(3474) at 0", "Insert SimpleName: br(3475) into VariableDeclarationFragment(3485) at 0", "Insert ClassInstanceCreation(3484) into VariableDeclarationFragment(3485) at 1", "Insert SimpleName: result(3487) into Assignment: =(3491) at 0", "Insert MethodInvocation(3490) into Assignment: =(3491) at 1", "Insert SimpleName: sock(3493) into MethodInvocation(3495) at 0", "Insert SimpleName: close(3494) into MethodInvocation(3495) at 1", "Insert SimpleName: br(3497) into MethodInvocation(3499) at 0", "Insert SimpleName: close(3498) into MethodInvocation(3499) at 1", "Insert SimpleName: ConnectException(3502) into SimpleType: ConnectException(3503) at 0", "Insert SimpleName: IOException(3508) into SimpleType: IOException(3509) at 0", "Insert MethodInvocation(3520) into ExpressionStatement(3521) at 0", "Insert SimpleName: pingRwTimeout(3529) into Assignment: =(3531) at 0", "Insert SimpleName: minPingRwTimeout(3530) into Assignment: =(3531) at 1", "Insert SimpleName: rwServerAddress(3533) into Assignment: =(3535) at 0", "Insert SimpleName: addr(3534) into Assignment: =(3535) at 1", "Insert SimpleType: RWServerFoundException(3538) into ClassInstanceCreation(3548) at 0", "Insert InfixExpression: +(3547) into ClassInstanceCreation(3548) at 1", "Insert SimpleName: LOG(3673) into MethodInvocation(3676) at 0", "Insert SimpleName: error(3674) into MethodInvocation(3676) at 1", "Insert StringLiteral: \"Read/write client got connected to read-only server\"(3675) into MethodInvocation(3676) at 2", "Insert SimpleName: isRO(3709) into ParenthesizedExpression(3710) at 0", "Insert ConditionalExpression(3737) into ParenthesizedExpression(3738) at 0", "Insert SimpleName: isRO(3745) into ParenthesizedExpression(3746) at 0", "Insert MethodInvocation(729) into ExpressionStatement(730) at 0", "Move SimpleType: Packet(2694) into ClassInstanceCreation(2833) at 0", "Move NullLiteral(2695) into ClassInstanceCreation(2833) at 1", "Move NullLiteral(2696) into ClassInstanceCreation(2833) at 2", "Move SimpleName: conReq(2697) into ClassInstanceCreation(2833) at 3", "Move NullLiteral(2698) into ClassInstanceCreation(2833) at 4", "Move NullLiteral(2699) into ClassInstanceCreation(2833) at 5", "Insert SimpleName: readOnly(2832) into ClassInstanceCreation(2833) at 6", "Update SimpleName: e1(2778) to e", "Insert MethodInvocation(3075) into IfStatement(3094) at 0", "Insert MethodInvocation(3117) into IfStatement(3156) at 0", "Insert InfixExpression: ==(3159) into IfStatement(3214) at 0", "Insert Block(3213) into IfStatement(3214) at 1", "Insert SimpleType: Socket(3427) into ClassInstanceCreation(3434) at 0", "Insert MethodInvocation(3430) into ClassInstanceCreation(3434) at 1", "Insert MethodInvocation(3433) into ClassInstanceCreation(3434) at 2", "Insert NumberLiteral: 1(3440) into PrefixExpression: -(3441) at 0", "Insert SimpleName: sock(3454) into MethodInvocation(3456) at 0", "Insert SimpleName: getOutputStream(3455) into MethodInvocation(3456) at 1", "Insert StringLiteral: \"isro\"(3458) into MethodInvocation(3460) at 0", "Insert SimpleName: getBytes(3459) into MethodInvocation(3460) at 1", "Insert SimpleName: sock(3463) into MethodInvocation(3465) at 0", "Insert SimpleName: getOutputStream(3464) into MethodInvocation(3465) at 1", "Insert SimpleType: BufferedReader(3477) into ClassInstanceCreation(3484) at 0", "Insert ClassInstanceCreation(3483) into ClassInstanceCreation(3484) at 1", "Insert SimpleName: br(3488) into MethodInvocation(3490) at 0", "Insert SimpleName: readLine(3489) into MethodInvocation(3490) at 1", "Insert SimpleName: LOG(3512) into MethodInvocation(3520) at 0", "Insert SimpleName: warn(3513) into MethodInvocation(3520) at 1", "Insert InfixExpression: +(3518) into MethodInvocation(3520) at 2", "Insert SimpleName: e(3519) into MethodInvocation(3520) at 3", "Insert SimpleName: RWServerFoundException(3537) into SimpleType: RWServerFoundException(3538) at 0", "Insert StringLiteral: \"Majority server found at \"(3539) into InfixExpression: +(3547) at 0", "Insert MethodInvocation(3542) into InfixExpression: +(3547) at 1", "Insert StringLiteral: \":\"(3543) into InfixExpression: +(3547) at 2", "Insert MethodInvocation(3546) into InfixExpression: +(3547) at 3", "Insert SimpleName: isRO(3734) into ConditionalExpression(3737) at 0", "Insert StringLiteral: \" (READ-ONLY mode)\"(3735) into ConditionalExpression(3737) at 1", "Insert StringLiteral: \"\"(3736) into ConditionalExpression(3737) at 2", "Insert SimpleName: boa(725) into MethodInvocation(729) at 0", "Insert SimpleName: writeBool(726) into MethodInvocation(729) at 1", "Insert SimpleName: readOnly(727) into MethodInvocation(729) at 2", "Insert StringLiteral: \"readOnly\"(728) into MethodInvocation(729) at 3", "Insert SimpleName: state(3073) into MethodInvocation(3075) at 0", "Insert SimpleName: isConnected(3074) into MethodInvocation(3075) at 1", "Insert SimpleName: state(3115) into MethodInvocation(3117) at 0", "Insert SimpleName: isConnected(3116) into MethodInvocation(3117) at 1", "Insert SimpleName: state(3157) into InfixExpression: ==(3159) at 0", "Insert QualifiedName: States.CONNECTEDREADONLY(3158) into InfixExpression: ==(3159) at 1", "Insert VariableDeclarationStatement(3166) into Block(3213) at 0", "Insert VariableDeclarationStatement(3176) into Block(3213) at 1", "Insert IfStatement(3202) into Block(3213) at 2", "Insert ExpressionStatement(3212) into Block(3213) at 3", "Insert SimpleName: Socket(3426) into SimpleType: Socket(3427) at 0", "Insert SimpleName: addr(3428) into MethodInvocation(3430) at 0", "Insert SimpleName: getHostName(3429) into MethodInvocation(3430) at 1", "Insert SimpleName: addr(3431) into MethodInvocation(3433) at 0", "Insert SimpleName: getPort(3432) into MethodInvocation(3433) at 1", "Insert SimpleName: BufferedReader(3476) into SimpleType: BufferedReader(3477) at 0", "Insert SimpleType: InputStreamReader(3479) into ClassInstanceCreation(3483) at 0", "Insert MethodInvocation(3482) into ClassInstanceCreation(3483) at 1", "Insert StringLiteral: \"Exception while seeking for r/w server \"(3514) into InfixExpression: +(3518) at 0", "Insert MethodInvocation(3517) into InfixExpression: +(3518) at 1", "Insert SimpleName: addr(3540) into MethodInvocation(3542) at 0", "Insert SimpleName: getHostName(3541) into MethodInvocation(3542) at 1", "Insert SimpleName: addr(3544) into MethodInvocation(3546) at 0", "Insert SimpleName: getPort(3545) into MethodInvocation(3546) at 1", "Update SimpleName: e1(2783) to e", "Insert PrimitiveType: long(3160) into VariableDeclarationStatement(3166) at 0", "Insert VariableDeclarationFragment(3165) into VariableDeclarationStatement(3166) at 1", "Insert PrimitiveType: int(3167) into VariableDeclarationStatement(3176) at 0", "Insert VariableDeclarationFragment(3175) into VariableDeclarationStatement(3176) at 1", "Insert InfixExpression: >=(3179) into IfStatement(3202) at 0", "Insert Block(3201) into IfStatement(3202) at 1", "Insert Assignment: =(3211) into ExpressionStatement(3212) at 0", "Insert SimpleName: InputStreamReader(3478) into SimpleType: InputStreamReader(3479) at 0", "Insert SimpleName: sock(3480) into MethodInvocation(3482) at 0", "Insert SimpleName: getInputStream(3481) into MethodInvocation(3482) at 1", "Insert SimpleName: e(3515) into MethodInvocation(3517) at 0", "Insert SimpleName: getMessage(3516) into MethodInvocation(3517) at 1", "Insert SimpleName: now(3161) into VariableDeclarationFragment(3165) at 0", "Insert MethodInvocation(3164) into VariableDeclarationFragment(3165) at 1", "Insert SimpleName: idlePingRwServer(3168) into VariableDeclarationFragment(3175) at 0", "Insert CastExpression(3174) into VariableDeclarationFragment(3175) at 1", "Insert SimpleName: idlePingRwServer(3177) into InfixExpression: >=(3179) at 0", "Insert SimpleName: pingRwTimeout(3178) into InfixExpression: >=(3179) at 1", "Insert ExpressionStatement(3183) into Block(3201) at 0", "Insert ExpressionStatement(3187) into Block(3201) at 1", "Insert ExpressionStatement(3197) into Block(3201) at 2", "Insert ExpressionStatement(3200) into Block(3201) at 3", "Insert SimpleName: to(3203) into Assignment: =(3211) at 0", "Insert MethodInvocation(3210) into Assignment: =(3211) at 1", "Insert SimpleName: System(3162) into MethodInvocation(3164) at 0", "Insert SimpleName: currentTimeMillis(3163) into MethodInvocation(3164) at 1", "Insert PrimitiveType: int(3169) into CastExpression(3174) at 0", "Insert ParenthesizedExpression(3173) into CastExpression(3174) at 1", "Insert Assignment: =(3182) into ExpressionStatement(3183) at 0", "Insert Assignment: =(3186) into ExpressionStatement(3187) at 0", "Insert Assignment: =(3196) into ExpressionStatement(3197) at 0", "Insert MethodInvocation(3199) into ExpressionStatement(3200) at 0", "Insert SimpleName: Math(3204) into MethodInvocation(3210) at 0", "Insert SimpleName: min(3205) into MethodInvocation(3210) at 1", "Insert SimpleName: to(3206) into MethodInvocation(3210) at 2", "Insert InfixExpression: -(3209) into MethodInvocation(3210) at 3", "Insert InfixExpression: -(3172) into ParenthesizedExpression(3173) at 0", "Insert SimpleName: lastPingRwServer(3180) into Assignment: =(3182) at 0", "Insert SimpleName: now(3181) into Assignment: =(3182) at 1", "Insert SimpleName: idlePingRwServer(3184) into Assignment: =(3186) at 0", "Insert NumberLiteral: 0(3185) into Assignment: =(3186) at 1", "Insert SimpleName: pingRwTimeout(3188) into Assignment: =(3196) at 0", "Insert MethodInvocation(3195) into Assignment: =(3196) at 1", "Insert SimpleName: pingRwServer(3198) into MethodInvocation(3199) at 0", "Insert SimpleName: pingRwTimeout(3207) into InfixExpression: -(3209) at 0", "Insert SimpleName: idlePingRwServer(3208) into InfixExpression: -(3209) at 1", "Insert IfStatement(3323) into IfStatement(3324) at 2", "Insert SimpleName: now(3170) into InfixExpression: -(3172) at 0", "Insert SimpleName: lastPingRwServer(3171) into InfixExpression: -(3172) at 1", "Insert SimpleName: Math(3189) into MethodInvocation(3195) at 0", "Insert SimpleName: min(3190) into MethodInvocation(3195) at 1", "Insert InfixExpression: *(3193) into MethodInvocation(3195) at 2", "Insert SimpleName: maxPingRwTimeout(3194) into MethodInvocation(3195) at 3", "Insert InstanceofExpression(3295) into IfStatement(3323) at 0", "Insert Block(3303) into IfStatement(3323) at 1", "Move Block(3067) into IfStatement(3323) at 2", "Insert NumberLiteral: 2(3191) into InfixExpression: *(3193) at 0", "Insert SimpleName: pingRwTimeout(3192) into InfixExpression: *(3193) at 1", "Insert SimpleName: e(3292) into InstanceofExpression(3295) at 0", "Insert SimpleType: RWServerFoundException(3294) into InstanceofExpression(3295) at 1", "Insert ExpressionStatement(3302) into Block(3303) at 0", "Insert SimpleName: RWServerFoundException(3293) into SimpleType: RWServerFoundException(3294) at 0", "Insert MethodInvocation(3301) into ExpressionStatement(3302) at 0", "Insert SimpleName: LOG(3296) into MethodInvocation(3301) at 0", "Insert SimpleName: info(3297) into MethodInvocation(3301) at 1", "Insert MethodInvocation(3300) into MethodInvocation(3301) at 2", "Insert SimpleName: e(3298) into MethodInvocation(3300) at 0", "Insert SimpleName: getMessage(3299) into MethodInvocation(3300) at 1", "Delete ClassInstanceCreation(2700)", "Delete ParenthesizedExpression(2701)", "Delete SimpleName: state(2888)", "Delete QualifiedName: States.CONNECTED(2889)", "Delete InfixExpression: ==(2890)", "Delete SimpleName: state(2930)", "Delete QualifiedName: States.CONNECTED(2931)", "Delete InfixExpression: ==(2932)", "Delete QualifiedName: States.CONNECTED(3276)", "Delete QualifiedName: Watcher.Event.KeeperState.SyncConnected(3300)"]}}, {"ClientCnxnSocket_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: isRO to VariableDeclarationFragment at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 5"]}, {"root": "INS TryStatement to Block at 6", "operations": ["INS SingleVariableDeclaration to CatchClause at 0", "INS StringLiteral: \"readOnly\" to MethodInvocation at 2", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS Block to TryStatement at 0", "INS CatchClause to TryStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS TryStatement to Block at 6", "INS SimpleName: isRO to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: readBool to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: bbia to MethodInvocation at 0", "INS StringLiteral: \"Connected to an old server; r-o mode will be unavailable\" to MethodInvocation at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: isRO to MethodInvocation at 5", "operations": ["INS SimpleName: isRO to MethodInvocation at 5"]}]}}, {"ClientCnxnSocket_diff": {"operations": ["Insert VariableDeclarationStatement(366) into Block(409) at 5", "Insert TryStatement(386) into Block(409) at 6", "Insert PrimitiveType: boolean(362) into VariableDeclarationStatement(366) at 0", "Insert VariableDeclarationFragment(365) into VariableDeclarationStatement(366) at 1", "Insert Block(374) into TryStatement(386) at 0", "Insert CatchClause(385) into TryStatement(386) at 1", "Insert SimpleName: isRO(363) into VariableDeclarationFragment(365) at 0", "Insert BooleanLiteral: false(364) into VariableDeclarationFragment(365) at 1", "Insert ExpressionStatement(373) into Block(374) at 0", "Insert SingleVariableDeclaration(378) into CatchClause(385) at 0", "Insert Block(384) into CatchClause(385) at 1", "Insert SimpleName: isRO(406) into MethodInvocation(407) at 5", "Insert Assignment: =(372) into ExpressionStatement(373) at 0", "Insert SimpleType: IOException(376) into SingleVariableDeclaration(378) at 0", "Insert SimpleName: e(377) into SingleVariableDeclaration(378) at 1", "Insert ExpressionStatement(383) into Block(384) at 0", "Insert SimpleName: isRO(367) into Assignment: =(372) at 0", "Insert MethodInvocation(371) into Assignment: =(372) at 1", "Insert SimpleName: IOException(375) into SimpleType: IOException(376) at 0", "Insert MethodInvocation(382) into ExpressionStatement(383) at 0", "Insert SimpleName: bbia(368) into MethodInvocation(371) at 0", "Insert SimpleName: readBool(369) into MethodInvocation(371) at 1", "Insert StringLiteral: \"readOnly\"(370) into MethodInvocation(371) at 2", "Insert SimpleName: LOG(379) into MethodInvocation(382) at 0", "Insert SimpleName: warn(380) into MethodInvocation(382) at 1", "Insert StringLiteral: \"Connected to an old server; r-o mode will be unavailable\"(381) into MethodInvocation(382) at 2"]}}, {"ClientCnxnSocketNIO_cluster": {"actions": [{"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: isConnected to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL QualifiedName: States.CONNECTED", "DEL InfixExpression: =="]}]}}, {"ClientCnxnSocketNIO_diff": {"operations": ["Insert MethodInvocation(816) into IfStatement(832) at 0", "Move MethodInvocation(814) into MethodInvocation(816) at 0", "Insert SimpleName: isConnected(815) into MethodInvocation(816) at 1", "Delete QualifiedName: States.CONNECTED(815)", "Delete InfixExpression: ==(816)"]}}, {"KeeperException_cluster": {"actions": [{"root": "INS TypeDeclaration: class to TypeDeclaration: class at 39", "operations": ["INS SimpleName: NotReadOnlyException to MethodDeclaration at 1", "INS SimpleName: NOTREADONLY to MemberRef at 1", "INS SimpleName: KeeperException to SimpleType: KeeperException at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 39", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS QualifiedName: Code.NOTREADONLY to SuperConstructorInvocation at 0", "INS SimpleType: KeeperException to TypeDeclaration: class at 4", "INS SimpleName: Code to MemberRef at 0", "INS SimpleName: NotReadOnlyException to TypeDeclaration: class at 3", "INS Block to MethodDeclaration at 2", "INS TagElement: @see to Javadoc at 0", "INS MemberRef to TagElement: @see at 0", "INS SuperConstructorInvocation to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS Modifier: public to TypeDeclaration: class at 1", "INS Modifier: static to TypeDeclaration: class at 2"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 26", "operations": ["INS SimpleName: NOTREADONLY to EnumConstantDeclaration at 1", "INS TextElement: State-changing request is passed to read-only server  to TagElement at 0", "INS PrefixExpression: - to EnumConstantDeclaration at 2", "INS Javadoc to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 26", "INS NumberLiteral: 119 to PrefixExpression: - at 0", "INS TagElement to Javadoc at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 43"]}, {"root": "INS ReturnStatement to SwitchStatement at 42", "operations": ["INS SimpleType: NotReadOnlyException to ClassInstanceCreation at 0", "INS ReturnStatement to SwitchStatement at 42", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: NotReadOnlyException to SimpleType: NotReadOnlyException at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 44", "operations": ["INS SwitchCase to SwitchStatement at 44"]}, {"root": "INS ReturnStatement to SwitchStatement at 44", "operations": ["INS StringLiteral: \"Not a read-only call\" to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 44"]}, {"root": "INS SwitchCase to SwitchStatement at 45", "operations": ["INS SwitchCase to SwitchStatement at 45"]}, {"root": "INS SimpleName: NOTREADONLY to SwitchCase at 0", "operations": ["INS SimpleName: NOTREADONLY to SwitchCase at 0"]}, {"root": "INS SimpleName: NOTREADONLY to SwitchCase at 0", "operations": ["INS SimpleName: NOTREADONLY to SwitchCase at 0"]}]}}, {"KeeperException_diff": {"operations": ["Insert TypeDeclaration: class(1621) into TypeDeclaration: class(1656) at 39", "Insert EnumConstantDeclaration(899) into EnumDeclaration(994) at 26", "Insert Javadoc(1609) into TypeDeclaration: class(1621) at 0", "Insert Modifier: public(1610) into TypeDeclaration: class(1621) at 1", "Insert Modifier: static(1611) into TypeDeclaration: class(1621) at 2", "Insert SimpleName: NotReadOnlyException(1612) into TypeDeclaration: class(1621) at 3", "Insert SimpleType: KeeperException(1614) into TypeDeclaration: class(1621) at 4", "Insert MethodDeclaration(1620) into TypeDeclaration: class(1621) at 5", "Move SwitchCase(299) into SwitchStatement(312) at 43", "Insert Javadoc(895) into EnumConstantDeclaration(899) at 0", "Insert SimpleName: NOTREADONLY(896) into EnumConstantDeclaration(899) at 1", "Insert PrefixExpression: -(898) into EnumConstantDeclaration(899) at 2", "Insert TagElement: @see(1608) into Javadoc(1609) at 0", "Insert SimpleName: KeeperException(1613) into SimpleType: KeeperException(1614) at 0", "Insert Modifier: public(1615) into MethodDeclaration(1620) at 0", "Insert SimpleName: NotReadOnlyException(1616) into MethodDeclaration(1620) at 1", "Insert Block(1619) into MethodDeclaration(1620) at 2", "Insert ReturnStatement(303) into SwitchStatement(312) at 42", "Insert SwitchCase(306) into SwitchStatement(312) at 44", "Insert TagElement(894) into Javadoc(895) at 0", "Insert NumberLiteral: 119(897) into PrefixExpression: -(898) at 0", "Insert ReturnStatement(1091) into SwitchStatement(1097) at 44", "Insert SwitchCase(1092) into SwitchStatement(1097) at 45", "Insert MemberRef(1607) into TagElement: @see(1608) at 0", "Insert SuperConstructorInvocation(1618) into Block(1619) at 0", "Insert SimpleName: NOTREADONLY(298) into SwitchCase(299) at 0", "Insert ClassInstanceCreation(302) into ReturnStatement(303) at 0", "Insert TextElement: State-changing request is passed to read-only server (893) into TagElement(894) at 0", "Insert SimpleName: NOTREADONLY(1088) into SwitchCase(1089) at 0", "Insert StringLiteral: \"Not a read-only call\"(1090) into ReturnStatement(1091) at 0", "Insert SimpleName: Code(1605) into MemberRef(1607) at 0", "Insert SimpleName: NOTREADONLY(1606) into MemberRef(1607) at 1", "Insert QualifiedName: Code.NOTREADONLY(1617) into SuperConstructorInvocation(1618) at 0", "Insert SimpleType: NotReadOnlyException(301) into ClassInstanceCreation(302) at 0", "Insert SimpleName: NotReadOnlyException(300) into SimpleType: NotReadOnlyException(301) at 0"]}}, {"Watcher_cluster": {"actions": [{"root": "MOVE from EnumDeclaration", "operations": ["MOV EnumConstantDeclaration to EnumDeclaration at 9"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 8", "operations": ["INS Javadoc to EnumConstantDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: The only operations allowed after receiving this state is to TagElement at 2", "INS SimpleName: ConnectedReadOnly to EnumConstantDeclaration at 1", "INS EnumConstantDeclaration to EnumDeclaration at 8", "INS TextElement: read operations. to TagElement at 3", "INS TextElement: This state is generated for read-only clients only since to TagElement at 4", "INS TextElement: The client is connected to a read-only server, that is the to TagElement at 0", "INS TextElement: server which is not currently connected to the majority. to TagElement at 1", "INS TextElement: read/write clients aren't allowed to connect to r/o servers. to TagElement at 5", "INS NumberLiteral: 5 to EnumConstantDeclaration at 2"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 11"]}, {"root": "INS ReturnStatement to SwitchStatement at 12", "operations": ["INS ReturnStatement to SwitchStatement at 12", "INS QualifiedName: KeeperState.ConnectedReadOnly to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 15", "operations": ["INS SwitchCase to SwitchStatement at 15"]}, {"root": "INS NumberLiteral: 5 to SwitchCase at 0", "operations": ["INS NumberLiteral: 5 to SwitchCase at 0"]}]}}, {"Watcher_diff": {"operations": ["Move EnumConstantDeclaration(78) into EnumDeclaration(169) at 9", "Insert EnumConstantDeclaration(85) into EnumDeclaration(169) at 8", "Insert Javadoc(82) into EnumConstantDeclaration(85) at 0", "Insert SimpleName: ConnectedReadOnly(83) into EnumConstantDeclaration(85) at 1", "Insert NumberLiteral: 5(84) into EnumConstantDeclaration(85) at 2", "Insert TagElement(81) into Javadoc(82) at 0", "Move SwitchCase(145) into SwitchStatement(166) at 11", "Insert TextElement: The client is connected to a read-only server, that is the(75) into TagElement(81) at 0", "Insert TextElement: server which is not currently connected to the majority.(76) into TagElement(81) at 1", "Insert TextElement: The only operations allowed after receiving this state is(77) into TagElement(81) at 2", "Insert TextElement: read operations.(78) into TagElement(81) at 3", "Insert TextElement: This state is generated for read-only clients only since(79) into TagElement(81) at 4", "Insert TextElement: read/write clients aren't allowed to connect to r/o servers.(80) into TagElement(81) at 5", "Insert ReturnStatement(154) into SwitchStatement(166) at 12", "Insert SwitchCase(160) into SwitchStatement(166) at 15", "Insert NumberLiteral: 5(151) into SwitchCase(152) at 0", "Insert QualifiedName: KeeperState.ConnectedReadOnly(153) into ReturnStatement(154) at 0"]}}, {"ZooKeeper_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: sessionTimeout to SingleVariableDeclaration at 1", "INS TextElement: <p> to TagElement at 17", "INS SimpleName: canBeReadOnly to SingleVariableDeclaration at 1", "INS SimpleName: connectString to SingleVariableDeclaration at 1", "INS SimpleName: connectString to TagElement: @param at 0", "INS TextElement: where the client would be rooted at \"/app/a\" and all paths to TagElement: @param at 5", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @param to Javadoc at 4", "INS TextElement: (the order is non-deterministic, as we random shuffle the list), until a to TagElement at 14", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: the watcher that will be notified of any changes in state. This to TagElement at 7", "INS TextElement: the connection fails, another server in the connect string will be tried to TagElement at 13", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: connection to the server and return immediately - potentially (usually) to TagElement at 5", "INS SimpleName: watcher to SingleVariableDeclaration at 1", "INS TextElement: (added in 3.4) whether the created client is allowed to go to to TagElement: @param at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement: majority in the background. to TagElement: @param at 7", "INS TagElement to Javadoc at 0", "INS TextElement: a watcher object which will be notified of state changes, may to TagElement: @param at 1", "INS TextElement: \"/foo/bar\" would result in operations being run on to TagElement: @param at 7", "INS SimpleName: IllegalArgumentException to TagElement: @throws at 0", "INS TextElement: servers but there's partitioned server it could reach, it to TagElement: @param at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: from the connectString and attempt to connect to it. If establishment of to TagElement at 12", "INS TextElement: connection string. This will run the client commands while interpreting to TagElement at 19", "INS TextElement: <p> to TagElement at 3", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TextElement: like: \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\" to TagElement: @param at 4", "INS TagElement: @param to Javadoc at 2", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: connects to one in read-only mode, i.e. read requests are to TagElement: @param at 5", "INS SimpleName: watcher to TagElement: @param at 0", "INS SimpleName: IOException to TagElement: @throws at 0", "INS SimpleName: Watcher to SimpleType: Watcher at 0", "INS TextElement: notification can come at any point before or after the constructor call to TagElement at 8", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS TextElement: session timeout in milliseconds to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: Added in 3.2.0: An optional \"chroot\" suffix may also be appended to the to TagElement at 18", "INS TextElement: all paths relative to this root (similar to the unix chroot command). to TagElement at 20", "INS TextElement: in cases of network failure to TagElement: @throws at 1", "INS SimpleName: ZooKeeper to MethodDeclaration at 2", "INS TextElement: Session establishment is asynchronous. This constructor will initiate to TagElement at 4", "INS TextElement: connection string containing a comma separated list of host:port pairs, to TagElement at 1", "INS SimpleName: sessionTimeout to TagElement: @param at 0", "INS TextElement: connection is established. The client will continue attempts until the to TagElement at 15", "INS TextElement: \"/app/a/foo/bar\" (from the server perspective). to TagElement: @param at 8", "INS TextElement: the optional chroot suffix is used the example would look to TagElement: @param at 3", "INS SimpleName: canBeReadOnly to TagElement: @param at 0", "INS TagElement: @throws to Javadoc at 5", "INS TagElement: @throws to Javadoc at 6", "INS TextElement: server. e.g. \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\" If to TagElement: @param at 2", "INS TextElement: has returned. to TagElement at 9", "INS TextElement: To create a ZooKeeper client object, the application needs to pass a to TagElement at 0", "INS TextElement: if an invalid chroot path is specified to TagElement: @throws at 1", "INS TextElement: <p> to TagElement at 10", "INS TextElement: read-only mode in case of partitioning. Read-only mode to TagElement: @param at 2", "INS TextElement: The instantiated ZooKeeper client object will pick an arbitrary server to TagElement at 11", "INS TextElement: would be relative to this root - ie getting/setting/etc... to TagElement: @param at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TextElement: also be notified for node events to TagElement: @param at 2", "INS TextElement: each corresponding to a ZooKeeper server. to TagElement at 2", "INS SimpleType: Watcher to SingleVariableDeclaration at 0", "INS TextElement: comma separated host:port pairs, each corresponding to a zk to TagElement: @param at 1", "INS TextElement: basically means that if the client can't find any majority to TagElement: @param at 3", "INS TextElement: before the session is fully established. The watcher argument specifies to TagElement at 6", "INS TextElement: session is explicitly closed. to TagElement at 16", "INS SimpleType: IOException to MethodDeclaration at 7", "INS TextElement: allowed while write requests are not. It continues seeking for to TagElement: @param at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS TextElement: basically means that if the client can't find any majority to TagElement: @param at 3", "INS TagElement: @link to TagElement at 25", "INS TextElement: read-only mode in case of partitioning. Read-only mode to TagElement: @param at 2", "INS SimpleName: watcher to SingleVariableDeclaration at 1", "INS TextElement: Session establishment is asynchronous. This constructor will initiate to TagElement at 4", "INS TextElement: connection string containing a comma separated list of host:port pairs, to TagElement at 1", "INS SimpleName: sessionId to TagElement: @param at 0", "INS SimpleName: IllegalArgumentException to TagElement: @throws at 0", "INS SimpleName: getSessionPasswd to MemberRef at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: canBeReadOnly to TagElement: @param at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS TextElement: (added in 3.4) whether the created client is allowed to go to to TagElement: @param at 1", "INS TextElement: If the optional chroot suffix is used the example would look to TagElement: @param at 3", "INS TagElement: @param to Javadoc at 1", "INS TextElement: <p> to TagElement at 17", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: servers but there's partitioned server it could reach, it to TagElement: @param at 4", "INS TextElement: all paths relative to this root (similar to the unix chroot command). to TagElement at 20", "INS TextElement: client connection, these values must be passed as sessionId and to TagElement at 27", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: <p> to TagElement at 10", "INS TextElement:  if an invalid chroot path is specified to TagElement: @throws at 1", "INS SimpleName: ZooKeeper to MethodDeclaration at 2", "INS TextElement: a watcher object which will be notified of state changes, may to TagElement: @param at 1", "INS SimpleName: connectString to SingleVariableDeclaration at 1", "INS TextElement: The instantiated ZooKeeper client object will pick an arbitrary server to TagElement at 11", "INS TextElement: connects to one in read-only mode, i.e. read requests are to TagElement: @param at 5", "INS SimpleName: Watcher to SimpleType: Watcher at 0", "INS TextElement: \"/app/a/foo/bar\" (from the server perspective). to TagElement: @param at 8", "INS SimpleName: connectString to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: sessionPasswd to TagElement: @param at 0", "INS TextElement: where the client would be rooted at \"/app/a\" and all paths to TagElement: @param at 5", "INS TagElement: @throws to Javadoc at 7", "INS SimpleType: IOException to MethodDeclaration at 9", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS TextElement: connection to the server and return immediately - potentially (usually) to TagElement at 5", "INS TextElement: server. e.g. \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\" to TagElement: @param at 2", "INS TextElement: password for this session to TagElement: @param at 1", "INS TextElement: \"/foo/bar\" would result in operations being run on to TagElement: @param at 7", "INS TagElement to Javadoc at 0", "INS TextElement: the watcher that will be notified of any changes in state. This to TagElement at 7", "INS TextElement:  in cases of network failure to TagElement: @throws at 1", "INS TextElement: session is explicitly closed (or the session is expired by the server). to TagElement at 16", "INS TagElement: @param to Javadoc at 6", "INS TextElement: (the order is non-deterministic, as we random shuffle the list), until a to TagElement at 14", "INS TextElement: reconnecting, use the other constructor which does not require these to TagElement at 29", "INS TextElement: like: \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\" to TagElement: @param at 4", "INS TextElement: each corresponding to a ZooKeeper server. to TagElement at 2", "INS TextElement:  on an established to TagElement at 26", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TextElement: <p> to TagElement at 21", "INS MemberRef to TagElement: @link at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement: majority in the background. to TagElement: @param at 7", "INS TextElement: Use  to TagElement at 22", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 3", "INS TextElement: To create a ZooKeeper client object, the application needs to pass a to TagElement at 0", "INS TagElement: @throws to Javadoc at 8", "INS TextElement: connection string. This will run the client commands while interpreting to TagElement at 19", "INS TagElement: @param to Javadoc at 5", "INS TextElement: specific session id to use if reconnecting to TagElement: @param at 1", "INS SimpleName: IOException to TagElement: @throws at 0", "INS TextElement: session timeout in milliseconds to TagElement: @param at 1", "INS SimpleName: sessionId to SingleVariableDeclaration at 1", "INS TextElement: before the session is fully established. The watcher argument specifies to TagElement at 6", "INS SimpleName: sessionTimeout to TagElement: @param at 0", "INS MemberRef to TagElement: @link at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: has returned. to TagElement at 9", "INS SimpleName: getSessionId to MemberRef at 0", "INS TextElement: parameters. to TagElement at 30", "INS SimpleName: sessionTimeout to SingleVariableDeclaration at 1", "INS TextElement: sessionPasswd respectively if reconnecting. Otherwise, if not to TagElement at 28", "INS TextElement: connection is established. The client will continue attempts until the to TagElement at 15", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS TextElement: the connection fails, another server in the connect string will be tried to TagElement at 13", "INS TextElement: notification can come at any point before or after the constructor call to TagElement at 8", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @link to TagElement at 23", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: canBeReadOnly to SingleVariableDeclaration at 1", "INS TextElement:  and  to TagElement at 24", "INS TextElement: allowed while write requests are not. It continues seeking for to TagElement: @param at 6", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SimpleName: watcher to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 4", "INS TextElement: Added in 3.2.0: An optional \"chroot\" suffix may also be appended to the to TagElement at 18", "INS TextElement: from the connectString and attempt to connect to it. If establishment of to TagElement at 12", "INS TextElement: also be notified for node events to TagElement: @param at 2", "INS SimpleType: Watcher to SingleVariableDeclaration at 0", "INS SimpleName: sessionPasswd to SingleVariableDeclaration at 1", "INS TextElement: <p> to TagElement at 3", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS TextElement: would be relative to this root - ie getting/setting/etc... to TagElement: @param at 6", "INS TextElement: comma separated host:port pairs, each corresponding to a zk to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 5", "INS SimpleName: CONNECTEDREADONLY to EnumConstantDeclaration at 0"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 9", "operations": ["INS ThisExpression to InfixExpression: == at 0", "INS ThisExpression to InfixExpression: == at 0", "INS MethodDeclaration to EnumDeclaration at 9", "INS InfixExpression: == to InfixExpression: || at 0", "INS TagElement to Javadoc at 0", "INS InfixExpression: || to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS TextElement: to go to read-only mode) to TagElement at 2", "INS SimpleName: CONNECTEDREADONLY to InfixExpression: == at 1", "INS SimpleName: CONNECTED to InfixExpression: == at 1", "INS SimpleName: isConnected to MethodDeclaration at 3", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Returns whether we are connected to a server (which to TagElement at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: could possibly be read-only, if this client is allowed to TagElement at 1"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS Block to MethodDeclaration at 7", "INS SimpleName: sessionTimeout to ConstructorInvocation at 1", "INS SimpleName: watcher to ConstructorInvocation at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleName: connectString to ConstructorInvocation at 0", "INS BooleanLiteral: false to ConstructorInvocation at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 8"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS SimpleName: sessionTimeout to ConstructorInvocation at 1", "INS SimpleName: watcher to ConstructorInvocation at 2", "INS SimpleName: connectString to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0", "INS SimpleName: sessionId to ConstructorInvocation at 3", "INS Block to MethodDeclaration at 9", "INS BooleanLiteral: false to ConstructorInvocation at 5", "INS SimpleName: sessionPasswd to ConstructorInvocation at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 10"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS QualifiedName: cnxn.seenRwServerBefore to Assignment: = at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1", "MOV MethodInvocation to ClassInstanceCreation at 8", "MOV SimpleType: ClientCnxn to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: canBeReadOnly to ClassInstanceCreation at 9", "operations": ["INS SimpleName: canBeReadOnly to ClassInstanceCreation at 9"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ClientCnxn to ClassInstanceCreation at 0", "MOV MethodInvocation to ClassInstanceCreation at 1", "MOV MethodInvocation to ClassInstanceCreation at 6"]}, {"root": "INS SimpleName: canBeReadOnly to ClassInstanceCreation at 9", "operations": ["INS SimpleName: canBeReadOnly to ClassInstanceCreation at 9"]}, {"root": "INS MethodInvocation to ConditionalExpression at 0", "operations": ["INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: state to MethodInvocation at 0", "INS SimpleName: isConnected to MethodInvocation at 1"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL QualifiedName: States.CONNECTED", "DEL SimpleName: state", "DEL InfixExpression: =="]}]}}, {"ZooKeeper_diff": {"operations": ["Insert MethodDeclaration(1211) into TypeDeclaration: class(5470) at 18", "Insert MethodDeclaration(1489) into TypeDeclaration: class(5470) at 20", "Insert EnumConstantDeclaration(970) into EnumDeclaration(1006) at 5", "Insert MethodDeclaration(1005) into EnumDeclaration(1006) at 9", "Insert Block(1080) into MethodDeclaration(1081) at 7", "Insert Javadoc(1136) into MethodDeclaration(1211) at 0", "Insert Modifier: public(1137) into MethodDeclaration(1211) at 1", "Insert SimpleName: ZooKeeper(1138) into MethodDeclaration(1211) at 2", "Insert SingleVariableDeclaration(1142) into MethodDeclaration(1211) at 3", "Insert SingleVariableDeclaration(1145) into MethodDeclaration(1211) at 4", "Insert SingleVariableDeclaration(1149) into MethodDeclaration(1211) at 5", "Insert SingleVariableDeclaration(1152) into MethodDeclaration(1211) at 6", "Insert SimpleType: IOException(1154) into MethodDeclaration(1211) at 7", "Move Block(1109) into MethodDeclaration(1211) at 8", "Insert Block(1311) into MethodDeclaration(1312) at 9", "Insert Javadoc(1387) into MethodDeclaration(1489) at 0", "Insert Modifier: public(1388) into MethodDeclaration(1489) at 1", "Insert SimpleName: ZooKeeper(1389) into MethodDeclaration(1489) at 2", "Insert SingleVariableDeclaration(1393) into MethodDeclaration(1489) at 3", "Insert SingleVariableDeclaration(1396) into MethodDeclaration(1489) at 4", "Insert SingleVariableDeclaration(1400) into MethodDeclaration(1489) at 5", "Insert SingleVariableDeclaration(1403) into MethodDeclaration(1489) at 6", "Insert SingleVariableDeclaration(1408) into MethodDeclaration(1489) at 7", "Insert SingleVariableDeclaration(1411) into MethodDeclaration(1489) at 8", "Insert SimpleType: IOException(1413) into MethodDeclaration(1489) at 9", "Move Block(1272) into MethodDeclaration(1489) at 10", "Insert SimpleName: CONNECTEDREADONLY(969) into EnumConstantDeclaration(970) at 0", "Insert Javadoc(992) into MethodDeclaration(1005) at 0", "Insert Modifier: public(993) into MethodDeclaration(1005) at 1", "Insert PrimitiveType: boolean(994) into MethodDeclaration(1005) at 2", "Insert SimpleName: isConnected(995) into MethodDeclaration(1005) at 3", "Insert Block(1004) into MethodDeclaration(1005) at 4", "Insert ConstructorInvocation(1079) into Block(1080) at 0", "Insert TagElement(1103) into Javadoc(1136) at 0", "Insert TagElement: @param(1113) into Javadoc(1136) at 1", "Insert TagElement: @param(1116) into Javadoc(1136) at 2", "Insert TagElement: @param(1120) into Javadoc(1136) at 3", "Insert TagElement: @param(1129) into Javadoc(1136) at 4", "Insert TagElement: @throws(1132) into Javadoc(1136) at 5", "Insert TagElement: @throws(1135) into Javadoc(1136) at 6", "Insert SimpleType: String(1140) into SingleVariableDeclaration(1142) at 0", "Insert SimpleName: connectString(1141) into SingleVariableDeclaration(1142) at 1", "Insert PrimitiveType: int(1143) into SingleVariableDeclaration(1145) at 0", "Insert SimpleName: sessionTimeout(1144) into SingleVariableDeclaration(1145) at 1", "Insert SimpleType: Watcher(1147) into SingleVariableDeclaration(1149) at 0", "Insert SimpleName: watcher(1148) into SingleVariableDeclaration(1149) at 1", "Insert PrimitiveType: boolean(1150) into SingleVariableDeclaration(1152) at 0", "Insert SimpleName: canBeReadOnly(1151) into SingleVariableDeclaration(1152) at 1", "Insert SimpleName: IOException(1153) into SimpleType: IOException(1154) at 0", "Insert ConstructorInvocation(1310) into Block(1311) at 0", "Insert TagElement(1348) into Javadoc(1387) at 0", "Insert TagElement: @param(1358) into Javadoc(1387) at 1", "Insert TagElement: @param(1361) into Javadoc(1387) at 2", "Insert TagElement: @param(1365) into Javadoc(1387) at 3", "Insert TagElement: @param(1368) into Javadoc(1387) at 4", "Insert TagElement: @param(1371) into Javadoc(1387) at 5", "Insert TagElement: @param(1380) into Javadoc(1387) at 6", "Insert TagElement: @throws(1383) into Javadoc(1387) at 7", "Insert TagElement: @throws(1386) into Javadoc(1387) at 8", "Insert SimpleType: String(1391) into SingleVariableDeclaration(1393) at 0", "Insert SimpleName: connectString(1392) into SingleVariableDeclaration(1393) at 1", "Insert PrimitiveType: int(1394) into SingleVariableDeclaration(1396) at 0", "Insert SimpleName: sessionTimeout(1395) into SingleVariableDeclaration(1396) at 1", "Insert SimpleType: Watcher(1398) into SingleVariableDeclaration(1400) at 0", "Insert SimpleName: watcher(1399) into SingleVariableDeclaration(1400) at 1", "Insert PrimitiveType: long(1401) into SingleVariableDeclaration(1403) at 0", "Insert SimpleName: sessionId(1402) into SingleVariableDeclaration(1403) at 1", "Insert ArrayType: byte[](1406) into SingleVariableDeclaration(1408) at 0", "Insert SimpleName: sessionPasswd(1407) into SingleVariableDeclaration(1408) at 1", "Insert PrimitiveType: boolean(1409) into SingleVariableDeclaration(1411) at 0", "Insert SimpleName: canBeReadOnly(1410) into SingleVariableDeclaration(1411) at 1", "Insert SimpleName: IOException(1412) into SimpleType: IOException(1413) at 0", "Insert ExpressionStatement(1483) into Block(1488) at 5", "Insert TagElement(991) into Javadoc(992) at 0", "Insert ReturnStatement(1003) into Block(1004) at 0", "Insert SimpleName: connectString(1075) into ConstructorInvocation(1079) at 0", "Insert SimpleName: sessionTimeout(1076) into ConstructorInvocation(1079) at 1", "Insert SimpleName: watcher(1077) into ConstructorInvocation(1079) at 2", "Insert BooleanLiteral: false(1078) into ConstructorInvocation(1079) at 3", "Insert TextElement: To create a ZooKeeper client object, the application needs to pass a(1082) into TagElement(1103) at 0", "Insert TextElement: connection string containing a comma separated list of host:port pairs,(1083) into TagElement(1103) at 1", "Insert TextElement: each corresponding to a ZooKeeper server.(1084) into TagElement(1103) at 2", "Insert TextElement: <p>(1085) into TagElement(1103) at 3", "Insert TextElement: Session establishment is asynchronous. This constructor will initiate(1086) into TagElement(1103) at 4", "Insert TextElement: connection to the server and return immediately - potentially (usually)(1087) into TagElement(1103) at 5", "Insert TextElement: before the session is fully established. The watcher argument specifies(1088) into TagElement(1103) at 6", "Insert TextElement: the watcher that will be notified of any changes in state. This(1089) into TagElement(1103) at 7", "Insert TextElement: notification can come at any point before or after the constructor call(1090) into TagElement(1103) at 8", "Insert TextElement: has returned.(1091) into TagElement(1103) at 9", "Insert TextElement: <p>(1092) into TagElement(1103) at 10", "Insert TextElement: The instantiated ZooKeeper client object will pick an arbitrary server(1093) into TagElement(1103) at 11", "Insert TextElement: from the connectString and attempt to connect to it. If establishment of(1094) into TagElement(1103) at 12", "Insert TextElement: the connection fails, another server in the connect string will be tried(1095) into TagElement(1103) at 13", "Insert TextElement: (the order is non-deterministic, as we random shuffle the list), until a(1096) into TagElement(1103) at 14", "Insert TextElement: connection is established. The client will continue attempts until the(1097) into TagElement(1103) at 15", "Insert TextElement: session is explicitly closed.(1098) into TagElement(1103) at 16", "Insert TextElement: <p>(1099) into TagElement(1103) at 17", "Insert TextElement: Added in 3.2.0: An optional \"chroot\" suffix may also be appended to the(1100) into TagElement(1103) at 18", "Insert TextElement: connection string. This will run the client commands while interpreting(1101) into TagElement(1103) at 19", "Insert TextElement: all paths relative to this root (similar to the unix chroot command).(1102) into TagElement(1103) at 20", "Insert SimpleName: connectString(1104) into TagElement: @param(1113) at 0", "Insert TextElement: comma separated host:port pairs, each corresponding to a zk(1105) into TagElement: @param(1113) at 1", "Insert TextElement: server. e.g. \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\" If(1106) into TagElement: @param(1113) at 2", "Insert TextElement: the optional chroot suffix is used the example would look(1107) into TagElement: @param(1113) at 3", "Insert TextElement: like: \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\"(1108) into TagElement: @param(1113) at 4", "Insert TextElement: where the client would be rooted at \"/app/a\" and all paths(1109) into TagElement: @param(1113) at 5", "Insert TextElement: would be relative to this root - ie getting/setting/etc...(1110) into TagElement: @param(1113) at 6", "Insert TextElement: \"/foo/bar\" would result in operations being run on(1111) into TagElement: @param(1113) at 7", "Insert TextElement: \"/app/a/foo/bar\" (from the server perspective).(1112) into TagElement: @param(1113) at 8", "Insert SimpleName: sessionTimeout(1114) into TagElement: @param(1116) at 0", "Insert TextElement: session timeout in milliseconds(1115) into TagElement: @param(1116) at 1", "Insert SimpleName: watcher(1117) into TagElement: @param(1120) at 0", "Insert TextElement: a watcher object which will be notified of state changes, may(1118) into TagElement: @param(1120) at 1", "Insert TextElement: also be notified for node events(1119) into TagElement: @param(1120) at 2", "Insert SimpleName: canBeReadOnly(1121) into TagElement: @param(1129) at 0", "Insert TextElement: (added in 3.4) whether the created client is allowed to go to(1122) into TagElement: @param(1129) at 1", "Insert TextElement: read-only mode in case of partitioning. Read-only mode(1123) into TagElement: @param(1129) at 2", "Insert TextElement: basically means that if the client can't find any majority(1124) into TagElement: @param(1129) at 3", "Insert TextElement: servers but there's partitioned server it could reach, it(1125) into TagElement: @param(1129) at 4", "Insert TextElement: connects to one in read-only mode, i.e. read requests are(1126) into TagElement: @param(1129) at 5", "Insert TextElement: allowed while write requests are not. It continues seeking for(1127) into TagElement: @param(1129) at 6", "Insert TextElement: majority in the background.(1128) into TagElement: @param(1129) at 7", "Insert SimpleName: IOException(1130) into TagElement: @throws(1132) at 0", "Insert TextElement: in cases of network failure(1131) into TagElement: @throws(1132) at 1", "Insert SimpleName: IllegalArgumentException(1133) into TagElement: @throws(1135) at 0", "Insert TextElement: if an invalid chroot path is specified(1134) into TagElement: @throws(1135) at 1", "Insert SimpleName: String(1139) into SimpleType: String(1140) at 0", "Insert SimpleName: Watcher(1146) into SimpleType: Watcher(1147) at 0", "Insert SimpleName: connectString(1304) into ConstructorInvocation(1310) at 0", "Insert SimpleName: sessionTimeout(1305) into ConstructorInvocation(1310) at 1", "Insert SimpleName: watcher(1306) into ConstructorInvocation(1310) at 2", "Insert SimpleName: sessionId(1307) into ConstructorInvocation(1310) at 3", "Insert SimpleName: sessionPasswd(1308) into ConstructorInvocation(1310) at 4", "Insert BooleanLiteral: false(1309) into ConstructorInvocation(1310) at 5", "Insert TextElement: To create a ZooKeeper client object, the application needs to pass a(1313) into TagElement(1348) at 0", "Insert TextElement: connection string containing a comma separated list of host:port pairs,(1314) into TagElement(1348) at 1", "Insert TextElement: each corresponding to a ZooKeeper server.(1315) into TagElement(1348) at 2", "Insert TextElement: <p>(1316) into TagElement(1348) at 3", "Insert TextElement: Session establishment is asynchronous. This constructor will initiate(1317) into TagElement(1348) at 4", "Insert TextElement: connection to the server and return immediately - potentially (usually)(1318) into TagElement(1348) at 5", "Insert TextElement: before the session is fully established. The watcher argument specifies(1319) into TagElement(1348) at 6", "Insert TextElement: the watcher that will be notified of any changes in state. This(1320) into TagElement(1348) at 7", "Insert TextElement: notification can come at any point before or after the constructor call(1321) into TagElement(1348) at 8", "Insert TextElement: has returned.(1322) into TagElement(1348) at 9", "Insert TextElement: <p>(1323) into TagElement(1348) at 10", "Insert TextElement: The instantiated ZooKeeper client object will pick an arbitrary server(1324) into TagElement(1348) at 11", "Insert TextElement: from the connectString and attempt to connect to it. If establishment of(1325) into TagElement(1348) at 12", "Insert TextElement: the connection fails, another server in the connect string will be tried(1326) into TagElement(1348) at 13", "Insert TextElement: (the order is non-deterministic, as we random shuffle the list), until a(1327) into TagElement(1348) at 14", "Insert TextElement: connection is established. The client will continue attempts until the(1328) into TagElement(1348) at 15", "Insert TextElement: session is explicitly closed (or the session is expired by the server).(1329) into TagElement(1348) at 16", "Insert TextElement: <p>(1330) into TagElement(1348) at 17", "Insert TextElement: Added in 3.2.0: An optional \"chroot\" suffix may also be appended to the(1331) into TagElement(1348) at 18", "Insert TextElement: connection string. This will run the client commands while interpreting(1332) into TagElement(1348) at 19", "Insert TextElement: all paths relative to this root (similar to the unix chroot command).(1333) into TagElement(1348) at 20", "Insert TextElement: <p>(1334) into TagElement(1348) at 21", "Insert TextElement: Use (1335) into TagElement(1348) at 22", "Insert TagElement: @link(1338) into TagElement(1348) at 23", "Insert TextElement:  and (1339) into TagElement(1348) at 24", "Insert TagElement: @link(1342) into TagElement(1348) at 25", "Insert TextElement:  on an established(1343) into TagElement(1348) at 26", "Insert TextElement: client connection, these values must be passed as sessionId and(1344) into TagElement(1348) at 27", "Insert TextElement: sessionPasswd respectively if reconnecting. Otherwise, if not(1345) into TagElement(1348) at 28", "Insert TextElement: reconnecting, use the other constructor which does not require these(1346) into TagElement(1348) at 29", "Insert TextElement: parameters.(1347) into TagElement(1348) at 30", "Insert SimpleName: connectString(1349) into TagElement: @param(1358) at 0", "Insert TextElement: comma separated host:port pairs, each corresponding to a zk(1350) into TagElement: @param(1358) at 1", "Insert TextElement: server. e.g. \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\"(1351) into TagElement: @param(1358) at 2", "Insert TextElement: If the optional chroot suffix is used the example would look(1352) into TagElement: @param(1358) at 3", "Insert TextElement: like: \"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\"(1353) into TagElement: @param(1358) at 4", "Insert TextElement: where the client would be rooted at \"/app/a\" and all paths(1354) into TagElement: @param(1358) at 5", "Insert TextElement: would be relative to this root - ie getting/setting/etc...(1355) into TagElement: @param(1358) at 6", "Insert TextElement: \"/foo/bar\" would result in operations being run on(1356) into TagElement: @param(1358) at 7", "Insert TextElement: \"/app/a/foo/bar\" (from the server perspective).(1357) into TagElement: @param(1358) at 8", "Insert SimpleName: sessionTimeout(1359) into TagElement: @param(1361) at 0", "Insert TextElement: session timeout in milliseconds(1360) into TagElement: @param(1361) at 1", "Insert SimpleName: watcher(1362) into TagElement: @param(1365) at 0", "Insert TextElement: a watcher object which will be notified of state changes, may(1363) into TagElement: @param(1365) at 1", "Insert TextElement: also be notified for node events(1364) into TagElement: @param(1365) at 2", "Insert SimpleName: sessionId(1366) into TagElement: @param(1368) at 0", "Insert TextElement: specific session id to use if reconnecting(1367) into TagElement: @param(1368) at 1", "Insert SimpleName: sessionPasswd(1369) into TagElement: @param(1371) at 0", "Insert TextElement: password for this session(1370) into TagElement: @param(1371) at 1", "Insert SimpleName: canBeReadOnly(1372) into TagElement: @param(1380) at 0", "Insert TextElement: (added in 3.4) whether the created client is allowed to go to(1373) into TagElement: @param(1380) at 1", "Insert TextElement: read-only mode in case of partitioning. Read-only mode(1374) into TagElement: @param(1380) at 2", "Insert TextElement: basically means that if the client can't find any majority(1375) into TagElement: @param(1380) at 3", "Insert TextElement: servers but there's partitioned server it could reach, it(1376) into TagElement: @param(1380) at 4", "Insert TextElement: connects to one in read-only mode, i.e. read requests are(1377) into TagElement: @param(1380) at 5", "Insert TextElement: allowed while write requests are not. It continues seeking for(1378) into TagElement: @param(1380) at 6", "Insert TextElement: majority in the background.(1379) into TagElement: @param(1380) at 7", "Insert SimpleName: IOException(1381) into TagElement: @throws(1383) at 0", "Insert TextElement:  in cases of network failure(1382) into TagElement: @throws(1383) at 1", "Insert SimpleName: IllegalArgumentException(1384) into TagElement: @throws(1386) at 0", "Insert TextElement:  if an invalid chroot path is specified(1385) into TagElement: @throws(1386) at 1", "Insert SimpleName: String(1390) into SimpleType: String(1391) at 0", "Insert SimpleName: Watcher(1397) into SimpleType: Watcher(1398) at 0", "Insert PrimitiveType: byte(1404) into ArrayType: byte[](1406) at 0", "Insert Dimension(1405) into ArrayType: byte[](1406) at 1", "Insert Assignment: =(1482) into ExpressionStatement(1483) at 0", "Insert TextElement: Returns whether we are connected to a server (which(988) into TagElement(991) at 0", "Insert TextElement: could possibly be read-only, if this client is allowed(989) into TagElement(991) at 1", "Insert TextElement: to go to read-only mode)(990) into TagElement(991) at 2", "Insert InfixExpression: ||(1002) into ReturnStatement(1003) at 0", "Insert MemberRef(1337) into TagElement: @link(1338) at 0", "Insert MemberRef(1341) into TagElement: @link(1342) at 0", "Insert QualifiedName: cnxn.seenRwServerBefore(1480) into Assignment: =(1482) at 0", "Insert BooleanLiteral: true(1481) into Assignment: =(1482) at 1", "Insert InfixExpression: ==(998) into InfixExpression: ||(1002) at 0", "Insert InfixExpression: ==(1001) into InfixExpression: ||(1002) at 1", "Move SimpleType: ClientCnxn(1253) into ClassInstanceCreation(1203) at 0", "Move MethodInvocation(1256) into ClassInstanceCreation(1203) at 1", "Move MethodInvocation(1262) into ClassInstanceCreation(1203) at 8", "Insert SimpleName: canBeReadOnly(1202) into ClassInstanceCreation(1203) at 7", "Insert SimpleName: getSessionId(1336) into MemberRef(1337) at 0", "Insert SimpleName: getSessionPasswd(1340) into MemberRef(1341) at 0", "Move SimpleType: ClientCnxn(1092) into ClassInstanceCreation(1477) at 0", "Move MethodInvocation(1095) into ClassInstanceCreation(1477) at 1", "Move MethodInvocation(1101) into ClassInstanceCreation(1477) at 6", "Insert SimpleName: canBeReadOnly(1476) into ClassInstanceCreation(1477) at 9", "Insert ThisExpression(996) into InfixExpression: ==(998) at 0", "Insert SimpleName: CONNECTED(997) into InfixExpression: ==(998) at 1", "Insert ThisExpression(999) into InfixExpression: ==(1001) at 0", "Insert SimpleName: CONNECTEDREADONLY(1000) into InfixExpression: ==(1001) at 1", "Insert MethodInvocation(5298) into ConditionalExpression(5305) at 0", "Insert SimpleName: state(5296) into MethodInvocation(5298) at 0", "Insert SimpleName: isConnected(5297) into MethodInvocation(5298) at 1", "Delete SimpleName: state(5080)", "Delete QualifiedName: States.CONNECTED(5081)", "Delete InfixExpression: ==(5082)"]}}, {"ZooKeeperMain_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: != to VariableDeclarationFragment at 1", "INS StringLiteral: \"readonly\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: readOnly to VariableDeclarationFragment at 0", "INS SimpleName: getOption to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: cl to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS CatchClause to TryStatement at 6", "operations": ["INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: println to MethodInvocation at 1", "INS StringLiteral: \"Not a read-only call: \" to InfixExpression: + at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to CatchClause at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS CatchClause to TryStatement at 6", "INS SimpleName: getPath to MethodInvocation at 1", "INS QualifiedName: KeeperException.NotReadOnlyException to SimpleType: KeeperException.NotReadOnlyException at 0", "INS SimpleType: KeeperException.NotReadOnlyException to SingleVariableDeclaration at 0", "INS QualifiedName: System.err to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS SimpleName: readOnly to ClassInstanceCreation at 4", "operations": ["INS SimpleName: readOnly to ClassInstanceCreation at 4"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: options to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"-r\" to MethodInvocation at 2", "INS StringLiteral: \"true\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"readonly\" to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: opt to MethodInvocation at 0"]}]}}, {"ZooKeeperMain_diff": {"operations": ["Insert VariableDeclarationStatement(1004) into Block(1023) at 2", "Insert PrimitiveType: boolean(995) into VariableDeclarationStatement(1004) at 0", "Insert VariableDeclarationFragment(1003) into VariableDeclarationStatement(1004) at 1", "Insert CatchClause(2393) into TryStatement(2394) at 6", "Insert SimpleName: readOnly(996) into VariableDeclarationFragment(1003) at 0", "Insert InfixExpression: !=(1002) into VariableDeclarationFragment(1003) at 1", "Insert SingleVariableDeclaration(2382) into CatchClause(2393) at 0", "Insert Block(2392) into CatchClause(2393) at 1", "Insert MethodInvocation(1000) into InfixExpression: !=(1002) at 0", "Insert NullLiteral(1001) into InfixExpression: !=(1002) at 1", "Insert SimpleName: readOnly(1019) into ClassInstanceCreation(1020) at 4", "Insert SimpleType: KeeperException.NotReadOnlyException(2380) into SingleVariableDeclaration(2382) at 0", "Insert SimpleName: e(2381) into SingleVariableDeclaration(2382) at 1", "Insert ExpressionStatement(2391) into Block(2392) at 0", "Insert SimpleName: cl(997) into MethodInvocation(1000) at 0", "Insert SimpleName: getOption(998) into MethodInvocation(1000) at 1", "Insert StringLiteral: \"readonly\"(999) into MethodInvocation(1000) at 2", "Insert QualifiedName: KeeperException.NotReadOnlyException(2379) into SimpleType: KeeperException.NotReadOnlyException(2380) at 0", "Insert MethodInvocation(2390) into ExpressionStatement(2391) at 0", "Insert QualifiedName: System.err(2383) into MethodInvocation(2390) at 0", "Insert SimpleName: println(2384) into MethodInvocation(2390) at 1", "Insert InfixExpression: +(2389) into MethodInvocation(2390) at 2", "Insert StringLiteral: \"Not a read-only call: \"(2385) into InfixExpression: +(2389) at 0", "Insert MethodInvocation(2388) into InfixExpression: +(2389) at 1", "Insert IfStatement(772) into IfStatement(773) at 2", "Insert SimpleName: e(2386) into MethodInvocation(2388) at 0", "Insert SimpleName: getPath(2387) into MethodInvocation(2388) at 1", "Insert MethodInvocation(764) into IfStatement(772) at 0", "Insert Block(771) into IfStatement(772) at 1", "Insert SimpleName: opt(761) into MethodInvocation(764) at 0", "Insert SimpleName: equals(762) into MethodInvocation(764) at 1", "Insert StringLiteral: \"-r\"(763) into MethodInvocation(764) at 2", "Insert ExpressionStatement(770) into Block(771) at 0", "Insert MethodInvocation(769) into ExpressionStatement(770) at 0", "Insert SimpleName: options(765) into MethodInvocation(769) at 0", "Insert SimpleName: put(766) into MethodInvocation(769) at 1", "Insert StringLiteral: \"readonly\"(767) into MethodInvocation(769) at 2", "Insert StringLiteral: \"true\"(768) into MethodInvocation(769) at 3"]}}, {"NIOServerCnxn_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS QualifiedName: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 32"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 45", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS StringLiteral: \"rw\" to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS SimpleName: print to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SuperConstructorInvocation to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"null\" to MethodInvocation at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 45", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS SimpleName: pw to MethodInvocation at 0", "INS StringLiteral: \"ro\" to MethodInvocation at 2", "INS SimpleName: zkServer to InstanceofExpression at 0", "INS SimpleName: zkServer to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: pw to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: IsroCommand to TypeDeclaration: class at 1", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 3", "INS IfStatement to IfStatement at 2", "INS SimpleName: commandRun to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pw to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: pw to SuperConstructorInvocation at 0", "INS SimpleName: CommandThread to SimpleType: CommandThread at 0", "INS SimpleName: print to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS SimpleName: pw to SingleVariableDeclaration at 1", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1", "INS SimpleType: CommandThread to TypeDeclaration: class at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: IsroCommand to MethodDeclaration at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: println to MethodInvocation at 1", "INS SimpleName: zkServer to InstanceofExpression at 0", "INS StringLiteral: \"read-only clients\" to InfixExpression: + at 1", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InstanceofExpression to IfStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS IfStatement to Block at 2", "INS SimpleName: pw to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"READ-ONLY mode; serving only \" to InfixExpression: + at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: len to InfixExpression: == at 0", "INS SimpleName: isroCmd to InfixExpression: == at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: pwriter to ClassInstanceCreation at 1", "INS SimpleName: start to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleType: IsroCommand to VariableDeclarationStatement at 0", "INS SimpleName: IsroCommand to SimpleType: IsroCommand at 0", "INS VariableDeclarationStatement to Block at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: isro to MethodInvocation at 0", "INS SimpleType: IsroCommand to ClassInstanceCreation at 0", "INS SimpleName: IsroCommand to SimpleType: IsroCommand at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: isro to VariableDeclarationFragment at 0"]}]}}, {"NIOServerCnxn_diff": {"operations": ["Insert ImportDeclaration(80) into CompilationUnit(3409) at 32", "Insert QualifiedName: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer(79) into ImportDeclaration(80) at 0", "Insert TypeDeclaration: class(2335) into TypeDeclaration: class(3408) at 45", "Insert Modifier: private(2287) into TypeDeclaration: class(2335) at 0", "Insert SimpleName: IsroCommand(2288) into TypeDeclaration: class(2335) at 1", "Insert SimpleType: CommandThread(2290) into TypeDeclaration: class(2335) at 2", "Insert MethodDeclaration(2300) into TypeDeclaration: class(2335) at 3", "Insert MethodDeclaration(2334) into TypeDeclaration: class(2335) at 4", "Insert SimpleName: CommandThread(2289) into SimpleType: CommandThread(2290) at 0", "Insert Modifier: public(2291) into MethodDeclaration(2300) at 0", "Insert SimpleName: IsroCommand(2292) into MethodDeclaration(2300) at 1", "Insert SingleVariableDeclaration(2296) into MethodDeclaration(2300) at 2", "Insert Block(2299) into MethodDeclaration(2300) at 3", "Insert MarkerAnnotation(2302) into MethodDeclaration(2334) at 0", "Insert Modifier: public(2303) into MethodDeclaration(2334) at 1", "Insert PrimitiveType: void(2304) into MethodDeclaration(2334) at 2", "Insert SimpleName: commandRun(2305) into MethodDeclaration(2334) at 3", "Insert Block(2333) into MethodDeclaration(2334) at 4", "Insert SimpleType: PrintWriter(2294) into SingleVariableDeclaration(2296) at 0", "Insert SimpleName: pw(2295) into SingleVariableDeclaration(2296) at 1", "Insert SuperConstructorInvocation(2298) into Block(2299) at 0", "Insert SimpleName: Override(2301) into MarkerAnnotation(2302) at 0", "Insert IfStatement(2332) into Block(2333) at 0", "Insert SimpleName: PrintWriter(2293) into SimpleType: PrintWriter(2294) at 0", "Insert SimpleName: pw(2297) into SuperConstructorInvocation(2298) at 0", "Insert InfixExpression: ==(2308) into IfStatement(2332) at 0", "Insert Block(2314) into IfStatement(2332) at 1", "Insert IfStatement(2331) into IfStatement(2332) at 2", "Insert IfStatement(1767) into Block(1846) at 2", "Insert SimpleName: zkServer(2306) into InfixExpression: ==(2308) at 0", "Insert NullLiteral(2307) into InfixExpression: ==(2308) at 1", "Insert ExpressionStatement(2313) into Block(2314) at 0", "Insert InstanceofExpression(2318) into IfStatement(2331) at 0", "Insert Block(2324) into IfStatement(2331) at 1", "Insert Block(2330) into IfStatement(2331) at 2", "Insert InstanceofExpression(1758) into IfStatement(1767) at 0", "Insert Block(1766) into IfStatement(1767) at 1", "Insert MethodInvocation(2312) into ExpressionStatement(2313) at 0", "Insert SimpleName: zkServer(2315) into InstanceofExpression(2318) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(2317) into InstanceofExpression(2318) at 1", "Insert ExpressionStatement(2323) into Block(2324) at 0", "Insert ExpressionStatement(2329) into Block(2330) at 0", "Insert SimpleName: zkServer(1755) into InstanceofExpression(1758) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1757) into InstanceofExpression(1758) at 1", "Insert ExpressionStatement(1765) into Block(1766) at 0", "Insert SimpleName: pw(2309) into MethodInvocation(2312) at 0", "Insert SimpleName: print(2310) into MethodInvocation(2312) at 1", "Insert StringLiteral: \"null\"(2311) into MethodInvocation(2312) at 2", "Insert SimpleName: ReadOnlyZooKeeperServer(2316) into SimpleType: ReadOnlyZooKeeperServer(2317) at 0", "Insert MethodInvocation(2322) into ExpressionStatement(2323) at 0", "Insert MethodInvocation(2328) into ExpressionStatement(2329) at 0", "Insert SimpleName: ReadOnlyZooKeeperServer(1756) into SimpleType: ReadOnlyZooKeeperServer(1757) at 0", "Insert MethodInvocation(1764) into ExpressionStatement(1765) at 0", "Insert SimpleName: pw(2319) into MethodInvocation(2322) at 0", "Insert SimpleName: print(2320) into MethodInvocation(2322) at 1", "Insert StringLiteral: \"ro\"(2321) into MethodInvocation(2322) at 2", "Insert SimpleName: pw(2325) into MethodInvocation(2328) at 0", "Insert SimpleName: print(2326) into MethodInvocation(2328) at 1", "Insert StringLiteral: \"rw\"(2327) into MethodInvocation(2328) at 2", "Insert SimpleName: pw(1759) into MethodInvocation(1764) at 0", "Insert SimpleName: println(1760) into MethodInvocation(1764) at 1", "Insert InfixExpression: +(1763) into MethodInvocation(1764) at 2", "Insert StringLiteral: \"READ-ONLY mode; serving only \"(1761) into InfixExpression: +(1763) at 0", "Insert StringLiteral: \"read-only clients\"(1762) into InfixExpression: +(1763) at 1", "Insert IfStatement(2720) into IfStatement(2721) at 2", "Move InfixExpression: ==(2619) into IfStatement(2720) at 0", "Move Block(2635) into IfStatement(2720) at 1", "Move IfStatement(2636) into IfStatement(2720) at 2", "Insert InfixExpression: ==(2702) into IfStatement(2719) at 0", "Insert Block(2718) into IfStatement(2719) at 1", "Insert SimpleName: len(2700) into InfixExpression: ==(2702) at 0", "Insert SimpleName: isroCmd(2701) into InfixExpression: ==(2702) at 1", "Insert VariableDeclarationStatement(2711) into Block(2718) at 0", "Insert ExpressionStatement(2715) into Block(2718) at 1", "Insert ReturnStatement(2717) into Block(2718) at 2", "Insert SimpleType: IsroCommand(2704) into VariableDeclarationStatement(2711) at 0", "Insert VariableDeclarationFragment(2710) into VariableDeclarationStatement(2711) at 1", "Insert MethodInvocation(2714) into ExpressionStatement(2715) at 0", "Insert BooleanLiteral: true(2716) into ReturnStatement(2717) at 0", "Insert SimpleName: IsroCommand(2703) into SimpleType: IsroCommand(2704) at 0", "Insert SimpleName: isro(2705) into VariableDeclarationFragment(2710) at 0", "Insert ClassInstanceCreation(2709) into VariableDeclarationFragment(2710) at 1", "Insert SimpleName: isro(2712) into MethodInvocation(2714) at 0", "Insert SimpleName: start(2713) into MethodInvocation(2714) at 1", "Insert SimpleType: IsroCommand(2707) into ClassInstanceCreation(2709) at 0", "Insert SimpleName: pwriter(2708) into ClassInstanceCreation(2709) at 1", "Insert SimpleName: IsroCommand(2706) into SimpleType: IsroCommand(2707) at 0"]}}, {"NettyServerCnxn_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 30"]}, {"root": "UPDATE from java.io.StringWriter to org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer", "operations": ["UPD QualifiedName: java.io.StringWriter from java.io.StringWriter to org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 42", "operations": ["INS SimpleName: pw to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleType: PrintWriter to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: pw to SuperConstructorInvocation at 0", "INS SimpleName: print to MethodInvocation at 1", "INS StringLiteral: \"rw\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: commandRun to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: CommandThread to TypeDeclaration: class at 2", "INS SimpleName: print to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS Block to MethodDeclaration at 3", "INS SimpleName: zkServer to InfixExpression: == at 0", "INS IfStatement to IfStatement at 2", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SuperConstructorInvocation to Block at 0", "INS StringLiteral: \"null\" to MethodInvocation at 2", "INS SimpleName: print to MethodInvocation at 1", "INS SimpleName: IsroCommand to TypeDeclaration: class at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS IfStatement to Block at 0", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS Block to IfStatement at 1", "INS SimpleName: pw to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: pw to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1", "INS SimpleName: zkServer to InstanceofExpression at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: IsroCommand to MethodDeclaration at 1", "INS SimpleName: PrintWriter to SimpleType: PrintWriter at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 42", "INS InstanceofExpression to IfStatement at 0", "INS StringLiteral: \"ro\" to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: CommandThread to SimpleType: CommandThread at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: pw to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS IfStatement to Block at 2", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pw to MethodInvocation at 0", "INS InstanceofExpression to IfStatement at 0", "INS StringLiteral: \"read-only clients\" to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: zkServer to InstanceofExpression at 0", "INS SimpleName: println to MethodInvocation at 1", "INS StringLiteral: \"READ-ONLY mode; serving only \" to InfixExpression: + at 0", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS SimpleName: isroCmd to InfixExpression: == at 1", "INS SimpleName: len to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: start to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: isro to VariableDeclarationFragment at 0", "INS SimpleName: IsroCommand to SimpleType: IsroCommand at 0", "INS SimpleType: IsroCommand to VariableDeclarationStatement at 0", "INS SimpleType: IsroCommand to ClassInstanceCreation at 0", "INS SimpleName: isro to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: IsroCommand to SimpleType: IsroCommand at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: pwriter to ClassInstanceCreation at 1"]}]}}, {"NettyServerCnxn_diff": {"operations": ["Move ImportDeclaration(28) into CompilationUnit(2867) at 30", "Update QualifiedName: java.io.StringWriter(27) to org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer", "Insert TypeDeclaration: class(1941) into TypeDeclaration: class(2866) at 42", "Insert Modifier: private(1893) into TypeDeclaration: class(1941) at 0", "Insert SimpleName: IsroCommand(1894) into TypeDeclaration: class(1941) at 1", "Insert SimpleType: CommandThread(1896) into TypeDeclaration: class(1941) at 2", "Insert MethodDeclaration(1906) into TypeDeclaration: class(1941) at 3", "Insert MethodDeclaration(1940) into TypeDeclaration: class(1941) at 4", "Insert SimpleName: CommandThread(1895) into SimpleType: CommandThread(1896) at 0", "Insert Modifier: public(1897) into MethodDeclaration(1906) at 0", "Insert SimpleName: IsroCommand(1898) into MethodDeclaration(1906) at 1", "Insert SingleVariableDeclaration(1902) into MethodDeclaration(1906) at 2", "Insert Block(1905) into MethodDeclaration(1906) at 3", "Insert MarkerAnnotation(1908) into MethodDeclaration(1940) at 0", "Insert Modifier: public(1909) into MethodDeclaration(1940) at 1", "Insert PrimitiveType: void(1910) into MethodDeclaration(1940) at 2", "Insert SimpleName: commandRun(1911) into MethodDeclaration(1940) at 3", "Insert Block(1939) into MethodDeclaration(1940) at 4", "Insert SimpleType: PrintWriter(1900) into SingleVariableDeclaration(1902) at 0", "Insert SimpleName: pw(1901) into SingleVariableDeclaration(1902) at 1", "Insert SuperConstructorInvocation(1904) into Block(1905) at 0", "Insert SimpleName: Override(1907) into MarkerAnnotation(1908) at 0", "Insert IfStatement(1938) into Block(1939) at 0", "Insert SimpleName: PrintWriter(1899) into SimpleType: PrintWriter(1900) at 0", "Insert SimpleName: pw(1903) into SuperConstructorInvocation(1904) at 0", "Insert InfixExpression: ==(1914) into IfStatement(1938) at 0", "Insert Block(1920) into IfStatement(1938) at 1", "Insert IfStatement(1937) into IfStatement(1938) at 2", "Insert IfStatement(1380) into Block(1457) at 2", "Insert SimpleName: zkServer(1912) into InfixExpression: ==(1914) at 0", "Insert NullLiteral(1913) into InfixExpression: ==(1914) at 1", "Insert ExpressionStatement(1919) into Block(1920) at 0", "Insert InstanceofExpression(1924) into IfStatement(1937) at 0", "Insert Block(1930) into IfStatement(1937) at 1", "Insert Block(1936) into IfStatement(1937) at 2", "Insert InstanceofExpression(1371) into IfStatement(1380) at 0", "Insert Block(1379) into IfStatement(1380) at 1", "Insert MethodInvocation(1918) into ExpressionStatement(1919) at 0", "Insert SimpleName: zkServer(1921) into InstanceofExpression(1924) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1923) into InstanceofExpression(1924) at 1", "Insert ExpressionStatement(1929) into Block(1930) at 0", "Insert ExpressionStatement(1935) into Block(1936) at 0", "Insert SimpleName: zkServer(1368) into InstanceofExpression(1371) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1370) into InstanceofExpression(1371) at 1", "Insert ExpressionStatement(1378) into Block(1379) at 0", "Insert SimpleName: pw(1915) into MethodInvocation(1918) at 0", "Insert SimpleName: print(1916) into MethodInvocation(1918) at 1", "Insert StringLiteral: \"null\"(1917) into MethodInvocation(1918) at 2", "Insert SimpleName: ReadOnlyZooKeeperServer(1922) into SimpleType: ReadOnlyZooKeeperServer(1923) at 0", "Insert MethodInvocation(1928) into ExpressionStatement(1929) at 0", "Insert MethodInvocation(1934) into ExpressionStatement(1935) at 0", "Insert SimpleName: ReadOnlyZooKeeperServer(1369) into SimpleType: ReadOnlyZooKeeperServer(1370) at 0", "Insert MethodInvocation(1377) into ExpressionStatement(1378) at 0", "Insert SimpleName: pw(1925) into MethodInvocation(1928) at 0", "Insert SimpleName: print(1926) into MethodInvocation(1928) at 1", "Insert StringLiteral: \"ro\"(1927) into MethodInvocation(1928) at 2", "Insert SimpleName: pw(1931) into MethodInvocation(1934) at 0", "Insert SimpleName: print(1932) into MethodInvocation(1934) at 1", "Insert StringLiteral: \"rw\"(1933) into MethodInvocation(1934) at 2", "Insert SimpleName: pw(1372) into MethodInvocation(1377) at 0", "Insert SimpleName: println(1373) into MethodInvocation(1377) at 1", "Insert InfixExpression: +(1376) into MethodInvocation(1377) at 2", "Insert StringLiteral: \"READ-ONLY mode; serving only \"(1374) into InfixExpression: +(1376) at 0", "Insert StringLiteral: \"read-only clients\"(1375) into InfixExpression: +(1376) at 1", "Insert IfStatement(2308) into IfStatement(2309) at 2", "Move InfixExpression: ==(2209) into IfStatement(2308) at 0", "Move Block(2225) into IfStatement(2308) at 1", "Move IfStatement(2226) into IfStatement(2308) at 2", "Insert InfixExpression: ==(2290) into IfStatement(2307) at 0", "Insert Block(2306) into IfStatement(2307) at 1", "Insert SimpleName: len(2288) into InfixExpression: ==(2290) at 0", "Insert SimpleName: isroCmd(2289) into InfixExpression: ==(2290) at 1", "Insert VariableDeclarationStatement(2299) into Block(2306) at 0", "Insert ExpressionStatement(2303) into Block(2306) at 1", "Insert ReturnStatement(2305) into Block(2306) at 2", "Insert SimpleType: IsroCommand(2292) into VariableDeclarationStatement(2299) at 0", "Insert VariableDeclarationFragment(2298) into VariableDeclarationStatement(2299) at 1", "Insert MethodInvocation(2302) into ExpressionStatement(2303) at 0", "Insert BooleanLiteral: true(2304) into ReturnStatement(2305) at 0", "Insert SimpleName: IsroCommand(2291) into SimpleType: IsroCommand(2292) at 0", "Insert SimpleName: isro(2293) into VariableDeclarationFragment(2298) at 0", "Insert ClassInstanceCreation(2297) into VariableDeclarationFragment(2298) at 1", "Insert SimpleName: isro(2300) into MethodInvocation(2302) at 0", "Insert SimpleName: start(2301) into MethodInvocation(2302) at 1", "Insert SimpleType: IsroCommand(2295) into ClassInstanceCreation(2297) at 0", "Insert SimpleName: pwriter(2296) into ClassInstanceCreation(2297) at 1", "Insert SimpleName: IsroCommand(2294) into SimpleType: IsroCommand(2295) at 0"]}}, {"ServerCnxn_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS TextElement: results in TCP RST packet, i.e. \"connection reset by peer\". to TagElement at 2", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS TextElement: If the client is of old version, we don't send r-o mode info to it. to TagElement at 0", "INS TextElement: The reason is that if we would, old C client doesn't read it, which to TagElement at 1", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: isOldClient to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 40", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"isro\" to MethodInvocation at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: getBytes to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 40", "INS Modifier: protected to FieldDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: isroCmd to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS PrimitiveType: int to FieldDeclaration at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getInt to MethodInvocation at 1", "INS Modifier: static to FieldDeclaration at 2"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS SimpleName: isroCmd to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: cmd2String to MethodInvocation at 0", "INS ExpressionStatement to Block at 15", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"isro\" to MethodInvocation at 3"]}]}}, {"ServerCnxn_diff": {"operations": ["Insert FieldDeclaration(97) into TypeDeclaration: class(1346) at 8", "Insert FieldDeclaration(517) into TypeDeclaration: class(1346) at 40", "Insert Javadoc(92) into FieldDeclaration(97) at 0", "Insert PrimitiveType: boolean(93) into FieldDeclaration(97) at 1", "Insert VariableDeclarationFragment(96) into FieldDeclaration(97) at 2", "Insert Modifier: public(106) into MethodDeclaration(124) at 0", "Insert Modifier: protected(503) into FieldDeclaration(517) at 0", "Insert Modifier: final(504) into FieldDeclaration(517) at 1", "Insert Modifier: static(505) into FieldDeclaration(517) at 2", "Insert PrimitiveType: int(506) into FieldDeclaration(517) at 3", "Insert VariableDeclarationFragment(516) into FieldDeclaration(517) at 4", "Insert TagElement(91) into Javadoc(92) at 0", "Insert SimpleName: isOldClient(94) into VariableDeclarationFragment(96) at 0", "Insert BooleanLiteral: true(95) into VariableDeclarationFragment(96) at 1", "Insert SimpleName: isroCmd(507) into VariableDeclarationFragment(516) at 0", "Insert MethodInvocation(515) into VariableDeclarationFragment(516) at 1", "Insert ExpressionStatement(635) into Block(636) at 15", "Insert TextElement: If the client is of old version, we don't send r-o mode info to it.(88) into TagElement(91) at 0", "Insert TextElement: The reason is that if we would, old C client doesn't read it, which(89) into TagElement(91) at 1", "Insert TextElement: results in TCP RST packet, i.e. \"connection reset by peer\".(90) into TagElement(91) at 2", "Insert MethodInvocation(513) into MethodInvocation(515) at 0", "Insert SimpleName: getInt(514) into MethodInvocation(515) at 1", "Insert MethodInvocation(634) into ExpressionStatement(635) at 0", "Insert SimpleName: ByteBuffer(508) into MethodInvocation(513) at 0", "Insert SimpleName: wrap(509) into MethodInvocation(513) at 1", "Insert MethodInvocation(512) into MethodInvocation(513) at 2", "Insert SimpleName: cmd2String(630) into MethodInvocation(634) at 0", "Insert SimpleName: put(631) into MethodInvocation(634) at 1", "Insert SimpleName: isroCmd(632) into MethodInvocation(634) at 2", "Insert StringLiteral: \"isro\"(633) into MethodInvocation(634) at 3", "Insert StringLiteral: \"isro\"(510) into MethodInvocation(512) at 0", "Insert SimpleName: getBytes(511) into MethodInvocation(512) at 1"]}}, {"ZooKeeperServer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS ImportDeclaration to CompilationUnit at 38", "INS QualifiedName: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: readOnly to VariableDeclarationFragment at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1"]}, {"root": "INS TryStatement to Block at 5", "operations": ["INS CatchClause to TryStatement at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: bia to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS StringLiteral: \"readOnly\" to MethodInvocation at 2", "INS SimpleName: readBool to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: getRemoteSocketAddress to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS Block to CatchClause at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS TryStatement to Block at 5", "INS QualifiedName: cnxn.isOldClient to Assignment: = at 0", "INS StringLiteral: \"; will be dropped if server is in r-o mode\" to InfixExpression: + at 2", "INS SimpleName: readOnly to Assignment: = at 0", "INS SimpleName: cnxn to MethodInvocation at 0", "INS StringLiteral: \"Connection request from old client \" to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1", "INS InstanceofExpression to InfixExpression: && at 1", "INS IfStatement to Block at 6", "INS ThisExpression to InstanceofExpression at 0", "INS SimpleName: cnxn to MethodInvocation at 0", "INS SimpleName: getRemoteSocketAddress to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS StringLiteral: \"Refusing session request for not-read-only client \" to InfixExpression: + at 0", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS SimpleType: CloseRequestException to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: msg to VariableDeclarationFragment at 0", "INS SimpleName: msg to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS BooleanLiteral: false to InfixExpression: == at 1", "INS SimpleName: CloseRequestException to SimpleType: CloseRequestException at 0", "INS SimpleName: readOnly to InfixExpression: == at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: msg to MethodInvocation at 2", "INS InfixExpression: == to InfixExpression: && at 0", "INS ThrowStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 5", "INS QualifiedName: cnxn.isOldClient to PrefixExpression: ! at 0", "INS SimpleName: bos to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS StringLiteral: \"readOnly\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleType: ReadOnlyZooKeeperServer to InstanceofExpression at 1", "INS SimpleName: writeBool to MethodInvocation at 1", "INS InstanceofExpression to MethodInvocation at 2", "INS ThisExpression to InstanceofExpression at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "DEL TagElement: @throws", "operations": ["DEL SimpleName: IOException", "DEL TagElement: @throws"]}]}}, {"ZooKeeperServer_diff": {"operations": ["Insert ImportDeclaration(92) into CompilationUnit(3092) at 38", "Insert QualifiedName: org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer(91) into ImportDeclaration(92) at 0", "Insert VariableDeclarationStatement(2592) into Block(2815) at 4", "Insert TryStatement(2621) into Block(2815) at 5", "Insert IfStatement(2651) into Block(2815) at 6", "Insert PrimitiveType: boolean(2588) into VariableDeclarationStatement(2592) at 0", "Insert VariableDeclarationFragment(2591) into VariableDeclarationStatement(2592) at 1", "Insert Block(2604) into TryStatement(2621) at 0", "Insert CatchClause(2620) into TryStatement(2621) at 1", "Insert InfixExpression: &&(2629) into IfStatement(2651) at 0", "Insert Block(2650) into IfStatement(2651) at 1", "Insert IfStatement(1894) into Block(1977) at 5", "Insert SimpleName: readOnly(2589) into VariableDeclarationFragment(2591) at 0", "Insert BooleanLiteral: false(2590) into VariableDeclarationFragment(2591) at 1", "Insert ExpressionStatement(2599) into Block(2604) at 0", "Insert ExpressionStatement(2603) into Block(2604) at 1", "Insert SingleVariableDeclaration(2608) into CatchClause(2620) at 0", "Insert Block(2619) into CatchClause(2620) at 1", "Insert InfixExpression: ==(2624) into InfixExpression: &&(2629) at 0", "Insert InstanceofExpression(2628) into InfixExpression: &&(2629) at 1", "Insert VariableDeclarationStatement(2639) into Block(2650) at 0", "Insert ExpressionStatement(2644) into Block(2650) at 1", "Insert ThrowStatement(2649) into Block(2650) at 2", "Insert PrefixExpression: !(1883) into IfStatement(1894) at 0", "Insert Block(1893) into IfStatement(1894) at 1", "Insert Assignment: =(2598) into ExpressionStatement(2599) at 0", "Insert Assignment: =(2602) into ExpressionStatement(2603) at 0", "Move SimpleType: IOException(388) into SingleVariableDeclaration(2608) at 0", "Insert SimpleName: e(2607) into SingleVariableDeclaration(2608) at 1", "Insert ExpressionStatement(2618) into Block(2619) at 0", "Insert SimpleName: readOnly(2622) into InfixExpression: ==(2624) at 0", "Insert BooleanLiteral: false(2623) into InfixExpression: ==(2624) at 1", "Insert ThisExpression(2625) into InstanceofExpression(2628) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(2627) into InstanceofExpression(2628) at 1", "Insert SimpleType: String(2631) into VariableDeclarationStatement(2639) at 0", "Insert VariableDeclarationFragment(2638) into VariableDeclarationStatement(2639) at 1", "Insert MethodInvocation(2643) into ExpressionStatement(2644) at 0", "Insert ClassInstanceCreation(2648) into ThrowStatement(2649) at 0", "Insert QualifiedName: cnxn.isOldClient(1882) into PrefixExpression: !(1883) at 0", "Insert ExpressionStatement(1892) into Block(1893) at 0", "Insert SimpleName: readOnly(2593) into Assignment: =(2598) at 0", "Insert MethodInvocation(2597) into Assignment: =(2598) at 1", "Insert QualifiedName: cnxn.isOldClient(2600) into Assignment: =(2602) at 0", "Insert BooleanLiteral: false(2601) into Assignment: =(2602) at 1", "Insert MethodInvocation(2617) into ExpressionStatement(2618) at 0", "Insert SimpleName: ReadOnlyZooKeeperServer(2626) into SimpleType: ReadOnlyZooKeeperServer(2627) at 0", "Insert SimpleName: String(2630) into SimpleType: String(2631) at 0", "Insert SimpleName: msg(2632) into VariableDeclarationFragment(2638) at 0", "Insert InfixExpression: +(2637) into VariableDeclarationFragment(2638) at 1", "Insert SimpleName: LOG(2640) into MethodInvocation(2643) at 0", "Insert SimpleName: info(2641) into MethodInvocation(2643) at 1", "Insert SimpleName: msg(2642) into MethodInvocation(2643) at 2", "Insert SimpleType: CloseRequestException(2646) into ClassInstanceCreation(2648) at 0", "Insert SimpleName: msg(2647) into ClassInstanceCreation(2648) at 1", "Insert MethodInvocation(1891) into ExpressionStatement(1892) at 0", "Insert SimpleName: bia(2594) into MethodInvocation(2597) at 0", "Insert SimpleName: readBool(2595) into MethodInvocation(2597) at 1", "Insert StringLiteral: \"readOnly\"(2596) into MethodInvocation(2597) at 2", "Insert SimpleName: LOG(2609) into MethodInvocation(2617) at 0", "Insert SimpleName: warn(2610) into MethodInvocation(2617) at 1", "Insert InfixExpression: +(2616) into MethodInvocation(2617) at 2", "Insert StringLiteral: \"Refusing session request for not-read-only client \"(2633) into InfixExpression: +(2637) at 0", "Insert MethodInvocation(2636) into InfixExpression: +(2637) at 1", "Insert SimpleName: CloseRequestException(2645) into SimpleType: CloseRequestException(2646) at 0", "Insert SimpleName: bos(1884) into MethodInvocation(1891) at 0", "Insert SimpleName: writeBool(1885) into MethodInvocation(1891) at 1", "Insert InstanceofExpression(1889) into MethodInvocation(1891) at 2", "Insert StringLiteral: \"readOnly\"(1890) into MethodInvocation(1891) at 3", "Insert StringLiteral: \"Connection request from old client \"(2611) into InfixExpression: +(2616) at 0", "Insert MethodInvocation(2614) into InfixExpression: +(2616) at 1", "Insert StringLiteral: \"; will be dropped if server is in r-o mode\"(2615) into InfixExpression: +(2616) at 2", "Insert SimpleName: cnxn(2634) into MethodInvocation(2636) at 0", "Insert SimpleName: getRemoteSocketAddress(2635) into MethodInvocation(2636) at 1", "Insert ThisExpression(1886) into InstanceofExpression(1889) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1888) into InstanceofExpression(1889) at 1", "Insert SimpleName: cnxn(2612) into MethodInvocation(2614) at 0", "Insert SimpleName: getRemoteSocketAddress(2613) into MethodInvocation(2614) at 1", "Insert SimpleName: ReadOnlyZooKeeperServer(1887) into SimpleType: ReadOnlyZooKeeperServer(1888) at 0", "Delete SimpleName: IOException(361)", "Delete TagElement: @throws(362)"]}}, {"QuorumPeer_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to SwitchStatement at 2"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 3", "operations": ["INS SimpleType: ZooKeeperServer.BasicDataTreeBuilder to ClassInstanceCreation at 0", "INS SimpleName: roZk to VariableDeclarationFragment at 0", "INS ThisExpression to FieldAccess at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS FieldAccess to ClassInstanceCreation at 4", "INS QualifiedName: ZooKeeperServer.BasicDataTreeBuilder to SimpleType: ZooKeeperServer.BasicDataTreeBuilder at 0", "INS ThisExpression to ClassInstanceCreation at 2", "INS SimpleName: zkDb to FieldAccess at 1", "INS VariableDeclarationStatement to SwitchStatement at 3", "INS SimpleType: ReadOnlyZooKeeperServer to ClassInstanceCreation at 0", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 3", "INS SimpleName: ReadOnlyZooKeeperServer to SimpleType: ReadOnlyZooKeeperServer at 0", "INS SimpleType: ReadOnlyZooKeeperServer to VariableDeclarationStatement at 1", "INS SimpleName: logFactory to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS TryStatement to SwitchStatement at 4", "operations": ["INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: roZk to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: roZk to MethodInvocation at 0", "INS SimpleName: startup to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleType: Thread to ClassInstanceCreation at 0", "INS SimpleName: tickTime to MethodInvocation at 3", "INS SimpleName: run to MethodDeclaration at 2", "INS StringLiteral: \"Read-only server started\" to MethodInvocation at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: info to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: sleep to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"FAILED to start ReadOnlyZooKeeperServer\" to MethodInvocation at 2", "INS SimpleName: start to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS Block to TryStatement at 0", "INS Block to TryStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: shutdown to MethodInvocation at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: getPeerState to MethodInvocation at 0", "INS TryStatement to SwitchStatement at 4", "INS Block to TryStatement at 2", "INS SimpleName: max to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS QualifiedName: ServerState.LOOKING to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Thread to SimpleType: Thread at 0", "INS NumberLiteral: 2000 to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS TryStatement to Block at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL TryStatement"]}]}}, {"QuorumPeer_diff": {"operations": ["Move ExpressionStatement(1842) into SwitchStatement(2086) at 2", "Insert VariableDeclarationStatement(1859) into SwitchStatement(2086) at 3", "Insert TryStatement(1939) into SwitchStatement(2086) at 4", "Insert Modifier: final(1843) into VariableDeclarationStatement(1859) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1845) into VariableDeclarationStatement(1859) at 1", "Insert VariableDeclarationFragment(1858) into VariableDeclarationStatement(1859) at 2", "Insert Block(1917) into TryStatement(1939) at 0", "Move CatchClause(1866) into TryStatement(1939) at 1", "Insert Block(1938) into TryStatement(1939) at 2", "Insert SimpleName: ReadOnlyZooKeeperServer(1844) into SimpleType: ReadOnlyZooKeeperServer(1845) at 0", "Insert SimpleName: roZk(1846) into VariableDeclarationFragment(1858) at 0", "Insert ClassInstanceCreation(1857) into VariableDeclarationFragment(1858) at 1", "Insert ExpressionStatement(1909) into Block(1917) at 0", "Move ExpressionStatement(1849) into Block(1917) at 1", "Insert ExpressionStatement(1937) into Block(1938) at 0", "Insert SimpleType: ReadOnlyZooKeeperServer(1848) into ClassInstanceCreation(1857) at 0", "Insert SimpleName: logFactory(1849) into ClassInstanceCreation(1857) at 1", "Insert ThisExpression(1850) into ClassInstanceCreation(1857) at 2", "Insert ClassInstanceCreation(1853) into ClassInstanceCreation(1857) at 3", "Insert FieldAccess(1856) into ClassInstanceCreation(1857) at 4", "Insert MethodInvocation(1908) into ExpressionStatement(1909) at 0", "Insert MethodInvocation(1936) into ExpressionStatement(1937) at 0", "Insert SimpleName: ReadOnlyZooKeeperServer(1847) into SimpleType: ReadOnlyZooKeeperServer(1848) at 0", "Insert SimpleType: ZooKeeperServer.BasicDataTreeBuilder(1852) into ClassInstanceCreation(1853) at 0", "Insert ThisExpression(1854) into FieldAccess(1856) at 0", "Insert SimpleName: zkDb(1855) into FieldAccess(1856) at 1", "Insert ClassInstanceCreation(1906) into MethodInvocation(1908) at 0", "Insert SimpleName: start(1907) into MethodInvocation(1908) at 1", "Insert SimpleName: roZk(1934) into MethodInvocation(1936) at 0", "Insert SimpleName: shutdown(1935) into MethodInvocation(1936) at 1", "Insert QualifiedName: ZooKeeperServer.BasicDataTreeBuilder(1851) into SimpleType: ZooKeeperServer.BasicDataTreeBuilder(1852) at 0", "Insert SimpleType: Thread(1861) into ClassInstanceCreation(1906) at 0", "Insert AnonymousClassDeclaration(1905) into ClassInstanceCreation(1906) at 1", "Insert SimpleName: Thread(1860) into SimpleType: Thread(1861) at 0", "Insert MethodDeclaration(1904) into AnonymousClassDeclaration(1905) at 0", "Insert Modifier: public(1862) into MethodDeclaration(1904) at 0", "Insert PrimitiveType: void(1863) into MethodDeclaration(1904) at 1", "Insert SimpleName: run(1864) into MethodDeclaration(1904) at 2", "Insert Block(1903) into MethodDeclaration(1904) at 3", "Insert TryStatement(1902) into Block(1903) at 0", "Insert Block(1889) into TryStatement(1902) at 0", "Insert CatchClause(1901) into TryStatement(1902) at 1", "Insert ExpressionStatement(1872) into Block(1889) at 0", "Insert IfStatement(1888) into Block(1889) at 1", "Insert SingleVariableDeclaration(1893) into CatchClause(1901) at 0", "Insert Block(1900) into CatchClause(1901) at 1", "Insert MethodInvocation(1871) into ExpressionStatement(1872) at 0", "Insert MethodInvocation(1877) into IfStatement(1888) at 0", "Insert Block(1887) into IfStatement(1888) at 1", "Insert SimpleType: Exception(1891) into SingleVariableDeclaration(1893) at 0", "Insert SimpleName: e(1892) into SingleVariableDeclaration(1893) at 1", "Insert ExpressionStatement(1899) into Block(1900) at 0", "Insert SimpleName: sleep(1865) into MethodInvocation(1871) at 0", "Insert MethodInvocation(1870) into MethodInvocation(1871) at 1", "Insert QualifiedName: ServerState.LOOKING(1873) into MethodInvocation(1877) at 0", "Insert SimpleName: equals(1874) into MethodInvocation(1877) at 1", "Insert MethodInvocation(1876) into MethodInvocation(1877) at 2", "Insert ExpressionStatement(1881) into Block(1887) at 0", "Insert ExpressionStatement(1886) into Block(1887) at 1", "Insert SimpleName: Exception(1890) into SimpleType: Exception(1891) at 0", "Insert MethodInvocation(1898) into ExpressionStatement(1899) at 0", "Insert SimpleName: Math(1866) into MethodInvocation(1870) at 0", "Insert SimpleName: max(1867) into MethodInvocation(1870) at 1", "Insert NumberLiteral: 2000(1868) into MethodInvocation(1870) at 2", "Insert SimpleName: tickTime(1869) into MethodInvocation(1870) at 3", "Insert SimpleName: getPeerState(1875) into MethodInvocation(1876) at 0", "Insert MethodInvocation(1880) into ExpressionStatement(1881) at 0", "Insert MethodInvocation(1885) into ExpressionStatement(1886) at 0", "Insert SimpleName: LOG(1894) into MethodInvocation(1898) at 0", "Insert SimpleName: error(1895) into MethodInvocation(1898) at 1", "Insert StringLiteral: \"FAILED to start ReadOnlyZooKeeperServer\"(1896) into MethodInvocation(1898) at 2", "Insert SimpleName: e(1897) into MethodInvocation(1898) at 3", "Insert SimpleName: roZk(1878) into MethodInvocation(1880) at 0", "Insert SimpleName: startup(1879) into MethodInvocation(1880) at 1", "Insert SimpleName: LOG(1882) into MethodInvocation(1885) at 0", "Insert SimpleName: info(1883) into MethodInvocation(1885) at 1", "Insert StringLiteral: \"Read-only server started\"(1884) into MethodInvocation(1885) at 2", "Delete Block(1850)", "Delete TryStatement(1867)"]}}, {"QuorumZooKeeperServer_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}]}}, {"QuorumZooKeeperServer_diff": {"operations": ["Delete QualifiedName: java.io.IOException(17)", "Delete ImportDeclaration(18)", "Delete SimpleName: IOException(70)", "Delete SimpleType: IOException(71)"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}