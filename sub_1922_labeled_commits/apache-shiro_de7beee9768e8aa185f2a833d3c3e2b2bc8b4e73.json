{"application": "apache-shiro", "csha": "de7beee9768e8aa185f2a833d3c3e2b2bc8b4e73", "files": [{"Ini_cluster": {"actions": [{"root": "UPDATE from Iterator<String> to Set<String>", "operations": ["UPD ParameterizedType: Iterator<String> from Iterator<String> to Set<String>"]}, {"root": "UPDATE from Iterator to Set", "operations": ["UPD SimpleName: Iterator from Iterator to Set", "UPD SimpleType: Iterator from Iterator to Set"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: iterator"]}]}}, {"Ini_diff": {"operations": ["Update ParameterizedType: Iterator<String>(254) to Set<String>", "Update SimpleType: Iterator(251) to Set", "Update SimpleName: Iterator(250) to Set", "Move MethodInvocation(261) into ReturnStatement(262) at 0", "Delete SimpleName: iterator(262)", "Delete MethodInvocation(263)"]}}, {"IniConfiguration_cluster": {"actions": [{"root": "UPDATE from Map<String,Object> to Map<String,?>", "operations": ["UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,?>"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2"]}, {"root": "UPDATE from Map.Entry<String,Object> to Map.Entry<String,?>", "operations": ["UPD ParameterizedType: Map.Entry<String,Object> from Map.Entry<String,Object> to Map.Entry<String,?>"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map.Entry<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map.Entry<String,Object> at 2"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleName: Object", "DEL SimpleType: Object"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}]}}, {"IniConfiguration_diff": {"operations": ["Update ParameterizedType: Map<String,Object>(622) to Map<String,?>", "Insert WildcardType: ?(620) into ParameterizedType: Map<String,?>(621) at 2", "Update ParameterizedType: Map.Entry<String,Object>(650) to Map.Entry<String,?>", "Insert WildcardType: ?(647) into ParameterizedType: Map.Entry<String,?>(648) at 2", "Delete SimpleName: Object(620)", "Delete SimpleType: Object(621)", "Delete SimpleName: Object(648)", "Delete SimpleType: Object(649)"]}}, {"IniFactorySupport_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.shiro.util.AbstractFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from Factory<T> to AbstractFactory<T>", "operations": ["UPD ParameterizedType: Factory<T> from Factory<T> to AbstractFactory<T>"]}, {"root": "UPDATE from Factory to AbstractFactory", "operations": ["UPD SimpleName: Factory from Factory to AbstractFactory", "UPD SimpleType: Factory from Factory to AbstractFactory"]}, {"root": "UPDATE from getInstance to createInstance", "operations": ["UPD SimpleName: getInstance from getInstance to createInstance"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !"]}]}}, {"IniFactorySupport_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(376) at 2", "Insert QualifiedName: org.apache.shiro.util.AbstractFactory(4) into ImportDeclaration(5) at 0", "Update ParameterizedType: Factory<T>(34) to AbstractFactory<T>", "Update SimpleType: Factory(31) to AbstractFactory", "Update SimpleName: getInstance(264) to createInstance", "Update SimpleName: Factory(30) to AbstractFactory", "Move Block(318) into IfStatement(354) at 3", "Move MethodInvocation(280) into IfStatement(354) at 0", "Delete PrefixExpression: !(281)"]}}, {"IniSecurityManagerFactory_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 13", "MOV MethodDeclaration to TypeDeclaration: class at 14"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 8"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS FieldAccess to InfixExpression: != at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS MethodInvocation to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS Block to MethodDeclaration at 3", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: builder to FieldAccess at 1", "INS NullLiteral to ConditionalExpression at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: getSecurityManagerBean to MethodDeclaration at 2", "INS SimpleName: SecurityManager to SimpleType: SecurityManager at 0", "INS SimpleType: SecurityManager to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Modifier: private to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS ReturnStatement to Block at 2", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: RealmSecurityManager to InstanceofExpression at 1", "INS SimpleName: getRealms to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS SimpleName: RealmSecurityManager to SimpleType: RealmSecurityManager at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: RealmSecurityManager to SimpleType: RealmSecurityManager at 0", "INS SimpleName: realmSecurityManager to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS ParameterizedType: Collection<Realm> to VariableDeclarationStatement at 0", "INS SimpleName: realms to VariableDeclarationFragment at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: Realm to ParameterizedType: Collection<Realm> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: RealmSecurityManager to SimpleType: RealmSecurityManager at 0", "INS SimpleName: realmSecurityManager to MethodInvocation at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: RealmSecurityManager to CastExpression at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: securityManager to CastExpression at 1", "INS SimpleType: Collection to ParameterizedType: Collection<Realm> at 0", "INS SimpleType: RealmSecurityManager to VariableDeclarationStatement at 0", "INS SimpleName: securityManager to InstanceofExpression at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: autoApply to ReturnStatement at 0", "INS SimpleName: Realm to SimpleType: Realm at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: mainSection to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: autoApplyRealms to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: initRealms to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS Modifier: private to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: securityManager to MethodInvocation at 1", "INS SimpleName: defaults to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: autoApplyRealms to IfStatement at 0", "INS SimpleName: createSecurityManager to MethodDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: securityManager to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS SimpleName: securityManager to VariableDeclarationFragment at 0", "INS SimpleName: buildInstances to MethodInvocation at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: isAutoApplyRealms to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS IfStatement to Block at 4", "INS SimpleName: defaults to MethodInvocation at 2", "INS SimpleName: getSecurityManagerBean to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: objects to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS Block to MethodDeclaration at 4", "INS SimpleName: getRealms to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Realm> at 0", "INS ParameterizedType: Collection<Realm> to MethodDeclaration at 1", "INS SimpleName: RealmSecurityManager to SimpleType: RealmSecurityManager at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: SecurityManager to SingleVariableDeclaration at 0", "INS SimpleName: Realm to SimpleType: Realm at 0", "INS SimpleType: Realm to ParameterizedType: Collection<Realm> at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getRealms to MethodDeclaration at 2", "INS SimpleName: securityManager to MethodInvocation at 1", "INS SimpleName: securityManager to CastExpression at 1", "INS ReturnStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: assertRealmSecurityManager to MethodInvocation at 0", "INS SimpleType: RealmSecurityManager to CastExpression at 0", "INS SimpleName: securityManager to SingleVariableDeclaration at 1", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: SecurityManager to SimpleType: SecurityManager at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: ini to SingleVariableDeclaration at 1", "INS SimpleName: defaults to ReturnStatement at 0", "INS SimpleName: Ini to SimpleType: Ini at 0", "INS SimpleType: Ini.Section to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 4", "INS QualifiedName: Ini.Section to SimpleType: Ini.Section at 0", "INS SimpleName: mainSection to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Ini to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS IfStatement to Block at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: buildInstances to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: defaults to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS ReturnStatement to Block at 1", "INS ParameterizedType: Map<String,?> to MethodDeclaration at 1", "INS SimpleName: builder to FieldAccess at 1", "INS Block to MethodDeclaration at 5", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 1", "INS ThrowStatement to Block at 0", "INS StringLiteral: \"securityManager instance is not a \" to InfixExpression: + at 0", "INS SimpleType: NullPointerException to ClassInstanceCreation at 0", "INS Block to IfStatement at 1", "INS SimpleName: msg to VariableDeclarationFragment at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: securityManager to InfixExpression: == at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS SimpleName: assertRealmSecurityManager to MethodDeclaration at 2", "INS SimpleName: NullPointerException to SimpleType: NullPointerException at 0", "INS Modifier: private to MethodDeclaration at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"securityManager instance cannot be null\" to ClassInstanceCreation at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS StringLiteral: \" instance.  This is required to access or configure realms on the instance.\" to InfixExpression: + at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: SecurityManager to SingleVariableDeclaration at 0", "INS SimpleName: securityManager to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: applyRealmsToSecurityManager to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: SecurityManager to SimpleType: SecurityManager at 0", "INS SimpleName: securityManager to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Modifier: protected to MethodDeclaration at 0", "INS SimpleName: assertRealmSecurityManager to MethodInvocation at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2", "MOV SimpleType: ReflectionBuilder to FieldDeclaration at 1"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Map<String,Object> to MethodDeclaration at 1", "MOV Modifier: private to MethodDeclaration at 0", "MOV SimpleName: buildMainInstances to MethodDeclaration at 2"]}, {"root": "UPDATE from Map<String,Object> to Map<String,?>", "operations": ["UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,?>", "UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,?>", "UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,?>", "UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,?>"]}, {"root": "UPDATE from buildMainInstances to getBeans", "operations": ["UPD SimpleName: buildMainInstances from buildMainInstances to getBeans"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private", "UPD Modifier: protected from protected to private"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Modifier: protected to MethodDeclaration at 0", "MOV SimpleName: buildInstances to MethodDeclaration at 2", "MOV ParameterizedType: Map<String,Object> to MethodDeclaration at 1"]}, {"root": "UPDATE from buildInstances to isAutoApplyRealms", "operations": ["UPD SimpleName: buildInstances from buildInstances to isAutoApplyRealms"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: protected to MethodDeclaration at 0", "MOV SingleMemberAnnotation to MethodDeclaration at 0", "MOV SimpleType: SecurityManager to MethodDeclaration at 2", "MOV SimpleName: doCreateSecurityManager to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SimpleName: initRealms to MethodDeclaration at 2", "operations": ["INS SimpleName: initRealms to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: SecurityManager to SingleVariableDeclaration at 0", "INS SimpleName: securityManager to SingleVariableDeclaration at 1", "INS SimpleName: SecurityManager to SimpleType: SecurityManager at 0"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 1", "INS SimpleName: CollectionUtils to MethodInvocation at 0", "INS SimpleName: realms to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from builder to createDefaults", "operations": ["UPD SimpleName: builder from builder to createDefaults", "UPD SimpleName: doCreateSecurityManager from doCreateSecurityManager to createDefaults"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: config to MethodInvocation at 1", "INS SimpleName: setIni to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS ConstructorInvocation to Block at 0"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "INS SimpleType: SecurityManager to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: SecurityManager to SingleVariableDeclaration at 0", "INS SimpleName: SecurityManager to SimpleType: SecurityManager at 0"]}, {"root": "INS SimpleName: securityManager to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: securityManager to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 1", "MOV ReturnStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ThrowStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0", "MOV SimpleType: Object to ParameterizedType: Map<String,?> at 0", "MOV SimpleType: String to ParameterizedType: Map<String,?> at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from  JavaDoc for detailed explaination of how an INI to  JavaDoc for detailed explanation of how an INI", "operations": ["UPD TextElement:  JavaDoc for detailed explaination of how an INI from  JavaDoc for detailed explaination of how an INI to  JavaDoc for detailed explanation of how an INI"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV MethodInvocation to ConstructorInvocation at 0"]}, {"root": "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: boolean to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: autoApply to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SecurityManager to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Collection<Realm> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Collection to ParameterizedType: Collection<Realm> at 0", "INS SimpleName: Realm to SimpleType: Realm at 0", "INS ParameterizedType: Collection<Realm> to VariableDeclarationStatement at 0", "INS SimpleType: Realm to ParameterizedType: Collection<Realm> at 1", "INS SimpleName: Collection to SimpleType: Collection at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from Object to Map", "operations": ["UPD SimpleType: Object from Object to Map", "UPD SimpleName: Object from Object to Map"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "INS InfixExpression: && to ReturnStatement at 0", "operations": ["INS SimpleName: ini to MethodInvocation at 2", "INS InfixExpression: && to ReturnStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: CollectionUtils to MethodInvocation at 0"]}, {"root": "UPDATE from INI_REALM_NAME to builder", "operations": ["UPD SimpleName: INI_REALM_NAME from INI_REALM_NAME to builder", "UPD SimpleName: buildInstances from buildInstances to builder"]}, {"root": "UPDATE from main to getBean", "operations": ["UPD SimpleName: main from main to getBean"]}, {"root": "UPDATE from defaults to SECURITY_MANAGER_NAME", "operations": ["UPD SimpleName: defaults from defaults to SECURITY_MANAGER_NAME"]}, {"root": "INS TypeLiteral to MethodInvocation at 3", "operations": ["INS TypeLiteral to MethodInvocation at 3"]}, {"root": "UPDATE from doCreateSecurityManager to createSecurityManager", "operations": ["UPD SimpleName: doCreateSecurityManager from doCreateSecurityManager to createSecurityManager"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,Object> at 2"]}, {"root": "UPDATE from msg to realms", "operations": ["UPD SimpleName: msg from msg to realms", "UPD SimpleName: defaults from defaults to realms"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: builder to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from mainSection to buildObjects", "operations": ["UPD SimpleName: mainSection from mainSection to buildObjects"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: mainSection to MethodInvocation at 1", "MOV SimpleName: iniRealm to MethodInvocation at 2"]}, {"root": "UPDATE from iniRealm to section", "operations": ["UPD SimpleName: iniRealm from iniRealm to section"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from Map.Entry<String,Object> to Map.Entry<String,?>", "operations": ["UPD ParameterizedType: Map.Entry<String,Object> from Map.Entry<String,Object> to Map.Entry<String,?>"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from defaults to Collections", "operations": ["UPD SimpleName: defaults from defaults to Collections"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: defaults to MethodInvocation at 0", "MOV SimpleName: INI_REALM_NAME to MethodInvocation at 0", "MOV SimpleName: put to MethodInvocation at 1", "MOV SimpleName: iniRealm to MethodInvocation at 1"]}, {"root": "UPDATE from put to unmodifiableMap", "operations": ["UPD SimpleName: put from put to unmodifiableMap"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: SecurityManager to TypeLiteral at 0"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: buildObjects to MethodInvocation at 1", "MOV SimpleName: builder to MethodInvocation at 0", "MOV SimpleName: section to MethodInvocation at 2"]}, {"root": "UPDATE from buildObjects to ini", "operations": ["UPD SimpleName: buildObjects from buildObjects to ini"]}, {"root": "UPDATE from section to mainSection", "operations": ["UPD SimpleName: section from section to mainSection"]}, {"root": "UPDATE from realms to getRealms", "operations": ["UPD SimpleName: realms from realms to getRealms"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: realms to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to securityManager", "operations": ["UPD SimpleName: size from size to securityManager"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS SimpleName: realm to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from factoryRealms to CollectionUtils", "operations": ["UPD SimpleName: factoryRealms from factoryRealms to CollectionUtils"]}, {"root": "INS SimpleName: realms to MethodInvocation at 2", "operations": ["INS SimpleName: realms to MethodInvocation at 2"]}, {"root": "INS WildcardType: ? to ParameterizedType: Map.Entry<String,Object> at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map.Entry<String,Object> at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InfixExpression: || to ParenthesizedExpression at 0"]}, {"root": "UPDATE from iniRealm to getObjects", "operations": ["UPD SimpleName: iniRealm from iniRealm to getObjects"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: info to MethodInvocation at 1", "INS StringLiteral: \"Realms have been explicitly set on the SecurityManager instance - auto-setting of \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"realms will not occur.\" to InfixExpression: + at 1"]}, {"root": "UPDATE from iniRealm to realm", "operations": ["UPD SimpleName: iniRealm from iniRealm to realm"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: CollectionUtils to MethodInvocation at 0", "MOV SimpleName: isEmpty to MethodInvocation at 1", "MOV SimpleName: defaults to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: defaults to MethodInvocation at 0", "INS SimpleName: INI_REALM_NAME to MethodInvocation at 2", "INS SimpleName: realm to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1"]}, {"root": "UPDATE from builder to autoApply", "operations": ["UPD SimpleName: builder from builder to autoApply"]}, {"root": "INS BooleanLiteral: false to Assignment: = at 1", "operations": ["INS BooleanLiteral: false to Assignment: = at 1"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation", "DEL SimpleName: config"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleName: Object", "DEL SimpleType: Object"]}, {"root": "DEL SimpleName: defaults", "operations": ["DEL SimpleName: defaults"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: ReflectionBuilder", "DEL SimpleName: ReflectionBuilder"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleName: Object", "DEL SimpleType: Object"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL StringLiteral: \" Realms were configured, but the underlying SecurityManager \"", "DEL StringLiteral: \"to apply any configured Realms.\"", "DEL StringLiteral: \"instance is not a \"", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL StringLiteral: \" instance.  This is required \""]}, {"root": "DEL SimpleName: applyRealmsToSecurityManager", "operations": ["DEL SimpleName: applyRealmsToSecurityManager"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL Block", "DEL Block"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: iniRealm", "DEL Assignment: ="]}, {"root": "DEL SimpleName: builder", "operations": ["DEL SimpleName: builder"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleType: Ini.Section", "DEL InfixExpression: !=", "DEL QualifiedName: Ini.Section", "DEL Block", "DEL SimpleName: Realm", "DEL SingleVariableDeclaration", "DEL SimpleType: Realm", "DEL IfStatement", "DEL SimpleName: iniRealm", "DEL ExpressionStatement", "DEL SimpleName: main", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: iniRealm", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: SuppressWarnings", "DEL MethodDeclaration", "DEL SingleMemberAnnotation", "DEL MethodInvocation", "DEL Block", "DEL StringLiteral: \"unchecked\"", "DEL ReturnStatement", "DEL ArrayInitializer"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: !=", "DEL NullLiteral", "DEL PrefixExpression: !", "DEL InfixExpression: &&", "DEL SimpleName: factoryRealms"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleName: Object", "DEL SimpleType: Object"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: SECURITY_MANAGER_NAME", "DEL VariableDeclarationStatement", "DEL SimpleName: securityManager", "DEL ParameterizedType: Map<String,Object>", "DEL CastExpression", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: objects", "DEL VariableDeclarationStatement", "DEL SimpleName: objects", "DEL SimpleName: get", "DEL SimpleName: buildMainInstances"]}]}}, {"IniSecurityManagerFactory_diff": {"operations": ["Move MethodDeclaration(179) into TypeDeclaration: class(979) at 13", "Move MethodDeclaration(611) into TypeDeclaration: class(979) at 14", "Insert FieldDeclaration(98) into TypeDeclaration: class(979) at 8", "Insert MethodDeclaration(159) into TypeDeclaration: class(979) at 12", "Insert MethodDeclaration(173) into TypeDeclaration: class(979) at 13", "Insert MethodDeclaration(331) into TypeDeclaration: class(979) at 17", "Insert MethodDeclaration(421) into TypeDeclaration: class(979) at 18", "Insert MethodDeclaration(478) into TypeDeclaration: class(979) at 20", "Insert MethodDeclaration(553) into TypeDeclaration: class(979) at 21", "Insert MethodDeclaration(591) into TypeDeclaration: class(979) at 22", "Insert MethodDeclaration(831) into TypeDeclaration: class(979) at 25", "Insert MethodDeclaration(860) into TypeDeclaration: class(979) at 26", "Insert Modifier: private(93) into FieldDeclaration(98) at 0", "Move SimpleType: ReflectionBuilder(320) into FieldDeclaration(98) at 1", "Move VariableDeclarationFragment(322) into FieldDeclaration(98) at 2", "Update Modifier: private(227) to public", "Move Modifier: private(227) into MethodDeclaration(159) at 0", "Update ParameterizedType: Map<String,Object>(234) to Map<String,?>", "Move ParameterizedType: Map<String,Object>(234) into MethodDeclaration(159) at 1", "Update SimpleName: buildMainInstances(235) to getBeans", "Move SimpleName: buildMainInstances(235) into MethodDeclaration(159) at 2", "Insert Block(158) into MethodDeclaration(159) at 3", "Insert Modifier: private(160) into MethodDeclaration(173) at 0", "Insert SimpleType: SecurityManager(162) into MethodDeclaration(173) at 1", "Insert SimpleName: getSecurityManagerBean(163) into MethodDeclaration(173) at 2", "Insert Block(172) into MethodDeclaration(173) at 3", "Update Modifier: protected(190) to private", "Move Modifier: protected(297) into MethodDeclaration(331) at 0", "Insert PrimitiveType: boolean(273) into MethodDeclaration(331) at 1", "Update SimpleName: buildInstances(305) to isAutoApplyRealms", "Move SimpleName: buildInstances(305) into MethodDeclaration(331) at 2", "Move SingleVariableDeclaration(318) into MethodDeclaration(331) at 3", "Insert Block(330) into MethodDeclaration(331) at 4", "Move SingleMemberAnnotation(726) into MethodDeclaration(421) at 0", "Insert Modifier: private(336) into MethodDeclaration(421) at 1", "Move SimpleType: SecurityManager(729) into MethodDeclaration(421) at 2", "Insert SimpleName: createSecurityManager(339) into MethodDeclaration(421) at 3", "Move SingleVariableDeclaration(734) into MethodDeclaration(421) at 4", "Move SingleVariableDeclaration(738) into MethodDeclaration(421) at 5", "Insert Block(420) into MethodDeclaration(421) at 6", "Update Modifier: protected(551) to private", "Insert SimpleName: initRealms(424) into MethodDeclaration(453) at 2", "Insert SingleVariableDeclaration(428) into MethodDeclaration(453) at 3", "Insert Block(452) into MethodDeclaration(453) at 4", "Insert Modifier: private(454) into MethodDeclaration(478) at 0", "Insert ParameterizedType: Collection<Realm>(459) into MethodDeclaration(478) at 1", "Insert SimpleName: getRealms(460) into MethodDeclaration(478) at 2", "Insert SingleVariableDeclaration(464) into MethodDeclaration(478) at 3", "Insert Block(477) into MethodDeclaration(478) at 4", "Move Modifier: protected(727) into MethodDeclaration(553) at 0", "Update ParameterizedType: Map<String,Object>(304) to Map<String,?>", "Move ParameterizedType: Map<String,Object>(304) into MethodDeclaration(553) at 1", "Update SimpleName: doCreateSecurityManager(730) to createDefaults", "Move SimpleName: doCreateSecurityManager(730) into MethodDeclaration(553) at 2", "Insert SingleVariableDeclaration(490) into MethodDeclaration(553) at 3", "Insert SingleVariableDeclaration(494) into MethodDeclaration(553) at 4", "Insert Block(552) into MethodDeclaration(553) at 5", "Insert Modifier: private(554) into MethodDeclaration(591) at 0", "Insert ParameterizedType: Map<String,?>(560) into MethodDeclaration(591) at 1", "Insert SimpleName: buildInstances(561) into MethodDeclaration(591) at 2", "Move SingleVariableDeclaration(309) into MethodDeclaration(591) at 3", "Insert SingleVariableDeclaration(573) into MethodDeclaration(591) at 4", "Insert Block(590) into MethodDeclaration(591) at 5", "Insert Modifier: private(787) into MethodDeclaration(831) at 0", "Insert PrimitiveType: void(788) into MethodDeclaration(831) at 1", "Insert SimpleName: assertRealmSecurityManager(789) into MethodDeclaration(831) at 2", "Move SingleVariableDeclaration(564) into MethodDeclaration(831) at 3", "Insert Block(830) into MethodDeclaration(831) at 4", "Insert Modifier: protected(832) into MethodDeclaration(860) at 0", "Insert PrimitiveType: void(833) into MethodDeclaration(860) at 1", "Insert SimpleName: applyRealmsToSecurityManager(834) into MethodDeclaration(860) at 2", "Move SingleVariableDeclaration(560) into MethodDeclaration(860) at 3", "Insert SingleVariableDeclaration(845) into MethodDeclaration(860) at 4", "Insert Block(859) into MethodDeclaration(860) at 5", "Insert ExpressionStatement(120) into Block(121) at 0", "Insert ConstructorInvocation(133) into Block(134) at 0", "Insert WildcardType: ?(141) into ParameterizedType: Map<String,?>(142) at 2", "Insert ReturnStatement(157) into Block(158) at 0", "Insert SimpleName: SecurityManager(161) into SimpleType: SecurityManager(162) at 0", "Move ReturnStatement(290) into Block(172) at 0", "Insert SimpleType: SecurityManager(276) into SingleVariableDeclaration(278) at 0", "Insert SimpleName: securityManager(277) into SingleVariableDeclaration(278) at 1", "Move VariableDeclarationStatement(323) into Block(330) at 0", "Insert IfStatement(327) into Block(330) at 1", "Insert ReturnStatement(329) into Block(330) at 2", "Insert VariableDeclarationStatement(360) into Block(420) at 0", "Insert VariableDeclarationStatement(373) into Block(420) at 1", "Insert VariableDeclarationStatement(380) into Block(420) at 2", "Insert VariableDeclarationStatement(387) into Block(420) at 3", "Insert IfStatement(413) into Block(420) at 4", "Insert ExpressionStatement(417) into Block(420) at 5", "Move ReturnStatement(806) into Block(420) at 6", "Insert SimpleType: SecurityManager(426) into SingleVariableDeclaration(428) at 0", "Insert SimpleName: securityManager(427) into SingleVariableDeclaration(428) at 1", "Move VariableDeclarationStatement(588) into Block(452) at 0", "Insert IfStatement(451) into Block(452) at 1", "Insert SimpleType: Collection(456) into ParameterizedType: Collection<Realm>(459) at 0", "Insert SimpleType: Realm(458) into ParameterizedType: Collection<Realm>(459) at 1", "Insert SimpleType: SecurityManager(462) into SingleVariableDeclaration(464) at 0", "Insert SimpleName: securityManager(463) into SingleVariableDeclaration(464) at 1", "Insert ExpressionStatement(468) into Block(477) at 0", "Insert ReturnStatement(476) into Block(477) at 1", "Insert WildcardType: ?(484) into ParameterizedType: Map<String,?>(485) at 2", "Insert SimpleType: Ini(488) into SingleVariableDeclaration(490) at 0", "Insert SimpleName: ini(489) into SingleVariableDeclaration(490) at 1", "Insert SimpleType: Ini.Section(492) into SingleVariableDeclaration(494) at 0", "Insert SimpleName: mainSection(493) into SingleVariableDeclaration(494) at 1", "Move VariableDeclarationStatement(261) into Block(552) at 0", "Move VariableDeclarationStatement(268) into Block(552) at 1", "Move ExpressionStatement(274) into Block(552) at 2", "Insert IfStatement(549) into Block(552) at 3", "Insert ReturnStatement(551) into Block(552) at 4", "Move SimpleType: Map(757) into ParameterizedType: Map<String,?>(560) at 0", "Move SimpleType: String(759) into ParameterizedType: Map<String,?>(560) at 1", "Insert WildcardType: ?(559) into ParameterizedType: Map<String,?>(560) at 2", "Insert ParameterizedType: Map<String,?>(571) into SingleVariableDeclaration(573) at 0", "Insert SimpleName: defaults(572) into SingleVariableDeclaration(573) at 1", "Move ExpressionStatement(341) into Block(590) at 0", "Insert ReturnStatement(589) into Block(590) at 1", "Insert ParameterizedType: Map<String,?>(648) into SingleVariableDeclaration(650) at 0", "Insert IfStatement(803) into Block(830) at 0", "Insert IfStatement(829) into Block(830) at 1", "Insert SimpleType: SecurityManager(843) into SingleVariableDeclaration(845) at 0", "Insert SimpleName: securityManager(844) into SingleVariableDeclaration(845) at 1", "Insert ExpressionStatement(849) into Block(859) at 0", "Move ExpressionStatement(604) into Block(859) at 1", "Update TextElement:  JavaDoc for detailed explaination of how an INI(97) to  JavaDoc for detailed explanation of how an INI", "Insert MethodInvocation(119) into ExpressionStatement(120) at 0", "Move MethodInvocation(125) into ConstructorInvocation(133) at 0", "Insert ConditionalExpression(156) into ReturnStatement(157) at 0", "Insert SimpleName: SecurityManager(275) into SimpleType: SecurityManager(276) at 0", "Insert PrimitiveType: boolean(279) into VariableDeclarationStatement(283) at 0", "Insert VariableDeclarationFragment(282) into VariableDeclarationStatement(283) at 1", "Insert InstanceofExpression(287) into IfStatement(327) at 0", "Insert Block(326) into IfStatement(327) at 1", "Insert SimpleName: autoApply(328) into ReturnStatement(329) at 0", "Update ParameterizedType: Map<String,Object>(316) to Map<String,?>", "Move ParameterizedType: Map<String,Object>(316) into VariableDeclarationStatement(360) at 0", "Insert VariableDeclarationFragment(359) into VariableDeclarationStatement(360) at 1", "Update ParameterizedType: Map<String,Object>(411) to Map<String,?>", "Move ParameterizedType: Map<String,Object>(411) into VariableDeclarationStatement(373) at 0", "Insert VariableDeclarationFragment(372) into VariableDeclarationStatement(373) at 1", "Move SimpleType: SecurityManager(771) into VariableDeclarationStatement(380) at 0", "Insert VariableDeclarationFragment(379) into VariableDeclarationStatement(380) at 1", "Insert PrimitiveType: boolean(381) into VariableDeclarationStatement(387) at 0", "Insert VariableDeclarationFragment(386) into VariableDeclarationStatement(387) at 1", "Insert SimpleName: autoApplyRealms(388) into IfStatement(413) at 0", "Insert Block(412) into IfStatement(413) at 1", "Insert MethodInvocation(416) into ExpressionStatement(417) at 0", "Insert SimpleName: SecurityManager(425) into SimpleType: SecurityManager(426) at 0", "Insert ParameterizedType: Collection<Realm>(433) into VariableDeclarationStatement(439) at 0", "Insert PrefixExpression: !(444) into IfStatement(451) at 0", "Insert Block(450) into IfStatement(451) at 1", "Insert SimpleName: Collection(455) into SimpleType: Collection(456) at 0", "Insert SimpleName: Realm(457) into SimpleType: Realm(458) at 0", "Insert SimpleName: SecurityManager(461) into SimpleType: SecurityManager(462) at 0", "Insert MethodInvocation(467) into ExpressionStatement(468) at 0", "Insert MethodInvocation(475) into ReturnStatement(476) at 0", "Insert SimpleName: Ini(487) into SimpleType: Ini(488) at 0", "Insert QualifiedName: Ini.Section(491) into SimpleType: Ini.Section(492) at 0", "Move MethodInvocation(747) into IfStatement(549) at 0", "Insert Block(548) into IfStatement(549) at 1", "Insert SimpleName: defaults(550) into ReturnStatement(551) at 0", "Update SimpleType: Object(761) to Map", "Move SimpleType: Object(761) into ParameterizedType: Map<String,?>(571) at 0", "Insert SimpleType: String(569) into ParameterizedType: Map<String,?>(571) at 1", "Insert WildcardType: ?(570) into ParameterizedType: Map<String,?>(571) at 2", "Insert MethodInvocation(588) into ReturnStatement(589) at 0", "Insert PrefixExpression: !(626) into IfStatement(633) at 0", "Insert SimpleType: Map(644) into ParameterizedType: Map<String,?>(648) at 0", "Insert SimpleType: String(646) into ParameterizedType: Map<String,?>(648) at 1", "Insert WildcardType: ?(647) into ParameterizedType: Map<String,?>(648) at 2", "Insert InfixExpression: ==(796) into IfStatement(803) at 0", "Insert Block(802) into IfStatement(803) at 1", "Move PrefixExpression: !(570) into IfStatement(829) at 0", "Insert Block(828) into IfStatement(829) at 1", "Insert SimpleName: SecurityManager(842) into SimpleType: SecurityManager(843) at 0", "Insert MethodInvocation(848) into ExpressionStatement(849) at 0", "Insert InfixExpression: &&(935) into ReturnStatement(936) at 0", "Insert SimpleName: setIni(117) into MethodInvocation(119) at 0", "Insert SimpleName: config(118) into MethodInvocation(119) at 1", "Insert InfixExpression: !=(148) into ConditionalExpression(156) at 0", "Insert MethodInvocation(154) into ConditionalExpression(156) at 1", "Insert NullLiteral(155) into ConditionalExpression(156) at 2", "Update SimpleName: buildInstances(286) to builder", "Update SimpleName: main(287) to getBean", "Update SimpleName: defaults(288) to SECURITY_MANAGER_NAME", "Insert TypeLiteral(169) into MethodInvocation(170) at 3", "Update SimpleName: doCreateSecurityManager(220) to createSecurityManager", "Insert SimpleName: autoApply(280) into VariableDeclarationFragment(282) at 0", "Insert BooleanLiteral: true(281) into VariableDeclarationFragment(282) at 1", "Insert SimpleName: securityManager(284) into InstanceofExpression(287) at 0", "Insert SimpleType: RealmSecurityManager(286) into InstanceofExpression(287) at 1", "Insert VariableDeclarationStatement(296) into Block(326) at 0", "Insert VariableDeclarationStatement(307) into Block(326) at 1", "Move IfStatement(343) into Block(326) at 2", "Insert WildcardType: ?(352) into ParameterizedType: Map<String,?>(353) at 2", "Insert SimpleName: defaults(354) into VariableDeclarationFragment(359) at 0", "Insert MethodInvocation(358) into VariableDeclarationFragment(359) at 1", "Insert WildcardType: ?(365) into ParameterizedType: Map<String,?>(366) at 2", "Insert SimpleName: objects(367) into VariableDeclarationFragment(372) at 0", "Insert MethodInvocation(371) into VariableDeclarationFragment(372) at 1", "Insert SimpleName: securityManager(376) into VariableDeclarationFragment(379) at 0", "Insert MethodInvocation(378) into VariableDeclarationFragment(379) at 1", "Insert SimpleName: autoApplyRealms(382) into VariableDeclarationFragment(386) at 0", "Insert MethodInvocation(385) into VariableDeclarationFragment(386) at 1", "Move VariableDeclarationStatement(792) into Block(412) at 0", "Move IfStatement(804) into Block(412) at 1", "Insert SimpleName: initRealms(414) into MethodInvocation(416) at 0", "Insert SimpleName: securityManager(415) into MethodInvocation(416) at 1", "Insert SimpleType: Collection(430) into ParameterizedType: Collection<Realm>(433) at 0", "Insert SimpleType: Realm(432) into ParameterizedType: Collection<Realm>(433) at 1", "Update SimpleName: msg(573) to realms", "Insert MethodInvocation(437) into VariableDeclarationFragment(438) at 1", "Insert MethodInvocation(443) into PrefixExpression: !(444) at 0", "Move ExpressionStatement(609) into Block(450) at 0", "Insert SimpleName: assertRealmSecurityManager(465) into MethodInvocation(467) at 0", "Insert SimpleName: securityManager(466) into MethodInvocation(467) at 1", "Insert ParenthesizedExpression(473) into MethodInvocation(475) at 0", "Insert SimpleName: getRealms(474) into MethodInvocation(475) at 1", "Move VariableDeclarationStatement(744) into Block(548) at 0", "Move IfStatement(755) into Block(548) at 1", "Update SimpleName: Object(760) to Map", "Insert SimpleName: String(568) into SimpleType: String(569) at 0", "Insert FieldAccess(576) into Assignment: =(581) at 0", "Insert FieldAccess(585) into MethodInvocation(588) at 0", "Update SimpleName: mainSection(765) to buildObjects", "Move SimpleName: mainSection(765) into MethodInvocation(588) at 1", "Update SimpleName: iniRealm(766) to section", "Move SimpleName: iniRealm(766) into MethodInvocation(588) at 2", "Move MethodInvocation(386) into PrefixExpression: !(626) at 0", "Insert SimpleName: Map(643) into SimpleType: Map(644) at 0", "Insert SimpleName: String(645) into SimpleType: String(646) at 0", "Update ParameterizedType: Map.Entry<String,Object>(434) to Map.Entry<String,?>", "Insert SimpleName: securityManager(794) into InfixExpression: ==(796) at 0", "Insert NullLiteral(795) into InfixExpression: ==(796) at 1", "Insert ThrowStatement(801) into Block(802) at 0", "Insert VariableDeclarationStatement(822) into Block(828) at 0", "Move ThrowStatement(593) into Block(828) at 1", "Insert SimpleName: assertRealmSecurityManager(846) into MethodInvocation(848) at 0", "Insert SimpleName: securityManager(847) into MethodInvocation(848) at 1", "Insert PrefixExpression: !(916) into InfixExpression: &&(935) at 0", "Insert ParenthesizedExpression(934) into InfixExpression: &&(935) at 1", "Insert FieldAccess(146) into InfixExpression: !=(148) at 0", "Move NullLiteral(276) into InfixExpression: !=(148) at 1", "Update SimpleName: defaults(278) to Collections", "Move SimpleName: defaults(278) into MethodInvocation(154) at 0", "Update SimpleName: put(279) to unmodifiableMap", "Move SimpleName: put(279) into MethodInvocation(154) at 1", "Insert MethodInvocation(153) into MethodInvocation(154) at 2", "Move SimpleType: SecurityManager(774) into TypeLiteral(169) at 0", "Insert SimpleName: RealmSecurityManager(285) into SimpleType: RealmSecurityManager(286) at 0", "Insert SimpleType: RealmSecurityManager(289) into VariableDeclarationStatement(296) at 0", "Insert VariableDeclarationFragment(295) into VariableDeclarationStatement(296) at 1", "Insert ParameterizedType: Collection<Realm>(301) into VariableDeclarationStatement(307) at 0", "Insert VariableDeclarationFragment(306) into VariableDeclarationStatement(307) at 1", "Insert PrefixExpression: !(312) into IfStatement(325) at 0", "Update SimpleName: builder(344) to createDefaults", "Move SimpleName: builder(344) into MethodInvocation(358) at 0", "Update SimpleName: buildObjects(345) to ini", "Move SimpleName: buildObjects(345) into MethodInvocation(358) at 1", "Update SimpleName: section(346) to mainSection", "Move SimpleName: section(346) into MethodInvocation(358) at 2", "Insert SimpleName: buildInstances(368) into MethodInvocation(371) at 0", "Insert SimpleName: mainSection(369) into MethodInvocation(371) at 1", "Insert SimpleName: defaults(370) into MethodInvocation(371) at 2", "Insert SimpleName: getSecurityManagerBean(377) into MethodInvocation(378) at 0", "Insert SimpleName: isAutoApplyRealms(383) into MethodInvocation(385) at 0", "Insert SimpleName: securityManager(384) into MethodInvocation(385) at 1", "Insert SimpleName: Collection(429) into SimpleType: Collection(430) at 0", "Insert SimpleName: Realm(431) into SimpleType: Realm(432) at 0", "Update SimpleName: realms(574) to getRealms", "Move SimpleName: realms(574) into MethodInvocation(437) at 0", "Update SimpleName: size(575) to securityManager", "Move SimpleName: size(575) into MethodInvocation(437) at 1", "Insert SimpleName: CollectionUtils(440) into MethodInvocation(443) at 0", "Insert SimpleName: isEmpty(441) into MethodInvocation(443) at 1", "Insert SimpleName: realms(442) into MethodInvocation(443) at 2", "Insert CastExpression(472) into ParenthesizedExpression(473) at 0", "Insert InfixExpression: !=(539) into IfStatement(547) at 0", "Insert ThisExpression(574) into FieldAccess(576) at 0", "Insert SimpleName: builder(575) into FieldAccess(576) at 1", "Insert ThisExpression(583) into FieldAccess(585) at 0", "Insert SimpleName: builder(584) into FieldAccess(585) at 1", "Update SimpleName: factoryRealms(384) to CollectionUtils", "Insert SimpleName: realms(624) into MethodInvocation(625) at 2", "Insert WildcardType: ?(669) into ParameterizedType: Map.Entry<String,?>(670) at 2", "Insert ClassInstanceCreation(800) into ThrowStatement(801) at 0", "Move SimpleType: String(572) into VariableDeclarationStatement(822) at 0", "Insert VariableDeclarationFragment(821) into VariableDeclarationStatement(822) at 1", "Insert MethodInvocation(915) into PrefixExpression: !(916) at 0", "Move InfixExpression: ||(679) into ParenthesizedExpression(934) at 0", "Insert ThisExpression(144) into FieldAccess(146) at 0", "Insert SimpleName: builder(145) into FieldAccess(146) at 1", "Update SimpleName: INI_REALM_NAME(280) to builder", "Move SimpleName: INI_REALM_NAME(280) into MethodInvocation(153) at 0", "Update SimpleName: iniRealm(281) to getObjects", "Move SimpleName: iniRealm(281) into MethodInvocation(153) at 1", "Insert SimpleName: RealmSecurityManager(288) into SimpleType: RealmSecurityManager(289) at 0", "Insert SimpleName: realmSecurityManager(290) into VariableDeclarationFragment(295) at 0", "Insert CastExpression(294) into VariableDeclarationFragment(295) at 1", "Insert SimpleType: Collection(298) into ParameterizedType: Collection<Realm>(301) at 0", "Insert SimpleType: Realm(300) into ParameterizedType: Collection<Realm>(301) at 1", "Insert SimpleName: realms(302) into VariableDeclarationFragment(306) at 0", "Insert MethodInvocation(305) into VariableDeclarationFragment(306) at 1", "Insert MethodInvocation(311) into PrefixExpression: !(312) at 0", "Insert ExpressionStatement(319) into Block(324) at 0", "Insert SimpleType: RealmSecurityManager(470) into CastExpression(472) at 0", "Insert SimpleName: securityManager(471) into CastExpression(472) at 1", "Update SimpleName: iniRealm(741) to realm", "Move MethodInvocation(751) into VariableDeclarationFragment(535) at 1", "Insert SimpleName: realm(537) into InfixExpression: !=(539) at 0", "Insert NullLiteral(538) into InfixExpression: !=(539) at 1", "Insert SimpleType: NullPointerException(798) into ClassInstanceCreation(800) at 0", "Insert StringLiteral: \"securityManager instance cannot be null\"(799) into ClassInstanceCreation(800) at 1", "Insert SimpleName: msg(812) into VariableDeclarationFragment(821) at 0", "Insert InfixExpression: +(820) into VariableDeclarationFragment(821) at 1", "Insert SimpleName: CollectionUtils(912) into MethodInvocation(915) at 0", "Insert SimpleName: isEmpty(913) into MethodInvocation(915) at 1", "Insert SimpleName: ini(914) into MethodInvocation(915) at 2", "Insert SimpleType: RealmSecurityManager(292) into CastExpression(294) at 0", "Insert SimpleName: securityManager(293) into CastExpression(294) at 1", "Insert SimpleName: Collection(297) into SimpleType: Collection(298) at 0", "Insert SimpleName: Realm(299) into SimpleType: Realm(300) at 0", "Insert SimpleName: realmSecurityManager(303) into MethodInvocation(305) at 0", "Insert SimpleName: getRealms(304) into MethodInvocation(305) at 1", "Move SimpleName: CollectionUtils(324) into MethodInvocation(311) at 0", "Move SimpleName: isEmpty(325) into MethodInvocation(311) at 1", "Update SimpleName: defaults(326) to realms", "Move SimpleName: defaults(326) into MethodInvocation(311) at 2", "Insert MethodInvocation(318) into ExpressionStatement(319) at 0", "Insert SimpleName: RealmSecurityManager(469) into SimpleType: RealmSecurityManager(470) at 0", "Insert MethodInvocation(544) into ExpressionStatement(545) at 0", "Insert SimpleName: NullPointerException(797) into SimpleType: NullPointerException(798) at 0", "Insert StringLiteral: \"securityManager instance is not a \"(813) into InfixExpression: +(820) at 0", "Move MethodInvocation(583) into InfixExpression: +(820) at 1", "Insert StringLiteral: \" instance.  This is required to access or configure realms on the instance.\"(819) into InfixExpression: +(820) at 2", "Insert SimpleName: RealmSecurityManager(291) into SimpleType: RealmSecurityManager(292) at 0", "Insert SimpleName: log(313) into MethodInvocation(318) at 0", "Insert SimpleName: info(314) into MethodInvocation(318) at 1", "Insert InfixExpression: +(317) into MethodInvocation(318) at 2", "Update SimpleName: builder(328) to autoApply", "Insert BooleanLiteral: false(321) into Assignment: =(322) at 1", "Insert SimpleName: defaults(540) into MethodInvocation(544) at 0", "Insert SimpleName: put(541) into MethodInvocation(544) at 1", "Insert SimpleName: INI_REALM_NAME(542) into MethodInvocation(544) at 2", "Insert SimpleName: realm(543) into MethodInvocation(544) at 3", "Insert StringLiteral: \"Realms have been explicitly set on the SecurityManager instance - auto-setting of \"(315) into InfixExpression: +(317) at 0", "Insert StringLiteral: \"realms will not occur.\"(316) into InfixExpression: +(317) at 1", "Delete SuperConstructorInvocation(103)", "Delete SimpleName: config(112)", "Delete SuperConstructorInvocation(113)", "Delete SuperConstructorInvocation(126)", "Delete SimpleName: Object(232)", "Delete SimpleType: Object(233)", "Delete SimpleName: defaults(317)", "Delete MethodInvocation(327)", "Delete SimpleName: ReflectionBuilder(329)", "Delete SimpleType: ReflectionBuilder(330)", "Delete ClassInstanceCreation(331)", "Delete Block(342)", "Delete SimpleName: Object(314)", "Delete SimpleType: Object(315)", "Delete SimpleName: Object(409)", "Delete SimpleType: Object(410)", "Delete MethodInvocation(576)", "Delete StringLiteral: \" Realms were configured, but the underlying SecurityManager \"(577)", "Delete StringLiteral: \"instance is not a \"(578)", "Delete StringLiteral: \" instance.  This is required \"(584)", "Delete StringLiteral: \"to apply any configured Realms.\"(585)", "Delete InfixExpression: +(586)", "Delete SimpleName: applyRealmsToSecurityManager(553)", "Delete Block(594)", "Delete IfStatement(595)", "Delete Block(610)", "Delete SimpleName: Object(302)", "Delete SimpleType: Object(303)", "Delete NullLiteral(742)", "Delete SimpleName: iniRealm(748)", "Delete Assignment: =(752)", "Delete SimpleName: builder(335)", "Delete QualifiedName: Ini.Section(236)", "Delete SimpleType: Ini.Section(237)", "Delete SimpleName: main(238)", "Delete SingleVariableDeclaration(239)", "Delete SimpleName: Realm(240)", "Delete SimpleType: Realm(241)", "Delete SimpleName: iniRealm(242)", "Delete SingleVariableDeclaration(243)", "Delete SimpleName: iniRealm(275)", "Delete InfixExpression: !=(277)", "Delete MethodInvocation(282)", "Delete ExpressionStatement(283)", "Delete Block(284)", "Delete IfStatement(285)", "Delete Block(291)", "Delete MethodDeclaration(292)", "Delete SimpleName: SuppressWarnings(293)", "Delete StringLiteral: \"unchecked\"(294)", "Delete ArrayInitializer(295)", "Delete SingleMemberAnnotation(296)", "Delete MethodInvocation(347)", "Delete ReturnStatement(348)", "Delete Block(349)", "Delete MethodDeclaration(350)", "Delete SimpleName: factoryRealms(381)", "Delete NullLiteral(382)", "Delete InfixExpression: !=(383)", "Delete PrefixExpression: !(387)", "Delete InfixExpression: &&(388)", "Delete SimpleName: Object(432)", "Delete SimpleType: Object(433)", "Delete ParameterizedType: Map<String,Object>(762)", "Delete SimpleName: objects(763)", "Delete SimpleName: buildMainInstances(764)", "Delete MethodInvocation(767)", "Delete VariableDeclarationFragment(768)", "Delete VariableDeclarationStatement(769)", "Delete SimpleName: securityManager(772)", "Delete SimpleName: objects(775)", "Delete SimpleName: get(776)", "Delete SimpleName: SECURITY_MANAGER_NAME(777)", "Delete MethodInvocation(778)", "Delete CastExpression(779)", "Delete VariableDeclarationFragment(780)", "Delete VariableDeclarationStatement(781)", "Delete Block(807)", "Delete MethodDeclaration(808)"]}}, {"ReflectionBuilder_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.shiro.util.CollectionUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: objects to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: id to SingleVariableDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: getBean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"].\" to InfixExpression: + at 4", "INS SimpleName: getName to MethodInvocation at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: T to ParameterizedType: Class<T> at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: getBean to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ThrowStatement to Block at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: requiredType to InfixExpression: == at 0", "INS SimpleName: id to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS StringLiteral: \"Bean with id [\" to InfixExpression: + at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS Modifier: private to MethodDeclaration at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS CastExpression to ReturnStatement at 0", "INS StringLiteral: \"requiredType argument cannot be null.\" to ClassInstanceCreation at 1", "INS SimpleName: bean to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: requiredType to MethodInvocation at 0", "INS SimpleName: getBean to MethodInvocation at 0", "INS SimpleName: bean to InfixExpression: == at 0", "INS StringLiteral: \"] is not of the required type [\" to InfixExpression: + at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: NullPointerException to SimpleType: NullPointerException at 0", "INS SimpleType: T to CastExpression at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: T to SimpleType: T at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: requiredType to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleType: T to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: requiredType to SingleVariableDeclaration at 1", "INS SimpleName: bean to VariableDeclarationFragment at 0", "INS SimpleName: T to TypeParameter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS StringLiteral: \"unchecked\" to ArrayInitializer at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS SimpleName: id to InfixExpression: + at 1", "INS ArrayInitializer to SingleMemberAnnotation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: Class<T> to SingleVariableDeclaration at 0", "INS NullLiteral to InfixExpression: == at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SimpleType: NullPointerException to ClassInstanceCreation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS IfStatement to Block at 2", "INS ThrowStatement to Block at 0", "INS SimpleName: bean to CastExpression at 1", "INS SimpleType: Class to ParameterizedType: Class<T> at 0", "INS Block to IfStatement at 1", "INS SimpleName: id to SingleVariableDeclaration at 1", "INS IfStatement to Block at 0", "INS IfStatement to Block at 3"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private"]}, {"root": "INS ParameterizedType: Map<String,?> to FieldDeclaration at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,?> to FieldDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2"]}, {"root": "INS ParameterizedType: Map<String,?> to MethodDeclaration at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to MethodDeclaration at 2", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 0", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS ArrayInitializer to SingleMemberAnnotation at 1", "INS StringLiteral: \"unchecked\" to ArrayInitializer at 0"]}, {"root": "INS ParameterizedType: Map<String,?> to MethodDeclaration at 2", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to MethodDeclaration at 2", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "operations": ["INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "INS ParameterizedType: Map<String,Object> to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS ParameterizedType: Map<String,Object> to SingleVariableDeclaration at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: objects to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleType: Object to ParameterizedType: LinkedHashMap<String,Object> at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ParameterizedType: LinkedHashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: defaults to ConditionalExpression at 2", "INS SimpleType: LinkedHashMap to ParameterizedType: LinkedHashMap<String,Object> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to ConditionalExpression at 1", "INS SimpleName: LinkedHashMap to SimpleType: LinkedHashMap at 0", "INS SimpleType: String to ParameterizedType: LinkedHashMap<String,Object> at 1", "INS SimpleName: Object to SimpleType: Object at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,?>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,?> at 0"]}, {"root": "INS SimpleName: Map to SimpleType: Map at 0", "operations": ["INS SimpleName: Map to SimpleType: Map at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS SimpleName: objects to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS SimpleName: CollectionUtils to MethodInvocation at 0", "INS SimpleName: LinkedHashMap to SimpleType: LinkedHashMap at 0", "INS SimpleType: String to ParameterizedType: LinkedHashMap<String,Object> at 1", "INS MethodInvocation to ConditionalExpression at 0", "INS ParameterizedType: LinkedHashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: objects to MethodInvocation at 2", "INS SimpleName: objects to ConditionalExpression at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Object to ParameterizedType: LinkedHashMap<String,Object> at 2", "INS SimpleType: LinkedHashMap to ParameterizedType: LinkedHashMap<String,Object> at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ConditionalExpression to Assignment: = at 1", "INS ClassInstanceCreation to ConditionalExpression at 1"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: Map to SimpleType: Map at 0"]}, {"root": "UPDATE from setObjects to CollectionUtils", "operations": ["UPD SimpleName: setObjects from setObjects to CollectionUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: setObjects to MethodInvocation at 0", "MOV SimpleName: defaults to MethodInvocation at 2"]}, {"root": "INS SimpleName: MAP_KEY_VALUE_DELIMITER to MethodInvocation at 3", "operations": ["INS SimpleName: MAP_KEY_VALUE_DELIMITER to MethodInvocation at 3"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,Object> to CastExpression at 0", "INS CastExpression to MethodInvocation at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: objects to CastExpression at 1", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1"]}, {"root": "MOVE from ParameterizedType: Map<String,Object>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,Object> at 0"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL SimpleName: SuppressWarnings", "DEL SingleMemberAnnotation", "DEL StringLiteral: \"unchecked\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: setObjects", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL ArrayInitializer", "DEL SingleMemberAnnotation", "DEL SimpleName: SuppressWarnings", "DEL StringLiteral: \"UnusedDeclaration\""]}, {"root": "DEL SimpleName: objects", "operations": ["DEL SimpleName: objects"]}, {"root": "DEL SimpleName: objects", "operations": ["DEL SimpleName: objects"]}, {"root": "DEL CharacterLiteral: ':'", "operations": ["DEL CharacterLiteral: ':'"]}]}}, {"ReflectionBuilder_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(1627) at 4", "Insert QualifiedName: org.apache.shiro.util.CollectionUtils(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(200) into TypeDeclaration: class(1626) at 13", "Insert MethodDeclaration(274) into TypeDeclaration: class(1626) at 14", "Update Modifier: protected(85) to private", "Insert ParameterizedType: Map<String,?>(90) into FieldDeclaration(93) at 1", "Insert ParameterizedType: Map<String,?>(148) into MethodDeclaration(153) at 1", "Insert Modifier: private(186) into MethodDeclaration(200) at 0", "Insert SimpleType: Object(188) into MethodDeclaration(200) at 1", "Insert SimpleName: getBean(189) into MethodDeclaration(200) at 2", "Insert SingleVariableDeclaration(193) into MethodDeclaration(200) at 3", "Insert Block(199) into MethodDeclaration(200) at 4", "Insert SingleMemberAnnotation(204) into MethodDeclaration(274) at 0", "Insert Modifier: private(205) into MethodDeclaration(274) at 1", "Insert TypeParameter(207) into MethodDeclaration(274) at 2", "Insert SimpleType: T(209) into MethodDeclaration(274) at 3", "Insert SimpleName: getBean(210) into MethodDeclaration(274) at 4", "Insert SingleVariableDeclaration(214) into MethodDeclaration(274) at 5", "Insert SingleVariableDeclaration(221) into MethodDeclaration(274) at 6", "Insert Block(273) into MethodDeclaration(274) at 7", "Insert SingleMemberAnnotation(278) into MethodDeclaration(453) at 0", "Insert ParameterizedType: Map<String,?>(285) into MethodDeclaration(453) at 2", "Move SimpleType: Map(87) into ParameterizedType: Map<String,?>(90) at 0", "Insert SimpleType: String(88) into ParameterizedType: Map<String,?>(90) at 1", "Insert WildcardType: ?(89) into ParameterizedType: Map<String,?>(90) at 2", "Insert ParameterizedType: Map<String,?>(118) into SingleVariableDeclaration(120) at 0", "Move SimpleType: Map(134) into ParameterizedType: Map<String,?>(148) at 0", "Insert SimpleType: String(146) into ParameterizedType: Map<String,?>(148) at 1", "Insert WildcardType: ?(147) into ParameterizedType: Map<String,?>(148) at 2", "Insert ParameterizedType: Map<String,?>(162) into SingleVariableDeclaration(164) at 0", "Insert SimpleName: Object(187) into SimpleType: Object(188) at 0", "Insert SimpleType: String(191) into SingleVariableDeclaration(193) at 0", "Insert SimpleName: id(192) into SingleVariableDeclaration(193) at 1", "Insert ReturnStatement(198) into Block(199) at 0", "Insert SimpleName: SuppressWarnings(201) into SingleMemberAnnotation(204) at 0", "Insert ArrayInitializer(203) into SingleMemberAnnotation(204) at 1", "Insert SimpleName: T(206) into TypeParameter(207) at 0", "Insert SimpleName: T(208) into SimpleType: T(209) at 0", "Insert SimpleType: String(212) into SingleVariableDeclaration(214) at 0", "Insert SimpleName: id(213) into SingleVariableDeclaration(214) at 1", "Insert ParameterizedType: Class<T>(219) into SingleVariableDeclaration(221) at 0", "Insert SimpleName: requiredType(220) into SingleVariableDeclaration(221) at 1", "Insert IfStatement(231) into Block(273) at 0", "Insert VariableDeclarationStatement(239) into Block(273) at 1", "Insert IfStatement(246) into Block(273) at 2", "Insert IfStatement(267) into Block(273) at 3", "Insert ReturnStatement(272) into Block(273) at 4", "Insert SimpleName: SuppressWarnings(275) into SingleMemberAnnotation(278) at 0", "Insert ArrayInitializer(277) into SingleMemberAnnotation(278) at 1", "Move SimpleType: Map(312) into ParameterizedType: Map<String,?>(285) at 0", "Insert SimpleType: String(283) into ParameterizedType: Map<String,?>(285) at 1", "Insert WildcardType: ?(284) into ParameterizedType: Map<String,?>(285) at 2", "Insert ParameterizedType: Map<String,Object>(463) into SingleVariableDeclaration(465) at 0", "Insert SimpleName: String(87) into SimpleType: String(88) at 0", "Insert Assignment: =(107) into ExpressionStatement(108) at 0", "Move SimpleType: Map(109) into ParameterizedType: Map<String,?>(118) at 0", "Insert SimpleType: String(116) into ParameterizedType: Map<String,?>(118) at 1", "Insert WildcardType: ?(117) into ParameterizedType: Map<String,?>(118) at 2", "Insert Assignment: =(138) into ExpressionStatement(139) at 0", "Insert SimpleName: String(145) into SimpleType: String(146) at 0", "Move SimpleType: Map(147) into ParameterizedType: Map<String,?>(162) at 0", "Insert SimpleType: String(160) into ParameterizedType: Map<String,?>(162) at 1", "Insert WildcardType: ?(161) into ParameterizedType: Map<String,?>(162) at 2", "Insert SimpleName: String(190) into SimpleType: String(191) at 0", "Insert MethodInvocation(197) into ReturnStatement(198) at 0", "Insert StringLiteral: \"unchecked\"(202) into ArrayInitializer(203) at 0", "Insert SimpleName: String(211) into SimpleType: String(212) at 0", "Insert SimpleType: Class(216) into ParameterizedType: Class<T>(219) at 0", "Insert SimpleType: T(218) into ParameterizedType: Class<T>(219) at 1", "Insert InfixExpression: ==(224) into IfStatement(231) at 0", "Insert Block(230) into IfStatement(231) at 1", "Insert SimpleType: Object(233) into VariableDeclarationStatement(239) at 0", "Insert VariableDeclarationFragment(238) into VariableDeclarationStatement(239) at 1", "Insert InfixExpression: ==(242) into IfStatement(246) at 0", "Insert Block(245) into IfStatement(246) at 1", "Insert PrefixExpression: !(253) into IfStatement(267) at 0", "Insert Block(266) into IfStatement(267) at 1", "Insert CastExpression(271) into ReturnStatement(272) at 0", "Insert StringLiteral: \"unchecked\"(276) into ArrayInitializer(277) at 0", "Insert SimpleName: Map(280) into SimpleType: Map(281) at 0", "Insert SimpleName: String(282) into SimpleType: String(283) at 0", "Insert SimpleType: Map(458) into ParameterizedType: Map<String,Object>(463) at 0", "Insert SimpleType: String(460) into ParameterizedType: Map<String,Object>(463) at 1", "Insert SimpleType: Object(462) into ParameterizedType: Map<String,Object>(463) at 2", "Insert FieldAccess(98) into Assignment: =(107) at 0", "Move ClassInstanceCreation(101) into Assignment: =(107) at 1", "Insert SimpleName: String(115) into SimpleType: String(116) at 0", "Move FieldAccess(139) into Assignment: =(138) at 0", "Insert ConditionalExpression(137) into Assignment: =(138) at 1", "Insert SimpleName: String(159) into SimpleType: String(160) at 0", "Insert FieldAccess(167) into Assignment: =(182) at 0", "Insert ConditionalExpression(181) into Assignment: =(182) at 1", "Insert SimpleName: objects(194) into MethodInvocation(197) at 0", "Insert SimpleName: get(195) into MethodInvocation(197) at 1", "Insert SimpleName: id(196) into MethodInvocation(197) at 2", "Insert SimpleName: Class(215) into SimpleType: Class(216) at 0", "Insert SimpleName: T(217) into SimpleType: T(218) at 0", "Insert SimpleName: requiredType(222) into InfixExpression: ==(224) at 0", "Insert NullLiteral(223) into InfixExpression: ==(224) at 1", "Insert ThrowStatement(229) into Block(230) at 0", "Insert SimpleName: Object(232) into SimpleType: Object(233) at 0", "Insert SimpleName: bean(234) into VariableDeclarationFragment(238) at 0", "Insert MethodInvocation(237) into VariableDeclarationFragment(238) at 1", "Insert SimpleName: bean(240) into InfixExpression: ==(242) at 0", "Insert NullLiteral(241) into InfixExpression: ==(242) at 1", "Insert ReturnStatement(244) into Block(245) at 0", "Insert MethodInvocation(252) into PrefixExpression: !(253) at 0", "Insert ThrowStatement(265) into Block(266) at 0", "Insert SimpleType: T(269) into CastExpression(271) at 0", "Insert SimpleName: bean(270) into CastExpression(271) at 1", "Move SimpleName: Map(311) into SimpleType: Map(458) at 0", "Insert SimpleName: String(459) into SimpleType: String(460) at 0", "Insert SimpleName: Object(461) into SimpleType: Object(462) at 0", "Insert ThisExpression(96) into FieldAccess(98) at 0", "Insert SimpleName: objects(97) into FieldAccess(98) at 1", "Insert MethodInvocation(127) into ConditionalExpression(137) at 0", "Insert ClassInstanceCreation(135) into ConditionalExpression(137) at 1", "Insert SimpleName: defaults(136) into ConditionalExpression(137) at 2", "Insert ThisExpression(165) into FieldAccess(167) at 0", "Insert SimpleName: objects(166) into FieldAccess(167) at 1", "Insert MethodInvocation(171) into ConditionalExpression(181) at 0", "Insert ClassInstanceCreation(179) into ConditionalExpression(181) at 1", "Insert SimpleName: objects(180) into ConditionalExpression(181) at 2", "Insert ClassInstanceCreation(228) into ThrowStatement(229) at 0", "Insert SimpleName: getBean(235) into MethodInvocation(237) at 0", "Insert SimpleName: id(236) into MethodInvocation(237) at 1", "Insert NullLiteral(243) into ReturnStatement(244) at 0", "Insert SimpleName: requiredType(247) into MethodInvocation(252) at 0", "Insert SimpleName: isAssignableFrom(248) into MethodInvocation(252) at 1", "Insert MethodInvocation(251) into MethodInvocation(252) at 2", "Insert ClassInstanceCreation(264) into ThrowStatement(265) at 0", "Insert SimpleName: T(268) into SimpleType: T(269) at 0", "Update SimpleName: setObjects(112) to CollectionUtils", "Move SimpleName: setObjects(112) into MethodInvocation(127) at 0", "Insert SimpleName: isEmpty(125) into MethodInvocation(127) at 1", "Move SimpleName: defaults(113) into MethodInvocation(127) at 2", "Insert ParameterizedType: LinkedHashMap<String,Object>(134) into ClassInstanceCreation(135) at 0", "Insert SimpleName: CollectionUtils(168) into MethodInvocation(171) at 0", "Insert SimpleName: isEmpty(169) into MethodInvocation(171) at 1", "Insert SimpleName: objects(170) into MethodInvocation(171) at 2", "Insert ParameterizedType: LinkedHashMap<String,Object>(178) into ClassInstanceCreation(179) at 0", "Insert SimpleType: NullPointerException(226) into ClassInstanceCreation(228) at 0", "Insert StringLiteral: \"requiredType argument cannot be null.\"(227) into ClassInstanceCreation(228) at 1", "Insert SimpleName: bean(249) into MethodInvocation(251) at 0", "Insert SimpleName: getClass(250) into MethodInvocation(251) at 1", "Insert SimpleType: IllegalStateException(255) into ClassInstanceCreation(264) at 0", "Insert InfixExpression: +(263) into ClassInstanceCreation(264) at 1", "Insert SimpleType: LinkedHashMap(129) into ParameterizedType: LinkedHashMap<String,Object>(134) at 0", "Insert SimpleType: String(131) into ParameterizedType: LinkedHashMap<String,Object>(134) at 1", "Insert SimpleType: Object(133) into ParameterizedType: LinkedHashMap<String,Object>(134) at 2", "Insert SimpleType: LinkedHashMap(173) into ParameterizedType: LinkedHashMap<String,Object>(178) at 0", "Insert SimpleType: String(175) into ParameterizedType: LinkedHashMap<String,Object>(178) at 1", "Insert SimpleType: Object(177) into ParameterizedType: LinkedHashMap<String,Object>(178) at 2", "Insert SimpleName: NullPointerException(225) into SimpleType: NullPointerException(226) at 0", "Insert SimpleName: IllegalStateException(254) into SimpleType: IllegalStateException(255) at 0", "Insert StringLiteral: \"Bean with id [\"(256) into InfixExpression: +(263) at 0", "Insert SimpleName: id(257) into InfixExpression: +(263) at 1", "Insert StringLiteral: \"] is not of the required type [\"(258) into InfixExpression: +(263) at 2", "Insert MethodInvocation(261) into InfixExpression: +(263) at 3", "Insert StringLiteral: \"].\"(262) into InfixExpression: +(263) at 4", "Insert SimpleName: MAP_KEY_VALUE_DELIMITER(1354) into MethodInvocation(1355) at 3", "Insert SimpleName: LinkedHashMap(128) into SimpleType: LinkedHashMap(129) at 0", "Insert SimpleName: String(130) into SimpleType: String(131) at 0", "Insert SimpleName: Object(132) into SimpleType: Object(133) at 0", "Insert SimpleName: LinkedHashMap(172) into SimpleType: LinkedHashMap(173) at 0", "Insert SimpleName: String(174) into SimpleType: String(175) at 0", "Insert SimpleName: Object(176) into SimpleType: Object(177) at 0", "Insert SimpleName: requiredType(259) into MethodInvocation(261) at 0", "Insert SimpleName: getName(260) into MethodInvocation(261) at 1", "Insert CastExpression(413) into MethodInvocation(420) at 1", "Insert ParameterizedType: Map<String,Object>(411) into CastExpression(413) at 0", "Insert SimpleName: objects(412) into CastExpression(413) at 1", "Move SimpleType: Map(124) into ParameterizedType: Map<String,Object>(411) at 0", "Insert SimpleType: String(408) into ParameterizedType: Map<String,Object>(411) at 1", "Insert SimpleType: Object(410) into ParameterizedType: Map<String,Object>(411) at 2", "Insert SimpleName: String(407) into SimpleType: String(408) at 0", "Insert SimpleName: Object(409) into SimpleType: Object(410) at 0", "Delete SimpleName: SuppressWarnings(31)", "Delete StringLiteral: \"unchecked\"(32)", "Delete SingleMemberAnnotation(33)", "Delete SimpleName: setObjects(93)", "Delete MethodInvocation(102)", "Delete MethodInvocation(114)", "Delete SimpleName: SuppressWarnings(118)", "Delete StringLiteral: \"UnusedDeclaration\"(119)", "Delete ArrayInitializer(120)", "Delete SingleMemberAnnotation(121)", "Delete SimpleName: objects(140)", "Delete SimpleName: objects(267)", "Delete CharacterLiteral: ':'(1203)"]}}, {"IniFilterChainResolverFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: java.util.LinkedHashMap to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.shiro.config.ConfigurationException to org.apache.shiro.config.IniSecurityManagerFactory", "operations": ["UPD QualifiedName: org.apache.shiro.config.ConfigurationException from org.apache.shiro.config.ConfigurationException to org.apache.shiro.config.IniSecurityManagerFactory"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS Modifier: private to FieldDeclaration at 0", "INS ParameterizedType: Map<String,?> to FieldDeclaration at 1", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS SimpleName: defaultBeans to VariableDeclarationFragment at 0", "INS SimpleName: Map to SimpleType: Map at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: ini to ConstructorInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: IniFilterChainResolverFactory to MethodDeclaration at 1", "INS SimpleName: defaultBeans to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Ini to SingleVariableDeclaration at 0", "INS SimpleName: ini to SingleVariableDeclaration at 1", "INS SimpleName: defaultBeans to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: Ini to SimpleType: Ini at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "INS SimpleName: defaultBeans to FieldAccess at 1", "INS ExpressionStatement to Block at 1", "INS ConstructorInvocation to Block at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: defaultBeans to FieldAccess at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ParameterizedType: LinkedHashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: CollectionUtils to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: LinkedHashMap<String,Object> at 1", "INS SimpleName: msg to MethodInvocation at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS StringLiteral: \"move all object configuration (filters and all other objects) to the [{}] section immediately.\" to InfixExpression: + at 1", "INS IfStatement to Block at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: putAll to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: msg to VariableDeclarationFragment at 0", "INS SimpleName: section to MethodInvocation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 5", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: defaults to VariableDeclarationFragment at 0", "INS QualifiedName: IniSecurityManagerFactory.MAIN_SECTION_NAME to MethodInvocation at 4", "INS SimpleName: defaultBeans to FieldAccess at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: FILTERS to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"The [{}] section is being removed in the upcoming releae!  Please immediately \" to InfixExpression: + at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: getFilters to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: defaults to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: CollectionUtils to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: defaultFilters to MethodInvocation at 2", "INS SimpleName: CollectionUtils to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: defaultFilters to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: filters to VariableDeclarationFragment at 0", "INS IfStatement to Block at 1", "INS SimpleName: defaults to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: section to MethodInvocation at 2", "INS SimpleName: defaults to MethodInvocation at 2", "INS SimpleType: LinkedHashMap to ParameterizedType: LinkedHashMap<String,Object> at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS SimpleName: LinkedHashMap to SimpleType: LinkedHashMap at 0", "INS Block to IfStatement at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private"]}, {"root": "INS ParameterizedType: Map<String,Filter> to MethodDeclaration at 1", "operations": ["INS SimpleName: Map to SimpleType: Map at 0", "INS ParameterizedType: Map<String,Filter> to MethodDeclaration at 1", "INS SimpleName: Filter to SimpleType: Filter at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Filter> at 0", "INS SimpleType: Filter to ParameterizedType: Map<String,Filter> at 2", "INS SimpleType: String to ParameterizedType: Map<String,Filter> at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from assertFilters to extractFilters", "operations": ["UPD SimpleName: assertFilters from assertFilters to extractFilters", "UPD SimpleName: assertFilters from assertFilters to extractFilters"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: objects to SingleVariableDeclaration at 1", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 7", "MOV ExpressionStatement to Block at 9", "MOV ExpressionStatement to Block at 8"]}, {"root": "UPDATE from map to defaults", "operations": ["UPD SimpleName: map from map to defaults", "UPD SimpleName: defaultFilters from defaultFilters to defaults"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS NullLiteral to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: filterMap to VariableDeclarationFragment at 0", "INS SimpleType: Filter to ParameterizedType: LinkedHashMap<String,Filter> at 2", "INS SimpleType: LinkedHashMap to ParameterizedType: LinkedHashMap<String,Filter> at 0", "INS SimpleName: Filter to SimpleType: Filter at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParameterizedType: LinkedHashMap<String,Filter> to ClassInstanceCreation at 0", "INS SimpleName: LinkedHashMap to SimpleType: LinkedHashMap at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3", "INS SimpleName: filterMap to ReturnStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Filter> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Filter> to VariableDeclarationStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Filter> to VariableDeclarationStatement at 0"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS IfStatement to Block at 2", "INS Block to EnhancedForStatement at 2", "INS Block to IfStatement at 1"]}, {"root": "INS SimpleName: defaultFilters to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: defaultFilters to VariableDeclarationFragment at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isEmpty to MethodInvocation at 1", "MOV SimpleName: map to MethodInvocation at 2", "MOV SimpleName: CollectionUtils to MethodInvocation at 0"]}, {"root": "UPDATE from map to objects", "operations": ["UPD SimpleName: map from map to objects", "UPD SimpleName: map from map to objects"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ReflectionBuilder to VariableDeclarationStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: filters to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from ParameterizedType: LinkedHashMap<String,Object>", "operations": ["MOV SimpleType: Object to ParameterizedType: LinkedHashMap<String,Object> at 2"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: extractFilters to MethodInvocation at 0", "INS SimpleName: defaults to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: LinkedHashMap<String,Filter>", "operations": ["MOV SimpleType: String to ParameterizedType: LinkedHashMap<String,Filter> at 1"]}, {"root": "UPDATE from o to value", "operations": ["UPD SimpleName: o from o to value"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ReflectionBuilder to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: assertFilters to MethodInvocation at 0", "MOV SimpleName: built to MethodInvocation at 1"]}, {"root": "UPDATE from assertFilter to filterMap", "operations": ["UPD SimpleName: assertFilter from assertFilter to filterMap"]}, {"root": "INS SimpleName: put to MethodInvocation at 1", "operations": ["INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS CastExpression to MethodInvocation at 3", "operations": ["INS SimpleName: value to CastExpression at 1", "INS CastExpression to MethodInvocation at 3"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: Filter to CastExpression at 0"]}, {"root": "DEL SimpleName: filters", "operations": ["DEL SimpleName: filters"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: section", "DEL SimpleName: getFilters"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL ArrayInitializer", "DEL SingleMemberAnnotation", "DEL SimpleName: SuppressWarnings"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: defaultFilters"]}, {"root": "DEL SimpleName: defaultFilters", "operations": ["DEL SimpleName: defaultFilters"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: built", "DEL CastExpression"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: value", "operations": ["DEL SimpleName: value"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL PrefixExpression: !", "DEL MethodInvocation", "DEL IfStatement", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: o", "DEL ParenthesizedExpression", "DEL InfixExpression: +", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: FILTERS", "DEL ClassInstanceCreation", "DEL StringLiteral: \"] section specified a filter named '\"", "DEL StringLiteral: \"implement the \"", "DEL SimpleName: name", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Modifier: protected", "DEL MethodInvocation", "DEL StringLiteral: \" interface.  Only Filter implementations may be \"", "DEL StringLiteral: \"', which does not \"", "DEL SimpleName: ConfigurationException", "DEL SimpleName: msg", "DEL PrimitiveType: void", "DEL SimpleName: msg", "DEL StringLiteral: \"defined.\"", "DEL TypeLiteral", "DEL Block", "DEL SimpleType: ConfigurationException", "DEL SimpleName: ConfigurationException", "DEL IfStatement", "DEL SimpleName: name", "DEL PrefixExpression: !", "DEL StringLiteral: \"[\"", "DEL SimpleName: getName", "DEL SimpleName: assertFilter", "DEL SimpleType: ConfigurationException", "DEL SingleVariableDeclaration", "DEL ThrowStatement"]}]}}, {"IniFilterChainResolverFactory_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(700) at 4", "Insert ImportDeclaration(29) into CompilationUnit(700) at 14", "Update QualifiedName: org.apache.shiro.config.ConfigurationException(2) to org.apache.shiro.config.IniSecurityManagerFactory", "Insert QualifiedName: java.util.LinkedHashMap(28) into ImportDeclaration(29) at 0", "Insert FieldDeclaration(103) into TypeDeclaration: class(699) at 8", "Insert MethodDeclaration(142) into TypeDeclaration: class(699) at 11", "Insert Modifier: private(94) into FieldDeclaration(103) at 0", "Insert ParameterizedType: Map<String,?>(100) into FieldDeclaration(103) at 1", "Insert VariableDeclarationFragment(102) into FieldDeclaration(103) at 2", "Insert Modifier: public(119) into MethodDeclaration(142) at 0", "Insert SimpleName: IniFilterChainResolverFactory(120) into MethodDeclaration(142) at 1", "Insert SingleVariableDeclaration(124) into MethodDeclaration(142) at 2", "Insert SingleVariableDeclaration(132) into MethodDeclaration(142) at 3", "Insert Block(141) into MethodDeclaration(142) at 4", "Insert Block(373) into MethodDeclaration(374) at 5", "Move SingleVariableDeclaration(431) into MethodDeclaration(526) at 5", "Update Modifier: protected(421) to private", "Insert ParameterizedType: Map<String,Filter>(534) into MethodDeclaration(617) at 1", "Update SimpleName: assertFilters(423) to extractFilters", "Insert SingleVariableDeclaration(543) into MethodDeclaration(617) at 3", "Insert SimpleType: Map(96) into ParameterizedType: Map<String,?>(100) at 0", "Insert SimpleType: String(98) into ParameterizedType: Map<String,?>(100) at 1", "Insert WildcardType: ?(99) into ParameterizedType: Map<String,?>(100) at 2", "Insert SimpleName: defaultBeans(101) into VariableDeclarationFragment(102) at 0", "Insert SimpleType: Ini(122) into SingleVariableDeclaration(124) at 0", "Insert SimpleName: ini(123) into SingleVariableDeclaration(124) at 1", "Insert ParameterizedType: Map<String,?>(130) into SingleVariableDeclaration(132) at 0", "Insert SimpleName: defaultBeans(131) into SingleVariableDeclaration(132) at 1", "Insert ConstructorInvocation(134) into Block(141) at 0", "Insert ExpressionStatement(140) into Block(141) at 1", "Move VariableDeclarationStatement(224) into Block(373) at 0", "Insert IfStatement(282) into Block(373) at 1", "Insert VariableDeclarationStatement(300) into Block(373) at 2", "Move VariableDeclarationStatement(240) into Block(373) at 3", "Insert IfStatement(325) into Block(373) at 4", "Insert IfStatement(341) into Block(373) at 5", "Insert VariableDeclarationStatement(355) into Block(373) at 6", "Move ExpressionStatement(245) into Block(373) at 7", "Move ExpressionStatement(252) into Block(373) at 8", "Move ExpressionStatement(257) into Block(373) at 9", "Update SimpleName: map(430) to defaults", "Insert SimpleType: Map(529) into ParameterizedType: Map<String,Filter>(534) at 0", "Insert SimpleType: String(531) into ParameterizedType: Map<String,Filter>(534) at 1", "Insert SimpleType: Filter(533) into ParameterizedType: Map<String,Filter>(534) at 2", "Insert ParameterizedType: Map<String,?>(541) into SingleVariableDeclaration(543) at 0", "Insert SimpleName: objects(542) into SingleVariableDeclaration(543) at 1", "Insert IfStatement(551) into Block(616) at 0", "Insert VariableDeclarationStatement(569) into Block(616) at 1", "Move EnhancedForStatement(470) into Block(616) at 2", "Insert ReturnStatement(615) into Block(616) at 3", "Insert SimpleName: Map(95) into SimpleType: Map(96) at 0", "Insert SimpleName: String(97) into SimpleType: String(98) at 0", "Insert SimpleName: Ini(121) into SimpleType: Ini(122) at 0", "Insert SimpleType: Map(126) into ParameterizedType: Map<String,?>(130) at 0", "Insert SimpleType: String(128) into ParameterizedType: Map<String,?>(130) at 1", "Insert WildcardType: ?(129) into ParameterizedType: Map<String,?>(130) at 2", "Insert SimpleName: ini(133) into ConstructorInvocation(134) at 0", "Insert Assignment: =(139) into ExpressionStatement(140) at 0", "Insert PrefixExpression: !(265) into IfStatement(282) at 0", "Insert Block(281) into IfStatement(282) at 1", "Insert ParameterizedType: Map<String,Object>(289) into VariableDeclarationStatement(300) at 0", "Insert VariableDeclarationFragment(299) into VariableDeclarationStatement(300) at 1", "Insert PrefixExpression: !(318) into IfStatement(325) at 0", "Insert Block(324) into IfStatement(325) at 1", "Insert PrefixExpression: !(332) into IfStatement(341) at 0", "Insert Block(340) into IfStatement(341) at 1", "Move ParameterizedType: Map<String,Filter>(358) into VariableDeclarationStatement(355) at 0", "Insert VariableDeclarationFragment(354) into VariableDeclarationStatement(355) at 1", "Move ParameterizedType: Map<String,Filter>(410) into VariableDeclarationStatement(480) at 0", "Insert Block(514) into IfStatement(522) at 1", "Insert Block(521) into IfStatement(522) at 2", "Insert SimpleName: Map(528) into SimpleType: Map(529) at 0", "Insert SimpleName: String(530) into SimpleType: String(531) at 0", "Insert SimpleName: Filter(532) into SimpleType: Filter(533) at 0", "Insert SimpleType: Map(537) into ParameterizedType: Map<String,?>(541) at 0", "Insert SimpleType: String(539) into ParameterizedType: Map<String,?>(541) at 1", "Insert WildcardType: ?(540) into ParameterizedType: Map<String,?>(541) at 2", "Insert MethodInvocation(547) into IfStatement(551) at 0", "Insert Block(550) into IfStatement(551) at 1", "Move ParameterizedType: Map<String,Filter>(367) into VariableDeclarationStatement(569) at 0", "Insert VariableDeclarationFragment(568) into VariableDeclarationStatement(569) at 1", "Insert Block(612) into EnhancedForStatement(613) at 2", "Insert SimpleName: filterMap(614) into ReturnStatement(615) at 0", "Insert SimpleName: Map(125) into SimpleType: Map(126) at 0", "Insert SimpleName: String(127) into SimpleType: String(128) at 0", "Insert FieldAccess(137) into Assignment: =(139) at 0", "Insert SimpleName: defaultBeans(138) into Assignment: =(139) at 1", "Insert MethodInvocation(264) into PrefixExpression: !(265) at 0", "Insert VariableDeclarationStatement(273) into Block(281) at 0", "Insert ExpressionStatement(280) into Block(281) at 1", "Insert SimpleType: Map(284) into ParameterizedType: Map<String,Object>(289) at 0", "Insert SimpleType: String(286) into ParameterizedType: Map<String,Object>(289) at 1", "Insert SimpleType: Object(288) into ParameterizedType: Map<String,Object>(289) at 2", "Insert SimpleName: defaults(290) into VariableDeclarationFragment(299) at 0", "Insert ClassInstanceCreation(298) into VariableDeclarationFragment(299) at 1", "Insert SimpleName: defaultFilters(308) into VariableDeclarationFragment(312) at 0", "Move MethodInvocation(237) into VariableDeclarationFragment(312) at 1", "Insert MethodInvocation(317) into PrefixExpression: !(318) at 0", "Insert ExpressionStatement(323) into Block(324) at 0", "Insert MethodInvocation(331) into PrefixExpression: !(332) at 0", "Insert ExpressionStatement(339) into Block(340) at 0", "Insert SimpleName: filters(349) into VariableDeclarationFragment(354) at 0", "Insert MethodInvocation(353) into VariableDeclarationFragment(354) at 1", "Move VariableDeclarationStatement(385) into Block(514) at 0", "Move VariableDeclarationStatement(398) into Block(514) at 1", "Move ExpressionStatement(402) into Block(514) at 2", "Move ExpressionStatement(414) into Block(521) at 0", "Insert SimpleName: Map(536) into SimpleType: Map(537) at 0", "Insert SimpleName: String(538) into SimpleType: String(539) at 0", "Move SimpleName: CollectionUtils(432) into MethodInvocation(547) at 0", "Move SimpleName: isEmpty(433) into MethodInvocation(547) at 1", "Update SimpleName: map(434) to objects", "Move SimpleName: map(434) into MethodInvocation(547) at 2", "Insert ReturnStatement(549) into Block(550) at 0", "Insert SimpleName: filterMap(559) into VariableDeclarationFragment(568) at 0", "Insert ClassInstanceCreation(567) into VariableDeclarationFragment(568) at 1", "Update SimpleName: map(445) to objects", "Move VariableDeclarationStatement(455) into Block(612) at 0", "Move VariableDeclarationStatement(463) into Block(612) at 1", "Insert IfStatement(611) into Block(612) at 2", "Insert ThisExpression(135) into FieldAccess(137) at 0", "Insert SimpleName: defaultBeans(136) into FieldAccess(137) at 1", "Insert SimpleName: CollectionUtils(261) into MethodInvocation(264) at 0", "Insert SimpleName: isEmpty(262) into MethodInvocation(264) at 1", "Insert SimpleName: section(263) into MethodInvocation(264) at 2", "Move SimpleType: String(479) into VariableDeclarationStatement(273) at 0", "Insert VariableDeclarationFragment(272) into VariableDeclarationStatement(273) at 1", "Insert MethodInvocation(279) into ExpressionStatement(280) at 0", "Insert SimpleName: Map(283) into SimpleType: Map(284) at 0", "Insert SimpleName: String(285) into SimpleType: String(286) at 0", "Insert SimpleName: Object(287) into SimpleType: Object(288) at 0", "Insert ParameterizedType: LinkedHashMap<String,Object>(297) into ClassInstanceCreation(298) at 0", "Insert SimpleName: CollectionUtils(314) into MethodInvocation(317) at 0", "Insert SimpleName: isEmpty(315) into MethodInvocation(317) at 1", "Insert SimpleName: defaultFilters(316) into MethodInvocation(317) at 2", "Insert MethodInvocation(322) into ExpressionStatement(323) at 0", "Insert SimpleName: CollectionUtils(326) into MethodInvocation(331) at 0", "Insert SimpleName: isEmpty(327) into MethodInvocation(331) at 1", "Insert FieldAccess(330) into MethodInvocation(331) at 2", "Insert MethodInvocation(338) into ExpressionStatement(339) at 0", "Insert SimpleName: getFilters(350) into MethodInvocation(353) at 0", "Insert SimpleName: section(351) into MethodInvocation(353) at 1", "Insert SimpleName: defaults(352) into MethodInvocation(353) at 2", "Move SimpleType: ReflectionBuilder(381) into VariableDeclarationStatement(494) at 0", "Insert Assignment: =(512) into ExpressionStatement(513) at 0", "Insert NullLiteral(548) into ReturnStatement(549) at 0", "Insert ParameterizedType: LinkedHashMap<String,Filter>(566) into ClassInstanceCreation(567) at 0", "Move InstanceofExpression(491) into IfStatement(611) at 0", "Insert Block(610) into IfStatement(611) at 1", "Insert SimpleName: msg(268) into VariableDeclarationFragment(272) at 0", "Insert InfixExpression: +(271) into VariableDeclarationFragment(272) at 1", "Insert SimpleName: log(274) into MethodInvocation(279) at 0", "Insert SimpleName: warn(275) into MethodInvocation(279) at 1", "Insert SimpleName: msg(276) into MethodInvocation(279) at 2", "Insert SimpleName: FILTERS(277) into MethodInvocation(279) at 3", "Insert QualifiedName: IniSecurityManagerFactory.MAIN_SECTION_NAME(278) into MethodInvocation(279) at 4", "Insert SimpleType: LinkedHashMap(292) into ParameterizedType: LinkedHashMap<String,Object>(297) at 0", "Insert SimpleType: String(294) into ParameterizedType: LinkedHashMap<String,Object>(297) at 1", "Move SimpleType: Object(483) into ParameterizedType: LinkedHashMap<String,Object>(297) at 2", "Insert SimpleName: defaults(319) into MethodInvocation(322) at 0", "Insert SimpleName: putAll(320) into MethodInvocation(322) at 1", "Insert SimpleName: defaultFilters(321) into MethodInvocation(322) at 2", "Insert ThisExpression(328) into FieldAccess(330) at 0", "Insert SimpleName: defaultBeans(329) into FieldAccess(330) at 1", "Insert SimpleName: defaults(333) into MethodInvocation(338) at 0", "Insert SimpleName: putAll(334) into MethodInvocation(338) at 1", "Insert FieldAccess(337) into MethodInvocation(338) at 2", "Insert SimpleName: filters(508) into Assignment: =(512) at 0", "Insert MethodInvocation(511) into Assignment: =(512) at 1", "Insert MethodInvocation(518) into Assignment: =(519) at 1", "Insert SimpleType: LinkedHashMap(561) into ParameterizedType: LinkedHashMap<String,Filter>(566) at 0", "Move SimpleType: String(495) into ParameterizedType: LinkedHashMap<String,Filter>(566) at 1", "Insert SimpleType: Filter(565) into ParameterizedType: LinkedHashMap<String,Filter>(566) at 2", "Update SimpleName: o(488) to value", "Move ExpressionStatement(468) into Block(610) at 0", "Insert StringLiteral: \"The [{}] section is being removed in the upcoming releae!  Please immediately \"(269) into InfixExpression: +(271) at 0", "Insert StringLiteral: \"move all object configuration (filters and all other objects) to the [{}] section immediately.\"(270) into InfixExpression: +(271) at 1", "Insert SimpleName: LinkedHashMap(291) into SimpleType: LinkedHashMap(292) at 0", "Insert SimpleName: String(293) into SimpleType: String(294) at 0", "Insert ThisExpression(335) into FieldAccess(337) at 0", "Insert SimpleName: defaultBeans(336) into FieldAccess(337) at 1", "Move SimpleType: ReflectionBuilder(378) into ClassInstanceCreation(492) at 0", "Update SimpleName: defaultFilters(382) to defaults", "Update SimpleName: assertFilters(399) to extractFilters", "Move SimpleName: assertFilters(399) into MethodInvocation(511) at 0", "Move SimpleName: built(400) into MethodInvocation(511) at 1", "Insert SimpleName: extractFilters(516) into MethodInvocation(518) at 0", "Insert SimpleName: defaults(517) into MethodInvocation(518) at 1", "Insert SimpleName: LinkedHashMap(560) into SimpleType: LinkedHashMap(561) at 0", "Insert SimpleName: Filter(564) into SimpleType: Filter(565) at 0", "Update SimpleName: assertFilter(464) to filterMap", "Insert SimpleName: put(602) into MethodInvocation(608) at 1", "Insert CastExpression(607) into MethodInvocation(608) at 3", "Move SimpleType: Filter(504) into CastExpression(607) at 0", "Insert SimpleName: value(606) into CastExpression(607) at 1", "Delete SimpleName: filters(232)", "Delete SimpleName: getFilters(233)", "Delete SimpleName: section(234)", "Delete MethodInvocation(238)", "Delete Block(258)", "Delete SimpleName: SuppressWarnings(330)", "Delete StringLiteral: \"unchecked\"(331)", "Delete ArrayInitializer(332)", "Delete SingleMemberAnnotation(333)", "Delete SimpleName: defaultFilters(359)", "Delete SingleVariableDeclaration(360)", "Delete SimpleName: defaultFilters(369)", "Delete MethodInvocation(401)", "Delete SimpleName: built(411)", "Delete CastExpression(412)", "Delete Block(415)", "Delete PrimitiveType: void(422)", "Delete SimpleName: value(466)", "Delete Block(469)", "Delete MethodInvocation(435)", "Delete PrefixExpression: !(436)", "Delete Block(471)", "Delete IfStatement(472)", "Delete Modifier: protected(475)", "Delete PrimitiveType: void(476)", "Delete SimpleName: assertFilter(477)", "Delete SimpleName: name(480)", "Delete SingleVariableDeclaration(481)", "Delete SimpleName: o(484)", "Delete SingleVariableDeclaration(485)", "Delete SimpleName: ConfigurationException(486)", "Delete SimpleType: ConfigurationException(487)", "Delete ParenthesizedExpression(492)", "Delete PrefixExpression: !(493)", "Delete SimpleName: msg(496)", "Delete StringLiteral: \"[\"(497)", "Delete SimpleName: FILTERS(498)", "Delete StringLiteral: \"] section specified a filter named '\"(499)", "Delete SimpleName: name(500)", "Delete StringLiteral: \"', which does not \"(501)", "Delete StringLiteral: \"implement the \"(502)", "Delete TypeLiteral(505)", "Delete SimpleName: getName(506)", "Delete MethodInvocation(507)", "Delete StringLiteral: \" interface.  Only Filter implementations may be \"(508)", "Delete StringLiteral: \"defined.\"(509)", "Delete InfixExpression: +(510)", "Delete VariableDeclarationFragment(511)", "Delete VariableDeclarationStatement(512)", "Delete SimpleName: ConfigurationException(513)", "Delete SimpleType: ConfigurationException(514)", "Delete SimpleName: msg(515)", "Delete ClassInstanceCreation(516)", "Delete ThrowStatement(517)", "Delete Block(518)", "Delete IfStatement(519)", "Delete Block(520)", "Delete MethodDeclaration(521)"]}}, {"WebIniSecurityManagerFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.shiro.web.filter.mgt.DefaultFilter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: javax.servlet.Filter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleName: mainSection to SingleVariableDeclaration at 1", "INS SimpleName: ini to SuperMethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleType: Filter to ParameterizedType: Map<String,Filter> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: defaults to MethodInvocation at 0", "INS Modifier: protected to MethodDeclaration at 2", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: defaults to VariableDeclarationFragment at 0", "INS SimpleName: createInstanceMap to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS ExpressionStatement to Block at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Filter> at 0", "INS SimpleName: defaultFilters to MethodInvocation at 2", "INS ParameterizedType: Map<String,?> to MethodDeclaration at 3", "INS ParameterizedType: Map<String,Filter> to VariableDeclarationStatement at 0", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleType: Ini to SingleVariableDeclaration at 0", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: ini to SingleVariableDeclaration at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"unchecked\" to ArrayInitializer at 0", "INS SimpleType: String to ParameterizedType: Map<String,Filter> at 1", "INS SimpleName: defaults to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Ini.Section to SingleVariableDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: createDefaults to MethodDeclaration at 4", "INS ArrayInitializer to SingleMemberAnnotation at 1", "INS SimpleName: putAll to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: Ini.Section to SimpleType: Ini.Section at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: DefaultFilter to MethodInvocation at 0", "INS SimpleName: Ini to SimpleType: Ini at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Filter to SimpleType: Filter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS SimpleName: defaultFilters to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Map to SimpleType: Map at 0", "INS SuperMethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: createDefaults to SuperMethodInvocation at 0", "INS Block to MethodDeclaration at 7", "INS NullLiteral to MethodInvocation at 2", "INS SimpleType: Map to VariableDeclarationStatement at 0", "INS SimpleName: mainSection to SuperMethodInvocation at 2"]}]}}, {"WebIniSecurityManagerFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(158) at 5", "Insert ImportDeclaration(13) into CompilationUnit(158) at 6", "Insert ImportDeclaration(15) into CompilationUnit(158) at 7", "Insert QualifiedName: org.apache.shiro.web.filter.mgt.DefaultFilter(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: javax.servlet.Filter(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: java.util.Map(14) into ImportDeclaration(15) at 0", "Insert MethodDeclaration(156) into TypeDeclaration: class(157) at 7", "Insert SingleMemberAnnotation(106) into MethodDeclaration(156) at 0", "Insert MarkerAnnotation(108) into MethodDeclaration(156) at 1", "Insert Modifier: protected(109) into MethodDeclaration(156) at 2", "Insert ParameterizedType: Map<String,?>(115) into MethodDeclaration(156) at 3", "Insert SimpleName: createDefaults(116) into MethodDeclaration(156) at 4", "Insert SingleVariableDeclaration(120) into MethodDeclaration(156) at 5", "Insert SingleVariableDeclaration(124) into MethodDeclaration(156) at 6", "Insert Block(155) into MethodDeclaration(156) at 7", "Insert SimpleName: SuppressWarnings(103) into SingleMemberAnnotation(106) at 0", "Insert ArrayInitializer(105) into SingleMemberAnnotation(106) at 1", "Insert SimpleName: Override(107) into MarkerAnnotation(108) at 0", "Insert SimpleType: Map(111) into ParameterizedType: Map<String,?>(115) at 0", "Insert SimpleType: String(113) into ParameterizedType: Map<String,?>(115) at 1", "Insert WildcardType: ?(114) into ParameterizedType: Map<String,?>(115) at 2", "Insert SimpleType: Ini(118) into SingleVariableDeclaration(120) at 0", "Insert SimpleName: ini(119) into SingleVariableDeclaration(120) at 1", "Insert SimpleType: Ini.Section(122) into SingleVariableDeclaration(124) at 0", "Insert SimpleName: mainSection(123) into SingleVariableDeclaration(124) at 1", "Insert VariableDeclarationStatement(133) into Block(155) at 0", "Insert VariableDeclarationStatement(147) into Block(155) at 1", "Insert ExpressionStatement(152) into Block(155) at 2", "Insert ReturnStatement(154) into Block(155) at 3", "Insert StringLiteral: \"unchecked\"(104) into ArrayInitializer(105) at 0", "Insert SimpleName: Map(110) into SimpleType: Map(111) at 0", "Insert SimpleName: String(112) into SimpleType: String(113) at 0", "Insert SimpleName: Ini(117) into SimpleType: Ini(118) at 0", "Insert QualifiedName: Ini.Section(121) into SimpleType: Ini.Section(122) at 0", "Insert SimpleType: Map(126) into VariableDeclarationStatement(133) at 0", "Insert VariableDeclarationFragment(132) into VariableDeclarationStatement(133) at 1", "Insert ParameterizedType: Map<String,Filter>(140) into VariableDeclarationStatement(147) at 0", "Insert VariableDeclarationFragment(146) into VariableDeclarationStatement(147) at 1", "Insert MethodInvocation(151) into ExpressionStatement(152) at 0", "Insert SimpleName: defaults(153) into ReturnStatement(154) at 0", "Insert SimpleName: Map(125) into SimpleType: Map(126) at 0", "Insert SimpleName: defaults(127) into VariableDeclarationFragment(132) at 0", "Insert SuperMethodInvocation(131) into VariableDeclarationFragment(132) at 1", "Insert SimpleType: Map(135) into ParameterizedType: Map<String,Filter>(140) at 0", "Insert SimpleType: String(137) into ParameterizedType: Map<String,Filter>(140) at 1", "Insert SimpleType: Filter(139) into ParameterizedType: Map<String,Filter>(140) at 2", "Insert SimpleName: defaultFilters(141) into VariableDeclarationFragment(146) at 0", "Insert MethodInvocation(145) into VariableDeclarationFragment(146) at 1", "Insert SimpleName: defaults(148) into MethodInvocation(151) at 0", "Insert SimpleName: putAll(149) into MethodInvocation(151) at 1", "Insert SimpleName: defaultFilters(150) into MethodInvocation(151) at 2", "Insert SimpleName: createDefaults(128) into SuperMethodInvocation(131) at 0", "Insert SimpleName: ini(129) into SuperMethodInvocation(131) at 1", "Insert SimpleName: mainSection(130) into SuperMethodInvocation(131) at 2", "Insert SimpleName: Map(134) into SimpleType: Map(135) at 0", "Insert SimpleName: String(136) into SimpleType: String(137) at 0", "Insert SimpleName: Filter(138) into SimpleType: Filter(139) at 0", "Insert SimpleName: DefaultFilter(142) into MethodInvocation(145) at 0", "Insert SimpleName: createInstanceMap(143) into MethodInvocation(145) at 1", "Insert NullLiteral(144) into MethodInvocation(145) at 2"]}}, {"IniShiroFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "UPDATE from org.apache.shiro.util.Factory to org.apache.shiro.util.CollectionUtils", "operations": ["UPD QualifiedName: org.apache.shiro.util.Factory from org.apache.shiro.util.Factory to org.apache.shiro.util.CollectionUtils"]}, {"root": "INS ParameterizedType: Map<String,?> to MethodDeclaration at 1", "operations": ["INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS ParameterizedType: Map<String,?> to MethodDeclaration at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: defaults to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: Map<String,?> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS ParameterizedType: Map<String,?> to VariableDeclarationStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,?> at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,?> at 1", "INS WildcardType: ? to ParameterizedType: Map<String,?> at 2", "INS SimpleName: objects to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getBeans to MethodInvocation at 1", "INS SimpleName: factory to MethodInvocation at 0", "INS ReturnStatement to Block at 5"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: ini to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: ini to MethodInvocation at 2"]}, {"root": "INS SimpleType: WebIniSecurityManagerFactory to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: WebIniSecurityManagerFactory to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: ini to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from ini to CollectionUtils", "operations": ["UPD SimpleName: ini from ini to CollectionUtils", "UPD SimpleName: ini from ini to CollectionUtils", "UPD SimpleName: ini from ini to CollectionUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isEmpty to MethodInvocation at 1", "MOV SimpleName: ini to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isEmpty to MethodInvocation at 1", "MOV SimpleName: ini to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: objects to MethodInvocation at 2", "operations": ["INS SimpleName: objects to MethodInvocation at 2"]}, {"root": "UPDATE from SecurityManager to WebIniSecurityManagerFactory", "operations": ["UPD SimpleName: SecurityManager from SecurityManager to WebIniSecurityManagerFactory"]}, {"root": "MOVE from SimpleType: WebIniSecurityManagerFactory", "operations": ["MOV SimpleName: SecurityManager to SimpleType: WebIniSecurityManagerFactory at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ini to MethodInvocation at 0", "MOV SimpleName: isEmpty to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: IniFilterChainResolverFactory to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: IniFilterChainResolverFactory to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: defaults to ClassInstanceCreation at 2", "operations": ["INS SimpleName: defaults to ClassInstanceCreation at 2"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL SimpleName: ini", "DEL NullLiteral", "DEL MethodInvocation", "DEL InfixExpression: ||", "DEL InfixExpression: =="]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL SimpleName: ini", "DEL InfixExpression: ||", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL ParameterizedType: Factory<SecurityManager>", "operations": ["DEL SimpleType: Factory", "DEL SimpleName: Factory", "DEL SimpleType: SecurityManager", "DEL ParameterizedType: Factory<SecurityManager>"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: ini", "DEL MethodInvocation", "DEL InfixExpression: ||"]}]}}, {"IniShiroFilter_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(991) at 12", "Update QualifiedName: org.apache.shiro.util.Factory(10) to org.apache.shiro.util.CollectionUtils", "Insert QualifiedName: java.util.Map(24) into ImportDeclaration(25) at 0", "Insert ParameterizedType: Map<String,?>(773) into MethodDeclaration(845) at 1", "Insert SingleVariableDeclaration(860) into MethodDeclaration(939) at 4", "Insert VariableDeclarationStatement(695) into Block(701) at 3", "Insert SimpleType: Map(769) into ParameterizedType: Map<String,?>(773) at 0", "Insert SimpleType: String(771) into ParameterizedType: Map<String,?>(773) at 1", "Insert WildcardType: ?(772) into ParameterizedType: Map<String,?>(773) at 2", "Insert ReturnStatement(843) into Block(844) at 5", "Insert ParameterizedType: Map<String,?>(858) into SingleVariableDeclaration(860) at 0", "Insert SimpleName: defaults(859) into SingleVariableDeclaration(860) at 1", "Insert MethodInvocation(645) into IfStatement(659) at 0", "Insert MethodInvocation(663) into IfStatement(683) at 0", "Insert ParameterizedType: Map<String,?>(689) into VariableDeclarationStatement(695) at 0", "Insert VariableDeclarationFragment(694) into VariableDeclarationStatement(695) at 1", "Insert SimpleName: Map(768) into SimpleType: Map(769) at 0", "Insert SimpleName: String(770) into SimpleType: String(771) at 0", "Insert SimpleType: WebIniSecurityManagerFactory(780) into VariableDeclarationStatement(783) at 0", "Insert MethodInvocation(787) into IfStatement(803) at 0", "Insert MethodInvocation(842) into ReturnStatement(843) at 0", "Insert SimpleType: Map(854) into ParameterizedType: Map<String,?>(858) at 0", "Insert SimpleType: String(856) into ParameterizedType: Map<String,?>(858) at 1", "Insert WildcardType: ?(857) into ParameterizedType: Map<String,?>(858) at 2", "Update SimpleName: ini(643) to CollectionUtils", "Move SimpleName: ini(643) into MethodInvocation(645) at 0", "Move SimpleName: isEmpty(644) into MethodInvocation(645) at 1", "Insert SimpleName: ini(644) into MethodInvocation(645) at 2", "Update SimpleName: ini(664) to CollectionUtils", "Move SimpleName: ini(664) into MethodInvocation(663) at 0", "Move SimpleName: isEmpty(665) into MethodInvocation(663) at 1", "Insert SimpleName: ini(662) into MethodInvocation(663) at 2", "Insert SimpleType: Map(685) into ParameterizedType: Map<String,?>(689) at 0", "Insert SimpleType: String(687) into ParameterizedType: Map<String,?>(689) at 1", "Insert WildcardType: ?(688) into ParameterizedType: Map<String,?>(689) at 2", "Insert SimpleName: objects(690) into VariableDeclarationFragment(694) at 0", "Move MethodInvocation(690) into VariableDeclarationFragment(694) at 1", "Insert SimpleName: objects(698) into MethodInvocation(699) at 2", "Update SimpleName: SecurityManager(771) to WebIniSecurityManagerFactory", "Move SimpleName: SecurityManager(771) into SimpleType: WebIniSecurityManagerFactory(780) at 0", "Update SimpleName: ini(780) to CollectionUtils", "Move SimpleName: ini(780) into MethodInvocation(787) at 0", "Move SimpleName: isEmpty(781) into MethodInvocation(787) at 1", "Insert SimpleName: ini(786) into MethodInvocation(787) at 2", "Insert SimpleName: factory(840) into MethodInvocation(842) at 0", "Insert SimpleName: getBeans(841) into MethodInvocation(842) at 1", "Insert SimpleName: Map(853) into SimpleType: Map(854) at 0", "Insert SimpleName: String(855) into SimpleType: String(856) at 0", "Insert SimpleName: Map(684) into SimpleType: Map(685) at 0", "Insert SimpleName: String(686) into SimpleType: String(687) at 0", "Move SimpleType: IniFilterChainResolverFactory(896) into VariableDeclarationStatement(917) at 0", "Move SimpleType: IniFilterChainResolverFactory(893) into ClassInstanceCreation(915) at 0", "Insert SimpleName: defaults(914) into ClassInstanceCreation(915) at 2", "Delete SimpleName: ini(640)", "Delete NullLiteral(641)", "Delete InfixExpression: ==(642)", "Delete MethodInvocation(645)", "Delete InfixExpression: ||(646)", "Delete SimpleName: ini(661)", "Delete NullLiteral(662)", "Delete InfixExpression: ==(663)", "Delete MethodInvocation(666)", "Delete InfixExpression: ||(667)", "Delete ExpressionStatement(691)", "Delete PrimitiveType: void(763)", "Delete SimpleName: Factory(769)", "Delete SimpleType: Factory(770)", "Delete SimpleType: SecurityManager(772)", "Delete ParameterizedType: Factory<SecurityManager>(773)", "Delete SimpleName: ini(777)", "Delete NullLiteral(778)", "Delete InfixExpression: ==(779)", "Delete MethodInvocation(782)", "Delete InfixExpression: ||(783)"]}}, {"SslFilter_cluster": {"actions": [{"root": "UPDATE from <p/> This filter has the same effect as of using the to <p/>", "operations": ["UPD TextElement: <p/> This filter has the same effect as of using the from <p/> This filter has the same effect as of using the to <p/>"]}]}}, {"SslFilter_diff": {"operations": ["Update TextElement: <p/> This filter has the same effect as of using the(3) to <p/>"]}}, {"DefaultFilterChainManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 26"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.util.ClassUtils"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.web.filter.authc.AnonymousFilter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.web.filter.authc.FormAuthenticationFilter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.shiro.web.filter.authc.UserFilter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.shiro.web.filter.authz.PortFilter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.web.filter.authz.RolesAuthorizationFilter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.web.filter.authz.SslFilter"]}, {"root": "DEL EnumDeclaration", "operations": ["DEL TypeLiteral", "DEL MethodDeclaration", "DEL ParameterizedType: Class<? extends Filter>", "DEL SimpleName: Filter", "DEL MethodDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: newInstance", "DEL MethodInvocation", "DEL SimpleName: DefaultFilter", "DEL SimpleName: FormAuthenticationFilter", "DEL SimpleName: filterClass", "DEL SimpleName: Filter", "DEL ParameterizedType: Class<? extends Filter>", "DEL WildcardType: ? extends Filter", "DEL SimpleType: Filter", "DEL FieldAccess", "DEL SimpleType: Filter", "DEL SimpleName: SslFilter", "DEL SimpleType: Filter", "DEL SimpleName: Filter", "DEL EnumConstantDeclaration", "DEL Modifier: public", "DEL SimpleName: newInstance", "DEL TypeLiteral", "DEL TypeLiteral", "DEL Block", "DEL SimpleType: Class", "DEL SimpleName: authc", "DEL Block", "DEL SimpleName: getFilterClass", "DEL MethodDeclaration", "DEL Modifier: private", "DEL SimpleName: BasicHttpAuthenticationFilter", "DEL SimpleName: RolesAuthorizationFilter", "DEL TypeLiteral", "DEL TypeLiteral", "DEL FieldDeclaration", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: Filter", "DEL SimpleName: PortFilter", "DEL SimpleName: Class", "DEL SimpleType: Filter", "DEL SimpleName: Class", "DEL SimpleName: perms", "DEL SimpleName: ssl", "DEL ParameterizedType: Class<? extends Filter>", "DEL TypeLiteral", "DEL EnumConstantDeclaration", "DEL Modifier: protected", "DEL EnumDeclaration", "DEL SimpleName: PermissionsAuthorizationFilter", "DEL Assignment: =", "DEL SimpleType: UserFilter", "DEL SimpleType: RolesAuthorizationFilter", "DEL SimpleName: AnonymousFilter", "DEL ExpressionStatement", "DEL EnumConstantDeclaration", "DEL SimpleType: BasicHttpAuthenticationFilter", "DEL SimpleName: port", "DEL SimpleName: roles", "DEL SimpleType: AnonymousFilter", "DEL EnumConstantDeclaration", "DEL ThisExpression", "DEL SimpleType: PermissionsAuthorizationFilter", "DEL SimpleType: Class", "DEL SimpleName: Filter", "DEL SimpleType: Filter", "DEL SimpleName: user", "DEL SimpleName: filterClass", "DEL SimpleType: PortFilter", "DEL TypeLiteral", "DEL SimpleType: SslFilter", "DEL ReturnStatement", "DEL SimpleName: authcBasic", "DEL WildcardType: ? extends Filter", "DEL Modifier: static", "DEL SimpleName: filterClass", "DEL SimpleType: FormAuthenticationFilter", "DEL SimpleType: Class", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL FieldAccess", "DEL EnumConstantDeclaration", "DEL FieldAccess", "DEL SimpleName: Class", "DEL WildcardType: ? extends Filter", "DEL Modifier: public", "DEL SimpleName: ClassUtils", "DEL SimpleName: filterClass", "DEL SimpleName: filterClass", "DEL EnumConstantDeclaration", "DEL TypeLiteral", "DEL CastExpression", "DEL SimpleName: filterClass", "DEL SimpleName: DefaultFilter", "DEL SimpleName: anon", "DEL ReturnStatement", "DEL SimpleName: UserFilter", "DEL ThisExpression", "DEL Block", "DEL Modifier: private"]}]}}, {"DefaultFilterChainManager_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(924) at 26", "Delete QualifiedName: org.apache.shiro.util.ClassUtils(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.shiro.web.filter.authc.AnonymousFilter(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.shiro.web.filter.authc.FormAuthenticationFilter(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.shiro.web.filter.authc.UserFilter(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.shiro.web.filter.authz.PortFilter(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.shiro.web.filter.authz.RolesAuthorizationFilter(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.shiro.web.filter.authz.SslFilter(30)", "Delete ImportDeclaration(31)", "Delete Modifier: protected(941)", "Delete Modifier: static(942)", "Delete SimpleName: DefaultFilter(943)", "Delete SimpleName: anon(944)", "Delete SimpleName: AnonymousFilter(945)", "Delete SimpleType: AnonymousFilter(946)", "Delete TypeLiteral(947)", "Delete EnumConstantDeclaration(948)", "Delete SimpleName: user(949)", "Delete SimpleName: UserFilter(950)", "Delete SimpleType: UserFilter(951)", "Delete TypeLiteral(952)", "Delete EnumConstantDeclaration(953)", "Delete SimpleName: authc(954)", "Delete SimpleName: FormAuthenticationFilter(955)", "Delete SimpleType: FormAuthenticationFilter(956)", "Delete TypeLiteral(957)", "Delete EnumConstantDeclaration(958)", "Delete SimpleName: authcBasic(959)", "Delete SimpleName: BasicHttpAuthenticationFilter(960)", "Delete SimpleType: BasicHttpAuthenticationFilter(961)", "Delete TypeLiteral(962)", "Delete EnumConstantDeclaration(963)", "Delete SimpleName: roles(964)", "Delete SimpleName: RolesAuthorizationFilter(965)", "Delete SimpleType: RolesAuthorizationFilter(966)", "Delete TypeLiteral(967)", "Delete EnumConstantDeclaration(968)", "Delete SimpleName: perms(969)", "Delete SimpleName: PermissionsAuthorizationFilter(970)", "Delete SimpleType: PermissionsAuthorizationFilter(971)", "Delete TypeLiteral(972)", "Delete EnumConstantDeclaration(973)", "Delete SimpleName: port(974)", "Delete SimpleName: PortFilter(975)", "Delete SimpleType: PortFilter(976)", "Delete TypeLiteral(977)", "Delete EnumConstantDeclaration(978)", "Delete SimpleName: ssl(979)", "Delete SimpleName: SslFilter(980)", "Delete SimpleType: SslFilter(981)", "Delete TypeLiteral(982)", "Delete EnumConstantDeclaration(983)", "Delete Modifier: private(984)", "Delete Modifier: final(985)", "Delete SimpleName: Class(986)", "Delete SimpleType: Class(987)", "Delete SimpleName: Filter(988)", "Delete SimpleType: Filter(989)", "Delete WildcardType: ? extends Filter(990)", "Delete ParameterizedType: Class<? extends Filter>(991)", "Delete SimpleName: filterClass(992)", "Delete VariableDeclarationFragment(993)", "Delete FieldDeclaration(994)", "Delete Modifier: private(995)", "Delete SimpleName: DefaultFilter(996)", "Delete SimpleName: Class(997)", "Delete SimpleType: Class(998)", "Delete SimpleName: Filter(999)", "Delete SimpleType: Filter(1000)", "Delete WildcardType: ? extends Filter(1001)", "Delete ParameterizedType: Class<? extends Filter>(1002)", "Delete SimpleName: filterClass(1003)", "Delete SingleVariableDeclaration(1004)", "Delete ThisExpression(1005)", "Delete SimpleName: filterClass(1006)", "Delete FieldAccess(1007)", "Delete SimpleName: filterClass(1008)", "Delete Assignment: =(1009)", "Delete ExpressionStatement(1010)", "Delete Block(1011)", "Delete MethodDeclaration(1012)", "Delete Modifier: public(1013)", "Delete SimpleName: Filter(1014)", "Delete SimpleType: Filter(1015)", "Delete SimpleName: newInstance(1016)", "Delete SimpleName: Filter(1017)", "Delete SimpleType: Filter(1018)", "Delete SimpleName: ClassUtils(1019)", "Delete SimpleName: newInstance(1020)", "Delete ThisExpression(1021)", "Delete SimpleName: filterClass(1022)", "Delete FieldAccess(1023)", "Delete MethodInvocation(1024)", "Delete CastExpression(1025)", "Delete ReturnStatement(1026)", "Delete Block(1027)", "Delete MethodDeclaration(1028)", "Delete Modifier: public(1029)", "Delete SimpleName: Class(1030)", "Delete SimpleType: Class(1031)", "Delete SimpleName: Filter(1032)", "Delete SimpleType: Filter(1033)", "Delete WildcardType: ? extends Filter(1034)", "Delete ParameterizedType: Class<? extends Filter>(1035)", "Delete SimpleName: getFilterClass(1036)", "Delete ThisExpression(1037)", "Delete SimpleName: filterClass(1038)", "Delete FieldAccess(1039)", "Delete ReturnStatement(1040)", "Delete Block(1041)", "Delete MethodDeclaration(1042)", "Delete EnumDeclaration(1043)"]}}], "commit_stats": [{"total_files": 17, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}