{"application": "google-gson", "csha": "410b4a8c62de693d38a0ee9a566a4a4c0863f934", "files": [{"JsonReader_cluster": {"actions": [{"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 2", "INS InfixExpression: < to ConditionalExpression at 0", "INS SimpleName: initialLength to Assignment: = at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ParenthesizedExpression to InfixExpression: * at 0", "INS NullLiteral to InfixExpression: == at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ConditionalExpression to ClassInstanceCreation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: start to InfixExpression: - at 1", "INS SimpleName: builder to InfixExpression: == at 1", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS ExpressionStatement to Block at 1", "INS InfixExpression: == to IfStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: len to ConditionalExpression at 2", "INS SimpleName: len to InfixExpression: < at 0", "INS NumberLiteral: 2 to InfixExpression: * at 1", "INS IfStatement to Block at 4", "INS InfixExpression: * to VariableDeclarationFragment at 1", "INS NumberLiteral: 16 to ConditionalExpression at 1", "INS NumberLiteral: 16 to InfixExpression: < at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: len to VariableDeclarationFragment at 0", "INS SimpleName: len to Assignment: = at 1", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS SimpleName: p to InfixExpression: - at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: builder to InfixExpression: == at 1", "INS ReturnStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 0", "INS SimpleName: len to ClassInstanceCreation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: buffer to ClassInstanceCreation at 1", "INS SimpleType: String to ClassInstanceCreation at 0", "INS SimpleName: start to ClassInstanceCreation at 2", "INS SimpleName: len to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: len to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: escapeChar to VariableDeclarationFragment at 0", "INS PrimitiveType: char to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: len to InfixExpression: + at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: p to InfixExpression: - at 1", "INS SimpleName: estimatedLength to InfixExpression: < at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: == at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: * to VariableDeclarationFragment at 1", "INS NumberLiteral: 16 to InfixExpression: < at 1", "INS SimpleName: builder to Assignment: = at 0", "INS SimpleName: pos to InfixExpression: + at 1", "INS IfStatement to Block at 3", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS SimpleName: builder to InfixExpression: == at 1", "INS ParenthesizedExpression to InfixExpression: * at 0", "INS SimpleName: estimatedLength to VariableDeclarationFragment at 0", "INS SimpleName: estimatedLength to ConditionalExpression at 2", "INS ConditionalExpression to ClassInstanceCreation at 1", "INS InfixExpression: + to InfixExpression: - at 0", "INS NumberLiteral: 2 to InfixExpression: * at 1", "INS InfixExpression: < to ConditionalExpression at 0", "INS NumberLiteral: 16 to ConditionalExpression at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV InfixExpression: - to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV InfixExpression: - to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: len to MethodInvocation at 4", "operations": ["INS SimpleName: len to MethodInvocation at 4"]}, {"root": "INS SimpleName: escapeChar to MethodInvocation at 2", "operations": ["INS SimpleName: escapeChar to MethodInvocation at 2"]}, {"root": "INS SimpleName: len to MethodInvocation at 4", "operations": ["INS SimpleName: len to MethodInvocation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: StringBuilder to ClassInstanceCreation at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}]}}, {"JsonReader_diff": {"operations": ["Insert NullLiteral(2888) into VariableDeclarationFragment(2889) at 1", "Insert IfStatement(3079) into Block(3103) at 4", "Insert InfixExpression: ==(3051) into IfStatement(3079) at 0", "Insert Block(3078) into IfStatement(3079) at 1", "Insert NullLiteral(3049) into InfixExpression: ==(3051) at 0", "Insert SimpleName: builder(3050) into InfixExpression: ==(3051) at 1", "Insert VariableDeclarationStatement(3061) into Block(3078) at 0", "Insert ExpressionStatement(3065) into Block(3078) at 1", "Insert ExpressionStatement(3077) into Block(3078) at 2", "Insert Block(2957) into IfStatement(3046) at 1", "Insert PrimitiveType: int(3052) into VariableDeclarationStatement(3061) at 0", "Insert VariableDeclarationFragment(3060) into VariableDeclarationStatement(3061) at 1", "Insert Assignment: =(3064) into ExpressionStatement(3065) at 0", "Insert Assignment: =(3076) into ExpressionStatement(3077) at 0", "Move ExpressionStatement(2926) into Block(2957) at 0", "Insert VariableDeclarationStatement(2932) into Block(2957) at 1", "Insert IfStatement(2956) into Block(2957) at 2", "Insert SimpleName: len(3053) into VariableDeclarationFragment(3060) at 0", "Insert InfixExpression: *(3059) into VariableDeclarationFragment(3060) at 1", "Insert SimpleName: initialLength(3062) into Assignment: =(3064) at 0", "Insert SimpleName: len(3063) into Assignment: =(3064) at 1", "Insert SimpleName: builder(3066) into Assignment: =(3076) at 0", "Insert ClassInstanceCreation(3075) into Assignment: =(3076) at 1", "Insert PrimitiveType: int(2925) into VariableDeclarationStatement(2932) at 0", "Insert VariableDeclarationFragment(2931) into VariableDeclarationStatement(2932) at 1", "Insert InfixExpression: ==(2935) into IfStatement(2956) at 0", "Insert Block(2943) into IfStatement(2956) at 1", "Move Block(2941) into IfStatement(2956) at 2", "Insert VariableDeclarationStatement(2972) into Block(3032) at 1", "Insert VariableDeclarationStatement(2978) into Block(3032) at 2", "Insert IfStatement(3007) into Block(3032) at 3", "Insert ParenthesizedExpression(3057) into InfixExpression: *(3059) at 0", "Insert NumberLiteral: 2(3058) into InfixExpression: *(3059) at 1", "Insert SimpleType: StringBuilder(3068) into ClassInstanceCreation(3075) at 0", "Insert ConditionalExpression(3074) into ClassInstanceCreation(3075) at 1", "Insert SimpleName: len(2926) into VariableDeclarationFragment(2931) at 0", "Move InfixExpression: -(2934) into VariableDeclarationFragment(2931) at 1", "Insert NullLiteral(2933) into InfixExpression: ==(2935) at 0", "Insert SimpleName: builder(2934) into InfixExpression: ==(2935) at 1", "Insert ReturnStatement(2942) into Block(2943) at 0", "Insert PrimitiveType: int(2965) into VariableDeclarationStatement(2972) at 0", "Insert VariableDeclarationFragment(2971) into VariableDeclarationStatement(2972) at 1", "Insert PrimitiveType: char(2973) into VariableDeclarationStatement(2978) at 0", "Insert VariableDeclarationFragment(2977) into VariableDeclarationStatement(2978) at 1", "Insert InfixExpression: ==(2981) into IfStatement(3007) at 0", "Insert Block(3006) into IfStatement(3007) at 1", "Insert InfixExpression: -(3056) into ParenthesizedExpression(3057) at 0", "Insert SimpleName: StringBuilder(3067) into SimpleType: StringBuilder(3068) at 0", "Insert InfixExpression: <(3071) into ConditionalExpression(3074) at 0", "Insert NumberLiteral: 16(3072) into ConditionalExpression(3074) at 1", "Insert SimpleName: len(3073) into ConditionalExpression(3074) at 2", "Insert ClassInstanceCreation(2941) into ReturnStatement(2942) at 0", "Insert SimpleName: len(2966) into VariableDeclarationFragment(2971) at 0", "Move InfixExpression: -(2956) into VariableDeclarationFragment(2971) at 1", "Insert SimpleName: escapeChar(2974) into VariableDeclarationFragment(2977) at 0", "Move MethodInvocation(2962) into VariableDeclarationFragment(2977) at 1", "Insert NullLiteral(2979) into InfixExpression: ==(2981) at 0", "Insert SimpleName: builder(2980) into InfixExpression: ==(2981) at 1", "Insert VariableDeclarationStatement(2993) into Block(3006) at 0", "Insert ExpressionStatement(3005) into Block(3006) at 1", "Insert SimpleName: len(3012) into MethodInvocation(3013) at 4", "Insert SimpleName: escapeChar(3017) into MethodInvocation(3018) at 2", "Insert SimpleName: p(3054) into InfixExpression: -(3056) at 0", "Insert SimpleName: start(3055) into InfixExpression: -(3056) at 1", "Insert SimpleName: len(3069) into InfixExpression: <(3071) at 0", "Insert NumberLiteral: 16(3070) into InfixExpression: <(3071) at 1", "Insert SimpleType: String(2937) into ClassInstanceCreation(2941) at 0", "Insert SimpleName: buffer(2938) into ClassInstanceCreation(2941) at 1", "Insert SimpleName: start(2939) into ClassInstanceCreation(2941) at 2", "Insert SimpleName: len(2940) into ClassInstanceCreation(2941) at 3", "Insert SimpleName: len(2948) into MethodInvocation(2949) at 4", "Insert PrimitiveType: int(2982) into VariableDeclarationStatement(2993) at 0", "Insert VariableDeclarationFragment(2992) into VariableDeclarationStatement(2993) at 1", "Insert Assignment: =(3004) into ExpressionStatement(3005) at 0", "Insert SimpleName: String(2936) into SimpleType: String(2937) at 0", "Insert SimpleName: estimatedLength(2983) into VariableDeclarationFragment(2992) at 0", "Insert InfixExpression: *(2991) into VariableDeclarationFragment(2992) at 1", "Insert SimpleName: builder(2994) into Assignment: =(3004) at 0", "Insert ClassInstanceCreation(3003) into Assignment: =(3004) at 1", "Insert ParenthesizedExpression(2989) into InfixExpression: *(2991) at 0", "Insert NumberLiteral: 2(2990) into InfixExpression: *(2991) at 1", "Move SimpleType: StringBuilder(2889) into ClassInstanceCreation(3003) at 0", "Insert ConditionalExpression(3002) into ClassInstanceCreation(3003) at 1", "Insert InfixExpression: -(2988) into ParenthesizedExpression(2989) at 0", "Insert InfixExpression: <(2999) into ConditionalExpression(3002) at 0", "Insert NumberLiteral: 16(3000) into ConditionalExpression(3002) at 1", "Insert SimpleName: estimatedLength(3001) into ConditionalExpression(3002) at 2", "Insert InfixExpression: +(2986) into InfixExpression: -(2988) at 0", "Insert SimpleName: p(2987) into InfixExpression: -(2988) at 1", "Insert SimpleName: estimatedLength(2997) into InfixExpression: <(2999) at 0", "Insert NumberLiteral: 16(2998) into InfixExpression: <(2999) at 1", "Insert SimpleName: len(2984) into InfixExpression: +(2986) at 0", "Insert SimpleName: pos(2985) into InfixExpression: +(2986) at 1", "Delete ClassInstanceCreation(2890)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}