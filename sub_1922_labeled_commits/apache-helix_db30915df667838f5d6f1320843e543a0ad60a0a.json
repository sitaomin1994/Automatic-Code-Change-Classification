{"application": "apache-helix", "csha": "db30915df667838f5d6f1320843e543a0ad60a0a", "files": [{"ZNRecord_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS PrimitiveType: long to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: _creationTime to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: long to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: _modifiedTime to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS SimpleName: _creationTime to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS ReturnStatement to Block at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS BooleanLiteral: true to SingleMemberAnnotation at 1", "INS SimpleName: getCreationTime to MethodDeclaration at 3", "INS SimpleName: JsonIgnore to SingleMemberAnnotation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS BooleanLiteral: true to SingleMemberAnnotation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: setCreationTime to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: creationTime to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: JsonIgnore to SingleMemberAnnotation at 0", "INS SimpleName: _creationTime to Assignment: = at 0", "INS SimpleName: creationTime to Assignment: = at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS PrimitiveType: long to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS BooleanLiteral: true to SingleMemberAnnotation at 1", "INS SimpleName: JsonIgnore to SingleMemberAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS SimpleName: _modifiedTime to ReturnStatement at 0", "INS SimpleName: getModifiedTime to MethodDeclaration at 3", "INS SingleMemberAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: JsonIgnore to SingleMemberAnnotation at 0", "INS BooleanLiteral: true to SingleMemberAnnotation at 1", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: setModifiedTime to MethodDeclaration at 3", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: modifiedTime to SingleVariableDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: _modifiedTime to Assignment: = at 0", "INS SimpleName: modifiedTime to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 43"]}, {"root": "UPDATE from Generic Record Format to store data at a Node This can be used to store simpleFields to Generic Record Format to store data at a Node This can be used to store", "operations": ["UPD TextElement: Generic Record Format to store data at a Node This can be used to store simpleFields from Generic Record Format to store data at a Node This can be used to store simpleFields to Generic Record Format to store data at a Node This can be used to store"]}, {"root": "UPDATE from mapFields listFields to simpleFields mapFields listFields", "operations": ["UPD TextElement: mapFields listFields from mapFields listFields to simpleFields mapFields listFields"]}, {"root": "UPDATE from merge functionality is used to merge multiple znrecord into a single one. This will to merge functionality is used to merge multiple znrecord into a single one.", "operations": ["UPD TextElement: merge functionality is used to merge multiple znrecord into a single one. This will from merge functionality is used to merge multiple znrecord into a single one. This will to merge functionality is used to merge multiple znrecord into a single one."]}, {"root": "UPDATE from make use of the id of each ZNRecord and append it to every key thus making key to This will make use of the id of each ZNRecord and append it to every key", "operations": ["UPD TextElement: make use of the id of each ZNRecord and append it to every key thus making key from make use of the id of each ZNRecord and append it to every key thus making key to This will make use of the id of each ZNRecord and append it to every key"]}, {"root": "UPDATE from unique. This is needed to optimize on the watches. to thus making key unique. This is needed to optimize on the watches.", "operations": ["UPD TextElement: unique. This is needed to optimize on the watches. from unique. This is needed to optimize on the watches. to thus making key unique. This is needed to optimize on the watches."]}, {"root": "UPDATE from Note: does not support subtract in each list in list fields to Note: does not support subtract in each list in list fields or map in", "operations": ["UPD TextElement: Note: does not support subtract in each list in list fields from Note: does not support subtract in each list in list fields to Note: does not support subtract in each list in list fields or map in"]}, {"root": "UPDATE from or map in mapFields to mapFields", "operations": ["UPD TextElement: or map in mapFields from or map in mapFields to mapFields"]}]}}, {"ZNRecord_diff": {"operations": ["Insert FieldDeclaration(123) into TypeDeclaration: class(1071) at 11", "Insert FieldDeclaration(128) into TypeDeclaration: class(1071) at 12", "Insert MethodDeclaration(1030) into TypeDeclaration: class(1071) at 40", "Insert MethodDeclaration(1045) into TypeDeclaration: class(1071) at 41", "Insert MethodDeclaration(1055) into TypeDeclaration: class(1071) at 42", "Insert MethodDeclaration(1070) into TypeDeclaration: class(1071) at 43", "Insert Modifier: private(119) into FieldDeclaration(123) at 0", "Insert PrimitiveType: long(120) into FieldDeclaration(123) at 1", "Insert VariableDeclarationFragment(122) into FieldDeclaration(123) at 2", "Insert Modifier: private(124) into FieldDeclaration(128) at 0", "Insert PrimitiveType: long(125) into FieldDeclaration(128) at 1", "Insert VariableDeclarationFragment(127) into FieldDeclaration(128) at 2", "Insert SingleMemberAnnotation(1023) into MethodDeclaration(1030) at 0", "Insert Modifier: public(1024) into MethodDeclaration(1030) at 1", "Insert PrimitiveType: long(1025) into MethodDeclaration(1030) at 2", "Insert SimpleName: getCreationTime(1026) into MethodDeclaration(1030) at 3", "Insert Block(1029) into MethodDeclaration(1030) at 4", "Insert SingleMemberAnnotation(1033) into MethodDeclaration(1045) at 0", "Insert Modifier: public(1034) into MethodDeclaration(1045) at 1", "Insert PrimitiveType: void(1035) into MethodDeclaration(1045) at 2", "Insert SimpleName: setCreationTime(1036) into MethodDeclaration(1045) at 3", "Insert SingleVariableDeclaration(1039) into MethodDeclaration(1045) at 4", "Insert Block(1044) into MethodDeclaration(1045) at 5", "Insert SingleMemberAnnotation(1048) into MethodDeclaration(1055) at 0", "Insert Modifier: public(1049) into MethodDeclaration(1055) at 1", "Insert PrimitiveType: long(1050) into MethodDeclaration(1055) at 2", "Insert SimpleName: getModifiedTime(1051) into MethodDeclaration(1055) at 3", "Insert Block(1054) into MethodDeclaration(1055) at 4", "Insert SingleMemberAnnotation(1058) into MethodDeclaration(1070) at 0", "Insert Modifier: public(1059) into MethodDeclaration(1070) at 1", "Insert PrimitiveType: void(1060) into MethodDeclaration(1070) at 2", "Insert SimpleName: setModifiedTime(1061) into MethodDeclaration(1070) at 3", "Insert SingleVariableDeclaration(1064) into MethodDeclaration(1070) at 4", "Insert Block(1069) into MethodDeclaration(1070) at 5", "Update TextElement: Generic Record Format to store data at a Node This can be used to store simpleFields(22) to Generic Record Format to store data at a Node This can be used to store", "Update TextElement: mapFields listFields(23) to simpleFields mapFields listFields", "Insert SimpleName: _creationTime(121) into VariableDeclarationFragment(122) at 0", "Insert SimpleName: _modifiedTime(126) into VariableDeclarationFragment(127) at 0", "Insert SimpleName: JsonIgnore(1021) into SingleMemberAnnotation(1023) at 0", "Insert BooleanLiteral: true(1022) into SingleMemberAnnotation(1023) at 1", "Insert ReturnStatement(1028) into Block(1029) at 0", "Insert SimpleName: JsonIgnore(1031) into SingleMemberAnnotation(1033) at 0", "Insert BooleanLiteral: true(1032) into SingleMemberAnnotation(1033) at 1", "Insert PrimitiveType: long(1037) into SingleVariableDeclaration(1039) at 0", "Insert SimpleName: creationTime(1038) into SingleVariableDeclaration(1039) at 1", "Insert ExpressionStatement(1043) into Block(1044) at 0", "Insert SimpleName: JsonIgnore(1046) into SingleMemberAnnotation(1048) at 0", "Insert BooleanLiteral: true(1047) into SingleMemberAnnotation(1048) at 1", "Insert ReturnStatement(1053) into Block(1054) at 0", "Insert SimpleName: JsonIgnore(1056) into SingleMemberAnnotation(1058) at 0", "Insert BooleanLiteral: true(1057) into SingleMemberAnnotation(1058) at 1", "Insert PrimitiveType: long(1062) into SingleVariableDeclaration(1064) at 0", "Insert SimpleName: modifiedTime(1063) into SingleVariableDeclaration(1064) at 1", "Insert ExpressionStatement(1068) into Block(1069) at 0", "Update TextElement: merge functionality is used to merge multiple znrecord into a single one. This will(591) to merge functionality is used to merge multiple znrecord into a single one.", "Update TextElement: make use of the id of each ZNRecord and append it to every key thus making key(592) to This will make use of the id of each ZNRecord and append it to every key", "Update TextElement: unique. This is needed to optimize on the watches.(593) to thus making key unique. This is needed to optimize on the watches.", "Update TextElement: Note: does not support subtract in each list in list fields(907) to Note: does not support subtract in each list in list fields or map in", "Update TextElement: or map in mapFields(908) to mapFields", "Insert SimpleName: _creationTime(1027) into ReturnStatement(1028) at 0", "Insert Assignment: =(1042) into ExpressionStatement(1043) at 0", "Insert SimpleName: _modifiedTime(1052) into ReturnStatement(1053) at 0", "Insert Assignment: =(1067) into ExpressionStatement(1068) at 0", "Insert SimpleName: _creationTime(1040) into Assignment: =(1042) at 0", "Insert SimpleName: creationTime(1041) into Assignment: =(1042) at 1", "Insert SimpleName: _modifiedTime(1065) into Assignment: =(1067) at 0", "Insert SimpleName: modifiedTime(1066) into Assignment: =(1067) at 1"]}}, {"ZNRecordDecorator_cluster": {"actions": [{"root": "UPDATE from A wrapper class for ZNRecord. to A wrapper class for ZNRecord. Used as a parent class for IdealState,", "operations": ["UPD TextElement: A wrapper class for ZNRecord. from A wrapper class for ZNRecord. to A wrapper class for ZNRecord. Used as a parent class for IdealState,"]}, {"root": "UPDATE from Used as a parent class for IdealState, CurrentState, etc. to CurrentState, etc.", "operations": ["UPD TextElement: Used as a parent class for IdealState, CurrentState, etc. from Used as a parent class for IdealState, CurrentState, etc. to CurrentState, etc."]}, {"root": "UPDATE from static method that convert ZNRecord to an instance that subclasses ZNRecordDecorator to static method that convert ZNRecord to an instance that subclasses", "operations": ["UPD TextElement: static method that convert ZNRecord to an instance that subclasses ZNRecordDecorator from static method that convert ZNRecord to an instance that subclasses ZNRecordDecorator to static method that convert ZNRecord to an instance that subclasses"]}, {"root": "INS TextElement: ZNRecordDecorator to TagElement at 1", "operations": ["INS TextElement: ZNRecordDecorator to TagElement at 1"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getVersion", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: _record", "DEL ReturnStatement", "DEL SimpleName: getVersion", "DEL MethodInvocation"]}]}}, {"ZNRecordDecorator_diff": {"operations": ["Update TextElement: A wrapper class for ZNRecord.(16) to A wrapper class for ZNRecord. Used as a parent class for IdealState,", "Update TextElement: Used as a parent class for IdealState, CurrentState, etc.(17) to CurrentState, etc.", "Update TextElement: static method that convert ZNRecord to an instance that subclasses ZNRecordDecorator(120) to static method that convert ZNRecord to an instance that subclasses", "Insert TextElement: ZNRecordDecorator(111) into TagElement(112) at 1", "Delete Modifier: public(80)", "Delete Modifier: final(81)", "Delete PrimitiveType: int(82)", "Delete SimpleName: getVersion(83)", "Delete SimpleName: _record(84)", "Delete SimpleName: getVersion(85)", "Delete MethodInvocation(86)", "Delete ReturnStatement(87)", "Delete Block(88)", "Delete MethodDeclaration(89)"]}}, {"ZKDataAccessor_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: setCreationTime to MethodInvocation at 1", "INS SimpleName: record to MethodInvocation at 0", "INS SimpleName: getCtime to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newStat to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: setModifiedTime to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: record to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: newStat to MethodInvocation at 0", "INS SimpleName: getMtime to MethodInvocation at 1"]}]}}, {"ZKDataAccessor_diff": {"operations": ["Insert ExpressionStatement(1098) into Block(1112) at 1", "Insert ExpressionStatement(1105) into Block(1112) at 2", "Insert MethodInvocation(1097) into ExpressionStatement(1098) at 0", "Insert MethodInvocation(1104) into ExpressionStatement(1105) at 0", "Insert SimpleName: record(1092) into MethodInvocation(1097) at 0", "Insert SimpleName: setCreationTime(1093) into MethodInvocation(1097) at 1", "Insert MethodInvocation(1096) into MethodInvocation(1097) at 2", "Insert SimpleName: record(1099) into MethodInvocation(1104) at 0", "Insert SimpleName: setModifiedTime(1100) into MethodInvocation(1104) at 1", "Insert MethodInvocation(1103) into MethodInvocation(1104) at 2", "Insert SimpleName: newStat(1094) into MethodInvocation(1096) at 0", "Insert SimpleName: getCtime(1095) into MethodInvocation(1096) at 1", "Insert SimpleName: newStat(1101) into MethodInvocation(1103) at 0", "Insert SimpleName: getMtime(1102) into MethodInvocation(1103) at 1"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "True"}]}