{"application": "apache-tiles", "csha": "31de9612bdc03f4e5a0afe32e1827b6c21d8a285", "files": [{"ComponentContext_cluster": {"actions": [{"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}]}}, {"ComponentContext_diff": {"operations": ["Update SimpleType: TilesContext(404) to TilesRequestContext", "Update SimpleType: TilesContext(449) to TilesRequestContext", "Update SimpleName: TilesContext(403) to TilesRequestContext", "Update SimpleName: TilesContext(448) to TilesRequestContext"]}}, {"DefinitionsFactory_cluster": {"actions": [{"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}]}}, {"DefinitionsFactory_diff": {"operations": ["Update SimpleType: TilesContext(91) to TilesRequestContext", "Update SimpleName: TilesContext(90) to TilesRequestContext"]}}, {"TilesContext_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.net.MalformedURLException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.net.URL", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Locale"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleName: Locale", "DEL MethodDeclaration", "DEL TextElement: Return the preferred Locale in which the client will accept content.", "DEL TextElement: Dispatches the request to a specified path.", "DEL TagElement", "DEL SimpleType: Map", "DEL MethodDeclaration", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleName: MalformedURLException", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: getRequestLocale", "DEL TextElement: Returns a mutable Map that maps application scope attribute names to ", "DEL TagElement", "DEL Modifier: public", "DEL TagElement", "DEL MethodDeclaration", "DEL TextElement: Contains hooks to the application execution environment.", "DEL Javadoc", "DEL SimpleType: IOException", "DEL SimpleName: Map", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: getResource", "DEL TextElement: all values (as a String array).", "DEL Modifier: public", "DEL SimpleType: MalformedURLException", "DEL SimpleName: getParam", "DEL TextElement: their values.", "DEL TagElement", "DEL TagElement", "DEL SimpleType: Exception", "DEL SimpleName: getRequestScope", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: Map", "DEL Javadoc", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: Map", "DEL Javadoc", "DEL TextElement: values.", "DEL MethodDeclaration", "DEL SimpleName: path", "DEL TagElement: @version", "DEL SimpleName: getParamValues", "DEL SimpleName: path", "DEL Modifier: public", "DEL SimpleType: Map", "DEL MethodDeclaration", "DEL TextElement: Return a mutable Map that maps session scope attribute names to their ", "DEL SimpleName: getHeaderValues", "DEL SimpleName: String", "DEL SimpleName: TilesContext", "DEL SimpleName: URL", "DEL TagElement", "DEL TextElement: Return an immutable Map that maps header names to the first (or only) ", "DEL SimpleName: IOException", "DEL TagElement", "DEL SimpleType: Map", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: getSessionScope", "DEL Javadoc", "DEL TagElement", "DEL TextElement: Return an immutable Map that maps request parameter names to the set of ", "DEL Modifier: public", "DEL TagElement", "DEL Javadoc", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleType: Exception", "DEL SimpleName: Map", "DEL SimpleName: path", "DEL TextElement: Includes the response from the specified URL in the current response output.", "DEL MethodDeclaration", "DEL TextElement: header value (as a String).", "DEL SimpleName: Map", "DEL SimpleType: Map", "DEL TextElement: matched in a case-insensitive manner.", "DEL TextElement: parameters to their values.", "DEL TextElement: Return a mutable Map that maps request scope attribute names to their ", "DEL TextElement: Return a URL for the application resource mapped to the specified path.", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL SimpleName: Map", "DEL SimpleName: getInitParams", "DEL SimpleName: getApplicationScope", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL TagElement", "DEL Modifier: public", "DEL SimpleName: include", "DEL SimpleType: URL", "DEL SimpleType: Map", "DEL Javadoc", "DEL TextElement:  $Rev$ $Date$", "DEL SimpleType: Map", "DEL SimpleName: Exception", "DEL TextElement: specified in the request (as a String array). Header names must be ", "DEL SimpleName: Map", "DEL TextElement: values.", "DEL Javadoc", "DEL TextElement: Return an immutable Map that maps context application initialization ", "DEL SimpleType: Locale", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleType: Map", "DEL Javadoc", "DEL TextElement: (or only) value (as a String).", "DEL SimpleName: getHeader", "DEL TextElement: Return an immutable Map that maps header names to the set of all values ", "DEL PrimitiveType: void", "DEL SimpleName: dispatch", "DEL TagElement", "DEL Modifier: public", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: Exception", "DEL TypeDeclaration: interface", "DEL TagElement", "DEL SimpleName: Map", "DEL TextElement: Return an immutable Map that maps request parameter names to the first ", "DEL Javadoc", "DEL Modifier: public", "DEL Javadoc", "DEL Javadoc"]}]}}, {"TilesContext_diff": {"operations": ["Delete QualifiedName: org.apache.tiles(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.net.MalformedURLException(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.net.URL(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.Locale(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.Map(10)", "Delete ImportDeclaration(11)", "Delete TextElement: Contains hooks to the application execution environment.(12)", "Delete TagElement(13)", "Delete TextElement:  $Rev$ $Date$(14)", "Delete TagElement: @version(15)", "Delete Javadoc(16)", "Delete Modifier: public(17)", "Delete SimpleName: TilesContext(18)", "Delete TextElement: Returns a mutable Map that maps application scope attribute names to (19)", "Delete TextElement: their values.(20)", "Delete TagElement(21)", "Delete Javadoc(22)", "Delete Modifier: public(23)", "Delete SimpleName: Map(24)", "Delete SimpleType: Map(25)", "Delete SimpleName: getApplicationScope(26)", "Delete MethodDeclaration(27)", "Delete TextElement: Return an immutable Map that maps header names to the first (or only) (28)", "Delete TextElement: header value (as a String).(29)", "Delete TagElement(30)", "Delete Javadoc(31)", "Delete Modifier: public(32)", "Delete SimpleName: Map(33)", "Delete SimpleType: Map(34)", "Delete SimpleName: getHeader(35)", "Delete MethodDeclaration(36)", "Delete TextElement: Return an immutable Map that maps header names to the set of all values (37)", "Delete TextElement: specified in the request (as a String array). Header names must be (38)", "Delete TextElement: matched in a case-insensitive manner.(39)", "Delete TagElement(40)", "Delete Javadoc(41)", "Delete Modifier: public(42)", "Delete SimpleName: Map(43)", "Delete SimpleType: Map(44)", "Delete SimpleName: getHeaderValues(45)", "Delete MethodDeclaration(46)", "Delete TextElement: Return an immutable Map that maps context application initialization (47)", "Delete TextElement: parameters to their values.(48)", "Delete TagElement(49)", "Delete Javadoc(50)", "Delete Modifier: public(51)", "Delete SimpleName: Map(52)", "Delete SimpleType: Map(53)", "Delete SimpleName: getInitParams(54)", "Delete MethodDeclaration(55)", "Delete TextElement: Return an immutable Map that maps request parameter names to the first (56)", "Delete TextElement: (or only) value (as a String).(57)", "Delete TagElement(58)", "Delete Javadoc(59)", "Delete Modifier: public(60)", "Delete SimpleName: Map(61)", "Delete SimpleType: Map(62)", "Delete SimpleName: getParam(63)", "Delete MethodDeclaration(64)", "Delete TextElement: Return an immutable Map that maps request parameter names to the set of (65)", "Delete TextElement: all values (as a String array).(66)", "Delete TagElement(67)", "Delete Javadoc(68)", "Delete Modifier: public(69)", "Delete SimpleName: Map(70)", "Delete SimpleType: Map(71)", "Delete SimpleName: getParamValues(72)", "Delete MethodDeclaration(73)", "Delete TextElement: Return a mutable Map that maps request scope attribute names to their (74)", "Delete TextElement: values.(75)", "Delete TagElement(76)", "Delete Javadoc(77)", "Delete Modifier: public(78)", "Delete SimpleName: Map(79)", "Delete SimpleType: Map(80)", "Delete SimpleName: getRequestScope(81)", "Delete MethodDeclaration(82)", "Delete TextElement: Return a mutable Map that maps session scope attribute names to their (83)", "Delete TextElement: values.(84)", "Delete TagElement(85)", "Delete Javadoc(86)", "Delete Modifier: public(87)", "Delete SimpleName: Map(88)", "Delete SimpleType: Map(89)", "Delete SimpleName: getSessionScope(90)", "Delete MethodDeclaration(91)", "Delete TextElement: Dispatches the request to a specified path.(92)", "Delete TagElement(93)", "Delete Javadoc(94)", "Delete Modifier: public(95)", "Delete PrimitiveType: void(96)", "Delete SimpleName: dispatch(97)", "Delete SimpleName: String(98)", "Delete SimpleType: String(99)", "Delete SimpleName: path(100)", "Delete SingleVariableDeclaration(101)", "Delete SimpleName: IOException(102)", "Delete SimpleType: IOException(103)", "Delete SimpleName: Exception(104)", "Delete SimpleType: Exception(105)", "Delete MethodDeclaration(106)", "Delete TextElement: Includes the response from the specified URL in the current response output.(107)", "Delete TagElement(108)", "Delete Javadoc(109)", "Delete Modifier: public(110)", "Delete PrimitiveType: void(111)", "Delete SimpleName: include(112)", "Delete SimpleName: String(113)", "Delete SimpleType: String(114)", "Delete SimpleName: path(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: IOException(117)", "Delete SimpleType: IOException(118)", "Delete SimpleName: Exception(119)", "Delete SimpleType: Exception(120)", "Delete MethodDeclaration(121)", "Delete TextElement: Return a URL for the application resource mapped to the specified path.(122)", "Delete TagElement(123)", "Delete Javadoc(124)", "Delete Modifier: public(125)", "Delete SimpleName: URL(126)", "Delete SimpleType: URL(127)", "Delete SimpleName: getResource(128)", "Delete SimpleName: String(129)", "Delete SimpleType: String(130)", "Delete SimpleName: path(131)", "Delete SingleVariableDeclaration(132)", "Delete SimpleName: MalformedURLException(133)", "Delete SimpleType: MalformedURLException(134)", "Delete MethodDeclaration(135)", "Delete TextElement: Return the preferred Locale in which the client will accept content.(136)", "Delete TagElement(137)", "Delete Javadoc(138)", "Delete Modifier: public(139)", "Delete SimpleName: Locale(140)", "Delete SimpleType: Locale(141)", "Delete SimpleName: getRequestLocale(142)", "Delete MethodDeclaration(143)", "Delete TypeDeclaration: interface(144)"]}}, {"UrlViewPreparer_cluster": {"actions": [{"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleName: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext"]}, {"root": "UPDATE from org.apache.tiles.TilesContext to org.apache.tiles.TilesRequestContext", "operations": ["UPD QualifiedName: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles.TilesRequestContext", "UPD SimpleType: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles.TilesRequestContext"]}]}}, {"UrlViewPreparer_diff": {"operations": ["Update SimpleType: TilesContext(56) to TilesRequestContext", "Update SimpleName: TilesContext(55) to TilesRequestContext", "Update SimpleType: org.apache.tiles.TilesContext(44) to org.apache.tiles.TilesRequestContext", "Update QualifiedName: org.apache.tiles.TilesContext(43) to org.apache.tiles.TilesRequestContext"]}}, {"ViewPreparer_cluster": {"actions": [{"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}]}}, {"ViewPreparer_diff": {"operations": ["Update SimpleType: TilesContext(23) to TilesRequestContext", "Update SimpleName: TilesContext(22) to TilesRequestContext"]}}, {"ViewPreparerSupport_cluster": {"actions": [{"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}]}}, {"ViewPreparerSupport_diff": {"operations": ["Update SimpleType: TilesContext(20) to TilesRequestContext", "Update SimpleName: TilesContext(19) to TilesRequestContext"]}}, {"TilesContextFactory_cluster": {"actions": [{"root": "UPDATE from class to interface", "operations": ["UPD TypeDeclaration: class from class to interface"]}, {"root": "UPDATE from org.apache.tiles.TilesContext to org.apache.tiles.TilesApplicationContext", "operations": ["UPD QualifiedName: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles.TilesApplicationContext"]}, {"root": "UPDATE from org.apache.tiles.context.portlet.PortletTilesContext to org.apache.tiles.TilesRequestContext", "operations": ["UPD QualifiedName: org.apache.tiles.context.portlet.PortletTilesContext from org.apache.tiles.context.portlet.PortletTilesContext to org.apache.tiles.TilesRequestContext"]}, {"root": "UPDATE from org.apache.tiles.context.servlet.ServletTilesContext to java.util.Map", "operations": ["UPD QualifiedName: org.apache.tiles.context.servlet.ServletTilesContext from org.apache.tiles.context.servlet.ServletTilesContext to java.util.Map"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: createApplicationContext to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: context to TagElement: @param at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  TilesApplicationContext to TagElement: @return at 0", "INS TextElement: Create a TilesApplicationContext for the given context. to TagElement at 0", "INS SimpleType: TilesApplicationContext to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: createRequestContext to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS TextElement: request, and response. to TagElement at 1", "INS TextElement:   TilesRequestContext to TagElement: @return at 0", "INS TextElement: Create a TilesRequestContext for the given context, to TagElement at 0", "INS SimpleName: response to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: request to TagElement: @param at 0", "INS SimpleName: context to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 4"]}, {"root": "INS TagElement: @since to Javadoc at 2", "operations": ["INS TextElement:  Sep 21, 2006 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "INS SimpleName: init to MethodDeclaration at 2", "operations": ["INS SimpleName: init to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleType: TilesContext to MethodDeclaration at 1"]}, {"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "UPDATE from Creates an instance of the appropriate TilesContext implementation. to Creates an instance of the appropriate TilesApplicationContext implementation.", "operations": ["UPD TextElement: Creates an instance of the appropriate TilesContext implementation. from Creates an instance of the appropriate TilesContext implementation. to Creates an instance of the appropriate TilesApplicationContext implementation."]}, {"root": "UPDATE from  $Rev$ $Date$ to  $Id$", "operations": ["UPD TextElement:  $Rev$ $Date$ from  $Rev$ $Date$ to  $Id$"]}, {"root": "UPDATE from Object to Map", "operations": ["UPD SimpleName: Object from Object to Map", "UPD SimpleType: Object from Object to Map"]}, {"root": "UPDATE from context to configurationParameters", "operations": ["UPD SimpleName: context from context to configurationParameters"]}, {"root": "UPDATE from ServletTilesContext to TilesApplicationContext", "operations": ["UPD SimpleName: ServletTilesContext from ServletTilesContext to TilesApplicationContext"]}, {"root": "MOVE from SimpleType: TilesApplicationContext", "operations": ["MOV SimpleName: ServletTilesContext to SimpleType: TilesApplicationContext at 0"]}, {"root": "UPDATE from Creates a TilesContext from parameters found in the Servlet environment. to Initialize the factory", "operations": ["UPD TextElement: Creates a TilesContext from parameters found in the Servlet environment. from Creates a TilesContext from parameters found in the Servlet environment. to Initialize the factory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.ServletContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.ServletRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.ServletResponse"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: javax.servlet.http.HttpServletRequest", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.http.HttpServletResponse"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: javax.servlet.jsp.PageContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.portlet.PortletContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.portlet.PortletRequest"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.portlet.PortletResponse"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SimpleType: TilesContext", "operations": ["DEL SimpleName: TilesContext", "DEL SimpleType: TilesContext"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: request", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL SimpleType: Object"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL SimpleType: IllegalArgumentException", "DEL MethodInvocation", "DEL SimpleName: ServletTilesContext", "DEL InstanceofExpression", "DEL ClassInstanceCreation", "DEL SimpleType: PortletContext", "DEL CastExpression", "DEL SimpleName: request", "DEL Block", "DEL SimpleName: ServletContext", "DEL ReturnStatement", "DEL ThrowStatement", "DEL SimpleName: PortletRequest", "DEL CastExpression", "DEL SimpleType: ServletContext", "DEL InfixExpression: +", "DEL ClassInstanceCreation", "DEL SimpleName: IllegalArgumentException", "DEL SimpleType: PortletRequest", "DEL SimpleType: PortletContext", "DEL SimpleName: context", "DEL Block", "DEL SimpleType: PortletTilesContext", "DEL Block", "DEL SimpleName: PortletContext", "DEL SimpleName: PortletTilesContext", "DEL SimpleName: context", "DEL SimpleName: context", "DEL SimpleName: getName", "DEL IfStatement", "DEL SimpleName: HttpServletRequest", "DEL SimpleName: getClass", "DEL Block", "DEL CastExpression", "DEL SimpleName: context", "DEL SimpleName: PortletContext", "DEL SimpleName: ServletContext", "DEL CastExpression", "DEL SimpleType: ServletContext", "DEL MethodInvocation", "DEL SimpleType: HttpServletRequest", "DEL ReturnStatement", "DEL StringLiteral: \"Invalid context specified. \"", "DEL ClassInstanceCreation", "DEL SimpleName: context", "DEL SimpleType: ServletTilesContext", "DEL InstanceofExpression", "DEL SimpleName: request"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: ServletTilesContext", "DEL SimpleName: request", "DEL Modifier: public", "DEL IfStatement", "DEL SimpleName: getName", "DEL SimpleType: TilesContext", "DEL Block", "DEL SimpleType: PortletContext", "DEL SimpleType: PortletContext", "DEL SimpleType: ServletContext", "DEL InstanceofExpression", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Invalid context specified. \"", "DEL SimpleType: IllegalArgumentException", "DEL MethodInvocation", "DEL SimpleName: HttpServletResponse", "DEL SimpleName: context", "DEL CastExpression", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL SimpleName: getInstance", "DEL Modifier: static", "DEL SimpleType: PortletTilesContext", "DEL InstanceofExpression", "DEL SimpleName: request", "DEL MethodInvocation", "DEL SimpleType: HttpServletRequest", "DEL Block", "DEL CastExpression", "DEL SimpleName: context", "DEL CastExpression", "DEL SimpleType: HttpServletResponse", "DEL ThrowStatement", "DEL CastExpression", "DEL SimpleName: PortletResponse", "DEL ReturnStatement", "DEL SimpleName: PortletRequest", "DEL SimpleName: ServletContext", "DEL SimpleName: HttpServletRequest", "DEL SimpleName: PortletTilesContext", "DEL SimpleName: response", "DEL CastExpression", "DEL Block", "DEL SimpleName: context", "DEL ClassInstanceCreation", "DEL SimpleName: ServletContext", "DEL IfStatement", "DEL SimpleType: PortletResponse", "DEL SimpleName: TilesContext", "DEL SimpleName: PortletContext", "DEL SimpleName: PortletContext", "DEL Block", "DEL CastExpression", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: context", "DEL SimpleType: PortletRequest", "DEL SimpleName: context", "DEL SimpleType: ServletContext", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL SimpleName: getClass", "DEL SimpleName: response"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getInstance", "DEL SimpleType: PortletTilesContext", "DEL SimpleName: PortletContext", "DEL ClassInstanceCreation", "DEL SimpleType: ServletTilesContext", "DEL SimpleName: context", "DEL ReturnStatement", "DEL SimpleName: context", "DEL ThrowStatement", "DEL SimpleType: IllegalArgumentException", "DEL ReturnStatement", "DEL SimpleType: ServletContext", "DEL StringLiteral: \"Invalid context specified. \"", "DEL InfixExpression: +", "DEL Modifier: static", "DEL IfStatement", "DEL SimpleName: context", "DEL SimpleName: getName", "DEL Block", "DEL SimpleType: ServletContext", "DEL Modifier: public", "DEL ClassInstanceCreation", "DEL Block", "DEL CastExpression", "DEL SimpleType: PortletContext", "DEL MethodDeclaration", "DEL SimpleName: PortletContext", "DEL InstanceofExpression", "DEL SimpleName: ServletContext", "DEL SimpleName: ServletTilesContext", "DEL IfStatement", "DEL InstanceofExpression", "DEL SimpleName: getClass", "DEL SimpleName: IllegalArgumentException", "DEL Block", "DEL CastExpression", "DEL ClassInstanceCreation", "DEL SimpleType: PortletContext", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: context", "DEL Block", "DEL SimpleName: ServletContext", "DEL SimpleName: PortletTilesContext", "DEL SimpleName: context"]}]}}, {"TilesContextFactory_diff": {"operations": ["Update TypeDeclaration: class(225) to interface", "Update QualifiedName: org.apache.tiles.TilesContext(20) to org.apache.tiles.TilesApplicationContext", "Update QualifiedName: org.apache.tiles.context.portlet.PortletTilesContext(22) to org.apache.tiles.TilesRequestContext", "Update QualifiedName: org.apache.tiles.context.servlet.ServletTilesContext(24) to java.util.Map", "Insert MethodDeclaration(41) into TypeDeclaration: interface(70) at 4", "Insert MethodDeclaration(69) into TypeDeclaration: interface(70) at 5", "Insert TagElement: @since(13) into Javadoc(14) at 2", "Insert PrimitiveType: void(20) into MethodDeclaration(26) at 1", "Insert SimpleName: init(21) into MethodDeclaration(26) at 2", "Insert Javadoc(33) into MethodDeclaration(41) at 0", "Insert SimpleType: TilesApplicationContext(35) into MethodDeclaration(41) at 1", "Insert SimpleName: createApplicationContext(36) into MethodDeclaration(41) at 2", "Move SingleVariableDeclaration(182) into MethodDeclaration(41) at 3", "Insert Javadoc(53) into MethodDeclaration(69) at 0", "Update SimpleType: TilesContext(177) to TilesRequestContext", "Move SimpleType: TilesContext(177) into MethodDeclaration(69) at 1", "Insert SimpleName: createRequestContext(56) into MethodDeclaration(69) at 2", "Move SingleVariableDeclaration(107) into MethodDeclaration(69) at 3", "Move SingleVariableDeclaration(111) into MethodDeclaration(69) at 4", "Move SingleVariableDeclaration(115) into MethodDeclaration(69) at 5", "Update TextElement: Creates an instance of the appropriate TilesContext implementation.(26) to Creates an instance of the appropriate TilesApplicationContext implementation.", "Update TextElement:  $Rev$ $Date$(28) to  $Id$", "Insert TextElement:  Sep 21, 2006(12) into TagElement: @since(13) at 0", "Update SimpleType: Object(42) to Map", "Update SimpleName: context(43) to configurationParameters", "Insert TagElement(28) into Javadoc(33) at 0", "Insert TagElement: @param(30) into Javadoc(33) at 1", "Insert TagElement: @return(32) into Javadoc(33) at 2", "Update SimpleName: ServletTilesContext(120) to TilesApplicationContext", "Move SimpleName: ServletTilesContext(120) into SimpleType: TilesApplicationContext(35) at 0", "Insert TagElement(44) into Javadoc(53) at 0", "Insert TagElement: @param(46) into Javadoc(53) at 1", "Insert TagElement: @param(48) into Javadoc(53) at 2", "Insert TagElement: @param(50) into Javadoc(53) at 3", "Insert TagElement: @return(52) into Javadoc(53) at 4", "Update SimpleName: TilesContext(176) to TilesRequestContext", "Update TextElement: Creates a TilesContext from parameters found in the Servlet environment.(33) to Initialize the factory", "Update SimpleName: Object(41) to Map", "Insert TextElement: Create a TilesApplicationContext for the given context.(27) into TagElement(28) at 0", "Insert SimpleName: context(29) into TagElement: @param(30) at 0", "Insert TextElement:  TilesApplicationContext(31) into TagElement: @return(32) at 0", "Insert TextElement: Create a TilesRequestContext for the given context,(42) into TagElement(44) at 0", "Insert TextElement: request, and response.(43) into TagElement(44) at 1", "Insert SimpleName: context(45) into TagElement: @param(46) at 0", "Insert SimpleName: request(47) into TagElement: @param(48) at 0", "Insert SimpleName: response(49) into TagElement: @param(50) at 0", "Insert TextElement:   TilesRequestContext(51) into TagElement: @return(52) at 0", "Delete QualifiedName: javax.servlet.ServletContext(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: javax.servlet.ServletRequest(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: javax.servlet.ServletResponse(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: javax.servlet.http.HttpServletRequest(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: javax.servlet.http.HttpServletResponse(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: javax.servlet.jsp.PageContext(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: javax.portlet.PortletContext(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: javax.portlet.PortletRequest(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: javax.portlet.PortletResponse(18)", "Delete ImportDeclaration(19)", "Delete Modifier: public(36)", "Delete Modifier: static(37)", "Delete SimpleName: TilesContext(38)", "Delete SimpleType: TilesContext(39)", "Delete SimpleName: getInstance(40)", "Delete SimpleName: Object(45)", "Delete SimpleType: Object(46)", "Delete SimpleName: request(47)", "Delete SingleVariableDeclaration(48)", "Delete SimpleName: context(49)", "Delete SimpleName: ServletContext(50)", "Delete SimpleType: ServletContext(51)", "Delete InstanceofExpression(52)", "Delete SimpleName: ServletTilesContext(53)", "Delete SimpleType: ServletTilesContext(54)", "Delete SimpleName: ServletContext(55)", "Delete SimpleType: ServletContext(56)", "Delete SimpleName: context(57)", "Delete CastExpression(58)", "Delete SimpleName: HttpServletRequest(59)", "Delete SimpleType: HttpServletRequest(60)", "Delete SimpleName: request(61)", "Delete CastExpression(62)", "Delete ClassInstanceCreation(63)", "Delete ReturnStatement(64)", "Delete Block(65)", "Delete SimpleName: context(66)", "Delete SimpleName: PortletContext(67)", "Delete SimpleType: PortletContext(68)", "Delete InstanceofExpression(69)", "Delete SimpleName: PortletTilesContext(70)", "Delete SimpleType: PortletTilesContext(71)", "Delete SimpleName: PortletContext(72)", "Delete SimpleType: PortletContext(73)", "Delete SimpleName: context(74)", "Delete CastExpression(75)", "Delete SimpleName: PortletRequest(76)", "Delete SimpleType: PortletRequest(77)", "Delete SimpleName: request(78)", "Delete CastExpression(79)", "Delete ClassInstanceCreation(80)", "Delete ReturnStatement(81)", "Delete Block(82)", "Delete SimpleName: IllegalArgumentException(83)", "Delete SimpleType: IllegalArgumentException(84)", "Delete StringLiteral: \"Invalid context specified. \"(85)", "Delete SimpleName: context(86)", "Delete SimpleName: getClass(87)", "Delete MethodInvocation(88)", "Delete SimpleName: getName(89)", "Delete MethodInvocation(90)", "Delete InfixExpression: +(91)", "Delete ClassInstanceCreation(92)", "Delete ThrowStatement(93)", "Delete Block(94)", "Delete IfStatement(95)", "Delete IfStatement(96)", "Delete Block(97)", "Delete Modifier: public(99)", "Delete Modifier: static(100)", "Delete SimpleName: TilesContext(101)", "Delete SimpleType: TilesContext(102)", "Delete SimpleName: getInstance(103)", "Delete SimpleName: context(116)", "Delete SimpleName: ServletContext(117)", "Delete SimpleType: ServletContext(118)", "Delete InstanceofExpression(119)", "Delete SimpleType: ServletTilesContext(121)", "Delete SimpleName: ServletContext(122)", "Delete SimpleType: ServletContext(123)", "Delete SimpleName: context(124)", "Delete CastExpression(125)", "Delete SimpleName: HttpServletRequest(126)", "Delete SimpleType: HttpServletRequest(127)", "Delete SimpleName: request(128)", "Delete CastExpression(129)", "Delete SimpleName: HttpServletResponse(130)", "Delete SimpleType: HttpServletResponse(131)", "Delete SimpleName: response(132)", "Delete CastExpression(133)", "Delete ClassInstanceCreation(134)", "Delete ReturnStatement(135)", "Delete Block(136)", "Delete SimpleName: context(137)", "Delete SimpleName: PortletContext(138)", "Delete SimpleType: PortletContext(139)", "Delete InstanceofExpression(140)", "Delete SimpleName: PortletTilesContext(141)", "Delete SimpleType: PortletTilesContext(142)", "Delete SimpleName: PortletContext(143)", "Delete SimpleType: PortletContext(144)", "Delete SimpleName: context(145)", "Delete CastExpression(146)", "Delete SimpleName: PortletRequest(147)", "Delete SimpleType: PortletRequest(148)", "Delete SimpleName: request(149)", "Delete CastExpression(150)", "Delete SimpleName: PortletResponse(151)", "Delete SimpleType: PortletResponse(152)", "Delete SimpleName: response(153)", "Delete CastExpression(154)", "Delete ClassInstanceCreation(155)", "Delete ReturnStatement(156)", "Delete Block(157)", "Delete SimpleName: IllegalArgumentException(158)", "Delete SimpleType: IllegalArgumentException(159)", "Delete StringLiteral: \"Invalid context specified. \"(160)", "Delete SimpleName: context(161)", "Delete SimpleName: getClass(162)", "Delete MethodInvocation(163)", "Delete SimpleName: getName(164)", "Delete MethodInvocation(165)", "Delete InfixExpression: +(166)", "Delete ClassInstanceCreation(167)", "Delete ThrowStatement(168)", "Delete Block(169)", "Delete IfStatement(170)", "Delete IfStatement(171)", "Delete Block(172)", "Delete MethodDeclaration(173)", "Delete Modifier: public(174)", "Delete Modifier: static(175)", "Delete SimpleName: getInstance(178)", "Delete SimpleName: context(183)", "Delete SimpleName: ServletContext(184)", "Delete SimpleType: ServletContext(185)", "Delete InstanceofExpression(186)", "Delete SimpleName: ServletTilesContext(187)", "Delete SimpleType: ServletTilesContext(188)", "Delete SimpleName: ServletContext(189)", "Delete SimpleType: ServletContext(190)", "Delete SimpleName: context(191)", "Delete CastExpression(192)", "Delete ClassInstanceCreation(193)", "Delete ReturnStatement(194)", "Delete Block(195)", "Delete SimpleName: context(196)", "Delete SimpleName: PortletContext(197)", "Delete SimpleType: PortletContext(198)", "Delete InstanceofExpression(199)", "Delete SimpleName: PortletTilesContext(200)", "Delete SimpleType: PortletTilesContext(201)", "Delete SimpleName: PortletContext(202)", "Delete SimpleType: PortletContext(203)", "Delete SimpleName: context(204)", "Delete CastExpression(205)", "Delete ClassInstanceCreation(206)", "Delete ReturnStatement(207)", "Delete Block(208)", "Delete SimpleName: IllegalArgumentException(209)", "Delete SimpleType: IllegalArgumentException(210)", "Delete StringLiteral: \"Invalid context specified. \"(211)", "Delete SimpleName: context(212)", "Delete SimpleName: getClass(213)", "Delete MethodInvocation(214)", "Delete SimpleName: getName(215)", "Delete MethodInvocation(216)", "Delete InfixExpression: +(217)", "Delete ClassInstanceCreation(218)", "Delete ThrowStatement(219)", "Delete Block(220)", "Delete IfStatement(221)", "Delete IfStatement(222)", "Delete Block(223)", "Delete MethodDeclaration(224)"]}}, {"UrlDefinitionsFactory_cluster": {"actions": [{"root": "UPDATE from org.apache.tiles.TilesContext to org.apache.tiles", "operations": ["UPD QualifiedName: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles"]}, {"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleName: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.ComponentDefinition", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.ComponentDefinitions"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.DefinitionsFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.DefinitionsFactoryException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.DefinitionsReader"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.ReloadableDefinitionsFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.TilesUtilImpl", "DEL ImportDeclaration"]}]}}, {"UrlDefinitionsFactory_diff": {"operations": ["Update QualifiedName: org.apache.tiles.TilesContext(38) to org.apache.tiles", "Update SimpleType: TilesContext(298) to TilesRequestContext", "Update SimpleType: TilesContext(444) to TilesRequestContext", "Update SimpleType: TilesContext(740) to TilesRequestContext", "Update SimpleName: TilesContext(297) to TilesRequestContext", "Update SimpleName: TilesContext(443) to TilesRequestContext", "Update SimpleName: TilesContext(739) to TilesRequestContext", "Delete QualifiedName: org.apache.tiles.ComponentDefinition(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.tiles.ComponentDefinitions(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.tiles.DefinitionsFactory(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.tiles.DefinitionsFactoryException(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.tiles.DefinitionsReader(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.tiles.ReloadableDefinitionsFactory(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.tiles.TilesUtilImpl(40)", "Delete ImportDeclaration(41)"]}}, {"TilesFilter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "UPDATE from javax.servlet.Filter to javax.servlet", "operations": ["UPD QualifiedName: javax.servlet.Filter from javax.servlet.Filter to javax.servlet"]}, {"root": "UPDATE from javax.servlet.ServletException to org.apache.tiles.TilesApplicationContext", "operations": ["UPD QualifiedName: javax.servlet.ServletException from javax.servlet.ServletException to org.apache.tiles.TilesApplicationContext"]}, {"root": "UPDATE from org.apache.tiles.TilesContext to org.apache.tiles.context.BasicTilesContextFactory", "operations": ["UPD QualifiedName: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles.context.BasicTilesContextFactory"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: ServletContext to VariableDeclarationStatement at 0", "INS SimpleName: servletContext to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ServletContext to SimpleType: ServletContext at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: TilesContextFactory to SimpleType: TilesContextFactory at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: TilesContextFactory to VariableDeclarationStatement at 0", "INS SimpleName: BasicTilesContextFactory to SimpleType: BasicTilesContextFactory at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: contextFactory to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: BasicTilesContextFactory to ClassInstanceCreation at 0"]}, {"root": "UPDATE from TilesContext to TilesApplicationContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesApplicationContext", "UPD SimpleName: TilesContext from TilesContext to TilesApplicationContext"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from TilesContextFactory to contextFactory", "operations": ["UPD SimpleName: TilesContextFactory from TilesContextFactory to contextFactory"]}, {"root": "UPDATE from getInstance to createApplicationContext", "operations": ["UPD SimpleName: getInstance from getInstance to createApplicationContext"]}, {"root": "UPDATE from request to servletContext", "operations": ["UPD SimpleName: request from request to servletContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.FilterChain"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.servlet.FilterConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: javax.servlet.ServletRequest", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: javax.servlet.ServletResponse", "DEL ImportDeclaration"]}]}}, {"TilesFilter_diff": {"operations": ["Move ImportDeclaration(11) into CompilationUnit(298) at 11", "Move ImportDeclaration(23) into CompilationUnit(298) at 15", "Update QualifiedName: javax.servlet.Filter(4) to javax.servlet", "Update QualifiedName: javax.servlet.ServletException(10) to org.apache.tiles.TilesApplicationContext", "Update QualifiedName: org.apache.tiles.TilesContext(22) to org.apache.tiles.context.BasicTilesContextFactory", "Insert VariableDeclarationStatement(91) into Block(189) at 0", "Insert VariableDeclarationStatement(99) into Block(189) at 1", "Insert SimpleType: ServletContext(85) into VariableDeclarationStatement(91) at 0", "Insert VariableDeclarationFragment(90) into VariableDeclarationStatement(91) at 1", "Insert SimpleType: TilesContextFactory(93) into VariableDeclarationStatement(99) at 0", "Insert VariableDeclarationFragment(98) into VariableDeclarationStatement(99) at 1", "Update SimpleType: TilesContext(93) to TilesApplicationContext", "Insert SimpleName: ServletContext(84) into SimpleType: ServletContext(85) at 0", "Insert SimpleName: servletContext(86) into VariableDeclarationFragment(90) at 0", "Move MethodInvocation(99) into VariableDeclarationFragment(90) at 1", "Insert SimpleName: TilesContextFactory(92) into SimpleType: TilesContextFactory(93) at 0", "Insert SimpleName: contextFactory(94) into VariableDeclarationFragment(98) at 0", "Insert ClassInstanceCreation(97) into VariableDeclarationFragment(98) at 1", "Update SimpleName: TilesContext(92) to TilesApplicationContext", "Insert SimpleType: BasicTilesContextFactory(96) into ClassInstanceCreation(97) at 0", "Update SimpleName: TilesContextFactory(95) to contextFactory", "Update SimpleName: getInstance(96) to createApplicationContext", "Update SimpleName: request(100) to servletContext", "Insert SimpleName: BasicTilesContextFactory(95) into SimpleType: BasicTilesContextFactory(96) at 0", "Delete QualifiedName: javax.servlet.FilterChain(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: javax.servlet.FilterConfig(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: javax.servlet.ServletRequest(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: javax.servlet.ServletResponse(14)", "Delete ImportDeclaration(15)"]}}, {"TilesListener_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.tiles.context.BasicTilesContextFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "UPDATE from org.apache.tiles.TilesContext to org.apache.tiles.TilesApplicationContext", "operations": ["UPD QualifiedName: org.apache.tiles.TilesContext from org.apache.tiles.TilesContext to org.apache.tiles.TilesApplicationContext"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: BasicTilesContextFactory to SimpleType: BasicTilesContextFactory at 0", "INS SimpleName: TilesContextFactory to SimpleType: TilesContextFactory at 0", "INS SimpleType: BasicTilesContextFactory to ClassInstanceCreation at 0", "INS SimpleType: TilesContextFactory to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: factory to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from TilesContext to TilesApplicationContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesApplicationContext", "UPD SimpleName: TilesContext from TilesContext to TilesApplicationContext"]}, {"root": "UPDATE from TilesContextFactory to factory", "operations": ["UPD SimpleName: TilesContextFactory from TilesContextFactory to factory"]}, {"root": "UPDATE from getInstance to createApplicationContext", "operations": ["UPD SimpleName: getInstance from getInstance to createApplicationContext"]}]}}, {"TilesListener_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(510) at 16", "Update QualifiedName: org.apache.tiles.TilesContext(26) to org.apache.tiles.TilesApplicationContext", "Insert QualifiedName: org.apache.tiles.context.BasicTilesContextFactory(32) into ImportDeclaration(33) at 0", "Insert VariableDeclarationStatement(349) into Block(367) at 0", "Insert SimpleType: TilesContextFactory(343) into VariableDeclarationStatement(349) at 0", "Insert VariableDeclarationFragment(348) into VariableDeclarationStatement(349) at 1", "Update SimpleType: TilesContext(341) to TilesApplicationContext", "Insert SimpleName: TilesContextFactory(342) into SimpleType: TilesContextFactory(343) at 0", "Insert SimpleName: factory(344) into VariableDeclarationFragment(348) at 0", "Insert ClassInstanceCreation(347) into VariableDeclarationFragment(348) at 1", "Update SimpleName: TilesContext(340) to TilesApplicationContext", "Insert SimpleType: BasicTilesContextFactory(346) into ClassInstanceCreation(347) at 0", "Update SimpleName: TilesContextFactory(343) to factory", "Update SimpleName: getInstance(344) to createApplicationContext", "Insert SimpleName: BasicTilesContextFactory(345) into SimpleType: BasicTilesContextFactory(346) at 0"]}}, {"TilesServlet_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from java.util.Iterator to org.apache.tiles.context.BasicTilesContextFactory", "operations": ["UPD QualifiedName: java.util.Iterator from java.util.Iterator to org.apache.tiles.context.BasicTilesContextFactory"]}, {"root": "UPDATE from A comma-separated list of filenames representing the  to A comma-separated list of filenames representing the", "operations": ["UPD TextElement: A comma-separated list of filenames representing the  from A comma-separated list of filenames representing the  to A comma-separated list of filenames representing the"]}, {"root": "UPDATE from all of which are processed. If a  to all of which are processed. If a", "operations": ["UPD TextElement: all of which are processed. If a  from all of which are processed. If a  to all of which are processed. If a"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: BasicTilesContextFactory to SimpleType: BasicTilesContextFactory at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TilesContextFactory to SimpleType: TilesContextFactory at 0", "INS SimpleType: TilesContextFactory to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: factory to VariableDeclarationFragment at 0", "INS SimpleType: BasicTilesContextFactory to ClassInstanceCreation at 0"]}, {"root": "UPDATE from TilesContext to TilesApplicationContext", "operations": ["UPD SimpleName: TilesContext from TilesContext to TilesApplicationContext", "UPD SimpleType: TilesContext from TilesContext to TilesApplicationContext"]}, {"root": "UPDATE from TilesContextFactory to factory", "operations": ["UPD SimpleName: TilesContextFactory from TilesContextFactory to factory"]}, {"root": "UPDATE from getInstance to createApplicationContext", "operations": ["UPD SimpleName: getInstance from getInstance to createApplicationContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.logging.Level", "DEL ImportDeclaration"]}]}}, {"TilesServlet_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(557) at 11", "Update QualifiedName: java.util.Iterator(4) to org.apache.tiles.context.BasicTilesContextFactory", "Update TextElement: A comma-separated list of filenames representing the (168) to A comma-separated list of filenames representing the", "Update TextElement: all of which are processed. If a (272) to all of which are processed. If a", "Insert VariableDeclarationStatement(404) into Block(422) at 0", "Insert SimpleType: TilesContextFactory(398) into VariableDeclarationStatement(404) at 0", "Insert VariableDeclarationFragment(403) into VariableDeclarationStatement(404) at 1", "Update SimpleType: TilesContext(400) to TilesApplicationContext", "Insert SimpleName: TilesContextFactory(397) into SimpleType: TilesContextFactory(398) at 0", "Insert SimpleName: factory(399) into VariableDeclarationFragment(403) at 0", "Insert ClassInstanceCreation(402) into VariableDeclarationFragment(403) at 1", "Update SimpleName: TilesContext(399) to TilesApplicationContext", "Insert SimpleType: BasicTilesContextFactory(401) into ClassInstanceCreation(402) at 0", "Update SimpleName: TilesContextFactory(402) to factory", "Update SimpleName: getInstance(403) to createApplicationContext", "Insert SimpleName: BasicTilesContextFactory(400) into SimpleType: BasicTilesContextFactory(401) at 0", "Delete QualifiedName: java.util.logging.Level(14)", "Delete ImportDeclaration(15)"]}}, {"InitDefinitionsTag_cluster": {"actions": [{"root": "UPDATE from org.apache.tiles.TilesUtil to org.apache.tiles", "operations": ["UPD QualifiedName: org.apache.tiles.TilesUtil from org.apache.tiles.TilesUtil to org.apache.tiles"]}, {"root": "UPDATE from org.apache.tiles.context.TilesContextFactory to org.apache.tiles.context.TilesContextAccess", "operations": ["UPD QualifiedName: org.apache.tiles.context.TilesContextFactory from org.apache.tiles.context.TilesContextFactory to org.apache.tiles.context.TilesContextAccess"]}, {"root": "UPDATE from TilesContext to TilesApplicationContext", "operations": ["UPD SimpleName: TilesContext from TilesContext to TilesApplicationContext", "UPD SimpleType: TilesContext from TilesContext to TilesApplicationContext"]}, {"root": "UPDATE from TilesContextFactory to TilesContextAccess", "operations": ["UPD SimpleName: TilesContextFactory from TilesContextFactory to TilesContextAccess"]}, {"root": "UPDATE from pageContext to getApplicationContext", "operations": ["UPD SimpleName: pageContext from pageContext to getApplicationContext"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pageContext to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.DefinitionsFactory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.DefinitionsFactoryConfig"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.DefinitionsFactoryException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.TilesContext", "DEL ImportDeclaration"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRequest", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: pageContext", "DEL SimpleName: getResponse", "DEL MethodInvocation"]}]}}, {"InitDefinitionsTag_diff": {"operations": ["Update QualifiedName: org.apache.tiles.TilesUtil(14) to org.apache.tiles", "Update QualifiedName: org.apache.tiles.context.TilesContextFactory(16) to org.apache.tiles.context.TilesContextAccess", "Update SimpleType: TilesContext(109) to TilesApplicationContext", "Update SimpleName: TilesContext(108) to TilesApplicationContext", "Update SimpleName: TilesContextFactory(111) to TilesContextAccess", "Update SimpleName: pageContext(116) to getApplicationContext", "Move SimpleName: pageContext(116) into MethodInvocation(108) at 1", "Delete QualifiedName: org.apache.tiles.DefinitionsFactory(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.tiles.DefinitionsFactoryConfig(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.tiles.DefinitionsFactoryException(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.tiles.TilesContext(12)", "Delete ImportDeclaration(13)", "Delete SimpleName: getInstance(112)", "Delete SimpleName: getRequest(117)", "Delete MethodInvocation(118)", "Delete SimpleName: pageContext(119)", "Delete SimpleName: getResponse(120)", "Delete MethodInvocation(121)"]}}, {"InsertTag_cluster": {"actions": [{"root": "UPDATE from org.apache.tiles.TilesUtil to org.apache.tiles", "operations": ["UPD QualifiedName: org.apache.tiles.TilesUtil from org.apache.tiles.TilesUtil to org.apache.tiles"]}, {"root": "UPDATE from The role delimiter.  to The role delimiter.", "operations": ["UPD TextElement: The role delimiter.  from The role delimiter.  to The role delimiter."]}, {"root": "UPDATE from Commons Logging instance.  to Commons Logging instance.", "operations": ["UPD TextElement: Commons Logging instance.  from Commons Logging instance.  to Commons Logging instance."]}, {"root": "UPDATE from Flush attribute value.  to Flush attribute value.", "operations": ["UPD TextElement: Flush attribute value.  from Flush attribute value.  to Flush attribute value."]}, {"root": "UPDATE from Name to insert.  to Name to insert.", "operations": ["UPD TextElement: Name to insert.  from Name to insert.  to Name to insert."]}, {"root": "UPDATE from Optional attribute to explicitly specify whether the thing being  to Optional attribute to explicitly specify whether the thing being", "operations": ["UPD TextElement: Optional attribute to explicitly specify whether the thing being  from Optional attribute to explicitly specify whether the thing being  to Optional attribute to explicitly specify whether the thing being"]}, {"root": "UPDATE from Current component context.  to Current component context.", "operations": ["UPD TextElement: Current component context.  from Current component context.  to Current component context."]}, {"root": "UPDATE from Final handler of tag methods.  to Final handler of tag methods.", "operations": ["UPD TextElement: Final handler of tag methods.  from Final handler of tag methods.  to Final handler of tag methods."]}, {"root": "UPDATE from Trick to allows inner classes to access pageContext.  to Trick to allows inner classes to access pageContext.", "operations": ["UPD TextElement: Trick to allows inner classes to access pageContext.  from Trick to allows inner classes to access pageContext.  to Trick to allows inner classes to access pageContext."]}, {"root": "UPDATE from <code>atribute</code>, and <code>template</code>  If type is string,  to <code>atribute</code>, and <code>template</code>  If type is string,", "operations": ["UPD TextElement: <code>atribute</code>, and <code>template</code>  If type is string,  from <code>atribute</code>, and <code>template</code>  If type is string,  to <code>atribute</code>, and <code>template</code>  If type is string,"]}, {"root": "UPDATE from the attribute value passed in will be printed directly to the PrintWriter.  If  to the attribute value passed in will be printed directly to the PrintWriter.  If", "operations": ["UPD TextElement: the attribute value passed in will be printed directly to the PrintWriter.  If  from the attribute value passed in will be printed directly to the PrintWriter.  If  to the attribute value passed in will be printed directly to the PrintWriter.  If"]}, {"root": "UPDATE from If type is attribute, the value will be processed as an attribute of  to If type is attribute, the value will be processed as an attribute of", "operations": ["UPD TextElement: If type is attribute, the value will be processed as an attribute of  from If type is attribute, the value will be processed as an attribute of  to If type is attribute, the value will be processed as an attribute of"]}, {"root": "UPDATE from the current definition.  If type is template, the value will be a  to the current definition.  If type is template, the value will be a", "operations": ["UPD TextElement: the current definition.  If type is template, the value will be a  from the current definition.  If type is template, the value will be a  to the current definition.  If type is template, the value will be a"]}, {"root": "UPDATE from  - Throws by underlying nested call to  to  - Throws by underlying nested call to", "operations": ["UPD TextElement:  - Throws by underlying nested call to  from  - Throws by underlying nested call to  to  - Throws by underlying nested call to"]}, {"root": "UPDATE from TilesContext to TilesRequestContext", "operations": ["UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleType: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext", "UPD SimpleName: TilesContext from TilesContext to TilesRequestContext"]}, {"root": "UPDATE from TilesContextFactory to TagUtils", "operations": ["UPD SimpleName: TilesContextFactory from TilesContextFactory to TagUtils", "UPD SimpleName: TilesContextFactory from TilesContextFactory to TagUtils"]}, {"root": "UPDATE from getInstance to getTilesRequestContext", "operations": ["UPD SimpleName: getInstance from getInstance to getTilesRequestContext", "UPD SimpleName: getInstance from getInstance to getTilesRequestContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.ComponentAttribute"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.TilesContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.tiles.context.TilesContextFactory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.ComponentContext", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.ComponentDefinition", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.ViewPreparer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.tiles.NoSuchDefinitionException", "DEL ImportDeclaration"]}]}}, {"InsertTag_diff": {"operations": ["Update QualifiedName: org.apache.tiles.TilesUtil(38) to org.apache.tiles", "Update TextElement: The role delimiter. (57) to The role delimiter.", "Update TextElement: Commons Logging instance. (71) to Commons Logging instance.", "Update TextElement: Flush attribute value. (87) to Flush attribute value.", "Update TextElement: Name to insert. (96) to Name to insert.", "Update TextElement: Optional attribute to explicitly specify whether the thing being (117) to Optional attribute to explicitly specify whether the thing being", "Update TextElement: Current component context. (138) to Current component context.", "Update TextElement: Final handler of tag methods. (147) to Final handler of tag methods.", "Update TextElement: Trick to allows inner classes to access pageContext. (157) to Trick to allows inner classes to access pageContext.", "Update TextElement: <code>atribute</code>, and <code>template</code>  If type is string, (764) to <code>atribute</code>, and <code>template</code>  If type is string,", "Update TextElement: the attribute value passed in will be printed directly to the PrintWriter.  If (765) to the attribute value passed in will be printed directly to the PrintWriter.  If", "Update TextElement: If type is attribute, the value will be processed as an attribute of (767) to If type is attribute, the value will be processed as an attribute of", "Update TextElement: the current definition.  If type is template, the value will be a (768) to the current definition.  If type is template, the value will be a", "Update TextElement:  - Throws by underlying nested call to (878) to  - Throws by underlying nested call to", "Update SimpleType: TilesContext(999) to TilesRequestContext", "Update SimpleName: TilesContext(998) to TilesRequestContext", "Update SimpleName: TilesContextFactory(1001) to TagUtils", "Update SimpleName: getInstance(1002) to getTilesRequestContext", "Update SimpleType: TilesContext(1884) to TilesRequestContext", "Update SimpleName: TilesContext(1883) to TilesRequestContext", "Update SimpleName: TilesContextFactory(1886) to TagUtils", "Update SimpleName: getInstance(1887) to getTilesRequestContext", "Delete QualifiedName: org.apache.tiles.ComponentAttribute(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.tiles.TilesContext(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.tiles.context.TilesContextFactory(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.tiles.ComponentContext(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.tiles.ComponentDefinition(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.tiles.ViewPreparer(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.tiles.NoSuchDefinitionException(36)", "Delete ImportDeclaration(37)"]}}], "commit_stats": [{"total_files": 28, "deleted_files": 3, "testing": "True", "maintenance": "True", "build": "False"}]}