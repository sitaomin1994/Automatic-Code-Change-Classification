{"application": "apache-calcite", "csha": "9f44aea5b3168f8372717daa29021aca2030cd65", "files": [{"RelBuilder_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 101", "operations": ["INS SimpleName: minus to MethodInvocation at 0", "INS SimpleName: all to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: minus to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 101"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: RelBuilder to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement:  Whether to create EXCEPT ALL to TagElement: @param at 1", "INS QualifiedName: org.apache.calcite.rel.core.Minus to TagElement: @link at 0", "INS TextElement:  of the  to TagElement at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: all to TagElement: @param at 0", "INS TextElement: most recent relational expressions on the stack. to TagElement at 4", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @code to TagElement at 3", "INS TextElement: Creates a  to TagElement at 0", "INS TagElement: @link to TagElement at 1", "INS TextElement:  n to TagElement: @code at 0"]}, {"root": "INS SimpleType: RelBuilder to MethodDeclaration at 2", "operations": ["INS SimpleType: RelBuilder to MethodDeclaration at 2", "INS SimpleName: RelBuilder to SimpleType: RelBuilder at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: all to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: n to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 3"]}, {"root": "INS SimpleName: n to MethodInvocation at 3", "operations": ["INS SimpleName: n to MethodInvocation at 3"]}, {"root": "UPDATE from \"bad INTERSECT/UNION input count\" to \"bad INTERSECT/UNION/EXCEPT input count\"", "operations": ["UPD StringLiteral: \"bad INTERSECT/UNION input count\" from \"bad INTERSECT/UNION input count\" to \"bad INTERSECT/UNION/EXCEPT input count\""]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL SimpleName: AssertionError", "DEL Block", "DEL ThrowStatement", "DEL SimpleType: AssertionError", "DEL NumberLiteral: 2", "DEL StringLiteral: \"bad EXCEPT input count\"", "DEL ClassInstanceCreation", "DEL SimpleName: n", "DEL IfStatement"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL NumberLiteral: 2", "operations": ["DEL NumberLiteral: 2"]}]}}, {"RelBuilder_diff": {"operations": ["Insert MethodDeclaration(4570) into TypeDeclaration: class(7174) at 101", "Move Javadoc(4567) into MethodDeclaration(4570) at 0", "Insert Modifier: public(4557) into MethodDeclaration(4570) at 1", "Move SimpleType: RelBuilder(4570) into MethodDeclaration(4570) at 2", "Insert SimpleName: minus(4560) into MethodDeclaration(4570) at 3", "Move SingleVariableDeclaration(4574) into MethodDeclaration(4570) at 4", "Insert Block(4569) into MethodDeclaration(4570) at 5", "Insert Javadoc(4582) into MethodDeclaration(4600) at 0", "Insert SimpleType: RelBuilder(4585) into MethodDeclaration(4600) at 2", "Insert SingleVariableDeclaration(4589) into MethodDeclaration(4600) at 4", "Insert SingleVariableDeclaration(4592) into MethodDeclaration(4600) at 5", "Move SwitchCase(4400) into SwitchStatement(4409) at 3", "Insert ReturnStatement(4568) into Block(4569) at 0", "Insert TagElement(4578) into Javadoc(4582) at 0", "Insert TagElement: @param(4581) into Javadoc(4582) at 1", "Insert SimpleName: RelBuilder(4584) into SimpleType: RelBuilder(4585) at 0", "Insert PrimitiveType: boolean(4587) into SingleVariableDeclaration(4589) at 0", "Insert SimpleName: all(4588) into SingleVariableDeclaration(4589) at 1", "Insert PrimitiveType: int(4590) into SingleVariableDeclaration(4592) at 0", "Insert SimpleName: n(4591) into SingleVariableDeclaration(4592) at 1", "Insert MethodInvocation(4567) into ReturnStatement(4568) at 0", "Insert TextElement: Creates a (4571) into TagElement(4578) at 0", "Insert TagElement: @link(4573) into TagElement(4578) at 1", "Insert TextElement:  of the (4574) into TagElement(4578) at 2", "Insert TagElement: @code(4576) into TagElement(4578) at 3", "Insert TextElement: most recent relational expressions on the stack.(4577) into TagElement(4578) at 4", "Insert SimpleName: all(4579) into TagElement: @param(4581) at 0", "Insert TextElement:  Whether to create EXCEPT ALL(4580) into TagElement: @param(4581) at 1", "Insert SimpleName: minus(4564) into MethodInvocation(4567) at 0", "Insert SimpleName: all(4565) into MethodInvocation(4567) at 1", "Insert NumberLiteral: 2(4566) into MethodInvocation(4567) at 2", "Insert QualifiedName: org.apache.calcite.rel.core.Minus(4572) into TagElement: @link(4573) at 0", "Insert TextElement:  n(4575) into TagElement: @code(4576) at 0", "Insert SimpleName: n(4596) into MethodInvocation(4597) at 3", "Update StringLiteral: \"bad INTERSECT/UNION input count\"(4393) to \"bad INTERSECT/UNION/EXCEPT input count\"", "Delete SimpleName: n(4401)", "Delete NumberLiteral: 2(4402)", "Delete InfixExpression: !=(4403)", "Delete SimpleName: AssertionError(4404)", "Delete SimpleType: AssertionError(4405)", "Delete StringLiteral: \"bad EXCEPT input count\"(4406)", "Delete ClassInstanceCreation(4407)", "Delete ThrowStatement(4408)", "Delete Block(4409)", "Delete IfStatement(4410)", "Delete BreakStatement(4411)", "Delete NumberLiteral: 2(4578)"]}}, {"PruneEmptyRules_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.calcite.rel.logical.LogicalMinus to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TypeLiteral to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: </ul> to TagElement at 7", "INS SimpleName: rel to MethodInvocation at 1", "INS SimpleName: input to MethodInvocation at 1", "INS QualifiedName: org.apache.calcite.rel.logical.LogicalMinus to TagElement: @link at 0", "INS QualifiedName: minus.all to MethodInvocation at 3", "INS Block to IfStatement at 1", "INS SimpleName: isEmpty to MethodInvocation at 0", "INS SimpleType: RelBuilder to VariableDeclarationStatement at 1", "INS TextElement: <p>Examples: to TagElement at 3", "INS TextElement: <ul> to TagElement at 4", "INS ExpressionStatement to SwitchStatement at 8", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0", "INS BreakStatement to SwitchStatement at 3", "INS StringLiteral: \"Minus\" to ClassInstanceCreation at 2", "INS SimpleName: LogicalMinus to SimpleType: LogicalMinus at 0", "INS SimpleName: inputs to EnhancedForStatement at 1", "INS SimpleType: RelNode to ParameterizedType: List<RelNode> at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: operand to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleType: RelNode to ParameterizedType: List<RelNode> at 1", "INS ExpressionStatement to SwitchStatement at 5", "INS SimpleName: onMatch to MethodDeclaration at 2", "INS SwitchCase to SwitchStatement at 7", "INS Javadoc to FieldDeclaration at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: getChildRels to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS Modifier: static to FieldDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: LogicalMinus to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: call to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to InfixExpression: < at 0", "INS NumberLiteral: 1 to SwitchCase at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: minus to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: LogicalMinus to SimpleType: LogicalMinus at 0", "INS TextElement: <li>Minus(Rel, Empty, Rel2) becomes Minus(Rel, Rel2) to TagElement at 5", "INS StringLiteral: \"planner promised us at least one Empty child\" to AssertStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to SwitchStatement at 2", "INS MethodInvocation to InfixExpression: < at 1", "INS ParameterizedType: List<RelNode> to VariableDeclarationStatement at 1", "INS SimpleName: RelOptUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Values to SimpleType: Values at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleType: LogicalMinus to VariableDeclarationStatement at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS QualifiedName: Values.IS_EMPTY to MethodInvocation at 3", "INS IfStatement to IfStatement at 2", "INS BooleanLiteral: true to MethodInvocation at 4", "INS SimpleName: getRowType to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 4", "INS SimpleName: minus to MethodInvocation at 0", "INS SimpleName: newInputs to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SwitchCase to SwitchStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationStatement to Block at 3", "INS Block to MethodDeclaration at 4", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Modifier: public to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 1", "INS AssertStatement to Block at 5", "INS SimpleType: Values to TypeLiteral at 0", "INS SimpleName: newInputs to VariableDeclarationFragment at 0", "INS SimpleName: newInputs to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: transformTo to MethodInvocation at 1", "INS SimpleName: minus to MethodInvocation at 2", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS TextElement: <li>Minus(Empty, Rel) becomes Empty to TagElement at 6", "INS MethodInvocation to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: newInputs to MethodInvocation at 0", "INS SwitchStatement to Block at 7", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TextElement: . to TagElement at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: RelOptRule to SimpleType: RelOptRule at 0", "INS SimpleType: RelOptRule to FieldDeclaration at 4", "INS SimpleName: minus to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 6", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: none to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS NumberLiteral: 0 to SwitchCase at 0", "INS EnhancedForStatement to Block at 4", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: input to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS BreakStatement to SwitchStatement at 9", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to FieldDeclaration at 1", "INS SimpleName: createCastRel to MethodInvocation at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: empty to MethodInvocation at 1", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: RelBuilder to SimpleType: RelBuilder at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: inputs to MethodInvocation at 0", "INS SimpleName: RelOptRule to SimpleType: RelOptRule at 0", "INS AssertStatement to Block at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: operand to MethodInvocation at 0", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS TagElement to Javadoc at 0", "INS TypeLiteral to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleType: RelOptRuleCall to SingleVariableDeclaration at 0", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: newInputs to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: LogicalMinus to TypeLiteral at 0", "INS TextElement: Rule that removes empty children of a to TagElement at 0", "INS InfixExpression: != to AssertStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: newInputs to MethodInvocation at 0", "INS SimpleName: MINUS_INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: newInputs to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: push to MethodInvocation at 1", "INS ParameterizedType: List<RelNode> to VariableDeclarationStatement at 1", "INS NullLiteral to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: RelOptRule to ClassInstanceCreation at 0", "INS SimpleName: inputs to InfixExpression: != at 0", "INS SimpleType: List to ParameterizedType: List<RelNode> at 0", "INS SimpleName: RelOptRuleCall to SimpleType: RelOptRuleCall at 0", "INS BreakStatement to SwitchStatement at 6", "INS SimpleType: List to ParameterizedType: List<RelNode> at 0", "INS SimpleName: inputs to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: unordered to MethodInvocation at 0", "INS BreakStatement to Block at 0", "INS ExpressionStatement to Block at 8", "INS SimpleType: RelNode to SingleVariableDeclaration at 0", "INS InfixExpression: < to AssertStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: RelOptRule to SimpleType: RelOptRule at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: RelOptRule to SimpleType: RelOptRule at 0", "INS SimpleName: intersect to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: RelOptRule to FieldDeclaration at 4", "INS SimpleName: intersect to MethodInvocation at 2", "INS SimpleName: operand to MethodInvocation at 0", "INS TypeLiteral to MethodInvocation at 1", "INS TextElement: <li>Intersect(Rel, Empty, Rel2) becomes Empty to TagElement at 6", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 2", "INS QualifiedName: Values.IS_EMPTY to MethodInvocation at 3", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleType: RelBuilder to VariableDeclarationStatement at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TextElement:  to to TagElement at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: INTERSECT_INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: build to MethodInvocation at 1", "INS Modifier: public to FieldDeclaration at 1", "INS SimpleName: rel to MethodInvocation at 1", "INS SimpleType: RelOptRule to ClassInstanceCreation at 0", "INS StringLiteral: \"Intersect\" to ClassInstanceCreation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: transformTo to MethodInvocation at 1", "INS SimpleName: call to MethodInvocation at 0", "INS TextElement: <ul> to TagElement at 5", "INS TextElement: <li>Intersect(Empty, Rel) becomes Empty to TagElement at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: LogicalIntersect to SimpleType: LogicalIntersect at 0", "INS SimpleType: LogicalIntersect to VariableDeclarationStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: operand to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS TextElement: empty if any of its children are empty. to TagElement at 3", "INS TextElement: Rule that converts a to TagElement at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: empty to MethodInvocation at 1", "INS TagElement: @link to TagElement at 1", "INS SimpleName: none to MethodInvocation at 0", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: RelBuilder to SimpleType: RelBuilder at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: Values to SimpleType: Values at 0", "INS TextElement: </ul> to TagElement at 8", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS TypeLiteral to MethodInvocation at 1", "INS SimpleType: RelOptRuleCall to SingleVariableDeclaration at 0", "INS SimpleName: RelOptRuleCall to SimpleType: RelOptRuleCall at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: onMatch to MethodDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: LogicalIntersect to TypeLiteral at 0", "INS SimpleName: push to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: unordered to MethodInvocation at 0", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: call to MethodInvocation at 0", "INS QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect to TagElement: @link at 0", "INS TextElement: <p>Examples: to TagElement at 4", "INS SimpleType: Values to TypeLiteral at 0", "INS NullLiteral to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: LogicalIntersect to SimpleType: LogicalIntersect at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}]}}, {"PruneEmptyRules_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(1035) at 13", "Insert ImportDeclaration(29) into CompilationUnit(1035) at 14", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalMinus(28) into ImportDeclaration(29) at 0", "Insert FieldDeclaration(430) into TypeDeclaration: class(1034) at 5", "Insert FieldDeclaration(512) into TypeDeclaration: class(1034) at 6", "Insert Javadoc(260) into FieldDeclaration(430) at 0", "Insert Modifier: public(261) into FieldDeclaration(430) at 1", "Insert Modifier: static(262) into FieldDeclaration(430) at 2", "Insert Modifier: final(263) into FieldDeclaration(430) at 3", "Insert SimpleType: RelOptRule(265) into FieldDeclaration(430) at 4", "Insert VariableDeclarationFragment(429) into FieldDeclaration(430) at 5", "Insert Javadoc(442) into FieldDeclaration(512) at 0", "Insert Modifier: public(443) into FieldDeclaration(512) at 1", "Insert Modifier: static(444) into FieldDeclaration(512) at 2", "Insert Modifier: final(445) into FieldDeclaration(512) at 3", "Insert SimpleType: RelOptRule(447) into FieldDeclaration(512) at 4", "Insert VariableDeclarationFragment(511) into FieldDeclaration(512) at 5", "Insert TagElement(259) into Javadoc(260) at 0", "Insert SimpleName: RelOptRule(264) into SimpleType: RelOptRule(265) at 0", "Insert SimpleName: MINUS_INSTANCE(266) into VariableDeclarationFragment(429) at 0", "Insert ClassInstanceCreation(428) into VariableDeclarationFragment(429) at 1", "Insert TagElement(441) into Javadoc(442) at 0", "Insert SimpleName: RelOptRule(446) into SimpleType: RelOptRule(447) at 0", "Insert SimpleName: INTERSECT_INSTANCE(448) into VariableDeclarationFragment(511) at 0", "Insert ClassInstanceCreation(510) into VariableDeclarationFragment(511) at 1", "Insert TextElement: Rule that removes empty children of a(250) into TagElement(259) at 0", "Insert TagElement: @link(252) into TagElement(259) at 1", "Insert TextElement: .(253) into TagElement(259) at 2", "Insert TextElement: <p>Examples:(254) into TagElement(259) at 3", "Insert TextElement: <ul>(255) into TagElement(259) at 4", "Insert TextElement: <li>Minus(Rel, Empty, Rel2) becomes Minus(Rel, Rel2)(256) into TagElement(259) at 5", "Insert TextElement: <li>Minus(Empty, Rel) becomes Empty(257) into TagElement(259) at 6", "Insert TextElement: </ul>(258) into TagElement(259) at 7", "Insert SimpleType: RelOptRule(268) into ClassInstanceCreation(428) at 0", "Insert MethodInvocation(284) into ClassInstanceCreation(428) at 1", "Insert StringLiteral: \"Minus\"(285) into ClassInstanceCreation(428) at 2", "Insert AnonymousClassDeclaration(427) into ClassInstanceCreation(428) at 3", "Insert TextElement: Rule that converts a(431) into TagElement(441) at 0", "Insert TagElement: @link(433) into TagElement(441) at 1", "Insert TextElement:  to(434) into TagElement(441) at 2", "Insert TextElement: empty if any of its children are empty.(435) into TagElement(441) at 3", "Insert TextElement: <p>Examples:(436) into TagElement(441) at 4", "Insert TextElement: <ul>(437) into TagElement(441) at 5", "Insert TextElement: <li>Intersect(Rel, Empty, Rel2) becomes Empty(438) into TagElement(441) at 6", "Insert TextElement: <li>Intersect(Empty, Rel) becomes Empty(439) into TagElement(441) at 7", "Insert TextElement: </ul>(440) into TagElement(441) at 8", "Insert SimpleType: RelOptRule(450) into ClassInstanceCreation(510) at 0", "Insert MethodInvocation(466) into ClassInstanceCreation(510) at 1", "Insert StringLiteral: \"Intersect\"(467) into ClassInstanceCreation(510) at 2", "Insert AnonymousClassDeclaration(509) into ClassInstanceCreation(510) at 3", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalMinus(251) into TagElement: @link(252) at 0", "Insert SimpleName: RelOptRule(267) into SimpleType: RelOptRule(268) at 0", "Insert SimpleName: operand(269) into MethodInvocation(284) at 0", "Insert TypeLiteral(272) into MethodInvocation(284) at 1", "Insert MethodInvocation(283) into MethodInvocation(284) at 2", "Insert MethodDeclaration(426) into AnonymousClassDeclaration(427) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect(432) into TagElement: @link(433) at 0", "Insert SimpleName: RelOptRule(449) into SimpleType: RelOptRule(450) at 0", "Insert SimpleName: operand(451) into MethodInvocation(466) at 0", "Insert TypeLiteral(454) into MethodInvocation(466) at 1", "Insert MethodInvocation(465) into MethodInvocation(466) at 2", "Insert MethodDeclaration(508) into AnonymousClassDeclaration(509) at 0", "Insert SimpleType: LogicalMinus(271) into TypeLiteral(272) at 0", "Insert SimpleName: unordered(273) into MethodInvocation(283) at 0", "Insert MethodInvocation(282) into MethodInvocation(283) at 1", "Insert Modifier: public(286) into MethodDeclaration(426) at 0", "Insert PrimitiveType: void(287) into MethodDeclaration(426) at 1", "Insert SingleVariableDeclaration(292) into MethodDeclaration(426) at 3", "Insert Block(425) into MethodDeclaration(426) at 4", "Insert SimpleType: LogicalIntersect(453) into TypeLiteral(454) at 0", "Insert SimpleName: unordered(455) into MethodInvocation(465) at 0", "Insert MethodInvocation(464) into MethodInvocation(465) at 1", "Insert Modifier: public(468) into MethodDeclaration(508) at 0", "Insert PrimitiveType: void(469) into MethodDeclaration(508) at 1", "Insert SingleVariableDeclaration(474) into MethodDeclaration(508) at 3", "Insert Block(507) into MethodDeclaration(508) at 4", "Insert SimpleName: LogicalMinus(270) into SimpleType: LogicalMinus(271) at 0", "Insert SimpleName: operand(274) into MethodInvocation(282) at 0", "Insert TypeLiteral(277) into MethodInvocation(282) at 1", "Insert NullLiteral(278) into MethodInvocation(282) at 2", "Insert QualifiedName: Values.IS_EMPTY(279) into MethodInvocation(282) at 3", "Insert MethodInvocation(281) into MethodInvocation(282) at 4", "Insert SimpleType: RelOptRuleCall(290) into SingleVariableDeclaration(292) at 0", "Insert SimpleName: call(291) into SingleVariableDeclaration(292) at 1", "Insert VariableDeclarationStatement(302) into Block(425) at 0", "Insert VariableDeclarationStatement(315) into Block(425) at 1", "Insert AssertStatement(319) into Block(425) at 2", "Insert VariableDeclarationStatement(332) into Block(425) at 3", "Insert EnhancedForStatement(356) into Block(425) at 4", "Insert AssertStatement(365) into Block(425) at 5", "Insert VariableDeclarationStatement(374) into Block(425) at 6", "Insert SwitchStatement(417) into Block(425) at 7", "Insert ExpressionStatement(424) into Block(425) at 8", "Insert SimpleName: LogicalIntersect(452) into SimpleType: LogicalIntersect(453) at 0", "Insert SimpleName: operand(456) into MethodInvocation(464) at 0", "Insert TypeLiteral(459) into MethodInvocation(464) at 1", "Insert NullLiteral(460) into MethodInvocation(464) at 2", "Insert QualifiedName: Values.IS_EMPTY(461) into MethodInvocation(464) at 3", "Insert MethodInvocation(463) into MethodInvocation(464) at 4", "Insert SimpleType: RelOptRuleCall(472) into SingleVariableDeclaration(474) at 0", "Insert SimpleName: call(473) into SingleVariableDeclaration(474) at 1", "Insert VariableDeclarationStatement(483) into Block(507) at 0", "Insert VariableDeclarationStatement(492) into Block(507) at 1", "Insert ExpressionStatement(499) into Block(507) at 2", "Insert ExpressionStatement(506) into Block(507) at 3", "Insert Modifier: final(118) into VariableDeclarationStatement(127) at 0", "Insert SimpleType: Values(276) into TypeLiteral(277) at 0", "Insert SimpleName: none(280) into MethodInvocation(281) at 0", "Insert SimpleName: RelOptRuleCall(289) into SimpleType: RelOptRuleCall(290) at 0", "Insert Modifier: final(293) into VariableDeclarationStatement(302) at 0", "Insert SimpleType: LogicalMinus(295) into VariableDeclarationStatement(302) at 1", "Insert VariableDeclarationFragment(301) into VariableDeclarationStatement(302) at 2", "Insert Modifier: final(303) into VariableDeclarationStatement(315) at 0", "Insert ParameterizedType: List<RelNode>(308) into VariableDeclarationStatement(315) at 1", "Insert VariableDeclarationFragment(314) into VariableDeclarationStatement(315) at 2", "Insert InfixExpression: !=(318) into AssertStatement(319) at 0", "Insert Modifier: final(320) into VariableDeclarationStatement(332) at 0", "Insert ParameterizedType: List<RelNode>(325) into VariableDeclarationStatement(332) at 1", "Insert VariableDeclarationFragment(331) into VariableDeclarationStatement(332) at 2", "Insert SingleVariableDeclaration(336) into EnhancedForStatement(356) at 0", "Insert SimpleName: inputs(337) into EnhancedForStatement(356) at 1", "Insert Block(355) into EnhancedForStatement(356) at 2", "Insert InfixExpression: <(363) into AssertStatement(365) at 0", "Insert StringLiteral: \"planner promised us at least one Empty child\"(364) into AssertStatement(365) at 1", "Insert Modifier: final(366) into VariableDeclarationStatement(374) at 0", "Insert SimpleType: RelBuilder(368) into VariableDeclarationStatement(374) at 1", "Insert VariableDeclarationFragment(373) into VariableDeclarationStatement(374) at 2", "Insert MethodInvocation(377) into SwitchStatement(417) at 0", "Insert SwitchCase(379) into SwitchStatement(417) at 1", "Insert ExpressionStatement(386) into SwitchStatement(417) at 2", "Insert BreakStatement(387) into SwitchStatement(417) at 3", "Insert SwitchCase(389) into SwitchStatement(417) at 4", "Insert ExpressionStatement(404) into SwitchStatement(417) at 5", "Insert BreakStatement(405) into SwitchStatement(417) at 6", "Insert SwitchCase(406) into SwitchStatement(417) at 7", "Insert ExpressionStatement(415) into SwitchStatement(417) at 8", "Insert BreakStatement(416) into SwitchStatement(417) at 9", "Insert MethodInvocation(423) into ExpressionStatement(424) at 0", "Insert SimpleType: Values(458) into TypeLiteral(459) at 0", "Insert SimpleName: none(462) into MethodInvocation(463) at 0", "Insert SimpleName: RelOptRuleCall(471) into SimpleType: RelOptRuleCall(472) at 0", "Insert SimpleType: LogicalIntersect(476) into VariableDeclarationStatement(483) at 0", "Insert VariableDeclarationFragment(482) into VariableDeclarationStatement(483) at 1", "Insert Modifier: final(484) into VariableDeclarationStatement(492) at 0", "Insert SimpleType: RelBuilder(486) into VariableDeclarationStatement(492) at 1", "Insert VariableDeclarationFragment(491) into VariableDeclarationStatement(492) at 2", "Insert MethodInvocation(498) into ExpressionStatement(499) at 0", "Insert MethodInvocation(505) into ExpressionStatement(506) at 0", "Insert SimpleName: Values(275) into SimpleType: Values(276) at 0", "Insert SimpleName: LogicalMinus(294) into SimpleType: LogicalMinus(295) at 0", "Insert SimpleName: minus(296) into VariableDeclarationFragment(301) at 0", "Insert MethodInvocation(300) into VariableDeclarationFragment(301) at 1", "Insert SimpleType: List(305) into ParameterizedType: List<RelNode>(308) at 0", "Insert SimpleType: RelNode(307) into ParameterizedType: List<RelNode>(308) at 1", "Insert SimpleName: inputs(309) into VariableDeclarationFragment(314) at 0", "Insert MethodInvocation(313) into VariableDeclarationFragment(314) at 1", "Insert SimpleName: inputs(316) into InfixExpression: !=(318) at 0", "Insert NullLiteral(317) into InfixExpression: !=(318) at 1", "Insert SimpleType: List(322) into ParameterizedType: List<RelNode>(325) at 0", "Insert SimpleType: RelNode(324) into ParameterizedType: List<RelNode>(325) at 1", "Insert SimpleName: newInputs(326) into VariableDeclarationFragment(331) at 0", "Insert ClassInstanceCreation(330) into VariableDeclarationFragment(331) at 1", "Insert SimpleType: RelNode(334) into SingleVariableDeclaration(336) at 0", "Insert SimpleName: input(335) into SingleVariableDeclaration(336) at 1", "Insert IfStatement(354) into Block(355) at 0", "Insert MethodInvocation(359) into InfixExpression: <(363) at 0", "Insert MethodInvocation(362) into InfixExpression: <(363) at 1", "Insert SimpleName: RelBuilder(367) into SimpleType: RelBuilder(368) at 0", "Insert SimpleName: builder(369) into VariableDeclarationFragment(373) at 0", "Insert MethodInvocation(372) into VariableDeclarationFragment(373) at 1", "Insert SimpleName: newInputs(375) into MethodInvocation(377) at 0", "Insert SimpleName: size(376) into MethodInvocation(377) at 1", "Insert NumberLiteral: 0(378) into SwitchCase(379) at 0", "Insert MethodInvocation(385) into ExpressionStatement(386) at 0", "Insert NumberLiteral: 1(388) into SwitchCase(389) at 0", "Insert MethodInvocation(403) into ExpressionStatement(404) at 0", "Insert MethodInvocation(414) into ExpressionStatement(415) at 0", "Insert SimpleName: call(418) into MethodInvocation(423) at 0", "Insert SimpleName: transformTo(419) into MethodInvocation(423) at 1", "Insert MethodInvocation(422) into MethodInvocation(423) at 2", "Insert SimpleName: Values(457) into SimpleType: Values(458) at 0", "Insert SimpleName: LogicalIntersect(475) into SimpleType: LogicalIntersect(476) at 0", "Insert SimpleName: intersect(477) into VariableDeclarationFragment(482) at 0", "Insert MethodInvocation(481) into VariableDeclarationFragment(482) at 1", "Insert SimpleName: RelBuilder(485) into SimpleType: RelBuilder(486) at 0", "Insert SimpleName: builder(487) into VariableDeclarationFragment(491) at 0", "Insert MethodInvocation(490) into VariableDeclarationFragment(491) at 1", "Insert MethodInvocation(496) into MethodInvocation(498) at 0", "Insert SimpleName: empty(497) into MethodInvocation(498) at 1", "Insert SimpleName: call(500) into MethodInvocation(505) at 0", "Insert SimpleName: transformTo(501) into MethodInvocation(505) at 1", "Insert MethodInvocation(504) into MethodInvocation(505) at 2", "Insert SimpleName: call(297) into MethodInvocation(300) at 0", "Insert SimpleName: rel(298) into MethodInvocation(300) at 1", "Insert NumberLiteral: 0(299) into MethodInvocation(300) at 2", "Insert SimpleName: List(304) into SimpleType: List(305) at 0", "Insert SimpleName: RelNode(306) into SimpleType: RelNode(307) at 0", "Insert SimpleName: call(310) into MethodInvocation(313) at 0", "Insert SimpleName: getChildRels(311) into MethodInvocation(313) at 1", "Insert SimpleName: minus(312) into MethodInvocation(313) at 2", "Insert SimpleName: List(321) into SimpleType: List(322) at 0", "Insert SimpleName: RelNode(323) into SimpleType: RelNode(324) at 0", "Insert ParameterizedType: ArrayList<>(329) into ClassInstanceCreation(330) at 0", "Insert SimpleName: RelNode(333) into SimpleType: RelNode(334) at 0", "Insert PrefixExpression: !(341) into IfStatement(354) at 0", "Insert Block(347) into IfStatement(354) at 1", "Insert IfStatement(353) into IfStatement(354) at 2", "Insert SimpleName: newInputs(357) into MethodInvocation(359) at 0", "Insert SimpleName: size(358) into MethodInvocation(359) at 1", "Insert SimpleName: inputs(360) into MethodInvocation(362) at 0", "Insert SimpleName: size(361) into MethodInvocation(362) at 1", "Insert SimpleName: call(370) into MethodInvocation(372) at 0", "Insert SimpleName: builder(371) into MethodInvocation(372) at 1", "Insert MethodInvocation(383) into MethodInvocation(385) at 0", "Insert SimpleName: empty(384) into MethodInvocation(385) at 1", "Insert SimpleName: builder(390) into MethodInvocation(403) at 0", "Insert SimpleName: push(391) into MethodInvocation(403) at 1", "Insert MethodInvocation(402) into MethodInvocation(403) at 2", "Insert SimpleName: builder(407) into MethodInvocation(414) at 0", "Insert SimpleName: push(408) into MethodInvocation(414) at 1", "Insert MethodInvocation(413) into MethodInvocation(414) at 2", "Insert SimpleName: builder(420) into MethodInvocation(422) at 0", "Insert SimpleName: build(421) into MethodInvocation(422) at 1", "Insert SimpleName: call(478) into MethodInvocation(481) at 0", "Insert SimpleName: rel(479) into MethodInvocation(481) at 1", "Insert NumberLiteral: 0(480) into MethodInvocation(481) at 2", "Insert SimpleName: call(488) into MethodInvocation(490) at 0", "Insert SimpleName: builder(489) into MethodInvocation(490) at 1", "Insert SimpleName: builder(493) into MethodInvocation(496) at 0", "Insert SimpleName: push(494) into MethodInvocation(496) at 1", "Insert SimpleName: intersect(495) into MethodInvocation(496) at 2", "Insert SimpleName: builder(502) into MethodInvocation(504) at 0", "Insert SimpleName: build(503) into MethodInvocation(504) at 1", "Insert SimpleType: ArrayList(328) into ParameterizedType: ArrayList<>(329) at 0", "Insert MethodInvocation(340) into PrefixExpression: !(341) at 0", "Insert ExpressionStatement(346) into Block(347) at 0", "Insert MethodInvocation(350) into IfStatement(353) at 0", "Insert Block(352) into IfStatement(353) at 1", "Insert SimpleName: builder(380) into MethodInvocation(383) at 0", "Insert SimpleName: push(381) into MethodInvocation(383) at 1", "Insert SimpleName: minus(382) into MethodInvocation(383) at 2", "Insert SimpleName: RelOptUtil(392) into MethodInvocation(402) at 0", "Insert SimpleName: createCastRel(393) into MethodInvocation(402) at 1", "Insert MethodInvocation(397) into MethodInvocation(402) at 2", "Insert MethodInvocation(400) into MethodInvocation(402) at 3", "Insert BooleanLiteral: true(401) into MethodInvocation(402) at 4", "Insert SimpleName: LogicalMinus(409) into MethodInvocation(413) at 0", "Insert SimpleName: create(410) into MethodInvocation(413) at 1", "Insert SimpleName: newInputs(411) into MethodInvocation(413) at 2", "Insert QualifiedName: minus.all(412) into MethodInvocation(413) at 3", "Insert SimpleName: ArrayList(327) into SimpleType: ArrayList(328) at 0", "Insert SimpleName: isEmpty(338) into MethodInvocation(340) at 0", "Insert SimpleName: input(339) into MethodInvocation(340) at 1", "Insert MethodInvocation(345) into ExpressionStatement(346) at 0", "Insert SimpleName: newInputs(348) into MethodInvocation(350) at 0", "Insert SimpleName: isEmpty(349) into MethodInvocation(350) at 1", "Insert BreakStatement(351) into Block(352) at 0", "Insert SimpleName: newInputs(394) into MethodInvocation(397) at 0", "Insert SimpleName: get(395) into MethodInvocation(397) at 1", "Insert NumberLiteral: 0(396) into MethodInvocation(397) at 2", "Insert SimpleName: minus(398) into MethodInvocation(400) at 0", "Insert SimpleName: getRowType(399) into MethodInvocation(400) at 1", "Insert SimpleName: newInputs(342) into MethodInvocation(345) at 0", "Insert SimpleName: add(343) into MethodInvocation(345) at 1", "Insert SimpleName: input(344) into MethodInvocation(345) at 2"]}}, {"UnionMergeRule_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.calcite.rel.core.Intersect to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.calcite.rel.core.Minus to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.calcite.rel.core.SetOp to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.calcite.rel.logical.LogicalMinus to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: UnionMergeRule to SimpleType: UnionMergeRule at 0", "INS SimpleType: UnionMergeRule to ClassInstanceCreation at 0", "INS SimpleType: LogicalIntersect to TypeLiteral at 0", "INS TypeLiteral to ClassInstanceCreation at 1", "INS StringLiteral: \"IntersectMergeRule\" to ClassInstanceCreation at 2", "INS SimpleType: UnionMergeRule to FieldDeclaration at 3", "INS SimpleName: INTERSECT_INSTANCE to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: UnionMergeRule to SimpleType: UnionMergeRule at 0", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: static to FieldDeclaration at 1", "INS QualifiedName: RelFactories.LOGICAL_BUILDER to ClassInstanceCreation at 3", "INS SimpleName: LogicalIntersect to SimpleType: LogicalIntersect at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleType: UnionMergeRule to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS StringLiteral: \"MinusMergeRule\" to ClassInstanceCreation at 2", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: LogicalMinus to SimpleType: LogicalMinus at 0", "INS QualifiedName: RelFactories.LOGICAL_BUILDER to ClassInstanceCreation at 3", "INS TypeLiteral to ClassInstanceCreation at 1", "INS SimpleName: MINUS_INSTANCE to VariableDeclarationFragment at 0", "INS SimpleType: UnionMergeRule to ClassInstanceCreation at 0", "INS SimpleType: LogicalMinus to TypeLiteral at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: UnionMergeRule to SimpleType: UnionMergeRule at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: UnionMergeRule to SimpleType: UnionMergeRule at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: description to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS TextElement: <p>Originally written for  to TagElement at 7", "operations": ["INS TextElement: <p>Originally written for  to TagElement at 7"]}, {"root": "INS TagElement: @link to TagElement at 8", "operations": ["INS SimpleName: Union to TagElement: @link at 0", "INS TagElement: @link to TagElement at 8"]}, {"root": "INS TextElement:  (hence the name), to TagElement at 9", "operations": ["INS TextElement:  (hence the name), to TagElement at 9"]}, {"root": "INS TextElement: but now also applies to  to TagElement at 10", "operations": ["INS TextElement: but now also applies to  to TagElement at 10"]}, {"root": "INS TagElement: @link to TagElement at 11", "operations": ["INS SimpleName: Intersect to TagElement: @link at 0", "INS TagElement: @link to TagElement at 11"]}, {"root": "INS TextElement: . to TagElement at 12", "operations": ["INS TextElement: . to TagElement at 12"]}, {"root": "UPDATE from Class<? extends Union> to Class<? extends SetOp>", "operations": ["UPD ParameterizedType: Class<? extends Union> from Class<? extends Union> to Class<? extends SetOp>"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: Class to ParameterizedType: Class<? extends SetOp> at 0", "INS SimpleType: Class to CastExpression at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: SetOp to SimpleType: SetOp at 0", "INS SimpleType: SetOp to WildcardType: ? extends SetOp at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: setOpClass to VariableDeclarationFragment at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: getMatchedClass to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SingleMemberAnnotation to VariableDeclarationStatement at 0", "INS WildcardType: ? extends SetOp to ParameterizedType: Class<? extends SetOp> at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 3", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ParameterizedType: Class<? extends SetOp> to VariableDeclarationStatement at 2", "INS SimpleName: operands to MethodInvocation at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS SimpleName: n to MethodInvocation at 3", "INS InstanceofExpression to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: Intersect to InstanceofExpression at 1", "INS SimpleName: n to MethodInvocation at 3", "INS SimpleName: topOp to InstanceofExpression at 0", "INS IfStatement to Block at 8", "INS SimpleName: Intersect to SimpleType: Intersect at 0", "INS QualifiedName: topOp.all to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: relBuilder to MethodInvocation at 0", "INS SimpleName: topOp to InstanceofExpression at 0", "INS SimpleName: intersect to MethodInvocation at 1", "INS QualifiedName: topOp.all to MethodInvocation at 2", "INS SimpleType: Minus to InstanceofExpression at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InstanceofExpression to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: relBuilder to MethodInvocation at 0", "INS SimpleName: minus to MethodInvocation at 1", "INS SimpleName: Minus to SimpleType: Minus at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: topOp to InstanceofExpression at 0"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Union to org.apache.calcite.rel.core.SetOp", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Union from org.apache.calcite.rel.core.Union to org.apache.calcite.rel.core.SetOp", "UPD QualifiedName: org.apache.calcite.rel.core.Union from org.apache.calcite.rel.core.Union to org.apache.calcite.rel.core.SetOp"]}, {"root": "INS StringLiteral: \"UnionMergeRule\" to ClassInstanceCreation at 2", "operations": ["INS StringLiteral: \"UnionMergeRule\" to ClassInstanceCreation at 2"]}, {"root": "UPDATE from ? extends Union to ? extends SetOp", "operations": ["UPD WildcardType: ? extends Union from ? extends Union to ? extends SetOp"]}, {"root": "INS SimpleName: description to SuperConstructorInvocation at 2", "operations": ["INS SimpleName: description to SuperConstructorInvocation at 2"]}, {"root": "INS NullLiteral to ConstructorInvocation at 1", "operations": ["INS NullLiteral to ConstructorInvocation at 1"]}, {"root": "UPDATE from Union to SetOp", "operations": ["UPD SimpleName: Union from Union to SetOp", "UPD SimpleType: Union from Union to SetOp", "UPD SimpleType: Union from Union to SetOp", "UPD SimpleName: Union from Union to SetOp", "UPD SimpleType: Union from Union to SetOp", "UPD SimpleName: Union from Union to SetOp"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS TypeLiteral to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isInstance to MethodInvocation at 1", "INS SimpleType: Minus to TypeLiteral at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: setOpClass to MethodInvocation at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SimpleName: setOpClass to MethodInvocation at 2"]}, {"root": "UPDATE from || to !=", "operations": ["UPD InfixExpression: || from || to !="]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: isInstance to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: setOpClass to MethodInvocation at 0"]}, {"root": "UPDATE from topUnion to topOp", "operations": ["UPD SimpleName: topUnion from topUnion to topOp", "UPD SimpleName: topUnion from topUnion to topOp", "UPD SimpleName: topUnion from topUnion to topOp", "UPD SimpleName: topUnion from topUnion to topOp", "UPD SimpleName: topUnion from topUnion to topOp"]}, {"root": "UPDATE from bottomUnion to bottomOp", "operations": ["UPD SimpleName: bottomUnion from bottomUnion to bottomOp", "UPD SimpleName: bottomUnion from bottomUnion to bottomOp", "UPD SimpleName: bottomUnion from bottomUnion to bottomOp", "UPD SimpleName: bottomUnion from bottomUnion to bottomOp", "UPD SimpleName: bottomUnion from bottomUnion to bottomOp", "UPD SimpleName: bottomUnion from bottomUnion to bottomOp"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: setOpClass to MethodInvocation at 0", "INS SimpleName: isInstance to MethodInvocation at 1"]}, {"root": "INS QualifiedName: topOp.all to InfixExpression: || at 0", "operations": ["INS QualifiedName: topOp.all to InfixExpression: || at 0"]}, {"root": "INS QualifiedName: bottomOp.all to InfixExpression: || at 1", "operations": ["INS QualifiedName: bottomOp.all to InfixExpression: || at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleType: Union to InstanceofExpression at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: topOp.all to MethodInvocation at 2", "operations": ["INS QualifiedName: topOp.all to MethodInvocation at 2"]}, {"root": "UPDATE from Union to Minus", "operations": ["UPD SimpleName: Union from Union to Minus"]}, {"root": "MOVE from SimpleType: Minus", "operations": ["MOV SimpleName: Union to SimpleType: Minus at 0"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL InstanceofExpression", "operations": ["DEL InstanceofExpression", "DEL SimpleType: Union"]}, {"root": "DEL InstanceofExpression", "operations": ["DEL SimpleName: Union", "DEL InstanceofExpression", "DEL SimpleType: Union"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL QualifiedName: topUnion.all", "DEL PrefixExpression: !"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL QualifiedName: bottomUnion.all", "DEL PrefixExpression: !"]}, {"root": "DEL InstanceofExpression", "operations": ["DEL InstanceofExpression"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}]}}, {"UnionMergeRule_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(384) at 4", "Insert ImportDeclaration(11) into CompilationUnit(384) at 5", "Insert ImportDeclaration(15) into CompilationUnit(384) at 7", "Insert ImportDeclaration(19) into CompilationUnit(384) at 9", "Insert ImportDeclaration(21) into CompilationUnit(384) at 10", "Insert QualifiedName: org.apache.calcite.rel.core.Intersect(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.calcite.rel.core.Minus(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.calcite.rel.core.SetOp(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalIntersect(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.calcite.rel.logical.LogicalMinus(20) into ImportDeclaration(21) at 0", "Insert FieldDeclaration(84) into TypeDeclaration: class(383) at 5", "Insert FieldDeclaration(100) into TypeDeclaration: class(383) at 6", "Insert Modifier: public(69) into FieldDeclaration(84) at 0", "Insert Modifier: static(70) into FieldDeclaration(84) at 1", "Insert Modifier: final(71) into FieldDeclaration(84) at 2", "Insert SimpleType: UnionMergeRule(73) into FieldDeclaration(84) at 3", "Insert VariableDeclarationFragment(83) into FieldDeclaration(84) at 4", "Insert Modifier: public(85) into FieldDeclaration(100) at 0", "Insert Modifier: static(86) into FieldDeclaration(100) at 1", "Insert Modifier: final(87) into FieldDeclaration(100) at 2", "Insert SimpleType: UnionMergeRule(89) into FieldDeclaration(100) at 3", "Insert VariableDeclarationFragment(99) into FieldDeclaration(100) at 4", "Insert SingleVariableDeclaration(117) into MethodDeclaration(143) at 4", "Insert TextElement: <p>Originally written for (39) into TagElement(47) at 7", "Insert TagElement: @link(41) into TagElement(47) at 8", "Insert TextElement:  (hence the name),(42) into TagElement(47) at 9", "Insert TextElement: but now also applies to (43) into TagElement(47) at 10", "Insert TagElement: @link(45) into TagElement(47) at 11", "Insert TextElement: .(46) into TagElement(47) at 12", "Insert SimpleName: UnionMergeRule(72) into SimpleType: UnionMergeRule(73) at 0", "Insert SimpleName: INTERSECT_INSTANCE(74) into VariableDeclarationFragment(83) at 0", "Insert ClassInstanceCreation(82) into VariableDeclarationFragment(83) at 1", "Insert SimpleName: UnionMergeRule(88) into SimpleType: UnionMergeRule(89) at 0", "Insert SimpleName: MINUS_INSTANCE(90) into VariableDeclarationFragment(99) at 0", "Insert ClassInstanceCreation(98) into VariableDeclarationFragment(99) at 1", "Update ParameterizedType: Class<? extends Union>(60) to Class<? extends SetOp>", "Insert SimpleType: String(115) into SingleVariableDeclaration(117) at 0", "Insert SimpleName: description(116) into SingleVariableDeclaration(117) at 1", "Insert VariableDeclarationStatement(207) into Block(381) at 1", "Insert IfStatement(373) into Block(381) at 8", "Update QualifiedName: org.apache.calcite.rel.core.Union(22) to org.apache.calcite.rel.core.SetOp", "Update QualifiedName: org.apache.calcite.rel.core.Union(26) to org.apache.calcite.rel.core.SetOp", "Insert SimpleName: Union(40) into TagElement: @link(41) at 0", "Insert SimpleName: Intersect(44) into TagElement: @link(45) at 0", "Insert StringLiteral: \"UnionMergeRule\"(64) into ClassInstanceCreation(66) at 2", "Insert SimpleType: UnionMergeRule(76) into ClassInstanceCreation(82) at 0", "Insert TypeLiteral(79) into ClassInstanceCreation(82) at 1", "Insert StringLiteral: \"IntersectMergeRule\"(80) into ClassInstanceCreation(82) at 2", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(81) into ClassInstanceCreation(82) at 3", "Insert SimpleType: UnionMergeRule(92) into ClassInstanceCreation(98) at 0", "Insert TypeLiteral(95) into ClassInstanceCreation(98) at 1", "Insert StringLiteral: \"MinusMergeRule\"(96) into ClassInstanceCreation(98) at 2", "Insert QualifiedName: RelFactories.LOGICAL_BUILDER(97) into ClassInstanceCreation(98) at 3", "Update WildcardType: ? extends Union(59) to ? extends SetOp", "Insert SimpleName: String(114) into SimpleType: String(115) at 0", "Insert SimpleName: description(140) into SuperConstructorInvocation(141) at 2", "Insert NullLiteral(161) into ConstructorInvocation(166) at 1", "Update SimpleType: Union(122) to SetOp", "Insert SingleMemberAnnotation(188) into VariableDeclarationStatement(207) at 0", "Insert Modifier: final(189) into VariableDeclarationStatement(207) at 1", "Insert ParameterizedType: Class<? extends SetOp>(195) into VariableDeclarationStatement(207) at 2", "Insert VariableDeclarationFragment(206) into VariableDeclarationStatement(207) at 3", "Update SimpleType: Union(132) to SetOp", "Insert InfixExpression: &&(228) into IfStatement(255) at 0", "Update InfixExpression: ||(174) to !=", "Insert MethodInvocation(277) into IfStatement(320) at 0", "Insert InstanceofExpression(341) into IfStatement(373) at 0", "Insert Block(348) into IfStatement(373) at 1", "Insert IfStatement(372) into IfStatement(373) at 2", "Insert SimpleName: UnionMergeRule(75) into SimpleType: UnionMergeRule(76) at 0", "Insert SimpleType: LogicalIntersect(78) into TypeLiteral(79) at 0", "Insert SimpleName: UnionMergeRule(91) into SimpleType: UnionMergeRule(92) at 0", "Insert SimpleType: LogicalMinus(94) into TypeLiteral(95) at 0", "Update SimpleType: Union(58) to SetOp", "Update SimpleName: Union(121) to SetOp", "Update SimpleName: topUnion(123) to topOp", "Insert SimpleName: SuppressWarnings(186) into SingleMemberAnnotation(188) at 0", "Insert StringLiteral: \"unchecked\"(187) into SingleMemberAnnotation(188) at 1", "Insert SimpleType: Class(191) into ParameterizedType: Class<? extends SetOp>(195) at 0", "Insert WildcardType: ? extends SetOp(194) into ParameterizedType: Class<? extends SetOp>(195) at 1", "Insert SimpleName: setOpClass(196) into VariableDeclarationFragment(206) at 0", "Insert CastExpression(205) into VariableDeclarationFragment(206) at 1", "Update SimpleName: Union(131) to SetOp", "Update SimpleName: bottomUnion(133) to bottomOp", "Insert MethodInvocation(220) into InfixExpression: &&(228) at 0", "Insert PrefixExpression: !(227) into InfixExpression: &&(228) at 1", "Insert MethodInvocation(243) into IfStatement(254) at 0", "Insert QualifiedName: topOp.all(256) into InfixExpression: !=(258) at 0", "Insert QualifiedName: bottomOp.all(257) into InfixExpression: !=(258) at 1", "Insert SimpleName: setOpClass(271) into MethodInvocation(277) at 0", "Insert SimpleName: isInstance(272) into MethodInvocation(277) at 1", "Move MethodInvocation(139) into MethodInvocation(277) at 2", "Insert SimpleName: topOp(338) into InstanceofExpression(341) at 0", "Move SimpleType: Union(192) into InstanceofExpression(341) at 1", "Move ExpressionStatement(259) into Block(348) at 0", "Insert InstanceofExpression(352) into IfStatement(372) at 0", "Insert Block(359) into IfStatement(372) at 1", "Insert IfStatement(371) into IfStatement(372) at 2", "Insert SimpleName: LogicalIntersect(77) into SimpleType: LogicalIntersect(78) at 0", "Insert SimpleName: LogicalMinus(93) into SimpleType: LogicalMinus(94) at 0", "Update SimpleName: Union(57) to SetOp", "Insert SimpleName: Class(190) into SimpleType: Class(191) at 0", "Insert SimpleType: SetOp(193) into WildcardType: ? extends SetOp(194) at 0", "Insert SimpleType: Class(198) into CastExpression(205) at 0", "Insert MethodInvocation(204) into CastExpression(205) at 1", "Insert SimpleName: setOpClass(214) into MethodInvocation(220) at 0", "Insert SimpleName: isInstance(215) into MethodInvocation(220) at 1", "Move MethodInvocation(190) into MethodInvocation(220) at 2", "Insert MethodInvocation(226) into PrefixExpression: !(227) at 0", "Insert SimpleName: setOpClass(237) into MethodInvocation(243) at 0", "Insert SimpleName: isInstance(238) into MethodInvocation(243) at 1", "Move MethodInvocation(154) into MethodInvocation(243) at 2", "Insert SimpleName: topOp(349) into InstanceofExpression(352) at 0", "Insert SimpleType: Intersect(351) into InstanceofExpression(352) at 1", "Insert ExpressionStatement(358) into Block(359) at 0", "Insert InstanceofExpression(363) into IfStatement(371) at 0", "Insert Block(370) into IfStatement(371) at 1", "Insert SimpleName: SetOp(192) into SimpleType: SetOp(193) at 0", "Insert SimpleName: Class(197) into SimpleType: Class(198) at 0", "Insert MethodInvocation(202) into MethodInvocation(204) at 0", "Insert TypeLiteral(223) into MethodInvocation(226) at 0", "Insert SimpleName: isAssignableFrom(224) into MethodInvocation(226) at 1", "Insert SimpleName: setOpClass(225) into MethodInvocation(226) at 2", "Update SimpleName: bottomUnion(143) to bottomOp", "Insert QualifiedName: topOp.all(344) into MethodInvocation(346) at 2", "Insert SimpleName: Intersect(350) into SimpleType: Intersect(351) at 0", "Insert MethodInvocation(357) into ExpressionStatement(358) at 0", "Insert SimpleName: topOp(360) into InstanceofExpression(363) at 0", "Insert SimpleType: Minus(362) into InstanceofExpression(363) at 1", "Insert ExpressionStatement(369) into Block(370) at 0", "Insert SimpleName: operands(199) into MethodInvocation(202) at 0", "Insert SimpleName: get(200) into MethodInvocation(202) at 1", "Insert NumberLiteral: 0(201) into MethodInvocation(202) at 2", "Insert SimpleType: Minus(222) into TypeLiteral(223) at 0", "Update SimpleName: bottomUnion(158) to bottomOp", "Update SimpleName: topUnion(204) to topOp", "Update SimpleName: bottomUnion(212) to bottomOp", "Update SimpleName: bottomUnion(220) to bottomOp", "Insert SimpleName: relBuilder(353) into MethodInvocation(357) at 0", "Insert SimpleName: intersect(354) into MethodInvocation(357) at 1", "Insert QualifiedName: topOp.all(355) into MethodInvocation(357) at 2", "Insert SimpleName: n(356) into MethodInvocation(357) at 3", "Insert SimpleName: Minus(361) into SimpleType: Minus(362) at 0", "Insert MethodInvocation(368) into ExpressionStatement(369) at 0", "Update SimpleName: Union(140) to Minus", "Move SimpleName: Union(140) into SimpleType: Minus(222) at 0", "Update SimpleName: topUnion(194) to topOp", "Update SimpleName: topUnion(229) to topOp", "Update SimpleName: bottomUnion(239) to bottomOp", "Update SimpleName: topUnion(244) to topOp", "Insert SimpleName: relBuilder(364) into MethodInvocation(368) at 0", "Insert SimpleName: minus(365) into MethodInvocation(368) at 1", "Insert QualifiedName: topOp.all(366) into MethodInvocation(368) at 2", "Insert SimpleName: n(367) into MethodInvocation(368) at 3", "Delete NullLiteral(85)", "Delete SimpleType: Union(141)", "Delete InstanceofExpression(142)", "Delete SimpleName: Union(155)", "Delete SimpleType: Union(156)", "Delete InstanceofExpression(157)", "Delete QualifiedName: topUnion.all(170)", "Delete PrefixExpression: !(171)", "Delete QualifiedName: bottomUnion.all(172)", "Delete PrefixExpression: !(173)", "Delete InstanceofExpression(193)", "Delete BooleanLiteral: true(256)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}