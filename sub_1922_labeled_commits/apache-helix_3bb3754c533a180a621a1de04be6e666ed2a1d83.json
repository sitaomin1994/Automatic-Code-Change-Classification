{"application": "apache-helix", "csha": "3bb3754c533a180a621a1de04be6e666ed2a1d83", "files": [{"ClusterStateVerifier_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 23", "MOV ImportDeclaration to CompilationUnit at 17", "MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: com.linkedin.helix.TestHelper to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: com.linkedin.helix.controller.pipeline.Stage to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: com.linkedin.helix.controller.pipeline.StageContext to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: com.linkedin.helix.controller.stages.AttributeName to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: com.linkedin.helix.controller.stages.BestPossibleStateCalcStage to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS QualifiedName: com.linkedin.helix.controller.stages.BestPossibleStateOutput to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 24"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: com.linkedin.helix.controller.stages.ClusterDataCache to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: com.linkedin.helix.controller.stages.ClusterEvent to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: com.linkedin.helix.controller.stages.CurrentStateComputationStage to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS ImportDeclaration to CompilationUnit at 28", "operations": ["INS QualifiedName: com.linkedin.helix.controller.stages.ResourceComputationStage to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 28"]}, {"root": "INS ImportDeclaration to CompilationUnit at 29", "operations": ["INS QualifiedName: com.linkedin.helix.manager.zk.ZKDataAccessor to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 29"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS ImportDeclaration to CompilationUnit at 33", "INS QualifiedName: com.linkedin.helix.model.ExternalView to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.ArrayList to java.util.Iterator", "operations": ["UPD QualifiedName: java.util.ArrayList from java.util.ArrayList to java.util.Iterator"]}, {"root": "UPDATE from java.util.TreeMap to com.linkedin.helix.DataAccessor", "operations": ["UPD QualifiedName: java.util.TreeMap from java.util.TreeMap to com.linkedin.helix.DataAccessor"]}, {"root": "UPDATE from com.linkedin.helix.model.LiveInstance.LiveInstanceProperty to com.linkedin.helix.model.IdealState", "operations": ["UPD QualifiedName: com.linkedin.helix.model.LiveInstance.LiveInstanceProperty from com.linkedin.helix.model.LiveInstance.LiveInstanceProperty to com.linkedin.helix.model.IdealState"]}, {"root": "UPDATE from com.linkedin.helix.util.HelixUtil to com.linkedin.helix.model.Partition", "operations": ["UPD QualifiedName: com.linkedin.helix.util.HelixUtil from com.linkedin.helix.util.HelixUtil to com.linkedin.helix.model.Partition"]}, {"root": "INS TypeDeclaration: interface to TypeDeclaration: class at 6", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 2", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS TypeDeclaration: interface to TypeDeclaration: class at 6", "INS SimpleName: Verifier to TypeDeclaration: interface at 1", "INS SimpleName: verify to MethodDeclaration at 1", "INS Modifier: public to TypeDeclaration: interface at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 7", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: Iterator to VariableDeclarationStatement at 0", "INS SimpleType: ExternalView to TypeLiteral at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS Modifier: public to MethodDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 8", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS NullLiteral to ConstructorInvocation at 2", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: verifierName to VariableDeclarationFragment at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: ClusterDataCache to ClassInstanceCreation at 0", "INS SimpleName: accessor to MethodInvocation at 0", "INS SimpleName: lastIndexOf to MethodInvocation at 1", "INS SimpleName: zkAddr to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: verifierName to Assignment: = at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: compareMap to MethodInvocation at 3", "INS MethodInvocation to InfixExpression: || at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: ClusterDataCache to SimpleType: ClusterDataCache at 0", "INS SimpleName: cache to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: zkAddr to SingleVariableDeclaration at 1", "INS ParameterizedType: Map<String,String> to ParameterizedType: Map<String,Map<String,String>> at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: verifierName to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS Modifier: private to FieldDeclaration at 0", "INS IfStatement to Block at 2", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: BestPossAndExtViewVerifier to TypeDeclaration: class at 2", "INS Block to CatchClause at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleType: ClusterDataCache to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 1", "INS Block to MethodDeclaration at 6", "INS ThrowStatement to Block at 0", "INS IfStatement to Block at 6", "INS SimpleName: iter to VariableDeclarationFragment at 0", "INS SimpleName: zkAddr to ConstructorInvocation at 0", "INS StringLiteral: \") for resource: \" to InfixExpression: + at 4", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: e to MethodInvocation at 3", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: cache to VariableDeclarationFragment at 0", "INS EnhancedForStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS CharacterLiteral: '.' to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: result to InfixExpression: == at 0", "INS StringLiteral: \"exterView size (\" to InfixExpression: + at 0", "INS StringLiteral: \"requires zkAddr|clusterName\" to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: bestPossStateSize to InfixExpression: != at 1", "INS Block to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: extViews to VariableDeclarationFragment at 0", "INS SimpleType: ExternalView to VariableDeclarationStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS SimpleName: instanceName to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 0", "INS Block to TryStatement at 2", "INS InfixExpression: != to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TryStatement to Block at 1", "INS SimpleName: extViews to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: zkAddr to Assignment: = at 1", "INS SimpleName: errStates to Assignment: = at 1", "INS StringLiteral: \"No resource idealState\" to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to WhileStatement at 1", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 10", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: resourceName to InfixExpression: + at 5", "INS EnhancedForStatement to Block at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: partition to InfixExpression: + at 1", "INS SimpleName: put to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS ConstructorInvocation to Block at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: info to MethodInvocation at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS BooleanLiteral: false to InfixExpression: == at 1", "INS SimpleType: String to FieldDeclaration at 2", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: getChildValuesMap to MethodInvocation at 1", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: errStates to MethodInvocation at 0", "INS SimpleName: TestHelper to MethodInvocation at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS IfStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: extViewSize to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: iter to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: verifierName to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: extViews to MethodInvocation at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleName: instanceStateMap to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: bpStateMap to MethodInvocation at 0", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: zkAddr to FieldAccess at 1", "INS SimpleName: bpInstanceStateMap to MethodInvocation at 5", "INS VariableDeclarationStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \") is different from bestPossState size (\" to InfixExpression: + at 2", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: extViews to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS StringLiteral: \")\" to InfixExpression: + at 5", "INS SimpleName: zkClient to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"exception in verification\" to MethodInvocation at 2", "INS ReturnStatement to Block at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: errStates to VariableDeclarationFragment at 0", "INS SimpleName: idealStates to InfixExpression: == at 0", "INS StringLiteral: \", \" to InfixExpression: + at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 3", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: clusterName to FieldAccess at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: extViewSize to InfixExpression: != at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 7", "INS ExpressionStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: partitionName to SingleVariableDeclaration at 1", "INS SimpleName: evInstanceStateMap to MethodInvocation at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleType: Verifier to TypeDeclaration: class at 3", "INS StringLiteral: \"ERROR\" to MethodInvocation at 3", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: BestPossAndExtViewVerifier to MethodDeclaration at 2", "INS SimpleName: refresh to MethodInvocation at 1", "INS QualifiedName: PropertyType.EXTERNALVIEW to MethodInvocation at 3", "INS SimpleName: close to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleType: String to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: resourceName to InfixExpression: + at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: errStates to SingleVariableDeclaration at 1", "INS IfStatement to Block at 7", "INS SimpleName: errStates to FieldAccess at 1", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: verifierName to MethodInvocation at 0", "INS SimpleName: clusterName to ConstructorInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: getRecord to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: ExternalView to SimpleType: ExternalView at 0", "INS SimpleName: extView to VariableDeclarationFragment at 0", "INS SimpleName: extViewSize to InfixExpression: + at 1", "INS SimpleName: instanceName to VariableDeclarationFragment at 0", "INS SimpleName: clusterName to Assignment: = at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: partitionName to ClassInstanceCreation at 1", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: BestPossAndExtViewVerifier to MethodDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: extView to InfixExpression: == at 0", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS SimpleName: ClusterDataCache to SimpleType: ClusterDataCache at 0", "INS VariableDeclarationStatement to Block at 7", "INS WhileStatement to Block at 4", "INS SimpleName: zkClient to MethodInvocation at 0", "INS SimpleName: partStateMap to MethodInvocation at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS IfStatement to Block at 1", "INS SimpleName: getMapFields to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: Map<String,Map<String,String>> to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: accessor to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: idealStates to MethodInvocation at 0", "INS SimpleType: String to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"No externalViews\" to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS StringLiteral: \"externalView is different from bestPossibleState for partition:\" to InfixExpression: + at 0", "INS SimpleName: zkAddr to SingleVariableDeclaration at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: extView to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParameterizedType: Map<String,ExternalView> to VariableDeclarationStatement at 0", "INS SimpleName: substring to MethodInvocation at 1", "INS SimpleName: zkClient to VariableDeclarationFragment at 0", "INS MethodInvocation to WhileStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: errStates to InfixExpression: != at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: zkClient to InfixExpression: != at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to Block at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: Partition to ClassInstanceCreation at 0", "INS SimpleName: zkAddr to InfixExpression: == at 0", "INS StringLiteral: \"externalView for \" to InfixExpression: + at 0", "INS ReturnStatement to Block at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: clusterName to InfixExpression: == at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: zkAddr to InfixExpression: + at 2", "INS EnhancedForStatement to Block at 8", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS StringLiteral: \" is not available\" to InfixExpression: + at 2", "INS SimpleName: idealStates to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: iter to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: info to MethodInvocation at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: Verifier to SimpleType: Verifier at 0", "INS SimpleName: bestPossStateSize to InfixExpression: + at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to InfixExpression: || at 0", "INS Modifier: public to TypeDeclaration: class at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS EnhancedForStatement to Block at 11", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: clusterName to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleType: Exception to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: context to VariableDeclarationFragment at 0", "INS SimpleName: Stage to SimpleType: Stage at 0", "INS SimpleType: ClusterEvent to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stage to MethodInvocation at 0", "INS Modifier: static to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: runStage to MethodDeclaration at 2", "INS ExpressionStatement to Block at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: stage to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: ClusterEvent to SimpleType: ClusterEvent at 0", "INS SimpleName: init to MethodInvocation at 1", "INS SimpleName: stage to MethodInvocation at 0", "INS SimpleName: StageContext to SimpleType: StageContext at 0", "INS Block to MethodDeclaration at 6", "INS ExpressionStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: StageContext to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: stage to SingleVariableDeclaration at 1", "INS SimpleName: StageContext to SimpleType: StageContext at 0", "INS SimpleName: preProcess to MethodInvocation at 1", "INS SimpleType: Stage to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: StageContext to ClassInstanceCreation at 0", "INS SimpleName: event to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: postProcess to MethodInvocation at 1", "INS SimpleName: process to MethodInvocation at 1", "INS SimpleName: event to SingleVariableDeclaration at 1", "INS SimpleName: stage to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: calcBestPossState to MethodDeclaration at 3", "INS SimpleName: Exception to TagElement: @throws at 0", "INS SimpleName: rcState to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: csStage to VariableDeclarationFragment at 0", "INS TextElement: calculate the best possible state note that DROPPED states to TagElement at 0", "INS SimpleName: CurrentStateComputationStage to SimpleType: CurrentStateComputationStage at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: ResourceComputationStage to SimpleType: ResourceComputationStage at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 3", "INS StringLiteral: \"sampleEvent\" to ClassInstanceCreation at 1", "INS SimpleName: runStage to MethodInvocation at 0", "INS SimpleName: runStage to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: output to ReturnStatement at 0", "INS SimpleName: event to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6", "INS TextElement: providing an empty current state map to TagElement at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ResourceComputationStage to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: CurrentStateComputationStage to VariableDeclarationStatement at 0", "INS SimpleType: ClusterDataCache to SingleVariableDeclaration at 0", "INS SimpleType: BestPossibleStateCalcStage to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: ClusterEvent to SimpleType: ClusterEvent at 0", "INS SimpleType: Exception to MethodDeclaration at 5", "INS ReturnStatement to Block at 9", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: event to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: bpStage to VariableDeclarationFragment at 0", "INS SimpleType: ClusterEvent to ClassInstanceCreation at 0", "INS SimpleName: ClusterEvent to SimpleType: ClusterEvent at 0", "INS SimpleName: BestPossibleStateCalcStage to SimpleType: BestPossibleStateCalcStage at 0", "INS SimpleName: cache to TagElement: @param at 0", "INS SimpleType: ClusterEvent to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: ClusterDataCache to SimpleType: ClusterDataCache at 0", "INS SimpleName: BestPossibleStateCalcStage to SimpleType: BestPossibleStateCalcStage at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: are not checked since when kick off the BestPossibleStateCalcStage we are to TagElement at 1", "INS SimpleName: event to VariableDeclarationFragment at 0", "INS SimpleName: rcState to MethodInvocation at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: ResourceComputationStage to ClassInstanceCreation at 0", "INS SimpleName: cache to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 5", "INS SimpleName: ResourceComputationStage to SimpleType: ResourceComputationStage at 0", "INS StringLiteral: \"ClusterDataCache\" to MethodInvocation at 2", "INS SimpleName: bpStage to MethodInvocation at 2", "INS TagElement: @throws to Javadoc at 3", "INS SimpleName: CurrentStateComputationStage to SimpleType: CurrentStateComputationStage at 0", "INS SimpleName: BestPossibleStateOutput to SimpleType: BestPossibleStateOutput at 0", "INS SimpleType: BestPossibleStateOutput to MethodDeclaration at 2", "INS SimpleType: BestPossibleStateCalcStage to VariableDeclarationStatement at 0", "INS SimpleType: CurrentStateComputationStage to ClassInstanceCreation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS IfStatement to IfStatement at 2", "INS SimpleName: isEqual to Assignment: = at 0", "INS SimpleType: V to ParameterizedType: Map<K,V> at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Block to IfStatement at 1", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: != at 1", "INS SimpleName: map1 to MethodInvocation at 0", "INS SimpleName: isEqual to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isEqual to VariableDeclarationFragment at 0", "INS SimpleName: map2 to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: isEqual to Assignment: = at 0", "INS Block to MethodDeclaration at 8", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: map2 to SingleVariableDeclaration at 1", "INS SimpleName: map2 to InfixExpression: == at 0", "INS IfStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS ParameterizedType: Map<K,V> to SingleVariableDeclaration at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: map1 to SingleVariableDeclaration at 1", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: map1 to InfixExpression: == at 0", "INS SimpleName: isEqual to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS SimpleName: map1 to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: map2 to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: size to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS SimpleName: map1 to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS TypeParameter to MethodDeclaration at 3", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: map2 to MethodInvocation at 0", "INS Modifier: static to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: compareMap to MethodDeclaration at 5", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: V to SimpleType: V at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ParameterizedType: Map<K,V> to SingleVariableDeclaration at 0", "INS SimpleName: K to TypeParameter at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: map1 to InfixExpression: == at 0", "INS TypeParameter to MethodDeclaration at 2", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleType: V to ParameterizedType: Map<K,V> at 2", "INS InfixExpression: && to IfStatement at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: size to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: map2 to InfixExpression: == at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: V to SimpleType: V at 0", "INS Block to IfStatement at 2", "INS ReturnStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: V to TypeParameter at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: verifier to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS SimpleType: Verifier to SingleVariableDeclaration at 0", "INS SimpleName: verify to MethodDeclaration at 3", "INS SimpleName: verify to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Verifier to SimpleType: Verifier at 0", "INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 30 to InfixExpression: * at 0", "INS NumberLiteral: 1000 to InfixExpression: * at 1", "INS Modifier: static to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: verifier to SingleVariableDeclaration at 1", "INS InfixExpression: * to MethodInvocation at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 6", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS Block to TryStatement at 2", "INS MethodInvocation to Assignment: = at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS TryStatement to Block at 4", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS BooleanLiteral: true to InfixExpression: == at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: timeout to InfixExpression: / at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ParenthesizedExpression to InfixExpression: + at 4", "INS SimpleName: i to InfixExpression: < at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS Block to TryStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: verify to MethodDeclaration at 3", "INS SimpleName: loop to InfixExpression: < at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS NumberLiteral: 1000 to VariableDeclarationFragment at 1", "INS SimpleName: verify to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: loop to VariableDeclarationFragment at 0", "INS SimpleName: endTime to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: startTime to InfixExpression: - at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS StringLiteral: \": \" to InfixExpression: + at 1", "INS SimpleName: Verifier to SimpleType: Verifier at 0", "INS QualifiedName: System.err to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: sleepInterval to InfixExpression: / at 1", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: result to InfixExpression: == at 0", "INS SimpleType: Verifier to SingleVariableDeclaration at 0", "INS InfixExpression: / to InfixExpression: + at 0", "INS StringLiteral: \"ms to verify\" to InfixExpression: + at 5", "INS ForStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS BreakStatement to Block at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: verifier to SingleVariableDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS VariableDeclarationStatement to Block at 2", "INS IfStatement to Block at 2", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: sleepInterval to VariableDeclarationFragment at 0", "INS SimpleName: printStackTrace to MethodInvocation at 1", "INS SimpleName: result to ReturnStatement at 0", "INS ExpressionStatement to Block at 1", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: verifier to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: e to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS StringLiteral: \": wait \" to InfixExpression: + at 3", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: System to MethodInvocation at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS ReturnStatement to Block at 5", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Modifier: static to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: timeout to SingleVariableDeclaration at 1", "INS Block to ForStatement at 3", "INS SimpleName: endTime to InfixExpression: - at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: println to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Exception to SimpleType: Exception at 0"]}, {"root": "UPDATE from _logger to LOG", "operations": ["UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: toString from toString to LOG", "UPD SimpleName: externalViews from externalViews to LOG", "UPD SimpleName: _logger from _logger to LOG", "UPD SimpleName: _logger from _logger to LOG"]}, {"root": "UPDATE from Map<String,Map<String,ZNRecord>> to Map<String,Map<String,String>>", "operations": ["UPD ParameterizedType: Map<String,Map<String,ZNRecord>> from Map<String,Map<String,ZNRecord>> to Map<String,Map<String,String>>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: Map<String,Map<String,ZNRecord>> to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: static to MethodDeclaration at 1", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV SimpleName: verifyClusterStates to MethodDeclaration at 3"]}, {"root": "UPDATE from static to public", "operations": ["UPD Modifier: static from static to public"]}, {"root": "UPDATE from verifyClusterStates to verify", "operations": ["UPD SimpleName: verifyClusterStates from verifyClusterStates to verify"]}, {"root": "UPDATE from ZNRecord to Exception", "operations": ["UPD SimpleName: ZNRecord from ZNRecord to Exception"]}, {"root": "MOVE from SimpleType: Exception", "operations": ["MOV SimpleName: ZNRecord to SimpleType: Exception at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 8", "MOV ExpressionStatement to Block at 1", "MOV EnhancedForStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 6"]}, {"root": "UPDATE from List<String> to Map<String,String>", "operations": ["UPD ParameterizedType: List<String> from List<String> to Map<String,String>", "UPD ParameterizedType: List<ZNRecord> from List<ZNRecord> to Map<String,String>", "UPD ParameterizedType: Map<String,ZNRecord> from Map<String,ZNRecord> to Map<String,String>"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement: verifier that verifies best possible state and external view to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from @return to @param", "operations": ["UPD TagElement: @return from @return to @param"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TagElement: @param to Javadoc at 3", "INS TextElement:  errStates: resource->partition->instance to TagElement: @param at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: BestPossibleStateOutput to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: BestPossibleStateOutput to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from TreeMap to Map", "operations": ["UPD SimpleName: TreeMap from TreeMap to Map", "UPD SimpleType: List from List to Map", "UPD SimpleName: TreeMap from TreeMap to Map", "UPD SimpleName: ZNRecord from ZNRecord to Map", "UPD SimpleType: List from List to Map", "UPD SimpleName: ZNRecord from ZNRecord to Map", "UPD SimpleType: ArrayList from ArrayList to Map", "UPD SimpleName: List from List to Map", "UPD SimpleType: TreeMap from TreeMap to Map", "UPD SimpleName: List from List to Map", "UPD SimpleType: List from List to Map", "UPD SimpleType: List from List to Map", "UPD SimpleName: ArrayList from ArrayList to Map", "UPD SimpleName: List from List to Map", "UPD SimpleType: TreeMap from TreeMap to Map", "UPD SimpleName: List from List to Map", "UPD SimpleName: List from List to Map", "UPD SimpleType: List from List to Map"]}, {"root": "MOVE from ParameterizedType: Map<K,V>", "operations": ["MOV SimpleType: List to ParameterizedType: Map<K,V> at 0", "MOV SimpleType: ZNRecord to ParameterizedType: Map<K,V> at 1"]}, {"root": "UPDATE from ZNRecord to K", "operations": ["UPD SimpleName: ZNRecord from ZNRecord to K", "UPD SimpleName: ZNRecord from ZNRecord to K", "UPD SimpleType: ZNRecord from ZNRecord to K", "UPD SimpleType: ZNRecord from ZNRecord to K"]}, {"root": "MOVE from ParameterizedType: Map<K,V>", "operations": ["MOV SimpleType: ZNRecord to ParameterizedType: Map<K,V> at 1", "MOV SimpleType: ArrayList to ParameterizedType: Map<K,V> at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV PrimitiveType: boolean to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from ZNRecord to String", "operations": ["UPD SimpleType: ZNRecord from ZNRecord to String", "UPD SimpleName: ZNRecord from ZNRecord to String", "UPD SimpleName: ZNRecord from ZNRecord to String", "UPD SimpleName: ZNRecord from ZNRecord to String", "UPD SimpleType: ZNRecord from ZNRecord to String", "UPD SimpleType: ZNRecord from ZNRecord to String"]}, {"root": "UPDATE from args to zkAddr", "operations": ["UPD SimpleName: args from args to zkAddr", "UPD SimpleName: zkServer from zkServer to zkAddr"]}, {"root": "INS SimpleName: clusterName to TagElement: @return at 0", "operations": ["INS SimpleName: clusterName to TagElement: @return at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,ExternalView>", "operations": ["MOV SimpleType: ZNRecord to ParameterizedType: Map<String,ExternalView> at 2", "MOV SimpleType: Map to ParameterizedType: Map<String,Map<String,String>> at 0", "MOV SimpleType: String to ParameterizedType: Map<String,Map<String,String>> at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: zkServer to ClassInstanceCreation at 1", "MOV SimpleType: ZkClient to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from zkClient to event", "operations": ["UPD SimpleName: zkClient from zkClient to event", "UPD SimpleName: getExternalViewPath from getExternalViewPath to event", "UPD SimpleName: zkClient from zkClient to event"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readData to MethodInvocation at 1", "MOV SimpleName: zkClient to MethodInvocation at 0", "MOV SimpleName: resourcePath to MethodInvocation at 3"]}, {"root": "UPDATE from readData to addAttribute", "operations": ["UPD SimpleName: readData from readData to addAttribute"]}, {"root": "UPDATE from instanceName to cache", "operations": ["UPD SimpleName: instanceName from instanceName to cache", "UPD SimpleName: zkClient from zkClient to cache", "UPD SimpleName: resourcePath from resourcePath to cache"]}, {"root": "UPDATE from HelixUtil to runStage", "operations": ["UPD SimpleName: HelixUtil from HelixUtil to runStage"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: HelixUtil to MethodInvocation at 0", "MOV SimpleName: clusterName to MethodInvocation at 2", "MOV SimpleName: getExternalViewPath to MethodInvocation at 1"]}, {"root": "UPDATE from clusterName to csStage", "operations": ["UPD SimpleName: clusterName from clusterName to csStage"]}, {"root": "UPDATE from List to BestPossibleStateOutput", "operations": ["UPD SimpleName: List from List to BestPossibleStateOutput"]}, {"root": "MOVE from SimpleType: BestPossibleStateOutput", "operations": ["MOV SimpleName: List to SimpleType: BestPossibleStateOutput at 0"]}, {"root": "UPDATE from views to output", "operations": ["UPD SimpleName: views from views to output"]}, {"root": "UPDATE from result1 to startTime", "operations": ["UPD SimpleName: result1 from result1 to startTime"]}, {"root": "UPDATE from result1 to result", "operations": ["UPD SimpleName: result1 from result1 to result", "UPD SimpleName: result2 from result2 to result"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: result2 to VariableDeclarationFragment at 0"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 0", "operations": ["INS SimpleType: BestPossAndExtViewVerifier to ClassInstanceCreation at 0", "INS SimpleName: BestPossAndExtViewVerifier to SimpleType: BestPossAndExtViewVerifier at 0", "INS SimpleName: clusterName to ClassInstanceCreation at 2", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: zkServer to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: verify to MethodInvocation at 1", "operations": ["INS SimpleName: verify to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1", "MOV SimpleType: ZNRecord to ParameterizedType: Map<String,String> at 2", "MOV SimpleType: TreeMap to ParameterizedType: Map<String,String> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 9"]}, {"root": "UPDATE from idealStatePath to verifierName", "operations": ["UPD SimpleName: idealStatePath from idealStatePath to verifierName"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV SimpleName: idealStatePath to InfixExpression: + at 0", "MOV StringLiteral: \"/\" to InfixExpression: + at 1", "MOV SimpleName: resource to InfixExpression: + at 4"]}, {"root": "UPDATE from \"/\" to \"(\"", "operations": ["UPD StringLiteral: \"/\" from \"/\" to \"(\""]}, {"root": "UPDATE from resource to clusterName", "operations": ["UPD SimpleName: resource from resource to clusterName"]}, {"root": "UPDATE from getChildren to getAttribute", "operations": ["UPD SimpleName: getChildren from getChildren to getAttribute"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: AttributeName.BEST_POSSIBLE_STATE to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from verifyIdealStateAndCurrentState to System", "operations": ["UPD SimpleName: verifyIdealStateAndCurrentState from verifyIdealStateAndCurrentState to System"]}, {"root": "UPDATE from currentStates to currentTimeMillis", "operations": ["UPD SimpleName: currentStates from currentStates to currentTimeMillis"]}, {"root": "INS SimpleType: DataAccessor to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: DataAccessor to VariableDeclarationStatement at 0", "INS SimpleName: DataAccessor to SimpleType: DataAccessor at 0"]}, {"root": "UPDATE from List<String> to Map<String,IdealState>", "operations": ["UPD ParameterizedType: List<String> from List<String> to Map<String,IdealState>"]}, {"root": "INS SimpleType: BestPossibleStateOutput to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: BestPossibleStateOutput to SimpleType: BestPossibleStateOutput at 0", "INS SimpleType: BestPossibleStateOutput to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from externalViewPath to toString", "operations": ["UPD SimpleName: externalViewPath from externalViewPath to toString"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: externalViewPath to MethodInvocation at 1"]}, {"root": "UPDATE from instancesPath to accessor", "operations": ["UPD SimpleName: instancesPath from instancesPath to accessor"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: ZKDataAccessor to SimpleType: ZKDataAccessor at 0", "INS SimpleName: clusterName to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ZKDataAccessor to ClassInstanceCreation at 0", "INS SimpleName: zkClient to ClassInstanceCreation at 2"]}, {"root": "MOVE from ParameterizedType: List<String>", "operations": ["MOV SimpleType: String to ParameterizedType: List<String> at 1"]}, {"root": "INS SimpleType: IdealState to ParameterizedType: List<String> at 2", "operations": ["INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleType: IdealState to ParameterizedType: List<String> at 2"]}, {"root": "UPDATE from instanceNames to idealStates", "operations": ["UPD SimpleName: instanceNames from instanceNames to idealStates"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1", "MOV SimpleType: TreeMap to ParameterizedType: Map<String,ExternalView> at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,ExternalView>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,ExternalView> at 1", "MOV SimpleType: List to ParameterizedType: Map<String,String> at 0"]}, {"root": "UPDATE from ZNRecord to ExternalView", "operations": ["UPD SimpleType: ZNRecord from ZNRecord to ExternalView", "UPD SimpleName: String from String to ExternalView", "UPD SimpleName: ZNRecord from ZNRecord to ExternalView"]}, {"root": "UPDATE from HelixUtil to bestPossOutput", "operations": ["UPD SimpleName: HelixUtil from HelixUtil to bestPossOutput", "UPD SimpleName: liveInstancePath from liveInstancePath to bestPossOutput", "UPD SimpleName: zkClient from zkClient to bestPossOutput", "UPD SimpleName: HelixUtil from HelixUtil to bestPossOutput"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: map1 to MethodInvocation at 0", "INS SimpleName: keySet to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV SimpleName: result2 to InfixExpression: + at 2", "MOV SimpleName: result1 to InfixExpression: + at 0"]}, {"root": "UPDATE from result2 to verifier", "operations": ["UPD SimpleName: result2 from result2 to verifier"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ZkClient to ClassInstanceCreation at 0"]}, {"root": "UPDATE from getChildren to getIdealStates", "operations": ["UPD SimpleName: getChildren from getChildren to getIdealStates"]}, {"root": "UPDATE from HelixUtil to ClusterStateVerifier", "operations": ["UPD SimpleName: HelixUtil from HelixUtil to ClusterStateVerifier"]}, {"root": "UPDATE from clusterName to calcBestPossState", "operations": ["UPD SimpleName: clusterName from clusterName to calcBestPossState"]}, {"root": "INS ParameterizedType: Map<Partition,Map<String,String>> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Map<String,String> to ParameterizedType: Map<Partition,Map<String,String>> at 2", "INS SimpleType: Partition to ParameterizedType: Map<Partition,Map<String,String>> at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<Partition,Map<String,String>> at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS ParameterizedType: Map<Partition,Map<String,String>> to VariableDeclarationStatement at 0"]}, {"root": "INS PrimitiveType: int to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS SimpleType: K to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: K to SimpleType: K at 0", "INS SimpleType: K to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: key to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: key to SingleVariableDeclaration at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS BreakStatement to Block at 2", "INS SimpleName: get to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: map2 to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: isEqual to Assignment: = at 0", "INS SimpleName: key to MethodInvocation at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: map1 to MethodInvocation at 0"]}, {"root": "UPDATE from verifyCurrentStateAndExternalView to Thread", "operations": ["UPD SimpleName: verifyCurrentStateAndExternalView from verifyCurrentStateAndExternalView to Thread"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: externalViews to MethodInvocation at 2", "MOV SimpleName: currentStates to MethodInvocation at 1", "MOV SimpleName: verifyCurrentStateAndExternalView to MethodInvocation at 0"]}, {"root": "UPDATE from currentStates to sleep", "operations": ["UPD SimpleName: currentStates from currentStates to sleep"]}, {"root": "UPDATE from externalViews to sleepInterval", "operations": ["UPD SimpleName: externalViews from externalViews to sleepInterval"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from partitionStatePaths to bpStateMap", "operations": ["UPD SimpleName: partitionStatePaths from partitionStatePaths to bpStateMap"]}, {"root": "UPDATE from String to Iterator", "operations": ["UPD SimpleName: String from String to Iterator"]}, {"root": "MOVE from SimpleType: Iterator", "operations": ["MOV SimpleName: String to SimpleType: Iterator at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "UPDATE from idealStatePath to bestPossStateSize", "operations": ["UPD SimpleName: idealStatePath from idealStatePath to bestPossStateSize"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from resource to partition", "operations": ["UPD SimpleName: resource from resource to partition"]}, {"root": "MOVE from SimpleType: ExternalView", "operations": ["MOV SimpleName: String to SimpleType: ExternalView at 0"]}, {"root": "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from getSimpleField to get", "operations": ["UPD SimpleName: getSimpleField from getSimpleField to get", "UPD SimpleName: readData from readData to get", "UPD SimpleName: put from put to get", "UPD SimpleName: readData from readData to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getSimpleField to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1"]}, {"root": "UPDATE from getChildren to getResourceMap", "operations": ["UPD SimpleName: getChildren from getChildren to getResourceMap", "UPD SimpleName: getIdealStatePath from getIdealStatePath to getResourceMap"]}, {"root": "UPDATE from clusterName to resourceName", "operations": ["UPD SimpleName: clusterName from clusterName to resourceName", "UPD SimpleName: clusterName from clusterName to resourceName", "UPD SimpleName: liveInstancePath from liveInstancePath to resourceName", "UPD SimpleName: currentStatePath from currentStatePath to resourceName"]}, {"root": "INS SimpleType: Map.Entry to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Map.Entry to VariableDeclarationStatement at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0"]}, {"root": "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: stateUnitKey to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from stateUnitKey to size", "operations": ["UPD SimpleName: stateUnitKey from stateUnitKey to size"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1"]}, {"root": "UPDATE from currentStates to partErrStates", "operations": ["UPD SimpleName: currentStates from currentStates to partErrStates", "UPD SimpleName: currentStates from currentStates to partErrStates", "UPD SimpleName: liveInstanceRecord from liveInstanceRecord to partErrStates"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentStates to MethodInvocation at 0", "MOV SimpleName: containsKey to MethodInvocation at 1"]}, {"root": "UPDATE from containsKey to keySet", "operations": ["UPD SimpleName: containsKey from containsKey to keySet"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toString to MethodInvocation at 0"]}, {"root": "UPDATE from partitionStatePath to pairs", "operations": ["UPD SimpleName: partitionStatePath from partitionStatePath to pairs", "UPD SimpleName: partitionStatePath from partitionStatePath to pairs"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to CastExpression at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleType: Map.Entry to CastExpression at 0", "INS SimpleName: iter to MethodInvocation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1"]}, {"root": "UPDATE from nodeCurrentState to instanceStateMap", "operations": ["UPD SimpleName: nodeCurrentState from nodeCurrentState to instanceStateMap"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS ParameterizedType: Map<String,String> to CastExpression at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS CastExpression to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from instanceName to getMapFields", "operations": ["UPD SimpleName: instanceName from instanceName to getMapFields"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getIdealStatePath to MethodInvocation at 1", "MOV SimpleName: HelixUtil to MethodInvocation at 0", "MOV SimpleName: clusterName to MethodInvocation at 2"]}, {"root": "INS SimpleType: String to ParameterizedType: List<String> at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1"]}, {"root": "INS SimpleType: String to ParameterizedType: List<String> at 2", "operations": ["INS SimpleType: String to ParameterizedType: List<String> at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from resources to evInstanceStateMap", "operations": ["UPD SimpleName: resources from resources to evInstanceStateMap"]}, {"root": "INS SimpleType: String to ParameterizedType: List<ZNRecord> at 2", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<ZNRecord> at 2"]}, {"root": "UPDATE from idealStates to bpInstanceStateMap", "operations": ["UPD SimpleName: idealStates from idealStates to bpInstanceStateMap"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleName: partition to ClassInstanceCreation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: bestPossOutput to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: getInstanceStateMap to MethodInvocation at 1", "INS SimpleType: Partition to ClassInstanceCreation at 0"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: ZNRecord to SimpleType: Map at 0"]}, {"root": "UPDATE from zkClient to errStates", "operations": ["UPD SimpleName: zkClient from zkClient to errStates"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: ZNRecord to SimpleType: Map at 0"]}, {"root": "UPDATE from currentStates to extView", "operations": ["UPD SimpleName: currentStates from currentStates to extView", "UPD SimpleName: zkClient from zkClient to extView"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: currentStates to MethodInvocation at 0"]}, {"root": "UPDATE from getChildren to getRecord", "operations": ["UPD SimpleName: getChildren from getChildren to getRecord", "UPD SimpleName: get from get to getRecord"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from idealStatePath to getMapField", "operations": ["UPD SimpleName: idealStatePath from idealStatePath to getMapField"]}, {"root": "INS SimpleName: partition to MethodInvocation at 4", "operations": ["INS SimpleName: partition to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleType: String to MethodInvocation at 1"]}, {"root": "UPDATE from add to debug", "operations": ["UPD SimpleName: add from add to debug"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS StringLiteral: \")\" to InfixExpression: + at 6", "INS SimpleName: key to InfixExpression: + at 1", "INS StringLiteral: \"(map1: \" to InfixExpression: + at 2", "INS MethodInvocation to InfixExpression: + at 5", "INS StringLiteral: \"different value for key: \" to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS StringLiteral: \", map2: \" to InfixExpression: + at 4", "INS SimpleName: map2 to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: key to MethodInvocation at 2"]}, {"root": "UPDATE from currentStatePath to partStateMap", "operations": ["UPD SimpleName: currentStatePath from currentStatePath to partStateMap"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: currentStatePath to VariableDeclarationFragment at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: partitionStatePath to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: zkClient to MethodInvocation at 0", "MOV SimpleName: getChildren to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: instanceName to MethodInvocation at 2", "MOV SimpleName: put to MethodInvocation at 1", "MOV SimpleName: currentStates to MethodInvocation at 0"]}, {"root": "UPDATE from instanceName to partitionName", "operations": ["UPD SimpleName: instanceName from instanceName to partitionName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: HelixUtil to MethodInvocation at 0", "MOV SimpleName: getCurrentStateBasePath to MethodInvocation at 1", "MOV SimpleName: clusterName to MethodInvocation at 2"]}, {"root": "UPDATE from getCurrentStateBasePath to getInstanceStateMap", "operations": ["UPD SimpleName: getCurrentStateBasePath from getCurrentStateBasePath to getInstanceStateMap"]}, {"root": "UPDATE from ArrayList to Partition", "operations": ["UPD SimpleName: ArrayList from ArrayList to Partition"]}, {"root": "MOVE from SimpleType: Partition", "operations": ["MOV SimpleName: ArrayList to SimpleType: Partition at 0"]}, {"root": "UPDATE from zkClient to map1", "operations": ["UPD SimpleName: zkClient from zkClient to map1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: zkClient to MethodInvocation at 0", "MOV SimpleName: viewPath to MethodInvocation at 2", "MOV SimpleName: readData to MethodInvocation at 1"]}, {"root": "UPDATE from viewPath to key", "operations": ["UPD SimpleName: viewPath from viewPath to key"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: HelixUtil", "DEL SimpleName: getMemberInstancesPath", "DEL MethodInvocation", "DEL SimpleName: clusterName"]}, {"root": "DEL SimpleName: instancesPath", "operations": ["DEL SimpleName: instancesPath"]}, {"root": "DEL SimpleName: getLiveInstancePath", "operations": ["DEL SimpleName: getLiveInstancePath"]}, {"root": "DEL SimpleType: ZNRecord", "operations": ["DEL SimpleType: ZNRecord"]}, {"root": "DEL ParameterizedType: List<String>", "operations": ["DEL ParameterizedType: List<String>"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: stateUnitKey", "DEL SimpleName: currentStatePath", "DEL StringLiteral: \"/\"", "DEL InfixExpression: +"]}, {"root": "DEL SimpleType: ZNRecord", "operations": ["DEL SimpleType: ZNRecord"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: readData", "DEL SimpleName: zkClient", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL SimpleType: ZNRecord", "DEL SimpleName: ZNRecord", "DEL ParameterizedType: ArrayList<ZNRecord>"]}, {"root": "DEL ParameterizedType: List<String>", "operations": ["DEL SimpleType: List", "DEL ParameterizedType: List<String>"]}, {"root": "DEL SimpleName: view", "operations": ["DEL SimpleName: view"]}, {"root": "DEL SimpleName: views", "operations": ["DEL SimpleName: views"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: ZNRecord", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: ZNRecord"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: viewPath", "DEL StringLiteral: \"/\"", "DEL VariableDeclarationStatement", "DEL SimpleName: view", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL SimpleName: externalViewPath"]}, {"root": "DEL SimpleName: idealStates", "operations": ["DEL SimpleName: idealStates"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL IfStatement", "DEL SimpleName: instanceName", "DEL SimpleName: stateUnitKey", "DEL VariableDeclarationFragment", "DEL Block", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: zkServer", "DEL ParameterizedType: TreeMap<String,Map<String,ZNRecord>>", "DEL ParameterizedType: TreeMap<String,ZNRecord>", "DEL SimpleName: externalViewPath", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL StringLiteral: \"/\"", "DEL SimpleName: instanceNames", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: instanceName", "DEL EnhancedForStatement", "DEL EnhancedForStatement", "DEL SimpleType: String", "DEL SimpleName: resources", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: nodeCurrentState", "DEL VariableDeclarationStatement", "DEL SimpleName: currentStates", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: idealStates", "DEL PrimitiveType: boolean", "DEL SimpleType: ZNRecord", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: externalViews", "DEL Block", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,ZNRecord>", "DEL CastExpression", "DEL ParameterizedType: ArrayList<ZNRecord>", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: add", "DEL ClassInstanceCreation", "DEL SimpleName: instanceName", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: zkClient", "DEL SimpleName: resourcePath", "DEL VariableDeclarationStatement", "DEL SimpleName: liveInstanceRecord", "DEL PrefixExpression: !", "DEL SimpleName: put", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: partitionStatePaths", "DEL QualifiedName: LiveInstanceProperty.SESSION_ID", "DEL Block", "DEL ParameterizedType: List<ZNRecord>"]}, {"root": "DEL SimpleName: verifyClusterStates", "operations": ["DEL SimpleName: verifyClusterStates"]}, {"root": "DEL SimpleName: zkServer", "operations": ["DEL SimpleName: zkServer"]}, {"root": "DEL SimpleName: clusterName", "operations": ["DEL SimpleName: clusterName"]}]}}, {"ClusterStateVerifier_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(2034) at 4", "Move ImportDeclaration(13) into CompilationUnit(2034) at 17", "Move ImportDeclaration(51) into CompilationUnit(2034) at 23", "Insert ImportDeclaration(37) into CompilationUnit(2034) at 18", "Insert ImportDeclaration(41) into CompilationUnit(2034) at 20", "Insert ImportDeclaration(43) into CompilationUnit(2034) at 21", "Insert ImportDeclaration(45) into CompilationUnit(2034) at 22", "Insert ImportDeclaration(47) into CompilationUnit(2034) at 23", "Insert ImportDeclaration(49) into CompilationUnit(2034) at 24", "Insert ImportDeclaration(51) into CompilationUnit(2034) at 25", "Insert ImportDeclaration(53) into CompilationUnit(2034) at 26", "Insert ImportDeclaration(55) into CompilationUnit(2034) at 27", "Insert ImportDeclaration(57) into CompilationUnit(2034) at 28", "Insert ImportDeclaration(59) into CompilationUnit(2034) at 29", "Insert ImportDeclaration(67) into CompilationUnit(2034) at 33", "Update QualifiedName: java.util.ArrayList(4) to java.util.Iterator", "Update QualifiedName: java.util.TreeMap(12) to com.linkedin.helix.DataAccessor", "Insert QualifiedName: com.linkedin.helix.TestHelper(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: com.linkedin.helix.controller.pipeline.Stage(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.linkedin.helix.controller.pipeline.StageContext(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.AttributeName(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.BestPossibleStateCalcStage(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.BestPossibleStateOutput(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.ClusterDataCache(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.ClusterEvent(52) into ImportDeclaration(53) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.CurrentStateComputationStage(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: com.linkedin.helix.controller.stages.ResourceComputationStage(56) into ImportDeclaration(57) at 0", "Insert QualifiedName: com.linkedin.helix.manager.zk.ZKDataAccessor(58) into ImportDeclaration(59) at 0", "Insert QualifiedName: com.linkedin.helix.model.ExternalView(66) into ImportDeclaration(67) at 0", "Update QualifiedName: com.linkedin.helix.model.LiveInstance.LiveInstanceProperty(44) to com.linkedin.helix.model.IdealState", "Update QualifiedName: com.linkedin.helix.util.HelixUtil(50) to com.linkedin.helix.model.Partition", "Insert TypeDeclaration: interface(120) into TypeDeclaration: class(2033) at 6", "Insert TypeDeclaration: class(720) into TypeDeclaration: class(2033) at 7", "Insert MethodDeclaration(761) into TypeDeclaration: class(2033) at 8", "Insert MethodDeclaration(850) into TypeDeclaration: class(2033) at 9", "Insert MethodDeclaration(991) into TypeDeclaration: class(2033) at 10", "Insert MethodDeclaration(1008) into TypeDeclaration: class(2033) at 11", "Insert MethodDeclaration(1116) into TypeDeclaration: class(2033) at 12", "Insert Modifier: public(115) into TypeDeclaration: interface(120) at 0", "Insert SimpleName: Verifier(116) into TypeDeclaration: interface(120) at 1", "Insert MethodDeclaration(119) into TypeDeclaration: interface(120) at 2", "Insert Modifier: public(121) into TypeDeclaration: class(720) at 0", "Insert Modifier: static(122) into TypeDeclaration: class(720) at 1", "Insert SimpleName: BestPossAndExtViewVerifier(123) into TypeDeclaration: class(720) at 2", "Insert SimpleType: Verifier(125) into TypeDeclaration: class(720) at 3", "Insert FieldDeclaration(132) into TypeDeclaration: class(720) at 4", "Insert FieldDeclaration(139) into TypeDeclaration: class(720) at 5", "Insert FieldDeclaration(156) into TypeDeclaration: class(720) at 6", "Insert MethodDeclaration(172) into TypeDeclaration: class(720) at 7", "Insert MethodDeclaration(239) into TypeDeclaration: class(720) at 8", "Insert MethodDeclaration(679) into TypeDeclaration: class(720) at 9", "Insert MethodDeclaration(719) into TypeDeclaration: class(720) at 10", "Insert Modifier: static(721) into MethodDeclaration(761) at 0", "Insert PrimitiveType: void(722) into MethodDeclaration(761) at 1", "Insert SimpleName: runStage(723) into MethodDeclaration(761) at 2", "Insert SingleVariableDeclaration(727) into MethodDeclaration(761) at 3", "Insert SingleVariableDeclaration(731) into MethodDeclaration(761) at 4", "Insert SimpleType: Exception(733) into MethodDeclaration(761) at 5", "Insert Block(760) into MethodDeclaration(761) at 6", "Insert Javadoc(771) into MethodDeclaration(850) at 0", "Insert Modifier: static(772) into MethodDeclaration(850) at 1", "Insert SimpleType: BestPossibleStateOutput(774) into MethodDeclaration(850) at 2", "Insert SimpleName: calcBestPossState(775) into MethodDeclaration(850) at 3", "Insert SingleVariableDeclaration(779) into MethodDeclaration(850) at 4", "Insert SimpleType: Exception(781) into MethodDeclaration(850) at 5", "Insert Block(849) into MethodDeclaration(850) at 6", "Insert Modifier: public(851) into MethodDeclaration(991) at 0", "Insert Modifier: static(852) into MethodDeclaration(991) at 1", "Insert TypeParameter(854) into MethodDeclaration(991) at 2", "Insert TypeParameter(856) into MethodDeclaration(991) at 3", "Insert PrimitiveType: boolean(857) into MethodDeclaration(991) at 4", "Insert SimpleName: compareMap(858) into MethodDeclaration(991) at 5", "Insert SingleVariableDeclaration(867) into MethodDeclaration(991) at 6", "Insert SingleVariableDeclaration(876) into MethodDeclaration(991) at 7", "Insert Block(990) into MethodDeclaration(991) at 8", "Insert Modifier: public(992) into MethodDeclaration(1008) at 0", "Insert Modifier: static(993) into MethodDeclaration(1008) at 1", "Insert PrimitiveType: boolean(994) into MethodDeclaration(1008) at 2", "Insert SimpleName: verify(995) into MethodDeclaration(1008) at 3", "Insert SingleVariableDeclaration(999) into MethodDeclaration(1008) at 4", "Insert Block(1007) into MethodDeclaration(1008) at 5", "Insert Modifier: public(1009) into MethodDeclaration(1116) at 0", "Insert Modifier: static(1010) into MethodDeclaration(1116) at 1", "Insert PrimitiveType: boolean(1011) into MethodDeclaration(1116) at 2", "Insert SimpleName: verify(1012) into MethodDeclaration(1116) at 3", "Insert SingleVariableDeclaration(1016) into MethodDeclaration(1116) at 4", "Insert SingleVariableDeclaration(1019) into MethodDeclaration(1116) at 5", "Insert Block(1115) into MethodDeclaration(1116) at 6", "Update SimpleName: _logger(82) to LOG", "Insert PrimitiveType: boolean(117) into MethodDeclaration(119) at 0", "Insert SimpleName: verify(118) into MethodDeclaration(119) at 1", "Insert SimpleName: Verifier(124) into SimpleType: Verifier(125) at 0", "Insert Modifier: private(126) into FieldDeclaration(132) at 0", "Insert Modifier: final(127) into FieldDeclaration(132) at 1", "Insert SimpleType: String(129) into FieldDeclaration(132) at 2", "Insert VariableDeclarationFragment(131) into FieldDeclaration(132) at 3", "Insert Modifier: private(133) into FieldDeclaration(139) at 0", "Insert Modifier: final(134) into FieldDeclaration(139) at 1", "Insert SimpleType: String(136) into FieldDeclaration(139) at 2", "Insert VariableDeclarationFragment(138) into FieldDeclaration(139) at 3", "Insert Modifier: private(140) into FieldDeclaration(156) at 0", "Insert Modifier: final(141) into FieldDeclaration(156) at 1", "Update ParameterizedType: Map<String,Map<String,ZNRecord>>(155) to Map<String,Map<String,String>>", "Move ParameterizedType: Map<String,Map<String,ZNRecord>>(155) into FieldDeclaration(156) at 2", "Insert VariableDeclarationFragment(155) into FieldDeclaration(156) at 3", "Insert Modifier: public(157) into MethodDeclaration(172) at 0", "Insert SimpleName: BestPossAndExtViewVerifier(158) into MethodDeclaration(172) at 1", "Insert SingleVariableDeclaration(162) into MethodDeclaration(172) at 2", "Insert SingleVariableDeclaration(166) into MethodDeclaration(172) at 3", "Insert Block(171) into MethodDeclaration(172) at 4", "Move Javadoc(94) into MethodDeclaration(239) at 0", "Move Modifier: public(95) into MethodDeclaration(239) at 1", "Insert SimpleName: BestPossAndExtViewVerifier(183) into MethodDeclaration(239) at 2", "Insert SingleVariableDeclaration(187) into MethodDeclaration(239) at 3", "Move SingleVariableDeclaration(106) into MethodDeclaration(239) at 4", "Insert SingleVariableDeclaration(205) into MethodDeclaration(239) at 5", "Insert Block(238) into MethodDeclaration(239) at 6", "Insert MarkerAnnotation(241) into MethodDeclaration(679) at 0", "Update Modifier: static(96) to public", "Move Modifier: static(96) into MethodDeclaration(679) at 1", "Move PrimitiveType: boolean(97) into MethodDeclaration(679) at 2", "Update SimpleName: verifyClusterStates(98) to verify", "Move SimpleName: verifyClusterStates(98) into MethodDeclaration(679) at 3", "Insert Block(678) into MethodDeclaration(679) at 4", "Insert MarkerAnnotation(681) into MethodDeclaration(719) at 0", "Insert Modifier: public(682) into MethodDeclaration(719) at 1", "Insert SimpleType: String(684) into MethodDeclaration(719) at 2", "Insert SimpleName: toString(685) into MethodDeclaration(719) at 3", "Insert Block(718) into MethodDeclaration(719) at 4", "Insert SimpleType: ClusterEvent(725) into SingleVariableDeclaration(727) at 0", "Insert SimpleName: event(726) into SingleVariableDeclaration(727) at 1", "Insert SimpleType: Stage(729) into SingleVariableDeclaration(731) at 0", "Insert SimpleName: stage(730) into SingleVariableDeclaration(731) at 1", "Insert SimpleName: Exception(732) into SimpleType: Exception(733) at 0", "Insert VariableDeclarationStatement(741) into Block(760) at 0", "Insert ExpressionStatement(746) into Block(760) at 1", "Insert ExpressionStatement(750) into Block(760) at 2", "Insert ExpressionStatement(755) into Block(760) at 3", "Insert ExpressionStatement(759) into Block(760) at 4", "Insert TagElement(765) into Javadoc(771) at 0", "Insert TagElement: @param(767) into Javadoc(771) at 1", "Insert TagElement: @return(768) into Javadoc(771) at 2", "Insert TagElement: @throws(770) into Javadoc(771) at 3", "Insert SimpleName: BestPossibleStateOutput(773) into SimpleType: BestPossibleStateOutput(774) at 0", "Insert SimpleType: ClusterDataCache(777) into SingleVariableDeclaration(779) at 0", "Insert SimpleName: cache(778) into SingleVariableDeclaration(779) at 1", "Update SimpleName: ZNRecord(333) to Exception", "Move SimpleName: ZNRecord(333) into SimpleType: Exception(781) at 0", "Insert VariableDeclarationStatement(790) into Block(849) at 0", "Insert ExpressionStatement(796) into Block(849) at 1", "Insert VariableDeclarationStatement(804) into Block(849) at 2", "Insert VariableDeclarationStatement(812) into Block(849) at 3", "Insert VariableDeclarationStatement(820) into Block(849) at 4", "Insert ExpressionStatement(825) into Block(849) at 5", "Insert ExpressionStatement(830) into Block(849) at 6", "Insert ExpressionStatement(835) into Block(849) at 7", "Move VariableDeclarationStatement(364) into Block(849) at 8", "Insert ReturnStatement(848) into Block(849) at 9", "Insert SimpleName: K(853) into TypeParameter(854) at 0", "Insert SimpleName: V(855) into TypeParameter(856) at 0", "Insert ParameterizedType: Map<K,V>(865) into SingleVariableDeclaration(867) at 0", "Insert SimpleName: map1(866) into SingleVariableDeclaration(867) at 1", "Insert ParameterizedType: Map<K,V>(874) into SingleVariableDeclaration(876) at 0", "Insert SimpleName: map2(875) into SingleVariableDeclaration(876) at 1", "Insert VariableDeclarationStatement(881) into Block(990) at 0", "Insert IfStatement(987) into Block(990) at 1", "Insert ReturnStatement(989) into Block(990) at 2", "Insert SimpleType: Verifier(997) into SingleVariableDeclaration(999) at 0", "Insert SimpleName: verifier(998) into SingleVariableDeclaration(999) at 1", "Insert ReturnStatement(1006) into Block(1007) at 0", "Insert SimpleType: Verifier(1014) into SingleVariableDeclaration(1016) at 0", "Insert SimpleName: verifier(1015) into SingleVariableDeclaration(1016) at 1", "Insert PrimitiveType: long(1017) into SingleVariableDeclaration(1019) at 0", "Insert SimpleName: timeout(1018) into SingleVariableDeclaration(1019) at 1", "Insert VariableDeclarationStatement(1025) into Block(1115) at 0", "Insert VariableDeclarationStatement(1035) into Block(1115) at 1", "Insert VariableDeclarationStatement(1042) into Block(1115) at 2", "Insert VariableDeclarationStatement(1047) into Block(1115) at 3", "Insert TryStatement(1112) into Block(1115) at 4", "Insert ReturnStatement(1114) into Block(1115) at 5", "Insert SimpleName: String(128) into SimpleType: String(129) at 0", "Insert SimpleName: zkAddr(130) into VariableDeclarationFragment(131) at 0", "Insert SimpleName: String(135) into SimpleType: String(136) at 0", "Insert SimpleName: clusterName(137) into VariableDeclarationFragment(138) at 0", "Update ParameterizedType: Map<String,ZNRecord>(154) to Map<String,String>", "Insert SimpleName: errStates(154) into VariableDeclarationFragment(155) at 0", "Move SimpleType: String(124) into SingleVariableDeclaration(162) at 0", "Insert SimpleName: zkAddr(161) into SingleVariableDeclaration(162) at 1", "Insert SimpleType: String(164) into SingleVariableDeclaration(166) at 0", "Insert SimpleName: clusterName(165) into SingleVariableDeclaration(166) at 1", "Insert ConstructorInvocation(170) into Block(171) at 0", "Insert TagElement(174) into Javadoc(181) at 0", "Update TagElement: @return(93) to @param", "Insert TagElement: @param(180) into Javadoc(181) at 3", "Move SimpleType: String(178) into SingleVariableDeclaration(187) at 0", "Insert SimpleName: zkAddr(186) into SingleVariableDeclaration(187) at 1", "Insert ParameterizedType: Map<String,Map<String,String>>(203) into SingleVariableDeclaration(205) at 0", "Insert SimpleName: errStates(204) into SingleVariableDeclaration(205) at 1", "Insert IfStatement(219) into Block(238) at 0", "Insert ExpressionStatement(225) into Block(238) at 1", "Insert ExpressionStatement(231) into Block(238) at 2", "Insert ExpressionStatement(237) into Block(238) at 3", "Insert SimpleName: Override(240) into MarkerAnnotation(241) at 0", "Insert VariableDeclarationStatement(250) into Block(678) at 0", "Insert TryStatement(675) into Block(678) at 1", "Insert ReturnStatement(677) into Block(678) at 2", "Insert SimpleName: Override(680) into MarkerAnnotation(681) at 0", "Insert SimpleName: String(683) into SimpleType: String(684) at 0", "Insert VariableDeclarationStatement(694) into Block(718) at 0", "Insert ExpressionStatement(709) into Block(718) at 1", "Insert ReturnStatement(717) into Block(718) at 2", "Insert SimpleName: ClusterEvent(724) into SimpleType: ClusterEvent(725) at 0", "Insert SimpleName: Stage(728) into SimpleType: Stage(729) at 0", "Insert SimpleType: StageContext(735) into VariableDeclarationStatement(741) at 0", "Insert VariableDeclarationFragment(740) into VariableDeclarationStatement(741) at 1", "Insert MethodInvocation(745) into ExpressionStatement(746) at 0", "Insert MethodInvocation(749) into ExpressionStatement(750) at 0", "Insert MethodInvocation(754) into ExpressionStatement(755) at 0", "Insert MethodInvocation(758) into ExpressionStatement(759) at 0", "Insert TextElement: calculate the best possible state note that DROPPED states(762) into TagElement(765) at 0", "Insert TextElement: are not checked since when kick off the BestPossibleStateCalcStage we are(763) into TagElement(765) at 1", "Insert TextElement: providing an empty current state map(764) into TagElement(765) at 2", "Insert SimpleName: cache(766) into TagElement: @param(767) at 0", "Insert SimpleName: Exception(769) into TagElement: @throws(770) at 0", "Insert SimpleName: ClusterDataCache(776) into SimpleType: ClusterDataCache(777) at 0", "Insert SimpleType: ClusterEvent(783) into VariableDeclarationStatement(790) at 0", "Insert VariableDeclarationFragment(789) into VariableDeclarationStatement(790) at 1", "Insert MethodInvocation(795) into ExpressionStatement(796) at 0", "Insert SimpleType: ResourceComputationStage(798) into VariableDeclarationStatement(804) at 0", "Insert VariableDeclarationFragment(803) into VariableDeclarationStatement(804) at 1", "Insert SimpleType: CurrentStateComputationStage(806) into VariableDeclarationStatement(812) at 0", "Insert VariableDeclarationFragment(811) into VariableDeclarationStatement(812) at 1", "Insert SimpleType: BestPossibleStateCalcStage(814) into VariableDeclarationStatement(820) at 0", "Insert VariableDeclarationFragment(819) into VariableDeclarationStatement(820) at 1", "Insert MethodInvocation(824) into ExpressionStatement(825) at 0", "Insert MethodInvocation(829) into ExpressionStatement(830) at 0", "Insert MethodInvocation(834) into ExpressionStatement(835) at 0", "Insert SimpleType: BestPossibleStateOutput(837) into VariableDeclarationStatement(846) at 0", "Insert SimpleName: output(847) into ReturnStatement(848) at 0", "Update SimpleType: List(366) to Map", "Move SimpleType: List(366) into ParameterizedType: Map<K,V>(865) at 0", "Update SimpleType: ZNRecord(368) to K", "Move SimpleType: ZNRecord(368) into ParameterizedType: Map<K,V>(865) at 1", "Insert SimpleType: V(864) into ParameterizedType: Map<K,V>(865) at 2", "Update SimpleType: ArrayList(372) to Map", "Move SimpleType: ArrayList(372) into ParameterizedType: Map<K,V>(874) at 0", "Update SimpleType: ZNRecord(374) to K", "Move SimpleType: ZNRecord(374) into ParameterizedType: Map<K,V>(874) at 1", "Insert SimpleType: V(873) into ParameterizedType: Map<K,V>(874) at 2", "Insert PrimitiveType: boolean(877) into VariableDeclarationStatement(881) at 0", "Insert VariableDeclarationFragment(880) into VariableDeclarationStatement(881) at 1", "Insert InfixExpression: &&(888) into IfStatement(987) at 0", "Insert Block(889) into IfStatement(987) at 1", "Insert IfStatement(986) into IfStatement(987) at 2", "Insert SimpleName: isEqual(988) into ReturnStatement(989) at 0", "Insert SimpleName: Verifier(996) into SimpleType: Verifier(997) at 0", "Insert MethodInvocation(1005) into ReturnStatement(1006) at 0", "Insert SimpleName: Verifier(1013) into SimpleType: Verifier(1014) at 0", "Insert Modifier: final(1020) into VariableDeclarationStatement(1025) at 0", "Insert PrimitiveType: long(1021) into VariableDeclarationStatement(1025) at 1", "Insert VariableDeclarationFragment(1024) into VariableDeclarationStatement(1025) at 2", "Insert Modifier: final(1026) into VariableDeclarationStatement(1035) at 0", "Insert PrimitiveType: long(1027) into VariableDeclarationStatement(1035) at 1", "Insert VariableDeclarationFragment(1034) into VariableDeclarationStatement(1035) at 2", "Insert PrimitiveType: long(1036) into VariableDeclarationStatement(1042) at 0", "Move VariableDeclarationFragment(412) into VariableDeclarationStatement(1042) at 1", "Move PrimitiveType: boolean(414) into VariableDeclarationStatement(1047) at 0", "Insert VariableDeclarationFragment(1046) into VariableDeclarationStatement(1047) at 1", "Insert Block(1079) into TryStatement(1112) at 0", "Insert CatchClause(1089) into TryStatement(1112) at 1", "Insert Block(1111) into TryStatement(1112) at 2", "Insert BooleanLiteral: false(1113) into ReturnStatement(1114) at 0", "Update SimpleType: ZNRecord(153) to String", "Insert SimpleName: String(163) into SimpleType: String(164) at 0", "Insert SimpleName: zkAddr(167) into ConstructorInvocation(170) at 0", "Insert SimpleName: clusterName(168) into ConstructorInvocation(170) at 1", "Insert NullLiteral(169) into ConstructorInvocation(170) at 2", "Insert TextElement: verifier that verifies best possible state and external view(173) into TagElement(174) at 0", "Update SimpleName: args(91) to zkAddr", "Insert SimpleName: clusterName(177) into TagElement: @param(178) at 0", "Insert TextElement:  errStates: resource->partition->instance(179) into TagElement: @param(180) at 0", "Move SimpleType: Map(162) into ParameterizedType: Map<String,Map<String,String>>(203) at 0", "Move SimpleType: String(164) into ParameterizedType: Map<String,Map<String,String>>(203) at 1", "Insert ParameterizedType: Map<String,String>(202) into ParameterizedType: Map<String,Map<String,String>>(203) at 2", "Insert InfixExpression: ||(212) into IfStatement(219) at 0", "Insert Block(218) into IfStatement(219) at 1", "Insert Assignment: =(224) into ExpressionStatement(225) at 0", "Insert Assignment: =(230) into ExpressionStatement(231) at 0", "Insert Assignment: =(236) into ExpressionStatement(237) at 0", "Move SimpleType: ZkClient(111) into VariableDeclarationStatement(250) at 0", "Insert VariableDeclarationFragment(249) into VariableDeclarationStatement(250) at 1", "Insert Block(650) into TryStatement(675) at 0", "Insert CatchClause(664) into TryStatement(675) at 1", "Insert Block(674) into TryStatement(675) at 2", "Insert BooleanLiteral: true(676) into ReturnStatement(677) at 0", "Move SimpleType: String(283) into VariableDeclarationStatement(694) at 0", "Insert VariableDeclarationFragment(693) into VariableDeclarationStatement(694) at 1", "Insert Assignment: =(708) into ExpressionStatement(709) at 0", "Insert InfixExpression: +(716) into ReturnStatement(717) at 0", "Insert SimpleName: StageContext(734) into SimpleType: StageContext(735) at 0", "Insert SimpleName: context(736) into VariableDeclarationFragment(740) at 0", "Insert ClassInstanceCreation(739) into VariableDeclarationFragment(740) at 1", "Insert SimpleName: stage(742) into MethodInvocation(745) at 0", "Insert SimpleName: init(743) into MethodInvocation(745) at 1", "Insert SimpleName: context(744) into MethodInvocation(745) at 2", "Insert SimpleName: stage(747) into MethodInvocation(749) at 0", "Insert SimpleName: preProcess(748) into MethodInvocation(749) at 1", "Insert SimpleName: stage(751) into MethodInvocation(754) at 0", "Insert SimpleName: process(752) into MethodInvocation(754) at 1", "Insert SimpleName: event(753) into MethodInvocation(754) at 2", "Insert SimpleName: stage(756) into MethodInvocation(758) at 0", "Insert SimpleName: postProcess(757) into MethodInvocation(758) at 1", "Insert SimpleName: ClusterEvent(782) into SimpleType: ClusterEvent(783) at 0", "Insert SimpleName: event(784) into VariableDeclarationFragment(789) at 0", "Insert ClassInstanceCreation(788) into VariableDeclarationFragment(789) at 1", "Update SimpleName: zkClient(335) to event", "Move SimpleName: zkClient(335) into MethodInvocation(795) at 0", "Update SimpleName: readData(336) to addAttribute", "Move SimpleName: readData(336) into MethodInvocation(795) at 1", "Insert StringLiteral: \"ClusterDataCache\"(793) into MethodInvocation(795) at 2", "Update SimpleName: resourcePath(337) to cache", "Move SimpleName: resourcePath(337) into MethodInvocation(795) at 3", "Insert SimpleName: ResourceComputationStage(797) into SimpleType: ResourceComputationStage(798) at 0", "Insert SimpleName: rcState(799) into VariableDeclarationFragment(803) at 0", "Insert ClassInstanceCreation(802) into VariableDeclarationFragment(803) at 1", "Insert SimpleName: CurrentStateComputationStage(805) into SimpleType: CurrentStateComputationStage(806) at 0", "Insert SimpleName: csStage(807) into VariableDeclarationFragment(811) at 0", "Insert ClassInstanceCreation(810) into VariableDeclarationFragment(811) at 1", "Insert SimpleName: BestPossibleStateCalcStage(813) into SimpleType: BestPossibleStateCalcStage(814) at 0", "Insert SimpleName: bpStage(815) into VariableDeclarationFragment(819) at 0", "Insert ClassInstanceCreation(818) into VariableDeclarationFragment(819) at 1", "Insert SimpleName: runStage(821) into MethodInvocation(824) at 0", "Insert SimpleName: event(822) into MethodInvocation(824) at 1", "Insert SimpleName: rcState(823) into MethodInvocation(824) at 2", "Update SimpleName: HelixUtil(347) to runStage", "Move SimpleName: HelixUtil(347) into MethodInvocation(829) at 0", "Update SimpleName: getExternalViewPath(348) to event", "Move SimpleName: getExternalViewPath(348) into MethodInvocation(829) at 1", "Update SimpleName: clusterName(349) to csStage", "Move SimpleName: clusterName(349) into MethodInvocation(829) at 2", "Insert SimpleName: runStage(831) into MethodInvocation(834) at 0", "Insert SimpleName: event(832) into MethodInvocation(834) at 1", "Insert SimpleName: bpStage(833) into MethodInvocation(834) at 2", "Update SimpleName: List(353) to BestPossibleStateOutput", "Move SimpleName: List(353) into SimpleType: BestPossibleStateOutput(837) at 0", "Update SimpleName: views(358) to output", "Update SimpleName: List(365) to Map", "Update SimpleName: ZNRecord(367) to K", "Insert SimpleName: V(863) into SimpleType: V(864) at 0", "Update SimpleName: ArrayList(371) to Map", "Update SimpleName: ZNRecord(373) to K", "Insert SimpleName: V(872) into SimpleType: V(873) at 0", "Insert SimpleName: isEqual(878) into VariableDeclarationFragment(880) at 0", "Insert BooleanLiteral: true(879) into VariableDeclarationFragment(880) at 1", "Insert InfixExpression: ==(884) into InfixExpression: &&(888) at 0", "Insert InfixExpression: ==(887) into InfixExpression: &&(888) at 1", "Insert InfixExpression: &&(896) into IfStatement(986) at 0", "Insert Block(907) into IfStatement(986) at 1", "Insert IfStatement(985) into IfStatement(986) at 2", "Insert SimpleName: verify(1000) into MethodInvocation(1005) at 0", "Insert SimpleName: verifier(1001) into MethodInvocation(1005) at 1", "Insert InfixExpression: *(1004) into MethodInvocation(1005) at 2", "Insert SimpleName: sleepInterval(1022) into VariableDeclarationFragment(1024) at 0", "Insert NumberLiteral: 1000(1023) into VariableDeclarationFragment(1024) at 1", "Insert SimpleName: loop(1028) into VariableDeclarationFragment(1034) at 0", "Insert InfixExpression: +(1033) into VariableDeclarationFragment(1034) at 1", "Update SimpleName: result1(407) to startTime", "Update SimpleName: result2(415) to result", "Move SimpleName: result2(415) into VariableDeclarationFragment(1046) at 0", "Insert BooleanLiteral: false(1045) into VariableDeclarationFragment(1046) at 1", "Insert ForStatement(1076) into Block(1079) at 0", "Insert ReturnStatement(1078) into Block(1079) at 1", "Insert SingleVariableDeclaration(1083) into CatchClause(1089) at 0", "Insert Block(1088) into CatchClause(1089) at 1", "Insert VariableDeclarationStatement(1096) into Block(1111) at 0", "Insert ExpressionStatement(1110) into Block(1111) at 1", "Insert ClassInstanceCreation(2000) into MethodInvocation(2002) at 0", "Insert SimpleName: verify(2001) into MethodInvocation(2002) at 1", "Update SimpleName: ZNRecord(152) to String", "Insert SimpleType: Map(197) into ParameterizedType: Map<String,String>(202) at 0", "Move SimpleType: String(207) into ParameterizedType: Map<String,String>(202) at 1", "Insert SimpleType: String(201) into ParameterizedType: Map<String,String>(202) at 2", "Insert InfixExpression: ==(208) into InfixExpression: ||(212) at 0", "Insert InfixExpression: ==(211) into InfixExpression: ||(212) at 1", "Insert ThrowStatement(217) into Block(218) at 0", "Insert FieldAccess(222) into Assignment: =(224) at 0", "Insert SimpleName: zkAddr(223) into Assignment: =(224) at 1", "Insert FieldAccess(228) into Assignment: =(230) at 0", "Insert SimpleName: clusterName(229) into Assignment: =(230) at 1", "Insert FieldAccess(234) into Assignment: =(236) at 0", "Insert SimpleName: errStates(235) into Assignment: =(236) at 1", "Insert SimpleName: zkClient(247) into VariableDeclarationFragment(249) at 0", "Insert NullLiteral(248) into VariableDeclarationFragment(249) at 1", "Insert ExpressionStatement(257) into Block(650) at 0", "Move ExpressionStatement(122) into Block(650) at 1", "Move VariableDeclarationStatement(131) into Block(650) at 2", "Insert VariableDeclarationStatement(282) into Block(650) at 3", "Insert ExpressionStatement(287) into Block(650) at 4", "Move VariableDeclarationStatement(143) into Block(650) at 5", "Insert IfStatement(316) into Block(650) at 6", "Insert VariableDeclarationStatement(333) into Block(650) at 7", "Insert IfStatement(349) into Block(650) at 8", "Move VariableDeclarationStatement(186) into Block(650) at 9", "Insert IfStatement(428) into Block(650) at 10", "Insert EnhancedForStatement(649) into Block(650) at 11", "Insert SingleVariableDeclaration(654) into CatchClause(664) at 0", "Insert Block(663) into CatchClause(664) at 1", "Insert IfStatement(673) into Block(674) at 0", "Insert SimpleName: verifierName(688) into VariableDeclarationFragment(693) at 0", "Insert MethodInvocation(692) into VariableDeclarationFragment(693) at 1", "Insert SimpleName: verifierName(695) into Assignment: =(708) at 0", "Insert MethodInvocation(707) into Assignment: =(708) at 1", "Update SimpleName: idealStatePath(325) to verifierName", "Move SimpleName: idealStatePath(325) into InfixExpression: +(716) at 0", "Update StringLiteral: \"/\"(326) to \"(\"", "Move StringLiteral: \"/\"(326) into InfixExpression: +(716) at 1", "Insert SimpleName: zkAddr(712) into InfixExpression: +(716) at 2", "Insert StringLiteral: \", \"(713) into InfixExpression: +(716) at 3", "Update SimpleName: resource(327) to clusterName", "Move SimpleName: resource(327) into InfixExpression: +(716) at 4", "Insert StringLiteral: \")\"(715) into InfixExpression: +(716) at 5", "Insert SimpleType: StageContext(738) into ClassInstanceCreation(739) at 0", "Insert SimpleType: ClusterEvent(786) into ClassInstanceCreation(788) at 0", "Insert StringLiteral: \"sampleEvent\"(787) into ClassInstanceCreation(788) at 1", "Insert SimpleType: ResourceComputationStage(801) into ClassInstanceCreation(802) at 0", "Insert SimpleType: CurrentStateComputationStage(809) into ClassInstanceCreation(810) at 0", "Insert SimpleType: BestPossibleStateCalcStage(817) into ClassInstanceCreation(818) at 0", "Update SimpleName: zkClient(359) to event", "Update SimpleName: getChildren(360) to getAttribute", "Insert MethodInvocation(843) into MethodInvocation(844) at 2", "Insert SimpleName: map1(882) into InfixExpression: ==(884) at 0", "Insert NullLiteral(883) into InfixExpression: ==(884) at 1", "Insert SimpleName: map2(885) into InfixExpression: ==(887) at 0", "Insert NullLiteral(886) into InfixExpression: ==(887) at 1", "Insert InfixExpression: ==(892) into InfixExpression: &&(896) at 0", "Insert InfixExpression: !=(895) into InfixExpression: &&(896) at 1", "Insert IfStatement(906) into Block(907) at 0", "Insert InfixExpression: &&(914) into IfStatement(985) at 0", "Insert Block(925) into IfStatement(985) at 1", "Insert Block(984) into IfStatement(985) at 2", "Insert NumberLiteral: 30(1002) into InfixExpression: *(1004) at 0", "Insert NumberLiteral: 1000(1003) into InfixExpression: *(1004) at 1", "Insert InfixExpression: /(1031) into InfixExpression: +(1033) at 0", "Insert NumberLiteral: 1(1032) into InfixExpression: +(1033) at 1", "Update SimpleName: verifyIdealStateAndCurrentState(408) to System", "Update SimpleName: currentStates(410) to currentTimeMillis", "Insert VariableDeclarationExpression(1052) into ForStatement(1076) at 0", "Insert InfixExpression: <(1055) into ForStatement(1076) at 1", "Insert PostfixExpression: ++(1057) into ForStatement(1076) at 2", "Insert Block(1075) into ForStatement(1076) at 3", "Insert SimpleName: result(1077) into ReturnStatement(1078) at 0", "Insert SimpleType: Exception(1081) into SingleVariableDeclaration(1083) at 0", "Insert SimpleName: e(1082) into SingleVariableDeclaration(1083) at 1", "Insert ExpressionStatement(1087) into Block(1088) at 0", "Insert PrimitiveType: long(1090) into VariableDeclarationStatement(1096) at 0", "Insert VariableDeclarationFragment(1095) into VariableDeclarationStatement(1096) at 1", "Insert MethodInvocation(1109) into ExpressionStatement(1110) at 0", "Insert SimpleType: BestPossAndExtViewVerifier(1997) into ClassInstanceCreation(2000) at 0", "Insert SimpleName: zkServer(1998) into ClassInstanceCreation(2000) at 1", "Insert SimpleName: clusterName(1999) into ClassInstanceCreation(2000) at 2", "Insert SimpleName: Map(196) into SimpleType: Map(197) at 0", "Insert SimpleName: String(200) into SimpleType: String(201) at 0", "Insert SimpleName: zkAddr(206) into InfixExpression: ==(208) at 0", "Insert NullLiteral(207) into InfixExpression: ==(208) at 1", "Insert SimpleName: clusterName(209) into InfixExpression: ==(211) at 0", "Insert NullLiteral(210) into InfixExpression: ==(211) at 1", "Insert ClassInstanceCreation(216) into ThrowStatement(217) at 0", "Insert ThisExpression(220) into FieldAccess(222) at 0", "Insert SimpleName: zkAddr(221) into FieldAccess(222) at 1", "Insert ThisExpression(226) into FieldAccess(228) at 0", "Insert SimpleName: clusterName(227) into FieldAccess(228) at 1", "Insert ThisExpression(232) into FieldAccess(234) at 0", "Insert SimpleName: errStates(233) into FieldAccess(234) at 1", "Insert Assignment: =(256) into ExpressionStatement(257) at 0", "Insert SimpleType: DataAccessor(266) into VariableDeclarationStatement(274) at 0", "Insert SimpleType: ClusterDataCache(276) into VariableDeclarationStatement(282) at 0", "Insert VariableDeclarationFragment(281) into VariableDeclarationStatement(282) at 1", "Insert MethodInvocation(286) into ExpressionStatement(287) at 0", "Update ParameterizedType: List<String>(136) to Map<String,IdealState>", "Insert InfixExpression: ||(307) into IfStatement(316) at 0", "Insert Block(315) into IfStatement(316) at 1", "Insert ParameterizedType: Map<String,ExternalView>(323) into VariableDeclarationStatement(333) at 0", "Insert VariableDeclarationFragment(332) into VariableDeclarationStatement(333) at 1", "Insert InfixExpression: ||(340) into IfStatement(349) at 0", "Insert Block(348) into IfStatement(349) at 1", "Insert SimpleType: BestPossibleStateOutput(351) into VariableDeclarationStatement(358) at 0", "Insert InfixExpression: !=(361) into IfStatement(428) at 0", "Insert Block(427) into IfStatement(428) at 1", "Insert SingleVariableDeclaration(432) into EnhancedForStatement(649) at 0", "Insert MethodInvocation(435) into EnhancedForStatement(649) at 1", "Insert Block(648) into EnhancedForStatement(649) at 2", "Insert SimpleType: Exception(652) into SingleVariableDeclaration(654) at 0", "Insert SimpleName: e(653) into SingleVariableDeclaration(654) at 1", "Insert ExpressionStatement(660) into Block(663) at 0", "Insert ReturnStatement(662) into Block(663) at 1", "Insert InfixExpression: !=(667) into IfStatement(673) at 0", "Insert Block(672) into IfStatement(673) at 1", "Insert MethodInvocation(690) into MethodInvocation(692) at 0", "Insert SimpleName: getName(691) into MethodInvocation(692) at 1", "Insert SimpleName: verifierName(696) into MethodInvocation(707) at 0", "Insert SimpleName: substring(697) into MethodInvocation(707) at 1", "Insert InfixExpression: +(703) into MethodInvocation(707) at 2", "Insert MethodInvocation(706) into MethodInvocation(707) at 3", "Insert SimpleName: StageContext(737) into SimpleType: StageContext(738) at 0", "Insert SimpleName: ClusterEvent(785) into SimpleType: ClusterEvent(786) at 0", "Insert SimpleName: ResourceComputationStage(800) into SimpleType: ResourceComputationStage(801) at 0", "Insert SimpleName: CurrentStateComputationStage(808) into SimpleType: CurrentStateComputationStage(809) at 0", "Insert SimpleName: BestPossibleStateCalcStage(816) into SimpleType: BestPossibleStateCalcStage(817) at 0", "Insert QualifiedName: AttributeName.BEST_POSSIBLE_STATE(841) into MethodInvocation(843) at 0", "Update SimpleName: externalViewPath(361) to toString", "Move SimpleName: externalViewPath(361) into MethodInvocation(843) at 1", "Insert SimpleName: map1(890) into InfixExpression: ==(892) at 0", "Insert NullLiteral(891) into InfixExpression: ==(892) at 1", "Insert SimpleName: map2(893) into InfixExpression: !=(895) at 0", "Insert NullLiteral(894) into InfixExpression: !=(895) at 1", "Insert PrefixExpression: !(900) into IfStatement(906) at 0", "Insert Block(905) into IfStatement(906) at 1", "Insert InfixExpression: !=(910) into InfixExpression: &&(914) at 0", "Insert InfixExpression: ==(913) into InfixExpression: &&(914) at 1", "Insert IfStatement(924) into Block(925) at 0", "Insert IfStatement(938) into Block(984) at 0", "Move EnhancedForStatement(405) into Block(984) at 1", "Insert SimpleName: timeout(1029) into InfixExpression: /(1031) at 0", "Insert SimpleName: sleepInterval(1030) into InfixExpression: /(1031) at 1", "Insert PrimitiveType: int(1048) into VariableDeclarationExpression(1052) at 0", "Insert VariableDeclarationFragment(1051) into VariableDeclarationExpression(1052) at 1", "Insert SimpleName: i(1053) into InfixExpression: <(1055) at 0", "Insert SimpleName: loop(1054) into InfixExpression: <(1055) at 1", "Insert SimpleName: i(1056) into PostfixExpression: ++(1057) at 0", "Insert ExpressionStatement(1062) into Block(1075) at 0", "Insert ExpressionStatement(1068) into Block(1075) at 1", "Insert IfStatement(1074) into Block(1075) at 2", "Insert SimpleName: Exception(1080) into SimpleType: Exception(1081) at 0", "Insert MethodInvocation(1086) into ExpressionStatement(1087) at 0", "Insert SimpleName: endTime(1091) into VariableDeclarationFragment(1095) at 0", "Insert MethodInvocation(1094) into VariableDeclarationFragment(1095) at 1", "Insert QualifiedName: System.err(1097) into MethodInvocation(1109) at 0", "Insert SimpleName: println(1098) into MethodInvocation(1109) at 1", "Insert InfixExpression: +(1108) into MethodInvocation(1109) at 2", "Update SimpleName: _logger(581) to LOG", "Update SimpleName: _logger(705) to LOG", "Update SimpleName: _logger(1004) to LOG", "Insert SimpleName: BestPossAndExtViewVerifier(1996) into SimpleType: BestPossAndExtViewVerifier(1997) at 0", "Insert SimpleType: IllegalArgumentException(214) into ClassInstanceCreation(216) at 0", "Insert StringLiteral: \"requires zkAddr|clusterName\"(215) into ClassInstanceCreation(216) at 1", "Insert SimpleName: zkClient(251) into Assignment: =(256) at 0", "Insert ClassInstanceCreation(255) into Assignment: =(256) at 1", "Insert SimpleName: DataAccessor(265) into SimpleType: DataAccessor(266) at 0", "Update SimpleName: instancesPath(125) to accessor", "Insert ClassInstanceCreation(272) into VariableDeclarationFragment(273) at 1", "Insert SimpleName: ClusterDataCache(275) into SimpleType: ClusterDataCache(276) at 0", "Insert SimpleName: cache(277) into VariableDeclarationFragment(281) at 0", "Insert ClassInstanceCreation(280) into VariableDeclarationFragment(281) at 1", "Insert SimpleName: cache(283) into MethodInvocation(286) at 0", "Insert SimpleName: refresh(284) into MethodInvocation(286) at 1", "Insert SimpleName: accessor(285) into MethodInvocation(286) at 2", "Update SimpleType: List(133) to Map", "Move SimpleType: String(294) into ParameterizedType: Map<String,IdealState>(294) at 1", "Insert SimpleType: IdealState(293) into ParameterizedType: Map<String,IdealState>(294) at 2", "Update SimpleName: instanceNames(137) to idealStates", "Insert InfixExpression: ==(303) into InfixExpression: ||(307) at 0", "Insert MethodInvocation(306) into InfixExpression: ||(307) at 1", "Insert ExpressionStatement(312) into Block(315) at 0", "Insert ReturnStatement(314) into Block(315) at 1", "Update SimpleType: TreeMap(158) to Map", "Move SimpleType: TreeMap(158) into ParameterizedType: Map<String,ExternalView>(323) at 0", "Move SimpleType: String(237) into ParameterizedType: Map<String,ExternalView>(323) at 1", "Update SimpleType: ZNRecord(166) to ExternalView", "Move SimpleType: ZNRecord(166) into ParameterizedType: Map<String,ExternalView>(323) at 2", "Insert SimpleName: extViews(324) into VariableDeclarationFragment(332) at 0", "Insert MethodInvocation(331) into VariableDeclarationFragment(332) at 1", "Insert InfixExpression: ==(336) into InfixExpression: ||(340) at 0", "Insert MethodInvocation(339) into InfixExpression: ||(340) at 1", "Insert ExpressionStatement(345) into Block(348) at 0", "Insert ReturnStatement(347) into Block(348) at 1", "Insert SimpleName: BestPossibleStateOutput(350) into SimpleType: BestPossibleStateOutput(351) at 0", "Update SimpleName: liveInstancePath(179) to bestPossOutput", "Insert SimpleName: errStates(359) into InfixExpression: !=(361) at 0", "Insert NullLiteral(360) into InfixExpression: !=(361) at 1", "Insert EnhancedForStatement(426) into Block(427) at 0", "Move SimpleType: String(323) into SingleVariableDeclaration(432) at 0", "Insert SimpleName: resourceName(431) into SingleVariableDeclaration(432) at 1", "Insert SimpleName: idealStates(433) into MethodInvocation(435) at 0", "Insert SimpleName: keySet(434) into MethodInvocation(435) at 1", "Insert VariableDeclarationStatement(444) into Block(648) at 0", "Insert IfStatement(459) into Block(648) at 1", "Move VariableDeclarationStatement(245) into Block(648) at 2", "Insert VariableDeclarationStatement(488) into Block(648) at 3", "Insert WhileStatement(534) into Block(648) at 4", "Insert VariableDeclarationStatement(545) into Block(648) at 5", "Move VariableDeclarationStatement(290) into Block(648) at 6", "Insert IfStatement(573) into Block(648) at 7", "Insert EnhancedForStatement(647) into Block(648) at 8", "Insert SimpleName: Exception(651) into SimpleType: Exception(652) at 0", "Insert MethodInvocation(659) into ExpressionStatement(660) at 0", "Insert BooleanLiteral: false(661) into ReturnStatement(662) at 0", "Insert SimpleName: zkClient(665) into InfixExpression: !=(667) at 0", "Insert NullLiteral(666) into InfixExpression: !=(667) at 1", "Insert ExpressionStatement(671) into Block(672) at 0", "Insert SimpleName: getClass(689) into MethodInvocation(690) at 0", "Insert MethodInvocation(701) into InfixExpression: +(703) at 0", "Insert NumberLiteral: 1(702) into InfixExpression: +(703) at 1", "Insert SimpleName: verifierName(704) into MethodInvocation(706) at 0", "Insert SimpleName: length(705) into MethodInvocation(706) at 1", "Insert MethodInvocation(899) into PrefixExpression: !(900) at 0", "Insert ExpressionStatement(904) into Block(905) at 0", "Insert SimpleName: map1(908) into InfixExpression: !=(910) at 0", "Insert NullLiteral(909) into InfixExpression: !=(910) at 1", "Insert SimpleName: map2(911) into InfixExpression: ==(913) at 0", "Insert NullLiteral(912) into InfixExpression: ==(913) at 1", "Insert PrefixExpression: !(918) into IfStatement(924) at 0", "Insert Block(923) into IfStatement(924) at 1", "Insert InfixExpression: !=(932) into IfStatement(938) at 0", "Insert Block(937) into IfStatement(938) at 1", "Insert MethodInvocation(945) into EnhancedForStatement(983) at 1", "Insert SimpleName: i(1049) into VariableDeclarationFragment(1051) at 0", "Insert NumberLiteral: 0(1050) into VariableDeclarationFragment(1051) at 1", "Insert MethodInvocation(1061) into ExpressionStatement(1062) at 0", "Insert Assignment: =(1067) into ExpressionStatement(1068) at 0", "Insert InfixExpression: ==(1071) into IfStatement(1074) at 0", "Insert Block(1073) into IfStatement(1074) at 1", "Insert SimpleName: e(1084) into MethodInvocation(1086) at 0", "Insert SimpleName: printStackTrace(1085) into MethodInvocation(1086) at 1", "Insert SimpleName: System(1092) into MethodInvocation(1094) at 0", "Insert SimpleName: currentTimeMillis(1093) into MethodInvocation(1094) at 1", "Update SimpleName: result1(422) to result", "Move SimpleName: result1(422) into InfixExpression: +(1108) at 0", "Insert StringLiteral: \": \"(1100) into InfixExpression: +(1108) at 1", "Update SimpleName: result2(423) to verifier", "Move SimpleName: result2(423) into InfixExpression: +(1108) at 2", "Insert StringLiteral: \": wait \"(1102) into InfixExpression: +(1108) at 3", "Insert ParenthesizedExpression(1106) into InfixExpression: +(1108) at 4", "Insert StringLiteral: \"ms to verify\"(1107) into InfixExpression: +(1108) at 5", "Insert SimpleName: IllegalArgumentException(213) into SimpleType: IllegalArgumentException(214) at 0", "Move SimpleType: ZkClient(108) into ClassInstanceCreation(255) at 0", "Update SimpleName: zkServer(112) to zkAddr", "Move SimpleName: zkServer(112) into ClassInstanceCreation(255) at 1", "Insert SimpleType: ZKDataAccessor(269) into ClassInstanceCreation(272) at 0", "Insert SimpleName: clusterName(270) into ClassInstanceCreation(272) at 1", "Insert SimpleName: zkClient(271) into ClassInstanceCreation(272) at 2", "Insert SimpleType: ClusterDataCache(279) into ClassInstanceCreation(280) at 0", "Update SimpleName: List(132) to Map", "Insert SimpleName: IdealState(292) into SimpleType: IdealState(293) at 0", "Update SimpleName: zkClient(138) to cache", "Update SimpleName: getChildren(139) to getIdealStates", "Insert SimpleName: idealStates(301) into InfixExpression: ==(303) at 0", "Insert NullLiteral(302) into InfixExpression: ==(303) at 1", "Insert SimpleName: idealStates(304) into MethodInvocation(306) at 0", "Insert SimpleName: isEmpty(305) into MethodInvocation(306) at 1", "Insert MethodInvocation(311) into ExpressionStatement(312) at 0", "Insert BooleanLiteral: true(313) into ReturnStatement(314) at 0", "Update SimpleName: TreeMap(157) to Map", "Update SimpleName: ZNRecord(165) to ExternalView", "Insert SimpleName: accessor(325) into MethodInvocation(331) at 0", "Insert SimpleName: getChildValuesMap(326) into MethodInvocation(331) at 1", "Insert TypeLiteral(329) into MethodInvocation(331) at 2", "Insert QualifiedName: PropertyType.EXTERNALVIEW(330) into MethodInvocation(331) at 3", "Insert SimpleName: extViews(334) into InfixExpression: ==(336) at 0", "Insert NullLiteral(335) into InfixExpression: ==(336) at 1", "Insert SimpleName: extViews(337) into MethodInvocation(339) at 0", "Insert SimpleName: isEmpty(338) into MethodInvocation(339) at 1", "Insert MethodInvocation(344) into ExpressionStatement(345) at 0", "Insert BooleanLiteral: false(346) into ReturnStatement(347) at 0", "Update SimpleName: HelixUtil(180) to ClusterStateVerifier", "Update SimpleName: clusterName(182) to calcBestPossState", "Update SimpleName: instanceName(183) to cache", "Insert SingleVariableDeclaration(365) into EnhancedForStatement(426) at 0", "Insert MethodInvocation(368) into EnhancedForStatement(426) at 1", "Insert Block(425) into EnhancedForStatement(426) at 2", "Insert SimpleType: ExternalView(437) into VariableDeclarationStatement(444) at 0", "Insert VariableDeclarationFragment(443) into VariableDeclarationStatement(444) at 1", "Insert InfixExpression: ==(447) into IfStatement(459) at 0", "Insert Block(458) into IfStatement(459) at 1", "Insert ParameterizedType: Map<Partition,Map<String,String>>(471) into VariableDeclarationStatement(478) at 0", "Insert SimpleType: Iterator(480) into VariableDeclarationStatement(488) at 0", "Insert VariableDeclarationFragment(487) into VariableDeclarationStatement(488) at 1", "Insert MethodInvocation(491) into WhileStatement(534) at 0", "Insert Block(533) into WhileStatement(534) at 1", "Insert PrimitiveType: int(535) into VariableDeclarationStatement(545) at 0", "Insert VariableDeclarationFragment(544) into VariableDeclarationStatement(545) at 1", "Insert PrimitiveType: int(546) into VariableDeclarationStatement(555) at 0", "Insert InfixExpression: !=(558) into IfStatement(573) at 0", "Insert Block(572) into IfStatement(573) at 1", "Move SingleVariableDeclaration(320) into EnhancedForStatement(647) at 0", "Insert MethodInvocation(584) into EnhancedForStatement(647) at 1", "Insert Block(646) into EnhancedForStatement(647) at 2", "Insert SimpleName: LOG(655) into MethodInvocation(659) at 0", "Insert SimpleName: error(656) into MethodInvocation(659) at 1", "Insert StringLiteral: \"exception in verification\"(657) into MethodInvocation(659) at 2", "Insert SimpleName: e(658) into MethodInvocation(659) at 3", "Insert MethodInvocation(670) into ExpressionStatement(671) at 0", "Insert SimpleName: verifierName(698) into MethodInvocation(701) at 0", "Insert SimpleName: lastIndexOf(699) into MethodInvocation(701) at 1", "Insert CharacterLiteral: '.'(700) into MethodInvocation(701) at 2", "Insert SimpleName: map2(897) into MethodInvocation(899) at 0", "Insert SimpleName: isEmpty(898) into MethodInvocation(899) at 1", "Insert Assignment: =(903) into ExpressionStatement(904) at 0", "Insert MethodInvocation(917) into PrefixExpression: !(918) at 0", "Insert ExpressionStatement(922) into Block(923) at 0", "Insert MethodInvocation(928) into InfixExpression: !=(932) at 0", "Insert MethodInvocation(931) into InfixExpression: !=(932) at 1", "Insert ExpressionStatement(936) into Block(937) at 0", "Insert SimpleType: K(940) into SingleVariableDeclaration(942) at 0", "Insert SimpleName: key(941) into SingleVariableDeclaration(942) at 1", "Insert SimpleName: map1(943) into MethodInvocation(945) at 0", "Insert SimpleName: keySet(944) into MethodInvocation(945) at 1", "Insert IfStatement(981) into Block(982) at 0", "Update SimpleName: verifyCurrentStateAndExternalView(416) to Thread", "Move SimpleName: verifyCurrentStateAndExternalView(416) into MethodInvocation(1061) at 0", "Update SimpleName: currentStates(417) to sleep", "Move SimpleName: currentStates(417) into MethodInvocation(1061) at 1", "Update SimpleName: externalViews(418) to sleepInterval", "Move SimpleName: externalViews(418) into MethodInvocation(1061) at 2", "Insert SimpleName: result(1063) into Assignment: =(1067) at 0", "Insert MethodInvocation(1066) into Assignment: =(1067) at 1", "Insert SimpleName: result(1069) into InfixExpression: ==(1071) at 0", "Insert BooleanLiteral: true(1070) into InfixExpression: ==(1071) at 1", "Insert BreakStatement(1072) into Block(1073) at 0", "Insert InfixExpression: -(1105) into ParenthesizedExpression(1106) at 0", "Update SimpleName: _logger(643) to LOG", "Update SimpleName: _logger(673) to LOG", "Insert SimpleName: ZKDataAccessor(268) into SimpleType: ZKDataAccessor(269) at 0", "Insert SimpleName: ClusterDataCache(278) into SimpleType: ClusterDataCache(279) at 0", "Insert SimpleName: LOG(308) into MethodInvocation(311) at 0", "Insert SimpleName: debug(309) into MethodInvocation(311) at 1", "Insert StringLiteral: \"No resource idealState\"(310) into MethodInvocation(311) at 2", "Insert SimpleType: ExternalView(328) into TypeLiteral(329) at 0", "Insert SimpleName: LOG(341) into MethodInvocation(344) at 0", "Insert SimpleName: info(342) into MethodInvocation(344) at 1", "Insert StringLiteral: \"No externalViews\"(343) into MethodInvocation(344) at 2", "Move SimpleType: String(345) into SingleVariableDeclaration(365) at 0", "Insert SimpleName: resourceName(364) into SingleVariableDeclaration(365) at 1", "Insert SimpleName: errStates(366) into MethodInvocation(368) at 0", "Insert SimpleName: keySet(367) into MethodInvocation(368) at 1", "Move VariableDeclarationStatement(195) into Block(425) at 0", "Insert EnhancedForStatement(424) into Block(425) at 1", "Insert SimpleName: ExternalView(436) into SimpleType: ExternalView(437) at 0", "Insert SimpleName: extView(438) into VariableDeclarationFragment(443) at 0", "Insert MethodInvocation(442) into VariableDeclarationFragment(443) at 1", "Insert SimpleName: extView(445) into InfixExpression: ==(447) at 0", "Insert NullLiteral(446) into InfixExpression: ==(447) at 1", "Insert ExpressionStatement(455) into Block(458) at 0", "Insert ReturnStatement(457) into Block(458) at 1", "Insert SimpleType: Map(461) into ParameterizedType: Map<Partition,Map<String,String>>(471) at 0", "Insert SimpleType: Partition(463) into ParameterizedType: Map<Partition,Map<String,String>>(471) at 1", "Insert ParameterizedType: Map<String,String>(470) into ParameterizedType: Map<Partition,Map<String,String>>(471) at 2", "Update SimpleName: partitionStatePaths(239) to bpStateMap", "Update SimpleName: String(246) to Iterator", "Move SimpleName: String(246) into SimpleType: Iterator(480) at 0", "Insert SimpleName: iter(481) into VariableDeclarationFragment(487) at 0", "Insert MethodInvocation(486) into VariableDeclarationFragment(487) at 1", "Insert SimpleName: iter(489) into MethodInvocation(491) at 0", "Insert SimpleName: hasNext(490) into MethodInvocation(491) at 1", "Move VariableDeclarationStatement(259) into Block(533) at 0", "Move VariableDeclarationStatement(268) into Block(533) at 1", "Insert IfStatement(532) into Block(533) at 2", "Insert SimpleName: extViewSize(536) into VariableDeclarationFragment(544) at 0", "Insert MethodInvocation(543) into VariableDeclarationFragment(544) at 1", "Update SimpleName: idealStatePath(284) to bestPossStateSize", "Insert MethodInvocation(553) into VariableDeclarationFragment(554) at 1", "Insert SimpleName: extViewSize(556) into InfixExpression: !=(558) at 0", "Insert SimpleName: bestPossStateSize(557) into InfixExpression: !=(558) at 1", "Insert ExpressionStatement(569) into Block(572) at 0", "Insert ReturnStatement(571) into Block(572) at 1", "Update SimpleName: resource(319) to partition", "Insert MethodInvocation(582) into MethodInvocation(584) at 0", "Insert SimpleName: keySet(583) into MethodInvocation(584) at 1", "Move VariableDeclarationStatement(302) into Block(646) at 0", "Move VariableDeclarationStatement(316) into Block(646) at 1", "Insert VariableDeclarationStatement(631) into Block(646) at 2", "Insert IfStatement(645) into Block(646) at 3", "Insert SimpleName: zkClient(668) into MethodInvocation(670) at 0", "Insert SimpleName: close(669) into MethodInvocation(670) at 1", "Insert SimpleName: isEqual(901) into Assignment: =(903) at 0", "Insert BooleanLiteral: false(902) into Assignment: =(903) at 1", "Insert SimpleName: map1(915) into MethodInvocation(917) at 0", "Insert SimpleName: isEmpty(916) into MethodInvocation(917) at 1", "Insert Assignment: =(921) into ExpressionStatement(922) at 0", "Insert SimpleName: map1(926) into MethodInvocation(928) at 0", "Insert SimpleName: size(927) into MethodInvocation(928) at 1", "Insert SimpleName: map2(929) into MethodInvocation(931) at 0", "Insert SimpleName: size(930) into MethodInvocation(931) at 1", "Insert Assignment: =(935) into ExpressionStatement(936) at 0", "Insert SimpleName: K(939) into SimpleType: K(940) at 0", "Insert PrefixExpression: !(956) into IfStatement(981) at 0", "Insert Block(980) into IfStatement(981) at 1", "Insert SimpleName: verifier(1064) into MethodInvocation(1066) at 0", "Insert SimpleName: verify(1065) into MethodInvocation(1066) at 1", "Insert SimpleName: endTime(1103) into InfixExpression: -(1105) at 0", "Insert SimpleName: startTime(1104) into InfixExpression: -(1105) at 1", "Update SimpleName: String(172) to ExternalView", "Move SimpleName: String(172) into SimpleType: ExternalView(328) at 0", "Insert ParameterizedType: Map<String,String>(375) into VariableDeclarationStatement(382) at 0", "Insert SingleVariableDeclaration(386) into EnhancedForStatement(424) at 0", "Insert MethodInvocation(389) into EnhancedForStatement(424) at 1", "Insert Block(423) into EnhancedForStatement(424) at 2", "Insert SimpleName: extViews(439) into MethodInvocation(442) at 0", "Update SimpleName: getSimpleField(226) to get", "Move SimpleName: getSimpleField(226) into MethodInvocation(442) at 1", "Insert SimpleName: resourceName(441) into MethodInvocation(442) at 2", "Insert MethodInvocation(454) into ExpressionStatement(455) at 0", "Insert BooleanLiteral: false(456) into ReturnStatement(457) at 0", "Insert SimpleName: Map(460) into SimpleType: Map(461) at 0", "Insert SimpleName: Partition(462) into SimpleType: Partition(463) at 0", "Update SimpleType: List(235) to Map", "Move SimpleType: List(235) into ParameterizedType: Map<String,String>(470) at 0", "Move SimpleType: String(135) into ParameterizedType: Map<String,String>(470) at 1", "Insert SimpleType: String(469) into ParameterizedType: Map<String,String>(470) at 2", "Update SimpleName: zkClient(240) to bestPossOutput", "Update SimpleName: getChildren(241) to getResourceMap", "Update SimpleName: currentStatePath(242) to resourceName", "Insert MethodInvocation(484) into MethodInvocation(486) at 0", "Insert SimpleName: iterator(485) into MethodInvocation(486) at 1", "Insert SimpleType: Map.Entry(493) into VariableDeclarationStatement(502) at 0", "Insert ParameterizedType: Map<String,String>(509) into VariableDeclarationStatement(523) at 0", "Insert MethodInvocation(526) into IfStatement(532) at 0", "Insert Block(531) into IfStatement(532) at 1", "Move MethodInvocation(272) into MethodInvocation(543) at 0", "Update SimpleName: stateUnitKey(274) to size", "Move SimpleName: stateUnitKey(274) into MethodInvocation(543) at 1", "Insert MethodInvocation(551) into MethodInvocation(553) at 0", "Insert SimpleName: size(552) into MethodInvocation(553) at 1", "Insert MethodInvocation(568) into ExpressionStatement(569) at 0", "Insert BooleanLiteral: false(570) into ReturnStatement(571) at 0", "Insert MethodInvocation(580) into MethodInvocation(582) at 0", "Insert SimpleName: getMapFields(581) into MethodInvocation(582) at 1", "Update ParameterizedType: List<String>(295) to Map<String,String>", "Update ParameterizedType: List<ZNRecord>(307) to Map<String,String>", "Insert PrimitiveType: boolean(619) into VariableDeclarationStatement(631) at 0", "Insert VariableDeclarationFragment(630) into VariableDeclarationStatement(631) at 1", "Insert InfixExpression: ==(634) into IfStatement(645) at 0", "Insert Block(644) into IfStatement(645) at 1", "Insert SimpleName: isEqual(919) into Assignment: =(921) at 0", "Insert BooleanLiteral: false(920) into Assignment: =(921) at 1", "Insert SimpleName: isEqual(933) into Assignment: =(935) at 0", "Insert BooleanLiteral: false(934) into Assignment: =(935) at 1", "Insert MethodInvocation(955) into PrefixExpression: !(956) at 0", "Move ExpressionStatement(403) into Block(980) at 0", "Insert ExpressionStatement(978) into Block(980) at 1", "Insert BreakStatement(979) into Block(980) at 2", "Insert SimpleType: Map(370) into ParameterizedType: Map<String,String>(375) at 0", "Move SimpleType: String(356) into ParameterizedType: Map<String,String>(375) at 1", "Insert SimpleType: String(374) into ParameterizedType: Map<String,String>(375) at 2", "Update SimpleName: liveInstanceRecord(189) to partErrStates", "Move SimpleType: String(385) into SingleVariableDeclaration(386) at 0", "Insert SimpleName: partitionName(385) into SingleVariableDeclaration(386) at 1", "Update SimpleName: currentStates(196) to partErrStates", "Move SimpleName: currentStates(196) into MethodInvocation(389) at 0", "Update SimpleName: containsKey(197) to keySet", "Move SimpleName: containsKey(197) into MethodInvocation(389) at 1", "Insert VariableDeclarationStatement(398) into Block(423) at 0", "Insert VariableDeclarationStatement(416) into Block(423) at 1", "Insert ExpressionStatement(422) into Block(423) at 2", "Update SimpleName: toString(228) to LOG", "Move SimpleName: toString(228) into MethodInvocation(454) at 0", "Insert SimpleName: info(449) into MethodInvocation(454) at 1", "Insert InfixExpression: +(453) into MethodInvocation(454) at 2", "Update SimpleName: List(234) to Map", "Insert SimpleName: String(468) into SimpleType: String(469) at 0", "Insert SimpleName: bpStateMap(482) into MethodInvocation(484) at 0", "Insert SimpleName: entrySet(483) into MethodInvocation(484) at 1", "Insert QualifiedName: Map.Entry(492) into SimpleType: Map.Entry(493) at 0", "Update SimpleName: partitionStatePath(253) to pairs", "Insert CastExpression(500) into VariableDeclarationFragment(501) at 1", "Insert SimpleType: Map(504) into ParameterizedType: Map<String,String>(509) at 0", "Move SimpleType: String(217) into ParameterizedType: Map<String,String>(509) at 1", "Insert SimpleType: String(508) into ParameterizedType: Map<String,String>(509) at 2", "Update SimpleName: nodeCurrentState(262) to instanceStateMap", "Insert CastExpression(521) into VariableDeclarationFragment(522) at 1", "Insert SimpleName: instanceStateMap(524) into MethodInvocation(526) at 0", "Insert SimpleName: isEmpty(525) into MethodInvocation(526) at 1", "Insert ExpressionStatement(530) into Block(531) at 0", "Insert MethodInvocation(539) into MethodInvocation(541) at 0", "Update SimpleName: instanceName(271) to getMapFields", "Update SimpleName: HelixUtil(285) to bestPossOutput", "Move SimpleName: HelixUtil(285) into MethodInvocation(551) at 0", "Update SimpleName: getIdealStatePath(286) to getResourceMap", "Move SimpleName: getIdealStatePath(286) into MethodInvocation(551) at 1", "Update SimpleName: clusterName(287) to resourceName", "Move SimpleName: clusterName(287) into MethodInvocation(551) at 2", "Insert SimpleName: LOG(559) into MethodInvocation(568) at 0", "Insert SimpleName: info(560) into MethodInvocation(568) at 1", "Insert InfixExpression: +(567) into MethodInvocation(568) at 2", "Insert SimpleName: extView(578) into MethodInvocation(580) at 0", "Insert SimpleName: getRecord(579) into MethodInvocation(580) at 1", "Update SimpleType: List(292) to Map", "Insert SimpleType: String(588) into ParameterizedType: Map<String,String>(591) at 1", "Insert SimpleType: String(590) into ParameterizedType: Map<String,String>(591) at 2", "Update SimpleName: resources(296) to evInstanceStateMap", "Update SimpleType: List(304) to Map", "Update SimpleType: ZNRecord(306) to String", "Insert SimpleType: String(606) into ParameterizedType: Map<String,String>(607) at 2", "Update SimpleName: idealStates(308) to bpInstanceStateMap", "Insert MethodInvocation(616) into VariableDeclarationFragment(617) at 1", "Insert SimpleName: result(620) into VariableDeclarationFragment(630) at 0", "Insert MethodInvocation(629) into VariableDeclarationFragment(630) at 1", "Insert SimpleName: result(632) into InfixExpression: ==(634) at 0", "Insert BooleanLiteral: false(633) into InfixExpression: ==(634) at 1", "Insert ExpressionStatement(641) into Block(644) at 0", "Insert ReturnStatement(643) into Block(644) at 1", "Insert MethodInvocation(949) into MethodInvocation(955) at 0", "Insert SimpleName: equals(950) into MethodInvocation(955) at 1", "Insert MethodInvocation(954) into MethodInvocation(955) at 2", "Insert Assignment: =(977) into ExpressionStatement(978) at 0", "Update SimpleName: ZNRecord(187) to Map", "Move SimpleName: ZNRecord(187) into SimpleType: Map(370) at 0", "Insert SimpleName: String(373) into SimpleType: String(374) at 0", "Update SimpleName: zkClient(190) to errStates", "Update SimpleName: readData(191) to get", "Update SimpleName: liveInstancePath(192) to resourceName", "Move SimpleType: String(380) into VariableDeclarationStatement(398) at 0", "Insert VariableDeclarationFragment(397) into VariableDeclarationStatement(398) at 1", "Insert ParameterizedType: Map<String,String>(405) into VariableDeclarationStatement(416) at 0", "Insert VariableDeclarationFragment(415) into VariableDeclarationStatement(416) at 1", "Insert MethodInvocation(421) into ExpressionStatement(422) at 0", "Insert StringLiteral: \"externalView for \"(450) into InfixExpression: +(453) at 0", "Insert SimpleName: resourceName(451) into InfixExpression: +(453) at 1", "Insert StringLiteral: \" is not available\"(452) into InfixExpression: +(453) at 2", "Insert SimpleType: Map.Entry(496) into CastExpression(500) at 0", "Insert MethodInvocation(499) into CastExpression(500) at 1", "Update SimpleName: ZNRecord(260) to Map", "Move SimpleName: ZNRecord(260) into SimpleType: Map(504) at 0", "Insert SimpleName: String(507) into SimpleType: String(508) at 0", "Insert ParameterizedType: Map<String,String>(517) into CastExpression(521) at 0", "Insert MethodInvocation(520) into CastExpression(521) at 1", "Insert MethodInvocation(529) into ExpressionStatement(530) at 0", "Update SimpleName: currentStates(269) to extView", "Move SimpleName: currentStates(269) into MethodInvocation(539) at 0", "Update SimpleName: get(270) to getRecord", "Move SimpleName: get(270) into MethodInvocation(539) at 1", "Insert StringLiteral: \"exterView size (\"(561) into InfixExpression: +(567) at 0", "Insert SimpleName: extViewSize(562) into InfixExpression: +(567) at 1", "Insert StringLiteral: \") is different from bestPossState size (\"(563) into InfixExpression: +(567) at 2", "Insert SimpleName: bestPossStateSize(564) into InfixExpression: +(567) at 3", "Insert StringLiteral: \") for resource: \"(565) into InfixExpression: +(567) at 4", "Insert SimpleName: resourceName(566) into InfixExpression: +(567) at 5", "Update SimpleName: List(291) to Map", "Insert SimpleName: String(587) into SimpleType: String(588) at 0", "Insert SimpleName: String(589) into SimpleType: String(590) at 0", "Insert MethodInvocation(595) into MethodInvocation(598) at 0", "Update SimpleName: idealStatePath(299) to getMapField", "Insert SimpleName: partition(597) into MethodInvocation(598) at 2", "Update SimpleName: List(303) to Map", "Update SimpleName: ZNRecord(305) to String", "Insert SimpleName: String(605) into SimpleType: String(606) at 0", "Insert SimpleName: bestPossOutput(609) into MethodInvocation(616) at 0", "Insert SimpleName: getInstanceStateMap(610) into MethodInvocation(616) at 1", "Insert SimpleName: resourceName(611) into MethodInvocation(616) at 2", "Insert ClassInstanceCreation(615) into MethodInvocation(616) at 3", "Insert SimpleName: TestHelper(621) into MethodInvocation(629) at 0", "Move SimpleType: String(252) into MethodInvocation(629) at 1", "Insert SimpleType: String(625) into MethodInvocation(629) at 2", "Insert SimpleName: compareMap(626) into MethodInvocation(629) at 3", "Insert SimpleName: evInstanceStateMap(627) into MethodInvocation(629) at 4", "Insert SimpleName: bpInstanceStateMap(628) into MethodInvocation(629) at 5", "Insert MethodInvocation(640) into ExpressionStatement(641) at 0", "Insert BooleanLiteral: false(642) into ReturnStatement(643) at 0", "Insert SimpleName: map1(946) into MethodInvocation(949) at 0", "Insert SimpleName: get(947) into MethodInvocation(949) at 1", "Insert SimpleName: key(948) into MethodInvocation(949) at 2", "Insert SimpleName: map2(951) into MethodInvocation(954) at 0", "Insert SimpleName: get(952) into MethodInvocation(954) at 1", "Insert SimpleName: key(953) into MethodInvocation(954) at 2", "Update SimpleName: externalViews(393) to LOG", "Update SimpleName: add(394) to debug", "Insert InfixExpression: +(972) into MethodInvocation(973) at 2", "Insert SimpleName: isEqual(975) into Assignment: =(977) at 0", "Insert BooleanLiteral: false(976) into Assignment: =(977) at 1", "Update SimpleName: _logger(831) to LOG", "Update SimpleName: _logger(850) to LOG", "Update SimpleName: _logger(876) to LOG", "Update SimpleName: _logger(923) to LOG", "Insert SimpleName: instanceName(392) into VariableDeclarationFragment(397) at 0", "Insert MethodInvocation(396) into VariableDeclarationFragment(397) at 1", "Update SimpleType: TreeMap(205) to Map", "Move SimpleType: TreeMap(205) into ParameterizedType: Map<String,String>(405) at 0", "Move SimpleType: String(160) into ParameterizedType: Map<String,String>(405) at 1", "Update SimpleType: ZNRecord(209) to String", "Move SimpleType: ZNRecord(209) into ParameterizedType: Map<String,String>(405) at 2", "Update SimpleName: currentStatePath(218) to partStateMap", "Move SimpleName: currentStatePath(218) into VariableDeclarationFragment(415) at 0", "Insert MethodInvocation(414) into VariableDeclarationFragment(415) at 1", "Insert SimpleName: partStateMap(417) into MethodInvocation(421) at 0", "Insert SimpleName: put(418) into MethodInvocation(421) at 1", "Insert SimpleName: instanceName(419) into MethodInvocation(421) at 2", "Insert StringLiteral: \"ERROR\"(420) into MethodInvocation(421) at 3", "Insert QualifiedName: Map.Entry(495) into SimpleType: Map.Entry(496) at 0", "Insert SimpleName: iter(497) into MethodInvocation(499) at 0", "Insert SimpleName: next(498) into MethodInvocation(499) at 1", "Insert SimpleType: Map(512) into ParameterizedType: Map<String,String>(517) at 0", "Move SimpleType: String(100) into ParameterizedType: Map<String,String>(517) at 1", "Insert SimpleType: String(516) into ParameterizedType: Map<String,String>(517) at 2", "Update SimpleName: partitionStatePath(265) to pairs", "Move SimpleName: partitionStatePath(265) into MethodInvocation(520) at 0", "Insert SimpleName: getValue(519) into MethodInvocation(520) at 1", "Insert SimpleName: iter(527) into MethodInvocation(529) at 0", "Insert SimpleName: remove(528) into MethodInvocation(529) at 1", "Update SimpleName: zkClient(297) to extView", "Move SimpleName: zkClient(297) into MethodInvocation(595) at 0", "Update SimpleName: getChildren(298) to getRecord", "Move SimpleName: getChildren(298) into MethodInvocation(595) at 1", "Insert SimpleType: Partition(613) into ClassInstanceCreation(615) at 0", "Insert SimpleName: partition(614) into ClassInstanceCreation(615) at 1", "Insert SimpleName: String(624) into SimpleType: String(625) at 0", "Insert SimpleName: LOG(635) into MethodInvocation(640) at 0", "Insert SimpleName: info(636) into MethodInvocation(640) at 1", "Insert InfixExpression: +(639) into MethodInvocation(640) at 2", "Insert StringLiteral: \"different value for key: \"(959) into InfixExpression: +(972) at 0", "Insert SimpleName: key(960) into InfixExpression: +(972) at 1", "Insert StringLiteral: \"(map1: \"(961) into InfixExpression: +(972) at 2", "Insert MethodInvocation(965) into InfixExpression: +(972) at 3", "Insert StringLiteral: \", map2: \"(966) into InfixExpression: +(972) at 4", "Insert MethodInvocation(970) into InfixExpression: +(972) at 5", "Insert StringLiteral: \")\"(971) into InfixExpression: +(972) at 6", "Update SimpleName: currentStates(201) to partErrStates", "Move SimpleName: currentStates(201) into MethodInvocation(396) at 0", "Update SimpleName: put(202) to get", "Move SimpleName: put(202) into MethodInvocation(396) at 1", "Update SimpleName: instanceName(203) to partitionName", "Move SimpleName: instanceName(203) into MethodInvocation(396) at 2", "Update SimpleName: TreeMap(204) to Map", "Update SimpleName: ZNRecord(208) to String", "Update SimpleName: HelixUtil(219) to bestPossOutput", "Move SimpleName: HelixUtil(219) into MethodInvocation(414) at 0", "Update SimpleName: getCurrentStateBasePath(220) to getInstanceStateMap", "Move SimpleName: getCurrentStateBasePath(220) into MethodInvocation(414) at 1", "Update SimpleName: clusterName(221) to resourceName", "Move SimpleName: clusterName(221) into MethodInvocation(414) at 2", "Insert ClassInstanceCreation(413) into MethodInvocation(414) at 3", "Insert SimpleName: Map(511) into SimpleType: Map(512) at 0", "Insert SimpleName: String(515) into SimpleType: String(516) at 0", "Update SimpleName: ArrayList(309) to Partition", "Move SimpleName: ArrayList(309) into SimpleType: Partition(613) at 0", "Insert StringLiteral: \"externalView is different from bestPossibleState for partition:\"(637) into InfixExpression: +(639) at 0", "Insert SimpleName: partition(638) into InfixExpression: +(639) at 1", "Update SimpleName: zkClient(397) to map1", "Move SimpleName: zkClient(397) into MethodInvocation(965) at 0", "Update SimpleName: readData(398) to get", "Move SimpleName: readData(398) into MethodInvocation(965) at 1", "Update SimpleName: viewPath(399) to key", "Move SimpleName: viewPath(399) into MethodInvocation(965) at 2", "Insert SimpleName: map2(967) into MethodInvocation(970) at 0", "Insert SimpleName: get(968) into MethodInvocation(970) at 1", "Insert SimpleName: key(969) into MethodInvocation(970) at 2", "Insert SimpleType: Partition(411) into ClassInstanceCreation(413) at 0", "Insert SimpleName: partitionName(412) into ClassInstanceCreation(413) at 1", "Insert SimpleName: Partition(410) into SimpleType: Partition(411) at 0", "Delete SimpleName: HelixUtil(126)", "Delete SimpleName: getMemberInstancesPath(127)", "Delete SimpleName: clusterName(128)", "Delete MethodInvocation(129)", "Delete SimpleName: instancesPath(140)", "Delete SimpleName: getLiveInstancePath(181)", "Delete SimpleType: ZNRecord(188)", "Delete ParameterizedType: List<String>(238)", "Delete SimpleName: currentStatePath(254)", "Delete StringLiteral: \"/\"(255)", "Delete SimpleName: stateUnitKey(256)", "Delete InfixExpression: +(257)", "Delete SimpleType: ZNRecord(261)", "Delete SimpleName: zkClient(263)", "Delete SimpleName: readData(264)", "Delete MethodInvocation(266)", "Delete MethodInvocation(288)", "Delete SimpleType: ArrayList(310)", "Delete SimpleName: ZNRecord(311)", "Delete SimpleType: ZNRecord(312)", "Delete ParameterizedType: ArrayList<ZNRecord>(313)", "Delete ClassInstanceCreation(314)", "Delete SimpleType: List(354)", "Delete ParameterizedType: List<String>(357)", "Delete SimpleName: view(381)", "Delete SimpleName: views(383)", "Delete SimpleName: ZNRecord(395)", "Delete SimpleType: ZNRecord(396)", "Delete MethodInvocation(400)", "Delete CastExpression(401)", "Delete SimpleName: viewPath(386)", "Delete SimpleName: externalViewPath(387)", "Delete StringLiteral: \"/\"(388)", "Delete SimpleName: view(389)", "Delete InfixExpression: +(390)", "Delete VariableDeclarationFragment(391)", "Delete VariableDeclarationStatement(392)", "Delete SimpleName: idealStates(409)", "Delete SimpleName: zkServer(101)", "Delete SingleVariableDeclaration(102)", "Delete SimpleName: zkClient(109)", "Delete ClassInstanceCreation(113)", "Delete VariableDeclarationFragment(114)", "Delete VariableDeclarationStatement(115)", "Delete SimpleName: currentStates(156)", "Delete ParameterizedType: Map<String,ZNRecord>(167)", "Delete ParameterizedType: TreeMap<String,Map<String,ZNRecord>>(168)", "Delete ClassInstanceCreation(169)", "Delete VariableDeclarationFragment(170)", "Delete VariableDeclarationStatement(171)", "Delete SimpleType: String(173)", "Delete SimpleName: instanceName(174)", "Delete SingleVariableDeclaration(175)", "Delete SimpleName: instanceNames(176)", "Delete SimpleName: instanceName(198)", "Delete MethodInvocation(199)", "Delete PrefixExpression: !(200)", "Delete ParameterizedType: TreeMap<String,ZNRecord>(210)", "Delete ClassInstanceCreation(211)", "Delete MethodInvocation(212)", "Delete ExpressionStatement(213)", "Delete Block(214)", "Delete IfStatement(215)", "Delete SimpleName: instanceName(222)", "Delete MethodInvocation(223)", "Delete StringLiteral: \"/\"(224)", "Delete SimpleName: liveInstanceRecord(225)", "Delete QualifiedName: LiveInstanceProperty.SESSION_ID(227)", "Delete MethodInvocation(229)", "Delete MethodInvocation(230)", "Delete InfixExpression: +(231)", "Delete VariableDeclarationFragment(232)", "Delete VariableDeclarationStatement(233)", "Delete SimpleType: String(247)", "Delete SimpleName: stateUnitKey(248)", "Delete SingleVariableDeclaration(249)", "Delete SimpleName: partitionStatePaths(250)", "Delete SimpleName: put(273)", "Delete SimpleName: nodeCurrentState(275)", "Delete MethodInvocation(276)", "Delete ExpressionStatement(277)", "Delete Block(278)", "Delete EnhancedForStatement(279)", "Delete Block(280)", "Delete EnhancedForStatement(281)", "Delete SimpleName: resources(321)", "Delete SimpleName: resourcePath(324)", "Delete InfixExpression: +(328)", "Delete VariableDeclarationFragment(329)", "Delete VariableDeclarationStatement(330)", "Delete SimpleName: idealStates(331)", "Delete SimpleName: add(332)", "Delete SimpleType: ZNRecord(334)", "Delete MethodInvocation(338)", "Delete CastExpression(339)", "Delete MethodInvocation(340)", "Delete ExpressionStatement(341)", "Delete Block(342)", "Delete EnhancedForStatement(343)", "Delete SimpleName: externalViewPath(346)", "Delete MethodInvocation(350)", "Delete VariableDeclarationFragment(351)", "Delete VariableDeclarationStatement(352)", "Delete ParameterizedType: List<ZNRecord>(369)", "Delete SimpleName: externalViews(370)", "Delete ParameterizedType: ArrayList<ZNRecord>(375)", "Delete ClassInstanceCreation(376)", "Delete VariableDeclarationFragment(377)", "Delete VariableDeclarationStatement(378)", "Delete PrimitiveType: boolean(406)", "Delete VariableDeclarationStatement(413)", "Delete MethodInvocation(419)", "Delete VariableDeclarationFragment(420)", "Delete VariableDeclarationStatement(421)", "Delete InfixExpression: &&(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete SimpleName: verifyClusterStates(1307)", "Delete SimpleName: zkServer(1308)", "Delete SimpleName: clusterName(1309)"]}}], "commit_stats": [{"total_files": 24, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}