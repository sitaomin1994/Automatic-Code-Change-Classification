{"application": "google-closure-compiler", "csha": "7ab7014048d0dcba71fd90d1a5bca3c7c8c1ba83", "files": [{"GlobalTypeInfoCollector_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: com.google.javascript.jscomp.CodingConvention.DelegateRelationship to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS QualifiedName: com.google.javascript.rhino.NominalTypeBuilder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 40"]}, {"root": "INS ImportDeclaration to CompilationUnit at 46", "operations": ["INS ImportDeclaration to CompilationUnit at 46", "INS QualifiedName: java.util.HashMap to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<NominalTypeBuilder> at 0", "INS SimpleName: delegateProxies to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: NominalTypeBuilder to SimpleType: NominalTypeBuilder at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS Modifier: final to FieldDeclaration at 1", "INS ParameterizedType: List<NominalTypeBuilder> to FieldDeclaration at 2", "INS SimpleType: NominalTypeBuilder to ParameterizedType: List<NominalTypeBuilder> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: delegateCallingConventions to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS ParameterizedType: HashMap<> to ClassInstanceCreation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleType: HashMap to ParameterizedType: HashMap<> at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: rel to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: delegator to ClassInstanceCreation at 2", "INS SimpleName: getCommonTypes to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: RawNominalType to VariableDeclarationStatement at 0", "INS SimpleName: NominalTypeBuilderNti to SimpleType: NominalTypeBuilderNti at 0", "INS SimpleName: buildFunction to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: RawNominalType to VariableDeclarationStatement at 0", "INS SimpleName: findInScope to MethodInvocation at 0", "INS SimpleName: delegateSuper to ClassInstanceCreation at 2", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS NullLiteral to ClassInstanceCreation at 1", "INS SimpleName: FunctionTypeBuilder to SimpleType: FunctionTypeBuilder at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: delegateBase to VariableDeclarationFragment at 0", "INS InfixExpression: && to InfixExpression: && at 0", "INS SimpleName: delegateProxies to MethodInvocation at 0", "INS SimpleType: NominalTypeBuilderNti to ClassInstanceCreation at 0", "INS SimpleType: FunctionTypeBuilder to ClassInstanceCreation at 0", "INS SimpleName: makeClass to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: convention to MethodInvocation at 0", "INS SimpleName: delegateBase to ClassInstanceCreation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: lateProps to ClassInstanceCreation at 1", "INS SimpleName: NULL to FieldAccess at 1", "INS SimpleName: getCommonTypes to MethodInvocation at 0", "INS SimpleType: JSType to VariableDeclarationStatement at 0", "INS SimpleName: findDelegate to MethodInvocation at 6", "INS SimpleName: delegateBase to InfixExpression: != at 0", "INS SimpleName: delegateProxy to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: delegateProxy to MethodInvocation at 0", "INS SimpleName: DelegateRelationship to SimpleType: DelegateRelationship at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getCommonTypes to MethodInvocation at 0", "INS SimpleName: delegateSuper to InfixExpression: != at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: NominalTypeBuilderNti to SimpleType: NominalTypeBuilderNti at 0", "INS SimpleName: delegateProxy to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 3", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: addNominalType to MethodInvocation at 1", "INS BooleanLiteral: false to MethodInvocation at 7", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: RawNominalType to SimpleType: RawNominalType at 0", "INS SimpleType: DelegateRelationship to SingleVariableDeclaration at 0", "INS SimpleName: delegateBase to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addReqFormal to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: addRetType to MethodInvocation at 1", "INS SimpleName: getNativeType to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: addSuperClass to MethodInvocation at 1", "INS SimpleName: findInScope to MethodInvocation at 0", "INS SimpleName: setCtorFunction to MethodInvocation at 1", "INS SimpleName: delegator to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS SimpleName: delegateBase to MethodInvocation at 0", "INS QualifiedName: rel.delegator to MethodInvocation at 1", "INS SimpleName: getDefSite to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS SimpleName: findDelegate to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: delegateProxy to MethodInvocation at 0", "INS SimpleName: getCommonTypes to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: lateProps to ClassInstanceCreation at 1", "INS SimpleType: NominalTypeBuilderNti to ClassInstanceCreation at 0", "INS SimpleName: applyDelegateRelationship to MethodInvocation at 1", "INS SimpleName: FunctionTypeBuilder to SimpleType: FunctionTypeBuilder at 0", "INS SimpleName: nominaltypesByNode to MethodInvocation at 0", "INS SimpleType: RawNominalType to VariableDeclarationStatement at 0", "INS InfixExpression: + to MethodInvocation at 4", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: delegator to InfixExpression: != at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"(Proxy)\" to InfixExpression: + at 1", "INS SimpleName: delegateBase to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: RawNominalType to SimpleType: RawNominalType at 0", "INS NullLiteral to MethodInvocation at 5", "INS SimpleName: delegateProxy to MethodInvocation at 0", "INS QualifiedName: ObjectKind.UNRESTRICTED to MethodInvocation at 6", "INS SimpleName: lateProps to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: applyDelegateRelationship to MethodDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: U2U_CONSTRUCTOR_TYPE to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getDelegateSuperclassName to MethodInvocation at 1", "INS SimpleType: NominalTypeBuilderNti to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: delegateSuper to VariableDeclarationFragment at 0", "INS SimpleName: NominalTypeBuilderNti to SimpleType: NominalTypeBuilderNti at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: delegateProxy to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 4", "INS SimpleName: getAsNominalType to MethodInvocation at 1", "INS SimpleName: delegateBase to MethodInvocation at 0", "INS SimpleType: Node to ClassInstanceCreation at 0", "INS SimpleName: buildType to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 3", "INS IfStatement to Block at 3", "INS ExpressionStatement to Block at 5", "INS SimpleName: addRetType to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: getInstanceAsJSType to MethodInvocation at 1", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: RawNominalType to SimpleType: RawNominalType at 0", "INS SimpleName: delegateProxy to ClassInstanceCreation at 2", "INS ExpressionStatement to Block at 4", "INS SimpleName: findInScope to MethodInvocation at 0", "INS SimpleName: RawNominalType to MethodInvocation at 0", "INS SimpleName: lateProps to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: NominalTypeBuilderNti to SimpleType: NominalTypeBuilderNti at 0", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: FunctionTypeBuilder to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: RawNominalType to VariableDeclarationStatement at 0", "INS SimpleName: delegateProxy to MethodInvocation at 3", "INS SimpleName: join to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: getCommonTypes to MethodInvocation at 0", "INS SimpleType: NominalTypeBuilderNti to ClassInstanceCreation at 0", "INS SimpleName: convention to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 5", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: RawNominalType to SimpleType: RawNominalType at 0", "INS QualifiedName: rel.delegateBase to MethodInvocation at 1", "INS SimpleName: JSType to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: delegateProxies to MethodInvocation at 3", "INS SimpleName: convention to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: defineDelegateProxyPrototypeProperties to MethodInvocation at 1", "INS SimpleName: globalTypeInfo to MethodInvocation at 2", "INS SimpleName: delegateCallingConventions to MethodInvocation at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: call to MethodInvocation at 2", "INS SimpleName: getDelegateRelationship to MethodInvocation at 1", "INS SimpleName: convention to MethodInvocation at 0", "INS SimpleName: DelegateRelationship to SimpleType: DelegateRelationship at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: delegateRelationship to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: DelegateRelationship to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: applyDelegateRelationship to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 5", "INS SimpleName: delegateRelationship to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: delegateRelationship to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to SwitchStatement at 11", "operations": ["INS SimpleName: n to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkForCallingConventionDefinitions to MethodInvocation at 1", "INS SimpleName: delegateCallingConventions to MethodInvocation at 3", "INS SimpleName: convention to MethodInvocation at 0", "INS ExpressionStatement to SwitchStatement at 11"]}, {"root": "INS InfixExpression: && to InfixExpression: && at 0", "operations": ["INS SimpleName: previousPropType to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS StringLiteral: \"(Proxy)\" to MethodInvocation at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS InfixExpression: && to InfixExpression: && at 0", "INS SimpleName: endsWith to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: && to InfixExpression: && at 0"]}]}}, {"GlobalTypeInfoCollector_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(12915) at 4", "Insert ImportDeclaration(31) into CompilationUnit(12915) at 15", "Insert ImportDeclaration(81) into CompilationUnit(12915) at 40", "Insert ImportDeclaration(93) into CompilationUnit(12915) at 46", "Insert QualifiedName: com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.google.javascript.jscomp.CodingConvention.DelegateRelationship(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: com.google.javascript.rhino.NominalTypeBuilder(80) into ImportDeclaration(81) at 0", "Insert QualifiedName: java.util.HashMap(92) into ImportDeclaration(93) at 0", "Insert FieldDeclaration(5570) into TypeDeclaration: class(11886) at 4", "Insert FieldDeclaration(5586) into TypeDeclaration: class(11886) at 5", "Insert MethodDeclaration(7025) into TypeDeclaration: class(11886) at 19", "Insert Modifier: private(5557) into FieldDeclaration(5570) at 0", "Insert Modifier: final(5558) into FieldDeclaration(5570) at 1", "Insert ParameterizedType: List<NominalTypeBuilder>(5563) into FieldDeclaration(5570) at 2", "Insert VariableDeclarationFragment(5569) into FieldDeclaration(5570) at 3", "Insert Modifier: private(5571) into FieldDeclaration(5586) at 0", "Insert Modifier: final(5572) into FieldDeclaration(5586) at 1", "Insert ParameterizedType: Map<String,String>(5579) into FieldDeclaration(5586) at 2", "Insert VariableDeclarationFragment(5585) into FieldDeclaration(5586) at 3", "Insert Modifier: private(6857) into MethodDeclaration(7025) at 0", "Insert PrimitiveType: void(6858) into MethodDeclaration(7025) at 1", "Insert SimpleName: applyDelegateRelationship(6859) into MethodDeclaration(7025) at 2", "Insert SingleVariableDeclaration(6863) into MethodDeclaration(7025) at 3", "Insert Block(7024) into MethodDeclaration(7025) at 4", "Insert SimpleType: List(5560) into ParameterizedType: List<NominalTypeBuilder>(5563) at 0", "Insert SimpleType: NominalTypeBuilder(5562) into ParameterizedType: List<NominalTypeBuilder>(5563) at 1", "Insert SimpleName: delegateProxies(5564) into VariableDeclarationFragment(5569) at 0", "Insert ClassInstanceCreation(5568) into VariableDeclarationFragment(5569) at 1", "Insert SimpleType: Map(5574) into ParameterizedType: Map<String,String>(5579) at 0", "Insert SimpleType: String(5576) into ParameterizedType: Map<String,String>(5579) at 1", "Insert SimpleType: String(5578) into ParameterizedType: Map<String,String>(5579) at 2", "Insert SimpleName: delegateCallingConventions(5580) into VariableDeclarationFragment(5585) at 0", "Insert ClassInstanceCreation(5584) into VariableDeclarationFragment(5585) at 1", "Insert ExpressionStatement(5636) into Block(5637) at 2", "Insert VariableDeclarationStatement(6722) into Block(6732) at 4", "Insert IfStatement(6731) into Block(6732) at 5", "Insert SimpleType: DelegateRelationship(6861) into SingleVariableDeclaration(6863) at 0", "Insert SimpleName: rel(6862) into SingleVariableDeclaration(6863) at 1", "Insert VariableDeclarationStatement(6871) into Block(7024) at 0", "Insert VariableDeclarationStatement(6879) into Block(7024) at 1", "Insert VariableDeclarationStatement(6889) into Block(7024) at 2", "Insert IfStatement(7023) into Block(7024) at 3", "Insert SimpleName: List(5559) into SimpleType: List(5560) at 0", "Insert SimpleName: NominalTypeBuilder(5561) into SimpleType: NominalTypeBuilder(5562) at 0", "Insert ParameterizedType: ArrayList<>(5567) into ClassInstanceCreation(5568) at 0", "Insert SimpleName: Map(5573) into SimpleType: Map(5574) at 0", "Insert SimpleName: String(5575) into SimpleType: String(5576) at 0", "Insert SimpleName: String(5577) into SimpleType: String(5578) at 0", "Insert ParameterizedType: HashMap<>(5583) into ClassInstanceCreation(5584) at 0", "Insert MethodInvocation(5635) into ExpressionStatement(5636) at 0", "Insert ExpressionStatement(6174) into SwitchStatement(6235) at 11", "Insert SimpleType: DelegateRelationship(6715) into VariableDeclarationStatement(6722) at 0", "Insert VariableDeclarationFragment(6721) into VariableDeclarationStatement(6722) at 1", "Insert InfixExpression: !=(6725) into IfStatement(6731) at 0", "Insert Block(6730) into IfStatement(6731) at 1", "Insert SimpleName: DelegateRelationship(6860) into SimpleType: DelegateRelationship(6861) at 0", "Insert SimpleType: RawNominalType(6865) into VariableDeclarationStatement(6871) at 0", "Insert VariableDeclarationFragment(6870) into VariableDeclarationStatement(6871) at 1", "Insert SimpleType: RawNominalType(6873) into VariableDeclarationStatement(6879) at 0", "Insert VariableDeclarationFragment(6878) into VariableDeclarationStatement(6879) at 1", "Insert SimpleType: RawNominalType(6881) into VariableDeclarationStatement(6889) at 0", "Insert VariableDeclarationFragment(6888) into VariableDeclarationStatement(6889) at 1", "Insert InfixExpression: &&(6900) into IfStatement(7023) at 0", "Insert Block(7022) into IfStatement(7023) at 1", "Insert SimpleType: ArrayList(5566) into ParameterizedType: ArrayList<>(5567) at 0", "Insert SimpleType: HashMap(5582) into ParameterizedType: HashMap<>(5583) at 0", "Insert SimpleName: convention(5630) into MethodInvocation(5635) at 0", "Insert SimpleName: defineDelegateProxyPrototypeProperties(5631) into MethodInvocation(5635) at 1", "Insert SimpleName: globalTypeInfo(5632) into MethodInvocation(5635) at 2", "Insert SimpleName: delegateProxies(5633) into MethodInvocation(5635) at 3", "Insert SimpleName: delegateCallingConventions(5634) into MethodInvocation(5635) at 4", "Insert MethodInvocation(6173) into ExpressionStatement(6174) at 0", "Insert SimpleName: DelegateRelationship(6714) into SimpleType: DelegateRelationship(6715) at 0", "Insert SimpleName: delegateRelationship(6716) into VariableDeclarationFragment(6721) at 0", "Insert MethodInvocation(6720) into VariableDeclarationFragment(6721) at 1", "Insert SimpleName: delegateRelationship(6723) into InfixExpression: !=(6725) at 0", "Insert NullLiteral(6724) into InfixExpression: !=(6725) at 1", "Insert ExpressionStatement(6729) into Block(6730) at 0", "Insert SimpleName: RawNominalType(6864) into SimpleType: RawNominalType(6865) at 0", "Insert SimpleName: delegateBase(6866) into VariableDeclarationFragment(6870) at 0", "Insert MethodInvocation(6869) into VariableDeclarationFragment(6870) at 1", "Insert SimpleName: RawNominalType(6872) into SimpleType: RawNominalType(6873) at 0", "Insert SimpleName: delegator(6874) into VariableDeclarationFragment(6878) at 0", "Insert MethodInvocation(6877) into VariableDeclarationFragment(6878) at 1", "Insert SimpleName: RawNominalType(6880) into SimpleType: RawNominalType(6881) at 0", "Insert SimpleName: delegateSuper(6882) into VariableDeclarationFragment(6888) at 0", "Insert MethodInvocation(6887) into VariableDeclarationFragment(6888) at 1", "Insert InfixExpression: &&(6896) into InfixExpression: &&(6900) at 0", "Insert InfixExpression: !=(6899) into InfixExpression: &&(6900) at 1", "Insert VariableDeclarationStatement(6931) into Block(7022) at 0", "Insert VariableDeclarationStatement(6952) into Block(7022) at 1", "Insert ExpressionStatement(6961) into Block(7022) at 2", "Insert ExpressionStatement(6968) into Block(7022) at 3", "Insert ExpressionStatement(6989) into Block(7022) at 4", "Insert ExpressionStatement(7012) into Block(7022) at 5", "Insert ExpressionStatement(7021) into Block(7022) at 6", "Insert InfixExpression: &&(10503) into InfixExpression: &&(10510) at 0", "Insert SimpleName: ArrayList(5565) into SimpleType: ArrayList(5566) at 0", "Insert SimpleName: HashMap(5581) into SimpleType: HashMap(5582) at 0", "Insert SimpleName: convention(6169) into MethodInvocation(6173) at 0", "Insert SimpleName: checkForCallingConventionDefinitions(6170) into MethodInvocation(6173) at 1", "Insert SimpleName: n(6171) into MethodInvocation(6173) at 2", "Insert SimpleName: delegateCallingConventions(6172) into MethodInvocation(6173) at 3", "Insert SimpleName: convention(6717) into MethodInvocation(6720) at 0", "Insert SimpleName: getDelegateRelationship(6718) into MethodInvocation(6720) at 1", "Insert SimpleName: call(6719) into MethodInvocation(6720) at 2", "Insert MethodInvocation(6728) into ExpressionStatement(6729) at 0", "Insert SimpleName: findInScope(6867) into MethodInvocation(6869) at 0", "Insert QualifiedName: rel.delegateBase(6868) into MethodInvocation(6869) at 1", "Insert SimpleName: findInScope(6875) into MethodInvocation(6877) at 0", "Insert QualifiedName: rel.delegator(6876) into MethodInvocation(6877) at 1", "Insert SimpleName: findInScope(6883) into MethodInvocation(6887) at 0", "Insert MethodInvocation(6886) into MethodInvocation(6887) at 1", "Insert InfixExpression: !=(6892) into InfixExpression: &&(6896) at 0", "Insert InfixExpression: !=(6895) into InfixExpression: &&(6896) at 1", "Insert SimpleName: delegateSuper(6897) into InfixExpression: !=(6899) at 0", "Insert NullLiteral(6898) into InfixExpression: !=(6899) at 1", "Insert SimpleType: JSType(6902) into VariableDeclarationStatement(6931) at 0", "Insert VariableDeclarationFragment(6930) into VariableDeclarationStatement(6931) at 1", "Insert SimpleType: RawNominalType(6933) into VariableDeclarationStatement(6952) at 0", "Insert VariableDeclarationFragment(6951) into VariableDeclarationStatement(6952) at 1", "Insert MethodInvocation(6960) into ExpressionStatement(6961) at 0", "Insert MethodInvocation(6967) into ExpressionStatement(6968) at 0", "Insert MethodInvocation(6988) into ExpressionStatement(6989) at 0", "Insert MethodInvocation(7011) into ExpressionStatement(7012) at 0", "Insert MethodInvocation(7020) into ExpressionStatement(7021) at 0", "Move InfixExpression: &&(10257) into InfixExpression: &&(10503) at 0", "Insert PrefixExpression: !(10502) into InfixExpression: &&(10503) at 1", "Insert SimpleName: applyDelegateRelationship(6726) into MethodInvocation(6728) at 0", "Insert SimpleName: delegateRelationship(6727) into MethodInvocation(6728) at 1", "Insert SimpleName: convention(6884) into MethodInvocation(6886) at 0", "Insert SimpleName: getDelegateSuperclassName(6885) into MethodInvocation(6886) at 1", "Insert SimpleName: delegator(6890) into InfixExpression: !=(6892) at 0", "Insert NullLiteral(6891) into InfixExpression: !=(6892) at 1", "Insert SimpleName: delegateBase(6893) into InfixExpression: !=(6895) at 0", "Insert NullLiteral(6894) into InfixExpression: !=(6895) at 1", "Insert SimpleName: JSType(6901) into SimpleType: JSType(6902) at 0", "Insert SimpleName: findDelegate(6903) into VariableDeclarationFragment(6930) at 0", "Insert MethodInvocation(6929) into VariableDeclarationFragment(6930) at 1", "Insert SimpleName: RawNominalType(6932) into SimpleType: RawNominalType(6933) at 0", "Insert SimpleName: delegateProxy(6934) into VariableDeclarationFragment(6951) at 0", "Insert MethodInvocation(6950) into VariableDeclarationFragment(6951) at 1", "Insert SimpleName: nominaltypesByNode(6953) into MethodInvocation(6960) at 0", "Insert SimpleName: put(6954) into MethodInvocation(6960) at 1", "Insert ClassInstanceCreation(6958) into MethodInvocation(6960) at 2", "Insert SimpleName: delegateProxy(6959) into MethodInvocation(6960) at 3", "Insert SimpleName: delegateProxy(6962) into MethodInvocation(6967) at 0", "Insert SimpleName: addSuperClass(6963) into MethodInvocation(6967) at 1", "Insert MethodInvocation(6966) into MethodInvocation(6967) at 2", "Insert SimpleName: delegateProxy(6969) into MethodInvocation(6988) at 0", "Insert SimpleName: setCtorFunction(6970) into MethodInvocation(6988) at 1", "Insert MethodInvocation(6987) into MethodInvocation(6988) at 2", "Insert SimpleName: convention(6990) into MethodInvocation(7011) at 0", "Insert SimpleName: applyDelegateRelationship(6991) into MethodInvocation(7011) at 1", "Insert ClassInstanceCreation(6996) into MethodInvocation(7011) at 2", "Insert ClassInstanceCreation(7001) into MethodInvocation(7011) at 3", "Insert ClassInstanceCreation(7006) into MethodInvocation(7011) at 4", "Insert MethodInvocation(7009) into MethodInvocation(7011) at 5", "Insert SimpleName: findDelegate(7010) into MethodInvocation(7011) at 6", "Insert SimpleName: delegateProxies(7013) into MethodInvocation(7020) at 0", "Insert SimpleName: add(7014) into MethodInvocation(7020) at 1", "Insert ClassInstanceCreation(7019) into MethodInvocation(7020) at 2", "Insert MethodInvocation(10501) into PrefixExpression: !(10502) at 0", "Insert MethodInvocation(6927) into MethodInvocation(6929) at 0", "Insert SimpleName: buildType(6928) into MethodInvocation(6929) at 1", "Insert SimpleName: RawNominalType(6935) into MethodInvocation(6950) at 0", "Insert SimpleName: makeClass(6936) into MethodInvocation(6950) at 1", "Insert MethodInvocation(6938) into MethodInvocation(6950) at 2", "Insert MethodInvocation(6941) into MethodInvocation(6950) at 3", "Insert InfixExpression: +(6946) into MethodInvocation(6950) at 4", "Insert NullLiteral(6947) into MethodInvocation(6950) at 5", "Insert QualifiedName: ObjectKind.UNRESTRICTED(6948) into MethodInvocation(6950) at 6", "Insert BooleanLiteral: false(6949) into MethodInvocation(6950) at 7", "Insert SimpleType: Node(6956) into ClassInstanceCreation(6958) at 0", "Insert NullLiteral(6957) into ClassInstanceCreation(6958) at 1", "Insert SimpleName: delegateBase(6964) into MethodInvocation(6966) at 0", "Insert SimpleName: getAsNominalType(6965) into MethodInvocation(6966) at 1", "Insert MethodInvocation(6985) into MethodInvocation(6987) at 0", "Insert SimpleName: buildFunction(6986) into MethodInvocation(6987) at 1", "Insert SimpleType: NominalTypeBuilderNti(6993) into ClassInstanceCreation(6996) at 0", "Insert SimpleName: lateProps(6994) into ClassInstanceCreation(6996) at 1", "Insert SimpleName: delegateSuper(6995) into ClassInstanceCreation(6996) at 2", "Insert SimpleType: NominalTypeBuilderNti(6998) into ClassInstanceCreation(7001) at 0", "Insert SimpleName: lateProps(6999) into ClassInstanceCreation(7001) at 1", "Insert SimpleName: delegateBase(7000) into ClassInstanceCreation(7001) at 2", "Insert SimpleType: NominalTypeBuilderNti(7003) into ClassInstanceCreation(7006) at 0", "Insert SimpleName: lateProps(7004) into ClassInstanceCreation(7006) at 1", "Insert SimpleName: delegator(7005) into ClassInstanceCreation(7006) at 2", "Insert SimpleName: delegateProxy(7007) into MethodInvocation(7009) at 0", "Insert SimpleName: getInstanceAsJSType(7008) into MethodInvocation(7009) at 1", "Insert SimpleType: NominalTypeBuilderNti(7016) into ClassInstanceCreation(7019) at 0", "Insert SimpleName: lateProps(7017) into ClassInstanceCreation(7019) at 1", "Insert SimpleName: delegateProxy(7018) into ClassInstanceCreation(7019) at 2", "Insert MethodInvocation(10498) into MethodInvocation(10501) at 0", "Insert SimpleName: endsWith(10499) into MethodInvocation(10501) at 1", "Insert StringLiteral: \"(Proxy)\"(10500) into MethodInvocation(10501) at 2", "Insert MethodInvocation(6915) into MethodInvocation(6927) at 0", "Insert SimpleName: addRetType(6916) into MethodInvocation(6927) at 1", "Insert MethodInvocation(6926) into MethodInvocation(6927) at 2", "Insert SimpleName: getCommonTypes(6937) into MethodInvocation(6938) at 0", "Insert SimpleName: delegateBase(6939) into MethodInvocation(6941) at 0", "Insert SimpleName: getDefSite(6940) into MethodInvocation(6941) at 1", "Insert MethodInvocation(6944) into InfixExpression: +(6946) at 0", "Insert StringLiteral: \"(Proxy)\"(6945) into InfixExpression: +(6946) at 1", "Insert SimpleName: Node(6955) into SimpleType: Node(6956) at 0", "Insert MethodInvocation(6980) into MethodInvocation(6985) at 0", "Insert SimpleName: addNominalType(6981) into MethodInvocation(6985) at 1", "Insert MethodInvocation(6984) into MethodInvocation(6985) at 2", "Insert SimpleName: NominalTypeBuilderNti(6992) into SimpleType: NominalTypeBuilderNti(6993) at 0", "Insert SimpleName: NominalTypeBuilderNti(6997) into SimpleType: NominalTypeBuilderNti(6998) at 0", "Insert SimpleName: NominalTypeBuilderNti(7002) into SimpleType: NominalTypeBuilderNti(7003) at 0", "Insert SimpleName: NominalTypeBuilderNti(7015) into SimpleType: NominalTypeBuilderNti(7016) at 0", "Insert SimpleName: previousPropType(10496) into MethodInvocation(10498) at 0", "Insert SimpleName: toString(10497) into MethodInvocation(10498) at 1", "Insert ClassInstanceCreation(6908) into MethodInvocation(6915) at 0", "Insert SimpleName: addReqFormal(6909) into MethodInvocation(6915) at 1", "Insert MethodInvocation(6914) into MethodInvocation(6915) at 2", "Insert SimpleName: JSType(6917) into MethodInvocation(6926) at 0", "Insert SimpleName: join(6918) into MethodInvocation(6926) at 1", "Insert FieldAccess(6922) into MethodInvocation(6926) at 2", "Insert MethodInvocation(6925) into MethodInvocation(6926) at 3", "Insert SimpleName: delegateBase(6942) into MethodInvocation(6944) at 0", "Insert SimpleName: getName(6943) into MethodInvocation(6944) at 1", "Insert ClassInstanceCreation(6975) into MethodInvocation(6980) at 0", "Insert SimpleName: addRetType(6976) into MethodInvocation(6980) at 1", "Insert MethodInvocation(6979) into MethodInvocation(6980) at 2", "Insert SimpleName: delegateProxy(6982) into MethodInvocation(6984) at 0", "Insert SimpleName: getInstanceAsJSType(6983) into MethodInvocation(6984) at 1", "Insert SimpleType: FunctionTypeBuilder(6905) into ClassInstanceCreation(6908) at 0", "Insert MethodInvocation(6907) into ClassInstanceCreation(6908) at 1", "Insert MethodInvocation(6911) into MethodInvocation(6914) at 0", "Insert SimpleName: getNativeType(6912) into MethodInvocation(6914) at 1", "Insert SimpleName: U2U_CONSTRUCTOR_TYPE(6913) into MethodInvocation(6914) at 2", "Insert MethodInvocation(6920) into FieldAccess(6922) at 0", "Insert SimpleName: NULL(6921) into FieldAccess(6922) at 1", "Insert SimpleName: delegateBase(6923) into MethodInvocation(6925) at 0", "Insert SimpleName: getInstanceAsJSType(6924) into MethodInvocation(6925) at 1", "Insert SimpleType: FunctionTypeBuilder(6972) into ClassInstanceCreation(6975) at 0", "Insert MethodInvocation(6974) into ClassInstanceCreation(6975) at 1", "Insert SimpleName: delegateProxy(6977) into MethodInvocation(6979) at 0", "Insert SimpleName: getInstanceAsJSType(6978) into MethodInvocation(6979) at 1", "Insert SimpleName: FunctionTypeBuilder(6904) into SimpleType: FunctionTypeBuilder(6905) at 0", "Insert SimpleName: getCommonTypes(6906) into MethodInvocation(6907) at 0", "Insert SimpleName: getCommonTypes(6910) into MethodInvocation(6911) at 0", "Insert SimpleName: getCommonTypes(6919) into MethodInvocation(6920) at 0", "Insert SimpleName: FunctionTypeBuilder(6971) into SimpleType: FunctionTypeBuilder(6972) at 0", "Insert SimpleName: getCommonTypes(6973) into MethodInvocation(6974) at 0"]}}, {"FunctionType_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 5", "operations": ["INS BooleanLiteral: true to MethodInvocation at 11", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 7", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 9", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"U2U_CONSTRUCTOR\" to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 12", "INS SimpleName: commonTypes to MethodInvocation at 2", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 6", "INS SimpleName: FunctionType to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 8", "INS SimpleName: normalized to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 3", "INS NullLiteral to MethodInvocation at 4", "INS NullLiteral to MethodInvocation at 10", "INS SimpleName: functions to MethodInvocation at 0", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 5"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"!Function\" to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleName: isLoose to MethodInvocation at 0", "INS SimpleName: forAnnotation to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ctx to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ConditionalExpression to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1", "MOV SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from \"!\" to \"!Function\"", "operations": ["UPD StringLiteral: \"!\" from \"!\" to \"!Function\""]}, {"root": "UPDATE from \"\" to \"Function\"", "operations": ["UPD StringLiteral: \"\" from \"\" to \"Function\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"Function\"", "DEL MethodInvocation", "DEL SimpleName: append"]}]}}, {"FunctionType_diff": {"operations": ["Insert ExpressionStatement(831) into Block(834) at 5", "Insert IfStatement(5481) into Block(5752) at 0", "Insert MethodInvocation(830) into ExpressionStatement(831) at 0", "Insert InfixExpression: &&(5432) into IfStatement(5481) at 0", "Insert Block(5438) into IfStatement(5481) at 1", "Move IfStatement(5452) into IfStatement(5481) at 2", "Insert SimpleName: functions(813) into MethodInvocation(830) at 0", "Insert SimpleName: put(814) into MethodInvocation(830) at 1", "Insert StringLiteral: \"U2U_CONSTRUCTOR\"(815) into MethodInvocation(830) at 2", "Insert MethodInvocation(829) into MethodInvocation(830) at 3", "Insert MethodInvocation(5428) into InfixExpression: &&(5432) at 0", "Insert MethodInvocation(5431) into InfixExpression: &&(5432) at 1", "Insert ReturnStatement(5437) into Block(5438) at 0", "Insert SimpleName: FunctionType(816) into MethodInvocation(829) at 0", "Insert SimpleName: normalized(817) into MethodInvocation(829) at 1", "Insert SimpleName: commonTypes(818) into MethodInvocation(829) at 2", "Insert NullLiteral(819) into MethodInvocation(829) at 3", "Insert NullLiteral(820) into MethodInvocation(829) at 4", "Insert QualifiedName: commonTypes.UNKNOWN(821) into MethodInvocation(829) at 5", "Insert QualifiedName: commonTypes.UNKNOWN(822) into MethodInvocation(829) at 6", "Insert QualifiedName: commonTypes.UNKNOWN(823) into MethodInvocation(829) at 7", "Insert NullLiteral(824) into MethodInvocation(829) at 8", "Insert NullLiteral(825) into MethodInvocation(829) at 9", "Insert NullLiteral(826) into MethodInvocation(829) at 10", "Insert BooleanLiteral: true(827) into MethodInvocation(829) at 11", "Insert BooleanLiteral: false(828) into MethodInvocation(829) at 12", "Insert SimpleName: isLoose(5427) into MethodInvocation(5428) at 0", "Insert SimpleName: ctx(5429) into MethodInvocation(5431) at 0", "Insert SimpleName: forAnnotation(5430) into MethodInvocation(5431) at 1", "Insert MethodInvocation(5436) into ReturnStatement(5437) at 0", "Insert SimpleName: builder(5433) into MethodInvocation(5436) at 0", "Insert SimpleName: append(5434) into MethodInvocation(5436) at 1", "Insert StringLiteral: \"!Function\"(5435) into MethodInvocation(5436) at 2", "Insert MethodInvocation(5475) into ReturnStatement(5476) at 0", "Move SimpleName: builder(5436) into MethodInvocation(5475) at 0", "Move SimpleName: append(5437) into MethodInvocation(5475) at 1", "Move ConditionalExpression(5443) into MethodInvocation(5475) at 2", "Update StringLiteral: \"!\"(5441) to \"!Function\"", "Update StringLiteral: \"\"(5442) to \"Function\"", "Delete MethodInvocation(5444)", "Delete SimpleName: append(5445)", "Delete StringLiteral: \"Function\"(5446)", "Delete MethodInvocation(5447)"]}}, {"JSType_cluster": {"actions": [{"root": "UPDATE from TypeI to JSType", "operations": ["UPD SimpleType: TypeI from TypeI to JSType", "UPD SimpleName: TypeI from TypeI to JSType"]}]}}, {"JSType_diff": {"operations": ["Update SimpleType: TypeI(7329) to JSType", "Update SimpleName: TypeI(7328) to JSType"]}}, {"JSTypes_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 30", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: FunctionType to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 1", "INS StringLiteral: \"ConstantField\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to FieldDeclaration at 0", "INS SimpleName: FunctionType to SimpleType: FunctionType at 0", "INS FieldDeclaration to TypeDeclaration: class at 30", "INS SimpleName: U2U_CONSTRUCTOR to VariableDeclarationFragment at 0", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS ExpressionStatement to Block at 27", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS StringLiteral: \"U2U_CONSTRUCTOR\" to MethodInvocation at 2", "INS SimpleName: U2U_CONSTRUCTOR to FieldAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS ExpressionStatement to Block at 27", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: functions to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ReturnStatement to SwitchStatement at 57", "operations": ["INS SimpleName: U2U_CONSTRUCTOR to MethodInvocation at 1", "INS ReturnStatement to SwitchStatement at 57", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: fromFunctionType to MethodInvocation at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 58", "operations": ["INS SwitchCase to SwitchStatement at 58"]}, {"root": "INS SimpleName: U2U_CONSTRUCTOR_TYPE to SwitchCase at 0", "operations": ["INS SimpleName: U2U_CONSTRUCTOR_TYPE to SwitchCase at 0"]}]}}, {"JSTypes_diff": {"operations": ["Insert FieldDeclaration(281) into TypeDeclaration: class(2540) at 30", "Insert SingleMemberAnnotation(274) into FieldDeclaration(281) at 0", "Insert Modifier: private(275) into FieldDeclaration(281) at 1", "Insert Modifier: final(276) into FieldDeclaration(281) at 2", "Insert SimpleType: FunctionType(278) into FieldDeclaration(281) at 3", "Insert VariableDeclarationFragment(280) into FieldDeclaration(281) at 4", "Insert SimpleName: SuppressWarnings(272) into SingleMemberAnnotation(274) at 0", "Insert StringLiteral: \"ConstantField\"(273) into SingleMemberAnnotation(274) at 1", "Insert SimpleName: FunctionType(277) into SimpleType: FunctionType(278) at 0", "Insert SimpleName: U2U_CONSTRUCTOR(279) into VariableDeclarationFragment(280) at 0", "Insert ExpressionStatement(841) into Block(1116) at 27", "Insert Assignment: =(840) into ExpressionStatement(841) at 0", "Insert ReturnStatement(1926) into SwitchStatement(1938) at 57", "Insert SwitchCase(1927) into SwitchStatement(1938) at 58", "Insert FieldAccess(833) into Assignment: =(840) at 0", "Insert MethodInvocation(839) into Assignment: =(840) at 1", "Insert SimpleName: U2U_CONSTRUCTOR_TYPE(1921) into SwitchCase(1922) at 0", "Insert MethodInvocation(1925) into ReturnStatement(1926) at 0", "Insert ThisExpression(831) into FieldAccess(833) at 0", "Insert SimpleName: U2U_CONSTRUCTOR(832) into FieldAccess(833) at 1", "Insert SimpleName: checkNotNull(834) into MethodInvocation(839) at 0", "Insert MethodInvocation(838) into MethodInvocation(839) at 1", "Insert SimpleName: fromFunctionType(1923) into MethodInvocation(1925) at 0", "Insert SimpleName: U2U_CONSTRUCTOR(1924) into MethodInvocation(1925) at 1", "Insert SimpleName: functions(835) into MethodInvocation(838) at 0", "Insert SimpleName: get(836) into MethodInvocation(838) at 1", "Insert StringLiteral: \"U2U_CONSTRUCTOR\"(837) into MethodInvocation(838) at 2"]}}, {"NominalType_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ctx to MethodInvocation at 3", "INS ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: builder to ReturnStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: appendTo to MethodInvocation at 1", "MOV SimpleName: builder to MethodInvocation at 2"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL Block", "DEL IfStatement", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: builder", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: rawType", "DEL SimpleName: append", "DEL SimpleName: name"]}]}}, {"NominalType_diff": {"operations": ["Insert ExpressionStatement(2665) into Block(2755) at 1", "Insert IfStatement(2674) into Block(2755) at 2", "Insert MethodInvocation(2664) into ExpressionStatement(2665) at 0", "Move MethodInvocation(2662) into IfStatement(2674) at 0", "Insert Block(2673) into IfStatement(2674) at 1", "Move FieldAccess(2665) into MethodInvocation(2664) at 0", "Move SimpleName: appendTo(2666) into MethodInvocation(2664) at 1", "Move SimpleName: builder(2667) into MethodInvocation(2664) at 2", "Insert SimpleName: ctx(2663) into MethodInvocation(2664) at 3", "Insert ReturnStatement(2672) into Block(2673) at 0", "Insert SimpleName: builder(2671) into ReturnStatement(2672) at 0", "Delete MethodInvocation(2668)", "Delete ReturnStatement(2669)", "Delete Block(2670)", "Delete IfStatement(2671)", "Delete SimpleName: builder(2672)", "Delete SimpleName: append(2673)", "Delete ThisExpression(2674)", "Delete SimpleName: rawType(2675)", "Delete FieldAccess(2676)", "Delete SimpleName: name(2677)", "Delete FieldAccess(2678)", "Delete MethodInvocation(2679)", "Delete ExpressionStatement(2680)"]}}, {"ObjectType_cluster": {"actions": [{"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS StringLiteral: \".prototype\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: builder to MethodInvocation at 3"]}, {"root": "UPDATE from builder to getDisplayName", "operations": ["UPD SimpleName: builder from builder to getDisplayName"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \".prototype\"", "operations": ["DEL StringLiteral: \".prototype\""]}]}}, {"ObjectType_diff": {"operations": ["Insert MethodInvocation(6822) into ReturnStatement(6823) at 0", "Move MethodInvocation(6820) into MethodInvocation(6822) at 0", "Move MethodInvocation(6817) into MethodInvocation(6819) at 2", "Insert SimpleName: append(6820) into MethodInvocation(6822) at 1", "Insert StringLiteral: \".prototype\"(6821) into MethodInvocation(6822) at 2", "Insert SimpleName: builder(6811) into MethodInvocation(6819) at 0", "Move SimpleName: builder(6811) into MethodInvocation(6818) at 3", "Update SimpleName: builder(6811) to getDisplayName", "Delete SimpleName: append(6812)", "Delete StringLiteral: \".prototype\"(6819)"]}}, {"RawNominalType_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: ToStringContext to SingleVariableDeclaration at 0", "INS SimpleName: ToStringContext to SimpleType: ToStringContext at 0", "INS SimpleName: ctx to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: name to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: indexOf to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: index to InfixExpression: >= at 0", "INS InfixExpression: >= to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS CharacterLiteral: '(' to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS SimpleName: forAnnotation to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: ctx to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "INS QualifiedName: ToStringContext.TO_STRING to MethodInvocation at 2", "operations": ["INS QualifiedName: ToStringContext.TO_STRING to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: name to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: index to MethodInvocation at 4"]}, {"root": "DEL SimpleName: builder", "operations": ["DEL SimpleName: builder"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL Block"]}]}}, {"RawNominalType_diff": {"operations": ["Insert SingleVariableDeclaration(2965) into MethodDeclaration(2997) at 3", "Insert Block(2996) into MethodDeclaration(2997) at 4", "Insert SimpleType: ToStringContext(2963) into SingleVariableDeclaration(2965) at 0", "Insert SimpleName: ctx(2964) into SingleVariableDeclaration(2965) at 1", "Insert IfStatement(2990) into Block(2996) at 0", "Insert ReturnStatement(2995) into Block(2996) at 1", "Insert SimpleName: ToStringContext(2962) into SimpleType: ToStringContext(2963) at 0", "Insert MethodInvocation(2968) into IfStatement(2990) at 0", "Insert Block(2989) into IfStatement(2990) at 1", "Move MethodInvocation(2965) into ReturnStatement(2995) at 0", "Insert SimpleName: ctx(2966) into MethodInvocation(2968) at 0", "Insert SimpleName: forAnnotation(2967) into MethodInvocation(2968) at 1", "Insert VariableDeclarationStatement(2976) into Block(2989) at 0", "Insert IfStatement(2988) into Block(2989) at 1", "Insert PrimitiveType: int(2969) into VariableDeclarationStatement(2976) at 0", "Insert VariableDeclarationFragment(2975) into VariableDeclarationStatement(2976) at 1", "Insert InfixExpression: >=(2979) into IfStatement(2988) at 0", "Insert Block(2987) into IfStatement(2988) at 1", "Insert QualifiedName: ToStringContext.TO_STRING(3008) into MethodInvocation(3009) at 2", "Insert SimpleName: index(2970) into VariableDeclarationFragment(2975) at 0", "Insert MethodInvocation(2974) into VariableDeclarationFragment(2975) at 1", "Insert SimpleName: index(2977) into InfixExpression: >=(2979) at 0", "Insert NumberLiteral: 0(2978) into InfixExpression: >=(2979) at 1", "Move ReturnStatement(2968) into Block(2987) at 0", "Insert SimpleName: name(2971) into MethodInvocation(2974) at 0", "Insert SimpleName: indexOf(2972) into MethodInvocation(2974) at 1", "Insert CharacterLiteral: '('(2973) into MethodInvocation(2974) at 2", "Insert MethodInvocation(2985) into ReturnStatement(2986) at 0", "Insert SimpleName: builder(2980) into MethodInvocation(2985) at 0", "Insert SimpleName: append(2981) into MethodInvocation(2985) at 1", "Insert SimpleName: name(2982) into MethodInvocation(2985) at 2", "Insert NumberLiteral: 0(2983) into MethodInvocation(2985) at 3", "Insert SimpleName: index(2984) into MethodInvocation(2985) at 4", "Delete SimpleName: builder(2967)", "Delete ExpressionStatement(2966)", "Delete Block(2969)"]}}, {"FunctionType_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 5", "operations": ["INS BooleanLiteral: true to MethodInvocation at 11", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 7", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 9", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"U2U_CONSTRUCTOR\" to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 12", "INS SimpleName: commonTypes to MethodInvocation at 2", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 6", "INS SimpleName: FunctionType to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 8", "INS SimpleName: normalized to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 3", "INS NullLiteral to MethodInvocation at 4", "INS NullLiteral to MethodInvocation at 10", "INS SimpleName: functions to MethodInvocation at 0", "INS QualifiedName: commonTypes.UNKNOWN to MethodInvocation at 5"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"!Function\" to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleName: isLoose to MethodInvocation at 0", "INS SimpleName: forAnnotation to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ctx to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ConditionalExpression to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1", "MOV SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from \"!\" to \"!Function\"", "operations": ["UPD StringLiteral: \"!\" from \"!\" to \"!Function\""]}, {"root": "UPDATE from \"\" to \"Function\"", "operations": ["UPD StringLiteral: \"\" from \"\" to \"Function\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"Function\"", "DEL MethodInvocation", "DEL SimpleName: append"]}]}}, {"FunctionType_diff": {"operations": ["Insert ExpressionStatement(831) into Block(834) at 5", "Insert IfStatement(5481) into Block(5752) at 0", "Insert MethodInvocation(830) into ExpressionStatement(831) at 0", "Insert InfixExpression: &&(5432) into IfStatement(5481) at 0", "Insert Block(5438) into IfStatement(5481) at 1", "Move IfStatement(5452) into IfStatement(5481) at 2", "Insert SimpleName: functions(813) into MethodInvocation(830) at 0", "Insert SimpleName: put(814) into MethodInvocation(830) at 1", "Insert StringLiteral: \"U2U_CONSTRUCTOR\"(815) into MethodInvocation(830) at 2", "Insert MethodInvocation(829) into MethodInvocation(830) at 3", "Insert MethodInvocation(5428) into InfixExpression: &&(5432) at 0", "Insert MethodInvocation(5431) into InfixExpression: &&(5432) at 1", "Insert ReturnStatement(5437) into Block(5438) at 0", "Insert SimpleName: FunctionType(816) into MethodInvocation(829) at 0", "Insert SimpleName: normalized(817) into MethodInvocation(829) at 1", "Insert SimpleName: commonTypes(818) into MethodInvocation(829) at 2", "Insert NullLiteral(819) into MethodInvocation(829) at 3", "Insert NullLiteral(820) into MethodInvocation(829) at 4", "Insert QualifiedName: commonTypes.UNKNOWN(821) into MethodInvocation(829) at 5", "Insert QualifiedName: commonTypes.UNKNOWN(822) into MethodInvocation(829) at 6", "Insert QualifiedName: commonTypes.UNKNOWN(823) into MethodInvocation(829) at 7", "Insert NullLiteral(824) into MethodInvocation(829) at 8", "Insert NullLiteral(825) into MethodInvocation(829) at 9", "Insert NullLiteral(826) into MethodInvocation(829) at 10", "Insert BooleanLiteral: true(827) into MethodInvocation(829) at 11", "Insert BooleanLiteral: false(828) into MethodInvocation(829) at 12", "Insert SimpleName: isLoose(5427) into MethodInvocation(5428) at 0", "Insert SimpleName: ctx(5429) into MethodInvocation(5431) at 0", "Insert SimpleName: forAnnotation(5430) into MethodInvocation(5431) at 1", "Insert MethodInvocation(5436) into ReturnStatement(5437) at 0", "Insert SimpleName: builder(5433) into MethodInvocation(5436) at 0", "Insert SimpleName: append(5434) into MethodInvocation(5436) at 1", "Insert StringLiteral: \"!Function\"(5435) into MethodInvocation(5436) at 2", "Insert MethodInvocation(5475) into ReturnStatement(5476) at 0", "Move SimpleName: builder(5436) into MethodInvocation(5475) at 0", "Move SimpleName: append(5437) into MethodInvocation(5475) at 1", "Move ConditionalExpression(5443) into MethodInvocation(5475) at 2", "Update StringLiteral: \"!\"(5441) to \"!Function\"", "Update StringLiteral: \"\"(5442) to \"Function\"", "Delete MethodInvocation(5444)", "Delete SimpleName: append(5445)", "Delete StringLiteral: \"Function\"(5446)", "Delete MethodInvocation(5447)"]}}, {"InstanceObjectType_cluster": {"actions": [{"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS ConditionalExpression to MethodInvocation at 2", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: getNormalizedReferenceName to MethodInvocation at 1", "INS SimpleName: constructor to MethodInvocation at 0", "INS SimpleName: forAnnotations to ConditionalExpression at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 2"]}]}}, {"InstanceObjectType_diff": {"operations": ["Insert ConditionalExpression(193) into MethodInvocation(194) at 2", "Insert SimpleName: forAnnotations(186) into ConditionalExpression(193) at 0", "Insert MethodInvocation(189) into ConditionalExpression(193) at 1", "Move MethodInvocation(188) into ConditionalExpression(193) at 2", "Insert SimpleName: constructor(187) into MethodInvocation(189) at 0", "Insert SimpleName: getNormalizedReferenceName(188) into MethodInvocation(189) at 1"]}}, {"ObjectType_cluster": {"actions": [{"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS StringLiteral: \".prototype\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: builder to MethodInvocation at 3"]}, {"root": "UPDATE from builder to getDisplayName", "operations": ["UPD SimpleName: builder from builder to getDisplayName"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \".prototype\"", "operations": ["DEL StringLiteral: \".prototype\""]}]}}, {"ObjectType_diff": {"operations": ["Insert MethodInvocation(6822) into ReturnStatement(6823) at 0", "Move MethodInvocation(6820) into MethodInvocation(6822) at 0", "Move MethodInvocation(6817) into MethodInvocation(6819) at 2", "Insert SimpleName: append(6820) into MethodInvocation(6822) at 1", "Insert StringLiteral: \".prototype\"(6821) into MethodInvocation(6822) at 2", "Insert SimpleName: builder(6811) into MethodInvocation(6819) at 0", "Move SimpleName: builder(6811) into MethodInvocation(6818) at 3", "Update SimpleName: builder(6811) to getDisplayName", "Delete SimpleName: append(6812)", "Delete StringLiteral: \".prototype\"(6819)"]}}, {"PrototypeObjectType_cluster": {"actions": [{"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS SimpleName: forAnnotations to ConditionalExpression at 0", "INS SimpleName: getNormalizedReferenceName to MethodInvocation at 0", "INS ConditionalExpression to MethodInvocation at 2", "INS MethodInvocation to ConditionalExpression at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 2"]}]}}, {"PrototypeObjectType_diff": {"operations": ["Insert ConditionalExpression(671) into MethodInvocation(672) at 2", "Insert SimpleName: forAnnotations(666) into ConditionalExpression(671) at 0", "Insert MethodInvocation(668) into ConditionalExpression(671) at 1", "Move MethodInvocation(667) into ConditionalExpression(671) at 2", "Insert SimpleName: getNormalizedReferenceName(667) into MethodInvocation(668) at 0"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}