{"application": "google-auto", "csha": "66c3f4f99102d4e967913b785f48417c92deff29", "files": [{"MoreElements_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: com.google.common.collect.LinkedHashMultimap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: com.google.common.collect.SetMultimap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: java.util.LinkedHashSet to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: java.util.List to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: javax.lang.model.type.TypeKind to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: javax.lang.model.type.TypeMirror to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: javax.lang.model.util.ElementFilter to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: overridden to VariableDeclarationFragment at 0", "INS SimpleName: elementUtils to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS ReturnStatement to Block at 6", "INS TextElement:  toString() to TagElement: @code at 0", "INS TextElement:  defines  to TagElement at 6", "INS SimpleName: methodMap to MethodInvocation at 0", "INS TextElement: -->. to TagElement: @param at 6", "INS ParameterizedType: ImmutableSet<ExecutableElement> to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: methodMap to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS QualifiedName: javax.annotation.processing.AbstractProcessor to MemberRef at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ExpressionStatement to Block at 1", "INS SimpleName: i to InfixExpression: + at 0", "INS SimpleType: ExecutableElement to ParameterizedType: SetMultimap<String,ExecutableElement> at 2", "INS SimpleType: List to ParameterizedType: List<ExecutableElement> at 0", "INS SimpleName: processingEnv to MemberRef at 1", "INS TagElement: @code to TagElement at 12", "INS MethodInvocation to MethodInvocation at 1", "INS TagElement: @code to TagElement at 10", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ForStatement to Block at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS TagElement: @link to TagElement: @param at 7", "INS SimpleName: methodName to SingleVariableDeclaration at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS VariableDeclarationExpression to ForStatement at 0", "INS TextElement:  public String toString() to TagElement: @code at 0", "INS SimpleName: ImmutableSet to MethodInvocation at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: type to MethodInvocation at 4", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: methodList to MethodInvocation at 0", "INS TextElement:  processingEnv to TagElement: @link at 1", "INS TagElement: @link to TagElement: @param at 2", "INS SimpleType: ExecutableElement to ParameterizedType: LinkedHashSet<ExecutableElement> at 1", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: elementUtils to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: getLocalAndInheritedMethods to MethodInvocation at 0", "INS TagElement: @link to TagElement: @param at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS InfixExpression: < to ForStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  javax.annotation.processing.ProcessingEnvironment.getElementUtils() to TagElement: @link at 0", "INS SimpleName: methodI to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: removeAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: LinkedHashSet to ParameterizedType: LinkedHashSet<ExecutableElement> at 0", "INS ExpressionStatement to Block at 5", "INS SimpleType: TypeElement to SingleVariableDeclaration at 0", "INS SimpleName: getLocalAndInheritedMethods to MethodDeclaration at 4", "INS SimpleType: SetMultimap to ParameterizedType: SetMultimap<String,ExecutableElement> at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: j to MethodInvocation at 2", "INS ParameterizedType: LinkedHashSet<ExecutableElement> to ClassInstanceCreation at 0", "INS IfStatement to Block at 1", "INS SimpleName: type to TagElement: @param at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: SetMultimap to SimpleType: SetMultimap at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS TagElement: @param to Javadoc at 1", "INS ForStatement to Block at 1", "INS TextElement: inherits from its ancestors. Inherited methods that are overridden are not included in the to TagElement at 3", "INS SimpleName: methods to MethodInvocation at 0", "INS SimpleName: methodName to MethodInvocation at 2", "INS SimpleName: TypeElement to SimpleType: TypeElement at 0", "INS TextElement:  the type whose own and inherited methods are to be returned to TagElement: @param at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleType: ExecutableElement to VariableDeclarationStatement at 0", "INS SimpleName: methodJ to VariableDeclarationFragment at 0", "INS TextElement: <!-- to TagElement: @param at 5", "INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS SimpleName: Elements to TagElement: @link at 0", "INS SimpleType: ExecutableElement to ParameterizedType: List<ExecutableElement> at 1", "INS SimpleName: overridden to MethodInvocation at 0", "INS SimpleType: ExecutableElement to VariableDeclarationStatement at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS TextElement: Returns the set of all non-private methods from  to TagElement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement:  Object to TagElement: @code at 0", "INS TextElement:  type to TagElement: @code at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: methodI to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: < at 1", "INS TagElement: @code to TagElement at 5", "INS TextElement: result. So if  to TagElement at 4", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: copyOf to MethodInvocation at 1", "INS TextElement: , the returned set will to TagElement at 8", "INS Block to EnhancedForStatement at 2", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleType: ImmutableSet to ParameterizedType: ImmutableSet<ExecutableElement> at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleType: Elements to SingleVariableDeclaration at 0", "INS TagElement: @code to TagElement at 1", "INS SimpleName: LinkedHashMultimap to MethodInvocation at 0", "INS SimpleName: methodList to VariableDeclarationFragment at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: i to MethodInvocation at 2", "INS TextElement:  object, typically returned by to TagElement: @param at 3", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: methodI to MethodInvocation at 3", "INS TagElement: @code to TagElement at 7", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: methods to MethodInvocation at 2", "INS SimpleName: j to VariableDeclarationFragment at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to ForStatement at 3", "INS SimpleName: methodList to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS ParameterizedType: Set<ExecutableElement> to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: overridden to MethodInvocation at 2", "INS SimpleName: overrides to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: methodList to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS TextElement:  method defined by  to TagElement at 11", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ParameterizedType: LinkedHashSet<ExecutableElement> to ClassInstanceCreation at 0", "INS Block to IfStatement at 1", "INS SimpleName: j to InfixExpression: < at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: methods to VariableDeclarationFragment at 0", "INS ParameterizedType: Set<ExecutableElement> to VariableDeclarationStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: LinkedHashSet to SimpleType: LinkedHashSet at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: elementUtils to TagElement: @param at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ExpressionStatement to Block at 0", "INS TextElement: contain that method, but not the  to TagElement at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: methodJ to MethodInvocation at 2", "INS EnhancedForStatement to Block at 3", "INS SimpleType: LinkedHashSet to ParameterizedType: LinkedHashSet<ExecutableElement> at 0", "INS SimpleType: ExecutableElement to ParameterizedType: Set<ExecutableElement> at 1", "INS SimpleType: ExecutableElement to ParameterizedType: LinkedHashSet<ExecutableElement> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: type to MethodInvocation at 2", "INS SimpleType: ExecutableElement to ParameterizedType: Set<ExecutableElement> at 1", "INS SimpleName: create to MethodInvocation at 1", "INS TextElement: . to TagElement at 13", "INS SimpleName: methodMap to MethodInvocation at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: copyOf to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Elements to SimpleType: Elements at 0", "INS SimpleType: Set to ParameterizedType: Set<ExecutableElement> at 0", "INS TextElement:  an  to TagElement: @param at 1", "INS SimpleName: type to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: Set to ParameterizedType: Set<ExecutableElement> at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableSet<ExecutableElement> at 1", "INS TextElement: , including methods that it to TagElement at 2", "INS SimpleName: methodMap to MethodInvocation at 3", "INS SimpleName: j to PostfixExpression: ++ at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: String to ParameterizedType: SetMultimap<String,ExecutableElement> at 1", "INS ParameterizedType: SetMultimap<String,ExecutableElement> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TextElement:  type to TagElement: @code at 0", "INS SimpleName: LinkedHashSet to SimpleType: LinkedHashSet at 0", "INS ParameterizedType: List<ExecutableElement> to VariableDeclarationStatement at 0", "INS SimpleName: ImmutableSet to SimpleType: ImmutableSet at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: methodMap to VariableDeclarationFragment at 0", "INS SimpleName: getPackage to MethodInvocation at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: methodList to MethodInvocation at 0", "INS Block to ForStatement at 3", "INS TextElement: getElementUtils() to TagElement: @link at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: MoreTypes to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: method to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: pkg to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: SetMultimap to ParameterizedType: SetMultimap<String,ExecutableElement> at 0", "INS SimpleName: pkg to MethodInvocation at 1", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: pkg to SingleVariableDeclaration at 1", "INS SimpleName: method to MethodInvocation at 1", "INS SimpleType: PackageElement to SingleVariableDeclaration at 0", "INS SimpleName: superInterface to SingleVariableDeclaration at 1", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: asTypeElement to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: method to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: SetMultimap<String,ExecutableElement> at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: getSuperclass to MethodInvocation at 1", "INS SimpleName: getInterfaces to MethodInvocation at 1", "INS SimpleName: getLocalAndInheritedMethods to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: getSuperclass to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: asTypeElement to MethodInvocation at 1", "INS SimpleName: methods to MethodInvocation at 3", "INS Block to MethodDeclaration at 7", "INS SimpleName: getLocalAndInheritedMethods to MethodInvocation at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS EnhancedForStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 2", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: methodsIn to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS Modifier: static to MethodDeclaration at 1", "INS QualifiedName: TypeKind.NONE to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: superInterface to MethodInvocation at 2", "INS SimpleName: PackageElement to SimpleType: PackageElement at 0", "INS SimpleName: methods to MethodInvocation at 3", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: method to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getModifiers to MethodInvocation at 1", "INS SimpleName: MoreTypes to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: TypeElement to SimpleType: TypeElement at 0", "INS SimpleName: SetMultimap to SimpleType: SetMultimap at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS QualifiedName: Modifier.STATIC to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: ElementFilter to MethodInvocation at 0", "INS SimpleType: TypeMirror to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: methods to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: methodVisibleFromPackage to MethodInvocation at 0", "INS ParameterizedType: SetMultimap<String,ExecutableElement> to SingleVariableDeclaration at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: TypeElement to SingleVariableDeclaration at 0", "INS SimpleName: pkg to MethodInvocation at 2", "INS SimpleName: method to MethodInvocation at 3", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: getLocalAndInheritedMethods to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: getKind to MethodInvocation at 1", "INS SimpleType: ExecutableElement to ParameterizedType: SetMultimap<String,ExecutableElement> at 2", "INS SimpleName: methods to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getEnclosedElements to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleType: ExecutableElement to SingleVariableDeclaration at 0", "INS SimpleName: TypeMirror to SimpleType: TypeMirror at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: visibility to SwitchStatement at 0", "INS Modifier: static to MethodDeclaration at 1", "INS ReturnStatement to SwitchStatement at 6", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: ExecutableElement to SingleVariableDeclaration at 0", "INS SimpleName: pkg to SingleVariableDeclaration at 1", "INS SwitchStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: method to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: PackageElement to SimpleType: PackageElement at 0", "INS ReturnStatement to SwitchStatement at 4", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS ReturnStatement to SwitchStatement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: visibility to VariableDeclarationFragment at 0", "INS SimpleName: methodVisibleFromPackage to MethodDeclaration at 3", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: Visibility to SimpleType: Visibility at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: method to SingleVariableDeclaration at 1", "INS SwitchCase to SwitchStatement at 3", "INS SimpleName: pkg to MethodInvocation at 2", "INS SwitchCase to SwitchStatement at 5", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: PRIVATE to SwitchCase at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: method to MethodInvocation at 2", "INS SimpleName: DEFAULT to SwitchCase at 0", "INS SimpleName: getPackage to MethodInvocation at 0", "INS SimpleType: PackageElement to SingleVariableDeclaration at 0", "INS SimpleName: ofElement to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: Visibility to MethodInvocation at 0", "INS SimpleType: Visibility to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}]}}, {"MoreElements_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(1213) at 4", "Insert ImportDeclaration(13) into CompilationUnit(1213) at 6", "Insert ImportDeclaration(15) into CompilationUnit(1213) at 7", "Insert ImportDeclaration(19) into CompilationUnit(1213) at 9", "Insert ImportDeclaration(21) into CompilationUnit(1213) at 10", "Insert ImportDeclaration(41) into CompilationUnit(1213) at 20", "Insert ImportDeclaration(43) into CompilationUnit(1213) at 21", "Insert ImportDeclaration(45) into CompilationUnit(1213) at 22", "Insert QualifiedName: com.google.common.collect.ImmutableList(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.google.common.collect.LinkedHashMultimap(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: com.google.common.collect.SetMultimap(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: java.util.LinkedHashSet(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: java.util.List(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: javax.lang.model.type.TypeKind(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: javax.lang.model.type.TypeMirror(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: javax.lang.model.util.ElementFilter(44) into ImportDeclaration(45) at 0", "Insert MethodDeclaration(1069) into TypeDeclaration: class(1212) at 19", "Insert MethodDeclaration(1166) into TypeDeclaration: class(1212) at 20", "Insert MethodDeclaration(1207) into TypeDeclaration: class(1212) at 21", "Insert Javadoc(904) into MethodDeclaration(1069) at 0", "Insert Modifier: public(905) into MethodDeclaration(1069) at 1", "Insert Modifier: static(906) into MethodDeclaration(1069) at 2", "Insert ParameterizedType: ImmutableSet<ExecutableElement>(911) into MethodDeclaration(1069) at 3", "Insert SimpleName: getLocalAndInheritedMethods(912) into MethodDeclaration(1069) at 4", "Insert SingleVariableDeclaration(916) into MethodDeclaration(1069) at 5", "Insert SingleVariableDeclaration(920) into MethodDeclaration(1069) at 6", "Insert Block(1068) into MethodDeclaration(1069) at 7", "Insert Modifier: private(1070) into MethodDeclaration(1166) at 0", "Insert Modifier: static(1071) into MethodDeclaration(1166) at 1", "Insert PrimitiveType: void(1072) into MethodDeclaration(1166) at 2", "Insert SimpleName: getLocalAndInheritedMethods(1073) into MethodDeclaration(1166) at 3", "Insert SingleVariableDeclaration(1077) into MethodDeclaration(1166) at 4", "Insert SingleVariableDeclaration(1081) into MethodDeclaration(1166) at 5", "Insert SingleVariableDeclaration(1090) into MethodDeclaration(1166) at 6", "Insert Block(1165) into MethodDeclaration(1166) at 7", "Insert Modifier: private(1167) into MethodDeclaration(1207) at 0", "Insert Modifier: static(1168) into MethodDeclaration(1207) at 1", "Insert PrimitiveType: boolean(1169) into MethodDeclaration(1207) at 2", "Insert SimpleName: methodVisibleFromPackage(1170) into MethodDeclaration(1207) at 3", "Insert SingleVariableDeclaration(1174) into MethodDeclaration(1207) at 4", "Insert SingleVariableDeclaration(1178) into MethodDeclaration(1207) at 5", "Insert Block(1206) into MethodDeclaration(1207) at 6", "Insert TagElement(884) into Javadoc(904) at 0", "Insert TagElement: @param(887) into Javadoc(904) at 1", "Insert TagElement: @param(903) into Javadoc(904) at 2", "Insert SimpleType: ImmutableSet(908) into ParameterizedType: ImmutableSet<ExecutableElement>(911) at 0", "Insert SimpleType: ExecutableElement(910) into ParameterizedType: ImmutableSet<ExecutableElement>(911) at 1", "Insert SimpleType: TypeElement(914) into SingleVariableDeclaration(916) at 0", "Insert SimpleName: type(915) into SingleVariableDeclaration(916) at 1", "Insert SimpleType: Elements(918) into SingleVariableDeclaration(920) at 0", "Insert SimpleName: elementUtils(919) into SingleVariableDeclaration(920) at 1", "Insert VariableDeclarationStatement(933) into Block(1068) at 0", "Insert ExpressionStatement(941) into Block(1068) at 1", "Insert VariableDeclarationStatement(955) into Block(1068) at 2", "Insert EnhancedForStatement(1040) into Block(1068) at 3", "Insert VariableDeclarationStatement(1057) into Block(1068) at 4", "Insert ExpressionStatement(1062) into Block(1068) at 5", "Insert ReturnStatement(1067) into Block(1068) at 6", "Insert SimpleType: PackageElement(1075) into SingleVariableDeclaration(1077) at 0", "Insert SimpleName: pkg(1076) into SingleVariableDeclaration(1077) at 1", "Insert SimpleType: TypeElement(1079) into SingleVariableDeclaration(1081) at 0", "Insert SimpleName: type(1080) into SingleVariableDeclaration(1081) at 1", "Insert ParameterizedType: SetMultimap<String,ExecutableElement>(1088) into SingleVariableDeclaration(1090) at 0", "Insert SimpleName: methods(1089) into SingleVariableDeclaration(1090) at 1", "Insert EnhancedForStatement(1108) into Block(1165) at 0", "Insert IfStatement(1128) into Block(1165) at 1", "Insert EnhancedForStatement(1164) into Block(1165) at 2", "Insert SimpleType: ExecutableElement(1172) into SingleVariableDeclaration(1174) at 0", "Insert SimpleName: method(1173) into SingleVariableDeclaration(1174) at 1", "Insert SimpleType: PackageElement(1176) into SingleVariableDeclaration(1178) at 0", "Insert SimpleName: pkg(1177) into SingleVariableDeclaration(1178) at 1", "Insert VariableDeclarationStatement(1187) into Block(1206) at 0", "Insert SwitchStatement(1205) into Block(1206) at 1", "Insert TextElement: Returns the set of all non-private methods from (865) into TagElement(884) at 0", "Insert TagElement: @code(867) into TagElement(884) at 1", "Insert TextElement: , including methods that it(868) into TagElement(884) at 2", "Insert TextElement: inherits from its ancestors. Inherited methods that are overridden are not included in the(869) into TagElement(884) at 3", "Insert TextElement: result. So if (870) into TagElement(884) at 4", "Insert TagElement: @code(872) into TagElement(884) at 5", "Insert TextElement:  defines (873) into TagElement(884) at 6", "Insert TagElement: @code(875) into TagElement(884) at 7", "Insert TextElement: , the returned set will(876) into TagElement(884) at 8", "Insert TextElement: contain that method, but not the (877) into TagElement(884) at 9", "Insert TagElement: @code(879) into TagElement(884) at 10", "Insert TextElement:  method defined by (880) into TagElement(884) at 11", "Insert TagElement: @code(882) into TagElement(884) at 12", "Insert TextElement: .(883) into TagElement(884) at 13", "Insert SimpleName: type(885) into TagElement: @param(887) at 0", "Insert TextElement:  the type whose own and inherited methods are to be returned(886) into TagElement: @param(887) at 1", "Insert SimpleName: elementUtils(888) into TagElement: @param(903) at 0", "Insert TextElement:  an (889) into TagElement: @param(903) at 1", "Insert TagElement: @link(891) into TagElement: @param(903) at 2", "Insert TextElement:  object, typically returned by(892) into TagElement: @param(903) at 3", "Insert TagElement: @link(897) into TagElement: @param(903) at 4", "Insert TextElement: <!--(898) into TagElement: @param(903) at 5", "Insert TextElement: -->.(899) into TagElement: @param(903) at 6", "Insert TagElement: @link(902) into TagElement: @param(903) at 7", "Insert SimpleName: ImmutableSet(907) into SimpleType: ImmutableSet(908) at 0", "Insert SimpleName: ExecutableElement(909) into SimpleType: ExecutableElement(910) at 0", "Insert SimpleName: TypeElement(913) into SimpleType: TypeElement(914) at 0", "Insert SimpleName: Elements(917) into SimpleType: Elements(918) at 0", "Insert ParameterizedType: SetMultimap<String,ExecutableElement>(927) into VariableDeclarationStatement(933) at 0", "Insert VariableDeclarationFragment(932) into VariableDeclarationStatement(933) at 1", "Insert MethodInvocation(940) into ExpressionStatement(941) at 0", "Insert ParameterizedType: Set<ExecutableElement>(946) into VariableDeclarationStatement(955) at 0", "Insert VariableDeclarationFragment(954) into VariableDeclarationStatement(955) at 1", "Insert SingleVariableDeclaration(959) into EnhancedForStatement(1040) at 0", "Insert MethodInvocation(962) into EnhancedForStatement(1040) at 1", "Insert Block(1039) into EnhancedForStatement(1040) at 2", "Insert ParameterizedType: Set<ExecutableElement>(1045) into VariableDeclarationStatement(1057) at 0", "Insert VariableDeclarationFragment(1056) into VariableDeclarationStatement(1057) at 1", "Insert MethodInvocation(1061) into ExpressionStatement(1062) at 0", "Insert MethodInvocation(1066) into ReturnStatement(1067) at 0", "Insert SimpleName: PackageElement(1074) into SimpleType: PackageElement(1075) at 0", "Insert SimpleName: TypeElement(1078) into SimpleType: TypeElement(1079) at 0", "Insert SimpleType: SetMultimap(1083) into ParameterizedType: SetMultimap<String,ExecutableElement>(1088) at 0", "Insert SimpleType: String(1085) into ParameterizedType: SetMultimap<String,ExecutableElement>(1088) at 1", "Insert SimpleType: ExecutableElement(1087) into ParameterizedType: SetMultimap<String,ExecutableElement>(1088) at 2", "Insert SingleVariableDeclaration(1094) into EnhancedForStatement(1108) at 0", "Insert MethodInvocation(1097) into EnhancedForStatement(1108) at 1", "Insert Block(1107) into EnhancedForStatement(1108) at 2", "Insert InfixExpression: !=(1115) into IfStatement(1128) at 0", "Insert Block(1127) into IfStatement(1128) at 1", "Insert SingleVariableDeclaration(1132) into EnhancedForStatement(1164) at 0", "Insert MethodInvocation(1138) into EnhancedForStatement(1164) at 1", "Insert Block(1163) into EnhancedForStatement(1164) at 2", "Insert SimpleName: ExecutableElement(1171) into SimpleType: ExecutableElement(1172) at 0", "Insert SimpleName: PackageElement(1175) into SimpleType: PackageElement(1176) at 0", "Insert SimpleType: Visibility(1180) into VariableDeclarationStatement(1187) at 0", "Insert VariableDeclarationFragment(1186) into VariableDeclarationStatement(1187) at 1", "Insert SimpleName: visibility(1188) into SwitchStatement(1205) at 0", "Insert SwitchCase(1190) into SwitchStatement(1205) at 1", "Insert ReturnStatement(1192) into SwitchStatement(1205) at 2", "Insert SwitchCase(1194) into SwitchStatement(1205) at 3", "Insert ReturnStatement(1201) into SwitchStatement(1205) at 4", "Insert SwitchCase(1202) into SwitchStatement(1205) at 5", "Insert ReturnStatement(1204) into SwitchStatement(1205) at 6", "Insert TextElement:  type(866) into TagElement: @code(867) at 0", "Insert TextElement:  type(871) into TagElement: @code(872) at 0", "Insert TextElement:  public String toString()(874) into TagElement: @code(875) at 0", "Insert TextElement:  toString()(878) into TagElement: @code(879) at 0", "Insert TextElement:  Object(881) into TagElement: @code(882) at 0", "Insert SimpleName: Elements(890) into TagElement: @link(891) at 0", "Insert MemberRef(895) into TagElement: @link(897) at 0", "Insert TextElement:  processingEnv(896) into TagElement: @link(897) at 1", "Insert TextElement:  javax.annotation.processing.ProcessingEnvironment.getElementUtils()(900) into TagElement: @link(902) at 0", "Insert TextElement: getElementUtils()(901) into TagElement: @link(902) at 1", "Insert SimpleType: SetMultimap(922) into ParameterizedType: SetMultimap<String,ExecutableElement>(927) at 0", "Insert SimpleType: String(924) into ParameterizedType: SetMultimap<String,ExecutableElement>(927) at 1", "Insert SimpleType: ExecutableElement(926) into ParameterizedType: SetMultimap<String,ExecutableElement>(927) at 2", "Insert SimpleName: methodMap(928) into VariableDeclarationFragment(932) at 0", "Insert MethodInvocation(931) into VariableDeclarationFragment(932) at 1", "Insert SimpleName: getLocalAndInheritedMethods(934) into MethodInvocation(940) at 0", "Insert MethodInvocation(937) into MethodInvocation(940) at 1", "Insert SimpleName: type(938) into MethodInvocation(940) at 2", "Insert SimpleName: methodMap(939) into MethodInvocation(940) at 3", "Insert SimpleType: Set(943) into ParameterizedType: Set<ExecutableElement>(946) at 0", "Insert SimpleType: ExecutableElement(945) into ParameterizedType: Set<ExecutableElement>(946) at 1", "Insert SimpleName: overridden(947) into VariableDeclarationFragment(954) at 0", "Insert ClassInstanceCreation(953) into VariableDeclarationFragment(954) at 1", "Insert SimpleType: String(957) into SingleVariableDeclaration(959) at 0", "Insert SimpleName: methodName(958) into SingleVariableDeclaration(959) at 1", "Insert SimpleName: methodMap(960) into MethodInvocation(962) at 0", "Insert SimpleName: keySet(961) into MethodInvocation(962) at 1", "Insert VariableDeclarationStatement(977) into Block(1039) at 0", "Insert ForStatement(1038) into Block(1039) at 1", "Insert SimpleType: Set(1042) into ParameterizedType: Set<ExecutableElement>(1045) at 0", "Insert SimpleType: ExecutableElement(1044) into ParameterizedType: Set<ExecutableElement>(1045) at 1", "Insert SimpleName: methods(1046) into VariableDeclarationFragment(1056) at 0", "Insert ClassInstanceCreation(1055) into VariableDeclarationFragment(1056) at 1", "Insert SimpleName: methods(1058) into MethodInvocation(1061) at 0", "Insert SimpleName: removeAll(1059) into MethodInvocation(1061) at 1", "Insert SimpleName: overridden(1060) into MethodInvocation(1061) at 2", "Insert SimpleName: ImmutableSet(1063) into MethodInvocation(1066) at 0", "Insert SimpleName: copyOf(1064) into MethodInvocation(1066) at 1", "Insert SimpleName: methods(1065) into MethodInvocation(1066) at 2", "Insert SimpleName: SetMultimap(1082) into SimpleType: SetMultimap(1083) at 0", "Insert SimpleName: String(1084) into SimpleType: String(1085) at 0", "Insert SimpleName: ExecutableElement(1086) into SimpleType: ExecutableElement(1087) at 0", "Insert SimpleType: TypeMirror(1092) into SingleVariableDeclaration(1094) at 0", "Insert SimpleName: superInterface(1093) into SingleVariableDeclaration(1094) at 1", "Insert SimpleName: type(1095) into MethodInvocation(1097) at 0", "Insert SimpleName: getInterfaces(1096) into MethodInvocation(1097) at 1", "Insert ExpressionStatement(1106) into Block(1107) at 0", "Insert MethodInvocation(1113) into InfixExpression: !=(1115) at 0", "Insert QualifiedName: TypeKind.NONE(1114) into InfixExpression: !=(1115) at 1", "Insert ExpressionStatement(1126) into Block(1127) at 0", "Insert SimpleType: ExecutableElement(1130) into SingleVariableDeclaration(1132) at 0", "Insert SimpleName: method(1131) into SingleVariableDeclaration(1132) at 1", "Insert SimpleName: ElementFilter(1133) into MethodInvocation(1138) at 0", "Insert SimpleName: methodsIn(1134) into MethodInvocation(1138) at 1", "Insert MethodInvocation(1137) into MethodInvocation(1138) at 2", "Insert IfStatement(1162) into Block(1163) at 0", "Insert SimpleName: Visibility(1179) into SimpleType: Visibility(1180) at 0", "Insert SimpleName: visibility(1181) into VariableDeclarationFragment(1186) at 0", "Insert MethodInvocation(1185) into VariableDeclarationFragment(1186) at 1", "Insert SimpleName: PRIVATE(1189) into SwitchCase(1190) at 0", "Insert BooleanLiteral: false(1191) into ReturnStatement(1192) at 0", "Insert SimpleName: DEFAULT(1193) into SwitchCase(1194) at 0", "Insert MethodInvocation(1200) into ReturnStatement(1201) at 0", "Insert BooleanLiteral: true(1203) into ReturnStatement(1204) at 0", "Insert QualifiedName: javax.annotation.processing.AbstractProcessor(893) into MemberRef(895) at 0", "Insert SimpleName: processingEnv(894) into MemberRef(895) at 1", "Insert SimpleName: SetMultimap(921) into SimpleType: SetMultimap(922) at 0", "Insert SimpleName: String(923) into SimpleType: String(924) at 0", "Insert SimpleName: ExecutableElement(925) into SimpleType: ExecutableElement(926) at 0", "Insert SimpleName: LinkedHashMultimap(929) into MethodInvocation(931) at 0", "Insert SimpleName: create(930) into MethodInvocation(931) at 1", "Insert SimpleName: getPackage(935) into MethodInvocation(937) at 0", "Insert SimpleName: type(936) into MethodInvocation(937) at 1", "Insert SimpleName: Set(942) into SimpleType: Set(943) at 0", "Insert SimpleName: ExecutableElement(944) into SimpleType: ExecutableElement(945) at 0", "Insert ParameterizedType: LinkedHashSet<ExecutableElement>(952) into ClassInstanceCreation(953) at 0", "Insert SimpleName: String(956) into SimpleType: String(957) at 0", "Insert ParameterizedType: List<ExecutableElement>(967) into VariableDeclarationStatement(977) at 0", "Insert VariableDeclarationFragment(976) into VariableDeclarationStatement(977) at 1", "Insert VariableDeclarationExpression(982) into ForStatement(1038) at 0", "Insert InfixExpression: <(987) into ForStatement(1038) at 1", "Insert PostfixExpression: ++(989) into ForStatement(1038) at 2", "Insert Block(1037) into ForStatement(1038) at 3", "Insert SimpleName: Set(1041) into SimpleType: Set(1042) at 0", "Insert SimpleName: ExecutableElement(1043) into SimpleType: ExecutableElement(1044) at 0", "Insert ParameterizedType: LinkedHashSet<ExecutableElement>(1051) into ClassInstanceCreation(1055) at 0", "Insert MethodInvocation(1054) into ClassInstanceCreation(1055) at 1", "Insert SimpleName: TypeMirror(1091) into SimpleType: TypeMirror(1092) at 0", "Insert MethodInvocation(1105) into ExpressionStatement(1106) at 0", "Insert MethodInvocation(1111) into MethodInvocation(1113) at 0", "Insert SimpleName: getKind(1112) into MethodInvocation(1113) at 1", "Insert MethodInvocation(1125) into ExpressionStatement(1126) at 0", "Insert SimpleName: ExecutableElement(1129) into SimpleType: ExecutableElement(1130) at 0", "Insert SimpleName: type(1135) into MethodInvocation(1137) at 0", "Insert SimpleName: getEnclosedElements(1136) into MethodInvocation(1137) at 1", "Insert InfixExpression: &&(1150) into IfStatement(1162) at 0", "Insert Block(1161) into IfStatement(1162) at 1", "Insert SimpleName: Visibility(1182) into MethodInvocation(1185) at 0", "Insert SimpleName: ofElement(1183) into MethodInvocation(1185) at 1", "Insert SimpleName: method(1184) into MethodInvocation(1185) at 2", "Insert MethodInvocation(1197) into MethodInvocation(1200) at 0", "Insert SimpleName: equals(1198) into MethodInvocation(1200) at 1", "Insert SimpleName: pkg(1199) into MethodInvocation(1200) at 2", "Insert SimpleType: LinkedHashSet(949) into ParameterizedType: LinkedHashSet<ExecutableElement>(952) at 0", "Insert SimpleType: ExecutableElement(951) into ParameterizedType: LinkedHashSet<ExecutableElement>(952) at 1", "Insert SimpleType: List(964) into ParameterizedType: List<ExecutableElement>(967) at 0", "Insert SimpleType: ExecutableElement(966) into ParameterizedType: List<ExecutableElement>(967) at 1", "Insert SimpleName: methodList(968) into VariableDeclarationFragment(976) at 0", "Insert MethodInvocation(975) into VariableDeclarationFragment(976) at 1", "Insert PrimitiveType: int(978) into VariableDeclarationExpression(982) at 0", "Insert VariableDeclarationFragment(981) into VariableDeclarationExpression(982) at 1", "Insert SimpleName: i(983) into InfixExpression: <(987) at 0", "Insert MethodInvocation(986) into InfixExpression: <(987) at 1", "Insert SimpleName: i(988) into PostfixExpression: ++(989) at 0", "Insert VariableDeclarationStatement(998) into Block(1037) at 0", "Insert ForStatement(1036) into Block(1037) at 1", "Insert SimpleType: LinkedHashSet(1048) into ParameterizedType: LinkedHashSet<ExecutableElement>(1051) at 0", "Insert SimpleType: ExecutableElement(1050) into ParameterizedType: LinkedHashSet<ExecutableElement>(1051) at 1", "Insert SimpleName: methodMap(1052) into MethodInvocation(1054) at 0", "Insert SimpleName: values(1053) into MethodInvocation(1054) at 1", "Insert SimpleName: getLocalAndInheritedMethods(1098) into MethodInvocation(1105) at 0", "Insert SimpleName: pkg(1099) into MethodInvocation(1105) at 1", "Insert MethodInvocation(1103) into MethodInvocation(1105) at 2", "Insert SimpleName: methods(1104) into MethodInvocation(1105) at 3", "Insert SimpleName: type(1109) into MethodInvocation(1111) at 0", "Insert SimpleName: getSuperclass(1110) into MethodInvocation(1111) at 1", "Insert SimpleName: getLocalAndInheritedMethods(1116) into MethodInvocation(1125) at 0", "Insert SimpleName: pkg(1117) into MethodInvocation(1125) at 1", "Insert MethodInvocation(1123) into MethodInvocation(1125) at 2", "Insert SimpleName: methods(1124) into MethodInvocation(1125) at 3", "Insert PrefixExpression: !(1145) into InfixExpression: &&(1150) at 0", "Insert MethodInvocation(1149) into InfixExpression: &&(1150) at 1", "Insert ExpressionStatement(1160) into Block(1161) at 0", "Insert SimpleName: getPackage(1195) into MethodInvocation(1197) at 0", "Insert SimpleName: method(1196) into MethodInvocation(1197) at 1", "Insert SimpleName: LinkedHashSet(948) into SimpleType: LinkedHashSet(949) at 0", "Insert SimpleName: ExecutableElement(950) into SimpleType: ExecutableElement(951) at 0", "Insert SimpleName: List(963) into SimpleType: List(964) at 0", "Insert SimpleName: ExecutableElement(965) into SimpleType: ExecutableElement(966) at 0", "Insert SimpleName: ImmutableList(969) into MethodInvocation(975) at 0", "Insert SimpleName: copyOf(970) into MethodInvocation(975) at 1", "Insert MethodInvocation(974) into MethodInvocation(975) at 2", "Insert SimpleName: i(979) into VariableDeclarationFragment(981) at 0", "Insert NumberLiteral: 0(980) into VariableDeclarationFragment(981) at 1", "Insert SimpleName: methodList(984) into MethodInvocation(986) at 0", "Insert SimpleName: size(985) into MethodInvocation(986) at 1", "Insert SimpleType: ExecutableElement(991) into VariableDeclarationStatement(998) at 0", "Insert VariableDeclarationFragment(997) into VariableDeclarationStatement(998) at 1", "Insert VariableDeclarationExpression(1005) into ForStatement(1036) at 0", "Insert InfixExpression: <(1010) into ForStatement(1036) at 1", "Insert PostfixExpression: ++(1012) into ForStatement(1036) at 2", "Insert Block(1035) into ForStatement(1036) at 3", "Insert SimpleName: LinkedHashSet(1047) into SimpleType: LinkedHashSet(1048) at 0", "Insert SimpleName: ExecutableElement(1049) into SimpleType: ExecutableElement(1050) at 0", "Insert SimpleName: MoreTypes(1100) into MethodInvocation(1103) at 0", "Insert SimpleName: asTypeElement(1101) into MethodInvocation(1103) at 1", "Insert SimpleName: superInterface(1102) into MethodInvocation(1103) at 2", "Insert SimpleName: MoreTypes(1118) into MethodInvocation(1123) at 0", "Insert SimpleName: asTypeElement(1119) into MethodInvocation(1123) at 1", "Insert MethodInvocation(1122) into MethodInvocation(1123) at 2", "Insert MethodInvocation(1144) into PrefixExpression: !(1145) at 0", "Insert SimpleName: methodVisibleFromPackage(1146) into MethodInvocation(1149) at 0", "Insert SimpleName: method(1147) into MethodInvocation(1149) at 1", "Insert SimpleName: pkg(1148) into MethodInvocation(1149) at 2", "Insert MethodInvocation(1159) into ExpressionStatement(1160) at 0", "Insert SimpleName: methodMap(971) into MethodInvocation(974) at 0", "Insert SimpleName: get(972) into MethodInvocation(974) at 1", "Insert SimpleName: methodName(973) into MethodInvocation(974) at 2", "Insert SimpleName: ExecutableElement(990) into SimpleType: ExecutableElement(991) at 0", "Insert SimpleName: methodI(992) into VariableDeclarationFragment(997) at 0", "Insert MethodInvocation(996) into VariableDeclarationFragment(997) at 1", "Insert PrimitiveType: int(999) into VariableDeclarationExpression(1005) at 0", "Insert VariableDeclarationFragment(1004) into VariableDeclarationExpression(1005) at 1", "Insert SimpleName: j(1006) into InfixExpression: <(1010) at 0", "Insert MethodInvocation(1009) into InfixExpression: <(1010) at 1", "Insert SimpleName: j(1011) into PostfixExpression: ++(1012) at 0", "Insert VariableDeclarationStatement(1021) into Block(1035) at 0", "Insert IfStatement(1034) into Block(1035) at 1", "Insert SimpleName: type(1120) into MethodInvocation(1122) at 0", "Insert SimpleName: getSuperclass(1121) into MethodInvocation(1122) at 1", "Insert MethodInvocation(1141) into MethodInvocation(1144) at 0", "Insert SimpleName: contains(1142) into MethodInvocation(1144) at 1", "Insert QualifiedName: Modifier.STATIC(1143) into MethodInvocation(1144) at 2", "Insert SimpleName: methods(1151) into MethodInvocation(1159) at 0", "Insert SimpleName: put(1152) into MethodInvocation(1159) at 1", "Insert MethodInvocation(1157) into MethodInvocation(1159) at 2", "Insert SimpleName: method(1158) into MethodInvocation(1159) at 3", "Insert SimpleName: methodList(993) into MethodInvocation(996) at 0", "Insert SimpleName: get(994) into MethodInvocation(996) at 1", "Insert SimpleName: i(995) into MethodInvocation(996) at 2", "Insert SimpleName: j(1000) into VariableDeclarationFragment(1004) at 0", "Insert InfixExpression: +(1003) into VariableDeclarationFragment(1004) at 1", "Insert SimpleName: methodList(1007) into MethodInvocation(1009) at 0", "Insert SimpleName: size(1008) into MethodInvocation(1009) at 1", "Insert SimpleType: ExecutableElement(1014) into VariableDeclarationStatement(1021) at 0", "Insert VariableDeclarationFragment(1020) into VariableDeclarationStatement(1021) at 1", "Insert MethodInvocation(1027) into IfStatement(1034) at 0", "Insert Block(1033) into IfStatement(1034) at 1", "Insert SimpleName: method(1139) into MethodInvocation(1141) at 0", "Insert SimpleName: getModifiers(1140) into MethodInvocation(1141) at 1", "Insert MethodInvocation(1155) into MethodInvocation(1157) at 0", "Insert SimpleName: toString(1156) into MethodInvocation(1157) at 1", "Insert SimpleName: i(1001) into InfixExpression: +(1003) at 0", "Insert NumberLiteral: 1(1002) into InfixExpression: +(1003) at 1", "Insert SimpleName: ExecutableElement(1013) into SimpleType: ExecutableElement(1014) at 0", "Insert SimpleName: methodJ(1015) into VariableDeclarationFragment(1020) at 0", "Insert MethodInvocation(1019) into VariableDeclarationFragment(1020) at 1", "Insert SimpleName: elementUtils(1022) into MethodInvocation(1027) at 0", "Insert SimpleName: overrides(1023) into MethodInvocation(1027) at 1", "Insert SimpleName: methodJ(1024) into MethodInvocation(1027) at 2", "Insert SimpleName: methodI(1025) into MethodInvocation(1027) at 3", "Insert SimpleName: type(1026) into MethodInvocation(1027) at 4", "Insert ExpressionStatement(1032) into Block(1033) at 0", "Insert SimpleName: method(1153) into MethodInvocation(1155) at 0", "Insert SimpleName: getSimpleName(1154) into MethodInvocation(1155) at 1", "Insert SimpleName: methodList(1016) into MethodInvocation(1019) at 0", "Insert SimpleName: get(1017) into MethodInvocation(1019) at 1", "Insert SimpleName: j(1018) into MethodInvocation(1019) at 2", "Insert MethodInvocation(1031) into ExpressionStatement(1032) at 0", "Insert SimpleName: overridden(1028) into MethodInvocation(1031) at 0", "Insert SimpleName: add(1029) into MethodInvocation(1031) at 1", "Insert SimpleName: methodI(1030) into MethodInvocation(1031) at 2"]}}, {"AutoValueProcessor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from com.google.auto.common.MoreTypes to com.google.auto.common.MoreElements.getLocalAndInheritedMethods", "operations": ["UPD QualifiedName: com.google.auto.common.MoreTypes from com.google.auto.common.MoreTypes to com.google.auto.common.MoreElements.getLocalAndInheritedMethods"]}, {"root": "UPDATE from findLocalAndInheritedMethods to getLocalAndInheritedMethods", "operations": ["UPD SimpleName: findLocalAndInheritedMethods from findLocalAndInheritedMethods to getLocalAndInheritedMethods"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.auto.common.Visibility", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.LinkedHashMultimap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.SetMultimap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.LinkedHashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.lang.model.element.PackageElement"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.lang.model.util.Elements"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: values", "DEL SimpleName: copyOf", "DEL ReturnStatement", "DEL MethodInvocation", "DEL ForStatement", "DEL MethodInvocation", "DEL SimpleType: Elements", "DEL SimpleName: ExecutableElement", "DEL NumberLiteral: 1", "DEL SimpleType: ExecutableElement", "DEL SimpleName: methodJ", "DEL ParameterizedType: LinkedHashSet<ExecutableElement>", "DEL SimpleName: type", "DEL ParameterizedType: Set<ExecutableElement>", "DEL SimpleName: methods", "DEL SimpleName: elementUtils", "DEL SimpleName: methodMap", "DEL SimpleName: size", "DEL SimpleName: LinkedHashSet", "DEL VariableDeclarationStatement", "DEL SimpleType: ExecutableElement", "DEL SimpleType: TypeElement", "DEL IfStatement", "DEL SimpleName: keySet", "DEL SimpleName: overrides", "DEL SimpleName: methodName", "DEL SimpleName: get", "DEL SimpleName: ExecutableElement", "DEL SimpleName: get", "DEL MethodInvocation", "DEL SimpleName: SetMultimap", "DEL Block", "DEL SimpleName: j", "DEL SimpleName: ExecutableElement", "DEL InfixExpression: <", "DEL SimpleName: methodList", "DEL SimpleName: LinkedHashMultimap", "DEL VariableDeclarationStatement", "DEL SimpleName: j", "DEL SimpleName: ExecutableElement", "DEL SimpleName: ExecutableElement", "DEL SimpleName: methodName", "DEL MethodInvocation", "DEL SimpleName: removeAll", "DEL ParameterizedType: Set<ExecutableElement>", "DEL VariableDeclarationExpression", "DEL SimpleType: Set", "DEL ExpressionStatement", "DEL SimpleName: methodI", "DEL InfixExpression: +", "DEL SimpleName: methodList", "DEL SimpleName: methodMap", "DEL SimpleName: i", "DEL SimpleName: TypeElement", "DEL SimpleName: methodMap", "DEL SimpleType: LinkedHashSet", "DEL SimpleName: j", "DEL SimpleType: ExecutableElement", "DEL ExpressionStatement", "DEL SimpleName: ExecutableElement", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: overridden", "DEL SimpleName: add", "DEL SimpleName: type", "DEL SimpleType: ExecutableElement", "DEL SimpleName: methodList", "DEL VariableDeclarationStatement", "DEL SimpleName: methods", "DEL SimpleName: getPackage", "DEL SimpleName: methodList", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: methodJ", "DEL EnhancedForStatement", "DEL SimpleName: ImmutableList", "DEL VariableDeclarationStatement", "DEL SimpleName: Set", "DEL SimpleType: ExecutableElement", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: methodMap", "DEL SimpleName: i", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL SimpleName: overridden", "DEL Block", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL SimpleName: Set", "DEL SimpleName: findLocalAndInheritedMethods", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL ParameterizedType: List<ExecutableElement>", "DEL SimpleName: overridden", "DEL VariableDeclarationStatement", "DEL SimpleName: ExecutableElement", "DEL Block", "DEL SimpleName: LinkedHashSet", "DEL SimpleName: List", "DEL PrimitiveType: int", "DEL SimpleName: MoreElements", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: SetMultimap", "DEL SimpleName: elementUtils", "DEL VariableDeclarationStatement", "DEL Modifier: static", "DEL ParameterizedType: SetMultimap<String,ExecutableElement>", "DEL SimpleName: create", "DEL SimpleType: ExecutableElement", "DEL SimpleName: j", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: methods", "DEL ParameterizedType: LinkedHashSet<ExecutableElement>", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: size", "DEL SimpleName: methodI", "DEL SimpleType: Set", "DEL ExpressionStatement", "DEL SimpleName: methodList", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: findPackageVisibleMethods", "DEL SimpleName: ExecutableElement", "DEL SimpleName: ExecutableElement", "DEL ParameterizedType: Set<ExecutableElement>", "DEL MethodInvocation", "DEL SimpleType: Set", "DEL SimpleName: methodMap", "DEL SingleVariableDeclaration", "DEL SimpleType: ExecutableElement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: type", "DEL PostfixExpression: ++", "DEL SimpleType: LinkedHashSet", "DEL SingleVariableDeclaration", "DEL VariableDeclarationExpression", "DEL SimpleName: Set", "DEL SimpleName: i", "DEL SimpleName: methodI", "DEL SimpleName: i", "DEL SimpleType: ExecutableElement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: type", "DEL SimpleType: String", "DEL SimpleType: ExecutableElement", "DEL SimpleName: Elements", "DEL SimpleName: get", "DEL ForStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL QualifiedName: Modifier.STATIC", "DEL Block", "DEL SimpleName: getKind", "DEL SimpleType: Visibility", "DEL SimpleType: TypeElement", "DEL SimpleName: methodsIn", "DEL SwitchCase", "DEL SimpleType: String", "DEL SimpleType: ExecutableElement", "DEL SimpleName: put", "DEL SimpleName: toString", "DEL SimpleName: ExecutableElement", "DEL SimpleName: ofElement", "DEL BreakStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: findPackageVisibleMethods", "DEL SimpleName: ExecutableElement", "DEL SimpleName: methods", "DEL SimpleName: visible", "DEL SimpleName: methods", "DEL SimpleName: PackageElement", "DEL SingleVariableDeclaration", "DEL SimpleName: ElementFilter", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL PrimitiveType: boolean", "DEL ExpressionStatement", "DEL SimpleName: getModifiers", "DEL SimpleName: visible", "DEL VariableDeclarationStatement", "DEL SimpleName: type", "DEL SimpleName: contains", "DEL SimpleName: findPackageVisibleMethods", "DEL SimpleName: type", "DEL BooleanLiteral: false", "DEL SimpleName: pkg", "DEL SimpleName: methods", "DEL SimpleName: visibility", "DEL MethodInvocation", "DEL SimpleName: pkg", "DEL SimpleName: method", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SwitchStatement", "DEL MethodInvocation", "DEL SimpleName: type", "DEL SimpleName: superInterface", "DEL SimpleName: pkg", "DEL SingleVariableDeclaration", "DEL SimpleName: SetMultimap", "DEL SimpleName: DEFAULT", "DEL SimpleName: type", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleType: PackageElement", "DEL SimpleName: method", "DEL Block", "DEL SimpleName: getEnclosedElements", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: MoreElements", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Visibility", "DEL SimpleName: Visibility", "DEL SimpleType: ExecutableElement", "DEL SimpleName: visible", "DEL SimpleName: type", "DEL ExpressionStatement", "DEL SimpleName: pkg", "DEL SimpleName: MoreTypes", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleName: method", "DEL SimpleName: getInterfaces", "DEL SwitchCase", "DEL IfStatement", "DEL SimpleName: method", "DEL ParameterizedType: SetMultimap<String,ExecutableElement>", "DEL MethodInvocation", "DEL SimpleName: TypeMirror", "DEL MethodInvocation", "DEL SimpleName: visible", "DEL SimpleName: getSimpleName", "DEL SimpleName: method", "DEL SimpleName: getSuperclass", "DEL SimpleName: superInterface", "DEL SimpleName: MoreTypes", "DEL SimpleName: getSuperclass", "DEL MethodInvocation", "DEL SimpleName: visible", "DEL SimpleName: methods", "DEL ExpressionStatement", "DEL BooleanLiteral: true", "DEL BreakStatement", "DEL SimpleType: SetMultimap", "DEL MethodInvocation", "DEL SimpleName: asTypeElement", "DEL Assignment: =", "DEL Modifier: private", "DEL SimpleName: visibility", "DEL Assignment: =", "DEL SimpleName: TypeElement", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: asTypeElement", "DEL ExpressionStatement", "DEL SimpleName: getPackage", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL SimpleName: PRIVATE", "DEL QualifiedName: TypeKind.NONE", "DEL SwitchCase", "DEL Block", "DEL Block", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL ContinueStatement", "DEL SimpleName: method", "DEL Block", "DEL MethodDeclaration", "DEL SimpleType: TypeMirror", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: findPackageVisibleMethods"]}]}}, {"AutoValueProcessor_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(2764) at 3", "Update QualifiedName: com.google.auto.common.MoreTypes(4) to com.google.auto.common.MoreElements.getLocalAndInheritedMethods", "Update SimpleName: findLocalAndInheritedMethods(1627) to getLocalAndInheritedMethods", "Delete QualifiedName: com.google.auto.common.Visibility(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.google.common.collect.LinkedHashMultimap(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: com.google.common.collect.SetMultimap(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: java.util.LinkedHashSet(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: javax.lang.model.element.PackageElement(84)", "Delete ImportDeclaration(85)", "Delete QualifiedName: javax.lang.model.util.Elements(100)", "Delete ImportDeclaration(101)", "Delete Modifier: static(1125)", "Delete SimpleName: Set(1126)", "Delete SimpleType: Set(1127)", "Delete SimpleName: ExecutableElement(1128)", "Delete SimpleType: ExecutableElement(1129)", "Delete ParameterizedType: Set<ExecutableElement>(1130)", "Delete SimpleName: findLocalAndInheritedMethods(1131)", "Delete SimpleName: TypeElement(1132)", "Delete SimpleType: TypeElement(1133)", "Delete SimpleName: type(1134)", "Delete SingleVariableDeclaration(1135)", "Delete SimpleName: Elements(1136)", "Delete SimpleType: Elements(1137)", "Delete SimpleName: elementUtils(1138)", "Delete SingleVariableDeclaration(1139)", "Delete SimpleName: SetMultimap(1140)", "Delete SimpleType: SetMultimap(1141)", "Delete SimpleName: String(1142)", "Delete SimpleType: String(1143)", "Delete SimpleName: ExecutableElement(1144)", "Delete SimpleType: ExecutableElement(1145)", "Delete ParameterizedType: SetMultimap<String,ExecutableElement>(1146)", "Delete SimpleName: methodMap(1147)", "Delete SimpleName: LinkedHashMultimap(1148)", "Delete SimpleName: create(1149)", "Delete MethodInvocation(1150)", "Delete VariableDeclarationFragment(1151)", "Delete VariableDeclarationStatement(1152)", "Delete SimpleName: findPackageVisibleMethods(1153)", "Delete SimpleName: MoreElements(1154)", "Delete SimpleName: getPackage(1155)", "Delete SimpleName: type(1156)", "Delete MethodInvocation(1157)", "Delete SimpleName: type(1158)", "Delete SimpleName: methodMap(1159)", "Delete MethodInvocation(1160)", "Delete ExpressionStatement(1161)", "Delete SimpleName: Set(1162)", "Delete SimpleType: Set(1163)", "Delete SimpleName: ExecutableElement(1164)", "Delete SimpleType: ExecutableElement(1165)", "Delete ParameterizedType: Set<ExecutableElement>(1166)", "Delete SimpleName: overridden(1167)", "Delete SimpleName: LinkedHashSet(1168)", "Delete SimpleType: LinkedHashSet(1169)", "Delete SimpleName: ExecutableElement(1170)", "Delete SimpleType: ExecutableElement(1171)", "Delete ParameterizedType: LinkedHashSet<ExecutableElement>(1172)", "Delete ClassInstanceCreation(1173)", "Delete VariableDeclarationFragment(1174)", "Delete VariableDeclarationStatement(1175)", "Delete SimpleName: String(1176)", "Delete SimpleType: String(1177)", "Delete SimpleName: methodName(1178)", "Delete SingleVariableDeclaration(1179)", "Delete SimpleName: methodMap(1180)", "Delete SimpleName: keySet(1181)", "Delete MethodInvocation(1182)", "Delete SimpleName: List(1183)", "Delete SimpleType: List(1184)", "Delete SimpleName: ExecutableElement(1185)", "Delete SimpleType: ExecutableElement(1186)", "Delete ParameterizedType: List<ExecutableElement>(1187)", "Delete SimpleName: methodList(1188)", "Delete SimpleName: ImmutableList(1189)", "Delete SimpleName: copyOf(1190)", "Delete SimpleName: methodMap(1191)", "Delete SimpleName: get(1192)", "Delete SimpleName: methodName(1193)", "Delete MethodInvocation(1194)", "Delete MethodInvocation(1195)", "Delete VariableDeclarationFragment(1196)", "Delete VariableDeclarationStatement(1197)", "Delete PrimitiveType: int(1198)", "Delete SimpleName: i(1199)", "Delete NumberLiteral: 0(1200)", "Delete VariableDeclarationFragment(1201)", "Delete VariableDeclarationExpression(1202)", "Delete SimpleName: i(1203)", "Delete SimpleName: methodList(1204)", "Delete SimpleName: size(1205)", "Delete MethodInvocation(1206)", "Delete InfixExpression: <(1207)", "Delete SimpleName: i(1208)", "Delete PostfixExpression: ++(1209)", "Delete SimpleName: ExecutableElement(1210)", "Delete SimpleType: ExecutableElement(1211)", "Delete SimpleName: methodI(1212)", "Delete SimpleName: methodList(1213)", "Delete SimpleName: get(1214)", "Delete SimpleName: i(1215)", "Delete MethodInvocation(1216)", "Delete VariableDeclarationFragment(1217)", "Delete VariableDeclarationStatement(1218)", "Delete PrimitiveType: int(1219)", "Delete SimpleName: j(1220)", "Delete SimpleName: i(1221)", "Delete NumberLiteral: 1(1222)", "Delete InfixExpression: +(1223)", "Delete VariableDeclarationFragment(1224)", "Delete VariableDeclarationExpression(1225)", "Delete SimpleName: j(1226)", "Delete SimpleName: methodList(1227)", "Delete SimpleName: size(1228)", "Delete MethodInvocation(1229)", "Delete InfixExpression: <(1230)", "Delete SimpleName: j(1231)", "Delete PostfixExpression: ++(1232)", "Delete SimpleName: ExecutableElement(1233)", "Delete SimpleType: ExecutableElement(1234)", "Delete SimpleName: methodJ(1235)", "Delete SimpleName: methodList(1236)", "Delete SimpleName: get(1237)", "Delete SimpleName: j(1238)", "Delete MethodInvocation(1239)", "Delete VariableDeclarationFragment(1240)", "Delete VariableDeclarationStatement(1241)", "Delete SimpleName: elementUtils(1242)", "Delete SimpleName: overrides(1243)", "Delete SimpleName: methodJ(1244)", "Delete SimpleName: methodI(1245)", "Delete SimpleName: type(1246)", "Delete MethodInvocation(1247)", "Delete SimpleName: overridden(1248)", "Delete SimpleName: add(1249)", "Delete SimpleName: methodI(1250)", "Delete MethodInvocation(1251)", "Delete ExpressionStatement(1252)", "Delete Block(1253)", "Delete IfStatement(1254)", "Delete Block(1255)", "Delete ForStatement(1256)", "Delete Block(1257)", "Delete ForStatement(1258)", "Delete Block(1259)", "Delete EnhancedForStatement(1260)", "Delete SimpleName: Set(1261)", "Delete SimpleType: Set(1262)", "Delete SimpleName: ExecutableElement(1263)", "Delete SimpleType: ExecutableElement(1264)", "Delete ParameterizedType: Set<ExecutableElement>(1265)", "Delete SimpleName: methods(1266)", "Delete SimpleName: LinkedHashSet(1267)", "Delete SimpleType: LinkedHashSet(1268)", "Delete SimpleName: ExecutableElement(1269)", "Delete SimpleType: ExecutableElement(1270)", "Delete ParameterizedType: LinkedHashSet<ExecutableElement>(1271)", "Delete SimpleName: methodMap(1272)", "Delete SimpleName: values(1273)", "Delete MethodInvocation(1274)", "Delete ClassInstanceCreation(1275)", "Delete VariableDeclarationFragment(1276)", "Delete VariableDeclarationStatement(1277)", "Delete SimpleName: methods(1278)", "Delete SimpleName: removeAll(1279)", "Delete SimpleName: overridden(1280)", "Delete MethodInvocation(1281)", "Delete ExpressionStatement(1282)", "Delete SimpleName: methods(1283)", "Delete ReturnStatement(1284)", "Delete Block(1285)", "Delete MethodDeclaration(1286)", "Delete Modifier: private(1287)", "Delete Modifier: static(1288)", "Delete PrimitiveType: void(1289)", "Delete SimpleName: findPackageVisibleMethods(1290)", "Delete SimpleName: PackageElement(1291)", "Delete SimpleType: PackageElement(1292)", "Delete SimpleName: pkg(1293)", "Delete SingleVariableDeclaration(1294)", "Delete SimpleName: TypeElement(1295)", "Delete SimpleType: TypeElement(1296)", "Delete SimpleName: type(1297)", "Delete SingleVariableDeclaration(1298)", "Delete SimpleName: SetMultimap(1299)", "Delete SimpleType: SetMultimap(1300)", "Delete SimpleName: String(1301)", "Delete SimpleType: String(1302)", "Delete SimpleName: ExecutableElement(1303)", "Delete SimpleType: ExecutableElement(1304)", "Delete ParameterizedType: SetMultimap<String,ExecutableElement>(1305)", "Delete SimpleName: methods(1306)", "Delete SingleVariableDeclaration(1307)", "Delete SimpleName: TypeMirror(1308)", "Delete SimpleType: TypeMirror(1309)", "Delete SimpleName: superInterface(1310)", "Delete SingleVariableDeclaration(1311)", "Delete SimpleName: type(1312)", "Delete SimpleName: getInterfaces(1313)", "Delete MethodInvocation(1314)", "Delete SimpleName: findPackageVisibleMethods(1315)", "Delete SimpleName: pkg(1316)", "Delete SimpleName: MoreTypes(1317)", "Delete SimpleName: asTypeElement(1318)", "Delete SimpleName: superInterface(1319)", "Delete MethodInvocation(1320)", "Delete SimpleName: methods(1321)", "Delete MethodInvocation(1322)", "Delete ExpressionStatement(1323)", "Delete Block(1324)", "Delete EnhancedForStatement(1325)", "Delete SimpleName: type(1326)", "Delete SimpleName: getSuperclass(1327)", "Delete MethodInvocation(1328)", "Delete SimpleName: getKind(1329)", "Delete MethodInvocation(1330)", "Delete QualifiedName: TypeKind.NONE(1331)", "Delete InfixExpression: !=(1332)", "Delete SimpleName: findPackageVisibleMethods(1333)", "Delete SimpleName: pkg(1334)", "Delete SimpleName: MoreTypes(1335)", "Delete SimpleName: asTypeElement(1336)", "Delete SimpleName: type(1337)", "Delete SimpleName: getSuperclass(1338)", "Delete MethodInvocation(1339)", "Delete MethodInvocation(1340)", "Delete SimpleName: methods(1341)", "Delete MethodInvocation(1342)", "Delete ExpressionStatement(1343)", "Delete Block(1344)", "Delete IfStatement(1345)", "Delete SimpleName: ExecutableElement(1346)", "Delete SimpleType: ExecutableElement(1347)", "Delete SimpleName: method(1348)", "Delete SingleVariableDeclaration(1349)", "Delete SimpleName: ElementFilter(1350)", "Delete SimpleName: methodsIn(1351)", "Delete SimpleName: type(1352)", "Delete SimpleName: getEnclosedElements(1353)", "Delete MethodInvocation(1354)", "Delete MethodInvocation(1355)", "Delete SimpleName: method(1356)", "Delete SimpleName: getModifiers(1357)", "Delete MethodInvocation(1358)", "Delete SimpleName: contains(1359)", "Delete QualifiedName: Modifier.STATIC(1360)", "Delete MethodInvocation(1361)", "Delete ContinueStatement(1362)", "Delete Block(1363)", "Delete IfStatement(1364)", "Delete SimpleName: Visibility(1365)", "Delete SimpleType: Visibility(1366)", "Delete SimpleName: visibility(1367)", "Delete SimpleName: Visibility(1368)", "Delete SimpleName: ofElement(1369)", "Delete SimpleName: method(1370)", "Delete MethodInvocation(1371)", "Delete VariableDeclarationFragment(1372)", "Delete VariableDeclarationStatement(1373)", "Delete PrimitiveType: boolean(1374)", "Delete SimpleName: visible(1375)", "Delete VariableDeclarationFragment(1376)", "Delete VariableDeclarationStatement(1377)", "Delete SimpleName: visibility(1378)", "Delete SimpleName: PRIVATE(1379)", "Delete SwitchCase(1380)", "Delete SimpleName: visible(1381)", "Delete BooleanLiteral: false(1382)", "Delete Assignment: =(1383)", "Delete ExpressionStatement(1384)", "Delete BreakStatement(1385)", "Delete SimpleName: DEFAULT(1386)", "Delete SwitchCase(1387)", "Delete SimpleName: visible(1388)", "Delete SimpleName: MoreElements(1389)", "Delete SimpleName: getPackage(1390)", "Delete SimpleName: method(1391)", "Delete MethodInvocation(1392)", "Delete SimpleName: equals(1393)", "Delete SimpleName: pkg(1394)", "Delete MethodInvocation(1395)", "Delete Assignment: =(1396)", "Delete ExpressionStatement(1397)", "Delete BreakStatement(1398)", "Delete SwitchCase(1399)", "Delete SimpleName: visible(1400)", "Delete BooleanLiteral: true(1401)", "Delete Assignment: =(1402)", "Delete ExpressionStatement(1403)", "Delete SwitchStatement(1404)", "Delete SimpleName: visible(1405)", "Delete SimpleName: methods(1406)", "Delete SimpleName: put(1407)", "Delete SimpleName: method(1408)", "Delete SimpleName: getSimpleName(1409)", "Delete MethodInvocation(1410)", "Delete SimpleName: toString(1411)", "Delete MethodInvocation(1412)", "Delete SimpleName: method(1413)", "Delete MethodInvocation(1414)", "Delete ExpressionStatement(1415)", "Delete Block(1416)", "Delete IfStatement(1417)", "Delete Block(1418)", "Delete EnhancedForStatement(1419)", "Delete Block(1420)", "Delete MethodDeclaration(1421)"]}}, {"BuilderSpec_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.auto.common.MoreElements.getLocalAndInheritedMethods to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from findLocalAndInheritedMethods to getLocalAndInheritedMethods", "operations": ["UPD SimpleName: findLocalAndInheritedMethods from findLocalAndInheritedMethods to getLocalAndInheritedMethods"]}, {"root": "DEL SimpleName: AutoValueProcessor", "operations": ["DEL SimpleName: AutoValueProcessor"]}]}}, {"BuilderSpec_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1604) at 1", "Insert QualifiedName: com.google.auto.common.MoreElements.getLocalAndInheritedMethods(2) into ImportDeclaration(3) at 0", "Update SimpleName: findLocalAndInheritedMethods(1546) to getLocalAndInheritedMethods", "Delete SimpleName: AutoValueProcessor(1545)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}