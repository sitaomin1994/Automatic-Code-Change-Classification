{"application": "Netflix-hollow", "csha": "6b94478052a4f4910cfe38fdd3e162ceedab7ff4", "files": [{"StateTransition_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: StateTransition to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS InfixExpression: || to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: reverse to MethodDeclaration at 3", "INS SimpleName: StateTransition to SimpleType: StateTransition at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: StateTransition to SimpleType: StateTransition at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS FieldAccess to ClassInstanceCreation at 1", "INS SimpleName: isSnapshot to MethodInvocation at 0", "INS SimpleName: IllegalStateException to TagElement: @throws at 0", "INS SimpleName: fromVersion to FieldAccess at 1", "INS IfStatement to Block at 0", "INS TextElement:  if this transition isn't a delta to TagElement: @throws at 1", "INS SimpleType: StateTransition to MethodDeclaration at 2", "INS ThrowStatement to IfStatement at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS StringLiteral: \"must be a delta\" to ClassInstanceCreation at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isDiscontinous to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS FieldAccess to ClassInstanceCreation at 2", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: toVersion to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 1", "INS TagElement: @return to Javadoc at 1", "INS TagElement: @throws to Javadoc at 2", "INS SimpleType: StateTransition to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 3"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0", "MOV TagElement: @return to Javadoc at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement: . to TagElement at 4", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from @return to ", "operations": ["UPD TagElement: @return from @return to "]}, {"root": "UPDATE from in an existing chain. This transition doesn't have a from nor a to version; to in an existing chain, e.g. a state transition with neither a ", "operations": ["UPD TextElement: in an existing chain. This transition doesn't have a from nor a to version; from in an existing chain. This transition doesn't have a from nor a to version; to in an existing chain, e.g. a state transition with neither a "]}, {"root": "INS TagElement: @code to TagElement at 2", "operations": ["INS TagElement: @code to TagElement at 2", "INS TextElement:  fromVersion to TagElement: @code at 0"]}, {"root": "INS TextElement:  nor a to TagElement at 3", "operations": ["INS TextElement:  nor a to TagElement at 3"]}, {"root": "INS TagElement: @code to TagElement at 4", "operations": ["INS TextElement:  toVersion to TagElement: @code at 0", "INS TagElement: @code to TagElement at 4"]}, {"root": "INS TextElement: .<p> to TagElement at 5", "operations": ["INS TextElement: .<p> to TagElement at 5"]}, {"root": "UPDATE from calling  to Calling ", "operations": ["UPD TextElement: calling  from calling  to Calling "]}, {"root": "UPDATE from Creates a transition fully representing a transition within the delta chain, a.k.a. a delta. to Creates a transition fully representing a transition within the delta chain, a.k.a. a delta, between", "operations": ["UPD TextElement: Creates a transition fully representing a transition within the delta chain, a.k.a. a delta. from Creates a transition fully representing a transition within the delta chain, a.k.a. a delta. to Creates a transition fully representing a transition within the delta chain, a.k.a. a delta, between"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement: Creates a transition fully representing a transition within the delta chain, a.k.a. a delta. to TagElement at 0"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @code to TagElement at 3", "MOV TagElement: @code to TagElement at 1"]}, {"root": "UPDATE from  a state transition with the specified fromVersion and toVersion to  and ", "operations": ["UPD TextElement:  a state transition with the specified fromVersion and toVersion from  a state transition with the specified fromVersion and toVersion to  and "]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement:  a state transition with the specified fromVersion and toVersion to TagElement at 2"]}, {"root": "MOVE from TagElement: @return", "operations": ["MOV TagElement: @code to TagElement: @return at 4", "MOV TagElement: @code to TagElement: @return at 1"]}, {"root": "UPDATE from @toVersion to @code", "operations": ["UPD TagElement: @toVersion from @toVersion to @code"]}, {"root": "UPDATE from  a state transition with neither a  to Returns a new transition with versions swapped. Only valid on deltas.", "operations": ["UPD TextElement:  a state transition with neither a  from  a state transition with neither a  to Returns a new transition with versions swapped. Only valid on deltas."]}, {"root": "UPDATE from  nor a  to <pre>", "operations": ["UPD TextElement:  nor a  from  nor a  to <pre>"]}, {"root": "INS TextElement: <code> to TagElement: @return at 2", "operations": ["INS TextElement: <code> to TagElement: @return at 2"]}, {"root": "INS TextElement: [13,45].reverse() == [45,13] to TagElement: @return at 3", "operations": ["INS TextElement: [13,45].reverse() == [45,13] to TagElement: @return at 3"]}, {"root": "INS TextElement: </code> to TagElement: @return at 4", "operations": ["INS TextElement: </code> to TagElement: @return at 4"]}, {"root": "INS TextElement: </pre> to TagElement: @return at 5", "operations": ["INS TextElement: </pre> to TagElement: @return at 5"]}, {"root": "UPDATE from ; to ; false otherwise", "operations": ["UPD TextElement: ; from ; to ; false otherwise"]}, {"root": "INS TextElement:  toVersion to TagElement: @toVersion at 0", "operations": ["INS TextElement:  toVersion to TagElement: @toVersion at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 3", "INS StringLiteral: \" <- \" to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS ExpressionStatement to IfStatement at 2", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: isForwardDelta to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from \" <-> \" to \" -> \"", "operations": ["UPD StringLiteral: \" <-> \" from \" <-> \" to \" -> \""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: StateTransition"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  a state transition with no ", "DEL TextElement:  and the specified version as the ", "DEL TagElement: @return"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}, {"root": "DEL TagElement: @fromVersion", "operations": ["DEL TagElement: @fromVersion"]}, {"root": "DEL TagElement: @toVersion", "operations": ["DEL TagElement: @toVersion"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"StateTransition_diff": {"operations": ["Insert MethodDeclaration(48) into TypeDeclaration: class(384) at 6", "Insert MethodDeclaration(194) into TypeDeclaration: class(384) at 10", "Insert Javadoc(41) into MethodDeclaration(48) at 0", "Insert Modifier: public(42) into MethodDeclaration(48) at 1", "Insert SimpleName: StateTransition(43) into MethodDeclaration(48) at 2", "Move Block(48) into MethodDeclaration(48) at 3", "Insert Javadoc(167) into MethodDeclaration(194) at 0", "Move Modifier: public(43) into MethodDeclaration(194) at 1", "Insert SimpleType: StateTransition(170) into MethodDeclaration(194) at 2", "Insert SimpleName: reverse(171) into MethodDeclaration(194) at 3", "Insert Block(193) into MethodDeclaration(194) at 4", "Move TagElement(34) into Javadoc(41) at 0", "Insert TagElement(84) into Javadoc(85) at 0", "Update TagElement: @return(41) to ", "Move TagElement: @return(41) into Javadoc(167) at 0", "Insert TagElement: @return(163) into Javadoc(167) at 1", "Insert TagElement: @throws(166) into Javadoc(167) at 2", "Insert SimpleName: StateTransition(169) into SimpleType: StateTransition(170) at 0", "Insert IfStatement(182) into Block(193) at 0", "Insert ReturnStatement(192) into Block(193) at 1", "Update TextElement: in an existing chain. This transition doesn't have a from nor a to version;(25) to in an existing chain, e.g. a state transition with neither a ", "Insert TagElement: @code(27) into TagElement(40) at 2", "Insert TextElement:  nor a(28) into TagElement(40) at 3", "Insert TagElement: @code(30) into TagElement(40) at 4", "Insert TextElement: .<p>(31) into TagElement(40) at 5", "Update TextElement: calling (26) to Calling ", "Update TextElement: Creates a transition fully representing a transition within the delta chain, a.k.a. a delta.(85) to Creates a transition fully representing a transition within the delta chain, a.k.a. a delta, between", "Move TextElement: Creates a transition fully representing a transition within the delta chain, a.k.a. a delta.(85) into TagElement(84) at 0", "Move TagElement: @code(67) into TagElement(84) at 1", "Update TextElement:  a state transition with the specified fromVersion and toVersion(87) to  and ", "Move TextElement:  a state transition with the specified fromVersion and toVersion(87) into TagElement(84) at 2", "Move TagElement: @code(70) into TagElement(84) at 3", "Insert TextElement: .(83) into TagElement(84) at 4", "Move TagElement: @code(37) into TagElement: @return(139) at 1", "Move TagElement: @code(40) into TagElement: @return(139) at 4", "Update TagElement: @toVersion(134) to @code", "Update TextElement:  a state transition with neither a (35) to Returns a new transition with versions swapped. Only valid on deltas.", "Update TextElement:  nor a (38) to <pre>", "Insert TextElement: <code>(158) into TagElement(162) at 2", "Insert TextElement: [13,45].reverse() == [45,13](159) into TagElement(162) at 3", "Insert TextElement: </code>(160) into TagElement(162) at 4", "Insert TextElement: </pre>(161) into TagElement(162) at 5", "Insert SimpleName: IllegalStateException(164) into TagElement: @throws(166) at 0", "Insert TextElement:  if this transition isn't a delta(165) into TagElement: @throws(166) at 1", "Insert InfixExpression: ||(176) into IfStatement(182) at 0", "Insert ThrowStatement(181) into IfStatement(182) at 1", "Insert ClassInstanceCreation(191) into ReturnStatement(192) at 0", "Update TextElement: ;(203) to ; false otherwise", "Insert TextElement:  fromVersion(26) into TagElement: @code(27) at 0", "Insert TextElement:  toVersion(29) into TagElement: @code(30) at 0", "Insert TextElement:  toVersion(132) into TagElement: @code(133) at 0", "Insert MethodInvocation(173) into InfixExpression: ||(176) at 0", "Insert MethodInvocation(175) into InfixExpression: ||(176) at 1", "Insert ClassInstanceCreation(180) into ThrowStatement(181) at 0", "Insert SimpleType: StateTransition(184) into ClassInstanceCreation(191) at 0", "Insert FieldAccess(187) into ClassInstanceCreation(191) at 1", "Insert FieldAccess(190) into ClassInstanceCreation(191) at 2", "Insert SimpleName: isDiscontinous(172) into MethodInvocation(173) at 0", "Insert SimpleName: isSnapshot(174) into MethodInvocation(175) at 0", "Insert SimpleType: IllegalStateException(178) into ClassInstanceCreation(180) at 0", "Insert StringLiteral: \"must be a delta\"(179) into ClassInstanceCreation(180) at 1", "Insert SimpleName: StateTransition(183) into SimpleType: StateTransition(184) at 0", "Insert ThisExpression(185) into FieldAccess(187) at 0", "Insert SimpleName: toVersion(186) into FieldAccess(187) at 1", "Insert ThisExpression(188) into FieldAccess(190) at 0", "Insert SimpleName: fromVersion(189) into FieldAccess(190) at 1", "Insert IfStatement(348) into Block(359) at 3", "Insert SimpleName: IllegalStateException(177) into SimpleType: IllegalStateException(178) at 0", "Insert MethodInvocation(337) into IfStatement(348) at 0", "Insert ExpressionStatement(342) into IfStatement(348) at 1", "Insert ExpressionStatement(347) into IfStatement(348) at 2", "Insert SimpleName: isForwardDelta(336) into MethodInvocation(337) at 0", "Move MethodInvocation(301) into ExpressionStatement(342) at 0", "Insert MethodInvocation(346) into ExpressionStatement(347) at 0", "Update StringLiteral: \" <-> \"(300) to \" -> \"", "Insert SimpleName: sb(343) into MethodInvocation(346) at 0", "Insert SimpleName: append(344) into MethodInvocation(346) at 1", "Insert StringLiteral: \" <- \"(345) into MethodInvocation(346) at 2", "Delete Javadoc(42)", "Delete SimpleName: StateTransition(44)", "Delete MethodDeclaration(49)", "Delete TextElement:  a state transition with no (65)", "Delete TextElement:  and the specified version as the (68)", "Delete TagElement: @return(71)", "Delete TagElement(86)", "Delete TagElement: @return(88)", "Delete TagElement: @fromVersion(130)", "Delete TagElement: @toVersion(132)", "Delete ExpressionStatement(302)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}