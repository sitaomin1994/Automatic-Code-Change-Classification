{"application": "apache-commons-compress", "csha": "08113862c5dda6dfb0562d84db8db8f5f41bfa4a", "files": [{"ArchiveStreamFactory_cluster": {"actions": [{"root": "UPDATE from final OutputStream out = new FileOutputStream(output);  to final OutputStream out = Files.newOutputStream(output.toPath());", "operations": ["UPD TextElement: final OutputStream out = new FileOutputStream(output);  from final OutputStream out = new FileOutputStream(output);  to final OutputStream out = Files.newOutputStream(output.toPath());"]}, {"root": "UPDATE from IOUtils.copy(new FileInputStream(file1), os); to IOUtils.copy(Files.newInputStream(file1.toPath()), os);", "operations": ["UPD TextElement: IOUtils.copy(new FileInputStream(file1), os); from IOUtils.copy(new FileInputStream(file1), os); to IOUtils.copy(Files.newInputStream(file1.toPath()), os);"]}, {"root": "UPDATE from IOUtils.copy(new FileInputStream(file2), os); to IOUtils.copy(Files.newInputStream(file2.toPath()), os);", "operations": ["UPD TextElement: IOUtils.copy(new FileInputStream(file2), os); from IOUtils.copy(new FileInputStream(file2), os); to IOUtils.copy(Files.newInputStream(file2.toPath()), os);"]}, {"root": "UPDATE from final InputStream is = new FileInputStream(input);  to final InputStream is = Files.newInputStream(input.toPath());", "operations": ["UPD TextElement: final InputStream is = new FileInputStream(input);  from final InputStream is = new FileInputStream(input);  to final InputStream is = Files.newInputStream(input.toPath());"]}, {"root": "UPDATE from OutputStream out = new FileOutputStream(new File(dir, entry.getName())); to OutputStream out = Files.newOutputStream(dir.toPath().resolve(entry.getName()));", "operations": ["UPD TextElement: OutputStream out = new FileOutputStream(new File(dir, entry.getName())); from OutputStream out = new FileOutputStream(new File(dir, entry.getName())); to OutputStream out = Files.newOutputStream(dir.toPath().resolve(entry.getName()));"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}]}}, {"ArchiveStreamFactory_diff": {"operations": ["Update TextElement: final OutputStream out = new FileOutputStream(output); (68) to final OutputStream out = Files.newOutputStream(output.toPath());", "Update TextElement: IOUtils.copy(new FileInputStream(file1), os);(71) to IOUtils.copy(Files.newInputStream(file1.toPath()), os);", "Update TextElement: IOUtils.copy(new FileInputStream(file2), os);(74) to IOUtils.copy(Files.newInputStream(file2.toPath()), os);", "Update TextElement: final InputStream is = new FileInputStream(input); (80) to final InputStream is = Files.newInputStream(input.toPath());", "Update TextElement: OutputStream out = new FileOutputStream(new File(dir, entry.getName()));(83) to OutputStream out = Files.newOutputStream(dir.toPath().resolve(entry.getName()));", "Delete TextElement:  (685)", "Delete TextElement:  (1050)"]}}, {"Lister_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from java.io.FileInputStream to java.nio.file.Files", "operations": ["UPD QualifiedName: java.io.FileInputStream from java.io.FileInputStream to java.nio.file.Files"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: f to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: newInputStream to MethodInvocation at 1", "INS SimpleName: toPath to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: Files to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: BufferedInputStream to ClassInstanceCreation at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: FileInputStream", "DEL SimpleName: f", "DEL ClassInstanceCreation", "DEL SimpleType: FileInputStream", "DEL ClassInstanceCreation"]}]}}, {"Lister_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(198) at 5", "Update QualifiedName: java.io.FileInputStream(6) to java.nio.file.Files", "Insert ClassInstanceCreation(99) into VariableDeclarationFragment(100) at 1", "Move SimpleType: BufferedInputStream(92) into ClassInstanceCreation(99) at 0", "Insert MethodInvocation(98) into ClassInstanceCreation(99) at 1", "Insert SimpleName: Files(93) into MethodInvocation(98) at 0", "Insert SimpleName: newInputStream(94) into MethodInvocation(98) at 1", "Insert MethodInvocation(97) into MethodInvocation(98) at 2", "Insert SimpleName: f(95) into MethodInvocation(97) at 0", "Insert SimpleName: toPath(96) into MethodInvocation(97) at 1", "Delete SimpleName: FileInputStream(93)", "Delete SimpleType: FileInputStream(94)", "Delete SimpleName: f(95)", "Delete ClassInstanceCreation(96)", "Delete ClassInstanceCreation(97)"]}}, {"CompressorStreamFactory_cluster": {"actions": [{"root": "UPDATE from final OutputStream out = new FileOutputStream(output); to final OutputStream out = Files.newOutputStream(output.toPath());", "operations": ["UPD TextElement: final OutputStream out = new FileOutputStream(output); from final OutputStream out = new FileOutputStream(output); to final OutputStream out = Files.newOutputStream(output.toPath());"]}, {"root": "UPDATE from IOUtils.copy(new FileInputStream(input), cos); to IOUtils.copy(Files.newInputStream(input.toPath()), cos);", "operations": ["UPD TextElement: IOUtils.copy(new FileInputStream(input), cos); from IOUtils.copy(new FileInputStream(input), cos); to IOUtils.copy(Files.newInputStream(input.toPath()), cos);"]}, {"root": "UPDATE from final InputStream is = new FileInputStream(input); to final InputStream is = Files.newInputStream(input.toPath());", "operations": ["UPD TextElement: final InputStream is = new FileInputStream(input); from final InputStream is = new FileInputStream(input); to final InputStream is = Files.newInputStream(input.toPath());"]}, {"root": "UPDATE from IOUtils.copy(in, new FileOutputStream(output)); to IOUtils.copy(in, Files.newOutputStream(output.toPath()));", "operations": ["UPD TextElement: IOUtils.copy(in, new FileOutputStream(output)); from IOUtils.copy(in, new FileOutputStream(output)); to IOUtils.copy(in, Files.newOutputStream(output.toPath()));"]}]}}, {"CompressorStreamFactory_diff": {"operations": ["Update TextElement: final OutputStream out = new FileOutputStream(output);(85) to final OutputStream out = Files.newOutputStream(output.toPath());", "Update TextElement: IOUtils.copy(new FileInputStream(input), cos);(88) to IOUtils.copy(Files.newInputStream(input.toPath()), cos);", "Update TextElement: final InputStream is = new FileInputStream(input);(93) to final InputStream is = Files.newInputStream(input.toPath());", "Update TextElement: IOUtils.copy(in, new FileOutputStream(output));(96) to IOUtils.copy(in, Files.newOutputStream(output.toPath()));"]}}, {"FileBasedScatterGatherBackingStore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from java.io.FileInputStream to java.io.OutputStream", "operations": ["UPD QualifiedName: java.io.FileInputStream from java.io.FileInputStream to java.io.OutputStream"]}, {"root": "UPDATE from java.io.FileOutputStream to java.nio.file.Files", "operations": ["UPD QualifiedName: java.io.FileOutputStream from java.io.FileOutputStream to java.nio.file.Files"]}, {"root": "UPDATE from FileOutputStream to OutputStream", "operations": ["UPD SimpleName: FileOutputStream from FileOutputStream to OutputStream", "UPD SimpleType: FileOutputStream from FileOutputStream to OutputStream"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to CatchClause at 1", "INS SimpleType: FileNotFoundException to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS CatchClause to TryStatement at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS SimpleName: ex to ThrowStatement at 0", "INS TryStatement to Block at 1", "INS SimpleName: FileNotFoundException to SimpleType: FileNotFoundException at 0", "INS CatchClause to TryStatement at 2", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: ex to ClassInstanceCreation at 1", "INS Block to CatchClause at 1", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Files to MethodInvocation at 0", "INS SimpleName: toPath to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: newInputStream to MethodInvocation at 1", "INS SimpleName: target to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: newOutputStream to MethodInvocation at 1", "INS SimpleName: Files to MethodInvocation at 0", "INS SimpleName: target to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toPath to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: FileOutputStream", "DEL SimpleName: FileOutputStream", "DEL ClassInstanceCreation", "DEL SimpleName: target"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: FileInputStream", "DEL SimpleName: target", "DEL ClassInstanceCreation", "DEL SimpleType: FileInputStream"]}]}}, {"FileBasedScatterGatherBackingStore_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(177) at 7", "Move ImportDeclaration(9) into CompilationUnit(177) at 7", "Update QualifiedName: java.io.FileInputStream(6) to java.io.OutputStream", "Update QualifiedName: java.io.FileOutputStream(8) to java.nio.file.Files", "Update SimpleType: FileOutputStream(33) to OutputStream", "Insert Block(87) into MethodDeclaration(88) at 4", "Update SimpleName: FileOutputStream(32) to OutputStream", "Move ExpressionStatement(56) into Block(87) at 0", "Insert TryStatement(86) into Block(87) at 1", "Insert Block(66) into TryStatement(86) at 0", "Insert CatchClause(74) into TryStatement(86) at 1", "Insert CatchClause(85) into TryStatement(86) at 2", "Insert MethodInvocation(102) into ReturnStatement(103) at 0", "Move ExpressionStatement(63) into Block(66) at 0", "Insert SingleVariableDeclaration(70) into CatchClause(74) at 0", "Insert Block(73) into CatchClause(74) at 1", "Insert SingleVariableDeclaration(78) into CatchClause(85) at 0", "Insert Block(84) into CatchClause(85) at 1", "Insert SimpleName: Files(97) into MethodInvocation(102) at 0", "Insert SimpleName: newInputStream(98) into MethodInvocation(102) at 1", "Insert MethodInvocation(101) into MethodInvocation(102) at 2", "Insert SimpleType: FileNotFoundException(68) into SingleVariableDeclaration(70) at 0", "Insert SimpleName: ex(69) into SingleVariableDeclaration(70) at 1", "Insert ThrowStatement(72) into Block(73) at 0", "Insert SimpleType: IOException(76) into SingleVariableDeclaration(78) at 0", "Insert SimpleName: ex(77) into SingleVariableDeclaration(78) at 1", "Insert ThrowStatement(83) into Block(84) at 0", "Insert SimpleName: target(99) into MethodInvocation(101) at 0", "Insert SimpleName: toPath(100) into MethodInvocation(101) at 1", "Insert MethodInvocation(63) into Assignment: =(64) at 1", "Insert SimpleName: FileNotFoundException(67) into SimpleType: FileNotFoundException(68) at 0", "Insert SimpleName: ex(71) into ThrowStatement(72) at 0", "Insert SimpleName: IOException(75) into SimpleType: IOException(76) at 0", "Insert ClassInstanceCreation(82) into ThrowStatement(83) at 0", "Insert SimpleName: Files(58) into MethodInvocation(63) at 0", "Insert SimpleName: newOutputStream(59) into MethodInvocation(63) at 1", "Insert MethodInvocation(62) into MethodInvocation(63) at 2", "Insert SimpleType: RuntimeException(80) into ClassInstanceCreation(82) at 0", "Insert SimpleName: ex(81) into ClassInstanceCreation(82) at 1", "Insert SimpleName: target(60) into MethodInvocation(62) at 0", "Insert SimpleName: toPath(61) into MethodInvocation(62) at 1", "Insert SimpleName: RuntimeException(79) into SimpleType: RuntimeException(80) at 0", "Delete SimpleName: FileOutputStream(58)", "Delete SimpleType: FileOutputStream(59)", "Delete SimpleName: target(60)", "Delete ClassInstanceCreation(61)", "Delete Block(64)", "Delete SimpleName: FileInputStream(74)", "Delete SimpleType: FileInputStream(75)", "Delete SimpleName: target(76)", "Delete ClassInstanceCreation(77)"]}}, {"CpioArchiveInputStream_cluster": {"actions": [{"root": "UPDATE from new FileInputStream(new File(&quot;test.cpio&quot;))); to Files.newInputStream(Paths.get(&quot;test.cpio&quot;)));", "operations": ["UPD TextElement: new FileInputStream(new File(&quot;test.cpio&quot;))); from new FileInputStream(new File(&quot;test.cpio&quot;))); to Files.newInputStream(Paths.get(&quot;test.cpio&quot;)));"]}]}}, {"CpioArchiveInputStream_diff": {"operations": ["Update TextElement: new FileInputStream(new File(&quot;test.cpio&quot;)));(32) to Files.newInputStream(Paths.get(&quot;test.cpio&quot;)));"]}}, {"TempFileCachingStreamBridge_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from java.io.FileInputStream to java.io.FilterInputStream", "operations": ["UPD QualifiedName: java.io.FileInputStream from java.io.FileInputStream to java.io.FilterInputStream"]}, {"root": "UPDATE from java.io.FileOutputStream to java.nio.file.Files", "operations": ["UPD QualifiedName: java.io.FileOutputStream from java.io.FileOutputStream to java.nio.file.Files"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: toPath to MethodInvocation at 1", "INS SimpleName: Files to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newOutputStream to MethodInvocation at 1", "INS SimpleName: f to MethodInvocation at 0"]}, {"root": "UPDATE from FileInputStream to FilterInputStream", "operations": ["UPD SimpleType: FileInputStream from FileInputStream to FilterInputStream", "UPD SimpleName: FileInputStream from FileInputStream to FilterInputStream"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: Files to MethodInvocation at 0", "INS SimpleName: f to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newInputStream to MethodInvocation at 1", "INS SimpleName: toPath to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: FileOutputStream", "DEL SimpleName: f", "DEL SimpleType: FileOutputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleName: f", "operations": ["DEL SimpleName: f"]}]}}, {"TempFileCachingStreamBridge_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(95) at 6", "Update QualifiedName: java.io.FileInputStream(4) to java.io.FilterInputStream", "Update QualifiedName: java.io.FileOutputStream(6) to java.nio.file.Files", "Insert MethodInvocation(49) into Assignment: =(50) at 1", "Update SimpleType: FileInputStream(64) to FilterInputStream", "Insert MethodInvocation(72) into ClassInstanceCreation(90) at 1", "Insert SimpleName: Files(44) into MethodInvocation(49) at 0", "Insert SimpleName: newOutputStream(45) into MethodInvocation(49) at 1", "Insert MethodInvocation(48) into MethodInvocation(49) at 2", "Update SimpleName: FileInputStream(63) to FilterInputStream", "Insert SimpleName: Files(67) into MethodInvocation(72) at 0", "Insert SimpleName: newInputStream(68) into MethodInvocation(72) at 1", "Insert MethodInvocation(71) into MethodInvocation(72) at 2", "Insert SimpleName: f(46) into MethodInvocation(48) at 0", "Insert SimpleName: toPath(47) into MethodInvocation(48) at 1", "Insert SimpleName: f(69) into MethodInvocation(71) at 0", "Insert SimpleName: toPath(70) into MethodInvocation(71) at 1", "Delete SimpleName: FileOutputStream(44)", "Delete SimpleType: FileOutputStream(45)", "Delete SimpleName: f(46)", "Delete ClassInstanceCreation(47)", "Delete SimpleName: f(65)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}