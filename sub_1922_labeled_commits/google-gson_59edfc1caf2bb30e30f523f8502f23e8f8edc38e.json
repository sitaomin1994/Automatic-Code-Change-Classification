{"application": "google-gson", "csha": "59edfc1caf2bb30e30f523f8502f23e8f8edc38e", "files": [{"JsonWriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS SimpleName: out to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: write to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ConditionalExpression to MethodInvocation at 2", "INS SimpleName: value to MethodDeclaration at 3", "INS SimpleName: JsonWriter to SimpleType: JsonWriter at 0", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: value to ConditionalExpression at 0", "INS StringLiteral: \"true\" to ConditionalExpression at 1", "INS StringLiteral: \"false\" to ConditionalExpression at 2", "INS ExpressionStatement to Block at 1", "INS TagElement: @return to Javadoc at 1", "INS ThisExpression to ReturnStatement at 0", "INS TextElement:  this writer. to TagElement: @return at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: nullValue to MethodInvocation at 0", "INS TextElement:  value to TagElement: @code at 0", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: beforeValue to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: JsonWriter to MethodDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: writeDeferredName to MethodInvocation at 0", "INS ReturnStatement to Block at 4", "INS TagElement: @code to TagElement at 1", "INS TextElement: . to TagElement at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: Encodes  to TagElement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0"]}]}}, {"JsonWriter_diff": {"operations": ["Insert MethodDeclaration(1153) into TypeDeclaration: class(1727) at 41", "Insert Javadoc(1117) into MethodDeclaration(1153) at 0", "Insert Modifier: public(1118) into MethodDeclaration(1153) at 1", "Insert SimpleType: JsonWriter(1120) into MethodDeclaration(1153) at 2", "Insert SimpleName: value(1121) into MethodDeclaration(1153) at 3", "Insert SingleVariableDeclaration(1125) into MethodDeclaration(1153) at 4", "Insert SimpleType: IOException(1127) into MethodDeclaration(1153) at 5", "Insert Block(1152) into MethodDeclaration(1153) at 6", "Insert TagElement(1114) into Javadoc(1117) at 0", "Insert TagElement: @return(1116) into Javadoc(1117) at 1", "Insert SimpleName: JsonWriter(1119) into SimpleType: JsonWriter(1120) at 0", "Insert SimpleType: Boolean(1123) into SingleVariableDeclaration(1125) at 0", "Insert SimpleName: value(1124) into SingleVariableDeclaration(1125) at 1", "Insert SimpleName: IOException(1126) into SimpleType: IOException(1127) at 0", "Insert IfStatement(1135) into Block(1152) at 0", "Insert ExpressionStatement(1138) into Block(1152) at 1", "Insert ExpressionStatement(1141) into Block(1152) at 2", "Insert ExpressionStatement(1149) into Block(1152) at 3", "Insert ReturnStatement(1151) into Block(1152) at 4", "Insert TextElement: Encodes (1110) into TagElement(1114) at 0", "Insert TagElement: @code(1112) into TagElement(1114) at 1", "Insert TextElement: .(1113) into TagElement(1114) at 2", "Insert TextElement:  this writer.(1115) into TagElement: @return(1116) at 0", "Insert SimpleName: Boolean(1122) into SimpleType: Boolean(1123) at 0", "Insert InfixExpression: ==(1130) into IfStatement(1135) at 0", "Insert Block(1134) into IfStatement(1135) at 1", "Insert MethodInvocation(1137) into ExpressionStatement(1138) at 0", "Insert MethodInvocation(1140) into ExpressionStatement(1141) at 0", "Insert MethodInvocation(1148) into ExpressionStatement(1149) at 0", "Insert ThisExpression(1150) into ReturnStatement(1151) at 0", "Insert TextElement:  value(1111) into TagElement: @code(1112) at 0", "Insert SimpleName: value(1128) into InfixExpression: ==(1130) at 0", "Insert NullLiteral(1129) into InfixExpression: ==(1130) at 1", "Insert ReturnStatement(1133) into Block(1134) at 0", "Insert SimpleName: writeDeferredName(1136) into MethodInvocation(1137) at 0", "Insert SimpleName: beforeValue(1139) into MethodInvocation(1140) at 0", "Insert SimpleName: out(1142) into MethodInvocation(1148) at 0", "Insert SimpleName: write(1143) into MethodInvocation(1148) at 1", "Insert ConditionalExpression(1147) into MethodInvocation(1148) at 2", "Insert MethodInvocation(1132) into ReturnStatement(1133) at 0", "Insert SimpleName: value(1144) into ConditionalExpression(1147) at 0", "Insert StringLiteral: \"true\"(1145) into ConditionalExpression(1147) at 1", "Insert StringLiteral: \"false\"(1146) into ConditionalExpression(1147) at 2", "Insert SimpleName: nullValue(1131) into MethodInvocation(1132) at 0"]}}, {"JsonTreeWriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 2", "INS SimpleType: JsonPrimitive to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS ExpressionStatement to Block at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS SimpleName: value to MethodDeclaration at 3", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleType: JsonWriter to MethodDeclaration at 2", "INS SimpleName: JsonPrimitive to SimpleType: JsonPrimitive at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ClassInstanceCreation to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: nullValue to MethodInvocation at 0", "INS SimpleName: value to ClassInstanceCreation at 1", "INS SimpleName: put to MethodInvocation at 0", "INS SimpleName: JsonWriter to SimpleType: JsonWriter at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"JsonTreeWriter_diff": {"operations": ["Insert MethodDeclaration(577) into TypeDeclaration: class(740) at 22", "Insert MarkerAnnotation(548) into MethodDeclaration(577) at 0", "Insert Modifier: public(549) into MethodDeclaration(577) at 1", "Insert SimpleType: JsonWriter(551) into MethodDeclaration(577) at 2", "Insert SimpleName: value(552) into MethodDeclaration(577) at 3", "Insert SingleVariableDeclaration(556) into MethodDeclaration(577) at 4", "Insert SimpleType: IOException(558) into MethodDeclaration(577) at 5", "Insert Block(576) into MethodDeclaration(577) at 6", "Insert SimpleName: Override(547) into MarkerAnnotation(548) at 0", "Insert SimpleName: JsonWriter(550) into SimpleType: JsonWriter(551) at 0", "Insert SimpleType: Boolean(554) into SingleVariableDeclaration(556) at 0", "Insert SimpleName: value(555) into SingleVariableDeclaration(556) at 1", "Insert SimpleName: IOException(557) into SimpleType: IOException(558) at 0", "Insert IfStatement(566) into Block(576) at 0", "Insert ExpressionStatement(573) into Block(576) at 1", "Insert ReturnStatement(575) into Block(576) at 2", "Insert SimpleName: Boolean(553) into SimpleType: Boolean(554) at 0", "Insert InfixExpression: ==(561) into IfStatement(566) at 0", "Insert Block(565) into IfStatement(566) at 1", "Insert MethodInvocation(572) into ExpressionStatement(573) at 0", "Insert ThisExpression(574) into ReturnStatement(575) at 0", "Insert SimpleName: value(559) into InfixExpression: ==(561) at 0", "Insert NullLiteral(560) into InfixExpression: ==(561) at 1", "Insert ReturnStatement(564) into Block(565) at 0", "Insert SimpleName: put(567) into MethodInvocation(572) at 0", "Insert ClassInstanceCreation(571) into MethodInvocation(572) at 1", "Insert MethodInvocation(563) into ReturnStatement(564) at 0", "Insert SimpleType: JsonPrimitive(569) into ClassInstanceCreation(571) at 0", "Insert SimpleName: value(570) into ClassInstanceCreation(571) at 1", "Insert SimpleName: nullValue(562) into MethodInvocation(563) at 0", "Insert SimpleName: JsonPrimitive(568) into SimpleType: JsonPrimitive(569) at 0"]}}, {"TypeAdapters_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 7", "operations": ["INS Block to MethodDeclaration at 7"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ReturnStatement", "DEL NullLiteral", "DEL IfStatement", "DEL SimpleName: nullValue", "DEL SimpleName: value", "DEL Block", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: out"]}]}}, {"TypeAdapters_diff": {"operations": ["Insert Block(525) into MethodDeclaration(526) at 7", "Move ExpressionStatement(534) into Block(525) at 0", "Delete SimpleName: value(520)", "Delete NullLiteral(521)", "Delete InfixExpression: ==(522)", "Delete SimpleName: out(523)", "Delete SimpleName: nullValue(524)", "Delete MethodInvocation(525)", "Delete ExpressionStatement(526)", "Delete ReturnStatement(527)", "Delete Block(528)", "Delete IfStatement(529)", "Delete Block(535)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}