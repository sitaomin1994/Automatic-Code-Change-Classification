{"application": "google-closure-compiler", "csha": "318ac4d48c6067883cc3a2347f24c017cca5d440", "files": [{"ClosureRewriteModule_cluster": {"actions": [{"root": "INS IfStatement to SwitchStatement at 10", "operations": ["INS IfStatement to SwitchStatement at 10"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: DiagnosticType", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"Either use short import syntax or\"", "DEL Modifier: final", "DEL InfixExpression: +", "DEL Modifier: static", "DEL StringLiteral: \"Fully qualified reference to name ''{0}'' provided by a goog.module.\\n\"", "DEL SimpleName: DiagnosticType", "DEL SimpleName: error", "DEL StringLiteral: \"JSC_QUALIFIED_REFERENCE_TO_GOOG_MODULE\"", "DEL SimpleName: QUALIFIED_REFERENCE_TO_GOOG_MODULE", "DEL StringLiteral: \" convert module to use goog.module.declareLegacyNamespace.\"", "DEL FieldDeclaration", "DEL SimpleName: DiagnosticType"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: n", "DEL SimpleName: checkQualifiedName", "DEL IfStatement", "DEL SimpleName: t", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: isQualifiedName", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: n"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL TagElement", "DEL InfixExpression: &&", "DEL SimpleName: t", "DEL SimpleName: report", "DEL SimpleName: qnameNode", "DEL SimpleName: containsModule", "DEL SimpleName: qname", "DEL SimpleName: rewriteState", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleType: NodeTraversal", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL SimpleName: qname", "DEL TextElement: Checks that imports of goog.module provided files are used correctly.", "DEL Javadoc", "DEL SimpleName: Node", "DEL Modifier: private", "DEL SimpleName: t", "DEL SimpleName: qname", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: QUALIFIED_REFERENCE_TO_GOOG_MODULE", "DEL SimpleName: qnameNode", "DEL SimpleName: checkQualifiedName", "DEL SimpleName: rewriteState", "DEL MethodInvocation", "DEL SimpleName: NodeTraversal", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleType: Node", "DEL SingleVariableDeclaration", "DEL SimpleName: qname", "DEL SimpleName: isLegacyModule", "DEL Block", "DEL SimpleName: getQualifiedName", "DEL SimpleName: qnameNode"]}]}}, {"ClosureRewriteModule_diff": {"operations": ["Insert IfStatement(1437) into SwitchStatement(1441) at 10", "Move MethodInvocation(1446) into IfStatement(1437) at 0", "Move Block(1451) into IfStatement(1437) at 1", "Delete Modifier: static(275)", "Delete Modifier: final(276)", "Delete SimpleName: DiagnosticType(277)", "Delete SimpleType: DiagnosticType(278)", "Delete SimpleName: QUALIFIED_REFERENCE_TO_GOOG_MODULE(279)", "Delete SimpleName: DiagnosticType(280)", "Delete SimpleName: error(281)", "Delete StringLiteral: \"JSC_QUALIFIED_REFERENCE_TO_GOOG_MODULE\"(282)", "Delete StringLiteral: \"Fully qualified reference to name ''{0}'' provided by a goog.module.\\n\"(283)", "Delete StringLiteral: \"Either use short import syntax or\"(284)", "Delete StringLiteral: \" convert module to use goog.module.declareLegacyNamespace.\"(285)", "Delete InfixExpression: +(286)", "Delete MethodInvocation(287)", "Delete VariableDeclarationFragment(288)", "Delete FieldDeclaration(289)", "Delete SimpleName: n(1452)", "Delete SimpleName: isQualifiedName(1453)", "Delete MethodInvocation(1454)", "Delete SimpleName: checkQualifiedName(1455)", "Delete SimpleName: t(1456)", "Delete SimpleName: n(1457)", "Delete MethodInvocation(1458)", "Delete ExpressionStatement(1459)", "Delete Block(1460)", "Delete IfStatement(1461)", "Delete IfStatement(1462)", "Delete TextElement: Checks that imports of goog.module provided files are used correctly.(1534)", "Delete TagElement(1535)", "Delete Javadoc(1536)", "Delete Modifier: private(1537)", "Delete PrimitiveType: void(1538)", "Delete SimpleName: checkQualifiedName(1539)", "Delete SimpleName: NodeTraversal(1540)", "Delete SimpleType: NodeTraversal(1541)", "Delete SimpleName: t(1542)", "Delete SingleVariableDeclaration(1543)", "Delete SimpleName: Node(1544)", "Delete SimpleType: Node(1545)", "Delete SimpleName: qnameNode(1546)", "Delete SingleVariableDeclaration(1547)", "Delete SimpleName: String(1548)", "Delete SimpleType: String(1549)", "Delete SimpleName: qname(1550)", "Delete SimpleName: qnameNode(1551)", "Delete SimpleName: getQualifiedName(1552)", "Delete MethodInvocation(1553)", "Delete VariableDeclarationFragment(1554)", "Delete VariableDeclarationStatement(1555)", "Delete SimpleName: rewriteState(1556)", "Delete SimpleName: containsModule(1557)", "Delete SimpleName: qname(1558)", "Delete MethodInvocation(1559)", "Delete SimpleName: rewriteState(1560)", "Delete SimpleName: isLegacyModule(1561)", "Delete SimpleName: qname(1562)", "Delete MethodInvocation(1563)", "Delete PrefixExpression: !(1564)", "Delete InfixExpression: &&(1565)", "Delete SimpleName: t(1566)", "Delete SimpleName: report(1567)", "Delete SimpleName: qnameNode(1568)", "Delete SimpleName: QUALIFIED_REFERENCE_TO_GOOG_MODULE(1569)", "Delete SimpleName: qname(1570)", "Delete MethodInvocation(1571)", "Delete ExpressionStatement(1572)", "Delete Block(1573)", "Delete IfStatement(1574)", "Delete Block(1575)", "Delete MethodDeclaration(1576)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}