{"application": "apache-giraph", "csha": "3793c9ef69993bf4b180b6f6b15bb2a5edde5530", "files": [{"BspService_cluster": {"actions": [{"root": "UPDATE from get to getJobId", "operations": ["UPD SimpleName: get from get to getJobId"]}, {"root": "DEL StringLiteral: \"mapred.job.id\"", "operations": ["DEL StringLiteral: \"mapred.job.id\""]}, {"root": "DEL StringLiteral: \"Unknown Job\"", "operations": ["DEL StringLiteral: \"Unknown Job\""]}]}}, {"BspService_diff": {"operations": ["Update SimpleName: get(1038) to getJobId", "Delete StringLiteral: \"mapred.job.id\"(1039)", "Delete StringLiteral: \"Unknown Job\"(1040)"]}}, {"ServerData_cluster": {"actions": [{"root": "INS SimpleName: oocEngine to ClassInstanceCreation at 2", "operations": ["INS SimpleName: oocEngine to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: oocEngine to ClassInstanceCreation at 2", "operations": ["INS SimpleName: oocEngine to ClassInstanceCreation at 2"]}, {"root": "DEL SimpleName: service", "operations": ["DEL SimpleName: service"]}]}}, {"ServerData_diff": {"operations": ["Insert SimpleName: oocEngine(938) into ClassInstanceCreation(950) at 2", "Insert SimpleName: oocEngine(899) into ClassInstanceCreation(909) at 2", "Delete SimpleName: service(549)"]}}, {"GiraphConfiguration_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: Whether the application with change or not the graph topology.", "DEL ReturnStatement", "DEL PrimitiveType: boolean", "DEL Block", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL TagElement", "DEL ThisExpression", "DEL TextElement:  true if the graph is static, false otherwise.", "DEL SimpleName: STATIC_GRAPH", "DEL SimpleName: isStaticGraph", "DEL Modifier: public", "DEL TagElement: @return", "DEL Javadoc", "DEL SimpleName: isTrue"]}]}}, {"GiraphConfiguration_diff": {"operations": ["Delete TextElement: Whether the application with change or not the graph topology.(2534)", "Delete TagElement(2535)", "Delete TextElement:  true if the graph is static, false otherwise.(2536)", "Delete TagElement: @return(2537)", "Delete Javadoc(2538)", "Delete Modifier: public(2539)", "Delete PrimitiveType: boolean(2540)", "Delete SimpleName: isStaticGraph(2541)", "Delete SimpleName: STATIC_GRAPH(2542)", "Delete SimpleName: isTrue(2543)", "Delete ThisExpression(2544)", "Delete MethodInvocation(2545)", "Delete ReturnStatement(2546)", "Delete Block(2547)", "Delete MethodDeclaration(2548)"]}}, {"GiraphConstants_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 55", "operations": ["INS ImportDeclaration to CompilationUnit at 55", "INS QualifiedName: org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 56", "operations": ["INS ImportDeclaration to CompilationUnit at 56", "INS QualifiedName: org.apache.giraph.ooc.persistence.LocalDiskDataAccessor to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.giraph.ooc.OutOfCoreOracle to org.apache.giraph.ooc.policy.OutOfCoreOracle", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.OutOfCoreOracle from org.apache.giraph.ooc.OutOfCoreOracle to org.apache.giraph.ooc.policy.OutOfCoreOracle"]}, {"root": "UPDATE from org.apache.giraph.ooc.ThresholdBasedOracle to org.apache.giraph.ooc.policy.ThresholdBasedOracle", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.ThresholdBasedOracle from org.apache.giraph.ooc.ThresholdBasedOracle to org.apache.giraph.ooc.policy.ThresholdBasedOracle"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 149", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: interface at 149", "INS StringLiteral: \"Number of IO \" to InfixExpression: + at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NumberLiteral: 1 to ClassInstanceCreation at 2", "INS TextElement: disks. to TagElement at 4", "INS StringLiteral: \"giraph.numOutOfCoreThreads\" to ClassInstanceCreation at 1", "INS InfixExpression: + to ClassInstanceCreation at 3", "INS StringLiteral: \"mount points on different disks.\" to InfixExpression: + at 4", "INS SimpleType: IntConfOption to FieldDeclaration at 1", "INS TextElement: Number of IO threads used in out-of-core mechanism. If local disk is used to TagElement at 0", "INS StringLiteral: \"spill data, this should be equal to the number of available \" to InfixExpression: + at 2", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: IntConfOption to SimpleType: IntConfOption at 0", "INS TextElement: use giraph.partitionsDirectory to specify directories mounted on different to TagElement at 3", "INS SimpleName: NUM_OUT_OF_CORE_THREADS to VariableDeclarationFragment at 0", "INS TextElement: for spilling data to and reading data from, this number should be equal to to TagElement at 1", "INS StringLiteral: \"threads used in out-of-core mechanism. If using local disk to \" to InfixExpression: + at 1", "INS TextElement: the number of available disks on each machine. In such case, one should to TagElement at 2", "INS SimpleType: IntConfOption to ClassInstanceCreation at 0", "INS SimpleName: IntConfOption to SimpleType: IntConfOption at 0", "INS TagElement to Javadoc at 0", "INS StringLiteral: \"disks. In such case, use giraph.partitionsDirectory to specify \" to InfixExpression: + at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 151", "operations": ["INS ParameterizedType: ClassConfOption<OutOfCoreDataAccessor> to FieldDeclaration at 1", "INS SimpleName: ClassConfOption to SimpleType: ClassConfOption at 0", "INS SimpleName: OUT_OF_CORE_DATA_ACCESSOR to VariableDeclarationFragment at 0", "INS StringLiteral: \"giraph.outOfCoreDataAccessor\" to MethodInvocation at 2", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Data accessor resource/object  to TagElement at 0", "INS StringLiteral: \"Data accessor used in out-of-core computation (local-disk, \" to InfixExpression: + at 0", "INS SimpleType: LocalDiskDataAccessor to TypeLiteral at 0", "INS SimpleType: OutOfCoreDataAccessor to ParameterizedType: ClassConfOption<OutOfCoreDataAccessor> at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS TypeLiteral to MethodInvocation at 4", "INS FieldDeclaration to TypeDeclaration: interface at 151", "INS InfixExpression: + to MethodInvocation at 5", "INS SimpleName: LocalDiskDataAccessor to SimpleType: LocalDiskDataAccessor at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: ClassConfOption to ParameterizedType: ClassConfOption<OutOfCoreDataAccessor> at 0", "INS TypeLiteral to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS SimpleName: ClassConfOption to MethodInvocation at 0", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS SimpleType: OutOfCoreDataAccessor to TypeLiteral at 0", "INS SimpleName: create to MethodInvocation at 1", "INS StringLiteral: \"in-memory, HDFS, etc.)\" to InfixExpression: + at 1"]}]}}, {"GiraphConstants_diff": {"operations": ["Insert ImportDeclaration(111) into CompilationUnit(3216) at 55", "Insert ImportDeclaration(113) into CompilationUnit(3216) at 56", "Insert QualifiedName: org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor(110) into ImportDeclaration(111) at 0", "Insert QualifiedName: org.apache.giraph.ooc.persistence.LocalDiskDataAccessor(112) into ImportDeclaration(113) at 0", "Update QualifiedName: org.apache.giraph.ooc.OutOfCoreOracle(110) to org.apache.giraph.ooc.policy.OutOfCoreOracle", "Update QualifiedName: org.apache.giraph.ooc.ThresholdBasedOracle(112) to org.apache.giraph.ooc.policy.ThresholdBasedOracle", "Insert FieldDeclaration(2617) into TypeDeclaration: interface(3215) at 149", "Insert FieldDeclaration(2655) into TypeDeclaration: interface(3215) at 151", "Insert Javadoc(2601) into FieldDeclaration(2617) at 0", "Insert SimpleType: IntConfOption(2603) into FieldDeclaration(2617) at 1", "Insert VariableDeclarationFragment(2616) into FieldDeclaration(2617) at 2", "Insert Javadoc(2634) into FieldDeclaration(2655) at 0", "Insert ParameterizedType: ClassConfOption<OutOfCoreDataAccessor>(2639) into FieldDeclaration(2655) at 1", "Insert VariableDeclarationFragment(2654) into FieldDeclaration(2655) at 2", "Insert TagElement(2600) into Javadoc(2601) at 0", "Insert SimpleName: IntConfOption(2602) into SimpleType: IntConfOption(2603) at 0", "Insert SimpleName: NUM_OUT_OF_CORE_THREADS(2604) into VariableDeclarationFragment(2616) at 0", "Insert ClassInstanceCreation(2615) into VariableDeclarationFragment(2616) at 1", "Insert TagElement(2633) into Javadoc(2634) at 0", "Insert SimpleType: ClassConfOption(2636) into ParameterizedType: ClassConfOption<OutOfCoreDataAccessor>(2639) at 0", "Insert SimpleType: OutOfCoreDataAccessor(2638) into ParameterizedType: ClassConfOption<OutOfCoreDataAccessor>(2639) at 1", "Insert SimpleName: OUT_OF_CORE_DATA_ACCESSOR(2640) into VariableDeclarationFragment(2654) at 0", "Insert MethodInvocation(2653) into VariableDeclarationFragment(2654) at 1", "Insert TextElement: Number of IO threads used in out-of-core mechanism. If local disk is used(2595) into TagElement(2600) at 0", "Insert TextElement: for spilling data to and reading data from, this number should be equal to(2596) into TagElement(2600) at 1", "Insert TextElement: the number of available disks on each machine. In such case, one should(2597) into TagElement(2600) at 2", "Insert TextElement: use giraph.partitionsDirectory to specify directories mounted on different(2598) into TagElement(2600) at 3", "Insert TextElement: disks.(2599) into TagElement(2600) at 4", "Insert SimpleType: IntConfOption(2606) into ClassInstanceCreation(2615) at 0", "Insert StringLiteral: \"giraph.numOutOfCoreThreads\"(2607) into ClassInstanceCreation(2615) at 1", "Insert NumberLiteral: 1(2608) into ClassInstanceCreation(2615) at 2", "Insert InfixExpression: +(2614) into ClassInstanceCreation(2615) at 3", "Insert TextElement: Data accessor resource/object (2632) into TagElement(2633) at 0", "Insert SimpleName: ClassConfOption(2635) into SimpleType: ClassConfOption(2636) at 0", "Insert SimpleName: OutOfCoreDataAccessor(2637) into SimpleType: OutOfCoreDataAccessor(2638) at 0", "Insert SimpleName: ClassConfOption(2641) into MethodInvocation(2653) at 0", "Insert SimpleName: create(2642) into MethodInvocation(2653) at 1", "Insert StringLiteral: \"giraph.outOfCoreDataAccessor\"(2643) into MethodInvocation(2653) at 2", "Insert TypeLiteral(2646) into MethodInvocation(2653) at 3", "Insert TypeLiteral(2649) into MethodInvocation(2653) at 4", "Insert InfixExpression: +(2652) into MethodInvocation(2653) at 5", "Insert SimpleName: IntConfOption(2605) into SimpleType: IntConfOption(2606) at 0", "Insert StringLiteral: \"Number of IO \"(2609) into InfixExpression: +(2614) at 0", "Insert StringLiteral: \"threads used in out-of-core mechanism. If using local disk to \"(2610) into InfixExpression: +(2614) at 1", "Insert StringLiteral: \"spill data, this should be equal to the number of available \"(2611) into InfixExpression: +(2614) at 2", "Insert StringLiteral: \"disks. In such case, use giraph.partitionsDirectory to specify \"(2612) into InfixExpression: +(2614) at 3", "Insert StringLiteral: \"mount points on different disks.\"(2613) into InfixExpression: +(2614) at 4", "Insert SimpleType: LocalDiskDataAccessor(2645) into TypeLiteral(2646) at 0", "Insert SimpleType: OutOfCoreDataAccessor(2648) into TypeLiteral(2649) at 0", "Insert StringLiteral: \"Data accessor used in out-of-core computation (local-disk, \"(2650) into InfixExpression: +(2652) at 0", "Insert StringLiteral: \"in-memory, HDFS, etc.)\"(2651) into InfixExpression: +(2652) at 1", "Insert SimpleName: LocalDiskDataAccessor(2644) into SimpleType: LocalDiskDataAccessor(2645) at 0", "Insert SimpleName: OutOfCoreDataAccessor(2647) into SimpleType: OutOfCoreDataAccessor(2648) at 0"]}}, {"ImmutableClassesGiraphConfiguration_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 15", "INS SimpleName: isStaticGraph to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS PrimitiveType: boolean to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 1", "INS TextElement: Is the graph static (meaning there is no mutation)?  to TagElement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 127", "operations": ["INS SimpleName: isStaticGraph to MethodDeclaration at 3", "INS TextElement: Whether the application with change or not the graph topology. to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isStaticGraph to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 1", "INS TextElement:  true if the graph is static, false otherwise. to TagElement: @return at 0", "INS TagElement to Javadoc at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 127", "INS Block to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 128", "operations": ["INS Block to MethodDeclaration at 4", "INS StringLiteral: \"UnknownJob\" to MethodInvocation at 2", "INS TextElement:  job id to TagElement: @return at 0", "INS Modifier: public to MethodDeclaration at 1", "INS StringLiteral: \"mapred.job.id\" to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS TagElement: @return to Javadoc at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 128", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getJobId to MethodDeclaration at 3", "INS ReturnStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: GiraphConstants.STATIC_GRAPH to MethodInvocation at 0", "INS SimpleName: isStaticGraph to Assignment: = at 0", "INS ThisExpression to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 6"]}]}}, {"ImmutableClassesGiraphConfiguration_diff": {"operations": ["Insert FieldDeclaration(277) into TypeDeclaration: class(3707) at 15", "Insert MethodDeclaration(3692) into TypeDeclaration: class(3707) at 127", "Insert MethodDeclaration(3706) into TypeDeclaration: class(3707) at 128", "Insert Javadoc(271) into FieldDeclaration(277) at 0", "Insert Modifier: private(272) into FieldDeclaration(277) at 1", "Insert Modifier: final(273) into FieldDeclaration(277) at 2", "Insert PrimitiveType: boolean(274) into FieldDeclaration(277) at 3", "Insert VariableDeclarationFragment(276) into FieldDeclaration(277) at 4", "Insert Javadoc(3685) into MethodDeclaration(3692) at 0", "Insert Modifier: public(3686) into MethodDeclaration(3692) at 1", "Insert PrimitiveType: boolean(3687) into MethodDeclaration(3692) at 2", "Insert SimpleName: isStaticGraph(3688) into MethodDeclaration(3692) at 3", "Insert Block(3691) into MethodDeclaration(3692) at 4", "Insert Javadoc(3695) into MethodDeclaration(3706) at 0", "Insert Modifier: public(3696) into MethodDeclaration(3706) at 1", "Insert SimpleType: String(3698) into MethodDeclaration(3706) at 2", "Insert SimpleName: getJobId(3699) into MethodDeclaration(3706) at 3", "Insert Block(3705) into MethodDeclaration(3706) at 4", "Insert TagElement(270) into Javadoc(271) at 0", "Insert SimpleName: isStaticGraph(275) into VariableDeclarationFragment(276) at 0", "Insert ExpressionStatement(343) into Block(358) at 6", "Insert TagElement(3682) into Javadoc(3685) at 0", "Insert TagElement: @return(3684) into Javadoc(3685) at 1", "Insert ReturnStatement(3690) into Block(3691) at 0", "Insert TagElement: @return(3694) into Javadoc(3695) at 0", "Insert SimpleName: String(3697) into SimpleType: String(3698) at 0", "Insert ReturnStatement(3704) into Block(3705) at 0", "Insert TextElement: Is the graph static (meaning there is no mutation)? (269) into TagElement(270) at 0", "Insert Assignment: =(342) into ExpressionStatement(343) at 0", "Insert TextElement: Whether the application with change or not the graph topology.(3681) into TagElement(3682) at 0", "Insert TextElement:  true if the graph is static, false otherwise.(3683) into TagElement: @return(3684) at 0", "Insert SimpleName: isStaticGraph(3689) into ReturnStatement(3690) at 0", "Insert TextElement:  job id(3693) into TagElement: @return(3694) at 0", "Insert MethodInvocation(3703) into ReturnStatement(3704) at 0", "Insert SimpleName: isStaticGraph(337) into Assignment: =(342) at 0", "Insert MethodInvocation(341) into Assignment: =(342) at 1", "Insert SimpleName: get(3700) into MethodInvocation(3703) at 0", "Insert StringLiteral: \"mapred.job.id\"(3701) into MethodInvocation(3703) at 1", "Insert StringLiteral: \"UnknownJob\"(3702) into MethodInvocation(3703) at 2", "Insert QualifiedName: GiraphConstants.STATIC_GRAPH(338) into MethodInvocation(341) at 0", "Insert SimpleName: get(339) into MethodInvocation(341) at 1", "Insert ThisExpression(340) into MethodInvocation(341) at 2"]}}, {"GraphTaskManager_cluster": {"actions": [{"root": "INS ConditionalExpression to ReturnStatement at 0", "operations": ["INS ConditionalExpression to ReturnStatement at 0", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS SimpleName: gcTimeMetric to InfixExpression: == at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 2"]}]}}, {"GraphTaskManager_diff": {"operations": ["Insert ConditionalExpression(3195) into ReturnStatement(3196) at 0", "Insert ParenthesizedExpression(3190) into ConditionalExpression(3195) at 0", "Insert NumberLiteral: 0(3191) into ConditionalExpression(3195) at 1", "Move MethodInvocation(3189) into ConditionalExpression(3195) at 2", "Insert InfixExpression: ==(3189) into ParenthesizedExpression(3190) at 0", "Insert SimpleName: gcTimeMetric(3187) into InfixExpression: ==(3189) at 0", "Insert NullLiteral(3188) into InfixExpression: ==(3189) at 1"]}}, {"OutOfCoreEngine_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.giraph.ooc.policy.FixedPartitionsOracle to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: org.apache.giraph.ooc.policy.OutOfCoreOracle to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.IOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.IOCommand from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.IOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 16", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TextElement: Data accessor object (DAO) used as persistence layer in out-of-core  to TagElement at 0", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS FieldDeclaration to TypeDeclaration: class at 16", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TagElement to Javadoc at 0", "INS SimpleName: dataAccessor to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: OutOfCoreDataAccessor to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS SimpleName: dataAccessor to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS SimpleType: OutOfCoreDataAccessor to MethodDeclaration at 1", "INS SimpleName: getDataAccessor to MethodDeclaration at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS QualifiedName: GiraphConstants.OUT_OF_CORE_DATA_ACCESSOR to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Class to ParameterizedType: Class<? extends OutOfCoreDataAccessor> at 0", "INS SimpleType: OutOfCoreDataAccessor to WildcardType: ? extends OutOfCoreDataAccessor at 0", "INS WildcardType: ? extends OutOfCoreDataAccessor to ParameterizedType: Class<? extends OutOfCoreDataAccessor> at 1", "INS ParameterizedType: Class<? extends OutOfCoreDataAccessor> to VariableDeclarationStatement at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS SimpleName: accessorClass to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Class to SimpleType: Class at 0"]}, {"root": "INS TryStatement to Block at 2", "operations": ["INS SimpleName: ImmutableClassesGiraphConfiguration to SimpleType: ImmutableClassesGiraphConfiguration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getConstructor to MethodInvocation at 1", "INS SimpleName: InstantiationException to SimpleType: InstantiationException at 0", "INS SimpleType: NoSuchMethodException to UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException at 0", "INS SimpleName: NoSuchMethodException to SimpleType: NoSuchMethodException at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: Constructor to SimpleType: Constructor at 0", "INS SimpleType: Constructor to ParameterizedType: Constructor<?> at 0", "INS StringLiteral: \"while creating the data accessor instance!\" to InfixExpression: + at 1", "INS SimpleType: InvocationTargetException to UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: IllegalAccessException to SimpleType: IllegalAccessException at 0", "INS TryStatement to Block at 2", "INS TypeLiteral to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to TryStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS ParameterizedType: Constructor<?> to VariableDeclarationStatement at 0", "INS SimpleType: InstantiationException to UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException at 1", "INS SimpleType: IllegalAccessException to UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException at 3", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: InvocationTargetException to SimpleType: InvocationTargetException at 0", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 0", "INS SimpleType: ImmutableClassesGiraphConfiguration to TypeLiteral at 0", "INS UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException to SingleVariableDeclaration at 0", "INS StringLiteral: \"OutOfCoreEngine: caught exception \" to InfixExpression: + at 0", "INS SimpleName: accessorClass to MethodInvocation at 0", "INS WildcardType: ? to ParameterizedType: Constructor<?> at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: constructor to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS ThisExpression to ClassInstanceCreation at 1", "INS SimpleName: numIOThreads to ClassInstanceCreation at 2", "INS ExpressionStatement to Block at 5", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: initialize to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: dataAccessor to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: dataAccessor to MethodInvocation at 0", "INS SimpleName: shutdown to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from oocIOCallableFactory to dataAccessor", "operations": ["UPD SimpleName: oocIOCallableFactory from oocIOCallableFactory to dataAccessor"]}, {"root": "UPDATE from getNumDisks to getNumAccessorThreads", "operations": ["UPD SimpleName: getNumDisks from getNumDisks to getNumAccessorThreads"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: OutOfCoreIOCallableFactory to ClassInstanceCreation at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS SimpleName: dataAccessor to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS CastExpression to Assignment: = at 1", "operations": ["INS MethodInvocation to CastExpression at 1", "INS SimpleName: OutOfCoreDataAccessor to SimpleType: OutOfCoreDataAccessor at 0", "INS SimpleName: newInstance to MethodInvocation at 1", "INS CastExpression to Assignment: = at 1", "INS SimpleName: constructor to MethodInvocation at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS SimpleType: OutOfCoreDataAccessor to CastExpression at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: conf", "DEL ThisExpression"]}]}}, {"OutOfCoreEngine_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(1329) at 15", "Insert ImportDeclaration(33) into CompilationUnit(1329) at 16", "Insert ImportDeclaration(35) into CompilationUnit(1329) at 17", "Update QualifiedName: org.apache.giraph.ooc.io.IOCommand(26) to org.apache.giraph.ooc.command.IOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand(28) to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "Insert QualifiedName: org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.apache.giraph.ooc.policy.FixedPartitionsOracle(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: org.apache.giraph.ooc.policy.OutOfCoreOracle(34) into ImportDeclaration(35) at 0", "Insert FieldDeclaration(218) into TypeDeclaration: class(1328) at 16", "Insert MethodDeclaration(1327) into TypeDeclaration: class(1328) at 50", "Insert Javadoc(211) into FieldDeclaration(218) at 0", "Insert Modifier: private(212) into FieldDeclaration(218) at 1", "Insert Modifier: final(213) into FieldDeclaration(218) at 2", "Insert SimpleType: OutOfCoreDataAccessor(215) into FieldDeclaration(218) at 3", "Insert VariableDeclarationFragment(217) into FieldDeclaration(218) at 4", "Insert Modifier: public(1320) into MethodDeclaration(1327) at 0", "Insert SimpleType: OutOfCoreDataAccessor(1322) into MethodDeclaration(1327) at 1", "Insert SimpleName: getDataAccessor(1323) into MethodDeclaration(1327) at 2", "Insert Block(1326) into MethodDeclaration(1327) at 3", "Insert TagElement(210) into Javadoc(211) at 0", "Insert SimpleName: OutOfCoreDataAccessor(214) into SimpleType: OutOfCoreDataAccessor(215) at 0", "Insert SimpleName: dataAccessor(216) into VariableDeclarationFragment(217) at 0", "Insert VariableDeclarationStatement(361) into Block(600) at 1", "Insert TryStatement(409) into Block(600) at 2", "Insert ExpressionStatement(426) into Block(600) at 4", "Insert ExpressionStatement(611) into Block(616) at 0", "Insert ExpressionStatement(647) into Block(648) at 3", "Insert SimpleName: OutOfCoreDataAccessor(1321) into SimpleType: OutOfCoreDataAccessor(1322) at 0", "Insert ReturnStatement(1325) into Block(1326) at 0", "Insert TextElement: Data accessor object (DAO) used as persistence layer in out-of-core (209) into TagElement(210) at 0", "Insert ParameterizedType: Class<? extends OutOfCoreDataAccessor>(354) into VariableDeclarationStatement(361) at 0", "Insert VariableDeclarationFragment(360) into VariableDeclarationStatement(361) at 1", "Insert Block(387) into TryStatement(409) at 0", "Insert CatchClause(408) into TryStatement(409) at 1", "Insert Assignment: =(425) into ExpressionStatement(426) at 0", "Insert MethodInvocation(610) into ExpressionStatement(611) at 0", "Insert MethodInvocation(646) into ExpressionStatement(647) at 0", "Insert SimpleName: dataAccessor(1324) into ReturnStatement(1325) at 0", "Insert SimpleType: Class(350) into ParameterizedType: Class<? extends OutOfCoreDataAccessor>(354) at 0", "Insert WildcardType: ? extends OutOfCoreDataAccessor(353) into ParameterizedType: Class<? extends OutOfCoreDataAccessor>(354) at 1", "Insert SimpleName: accessorClass(355) into VariableDeclarationFragment(360) at 0", "Insert MethodInvocation(359) into VariableDeclarationFragment(360) at 1", "Insert VariableDeclarationStatement(374) into Block(387) at 0", "Move ExpressionStatement(342) into Block(387) at 1", "Insert SingleVariableDeclaration(398) into CatchClause(408) at 0", "Insert Block(407) into CatchClause(408) at 1", "Move FieldAccess(335) into Assignment: =(425) at 0", "Insert ClassInstanceCreation(424) into Assignment: =(425) at 1", "Insert SimpleName: dataAccessor(608) into MethodInvocation(610) at 0", "Insert SimpleName: initialize(609) into MethodInvocation(610) at 1", "Insert SimpleName: dataAccessor(644) into MethodInvocation(646) at 0", "Insert SimpleName: shutdown(645) into MethodInvocation(646) at 1", "Insert SimpleName: Class(349) into SimpleType: Class(350) at 0", "Insert SimpleType: OutOfCoreDataAccessor(352) into WildcardType: ? extends OutOfCoreDataAccessor(353) at 0", "Insert QualifiedName: GiraphConstants.OUT_OF_CORE_DATA_ACCESSOR(356) into MethodInvocation(359) at 0", "Insert SimpleName: get(357) into MethodInvocation(359) at 1", "Insert SimpleName: conf(358) into MethodInvocation(359) at 2", "Insert ParameterizedType: Constructor<?>(365) into VariableDeclarationStatement(374) at 0", "Insert VariableDeclarationFragment(373) into VariableDeclarationStatement(374) at 1", "Insert UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException(396) into SingleVariableDeclaration(398) at 0", "Insert SimpleName: e(397) into SingleVariableDeclaration(398) at 1", "Insert ThrowStatement(406) into Block(407) at 0", "Update SimpleName: oocIOCallableFactory(345) to dataAccessor", "Update SimpleName: getNumDisks(346) to getNumAccessorThreads", "Move SimpleType: OutOfCoreIOCallableFactory(337) into ClassInstanceCreation(424) at 0", "Insert ThisExpression(422) into ClassInstanceCreation(424) at 1", "Insert SimpleName: numIOThreads(423) into ClassInstanceCreation(424) at 2", "Insert SimpleName: OutOfCoreDataAccessor(351) into SimpleType: OutOfCoreDataAccessor(352) at 0", "Insert SimpleType: Constructor(363) into ParameterizedType: Constructor<?>(365) at 0", "Insert WildcardType: ?(364) into ParameterizedType: Constructor<?>(365) at 1", "Insert SimpleName: constructor(366) into VariableDeclarationFragment(373) at 0", "Insert MethodInvocation(372) into VariableDeclarationFragment(373) at 1", "Insert FieldAccess(377) into Assignment: =(385) at 0", "Insert CastExpression(384) into Assignment: =(385) at 1", "Insert SimpleType: NoSuchMethodException(389) into UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException(396) at 0", "Insert SimpleType: InstantiationException(391) into UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException(396) at 1", "Insert SimpleType: InvocationTargetException(393) into UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException(396) at 2", "Insert SimpleType: IllegalAccessException(395) into UnionType: NoSuchMethodException|InstantiationException|InvocationTargetException|IllegalAccessException(396) at 3", "Insert ClassInstanceCreation(405) into ThrowStatement(406) at 0", "Insert SimpleName: Constructor(362) into SimpleType: Constructor(363) at 0", "Insert SimpleName: accessorClass(367) into MethodInvocation(372) at 0", "Insert SimpleName: getConstructor(368) into MethodInvocation(372) at 1", "Insert TypeLiteral(371) into MethodInvocation(372) at 2", "Insert ThisExpression(375) into FieldAccess(377) at 0", "Insert SimpleName: dataAccessor(376) into FieldAccess(377) at 1", "Insert SimpleType: OutOfCoreDataAccessor(379) into CastExpression(384) at 0", "Insert MethodInvocation(383) into CastExpression(384) at 1", "Insert SimpleName: NoSuchMethodException(388) into SimpleType: NoSuchMethodException(389) at 0", "Insert SimpleName: InstantiationException(390) into SimpleType: InstantiationException(391) at 0", "Insert SimpleName: InvocationTargetException(392) into SimpleType: InvocationTargetException(393) at 0", "Insert SimpleName: IllegalAccessException(394) into SimpleType: IllegalAccessException(395) at 0", "Insert SimpleType: IllegalStateException(400) into ClassInstanceCreation(405) at 0", "Insert InfixExpression: +(403) into ClassInstanceCreation(405) at 1", "Insert SimpleName: e(404) into ClassInstanceCreation(405) at 2", "Insert SimpleType: ImmutableClassesGiraphConfiguration(370) into TypeLiteral(371) at 0", "Insert SimpleName: OutOfCoreDataAccessor(378) into SimpleType: OutOfCoreDataAccessor(379) at 0", "Insert SimpleName: constructor(380) into MethodInvocation(383) at 0", "Insert SimpleName: newInstance(381) into MethodInvocation(383) at 1", "Insert SimpleName: conf(382) into MethodInvocation(383) at 2", "Insert SimpleName: IllegalStateException(399) into SimpleType: IllegalStateException(400) at 0", "Insert StringLiteral: \"OutOfCoreEngine: caught exception \"(401) into InfixExpression: +(403) at 0", "Insert StringLiteral: \"while creating the data accessor instance!\"(402) into InfixExpression: +(403) at 1", "Insert SimpleName: ImmutableClassesGiraphConfiguration(369) into SimpleType: ImmutableClassesGiraphConfiguration(370) at 0", "Delete SimpleName: conf(338)", "Delete ThisExpression(339)", "Delete ClassInstanceCreation(340)"]}}, {"OutOfCoreIOCallable_cluster": {"actions": [{"root": "UPDATE from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.IOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.IOCommand from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.IOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.WaitIOCommand to org.apache.giraph.ooc.command.WaitIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.WaitIOCommand from org.apache.giraph.ooc.io.WaitIOCommand to org.apache.giraph.ooc.command.WaitIOCommand"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: oocEngine to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getServiceWorker to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getGraphTaskManager to MethodInvocation at 1", "INS SimpleName: getSuperstepGCTime to MethodInvocation at 1", "INS SimpleName: timeInGC to VariableDeclarationFragment at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS SimpleName: timeInGC to InfixExpression: - at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getGraphTaskManager to MethodInvocation at 1", "INS InfixExpression: - to Assignment: = at 1", "INS MethodInvocation to InfixExpression: - at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: timeInGC to Assignment: = at 0", "INS SimpleName: getSuperstepGCTime to MethodInvocation at 1", "INS SimpleName: getServiceWorker to MethodInvocation at 1", "INS SimpleName: oocEngine to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 11", "operations": ["INS StringLiteral: \", bandwidth (excluding GC time)=\" to InfixExpression: + at 0", "INS SimpleName: duration to InfixExpression: - at 0", "INS SimpleName: WaitIOCommand to SimpleType: WaitIOCommand at 0", "INS NumberLiteral: 1024 to InfixExpression: / at 1", "INS InfixExpression: * to InfixExpression: / at 0", "INS ParenthesizedExpression to InfixExpression: / at 1", "INS StringLiteral: \"\" to ConditionalExpression at 1", "INS ParenthesizedExpression to InfixExpression: + at 11", "INS SimpleType: WaitIOCommand to InstanceofExpression at 1", "INS PrimitiveType: double to CastExpression at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS SimpleName: command to InstanceofExpression at 0", "INS NumberLiteral: 1000 to InfixExpression: * at 1", "INS SimpleName: format to MethodInvocation at 1", "INS InfixExpression: / to MethodInvocation at 3", "INS CastExpression to InfixExpression: / at 0", "INS SimpleName: timeInGC to InfixExpression: - at 1", "INS ParenthesizedExpression to ConditionalExpression at 2", "INS InfixExpression: / to InfixExpression: / at 0", "INS SimpleName: String to MethodInvocation at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS StringLiteral: \"%.2f\" to MethodInvocation at 2", "INS SimpleName: bytes to CastExpression at 1", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS InfixExpression: / to InfixExpression: * at 0", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS NumberLiteral: 1024 to InfixExpression: / at 1"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: Base path that this thread will write to/read from ", "DEL SimpleName: basePath", "DEL TagElement", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: String", "DEL Javadoc", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: String"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TextElement:  base path this thread will be using", "DEL TagElement: @param", "DEL SimpleName: basePath"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: basePath", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: basePath", "DEL ExpressionStatement", "DEL SimpleName: basePath", "DEL FieldAccess", "DEL ThisExpression", "DEL Assignment: ="]}, {"root": "DEL SimpleName: basePath", "operations": ["DEL SimpleName: basePath"]}]}}, {"OutOfCoreIOCallable_diff": {"operations": ["Update QualifiedName: org.apache.giraph.ooc.io.IOCommand(12) to org.apache.giraph.ooc.command.IOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand(14) to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.WaitIOCommand(16) to org.apache.giraph.ooc.command.WaitIOCommand", "Insert VariableDeclarationStatement(295) into Block(399) at 0", "Insert ExpressionStatement(328) into Block(399) at 4", "Insert PrimitiveType: long(285) into VariableDeclarationStatement(295) at 0", "Insert VariableDeclarationFragment(294) into VariableDeclarationStatement(295) at 1", "Insert Assignment: =(327) into ExpressionStatement(328) at 0", "Insert SimpleName: timeInGC(286) into VariableDeclarationFragment(294) at 0", "Insert MethodInvocation(293) into VariableDeclarationFragment(294) at 1", "Insert SimpleName: timeInGC(317) into Assignment: =(327) at 0", "Insert InfixExpression: -(326) into Assignment: =(327) at 1", "Insert MethodInvocation(291) into MethodInvocation(293) at 0", "Insert SimpleName: getSuperstepGCTime(292) into MethodInvocation(293) at 1", "Insert MethodInvocation(324) into InfixExpression: -(326) at 0", "Insert SimpleName: timeInGC(325) into InfixExpression: -(326) at 1", "Insert MethodInvocation(289) into MethodInvocation(291) at 0", "Insert SimpleName: getGraphTaskManager(290) into MethodInvocation(291) at 1", "Insert MethodInvocation(322) into MethodInvocation(324) at 0", "Insert SimpleName: getSuperstepGCTime(323) into MethodInvocation(324) at 1", "Insert SimpleName: oocEngine(287) into MethodInvocation(289) at 0", "Insert SimpleName: getServiceWorker(288) into MethodInvocation(289) at 1", "Insert MethodInvocation(320) into MethodInvocation(322) at 0", "Insert SimpleName: getGraphTaskManager(321) into MethodInvocation(322) at 1", "Insert ParenthesizedExpression(393) into InfixExpression: +(394) at 11", "Insert SimpleName: oocEngine(318) into MethodInvocation(320) at 0", "Insert SimpleName: getServiceWorker(319) into MethodInvocation(320) at 1", "Insert ConditionalExpression(392) into ParenthesizedExpression(393) at 0", "Insert ParenthesizedExpression(369) into ConditionalExpression(392) at 0", "Insert StringLiteral: \"\"(370) into ConditionalExpression(392) at 1", "Insert ParenthesizedExpression(391) into ConditionalExpression(392) at 2", "Insert InstanceofExpression(368) into ParenthesizedExpression(369) at 0", "Insert InfixExpression: +(390) into ParenthesizedExpression(391) at 0", "Insert SimpleName: command(365) into InstanceofExpression(368) at 0", "Insert SimpleType: WaitIOCommand(367) into InstanceofExpression(368) at 1", "Insert StringLiteral: \", bandwidth (excluding GC time)=\"(371) into InfixExpression: +(390) at 0", "Insert MethodInvocation(389) into InfixExpression: +(390) at 1", "Insert SimpleName: WaitIOCommand(366) into SimpleType: WaitIOCommand(367) at 0", "Insert SimpleName: String(372) into MethodInvocation(389) at 0", "Insert SimpleName: format(373) into MethodInvocation(389) at 1", "Insert StringLiteral: \"%.2f\"(374) into MethodInvocation(389) at 2", "Insert InfixExpression: /(388) into MethodInvocation(389) at 3", "Insert InfixExpression: /(386) into InfixExpression: /(388) at 0", "Insert NumberLiteral: 1024(387) into InfixExpression: /(388) at 1", "Insert InfixExpression: *(384) into InfixExpression: /(386) at 0", "Insert NumberLiteral: 1024(385) into InfixExpression: /(386) at 1", "Insert InfixExpression: /(382) into InfixExpression: *(384) at 0", "Insert NumberLiteral: 1000(383) into InfixExpression: *(384) at 1", "Insert CastExpression(377) into InfixExpression: /(382) at 0", "Insert ParenthesizedExpression(381) into InfixExpression: /(382) at 1", "Insert PrimitiveType: double(375) into CastExpression(377) at 0", "Insert SimpleName: bytes(376) into CastExpression(377) at 1", "Insert InfixExpression: -(380) into ParenthesizedExpression(381) at 0", "Insert SimpleName: duration(378) into InfixExpression: -(380) at 0", "Insert SimpleName: timeInGC(379) into InfixExpression: -(380) at 1", "Delete TextElement: Base path that this thread will write to/read from (109)", "Delete TagElement(110)", "Delete Javadoc(111)", "Delete Modifier: private(112)", "Delete Modifier: final(113)", "Delete SimpleName: String(114)", "Delete SimpleType: String(115)", "Delete SimpleName: basePath(116)", "Delete VariableDeclarationFragment(117)", "Delete FieldDeclaration(118)", "Delete SimpleName: basePath(169)", "Delete TextElement:  base path this thread will be using(170)", "Delete TagElement: @param(171)", "Delete SimpleName: String(182)", "Delete SimpleType: String(183)", "Delete SimpleName: basePath(184)", "Delete SingleVariableDeclaration(185)", "Delete ThisExpression(195)", "Delete SimpleName: basePath(196)", "Delete FieldAccess(197)", "Delete SimpleName: basePath(198)", "Delete Assignment: =(199)", "Delete ExpressionStatement(200)", "Delete SimpleName: basePath(318)"]}}, {"OutOfCoreIOCallableFactory_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS Modifier: final to FieldDeclaration at 2", "operations": ["INS Modifier: final to FieldDeclaration at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "UPDATE from numDisks to numIOThreads", "operations": ["UPD SimpleName: numDisks from numDisks to numIOThreads", "UPD SimpleName: numDisks from numDisks to numIOThreads", "UPD SimpleName: basePaths from basePaths to numIOThreads", "UPD SimpleName: numDisks from numDisks to numIOThreads", "UPD SimpleName: numDisks from numDisks to numIOThreads", "UPD SimpleName: conf from conf to numIOThreads", "UPD SimpleName: numDisks from numDisks to numIOThreads"]}, {"root": "INS PrimitiveType: int to SingleVariableDeclaration at 0", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: numIOThreads to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: numIOThreads to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from How many disks (i.e. IO threads) do we have?  to Number of threads used for IO operations ", "operations": ["UPD TextElement: How many disks (i.e. IO threads) do we have?  from How many disks (i.e. IO threads) do we have?  to Number of threads used for IO operations "]}, {"root": "UPDATE from  Configuration to  Number of IO threads used", "operations": ["UPD TextElement:  Configuration from  Configuration to  Number of IO threads used"]}, {"root": "INS SimpleName: numIOThreads to Assignment: = at 1", "operations": ["INS SimpleName: numIOThreads to Assignment: = at 1"]}, {"root": "INS SimpleName: numIOThreads to ClassInstanceCreation at 1", "operations": ["INS SimpleName: numIOThreads to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: callableId to ClassInstanceCreation at 2", "operations": ["INS SimpleName: callableId to ClassInstanceCreation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.ImmutableClassesGiraphConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.File", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions.checkState"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.PARTITIONS_DIRECTORY"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: String", "DEL ArrayType: String[]", "DEL SimpleName: basePaths", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Dimension", "DEL Modifier: private", "DEL Javadoc", "DEL TagElement", "DEL Modifier: final", "DEL SimpleName: String", "DEL TextElement: Path prefix for different disks "]}, {"root": "DEL ParameterizedType: ImmutableClassesGiraphConfiguration<?,?,?>", "operations": ["DEL SimpleName: ImmutableClassesGiraphConfiguration", "DEL SimpleType: ImmutableClassesGiraphConfiguration", "DEL WildcardType: ?", "DEL WildcardType: ?", "DEL WildcardType: ?", "DEL ParameterizedType: ImmutableClassesGiraphConfiguration<?,?,?>"]}, {"root": "DEL SimpleName: conf", "operations": ["DEL SimpleName: conf"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: String", "DEL SimpleName: userPaths", "DEL SimpleName: getArray", "DEL SimpleName: PARTITIONS_DIRECTORY", "DEL VariableDeclarationStatement", "DEL SimpleName: conf", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ArrayType: String[]", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL Assignment: =", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: numDisks", "DEL QualifiedName: userPaths.length"]}, {"root": "DEL ArrayCreation", "operations": ["DEL Dimension", "DEL SimpleName: numDisks", "DEL SimpleName: String", "DEL SimpleType: String", "DEL ArrayType: String[]", "DEL ArrayCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: ptr", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL NumberLiteral: 0"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleType: File", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: file", "DEL SimpleName: ptr", "DEL ExpressionStatement", "DEL SimpleName: conf", "DEL SimpleName: String", "DEL PrefixExpression: !", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: path", "DEL SimpleName: path", "DEL ExpressionStatement", "DEL SimpleName: basePaths", "DEL SimpleName: userPaths", "DEL SimpleName: path", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: ptr", "DEL SimpleType: File", "DEL SimpleName: File", "DEL StringLiteral: \"mapred.job.id\"", "DEL SimpleName: exists", "DEL MethodInvocation", "DEL SimpleName: mkdirs", "DEL Assignment: =", "DEL InfixExpression: +", "DEL SimpleName: get", "DEL SimpleName: checkState", "DEL ArrayAccess", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: file", "DEL StringLiteral: \"/\"", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL ClassInstanceCreation", "DEL StringLiteral: \"directory \"", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: File", "DEL StringLiteral: \"OutOfCoreIOCallableFactory: cannot create \"", "DEL SimpleName: file", "DEL EnhancedForStatement", "DEL StringLiteral: \"Unknown Job\"", "DEL SimpleType: String", "DEL SimpleName: file"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: callableId", "DEL SimpleName: basePaths"]}, {"root": "DEL SimpleName: callableId", "operations": ["DEL SimpleName: callableId"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL Block", "DEL TagElement", "DEL TextElement:  number of disks (IO threads)", "DEL TextElement: How many disks do we have?", "DEL Modifier: public", "DEL SimpleName: getNumDisks", "DEL TagElement: @return", "DEL SimpleName: numDisks", "DEL Javadoc", "DEL ReturnStatement"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: subFileName", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: path", "DEL SimpleName: delete", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: getParentFile", "DEL SimpleName: subFile", "DEL EnhancedForStatement", "DEL SimpleName: basePaths", "DEL SimpleName: getAbsoluteFile", "DEL SimpleName: file", "DEL SimpleName: subFileName", "DEL SimpleName: File", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"shutdown: cannot delete directory %s\"", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL SimpleName: file", "DEL MethodInvocation", "DEL SimpleName: File", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: path", "DEL ExpressionStatement", "DEL SimpleName: getPath", "DEL SimpleName: file", "DEL SimpleName: checkState", "DEL StringLiteral: \"shutdown: cannot delete file %s\"", "DEL SimpleName: file", "DEL SimpleName: delete", "DEL SimpleName: subFile", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: getAbsoluteFile", "DEL SimpleType: String", "DEL SimpleName: subFile", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleType: File", "DEL SimpleName: File", "DEL SimpleType: File", "DEL SimpleName: list", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: File", "DEL SimpleName: String", "DEL SimpleType: File", "DEL MethodInvocation", "DEL SimpleName: file", "DEL SimpleName: checkState", "DEL SimpleType: File"]}]}}, {"OutOfCoreIOCallableFactory_diff": {"operations": ["Move SingleVariableDeclaration(128) into MethodDeclaration(132) at 5", "Insert Modifier: final(77) into FieldDeclaration(81) at 2", "Move TagElement: @param(114) into Javadoc(99) at 3", "Move ExpressionStatement(147) into Block(131) at 5", "Update SimpleName: numDisks(86) to numIOThreads", "Insert PrimitiveType: int(106) into SingleVariableDeclaration(108) at 0", "Insert SimpleName: numIOThreads(107) into SingleVariableDeclaration(108) at 1", "Update TextElement: How many disks (i.e. IO threads) do we have? (81) to Number of threads used for IO operations ", "Update SimpleName: conf(112) to numIOThreads", "Update TextElement:  Configuration(113) to  Number of IO threads used", "Insert SimpleName: numIOThreads(118) into Assignment: =(119) at 1", "Update SimpleName: numDisks(399) to numIOThreads", "Update SimpleName: numDisks(501) to numIOThreads", "Update SimpleName: basePaths(166) to numIOThreads", "Insert SimpleName: numIOThreads(127) into ClassInstanceCreation(128) at 1", "Update SimpleName: numDisks(280) to numIOThreads", "Update SimpleName: numDisks(281) to numIOThreads", "Insert SimpleName: callableId(165) into ClassInstanceCreation(166) at 2", "Delete QualifiedName: org.apache.giraph.conf.ImmutableClassesGiraphConfiguration(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.File(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.PARTITIONS_DIRECTORY(34)", "Delete ImportDeclaration(35)", "Delete TextElement: Path prefix for different disks (89)", "Delete TagElement(90)", "Delete Javadoc(91)", "Delete Modifier: private(92)", "Delete Modifier: final(93)", "Delete SimpleName: String(94)", "Delete SimpleType: String(95)", "Delete Dimension(96)", "Delete ArrayType: String[](97)", "Delete SimpleName: basePaths(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete SimpleName: ImmutableClassesGiraphConfiguration(121)", "Delete SimpleType: ImmutableClassesGiraphConfiguration(122)", "Delete WildcardType: ?(123)", "Delete WildcardType: ?(124)", "Delete WildcardType: ?(125)", "Delete ParameterizedType: ImmutableClassesGiraphConfiguration<?,?,?>(126)", "Delete SimpleName: conf(127)", "Delete SimpleName: String(148)", "Delete SimpleType: String(149)", "Delete Dimension(150)", "Delete ArrayType: String[](151)", "Delete SimpleName: userPaths(152)", "Delete SimpleName: PARTITIONS_DIRECTORY(153)", "Delete SimpleName: getArray(154)", "Delete SimpleName: conf(155)", "Delete MethodInvocation(156)", "Delete VariableDeclarationFragment(157)", "Delete VariableDeclarationStatement(158)", "Delete ThisExpression(159)", "Delete SimpleName: numDisks(160)", "Delete FieldAccess(161)", "Delete QualifiedName: userPaths.length(162)", "Delete Assignment: =(163)", "Delete ExpressionStatement(164)", "Delete SimpleName: String(168)", "Delete SimpleType: String(169)", "Delete Dimension(170)", "Delete ArrayType: String[](171)", "Delete SimpleName: numDisks(172)", "Delete ArrayCreation(173)", "Delete PrimitiveType: int(176)", "Delete SimpleName: ptr(177)", "Delete NumberLiteral: 0(178)", "Delete VariableDeclarationFragment(179)", "Delete VariableDeclarationStatement(180)", "Delete SimpleName: String(181)", "Delete SimpleType: String(182)", "Delete SimpleName: path(183)", "Delete SingleVariableDeclaration(184)", "Delete SimpleName: userPaths(185)", "Delete SimpleName: File(186)", "Delete SimpleType: File(187)", "Delete SimpleName: file(188)", "Delete SimpleName: File(189)", "Delete SimpleType: File(190)", "Delete SimpleName: path(191)", "Delete ClassInstanceCreation(192)", "Delete VariableDeclarationFragment(193)", "Delete VariableDeclarationStatement(194)", "Delete SimpleName: file(195)", "Delete SimpleName: exists(196)", "Delete MethodInvocation(197)", "Delete PrefixExpression: !(198)", "Delete SimpleName: checkState(199)", "Delete SimpleName: file(200)", "Delete SimpleName: mkdirs(201)", "Delete MethodInvocation(202)", "Delete StringLiteral: \"OutOfCoreIOCallableFactory: cannot create \"(203)", "Delete StringLiteral: \"directory \"(204)", "Delete SimpleName: file(205)", "Delete SimpleName: getAbsolutePath(206)", "Delete MethodInvocation(207)", "Delete InfixExpression: +(208)", "Delete MethodInvocation(209)", "Delete ExpressionStatement(210)", "Delete Block(211)", "Delete IfStatement(212)", "Delete SimpleName: basePaths(213)", "Delete SimpleName: ptr(214)", "Delete ArrayAccess(215)", "Delete SimpleName: path(216)", "Delete StringLiteral: \"/\"(217)", "Delete SimpleName: conf(218)", "Delete SimpleName: get(219)", "Delete StringLiteral: \"mapred.job.id\"(220)", "Delete StringLiteral: \"Unknown Job\"(221)", "Delete MethodInvocation(222)", "Delete InfixExpression: +(223)", "Delete Assignment: =(224)", "Delete ExpressionStatement(225)", "Delete SimpleName: ptr(226)", "Delete PostfixExpression: ++(227)", "Delete ExpressionStatement(228)", "Delete Block(229)", "Delete EnhancedForStatement(230)", "Delete SimpleName: basePaths(265)", "Delete SimpleName: callableId(266)", "Delete ArrayAccess(267)", "Delete SimpleName: callableId(268)", "Delete TextElement: How many disks do we have?(435)", "Delete TagElement(436)", "Delete TextElement:  number of disks (IO threads)(437)", "Delete TagElement: @return(438)", "Delete Javadoc(439)", "Delete Modifier: public(440)", "Delete PrimitiveType: int(441)", "Delete SimpleName: getNumDisks(442)", "Delete SimpleName: numDisks(443)", "Delete ReturnStatement(444)", "Delete Block(445)", "Delete MethodDeclaration(446)", "Delete SimpleName: String(556)", "Delete SimpleType: String(557)", "Delete SimpleName: path(558)", "Delete SingleVariableDeclaration(559)", "Delete SimpleName: basePaths(560)", "Delete SimpleName: File(561)", "Delete SimpleType: File(562)", "Delete SimpleName: file(563)", "Delete SimpleName: File(564)", "Delete SimpleType: File(565)", "Delete SimpleName: path(566)", "Delete ClassInstanceCreation(567)", "Delete SimpleName: getParentFile(568)", "Delete MethodInvocation(569)", "Delete VariableDeclarationFragment(570)", "Delete VariableDeclarationStatement(571)", "Delete SimpleName: String(572)", "Delete SimpleType: String(573)", "Delete SimpleName: subFileName(574)", "Delete SingleVariableDeclaration(575)", "Delete SimpleName: file(576)", "Delete SimpleName: list(577)", "Delete MethodInvocation(578)", "Delete SimpleName: File(579)", "Delete SimpleType: File(580)", "Delete SimpleName: subFile(581)", "Delete SimpleName: File(582)", "Delete SimpleType: File(583)", "Delete SimpleName: file(584)", "Delete SimpleName: getPath(585)", "Delete MethodInvocation(586)", "Delete SimpleName: subFileName(587)", "Delete ClassInstanceCreation(588)", "Delete VariableDeclarationFragment(589)", "Delete VariableDeclarationStatement(590)", "Delete SimpleName: checkState(591)", "Delete SimpleName: subFile(592)", "Delete SimpleName: delete(593)", "Delete MethodInvocation(594)", "Delete StringLiteral: \"shutdown: cannot delete file %s\"(595)", "Delete SimpleName: subFile(596)", "Delete SimpleName: getAbsoluteFile(597)", "Delete MethodInvocation(598)", "Delete MethodInvocation(599)", "Delete ExpressionStatement(600)", "Delete Block(601)", "Delete EnhancedForStatement(602)", "Delete SimpleName: checkState(603)", "Delete SimpleName: file(604)", "Delete SimpleName: delete(605)", "Delete MethodInvocation(606)", "Delete StringLiteral: \"shutdown: cannot delete directory %s\"(607)", "Delete SimpleName: file(608)", "Delete SimpleName: getAbsoluteFile(609)", "Delete MethodInvocation(610)", "Delete MethodInvocation(611)", "Delete ExpressionStatement(612)", "Delete Block(613)", "Delete EnhancedForStatement(614)"]}}, {"OutOfCoreIOScheduler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from com.google.common.hash.Hashing to org.apache.giraph.ooc.command.IOCommand", "operations": ["UPD QualifiedName: com.google.common.hash.Hashing from com.google.common.hash.Hashing to org.apache.giraph.ooc.command.IOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.IOCommand from org.apache.giraph.ooc.io.IOCommand to org.apache.giraph.ooc.command.LoadPartitionIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.StoreDataBufferIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand from org.apache.giraph.ooc.io.LoadPartitionIOCommand to org.apache.giraph.ooc.command.StoreDataBufferIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.StoreDataBufferIOCommand to org.apache.giraph.ooc.command.StoreIncomingMessageIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.StoreDataBufferIOCommand from org.apache.giraph.ooc.io.StoreDataBufferIOCommand to org.apache.giraph.ooc.command.StoreIncomingMessageIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.StoreIncomingMessageIOCommand to org.apache.giraph.ooc.command.StorePartitionIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.StoreIncomingMessageIOCommand from org.apache.giraph.ooc.io.StoreIncomingMessageIOCommand to org.apache.giraph.ooc.command.StorePartitionIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.StorePartitionIOCommand to org.apache.giraph.ooc.command.WaitIOCommand", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.StorePartitionIOCommand from org.apache.giraph.ooc.io.StorePartitionIOCommand to org.apache.giraph.ooc.command.WaitIOCommand"]}, {"root": "UPDATE from org.apache.giraph.ooc.io.WaitIOCommand to org.apache.giraph.ooc.policy.OutOfCoreOracle", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.WaitIOCommand from org.apache.giraph.ooc.io.WaitIOCommand to org.apache.giraph.ooc.policy.OutOfCoreOracle"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getMetaPartitionManager to MethodInvocation at 1", "INS SimpleName: ownerThread to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: oocEngine to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: getOwnerThreadId to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: numDisks", "DEL Modifier: private", "DEL Modifier: final", "DEL TextElement: How many disks (i.e. IO threads) do we have? ", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL FieldDeclaration", "DEL Javadoc"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: numDisks", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleName: numDisks"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement: @return", "DEL TextElement: Get the thread id that is responsible for a particular partition", "DEL SimpleName: murmur3_32", "DEL MethodInvocation", "DEL TextElement:  id of the thread responsible for the given partition", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL ParenthesizedExpression", "DEL SimpleName: getOwnerThreadId", "DEL Modifier: public", "DEL SimpleName: numDisks", "DEL SimpleName: Hashing", "DEL InfixExpression: %", "DEL InfixExpression: +", "DEL SimpleName: partitionId", "DEL SimpleName: result", "DEL SimpleName: numDisks", "DEL PrimitiveType: int", "DEL SimpleName: result", "DEL MethodInvocation", "DEL TextElement:  id of the given partition", "DEL MethodInvocation", "DEL SimpleName: result", "DEL InfixExpression: >=", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: asInt", "DEL Javadoc", "DEL SimpleName: partitionId", "DEL SimpleName: result", "DEL SimpleName: partitionId", "DEL TagElement", "DEL Block", "DEL SimpleName: hashInt", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL TagElement: @param", "DEL ConditionalExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: ownerThread", "DEL SimpleName: getOwnerThreadId", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}]}}, {"OutOfCoreIOScheduler_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(758) at 4", "Update QualifiedName: com.google.common.hash.Hashing(2) to org.apache.giraph.ooc.command.IOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.IOCommand(8) to org.apache.giraph.ooc.command.LoadPartitionIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.LoadPartitionIOCommand(10) to org.apache.giraph.ooc.command.StoreDataBufferIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.StoreDataBufferIOCommand(12) to org.apache.giraph.ooc.command.StoreIncomingMessageIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.StoreIncomingMessageIOCommand(14) to org.apache.giraph.ooc.command.StorePartitionIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.StorePartitionIOCommand(16) to org.apache.giraph.ooc.command.WaitIOCommand", "Update QualifiedName: org.apache.giraph.ooc.io.WaitIOCommand(18) to org.apache.giraph.ooc.policy.OutOfCoreOracle", "Insert VariableDeclarationStatement(714) into Block(723) at 0", "Insert PrimitiveType: int(703) into VariableDeclarationStatement(714) at 0", "Insert VariableDeclarationFragment(713) into VariableDeclarationStatement(714) at 1", "Insert SimpleName: ownerThread(704) into VariableDeclarationFragment(713) at 0", "Insert MethodInvocation(712) into VariableDeclarationFragment(713) at 1", "Insert MethodInvocation(707) into MethodInvocation(712) at 0", "Insert SimpleName: getOwnerThreadId(708) into MethodInvocation(712) at 1", "Move MethodInvocation(760) into MethodInvocation(712) at 2", "Insert SimpleName: oocEngine(705) into MethodInvocation(707) at 0", "Insert SimpleName: getMetaPartitionManager(706) into MethodInvocation(707) at 1", "Delete TextElement: How many disks (i.e. IO threads) do we have? (96)", "Delete TagElement(97)", "Delete Javadoc(98)", "Delete Modifier: private(99)", "Delete Modifier: final(100)", "Delete PrimitiveType: int(101)", "Delete SimpleName: numDisks(102)", "Delete VariableDeclarationFragment(103)", "Delete FieldDeclaration(104)", "Delete ThisExpression(162)", "Delete SimpleName: numDisks(163)", "Delete FieldAccess(164)", "Delete SimpleName: numDisks(165)", "Delete Assignment: =(166)", "Delete ExpressionStatement(167)", "Delete TextElement: Get the thread id that is responsible for a particular partition(213)", "Delete TagElement(214)", "Delete SimpleName: partitionId(215)", "Delete TextElement:  id of the given partition(216)", "Delete TagElement: @param(217)", "Delete TextElement:  id of the thread responsible for the given partition(218)", "Delete TagElement: @return(219)", "Delete Javadoc(220)", "Delete Modifier: public(221)", "Delete PrimitiveType: int(222)", "Delete SimpleName: getOwnerThreadId(223)", "Delete PrimitiveType: int(224)", "Delete SimpleName: partitionId(225)", "Delete SingleVariableDeclaration(226)", "Delete PrimitiveType: int(227)", "Delete SimpleName: result(228)", "Delete SimpleName: Hashing(229)", "Delete SimpleName: murmur3_32(230)", "Delete MethodInvocation(231)", "Delete SimpleName: hashInt(232)", "Delete SimpleName: partitionId(233)", "Delete MethodInvocation(234)", "Delete SimpleName: asInt(235)", "Delete MethodInvocation(236)", "Delete SimpleName: numDisks(237)", "Delete InfixExpression: %(238)", "Delete VariableDeclarationFragment(239)", "Delete VariableDeclarationStatement(240)", "Delete SimpleName: result(241)", "Delete NumberLiteral: 0(242)", "Delete InfixExpression: >=(243)", "Delete ParenthesizedExpression(244)", "Delete SimpleName: result(245)", "Delete SimpleName: result(246)", "Delete SimpleName: numDisks(247)", "Delete InfixExpression: +(248)", "Delete ParenthesizedExpression(249)", "Delete ConditionalExpression(250)", "Delete ReturnStatement(251)", "Delete Block(252)", "Delete MethodDeclaration(253)", "Delete PrimitiveType: int(755)", "Delete SimpleName: ownerThread(756)", "Delete SimpleName: getOwnerThreadId(757)", "Delete MethodInvocation(761)", "Delete VariableDeclarationFragment(762)", "Delete VariableDeclarationStatement(763)"]}}, {"OutOfCoreIOStatistics_cluster": {"actions": [{"root": "UPDATE from org.apache.giraph.ooc.io.IOCommand.IOCommandType to org.apache.giraph.ooc.command.IOCommand.IOCommandType", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.io.IOCommand.IOCommandType from org.apache.giraph.ooc.io.IOCommand.IOCommandType to org.apache.giraph.ooc.command.IOCommand.IOCommandType"]}]}}, {"OutOfCoreIOStatistics_diff": {"operations": ["Update QualifiedName: org.apache.giraph.ooc.io.IOCommand.IOCommandType(10) to org.apache.giraph.ooc.command.IOCommand.IOCommandType"]}}, {"ZooKeeperManager_cluster": {"actions": [{"root": "UPDATE from get to getJobId", "operations": ["UPD SimpleName: get from get to getJobId"]}, {"root": "DEL StringLiteral: \"mapred.job.id\"", "operations": ["DEL StringLiteral: \"mapred.job.id\""]}, {"root": "DEL StringLiteral: \"Unknown Job\"", "operations": ["DEL StringLiteral: \"Unknown Job\""]}]}}, {"ZooKeeperManager_diff": {"operations": ["Update SimpleName: get(353) to getJobId", "Delete StringLiteral: \"mapred.job.id\"(354)", "Delete StringLiteral: \"Unknown Job\"(355)"]}}, {"DiskBackedEdgeStore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from java.io.DataInputStream to org.apache.giraph.ooc.persistence.DataIndex", "operations": ["UPD QualifiedName: java.io.DataInputStream from java.io.DataInputStream to org.apache.giraph.ooc.persistence.DataIndex"]}, {"root": "UPDATE from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "operations": ["UPD QualifiedName: java.io.DataOutputStream from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor"]}, {"root": "UPDATE from OutOfCoreDataManager<VertexIdEdges<I,E>> to DiskBackedDataStore<VertexIdEdges<I,E>>", "operations": ["UPD ParameterizedType: OutOfCoreDataManager<VertexIdEdges<I,E>> from OutOfCoreDataManager<VertexIdEdges<I,E>> to DiskBackedDataStore<VertexIdEdges<I,E>>"]}, {"root": "UPDATE from OutOfCoreDataManager to DiskBackedDataStore", "operations": ["UPD SimpleType: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore", "UPD SimpleName: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: IOException to MethodDeclaration at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SimpleType: DataIndex to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS Block to MethodDeclaration at 8", "INS SimpleName: oocEngine to MethodInvocation at 0", "INS SimpleName: ioThreadId to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getDataAccessor to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: prepareInput to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: inputWrapper to VariableDeclarationFragment at 0", "INS SimpleName: index to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: copy to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "UPDATE from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData", "operations": ["UPD SimpleName: addEntryToImMemoryPartitionData from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS SimpleName: oocEngine to SuperConstructorInvocation at 1"]}, {"root": "INS PrimitiveType: int to SingleVariableDeclaration at 0", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from File to DataIndex", "operations": ["UPD SimpleName: File from File to DataIndex", "UPD SimpleName: String from String to DataIndex", "UPD SimpleType: String from String to DataIndex"]}, {"root": "UPDATE from path to index", "operations": ["UPD SimpleName: path from path to index", "UPD SimpleName: file from file to index"]}, {"root": "MOVE from SuperConstructorInvocation", "operations": ["MOV SimpleName: conf to SuperConstructorInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS SimpleName: loadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS SimpleName: offloadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE to MethodInvocation at 2", "INS SimpleName: offloadBuffersProxy to MethodInvocation at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: DataIndex", "operations": ["MOV SimpleName: File to SimpleType: DataIndex at 0"]}, {"root": "UPDATE from LOG to hasPartitionDataOnFile", "operations": ["UPD SimpleName: LOG from LOG to hasPartitionDataOnFile"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: LOG to MethodInvocation at 0"]}, {"root": "UPDATE from debug to remove", "operations": ["UPD SimpleName: debug from debug to remove"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS SimpleName: hasPartitionDataOnFile to MethodInvocation at 0", "INS ExpressionStatement to Block at 10", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: partitionId to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from basePath to addIndex", "operations": ["UPD SimpleName: basePath from basePath to addIndex", "UPD SimpleName: basePath from basePath to addIndex", "UPD SimpleName: basePath from basePath to addIndex"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "UPDATE from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper", "operations": ["UPD SimpleType: FileInputStream from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: FileInputStream to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from File to OutOfCoreDataAccessor.DataOutputWrapper", "operations": ["UPD SimpleType: File from File to OutOfCoreDataAccessor.DataOutputWrapper"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: File to VariableDeclarationStatement at 0"]}, {"root": "INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0", "operations": ["INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getDataInput to MethodInvocation at 1"]}, {"root": "INS QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper to SimpleType: File at 0", "operations": ["INS QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper to SimpleType: File at 0"]}, {"root": "UPDATE from file to outputWrapper", "operations": ["UPD SimpleName: file from file to outputWrapper", "UPD SimpleName: dos from dos to outputWrapper", "UPD SimpleName: dos from dos to outputWrapper"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: file to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getDataOutput to MethodInvocation at 1"]}, {"root": "UPDATE from file to inputWrapper", "operations": ["UPD SimpleName: file from file to inputWrapper", "UPD SimpleName: dis from dis to inputWrapper"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dis to MethodInvocation at 0"]}, {"root": "UPDATE from length to finalizeInput", "operations": ["UPD SimpleName: length from length to finalizeInput"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 2", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from checkState to prepareOutput", "operations": ["UPD SimpleName: checkState from checkState to prepareOutput"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: checkState to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from createNewFile to ioThreadId", "operations": ["UPD SimpleName: createNewFile from createNewFile to ioThreadId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createNewFile to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dos to MethodInvocation at 0"]}, {"root": "UPDATE from size to finalizeOutput", "operations": ["UPD SimpleName: size from size to finalizeOutput"]}, {"root": "UPDATE from file to oocEngine", "operations": ["UPD SimpleName: file from file to oocEngine"]}, {"root": "UPDATE from getAbsoluteFile to getDataAccessor", "operations": ["UPD SimpleName: getAbsoluteFile from getAbsoluteFile to getDataAccessor"]}, {"root": "UPDATE from getAbsoluteFile to copy", "operations": ["UPD SimpleName: getAbsoluteFile from getAbsoluteFile to copy"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.BufferedInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.BufferedOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.File", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.FileOutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Preconditions.checkState", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL Modifier: private", "DEL TextElement: Out-of-core engine ", "DEL TagElement", "DEL SimpleName: OutOfCoreEngine", "DEL Javadoc", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: OutOfCoreEngine", "DEL SimpleName: oocEngine"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL SimpleName: oocEngine", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: oocEngine", "DEL FieldAccess"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL StringLiteral: \"_edge_store\"", "DEL TagElement: @param", "DEL SimpleType: String", "DEL TagElement", "DEL SimpleName: getPath", "DEL SimpleName: String", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL TextElement:  path to files specific for edge data", "DEL SimpleName: basePath", "DEL Block", "DEL InfixExpression: +", "DEL Modifier: static", "DEL SimpleName: String", "DEL ReturnStatement", "DEL TextElement: Gets the path that should be used specifically for edge data.", "DEL SimpleType: String", "DEL Javadoc", "DEL TextElement:  path prefix to build the actual path from", "DEL SimpleName: basePath", "DEL TagElement: @return", "DEL SimpleName: basePath"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: basePath"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SuperMethodInvocation", "DEL SimpleName: partitionId", "DEL MethodInvocation", "DEL SimpleName: getPath", "DEL SimpleName: loadPartitionData"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: basePath", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: offloadPartitionData", "DEL SimpleName: getPath", "DEL SuperMethodInvocation", "DEL SimpleName: partitionId"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: basePath", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SuperMethodInvocation", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: offloadBuffers", "DEL SimpleName: getPath"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: path", "operations": ["DEL SimpleName: path"]}, {"root": "DEL SimpleName: FileInputStream", "operations": ["DEL SimpleName: FileInputStream"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: fis", "DEL ExpressionStatement", "DEL SimpleName: delete", "DEL StringLiteral: \"loadInMemoryPartitionData: failed to delete \"", "DEL MethodInvocation", "DEL SimpleName: file", "DEL SimpleName: dis", "DEL VariableDeclarationFragment", "DEL SimpleName: FileInputStream", "DEL SimpleName: isDebugEnabled", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: partitionId", "DEL VariableDeclarationStatement", "DEL SimpleType: File", "DEL SimpleName: path", "DEL SimpleName: BufferedInputStream", "DEL StringLiteral: \"%s.\"", "DEL SimpleName: DataInputStream", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: bis", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleType: DataInputStream", "DEL SimpleType: BufferedInputStream", "DEL MethodInvocation", "DEL SimpleType: DataInputStream", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: FileInputStream", "DEL SimpleName: File", "DEL SimpleName: BufferedInputStream", "DEL SimpleName: LOG", "DEL SimpleName: bis", "DEL StringLiteral: \" from \"", "DEL SimpleName: dis", "DEL SimpleType: BufferedInputStream", "DEL SimpleName: file", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: file", "DEL ClassInstanceCreation", "DEL SimpleName: DataInputStream", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"loadInMemoryPartitionData: loading edge data for \"", "DEL SimpleType: File", "DEL SimpleName: exists", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: getAbsoluteFile", "DEL SimpleName: file", "DEL SimpleName: checkState", "DEL SimpleName: close", "DEL InfixExpression: +", "DEL SimpleName: getAbsolutePath", "DEL MethodInvocation", "DEL SimpleName: file", "DEL SimpleName: fis", "DEL SimpleName: file", "DEL StringLiteral: \"partition \"", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement"]}, {"root": "DEL SimpleName: File", "operations": ["DEL SimpleName: File"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: path", "DEL VariableDeclarationStatement", "DEL SimpleName: File", "DEL SimpleType: File", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: exists", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: file", "DEL InfixExpression: +", "DEL StringLiteral: \"file %s already exist\"", "DEL SimpleName: checkState", "DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: edge store \"", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: file", "DEL StringLiteral: \"offloadInMemoryPartitionData: cannot create edge store file %s\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: FileOutputStream", "DEL SimpleName: fos", "DEL SimpleType: FileOutputStream", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: FileOutputStream", "DEL SimpleName: file", "DEL SimpleType: FileOutputStream"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: bos", "DEL ClassInstanceCreation", "DEL SimpleName: BufferedOutputStream", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: fos", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: BufferedOutputStream"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: DataOutputStream", "DEL ClassInstanceCreation", "DEL SimpleType: DataOutputStream", "DEL SimpleName: bos", "DEL SimpleName: dos", "DEL SimpleType: DataOutputStream", "DEL VariableDeclarationFragment", "DEL SimpleName: DataOutputStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: close", "DEL SimpleName: dos", "DEL MethodInvocation", "DEL ExpressionStatement"]}]}}, {"DiskBackedEdgeStore_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(604) at 4", "Move ImportDeclaration(29) into CompilationUnit(604) at 5", "Update QualifiedName: java.io.DataInputStream(24) to org.apache.giraph.ooc.persistence.DataIndex", "Update QualifiedName: java.io.DataOutputStream(28) to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "Update ParameterizedType: OutOfCoreDataManager<VertexIdEdges<I,E>>(81) to DiskBackedDataStore<VertexIdEdges<I,E>>", "Update SimpleType: OutOfCoreDataManager(73) to DiskBackedDataStore", "Move MarkerAnnotation(478) into MethodDeclaration(307) at 0", "Move SingleVariableDeclaration(484) into MethodDeclaration(307) at 5", "Move SimpleType: IOException(490) into MethodDeclaration(307) at 6", "Move MarkerAnnotation(337) into MethodDeclaration(351) at 0", "Move SingleVariableDeclaration(343) into MethodDeclaration(351) at 5", "Move SimpleType: IOException(349) into MethodDeclaration(351) at 6", "Move MarkerAnnotation(383) into MethodDeclaration(484) at 0", "Move SingleVariableDeclaration(389) into MethodDeclaration(484) at 4", "Insert SingleVariableDeclaration(438) into MethodDeclaration(484) at 6", "Move SimpleType: IOException(395) into MethodDeclaration(484) at 7", "Insert Block(483) into MethodDeclaration(484) at 8", "Insert SingleVariableDeclaration(495) into MethodDeclaration(550) at 5", "Update SimpleName: addEntryToImMemoryPartitionData(715) to addEntryToInMemoryPartitionData", "Update SimpleName: OutOfCoreDataManager(72) to DiskBackedDataStore", "Insert SuperConstructorInvocation(173) into Block(186) at 0", "Insert PrimitiveType: int(432) into SingleVariableDeclaration(434) at 0", "Insert SimpleName: ioThreadId(433) into SingleVariableDeclaration(434) at 1", "Insert SimpleType: DataIndex(436) into SingleVariableDeclaration(438) at 0", "Insert SimpleName: index(437) into SingleVariableDeclaration(438) at 1", "Move VariableDeclarationStatement(495) into Block(483) at 0", "Insert IfStatement(480) into Block(483) at 1", "Move ReturnStatement(584) into Block(483) at 2", "Insert PrimitiveType: int(493) into SingleVariableDeclaration(495) at 0", "Insert SimpleName: ioThreadId(494) into SingleVariableDeclaration(495) at 1", "Update SimpleType: String(596) to DataIndex", "Update SimpleName: path(597) to index", "Move SimpleName: conf(193) into SuperConstructorInvocation(173) at 0", "Insert SimpleName: oocEngine(172) into SuperConstructorInvocation(173) at 1", "Insert MethodInvocation(304) into ReturnStatement(305) at 0", "Insert MethodInvocation(326) into ReturnStatement(327) at 0", "Insert MethodInvocation(348) into ReturnStatement(349) at 0", "Update SimpleName: File(496) to DataIndex", "Move SimpleName: File(496) into SimpleType: DataIndex(436) at 0", "Insert MethodInvocation(449) into IfStatement(480) at 0", "Insert Block(479) into IfStatement(480) at 1", "Update SimpleName: String(595) to DataIndex", "Insert SimpleName: loadPartitionDataProxy(296) into MethodInvocation(304) at 0", "Insert SimpleName: partitionId(297) into MethodInvocation(304) at 1", "Insert MethodInvocation(303) into MethodInvocation(304) at 2", "Insert SimpleName: offloadPartitionDataProxy(318) into MethodInvocation(326) at 0", "Insert SimpleName: partitionId(319) into MethodInvocation(326) at 1", "Insert MethodInvocation(325) into MethodInvocation(326) at 2", "Insert SimpleName: offloadBuffersProxy(340) into MethodInvocation(348) at 0", "Insert SimpleName: partitionId(341) into MethodInvocation(348) at 1", "Insert MethodInvocation(347) into MethodInvocation(348) at 2", "Update SimpleName: LOG(511) to hasPartitionDataOnFile", "Move SimpleName: LOG(511) into MethodInvocation(449) at 0", "Update SimpleName: debug(512) to remove", "Move SimpleName: debug(512) into MethodInvocation(449) at 1", "Insert SimpleName: partitionId(448) into MethodInvocation(449) at 2", "Insert VariableDeclarationStatement(463) into Block(479) at 0", "Move ExpressionStatement(558) into Block(479) at 1", "Move ExpressionStatement(568) into Block(479) at 2", "Insert VariableDeclarationStatement(525) into Block(545) at 0", "Insert ExpressionStatement(544) into Block(545) at 3", "Insert ClassInstanceCreation(300) into MethodInvocation(303) at 0", "Update SimpleName: basePath(353) to addIndex", "Move SimpleName: basePath(353) into MethodInvocation(303) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE(302) into MethodInvocation(303) at 2", "Insert ClassInstanceCreation(322) into MethodInvocation(325) at 0", "Update SimpleName: basePath(376) to addIndex", "Move SimpleName: basePath(376) into MethodInvocation(325) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE(324) into MethodInvocation(325) at 2", "Insert ClassInstanceCreation(344) into MethodInvocation(347) at 0", "Update SimpleName: basePath(399) to addIndex", "Move SimpleName: basePath(399) into MethodInvocation(347) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.EDGE_STORE(346) into MethodInvocation(347) at 2", "Update SimpleType: FileInputStream(527) to OutOfCoreDataAccessor.DataInputWrapper", "Move SimpleType: FileInputStream(527) into VariableDeclarationStatement(463) at 0", "Insert VariableDeclarationFragment(462) into VariableDeclarationStatement(463) at 1", "Update SimpleType: File(611) to OutOfCoreDataAccessor.DataOutputWrapper", "Move SimpleType: File(611) into VariableDeclarationStatement(525) at 0", "Insert VariableDeclarationFragment(524) into VariableDeclarationStatement(525) at 1", "Insert MethodInvocation(543) into ExpressionStatement(544) at 0", "Insert SimpleType: DataIndex(299) into ClassInstanceCreation(300) at 0", "Insert SimpleType: DataIndex(321) into ClassInstanceCreation(322) at 0", "Insert SimpleType: DataIndex(343) into ClassInstanceCreation(344) at 0", "Insert QualifiedName: OutOfCoreDataAccessor.DataInputWrapper(450) into SimpleType: OutOfCoreDataAccessor.DataInputWrapper(451) at 0", "Insert SimpleName: inputWrapper(452) into VariableDeclarationFragment(462) at 0", "Insert MethodInvocation(461) into VariableDeclarationFragment(462) at 1", "Insert MethodInvocation(469) into MethodInvocation(470) at 3", "Insert QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper(511) into SimpleType: OutOfCoreDataAccessor.DataOutputWrapper(512) at 0", "Update SimpleName: file(612) to outputWrapper", "Move SimpleName: file(612) into VariableDeclarationFragment(524) at 0", "Insert MethodInvocation(523) into VariableDeclarationFragment(524) at 1", "Insert MethodInvocation(531) into MethodInvocation(532) at 3", "Insert SimpleName: hasPartitionDataOnFile(540) into MethodInvocation(543) at 0", "Insert SimpleName: add(541) into MethodInvocation(543) at 1", "Insert SimpleName: partitionId(542) into MethodInvocation(543) at 2", "Insert SimpleName: DataIndex(298) into SimpleType: DataIndex(299) at 0", "Insert SimpleName: DataIndex(320) into SimpleType: DataIndex(321) at 0", "Insert SimpleName: DataIndex(342) into SimpleType: DataIndex(343) at 0", "Insert MethodInvocation(455) into MethodInvocation(461) at 0", "Insert SimpleName: prepareInput(456) into MethodInvocation(461) at 1", "Insert SimpleName: ioThreadId(457) into MethodInvocation(461) at 2", "Insert MethodInvocation(460) into MethodInvocation(461) at 3", "Update SimpleName: dis(556) to inputWrapper", "Move SimpleName: dis(556) into MethodInvocation(469) at 0", "Insert SimpleName: getDataInput(468) into MethodInvocation(469) at 1", "Update SimpleName: file(564) to inputWrapper", "Update SimpleName: length(565) to finalizeInput", "Insert BooleanLiteral: true(475) into MethodInvocation(476) at 2", "Move MethodInvocation(629) into MethodInvocation(523) at 0", "Update SimpleName: checkState(632) to prepareOutput", "Move SimpleName: checkState(632) into MethodInvocation(523) at 1", "Update SimpleName: createNewFile(634) to ioThreadId", "Move SimpleName: createNewFile(634) into MethodInvocation(523) at 2", "Move MethodInvocation(639) into MethodInvocation(523) at 3", "Insert BooleanLiteral: false(522) into MethodInvocation(523) at 4", "Update SimpleName: dos(672) to outputWrapper", "Move SimpleName: dos(672) into MethodInvocation(531) at 0", "Insert SimpleName: getDataOutput(530) into MethodInvocation(531) at 1", "Update SimpleName: dos(680) to outputWrapper", "Update SimpleName: size(681) to finalizeOutput", "Insert SimpleName: oocEngine(453) into MethodInvocation(455) at 0", "Insert SimpleName: getDataAccessor(454) into MethodInvocation(455) at 1", "Insert SimpleName: index(458) into MethodInvocation(460) at 0", "Insert SimpleName: copy(459) into MethodInvocation(460) at 1", "Update SimpleName: file(627) to oocEngine", "Update SimpleName: getAbsoluteFile(628) to getDataAccessor", "Update SimpleName: file(637) to index", "Update SimpleName: getAbsoluteFile(638) to copy", "Delete QualifiedName: java.io.BufferedInputStream(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.BufferedOutputStream(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.File(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.io.FileInputStream(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.io.FileOutputStream(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(38)", "Delete ImportDeclaration(39)", "Delete TextElement: Out-of-core engine (142)", "Delete TagElement(143)", "Delete Javadoc(144)", "Delete Modifier: private(145)", "Delete Modifier: final(146)", "Delete SimpleName: OutOfCoreEngine(147)", "Delete SimpleType: OutOfCoreEngine(148)", "Delete SimpleName: oocEngine(149)", "Delete VariableDeclarationFragment(150)", "Delete FieldDeclaration(151)", "Delete SuperConstructorInvocation(194)", "Delete ThisExpression(207)", "Delete SimpleName: oocEngine(208)", "Delete FieldAccess(209)", "Delete SimpleName: oocEngine(210)", "Delete Assignment: =(211)", "Delete ExpressionStatement(212)", "Delete TextElement: Gets the path that should be used specifically for edge data.(313)", "Delete TagElement(314)", "Delete SimpleName: basePath(315)", "Delete TextElement:  path prefix to build the actual path from(316)", "Delete TagElement: @param(317)", "Delete TextElement:  path to files specific for edge data(318)", "Delete TagElement: @return(319)", "Delete Javadoc(320)", "Delete Modifier: private(321)", "Delete Modifier: static(322)", "Delete SimpleName: String(323)", "Delete SimpleType: String(324)", "Delete SimpleName: getPath(325)", "Delete SimpleName: String(326)", "Delete SimpleType: String(327)", "Delete SimpleName: basePath(328)", "Delete SingleVariableDeclaration(329)", "Delete SimpleName: basePath(330)", "Delete StringLiteral: \"_edge_store\"(331)", "Delete InfixExpression: +(332)", "Delete ReturnStatement(333)", "Delete Block(334)", "Delete MethodDeclaration(335)", "Delete SimpleName: String(344)", "Delete SimpleType: String(345)", "Delete SimpleName: basePath(346)", "Delete SingleVariableDeclaration(347)", "Delete SimpleName: loadPartitionData(350)", "Delete SimpleName: partitionId(351)", "Delete SimpleName: getPath(352)", "Delete MethodInvocation(354)", "Delete SuperMethodInvocation(355)", "Delete SimpleName: String(367)", "Delete SimpleType: String(368)", "Delete SimpleName: basePath(369)", "Delete SingleVariableDeclaration(370)", "Delete SimpleName: offloadPartitionData(373)", "Delete SimpleName: partitionId(374)", "Delete SimpleName: getPath(375)", "Delete MethodInvocation(377)", "Delete SuperMethodInvocation(378)", "Delete SimpleName: String(390)", "Delete SimpleType: String(391)", "Delete SimpleName: basePath(392)", "Delete SingleVariableDeclaration(393)", "Delete SimpleName: offloadBuffers(396)", "Delete SimpleName: partitionId(397)", "Delete SimpleName: getPath(398)", "Delete MethodInvocation(400)", "Delete SuperMethodInvocation(401)", "Delete SimpleName: String(485)", "Delete SimpleType: String(486)", "Delete SimpleName: path(487)", "Delete SimpleName: FileInputStream(526)", "Delete SimpleType: File(497)", "Delete SimpleName: file(498)", "Delete SimpleName: File(499)", "Delete SimpleType: File(500)", "Delete SimpleName: path(501)", "Delete ClassInstanceCreation(502)", "Delete VariableDeclarationFragment(503)", "Delete VariableDeclarationStatement(504)", "Delete SimpleName: file(505)", "Delete SimpleName: exists(506)", "Delete MethodInvocation(507)", "Delete SimpleName: LOG(508)", "Delete SimpleName: isDebugEnabled(509)", "Delete MethodInvocation(510)", "Delete StringLiteral: \"loadInMemoryPartitionData: loading edge data for \"(513)", "Delete StringLiteral: \"partition \"(514)", "Delete InfixExpression: +(515)", "Delete SimpleName: partitionId(516)", "Delete StringLiteral: \" from \"(517)", "Delete SimpleName: file(518)", "Delete SimpleName: getAbsolutePath(519)", "Delete MethodInvocation(520)", "Delete InfixExpression: +(521)", "Delete MethodInvocation(522)", "Delete ExpressionStatement(523)", "Delete Block(524)", "Delete IfStatement(525)", "Delete SimpleName: fis(528)", "Delete SimpleName: FileInputStream(529)", "Delete SimpleType: FileInputStream(530)", "Delete SimpleName: file(531)", "Delete ClassInstanceCreation(532)", "Delete VariableDeclarationFragment(533)", "Delete VariableDeclarationStatement(534)", "Delete SimpleName: BufferedInputStream(535)", "Delete SimpleType: BufferedInputStream(536)", "Delete SimpleName: bis(537)", "Delete SimpleName: BufferedInputStream(538)", "Delete SimpleType: BufferedInputStream(539)", "Delete SimpleName: fis(540)", "Delete ClassInstanceCreation(541)", "Delete VariableDeclarationFragment(542)", "Delete VariableDeclarationStatement(543)", "Delete SimpleName: DataInputStream(544)", "Delete SimpleType: DataInputStream(545)", "Delete SimpleName: dis(546)", "Delete SimpleName: DataInputStream(547)", "Delete SimpleType: DataInputStream(548)", "Delete SimpleName: bis(549)", "Delete ClassInstanceCreation(550)", "Delete VariableDeclarationFragment(551)", "Delete VariableDeclarationStatement(552)", "Delete SimpleName: dis(559)", "Delete SimpleName: close(560)", "Delete MethodInvocation(561)", "Delete ExpressionStatement(562)", "Delete SimpleName: checkState(569)", "Delete SimpleName: file(570)", "Delete SimpleName: delete(571)", "Delete MethodInvocation(572)", "Delete StringLiteral: \"loadInMemoryPartitionData: failed to delete \"(573)", "Delete StringLiteral: \"%s.\"(574)", "Delete InfixExpression: +(575)", "Delete SimpleName: file(576)", "Delete SimpleName: getAbsoluteFile(577)", "Delete MethodInvocation(578)", "Delete MethodInvocation(579)", "Delete ExpressionStatement(580)", "Delete Block(581)", "Delete IfStatement(582)", "Delete Block(585)", "Delete SimpleName: File(610)", "Delete SimpleName: File(613)", "Delete SimpleType: File(614)", "Delete SimpleName: path(615)", "Delete ClassInstanceCreation(616)", "Delete VariableDeclarationFragment(617)", "Delete VariableDeclarationStatement(618)", "Delete SimpleName: checkState(619)", "Delete SimpleName: file(620)", "Delete SimpleName: exists(621)", "Delete MethodInvocation(622)", "Delete PrefixExpression: !(623)", "Delete StringLiteral: \"offloadInMemoryPartitionData: edge store \"(624)", "Delete StringLiteral: \"file %s already exist\"(625)", "Delete InfixExpression: +(626)", "Delete MethodInvocation(630)", "Delete ExpressionStatement(631)", "Delete SimpleName: file(633)", "Delete MethodInvocation(635)", "Delete StringLiteral: \"offloadInMemoryPartitionData: cannot create edge store file %s\"(636)", "Delete MethodInvocation(640)", "Delete ExpressionStatement(641)", "Delete SimpleName: FileOutputStream(642)", "Delete SimpleType: FileOutputStream(643)", "Delete SimpleName: fos(644)", "Delete SimpleName: FileOutputStream(645)", "Delete SimpleType: FileOutputStream(646)", "Delete SimpleName: file(647)", "Delete ClassInstanceCreation(648)", "Delete VariableDeclarationFragment(649)", "Delete VariableDeclarationStatement(650)", "Delete SimpleName: BufferedOutputStream(651)", "Delete SimpleType: BufferedOutputStream(652)", "Delete SimpleName: bos(653)", "Delete SimpleName: BufferedOutputStream(654)", "Delete SimpleType: BufferedOutputStream(655)", "Delete SimpleName: fos(656)", "Delete ClassInstanceCreation(657)", "Delete VariableDeclarationFragment(658)", "Delete VariableDeclarationStatement(659)", "Delete SimpleName: DataOutputStream(660)", "Delete SimpleType: DataOutputStream(661)", "Delete SimpleName: dos(662)", "Delete SimpleName: DataOutputStream(663)", "Delete SimpleType: DataOutputStream(664)", "Delete SimpleName: bos(665)", "Delete ClassInstanceCreation(666)", "Delete VariableDeclarationFragment(667)", "Delete VariableDeclarationStatement(668)", "Delete SimpleName: dos(675)", "Delete SimpleName: close(676)", "Delete MethodInvocation(677)", "Delete ExpressionStatement(678)"]}}, {"DiskBackedMessageStore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from java.io.BufferedOutputStream to org.apache.giraph.ooc.OutOfCoreEngine", "operations": ["UPD QualifiedName: java.io.BufferedOutputStream from java.io.BufferedOutputStream to org.apache.giraph.ooc.OutOfCoreEngine"]}, {"root": "UPDATE from java.io.DataInputStream to org.apache.giraph.ooc.persistence.DataIndex", "operations": ["UPD QualifiedName: java.io.DataInputStream from java.io.DataInputStream to org.apache.giraph.ooc.persistence.DataIndex"]}, {"root": "UPDATE from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.DataIndex.NumericIndexEntry", "operations": ["UPD QualifiedName: java.io.DataOutputStream from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.DataIndex.NumericIndexEntry"]}, {"root": "UPDATE from java.io.FileOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "operations": ["UPD QualifiedName: java.io.FileOutputStream from java.io.FileOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor"]}, {"root": "UPDATE from OutOfCoreDataManager<VertexIdMessages<I,M>> to DiskBackedDataStore<VertexIdMessages<I,M>>", "operations": ["UPD ParameterizedType: OutOfCoreDataManager<VertexIdMessages<I,M>> from OutOfCoreDataManager<VertexIdMessages<I,M>> to DiskBackedDataStore<VertexIdMessages<I,M>>"]}, {"root": "UPDATE from OutOfCoreDataManager to DiskBackedDataStore", "operations": ["UPD SimpleName: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore", "UPD SimpleType: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: OutOfCoreEngine to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: OutOfCoreEngine to SimpleType: OutOfCoreEngine at 0", "INS SimpleName: oocEngine to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SimpleType: DataIndex to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: prepareInput to MethodInvocation at 1", "INS Block to MethodDeclaration at 8", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: index to MethodInvocation at 0", "INS SimpleName: copy to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ioThreadId to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: oocEngine to MethodInvocation at 0", "INS SimpleName: getDataAccessor to MethodInvocation at 1", "INS SimpleName: inputWrapper to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData", "operations": ["UPD SimpleName: addEntryToImMemoryPartitionData from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TagElement: @param to Javadoc at 2", "INS SimpleName: oocEngine to TagElement: @param at 0", "INS TextElement:  Out-of-core engine to TagElement: @param at 1"]}, {"root": "INS PrimitiveType: int to SingleVariableDeclaration at 0", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from String to DataIndex", "operations": ["UPD SimpleName: String from String to DataIndex", "UPD SimpleType: String from String to DataIndex", "UPD SimpleName: File from File to DataIndex"]}, {"root": "UPDATE from basePath to index", "operations": ["UPD SimpleName: basePath from basePath to index", "UPD SimpleName: file from file to index"]}, {"root": "INS SimpleName: oocEngine to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: oocEngine to SuperConstructorInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0", "MOV Block to IfStatement at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 3", "MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2", "MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from SimpleType: DataIndex", "operations": ["MOV SimpleName: File to SimpleType: DataIndex at 0"]}, {"root": "UPDATE from LOG to hasPartitionDataOnFile", "operations": ["UPD SimpleName: LOG from LOG to hasPartitionDataOnFile"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: LOG to MethodInvocation at 0"]}, {"root": "UPDATE from debug to remove", "operations": ["UPD SimpleName: debug from debug to remove"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS BooleanLiteral: false to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.MESSAGE to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: loadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: addIndex to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: addIndex to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.MESSAGE to MethodInvocation at 2", "INS SimpleName: partitionId to MethodInvocation at 1", "INS SimpleName: offloadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: addIndex to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: addIndex to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: partitionId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: addIndex to MethodInvocation at 1", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS SimpleName: offloadBuffersProxy to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.MESSAGE to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: addIndex to MethodInvocation at 1"]}, {"root": "UPDATE from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper", "operations": ["UPD SimpleType: FileInputStream from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: FileInputStream to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from File to OutOfCoreDataAccessor.DataOutputWrapper", "operations": ["UPD SimpleType: File from File to OutOfCoreDataAccessor.DataOutputWrapper"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: File to VariableDeclarationStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: numBytes to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: hasPartitionDataOnFile to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0", "operations": ["INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getDataInput to MethodInvocation at 1"]}, {"root": "INS QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper to SimpleType: File at 0", "operations": ["INS QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper to SimpleType: File at 0"]}, {"root": "UPDATE from outputStream to outputWrapper", "operations": ["UPD SimpleName: outputStream from outputStream to outputWrapper", "UPD SimpleName: outputStream from outputStream to outputWrapper", "UPD SimpleName: file from file to outputWrapper"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: file to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getDataOutput to MethodInvocation at 1"]}, {"root": "UPDATE from outputStream to add", "operations": ["UPD SimpleName: outputStream from outputStream to add"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: size to MethodInvocation at 2", "MOV SimpleName: outputStream to MethodInvocation at 1"]}, {"root": "UPDATE from size to partitionId", "operations": ["UPD SimpleName: size from size to partitionId"]}, {"root": "UPDATE from dis to inputWrapper", "operations": ["UPD SimpleName: dis from dis to inputWrapper", "UPD SimpleName: file from file to inputWrapper"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dis to MethodInvocation at 0"]}, {"root": "UPDATE from length to finalizeInput", "operations": ["UPD SimpleName: length from length to finalizeInput"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 2", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from checkState to prepareOutput", "operations": ["UPD SimpleName: checkState from checkState to prepareOutput"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: checkState to MethodInvocation at 1"]}, {"root": "UPDATE from createNewFile to ioThreadId", "operations": ["UPD SimpleName: createNewFile from createNewFile to ioThreadId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createNewFile to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: outputStream to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: outputStream to MethodInvocation at 0", "MOV SimpleName: close to MethodInvocation at 1"]}, {"root": "UPDATE from close to finalizeOutput", "operations": ["UPD SimpleName: close from close to finalizeOutput"]}, {"root": "UPDATE from getPath to NumericIndexEntry", "operations": ["UPD SimpleName: getPath from getPath to NumericIndexEntry", "UPD SimpleName: getPath from getPath to NumericIndexEntry", "UPD SimpleName: getPath from getPath to NumericIndexEntry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1", "MOV SimpleName: getPath to MethodInvocation at 0", "MOV SimpleName: superstep to MethodInvocation at 2"]}, {"root": "UPDATE from basePath to createSuperstepEntry", "operations": ["UPD SimpleName: basePath from basePath to createSuperstepEntry", "UPD SimpleName: basePath from basePath to createSuperstepEntry", "UPD SimpleName: basePath from basePath to createSuperstepEntry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1", "MOV SimpleName: getPath to MethodInvocation at 0", "MOV SimpleName: superstep to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getPath to MethodInvocation at 0", "MOV SimpleName: superstep to MethodInvocation at 2", "MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "UPDATE from file to oocEngine", "operations": ["UPD SimpleName: file from file to oocEngine"]}, {"root": "UPDATE from getAbsoluteFile to getDataAccessor", "operations": ["UPD SimpleName: getAbsoluteFile from getAbsoluteFile to getDataAccessor"]}, {"root": "UPDATE from getAbsoluteFile to copy", "operations": ["UPD SimpleName: getAbsoluteFile from getAbsoluteFile to copy"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.BufferedInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.File", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Preconditions.checkState", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: private", "DEL TextElement:  superstep for which message data should be stored", "DEL SimpleName: superstep", "DEL Modifier: static", "DEL SimpleName: getPath", "DEL SimpleName: String", "DEL TagElement", "DEL Javadoc", "DEL StringLiteral: \"_messages-S\"", "DEL TextElement: Gets the path that should be used specifically for message data.", "DEL MethodDeclaration", "DEL TextElement:  path prefix to build the actual path from", "DEL SimpleName: superstep", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL PrimitiveType: long", "DEL SimpleName: basePath", "DEL Block", "DEL SimpleName: basePath", "DEL TagElement: @return", "DEL SimpleName: superstep", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: basePath", "DEL SimpleType: String", "DEL ReturnStatement", "DEL InfixExpression: +", "DEL TagElement: @param", "DEL TextElement:  path to files specific for message data"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: basePath", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL MethodInvocation", "DEL SuperMethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: loadPartitionData"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleName: basePath", "DEL SimpleType: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SuperMethodInvocation", "DEL SimpleName: partitionId", "DEL MethodInvocation", "DEL SimpleName: offloadPartitionData"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: basePath", "DEL SimpleType: String"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: partitionId", "DEL SimpleName: offloadBuffers", "DEL MethodInvocation", "DEL SuperMethodInvocation"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: basePath", "operations": ["DEL SimpleName: basePath"]}, {"root": "DEL SimpleName: FileInputStream", "operations": ["DEL SimpleName: FileInputStream"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleName: bis", "DEL IfStatement", "DEL SimpleType: BufferedInputStream", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \"loadInMemoryPartitionData: failed to delete \"", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: DataInputStream", "DEL ClassInstanceCreation", "DEL SimpleName: FileInputStream", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: file", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: close", "DEL SimpleName: getAbsoluteFile", "DEL SimpleName: file", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: DataInputStream", "DEL InfixExpression: +", "DEL SimpleName: dis", "DEL SimpleType: DataInputStream", "DEL SimpleName: file", "DEL MethodInvocation", "DEL SimpleName: BufferedInputStream", "DEL SimpleName: BufferedInputStream", "DEL SimpleName: fis", "DEL SimpleName: file", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleType: FileInputStream", "DEL SimpleType: DataInputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: bis", "DEL StringLiteral: \"%s.\"", "DEL StringLiteral: \"partition \"", "DEL SimpleName: fis", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: File", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: isDebugEnabled", "DEL MethodInvocation", "DEL SimpleName: basePath", "DEL InfixExpression: +", "DEL StringLiteral: \" from \"", "DEL VariableDeclarationFragment", "DEL SimpleName: LOG", "DEL SimpleType: BufferedInputStream", "DEL MethodInvocation", "DEL SimpleName: file", "DEL SimpleName: checkState", "DEL MethodInvocation", "DEL SimpleType: File", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: dis", "DEL SimpleName: delete", "DEL StringLiteral: \"loadInMemoryPartitionData: loading message data for \"", "DEL SimpleName: exists", "DEL SimpleName: File", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: file", "DEL SimpleName: partitionId", "DEL IfStatement"]}, {"root": "DEL SimpleName: File", "operations": ["DEL SimpleName: File"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: File", "DEL SimpleName: basePath", "DEL VariableDeclarationStatement", "DEL SimpleType: File"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL PrefixExpression: !", "DEL StringLiteral: \" file %s already exist\"", "DEL SimpleName: checkState", "DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: message store\"", "DEL SimpleName: file", "DEL SimpleName: exists", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: +"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: file", "DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: cannot create message store file %s\"", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: FileOutputStream", "DEL SimpleName: file", "DEL SimpleName: FileOutputStream", "DEL VariableDeclarationStatement", "DEL SimpleType: FileOutputStream", "DEL SimpleName: FileOutputStream", "DEL SimpleName: fileout", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: bufferout", "DEL SimpleName: BufferedOutputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: BufferedOutputStream", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: fileout", "DEL SimpleType: BufferedOutputStream"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: DataOutputStream", "DEL SimpleName: outputStream", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: bufferout", "DEL VariableDeclarationFragment", "DEL SimpleName: DataOutputStream", "DEL SimpleType: DataOutputStream", "DEL SimpleName: DataOutputStream"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL Assignment: +=", "operations": ["DEL MethodInvocation", "DEL SimpleName: numBytes", "DEL Assignment: +="]}]}}, {"DiskBackedMessageStore_diff": {"operations": ["Move ImportDeclaration(23) into CompilationUnit(916) at 4", "Move ImportDeclaration(27) into CompilationUnit(916) at 5", "Move ImportDeclaration(31) into CompilationUnit(916) at 6", "Move ImportDeclaration(37) into CompilationUnit(916) at 7", "Update QualifiedName: java.io.BufferedOutputStream(22) to org.apache.giraph.ooc.OutOfCoreEngine", "Update QualifiedName: java.io.DataInputStream(26) to org.apache.giraph.ooc.persistence.DataIndex", "Update QualifiedName: java.io.DataOutputStream(30) to org.apache.giraph.ooc.persistence.DataIndex.NumericIndexEntry", "Update QualifiedName: java.io.FileOutputStream(36) to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "Update ParameterizedType: OutOfCoreDataManager<VertexIdMessages<I,M>>(74) to DiskBackedDataStore<VertexIdMessages<I,M>>", "Update SimpleType: OutOfCoreDataManager(66) to DiskBackedDataStore", "Insert SingleVariableDeclaration(206) into MethodDeclaration(258) at 4", "Move MarkerAnnotation(475) into MethodDeclaration(416) at 0", "Move SingleVariableDeclaration(481) into MethodDeclaration(416) at 5", "Move SimpleType: IOException(487) into MethodDeclaration(416) at 6", "Move MarkerAnnotation(413) into MethodDeclaration(451) at 0", "Move SingleVariableDeclaration(419) into MethodDeclaration(451) at 5", "Move SimpleType: IOException(425) into MethodDeclaration(451) at 6", "Move MarkerAnnotation(444) into MethodDeclaration(486) at 0", "Move SingleVariableDeclaration(450) into MethodDeclaration(486) at 4", "Move SimpleType: IOException(456) into MethodDeclaration(486) at 5", "Insert SingleVariableDeclaration(752) into MethodDeclaration(798) at 6", "Insert Block(797) into MethodDeclaration(798) at 8", "Insert SingleVariableDeclaration(809) into MethodDeclaration(869) at 5", "Update SimpleName: addEntryToImMemoryPartitionData(999) to addEntryToInMemoryPartitionData", "Update SimpleName: OutOfCoreDataManager(65) to DiskBackedDataStore", "Insert TagElement: @param(179) into Javadoc(191) at 2", "Insert SimpleType: OutOfCoreEngine(204) into SingleVariableDeclaration(206) at 0", "Insert SimpleName: oocEngine(205) into SingleVariableDeclaration(206) at 1", "Insert PrimitiveType: int(746) into SingleVariableDeclaration(748) at 0", "Insert SimpleName: ioThreadId(747) into SingleVariableDeclaration(748) at 1", "Insert SimpleType: DataIndex(750) into SingleVariableDeclaration(752) at 0", "Insert SimpleName: index(751) into SingleVariableDeclaration(752) at 1", "Move VariableDeclarationStatement(774) into Block(797) at 0", "Insert IfStatement(794) into Block(797) at 1", "Move ReturnStatement(863) into Block(797) at 2", "Insert PrimitiveType: int(807) into SingleVariableDeclaration(809) at 0", "Insert SimpleName: ioThreadId(808) into SingleVariableDeclaration(809) at 1", "Update SimpleType: String(875) to DataIndex", "Update SimpleName: basePath(876) to index", "Insert SimpleName: oocEngine(177) into TagElement: @param(179) at 0", "Insert TextElement:  Out-of-core engine(178) into TagElement: @param(179) at 1", "Insert SimpleName: OutOfCoreEngine(203) into SimpleType: OutOfCoreEngine(204) at 0", "Insert SimpleName: oocEngine(223) into SuperConstructorInvocation(224) at 1", "Move PrefixExpression: !(489) into IfStatement(414) at 0", "Move Block(501) into IfStatement(414) at 3", "Move PrefixExpression: !(427) into IfStatement(449) at 0", "Move Block(439) into IfStatement(449) at 3", "Move PrefixExpression: !(458) into IfStatement(484) at 0", "Move Block(470) into IfStatement(484) at 2", "Update SimpleName: File(775) to DataIndex", "Move SimpleName: File(775) into SimpleType: DataIndex(750) at 0", "Insert MethodInvocation(763) into IfStatement(794) at 0", "Insert Block(793) into IfStatement(794) at 1", "Update SimpleName: String(874) to DataIndex", "Update SimpleName: LOG(790) to hasPartitionDataOnFile", "Move SimpleName: LOG(790) into MethodInvocation(763) at 0", "Update SimpleName: debug(791) to remove", "Move SimpleName: debug(791) into MethodInvocation(763) at 1", "Insert SimpleName: partitionId(762) into MethodInvocation(763) at 2", "Insert VariableDeclarationStatement(777) into Block(793) at 0", "Move ExpressionStatement(837) into Block(793) at 1", "Move ExpressionStatement(847) into Block(793) at 2", "Insert VariableDeclarationStatement(839) into Block(864) at 0", "Insert MethodInvocation(408) into ReturnStatement(409) at 0", "Insert MethodInvocation(443) into ReturnStatement(444) at 0", "Insert MethodInvocation(478) into ReturnStatement(479) at 0", "Update SimpleType: FileInputStream(806) to OutOfCoreDataAccessor.DataInputWrapper", "Move SimpleType: FileInputStream(806) into VariableDeclarationStatement(777) at 0", "Insert VariableDeclarationFragment(776) into VariableDeclarationStatement(777) at 1", "Update SimpleType: File(890) to OutOfCoreDataAccessor.DataOutputWrapper", "Move SimpleType: File(890) into VariableDeclarationStatement(839) at 0", "Insert VariableDeclarationFragment(838) into VariableDeclarationStatement(839) at 1", "Insert Assignment: =(857) into ExpressionStatement(858) at 0", "Insert MethodInvocation(862) into ExpressionStatement(863) at 0", "Insert SimpleName: loadPartitionDataProxy(394) into MethodInvocation(408) at 0", "Insert SimpleName: partitionId(395) into MethodInvocation(408) at 1", "Insert MethodInvocation(407) into MethodInvocation(408) at 2", "Insert SimpleName: offloadPartitionDataProxy(429) into MethodInvocation(443) at 0", "Insert SimpleName: partitionId(430) into MethodInvocation(443) at 1", "Insert MethodInvocation(442) into MethodInvocation(443) at 2", "Insert SimpleName: offloadBuffersProxy(464) into MethodInvocation(478) at 0", "Insert SimpleName: partitionId(465) into MethodInvocation(478) at 1", "Insert MethodInvocation(477) into MethodInvocation(478) at 2", "Insert QualifiedName: OutOfCoreDataAccessor.DataInputWrapper(764) into SimpleType: OutOfCoreDataAccessor.DataInputWrapper(765) at 0", "Insert SimpleName: inputWrapper(766) into VariableDeclarationFragment(776) at 0", "Insert MethodInvocation(775) into VariableDeclarationFragment(776) at 1", "Insert MethodInvocation(782) into MethodInvocation(784) at 2", "Insert QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper(825) into SimpleType: OutOfCoreDataAccessor.DataOutputWrapper(826) at 0", "Update SimpleName: file(891) to outputWrapper", "Move SimpleName: file(891) into VariableDeclarationFragment(838) at 0", "Insert MethodInvocation(837) into VariableDeclarationFragment(838) at 1", "Insert MethodInvocation(844) into MethodInvocation(846) at 2", "Insert SimpleName: numBytes(853) into Assignment: =(857) at 0", "Insert MethodInvocation(856) into Assignment: =(857) at 1", "Insert SimpleName: hasPartitionDataOnFile(859) into MethodInvocation(862) at 0", "Update SimpleName: outputStream(964) to add", "Move SimpleName: outputStream(964) into MethodInvocation(862) at 1", "Update SimpleName: size(965) to partitionId", "Move SimpleName: size(965) into MethodInvocation(862) at 2", "Insert MethodInvocation(401) into MethodInvocation(407) at 0", "Insert SimpleName: addIndex(402) into MethodInvocation(407) at 1", "Insert MethodInvocation(406) into MethodInvocation(407) at 2", "Insert MethodInvocation(436) into MethodInvocation(442) at 0", "Insert SimpleName: addIndex(437) into MethodInvocation(442) at 1", "Insert MethodInvocation(441) into MethodInvocation(442) at 2", "Insert MethodInvocation(471) into MethodInvocation(477) at 0", "Insert SimpleName: addIndex(472) into MethodInvocation(477) at 1", "Insert MethodInvocation(476) into MethodInvocation(477) at 2", "Insert MethodInvocation(769) into MethodInvocation(775) at 0", "Insert SimpleName: prepareInput(770) into MethodInvocation(775) at 1", "Insert SimpleName: ioThreadId(771) into MethodInvocation(775) at 2", "Insert MethodInvocation(774) into MethodInvocation(775) at 3", "Update SimpleName: dis(834) to inputWrapper", "Move SimpleName: dis(834) into MethodInvocation(782) at 0", "Insert SimpleName: getDataInput(781) into MethodInvocation(782) at 1", "Update SimpleName: file(843) to inputWrapper", "Update SimpleName: length(844) to finalizeInput", "Insert BooleanLiteral: true(789) into MethodInvocation(790) at 2", "Move MethodInvocation(908) into MethodInvocation(837) at 0", "Update SimpleName: checkState(911) to prepareOutput", "Move SimpleName: checkState(911) into MethodInvocation(837) at 1", "Update SimpleName: createNewFile(913) to ioThreadId", "Move SimpleName: createNewFile(913) into MethodInvocation(837) at 2", "Move MethodInvocation(918) into MethodInvocation(837) at 3", "Insert BooleanLiteral: false(836) into MethodInvocation(837) at 4", "Update SimpleName: outputStream(950) to outputWrapper", "Move SimpleName: outputStream(950) into MethodInvocation(844) at 0", "Insert SimpleName: getDataOutput(843) into MethodInvocation(844) at 1", "Update SimpleName: outputStream(959) to outputWrapper", "Move SimpleName: outputStream(959) into MethodInvocation(856) at 0", "Update SimpleName: close(960) to finalizeOutput", "Move SimpleName: close(960) into MethodInvocation(856) at 1", "Insert ClassInstanceCreation(398) into MethodInvocation(401) at 0", "Insert SimpleName: addIndex(399) into MethodInvocation(401) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.MESSAGE(400) into MethodInvocation(401) at 2", "Update SimpleName: getPath(430) to NumericIndexEntry", "Move SimpleName: getPath(430) into MethodInvocation(406) at 0", "Update SimpleName: basePath(431) to createSuperstepEntry", "Move SimpleName: basePath(431) into MethodInvocation(406) at 1", "Move SimpleName: superstep(432) into MethodInvocation(406) at 2", "Insert ClassInstanceCreation(433) into MethodInvocation(436) at 0", "Insert SimpleName: addIndex(434) into MethodInvocation(436) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.MESSAGE(435) into MethodInvocation(436) at 2", "Update SimpleName: getPath(461) to NumericIndexEntry", "Move SimpleName: getPath(461) into MethodInvocation(441) at 0", "Update SimpleName: basePath(462) to createSuperstepEntry", "Move SimpleName: basePath(462) into MethodInvocation(441) at 1", "Move SimpleName: superstep(463) into MethodInvocation(441) at 2", "Insert ClassInstanceCreation(468) into MethodInvocation(471) at 0", "Insert SimpleName: addIndex(469) into MethodInvocation(471) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.MESSAGE(470) into MethodInvocation(471) at 2", "Update SimpleName: getPath(492) to NumericIndexEntry", "Move SimpleName: getPath(492) into MethodInvocation(476) at 0", "Update SimpleName: basePath(493) to createSuperstepEntry", "Move SimpleName: basePath(493) into MethodInvocation(476) at 1", "Move SimpleName: superstep(494) into MethodInvocation(476) at 2", "Insert SimpleName: oocEngine(767) into MethodInvocation(769) at 0", "Insert SimpleName: getDataAccessor(768) into MethodInvocation(769) at 1", "Insert SimpleName: index(772) into MethodInvocation(774) at 0", "Insert SimpleName: copy(773) into MethodInvocation(774) at 1", "Update SimpleName: file(906) to oocEngine", "Update SimpleName: getAbsoluteFile(907) to getDataAccessor", "Update SimpleName: file(916) to index", "Update SimpleName: getAbsoluteFile(917) to copy", "Insert SimpleType: DataIndex(397) into ClassInstanceCreation(398) at 0", "Insert SimpleType: DataIndex(432) into ClassInstanceCreation(433) at 0", "Insert SimpleType: DataIndex(467) into ClassInstanceCreation(468) at 0", "Insert SimpleName: DataIndex(396) into SimpleType: DataIndex(397) at 0", "Insert SimpleName: DataIndex(431) into SimpleType: DataIndex(432) at 0", "Insert SimpleName: DataIndex(466) into SimpleType: DataIndex(467) at 0", "Delete QualifiedName: java.io.BufferedInputStream(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.File(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.io.FileInputStream(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(40)", "Delete ImportDeclaration(41)", "Delete TextElement: Gets the path that should be used specifically for message data.(382)", "Delete TagElement(383)", "Delete SimpleName: basePath(384)", "Delete TextElement:  path prefix to build the actual path from(385)", "Delete TagElement: @param(386)", "Delete SimpleName: superstep(387)", "Delete TextElement:  superstep for which message data should be stored(388)", "Delete TagElement: @param(389)", "Delete TextElement:  path to files specific for message data(390)", "Delete TagElement: @return(391)", "Delete Javadoc(392)", "Delete Modifier: private(393)", "Delete Modifier: static(394)", "Delete SimpleName: String(395)", "Delete SimpleType: String(396)", "Delete SimpleName: getPath(397)", "Delete SimpleName: String(398)", "Delete SimpleType: String(399)", "Delete SimpleName: basePath(400)", "Delete SingleVariableDeclaration(401)", "Delete PrimitiveType: long(402)", "Delete SimpleName: superstep(403)", "Delete SingleVariableDeclaration(404)", "Delete SimpleName: basePath(405)", "Delete StringLiteral: \"_messages-S\"(406)", "Delete SimpleName: superstep(407)", "Delete InfixExpression: +(408)", "Delete ReturnStatement(409)", "Delete Block(410)", "Delete MethodDeclaration(411)", "Delete SimpleName: String(420)", "Delete SimpleType: String(421)", "Delete SimpleName: basePath(422)", "Delete SingleVariableDeclaration(423)", "Delete SimpleName: loadPartitionData(428)", "Delete SimpleName: partitionId(429)", "Delete MethodInvocation(433)", "Delete SuperMethodInvocation(434)", "Delete SimpleName: String(451)", "Delete SimpleType: String(452)", "Delete SimpleName: basePath(453)", "Delete SingleVariableDeclaration(454)", "Delete SimpleName: offloadPartitionData(459)", "Delete SimpleName: partitionId(460)", "Delete MethodInvocation(464)", "Delete SuperMethodInvocation(465)", "Delete SimpleName: String(482)", "Delete SimpleType: String(483)", "Delete SimpleName: basePath(484)", "Delete SingleVariableDeclaration(485)", "Delete SimpleName: offloadBuffers(490)", "Delete SimpleName: partitionId(491)", "Delete MethodInvocation(495)", "Delete SuperMethodInvocation(496)", "Delete SimpleName: String(764)", "Delete SimpleType: String(765)", "Delete SimpleName: basePath(766)", "Delete SimpleName: FileInputStream(805)", "Delete SimpleType: File(776)", "Delete SimpleName: file(777)", "Delete SimpleName: File(778)", "Delete SimpleType: File(779)", "Delete SimpleName: basePath(780)", "Delete ClassInstanceCreation(781)", "Delete VariableDeclarationFragment(782)", "Delete VariableDeclarationStatement(783)", "Delete SimpleName: file(784)", "Delete SimpleName: exists(785)", "Delete MethodInvocation(786)", "Delete SimpleName: LOG(787)", "Delete SimpleName: isDebugEnabled(788)", "Delete MethodInvocation(789)", "Delete StringLiteral: \"loadInMemoryPartitionData: loading message data for \"(792)", "Delete StringLiteral: \"partition \"(793)", "Delete InfixExpression: +(794)", "Delete SimpleName: partitionId(795)", "Delete StringLiteral: \" from \"(796)", "Delete SimpleName: file(797)", "Delete SimpleName: getAbsolutePath(798)", "Delete MethodInvocation(799)", "Delete InfixExpression: +(800)", "Delete MethodInvocation(801)", "Delete ExpressionStatement(802)", "Delete Block(803)", "Delete IfStatement(804)", "Delete SimpleName: fis(807)", "Delete SimpleName: FileInputStream(808)", "Delete SimpleType: FileInputStream(809)", "Delete SimpleName: file(810)", "Delete ClassInstanceCreation(811)", "Delete VariableDeclarationFragment(812)", "Delete VariableDeclarationStatement(813)", "Delete SimpleName: BufferedInputStream(814)", "Delete SimpleType: BufferedInputStream(815)", "Delete SimpleName: bis(816)", "Delete SimpleName: BufferedInputStream(817)", "Delete SimpleType: BufferedInputStream(818)", "Delete SimpleName: fis(819)", "Delete ClassInstanceCreation(820)", "Delete VariableDeclarationFragment(821)", "Delete VariableDeclarationStatement(822)", "Delete SimpleName: DataInputStream(823)", "Delete SimpleType: DataInputStream(824)", "Delete SimpleName: dis(825)", "Delete SimpleName: DataInputStream(826)", "Delete SimpleType: DataInputStream(827)", "Delete SimpleName: bis(828)", "Delete ClassInstanceCreation(829)", "Delete VariableDeclarationFragment(830)", "Delete VariableDeclarationStatement(831)", "Delete SimpleName: dis(838)", "Delete SimpleName: close(839)", "Delete MethodInvocation(840)", "Delete ExpressionStatement(841)", "Delete SimpleName: checkState(848)", "Delete SimpleName: file(849)", "Delete SimpleName: delete(850)", "Delete MethodInvocation(851)", "Delete StringLiteral: \"loadInMemoryPartitionData: failed to delete \"(852)", "Delete StringLiteral: \"%s.\"(853)", "Delete InfixExpression: +(854)", "Delete SimpleName: file(855)", "Delete SimpleName: getAbsoluteFile(856)", "Delete MethodInvocation(857)", "Delete MethodInvocation(858)", "Delete ExpressionStatement(859)", "Delete Block(860)", "Delete IfStatement(861)", "Delete Block(864)", "Delete SimpleName: File(889)", "Delete SimpleName: File(892)", "Delete SimpleType: File(893)", "Delete SimpleName: basePath(894)", "Delete ClassInstanceCreation(895)", "Delete VariableDeclarationFragment(896)", "Delete VariableDeclarationStatement(897)", "Delete SimpleName: checkState(898)", "Delete SimpleName: file(899)", "Delete SimpleName: exists(900)", "Delete MethodInvocation(901)", "Delete PrefixExpression: !(902)", "Delete StringLiteral: \"offloadInMemoryPartitionData: message store\"(903)", "Delete StringLiteral: \" file %s already exist\"(904)", "Delete InfixExpression: +(905)", "Delete MethodInvocation(909)", "Delete ExpressionStatement(910)", "Delete SimpleName: file(912)", "Delete MethodInvocation(914)", "Delete StringLiteral: \"offloadInMemoryPartitionData: cannot create message store file %s\"(915)", "Delete MethodInvocation(919)", "Delete ExpressionStatement(920)", "Delete SimpleName: FileOutputStream(921)", "Delete SimpleType: FileOutputStream(922)", "Delete SimpleName: fileout(923)", "Delete SimpleName: FileOutputStream(924)", "Delete SimpleType: FileOutputStream(925)", "Delete SimpleName: file(926)", "Delete ClassInstanceCreation(927)", "Delete VariableDeclarationFragment(928)", "Delete VariableDeclarationStatement(929)", "Delete SimpleName: BufferedOutputStream(930)", "Delete SimpleType: BufferedOutputStream(931)", "Delete SimpleName: bufferout(932)", "Delete SimpleName: BufferedOutputStream(933)", "Delete SimpleType: BufferedOutputStream(934)", "Delete SimpleName: fileout(935)", "Delete ClassInstanceCreation(936)", "Delete VariableDeclarationFragment(937)", "Delete VariableDeclarationStatement(938)", "Delete SimpleName: DataOutputStream(939)", "Delete SimpleType: DataOutputStream(940)", "Delete SimpleName: outputStream(941)", "Delete SimpleName: DataOutputStream(942)", "Delete SimpleType: DataOutputStream(943)", "Delete SimpleName: bufferout(944)", "Delete ClassInstanceCreation(945)", "Delete VariableDeclarationFragment(946)", "Delete VariableDeclarationStatement(947)", "Delete MethodInvocation(961)", "Delete SimpleName: numBytes(963)", "Delete MethodInvocation(966)", "Delete Assignment: +=(967)"]}}, {"DiskBackedPartitionStore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from org.apache.giraph.bsp.CentralizedServiceWorker to org.apache.giraph.ooc.persistence.DataIndex", "operations": ["UPD QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker from org.apache.giraph.bsp.CentralizedServiceWorker to org.apache.giraph.ooc.persistence.DataIndex"]}, {"root": "UPDATE from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "operations": ["UPD QualifiedName: java.io.DataOutputStream from java.io.DataOutputStream to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor"]}, {"root": "UPDATE from OutOfCoreDataManager<ExtendedDataOutput> to DiskBackedDataStore<ExtendedDataOutput>", "operations": ["UPD ParameterizedType: OutOfCoreDataManager<ExtendedDataOutput> from OutOfCoreDataManager<ExtendedDataOutput> to DiskBackedDataStore<ExtendedDataOutput>"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS IfStatement to Block at 13", "INS SimpleName: ioThreadId to MethodInvocation at 2", "INS ExpressionStatement to Block at 9", "INS SimpleName: dataAccessor to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: remove to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 12", "INS PrimitiveType: long to MethodDeclaration at 2", "INS SimpleName: shouldDeleteEdges to VariableDeclarationFragment at 0", "INS SimpleName: inputWrapper to VariableDeclarationFragment at 0", "INS SimpleName: inputWrapper to Assignment: = at 0", "INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: shouldDeleteEdges to Assignment: = at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: copy to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 3", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: index to MethodInvocation at 0", "INS SimpleName: hasPartitionDataOnFile to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS SimpleName: ioThreadId to MethodInvocation at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: prepareInput to MethodInvocation at 1", "INS BooleanLiteral: true to Assignment: = at 1"]}, {"root": "UPDATE from OutOfCoreDataManager to DiskBackedDataStore", "operations": ["UPD SimpleName: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore", "UPD SimpleType: OutOfCoreDataManager from OutOfCoreDataManager to DiskBackedDataStore"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from getVerticesPath to loadInMemoryPartitionData", "operations": ["UPD SimpleName: getVerticesPath from getVerticesPath to loadInMemoryPartitionData"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: getVerticesPath to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "UPDATE from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData", "operations": ["UPD SimpleName: addEntryToImMemoryPartitionData from addEntryToImMemoryPartitionData to addEntryToInMemoryPartitionData"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from INPUT_SUPERSTEP (\"raw data buffer\" -- defined in OutOfCoreDataManager -- to INPUT_SUPERSTEP (\"raw data buffer\" -- defined in DiskBackedDataStore --", "operations": ["UPD TextElement: INPUT_SUPERSTEP (\"raw data buffer\" -- defined in OutOfCoreDataManager -- from INPUT_SUPERSTEP (\"raw data buffer\" -- defined in OutOfCoreDataManager -- to INPUT_SUPERSTEP (\"raw data buffer\" -- defined in DiskBackedDataStore --"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SimpleName: oocEngine to SuperConstructorInvocation at 1", "INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS PrimitiveType: int to SingleVariableDeclaration at 0", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: ioThreadId to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: ioThreadId to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from String to DataIndex", "operations": ["UPD SimpleType: String from String to DataIndex", "UPD SimpleName: String from String to DataIndex", "UPD SimpleName: String from String to DataIndex", "UPD SimpleType: String from String to DataIndex"]}, {"root": "UPDATE from file to index", "operations": ["UPD SimpleName: file from file to index", "UPD SimpleName: path from path to index", "UPD SimpleName: file from file to index", "UPD SimpleName: writeOutEdges from writeOutEdges to index", "UPD SimpleName: file from file to index", "UPD SimpleName: file from file to index", "UPD SimpleName: file from file to index", "UPD SimpleName: basePath from basePath to index", "UPD SimpleName: file from file to index", "UPD SimpleName: getEdgesPath from getEdgesPath to index", "UPD SimpleName: file from file to index"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from SuperConstructorInvocation", "operations": ["MOV SimpleName: conf to SuperConstructorInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: loadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS SimpleType: DataIndex to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: offloadPartitionDataProxy to MethodInvocation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION to MethodInvocation at 2", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: partitionId to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: partitionId to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION to MethodInvocation at 2", "INS SimpleType: DataIndex to ClassInstanceCreation at 0", "INS SimpleName: offloadBuffersProxy to MethodInvocation at 0", "INS SimpleName: DataIndex to SimpleType: DataIndex at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 11", "MOV ExpressionStatement to Block at 10", "MOV ExpressionStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 5", "MOV ExpressionStatement to Block at 7", "MOV ForStatement to Block at 6", "MOV ExpressionStatement to Block at 16", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 14", "MOV VariableDeclarationStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 15"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleType: OutOfCoreDataAccessor.DataOutputWrapper to VariableDeclarationStatement at 0", "INS SimpleName: outputWrapper to VariableDeclarationFragment at 0", "INS QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper to SimpleType: OutOfCoreDataAccessor.DataOutputWrapper at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS SimpleName: index to MethodInvocation at 0", "INS SimpleName: removeLastIndex to MethodInvocation at 1", "INS ExpressionStatement to Block at 16", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS ExpressionStatement to Block at 17", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION_EDGES to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 18", "operations": ["INS IfStatement to Block at 18", "INS Block to IfStatement at 1", "INS SimpleName: partition to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 1", "INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 19"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 20", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from File to OutOfCoreDataAccessor", "operations": ["UPD SimpleName: File from File to OutOfCoreDataAccessor", "UPD SimpleType: File from File to OutOfCoreDataAccessor", "UPD SimpleName: File from File to OutOfCoreDataAccessor", "UPD SimpleType: File from File to OutOfCoreDataAccessor"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION_VERTICES to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper", "operations": ["UPD SimpleType: FileInputStream from FileInputStream to OutOfCoreDataAccessor.DataInputWrapper"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: FileInputStream to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from DataInputStream to DataInput", "operations": ["UPD SimpleName: DataInputStream from DataInputStream to DataInput", "UPD SimpleType: DataInputStream from DataInputStream to DataInput"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from getAbsolutePath to addIndex", "operations": ["UPD SimpleName: getAbsolutePath from getAbsolutePath to addIndex", "UPD SimpleName: path from path to addIndex", "UPD SimpleName: basePath from basePath to addIndex", "UPD SimpleName: file from file to addIndex", "UPD SimpleName: basePath from basePath to addIndex", "UPD SimpleName: getAbsolutePath from getAbsolutePath to addIndex", "UPD SimpleName: basePath from basePath to addIndex"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION_VERTICES to MethodInvocation at 2"]}, {"root": "UPDATE from DataOutputStream to DataOutput", "operations": ["UPD SimpleName: DataOutputStream from DataOutputStream to DataOutput", "UPD SimpleType: DataOutputStream from DataOutputStream to DataOutput"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: basePath to MethodInvocation at 1"]}, {"root": "UPDATE from LOG to dataAccessor", "operations": ["UPD SimpleName: LOG from LOG to dataAccessor", "UPD SimpleName: file from file to dataAccessor", "UPD SimpleName: checkState from checkState to dataAccessor", "UPD SimpleName: file from file to dataAccessor", "UPD SimpleName: file from file to dataAccessor", "UPD SimpleName: checkState from checkState to dataAccessor"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAbsolutePath to MethodInvocation at 1", "MOV SimpleName: file to MethodInvocation at 0"]}, {"root": "INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0", "operations": ["INS QualifiedName: OutOfCoreDataAccessor.DataInputWrapper to SimpleType: FileInputStream at 0"]}, {"root": "UPDATE from inputStream to dataInput", "operations": ["UPD SimpleName: inputStream from inputStream to dataInput", "UPD SimpleName: inputStream from inputStream to dataInput", "UPD SimpleName: inputStream from inputStream to dataInput", "UPD SimpleName: inputStream from inputStream to dataInput", "UPD SimpleName: inputStream from inputStream to dataInput"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: inputWrapper to MethodInvocation at 0", "INS SimpleName: getDataInput to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: file to MethodInvocation at 2"]}, {"root": "INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION_EDGES to MethodInvocation at 3", "operations": ["INS QualifiedName: DataIndex.TypeIndexEntry.PARTITION_EDGES to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getDataInput to MethodInvocation at 1", "INS SimpleName: inputWrapper to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: delete to MethodInvocation at 1", "MOV SimpleName: file to MethodInvocation at 0"]}, {"root": "UPDATE from vertex to removeLastIndex", "operations": ["UPD SimpleName: vertex from vertex to removeLastIndex", "UPD SimpleName: delete from delete to removeLastIndex", "UPD SimpleName: delete from delete to removeLastIndex"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: file to MethodInvocation at 0", "MOV SimpleName: getAbsolutePath to MethodInvocation at 1"]}, {"root": "UPDATE from outputStream to dataOutput", "operations": ["UPD SimpleName: outputStream from outputStream to dataOutput", "UPD SimpleName: outputStream from outputStream to dataOutput", "UPD SimpleName: outputStream from outputStream to dataOutput"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getDataOutput to MethodInvocation at 1", "INS SimpleName: outputWrapper to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getEdgesPath to MethodInvocation at 0", "MOV SimpleName: path to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: || to InfixExpression: || at 0"]}, {"root": "UPDATE from outputStream to hasPartitionDataOnFile", "operations": ["UPD SimpleName: outputStream from outputStream to hasPartitionDataOnFile"]}, {"root": "UPDATE from close to add", "operations": ["UPD SimpleName: close from close to add"]}, {"root": "INS SimpleName: partitionId to MethodInvocation at 2", "operations": ["INS SimpleName: partitionId to MethodInvocation at 2"]}, {"root": "UPDATE from getVerticesPath to oocEngine", "operations": ["UPD SimpleName: getVerticesPath from getVerticesPath to oocEngine", "UPD SimpleName: getVerticesPath from getVerticesPath to oocEngine"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: path to MethodInvocation at 1", "MOV SimpleName: getVerticesPath to MethodInvocation at 0"]}, {"root": "UPDATE from path to getDataAccessor", "operations": ["UPD SimpleName: path from path to getDataAccessor", "UPD SimpleName: path from path to getDataAccessor"]}, {"root": "UPDATE from file to inputWrapper", "operations": ["UPD SimpleName: file from file to inputWrapper"]}, {"root": "UPDATE from file to finalizeInput", "operations": ["UPD SimpleName: file from file to finalizeInput", "UPD SimpleName: length from length to finalizeInput"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 2", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: LOG to MethodInvocation at 0", "MOV SimpleName: debug to MethodInvocation at 1"]}, {"root": "UPDATE from debug to prepareInput", "operations": ["UPD SimpleName: debug from debug to prepareInput"]}, {"root": "INS SimpleName: inputWrapper to MethodInvocation at 0", "operations": ["INS SimpleName: inputWrapper to MethodInvocation at 0"]}, {"root": "UPDATE from length to shouldDeleteEdges", "operations": ["UPD SimpleName: length from length to shouldDeleteEdges"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: path to MethodInvocation at 1", "MOV SimpleName: getVerticesPath to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: checkState to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from file to prepareOutput", "operations": ["UPD SimpleName: file from file to prepareOutput", "UPD SimpleName: file from file to prepareOutput"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: file to MethodInvocation at 1", "MOV SimpleName: createNewFile to MethodInvocation at 2"]}, {"root": "UPDATE from createNewFile to ioThreadId", "operations": ["UPD SimpleName: createNewFile from createNewFile to ioThreadId", "UPD SimpleName: createNewFile from createNewFile to ioThreadId"]}, {"root": "UPDATE from file to outputWrapper", "operations": ["UPD SimpleName: file from file to outputWrapper", "UPD SimpleName: outputStream from outputStream to outputWrapper"]}, {"root": "UPDATE from size to finalizeOutput", "operations": ["UPD SimpleName: size from size to finalizeOutput"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV PrefixExpression: ! to InfixExpression: || at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS BooleanLiteral: false to MethodInvocation at 4", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: outputWrapper to Assignment: = at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "UPDATE from = to +=", "operations": ["UPD Assignment: = from = to +="]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAbsolutePath to MethodInvocation at 1", "MOV SimpleName: file to MethodInvocation at 0"]}, {"root": "UPDATE from getAbsolutePath to copy", "operations": ["UPD SimpleName: getAbsolutePath from getAbsolutePath to copy", "UPD SimpleName: getAbsolutePath from getAbsolutePath to copy", "UPD SimpleName: getAbsolutePath from getAbsolutePath to copy"]}, {"root": "UPDATE from exists to dataExist", "operations": ["UPD SimpleName: exists from exists to dataExist"]}, {"root": "INS SimpleName: ioThreadId to MethodInvocation at 2", "operations": ["INS SimpleName: ioThreadId to MethodInvocation at 2"]}, {"root": "INS SimpleName: index to MethodInvocation at 3", "operations": ["INS SimpleName: index to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from bufferout to numBytes", "operations": ["UPD SimpleName: bufferout from bufferout to numBytes"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: outputWrapper to MethodInvocation at 0", "INS SimpleName: finalizeOutput to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: checkState to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: file to MethodInvocation at 1", "MOV SimpleName: createNewFile to MethodInvocation at 2"]}, {"root": "UPDATE from LOG to writeOutEdges", "operations": ["UPD SimpleName: LOG from LOG to writeOutEdges"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS SimpleName: vertex to MethodInvocation at 2", "operations": ["INS SimpleName: vertex to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: file to MethodInvocation at 0", "MOV SimpleName: getAbsolutePath to MethodInvocation at 1"]}, {"root": "UPDATE from getAbsolutePath to getDataOutput", "operations": ["UPD SimpleName: getAbsolutePath from getAbsolutePath to getDataOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.BufferedInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.BufferedOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.File"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Preconditions.checkState", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL ParameterizedType: CentralizedServiceWorker<I,V,E>", "DEL SimpleType: I", "DEL SimpleName: I", "DEL Modifier: final", "DEL Javadoc", "DEL TextElement: Service worker ", "DEL Modifier: private", "DEL TagElement", "DEL SimpleType: CentralizedServiceWorker", "DEL SimpleName: CentralizedServiceWorker", "DEL VariableDeclarationFragment", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleType: E", "DEL SimpleName: E", "DEL FieldDeclaration", "DEL SimpleName: serviceWorker"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL SimpleName: OutOfCoreEngine", "DEL TextElement: Out-of-core engine ", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL Modifier: final", "DEL SimpleType: OutOfCoreEngine", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleName: oocEngine"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TextElement:  Service worker", "DEL SimpleName: serviceWorker", "DEL TagElement: @param"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: CentralizedServiceWorker", "DEL SimpleName: I", "DEL SimpleName: V", "DEL ParameterizedType: CentralizedServiceWorker<I,V,E>", "DEL SimpleName: E", "DEL SimpleType: V", "DEL SimpleType: E", "DEL SimpleType: I", "DEL SimpleName: serviceWorker", "DEL SimpleName: CentralizedServiceWorker", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL SimpleName: serviceWorker", "DEL Assignment: =", "DEL SimpleName: serviceWorker", "DEL FieldAccess", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: oocEngine", "DEL ThisExpression", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: oocEngine", "DEL Assignment: ="]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: basePath", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL TextElement: Gets the path that should be used specifically for partition data.", "DEL SimpleType: String", "DEL Block", "DEL StringLiteral: \"_partition\"", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL TagElement", "DEL SimpleName: basePath", "DEL SimpleName: String", "DEL SimpleType: String", "DEL Modifier: private", "DEL TagElement: @return", "DEL InfixExpression: +", "DEL Javadoc", "DEL TextElement:  path prefix to build the actual path from", "DEL SimpleName: basePath", "DEL TagElement: @param", "DEL TextElement:  path to files specific for partition data", "DEL SimpleName: getPath", "DEL Modifier: static"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement:  The path to the vertices file", "DEL TagElement", "DEL Javadoc", "DEL SimpleType: String", "DEL TextElement: Get the path to the file where vertices are stored.", "DEL TagElement: @return", "DEL StringLiteral: \"_vertices\"", "DEL InfixExpression: +", "DEL TagElement: @param", "DEL Block", "DEL SimpleName: basePath", "DEL TextElement:  path prefix to build the actual path from", "DEL Modifier: private", "DEL Modifier: static", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL SimpleName: basePath"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Javadoc", "DEL SimpleName: getEdgesPath", "DEL ReturnStatement", "DEL SimpleName: basePath", "DEL TextElement:  path prefix to build the actual path from", "DEL TagElement: @return", "DEL SimpleName: String", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL Modifier: private", "DEL TagElement", "DEL Block", "DEL TextElement:  The path to the edges file", "DEL SimpleName: basePath", "DEL StringLiteral: \"_edges\"", "DEL TextElement: Get the path to the file where edges are stored.", "DEL TagElement: @param", "DEL Modifier: static"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: basePath", "operations": ["DEL SimpleName: basePath"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MethodInvocation", "DEL SimpleName: File", "DEL ClassInstanceCreation", "DEL SimpleType: File"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \" from \"", "DEL MethodInvocation", "DEL StringLiteral: \"loadInMemoryPartitionData: loading partition vertices \"", "DEL InfixExpression: +", "DEL SimpleName: partitionId", "DEL SimpleName: debug", "DEL SimpleName: LOG"]}, {"root": "DEL SimpleName: FileInputStream", "operations": ["DEL SimpleName: FileInputStream"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: bis", "DEL SimpleName: DataInputStream", "DEL ClassInstanceCreation", "DEL SimpleType: DataInputStream"]}, {"root": "DEL SimpleName: checkState", "operations": ["DEL SimpleName: checkState"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \"loadInMemoryPartitionData: failed to delete \"", "DEL StringLiteral: \"%s\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getAbsolutePath", "DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: bis", "DEL SimpleType: DataInputStream", "DEL SimpleName: DataInputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: checkState", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: file", "DEL SimpleName: getAbsolutePath", "DEL StringLiteral: \"loadPartition: failed to delete %s\"", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL IfStatement", "DEL SimpleName: file", "DEL SimpleName: isDebugEnabled", "DEL PrimitiveType: long", "DEL SimpleName: close", "DEL Modifier: protected", "DEL SimpleName: loadInMemoryPartitionData", "DEL StringLiteral: \"loadInMemoryPartitionData: loading partition edges \"", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: BufferedInputStream", "DEL ClassInstanceCreation", "DEL SimpleName: inputStream", "DEL ClassInstanceCreation", "DEL SimpleName: isDebugEnabled", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: fis", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: bis", "DEL SimpleType: BufferedInputStream", "DEL Assignment: =", "DEL SimpleName: BufferedInputStream", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleType: BufferedInputStream", "DEL SimpleName: BufferedInputStream", "DEL MethodDeclaration", "DEL SimpleName: File", "DEL ExpressionStatement", "DEL IfStatement", "DEL Block", "DEL Assignment: =", "DEL SimpleName: bis", "DEL MethodInvocation", "DEL SimpleName: getEdgesPath", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: file", "DEL SimpleName: String", "DEL SimpleName: file", "DEL SimpleType: BufferedInputStream", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: path", "DEL SimpleName: FileInputStream", "DEL SimpleName: path", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: LOG", "DEL SimpleName: LOG", "DEL SimpleName: close", "DEL SimpleType: FileInputStream", "DEL ExpressionStatement", "DEL SimpleName: exists", "DEL SimpleName: fis", "DEL ClassInstanceCreation", "DEL StringLiteral: \" from \"", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: FileInputStream", "DEL Block", "DEL SimpleName: inputStream", "DEL MethodInvocation", "DEL SimpleName: fis", "DEL SimpleName: file", "DEL VariableDeclarationFragment", "DEL SimpleName: partitionId", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: File", "DEL SimpleName: fis", "DEL SimpleType: FileInputStream"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: basePath", "DEL SimpleType: String"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: getPath", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: loadPartitionData", "DEL SuperMethodInvocation"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: basePath"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: partitionId", "DEL SimpleName: offloadPartitionData", "DEL SuperMethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPath"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: File", "DEL MethodInvocation", "DEL SimpleType: File", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: debug", "DEL SimpleName: partitionId", "DEL StringLiteral: \"offloadInMemoryPartitionData: writing partition vertices \"", "DEL InfixExpression: +", "DEL StringLiteral: \" to \"", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleName: isDebugEnabled", "DEL Block", "DEL IfStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \"offloadInMemoryPartitionData: partition \"", "DEL SimpleName: file", "DEL SimpleName: getAbsoluteFile", "DEL SimpleName: exists", "DEL SimpleName: file", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL StringLiteral: \"store file %s already exist\"", "DEL SimpleName: checkState", "DEL PrefixExpression: !", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: file %s already exists.\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: FileOutputStream", "DEL SimpleName: FileOutputStream", "DEL SimpleType: FileOutputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: fileout", "DEL VariableDeclarationFragment", "DEL SimpleName: file", "DEL SimpleName: FileOutputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: BufferedOutputStream", "DEL SimpleName: bufferout", "DEL SimpleType: BufferedOutputStream", "DEL VariableDeclarationFragment", "DEL SimpleName: fileout", "DEL SimpleType: BufferedOutputStream", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: BufferedOutputStream"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: DataOutputStream", "DEL SimpleType: DataOutputStream", "DEL ClassInstanceCreation", "DEL SimpleName: bufferout"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: close", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: outputStream"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL NullLiteral", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: partitionVertexCount", "DEL SimpleName: partitionId"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL InfixExpression: ||", "DEL SimpleName: partitionVertexCount", "DEL SimpleName: getVertexCount", "DEL InfixExpression: !=", "DEL InfixExpression: ||", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL MethodInvocation", "DEL SimpleName: get"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: file \"", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL StringLiteral: \"%s already exists.\""]}, {"root": "DEL SimpleName: debug", "operations": ["DEL SimpleName: debug"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL StringLiteral: \" to \"", "DEL SimpleName: partitionId", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL StringLiteral: \"offloadInMemoryPartitionData: writing partition edges \""]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: BufferedOutputStream", "DEL SimpleName: fileout", "DEL SimpleType: BufferedOutputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleName: outputStream", "operations": ["DEL SimpleName: outputStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: File", "DEL SimpleType: File", "DEL MethodInvocation", "DEL SimpleName: file", "DEL Assignment: ="]}, {"root": "DEL IfStatement", "operations": ["DEL EnhancedForStatement", "DEL SimpleName: fileout", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: FileOutputStream", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleType: DataOutputStream", "DEL SimpleName: outputStream", "DEL Block", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleName: LOG", "DEL Block", "DEL Block", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: file", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: partition", "DEL SimpleName: DataOutputStream", "DEL SimpleName: bufferout", "DEL SimpleName: FileOutputStream", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: numBytes", "DEL SimpleName: outputStream", "DEL SimpleName: size", "DEL Assignment: +="]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: basePath"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: getPath", "DEL SimpleName: partitionId", "DEL SuperMethodInvocation", "DEL SimpleName: offloadBuffers", "DEL MethodInvocation"]}]}}, {"DiskBackedPartitionStore_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(1579) at 8", "Move ImportDeclaration(45) into CompilationUnit(1579) at 8", "Update QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker(6) to org.apache.giraph.ooc.persistence.DataIndex", "Update QualifiedName: java.io.DataOutputStream(44) to org.apache.giraph.ooc.persistence.OutOfCoreDataAccessor", "Update ParameterizedType: OutOfCoreDataManager<ExtendedDataOutput>(99) to DiskBackedDataStore<ExtendedDataOutput>", "Insert MethodDeclaration(1070) into TypeDeclaration: class(1578) at 31", "Update SimpleType: OutOfCoreDataManager(96) to DiskBackedDataStore", "Move MarkerAnnotation(997) into MethodDeclaration(1070) at 0", "Insert Modifier: protected(863) into MethodDeclaration(1070) at 1", "Insert PrimitiveType: long(864) into MethodDeclaration(1070) at 2", "Update SimpleName: getVerticesPath(760) to loadInMemoryPartitionData", "Move SimpleName: getVerticesPath(760) into MethodDeclaration(1070) at 3", "Move SingleVariableDeclaration(1003) into MethodDeclaration(1070) at 4", "Move SingleVariableDeclaration(764) into MethodDeclaration(1070) at 5", "Move SingleVariableDeclaration(787) into MethodDeclaration(1070) at 6", "Move SimpleType: IOException(1009) into MethodDeclaration(1070) at 7", "Insert Block(1069) into MethodDeclaration(1070) at 8", "Update SimpleName: addEntryToImMemoryPartitionData(1285) to addEntryToInMemoryPartitionData", "Move MarkerAnnotation(1823) into MethodDeclaration(1146) at 0", "Move SingleVariableDeclaration(1829) into MethodDeclaration(1146) at 5", "Move SimpleType: IOException(1835) into MethodDeclaration(1146) at 6", "Move MarkerAnnotation(1316) into MethodDeclaration(1168) at 0", "Move SingleVariableDeclaration(1322) into MethodDeclaration(1168) at 5", "Move SimpleType: IOException(1328) into MethodDeclaration(1168) at 6", "Insert SingleVariableDeclaration(1321) into MethodDeclaration(1517) at 5", "Move MarkerAnnotation(1339) into MethodDeclaration(1562) at 0", "Move SingleVariableDeclaration(1345) into MethodDeclaration(1562) at 4", "Move SimpleType: IOException(1351) into MethodDeclaration(1562) at 5", "Update TextElement: INPUT_SUPERSTEP (\"raw data buffer\" -- defined in OutOfCoreDataManager --(62) to INPUT_SUPERSTEP (\"raw data buffer\" -- defined in DiskBackedDataStore --", "Update SimpleName: OutOfCoreDataManager(95) to DiskBackedDataStore", "Insert SuperConstructorInvocation(260) into Block(279) at 0", "Insert PrimitiveType: int(869) into SingleVariableDeclaration(871) at 0", "Insert SimpleName: ioThreadId(870) into SingleVariableDeclaration(871) at 1", "Update SimpleType: String(785) to DataIndex", "Update SimpleName: basePath(786) to index", "Move VariableDeclarationStatement(1014) into Block(1069) at 0", "Insert IfStatement(1066) into Block(1069) at 1", "Move ReturnStatement(1258) into Block(1069) at 2", "Insert PrimitiveType: int(1319) into SingleVariableDeclaration(1321) at 0", "Insert SimpleName: ioThreadId(1320) into SingleVariableDeclaration(1321) at 1", "Update SimpleType: String(1512) to DataIndex", "Update SimpleName: path(1513) to index", "Move SimpleName: conf(313) into SuperConstructorInvocation(260) at 0", "Insert SimpleName: oocEngine(259) into SuperConstructorInvocation(260) at 1", "Update SimpleName: String(784) to DataIndex", "Insert MethodInvocation(886) into IfStatement(1066) at 0", "Insert Block(1065) into IfStatement(1066) at 1", "Insert MethodInvocation(1143) into ReturnStatement(1144) at 0", "Insert MethodInvocation(1165) into ReturnStatement(1166) at 0", "Update SimpleName: String(1511) to DataIndex", "Move VariableDeclarationStatement(1570) into Block(1512) at 0", "Insert MethodInvocation(1559) into ReturnStatement(1560) at 0", "Insert SimpleName: hasPartitionDataOnFile(883) into MethodInvocation(886) at 0", "Insert SimpleName: remove(884) into MethodInvocation(886) at 1", "Insert SimpleName: partitionId(885) into MethodInvocation(886) at 2", "Move VariableDeclarationStatement(1045) into Block(1065) at 0", "Move VariableDeclarationStatement(1025) into Block(1065) at 1", "Move ExpressionStatement(1059) into Block(1065) at 2", "Insert VariableDeclarationStatement(928) into Block(1065) at 3", "Move VariableDeclarationStatement(1088) into Block(1065) at 4", "Move VariableDeclarationStatement(1095) into Block(1065) at 5", "Move ForStatement(1132) into Block(1065) at 6", "Move ExpressionStatement(1142) into Block(1065) at 7", "Move ExpressionStatement(1154) into Block(1065) at 8", "Insert ExpressionStatement(1004) into Block(1065) at 9", "Move ExpressionStatement(1200) into Block(1065) at 10", "Move ForStatement(1217) into Block(1065) at 11", "Insert VariableDeclarationStatement(1032) into Block(1065) at 12", "Insert IfStatement(1048) into Block(1065) at 13", "Move ExpressionStatement(1227) into Block(1065) at 14", "Move ExpressionStatement(1247) into Block(1065) at 15", "Move ExpressionStatement(1254) into Block(1065) at 16", "Insert SimpleName: loadPartitionDataProxy(1135) into MethodInvocation(1143) at 0", "Insert SimpleName: partitionId(1136) into MethodInvocation(1143) at 1", "Insert MethodInvocation(1142) into MethodInvocation(1143) at 2", "Insert SimpleName: offloadPartitionDataProxy(1157) into MethodInvocation(1165) at 0", "Insert SimpleName: partitionId(1158) into MethodInvocation(1165) at 1", "Insert MethodInvocation(1164) into MethodInvocation(1165) at 2", "Move ExpressionStatement(1584) into Block(1512) at 4", "Insert VariableDeclarationStatement(1396) into Block(1512) at 5", "Insert ExpressionStatement(1440) into Block(1512) at 10", "Insert ExpressionStatement(1445) into Block(1512) at 11", "Insert IfStatement(1502) into Block(1512) at 12", "Move ExpressionStatement(1778) into Block(1512) at 19", "Move ExpressionStatement(1784) into Block(1512) at 20", "Insert SimpleName: offloadBuffersProxy(1551) into MethodInvocation(1559) at 0", "Insert SimpleName: partitionId(1552) into MethodInvocation(1559) at 1", "Insert MethodInvocation(1558) into MethodInvocation(1559) at 2", "Update SimpleType: File(1016) to OutOfCoreDataAccessor", "Insert MethodInvocation(915) into ExpressionStatement(916) at 0", "Update SimpleType: FileInputStream(1063) to OutOfCoreDataAccessor.DataInputWrapper", "Move SimpleType: FileInputStream(1063) into VariableDeclarationStatement(928) at 0", "Insert VariableDeclarationFragment(927) into VariableDeclarationStatement(928) at 1", "Update SimpleType: DataInputStream(1081) to DataInput", "Insert Assignment: =(1003) into ExpressionStatement(1004) at 0", "Insert PrimitiveType: boolean(1028) into VariableDeclarationStatement(1032) at 0", "Insert VariableDeclarationFragment(1031) into VariableDeclarationStatement(1032) at 1", "Move InfixExpression: ||(1237) into IfStatement(1048) at 0", "Insert Block(1047) into IfStatement(1048) at 1", "Insert MethodInvocation(1058) into ExpressionStatement(1059) at 0", "Insert ClassInstanceCreation(1139) into MethodInvocation(1142) at 0", "Update SimpleName: basePath(1332) to addIndex", "Move SimpleName: basePath(1332) into MethodInvocation(1142) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION(1141) into MethodInvocation(1142) at 2", "Insert ClassInstanceCreation(1161) into MethodInvocation(1164) at 0", "Update SimpleName: basePath(1355) to addIndex", "Move SimpleName: basePath(1355) into MethodInvocation(1164) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION(1163) into MethodInvocation(1164) at 2", "Update SimpleType: File(1561) to OutOfCoreDataAccessor", "Insert MethodInvocation(1382) into ExpressionStatement(1383) at 0", "Insert SimpleType: OutOfCoreDataAccessor.DataOutputWrapper(1385) into VariableDeclarationStatement(1396) at 0", "Insert VariableDeclarationFragment(1395) into VariableDeclarationStatement(1396) at 1", "Update SimpleType: DataOutputStream(1629) to DataOutput", "Move SingleVariableDeclaration(1772) into EnhancedForStatement(1430) at 0", "Insert MethodInvocation(1439) into ExpressionStatement(1440) at 0", "Insert MethodInvocation(1444) into ExpressionStatement(1445) at 0", "Move InfixExpression: ||(1712) into IfStatement(1502) at 0", "Insert Block(1501) into IfStatement(1502) at 1", "Insert ClassInstanceCreation(1555) into MethodInvocation(1558) at 0", "Update SimpleName: basePath(1839) to addIndex", "Move SimpleName: basePath(1839) into MethodInvocation(1558) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION(1557) into MethodInvocation(1558) at 2", "Update SimpleName: File(1015) to OutOfCoreDataAccessor", "Update SimpleName: file(1017) to dataAccessor", "Insert MethodInvocation(909) into VariableDeclarationFragment(910) at 1", "Update SimpleName: file(1054) to index", "Move SimpleName: file(1054) into MethodInvocation(915) at 0", "Update SimpleName: getAbsolutePath(1055) to addIndex", "Move SimpleName: getAbsolutePath(1055) into MethodInvocation(915) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION_VERTICES(914) into MethodInvocation(915) at 2", "Insert QualifiedName: OutOfCoreDataAccessor.DataInputWrapper(917) into SimpleType: OutOfCoreDataAccessor.DataInputWrapper(918) at 0", "Insert SimpleName: inputWrapper(919) into VariableDeclarationFragment(927) at 0", "Insert MethodInvocation(926) into VariableDeclarationFragment(927) at 1", "Update SimpleName: DataInputStream(1080) to DataInput", "Update SimpleName: inputStream(1082) to dataInput", "Insert MethodInvocation(934) into VariableDeclarationFragment(935) at 1", "Update SimpleName: file(1150) to addIndex", "Move SimpleName: file(1150) into MethodInvocation(993) at 2", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION_EDGES(992) into MethodInvocation(993) at 2", "Insert SimpleName: inputWrapper(995) into Assignment: =(1003) at 0", "Insert MethodInvocation(1002) into Assignment: =(1003) at 1", "Update SimpleName: inputStream(1194) to dataInput", "Insert MethodInvocation(1008) into Assignment: =(1009) at 1", "Insert SimpleName: shouldDeleteEdges(1029) into VariableDeclarationFragment(1031) at 0", "Insert BooleanLiteral: false(1030) into VariableDeclarationFragment(1031) at 1", "Insert ExpressionStatement(1046) into Block(1047) at 0", "Update SimpleName: file(1239) to index", "Move SimpleName: file(1239) into MethodInvocation(1058) at 0", "Update SimpleName: delete(1240) to removeLastIndex", "Move SimpleName: delete(1240) into MethodInvocation(1058) at 1", "Insert SimpleType: DataIndex(1138) into ClassInstanceCreation(1139) at 0", "Insert SimpleType: DataIndex(1160) into ClassInstanceCreation(1161) at 0", "Update SimpleName: File(1560) to OutOfCoreDataAccessor", "Update SimpleName: file(1562) to dataAccessor", "Insert MethodInvocation(1342) into VariableDeclarationFragment(1343) at 1", "Update SimpleName: file(1579) to index", "Move SimpleName: file(1579) into MethodInvocation(1382) at 0", "Update SimpleName: getAbsolutePath(1580) to addIndex", "Move SimpleName: getAbsolutePath(1580) into MethodInvocation(1382) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION_VERTICES(1381) into MethodInvocation(1382) at 2", "Insert QualifiedName: OutOfCoreDataAccessor.DataOutputWrapper(1384) into SimpleType: OutOfCoreDataAccessor.DataOutputWrapper(1385) at 0", "Insert SimpleName: outputWrapper(1386) into VariableDeclarationFragment(1395) at 0", "Insert MethodInvocation(1394) into VariableDeclarationFragment(1395) at 1", "Update SimpleName: DataOutputStream(1628) to DataOutput", "Update SimpleName: outputStream(1630) to dataOutput", "Insert MethodInvocation(1402) into VariableDeclarationFragment(1403) at 1", "Update SimpleName: outputStream(1637) to dataOutput", "Insert SimpleName: index(1437) into MethodInvocation(1439) at 0", "Insert SimpleName: removeLastIndex(1438) into MethodInvocation(1439) at 1", "Update SimpleName: getEdgesPath(1676) to index", "Move SimpleName: getEdgesPath(1676) into MethodInvocation(1444) at 0", "Update SimpleName: path(1677) to addIndex", "Move SimpleName: path(1677) into MethodInvocation(1444) at 1", "Insert QualifiedName: DataIndex.TypeIndexEntry.PARTITION_EDGES(1443) into MethodInvocation(1444) at 2", "Move InfixExpression: ||(1693) into InfixExpression: ||(1462) at 0", "Move ExpressionStatement(1724) into Block(1501) at 0", "Insert EnhancedForStatement(1494) into Block(1501) at 1", "Move ExpressionStatement(1754) into Block(1501) at 2", "Update SimpleName: writeOutEdges(1774) to index", "Update SimpleName: vertex(1776) to removeLastIndex", "Update SimpleName: outputStream(1781) to hasPartitionDataOnFile", "Update SimpleName: close(1782) to add", "Insert SimpleName: partitionId(1509) into MethodInvocation(1510) at 2", "Insert SimpleType: DataIndex(1554) into ClassInstanceCreation(1555) at 0", "Update SimpleName: getVerticesPath(1020) to oocEngine", "Move SimpleName: getVerticesPath(1020) into MethodInvocation(909) at 0", "Update SimpleName: path(1021) to getDataAccessor", "Move SimpleName: path(1021) into MethodInvocation(909) at 1", "Insert SimpleName: dataAccessor(920) into MethodInvocation(926) at 0", "Insert SimpleName: prepareInput(921) into MethodInvocation(926) at 1", "Insert SimpleName: ioThreadId(922) into MethodInvocation(926) at 2", "Insert MethodInvocation(925) into MethodInvocation(926) at 3", "Insert SimpleName: inputWrapper(932) into MethodInvocation(934) at 0", "Insert SimpleName: getDataInput(933) into MethodInvocation(934) at 1", "Update SimpleName: inputStream(1091) to dataInput", "Update SimpleName: file(1138) to inputWrapper", "Update SimpleName: length(1139) to finalizeInput", "Insert BooleanLiteral: true(984) into MethodInvocation(985) at 2", "Update SimpleName: file(1144) to index", "Update SimpleName: delete(1145) to removeLastIndex", "Update SimpleName: LOG(1167) to dataAccessor", "Move SimpleName: LOG(1167) into MethodInvocation(1002) at 0", "Update SimpleName: debug(1168) to prepareInput", "Move SimpleName: debug(1168) into MethodInvocation(1002) at 1", "Insert SimpleName: ioThreadId(998) into MethodInvocation(1002) at 2", "Insert MethodInvocation(1001) into MethodInvocation(1002) at 3", "Insert SimpleName: inputWrapper(1006) into MethodInvocation(1008) at 0", "Insert SimpleName: getDataInput(1007) into MethodInvocation(1008) at 1", "Insert Assignment: =(1045) into ExpressionStatement(1046) at 0", "Insert SimpleName: inputWrapper(1050) into MethodInvocation(1053) at 0", "Update SimpleName: file(1223) to finalizeInput", "Update SimpleName: length(1224) to shouldDeleteEdges", "Insert SimpleName: DataIndex(1137) into SimpleType: DataIndex(1138) at 0", "Insert SimpleName: DataIndex(1159) into SimpleType: DataIndex(1160) at 0", "Update SimpleName: getVerticesPath(1565) to oocEngine", "Move SimpleName: getVerticesPath(1565) into MethodInvocation(1342) at 0", "Update SimpleName: path(1566) to getDataAccessor", "Move SimpleName: path(1566) into MethodInvocation(1342) at 1", "Update SimpleName: checkState(1600) to dataAccessor", "Move SimpleName: checkState(1600) into MethodInvocation(1394) at 0", "Update SimpleName: file(1601) to prepareOutput", "Move SimpleName: file(1601) into MethodInvocation(1394) at 1", "Update SimpleName: createNewFile(1602) to ioThreadId", "Move SimpleName: createNewFile(1602) into MethodInvocation(1394) at 2", "Move MethodInvocation(1607) into MethodInvocation(1394) at 3", "Insert BooleanLiteral: false(1393) into MethodInvocation(1394) at 4", "Insert SimpleName: outputWrapper(1400) into MethodInvocation(1402) at 0", "Insert SimpleName: getDataOutput(1401) into MethodInvocation(1402) at 1", "Update SimpleName: outputStream(1668) to outputWrapper", "Update SimpleName: size(1669) to finalizeOutput", "Move PrefixExpression: !(1706) into InfixExpression: ||(1455) at 1", "Insert Assignment: =(1472) into ExpressionStatement(1473) at 0", "Move SingleVariableDeclaration(1654) into EnhancedForStatement(1494) at 0", "Insert SimpleName: partition(1485) into EnhancedForStatement(1494) at 1", "Insert Block(1493) into EnhancedForStatement(1494) at 2", "Update Assignment: =(1753) to +=", "Insert SimpleName: DataIndex(1553) into SimpleType: DataIndex(1554) at 0", "Insert SimpleName: index(923) into MethodInvocation(925) at 0", "Insert SimpleName: copy(924) into MethodInvocation(925) at 1", "Update SimpleName: inputStream(1122) to dataInput", "Update SimpleName: file(1172) to index", "Move SimpleName: file(1172) into MethodInvocation(1001) at 0", "Update SimpleName: getAbsolutePath(1173) to copy", "Move SimpleName: getAbsolutePath(1173) into MethodInvocation(1001) at 1", "Update SimpleName: inputStream(1212) to dataInput", "Insert SimpleName: shouldDeleteEdges(1043) into Assignment: =(1045) at 0", "Insert BooleanLiteral: true(1044) into Assignment: =(1045) at 1", "Update SimpleName: file(1605) to index", "Update SimpleName: getAbsolutePath(1606) to copy", "Update SimpleName: outputStream(1657) to dataOutput", "Update SimpleName: file(1708) to dataAccessor", "Update SimpleName: exists(1709) to dataExist", "Insert SimpleName: ioThreadId(1458) into MethodInvocation(1460) at 2", "Insert SimpleName: index(1459) into MethodInvocation(1460) at 3", "Insert SimpleName: outputWrapper(1463) into Assignment: =(1472) at 0", "Insert MethodInvocation(1471) into Assignment: =(1472) at 1", "Move ExpressionStatement(1738) into Block(1493) at 0", "Update SimpleName: bufferout(1748) to numBytes", "Insert MethodInvocation(1498) into Assignment: +=(1499) at 1", "Update SimpleName: checkState(1713) to dataAccessor", "Move SimpleName: checkState(1713) into MethodInvocation(1471) at 0", "Update SimpleName: file(1714) to prepareOutput", "Move SimpleName: file(1714) into MethodInvocation(1471) at 1", "Update SimpleName: createNewFile(1715) to ioThreadId", "Move SimpleName: createNewFile(1715) into MethodInvocation(1471) at 2", "Move MethodInvocation(1722) into MethodInvocation(1471) at 3", "Insert BooleanLiteral: false(1470) into MethodInvocation(1471) at 4", "Insert SimpleName: outputWrapper(1496) into MethodInvocation(1498) at 0", "Insert SimpleName: finalizeOutput(1497) into MethodInvocation(1498) at 1", "Update SimpleName: file(1720) to index", "Update SimpleName: getAbsolutePath(1721) to copy", "Update SimpleName: LOG(1728) to writeOutEdges", "Insert MethodInvocation(1489) into MethodInvocation(1491) at 1", "Insert SimpleName: vertex(1490) into MethodInvocation(1491) at 2", "Update SimpleName: file(1733) to outputWrapper", "Move SimpleName: file(1733) into MethodInvocation(1489) at 0", "Update SimpleName: getAbsolutePath(1734) to getDataOutput", "Move SimpleName: getAbsolutePath(1734) into MethodInvocation(1489) at 1", "Delete QualifiedName: java.io.BufferedInputStream(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: java.io.BufferedOutputStream(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: java.io.DataInputStream(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: java.io.File(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: java.io.FileInputStream(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: java.io.FileOutputStream(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(58)", "Delete ImportDeclaration(59)", "Delete TextElement: Service worker (160)", "Delete TagElement(161)", "Delete Javadoc(162)", "Delete Modifier: private(163)", "Delete Modifier: final(164)", "Delete SimpleName: CentralizedServiceWorker(165)", "Delete SimpleType: CentralizedServiceWorker(166)", "Delete SimpleName: I(167)", "Delete SimpleType: I(168)", "Delete SimpleName: V(169)", "Delete SimpleType: V(170)", "Delete SimpleName: E(171)", "Delete SimpleType: E(172)", "Delete ParameterizedType: CentralizedServiceWorker<I,V,E>(173)", "Delete SimpleName: serviceWorker(174)", "Delete VariableDeclarationFragment(175)", "Delete FieldDeclaration(176)", "Delete TextElement: Out-of-core engine (177)", "Delete TagElement(178)", "Delete Javadoc(179)", "Delete Modifier: private(180)", "Delete Modifier: final(181)", "Delete SimpleName: OutOfCoreEngine(182)", "Delete SimpleType: OutOfCoreEngine(183)", "Delete SimpleName: oocEngine(184)", "Delete VariableDeclarationFragment(185)", "Delete FieldDeclaration(186)", "Delete SimpleName: serviceWorker(256)", "Delete TextElement:  Service worker(257)", "Delete TagElement: @param(258)", "Delete SimpleName: CentralizedServiceWorker(298)", "Delete SimpleType: CentralizedServiceWorker(299)", "Delete SimpleName: I(300)", "Delete SimpleType: I(301)", "Delete SimpleName: V(302)", "Delete SimpleType: V(303)", "Delete SimpleName: E(304)", "Delete SimpleType: E(305)", "Delete ParameterizedType: CentralizedServiceWorker<I,V,E>(306)", "Delete SimpleName: serviceWorker(307)", "Delete SingleVariableDeclaration(308)", "Delete SuperConstructorInvocation(314)", "Delete ThisExpression(333)", "Delete SimpleName: serviceWorker(334)", "Delete FieldAccess(335)", "Delete SimpleName: serviceWorker(336)", "Delete Assignment: =(337)", "Delete ExpressionStatement(338)", "Delete ThisExpression(339)", "Delete SimpleName: oocEngine(340)", "Delete FieldAccess(341)", "Delete SimpleName: oocEngine(342)", "Delete Assignment: =(343)", "Delete ExpressionStatement(344)", "Delete TextElement: Gets the path that should be used specifically for partition data.(725)", "Delete TagElement(726)", "Delete SimpleName: basePath(727)", "Delete TextElement:  path prefix to build the actual path from(728)", "Delete TagElement: @param(729)", "Delete TextElement:  path to files specific for partition data(730)", "Delete TagElement: @return(731)", "Delete Javadoc(732)", "Delete Modifier: private(733)", "Delete Modifier: static(734)", "Delete SimpleName: String(735)", "Delete SimpleType: String(736)", "Delete SimpleName: getPath(737)", "Delete SimpleName: String(738)", "Delete SimpleType: String(739)", "Delete SimpleName: basePath(740)", "Delete SingleVariableDeclaration(741)", "Delete SimpleName: basePath(742)", "Delete StringLiteral: \"_partition\"(743)", "Delete InfixExpression: +(744)", "Delete ReturnStatement(745)", "Delete Block(746)", "Delete MethodDeclaration(747)", "Delete TextElement: Get the path to the file where vertices are stored.(748)", "Delete TagElement(749)", "Delete SimpleName: basePath(750)", "Delete TextElement:  path prefix to build the actual path from(751)", "Delete TagElement: @param(752)", "Delete TextElement:  The path to the vertices file(753)", "Delete TagElement: @return(754)", "Delete Javadoc(755)", "Delete Modifier: private(756)", "Delete Modifier: static(757)", "Delete SimpleName: String(758)", "Delete SimpleType: String(759)", "Delete SimpleName: basePath(765)", "Delete StringLiteral: \"_vertices\"(766)", "Delete InfixExpression: +(767)", "Delete ReturnStatement(768)", "Delete Block(769)", "Delete MethodDeclaration(770)", "Delete TextElement: Get the path to the file where edges are stored.(771)", "Delete TagElement(772)", "Delete SimpleName: basePath(773)", "Delete TextElement:  path prefix to build the actual path from(774)", "Delete TagElement: @param(775)", "Delete TextElement:  The path to the edges file(776)", "Delete TagElement: @return(777)", "Delete Javadoc(778)", "Delete Modifier: private(779)", "Delete Modifier: static(780)", "Delete SimpleName: String(781)", "Delete SimpleType: String(782)", "Delete SimpleName: getEdgesPath(783)", "Delete SimpleName: basePath(788)", "Delete StringLiteral: \"_edges\"(789)", "Delete InfixExpression: +(790)", "Delete ReturnStatement(791)", "Delete Block(792)", "Delete MethodDeclaration(793)", "Delete SimpleName: String(761)", "Delete SimpleType: String(762)", "Delete SimpleName: basePath(763)", "Delete SimpleName: File(1018)", "Delete SimpleType: File(1019)", "Delete MethodInvocation(1022)", "Delete ClassInstanceCreation(1023)", "Delete SimpleName: LOG(1049)", "Delete SimpleName: debug(1050)", "Delete StringLiteral: \"loadInMemoryPartitionData: loading partition vertices \"(1051)", "Delete SimpleName: partitionId(1052)", "Delete StringLiteral: \" from \"(1053)", "Delete MethodInvocation(1056)", "Delete InfixExpression: +(1057)", "Delete MethodInvocation(1058)", "Delete SimpleName: FileInputStream(1062)", "Delete SimpleName: DataInputStream(1083)", "Delete SimpleType: DataInputStream(1084)", "Delete SimpleName: bis(1085)", "Delete ClassInstanceCreation(1086)", "Delete SimpleName: checkState(1143)", "Delete StringLiteral: \"loadInMemoryPartitionData: failed to delete \"(1147)", "Delete StringLiteral: \"%s\"(1148)", "Delete InfixExpression: +(1149)", "Delete SimpleName: getAbsolutePath(1151)", "Delete MethodInvocation(1152)", "Delete SimpleName: DataInputStream(1195)", "Delete SimpleType: DataInputStream(1196)", "Delete SimpleName: bis(1197)", "Delete ClassInstanceCreation(1198)", "Delete SimpleName: checkState(1238)", "Delete MethodInvocation(1241)", "Delete StringLiteral: \"loadPartition: failed to delete %s\"(1242)", "Delete SimpleName: file(1243)", "Delete SimpleName: getAbsolutePath(1244)", "Delete MethodInvocation(1245)", "Delete MethodInvocation(1246)", "Delete Modifier: protected(998)", "Delete PrimitiveType: long(999)", "Delete SimpleName: loadInMemoryPartitionData(1000)", "Delete SimpleName: String(1004)", "Delete SimpleType: String(1005)", "Delete SimpleName: path(1006)", "Delete SingleVariableDeclaration(1007)", "Delete SimpleName: file(1026)", "Delete SimpleName: exists(1027)", "Delete MethodInvocation(1028)", "Delete SimpleName: LOG(1046)", "Delete SimpleName: isDebugEnabled(1047)", "Delete MethodInvocation(1048)", "Delete Block(1060)", "Delete IfStatement(1061)", "Delete SimpleName: fis(1064)", "Delete SimpleName: FileInputStream(1065)", "Delete SimpleType: FileInputStream(1066)", "Delete SimpleName: file(1067)", "Delete ClassInstanceCreation(1068)", "Delete VariableDeclarationFragment(1069)", "Delete VariableDeclarationStatement(1070)", "Delete SimpleName: BufferedInputStream(1071)", "Delete SimpleType: BufferedInputStream(1072)", "Delete SimpleName: bis(1073)", "Delete SimpleName: BufferedInputStream(1074)", "Delete SimpleType: BufferedInputStream(1075)", "Delete SimpleName: fis(1076)", "Delete ClassInstanceCreation(1077)", "Delete VariableDeclarationFragment(1078)", "Delete VariableDeclarationStatement(1079)", "Delete SimpleName: inputStream(1133)", "Delete SimpleName: close(1134)", "Delete MethodInvocation(1135)", "Delete ExpressionStatement(1136)", "Delete SimpleName: file(1155)", "Delete SimpleName: File(1156)", "Delete SimpleType: File(1157)", "Delete SimpleName: getEdgesPath(1158)", "Delete SimpleName: path(1159)", "Delete MethodInvocation(1160)", "Delete ClassInstanceCreation(1161)", "Delete Assignment: =(1162)", "Delete ExpressionStatement(1163)", "Delete SimpleName: LOG(1164)", "Delete SimpleName: isDebugEnabled(1165)", "Delete MethodInvocation(1166)", "Delete StringLiteral: \"loadInMemoryPartitionData: loading partition edges \"(1169)", "Delete SimpleName: partitionId(1170)", "Delete StringLiteral: \" from \"(1171)", "Delete MethodInvocation(1174)", "Delete InfixExpression: +(1175)", "Delete MethodInvocation(1176)", "Delete ExpressionStatement(1177)", "Delete Block(1178)", "Delete IfStatement(1179)", "Delete SimpleName: fis(1180)", "Delete SimpleName: FileInputStream(1181)", "Delete SimpleType: FileInputStream(1182)", "Delete SimpleName: file(1183)", "Delete ClassInstanceCreation(1184)", "Delete Assignment: =(1185)", "Delete ExpressionStatement(1186)", "Delete SimpleName: bis(1187)", "Delete SimpleName: BufferedInputStream(1188)", "Delete SimpleType: BufferedInputStream(1189)", "Delete SimpleName: fis(1190)", "Delete ClassInstanceCreation(1191)", "Delete Assignment: =(1192)", "Delete ExpressionStatement(1193)", "Delete SimpleName: inputStream(1218)", "Delete SimpleName: close(1219)", "Delete MethodInvocation(1220)", "Delete ExpressionStatement(1221)", "Delete Block(1248)", "Delete IfStatement(1249)", "Delete Block(1255)", "Delete IfStatement(1256)", "Delete Block(1259)", "Delete MethodDeclaration(1260)", "Delete SimpleName: String(1323)", "Delete SimpleType: String(1324)", "Delete SimpleName: basePath(1325)", "Delete SingleVariableDeclaration(1326)", "Delete SimpleName: loadPartitionData(1329)", "Delete SimpleName: partitionId(1330)", "Delete SimpleName: getPath(1331)", "Delete MethodInvocation(1333)", "Delete SuperMethodInvocation(1334)", "Delete SimpleName: String(1346)", "Delete SimpleType: String(1347)", "Delete SimpleName: basePath(1348)", "Delete SingleVariableDeclaration(1349)", "Delete SimpleName: offloadPartitionData(1352)", "Delete SimpleName: partitionId(1353)", "Delete SimpleName: getPath(1354)", "Delete MethodInvocation(1356)", "Delete SuperMethodInvocation(1357)", "Delete SimpleName: File(1563)", "Delete SimpleType: File(1564)", "Delete MethodInvocation(1567)", "Delete ClassInstanceCreation(1568)", "Delete SimpleName: LOG(1574)", "Delete SimpleName: debug(1575)", "Delete StringLiteral: \"offloadInMemoryPartitionData: writing partition vertices \"(1576)", "Delete SimpleName: partitionId(1577)", "Delete StringLiteral: \" to \"(1578)", "Delete MethodInvocation(1581)", "Delete InfixExpression: +(1582)", "Delete MethodInvocation(1583)", "Delete SimpleName: LOG(1571)", "Delete SimpleName: isDebugEnabled(1572)", "Delete MethodInvocation(1573)", "Delete Block(1585)", "Delete IfStatement(1586)", "Delete SimpleName: checkState(1587)", "Delete SimpleName: file(1588)", "Delete SimpleName: exists(1589)", "Delete MethodInvocation(1590)", "Delete PrefixExpression: !(1591)", "Delete StringLiteral: \"offloadInMemoryPartitionData: partition \"(1592)", "Delete StringLiteral: \"store file %s already exist\"(1593)", "Delete InfixExpression: +(1594)", "Delete SimpleName: file(1595)", "Delete SimpleName: getAbsoluteFile(1596)", "Delete MethodInvocation(1597)", "Delete MethodInvocation(1598)", "Delete ExpressionStatement(1599)", "Delete MethodInvocation(1603)", "Delete StringLiteral: \"offloadInMemoryPartitionData: file %s already exists.\"(1604)", "Delete MethodInvocation(1608)", "Delete ExpressionStatement(1609)", "Delete SimpleName: FileOutputStream(1610)", "Delete SimpleType: FileOutputStream(1611)", "Delete SimpleName: fileout(1612)", "Delete SimpleName: FileOutputStream(1613)", "Delete SimpleType: FileOutputStream(1614)", "Delete SimpleName: file(1615)", "Delete ClassInstanceCreation(1616)", "Delete VariableDeclarationFragment(1617)", "Delete VariableDeclarationStatement(1618)", "Delete SimpleName: BufferedOutputStream(1619)", "Delete SimpleType: BufferedOutputStream(1620)", "Delete SimpleName: bufferout(1621)", "Delete SimpleName: BufferedOutputStream(1622)", "Delete SimpleType: BufferedOutputStream(1623)", "Delete SimpleName: fileout(1624)", "Delete ClassInstanceCreation(1625)", "Delete VariableDeclarationFragment(1626)", "Delete VariableDeclarationStatement(1627)", "Delete SimpleName: DataOutputStream(1631)", "Delete SimpleType: DataOutputStream(1632)", "Delete SimpleName: bufferout(1633)", "Delete ClassInstanceCreation(1634)", "Delete SimpleName: outputStream(1663)", "Delete SimpleName: close(1664)", "Delete MethodInvocation(1665)", "Delete ExpressionStatement(1666)", "Delete SimpleName: partitionVertexCount(1687)", "Delete SimpleName: get(1688)", "Delete SimpleName: partitionId(1689)", "Delete MethodInvocation(1690)", "Delete NullLiteral(1691)", "Delete InfixExpression: ==(1692)", "Delete SimpleName: partitionVertexCount(1694)", "Delete SimpleName: get(1695)", "Delete SimpleName: partitionId(1696)", "Delete MethodInvocation(1697)", "Delete SimpleName: partition(1698)", "Delete SimpleName: getVertexCount(1699)", "Delete MethodInvocation(1700)", "Delete InfixExpression: !=(1701)", "Delete InfixExpression: ||(1702)", "Delete InfixExpression: ||(1707)", "Delete MethodInvocation(1716)", "Delete StringLiteral: \"offloadInMemoryPartitionData: file \"(1717)", "Delete StringLiteral: \"%s already exists.\"(1718)", "Delete InfixExpression: +(1719)", "Delete MethodInvocation(1723)", "Delete SimpleName: debug(1729)", "Delete StringLiteral: \"offloadInMemoryPartitionData: writing partition edges \"(1730)", "Delete SimpleName: partitionId(1731)", "Delete StringLiteral: \" to \"(1732)", "Delete MethodInvocation(1735)", "Delete InfixExpression: +(1736)", "Delete SimpleName: BufferedOutputStream(1749)", "Delete SimpleType: BufferedOutputStream(1750)", "Delete SimpleName: fileout(1751)", "Delete ClassInstanceCreation(1752)", "Delete SimpleName: outputStream(1775)", "Delete SimpleName: file(1673)", "Delete SimpleName: File(1674)", "Delete SimpleType: File(1675)", "Delete MethodInvocation(1678)", "Delete ClassInstanceCreation(1679)", "Delete Assignment: =(1680)", "Delete ExpressionStatement(1681)", "Delete SimpleName: LOG(1725)", "Delete SimpleName: isDebugEnabled(1726)", "Delete MethodInvocation(1727)", "Delete Block(1739)", "Delete IfStatement(1740)", "Delete SimpleName: fileout(1741)", "Delete SimpleName: FileOutputStream(1742)", "Delete SimpleType: FileOutputStream(1743)", "Delete SimpleName: file(1744)", "Delete ClassInstanceCreation(1745)", "Delete Assignment: =(1746)", "Delete ExpressionStatement(1747)", "Delete SimpleName: outputStream(1755)", "Delete SimpleName: DataOutputStream(1756)", "Delete SimpleType: DataOutputStream(1757)", "Delete SimpleName: bufferout(1758)", "Delete ClassInstanceCreation(1759)", "Delete Assignment: =(1760)", "Delete ExpressionStatement(1761)", "Delete SimpleName: partition(1773)", "Delete Block(1779)", "Delete EnhancedForStatement(1780)", "Delete SimpleName: numBytes(1785)", "Delete SimpleName: outputStream(1786)", "Delete SimpleName: size(1787)", "Delete MethodInvocation(1788)", "Delete Assignment: +=(1789)", "Delete ExpressionStatement(1790)", "Delete Block(1791)", "Delete IfStatement(1792)", "Delete SimpleName: String(1830)", "Delete SimpleType: String(1831)", "Delete SimpleName: basePath(1832)", "Delete SingleVariableDeclaration(1833)", "Delete SimpleName: offloadBuffers(1836)", "Delete SimpleName: partitionId(1837)", "Delete SimpleName: getPath(1838)", "Delete MethodInvocation(1840)", "Delete SuperMethodInvocation(1841)"]}}, {"MetaPartitionManager_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 16", "operations": ["INS TextElement: 2, etc. This indexing is later used to find the id of the IO thread who is to TagElement at 2", "INS ParameterizedType: ConcurrentMap<Integer,Integer> to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 16", "INS SimpleName: Maps to MethodInvocation at 0", "INS SimpleType: Integer to ParameterizedType: ConcurrentMap<Integer,Integer> at 1", "INS SimpleName: ConcurrentMap to SimpleType: ConcurrentMap at 0", "INS SimpleName: partitionIndex to VariableDeclarationFragment at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to ParameterizedType: ConcurrentMap<Integer,Integer> at 2", "INS TextElement: Map of partition ids to their indices. index of a partition is the order to TagElement at 0", "INS TextElement: responsible for handling a partition. Partitions are assigned to IO threads to TagElement at 3", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: with which the partition has been inserted. Partitions are indexed as 0, 1, to TagElement at 1", "INS TextElement: in a round-robin fashion based on their indices. to TagElement at 4", "INS SimpleType: ConcurrentMap to ParameterizedType: ConcurrentMap<Integer,Integer> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: newConcurrentMap to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 17", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: AtomicInteger to SimpleType: AtomicInteger at 0", "INS Modifier: private to FieldDeclaration at 1", "INS NumberLiteral: 0 to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: AtomicInteger to SimpleType: AtomicInteger at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: indexCounter to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: AtomicInteger to ClassInstanceCreation at 0", "INS FieldDeclaration to TypeDeclaration: class at 17", "INS SimpleType: AtomicInteger to FieldDeclaration at 3", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Sequential counter used to assign indices to partitions as they are added to TagElement at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 18", "INS Modifier: private to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: numIOThreads to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS TagElement to Javadoc at 0", "INS TextElement: How many disks (i.e. IO threads) do we have?  to TagElement at 0", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS SimpleName: checkState to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: partitionId to TagElement: @param at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS TagElement: @return to Javadoc at 2", "INS InfixExpression: % to ReturnStatement at 0", "INS SimpleName: index to InfixExpression: != at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: partitionIndex to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS TextElement:  id of the thread responsible for the given partition to TagElement: @return at 0", "INS SimpleName: numIOThreads to InfixExpression: % at 1", "INS TextElement: Get the thread id that is responsible for a particular partition to TagElement at 0", "INS InfixExpression: != to MethodInvocation at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS NullLiteral to InfixExpression: != at 1", "INS TextElement:  id of the given partition to TagElement: @param at 1", "INS SimpleType: Integer to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: index to InfixExpression: % at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getOwnerThreadId to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: numIOThreads to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: numIOThreads to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 6", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from  total number of partition to  total number of partitions", "operations": ["UPD TextElement:  total number of partition from  total number of partition to  total number of partitions"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: indexCounter to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getAndIncrement to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: index to MethodInvocation at 3", "INS SimpleName: checkState to MethodInvocation at 0", "INS SimpleName: putIfAbsent to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: partitionIndex to MethodInvocation at 0", "INS InfixExpression: == to MethodInvocation at 1", "INS SimpleName: partitionId to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "UPDATE from oocEngine to getOwnerThreadId", "operations": ["UPD SimpleName: oocEngine from oocEngine to getOwnerThreadId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: oocEngine to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: getOwnerThreadId to MethodInvocation at 1"]}, {"root": "UPDATE from getOwnerThreadId to getPartitionId", "operations": ["UPD SimpleName: getOwnerThreadId from getOwnerThreadId to getPartitionId"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getIOScheduler", "DEL SimpleName: oocEngine"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getIOScheduler", "DEL SimpleName: oocEngine"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getIOScheduler", "DEL MethodInvocation", "DEL SimpleName: oocEngine"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: oocEngine", "DEL SimpleName: getIOScheduler"]}]}}, {"MetaPartitionManager_diff": {"operations": ["Insert FieldDeclaration(250) into TypeDeclaration: class(3158) at 16", "Insert FieldDeclaration(264) into TypeDeclaration: class(3158) at 17", "Insert FieldDeclaration(273) into TypeDeclaration: class(3158) at 18", "Insert MethodDeclaration(531) into TypeDeclaration: class(3158) at 26", "Insert Javadoc(235) into FieldDeclaration(250) at 0", "Insert Modifier: private(236) into FieldDeclaration(250) at 1", "Insert Modifier: final(237) into FieldDeclaration(250) at 2", "Insert ParameterizedType: ConcurrentMap<Integer,Integer>(244) into FieldDeclaration(250) at 3", "Insert VariableDeclarationFragment(249) into FieldDeclaration(250) at 4", "Insert Javadoc(253) into FieldDeclaration(264) at 0", "Insert Modifier: private(254) into FieldDeclaration(264) at 1", "Insert Modifier: final(255) into FieldDeclaration(264) at 2", "Insert SimpleType: AtomicInteger(257) into FieldDeclaration(264) at 3", "Insert VariableDeclarationFragment(263) into FieldDeclaration(264) at 4", "Insert Javadoc(267) into FieldDeclaration(273) at 0", "Insert Modifier: private(268) into FieldDeclaration(273) at 1", "Insert Modifier: final(269) into FieldDeclaration(273) at 2", "Insert PrimitiveType: int(270) into FieldDeclaration(273) at 3", "Insert VariableDeclarationFragment(272) into FieldDeclaration(273) at 4", "Insert Javadoc(504) into MethodDeclaration(531) at 0", "Insert Modifier: public(505) into MethodDeclaration(531) at 1", "Insert PrimitiveType: int(506) into MethodDeclaration(531) at 2", "Insert SimpleName: getOwnerThreadId(507) into MethodDeclaration(531) at 3", "Insert SingleVariableDeclaration(510) into MethodDeclaration(531) at 4", "Insert Block(530) into MethodDeclaration(531) at 5", "Insert TagElement(234) into Javadoc(235) at 0", "Insert SimpleType: ConcurrentMap(239) into ParameterizedType: ConcurrentMap<Integer,Integer>(244) at 0", "Insert SimpleType: Integer(241) into ParameterizedType: ConcurrentMap<Integer,Integer>(244) at 1", "Insert SimpleType: Integer(243) into ParameterizedType: ConcurrentMap<Integer,Integer>(244) at 2", "Insert SimpleName: partitionIndex(245) into VariableDeclarationFragment(249) at 0", "Insert MethodInvocation(248) into VariableDeclarationFragment(249) at 1", "Insert TagElement(252) into Javadoc(253) at 0", "Insert SimpleName: AtomicInteger(256) into SimpleType: AtomicInteger(257) at 0", "Insert SimpleName: indexCounter(258) into VariableDeclarationFragment(263) at 0", "Insert ClassInstanceCreation(262) into VariableDeclarationFragment(263) at 1", "Insert TagElement(266) into Javadoc(267) at 0", "Insert SimpleName: numIOThreads(271) into VariableDeclarationFragment(272) at 0", "Insert ExpressionStatement(372) into Block(373) at 6", "Insert TagElement(498) into Javadoc(504) at 0", "Insert TagElement: @param(501) into Javadoc(504) at 1", "Insert TagElement: @return(503) into Javadoc(504) at 2", "Insert PrimitiveType: int(508) into SingleVariableDeclaration(510) at 0", "Insert SimpleName: partitionId(509) into SingleVariableDeclaration(510) at 1", "Insert VariableDeclarationStatement(519) into Block(530) at 0", "Insert ExpressionStatement(525) into Block(530) at 1", "Insert ReturnStatement(529) into Block(530) at 2", "Insert TextElement: Map of partition ids to their indices. index of a partition is the order(229) into TagElement(234) at 0", "Insert TextElement: with which the partition has been inserted. Partitions are indexed as 0, 1,(230) into TagElement(234) at 1", "Insert TextElement: 2, etc. This indexing is later used to find the id of the IO thread who is(231) into TagElement(234) at 2", "Insert TextElement: responsible for handling a partition. Partitions are assigned to IO threads(232) into TagElement(234) at 3", "Insert TextElement: in a round-robin fashion based on their indices.(233) into TagElement(234) at 4", "Insert SimpleName: ConcurrentMap(238) into SimpleType: ConcurrentMap(239) at 0", "Insert SimpleName: Integer(240) into SimpleType: Integer(241) at 0", "Insert SimpleName: Integer(242) into SimpleType: Integer(243) at 0", "Insert SimpleName: Maps(246) into MethodInvocation(248) at 0", "Insert SimpleName: newConcurrentMap(247) into MethodInvocation(248) at 1", "Insert TextElement: Sequential counter used to assign indices to partitions as they are added(251) into TagElement(252) at 0", "Insert SimpleType: AtomicInteger(260) into ClassInstanceCreation(262) at 0", "Insert NumberLiteral: 0(261) into ClassInstanceCreation(262) at 1", "Insert TextElement: How many disks (i.e. IO threads) do we have? (265) into TagElement(266) at 0", "Insert Assignment: =(371) into ExpressionStatement(372) at 0", "Update TextElement:  total number of partition(340) to  total number of partitions", "Insert TextElement: Get the thread id that is responsible for a particular partition(497) into TagElement(498) at 0", "Insert SimpleName: partitionId(499) into TagElement: @param(501) at 0", "Insert TextElement:  id of the given partition(500) into TagElement: @param(501) at 1", "Insert TextElement:  id of the thread responsible for the given partition(502) into TagElement: @return(503) at 0", "Insert SimpleType: Integer(512) into VariableDeclarationStatement(519) at 0", "Insert VariableDeclarationFragment(518) into VariableDeclarationStatement(519) at 1", "Insert MethodInvocation(524) into ExpressionStatement(525) at 0", "Insert InfixExpression: %(528) into ReturnStatement(529) at 0", "Insert SimpleName: AtomicInteger(259) into SimpleType: AtomicInteger(260) at 0", "Insert FieldAccess(369) into Assignment: =(371) at 0", "Insert SimpleName: numIOThreads(370) into Assignment: =(371) at 1", "Insert SimpleName: Integer(511) into SimpleType: Integer(512) at 0", "Insert SimpleName: index(513) into VariableDeclarationFragment(518) at 0", "Insert MethodInvocation(517) into VariableDeclarationFragment(518) at 1", "Insert SimpleName: checkState(520) into MethodInvocation(524) at 0", "Insert InfixExpression: !=(523) into MethodInvocation(524) at 1", "Insert SimpleName: index(526) into InfixExpression: %(528) at 0", "Insert SimpleName: numIOThreads(527) into InfixExpression: %(528) at 1", "Insert VariableDeclarationStatement(572) into Block(602) at 0", "Insert ExpressionStatement(582) into Block(602) at 1", "Insert ThisExpression(367) into FieldAccess(369) at 0", "Insert SimpleName: numIOThreads(368) into FieldAccess(369) at 1", "Insert SimpleName: partitionIndex(514) into MethodInvocation(517) at 0", "Insert SimpleName: get(515) into MethodInvocation(517) at 1", "Insert SimpleName: partitionId(516) into MethodInvocation(517) at 2", "Insert SimpleName: index(521) into InfixExpression: !=(523) at 0", "Insert NullLiteral(522) into InfixExpression: !=(523) at 1", "Insert PrimitiveType: int(566) into VariableDeclarationStatement(572) at 0", "Insert VariableDeclarationFragment(571) into VariableDeclarationStatement(572) at 1", "Insert MethodInvocation(581) into ExpressionStatement(582) at 0", "Insert SimpleName: index(567) into VariableDeclarationFragment(571) at 0", "Insert MethodInvocation(570) into VariableDeclarationFragment(571) at 1", "Insert SimpleName: checkState(573) into MethodInvocation(581) at 0", "Insert InfixExpression: ==(580) into MethodInvocation(581) at 1", "Insert SimpleName: indexCounter(568) into MethodInvocation(570) at 0", "Insert SimpleName: getAndIncrement(569) into MethodInvocation(570) at 1", "Insert MethodInvocation(578) into InfixExpression: ==(580) at 0", "Insert NullLiteral(579) into InfixExpression: ==(580) at 1", "Update SimpleName: oocEngine(1878) to getOwnerThreadId", "Move SimpleName: oocEngine(1878) into MethodInvocation(1958) at 0", "Move MethodInvocation(1961) into MethodInvocation(1958) at 1", "Move MethodInvocation(1884) into MethodInvocation(2032) at 2", "Insert SimpleName: partitionIndex(574) into MethodInvocation(578) at 0", "Insert SimpleName: putIfAbsent(575) into MethodInvocation(578) at 1", "Insert SimpleName: partitionId(576) into MethodInvocation(578) at 2", "Insert SimpleName: index(577) into MethodInvocation(578) at 3", "Delete SimpleName: oocEngine(482)", "Delete SimpleName: getIOScheduler(483)", "Delete MethodInvocation(484)", "Delete SimpleName: oocEngine(531)", "Delete SimpleName: getIOScheduler(532)", "Delete MethodInvocation(533)", "Delete SimpleName: oocEngine(1209)", "Delete SimpleName: getIOScheduler(1210)", "Delete MethodInvocation(1211)", "Delete SimpleName: oocEngine(1329)", "Delete SimpleName: getIOScheduler(1330)", "Delete MethodInvocation(1331)", "Delete SimpleName: oocEngine(1471)", "Delete SimpleName: getIOScheduler(1472)", "Delete MethodInvocation(1473)", "Delete SimpleName: oocEngine(1563)", "Delete SimpleName: getIOScheduler(1564)", "Delete MethodInvocation(1565)", "Delete SimpleName: oocEngine(1634)", "Delete SimpleName: getIOScheduler(1635)", "Delete MethodInvocation(1636)", "Delete SimpleName: oocEngine(1728)", "Delete SimpleName: getIOScheduler(1729)", "Delete MethodInvocation(1730)", "Delete SimpleName: oocEngine(1823)", "Delete SimpleName: getIOScheduler(1824)", "Delete MethodInvocation(1825)", "Delete MethodInvocation(1880)", "Delete SimpleName: oocEngine(1955)", "Delete SimpleName: getIOScheduler(1956)", "Delete MethodInvocation(1957)"]}}, {"RexsterVertexOutputFormat_cluster": {"actions": [{"root": "UPDATE from get to getJobId", "operations": ["UPD SimpleName: get from get to getJobId"]}, {"root": "DEL StringLiteral: \"mapred.job.id\"", "operations": ["DEL StringLiteral: \"mapred.job.id\""]}, {"root": "DEL StringLiteral: \"Unknown Job\"", "operations": ["DEL StringLiteral: \"Unknown Job\""]}]}}, {"RexsterVertexOutputFormat_diff": {"operations": ["Update SimpleName: get(541) to getJobId", "Delete StringLiteral: \"mapred.job.id\"(542)", "Delete StringLiteral: \"Unknown Job\"(543)"]}}], "commit_stats": [{"total_files": 36, "deleted_files": 12, "testing": "True", "maintenance": "False", "build": "False"}]}