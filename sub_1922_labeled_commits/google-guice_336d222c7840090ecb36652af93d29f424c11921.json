{"application": "google-guice", "csha": "336d222c7840090ecb36652af93d29f424c11921", "files": [{"ProxyFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14", "MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from java.util.Arrays to java.util.logging.Level", "operations": ["UPD QualifiedName: java.util.Arrays from java.util.Arrays to java.util.logging.Level"]}, {"root": "UPDATE from net.sf.cglib.proxy.MethodProxy to java.util.logging.Logger", "operations": ["UPD QualifiedName: net.sf.cglib.proxy.MethodProxy from net.sf.cglib.proxy.MethodProxy to java.util.logging.Logger"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Logger to FieldDeclaration at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ProxyFactory to SimpleType: ProxyFactory at 0", "INS SimpleName: Logger to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleName: logger to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: getLogger to MethodInvocation at 1", "INS SimpleName: Logger to SimpleType: Logger at 0", "INS SimpleType: ProxyFactory to TypeLiteral at 0"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 2"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS QualifiedName: pair.method to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isSynthetic to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: interceptors to MethodInvocation at 1", "INS ArrayInitializer to ArrayCreation at 1", "INS QualifiedName: pair.method to ArrayInitializer at 0", "INS StringLiteral: \"Method [{0}] is synthetic and is being intercepted by {1}.\" to InfixExpression: + at 0", "INS Dimension to ArrayType: Object[] at 1", "INS ArrayType: Object[] to ArrayCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: methodAspect to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \" This could indicate a bug.  The method may be intercepted twice,\" to InfixExpression: + at 1", "INS SimpleType: Object to ArrayType: Object[] at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayCreation to MethodInvocation at 4", "INS MethodInvocation to ArrayInitializer at 1", "INS InfixExpression: + to MethodInvocation at 3", "INS SimpleName: log to MethodInvocation at 1", "INS StringLiteral: \" or may not be intercepted at all.\" to InfixExpression: + at 2", "INS SimpleName: logger to MethodInvocation at 0", "INS QualifiedName: Level.WARNING to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.inject.ProvisionException", "DEL ImportDeclaration"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"ProxyFactory_diff": {"operations": ["Move ImportDeclaration(35) into CompilationUnit(1088) at 14", "Move ImportDeclaration(47) into CompilationUnit(1088) at 14", "Update QualifiedName: java.util.Arrays(34) to java.util.logging.Level", "Update QualifiedName: net.sf.cglib.proxy.MethodProxy(46) to java.util.logging.Logger", "Insert FieldDeclaration(82) into TypeDeclaration: class(1087) at 5", "Insert Modifier: private(67) into FieldDeclaration(82) at 0", "Insert Modifier: static(68) into FieldDeclaration(82) at 1", "Insert Modifier: final(69) into FieldDeclaration(82) at 2", "Insert SimpleType: Logger(71) into FieldDeclaration(82) at 3", "Insert VariableDeclarationFragment(81) into FieldDeclaration(82) at 4", "Insert SimpleName: Logger(70) into SimpleType: Logger(71) at 0", "Insert SimpleName: logger(72) into VariableDeclarationFragment(81) at 0", "Insert MethodInvocation(80) into VariableDeclarationFragment(81) at 1", "Insert SimpleName: Logger(73) into MethodInvocation(80) at 0", "Insert SimpleName: getLogger(74) into MethodInvocation(80) at 1", "Insert MethodInvocation(79) into MethodInvocation(80) at 2", "Insert TypeLiteral(77) into MethodInvocation(79) at 0", "Insert SimpleName: getName(78) into MethodInvocation(79) at 1", "Insert SimpleType: ProxyFactory(76) into TypeLiteral(77) at 0", "Insert Block(345) into EnhancedForStatement(346) at 2", "Insert SimpleName: ProxyFactory(75) into SimpleType: ProxyFactory(76) at 0", "Insert IfStatement(344) into Block(345) at 0", "Move MethodInvocation(283) into IfStatement(344) at 0", "Insert Block(343) into IfStatement(344) at 1", "Move IfStatement(306) into Block(343) at 0", "Move ExpressionStatement(293) into Block(343) at 1", "Move ExpressionStatement(300) into Block(343) at 2", "Move ExpressionStatement(304) into Block(343) at 3", "Insert MethodInvocation(300) into IfStatement(321) at 0", "Insert QualifiedName: pair.method(298) into MethodInvocation(300) at 0", "Insert SimpleName: isSynthetic(299) into MethodInvocation(300) at 1", "Insert ExpressionStatement(319) into Block(320) at 0", "Insert MethodInvocation(318) into ExpressionStatement(319) at 0", "Insert SimpleName: logger(301) into MethodInvocation(318) at 0", "Insert SimpleName: log(302) into MethodInvocation(318) at 1", "Insert QualifiedName: Level.WARNING(303) into MethodInvocation(318) at 2", "Insert InfixExpression: +(307) into MethodInvocation(318) at 3", "Insert ArrayCreation(317) into MethodInvocation(318) at 4", "Insert StringLiteral: \"Method [{0}] is synthetic and is being intercepted by {1}.\"(304) into InfixExpression: +(307) at 0", "Insert StringLiteral: \" This could indicate a bug.  The method may be intercepted twice,\"(305) into InfixExpression: +(307) at 1", "Insert StringLiteral: \" or may not be intercepted at all.\"(306) into InfixExpression: +(307) at 2", "Insert ArrayType: Object[](311) into ArrayCreation(317) at 0", "Insert ArrayInitializer(316) into ArrayCreation(317) at 1", "Insert SimpleType: Object(309) into ArrayType: Object[](311) at 0", "Insert Dimension(310) into ArrayType: Object[](311) at 1", "Insert QualifiedName: pair.method(312) into ArrayInitializer(316) at 0", "Insert MethodInvocation(315) into ArrayInitializer(316) at 1", "Insert SimpleName: Object(308) into SimpleType: Object(309) at 0", "Insert SimpleName: methodAspect(313) into MethodInvocation(315) at 0", "Insert SimpleName: interceptors(314) into MethodInvocation(315) at 1", "Delete QualifiedName: com.google.inject.ProvisionException(14)", "Delete ImportDeclaration(15)", "Delete Block(307)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}