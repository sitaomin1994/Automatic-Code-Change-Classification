{"application": "apache-calcite", "csha": "7882a5b958663f417df3f4e5cfca6f79c298537f", "files": [{"RelOptRule_cluster": {"actions": [{"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: only the characters A-Z, a-z, 0-9, '_', '.', '(', ')'. It must start with to TagElement at 2", "INS TextElement: <p>It must be unique (for rules that are not equal) and must consist of to TagElement at 1", "INS TextElement: a letter.  to TagElement at 3", "INS TextElement: Returns the description of this rule. to TagElement at 0"]}, {"root": "INS Modifier: final to MethodDeclaration at 2", "operations": ["INS Modifier: final to MethodDeclaration at 2"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: description to InfixExpression: + at 1", "INS SimpleName: matches to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: description to MethodInvocation at 0", "INS StringLiteral: \"Rule description '\" to InfixExpression: + at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS StringLiteral: \"[A-Za-z][-A-Za-z0-9_.():]*\" to MethodInvocation at 2", "INS IfStatement to Block at 3", "INS PrefixExpression: ! to IfStatement at 0", "INS StringLiteral: \"' is not valid\" to InfixExpression: + at 2", "INS Block to IfStatement at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}]}}, {"RelOptRule_diff": {"operations": ["Insert Javadoc(1031) into MethodDeclaration(1040) at 0", "Insert Modifier: final(1033) into MethodDeclaration(1040) at 2", "Insert IfStatement(142) into Block(160) at 3", "Insert TagElement(1030) into Javadoc(1031) at 0", "Insert PrefixExpression: !(132) into IfStatement(142) at 0", "Insert Block(141) into IfStatement(142) at 1", "Insert TextElement: Returns the description of this rule.(1026) into TagElement(1030) at 0", "Insert TextElement: <p>It must be unique (for rules that are not equal) and must consist of(1027) into TagElement(1030) at 1", "Insert TextElement: only the characters A-Z, a-z, 0-9, '_', '.', '(', ')'. It must start with(1028) into TagElement(1030) at 2", "Insert TextElement: a letter. (1029) into TagElement(1030) at 3", "Insert MethodInvocation(131) into PrefixExpression: !(132) at 0", "Insert ThrowStatement(140) into Block(141) at 0", "Insert SimpleName: description(128) into MethodInvocation(131) at 0", "Insert SimpleName: matches(129) into MethodInvocation(131) at 1", "Insert StringLiteral: \"[A-Za-z][-A-Za-z0-9_.():]*\"(130) into MethodInvocation(131) at 2", "Insert ClassInstanceCreation(139) into ThrowStatement(140) at 0", "Insert SimpleType: RuntimeException(134) into ClassInstanceCreation(139) at 0", "Insert InfixExpression: +(138) into ClassInstanceCreation(139) at 1", "Insert SimpleName: RuntimeException(133) into SimpleType: RuntimeException(134) at 0", "Insert StringLiteral: \"Rule description '\"(135) into InfixExpression: +(138) at 0", "Insert SimpleName: description(136) into InfixExpression: +(138) at 1", "Insert StringLiteral: \"' is not valid\"(137) into InfixExpression: +(138) at 2"]}}, {"VolcanoPlanner_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 60", "operations": ["INS ImportDeclaration to CompilationUnit at 60", "INS QualifiedName: com.google.common.collect.LinkedHashMultimap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 65", "operations": ["INS QualifiedName: com.google.common.collect.SetMultimap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 65"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 29", "operations": ["INS SimpleType: SetMultimap to ParameterizedType: SetMultimap<String,Class> at 0", "INS SimpleName: ruleNames to VariableDeclarationFragment at 0", "INS SimpleName: LinkedHashMultimap to MethodInvocation at 0", "INS SimpleName: SetMultimap to SimpleType: SetMultimap at 0", "INS Modifier: private to FieldDeclaration at 1", "INS TextElement: conform to rules.  to TagElement at 1", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleType: String to ParameterizedType: SetMultimap<String,Class> at 1", "INS TextElement: Maps rule classes to their name, to ensure that the names are unique and to TagElement at 0", "INS ParameterizedType: SetMultimap<String,Class> to FieldDeclaration at 3", "INS SimpleType: Class to ParameterizedType: SetMultimap<String,Class> at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 29", "INS TagElement to Javadoc at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: rule to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ruleName to VariableDeclarationFragment at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS ThrowStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: rule to MethodInvocation at 0", "INS SimpleName: x to MethodInvocation at 0", "INS SimpleType: Class to ParameterizedType: Set<Class> at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ruleName to MethodInvocation at 2", "INS NumberLiteral: 1 to InfixExpression: > at 1", "INS IfStatement to Block at 5", "INS SimpleName: ruleName to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: x to InfixExpression: + at 3", "INS SimpleName: ruleNames to MethodInvocation at 0", "INS StringLiteral: \"Rule description '\" to InfixExpression: + at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: ruleName to InfixExpression: + at 1", "INS SimpleName: x to VariableDeclarationFragment at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleType: Set to ParameterizedType: Set<Class> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ruleNames to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: Set<Class> to VariableDeclarationStatement at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS StringLiteral: \"' is not unique; classes: \" to InfixExpression: + at 2", "INS MethodInvocation to InfixExpression: > at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS Block to IfStatement at 1"]}]}}, {"VolcanoPlanner_diff": {"operations": ["Insert ImportDeclaration(121) into CompilationUnit(6290) at 60", "Insert ImportDeclaration(131) into CompilationUnit(6290) at 65", "Insert QualifiedName: com.google.common.collect.LinkedHashMultimap(120) into ImportDeclaration(121) at 0", "Insert QualifiedName: com.google.common.collect.SetMultimap(130) into ImportDeclaration(131) at 0", "Insert FieldDeclaration(679) into TypeDeclaration: class(6289) at 29", "Insert Javadoc(664) into FieldDeclaration(679) at 0", "Insert Modifier: private(665) into FieldDeclaration(679) at 1", "Insert Modifier: final(666) into FieldDeclaration(679) at 2", "Insert ParameterizedType: SetMultimap<String,Class>(673) into FieldDeclaration(679) at 3", "Insert VariableDeclarationFragment(678) into FieldDeclaration(679) at 4", "Insert TagElement(663) into Javadoc(664) at 0", "Insert SimpleType: SetMultimap(668) into ParameterizedType: SetMultimap<String,Class>(673) at 0", "Insert SimpleType: String(670) into ParameterizedType: SetMultimap<String,Class>(673) at 1", "Insert SimpleType: Class(672) into ParameterizedType: SetMultimap<String,Class>(673) at 2", "Insert SimpleName: ruleNames(674) into VariableDeclarationFragment(678) at 0", "Insert MethodInvocation(677) into VariableDeclarationFragment(678) at 1", "Insert VariableDeclarationStatement(1754) into Block(1873) at 4", "Insert IfStatement(1791) into Block(1873) at 5", "Insert TextElement: Maps rule classes to their name, to ensure that the names are unique and(661) into TagElement(663) at 0", "Insert TextElement: conform to rules. (662) into TagElement(663) at 1", "Insert SimpleName: SetMultimap(667) into SimpleType: SetMultimap(668) at 0", "Insert SimpleName: String(669) into SimpleType: String(670) at 0", "Insert SimpleName: Class(671) into SimpleType: Class(672) at 0", "Insert SimpleName: LinkedHashMultimap(675) into MethodInvocation(677) at 0", "Insert SimpleName: create(676) into MethodInvocation(677) at 1", "Insert Modifier: final(1746) into VariableDeclarationStatement(1754) at 0", "Insert SimpleType: String(1748) into VariableDeclarationStatement(1754) at 1", "Insert VariableDeclarationFragment(1753) into VariableDeclarationStatement(1754) at 2", "Insert MethodInvocation(1761) into IfStatement(1791) at 0", "Insert Block(1790) into IfStatement(1791) at 1", "Insert SimpleName: String(1747) into SimpleType: String(1748) at 0", "Insert SimpleName: ruleName(1749) into VariableDeclarationFragment(1753) at 0", "Insert MethodInvocation(1752) into VariableDeclarationFragment(1753) at 1", "Insert SimpleName: ruleNames(1755) into MethodInvocation(1761) at 0", "Insert SimpleName: put(1756) into MethodInvocation(1761) at 1", "Insert SimpleName: ruleName(1757) into MethodInvocation(1761) at 2", "Insert MethodInvocation(1760) into MethodInvocation(1761) at 3", "Insert VariableDeclarationStatement(1773) into Block(1790) at 0", "Insert IfStatement(1789) into Block(1790) at 1", "Insert SimpleName: rule(1750) into MethodInvocation(1752) at 0", "Insert SimpleName: toString(1751) into MethodInvocation(1752) at 1", "Insert SimpleName: rule(1758) into MethodInvocation(1760) at 0", "Insert SimpleName: getClass(1759) into MethodInvocation(1760) at 1", "Insert ParameterizedType: Set<Class>(1766) into VariableDeclarationStatement(1773) at 0", "Insert VariableDeclarationFragment(1772) into VariableDeclarationStatement(1773) at 1", "Insert InfixExpression: >(1778) into IfStatement(1789) at 0", "Insert Block(1788) into IfStatement(1789) at 1", "Insert SimpleType: Set(1763) into ParameterizedType: Set<Class>(1766) at 0", "Insert SimpleType: Class(1765) into ParameterizedType: Set<Class>(1766) at 1", "Insert SimpleName: x(1767) into VariableDeclarationFragment(1772) at 0", "Insert MethodInvocation(1771) into VariableDeclarationFragment(1772) at 1", "Insert MethodInvocation(1776) into InfixExpression: >(1778) at 0", "Insert NumberLiteral: 1(1777) into InfixExpression: >(1778) at 1", "Insert ThrowStatement(1787) into Block(1788) at 0", "Insert SimpleName: Set(1762) into SimpleType: Set(1763) at 0", "Insert SimpleName: Class(1764) into SimpleType: Class(1765) at 0", "Insert SimpleName: ruleNames(1768) into MethodInvocation(1771) at 0", "Insert SimpleName: get(1769) into MethodInvocation(1771) at 1", "Insert SimpleName: ruleName(1770) into MethodInvocation(1771) at 2", "Insert SimpleName: x(1774) into MethodInvocation(1776) at 0", "Insert SimpleName: size(1775) into MethodInvocation(1776) at 1", "Insert ClassInstanceCreation(1786) into ThrowStatement(1787) at 0", "Insert SimpleType: RuntimeException(1780) into ClassInstanceCreation(1786) at 0", "Insert InfixExpression: +(1785) into ClassInstanceCreation(1786) at 1", "Insert SimpleName: RuntimeException(1779) into SimpleType: RuntimeException(1780) at 0", "Insert StringLiteral: \"Rule description '\"(1781) into InfixExpression: +(1785) at 0", "Insert SimpleName: ruleName(1782) into InfixExpression: +(1785) at 1", "Insert StringLiteral: \"' is not unique; classes: \"(1783) into InfixExpression: +(1785) at 2", "Insert SimpleName: x(1784) into InfixExpression: +(1785) at 3"]}}, {"FilterJoinRule_cluster": {"actions": [{"root": "UPDATE from \"PushFilterRule: \" to \"PushFilterRule:\"", "operations": ["UPD StringLiteral: \"PushFilterRule: \" from \"PushFilterRule: \" to \"PushFilterRule:\""]}]}}, {"FilterJoinRule_diff": {"operations": ["Update StringLiteral: \"PushFilterRule: \"(145) to \"PushFilterRule:\""]}}, {"JoinProjectTransposeRule_cluster": {"actions": [{"root": "UPDATE from \"JoinProjectTransposeRule: with two LogicalProject children\" to \"JoinProjectTransposeRule(Project-Project)\"", "operations": ["UPD StringLiteral: \"JoinProjectTransposeRule: with two LogicalProject children\" from \"JoinProjectTransposeRule: with two LogicalProject children\" to \"JoinProjectTransposeRule(Project-Project)\""]}, {"root": "UPDATE from \"JoinProjectTransposeRule: with LogicalProject on left\" to \"JoinProjectTransposeRule(Project-Other)\"", "operations": ["UPD StringLiteral: \"JoinProjectTransposeRule: with LogicalProject on left\" from \"JoinProjectTransposeRule: with LogicalProject on left\" to \"JoinProjectTransposeRule(Project-Other)\""]}, {"root": "UPDATE from \"JoinProjectTransposeRule: with LogicalProject on right\" to \"JoinProjectTransposeRule(Other-Project)\"", "operations": ["UPD StringLiteral: \"JoinProjectTransposeRule: with LogicalProject on right\" from \"JoinProjectTransposeRule: with LogicalProject on right\" to \"JoinProjectTransposeRule(Other-Project)\""]}]}}, {"JoinProjectTransposeRule_diff": {"operations": ["Update StringLiteral: \"JoinProjectTransposeRule: with two LogicalProject children\"(94) to \"JoinProjectTransposeRule(Project-Project)\"", "Update StringLiteral: \"JoinProjectTransposeRule: with LogicalProject on left\"(120) to \"JoinProjectTransposeRule(Project-Other)\"", "Update StringLiteral: \"JoinProjectTransposeRule: with LogicalProject on right\"(151) to \"JoinProjectTransposeRule(Other-Project)\""]}}, {"JoinUnionTransposeRule_cluster": {"actions": [{"root": "UPDATE from id to description", "operations": ["UPD SimpleName: id from id to description"]}, {"root": "UPDATE from \"union on left\" to \"JoinUnionTransposeRule(Union-Other)\"", "operations": ["UPD StringLiteral: \"union on left\" from \"union on left\" to \"JoinUnionTransposeRule(Union-Other)\""]}, {"root": "UPDATE from \"union on right\" to \"JoinUnionTransposeRule(Other-Union)\"", "operations": ["UPD StringLiteral: \"union on right\" from \"union on right\" to \"JoinUnionTransposeRule(Other-Union)\""]}, {"root": "INS SimpleName: description to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: description to SuperConstructorInvocation at 1"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: id", "DEL StringLiteral: \"JoinUnionTransposeRule: \"", "DEL InfixExpression: +"]}]}}, {"JoinUnionTransposeRule_diff": {"operations": ["Update SimpleName: id(105) to description", "Update StringLiteral: \"union on left\"(62) to \"JoinUnionTransposeRule(Union-Other)\"", "Update StringLiteral: \"union on right\"(93) to \"JoinUnionTransposeRule(Other-Union)\"", "Insert SimpleName: description(108) into SuperConstructorInvocation(109) at 1", "Delete StringLiteral: \"JoinUnionTransposeRule: \"(108)", "Delete SimpleName: id(109)", "Delete InfixExpression: +(110)"]}}, {"ReduceExpressionsRule_cluster": {"actions": [{"root": "UPDATE from \"ReduceExpressionsRule[Filter]\" to \"ReduceExpressionsRule(Filter)\"", "operations": ["UPD StringLiteral: \"ReduceExpressionsRule[Filter]\" from \"ReduceExpressionsRule[Filter]\" to \"ReduceExpressionsRule(Filter)\""]}, {"root": "UPDATE from \"ReduceExpressionsRule[Project]\" to \"ReduceExpressionsRule(Project)\"", "operations": ["UPD StringLiteral: \"ReduceExpressionsRule[Project]\" from \"ReduceExpressionsRule[Project]\" to \"ReduceExpressionsRule(Project)\""]}, {"root": "UPDATE from \"ReduceExpressionsRule[Join]\" to \"ReduceExpressionsRule(Join)\"", "operations": ["UPD StringLiteral: \"ReduceExpressionsRule[Join]\" from \"ReduceExpressionsRule[Join]\" to \"ReduceExpressionsRule(Join)\""]}, {"root": "UPDATE from \"ReduceExpressionsRule[Calc]\" to \"ReduceExpressionsRule(Calc)\"", "operations": ["UPD StringLiteral: \"ReduceExpressionsRule[Calc]\" from \"ReduceExpressionsRule[Calc]\" to \"ReduceExpressionsRule(Calc)\""]}]}}, {"ReduceExpressionsRule_diff": {"operations": ["Update StringLiteral: \"ReduceExpressionsRule[Filter]\"(132) to \"ReduceExpressionsRule(Filter)\"", "Update StringLiteral: \"ReduceExpressionsRule[Project]\"(459) to \"ReduceExpressionsRule(Project)\"", "Update StringLiteral: \"ReduceExpressionsRule[Join]\"(545) to \"ReduceExpressionsRule(Join)\"", "Update StringLiteral: \"ReduceExpressionsRule[Calc]\"(637) to \"ReduceExpressionsRule(Calc)\""]}}, {"ValuesReduceRule_cluster": {"actions": [{"root": "UPDATE from \"ValuesReduceRule[Filter\" to \"ValuesReduceRule(Filter)\"", "operations": ["UPD StringLiteral: \"ValuesReduceRule[Filter\" from \"ValuesReduceRule[Filter\" to \"ValuesReduceRule(Filter)\""]}, {"root": "UPDATE from \"ValuesReduceRule[Project]\" to \"ValuesReduceRule(Project)\"", "operations": ["UPD StringLiteral: \"ValuesReduceRule[Project]\" from \"ValuesReduceRule[Project]\" to \"ValuesReduceRule(Project)\""]}, {"root": "UPDATE from \"ValuesReduceRule[Project+Filter]\" to \"ValuesReduceRule(Project-Filter)\"", "operations": ["UPD StringLiteral: \"ValuesReduceRule[Project+Filter]\" from \"ValuesReduceRule[Project+Filter]\" to \"ValuesReduceRule(Project-Filter)\""]}]}}, {"ValuesReduceRule_diff": {"operations": ["Update StringLiteral: \"ValuesReduceRule[Filter\"(98) to \"ValuesReduceRule(Filter)\"", "Update StringLiteral: \"ValuesReduceRule[Project]\"(161) to \"ValuesReduceRule(Project)\"", "Update StringLiteral: \"ValuesReduceRule[Project+Filter]\"(229) to \"ValuesReduceRule(Project-Filter)\""]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}