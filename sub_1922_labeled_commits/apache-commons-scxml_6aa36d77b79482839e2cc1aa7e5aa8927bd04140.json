{"application": "apache-commons-scxml", "csha": "6aa36d77b79482839e2cc1aa7e5aa8927bd04140", "files": [{"If_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.commons.scxml2.semantics.ErrorConstants to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 4", "INS QualifiedName: Boolean.FALSE to VariableDeclarationFragment at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: rslt to VariableDeclarationFragment at 0"]}, {"root": "INS TryStatement to Block at 5", "operations": ["INS SimpleName: errRep to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ThisExpression to MethodInvocation at 4", "INS SimpleName: rslt to InfixExpression: == at 0", "INS Block to CatchClause at 1", "INS SimpleName: cond to InfixExpression: + at 1", "INS TryStatement to Block at 5", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: SCXMLExpressionException to SimpleType: SCXMLExpressionException at 0", "INS SimpleName: onError to MethodInvocation at 1", "INS SimpleName: rslt to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: Boolean.FALSE to Assignment: = at 1", "INS StringLiteral: \"Treating as false because the cond expression was evaluated as null: '\" to InfixExpression: + at 0", "INS Block to IfStatement at 1", "INS QualifiedName: Boolean.FALSE to Assignment: = at 1", "INS SimpleType: SCXMLExpressionException to SingleVariableDeclaration at 0", "INS InfixExpression: + to MethodInvocation at 3", "INS StringLiteral: \"'\" to InfixExpression: + at 2", "INS Block to IfStatement at 1", "INS SimpleName: appLog to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS StringLiteral: \"Treating as false due to error: \" to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS QualifiedName: ErrorConstants.EXPRESSION_ERROR to MethodInvocation at 2", "INS SimpleName: e to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: rslt to Assignment: = at 0", "INS SimpleName: getMessage to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: appLog to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: booleanValue to MethodInvocation at 1", "INS SimpleName: execute to Assignment: = at 0", "INS SimpleName: rslt to MethodInvocation at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from execute to rslt", "operations": ["UPD SimpleName: execute from execute to rslt"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: booleanValue", "DEL MethodInvocation"]}]}}, {"If_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(429) at 12", "Insert QualifiedName: org.apache.commons.scxml2.semantics.ErrorConstants(24) into ImportDeclaration(25) at 0", "Insert VariableDeclarationStatement(265) into Block(426) at 4", "Insert TryStatement(318) into Block(426) at 5", "Insert ExpressionStatement(324) into Block(426) at 6", "Insert SimpleType: Boolean(261) into VariableDeclarationStatement(265) at 0", "Insert VariableDeclarationFragment(264) into VariableDeclarationStatement(265) at 1", "Insert Block(296) into TryStatement(318) at 0", "Insert CatchClause(317) into TryStatement(318) at 1", "Insert Assignment: =(323) into ExpressionStatement(324) at 0", "Insert SimpleName: Boolean(260) into SimpleType: Boolean(261) at 0", "Insert SimpleName: rslt(262) into VariableDeclarationFragment(264) at 0", "Insert QualifiedName: Boolean.FALSE(263) into VariableDeclarationFragment(264) at 1", "Move ExpressionStatement(267) into Block(296) at 0", "Insert IfStatement(295) into Block(296) at 1", "Insert SingleVariableDeclaration(300) into CatchClause(317) at 0", "Insert Block(316) into CatchClause(317) at 1", "Insert SimpleName: execute(319) into Assignment: =(323) at 0", "Insert MethodInvocation(322) into Assignment: =(323) at 1", "Insert InfixExpression: ==(276) into IfStatement(295) at 0", "Insert Block(294) into IfStatement(295) at 1", "Insert SimpleType: SCXMLExpressionException(298) into SingleVariableDeclaration(300) at 0", "Insert SimpleName: e(299) into SingleVariableDeclaration(300) at 1", "Insert ExpressionStatement(304) into Block(316) at 0", "Insert ExpressionStatement(315) into Block(316) at 1", "Insert SimpleName: rslt(320) into MethodInvocation(322) at 0", "Insert SimpleName: booleanValue(321) into MethodInvocation(322) at 1", "Update SimpleName: execute(258) to rslt", "Move MethodInvocation(263) into Assignment: =(272) at 1", "Insert SimpleName: rslt(274) into InfixExpression: ==(276) at 0", "Insert NullLiteral(275) into InfixExpression: ==(276) at 1", "Insert IfStatement(289) into Block(294) at 0", "Insert ExpressionStatement(293) into Block(294) at 1", "Insert SimpleName: SCXMLExpressionException(297) into SimpleType: SCXMLExpressionException(298) at 0", "Insert Assignment: =(303) into ExpressionStatement(304) at 0", "Insert MethodInvocation(314) into ExpressionStatement(315) at 0", "Insert MethodInvocation(279) into IfStatement(289) at 0", "Insert Block(288) into IfStatement(289) at 1", "Insert Assignment: =(292) into ExpressionStatement(293) at 0", "Insert SimpleName: rslt(301) into Assignment: =(303) at 0", "Insert QualifiedName: Boolean.FALSE(302) into Assignment: =(303) at 1", "Insert SimpleName: errRep(305) into MethodInvocation(314) at 0", "Insert SimpleName: onError(306) into MethodInvocation(314) at 1", "Insert QualifiedName: ErrorConstants.EXPRESSION_ERROR(307) into MethodInvocation(314) at 2", "Insert InfixExpression: +(312) into MethodInvocation(314) at 3", "Insert ThisExpression(313) into MethodInvocation(314) at 4", "Insert SimpleName: appLog(277) into MethodInvocation(279) at 0", "Insert SimpleName: isDebugEnabled(278) into MethodInvocation(279) at 1", "Insert ExpressionStatement(287) into Block(288) at 0", "Insert SimpleName: rslt(290) into Assignment: =(292) at 0", "Insert QualifiedName: Boolean.FALSE(291) into Assignment: =(292) at 1", "Insert StringLiteral: \"Treating as false due to error: \"(308) into InfixExpression: +(312) at 0", "Insert MethodInvocation(311) into InfixExpression: +(312) at 1", "Insert MethodInvocation(286) into ExpressionStatement(287) at 0", "Insert SimpleName: e(309) into MethodInvocation(311) at 0", "Insert SimpleName: getMessage(310) into MethodInvocation(311) at 1", "Insert SimpleName: appLog(280) into MethodInvocation(286) at 0", "Insert SimpleName: debug(281) into MethodInvocation(286) at 1", "Insert InfixExpression: +(285) into MethodInvocation(286) at 2", "Insert StringLiteral: \"Treating as false because the cond expression was evaluated as null: '\"(282) into InfixExpression: +(285) at 0", "Insert SimpleName: cond(283) into InfixExpression: +(285) at 1", "Insert StringLiteral: \"'\"(284) into InfixExpression: +(285) at 2", "Delete SimpleName: booleanValue(264)", "Delete MethodInvocation(265)"]}}, {"SCXMLSemanticsImpl_cluster": {"actions": [{"root": "INS QualifiedName: Boolean.FALSE to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: Boolean.FALSE to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: getCond to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: t to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: rslt to InfixExpression: == at 0", "INS SimpleName: appLog to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS IfStatement to Block at 3", "INS StringLiteral: \"'\" to InfixExpression: + at 2", "INS SimpleName: rslt to Assignment: = at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS QualifiedName: Boolean.FALSE to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS StringLiteral: \"Treating as false because the cond expression was evaluated as null: '\" to InfixExpression: + at 0", "INS SimpleName: appLog to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS InfixExpression: + to MethodInvocation at 3", "operations": ["INS InfixExpression: + to MethodInvocation at 3", "INS StringLiteral: \"Treating as false due to error: \" to InfixExpression: + at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1"]}]}}, {"SCXMLSemanticsImpl_diff": {"operations": ["Insert QualifiedName: Boolean.FALSE(1368) into VariableDeclarationFragment(1369) at 1", "Insert IfStatement(1442) into Block(1449) at 3", "Insert InfixExpression: ==(1421) into IfStatement(1442) at 0", "Insert Block(1441) into IfStatement(1442) at 1", "Insert SimpleName: rslt(1419) into InfixExpression: ==(1421) at 0", "Insert NullLiteral(1420) into InfixExpression: ==(1421) at 1", "Insert IfStatement(1436) into Block(1441) at 0", "Insert ExpressionStatement(1440) into Block(1441) at 1", "Insert MethodInvocation(1424) into IfStatement(1436) at 0", "Insert Block(1435) into IfStatement(1436) at 1", "Insert Assignment: =(1439) into ExpressionStatement(1440) at 0", "Insert InfixExpression: +(1465) into MethodInvocation(1467) at 3", "Insert SimpleName: appLog(1422) into MethodInvocation(1424) at 0", "Insert SimpleName: isDebugEnabled(1423) into MethodInvocation(1424) at 1", "Insert ExpressionStatement(1434) into Block(1435) at 0", "Insert SimpleName: rslt(1437) into Assignment: =(1439) at 0", "Insert QualifiedName: Boolean.FALSE(1438) into Assignment: =(1439) at 1", "Insert StringLiteral: \"Treating as false due to error: \"(1461) into InfixExpression: +(1465) at 0", "Move MethodInvocation(1438) into InfixExpression: +(1465) at 1", "Insert MethodInvocation(1433) into ExpressionStatement(1434) at 0", "Insert SimpleName: appLog(1425) into MethodInvocation(1433) at 0", "Insert SimpleName: debug(1426) into MethodInvocation(1433) at 1", "Insert InfixExpression: +(1432) into MethodInvocation(1433) at 2", "Insert StringLiteral: \"Treating as false because the cond expression was evaluated as null: '\"(1427) into InfixExpression: +(1432) at 0", "Insert MethodInvocation(1430) into InfixExpression: +(1432) at 1", "Insert StringLiteral: \"'\"(1431) into InfixExpression: +(1432) at 2", "Insert SimpleName: t(1428) into MethodInvocation(1430) at 0", "Insert SimpleName: getCond(1429) into MethodInvocation(1430) at 1"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}