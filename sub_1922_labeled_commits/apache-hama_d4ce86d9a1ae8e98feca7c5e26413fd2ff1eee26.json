{"application": "apache-hama", "csha": "d4ce86d9a1ae8e98feca7c5e26413fd2ff1eee26", "files": [{"Constants_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 31", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS StringLiteral: \"bsp.message.type.class\" to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: interface at 31", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: MESSAGE_CLASS to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 32", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS NumberLiteral: 16 to InfixExpression: * at 0", "INS SimpleName: BUFFER_DEFAULT_SIZE to VariableDeclarationFragment at 0", "INS Modifier: public to FieldDeclaration at 0", "INS InfixExpression: * to VariableDeclarationFragment at 1", "INS NumberLiteral: 1024 to InfixExpression: * at 1", "INS FieldDeclaration to TypeDeclaration: interface at 32", "INS Modifier: static to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 33", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: BYTEBUFFER_SIZE to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS StringLiteral: \"bsp.message.bytebuffer.size\" to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: interface at 33", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 34", "operations": ["INS SimpleName: BYTEBUFFER_DIRECT to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"bsp.message.bytebuffer.direct\" to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: interface at 34", "INS Modifier: public to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 35", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS PrimitiveType: boolean to FieldDeclaration at 3", "INS SimpleName: BYTEBUFFER_DIRECT_DEFAULT to VariableDeclarationFragment at 0", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: interface at 35", "INS Modifier: public to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 36", "operations": ["INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: DATA_SPILL_PATH to VariableDeclarationFragment at 0", "INS StringLiteral: \"bsp.data.spill.location\" to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: interface at 36", "INS SimpleName: String to SimpleType: String at 0"]}]}}, {"Constants_diff": {"operations": ["Insert FieldDeclaration(302) into TypeDeclaration: interface(573) at 31", "Insert FieldDeclaration(312) into TypeDeclaration: interface(573) at 32", "Insert FieldDeclaration(321) into TypeDeclaration: interface(573) at 33", "Insert FieldDeclaration(330) into TypeDeclaration: interface(573) at 34", "Insert FieldDeclaration(338) into TypeDeclaration: interface(573) at 35", "Insert FieldDeclaration(347) into TypeDeclaration: interface(573) at 36", "Insert Modifier: public(294) into FieldDeclaration(302) at 0", "Insert Modifier: static(295) into FieldDeclaration(302) at 1", "Insert Modifier: final(296) into FieldDeclaration(302) at 2", "Insert SimpleType: String(298) into FieldDeclaration(302) at 3", "Insert VariableDeclarationFragment(301) into FieldDeclaration(302) at 4", "Insert Modifier: public(303) into FieldDeclaration(312) at 0", "Insert Modifier: static(304) into FieldDeclaration(312) at 1", "Insert Modifier: final(305) into FieldDeclaration(312) at 2", "Insert PrimitiveType: int(306) into FieldDeclaration(312) at 3", "Insert VariableDeclarationFragment(311) into FieldDeclaration(312) at 4", "Insert Modifier: public(313) into FieldDeclaration(321) at 0", "Insert Modifier: static(314) into FieldDeclaration(321) at 1", "Insert Modifier: final(315) into FieldDeclaration(321) at 2", "Insert SimpleType: String(317) into FieldDeclaration(321) at 3", "Insert VariableDeclarationFragment(320) into FieldDeclaration(321) at 4", "Insert Modifier: public(322) into FieldDeclaration(330) at 0", "Insert Modifier: static(323) into FieldDeclaration(330) at 1", "Insert Modifier: final(324) into FieldDeclaration(330) at 2", "Insert SimpleType: String(326) into FieldDeclaration(330) at 3", "Insert VariableDeclarationFragment(329) into FieldDeclaration(330) at 4", "Insert Modifier: public(331) into FieldDeclaration(338) at 0", "Insert Modifier: static(332) into FieldDeclaration(338) at 1", "Insert Modifier: final(333) into FieldDeclaration(338) at 2", "Insert PrimitiveType: boolean(334) into FieldDeclaration(338) at 3", "Insert VariableDeclarationFragment(337) into FieldDeclaration(338) at 4", "Insert Modifier: public(339) into FieldDeclaration(347) at 0", "Insert Modifier: static(340) into FieldDeclaration(347) at 1", "Insert Modifier: final(341) into FieldDeclaration(347) at 2", "Insert SimpleType: String(343) into FieldDeclaration(347) at 3", "Insert VariableDeclarationFragment(346) into FieldDeclaration(347) at 4", "Insert SimpleName: String(297) into SimpleType: String(298) at 0", "Insert SimpleName: MESSAGE_CLASS(299) into VariableDeclarationFragment(301) at 0", "Insert StringLiteral: \"bsp.message.type.class\"(300) into VariableDeclarationFragment(301) at 1", "Insert SimpleName: BUFFER_DEFAULT_SIZE(307) into VariableDeclarationFragment(311) at 0", "Insert InfixExpression: *(310) into VariableDeclarationFragment(311) at 1", "Insert SimpleName: String(316) into SimpleType: String(317) at 0", "Insert SimpleName: BYTEBUFFER_SIZE(318) into VariableDeclarationFragment(320) at 0", "Insert StringLiteral: \"bsp.message.bytebuffer.size\"(319) into VariableDeclarationFragment(320) at 1", "Insert SimpleName: String(325) into SimpleType: String(326) at 0", "Insert SimpleName: BYTEBUFFER_DIRECT(327) into VariableDeclarationFragment(329) at 0", "Insert StringLiteral: \"bsp.message.bytebuffer.direct\"(328) into VariableDeclarationFragment(329) at 1", "Insert SimpleName: BYTEBUFFER_DIRECT_DEFAULT(335) into VariableDeclarationFragment(337) at 0", "Insert BooleanLiteral: true(336) into VariableDeclarationFragment(337) at 1", "Insert SimpleName: String(342) into SimpleType: String(343) at 0", "Insert SimpleName: DATA_SPILL_PATH(344) into VariableDeclarationFragment(346) at 0", "Insert StringLiteral: \"bsp.data.spill.location\"(345) into VariableDeclarationFragment(346) at 1", "Insert NumberLiteral: 16(308) into InfixExpression: *(310) at 0", "Insert NumberLiteral: 1024(309) into InfixExpression: *(310) at 1"]}}, {"BufferedReadStatus_cluster": {"actions": [{"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS BooleanLiteral: true to ReturnStatement at 0"]}]}}, {"BufferedReadStatus_diff": {"operations": ["Update PrimitiveType: void(90) to boolean", "Insert ReturnStatement(93) into Block(94) at 0", "Insert BooleanLiteral: true(92) into ReturnStatement(93) at 0"]}}, {"PreFetchCache_cluster": {"actions": [{"root": "INS SimpleType: IOException to MethodDeclaration at 7", "operations": ["INS SimpleType: IOException to MethodDeclaration at 7", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ThrowStatement to Block at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS IfStatement to Block at 2", "INS StringLiteral: \"Failed to start reading the spilled file: \" to ClassInstanceCreation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"PreFetchCache_diff": {"operations": ["Insert SimpleType: IOException(578) into MethodDeclaration(617) at 7", "Insert SimpleName: IOException(577) into SimpleType: IOException(578) at 0", "Insert IfStatement(609) into Block(616) at 2", "Insert PrefixExpression: !(602) into IfStatement(609) at 0", "Insert Block(608) into IfStatement(609) at 1", "Move MethodInvocation(599) into PrefixExpression: !(602) at 0", "Insert ThrowStatement(607) into Block(608) at 0", "Insert ClassInstanceCreation(606) into ThrowStatement(607) at 0", "Insert SimpleType: IOException(604) into ClassInstanceCreation(606) at 0", "Insert StringLiteral: \"Failed to start reading the spilled file: \"(605) into ClassInstanceCreation(606) at 1", "Insert SimpleName: IOException(603) into SimpleType: IOException(604) at 0", "Delete ExpressionStatement(600)"]}}, {"ReadIndexStatus_cluster": {"actions": [{"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}]}}, {"ReadIndexStatus_diff": {"operations": ["Update PrimitiveType: void(67) to boolean"]}}, {"SpillWriteIndexStatus_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS Modifier: volatile to FieldDeclaration at 1", "INS SimpleName: errorState to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: errorState to ConditionalExpression at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS PrefixExpression: - to ConditionalExpression at 1", "INS SimpleName: index to ConditionalExpression at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SimpleName: checkError to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 12", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: notifyError to MethodDeclaration at 2", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: notify to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: errorState to Assignment: = at 0", "INS Block to MethodDeclaration at 3"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "UPDATE from the thread that is writing into <code>SpillingBuffer</code>. It stores the to the thread that is writing into ", "operations": ["UPD TextElement: the thread that is writing into <code>SpillingBuffer</code>. It stores the from the thread that is writing into <code>SpillingBuffer</code>. It stores the to the thread that is writing into "]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS SimpleName: SpillingDataOutputBuffer to TagElement: @link at 0", "INS TagElement: @link to TagElement at 2"]}, {"root": "INS TextElement: . It stores to TagElement at 3", "operations": ["INS TextElement: . It stores to TagElement at 3"]}, {"root": "UPDATE from state and manipulates the next available buffer for both the threads. to the state and manipulates the next available buffer for both the threads.", "operations": ["UPD TextElement: state and manipulates the next available buffer for both the threads. from state and manipulates the next available buffer for both the threads. to the state and manipulates the next available buffer for both the threads."]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: errorState to Assignment: = at 0", "INS BooleanLiteral: false to Assignment: = at 1"]}, {"root": "INS TagElement: @return to Javadoc at 2", "operations": ["INS TextElement:  whether the spill started correctly to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 2"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS PrefixExpression: ! to ReturnStatement at 0", "INS SimpleName: errorState to PrefixExpression: ! at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS InfixExpression: && to WhileStatement at 0", "operations": ["INS SimpleName: errorState to PrefixExpression: ! at 0", "INS InfixExpression: && to WhileStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: checkError to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: bufferListWriteIndex to MethodInvocation at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: || to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: || at 0", "INS SimpleName: errorState to InfixExpression: || at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: checkError to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: processorBufferIndex to MethodInvocation at 1"]}, {"root": "INS InfixExpression: && to WhileStatement at 0", "operations": ["INS InfixExpression: && to WhileStatement at 0", "INS SimpleName: errorState to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 2", "operations": ["INS SimpleName: errorState to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 2"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InfixExpression: && to ParenthesizedExpression at 0"]}, {"root": "DEL SimpleName: bufferListWriteIndex", "operations": ["DEL SimpleName: bufferListWriteIndex"]}, {"root": "DEL SimpleName: processorBufferIndex", "operations": ["DEL SimpleName: processorBufferIndex"]}]}}, {"SpillWriteIndexStatus_diff": {"operations": ["Insert FieldDeclaration(71) into TypeDeclaration: class(361) at 8", "Insert MethodDeclaration(202) into TypeDeclaration: class(361) at 11", "Insert MethodDeclaration(214) into TypeDeclaration: class(361) at 12", "Insert Modifier: private(66) into FieldDeclaration(71) at 0", "Insert Modifier: volatile(67) into FieldDeclaration(71) at 1", "Insert PrimitiveType: boolean(68) into FieldDeclaration(71) at 2", "Insert VariableDeclarationFragment(70) into FieldDeclaration(71) at 3", "Insert Modifier: private(189) into MethodDeclaration(202) at 0", "Insert PrimitiveType: int(190) into MethodDeclaration(202) at 1", "Insert SimpleName: checkError(191) into MethodDeclaration(202) at 2", "Insert SingleVariableDeclaration(194) into MethodDeclaration(202) at 3", "Insert Block(201) into MethodDeclaration(202) at 4", "Insert Modifier: public(203) into MethodDeclaration(214) at 0", "Insert PrimitiveType: void(204) into MethodDeclaration(214) at 1", "Insert SimpleName: notifyError(205) into MethodDeclaration(214) at 2", "Insert Block(213) into MethodDeclaration(214) at 3", "Update PrimitiveType: void(263) to boolean", "Update TextElement: the thread that is writing into <code>SpillingBuffer</code>. It stores the(22) to the thread that is writing into ", "Insert TagElement: @link(24) into TagElement(27) at 2", "Insert TextElement: . It stores(25) into TagElement(27) at 3", "Update TextElement: state and manipulates the next available buffer for both the threads.(23) to the state and manipulates the next available buffer for both the threads.", "Insert SimpleName: errorState(69) into VariableDeclarationFragment(70) at 0", "Insert ExpressionStatement(118) into Block(119) at 6", "Insert PrimitiveType: int(192) into SingleVariableDeclaration(194) at 0", "Insert SimpleName: index(193) into SingleVariableDeclaration(194) at 1", "Insert ReturnStatement(200) into Block(201) at 0", "Insert ExpressionStatement(209) into Block(213) at 0", "Insert ExpressionStatement(212) into Block(213) at 1", "Insert TagElement: @return(312) into Javadoc(313) at 2", "Insert ReturnStatement(332) into Block(333) at 1", "Insert SimpleName: SpillingDataOutputBuffer(23) into TagElement: @link(24) at 0", "Insert Assignment: =(117) into ExpressionStatement(118) at 0", "Insert InfixExpression: &&(164) into WhileStatement(182) at 0", "Insert MethodInvocation(185) into ReturnStatement(186) at 0", "Insert ConditionalExpression(199) into ReturnStatement(200) at 0", "Insert Assignment: =(208) into ExpressionStatement(209) at 0", "Insert MethodInvocation(211) into ExpressionStatement(212) at 0", "Insert InfixExpression: ||(293) into IfStatement(298) at 0", "Insert MethodInvocation(301) into ReturnStatement(302) at 0", "Insert TextElement:  whether the spill started correctly(311) into TagElement: @return(312) at 0", "Insert InfixExpression: &&(324) into WhileStatement(329) at 0", "Insert PrefixExpression: !(331) into ReturnStatement(332) at 0", "Insert SimpleName: errorState(115) into Assignment: =(117) at 0", "Insert BooleanLiteral: false(116) into Assignment: =(117) at 1", "Move MethodInvocation(148) into InfixExpression: &&(164) at 0", "Insert PrefixExpression: !(163) into InfixExpression: &&(164) at 1", "Insert SimpleName: checkError(183) into MethodInvocation(185) at 0", "Insert SimpleName: bufferListWriteIndex(184) into MethodInvocation(185) at 1", "Insert SimpleName: errorState(195) into ConditionalExpression(199) at 0", "Insert PrefixExpression: -(197) into ConditionalExpression(199) at 1", "Insert SimpleName: index(198) into ConditionalExpression(199) at 2", "Insert SimpleName: errorState(206) into Assignment: =(208) at 0", "Insert BooleanLiteral: true(207) into Assignment: =(208) at 1", "Insert SimpleName: notify(210) into MethodInvocation(211) at 0", "Insert PrefixExpression: !(279) into InfixExpression: &&(280) at 2", "Insert ParenthesizedExpression(291) into InfixExpression: ||(293) at 0", "Insert SimpleName: errorState(292) into InfixExpression: ||(293) at 1", "Insert SimpleName: checkError(299) into MethodInvocation(301) at 0", "Insert SimpleName: processorBufferIndex(300) into MethodInvocation(301) at 1", "Move PrefixExpression: !(268) into InfixExpression: &&(324) at 0", "Insert PrefixExpression: !(323) into InfixExpression: &&(324) at 1", "Insert SimpleName: errorState(330) into PrefixExpression: !(331) at 0", "Insert SimpleName: errorState(162) into PrefixExpression: !(163) at 0", "Insert NumberLiteral: 1(196) into PrefixExpression: -(197) at 0", "Insert SimpleName: errorState(278) into PrefixExpression: !(279) at 0", "Move InfixExpression: &&(244) into ParenthesizedExpression(291) at 0", "Insert SimpleName: errorState(322) into PrefixExpression: !(323) at 0", "Delete SimpleName: bufferListWriteIndex(167)", "Delete SimpleName: processorBufferIndex(250)"]}}, {"SpilledDataInputBuffer_cluster": {"actions": [{"root": "UPDATE from org.apache.hama.bsp.message.io.BufferReadStatus to org.apache.commons.logging.Log", "operations": ["UPD QualifiedName: org.apache.hama.bsp.message.io.BufferReadStatus from org.apache.hama.bsp.message.io.BufferReadStatus to org.apache.commons.logging.Log"]}, {"root": "UPDATE from org.apache.hama.bsp.message.io.ReadIndexStatus to org.apache.commons.logging.LogFactory", "operations": ["UPD QualifiedName: org.apache.hama.bsp.message.io.ReadIndexStatus from org.apache.hama.bsp.message.io.ReadIndexStatus to org.apache.commons.logging.LogFactory"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS TypeLiteral to MethodInvocation at 2", "INS SimpleType: SpilledDataInputBuffer to TypeLiteral at 0", "INS SimpleName: LogFactory to MethodInvocation at 0", "INS SimpleName: getLog to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: LOG to VariableDeclarationFragment at 0", "INS SimpleType: Log to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: SpilledDataInputBuffer to SimpleType: SpilledDataInputBuffer at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: Log to SimpleType: Log at 0"]}, {"root": "UPDATE from List<ByteBuffer> to List<SpilledByteBuffer>", "operations": ["UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS QualifiedName: Boolean.FALSE to ReturnStatement at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: notifyError to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: fileName to InfixExpression: + at 1", "INS Block to MethodDeclaration at 5", "INS TryStatement to Block at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: status_ to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS StringLiteral: \"Error reading from file: \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "UPDATE from ByteBuffer to SpilledByteBuffer", "operations": ["UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: readSize to InfixExpression: < at 0", "INS BreakStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS InfixExpression: < to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 6"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS ThrowStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS StringLiteral: \"Failed to read the spilled file: \" to InfixExpression: + at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SimpleName: fileName_ to InfixExpression: + at 1", "INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "UPDATE from mBuffer to readSize", "operations": ["UPD SimpleName: mBuffer from mBuffer to readSize"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from map to read", "operations": ["UPD SimpleName: map from map to read"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from fileReadPos to buffer", "operations": ["UPD SimpleName: fileReadPos from fileReadPos to buffer"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fileReadPos to MethodInvocation at 0", "MOV SimpleName: readSize to MethodInvocation at 1"]}, {"root": "UPDATE from readSize to getByteBuffer", "operations": ["UPD SimpleName: readSize from readSize to getByteBuffer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.nio.ByteBuffer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.nio.MappedByteBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.nio.channels.FileChannel.MapMode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpilledDataInputBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpilledDataReadStatus", "DEL ImportDeclaration"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: MappedByteBuffer", "DEL SimpleName: MappedByteBuffer", "DEL SimpleName: mBuffer", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL VariableDeclarationStatement"]}, {"root": "DEL QualifiedName: MapMode.READ_ONLY", "operations": ["DEL QualifiedName: MapMode.READ_ONLY"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: buffer", "DEL SimpleName: mBuffer", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: put"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"SpilledDataInputBuffer_diff": {"operations": ["Update QualifiedName: org.apache.hama.bsp.message.io.BufferReadStatus(51) to org.apache.commons.logging.Log", "Update QualifiedName: org.apache.hama.bsp.message.io.ReadIndexStatus(53) to org.apache.commons.logging.LogFactory", "Insert FieldDeclaration(74) into TypeDeclaration: class(1234) at 5", "Insert Modifier: private(61) into FieldDeclaration(74) at 0", "Insert Modifier: static(62) into FieldDeclaration(74) at 1", "Insert Modifier: final(63) into FieldDeclaration(74) at 2", "Insert SimpleType: Log(65) into FieldDeclaration(74) at 3", "Insert VariableDeclarationFragment(73) into FieldDeclaration(74) at 4", "Insert SimpleName: Log(64) into SimpleType: Log(65) at 0", "Insert SimpleName: LOG(66) into VariableDeclarationFragment(73) at 0", "Insert MethodInvocation(72) into VariableDeclarationFragment(73) at 1", "Update ParameterizedType: List<ByteBuffer>(93) to List<SpilledByteBuffer>", "Insert Block(387) into MethodDeclaration(388) at 5", "Update ParameterizedType: List<ByteBuffer>(390) to List<SpilledByteBuffer>", "Update SimpleType: ByteBuffer(461) to SpilledByteBuffer", "Update SimpleType: ByteBuffer(669) to SpilledByteBuffer", "Update ParameterizedType: List<ByteBuffer>(1176) to List<SpilledByteBuffer>", "Insert SimpleName: LogFactory(67) into MethodInvocation(72) at 0", "Insert SimpleName: getLog(68) into MethodInvocation(72) at 1", "Insert TypeLiteral(71) into MethodInvocation(72) at 2", "Update SimpleType: ByteBuffer(92) to SpilledByteBuffer", "Update ParameterizedType: List<ByteBuffer>(145) to List<SpilledByteBuffer>", "Insert TryStatement(384) into Block(387) at 0", "Move ReturnStatement(365) into Block(387) at 1", "Update SimpleType: ByteBuffer(389) to SpilledByteBuffer", "Update SimpleName: ByteBuffer(460) to SpilledByteBuffer", "Update ParameterizedType: List<ByteBuffer>(489) to List<SpilledByteBuffer>", "Update SimpleName: ByteBuffer(668) to SpilledByteBuffer", "Update SimpleType: ByteBuffer(1175) to SpilledByteBuffer", "Insert SimpleType: SpilledDataInputBuffer(70) into TypeLiteral(71) at 0", "Update SimpleName: ByteBuffer(91) to SpilledByteBuffer", "Update SimpleType: ByteBuffer(144) to SpilledByteBuffer", "Move Block(366) into TryStatement(384) at 0", "Insert CatchClause(383) into TryStatement(384) at 1", "Update SimpleName: ByteBuffer(388) to SpilledByteBuffer", "Update SimpleType: ByteBuffer(488) to SpilledByteBuffer", "Update SimpleName: ByteBuffer(1174) to SpilledByteBuffer", "Insert SimpleName: SpilledDataInputBuffer(69) into SimpleType: SpilledDataInputBuffer(70) at 0", "Update SimpleName: ByteBuffer(143) to SpilledByteBuffer", "Insert IfStatement(291) into Block(304) at 6", "Insert SingleVariableDeclaration(367) into CatchClause(383) at 0", "Insert Block(382) into CatchClause(383) at 1", "Update SimpleName: ByteBuffer(487) to SpilledByteBuffer", "Insert IfStatement(628) into Block(629) at 3", "Update SimpleType: ByteBuffer(253) to SpilledByteBuffer", "Insert InfixExpression: <(288) into IfStatement(291) at 0", "Insert Block(290) into IfStatement(291) at 1", "Insert SimpleType: Exception(365) into SingleVariableDeclaration(367) at 0", "Insert SimpleName: e(366) into SingleVariableDeclaration(367) at 1", "Insert ExpressionStatement(375) into Block(382) at 0", "Insert ExpressionStatement(379) into Block(382) at 1", "Insert ReturnStatement(381) into Block(382) at 2", "Insert PrefixExpression: !(619) into IfStatement(628) at 0", "Insert Block(627) into IfStatement(628) at 1", "Update SimpleName: ByteBuffer(252) to SpilledByteBuffer", "Update SimpleName: mBuffer(279) to readSize", "Insert SimpleName: readSize(286) into InfixExpression: <(288) at 0", "Insert NumberLiteral: 0(287) into InfixExpression: <(288) at 1", "Insert BreakStatement(289) into Block(290) at 0", "Insert SimpleName: Exception(364) into SimpleType: Exception(365) at 0", "Insert MethodInvocation(374) into ExpressionStatement(375) at 0", "Insert MethodInvocation(378) into ExpressionStatement(379) at 0", "Insert QualifiedName: Boolean.FALSE(380) into ReturnStatement(381) at 0", "Move MethodInvocation(597) into PrefixExpression: !(619) at 0", "Insert ThrowStatement(626) into Block(627) at 0", "Update SimpleName: map(281) to read", "Insert MethodInvocation(282) into MethodInvocation(283) at 2", "Insert SimpleName: LOG(368) into MethodInvocation(374) at 0", "Insert SimpleName: error(369) into MethodInvocation(374) at 1", "Insert InfixExpression: +(372) into MethodInvocation(374) at 2", "Insert SimpleName: e(373) into MethodInvocation(374) at 3", "Insert SimpleName: status_(376) into MethodInvocation(378) at 0", "Insert SimpleName: notifyError(377) into MethodInvocation(378) at 1", "Insert ClassInstanceCreation(625) into ThrowStatement(626) at 0", "Update SimpleName: fileReadPos(283) to buffer", "Move SimpleName: fileReadPos(283) into MethodInvocation(282) at 0", "Update SimpleName: readSize(284) to getByteBuffer", "Move SimpleName: readSize(284) into MethodInvocation(282) at 1", "Insert StringLiteral: \"Error reading from file: \"(370) into InfixExpression: +(372) at 0", "Insert SimpleName: fileName(371) into InfixExpression: +(372) at 1", "Insert SimpleType: IOException(621) into ClassInstanceCreation(625) at 0", "Insert InfixExpression: +(624) into ClassInstanceCreation(625) at 1", "Insert SimpleName: IOException(620) into SimpleType: IOException(621) at 0", "Insert StringLiteral: \"Failed to read the spilled file: \"(622) into InfixExpression: +(624) at 0", "Insert SimpleName: fileName_(623) into InfixExpression: +(624) at 1", "Delete QualifiedName: java.nio.ByteBuffer(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: java.nio.MappedByteBuffer(31)", "Delete ImportDeclaration(32)", "Delete QualifiedName: java.nio.channels.FileChannel.MapMode(35)", "Delete ImportDeclaration(36)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpilledDataInputBuffer(55)", "Delete ImportDeclaration(56)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpilledDataReadStatus(57)", "Delete ImportDeclaration(58)", "Delete SimpleName: MappedByteBuffer(211)", "Delete SimpleType: MappedByteBuffer(212)", "Delete SimpleName: mBuffer(213)", "Delete NullLiteral(214)", "Delete VariableDeclarationFragment(215)", "Delete VariableDeclarationStatement(216)", "Delete QualifiedName: MapMode.READ_ONLY(282)", "Delete SimpleName: buffer(288)", "Delete SimpleName: put(289)", "Delete SimpleName: mBuffer(290)", "Delete MethodInvocation(291)", "Delete ExpressionStatement(292)", "Delete ExpressionStatement(598)"]}}, {"SpilledDataProcessor_cluster": {"actions": [{"root": "UPDATE from Base interface defining the behaviour to process the spilled data provided to Base interface defining the behaviour to process the spilled data provided in", "operations": ["UPD TextElement: Base interface defining the behaviour to process the spilled data provided from Base interface defining the behaviour to process the spilled data provided to Base interface defining the behaviour to process the spilled data provided in"]}, {"root": "UPDATE from in a byte buffer. to a byte buffer.", "operations": ["UPD TextElement: in a byte buffer. from in a byte buffer. to a byte buffer."]}, {"root": "UPDATE from ByteBuffer to SpilledByteBuffer", "operations": ["UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.nio.ByteBuffer", "DEL ImportDeclaration"]}]}}, {"SpilledDataProcessor_diff": {"operations": ["Update TextElement: Base interface defining the behaviour to process the spilled data provided(21) to Base interface defining the behaviour to process the spilled data provided in", "Update TextElement: in a byte buffer.(22) to a byte buffer.", "Update SimpleType: ByteBuffer(52) to SpilledByteBuffer", "Update SimpleName: ByteBuffer(51) to SpilledByteBuffer", "Delete QualifiedName: java.nio.ByteBuffer(17)", "Delete ImportDeclaration(18)"]}}, {"SpilledDataReadStatus_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: volatile to FieldDeclaration at 1", "INS SimpleName: errorState_ to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: boolean to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: errorState_ to IfStatement at 0", "INS Block to IfStatement at 2", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: checkError to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SimpleName: index to ReturnStatement at 0", "INS PrefixExpression: - to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS Block to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: notify to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: notifyError to MethodDeclaration at 2", "INS SimpleName: errorState_ to Assignment: = at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: errorState_ to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS BooleanLiteral: false to Assignment: = at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS PrefixExpression: ! to ReturnStatement at 0", "INS SimpleName: errorState_ to PrefixExpression: ! at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: checkError to MethodInvocation at 0", "INS SimpleName: readBufferIndex_ to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: fetchFileBufferIndex_ to MethodInvocation at 1", "INS SimpleName: checkError to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS InfixExpression: && to WhileStatement at 0", "operations": ["INS SimpleName: errorState_ to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS InfixExpression: && to WhileStatement at 0"]}, {"root": "INS Block to WhileStatement at 1", "operations": ["INS Block to WhileStatement at 1"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 2", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 2", "INS SimpleName: errorState_ to PrefixExpression: ! at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 2", "operations": ["INS SimpleName: errorState_ to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 2"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 0", "MOV TryStatement to Block at 0"]}, {"root": "DEL SimpleName: readBufferIndex_", "operations": ["DEL SimpleName: readBufferIndex_"]}, {"root": "DEL SimpleName: fetchFileBufferIndex_", "operations": ["DEL SimpleName: fetchFileBufferIndex_"]}]}}, {"SpilledDataReadStatus_diff": {"operations": ["Insert FieldDeclaration(91) into TypeDeclaration: class(389) at 11", "Insert MethodDeclaration(152) into TypeDeclaration: class(389) at 13", "Insert MethodDeclaration(164) into TypeDeclaration: class(389) at 14", "Insert Modifier: private(86) into FieldDeclaration(91) at 0", "Insert Modifier: volatile(87) into FieldDeclaration(91) at 1", "Insert PrimitiveType: boolean(88) into FieldDeclaration(91) at 2", "Insert VariableDeclarationFragment(90) into FieldDeclaration(91) at 3", "Insert Modifier: private(136) into MethodDeclaration(152) at 0", "Insert PrimitiveType: int(137) into MethodDeclaration(152) at 1", "Insert SimpleName: checkError(138) into MethodDeclaration(152) at 2", "Insert SingleVariableDeclaration(141) into MethodDeclaration(152) at 3", "Insert Block(151) into MethodDeclaration(152) at 4", "Insert Modifier: public(153) into MethodDeclaration(164) at 0", "Insert PrimitiveType: void(154) into MethodDeclaration(164) at 1", "Insert SimpleName: notifyError(155) into MethodDeclaration(164) at 2", "Insert Block(163) into MethodDeclaration(164) at 3", "Update PrimitiveType: void(306) to boolean", "Insert SimpleName: errorState_(89) into VariableDeclarationFragment(90) at 0", "Insert ExpressionStatement(133) into Block(134) at 7", "Insert PrimitiveType: int(139) into SingleVariableDeclaration(141) at 0", "Insert SimpleName: index(140) into SingleVariableDeclaration(141) at 1", "Insert IfStatement(150) into Block(151) at 0", "Insert ExpressionStatement(159) into Block(163) at 0", "Insert ExpressionStatement(162) into Block(163) at 1", "Insert ReturnStatement(386) into Block(387) at 1", "Insert Assignment: =(132) into ExpressionStatement(133) at 0", "Insert SimpleName: errorState_(142) into IfStatement(150) at 0", "Insert Block(146) into IfStatement(150) at 1", "Insert Block(149) into IfStatement(150) at 2", "Insert Assignment: =(158) into ExpressionStatement(159) at 0", "Insert MethodInvocation(161) into ExpressionStatement(162) at 0", "Insert MethodInvocation(226) into ReturnStatement(227) at 0", "Insert MethodInvocation(304) into ReturnStatement(305) at 0", "Insert InfixExpression: &&(359) into WhileStatement(383) at 0", "Insert Block(382) into WhileStatement(383) at 1", "Insert PrefixExpression: !(385) into ReturnStatement(386) at 0", "Insert SimpleName: errorState_(130) into Assignment: =(132) at 0", "Insert BooleanLiteral: false(131) into Assignment: =(132) at 1", "Insert ReturnStatement(145) into Block(146) at 0", "Insert ReturnStatement(148) into Block(149) at 0", "Insert SimpleName: errorState_(156) into Assignment: =(158) at 0", "Insert BooleanLiteral: true(157) into Assignment: =(158) at 1", "Insert SimpleName: notify(160) into MethodInvocation(161) at 0", "Insert PrefixExpression: !(207) into InfixExpression: &&(208) at 2", "Insert SimpleName: checkError(224) into MethodInvocation(226) at 0", "Insert SimpleName: readBufferIndex_(225) into MethodInvocation(226) at 1", "Insert PrefixExpression: !(289) into InfixExpression: &&(290) at 2", "Insert SimpleName: checkError(302) into MethodInvocation(304) at 0", "Insert SimpleName: fetchFileBufferIndex_(303) into MethodInvocation(304) at 1", "Move PrefixExpression: !(309) into InfixExpression: &&(359) at 0", "Insert PrefixExpression: !(358) into InfixExpression: &&(359) at 1", "Move TryStatement(331) into Block(382) at 0", "Insert SimpleName: errorState_(384) into PrefixExpression: !(385) at 0", "Insert PrefixExpression: -(144) into ReturnStatement(145) at 0", "Insert SimpleName: index(147) into ReturnStatement(148) at 0", "Insert SimpleName: errorState_(206) into PrefixExpression: !(207) at 0", "Insert SimpleName: errorState_(288) into PrefixExpression: !(289) at 0", "Insert SimpleName: errorState_(357) into PrefixExpression: !(358) at 0", "Insert NumberLiteral: 1(143) into PrefixExpression: -(144) at 0", "Delete SimpleName: readBufferIndex_(183)", "Delete SimpleName: fetchFileBufferIndex_(257)"]}}, {"SpillingDataOutputBuffer_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 33"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: out to FieldAccess at 1", "INS FieldAccess to CastExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Modifier: public to MethodDeclaration at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: markRecordEnd to MethodDeclaration at 2", "INS SimpleType: SpillingStream to CastExpression at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: SpillingStream to SimpleType: SpillingStream at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: markEndOfRecord to MethodInvocation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: long to FieldDeclaration at 1", "INS SimpleName: bytesWrittenToBuffer to VariableDeclarationFragment at 0", "INS Modifier: protected to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 21", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 21", "INS PrimitiveType: int to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: interBufferEndOfRecord to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: interBufferEndOfRecord to Assignment: = at 0", "INS Block to MethodDeclaration at 3", "INS CastExpression to Assignment: = at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: markEndOfRecord to MethodInvocation at 1", "INS SimpleName: interBufferEndOfRecord to InfixExpression: > at 1", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS ExpressionStatement to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to InfixExpression: + at 0", "INS SimpleName: markEndOfRecord to MethodDeclaration at 2", "INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS ExpressionStatement to Block at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: interBufferEndOfRecord to MethodInvocation at 2", "INS SimpleName: currentBuffer_ to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: count to InfixExpression: + at 1", "INS SimpleName: currentBuffer_ to FieldAccess at 1", "INS SimpleName: bytesWrittenToBuffer to FieldAccess at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: capacity to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS IfStatement to Block at 1", "INS PrimitiveType: int to CastExpression at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS Block to MethodDeclaration at 4", "INS Block to TryStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS SimpleName: startSpilling to MethodInvocation at 0", "INS StringLiteral: \"Internal error occured writing to buffer.\" to ClassInstanceCreation at 1", "INS CatchClause to TryStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: checkSpillStart to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS ThrowStatement to Block at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: SpilledByteBuffer to SimpleType: SpilledByteBuffer at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: getBuffer to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS SimpleName: index to InfixExpression: < at 0", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: SpilledByteBuffer to MethodDeclaration at 1", "INS IfStatement to Block at 1", "INS InfixExpression: < to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS IfStatement to Block at 0"]}, {"root": "UPDATE from List<ByteBuffer> to List<SpilledByteBuffer>", "operations": ["UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>", "UPD ParameterizedType: List<ByteBuffer> from List<ByteBuffer> to List<SpilledByteBuffer>"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS TryStatement to Block at 0", "INS QualifiedName: Boolean.FALSE to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: notifyError to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleName: status_ to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: error to MethodInvocation at 1", "INS StringLiteral: \"Error handling spilled data.\" to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS CatchClause to TryStatement at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS Block to CatchClause at 1", "INS ReturnStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from ByteBuffer to SpilledByteBuffer", "operations": ["UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "INS SimpleType: IOException to MethodDeclaration at 5", "operations": ["INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS StringLiteral: \"unused\" to SingleMemberAnnotation at 1"]}, {"root": "UPDATE from writeInternal to writeInternalImperfect", "operations": ["UPD SimpleName: writeInternal from writeInternal to writeInternalImperfect"]}, {"root": "UPDATE from perfectFillWrite to writeInternal", "operations": ["UPD SimpleName: perfectFillWrite from perfectFillWrite to writeInternal"]}, {"root": "UPDATE from ByteBuffer to IOException", "operations": ["UPD SimpleType: ByteBuffer from ByteBuffer to IOException", "UPD SimpleName: ByteBuffer from ByteBuffer to IOException"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ByteBuffer to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleType: IOException to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Done handling spilling data.\" to MethodInvocation at 2", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS TagElement: @throws to Javadoc at 3", "operations": ["INS SimpleName: IOException to TagElement: @throws at 0", "INS TagElement: @throws to Javadoc at 3"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: += to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: bytesWritten_ to Assignment: += at 0", "INS SimpleName: len to Assignment: += at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS SimpleName: bytesRemaining_ to Assignment: -= at 0", "INS Assignment: -= to ExpressionStatement at 0", "INS SimpleName: len to Assignment: -= at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: checkSpillStart to MethodInvocation at 0", "INS SimpleName: startedSpilling_ to PrefixExpression: ! at 0", "INS IfStatement to Block at 5", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: bytesWrittenToBuffer to FieldAccess at 1", "INS SimpleName: len to Assignment: += at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: += at 0", "INS ExpressionStatement to Block at 6", "INS Assignment: += to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "INS Block to ForStatement at 3", "operations": ["INS Block to ForStatement at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: >= to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: >= to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS StringLiteral: \"Could not start spilling on disk.\" to ClassInstanceCreation at 1", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS IfStatement to Block at 4", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: >= to InfixExpression: && at 1", "operations": ["INS SimpleName: thresholdSize_ to InfixExpression: >= at 1", "INS InfixExpression: >= to InfixExpression: && at 1", "INS SimpleName: bytesWritten_ to InfixExpression: >= at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: bytesWrittenToBuffer to FieldAccess at 1", "INS SimpleName: bytesWritten_ to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS Assignment: += to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: bytesWritten_ to Assignment: += at 0", "INS SimpleName: rem to Assignment: += at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS SimpleName: startedSpilling_ to PrefixExpression: ! at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS StringLiteral: \"Error writing to spilling buffer. Could not get free buffer.\" to ClassInstanceCreation at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS IfStatement to Block at 6", "INS ThrowStatement to IfStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: currentBuffer_ to InfixExpression: == at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS ExpressionStatement to Block at 7", "INS SimpleName: bytesRemaining_ to Assignment: = at 0", "INS SimpleName: bufferSize_ to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: bytesWrittenToBuffer to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 0 to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 8"]}, {"root": "UPDATE from ArrayList<ByteBuffer> to ArrayList<SpilledByteBuffer>", "operations": ["UPD ParameterizedType: ArrayList<ByteBuffer> from ArrayList<ByteBuffer> to ArrayList<SpilledByteBuffer>"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: SpilledByteBuffer to ClassInstanceCreation at 0", "INS SimpleName: SpilledByteBuffer to SimpleType: SpilledByteBuffer at 0", "INS SimpleName: direct_ to ClassInstanceCreation at 1", "INS SimpleName: bufferSize_ to ClassInstanceCreation at 2"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 2", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: SpilledByteBuffer to ClassInstanceCreation at 0", "INS SimpleName: bufferSize_ to ClassInstanceCreation at 2", "INS SimpleName: SpilledByteBuffer to SimpleType: SpilledByteBuffer at 0", "INS SimpleName: direct_ to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: spillStatus_ to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from spillStatus_ to checkSpillStart", "operations": ["UPD SimpleName: spillStatus_ from spillStatus_ to checkSpillStart"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: spillStatus_ to MethodInvocation at 0"]}, {"root": "UPDATE from index to getNextBufferIndex", "operations": ["UPD SimpleName: index from index to getNextBufferIndex"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: index to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.nio.ByteBuffer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpillWriteIndexStatus", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpilledDataInputBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpilledDataProcessor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.SpillingDataOutputBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.bsp.message.io.WriteSpilledDataProcessor", "DEL ImportDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: bufferSize_", "DEL SimpleName: allocateDirect", "DEL SimpleName: ByteBuffer"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: direct_", "DEL MethodInvocation", "DEL SimpleName: bufferSize_", "DEL SimpleName: ByteBuffer", "DEL Block", "DEL SimpleName: bufferList_", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL MethodInvocation", "DEL IfStatement", "DEL Block", "DEL SimpleName: allocate"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: index", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: getNextBufferIndex", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: index", "operations": ["DEL SimpleName: index"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: bufferSize_", "DEL SimpleName: ByteBuffer", "DEL SimpleName: allocate", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: index", "DEL SimpleName: add", "DEL SimpleName: direct_", "DEL Block", "DEL IfStatement", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: ByteBuffer", "DEL SimpleName: allocateDirect", "DEL ExpressionStatement", "DEL SimpleName: bufferList_", "DEL SimpleName: bufferSize_", "DEL MethodInvocation", "DEL SimpleName: getBuffer", "DEL Block", "DEL IfStatement"]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}, {"root": "DEL TextElement:  ", "operations": ["DEL TextElement:  "]}]}}, {"SpillingDataOutputBuffer_diff": {"operations": ["Move MethodDeclaration(923) into TypeDeclaration: class(1379) at 33", "Insert MethodDeclaration(1570) into TypeDeclaration: class(1620) at 13", "Insert FieldDeclaration(377) into TypeDeclaration: class(1379) at 12", "Insert FieldDeclaration(429) into TypeDeclaration: class(1379) at 21", "Insert MethodDeclaration(729) into TypeDeclaration: class(1379) at 28", "Insert MethodDeclaration(1201) into TypeDeclaration: class(1379) at 36", "Insert MethodDeclaration(1272) into TypeDeclaration: class(1379) at 38", "Insert Modifier: public(1556) into MethodDeclaration(1570) at 0", "Insert PrimitiveType: void(1557) into MethodDeclaration(1570) at 1", "Insert SimpleName: markRecordEnd(1558) into MethodDeclaration(1570) at 2", "Insert Block(1569) into MethodDeclaration(1570) at 3", "Update ParameterizedType: List<ByteBuffer>(114) to List<SpilledByteBuffer>", "Insert Block(312) into MethodDeclaration(313) at 5", "Update ParameterizedType: List<ByteBuffer>(324) to List<SpilledByteBuffer>", "Update SimpleType: ByteBuffer(346) to SpilledByteBuffer", "Update Modifier: private(350) to protected", "Insert Modifier: protected(373) into FieldDeclaration(377) at 0", "Insert PrimitiveType: long(374) into FieldDeclaration(377) at 1", "Insert VariableDeclarationFragment(376) into FieldDeclaration(377) at 2", "Insert Modifier: private(425) into FieldDeclaration(429) at 0", "Insert PrimitiveType: int(426) into FieldDeclaration(429) at 1", "Insert VariableDeclarationFragment(428) into FieldDeclaration(429) at 2", "Insert Modifier: public(701) into MethodDeclaration(729) at 0", "Insert PrimitiveType: void(702) into MethodDeclaration(729) at 1", "Insert SimpleName: markEndOfRecord(703) into MethodDeclaration(729) at 2", "Insert Block(728) into MethodDeclaration(729) at 3", "Insert SimpleType: IOException(862) into MethodDeclaration(905) at 5", "Insert SingleMemberAnnotation(966) into MethodDeclaration(1051) at 0", "Update SimpleName: writeInternal(984) to writeInternalImperfect", "Update SimpleName: perfectFillWrite(851) to writeInternal", "Insert Modifier: private(1173) into MethodDeclaration(1201) at 0", "Insert PrimitiveType: void(1174) into MethodDeclaration(1201) at 1", "Insert SimpleName: checkSpillStart(1175) into MethodDeclaration(1201) at 2", "Update SimpleType: ByteBuffer(1095) to IOException", "Move SimpleType: ByteBuffer(1095) into MethodDeclaration(1201) at 3", "Insert Block(1200) into MethodDeclaration(1201) at 4", "Move Javadoc(1093) into MethodDeclaration(1272) at 0", "Insert SimpleType: SpilledByteBuffer(1236) into MethodDeclaration(1272) at 1", "Insert SimpleName: getBuffer(1237) into MethodDeclaration(1272) at 2", "Move SingleVariableDeclaration(1099) into MethodDeclaration(1272) at 3", "Move SimpleType: IOException(1101) into MethodDeclaration(1272) at 4", "Insert Block(1271) into MethodDeclaration(1272) at 5", "Insert ExpressionStatement(1568) into Block(1569) at 0", "Update SimpleType: ByteBuffer(113) to SpilledByteBuffer", "Update ParameterizedType: List<ByteBuffer>(142) to List<SpilledByteBuffer>", "Insert IfStatement(255) into Block(256) at 2", "Insert TryStatement(309) into Block(312) at 0", "Move ReturnStatement(293) into Block(312) at 1", "Update SimpleType: ByteBuffer(323) to SpilledByteBuffer", "Update SimpleName: ByteBuffer(345) to SpilledByteBuffer", "Insert SimpleName: bytesWrittenToBuffer(375) into VariableDeclarationFragment(376) at 0", "Insert SimpleName: interBufferEndOfRecord(427) into VariableDeclarationFragment(428) at 0", "Insert ExpressionStatement(714) into Block(728) at 0", "Insert IfStatement(727) into Block(728) at 1", "Insert TagElement: @throws(854) into Javadoc(855) at 3", "Insert SimpleName: IOException(861) into SimpleType: IOException(862) at 0", "Insert SimpleName: SuppressWarnings(964) into SingleMemberAnnotation(966) at 0", "Insert StringLiteral: \"unused\"(965) into SingleMemberAnnotation(966) at 1", "Insert ExpressionStatement(1049) into Block(1050) at 4", "Move ExpressionStatement(1001) into Block(1171) at 3", "Insert ExpressionStatement(1157) into Block(1171) at 4", "Insert IfStatement(1164) into Block(1171) at 5", "Insert ExpressionStatement(1170) into Block(1171) at 6", "Update SimpleName: ByteBuffer(1094) to IOException", "Insert IfStatement(1199) into Block(1200) at 0", "Insert SimpleName: SpilledByteBuffer(1235) into SimpleType: SpilledByteBuffer(1236) at 0", "Insert IfStatement(1249) into Block(1271) at 0", "Insert IfStatement(1265) into Block(1271) at 1", "Move ReturnStatement(1135) into Block(1271) at 2", "Insert MethodInvocation(1567) into ExpressionStatement(1568) at 0", "Update SimpleName: ByteBuffer(112) to SpilledByteBuffer", "Update SimpleType: ByteBuffer(141) to SpilledByteBuffer", "Insert MethodInvocation(248) into IfStatement(255) at 0", "Insert Block(254) into IfStatement(255) at 1", "Move Block(294) into TryStatement(309) at 0", "Insert CatchClause(308) into TryStatement(309) at 1", "Update SimpleName: ByteBuffer(322) to SpilledByteBuffer", "Insert Block(644) into ForStatement(645) at 3", "Insert Assignment: =(713) into ExpressionStatement(714) at 0", "Insert InfixExpression: >(719) into IfStatement(727) at 0", "Insert ExpressionStatement(726) into IfStatement(727) at 1", "Insert SimpleName: IOException(853) into TagElement: @throws(854) at 0", "Insert Assignment: +=(1048) into ExpressionStatement(1049) at 0", "Insert Assignment: -=(1156) into ExpressionStatement(1157) at 0", "Insert PrefixExpression: !(1159) into IfStatement(1164) at 0", "Insert Block(1163) into IfStatement(1164) at 1", "Insert Assignment: +=(1169) into ExpressionStatement(1170) at 0", "Move InfixExpression: >=(1004) into IfStatement(1199) at 0", "Insert Block(1198) into IfStatement(1199) at 1", "Insert InfixExpression: <(1245) into IfStatement(1249) at 0", "Insert Block(1248) into IfStatement(1249) at 1", "Move InfixExpression: >=(1106) into IfStatement(1265) at 0", "Move Block(1127) into IfStatement(1265) at 1", "Insert ParenthesizedExpression(1565) into MethodInvocation(1567) at 0", "Insert SimpleName: markEndOfRecord(1566) into MethodInvocation(1567) at 1", "Update SimpleName: ByteBuffer(140) to SpilledByteBuffer", "Insert SimpleName: LOG(246) into MethodInvocation(248) at 0", "Insert SimpleName: isDebugEnabled(247) into MethodInvocation(248) at 1", "Insert ExpressionStatement(253) into Block(254) at 0", "Insert SingleVariableDeclaration(294) into CatchClause(308) at 0", "Insert Block(307) into CatchClause(308) at 1", "Move ExpressionStatement(615) into Block(644) at 0", "Insert SimpleName: interBufferEndOfRecord(704) into Assignment: =(713) at 0", "Insert CastExpression(712) into Assignment: =(713) at 1", "Insert MethodInvocation(717) into InfixExpression: >(719) at 0", "Insert SimpleName: interBufferEndOfRecord(718) into InfixExpression: >(719) at 1", "Insert MethodInvocation(725) into ExpressionStatement(726) at 0", "Update SimpleType: ByteBuffer(702) to SpilledByteBuffer", "Insert IfStatement(901) into Block(902) at 4", "Insert InfixExpression: >=(987) into InfixExpression: &&(988) at 1", "Insert ExpressionStatement(1032) into Block(1033) at 3", "Insert SimpleName: bytesWritten_(1046) into Assignment: +=(1048) at 0", "Insert SimpleName: len(1047) into Assignment: +=(1048) at 1", "Insert ExpressionStatement(1088) into Block(1141) at 1", "Insert IfStatement(1095) into Block(1141) at 2", "Insert IfStatement(1116) into Block(1141) at 5", "Insert ExpressionStatement(1120) into Block(1141) at 6", "Insert ExpressionStatement(1126) into Block(1141) at 7", "Insert SimpleName: bytesRemaining_(1154) into Assignment: -=(1156) at 0", "Insert SimpleName: len(1155) into Assignment: -=(1156) at 1", "Insert SimpleName: startedSpilling_(1158) into PrefixExpression: !(1159) at 0", "Insert ExpressionStatement(1162) into Block(1163) at 0", "Insert FieldAccess(1167) into Assignment: +=(1169) at 0", "Insert SimpleName: len(1168) into Assignment: +=(1169) at 1", "Insert TryStatement(1197) into Block(1198) at 0", "Insert SimpleName: index(1243) into InfixExpression: <(1245) at 0", "Insert NumberLiteral: 0(1244) into InfixExpression: <(1245) at 1", "Insert ReturnStatement(1247) into Block(1248) at 0", "Insert CastExpression(1564) into ParenthesizedExpression(1565) at 0", "Insert MethodInvocation(252) into ExpressionStatement(253) at 0", "Insert SimpleType: Exception(292) into SingleVariableDeclaration(294) at 0", "Insert SimpleName: e(293) into SingleVariableDeclaration(294) at 1", "Insert ExpressionStatement(300) into Block(307) at 0", "Insert ExpressionStatement(304) into Block(307) at 1", "Insert ReturnStatement(306) into Block(307) at 2", "Update ParameterizedType: ArrayList<ByteBuffer>(583) to ArrayList<SpilledByteBuffer>", "Insert PrimitiveType: int(705) into CastExpression(712) at 0", "Insert ParenthesizedExpression(711) into CastExpression(712) at 1", "Insert SimpleName: currentBuffer_(715) into MethodInvocation(717) at 0", "Insert SimpleName: capacity(716) into MethodInvocation(717) at 1", "Insert FieldAccess(722) into MethodInvocation(725) at 0", "Insert SimpleName: markEndOfRecord(723) into MethodInvocation(725) at 1", "Insert SimpleName: interBufferEndOfRecord(724) into MethodInvocation(725) at 2", "Update SimpleName: ByteBuffer(701) to SpilledByteBuffer", "Insert PrefixExpression: !(894) into IfStatement(901) at 0", "Insert Block(900) into IfStatement(901) at 1", "Insert SimpleName: bytesWritten_(985) into InfixExpression: >=(987) at 0", "Insert SimpleName: thresholdSize_(986) into InfixExpression: >=(987) at 1", "Insert Assignment: =(1031) into ExpressionStatement(1032) at 0", "Insert Assignment: +=(1087) into ExpressionStatement(1088) at 0", "Insert PrefixExpression: !(1090) into IfStatement(1095) at 0", "Insert Block(1094) into IfStatement(1095) at 1", "Insert InfixExpression: ==(1110) into IfStatement(1116) at 0", "Insert ThrowStatement(1115) into IfStatement(1116) at 1", "Insert Assignment: =(1119) into ExpressionStatement(1120) at 0", "Insert Assignment: =(1125) into ExpressionStatement(1126) at 0", "Insert MethodInvocation(1161) into ExpressionStatement(1162) at 0", "Insert ThisExpression(1165) into FieldAccess(1167) at 0", "Insert SimpleName: bytesWrittenToBuffer(1166) into FieldAccess(1167) at 1", "Insert Block(1184) into TryStatement(1197) at 0", "Insert CatchClause(1196) into TryStatement(1197) at 1", "Insert NullLiteral(1246) into ReturnStatement(1247) at 0", "Insert SimpleType: SpillingStream(1560) into CastExpression(1564) at 0", "Insert FieldAccess(1563) into CastExpression(1564) at 1", "Insert SimpleName: LOG(249) into MethodInvocation(252) at 0", "Insert SimpleName: debug(250) into MethodInvocation(252) at 1", "Insert StringLiteral: \"Done handling spilling data.\"(251) into MethodInvocation(252) at 2", "Insert SimpleName: Exception(291) into SimpleType: Exception(292) at 0", "Insert MethodInvocation(299) into ExpressionStatement(300) at 0", "Insert MethodInvocation(303) into ExpressionStatement(304) at 0", "Insert QualifiedName: Boolean.FALSE(305) into ReturnStatement(306) at 0", "Update SimpleType: ByteBuffer(582) to SpilledByteBuffer", "Insert ClassInstanceCreation(641) into MethodInvocation(642) at 2", "Insert InfixExpression: +(710) into ParenthesizedExpression(711) at 0", "Insert ThisExpression(720) into FieldAccess(722) at 0", "Insert SimpleName: currentBuffer_(721) into FieldAccess(722) at 1", "Move MethodInvocation(843) into PrefixExpression: !(894) at 0", "Insert ThrowStatement(899) into Block(900) at 0", "Insert FieldAccess(1029) into Assignment: =(1031) at 0", "Insert SimpleName: bytesWritten_(1030) into Assignment: =(1031) at 1", "Insert SimpleName: bytesWritten_(1085) into Assignment: +=(1087) at 0", "Insert SimpleName: rem(1086) into Assignment: +=(1087) at 1", "Insert SimpleName: startedSpilling_(1089) into PrefixExpression: !(1090) at 0", "Insert ExpressionStatement(1093) into Block(1094) at 0", "Insert SimpleName: currentBuffer_(1108) into InfixExpression: ==(1110) at 0", "Insert NullLiteral(1109) into InfixExpression: ==(1110) at 1", "Insert ClassInstanceCreation(1114) into ThrowStatement(1115) at 0", "Insert SimpleName: bytesRemaining_(1117) into Assignment: =(1119) at 0", "Insert SimpleName: bufferSize_(1118) into Assignment: =(1119) at 1", "Insert FieldAccess(1123) into Assignment: =(1125) at 0", "Insert NumberLiteral: 0(1124) into Assignment: =(1125) at 1", "Insert SimpleName: checkSpillStart(1160) into MethodInvocation(1161) at 0", "Insert ExpressionStatement(1183) into Block(1184) at 0", "Insert SingleVariableDeclaration(1188) into CatchClause(1196) at 0", "Insert Block(1195) into CatchClause(1196) at 1", "Insert ClassInstanceCreation(1261) into MethodInvocation(1262) at 2", "Insert SimpleName: SpillingStream(1559) into SimpleType: SpillingStream(1560) at 0", "Insert ThisExpression(1561) into FieldAccess(1563) at 0", "Insert SimpleName: out(1562) into FieldAccess(1563) at 1", "Update SimpleType: ByteBuffer(210) to SpilledByteBuffer", "Insert SimpleName: LOG(295) into MethodInvocation(299) at 0", "Insert SimpleName: error(296) into MethodInvocation(299) at 1", "Insert StringLiteral: \"Error handling spilled data.\"(297) into MethodInvocation(299) at 2", "Insert SimpleName: e(298) into MethodInvocation(299) at 3", "Insert SimpleName: status_(301) into MethodInvocation(303) at 0", "Insert SimpleName: notifyError(302) into MethodInvocation(303) at 1", "Update SimpleName: ByteBuffer(581) to SpilledByteBuffer", "Insert SimpleType: SpilledByteBuffer(638) into ClassInstanceCreation(641) at 0", "Insert SimpleName: direct_(639) into ClassInstanceCreation(641) at 1", "Insert SimpleName: bufferSize_(640) into ClassInstanceCreation(641) at 2", "Insert FieldAccess(708) into InfixExpression: +(710) at 0", "Insert SimpleName: count(709) into InfixExpression: +(710) at 1", "Insert ClassInstanceCreation(898) into ThrowStatement(899) at 0", "Insert ThisExpression(1027) into FieldAccess(1029) at 0", "Insert SimpleName: bytesWrittenToBuffer(1028) into FieldAccess(1029) at 1", "Insert MethodInvocation(1092) into ExpressionStatement(1093) at 0", "Insert MethodInvocation(1104) into MethodInvocation(1105) at 1", "Insert SimpleType: IOException(1112) into ClassInstanceCreation(1114) at 0", "Insert StringLiteral: \"Error writing to spilling buffer. Could not get free buffer.\"(1113) into ClassInstanceCreation(1114) at 1", "Insert ThisExpression(1121) into FieldAccess(1123) at 0", "Insert SimpleName: bytesWrittenToBuffer(1122) into FieldAccess(1123) at 1", "Insert MethodInvocation(1182) into ExpressionStatement(1183) at 0", "Insert SimpleType: InterruptedException(1186) into SingleVariableDeclaration(1188) at 0", "Insert SimpleName: e(1187) into SingleVariableDeclaration(1188) at 1", "Insert ThrowStatement(1194) into Block(1195) at 0", "Insert SimpleType: SpilledByteBuffer(1258) into ClassInstanceCreation(1261) at 0", "Insert SimpleName: direct_(1259) into ClassInstanceCreation(1261) at 1", "Insert SimpleName: bufferSize_(1260) into ClassInstanceCreation(1261) at 2", "Update SimpleName: ByteBuffer(209) to SpilledByteBuffer", "Insert SimpleName: SpilledByteBuffer(637) into SimpleType: SpilledByteBuffer(638) at 0", "Insert ThisExpression(706) into FieldAccess(708) at 0", "Insert SimpleName: bytesWrittenToBuffer(707) into FieldAccess(708) at 1", "Insert SimpleType: IOException(896) into ClassInstanceCreation(898) at 0", "Insert StringLiteral: \"Could not start spilling on disk.\"(897) into ClassInstanceCreation(898) at 1", "Update SimpleName: spillStatus_(888) to checkSpillStart", "Move SimpleName: spillStatus_(888) into MethodInvocation(1092) at 0", "Insert SimpleName: spillStatus_(1102) into MethodInvocation(1104) at 0", "Update SimpleName: index(895) to getNextBufferIndex", "Move SimpleName: index(895) into MethodInvocation(1104) at 1", "Insert SimpleName: IOException(1111) into SimpleType: IOException(1112) at 0", "Insert SimpleName: startSpilling(1181) into MethodInvocation(1182) at 0", "Insert SimpleName: InterruptedException(1185) into SimpleType: InterruptedException(1186) at 0", "Insert ClassInstanceCreation(1193) into ThrowStatement(1194) at 0", "Insert SimpleName: SpilledByteBuffer(1257) into SimpleType: SpilledByteBuffer(1258) at 0", "Insert SimpleName: IOException(895) into SimpleType: IOException(896) at 0", "Insert SimpleType: IOException(1190) into ClassInstanceCreation(1193) at 0", "Insert StringLiteral: \"Internal error occured writing to buffer.\"(1191) into ClassInstanceCreation(1193) at 1", "Insert SimpleName: e(1192) into ClassInstanceCreation(1193) at 2", "Insert SimpleName: IOException(1189) into SimpleType: IOException(1190) at 0", "Delete QualifiedName: java.nio.ByteBuffer(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpillWriteIndexStatus(53)", "Delete ImportDeclaration(54)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpilledDataInputBuffer(55)", "Delete ImportDeclaration(56)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpilledDataProcessor(57)", "Delete ImportDeclaration(58)", "Delete QualifiedName: org.apache.hama.bsp.message.io.SpillingDataOutputBuffer(59)", "Delete ImportDeclaration(60)", "Delete QualifiedName: org.apache.hama.bsp.message.io.WriteSpilledDataProcessor(61)", "Delete ImportDeclaration(62)", "Delete SimpleName: ByteBuffer(610)", "Delete SimpleName: allocateDirect(611)", "Delete SimpleName: bufferSize_(612)", "Delete MethodInvocation(613)", "Delete SimpleName: direct_(607)", "Delete Block(616)", "Delete SimpleName: bufferList_(617)", "Delete SimpleName: add(618)", "Delete SimpleName: ByteBuffer(619)", "Delete SimpleName: allocate(620)", "Delete SimpleName: bufferSize_(621)", "Delete MethodInvocation(622)", "Delete MethodInvocation(623)", "Delete ExpressionStatement(624)", "Delete Block(625)", "Delete IfStatement(626)", "Delete Block(627)", "Delete ExpressionStatement(844)", "Delete PrimitiveType: int(886)", "Delete SimpleName: index(887)", "Delete SimpleName: getNextBufferIndex(889)", "Delete MethodInvocation(890)", "Delete VariableDeclarationFragment(891)", "Delete VariableDeclarationStatement(892)", "Delete SimpleName: index(1120)", "Delete SimpleName: ByteBuffer(1121)", "Delete SimpleName: allocate(1122)", "Delete SimpleName: bufferSize_(1123)", "Delete MethodInvocation(1124)", "Delete SimpleName: getBuffer(1096)", "Delete SimpleName: direct_(1107)", "Delete SimpleName: bufferList_(1108)", "Delete SimpleName: add(1109)", "Delete SimpleName: index(1110)", "Delete SimpleName: ByteBuffer(1111)", "Delete SimpleName: allocateDirect(1112)", "Delete SimpleName: bufferSize_(1113)", "Delete MethodInvocation(1114)", "Delete MethodInvocation(1115)", "Delete ExpressionStatement(1116)", "Delete Block(1117)", "Delete IfStatement(1128)", "Delete Block(1129)", "Delete IfStatement(1130)", "Delete Block(1136)", "Delete MethodDeclaration(1137)", "Delete TextElement:  (1251)", "Delete TextElement:  (1306)"]}}, {"WriteSpilledDataProcessor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from java.io.RandomAccessFile to java.io.File", "operations": ["UPD QualifiedName: java.io.RandomAccessFile from java.io.RandomAccessFile to java.io.File"]}, {"root": "UPDATE from java.nio.ByteBuffer to java.io.FileOutputStream", "operations": ["UPD QualifiedName: java.nio.ByteBuffer from java.nio.ByteBuffer to java.io.FileOutputStream"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: WriteSpilledDataProcessor to MethodDeclaration at 1"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement:  that writes the spilled data to the file. to TagElement at 2", "INS TagElement: @link to TagElement at 1", "INS TextElement: A  to TagElement at 0", "INS SimpleName: SpilledDataProcessor to TagElement: @link at 0", "INS TagElement to Javadoc at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: FileNotFoundException to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from WriteSpilledDataProcessor to initializeFileChannel", "operations": ["UPD SimpleName: WriteSpilledDataProcessor from WriteSpilledDataProcessor to initializeFileChannel"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleType: FileOutputStream to VariableDeclarationStatement at 0", "INS SimpleName: stream to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: FileOutputStream to SimpleType: FileOutputStream at 0"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS TryStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: FileNotFoundException to SimpleType: FileNotFoundException at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS SimpleType: FileNotFoundException to SingleVariableDeclaration at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS ThrowStatement to Block at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"Error opening file to write spilled data.\" to MethodInvocation at 2", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 3", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 1"]}, {"root": "UPDATE from ByteBuffer to SpilledByteBuffer", "operations": ["UPD SimpleType: ByteBuffer from ByteBuffer to SpilledByteBuffer", "UPD SimpleName: ByteBuffer from ByteBuffer to SpilledByteBuffer"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: fileChannel to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: initializeFileChannel to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: fileChannel to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: force to MethodInvocation at 1"]}, {"root": "UPDATE from raf to stream", "operations": ["UPD SimpleName: raf from raf to stream", "UPD SimpleName: raf from raf to stream"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: FileOutputStream to ClassInstanceCreation at 0", "INS BooleanLiteral: true to ClassInstanceCreation at 2", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS SimpleName: FileOutputStream to SimpleType: FileOutputStream at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getByteBuffer to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: buffer to MethodInvocation at 0"]}, {"root": "UPDATE from RandomAccessFile to File", "operations": ["UPD SimpleType: RandomAccessFile from RandomAccessFile to File", "UPD SimpleName: RandomAccessFile from RandomAccessFile to File"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: fileName to ClassInstanceCreation at 1", "MOV SimpleType: RandomAccessFile to ClassInstanceCreation at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleType: RandomAccessFile", "DEL Modifier: private", "DEL SimpleName: raf", "DEL SimpleName: RandomAccessFile", "DEL VariableDeclarationFragment"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL StringLiteral: \"rw\""]}]}}, {"WriteSpilledDataProcessor_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(225) at 4", "Move ImportDeclaration(20) into CompilationUnit(225) at 5", "Update QualifiedName: java.io.RandomAccessFile(21) to java.io.File", "Update QualifiedName: java.nio.ByteBuffer(23) to java.io.FileOutputStream", "Insert MethodDeclaration(84) into TypeDeclaration: class(224) at 7", "Insert TagElement(37) into Javadoc(38) at 0", "Insert Modifier: public(69) into MethodDeclaration(84) at 0", "Insert SimpleName: WriteSpilledDataProcessor(70) into MethodDeclaration(84) at 1", "Move SingleVariableDeclaration(75) into MethodDeclaration(84) at 2", "Move SimpleType: FileNotFoundException(77) into MethodDeclaration(84) at 3", "Insert Block(83) into MethodDeclaration(84) at 4", "Update Modifier: public(70) to private", "Insert PrimitiveType: void(86) into MethodDeclaration(130) at 1", "Update SimpleName: WriteSpilledDataProcessor(71) to initializeFileChannel", "Insert TextElement: A (33) into TagElement(37) at 0", "Insert TagElement: @link(35) into TagElement(37) at 1", "Insert TextElement:  that writes the spilled data to the file.(36) into TagElement(37) at 2", "Move ExpressionStatement(83) into Block(83) at 0", "Insert VariableDeclarationStatement(92) into Block(129) at 0", "Insert TryStatement(122) into Block(129) at 1", "Update SimpleType: ByteBuffer(119) to SpilledByteBuffer", "Insert SimpleName: SpilledDataProcessor(34) into TagElement: @link(35) at 0", "Insert SimpleType: FileOutputStream(89) into VariableDeclarationStatement(92) at 0", "Insert VariableDeclarationFragment(91) into VariableDeclarationStatement(92) at 1", "Insert Block(104) into TryStatement(122) at 0", "Insert CatchClause(121) into TryStatement(122) at 1", "Update SimpleName: ByteBuffer(118) to SpilledByteBuffer", "Insert SimpleName: FileOutputStream(88) into SimpleType: FileOutputStream(89) at 0", "Insert SimpleName: stream(90) into VariableDeclarationFragment(91) at 0", "Move ExpressionStatement(91) into Block(104) at 0", "Insert SingleVariableDeclaration(108) into CatchClause(121) at 0", "Insert Block(120) into CatchClause(121) at 1", "Insert IfStatement(160) into Block(175) at 0", "Insert ExpressionStatement(172) into Block(175) at 2", "Insert SimpleType: FileNotFoundException(106) into SingleVariableDeclaration(108) at 0", "Insert SimpleName: e(107) into SingleVariableDeclaration(108) at 1", "Insert ExpressionStatement(114) into Block(120) at 0", "Insert ThrowStatement(119) into Block(120) at 1", "Update SimpleName: raf(93) to stream", "Insert InfixExpression: ==(155) into IfStatement(160) at 0", "Insert Block(159) into IfStatement(160) at 1", "Insert MethodInvocation(171) into ExpressionStatement(172) at 0", "Update SimpleName: raf(84) to stream", "Insert ClassInstanceCreation(101) into Assignment: =(102) at 1", "Insert SimpleName: FileNotFoundException(105) into SimpleType: FileNotFoundException(106) at 0", "Insert MethodInvocation(113) into ExpressionStatement(114) at 0", "Insert ClassInstanceCreation(118) into ThrowStatement(119) at 0", "Insert SimpleName: fileChannel(153) into InfixExpression: ==(155) at 0", "Insert NullLiteral(154) into InfixExpression: ==(155) at 1", "Insert ExpressionStatement(158) into Block(159) at 0", "Insert MethodInvocation(165) into MethodInvocation(166) at 2", "Insert SimpleName: fileChannel(168) into MethodInvocation(171) at 0", "Insert SimpleName: force(169) into MethodInvocation(171) at 1", "Insert BooleanLiteral: true(170) into MethodInvocation(171) at 2", "Insert SimpleType: FileOutputStream(95) into ClassInstanceCreation(101) at 0", "Insert ClassInstanceCreation(99) into ClassInstanceCreation(101) at 1", "Insert BooleanLiteral: true(100) into ClassInstanceCreation(101) at 2", "Insert SimpleName: LOG(109) into MethodInvocation(113) at 0", "Insert SimpleName: error(110) into MethodInvocation(113) at 1", "Insert StringLiteral: \"Error opening file to write spilled data.\"(111) into MethodInvocation(113) at 2", "Insert SimpleName: e(112) into MethodInvocation(113) at 3", "Insert SimpleType: RuntimeException(116) into ClassInstanceCreation(118) at 0", "Insert SimpleName: e(117) into ClassInstanceCreation(118) at 1", "Insert MethodInvocation(157) into ExpressionStatement(158) at 0", "Move SimpleName: buffer(124) into MethodInvocation(165) at 0", "Insert SimpleName: getByteBuffer(164) into MethodInvocation(165) at 1", "Insert SimpleName: FileOutputStream(94) into SimpleType: FileOutputStream(95) at 0", "Update SimpleType: RandomAccessFile(86) to File", "Move SimpleType: RandomAccessFile(86) into ClassInstanceCreation(99) at 0", "Move SimpleName: fileName(87) into ClassInstanceCreation(99) at 1", "Insert SimpleName: RuntimeException(115) into SimpleType: RuntimeException(116) at 0", "Insert SimpleName: initializeFileChannel(156) into MethodInvocation(157) at 0", "Update SimpleName: RandomAccessFile(85) to File", "Delete Modifier: private(58)", "Delete SimpleName: RandomAccessFile(59)", "Delete SimpleType: RandomAccessFile(60)", "Delete SimpleName: raf(61)", "Delete VariableDeclarationFragment(62)", "Delete FieldDeclaration(63)", "Delete StringLiteral: \"rw\"(88)", "Delete ClassInstanceCreation(89)"]}}, {"DiskQueue_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: isMessageSerialized to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 35"]}]}}, {"DiskQueue_diff": {"operations": ["Insert MethodDeclaration(932) into TypeDeclaration: class(933) at 35", "Insert MarkerAnnotation(925) into MethodDeclaration(932) at 0", "Insert Modifier: public(926) into MethodDeclaration(932) at 1", "Insert PrimitiveType: boolean(927) into MethodDeclaration(932) at 2", "Insert SimpleName: isMessageSerialized(928) into MethodDeclaration(932) at 3", "Insert Block(931) into MethodDeclaration(932) at 4", "Insert SimpleName: Override(924) into MarkerAnnotation(925) at 0", "Insert ReturnStatement(930) into Block(931) at 0", "Insert BooleanLiteral: false(929) into ReturnStatement(930) at 0"]}}, {"MemoryQueue_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: isMessageSerialized to MethodDeclaration at 3", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2"]}]}}, {"MemoryQueue_diff": {"operations": ["Insert MethodDeclaration(264) into TypeDeclaration: class(265) at 21", "Insert MarkerAnnotation(257) into MethodDeclaration(264) at 0", "Insert Modifier: public(258) into MethodDeclaration(264) at 1", "Insert PrimitiveType: boolean(259) into MethodDeclaration(264) at 2", "Insert SimpleName: isMessageSerialized(260) into MethodDeclaration(264) at 3", "Insert Block(263) into MethodDeclaration(264) at 4", "Insert SimpleName: Override(256) into MarkerAnnotation(257) at 0", "Insert ReturnStatement(262) into Block(263) at 0", "Insert BooleanLiteral: false(261) into ReturnStatement(262) at 0"]}}, {"MessageQueue_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 16", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 16", "INS TextElement:  true if the messages in the queue are serialized to byte buffers. to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: isMessageSerialized to MethodDeclaration at 3", "INS TagElement: @return to Javadoc at 0"]}]}}, {"MessageQueue_diff": {"operations": ["Insert MethodDeclaration(144) into TypeDeclaration: interface(145) at 16", "Insert Javadoc(140) into MethodDeclaration(144) at 0", "Insert Modifier: public(141) into MethodDeclaration(144) at 1", "Insert PrimitiveType: boolean(142) into MethodDeclaration(144) at 2", "Insert SimpleName: isMessageSerialized(143) into MethodDeclaration(144) at 3", "Insert TagElement: @return(139) into Javadoc(140) at 0", "Insert TextElement:  true if the messages in the queue are serialized to byte buffers.(138) into TagElement: @return(139) at 0"]}}, {"SortedMessageQueue_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: isMessageSerialized to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0"]}]}}, {"SortedMessageQueue_diff": {"operations": ["Insert MethodDeclaration(260) into TypeDeclaration: class(261) at 21", "Insert MarkerAnnotation(253) into MethodDeclaration(260) at 0", "Insert Modifier: public(254) into MethodDeclaration(260) at 1", "Insert PrimitiveType: boolean(255) into MethodDeclaration(260) at 2", "Insert SimpleName: isMessageSerialized(256) into MethodDeclaration(260) at 3", "Insert Block(259) into MethodDeclaration(260) at 4", "Insert SimpleName: Override(252) into MarkerAnnotation(253) at 0", "Insert ReturnStatement(258) into Block(259) at 0", "Insert BooleanLiteral: false(257) into ReturnStatement(258) at 0"]}}, {"SpillingQueue_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.hama.Constants to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.hama.bsp.message.io.WriteSpilledDataProcessor to org.apache.hama.bsp.message.io.CombineSpilledDataProcessor", "operations": ["UPD QualifiedName: org.apache.hama.bsp.message.io.WriteSpilledDataProcessor from org.apache.hama.bsp.message.io.WriteSpilledDataProcessor to org.apache.hama.bsp.message.io.CombineSpilledDataProcessor"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: isMessageSerialized to MethodDeclaration at 3", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS Block to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: markRecordEnd to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: spillOutputBuffer to MethodInvocation at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: processor to MethodInvocation at 0", "INS SimpleName: init to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: conf to MethodInvocation at 2"]}, {"root": "INS QualifiedName: Constants.BUFFER_DEFAULT_SIZE to MethodInvocation at 3", "operations": ["INS QualifiedName: Constants.BUFFER_DEFAULT_SIZE to MethodInvocation at 3"]}, {"root": "INS QualifiedName: Constants.BUFFER_DEFAULT_SIZE to MethodInvocation at 3", "operations": ["INS QualifiedName: Constants.BUFFER_DEFAULT_SIZE to MethodInvocation at 3"]}, {"root": "INS CatchClause to TryStatement at 2", "operations": ["INS ThrowStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "INS QualifiedName: Constants.MESSAGE_CLASS to MethodInvocation at 2", "operations": ["INS QualifiedName: Constants.MESSAGE_CLASS to MethodInvocation at 2"]}, {"root": "INS ParameterizedType: CombineSpilledDataProcessor<M> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: M to ParameterizedType: CombineSpilledDataProcessor<M> at 1", "INS ParameterizedType: CombineSpilledDataProcessor<M> to ClassInstanceCreation at 0", "INS SimpleType: CombineSpilledDataProcessor to ParameterizedType: CombineSpilledDataProcessor<M> at 0", "INS SimpleName: M to SimpleType: M at 0"]}, {"root": "UPDATE from WriteSpilledDataProcessor to CombineSpilledDataProcessor", "operations": ["UPD SimpleName: WriteSpilledDataProcessor from WriteSpilledDataProcessor to CombineSpilledDataProcessor"]}, {"root": "MOVE from SimpleType: CombineSpilledDataProcessor", "operations": ["MOV SimpleName: WriteSpilledDataProcessor to SimpleType: CombineSpilledDataProcessor at 0"]}, {"root": "DEL InfixExpression: *", "operations": ["DEL NumberLiteral: 1024", "DEL NumberLiteral: 16", "DEL InfixExpression: *"]}, {"root": "DEL InfixExpression: *", "operations": ["DEL NumberLiteral: 1024", "DEL NumberLiteral: 16", "DEL InfixExpression: *"]}, {"root": "DEL SimpleName: SPILLBUFFER_MSGCLASS", "operations": ["DEL SimpleName: SPILLBUFFER_MSGCLASS"]}, {"root": "DEL SimpleType: WriteSpilledDataProcessor", "operations": ["DEL SimpleType: WriteSpilledDataProcessor"]}]}}, {"SpillingQueue_diff": {"operations": ["Move ImportDeclaration(54) into CompilationUnit(1152) at 15", "Insert ImportDeclaration(44) into CompilationUnit(1152) at 14", "Insert QualifiedName: org.apache.hama.Constants(43) into ImportDeclaration(44) at 0", "Update QualifiedName: org.apache.hama.bsp.message.io.WriteSpilledDataProcessor(53) to org.apache.hama.bsp.message.io.CombineSpilledDataProcessor", "Insert MethodDeclaration(1150) into TypeDeclaration: class(1151) at 47", "Insert MarkerAnnotation(1143) into MethodDeclaration(1150) at 0", "Insert Modifier: public(1144) into MethodDeclaration(1150) at 1", "Insert PrimitiveType: boolean(1145) into MethodDeclaration(1150) at 2", "Insert SimpleName: isMessageSerialized(1146) into MethodDeclaration(1150) at 3", "Insert Block(1149) into MethodDeclaration(1150) at 4", "Insert SimpleName: Override(1142) into MarkerAnnotation(1143) at 0", "Insert ReturnStatement(1148) into Block(1149) at 0", "Insert BooleanLiteral: true(1147) into ReturnStatement(1148) at 0", "Insert ExpressionStatement(433) into Block(437) at 1", "Insert ExpressionStatement(705) into Block(706) at 1", "Insert MethodInvocation(432) into ExpressionStatement(433) at 0", "Insert QualifiedName: Constants.BUFFER_DEFAULT_SIZE(623) into MethodInvocation(624) at 3", "Insert QualifiedName: Constants.BUFFER_DEFAULT_SIZE(639) into MethodInvocation(640) at 3", "Insert MethodInvocation(704) into ExpressionStatement(705) at 0", "Insert CatchClause(1116) into TryStatement(1117) at 2", "Insert SimpleName: spillOutputBuffer(430) into MethodInvocation(432) at 0", "Insert SimpleName: markRecordEnd(431) into MethodInvocation(432) at 1", "Insert QualifiedName: Constants.MESSAGE_CLASS(674) into MethodInvocation(676) at 2", "Insert SimpleName: processor(701) into MethodInvocation(704) at 0", "Insert SimpleName: init(702) into MethodInvocation(704) at 1", "Insert SimpleName: conf(703) into MethodInvocation(704) at 2", "Insert SingleVariableDeclaration(1109) into CatchClause(1116) at 0", "Insert Block(1115) into CatchClause(1116) at 1", "Insert ParameterizedType: CombineSpilledDataProcessor<M>(696) into ClassInstanceCreation(698) at 0", "Insert SimpleType: IOException(1107) into SingleVariableDeclaration(1109) at 0", "Insert SimpleName: e(1108) into SingleVariableDeclaration(1109) at 1", "Insert ThrowStatement(1114) into Block(1115) at 0", "Insert SimpleType: CombineSpilledDataProcessor(693) into ParameterizedType: CombineSpilledDataProcessor<M>(696) at 0", "Insert SimpleType: M(695) into ParameterizedType: CombineSpilledDataProcessor<M>(696) at 1", "Insert SimpleName: IOException(1106) into SimpleType: IOException(1107) at 0", "Insert ClassInstanceCreation(1113) into ThrowStatement(1114) at 0", "Update SimpleName: WriteSpilledDataProcessor(690) to CombineSpilledDataProcessor", "Move SimpleName: WriteSpilledDataProcessor(690) into SimpleType: CombineSpilledDataProcessor(693) at 0", "Insert SimpleName: M(694) into SimpleType: M(695) at 0", "Insert SimpleType: RuntimeException(1111) into ClassInstanceCreation(1113) at 0", "Insert SimpleName: e(1112) into ClassInstanceCreation(1113) at 1", "Insert SimpleName: RuntimeException(1110) into SimpleType: RuntimeException(1111) at 0", "Delete NumberLiteral: 16(617)", "Delete NumberLiteral: 1024(618)", "Delete InfixExpression: *(619)", "Delete NumberLiteral: 16(635)", "Delete NumberLiteral: 1024(636)", "Delete InfixExpression: *(637)", "Delete SimpleName: SPILLBUFFER_MSGCLASS(672)", "Delete SimpleType: WriteSpilledDataProcessor(691)"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}