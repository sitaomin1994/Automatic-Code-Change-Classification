{"application": "apache-drill", "csha": "78739889164c8df84fee249310f6d72d1199ea04", "files": [{"UserException_cluster": {"actions": [{"root": "INS TagElement to Javadoc at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: code-related errors -- all of which \"should never occur.\" to TagElement at 14", "INS TextElement: errors. In particular, the case in which a lower level bit of code throws an to TagElement at 9", "INS TextElement: <p> to TagElement at 12", "INS TextElement: <p> to TagElement at 7", "INS TextElement: System errors also indicate illegal internal states, missing functionality, and other to TagElement at 13", "INS TextElement: wrong\", but not enough information to categorize the error. to TagElement at 11"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement: Wraps the passed exception inside a system error. to TagElement at 0", "MOV TagElement: @link to TagElement at 5", "MOV TextElement:  is called. to TagElement at 3", "MOV TextElement: instead of creating a new exception. Any added context will be added to the user exception as well. to TagElement at 6", "MOV TextElement: <p>The cause message will be used unless  to TagElement at 1", "MOV TagElement: @link to TagElement at 2", "MOV TextElement: <p>If the wrapped exception is, or wraps, a user exception it will be returned by  to TagElement at 4"]}, {"root": "UPDATE from  This method should never need to be used explicitly, unless you are passing the exception to the to This exception, previously deprecated, has been repurposed to indicate unspecified", "operations": ["UPD TextElement:  This method should never need to be used explicitly, unless you are passing the exception to the from  This method should never need to be used explicitly, unless you are passing the exception to the to This exception, previously deprecated, has been repurposed to indicate unspecified"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement:  This method should never need to be used explicitly, unless you are passing the exception to the to TagElement at 8", "MOV TextElement: Rpc layer or UserResultListener.submitFailed() to TagElement at 10"]}, {"root": "UPDATE from Rpc layer or UserResultListener.submitFailed() to exception other than UserException. The catching code then only knows \"something went", "operations": ["UPD TextElement: Rpc layer or UserResultListener.submitFailed() from Rpc layer or UserResultListener.submitFailed() to exception other than UserException. The catching code then only knows \"something went"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement"]}, {"root": "DEL TagElement: @deprecated", "operations": ["DEL TagElement: @deprecated"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Deprecated", "DEL MarkerAnnotation"]}]}}, {"UserException_diff": {"operations": ["Insert TagElement(202) into Javadoc(213) at 0", "Move TextElement: Wraps the passed exception inside a system error.(172) into TagElement(202) at 0", "Move TextElement: <p>The cause message will be used unless (173) into TagElement(202) at 1", "Move TagElement: @link(183) into TagElement(202) at 2", "Move TextElement:  is called.(184) into TagElement(202) at 3", "Move TextElement: <p>If the wrapped exception is, or wraps, a user exception it will be returned by (185) into TagElement(202) at 4", "Move TagElement: @link(192) into TagElement(202) at 5", "Move TextElement: instead of creating a new exception. Any added context will be added to the user exception as well.(193) into TagElement(202) at 6", "Insert TextElement: <p>(194) into TagElement(202) at 7", "Update TextElement:  This method should never need to be used explicitly, unless you are passing the exception to the(205) to This exception, previously deprecated, has been repurposed to indicate unspecified", "Move TextElement:  This method should never need to be used explicitly, unless you are passing the exception to the(205) into TagElement(202) at 8", "Insert TextElement: errors. In particular, the case in which a lower level bit of code throws an(196) into TagElement(202) at 9", "Update TextElement: Rpc layer or UserResultListener.submitFailed()(206) to exception other than UserException. The catching code then only knows \"something went", "Move TextElement: Rpc layer or UserResultListener.submitFailed()(206) into TagElement(202) at 10", "Insert TextElement: wrong\", but not enough information to categorize the error.(198) into TagElement(202) at 11", "Insert TextElement: <p>(199) into TagElement(202) at 12", "Insert TextElement: System errors also indicate illegal internal states, missing functionality, and other(200) into TagElement(202) at 13", "Insert TextElement: code-related errors -- all of which \"should never occur.\"(201) into TagElement(202) at 14", "Delete TagElement(194)", "Delete TagElement: @deprecated(207)", "Delete SimpleName: Deprecated(209)", "Delete MarkerAnnotation(210)"]}}, {"TypeProtos_cluster": {"actions": [{"root": "UPDATE from 4 byte ieee 754  to 4 byte ieee 754", "operations": ["UPD TextElement: 4 byte ieee 754  from 4 byte ieee 754  to 4 byte ieee 754", "UPD TextElement: 4 byte ieee 754  from 4 byte ieee 754  to 4 byte ieee 754"]}]}}, {"TypeProtos_diff": {"operations": ["Update TextElement: 4 byte ieee 754 (215) to 4 byte ieee 754", "Update TextElement: 4 byte ieee 754 (654) to 4 byte ieee 754"]}}, {"UserBitShared_cluster": {"actions": [{"root": "INS TextElement: - unexpected internal state to TagElement at 3", "operations": ["INS TextElement: - unexpected internal state to TagElement at 3"]}, {"root": "INS TextElement: - uncategorized operation to TagElement at 4", "operations": ["INS TextElement: - uncategorized operation to TagElement at 4"]}, {"root": "INS TextElement: general user action is to contact the Drill team for to TagElement at 5", "operations": ["INS TextElement: general user action is to contact the Drill team for to TagElement at 5"]}, {"root": "INS TextElement: assistance to TagElement at 6", "operations": ["INS TextElement: assistance to TagElement at 6"]}, {"root": "UPDATE from - type change to - unimplemented feature, option, or execution path", "operations": ["UPD TextElement: - type change from - type change to - unimplemented feature, option, or execution path", "UPD TextElement: - type change from - type change to - unimplemented feature, option, or execution path"]}, {"root": "UPDATE from - schema change to - schema change in operator that does not support it", "operations": ["UPD TextElement: - schema change from - schema change to - schema change in operator that does not support it", "UPD TextElement: - schema change from - schema change to - schema change in operator that does not support it"]}, {"root": "INS TextElement: - unexpected internal state to TagElement at 3", "operations": ["INS TextElement: - unexpected internal state to TagElement at 3"]}, {"root": "INS TextElement: - uncategorized operation to TagElement at 4", "operations": ["INS TextElement: - uncategorized operation to TagElement at 4"]}, {"root": "INS TextElement: general user action is to contact the Drill team for to TagElement at 5", "operations": ["INS TextElement: general user action is to contact the Drill team for to TagElement at 5"]}, {"root": "INS TextElement: assistance to TagElement at 6", "operations": ["INS TextElement: assistance to TagElement at 6"]}]}}, {"UserBitShared_diff": {"operations": ["Insert TextElement: - unexpected internal state(5993) into TagElement(5998) at 3", "Insert TextElement: - uncategorized operation(5994) into TagElement(5998) at 4", "Insert TextElement: general user action is to contact the Drill team for(5995) into TagElement(5998) at 5", "Insert TextElement: assistance(5996) into TagElement(5998) at 6", "Update TextElement: - type change(6003) to - unimplemented feature, option, or execution path", "Update TextElement: - schema change(6004) to - schema change in operator that does not support it", "Insert TextElement: - unexpected internal state(6157) into TagElement(6162) at 3", "Insert TextElement: - uncategorized operation(6158) into TagElement(6162) at 4", "Insert TextElement: general user action is to contact the Drill team for(6159) into TagElement(6162) at 5", "Insert TextElement: assistance(6160) into TagElement(6162) at 6", "Update TextElement: - type change(6167) to - unimplemented feature, option, or execution path", "Update TextElement: - schema change(6168) to - schema change in operator that does not support it"]}}, {"ScanBatch_cluster": {"actions": [{"root": "INS TryStatement to Block at 7", "operations": ["INS SimpleType: ExecutionSetupException to SingleVariableDeclaration at 0", "INS SimpleName: ExecutionSetupException to SimpleType: ExecutionSetupException at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 2", "INS Block to TryStatement at 2", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: e to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: systemError to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: addContext to MethodInvocation at 1", "INS SimpleName: UserException to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 1", "INS SimpleName: currentReader to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS StringLiteral: \"Setup failed for\" to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: getClass to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS TryStatement to Block at 7"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "UPDATE from in turn, the only use of the genereated vector readers in the vector to in turn, the only use of the generated vector readers in the vector", "operations": ["UPD TextElement: in turn, the only use of the genereated vector readers in the vector from in turn, the only use of the genereated vector readers in the vector to in turn, the only use of the generated vector readers in the vector"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to ThrowStatement at 0", "operations": ["INS SimpleName: systemError to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 2", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: UserException to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0"]}, {"root": "INS ThrowStatement to Block at 0", "operations": ["INS ThrowStatement to Block at 0"]}, {"root": "INS ThrowStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS MethodInvocation to ThrowStatement at 0"]}, {"root": "MOVE from ThrowStatement", "operations": ["MOV MethodInvocation to ThrowStatement at 0"]}, {"root": "INS MethodInvocation to ThrowStatement at 0", "operations": ["INS SimpleName: addContext to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 2", "INS SimpleName: systemError to MethodInvocation at 1", "INS SimpleName: UserException to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: logger to MethodInvocation at 2", "INS StringLiteral: \"Failure while allocating implicit vectors\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "INS ThrowStatement to Block at 2", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ThrowStatement to Block at 2", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: logger to MethodInvocation at 2"]}, {"root": "UPDATE from context to build", "operations": ["UPD SimpleName: context from context to build"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fail to MethodInvocation at 2", "MOV SimpleName: context to MethodInvocation at 1"]}, {"root": "UPDATE from fail to logger", "operations": ["UPD SimpleName: fail from fail to logger"]}, {"root": "UPDATE from e to e2", "operations": ["UPD SimpleName: e from e to e2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: error to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: currentReader to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"Close failed for reader \" to InfixExpression: + at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: e2 to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getClass to MethodInvocation at 1"]}, {"root": "UPDATE from logger to UserException", "operations": ["UPD SimpleName: logger from logger to UserException", "UPD SimpleName: logger from logger to UserException"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: logger to MethodInvocation at 0", "MOV SimpleName: ex to MethodInvocation at 2"]}, {"root": "UPDATE from fail to systemError", "operations": ["UPD SimpleName: fail from fail to systemError", "UPD SimpleName: debug from debug to systemError"]}, {"root": "INS ThrowStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: logger to MethodInvocation at 2", "INS ThrowStatement to Block at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: UserException to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: logger to MethodInvocation at 0", "MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "UPDATE from debug to memoryError", "operations": ["UPD SimpleName: debug from debug to memoryError", "UPD SimpleName: logger from logger to memoryError"]}, {"root": "INS ThrowStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0", "INS ThrowStatement to Block at 2", "INS SimpleName: UserException to MethodInvocation at 0", "INS SimpleName: logger to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: fail to MethodInvocation at 1", "MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 2", "MOV SimpleName: logger to MethodInvocation at 1"]}, {"root": "UPDATE from debug to e", "operations": ["UPD SimpleName: debug from debug to e"]}, {"root": "DEL SimpleType: ExecutionSetupException", "operations": ["DEL SimpleType: ExecutionSetupException", "DEL SimpleName: ExecutionSetupException"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: setup", "DEL BooleanLiteral: true", "DEL ExpressionStatement"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: e", "DEL SimpleType: ExecutionSetupException", "DEL ClassInstanceCreation", "DEL SimpleName: ExecutionSetupException", "DEL ThrowStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL BooleanLiteral: false", "DEL PrimitiveType: boolean", "DEL VariableDeclarationFragment", "DEL SimpleName: setup"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL TryStatement", "DEL SimpleName: setup", "DEL PrefixExpression: !", "DEL Block", "DEL IfStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"Caught Out of Memory Exception\""]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: IterOutcome.OUT_OF_MEMORY", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"Caught OutOfMemoryException\""]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL QualifiedName: IterOutcome.OUT_OF_MEMORY"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: context", "DEL FieldAccess", "DEL ThisExpression", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL QualifiedName: IterOutcome.STOP"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: context", "DEL ExpressionStatement", "DEL SimpleName: fail"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: IterOutcome.STOP", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL StringLiteral: \"Failed to read the batch. Stopping...\"", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: ex", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: IterOutcome.STOP", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: ExecutionSetupException", "operations": ["DEL SimpleType: ExecutionSetupException", "DEL SimpleName: ExecutionSetupException"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: ExecutionSetupException", "DEL SimpleType: ExecutionSetupException", "DEL ClassInstanceCreation", "DEL SimpleName: e"]}]}}, {"ScanBatch_diff": {"operations": ["Insert TryStatement(386) into Block(415) at 7", "Move Block(336) into TryStatement(386) at 0", "Insert CatchClause(378) into TryStatement(386) at 1", "Insert Block(385) into TryStatement(386) at 2", "Update TextElement: in turn, the only use of the genereated vector readers in the vector(1102) to in turn, the only use of the generated vector readers in the vector", "Insert SingleVariableDeclaration(335) into CatchClause(378) at 0", "Insert Block(377) into CatchClause(378) at 1", "Move ExpressionStatement(364) into Block(385) at 0", "Insert MethodInvocation(288) into ThrowStatement(289) at 0", "Insert SimpleType: ExecutionSetupException(333) into SingleVariableDeclaration(335) at 0", "Insert SimpleName: e(334) into SingleVariableDeclaration(335) at 1", "Move TryStatement(356) into Block(377) at 0", "Insert ThrowStatement(376) into Block(377) at 1", "Insert ThrowStatement(801) into Block(802) at 0", "Insert ThrowStatement(815) into Block(816) at 0", "Insert MethodInvocation(285) into MethodInvocation(288) at 0", "Insert SimpleName: build(286) into MethodInvocation(288) at 1", "Insert SimpleName: logger(287) into MethodInvocation(288) at 2", "Insert SimpleName: ExecutionSetupException(332) into SimpleType: ExecutionSetupException(333) at 0", "Insert MethodInvocation(375) into ThrowStatement(376) at 0", "Move MethodInvocation(782) into ThrowStatement(801) at 0", "Insert MethodInvocation(814) into ThrowStatement(815) at 0", "Insert MethodInvocation(919) into ThrowStatement(920) at 0", "Insert SimpleName: UserException(279) into MethodInvocation(285) at 0", "Insert SimpleName: systemError(280) into MethodInvocation(285) at 1", "Move ClassInstanceCreation(284) into MethodInvocation(285) at 2", "Insert MethodInvocation(372) into MethodInvocation(375) at 0", "Insert SimpleName: build(373) into MethodInvocation(375) at 1", "Insert SimpleName: logger(374) into MethodInvocation(375) at 2", "Insert ThrowStatement(586) into Block(587) at 1", "Insert MethodInvocation(811) into MethodInvocation(814) at 0", "Update SimpleName: context(799) to build", "Move SimpleName: context(799) into MethodInvocation(814) at 1", "Update SimpleName: fail(800) to logger", "Move SimpleName: fail(800) into MethodInvocation(814) at 2", "Insert MethodInvocation(916) into MethodInvocation(919) at 0", "Insert SimpleName: build(917) into MethodInvocation(919) at 1", "Insert SimpleName: logger(918) into MethodInvocation(919) at 2", "Update SimpleName: e(347) to e2", "Insert ExpressionStatement(357) into Block(358) at 0", "Insert MethodInvocation(364) into MethodInvocation(372) at 0", "Insert SimpleName: addContext(365) into MethodInvocation(372) at 1", "Insert StringLiteral: \"Setup failed for\"(366) into MethodInvocation(372) at 2", "Insert MethodInvocation(371) into MethodInvocation(372) at 3", "Insert MethodInvocation(585) into ThrowStatement(586) at 0", "Update SimpleName: logger(793) to UserException", "Move SimpleName: logger(793) into MethodInvocation(811) at 0", "Update SimpleName: debug(794) to systemError", "Move SimpleName: debug(794) into MethodInvocation(811) at 1", "Move SimpleName: ex(796) into MethodInvocation(811) at 2", "Insert MethodInvocation(913) into MethodInvocation(916) at 0", "Insert SimpleName: addContext(914) into MethodInvocation(916) at 1", "Insert StringLiteral: \"Failure while allocating implicit vectors\"(915) into MethodInvocation(916) at 2", "Insert MethodInvocation(356) into ExpressionStatement(357) at 0", "Insert SimpleName: UserException(361) into MethodInvocation(364) at 0", "Insert SimpleName: systemError(362) into MethodInvocation(364) at 1", "Insert SimpleName: e(363) into MethodInvocation(364) at 2", "Insert MethodInvocation(369) into MethodInvocation(371) at 0", "Insert SimpleName: getSimpleName(370) into MethodInvocation(371) at 1", "Insert MethodInvocation(582) into MethodInvocation(585) at 0", "Insert SimpleName: build(583) into MethodInvocation(585) at 1", "Insert SimpleName: logger(584) into MethodInvocation(585) at 2", "Insert ThrowStatement(721) into Block(722) at 1", "Insert SimpleName: UserException(910) into MethodInvocation(913) at 0", "Insert SimpleName: systemError(911) into MethodInvocation(913) at 1", "Insert SimpleName: e(912) into MethodInvocation(913) at 2", "Insert SimpleName: logger(346) into MethodInvocation(356) at 0", "Insert SimpleName: error(347) into MethodInvocation(356) at 1", "Insert InfixExpression: +(354) into MethodInvocation(356) at 2", "Insert SimpleName: e2(355) into MethodInvocation(356) at 3", "Insert SimpleName: currentReader(367) into MethodInvocation(369) at 0", "Insert SimpleName: getClass(368) into MethodInvocation(369) at 1", "Update SimpleName: logger(556) to UserException", "Move SimpleName: logger(556) into MethodInvocation(582) at 0", "Update SimpleName: debug(557) to memoryError", "Move SimpleName: debug(557) into MethodInvocation(582) at 1", "Move SimpleName: e(559) into MethodInvocation(582) at 2", "Insert MethodInvocation(720) into ThrowStatement(721) at 0", "Insert StringLiteral: \"Close failed for reader \"(348) into InfixExpression: +(354) at 0", "Insert MethodInvocation(353) into InfixExpression: +(354) at 1", "Insert ThrowStatement(699) into Block(700) at 1", "Insert MethodInvocation(717) into MethodInvocation(720) at 0", "Insert SimpleName: build(718) into MethodInvocation(720) at 1", "Insert SimpleName: logger(719) into MethodInvocation(720) at 2", "Insert MethodInvocation(351) into MethodInvocation(353) at 0", "Insert SimpleName: getSimpleName(352) into MethodInvocation(353) at 1", "Insert MethodInvocation(698) into ThrowStatement(699) at 0", "Insert SimpleName: UserException(714) into MethodInvocation(717) at 0", "Update SimpleName: fail(693) to systemError", "Move SimpleName: fail(693) into MethodInvocation(717) at 1", "Move SimpleName: e(694) into MethodInvocation(717) at 2", "Insert SimpleName: currentReader(349) into MethodInvocation(351) at 0", "Insert SimpleName: getClass(350) into MethodInvocation(351) at 1", "Insert MethodInvocation(695) into MethodInvocation(698) at 0", "Insert SimpleName: build(696) into MethodInvocation(698) at 1", "Insert SimpleName: logger(697) into MethodInvocation(698) at 2", "Insert SimpleName: UserException(692) into MethodInvocation(695) at 0", "Update SimpleName: logger(669) to memoryError", "Move SimpleName: logger(669) into MethodInvocation(695) at 1", "Update SimpleName: debug(670) to e", "Move SimpleName: debug(670) into MethodInvocation(695) at 2", "Delete SimpleName: ExecutionSetupException(263)", "Delete SimpleType: ExecutionSetupException(264)", "Delete SimpleName: setup(332)", "Delete BooleanLiteral: true(333)", "Delete Assignment: =(334)", "Delete ExpressionStatement(335)", "Delete SimpleName: ExecutionSetupException(349)", "Delete SimpleType: ExecutionSetupException(350)", "Delete SimpleName: e(351)", "Delete ClassInstanceCreation(352)", "Delete ThrowStatement(353)", "Delete PrimitiveType: boolean(315)", "Delete SimpleName: setup(316)", "Delete BooleanLiteral: false(317)", "Delete VariableDeclarationFragment(318)", "Delete VariableDeclarationStatement(319)", "Delete SimpleName: setup(337)", "Delete PrefixExpression: !(338)", "Delete Block(357)", "Delete IfStatement(358)", "Delete Block(365)", "Delete TryStatement(366)", "Delete StringLiteral: \"Caught Out of Memory Exception\"(558)", "Delete MethodInvocation(560)", "Delete ExpressionStatement(561)", "Delete QualifiedName: IterOutcome.OUT_OF_MEMORY(565)", "Delete ReturnStatement(566)", "Delete StringLiteral: \"Caught OutOfMemoryException\"(671)", "Delete MethodInvocation(672)", "Delete ExpressionStatement(673)", "Delete QualifiedName: IterOutcome.OUT_OF_MEMORY(677)", "Delete ReturnStatement(678)", "Delete ThisExpression(690)", "Delete SimpleName: context(691)", "Delete FieldAccess(692)", "Delete MethodInvocation(695)", "Delete ExpressionStatement(696)", "Delete QualifiedName: IterOutcome.STOP(700)", "Delete ReturnStatement(701)", "Delete SimpleName: context(774)", "Delete SimpleName: fail(775)", "Delete MethodInvocation(783)", "Delete ExpressionStatement(784)", "Delete QualifiedName: IterOutcome.STOP(785)", "Delete ReturnStatement(786)", "Delete StringLiteral: \"Failed to read the batch. Stopping...\"(795)", "Delete MethodInvocation(797)", "Delete ExpressionStatement(798)", "Delete SimpleName: ex(801)", "Delete MethodInvocation(802)", "Delete ExpressionStatement(803)", "Delete QualifiedName: IterOutcome.STOP(804)", "Delete ReturnStatement(805)", "Delete SimpleName: ExecutionSetupException(821)", "Delete SimpleType: ExecutionSetupException(822)", "Delete SimpleName: ExecutionSetupException(902)", "Delete SimpleType: ExecutionSetupException(903)", "Delete SimpleName: e(904)", "Delete ClassInstanceCreation(905)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}