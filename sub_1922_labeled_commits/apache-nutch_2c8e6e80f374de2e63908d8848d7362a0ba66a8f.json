{"application": "apache-nutch", "csha": "2c8e6e80f374de2e63908d8848d7362a0ba66a8f", "files": [{"Fetcher_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: count to Assignment: = at 0", "INS SimpleName: checkTimelimit to MethodDeclaration at 3", "INS Block to IfStatement at 1", "INS SimpleName: count to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS ReturnStatement to Block at 2", "INS Modifier: public to MethodDeclaration at 0", "INS IfStatement to Block at 1", "INS SimpleName: emptyQueues to MethodInvocation at 0", "INS Modifier: synchronized to MethodDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS Block to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: count to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: pagesLastSec to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: bytesLastSec to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from checkTimelimit to emptyQueues", "operations": ["UPD SimpleName: checkTimelimit from checkTimelimit to emptyQueues"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4", "MOV InfixExpression: && to IfStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: avgPagesSec to VariableDeclarationFragment at 0", "INS PrimitiveType: float to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS PrimitiveType: float to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: avgBytesSec to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 15", "INS SimpleName: pagesLastSec to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 16", "operations": ["INS SimpleName: bytesLastSec to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 16", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 17", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: throughputThresholdExceeded to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 17", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 18", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: throughputThresholdNumRetries to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 18", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 19", "operations": ["INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: throughputThresholdPages to VariableDeclarationFragment at 0", "INS StringLiteral: \"fetcher.throughput.threshold.pages\" to MethodInvocation at 2", "INS SimpleName: getConf to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 19", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS PrefixExpression: - to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 20", "operations": ["INS IfStatement to Block at 20", "INS SimpleName: throughputThresholdPages to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS StringLiteral: \"Fetcher: throughput threshold: \" to InfixExpression: + at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 21", "operations": ["INS VariableDeclarationStatement to Block at 21", "INS SimpleName: throughputThresholdMaxRetries to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 5 to MethodInvocation at 3", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS StringLiteral: \"fetcher.throughput.threshold.retries\" to MethodInvocation at 2", "INS SimpleName: getInt to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 22", "operations": ["INS Block to IfStatement at 1", "INS StringLiteral: \"Fetcher: throughput threshold retries: \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 22", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: throughputThresholdMaxRetries to InfixExpression: + at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV SimpleName: pages to InfixExpression: + at 6", "MOV SimpleName: errors to InfixExpression: + at 8", "MOV StringLiteral: \" pages, \" to InfixExpression: + at 7", "MOV SimpleName: activeThreads to InfixExpression: + at 0", "MOV MethodInvocation to InfixExpression: + at 2", "MOV MethodInvocation to InfixExpression: + at 4", "MOV StringLiteral: \" errors, \" to InfixExpression: + at 9", "MOV StringLiteral: \" threads, \" to InfixExpression: + at 1", "MOV StringLiteral: \" URLs queued, \" to InfixExpression: + at 5", "MOV InfixExpression: / to VariableDeclarationFragment at 1", "MOV StringLiteral: \" queues, \" to InfixExpression: + at 3"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: pages to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: pagesLastSec to Assignment: = at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: bytes to MethodInvocation at 0", "INS CastExpression to Assignment: = at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: bytesLastSec to Assignment: = at 0", "INS PrimitiveType: int to CastExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: pages to MethodInvocation at 0", "INS SimpleName: pagesLastSec to InfixExpression: - at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to InfixExpression: - at 0", "INS SimpleName: pagesLastSec to Assignment: = at 0", "INS InfixExpression: - to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: bytesLastSec to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS CastExpression to InfixExpression: - at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: bytesLastSec to InfixExpression: - at 1", "INS PrimitiveType: int to CastExpression at 0", "INS ExpressionStatement to Block at 4", "INS InfixExpression: - to Assignment: = at 1", "INS SimpleName: bytes to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS PostfixExpression: ++ to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: throughputThresholdPages to MethodInvocation at 2", "INS SimpleName: warn to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS StringLiteral: \"Dropped below threshold too many times, killing!\" to MethodInvocation at 2", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: isAlive to MethodInvocation at 1", "INS SimpleName: pagesLastSec to InfixExpression: < at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: info to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: fetchQueues to MethodInvocation at 0", "INS SimpleName: pagesLastSec to InfixExpression: > at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS IfStatement to Block at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: warn to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: throughputThresholdExceeded to Assignment: = at 0", "INS SimpleName: throughputThresholdNumRetries to MethodInvocation at 2", "INS SimpleName: reporter to MethodInvocation at 0", "INS SimpleName: throughputThresholdExceeded to InfixExpression: && at 0", "INS StringLiteral: \"FetcherStatus\" to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: throughputThresholdNumRetries to PostfixExpression: ++ at 0", "INS StringLiteral: \": dropping below configured threshold of \" to InfixExpression: + at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: throughputThresholdPages to InfixExpression: != at 0", "INS SimpleName: hitByThrougputThreshold to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: throughputThresholdPages to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: hitByThrougputThreshold to MethodInvocation at 4", "INS SimpleName: throughputThresholdPages to InfixExpression: < at 1", "INS StringLiteral: \"hitByThrougputThreshold\" to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS StringLiteral: \" pages/second\" to InfixExpression: + at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: incrCounter to MethodInvocation at 1", "INS SimpleName: throughputThresholdNumRetries to InfixExpression: == at 0", "INS InfixExpression: < to InfixExpression: && at 1", "INS SimpleName: throughputThresholdMaxRetries to InfixExpression: == at 1", "INS ExpressionStatement to Block at 1", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: feeder to MethodInvocation at 0", "INS SimpleName: throughputThresholdExceeded to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS PrefixExpression: - to InfixExpression: != at 1", "INS IfStatement to Block at 3", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: - to Assignment: = at 1", "INS IfStatement to Block at 8", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: hitByThrougputThreshold to VariableDeclarationFragment at 0", "INS SimpleName: throughputThresholdPages to InfixExpression: > at 1", "INS StringLiteral: \"Exceding \" to InfixExpression: + at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS StringLiteral: \" pages per second\" to InfixExpression: + at 3", "INS IfStatement to Block at 2", "INS SimpleName: emptyQueues to MethodInvocation at 1", "INS InfixExpression: > to InfixExpression: && at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: throughputThresholdPages to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: + at 2", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "UPDATE from \"Usage: Fetcher <segment> [-threads n] [-noParsing]\" to \"Usage: Fetcher <segment> [-threads n]\"", "operations": ["UPD StringLiteral: \"Usage: Fetcher <segment> [-threads n] [-noParsing]\" from \"Usage: Fetcher <segment> [-threads n] [-noParsing]\" to \"Usage: Fetcher <segment> [-threads n]\""]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "UPDATE from 10.0 to 10", "operations": ["UPD NumberLiteral: 10.0 from 10.0 to 10"]}, {"root": "INS SimpleName: avgPagesSec to InfixExpression: + at 10", "operations": ["INS SimpleName: avgPagesSec to InfixExpression: + at 10"]}, {"root": "INS StringLiteral: \" (\" to InfixExpression: + at 11", "operations": ["INS StringLiteral: \" (\" to InfixExpression: + at 11"]}, {"root": "INS SimpleName: pagesLastSec to InfixExpression: + at 12", "operations": ["INS SimpleName: pagesLastSec to InfixExpression: + at 12"]}, {"root": "UPDATE from \" pages/s, \" to \") pages/s, \"", "operations": ["UPD StringLiteral: \" pages/s, \" from \" pages/s, \" to \") pages/s, \""]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV StringLiteral: \" pages/s, \" to InfixExpression: + at 13"]}, {"root": "INS SimpleName: avgBytesSec to InfixExpression: + at 14", "operations": ["INS SimpleName: avgBytesSec to InfixExpression: + at 14"]}, {"root": "INS StringLiteral: \" (\" to InfixExpression: + at 15", "operations": ["INS StringLiteral: \" (\" to InfixExpression: + at 15"]}, {"root": "INS SimpleName: bytesLastSec to InfixExpression: + at 16", "operations": ["INS SimpleName: bytesLastSec to InfixExpression: + at 16"]}, {"root": "UPDATE from \" kbits/s, \" to \") kbits/s, \"", "operations": ["UPD StringLiteral: \" kbits/s, \" from \" kbits/s, \" to \") kbits/s, \""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: pagesLastSec to MethodInvocation at 1", "operations": ["INS SimpleName: pagesLastSec to MethodInvocation at 1"]}, {"root": "INS SimpleName: bytesLastSec to MethodInvocation at 2", "operations": ["INS SimpleName: bytesLastSec to MethodInvocation at 2"]}, {"root": "UPDATE from \" >> timelimit! \" to \" >> dropping! \"", "operations": ["UPD StringLiteral: \" >> timelimit! \" from \" >> timelimit! \" to \" >> dropping! \""]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL Block"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL InfixExpression: +", "DEL InfixExpression: +"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: parsing", "DEL PrimitiveType: boolean", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: job", "DEL SimpleName: setBoolean", "DEL StringLiteral: \"fetcher.parse\"", "DEL MethodInvocation", "DEL SimpleName: parsing"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL BooleanLiteral: false", "DEL SimpleName: equals", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: args", "DEL SimpleName: parsing", "DEL ArrayAccess", "DEL StringLiteral: \"-noParsing\"", "DEL SimpleName: i", "DEL Assignment: ="]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: parsing", "DEL Block", "DEL SimpleName: parsing", "DEL ExpressionStatement", "DEL StringLiteral: \"fetcher.parse\"", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: setBoolean", "DEL IfStatement"]}, {"root": "DEL SimpleName: parsing", "operations": ["DEL SimpleName: parsing"]}]}}, {"Fetcher_diff": {"operations": ["Insert MethodDeclaration(1622) into TypeDeclaration: class(1837) at 26", "Insert SingleVariableDeclaration(4063) into MethodDeclaration(4158) at 3", "Insert SingleVariableDeclaration(4066) into MethodDeclaration(4158) at 4", "Insert Modifier: public(1576) into MethodDeclaration(1622) at 0", "Insert Modifier: synchronized(1577) into MethodDeclaration(1622) at 1", "Insert PrimitiveType: int(1578) into MethodDeclaration(1622) at 2", "Insert SimpleName: checkTimelimit(1579) into MethodDeclaration(1622) at 3", "Insert Block(1621) into MethodDeclaration(1622) at 4", "Update SimpleName: checkTimelimit(1579) to emptyQueues", "Move Block(1672) into MethodDeclaration(1695) at 4", "Insert PrimitiveType: int(4061) into SingleVariableDeclaration(4063) at 0", "Insert SimpleName: pagesLastSec(4062) into SingleVariableDeclaration(4063) at 1", "Insert PrimitiveType: int(4064) into SingleVariableDeclaration(4066) at 0", "Insert SimpleName: bytesLastSec(4065) into SingleVariableDeclaration(4066) at 1", "Insert VariableDeclarationStatement(4104) into Block(4157) at 2", "Insert VariableDeclarationStatement(4125) into Block(4157) at 3", "Insert VariableDeclarationStatement(4415) into Block(4712) at 15", "Insert VariableDeclarationStatement(4419) into Block(4712) at 16", "Insert VariableDeclarationStatement(4424) into Block(4712) at 17", "Insert VariableDeclarationStatement(4429) into Block(4712) at 18", "Insert VariableDeclarationStatement(4440) into Block(4712) at 19", "Insert IfStatement(4452) into Block(4712) at 20", "Insert VariableDeclarationStatement(4462) into Block(4712) at 21", "Insert IfStatement(4474) into Block(4712) at 22", "Insert VariableDeclarationStatement(1584) into Block(1621) at 0", "Insert IfStatement(1618) into Block(1621) at 1", "Insert ReturnStatement(1620) into Block(1621) at 2", "Move VariableDeclarationStatement(1584) into Block(1694) at 0", "Move ReturnStatement(1675) into Block(1694) at 2", "Insert PrimitiveType: float(4086) into VariableDeclarationStatement(4104) at 0", "Insert VariableDeclarationFragment(4103) into VariableDeclarationStatement(4104) at 1", "Insert PrimitiveType: float(4105) into VariableDeclarationStatement(4125) at 0", "Insert VariableDeclarationFragment(4124) into VariableDeclarationStatement(4125) at 1", "Insert PrimitiveType: int(4412) into VariableDeclarationStatement(4415) at 0", "Insert VariableDeclarationFragment(4414) into VariableDeclarationStatement(4415) at 1", "Insert PrimitiveType: int(4416) into VariableDeclarationStatement(4419) at 0", "Insert VariableDeclarationFragment(4418) into VariableDeclarationStatement(4419) at 1", "Insert PrimitiveType: boolean(4420) into VariableDeclarationStatement(4424) at 0", "Insert VariableDeclarationFragment(4423) into VariableDeclarationStatement(4424) at 1", "Insert PrimitiveType: int(4425) into VariableDeclarationStatement(4429) at 0", "Insert VariableDeclarationFragment(4428) into VariableDeclarationStatement(4429) at 1", "Insert PrimitiveType: int(4430) into VariableDeclarationStatement(4440) at 0", "Insert VariableDeclarationFragment(4439) into VariableDeclarationStatement(4440) at 1", "Insert MethodInvocation(4443) into IfStatement(4452) at 0", "Insert Block(4451) into IfStatement(4452) at 1", "Insert PrimitiveType: int(4453) into VariableDeclarationStatement(4462) at 0", "Insert VariableDeclarationFragment(4461) into VariableDeclarationStatement(4462) at 1", "Insert MethodInvocation(4465) into IfStatement(4474) at 0", "Insert Block(4473) into IfStatement(4474) at 1", "Insert PrimitiveType: int(1580) into VariableDeclarationStatement(1584) at 0", "Insert VariableDeclarationFragment(1583) into VariableDeclarationStatement(1584) at 1", "Move InfixExpression: &&(1594) into IfStatement(1618) at 0", "Insert Block(1617) into IfStatement(1618) at 1", "Insert SimpleName: count(1619) into ReturnStatement(1620) at 0", "Insert SimpleName: avgPagesSec(4087) into VariableDeclarationFragment(4103) at 0", "Move InfixExpression: /(4091) into VariableDeclarationFragment(4103) at 1", "Insert SimpleName: avgBytesSec(4106) into VariableDeclarationFragment(4124) at 0", "Move MethodInvocation(4111) into VariableDeclarationFragment(4124) at 1", "Insert SimpleName: pagesLastSec(4413) into VariableDeclarationFragment(4414) at 0", "Insert SimpleName: bytesLastSec(4417) into VariableDeclarationFragment(4418) at 0", "Insert SimpleName: throughputThresholdExceeded(4421) into VariableDeclarationFragment(4423) at 0", "Insert BooleanLiteral: false(4422) into VariableDeclarationFragment(4423) at 1", "Insert SimpleName: throughputThresholdNumRetries(4426) into VariableDeclarationFragment(4428) at 0", "Insert NumberLiteral: 0(4427) into VariableDeclarationFragment(4428) at 1", "Insert SimpleName: throughputThresholdPages(4431) into VariableDeclarationFragment(4439) at 0", "Insert MethodInvocation(4438) into VariableDeclarationFragment(4439) at 1", "Insert SimpleName: LOG(4441) into MethodInvocation(4443) at 0", "Insert SimpleName: isInfoEnabled(4442) into MethodInvocation(4443) at 1", "Insert ExpressionStatement(4450) into Block(4451) at 0", "Insert SimpleName: throughputThresholdMaxRetries(4454) into VariableDeclarationFragment(4461) at 0", "Insert MethodInvocation(4460) into VariableDeclarationFragment(4461) at 1", "Insert SimpleName: LOG(4463) into MethodInvocation(4465) at 0", "Insert SimpleName: isInfoEnabled(4464) into MethodInvocation(4465) at 1", "Insert ExpressionStatement(4472) into Block(4473) at 0", "Insert ExpressionStatement(4480) into Block(4698) at 0", "Insert ExpressionStatement(4488) into Block(4698) at 1", "Insert ExpressionStatement(4509) into Block(4698) at 3", "Insert ExpressionStatement(4519) into Block(4698) at 4", "Insert IfStatement(4647) into Block(4698) at 8", "Update StringLiteral: \"Usage: Fetcher <segment> [-threads n] [-noParsing]\"(4762) to \"Usage: Fetcher <segment> [-threads n]\"", "Insert SimpleName: count(1581) into VariableDeclarationFragment(1583) at 0", "Insert NumberLiteral: 0(1582) into VariableDeclarationFragment(1583) at 1", "Insert ExpressionStatement(1599) into Block(1617) at 0", "Move IfStatement(1671) into Block(1617) at 1", "Update NumberLiteral: 10.0(4090) to 10", "Move SimpleName: activeThreads(4063) into InfixExpression: +(4149) at 0", "Move StringLiteral: \" threads, \"(4064) into InfixExpression: +(4149) at 1", "Move MethodInvocation(4067) into InfixExpression: +(4149) at 2", "Move StringLiteral: \" queues, \"(4068) into InfixExpression: +(4149) at 3", "Move MethodInvocation(4071) into InfixExpression: +(4149) at 4", "Move StringLiteral: \" URLs queued, \"(4072) into InfixExpression: +(4149) at 5", "Move SimpleName: pages(4073) into InfixExpression: +(4149) at 6", "Move StringLiteral: \" pages, \"(4074) into InfixExpression: +(4149) at 7", "Move SimpleName: errors(4075) into InfixExpression: +(4149) at 8", "Move StringLiteral: \" errors, \"(4076) into InfixExpression: +(4149) at 9", "Insert SimpleName: avgPagesSec(4141) into InfixExpression: +(4149) at 10", "Insert StringLiteral: \" (\"(4142) into InfixExpression: +(4149) at 11", "Insert SimpleName: pagesLastSec(4143) into InfixExpression: +(4149) at 12", "Update StringLiteral: \" pages/s, \"(4093) to \") pages/s, \"", "Move StringLiteral: \" pages/s, \"(4093) into InfixExpression: +(4149) at 13", "Insert SimpleName: avgBytesSec(4145) into InfixExpression: +(4149) at 14", "Insert StringLiteral: \" (\"(4146) into InfixExpression: +(4149) at 15", "Insert SimpleName: bytesLastSec(4147) into InfixExpression: +(4149) at 16", "Update StringLiteral: \" kbits/s, \"(4113) to \") kbits/s, \"", "Insert MethodInvocation(4433) into MethodInvocation(4438) at 0", "Insert SimpleName: getInt(4434) into MethodInvocation(4438) at 1", "Insert StringLiteral: \"fetcher.throughput.threshold.pages\"(4435) into MethodInvocation(4438) at 2", "Insert PrefixExpression: -(4437) into MethodInvocation(4438) at 3", "Insert MethodInvocation(4449) into ExpressionStatement(4450) at 0", "Move MethodInvocation(4855) into MethodInvocation(4460) at 0", "Insert SimpleName: getInt(4457) into MethodInvocation(4460) at 1", "Insert StringLiteral: \"fetcher.throughput.threshold.retries\"(4458) into MethodInvocation(4460) at 2", "Insert NumberLiteral: 5(4459) into MethodInvocation(4460) at 3", "Insert MethodInvocation(4471) into ExpressionStatement(4472) at 0", "Insert Assignment: =(4479) into ExpressionStatement(4480) at 0", "Insert Assignment: =(4487) into ExpressionStatement(4488) at 0", "Insert Assignment: =(4508) into ExpressionStatement(4509) at 0", "Insert Assignment: =(4518) into ExpressionStatement(4519) at 0", "Insert InfixExpression: &&(4564) into IfStatement(4647) at 0", "Insert Block(4646) into IfStatement(4647) at 1", "Insert Assignment: =(1598) into ExpressionStatement(1599) at 0", "Insert SimpleName: getConf(4432) into MethodInvocation(4433) at 0", "Insert NumberLiteral: 1(4436) into PrefixExpression: -(4437) at 0", "Insert SimpleName: LOG(4444) into MethodInvocation(4449) at 0", "Insert SimpleName: info(4445) into MethodInvocation(4449) at 1", "Insert InfixExpression: +(4448) into MethodInvocation(4449) at 2", "Insert SimpleName: LOG(4466) into MethodInvocation(4471) at 0", "Insert SimpleName: info(4467) into MethodInvocation(4471) at 1", "Insert InfixExpression: +(4470) into MethodInvocation(4471) at 2", "Insert SimpleName: pagesLastSec(4475) into Assignment: =(4479) at 0", "Insert MethodInvocation(4478) into Assignment: =(4479) at 1", "Insert SimpleName: bytesLastSec(4481) into Assignment: =(4487) at 0", "Insert CastExpression(4486) into Assignment: =(4487) at 1", "Insert SimpleName: pagesLastSec(4502) into Assignment: =(4508) at 0", "Insert InfixExpression: -(4507) into Assignment: =(4508) at 1", "Insert SimpleName: bytesLastSec(4510) into Assignment: =(4518) at 0", "Insert InfixExpression: -(4517) into Assignment: =(4518) at 1", "Insert SimpleName: pagesLastSec(4521) into MethodInvocation(4523) at 1", "Insert SimpleName: bytesLastSec(4522) into MethodInvocation(4523) at 2", "Insert PrefixExpression: !(4559) into InfixExpression: &&(4564) at 0", "Insert InfixExpression: !=(4563) into InfixExpression: &&(4564) at 1", "Insert IfStatement(4587) into Block(4646) at 0", "Insert IfStatement(4645) into Block(4646) at 1", "Insert SimpleName: count(1595) into Assignment: =(1598) at 0", "Insert MethodInvocation(1597) into Assignment: =(1598) at 1", "Insert StringLiteral: \"Fetcher: throughput threshold: \"(4446) into InfixExpression: +(4448) at 0", "Insert SimpleName: throughputThresholdPages(4447) into InfixExpression: +(4448) at 1", "Insert StringLiteral: \"Fetcher: throughput threshold retries: \"(4468) into InfixExpression: +(4470) at 0", "Insert SimpleName: throughputThresholdMaxRetries(4469) into InfixExpression: +(4470) at 1", "Insert SimpleName: pages(4476) into MethodInvocation(4478) at 0", "Insert SimpleName: get(4477) into MethodInvocation(4478) at 1", "Insert PrimitiveType: int(4482) into CastExpression(4486) at 0", "Insert MethodInvocation(4485) into CastExpression(4486) at 1", "Insert MethodInvocation(4505) into InfixExpression: -(4507) at 0", "Insert SimpleName: pagesLastSec(4506) into InfixExpression: -(4507) at 1", "Insert CastExpression(4515) into InfixExpression: -(4517) at 0", "Insert SimpleName: bytesLastSec(4516) into InfixExpression: -(4517) at 1", "Insert MethodInvocation(4558) into PrefixExpression: !(4559) at 0", "Insert SimpleName: throughputThresholdPages(4560) into InfixExpression: !=(4563) at 0", "Insert PrefixExpression: -(4562) into InfixExpression: !=(4563) at 1", "Insert InfixExpression: &&(4570) into IfStatement(4587) at 0", "Insert Block(4586) into IfStatement(4587) at 1", "Insert InfixExpression: &&(4592) into IfStatement(4645) at 0", "Insert Block(4644) into IfStatement(4645) at 1", "Insert SimpleName: emptyQueues(1596) into MethodInvocation(1597) at 0", "Update StringLiteral: \" >> timelimit! \"(1622) to \" >> dropping! \"", "Insert SimpleName: bytes(4483) into MethodInvocation(4485) at 0", "Insert SimpleName: get(4484) into MethodInvocation(4485) at 1", "Insert SimpleName: pages(4503) into MethodInvocation(4505) at 0", "Insert SimpleName: get(4504) into MethodInvocation(4505) at 1", "Insert PrimitiveType: int(4511) into CastExpression(4515) at 0", "Insert MethodInvocation(4514) into CastExpression(4515) at 1", "Insert SimpleName: feeder(4556) into MethodInvocation(4558) at 0", "Insert SimpleName: isAlive(4557) into MethodInvocation(4558) at 1", "Insert NumberLiteral: 1(4561) into PrefixExpression: -(4562) at 0", "Insert InfixExpression: >(4567) into InfixExpression: &&(4570) at 0", "Insert PrefixExpression: !(4569) into InfixExpression: &&(4570) at 1", "Insert ExpressionStatement(4581) into Block(4586) at 0", "Insert ExpressionStatement(4585) into Block(4586) at 1", "Insert SimpleName: throughputThresholdExceeded(4588) into InfixExpression: &&(4592) at 0", "Insert InfixExpression: <(4591) into InfixExpression: &&(4592) at 1", "Insert ExpressionStatement(4595) into Block(4644) at 0", "Insert ExpressionStatement(4610) into Block(4644) at 1", "Insert IfStatement(4643) into Block(4644) at 2", "Insert SimpleName: bytes(4512) into MethodInvocation(4514) at 0", "Insert SimpleName: get(4513) into MethodInvocation(4514) at 1", "Insert SimpleName: pagesLastSec(4565) into InfixExpression: >(4567) at 0", "Insert SimpleName: throughputThresholdPages(4566) into InfixExpression: >(4567) at 1", "Insert SimpleName: throughputThresholdExceeded(4568) into PrefixExpression: !(4569) at 0", "Insert MethodInvocation(4580) into ExpressionStatement(4581) at 0", "Insert Assignment: =(4584) into ExpressionStatement(4585) at 0", "Insert SimpleName: pagesLastSec(4589) into InfixExpression: <(4591) at 0", "Insert SimpleName: throughputThresholdPages(4590) into InfixExpression: <(4591) at 1", "Insert PostfixExpression: ++(4594) into ExpressionStatement(4595) at 0", "Insert MethodInvocation(4609) into ExpressionStatement(4610) at 0", "Insert InfixExpression: ==(4613) into IfStatement(4643) at 0", "Insert Block(4642) into IfStatement(4643) at 1", "Insert SimpleName: LOG(4571) into MethodInvocation(4580) at 0", "Insert SimpleName: info(4572) into MethodInvocation(4580) at 1", "Insert InfixExpression: +(4579) into MethodInvocation(4580) at 2", "Insert SimpleName: throughputThresholdExceeded(4582) into Assignment: =(4584) at 0", "Insert BooleanLiteral: true(4583) into Assignment: =(4584) at 1", "Insert SimpleName: throughputThresholdNumRetries(4593) into PostfixExpression: ++(4594) at 0", "Insert SimpleName: LOG(4596) into MethodInvocation(4609) at 0", "Insert SimpleName: warn(4597) into MethodInvocation(4609) at 1", "Insert InfixExpression: +(4608) into MethodInvocation(4609) at 2", "Insert SimpleName: throughputThresholdNumRetries(4611) into InfixExpression: ==(4613) at 0", "Insert SimpleName: throughputThresholdMaxRetries(4612) into InfixExpression: ==(4613) at 1", "Insert ExpressionStatement(4618) into Block(4642) at 0", "Insert ExpressionStatement(4623) into Block(4642) at 1", "Insert VariableDeclarationStatement(4630) into Block(4642) at 2", "Insert IfStatement(4641) into Block(4642) at 3", "Insert StringLiteral: \"Exceding \"(4573) into InfixExpression: +(4579) at 0", "Insert MethodInvocation(4577) into InfixExpression: +(4579) at 1", "Insert StringLiteral: \" pages/second\"(4578) into InfixExpression: +(4579) at 2", "Insert MethodInvocation(4601) into InfixExpression: +(4608) at 0", "Insert StringLiteral: \": dropping below configured threshold of \"(4602) into InfixExpression: +(4608) at 1", "Insert MethodInvocation(4606) into InfixExpression: +(4608) at 2", "Insert StringLiteral: \" pages per second\"(4607) into InfixExpression: +(4608) at 3", "Insert MethodInvocation(4617) into ExpressionStatement(4618) at 0", "Insert Assignment: =(4622) into ExpressionStatement(4623) at 0", "Insert PrimitiveType: int(4624) into VariableDeclarationStatement(4630) at 0", "Insert VariableDeclarationFragment(4629) into VariableDeclarationStatement(4630) at 1", "Insert InfixExpression: !=(4633) into IfStatement(4641) at 0", "Insert ExpressionStatement(4640) into IfStatement(4641) at 1", "Insert SimpleName: Integer(4574) into MethodInvocation(4577) at 0", "Insert SimpleName: toString(4575) into MethodInvocation(4577) at 1", "Insert SimpleName: throughputThresholdPages(4576) into MethodInvocation(4577) at 2", "Insert SimpleName: Integer(4598) into MethodInvocation(4601) at 0", "Insert SimpleName: toString(4599) into MethodInvocation(4601) at 1", "Insert SimpleName: throughputThresholdNumRetries(4600) into MethodInvocation(4601) at 2", "Insert SimpleName: Integer(4603) into MethodInvocation(4606) at 0", "Insert SimpleName: toString(4604) into MethodInvocation(4606) at 1", "Insert SimpleName: throughputThresholdPages(4605) into MethodInvocation(4606) at 2", "Insert SimpleName: LOG(4614) into MethodInvocation(4617) at 0", "Insert SimpleName: warn(4615) into MethodInvocation(4617) at 1", "Insert StringLiteral: \"Dropped below threshold too many times, killing!\"(4616) into MethodInvocation(4617) at 2", "Insert SimpleName: throughputThresholdPages(4619) into Assignment: =(4622) at 0", "Insert PrefixExpression: -(4621) into Assignment: =(4622) at 1", "Insert SimpleName: hitByThrougputThreshold(4625) into VariableDeclarationFragment(4629) at 0", "Insert MethodInvocation(4628) into VariableDeclarationFragment(4629) at 1", "Insert SimpleName: hitByThrougputThreshold(4631) into InfixExpression: !=(4633) at 0", "Insert NumberLiteral: 0(4632) into InfixExpression: !=(4633) at 1", "Insert MethodInvocation(4639) into ExpressionStatement(4640) at 0", "Insert NumberLiteral: 1(4620) into PrefixExpression: -(4621) at 0", "Insert SimpleName: fetchQueues(4626) into MethodInvocation(4628) at 0", "Insert SimpleName: emptyQueues(4627) into MethodInvocation(4628) at 1", "Insert SimpleName: reporter(4634) into MethodInvocation(4639) at 0", "Insert SimpleName: incrCounter(4635) into MethodInvocation(4639) at 1", "Insert StringLiteral: \"FetcherStatus\"(4636) into MethodInvocation(4639) at 2", "Insert StringLiteral: \"hitByThrougputThreshold\"(4637) into MethodInvocation(4639) at 3", "Insert SimpleName: hitByThrougputThreshold(4638) into MethodInvocation(4639) at 4", "Delete IfStatement(1673)", "Delete Block(1676)", "Delete InfixExpression: +(4092)", "Delete InfixExpression: +(4094)", "Delete InfixExpression: +(4112)", "Delete PrimitiveType: boolean(4500)", "Delete SimpleName: parsing(4501)", "Delete SingleVariableDeclaration(4502)", "Delete SimpleName: job(4620)", "Delete SimpleName: setBoolean(4621)", "Delete StringLiteral: \"fetcher.parse\"(4622)", "Delete SimpleName: parsing(4623)", "Delete MethodInvocation(4624)", "Delete ExpressionStatement(4625)", "Delete SimpleName: args(4831)", "Delete SimpleName: i(4832)", "Delete ArrayAccess(4833)", "Delete SimpleName: equals(4834)", "Delete StringLiteral: \"-noParsing\"(4835)", "Delete MethodInvocation(4836)", "Delete SimpleName: parsing(4837)", "Delete BooleanLiteral: false(4838)", "Delete Assignment: =(4839)", "Delete ExpressionStatement(4840)", "Delete IfStatement(4841)", "Delete SimpleName: parsing(4852)", "Delete PrefixExpression: !(4853)", "Delete SimpleName: setBoolean(4856)", "Delete StringLiteral: \"fetcher.parse\"(4857)", "Delete SimpleName: parsing(4858)", "Delete MethodInvocation(4859)", "Delete ExpressionStatement(4860)", "Delete Block(4861)", "Delete IfStatement(4862)", "Delete SimpleName: parsing(4866)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}