{"application": "apache-phoenix", "csha": "29b76635944c717a5226e001abd85c045287344a", "files": [{"LazyValueGetter_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ParameterizedType: Map<ColumnReference,ImmutableBytesWritable> to VariableDeclarationStatement at 0", "INS SimpleType: ColumnReference to ParameterizedType: Map<ColumnReference,ImmutableBytesWritable> at 1", "INS SimpleName: v to VariableDeclarationFragment at 0", "INS SimpleName: ImmutableBytesWritable to SimpleType: ImmutableBytesWritable at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: ImmutableBytesWritable to ParameterizedType: Map<ColumnReference,ImmutableBytesWritable> at 2", "INS SimpleName: values to VariableDeclarationFragment at 1", "INS SimpleName: ColumnReference to SimpleType: ColumnReference at 0", "INS SimpleType: Map to ParameterizedType: Map<ColumnReference,ImmutableBytesWritable> at 0", "INS SimpleName: Map to SimpleType: Map at 0"]}, {"root": "UPDATE from values to v", "operations": ["UPD SimpleName: values from values to v", "UPD SimpleName: values from values to v", "UPD SimpleName: values from values to v"]}, {"root": "INS Block to SynchronizedStatement at 1", "operations": ["INS SimpleName: values to Assignment: = at 1", "INS Block to SynchronizedStatement at 1", "INS SimpleName: v to Assignment: = at 0", "INS SimpleName: v to InfixExpression: == at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: v to Assignment: = at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV Assignment: = to Assignment: = at 1"]}]}}, {"LazyValueGetter_diff": {"operations": ["Insert VariableDeclarationStatement(127) into Block(217) at 0", "Insert ParameterizedType: Map<ColumnReference,ImmutableBytesWritable>(123) into VariableDeclarationStatement(127) at 0", "Insert VariableDeclarationFragment(126) into VariableDeclarationStatement(127) at 1", "Insert SimpleType: Map(118) into ParameterizedType: Map<ColumnReference,ImmutableBytesWritable>(123) at 0", "Insert SimpleType: ColumnReference(120) into ParameterizedType: Map<ColumnReference,ImmutableBytesWritable>(123) at 1", "Insert SimpleType: ImmutableBytesWritable(122) into ParameterizedType: Map<ColumnReference,ImmutableBytesWritable>(123) at 2", "Insert SimpleName: v(124) into VariableDeclarationFragment(126) at 0", "Insert SimpleName: values(125) into VariableDeclarationFragment(126) at 1", "Update SimpleName: values(117) to v", "Insert SimpleName: Map(117) into SimpleType: Map(118) at 0", "Insert SimpleName: ColumnReference(119) into SimpleType: ColumnReference(120) at 0", "Insert SimpleName: ImmutableBytesWritable(121) into SimpleType: ImmutableBytesWritable(122) at 0", "Insert Block(157) into SynchronizedStatement(158) at 1", "Update SimpleName: values(142) to v", "Insert ExpressionStatement(135) into Block(157) at 0", "Insert IfStatement(156) into Block(157) at 1", "Update SimpleName: values(185) to v", "Insert Assignment: =(134) into ExpressionStatement(135) at 0", "Insert InfixExpression: ==(138) into IfStatement(156) at 0", "Move Block(135) into IfStatement(156) at 1", "Insert SimpleName: v(132) into Assignment: =(134) at 0", "Insert SimpleName: values(133) into Assignment: =(134) at 1", "Insert SimpleName: v(136) into InfixExpression: ==(138) at 0", "Insert NullLiteral(137) into InfixExpression: ==(138) at 1", "Insert Assignment: =(153) into ExpressionStatement(154) at 0", "Insert SimpleName: v(139) into Assignment: =(153) at 0", "Move Assignment: =(133) into Assignment: =(153) at 1"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}