{"application": "Netflix-Hystrix", "csha": "e0826d3549c00a8c472893c2c7d316302208c45d", "files": [{"AbstractHystrixCommand_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 29", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 29", "INS QualifiedName: HystrixCommandProperties.Setter to SimpleType: HystrixCommandProperties.Setter at 0", "INS SimpleName: commandPropertiesDefaults to VariableDeclarationFragment at 0", "INS SimpleType: HystrixCommandProperties.Setter to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: protected to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 30", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: HystrixThreadPoolProperties.Setter to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 30", "INS QualifiedName: HystrixThreadPoolProperties.Setter to SimpleType: HystrixThreadPoolProperties.Setter at 0", "INS SimpleName: threadPoolPropertiesDefaults to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: protected to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 31", "operations": ["INS Modifier: protected to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: propertiesStrategy to VariableDeclarationFragment at 0", "INS SimpleType: HystrixPropertiesStrategy to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 31", "INS SimpleName: HystrixPropertiesStrategy to SimpleType: HystrixPropertiesStrategy at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 77", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: onRunSuccess to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: c to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: onFallbackError to MethodDeclaration at 5", "INS SimpleName: onRunError to MethodInvocation at 0", "INS SimpleName: onError to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: T to TypeParameter at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to Assignment: = at 1", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleType: T to MethodDeclaration at 4", "INS SimpleName: T to TypeParameter at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS TypeParameter to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: T to TypeParameter at 0", "INS TypeParameter to MethodDeclaration at 2", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: onThreadComplete to MethodDeclaration at 5", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SimpleName: T to SimpleType: T at 0", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: onThreadComplete to MethodInvocation at 1", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS IfStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: onRunStart to MethodDeclaration at 4", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: onRunStart to MethodInvocation at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"unchecked\" to ArrayInitializer at 0", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: onFallbackStart to MethodInvocation at 1", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleName: T to TypeParameter at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: fallbackResponse to MethodInvocation at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS Block to MethodDeclaration at 7", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to MethodDeclaration at 7", "INS IfStatement to Block at 1", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: fallbackResponse to SingleVariableDeclaration at 1", "INS SimpleName: c to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: T to TypeParameter at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleType: HystrixCommandExecutionHook to TypeDeclaration: class at 3", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS SimpleName: commandInstance to InstanceofExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: onComplete to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: response to MethodInvocation at 3", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: e to MethodInvocation at 4", "INS Assignment: = to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: onFallbackSuccess to MethodInvocation at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onFallbackSuccess to MethodDeclaration at 4", "INS SimpleName: onRunError to MethodInvocation at 1", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: onFallbackStart to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS TypeParameter to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: c to MethodInvocation at 1", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: onRunSuccess to MethodDeclaration at 5", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: failureType to MethodInvocation at 3", "INS IfStatement to Block at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: response to MethodInvocation at 2", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onRunSuccess to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: onComplete to MethodInvocation at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleType: T to MethodDeclaration at 4", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: e to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 0", "INS ArrayInitializer to SingleMemberAnnotation at 1", "INS SimpleName: onFallbackSuccess to MethodInvocation at 1", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: commandInstance to CastExpression at 1", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 8", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: onThreadStart to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS IfStatement to Block at 1", "INS SimpleName: failureType to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: T to SimpleType: T at 0", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: T to TypeParameter at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: T to SimpleType: T at 0", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: c to InfixExpression: != at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS StringLiteral: \"rawtypes\" to ArrayInitializer at 1", "INS SimpleName: response to MethodInvocation at 3", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: onFallbackStart to MethodInvocation at 0", "INS QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand to SimpleType: HystrixCommand.HystrixCommandFromObservableCommand at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: actual to MethodInvocation at 0", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 7", "INS ReturnStatement to Block at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: onRunStart to MethodInvocation at 0", "INS SimpleName: onFallbackError to MethodInvocation at 1", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: c to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleType: Exception to MethodDeclaration at 3", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: c to MethodInvocation at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS IfStatement to Block at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 9", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onRunStart to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: onRunSuccess to MethodInvocation at 1", "INS ParameterizedType: HystrixCommand<T> to MethodDeclaration at 3", "INS SimpleName: onStart to MethodInvocation at 0", "INS SimpleName: onStart to MethodInvocation at 1", "INS SimpleName: onFallbackStart to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: static to TypeDeclaration: class at 1", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: onStart to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TypeDeclaration: class to TypeDeclaration: class at 77", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: onError to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: c to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS Block to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: response to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to TypeParameter at 0", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: c to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: T to SimpleType: T at 0", "INS Block to IfStatement at 1", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: e to Assignment: = at 0", "INS SimpleName: FailureType to SimpleType: FailureType at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onRunError to MethodDeclaration at 5", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: onComplete to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS SimpleName: T to TypeParameter at 0", "INS PrimitiveType: void to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ExecutionHookDeprecationWrapper to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: c to InfixExpression: != at 0", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: T to SimpleType: T at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 2", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: c to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: ExecutionHookDeprecationWrapper to TypeDeclaration: class at 2", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SimpleName: getOriginal to MethodInvocation at 1", "INS SimpleName: onRunStart to MethodDeclaration at 5", "INS PrimitiveType: void to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: onFallbackError to MethodInvocation at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onError to MethodDeclaration at 5", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: response to Assignment: = at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: c to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: onFallbackStart to MethodDeclaration at 5", "INS SimpleName: c to InfixExpression: != at 0", "INS ReturnStatement to Block at 2", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: T to TypeParameter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: response to MethodInvocation at 3", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 4", "INS SimpleName: fallbackResponse to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS TypeParameter to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleType: Exception to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: response to SingleVariableDeclaration at 1", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS Block to IfStatement at 1", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleName: T to TypeParameter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: T to SimpleType: T at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS TypeParameter to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 4", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: response to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: Exception to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: onThreadStart to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 2", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 2", "INS InfixExpression: != to IfStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS TypeParameter to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS ExpressionStatement to Block at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: onThreadStart to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: onThreadStart to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: T to SimpleType: T at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: actual to SingleVariableDeclaration at 1", "INS SimpleName: T to TypeParameter at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS Block to MethodDeclaration at 6", "INS SimpleName: onError to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: onComplete to MethodInvocation at 1", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: e to MethodInvocation at 2", "INS SimpleName: T to TypeParameter at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: HystrixCommand.HystrixCommandFromObservableCommand to InstanceofExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onThreadComplete to MethodInvocation at 0", "INS SimpleName: failureType to SingleVariableDeclaration at 1", "INS SimpleName: onStart to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: e to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS SimpleType: T to MethodDeclaration at 4", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS Block to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: c to InfixExpression: != at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS ReturnStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: actual to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 4", "INS SimpleName: actual to FieldAccess at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: response to SingleVariableDeclaration at 1", "INS SimpleName: T to TypeParameter at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: HystrixCommandExecutionHook to FieldDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: actual to VariableDeclarationFragment at 0", "INS SimpleName: c to InfixExpression: != at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: fallbackResponse to MethodInvocation at 3", "INS Block to MethodDeclaration at 8", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: T to SimpleType: T at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS Block to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: onThreadComplete to MethodDeclaration at 4", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS Block to IfStatement at 1", "INS SimpleName: failureType to MethodInvocation at 2", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: response to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: c to MethodInvocation at 1", "INS SimpleName: actual to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: != to IfStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: onError to MethodInvocation at 1", "INS SimpleName: onStart to MethodDeclaration at 5", "INS SimpleName: actual to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: fallbackResponse to Assignment: = at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: onThreadStart to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SimpleName: onRunError to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand to SimpleType: HystrixCommand.HystrixCommandFromObservableCommand at 0", "INS SimpleName: HystrixCommandExecutionHook to SimpleType: HystrixCommandExecutionHook at 0", "INS SimpleName: onFallbackError to MethodInvocation at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS SimpleType: HystrixCommandExecutionHook to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: onComplete to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: response to MethodInvocation at 2", "INS SimpleName: onRunError to MethodDeclaration at 4", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: T to SimpleType: T at 0", "INS IfStatement to Block at 1", "INS SimpleName: c to MethodInvocation at 1", "INS SimpleName: T to SimpleType: T at 0", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: failureType to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: T to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: T to MethodDeclaration at 3", "INS SimpleType: T to ParameterizedType: AbstractHystrixCommand<T> at 1", "INS SimpleName: actual to MethodInvocation at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: onFallbackSuccess to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS FieldAccess to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: e to Assignment: = at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: onThreadComplete to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS TypeParameter to MethodDeclaration at 3", "INS IfStatement to Block at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getHystrixCommandFromAbstractIfApplicable to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: HystrixCommandExecutionHook to SimpleType: HystrixCommandExecutionHook at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: onRunSuccess to MethodDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TypeParameter to MethodDeclaration at 2", "INS SimpleType: HystrixCommand.HystrixCommandFromObservableCommand to CastExpression at 0", "INS SimpleName: commandInstance to MethodInvocation at 1", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: FailureType to SingleVariableDeclaration at 0", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: T to SimpleType: T at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: T to ParameterizedType: HystrixCommand<T> at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ExpressionStatement to Block at 2", "INS SimpleName: actual to MethodInvocation at 0", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: response to SingleVariableDeclaration at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleType: T to SingleVariableDeclaration at 0", "INS SimpleName: HystrixCommandExecutionHook to SimpleType: HystrixCommandExecutionHook at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: HystrixCommand to SimpleType: HystrixCommand at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to MethodDeclaration at 3", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS TypeParameter to MethodDeclaration at 3", "INS SimpleName: T to SimpleType: T at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: onFallbackError to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS SimpleName: actual to Assignment: = at 1", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS SimpleName: commandInstance to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: HystrixCommand<T> to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: AbstractHystrixCommand to ParameterizedType: AbstractHystrixCommand<T> at 0", "INS ParameterizedType: AbstractHystrixCommand<T> to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: fallbackResponse to MethodInvocation at 2", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS SimpleName: T to TypeParameter at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: commandInstance to MethodInvocation at 2", "INS ParameterizedType: HystrixCommand<T> to VariableDeclarationStatement at 0", "INS SimpleType: HystrixCommand to ParameterizedType: HystrixCommand<T> at 0", "INS SimpleName: AbstractHystrixCommand to SimpleType: AbstractHystrixCommand at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: onFallbackSuccess to MethodDeclaration at 5", "INS SimpleType: FailureType to SingleVariableDeclaration at 0", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: FailureType to SimpleType: FailureType at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: commandPropertiesDefaults to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: commandPropertiesDefaults to FieldAccess at 1", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: threadPoolPropertiesDefaults to FieldAccess at 1", "INS ExpressionStatement to Block at 3", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: threadPoolPropertiesDefaults to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: propertiesStrategy to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: propertiesStrategy to FieldAccess at 1", "INS ExpressionStatement to Block at 4"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: executionHook to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: executionHook to InstanceofExpression at 0", "INS SimpleType: ExecutionHookDeprecationWrapper to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: ExecutionHookDeprecationWrapper to SimpleType: ExecutionHookDeprecationWrapper at 0", "INS FieldAccess to Assignment: = at 0", "INS Block to IfStatement at 2", "INS IfStatement to Block at 0", "INS SimpleType: ExecutionHookDeprecationWrapper to InstanceofExpression at 1", "INS SimpleName: ExecutionHookDeprecationWrapper to SimpleType: ExecutionHookDeprecationWrapper at 0", "INS SimpleName: executionHook to FieldAccess at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: ExecutionHookDeprecationWrapper to SimpleType: ExecutionHookDeprecationWrapper at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: ExecutionHookDeprecationWrapper to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "DEL TagElement: @author", "operations": ["DEL TextElement:  njoshi", "DEL TagElement: @author"]}]}}, {"AbstractHystrixCommand_diff": {"operations": ["Insert FieldDeclaration(348) into TypeDeclaration: class(3956) at 29", "Insert FieldDeclaration(355) into TypeDeclaration: class(3956) at 30", "Insert FieldDeclaration(362) into TypeDeclaration: class(3956) at 31", "Insert TypeDeclaration: class(3955) into TypeDeclaration: class(3956) at 77", "Insert Modifier: protected(342) into FieldDeclaration(348) at 0", "Insert Modifier: final(343) into FieldDeclaration(348) at 1", "Insert SimpleType: HystrixCommandProperties.Setter(345) into FieldDeclaration(348) at 2", "Insert VariableDeclarationFragment(347) into FieldDeclaration(348) at 3", "Insert Modifier: protected(349) into FieldDeclaration(355) at 0", "Insert Modifier: final(350) into FieldDeclaration(355) at 1", "Insert SimpleType: HystrixThreadPoolProperties.Setter(352) into FieldDeclaration(355) at 2", "Insert VariableDeclarationFragment(354) into FieldDeclaration(355) at 3", "Insert Modifier: protected(356) into FieldDeclaration(362) at 0", "Insert Modifier: final(357) into FieldDeclaration(362) at 1", "Insert SimpleType: HystrixPropertiesStrategy(359) into FieldDeclaration(362) at 2", "Insert VariableDeclarationFragment(361) into FieldDeclaration(362) at 3", "Insert Modifier: private(3085) into TypeDeclaration: class(3955) at 0", "Insert Modifier: static(3086) into TypeDeclaration: class(3955) at 1", "Insert SimpleName: ExecutionHookDeprecationWrapper(3087) into TypeDeclaration: class(3955) at 2", "Insert SimpleType: HystrixCommandExecutionHook(3089) into TypeDeclaration: class(3955) at 3", "Insert FieldDeclaration(3096) into TypeDeclaration: class(3955) at 4", "Insert MethodDeclaration(3109) into TypeDeclaration: class(3955) at 5", "Insert MethodDeclaration(3132) into TypeDeclaration: class(3955) at 6", "Insert MethodDeclaration(3173) into TypeDeclaration: class(3955) at 7", "Insert MethodDeclaration(3202) into TypeDeclaration: class(3955) at 8", "Insert MethodDeclaration(3252) into TypeDeclaration: class(3955) at 9", "Insert MethodDeclaration(3281) into TypeDeclaration: class(3955) at 10", "Insert MethodDeclaration(3331) into TypeDeclaration: class(3955) at 11", "Insert MethodDeclaration(3354) into TypeDeclaration: class(3955) at 12", "Insert MethodDeclaration(3395) into TypeDeclaration: class(3955) at 13", "Insert MethodDeclaration(3424) into TypeDeclaration: class(3955) at 14", "Insert MethodDeclaration(3474) into TypeDeclaration: class(3955) at 15", "Insert MethodDeclaration(3503) into TypeDeclaration: class(3955) at 16", "Insert MethodDeclaration(3553) into TypeDeclaration: class(3955) at 17", "Insert MethodDeclaration(3576) into TypeDeclaration: class(3955) at 18", "Insert MethodDeclaration(3617) into TypeDeclaration: class(3955) at 19", "Insert MethodDeclaration(3646) into TypeDeclaration: class(3955) at 20", "Insert MethodDeclaration(3696) into TypeDeclaration: class(3955) at 21", "Insert MethodDeclaration(3730) into TypeDeclaration: class(3955) at 22", "Insert MethodDeclaration(3786) into TypeDeclaration: class(3955) at 23", "Insert MethodDeclaration(3809) into TypeDeclaration: class(3955) at 24", "Insert MethodDeclaration(3850) into TypeDeclaration: class(3955) at 25", "Insert MethodDeclaration(3873) into TypeDeclaration: class(3955) at 26", "Insert MethodDeclaration(3914) into TypeDeclaration: class(3955) at 27", "Insert MethodDeclaration(3954) into TypeDeclaration: class(3955) at 28", "Insert QualifiedName: HystrixCommandProperties.Setter(344) into SimpleType: HystrixCommandProperties.Setter(345) at 0", "Insert SimpleName: commandPropertiesDefaults(346) into VariableDeclarationFragment(347) at 0", "Insert QualifiedName: HystrixThreadPoolProperties.Setter(351) into SimpleType: HystrixThreadPoolProperties.Setter(352) at 0", "Insert SimpleName: threadPoolPropertiesDefaults(353) into VariableDeclarationFragment(354) at 0", "Insert SimpleName: HystrixPropertiesStrategy(358) into SimpleType: HystrixPropertiesStrategy(359) at 0", "Insert SimpleName: propertiesStrategy(360) into VariableDeclarationFragment(361) at 0", "Insert ExpressionStatement(600) into Block(944) at 2", "Insert ExpressionStatement(606) into Block(944) at 3", "Insert ExpressionStatement(612) into Block(944) at 4", "Insert SimpleName: HystrixCommandExecutionHook(3088) into SimpleType: HystrixCommandExecutionHook(3089) at 0", "Insert Modifier: private(3090) into FieldDeclaration(3096) at 0", "Insert Modifier: final(3091) into FieldDeclaration(3096) at 1", "Insert SimpleType: HystrixCommandExecutionHook(3093) into FieldDeclaration(3096) at 2", "Insert VariableDeclarationFragment(3095) into FieldDeclaration(3096) at 3", "Insert SimpleName: ExecutionHookDeprecationWrapper(3097) into MethodDeclaration(3109) at 0", "Insert SingleVariableDeclaration(3101) into MethodDeclaration(3109) at 1", "Insert Block(3108) into MethodDeclaration(3109) at 2", "Insert MarkerAnnotation(3111) into MethodDeclaration(3132) at 0", "Insert MarkerAnnotation(3113) into MethodDeclaration(3132) at 1", "Insert Modifier: public(3114) into MethodDeclaration(3132) at 2", "Insert TypeParameter(3116) into MethodDeclaration(3132) at 3", "Insert PrimitiveType: void(3117) into MethodDeclaration(3132) at 4", "Insert SimpleName: onRunStart(3118) into MethodDeclaration(3132) at 5", "Insert SingleVariableDeclaration(3125) into MethodDeclaration(3132) at 6", "Insert Block(3131) into MethodDeclaration(3132) at 7", "Insert MarkerAnnotation(3134) into MethodDeclaration(3173) at 0", "Insert Modifier: public(3135) into MethodDeclaration(3173) at 1", "Insert TypeParameter(3137) into MethodDeclaration(3173) at 2", "Insert PrimitiveType: void(3138) into MethodDeclaration(3173) at 3", "Insert SimpleName: onRunStart(3139) into MethodDeclaration(3173) at 4", "Insert SingleVariableDeclaration(3146) into MethodDeclaration(3173) at 5", "Insert Block(3172) into MethodDeclaration(3173) at 6", "Insert MarkerAnnotation(3175) into MethodDeclaration(3202) at 0", "Insert MarkerAnnotation(3177) into MethodDeclaration(3202) at 1", "Insert Modifier: public(3178) into MethodDeclaration(3202) at 2", "Insert TypeParameter(3180) into MethodDeclaration(3202) at 3", "Insert SimpleType: T(3182) into MethodDeclaration(3202) at 4", "Insert SimpleName: onRunSuccess(3183) into MethodDeclaration(3202) at 5", "Insert SingleVariableDeclaration(3190) into MethodDeclaration(3202) at 6", "Insert SingleVariableDeclaration(3194) into MethodDeclaration(3202) at 7", "Insert Block(3201) into MethodDeclaration(3202) at 8", "Insert MarkerAnnotation(3204) into MethodDeclaration(3252) at 0", "Insert Modifier: public(3205) into MethodDeclaration(3252) at 1", "Insert TypeParameter(3207) into MethodDeclaration(3252) at 2", "Insert SimpleType: T(3209) into MethodDeclaration(3252) at 3", "Insert SimpleName: onRunSuccess(3210) into MethodDeclaration(3252) at 4", "Insert SingleVariableDeclaration(3217) into MethodDeclaration(3252) at 5", "Insert SingleVariableDeclaration(3221) into MethodDeclaration(3252) at 6", "Insert Block(3251) into MethodDeclaration(3252) at 7", "Insert MarkerAnnotation(3254) into MethodDeclaration(3281) at 0", "Insert MarkerAnnotation(3256) into MethodDeclaration(3281) at 1", "Insert Modifier: public(3257) into MethodDeclaration(3281) at 2", "Insert TypeParameter(3259) into MethodDeclaration(3281) at 3", "Insert SimpleType: Exception(3261) into MethodDeclaration(3281) at 4", "Insert SimpleName: onRunError(3262) into MethodDeclaration(3281) at 5", "Insert SingleVariableDeclaration(3269) into MethodDeclaration(3281) at 6", "Insert SingleVariableDeclaration(3273) into MethodDeclaration(3281) at 7", "Insert Block(3280) into MethodDeclaration(3281) at 8", "Insert MarkerAnnotation(3283) into MethodDeclaration(3331) at 0", "Insert Modifier: public(3284) into MethodDeclaration(3331) at 1", "Insert TypeParameter(3286) into MethodDeclaration(3331) at 2", "Insert SimpleType: Exception(3288) into MethodDeclaration(3331) at 3", "Insert SimpleName: onRunError(3289) into MethodDeclaration(3331) at 4", "Insert SingleVariableDeclaration(3296) into MethodDeclaration(3331) at 5", "Insert SingleVariableDeclaration(3300) into MethodDeclaration(3331) at 6", "Insert Block(3330) into MethodDeclaration(3331) at 7", "Insert MarkerAnnotation(3333) into MethodDeclaration(3354) at 0", "Insert MarkerAnnotation(3335) into MethodDeclaration(3354) at 1", "Insert Modifier: public(3336) into MethodDeclaration(3354) at 2", "Insert TypeParameter(3338) into MethodDeclaration(3354) at 3", "Insert PrimitiveType: void(3339) into MethodDeclaration(3354) at 4", "Insert SimpleName: onFallbackStart(3340) into MethodDeclaration(3354) at 5", "Insert SingleVariableDeclaration(3347) into MethodDeclaration(3354) at 6", "Insert Block(3353) into MethodDeclaration(3354) at 7", "Insert MarkerAnnotation(3356) into MethodDeclaration(3395) at 0", "Insert Modifier: public(3357) into MethodDeclaration(3395) at 1", "Insert TypeParameter(3359) into MethodDeclaration(3395) at 2", "Insert PrimitiveType: void(3360) into MethodDeclaration(3395) at 3", "Insert SimpleName: onFallbackStart(3361) into MethodDeclaration(3395) at 4", "Insert SingleVariableDeclaration(3368) into MethodDeclaration(3395) at 5", "Insert Block(3394) into MethodDeclaration(3395) at 6", "Insert MarkerAnnotation(3397) into MethodDeclaration(3424) at 0", "Insert MarkerAnnotation(3399) into MethodDeclaration(3424) at 1", "Insert Modifier: public(3400) into MethodDeclaration(3424) at 2", "Insert TypeParameter(3402) into MethodDeclaration(3424) at 3", "Insert SimpleType: T(3404) into MethodDeclaration(3424) at 4", "Insert SimpleName: onFallbackSuccess(3405) into MethodDeclaration(3424) at 5", "Insert SingleVariableDeclaration(3412) into MethodDeclaration(3424) at 6", "Insert SingleVariableDeclaration(3416) into MethodDeclaration(3424) at 7", "Insert Block(3423) into MethodDeclaration(3424) at 8", "Insert MarkerAnnotation(3426) into MethodDeclaration(3474) at 0", "Insert Modifier: public(3427) into MethodDeclaration(3474) at 1", "Insert TypeParameter(3429) into MethodDeclaration(3474) at 2", "Insert SimpleType: T(3431) into MethodDeclaration(3474) at 3", "Insert SimpleName: onFallbackSuccess(3432) into MethodDeclaration(3474) at 4", "Insert SingleVariableDeclaration(3439) into MethodDeclaration(3474) at 5", "Insert SingleVariableDeclaration(3443) into MethodDeclaration(3474) at 6", "Insert Block(3473) into MethodDeclaration(3474) at 7", "Insert MarkerAnnotation(3476) into MethodDeclaration(3503) at 0", "Insert MarkerAnnotation(3478) into MethodDeclaration(3503) at 1", "Insert Modifier: public(3479) into MethodDeclaration(3503) at 2", "Insert TypeParameter(3481) into MethodDeclaration(3503) at 3", "Insert SimpleType: Exception(3483) into MethodDeclaration(3503) at 4", "Insert SimpleName: onFallbackError(3484) into MethodDeclaration(3503) at 5", "Insert SingleVariableDeclaration(3491) into MethodDeclaration(3503) at 6", "Insert SingleVariableDeclaration(3495) into MethodDeclaration(3503) at 7", "Insert Block(3502) into MethodDeclaration(3503) at 8", "Insert MarkerAnnotation(3505) into MethodDeclaration(3553) at 0", "Insert Modifier: public(3506) into MethodDeclaration(3553) at 1", "Insert TypeParameter(3508) into MethodDeclaration(3553) at 2", "Insert SimpleType: Exception(3510) into MethodDeclaration(3553) at 3", "Insert SimpleName: onFallbackError(3511) into MethodDeclaration(3553) at 4", "Insert SingleVariableDeclaration(3518) into MethodDeclaration(3553) at 5", "Insert SingleVariableDeclaration(3522) into MethodDeclaration(3553) at 6", "Insert Block(3552) into MethodDeclaration(3553) at 7", "Insert MarkerAnnotation(3555) into MethodDeclaration(3576) at 0", "Insert MarkerAnnotation(3557) into MethodDeclaration(3576) at 1", "Insert Modifier: public(3558) into MethodDeclaration(3576) at 2", "Insert TypeParameter(3560) into MethodDeclaration(3576) at 3", "Insert PrimitiveType: void(3561) into MethodDeclaration(3576) at 4", "Insert SimpleName: onStart(3562) into MethodDeclaration(3576) at 5", "Insert SingleVariableDeclaration(3569) into MethodDeclaration(3576) at 6", "Insert Block(3575) into MethodDeclaration(3576) at 7", "Insert MarkerAnnotation(3578) into MethodDeclaration(3617) at 0", "Insert Modifier: public(3579) into MethodDeclaration(3617) at 1", "Insert TypeParameter(3581) into MethodDeclaration(3617) at 2", "Insert PrimitiveType: void(3582) into MethodDeclaration(3617) at 3", "Insert SimpleName: onStart(3583) into MethodDeclaration(3617) at 4", "Insert SingleVariableDeclaration(3590) into MethodDeclaration(3617) at 5", "Insert Block(3616) into MethodDeclaration(3617) at 6", "Insert MarkerAnnotation(3619) into MethodDeclaration(3646) at 0", "Insert MarkerAnnotation(3621) into MethodDeclaration(3646) at 1", "Insert Modifier: public(3622) into MethodDeclaration(3646) at 2", "Insert TypeParameter(3624) into MethodDeclaration(3646) at 3", "Insert SimpleType: T(3626) into MethodDeclaration(3646) at 4", "Insert SimpleName: onComplete(3627) into MethodDeclaration(3646) at 5", "Insert SingleVariableDeclaration(3634) into MethodDeclaration(3646) at 6", "Insert SingleVariableDeclaration(3638) into MethodDeclaration(3646) at 7", "Insert Block(3645) into MethodDeclaration(3646) at 8", "Insert MarkerAnnotation(3648) into MethodDeclaration(3696) at 0", "Insert Modifier: public(3649) into MethodDeclaration(3696) at 1", "Insert TypeParameter(3651) into MethodDeclaration(3696) at 2", "Insert SimpleType: T(3653) into MethodDeclaration(3696) at 3", "Insert SimpleName: onComplete(3654) into MethodDeclaration(3696) at 4", "Insert SingleVariableDeclaration(3661) into MethodDeclaration(3696) at 5", "Insert SingleVariableDeclaration(3665) into MethodDeclaration(3696) at 6", "Insert Block(3695) into MethodDeclaration(3696) at 7", "Insert MarkerAnnotation(3698) into MethodDeclaration(3730) at 0", "Insert MarkerAnnotation(3700) into MethodDeclaration(3730) at 1", "Insert Modifier: public(3701) into MethodDeclaration(3730) at 2", "Insert TypeParameter(3703) into MethodDeclaration(3730) at 3", "Insert SimpleType: Exception(3705) into MethodDeclaration(3730) at 4", "Insert SimpleName: onError(3706) into MethodDeclaration(3730) at 5", "Insert SingleVariableDeclaration(3713) into MethodDeclaration(3730) at 6", "Insert SingleVariableDeclaration(3717) into MethodDeclaration(3730) at 7", "Insert SingleVariableDeclaration(3721) into MethodDeclaration(3730) at 8", "Insert Block(3729) into MethodDeclaration(3730) at 9", "Insert MarkerAnnotation(3732) into MethodDeclaration(3786) at 0", "Insert Modifier: public(3733) into MethodDeclaration(3786) at 1", "Insert TypeParameter(3735) into MethodDeclaration(3786) at 2", "Insert SimpleType: Exception(3737) into MethodDeclaration(3786) at 3", "Insert SimpleName: onError(3738) into MethodDeclaration(3786) at 4", "Insert SingleVariableDeclaration(3745) into MethodDeclaration(3786) at 5", "Insert SingleVariableDeclaration(3749) into MethodDeclaration(3786) at 6", "Insert SingleVariableDeclaration(3753) into MethodDeclaration(3786) at 7", "Insert Block(3785) into MethodDeclaration(3786) at 8", "Insert MarkerAnnotation(3788) into MethodDeclaration(3809) at 0", "Insert MarkerAnnotation(3790) into MethodDeclaration(3809) at 1", "Insert Modifier: public(3791) into MethodDeclaration(3809) at 2", "Insert TypeParameter(3793) into MethodDeclaration(3809) at 3", "Insert PrimitiveType: void(3794) into MethodDeclaration(3809) at 4", "Insert SimpleName: onThreadStart(3795) into MethodDeclaration(3809) at 5", "Insert SingleVariableDeclaration(3802) into MethodDeclaration(3809) at 6", "Insert Block(3808) into MethodDeclaration(3809) at 7", "Insert MarkerAnnotation(3811) into MethodDeclaration(3850) at 0", "Insert Modifier: public(3812) into MethodDeclaration(3850) at 1", "Insert TypeParameter(3814) into MethodDeclaration(3850) at 2", "Insert PrimitiveType: void(3815) into MethodDeclaration(3850) at 3", "Insert SimpleName: onThreadStart(3816) into MethodDeclaration(3850) at 4", "Insert SingleVariableDeclaration(3823) into MethodDeclaration(3850) at 5", "Insert Block(3849) into MethodDeclaration(3850) at 6", "Insert MarkerAnnotation(3852) into MethodDeclaration(3873) at 0", "Insert MarkerAnnotation(3854) into MethodDeclaration(3873) at 1", "Insert Modifier: public(3855) into MethodDeclaration(3873) at 2", "Insert TypeParameter(3857) into MethodDeclaration(3873) at 3", "Insert PrimitiveType: void(3858) into MethodDeclaration(3873) at 4", "Insert SimpleName: onThreadComplete(3859) into MethodDeclaration(3873) at 5", "Insert SingleVariableDeclaration(3866) into MethodDeclaration(3873) at 6", "Insert Block(3872) into MethodDeclaration(3873) at 7", "Insert MarkerAnnotation(3875) into MethodDeclaration(3914) at 0", "Insert Modifier: public(3876) into MethodDeclaration(3914) at 1", "Insert TypeParameter(3878) into MethodDeclaration(3914) at 2", "Insert PrimitiveType: void(3879) into MethodDeclaration(3914) at 3", "Insert SimpleName: onThreadComplete(3880) into MethodDeclaration(3914) at 4", "Insert SingleVariableDeclaration(3887) into MethodDeclaration(3914) at 5", "Insert Block(3913) into MethodDeclaration(3914) at 6", "Insert SingleMemberAnnotation(3919) into MethodDeclaration(3954) at 0", "Insert Modifier: private(3920) into MethodDeclaration(3954) at 1", "Insert TypeParameter(3922) into MethodDeclaration(3954) at 2", "Insert ParameterizedType: HystrixCommand<T>(3927) into MethodDeclaration(3954) at 3", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3928) into MethodDeclaration(3954) at 4", "Insert SingleVariableDeclaration(3935) into MethodDeclaration(3954) at 5", "Insert Block(3953) into MethodDeclaration(3954) at 6", "Insert Assignment: =(599) into ExpressionStatement(600) at 0", "Insert Assignment: =(605) into ExpressionStatement(606) at 0", "Insert Assignment: =(611) into ExpressionStatement(612) at 0", "Insert Block(848) into IfStatement(849) at 2", "Insert SimpleName: HystrixCommandExecutionHook(3092) into SimpleType: HystrixCommandExecutionHook(3093) at 0", "Insert SimpleName: actual(3094) into VariableDeclarationFragment(3095) at 0", "Insert SimpleType: HystrixCommandExecutionHook(3099) into SingleVariableDeclaration(3101) at 0", "Insert SimpleName: actual(3100) into SingleVariableDeclaration(3101) at 1", "Insert ExpressionStatement(3107) into Block(3108) at 0", "Insert SimpleName: Override(3110) into MarkerAnnotation(3111) at 0", "Insert SimpleName: Deprecated(3112) into MarkerAnnotation(3113) at 0", "Insert SimpleName: T(3115) into TypeParameter(3116) at 0", "Insert ParameterizedType: HystrixCommand<T>(3123) into SingleVariableDeclaration(3125) at 0", "Insert SimpleName: commandInstance(3124) into SingleVariableDeclaration(3125) at 1", "Insert ExpressionStatement(3130) into Block(3131) at 0", "Insert SimpleName: Override(3133) into MarkerAnnotation(3134) at 0", "Insert SimpleName: T(3136) into TypeParameter(3137) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3144) into SingleVariableDeclaration(3146) at 0", "Insert SimpleName: commandInstance(3145) into SingleVariableDeclaration(3146) at 1", "Insert VariableDeclarationStatement(3157) into Block(3172) at 0", "Insert IfStatement(3166) into Block(3172) at 1", "Insert ExpressionStatement(3171) into Block(3172) at 2", "Insert SimpleName: Override(3174) into MarkerAnnotation(3175) at 0", "Insert SimpleName: Deprecated(3176) into MarkerAnnotation(3177) at 0", "Insert SimpleName: T(3179) into TypeParameter(3180) at 0", "Insert SimpleName: T(3181) into SimpleType: T(3182) at 0", "Insert ParameterizedType: HystrixCommand<T>(3188) into SingleVariableDeclaration(3190) at 0", "Insert SimpleName: commandInstance(3189) into SingleVariableDeclaration(3190) at 1", "Insert SimpleType: T(3192) into SingleVariableDeclaration(3194) at 0", "Insert SimpleName: response(3193) into SingleVariableDeclaration(3194) at 1", "Insert ReturnStatement(3200) into Block(3201) at 0", "Insert SimpleName: Override(3203) into MarkerAnnotation(3204) at 0", "Insert SimpleName: T(3206) into TypeParameter(3207) at 0", "Insert SimpleName: T(3208) into SimpleType: T(3209) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3215) into SingleVariableDeclaration(3217) at 0", "Insert SimpleName: commandInstance(3216) into SingleVariableDeclaration(3217) at 1", "Insert SimpleType: T(3219) into SingleVariableDeclaration(3221) at 0", "Insert SimpleName: response(3220) into SingleVariableDeclaration(3221) at 1", "Insert VariableDeclarationStatement(3232) into Block(3251) at 0", "Insert IfStatement(3244) into Block(3251) at 1", "Insert ReturnStatement(3250) into Block(3251) at 2", "Insert SimpleName: Override(3253) into MarkerAnnotation(3254) at 0", "Insert SimpleName: Deprecated(3255) into MarkerAnnotation(3256) at 0", "Insert SimpleName: T(3258) into TypeParameter(3259) at 0", "Insert SimpleName: Exception(3260) into SimpleType: Exception(3261) at 0", "Insert ParameterizedType: HystrixCommand<T>(3267) into SingleVariableDeclaration(3269) at 0", "Insert SimpleName: commandInstance(3268) into SingleVariableDeclaration(3269) at 1", "Insert SimpleType: Exception(3271) into SingleVariableDeclaration(3273) at 0", "Insert SimpleName: e(3272) into SingleVariableDeclaration(3273) at 1", "Insert ReturnStatement(3279) into Block(3280) at 0", "Insert SimpleName: Override(3282) into MarkerAnnotation(3283) at 0", "Insert SimpleName: T(3285) into TypeParameter(3286) at 0", "Insert SimpleName: Exception(3287) into SimpleType: Exception(3288) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3294) into SingleVariableDeclaration(3296) at 0", "Insert SimpleName: commandInstance(3295) into SingleVariableDeclaration(3296) at 1", "Insert SimpleType: Exception(3298) into SingleVariableDeclaration(3300) at 0", "Insert SimpleName: e(3299) into SingleVariableDeclaration(3300) at 1", "Insert VariableDeclarationStatement(3311) into Block(3330) at 0", "Insert IfStatement(3323) into Block(3330) at 1", "Insert ReturnStatement(3329) into Block(3330) at 2", "Insert SimpleName: Override(3332) into MarkerAnnotation(3333) at 0", "Insert SimpleName: Deprecated(3334) into MarkerAnnotation(3335) at 0", "Insert SimpleName: T(3337) into TypeParameter(3338) at 0", "Insert ParameterizedType: HystrixCommand<T>(3345) into SingleVariableDeclaration(3347) at 0", "Insert SimpleName: commandInstance(3346) into SingleVariableDeclaration(3347) at 1", "Insert ExpressionStatement(3352) into Block(3353) at 0", "Insert SimpleName: Override(3355) into MarkerAnnotation(3356) at 0", "Insert SimpleName: T(3358) into TypeParameter(3359) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3366) into SingleVariableDeclaration(3368) at 0", "Insert SimpleName: commandInstance(3367) into SingleVariableDeclaration(3368) at 1", "Insert VariableDeclarationStatement(3379) into Block(3394) at 0", "Insert IfStatement(3388) into Block(3394) at 1", "Insert ExpressionStatement(3393) into Block(3394) at 2", "Insert SimpleName: Override(3396) into MarkerAnnotation(3397) at 0", "Insert SimpleName: Deprecated(3398) into MarkerAnnotation(3399) at 0", "Insert SimpleName: T(3401) into TypeParameter(3402) at 0", "Insert SimpleName: T(3403) into SimpleType: T(3404) at 0", "Insert ParameterizedType: HystrixCommand<T>(3410) into SingleVariableDeclaration(3412) at 0", "Insert SimpleName: commandInstance(3411) into SingleVariableDeclaration(3412) at 1", "Insert SimpleType: T(3414) into SingleVariableDeclaration(3416) at 0", "Insert SimpleName: fallbackResponse(3415) into SingleVariableDeclaration(3416) at 1", "Insert ReturnStatement(3422) into Block(3423) at 0", "Insert SimpleName: Override(3425) into MarkerAnnotation(3426) at 0", "Insert SimpleName: T(3428) into TypeParameter(3429) at 0", "Insert SimpleName: T(3430) into SimpleType: T(3431) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3437) into SingleVariableDeclaration(3439) at 0", "Insert SimpleName: commandInstance(3438) into SingleVariableDeclaration(3439) at 1", "Insert SimpleType: T(3441) into SingleVariableDeclaration(3443) at 0", "Insert SimpleName: fallbackResponse(3442) into SingleVariableDeclaration(3443) at 1", "Insert VariableDeclarationStatement(3454) into Block(3473) at 0", "Insert IfStatement(3466) into Block(3473) at 1", "Insert ReturnStatement(3472) into Block(3473) at 2", "Insert SimpleName: Override(3475) into MarkerAnnotation(3476) at 0", "Insert SimpleName: Deprecated(3477) into MarkerAnnotation(3478) at 0", "Insert SimpleName: T(3480) into TypeParameter(3481) at 0", "Insert SimpleName: Exception(3482) into SimpleType: Exception(3483) at 0", "Insert ParameterizedType: HystrixCommand<T>(3489) into SingleVariableDeclaration(3491) at 0", "Insert SimpleName: commandInstance(3490) into SingleVariableDeclaration(3491) at 1", "Insert SimpleType: Exception(3493) into SingleVariableDeclaration(3495) at 0", "Insert SimpleName: e(3494) into SingleVariableDeclaration(3495) at 1", "Insert ReturnStatement(3501) into Block(3502) at 0", "Insert SimpleName: Override(3504) into MarkerAnnotation(3505) at 0", "Insert SimpleName: T(3507) into TypeParameter(3508) at 0", "Insert SimpleName: Exception(3509) into SimpleType: Exception(3510) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3516) into SingleVariableDeclaration(3518) at 0", "Insert SimpleName: commandInstance(3517) into SingleVariableDeclaration(3518) at 1", "Insert SimpleType: Exception(3520) into SingleVariableDeclaration(3522) at 0", "Insert SimpleName: e(3521) into SingleVariableDeclaration(3522) at 1", "Insert VariableDeclarationStatement(3533) into Block(3552) at 0", "Insert IfStatement(3545) into Block(3552) at 1", "Insert ReturnStatement(3551) into Block(3552) at 2", "Insert SimpleName: Override(3554) into MarkerAnnotation(3555) at 0", "Insert SimpleName: Deprecated(3556) into MarkerAnnotation(3557) at 0", "Insert SimpleName: T(3559) into TypeParameter(3560) at 0", "Insert ParameterizedType: HystrixCommand<T>(3567) into SingleVariableDeclaration(3569) at 0", "Insert SimpleName: commandInstance(3568) into SingleVariableDeclaration(3569) at 1", "Insert ExpressionStatement(3574) into Block(3575) at 0", "Insert SimpleName: Override(3577) into MarkerAnnotation(3578) at 0", "Insert SimpleName: T(3580) into TypeParameter(3581) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3588) into SingleVariableDeclaration(3590) at 0", "Insert SimpleName: commandInstance(3589) into SingleVariableDeclaration(3590) at 1", "Insert VariableDeclarationStatement(3601) into Block(3616) at 0", "Insert IfStatement(3610) into Block(3616) at 1", "Insert ExpressionStatement(3615) into Block(3616) at 2", "Insert SimpleName: Override(3618) into MarkerAnnotation(3619) at 0", "Insert SimpleName: Deprecated(3620) into MarkerAnnotation(3621) at 0", "Insert SimpleName: T(3623) into TypeParameter(3624) at 0", "Insert SimpleName: T(3625) into SimpleType: T(3626) at 0", "Insert ParameterizedType: HystrixCommand<T>(3632) into SingleVariableDeclaration(3634) at 0", "Insert SimpleName: commandInstance(3633) into SingleVariableDeclaration(3634) at 1", "Insert SimpleType: T(3636) into SingleVariableDeclaration(3638) at 0", "Insert SimpleName: response(3637) into SingleVariableDeclaration(3638) at 1", "Insert ReturnStatement(3644) into Block(3645) at 0", "Insert SimpleName: Override(3647) into MarkerAnnotation(3648) at 0", "Insert SimpleName: T(3650) into TypeParameter(3651) at 0", "Insert SimpleName: T(3652) into SimpleType: T(3653) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3659) into SingleVariableDeclaration(3661) at 0", "Insert SimpleName: commandInstance(3660) into SingleVariableDeclaration(3661) at 1", "Insert SimpleType: T(3663) into SingleVariableDeclaration(3665) at 0", "Insert SimpleName: response(3664) into SingleVariableDeclaration(3665) at 1", "Insert VariableDeclarationStatement(3676) into Block(3695) at 0", "Insert IfStatement(3688) into Block(3695) at 1", "Insert ReturnStatement(3694) into Block(3695) at 2", "Insert SimpleName: Override(3697) into MarkerAnnotation(3698) at 0", "Insert SimpleName: Deprecated(3699) into MarkerAnnotation(3700) at 0", "Insert SimpleName: T(3702) into TypeParameter(3703) at 0", "Insert SimpleName: Exception(3704) into SimpleType: Exception(3705) at 0", "Insert ParameterizedType: HystrixCommand<T>(3711) into SingleVariableDeclaration(3713) at 0", "Insert SimpleName: commandInstance(3712) into SingleVariableDeclaration(3713) at 1", "Insert SimpleType: FailureType(3715) into SingleVariableDeclaration(3717) at 0", "Insert SimpleName: failureType(3716) into SingleVariableDeclaration(3717) at 1", "Insert SimpleType: Exception(3719) into SingleVariableDeclaration(3721) at 0", "Insert SimpleName: e(3720) into SingleVariableDeclaration(3721) at 1", "Insert ReturnStatement(3728) into Block(3729) at 0", "Insert SimpleName: Override(3731) into MarkerAnnotation(3732) at 0", "Insert SimpleName: T(3734) into TypeParameter(3735) at 0", "Insert SimpleName: Exception(3736) into SimpleType: Exception(3737) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3743) into SingleVariableDeclaration(3745) at 0", "Insert SimpleName: commandInstance(3744) into SingleVariableDeclaration(3745) at 1", "Insert SimpleType: FailureType(3747) into SingleVariableDeclaration(3749) at 0", "Insert SimpleName: failureType(3748) into SingleVariableDeclaration(3749) at 1", "Insert SimpleType: Exception(3751) into SingleVariableDeclaration(3753) at 0", "Insert SimpleName: e(3752) into SingleVariableDeclaration(3753) at 1", "Insert VariableDeclarationStatement(3764) into Block(3785) at 0", "Insert IfStatement(3777) into Block(3785) at 1", "Insert ReturnStatement(3784) into Block(3785) at 2", "Insert SimpleName: Override(3787) into MarkerAnnotation(3788) at 0", "Insert SimpleName: Deprecated(3789) into MarkerAnnotation(3790) at 0", "Insert SimpleName: T(3792) into TypeParameter(3793) at 0", "Insert ParameterizedType: HystrixCommand<T>(3800) into SingleVariableDeclaration(3802) at 0", "Insert SimpleName: commandInstance(3801) into SingleVariableDeclaration(3802) at 1", "Insert ExpressionStatement(3807) into Block(3808) at 0", "Insert SimpleName: Override(3810) into MarkerAnnotation(3811) at 0", "Insert SimpleName: T(3813) into TypeParameter(3814) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3821) into SingleVariableDeclaration(3823) at 0", "Insert SimpleName: commandInstance(3822) into SingleVariableDeclaration(3823) at 1", "Insert VariableDeclarationStatement(3834) into Block(3849) at 0", "Insert IfStatement(3843) into Block(3849) at 1", "Insert ExpressionStatement(3848) into Block(3849) at 2", "Insert SimpleName: Override(3851) into MarkerAnnotation(3852) at 0", "Insert SimpleName: Deprecated(3853) into MarkerAnnotation(3854) at 0", "Insert SimpleName: T(3856) into TypeParameter(3857) at 0", "Insert ParameterizedType: HystrixCommand<T>(3864) into SingleVariableDeclaration(3866) at 0", "Insert SimpleName: commandInstance(3865) into SingleVariableDeclaration(3866) at 1", "Insert ExpressionStatement(3871) into Block(3872) at 0", "Insert SimpleName: Override(3874) into MarkerAnnotation(3875) at 0", "Insert SimpleName: T(3877) into TypeParameter(3878) at 0", "Insert ParameterizedType: AbstractHystrixCommand<T>(3885) into SingleVariableDeclaration(3887) at 0", "Insert SimpleName: commandInstance(3886) into SingleVariableDeclaration(3887) at 1", "Insert VariableDeclarationStatement(3898) into Block(3913) at 0", "Insert IfStatement(3907) into Block(3913) at 1", "Insert ExpressionStatement(3912) into Block(3913) at 2", "Insert SimpleName: SuppressWarnings(3915) into SingleMemberAnnotation(3919) at 0", "Insert ArrayInitializer(3918) into SingleMemberAnnotation(3919) at 1", "Insert SimpleName: T(3921) into TypeParameter(3922) at 0", "Insert SimpleType: HystrixCommand(3924) into ParameterizedType: HystrixCommand<T>(3927) at 0", "Insert SimpleType: T(3926) into ParameterizedType: HystrixCommand<T>(3927) at 1", "Insert ParameterizedType: AbstractHystrixCommand<T>(3933) into SingleVariableDeclaration(3935) at 0", "Insert SimpleName: commandInstance(3934) into SingleVariableDeclaration(3935) at 1", "Insert IfStatement(3952) into Block(3953) at 0", "Insert FieldAccess(597) into Assignment: =(599) at 0", "Insert SimpleName: commandPropertiesDefaults(598) into Assignment: =(599) at 1", "Insert FieldAccess(603) into Assignment: =(605) at 0", "Insert SimpleName: threadPoolPropertiesDefaults(604) into Assignment: =(605) at 1", "Insert FieldAccess(609) into Assignment: =(611) at 0", "Insert SimpleName: propertiesStrategy(610) into Assignment: =(611) at 1", "Insert IfStatement(847) into Block(848) at 0", "Insert SimpleName: HystrixCommandExecutionHook(3098) into SimpleType: HystrixCommandExecutionHook(3099) at 0", "Insert Assignment: =(3106) into ExpressionStatement(3107) at 0", "Insert SimpleType: HystrixCommand(3120) into ParameterizedType: HystrixCommand<T>(3123) at 0", "Insert SimpleType: T(3122) into ParameterizedType: HystrixCommand<T>(3123) at 1", "Insert MethodInvocation(3129) into ExpressionStatement(3130) at 0", "Insert SimpleType: AbstractHystrixCommand(3141) into ParameterizedType: AbstractHystrixCommand<T>(3144) at 0", "Insert SimpleType: T(3143) into ParameterizedType: AbstractHystrixCommand<T>(3144) at 1", "Insert ParameterizedType: HystrixCommand<T>(3151) into VariableDeclarationStatement(3157) at 0", "Insert VariableDeclarationFragment(3156) into VariableDeclarationStatement(3157) at 1", "Insert InfixExpression: !=(3160) into IfStatement(3166) at 0", "Insert Block(3165) into IfStatement(3166) at 1", "Insert MethodInvocation(3170) into ExpressionStatement(3171) at 0", "Insert SimpleType: HystrixCommand(3185) into ParameterizedType: HystrixCommand<T>(3188) at 0", "Insert SimpleType: T(3187) into ParameterizedType: HystrixCommand<T>(3188) at 1", "Insert SimpleName: T(3191) into SimpleType: T(3192) at 0", "Insert MethodInvocation(3199) into ReturnStatement(3200) at 0", "Insert SimpleType: AbstractHystrixCommand(3212) into ParameterizedType: AbstractHystrixCommand<T>(3215) at 0", "Insert SimpleType: T(3214) into ParameterizedType: AbstractHystrixCommand<T>(3215) at 1", "Insert SimpleName: T(3218) into SimpleType: T(3219) at 0", "Insert ParameterizedType: HystrixCommand<T>(3226) into VariableDeclarationStatement(3232) at 0", "Insert VariableDeclarationFragment(3231) into VariableDeclarationStatement(3232) at 1", "Insert InfixExpression: !=(3235) into IfStatement(3244) at 0", "Insert Block(3243) into IfStatement(3244) at 1", "Insert MethodInvocation(3249) into ReturnStatement(3250) at 0", "Insert SimpleType: HystrixCommand(3264) into ParameterizedType: HystrixCommand<T>(3267) at 0", "Insert SimpleType: T(3266) into ParameterizedType: HystrixCommand<T>(3267) at 1", "Insert SimpleName: Exception(3270) into SimpleType: Exception(3271) at 0", "Insert MethodInvocation(3278) into ReturnStatement(3279) at 0", "Insert SimpleType: AbstractHystrixCommand(3291) into ParameterizedType: AbstractHystrixCommand<T>(3294) at 0", "Insert SimpleType: T(3293) into ParameterizedType: AbstractHystrixCommand<T>(3294) at 1", "Insert SimpleName: Exception(3297) into SimpleType: Exception(3298) at 0", "Insert ParameterizedType: HystrixCommand<T>(3305) into VariableDeclarationStatement(3311) at 0", "Insert VariableDeclarationFragment(3310) into VariableDeclarationStatement(3311) at 1", "Insert InfixExpression: !=(3314) into IfStatement(3323) at 0", "Insert Block(3322) into IfStatement(3323) at 1", "Insert MethodInvocation(3328) into ReturnStatement(3329) at 0", "Insert SimpleType: HystrixCommand(3342) into ParameterizedType: HystrixCommand<T>(3345) at 0", "Insert SimpleType: T(3344) into ParameterizedType: HystrixCommand<T>(3345) at 1", "Insert MethodInvocation(3351) into ExpressionStatement(3352) at 0", "Insert SimpleType: AbstractHystrixCommand(3363) into ParameterizedType: AbstractHystrixCommand<T>(3366) at 0", "Insert SimpleType: T(3365) into ParameterizedType: AbstractHystrixCommand<T>(3366) at 1", "Insert ParameterizedType: HystrixCommand<T>(3373) into VariableDeclarationStatement(3379) at 0", "Insert VariableDeclarationFragment(3378) into VariableDeclarationStatement(3379) at 1", "Insert InfixExpression: !=(3382) into IfStatement(3388) at 0", "Insert Block(3387) into IfStatement(3388) at 1", "Insert MethodInvocation(3392) into ExpressionStatement(3393) at 0", "Insert SimpleType: HystrixCommand(3407) into ParameterizedType: HystrixCommand<T>(3410) at 0", "Insert SimpleType: T(3409) into ParameterizedType: HystrixCommand<T>(3410) at 1", "Insert SimpleName: T(3413) into SimpleType: T(3414) at 0", "Insert MethodInvocation(3421) into ReturnStatement(3422) at 0", "Insert SimpleType: AbstractHystrixCommand(3434) into ParameterizedType: AbstractHystrixCommand<T>(3437) at 0", "Insert SimpleType: T(3436) into ParameterizedType: AbstractHystrixCommand<T>(3437) at 1", "Insert SimpleName: T(3440) into SimpleType: T(3441) at 0", "Insert ParameterizedType: HystrixCommand<T>(3448) into VariableDeclarationStatement(3454) at 0", "Insert VariableDeclarationFragment(3453) into VariableDeclarationStatement(3454) at 1", "Insert InfixExpression: !=(3457) into IfStatement(3466) at 0", "Insert Block(3465) into IfStatement(3466) at 1", "Insert MethodInvocation(3471) into ReturnStatement(3472) at 0", "Insert SimpleType: HystrixCommand(3486) into ParameterizedType: HystrixCommand<T>(3489) at 0", "Insert SimpleType: T(3488) into ParameterizedType: HystrixCommand<T>(3489) at 1", "Insert SimpleName: Exception(3492) into SimpleType: Exception(3493) at 0", "Insert MethodInvocation(3500) into ReturnStatement(3501) at 0", "Insert SimpleType: AbstractHystrixCommand(3513) into ParameterizedType: AbstractHystrixCommand<T>(3516) at 0", "Insert SimpleType: T(3515) into ParameterizedType: AbstractHystrixCommand<T>(3516) at 1", "Insert SimpleName: Exception(3519) into SimpleType: Exception(3520) at 0", "Insert ParameterizedType: HystrixCommand<T>(3527) into VariableDeclarationStatement(3533) at 0", "Insert VariableDeclarationFragment(3532) into VariableDeclarationStatement(3533) at 1", "Insert InfixExpression: !=(3536) into IfStatement(3545) at 0", "Insert Block(3544) into IfStatement(3545) at 1", "Insert MethodInvocation(3550) into ReturnStatement(3551) at 0", "Insert SimpleType: HystrixCommand(3564) into ParameterizedType: HystrixCommand<T>(3567) at 0", "Insert SimpleType: T(3566) into ParameterizedType: HystrixCommand<T>(3567) at 1", "Insert MethodInvocation(3573) into ExpressionStatement(3574) at 0", "Insert SimpleType: AbstractHystrixCommand(3585) into ParameterizedType: AbstractHystrixCommand<T>(3588) at 0", "Insert SimpleType: T(3587) into ParameterizedType: AbstractHystrixCommand<T>(3588) at 1", "Insert ParameterizedType: HystrixCommand<T>(3595) into VariableDeclarationStatement(3601) at 0", "Insert VariableDeclarationFragment(3600) into VariableDeclarationStatement(3601) at 1", "Insert InfixExpression: !=(3604) into IfStatement(3610) at 0", "Insert Block(3609) into IfStatement(3610) at 1", "Insert MethodInvocation(3614) into ExpressionStatement(3615) at 0", "Insert SimpleType: HystrixCommand(3629) into ParameterizedType: HystrixCommand<T>(3632) at 0", "Insert SimpleType: T(3631) into ParameterizedType: HystrixCommand<T>(3632) at 1", "Insert SimpleName: T(3635) into SimpleType: T(3636) at 0", "Insert MethodInvocation(3643) into ReturnStatement(3644) at 0", "Insert SimpleType: AbstractHystrixCommand(3656) into ParameterizedType: AbstractHystrixCommand<T>(3659) at 0", "Insert SimpleType: T(3658) into ParameterizedType: AbstractHystrixCommand<T>(3659) at 1", "Insert SimpleName: T(3662) into SimpleType: T(3663) at 0", "Insert ParameterizedType: HystrixCommand<T>(3670) into VariableDeclarationStatement(3676) at 0", "Insert VariableDeclarationFragment(3675) into VariableDeclarationStatement(3676) at 1", "Insert InfixExpression: !=(3679) into IfStatement(3688) at 0", "Insert Block(3687) into IfStatement(3688) at 1", "Insert MethodInvocation(3693) into ReturnStatement(3694) at 0", "Insert SimpleType: HystrixCommand(3708) into ParameterizedType: HystrixCommand<T>(3711) at 0", "Insert SimpleType: T(3710) into ParameterizedType: HystrixCommand<T>(3711) at 1", "Insert SimpleName: FailureType(3714) into SimpleType: FailureType(3715) at 0", "Insert SimpleName: Exception(3718) into SimpleType: Exception(3719) at 0", "Insert MethodInvocation(3727) into ReturnStatement(3728) at 0", "Insert SimpleType: AbstractHystrixCommand(3740) into ParameterizedType: AbstractHystrixCommand<T>(3743) at 0", "Insert SimpleType: T(3742) into ParameterizedType: AbstractHystrixCommand<T>(3743) at 1", "Insert SimpleName: FailureType(3746) into SimpleType: FailureType(3747) at 0", "Insert SimpleName: Exception(3750) into SimpleType: Exception(3751) at 0", "Insert ParameterizedType: HystrixCommand<T>(3758) into VariableDeclarationStatement(3764) at 0", "Insert VariableDeclarationFragment(3763) into VariableDeclarationStatement(3764) at 1", "Insert InfixExpression: !=(3767) into IfStatement(3777) at 0", "Insert Block(3776) into IfStatement(3777) at 1", "Insert MethodInvocation(3783) into ReturnStatement(3784) at 0", "Insert SimpleType: HystrixCommand(3797) into ParameterizedType: HystrixCommand<T>(3800) at 0", "Insert SimpleType: T(3799) into ParameterizedType: HystrixCommand<T>(3800) at 1", "Insert MethodInvocation(3806) into ExpressionStatement(3807) at 0", "Insert SimpleType: AbstractHystrixCommand(3818) into ParameterizedType: AbstractHystrixCommand<T>(3821) at 0", "Insert SimpleType: T(3820) into ParameterizedType: AbstractHystrixCommand<T>(3821) at 1", "Insert ParameterizedType: HystrixCommand<T>(3828) into VariableDeclarationStatement(3834) at 0", "Insert VariableDeclarationFragment(3833) into VariableDeclarationStatement(3834) at 1", "Insert InfixExpression: !=(3837) into IfStatement(3843) at 0", "Insert Block(3842) into IfStatement(3843) at 1", "Insert MethodInvocation(3847) into ExpressionStatement(3848) at 0", "Insert SimpleType: HystrixCommand(3861) into ParameterizedType: HystrixCommand<T>(3864) at 0", "Insert SimpleType: T(3863) into ParameterizedType: HystrixCommand<T>(3864) at 1", "Insert MethodInvocation(3870) into ExpressionStatement(3871) at 0", "Insert SimpleType: AbstractHystrixCommand(3882) into ParameterizedType: AbstractHystrixCommand<T>(3885) at 0", "Insert SimpleType: T(3884) into ParameterizedType: AbstractHystrixCommand<T>(3885) at 1", "Insert ParameterizedType: HystrixCommand<T>(3892) into VariableDeclarationStatement(3898) at 0", "Insert VariableDeclarationFragment(3897) into VariableDeclarationStatement(3898) at 1", "Insert InfixExpression: !=(3901) into IfStatement(3907) at 0", "Insert Block(3906) into IfStatement(3907) at 1", "Insert MethodInvocation(3911) into ExpressionStatement(3912) at 0", "Insert StringLiteral: \"unchecked\"(3916) into ArrayInitializer(3918) at 0", "Insert StringLiteral: \"rawtypes\"(3917) into ArrayInitializer(3918) at 1", "Insert SimpleName: HystrixCommand(3923) into SimpleType: HystrixCommand(3924) at 0", "Insert SimpleName: T(3925) into SimpleType: T(3926) at 0", "Insert SimpleType: AbstractHystrixCommand(3930) into ParameterizedType: AbstractHystrixCommand<T>(3933) at 0", "Insert SimpleType: T(3932) into ParameterizedType: AbstractHystrixCommand<T>(3933) at 1", "Insert InstanceofExpression(3939) into IfStatement(3952) at 0", "Insert Block(3948) into IfStatement(3952) at 1", "Insert Block(3951) into IfStatement(3952) at 2", "Insert ThisExpression(595) into FieldAccess(597) at 0", "Insert SimpleName: commandPropertiesDefaults(596) into FieldAccess(597) at 1", "Insert ThisExpression(601) into FieldAccess(603) at 0", "Insert SimpleName: threadPoolPropertiesDefaults(602) into FieldAccess(603) at 1", "Insert ThisExpression(607) into FieldAccess(609) at 0", "Insert SimpleName: propertiesStrategy(608) into FieldAccess(609) at 1", "Insert InstanceofExpression(829) into IfStatement(847) at 0", "Move Block(792) into IfStatement(847) at 1", "Insert Block(846) into IfStatement(847) at 2", "Insert FieldAccess(3104) into Assignment: =(3106) at 0", "Insert SimpleName: actual(3105) into Assignment: =(3106) at 1", "Insert SimpleName: HystrixCommand(3119) into SimpleType: HystrixCommand(3120) at 0", "Insert SimpleName: T(3121) into SimpleType: T(3122) at 0", "Insert SimpleName: actual(3126) into MethodInvocation(3129) at 0", "Insert SimpleName: onRunStart(3127) into MethodInvocation(3129) at 1", "Insert SimpleName: commandInstance(3128) into MethodInvocation(3129) at 2", "Insert SimpleName: AbstractHystrixCommand(3140) into SimpleType: AbstractHystrixCommand(3141) at 0", "Insert SimpleName: T(3142) into SimpleType: T(3143) at 0", "Insert SimpleType: HystrixCommand(3148) into ParameterizedType: HystrixCommand<T>(3151) at 0", "Insert SimpleType: T(3150) into ParameterizedType: HystrixCommand<T>(3151) at 1", "Insert SimpleName: c(3152) into VariableDeclarationFragment(3156) at 0", "Insert MethodInvocation(3155) into VariableDeclarationFragment(3156) at 1", "Insert SimpleName: c(3158) into InfixExpression: !=(3160) at 0", "Insert NullLiteral(3159) into InfixExpression: !=(3160) at 1", "Insert ExpressionStatement(3164) into Block(3165) at 0", "Insert SimpleName: actual(3167) into MethodInvocation(3170) at 0", "Insert SimpleName: onRunStart(3168) into MethodInvocation(3170) at 1", "Insert SimpleName: commandInstance(3169) into MethodInvocation(3170) at 2", "Insert SimpleName: HystrixCommand(3184) into SimpleType: HystrixCommand(3185) at 0", "Insert SimpleName: T(3186) into SimpleType: T(3187) at 0", "Insert SimpleName: actual(3195) into MethodInvocation(3199) at 0", "Insert SimpleName: onRunSuccess(3196) into MethodInvocation(3199) at 1", "Insert SimpleName: commandInstance(3197) into MethodInvocation(3199) at 2", "Insert SimpleName: response(3198) into MethodInvocation(3199) at 3", "Insert SimpleName: AbstractHystrixCommand(3211) into SimpleType: AbstractHystrixCommand(3212) at 0", "Insert SimpleName: T(3213) into SimpleType: T(3214) at 0", "Insert SimpleType: HystrixCommand(3223) into ParameterizedType: HystrixCommand<T>(3226) at 0", "Insert SimpleType: T(3225) into ParameterizedType: HystrixCommand<T>(3226) at 1", "Insert SimpleName: c(3227) into VariableDeclarationFragment(3231) at 0", "Insert MethodInvocation(3230) into VariableDeclarationFragment(3231) at 1", "Insert SimpleName: c(3233) into InfixExpression: !=(3235) at 0", "Insert NullLiteral(3234) into InfixExpression: !=(3235) at 1", "Insert ExpressionStatement(3242) into Block(3243) at 0", "Insert SimpleName: actual(3245) into MethodInvocation(3249) at 0", "Insert SimpleName: onRunSuccess(3246) into MethodInvocation(3249) at 1", "Insert SimpleName: commandInstance(3247) into MethodInvocation(3249) at 2", "Insert SimpleName: response(3248) into MethodInvocation(3249) at 3", "Insert SimpleName: HystrixCommand(3263) into SimpleType: HystrixCommand(3264) at 0", "Insert SimpleName: T(3265) into SimpleType: T(3266) at 0", "Insert SimpleName: actual(3274) into MethodInvocation(3278) at 0", "Insert SimpleName: onRunError(3275) into MethodInvocation(3278) at 1", "Insert SimpleName: commandInstance(3276) into MethodInvocation(3278) at 2", "Insert SimpleName: e(3277) into MethodInvocation(3278) at 3", "Insert SimpleName: AbstractHystrixCommand(3290) into SimpleType: AbstractHystrixCommand(3291) at 0", "Insert SimpleName: T(3292) into SimpleType: T(3293) at 0", "Insert SimpleType: HystrixCommand(3302) into ParameterizedType: HystrixCommand<T>(3305) at 0", "Insert SimpleType: T(3304) into ParameterizedType: HystrixCommand<T>(3305) at 1", "Insert SimpleName: c(3306) into VariableDeclarationFragment(3310) at 0", "Insert MethodInvocation(3309) into VariableDeclarationFragment(3310) at 1", "Insert SimpleName: c(3312) into InfixExpression: !=(3314) at 0", "Insert NullLiteral(3313) into InfixExpression: !=(3314) at 1", "Insert ExpressionStatement(3321) into Block(3322) at 0", "Insert SimpleName: actual(3324) into MethodInvocation(3328) at 0", "Insert SimpleName: onRunError(3325) into MethodInvocation(3328) at 1", "Insert SimpleName: commandInstance(3326) into MethodInvocation(3328) at 2", "Insert SimpleName: e(3327) into MethodInvocation(3328) at 3", "Insert SimpleName: HystrixCommand(3341) into SimpleType: HystrixCommand(3342) at 0", "Insert SimpleName: T(3343) into SimpleType: T(3344) at 0", "Insert SimpleName: actual(3348) into MethodInvocation(3351) at 0", "Insert SimpleName: onFallbackStart(3349) into MethodInvocation(3351) at 1", "Insert SimpleName: commandInstance(3350) into MethodInvocation(3351) at 2", "Insert SimpleName: AbstractHystrixCommand(3362) into SimpleType: AbstractHystrixCommand(3363) at 0", "Insert SimpleName: T(3364) into SimpleType: T(3365) at 0", "Insert SimpleType: HystrixCommand(3370) into ParameterizedType: HystrixCommand<T>(3373) at 0", "Insert SimpleType: T(3372) into ParameterizedType: HystrixCommand<T>(3373) at 1", "Insert SimpleName: c(3374) into VariableDeclarationFragment(3378) at 0", "Insert MethodInvocation(3377) into VariableDeclarationFragment(3378) at 1", "Insert SimpleName: c(3380) into InfixExpression: !=(3382) at 0", "Insert NullLiteral(3381) into InfixExpression: !=(3382) at 1", "Insert ExpressionStatement(3386) into Block(3387) at 0", "Insert SimpleName: actual(3389) into MethodInvocation(3392) at 0", "Insert SimpleName: onFallbackStart(3390) into MethodInvocation(3392) at 1", "Insert SimpleName: commandInstance(3391) into MethodInvocation(3392) at 2", "Insert SimpleName: HystrixCommand(3406) into SimpleType: HystrixCommand(3407) at 0", "Insert SimpleName: T(3408) into SimpleType: T(3409) at 0", "Insert SimpleName: actual(3417) into MethodInvocation(3421) at 0", "Insert SimpleName: onFallbackSuccess(3418) into MethodInvocation(3421) at 1", "Insert SimpleName: commandInstance(3419) into MethodInvocation(3421) at 2", "Insert SimpleName: fallbackResponse(3420) into MethodInvocation(3421) at 3", "Insert SimpleName: AbstractHystrixCommand(3433) into SimpleType: AbstractHystrixCommand(3434) at 0", "Insert SimpleName: T(3435) into SimpleType: T(3436) at 0", "Insert SimpleType: HystrixCommand(3445) into ParameterizedType: HystrixCommand<T>(3448) at 0", "Insert SimpleType: T(3447) into ParameterizedType: HystrixCommand<T>(3448) at 1", "Insert SimpleName: c(3449) into VariableDeclarationFragment(3453) at 0", "Insert MethodInvocation(3452) into VariableDeclarationFragment(3453) at 1", "Insert SimpleName: c(3455) into InfixExpression: !=(3457) at 0", "Insert NullLiteral(3456) into InfixExpression: !=(3457) at 1", "Insert ExpressionStatement(3464) into Block(3465) at 0", "Insert SimpleName: actual(3467) into MethodInvocation(3471) at 0", "Insert SimpleName: onFallbackSuccess(3468) into MethodInvocation(3471) at 1", "Insert SimpleName: commandInstance(3469) into MethodInvocation(3471) at 2", "Insert SimpleName: fallbackResponse(3470) into MethodInvocation(3471) at 3", "Insert SimpleName: HystrixCommand(3485) into SimpleType: HystrixCommand(3486) at 0", "Insert SimpleName: T(3487) into SimpleType: T(3488) at 0", "Insert SimpleName: actual(3496) into MethodInvocation(3500) at 0", "Insert SimpleName: onFallbackError(3497) into MethodInvocation(3500) at 1", "Insert SimpleName: commandInstance(3498) into MethodInvocation(3500) at 2", "Insert SimpleName: e(3499) into MethodInvocation(3500) at 3", "Insert SimpleName: AbstractHystrixCommand(3512) into SimpleType: AbstractHystrixCommand(3513) at 0", "Insert SimpleName: T(3514) into SimpleType: T(3515) at 0", "Insert SimpleType: HystrixCommand(3524) into ParameterizedType: HystrixCommand<T>(3527) at 0", "Insert SimpleType: T(3526) into ParameterizedType: HystrixCommand<T>(3527) at 1", "Insert SimpleName: c(3528) into VariableDeclarationFragment(3532) at 0", "Insert MethodInvocation(3531) into VariableDeclarationFragment(3532) at 1", "Insert SimpleName: c(3534) into InfixExpression: !=(3536) at 0", "Insert NullLiteral(3535) into InfixExpression: !=(3536) at 1", "Insert ExpressionStatement(3543) into Block(3544) at 0", "Insert SimpleName: actual(3546) into MethodInvocation(3550) at 0", "Insert SimpleName: onFallbackError(3547) into MethodInvocation(3550) at 1", "Insert SimpleName: commandInstance(3548) into MethodInvocation(3550) at 2", "Insert SimpleName: e(3549) into MethodInvocation(3550) at 3", "Insert SimpleName: HystrixCommand(3563) into SimpleType: HystrixCommand(3564) at 0", "Insert SimpleName: T(3565) into SimpleType: T(3566) at 0", "Insert SimpleName: actual(3570) into MethodInvocation(3573) at 0", "Insert SimpleName: onStart(3571) into MethodInvocation(3573) at 1", "Insert SimpleName: commandInstance(3572) into MethodInvocation(3573) at 2", "Insert SimpleName: AbstractHystrixCommand(3584) into SimpleType: AbstractHystrixCommand(3585) at 0", "Insert SimpleName: T(3586) into SimpleType: T(3587) at 0", "Insert SimpleType: HystrixCommand(3592) into ParameterizedType: HystrixCommand<T>(3595) at 0", "Insert SimpleType: T(3594) into ParameterizedType: HystrixCommand<T>(3595) at 1", "Insert SimpleName: c(3596) into VariableDeclarationFragment(3600) at 0", "Insert MethodInvocation(3599) into VariableDeclarationFragment(3600) at 1", "Insert SimpleName: c(3602) into InfixExpression: !=(3604) at 0", "Insert NullLiteral(3603) into InfixExpression: !=(3604) at 1", "Insert ExpressionStatement(3608) into Block(3609) at 0", "Insert SimpleName: actual(3611) into MethodInvocation(3614) at 0", "Insert SimpleName: onStart(3612) into MethodInvocation(3614) at 1", "Insert SimpleName: commandInstance(3613) into MethodInvocation(3614) at 2", "Insert SimpleName: HystrixCommand(3628) into SimpleType: HystrixCommand(3629) at 0", "Insert SimpleName: T(3630) into SimpleType: T(3631) at 0", "Insert SimpleName: actual(3639) into MethodInvocation(3643) at 0", "Insert SimpleName: onComplete(3640) into MethodInvocation(3643) at 1", "Insert SimpleName: commandInstance(3641) into MethodInvocation(3643) at 2", "Insert SimpleName: response(3642) into MethodInvocation(3643) at 3", "Insert SimpleName: AbstractHystrixCommand(3655) into SimpleType: AbstractHystrixCommand(3656) at 0", "Insert SimpleName: T(3657) into SimpleType: T(3658) at 0", "Insert SimpleType: HystrixCommand(3667) into ParameterizedType: HystrixCommand<T>(3670) at 0", "Insert SimpleType: T(3669) into ParameterizedType: HystrixCommand<T>(3670) at 1", "Insert SimpleName: c(3671) into VariableDeclarationFragment(3675) at 0", "Insert MethodInvocation(3674) into VariableDeclarationFragment(3675) at 1", "Insert SimpleName: c(3677) into InfixExpression: !=(3679) at 0", "Insert NullLiteral(3678) into InfixExpression: !=(3679) at 1", "Insert ExpressionStatement(3686) into Block(3687) at 0", "Insert SimpleName: actual(3689) into MethodInvocation(3693) at 0", "Insert SimpleName: onComplete(3690) into MethodInvocation(3693) at 1", "Insert SimpleName: commandInstance(3691) into MethodInvocation(3693) at 2", "Insert SimpleName: response(3692) into MethodInvocation(3693) at 3", "Insert SimpleName: HystrixCommand(3707) into SimpleType: HystrixCommand(3708) at 0", "Insert SimpleName: T(3709) into SimpleType: T(3710) at 0", "Insert SimpleName: actual(3722) into MethodInvocation(3727) at 0", "Insert SimpleName: onError(3723) into MethodInvocation(3727) at 1", "Insert SimpleName: commandInstance(3724) into MethodInvocation(3727) at 2", "Insert SimpleName: failureType(3725) into MethodInvocation(3727) at 3", "Insert SimpleName: e(3726) into MethodInvocation(3727) at 4", "Insert SimpleName: AbstractHystrixCommand(3739) into SimpleType: AbstractHystrixCommand(3740) at 0", "Insert SimpleName: T(3741) into SimpleType: T(3742) at 0", "Insert SimpleType: HystrixCommand(3755) into ParameterizedType: HystrixCommand<T>(3758) at 0", "Insert SimpleType: T(3757) into ParameterizedType: HystrixCommand<T>(3758) at 1", "Insert SimpleName: c(3759) into VariableDeclarationFragment(3763) at 0", "Insert MethodInvocation(3762) into VariableDeclarationFragment(3763) at 1", "Insert SimpleName: c(3765) into InfixExpression: !=(3767) at 0", "Insert NullLiteral(3766) into InfixExpression: !=(3767) at 1", "Insert ExpressionStatement(3775) into Block(3776) at 0", "Insert SimpleName: actual(3778) into MethodInvocation(3783) at 0", "Insert SimpleName: onError(3779) into MethodInvocation(3783) at 1", "Insert SimpleName: commandInstance(3780) into MethodInvocation(3783) at 2", "Insert SimpleName: failureType(3781) into MethodInvocation(3783) at 3", "Insert SimpleName: e(3782) into MethodInvocation(3783) at 4", "Insert SimpleName: HystrixCommand(3796) into SimpleType: HystrixCommand(3797) at 0", "Insert SimpleName: T(3798) into SimpleType: T(3799) at 0", "Insert SimpleName: actual(3803) into MethodInvocation(3806) at 0", "Insert SimpleName: onThreadStart(3804) into MethodInvocation(3806) at 1", "Insert SimpleName: commandInstance(3805) into MethodInvocation(3806) at 2", "Insert SimpleName: AbstractHystrixCommand(3817) into SimpleType: AbstractHystrixCommand(3818) at 0", "Insert SimpleName: T(3819) into SimpleType: T(3820) at 0", "Insert SimpleType: HystrixCommand(3825) into ParameterizedType: HystrixCommand<T>(3828) at 0", "Insert SimpleType: T(3827) into ParameterizedType: HystrixCommand<T>(3828) at 1", "Insert SimpleName: c(3829) into VariableDeclarationFragment(3833) at 0", "Insert MethodInvocation(3832) into VariableDeclarationFragment(3833) at 1", "Insert SimpleName: c(3835) into InfixExpression: !=(3837) at 0", "Insert NullLiteral(3836) into InfixExpression: !=(3837) at 1", "Insert ExpressionStatement(3841) into Block(3842) at 0", "Insert SimpleName: actual(3844) into MethodInvocation(3847) at 0", "Insert SimpleName: onThreadStart(3845) into MethodInvocation(3847) at 1", "Insert SimpleName: commandInstance(3846) into MethodInvocation(3847) at 2", "Insert SimpleName: HystrixCommand(3860) into SimpleType: HystrixCommand(3861) at 0", "Insert SimpleName: T(3862) into SimpleType: T(3863) at 0", "Insert SimpleName: actual(3867) into MethodInvocation(3870) at 0", "Insert SimpleName: onThreadComplete(3868) into MethodInvocation(3870) at 1", "Insert SimpleName: commandInstance(3869) into MethodInvocation(3870) at 2", "Insert SimpleName: AbstractHystrixCommand(3881) into SimpleType: AbstractHystrixCommand(3882) at 0", "Insert SimpleName: T(3883) into SimpleType: T(3884) at 0", "Insert SimpleType: HystrixCommand(3889) into ParameterizedType: HystrixCommand<T>(3892) at 0", "Insert SimpleType: T(3891) into ParameterizedType: HystrixCommand<T>(3892) at 1", "Insert SimpleName: c(3893) into VariableDeclarationFragment(3897) at 0", "Insert MethodInvocation(3896) into VariableDeclarationFragment(3897) at 1", "Insert SimpleName: c(3899) into InfixExpression: !=(3901) at 0", "Insert NullLiteral(3900) into InfixExpression: !=(3901) at 1", "Insert ExpressionStatement(3905) into Block(3906) at 0", "Insert SimpleName: actual(3908) into MethodInvocation(3911) at 0", "Insert SimpleName: onThreadComplete(3909) into MethodInvocation(3911) at 1", "Insert SimpleName: commandInstance(3910) into MethodInvocation(3911) at 2", "Insert SimpleName: AbstractHystrixCommand(3929) into SimpleType: AbstractHystrixCommand(3930) at 0", "Insert SimpleName: T(3931) into SimpleType: T(3932) at 0", "Insert SimpleName: commandInstance(3936) into InstanceofExpression(3939) at 0", "Insert SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(3938) into InstanceofExpression(3939) at 1", "Insert ReturnStatement(3947) into Block(3948) at 0", "Insert ReturnStatement(3950) into Block(3951) at 0", "Insert ClassInstanceCreation(822) into Assignment: =(823) at 1", "Insert SimpleName: executionHook(826) into InstanceofExpression(829) at 0", "Insert SimpleType: ExecutionHookDeprecationWrapper(828) into InstanceofExpression(829) at 1", "Insert ExpressionStatement(845) into Block(846) at 0", "Insert ThisExpression(3102) into FieldAccess(3104) at 0", "Insert SimpleName: actual(3103) into FieldAccess(3104) at 1", "Insert SimpleName: HystrixCommand(3147) into SimpleType: HystrixCommand(3148) at 0", "Insert SimpleName: T(3149) into SimpleType: T(3150) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3153) into MethodInvocation(3155) at 0", "Insert SimpleName: commandInstance(3154) into MethodInvocation(3155) at 1", "Insert MethodInvocation(3163) into ExpressionStatement(3164) at 0", "Insert SimpleName: HystrixCommand(3222) into SimpleType: HystrixCommand(3223) at 0", "Insert SimpleName: T(3224) into SimpleType: T(3225) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3228) into MethodInvocation(3230) at 0", "Insert SimpleName: commandInstance(3229) into MethodInvocation(3230) at 1", "Insert Assignment: =(3241) into ExpressionStatement(3242) at 0", "Insert SimpleName: HystrixCommand(3301) into SimpleType: HystrixCommand(3302) at 0", "Insert SimpleName: T(3303) into SimpleType: T(3304) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3307) into MethodInvocation(3309) at 0", "Insert SimpleName: commandInstance(3308) into MethodInvocation(3309) at 1", "Insert Assignment: =(3320) into ExpressionStatement(3321) at 0", "Insert SimpleName: HystrixCommand(3369) into SimpleType: HystrixCommand(3370) at 0", "Insert SimpleName: T(3371) into SimpleType: T(3372) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3375) into MethodInvocation(3377) at 0", "Insert SimpleName: commandInstance(3376) into MethodInvocation(3377) at 1", "Insert MethodInvocation(3385) into ExpressionStatement(3386) at 0", "Insert SimpleName: HystrixCommand(3444) into SimpleType: HystrixCommand(3445) at 0", "Insert SimpleName: T(3446) into SimpleType: T(3447) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3450) into MethodInvocation(3452) at 0", "Insert SimpleName: commandInstance(3451) into MethodInvocation(3452) at 1", "Insert Assignment: =(3463) into ExpressionStatement(3464) at 0", "Insert SimpleName: HystrixCommand(3523) into SimpleType: HystrixCommand(3524) at 0", "Insert SimpleName: T(3525) into SimpleType: T(3526) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3529) into MethodInvocation(3531) at 0", "Insert SimpleName: commandInstance(3530) into MethodInvocation(3531) at 1", "Insert Assignment: =(3542) into ExpressionStatement(3543) at 0", "Insert SimpleName: HystrixCommand(3591) into SimpleType: HystrixCommand(3592) at 0", "Insert SimpleName: T(3593) into SimpleType: T(3594) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3597) into MethodInvocation(3599) at 0", "Insert SimpleName: commandInstance(3598) into MethodInvocation(3599) at 1", "Insert MethodInvocation(3607) into ExpressionStatement(3608) at 0", "Insert SimpleName: HystrixCommand(3666) into SimpleType: HystrixCommand(3667) at 0", "Insert SimpleName: T(3668) into SimpleType: T(3669) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3672) into MethodInvocation(3674) at 0", "Insert SimpleName: commandInstance(3673) into MethodInvocation(3674) at 1", "Insert Assignment: =(3685) into ExpressionStatement(3686) at 0", "Insert SimpleName: HystrixCommand(3754) into SimpleType: HystrixCommand(3755) at 0", "Insert SimpleName: T(3756) into SimpleType: T(3757) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3760) into MethodInvocation(3762) at 0", "Insert SimpleName: commandInstance(3761) into MethodInvocation(3762) at 1", "Insert Assignment: =(3774) into ExpressionStatement(3775) at 0", "Insert SimpleName: HystrixCommand(3824) into SimpleType: HystrixCommand(3825) at 0", "Insert SimpleName: T(3826) into SimpleType: T(3827) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3830) into MethodInvocation(3832) at 0", "Insert SimpleName: commandInstance(3831) into MethodInvocation(3832) at 1", "Insert MethodInvocation(3840) into ExpressionStatement(3841) at 0", "Insert SimpleName: HystrixCommand(3888) into SimpleType: HystrixCommand(3889) at 0", "Insert SimpleName: T(3890) into SimpleType: T(3891) at 0", "Insert SimpleName: getHystrixCommandFromAbstractIfApplicable(3894) into MethodInvocation(3896) at 0", "Insert SimpleName: commandInstance(3895) into MethodInvocation(3896) at 1", "Insert MethodInvocation(3904) into ExpressionStatement(3905) at 0", "Insert QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand(3937) into SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(3938) at 0", "Insert MethodInvocation(3946) into ReturnStatement(3947) at 0", "Insert NullLiteral(3949) into ReturnStatement(3950) at 0", "Insert SimpleType: ExecutionHookDeprecationWrapper(816) into ClassInstanceCreation(822) at 0", "Move MethodInvocation(782) into ClassInstanceCreation(822) at 1", "Insert SimpleName: ExecutionHookDeprecationWrapper(827) into SimpleType: ExecutionHookDeprecationWrapper(828) at 0", "Insert Assignment: =(844) into ExpressionStatement(845) at 0", "Insert SimpleName: onRunStart(3161) into MethodInvocation(3163) at 0", "Insert SimpleName: c(3162) into MethodInvocation(3163) at 1", "Insert SimpleName: response(3236) into Assignment: =(3241) at 0", "Insert MethodInvocation(3240) into Assignment: =(3241) at 1", "Insert SimpleName: e(3315) into Assignment: =(3320) at 0", "Insert MethodInvocation(3319) into Assignment: =(3320) at 1", "Insert SimpleName: onFallbackStart(3383) into MethodInvocation(3385) at 0", "Insert SimpleName: c(3384) into MethodInvocation(3385) at 1", "Insert SimpleName: fallbackResponse(3458) into Assignment: =(3463) at 0", "Insert MethodInvocation(3462) into Assignment: =(3463) at 1", "Insert SimpleName: e(3537) into Assignment: =(3542) at 0", "Insert MethodInvocation(3541) into Assignment: =(3542) at 1", "Insert SimpleName: onStart(3605) into MethodInvocation(3607) at 0", "Insert SimpleName: c(3606) into MethodInvocation(3607) at 1", "Insert SimpleName: response(3680) into Assignment: =(3685) at 0", "Insert MethodInvocation(3684) into Assignment: =(3685) at 1", "Insert SimpleName: e(3768) into Assignment: =(3774) at 0", "Insert MethodInvocation(3773) into Assignment: =(3774) at 1", "Insert SimpleName: onThreadStart(3838) into MethodInvocation(3840) at 0", "Insert SimpleName: c(3839) into MethodInvocation(3840) at 1", "Insert SimpleName: onThreadComplete(3902) into MethodInvocation(3904) at 0", "Insert SimpleName: c(3903) into MethodInvocation(3904) at 1", "Insert ParenthesizedExpression(3944) into MethodInvocation(3946) at 0", "Insert SimpleName: getOriginal(3945) into MethodInvocation(3946) at 1", "Insert SimpleName: ExecutionHookDeprecationWrapper(815) into SimpleType: ExecutionHookDeprecationWrapper(816) at 0", "Insert FieldAccess(839) into Assignment: =(844) at 0", "Insert ClassInstanceCreation(843) into Assignment: =(844) at 1", "Insert SimpleName: onRunSuccess(3237) into MethodInvocation(3240) at 0", "Insert SimpleName: c(3238) into MethodInvocation(3240) at 1", "Insert SimpleName: response(3239) into MethodInvocation(3240) at 2", "Insert SimpleName: onRunError(3316) into MethodInvocation(3319) at 0", "Insert SimpleName: c(3317) into MethodInvocation(3319) at 1", "Insert SimpleName: e(3318) into MethodInvocation(3319) at 2", "Insert SimpleName: onFallbackSuccess(3459) into MethodInvocation(3462) at 0", "Insert SimpleName: c(3460) into MethodInvocation(3462) at 1", "Insert SimpleName: fallbackResponse(3461) into MethodInvocation(3462) at 2", "Insert SimpleName: onFallbackError(3538) into MethodInvocation(3541) at 0", "Insert SimpleName: c(3539) into MethodInvocation(3541) at 1", "Insert SimpleName: e(3540) into MethodInvocation(3541) at 2", "Insert SimpleName: onComplete(3681) into MethodInvocation(3684) at 0", "Insert SimpleName: c(3682) into MethodInvocation(3684) at 1", "Insert SimpleName: response(3683) into MethodInvocation(3684) at 2", "Insert SimpleName: onError(3769) into MethodInvocation(3773) at 0", "Insert SimpleName: c(3770) into MethodInvocation(3773) at 1", "Insert SimpleName: failureType(3771) into MethodInvocation(3773) at 2", "Insert SimpleName: e(3772) into MethodInvocation(3773) at 3", "Insert CastExpression(3943) into ParenthesizedExpression(3944) at 0", "Insert ThisExpression(837) into FieldAccess(839) at 0", "Insert SimpleName: executionHook(838) into FieldAccess(839) at 1", "Insert SimpleType: ExecutionHookDeprecationWrapper(841) into ClassInstanceCreation(843) at 0", "Insert SimpleName: executionHook(842) into ClassInstanceCreation(843) at 1", "Insert SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(3941) into CastExpression(3943) at 0", "Insert SimpleName: commandInstance(3942) into CastExpression(3943) at 1", "Insert SimpleName: ExecutionHookDeprecationWrapper(840) into SimpleType: ExecutionHookDeprecationWrapper(841) at 0", "Insert QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand(3940) into SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(3941) at 0", "Delete TextElement:  njoshi(88)", "Delete TagElement: @author(89)"]}}, {"HystrixCommand_cluster": {"actions": [{"root": "UPDATE from java.util.concurrent.Callable to java.util.List", "operations": ["UPD QualifiedName: java.util.concurrent.Callable from java.util.concurrent.Callable to java.util.List"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS ParameterizedType: HystrixCommandFromObservableCommand<R> to FieldDeclaration at 2", "INS SimpleName: observableCommand to VariableDeclarationFragment at 0", "INS SimpleName: HystrixCommandFromObservableCommand to SimpleType: HystrixCommandFromObservableCommand at 0", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleType: HystrixCommandFromObservableCommand to ParameterizedType: HystrixCommandFromObservableCommand<R> at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ThisExpression to ClassInstanceCreation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 5"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 19", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ReturnStatement to Block at 0", "INS QualifiedName: o.commandPropertiesDefaults to SuperConstructorInvocation at 5", "INS Modifier: static to TypeDeclaration: class at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: HystrixCommandFromObservableCommand to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: R to ParameterizedType: OnSubscribe<R> at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ParameterizedType: HystrixObservableCommand<R> to TypeDeclaration: class at 3", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: original to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: s to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: o.threadPool to SuperConstructorInvocation at 4", "INS Modifier: final to FieldDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Override to MarkerAnnotation at 0", "INS QualifiedName: o.threadPoolPropertiesDefaults to SuperConstructorInvocation at 6", "INS Modifier: protected to MethodDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: onNext to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: o.executionHook to SuperConstructorInvocation at 11", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS QualifiedName: o.metrics to SuperConstructorInvocation at 7", "INS QualifiedName: o.commandKey to SuperConstructorInvocation at 1", "INS Block to MethodDeclaration at 2", "INS QualifiedName: o.fallbackSemaphoreOverride to SuperConstructorInvocation at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: o.executionSemaphoreOverride to SuperConstructorInvocation at 9", "INS Block to MethodDeclaration at 4", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS QualifiedName: o.propertiesStrategy to SuperConstructorInvocation at 10", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ParameterizedType: OnSubscribe<R> to ClassInstanceCreation at 0", "INS Block to CatchClause at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to TryStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: OnSubscribe to ParameterizedType: OnSubscribe<R> at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS QualifiedName: o.circuitBreaker to SuperConstructorInvocation at 3", "INS TryStatement to Block at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: getCacheKey to MethodDeclaration at 3", "INS QualifiedName: o.threadPoolKey to SuperConstructorInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: OnSubscribe to SimpleType: OnSubscribe at 0", "INS Modifier: protected to MethodDeclaration at 0", "INS QualifiedName: o.commandGroup to SuperConstructorInvocation at 0", "INS SimpleName: HystrixCommandFromObservableCommand to TypeDeclaration: class at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: getOriginal to MethodDeclaration at 1", "INS SuperConstructorInvocation to Block at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 19"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: HystrixCommandGroupKey to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: getCommandGroup to MethodDeclaration at 2"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 21", "MOV TypeParameter to TypeDeclaration: class at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: getThreadPoolKey to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: observableCommand to MethodInvocation at 0", "INS SimpleType: HystrixThreadPoolKey to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getThreadPoolKey to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleType: HystrixCommandMetrics to MethodDeclaration at 1", "INS SimpleName: getMetrics to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS SimpleName: getProperties to MethodDeclaration at 2", "INS SimpleName: HystrixCommandProperties to SimpleType: HystrixCommandProperties at 0", "INS Block to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleType: HystrixCommandProperties to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 25"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 26"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 27"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 28"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 29", "INS SimpleName: isFailedExecution to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: getFailedExecutionException to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 31", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 31", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: isResponseFromFallback to MethodDeclaration at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 32", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS Block to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: isResponseShortCircuited to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 33"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: isResponseFromCache to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 34"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS SimpleName: isResponseRejected to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 35", "INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: List to ParameterizedType: List<HystrixEventType> at 0", "INS Block to MethodDeclaration at 3", "INS ParameterizedType: List<HystrixEventType> to MethodDeclaration at 1", "INS SimpleName: getExecutionEvents to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 37"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: queue to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 38"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: execute to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 40", "INS ReturnStatement to Block at 0", "INS SimpleName: observe to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS SimpleName: markAsCollapsedCommand to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: sizeOfBatch to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleType: HystrixCircuitBreaker to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getCircuitBreaker to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 42"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 43", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: observableCommand to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: protected to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: t to MethodInvocation at 2", "INS SimpleName: getExceptionFromThrowable to MethodDeclaration at 3", "INS SimpleName: getExceptionFromThrowable to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: decomposeException to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 44"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore to MethodDeclaration at 2", "INS SimpleName: getExecutionSemaphore to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS QualifiedName: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore to SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore at 0", "INS Modifier: protected to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 53", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: isRequestCachingEnabled to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 53"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 54", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: recordExecutedCommand to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 54"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 55", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS Modifier: protected to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: recordTotalExecutionTime to MethodDeclaration at 3", "INS SimpleName: startTime to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 55"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: ObservableCommand<R> to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: protected to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleName: toObservable to MethodDeclaration at 2"]}, {"root": "INS SimpleType: HystrixCommandKey to MethodDeclaration at 1", "operations": ["INS SimpleName: HystrixCommandKey to SimpleType: HystrixCommandKey at 0", "INS SimpleType: HystrixCommandKey to MethodDeclaration at 1"]}, {"root": "INS SimpleName: getCommandKey to MethodDeclaration at 2", "operations": ["INS SimpleName: getCommandKey to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: getIntervalTimeInMilliseconds to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV PrimitiveType: int to MethodDeclaration at 1"]}, {"root": "UPDATE from int to boolean", "operations": ["UPD PrimitiveType: int from int to boolean", "UPD PrimitiveType: void from void to boolean", "UPD PrimitiveType: void from void to boolean", "UPD PrimitiveType: void from void to boolean", "UPD PrimitiveType: void from void to boolean", "UPD PrimitiveType: void from void to boolean"]}, {"root": "UPDATE from getIntervalTimeInMilliseconds to isCircuitBreakerOpen", "operations": ["UPD SimpleName: getIntervalTimeInMilliseconds from getIntervalTimeInMilliseconds to isCircuitBreakerOpen", "UPD SimpleName: get from get to isCircuitBreakerOpen"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV SimpleName: onCompleted to MethodDeclaration at 2", "MOV Block to MethodDeclaration at 3"]}, {"root": "UPDATE from onCompleted to isExecutionComplete", "operations": ["UPD SimpleName: onCompleted from onCompleted to isExecutionComplete", "UPD SimpleName: onCompleted from onCompleted to isExecutionComplete"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleName: onError to MethodDeclaration at 2", "MOV SingleVariableDeclaration to CatchClause at 0", "MOV PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from onError to isExecutedInThread", "operations": ["UPD SimpleName: onError from onError to isExecutedInThread", "UPD SimpleName: onError from onError to isExecutedInThread"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleName: onNext to MethodDeclaration at 2", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 3"]}, {"root": "UPDATE from onNext to isSuccessfulExecution", "operations": ["UPD SimpleName: onNext from onNext to isSuccessfulExecution", "UPD SimpleName: onNext from onNext to isSuccessfulExecution"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: void to MethodDeclaration at 1", "MOV Modifier: private to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Throwable to MethodDeclaration at 1", "MOV ParameterizedType: Observable<R> to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: private to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV SimpleName: subscribeWithThreadIsolation to MethodDeclaration at 2"]}, {"root": "UPDATE from set to isResponseTimedOut", "operations": ["UPD SimpleName: set from set to isResponseTimedOut", "UPD SimpleName: subscribeWithThreadIsolation from subscribeWithThreadIsolation to isResponseTimedOut"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: private to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: call to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 3"]}, {"root": "UPDATE from void to int", "operations": ["UPD PrimitiveType: void from void to int"]}, {"root": "UPDATE from executionIsolationThreadInterruptOnTimeout to getExecutionTimeInMilliseconds", "operations": ["UPD SimpleName: executionIsolationThreadInterruptOnTimeout from executionIsolationThreadInterruptOnTimeout to getExecutionTimeInMilliseconds", "UPD SimpleName: call from call to getExecutionTimeInMilliseconds"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: call to MethodDeclaration at 3", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Future<R> to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: R to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: private to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Observable<R> to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Exception to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: RuntimeException to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: private to MethodDeclaration at 1"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected", "UPD Modifier: public from public to protected", "UPD Modifier: private from private to protected", "UPD Modifier: private from private to protected"]}, {"root": "INS SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore to MethodDeclaration at 3", "operations": ["INS QualifiedName: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore to SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore at 0", "INS SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore to MethodDeclaration at 3"]}, {"root": "INS SimpleName: getFallbackSemaphore to MethodDeclaration at 4", "operations": ["INS SimpleName: getFallbackSemaphore to MethodDeclaration at 4"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 3"]}, {"root": "INS SimpleName: getLogMessagePrefix to MethodDeclaration at 4", "operations": ["INS SimpleName: getLogMessagePrefix to MethodDeclaration at 4"]}, {"root": "UPDATE from This command is essentially a blocking command but provides an Observable facade if used with  observe() to This command is essentially a blocking command but provides an Observable facade if used with observe()", "operations": ["UPD TextElement: This command is essentially a blocking command but provides an Observable facade if used with  observe() from This command is essentially a blocking command but provides an Observable facade if used with  observe() to This command is essentially a blocking command but provides an Observable facade if used with observe()"]}, {"root": "MOVE from ParameterizedType: HystrixCommandFromObservableCommand<R>", "operations": ["MOV SimpleType: R to ParameterizedType: HystrixCommandFromObservableCommand<R> at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: HystrixCommandFromObservableCommand to ParameterizedType: HystrixCommandFromObservableCommand<R> at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: HystrixCommandFromObservableCommand to SimpleType: HystrixCommandFromObservableCommand at 0", "INS SimpleName: observableCommand to FieldAccess at 1", "INS ParameterizedType: HystrixCommandFromObservableCommand<R> to ClassInstanceCreation at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to ClassInstanceCreation at 1"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Observable to HystrixObservableCommand", "operations": ["UPD SimpleType: Observable from Observable to HystrixObservableCommand", "UPD SimpleName: Observable from Observable to HystrixObservableCommand"]}, {"root": "MOVE from ParameterizedType: HystrixObservableCommand<R>", "operations": ["MOV SimpleType: Observable to ParameterizedType: HystrixObservableCommand<R> at 0"]}, {"root": "MOVE from ParameterizedType: HystrixObservableCommand<R>", "operations": ["MOV SimpleType: R to ParameterizedType: HystrixObservableCommand<R> at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: HystrixCommand<R> to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: HystrixCommand<R> to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: call to MethodDeclaration at 3", "MOV ParameterizedType: Observable<R> to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "UPDATE from get to getFallback", "operations": ["UPD SimpleName: get from get to getFallback", "UPD SimpleName: call from call to getFallback"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from CachedObservableResponse to HystrixCommandGroupKey", "operations": ["UPD SimpleName: CachedObservableResponse from CachedObservableResponse to HystrixCommandGroupKey"]}, {"root": "MOVE from SimpleType: HystrixCommandGroupKey", "operations": ["MOV SimpleName: CachedObservableResponse to SimpleType: HystrixCommandGroupKey at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getCommandKey to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: observableCommand to MethodInvocation at 0"]}, {"root": "UPDATE from HystrixContextRunnable to HystrixThreadPoolKey", "operations": ["UPD SimpleName: HystrixContextRunnable from HystrixContextRunnable to HystrixThreadPoolKey"]}, {"root": "MOVE from SimpleType: HystrixThreadPoolKey", "operations": ["MOV SimpleName: HystrixContextRunnable to SimpleType: HystrixThreadPoolKey at 0"]}, {"root": "UPDATE from HystrixRuntimeException to HystrixCommandMetrics", "operations": ["UPD SimpleName: HystrixRuntimeException from HystrixRuntimeException to HystrixCommandMetrics"]}, {"root": "MOVE from SimpleType: HystrixCommandMetrics", "operations": ["MOV SimpleName: HystrixRuntimeException to SimpleType: HystrixCommandMetrics at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from ParameterizedType: List<HystrixEventType>", "operations": ["MOV SimpleType: HystrixEventType to ParameterizedType: List<HystrixEventType> at 1"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from Exception to HystrixCircuitBreaker", "operations": ["UPD SimpleName: Exception from Exception to HystrixCircuitBreaker"]}, {"root": "MOVE from SimpleType: HystrixCircuitBreaker", "operations": ["MOV SimpleName: Exception to SimpleType: HystrixCircuitBreaker at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from requestCache to original", "operations": ["UPD SimpleName: requestCache from requestCache to original", "UPD SimpleName: fromCache from fromCache to original", "UPD SimpleName: timeoutTimer from timeoutTimer to original"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: fromCache to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from originalCommand to o", "operations": ["UPD SimpleName: originalCommand from originalCommand to o"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: observableCommand to MethodInvocation at 0", "INS SimpleName: getCommandGroup to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from Exception to List", "operations": ["UPD SimpleName: Exception from Exception to List"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: Exception to SimpleType: List at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: ObservableCommand<R> to ClassInstanceCreation at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: o to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: original to FieldAccess at 1"]}, {"root": "UPDATE from observer to observableCommand", "operations": ["UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: getFallbackOrThrowException from getFallbackOrThrowException to observableCommand", "UPD SimpleName: onComplete from onComplete to observableCommand", "UPD SimpleName: metrics from metrics to observableCommand", "UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: child from child to observableCommand", "UPD SimpleName: onError from onError to observableCommand", "UPD SimpleName: child from child to observableCommand", "UPD SimpleName: started from started to observableCommand", "UPD SimpleName: Thread from Thread to observableCommand", "UPD SimpleName: executionHook from executionHook to observableCommand", "UPD SimpleName: originalCommand from originalCommand to observableCommand", "UPD SimpleName: child from child to observableCommand", "UPD SimpleName: onThreadComplete from onThreadComplete to observableCommand", "UPD SimpleName: logger from logger to observableCommand", "UPD SimpleName: logger from logger to observableCommand", "UPD SimpleName: logger from logger to observableCommand", "UPD SimpleName: onFallbackSuccess from onFallbackSuccess to observableCommand", "UPD SimpleName: properties from properties to observableCommand", "UPD SimpleName: executionIsolationThreadTimeoutInMilliseconds from executionIsolationThreadTimeoutInMilliseconds to observableCommand", "UPD SimpleName: child from child to observableCommand", "UPD SimpleName: logger from logger to observableCommand", "UPD SimpleName: logger from logger to observableCommand", "UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: observer from observer to observableCommand", "UPD SimpleName: isExecutedInThread from isExecutedInThread to observableCommand"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: onError to MethodInvocation at 1", "MOV SimpleName: child to MethodInvocation at 0"]}, {"root": "UPDATE from onError to getMetrics", "operations": ["UPD SimpleName: onError from onError to getMetrics"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: recordTotalExecutionTime to MethodInvocation at 1", "MOV SimpleName: originalCommand to MethodInvocation at 0"]}, {"root": "UPDATE from recordTotalExecutionTime to getProperties", "operations": ["UPD SimpleName: recordTotalExecutionTime from recordTotalExecutionTime to getProperties"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: executionIsolationThreadTimeoutInMilliseconds to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: onCompleted to MethodInvocation at 1", "MOV SimpleName: child to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: child to MethodInvocation at 0", "MOV SimpleName: onError to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: child to MethodInvocation at 0", "MOV SimpleName: onNext to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: observer to MethodInvocation at 0", "MOV SimpleName: onNext to MethodInvocation at 1"]}, {"root": "UPDATE from onNext to isFailedExecution", "operations": ["UPD SimpleName: onNext from onNext to isFailedExecution"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: onError to MethodInvocation at 1", "MOV SimpleName: observer to MethodInvocation at 0"]}, {"root": "UPDATE from onError to getFailedExecutionException", "operations": ["UPD SimpleName: onError from onError to getFailedExecutionException"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: observer to MethodInvocation at 0"]}, {"root": "UPDATE from getFallbackOrThrowException to isResponseFromFallback", "operations": ["UPD SimpleName: getFallbackOrThrowException from getFallbackOrThrowException to isResponseFromFallback"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getFallbackOrThrowException to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: set to MethodInvocation at 1", "MOV SimpleName: isExecutedInThread to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentThread to MethodInvocation at 1", "MOV SimpleName: Thread to MethodInvocation at 0"]}, {"root": "UPDATE from currentThread to isResponseShortCircuited", "operations": ["UPD SimpleName: currentThread from currentThread to isResponseShortCircuited"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 1", "MOV SimpleName: observer to MethodInvocation at 0"]}, {"root": "UPDATE from e to isResponseFromCache", "operations": ["UPD SimpleName: e from e to isResponseFromCache"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: _this to MethodInvocation at 1", "MOV SimpleName: onThreadComplete to MethodInvocation at 0"]}, {"root": "UPDATE from _this to isResponseRejected", "operations": ["UPD SimpleName: _this from _this to isResponseRejected"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: warn to MethodInvocation at 1", "MOV SimpleName: logger to MethodInvocation at 0"]}, {"root": "UPDATE from warn to getExecutionEvents", "operations": ["UPD SimpleName: warn from warn to getExecutionEvents"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: executionIsolationThreadInterruptOnTimeout to MethodInvocation at 1", "MOV SimpleName: properties to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: observer to MethodInvocation at 0"]}, {"root": "UPDATE from e to queue", "operations": ["UPD SimpleName: e from e to queue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: observer to MethodInvocation at 0"]}, {"root": "UPDATE from e to execute", "operations": ["UPD SimpleName: e from e to execute"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: onRunStart to MethodInvocation at 1", "MOV SimpleName: executionHook to MethodInvocation at 0"]}, {"root": "UPDATE from onRunStart to observe", "operations": ["UPD SimpleName: onRunStart from onRunStart to observe"]}, {"root": "UPDATE from warn to markAsCollapsedCommand", "operations": ["UPD SimpleName: warn from warn to markAsCollapsedCommand"]}, {"root": "UPDATE from decorated to sizeOfBatch", "operations": ["UPD SimpleName: decorated from decorated to sizeOfBatch"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: warn to MethodInvocation at 1", "MOV SimpleName: logger to MethodInvocation at 0"]}, {"root": "UPDATE from warn to getCircuitBreaker", "operations": ["UPD SimpleName: warn from warn to getCircuitBreaker"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: logger to MethodInvocation at 0", "MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "UPDATE from debug to decomposeException", "operations": ["UPD SimpleName: debug from debug to decomposeException"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: metrics to MethodInvocation at 0", "MOV SimpleName: decrementConcurrentExecutionCount to MethodInvocation at 1"]}, {"root": "UPDATE from decrementConcurrentExecutionCount to getExecutionSemaphore", "operations": ["UPD SimpleName: decrementConcurrentExecutionCount from decrementConcurrentExecutionCount to getExecutionSemaphore"]}, {"root": "UPDATE from getFallback to getFallbackSemaphore", "operations": ["UPD SimpleName: getFallback from getFallback to getFallbackSemaphore"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getFallback to MethodInvocation at 2"]}, {"root": "UPDATE from message to getLogMessagePrefix", "operations": ["UPD SimpleName: message from message to getLogMessagePrefix"]}, {"root": "UPDATE from fallback to isRequestCachingEnabled", "operations": ["UPD SimpleName: fallback from fallback to isRequestCachingEnabled"]}, {"root": "UPDATE from warn to recordExecutedCommand", "operations": ["UPD SimpleName: warn from warn to recordExecutedCommand"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 2", "MOV SimpleName: onError to MethodInvocation at 0", "MOV SimpleName: failureType to MethodInvocation at 1"]}, {"root": "UPDATE from failureType to recordTotalExecutionTime", "operations": ["UPD SimpleName: failureType from failureType to recordTotalExecutionTime"]}, {"root": "UPDATE from e to startTime", "operations": ["UPD SimpleName: e from e to startTime"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: compareAndSet to MethodInvocation at 1", "MOV SimpleName: started to MethodInvocation at 0"]}, {"root": "UPDATE from compareAndSet to toObservable", "operations": ["UPD SimpleName: compareAndSet from compareAndSet to toObservable"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2", "MOV SimpleName: Observable to MethodInvocation at 0", "MOV SimpleName: create to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Observable to MethodInvocation at 0"]}, {"root": "UPDATE from immediate to create", "operations": ["UPD SimpleName: immediate from immediate to create"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: immediate to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: requestCache to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCacheKey to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: HystrixCommandFromObservableCommand<R>", "operations": ["MOV SimpleType: R to ParameterizedType: HystrixCommandFromObservableCommand<R> at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "UPDATE from HystrixContextScheduler to R", "operations": ["UPD SimpleName: HystrixContextScheduler from HystrixContextScheduler to R"]}, {"root": "MOVE from SimpleType: R", "operations": ["MOV SimpleName: HystrixContextScheduler to SimpleType: R at 0"]}, {"root": "UPDATE from observer to s", "operations": ["UPD SimpleName: observer from observer to s", "UPD SimpleName: observer from observer to s", "UPD SimpleName: tl from tl to s", "UPD SimpleName: observer from observer to s", "UPD SimpleName: observer from observer to s", "UPD SimpleName: child from child to s"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from clear to onCompleted", "operations": ["UPD SimpleName: clear from clear to onCompleted"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: s to MethodInvocation at 0"]}, {"root": "INS SimpleName: original to MethodInvocation at 0", "operations": ["INS SimpleName: original to MethodInvocation at 0"]}, {"root": "UPDATE from getFallbackOrThrowException to run", "operations": ["UPD SimpleName: getFallbackOrThrowException from getFallbackOrThrowException to run"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: timeoutTimer to MethodInvocation at 0"]}, {"root": "UPDATE from o to onError", "operations": ["UPD SimpleName: o from o to onError"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cache to MethodInvocation at 2", "MOV SimpleName: o to MethodInvocation at 1"]}, {"root": "UPDATE from cache to e", "operations": ["UPD SimpleName: cache from cache to e"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.lang.ref.Reference", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.lang.ref.SoftReference"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.RejectedExecutionException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.TimeoutException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: rx.Observable.Operator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: rx.functions.Action0", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.functions.Func1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.subscriptions.CompositeSubscription"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.subscriptions.Subscriptions"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.hystrix.exception.HystrixRuntimeException.FailureType", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.hystrix.util.ExceptionThreadingUtility"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.hystrix.util.HystrixTimer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.hystrix.util.HystrixTimer.TimerListener", "DEL ImportDeclaration"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: metrics", "DEL MethodInvocation", "DEL SimpleName: markResponseFromCache"]}, {"root": "DEL QualifiedName: HystrixEventType.SHORT_CIRCUITED", "operations": ["DEL QualifiedName: HystrixEventType.SHORT_CIRCUITED"]}, {"root": "DEL QualifiedName: FailureType.SHORTCIRCUIT", "operations": ["DEL QualifiedName: FailureType.SHORTCIRCUIT"]}, {"root": "DEL StringLiteral: \"short-circuited\"", "operations": ["DEL StringLiteral: \"short-circuited\""]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: Exception", "DEL SimpleName: e", "DEL SimpleType: Exception", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleName: metrics", "DEL SimpleName: subscribeWithThreadIsolation", "DEL SimpleName: observer", "DEL ExpressionStatement", "DEL Block", "DEL PrefixExpression: !", "DEL SimpleName: markShortCircuited", "DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: properties", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SimpleName: executionHook", "DEL SimpleName: onError", "DEL Block", "DEL TryStatement", "DEL MethodInvocation", "DEL SimpleName: observer", "DEL SimpleName: get", "DEL SimpleName: _this", "DEL SimpleName: subscribeWithSemaphoreIsolation", "DEL MethodInvocation", "DEL SimpleName: executionIsolationStrategy", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL IfStatement", "DEL SimpleName: equals", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: onStart", "DEL QualifiedName: ExecutionIsolationStrategy.THREAD", "DEL SimpleName: RuntimeException", "DEL SimpleName: System", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL SimpleName: circuitBreaker", "DEL TryStatement", "DEL MethodInvocation", "DEL SimpleName: recordExecutedCommand", "DEL SimpleName: observer", "DEL SimpleName: e", "DEL Block", "DEL SimpleType: RuntimeException", "DEL SimpleName: invocationStartTime", "DEL SimpleName: allowRequest", "DEL CatchClause", "DEL SimpleName: currentTimeMillis", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Assignment: =", "operations": ["DEL ThisExpression", "DEL SimpleName: CachedObservableOriginal", "DEL SimpleType: R", "DEL ClassInstanceCreation", "DEL SimpleName: o", "DEL ParameterizedType: CachedObservableOriginal<R>", "DEL SimpleName: R", "DEL Assignment: =", "DEL SimpleType: CachedObservableOriginal", "DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ObservableCommand", "DEL SimpleName: o", "DEL ClassInstanceCreation", "DEL SimpleName: ObservableCommand", "DEL SimpleType: R", "DEL SimpleName: R", "DEL ParameterizedType: ObservableCommand<R>", "DEL ThisExpression"]}, {"root": "DEL SimpleName: TimeoutOperator", "operations": ["DEL SimpleName: TimeoutOperator"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: boolean", "DEL SimpleName: isNonBlocking", "DEL Modifier: final", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: originalCommand", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: originalCommand", "DEL ThisExpression", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleName: isNonBlocking", "DEL SimpleName: isNonBlocking", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL QualifiedName: originalCommand.properties"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: tl", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: clear"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: clear", "DEL ExpressionStatement", "DEL SimpleName: tl"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: e", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: tl", "DEL SimpleName: clear", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: t"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: f", "DEL MethodInvocation", "DEL SimpleName: cancel", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: get"]}, {"root": "DEL StringLiteral: \"ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.\"", "operations": ["DEL StringLiteral: \"ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL CastExpression", "DEL Block", "DEL SimpleName: o", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Reference", "DEL MethodInvocation", "DEL SimpleName: R", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: TimeoutOperator", "DEL SimpleName: CachedObservableOriginal", "DEL SimpleName: o", "DEL SimpleName: tl", "DEL SimpleName: observeOn", "DEL ParameterizedType: CachedObservableResponse<R>", "DEL SimpleType: CachedObservableResponse", "DEL ThisExpression", "DEL SimpleName: isRequestCachingEnabled", "DEL SimpleName: fromCache", "DEL ThisExpression", "DEL ParameterizedType: Observable<R>", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL PrefixExpression: !", "DEL SimpleName: o", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL ParameterizedType: CachedObservableOriginal<R>", "DEL ClassInstanceCreation", "DEL ParameterizedType: CachedObservableResponse<R>", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL ParameterizedType: Reference<TimerListener>", "DEL SimpleName: lift", "DEL SimpleType: R", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleType: R", "DEL BooleanLiteral: true", "DEL SimpleName: properties", "DEL SimpleName: get", "DEL Assignment: =", "DEL SimpleName: o", "DEL SimpleName: tl", "DEL SimpleName: performAsyncTimeout", "DEL VariableDeclarationFragment", "DEL SimpleName: observeOn", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: o", "DEL SimpleName: Observable", "DEL SimpleName: get", "DEL SimpleName: Action0", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleType: CachedObservableResponse", "DEL IfStatement", "DEL SimpleName: R", "DEL SimpleName: requestCache", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleType: R", "DEL SimpleType: CachedObservableOriginal", "DEL SimpleName: _this", "DEL Modifier: final", "DEL StringLiteral: \"This instance can only be executed once. Please instantiate a new instance.\"", "DEL SimpleName: putIfAbsent", "DEL SimpleType: HystrixContextScheduler", "DEL SimpleName: fromCache", "DEL Block", "DEL Block", "DEL SimpleName: fromCache", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL ParameterizedType: Func1<Throwable,Observable<R>>", "DEL AnonymousClassDeclaration", "DEL QualifiedName: ExecutionIsolationStrategy.THREAD", "DEL IfStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: o", "DEL SimpleName: o", "DEL SimpleName: IllegalStateException", "DEL MethodInvocation", "DEL SimpleName: getCacheKey", "DEL SimpleName: CachedObservableOriginal", "DEL SimpleName: onErrorResumeNext", "DEL ParameterizedType: Observable<R>", "DEL SimpleName: TimerListener", "DEL SimpleName: equals", "DEL SimpleType: TimerListener", "DEL SimpleName: o", "DEL AnonymousClassDeclaration", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: isRequestCachingEnabled", "DEL Block", "DEL SimpleName: executionIsolationStrategy", "DEL MethodInvocation", "DEL SimpleName: TimeoutOperator", "DEL SimpleName: o", "DEL InfixExpression: !=", "DEL SimpleName: metrics", "DEL MethodInvocation", "DEL IfStatement", "DEL IfStatement", "DEL Block", "DEL SimpleType: CachedObservableOriginal", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: fromCache", "DEL MethodInvocation", "DEL SimpleName: observeOn", "DEL SimpleName: o", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: Func1", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: IllegalStateException", "DEL MethodInvocation", "DEL SimpleType: R", "DEL InfixExpression: !=", "DEL NullLiteral", "DEL MethodDeclaration", "DEL SimpleName: Schedulers", "DEL NullLiteral", "DEL SimpleName: R", "DEL SimpleName: CachedObservableResponse", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: TimeoutOperator<R>", "DEL ThrowStatement", "DEL ParameterizedType: CachedObservableOriginal<R>", "DEL ExpressionStatement", "DEL SimpleName: finallyDo", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: concurrencyStrategy", "DEL MethodInvocation", "DEL SimpleName: R", "DEL SimpleName: o", "DEL SimpleType: Reference", "DEL Block", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleType: Action0", "DEL SimpleName: e", "DEL PrefixExpression: !", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: error", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: fromCache", "DEL SimpleType: Observable", "DEL SimpleName: Func1", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: o", "DEL BooleanLiteral: false", "DEL SimpleName: _this", "DEL Block", "DEL Assignment: =", "DEL SimpleName: markExceptionThrown", "DEL Block", "DEL InfixExpression: !="]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: R", "DEL SimpleName: originalCommand", "DEL Modifier: final", "DEL SimpleType: R", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: re", "DEL MethodDeclaration", "DEL SimpleName: HystrixTimer", "DEL MethodInvocation", "DEL SimpleName: Subscriber", "DEL SimpleType: Reference", "DEL MethodDeclaration", "DEL SimpleName: _tl", "DEL TryStatement", "DEL Assignment: =", "DEL SimpleType: TimerListener", "DEL SimpleName: timeoutRunnable", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: _tl", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: listener", "DEL FieldDeclaration", "DEL SimpleName: SoftReference", "DEL ParameterizedType: Subscriber<R>", "DEL ClassInstanceCreation", "DEL SimpleName: re", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL Modifier: static", "DEL IfStatement", "DEL SimpleName: Subscriber", "DEL MethodDeclaration", "DEL SimpleType: CompositeSubscription", "DEL SimpleName: TimerListener", "DEL SimpleType: HystrixContextRunnable", "DEL MethodDeclaration", "DEL SimpleName: onNext", "DEL VariableDeclarationFragment", "DEL QualifiedName: originalCommand.invocationStartTime", "DEL SimpleName: tl", "DEL SimpleType: R", "DEL VariableDeclarationFragment", "DEL SimpleName: _tl", "DEL Modifier: final", "DEL ExpressionStatement", "DEL ParameterizedType: Reference<TimerListener>", "DEL ClassInstanceCreation", "DEL SimpleName: currentTimeMillis", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: R", "DEL Modifier: final", "DEL MethodInvocation", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleName: isNonBlocking", "DEL SimpleName: isNonBlocking", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL ParameterizedType: Subscriber<R>", "DEL SimpleType: HystrixContextRunnable", "DEL SimpleName: run", "DEL SimpleType: Runnable", "DEL SimpleName: System", "DEL VariableDeclarationFragment", "DEL SimpleName: set", "DEL VariableDeclarationStatement", "DEL SimpleType: TimerListener", "DEL SimpleName: markTimeout", "DEL PrimitiveType: void", "DEL QualifiedName: FailureType.TIMEOUT", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL SimpleName: TimerListener", "DEL SimpleName: onCompleted", "DEL SimpleName: CompositeSubscription", "DEL Block", "DEL SimpleType: TimerListener", "DEL SimpleName: getFallbackOrThrowException", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: TimerListener", "DEL SimpleName: R", "DEL SimpleType: R", "DEL VariableDeclarationFragment", "DEL SimpleType: Subscriber", "DEL AnonymousClassDeclaration", "DEL ExpressionStatement", "DEL ParameterizedType: Reference<TimerListener>", "DEL AnonymousClassDeclaration", "DEL SimpleName: compareAndSet", "DEL PrimitiveType: boolean", "DEL QualifiedName: TimedOutStatus.TIMED_OUT", "DEL SimpleName: Reference", "DEL Block", "DEL SimpleName: tl", "DEL MethodInvocation", "DEL SimpleName: addTimerListener", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: child", "DEL ParameterizedType: SoftReference<TimerListener>", "DEL QualifiedName: originalCommand.isCommandTimedOut", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Operator<R,R>", "DEL QualifiedName: originalCommand.timeoutTimer", "DEL SimpleName: Runnable", "DEL SimpleName: getInstance", "DEL QualifiedName: originalCommand.invocationStartTime", "DEL SimpleName: TimeoutException", "DEL SimpleName: s", "DEL QualifiedName: TimedOutStatus.NOT_EXECUTED", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: R", "DEL SimpleName: call", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: TimerListener", "DEL SimpleName: HystrixContextRunnable", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: v", "DEL SimpleName: TimeoutOperator", "DEL Block", "DEL SimpleName: Operator", "DEL VariableDeclarationStatement", "DEL SimpleType: Subscriber", "DEL SimpleName: _tl", "DEL SimpleType: R", "DEL SimpleType: TimerListener", "DEL SimpleName: originalCommand", "DEL SimpleName: child", "DEL MethodDeclaration", "DEL QualifiedName: HystrixEventType.TIMEOUT", "DEL TypeDeclaration: class", "DEL VariableDeclarationStatement", "DEL SimpleName: TimerListener", "DEL QualifiedName: originalCommand.metrics", "DEL SimpleType: CompositeSubscription", "DEL Modifier: final", "DEL SimpleName: s", "DEL SimpleName: TimerListener", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: TimeoutException", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: Reference", "DEL SimpleName: listener", "DEL SimpleName: unsubscribe", "DEL SimpleType: Operator", "DEL ExpressionStatement", "DEL SimpleName: CompositeSubscription", "DEL InfixExpression: -", "DEL SimpleName: run", "DEL SimpleType: Reference", "DEL SimpleName: tick", "DEL StringLiteral: \"timed-out\"", "DEL SimpleName: timeoutRunnable", "DEL SimpleName: listener", "DEL VariableDeclarationFragment", "DEL SimpleType: SoftReference", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: child", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL Modifier: private", "DEL SimpleName: R", "DEL ClassInstanceCreation", "DEL SimpleName: R", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: HystrixRuntimeException", "DEL SimpleName: v", "DEL SimpleName: t", "DEL AnonymousClassDeclaration", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TryStatement", "DEL SimpleName: r", "DEL SingleVariableDeclaration", "DEL SimpleName: invocationStartTime", "DEL SimpleName: Exception", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: logger", "DEL SimpleName: Hystrix", "DEL SimpleName: onNext", "DEL SimpleName: recordTotalExecutionTime", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: r", "DEL StringLiteral: \"HystrixCommand Execution Rejection by Semaphore.\"", "DEL Block", "DEL Block", "DEL SimpleName: endCurrentThreadExecutingCommand", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL WildcardType: ? super R", "DEL SimpleName: observer", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: invocationStartTime", "DEL SimpleType: Exception", "DEL ExpressionStatement", "DEL SimpleName: onComplete", "DEL SimpleName: executionSemaphore", "DEL SimpleName: Hystrix", "DEL SimpleName: getExecutionSemaphore", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: R", "DEL MethodInvocation", "DEL SimpleName: onCompleted", "DEL MethodInvocation", "DEL SimpleName: r", "DEL ExpressionStatement", "DEL SimpleName: subscribeWithSemaphoreIsolation", "DEL ParameterizedType: Subscriber<? super R>", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getCommandKey", "DEL CatchClause", "DEL SimpleName: startCurrentThreadExecutingCommand", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleType: R", "DEL SimpleName: release", "DEL SimpleType: TryableSemaphore", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: executionSemaphore", "DEL Modifier: final", "DEL SimpleName: recordTotalExecutionTime", "DEL SimpleName: markSemaphoreRejection", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Subscriber", "DEL IfStatement", "DEL StringLiteral: \"could not acquire a semaphore for execution\"", "DEL SimpleName: onCompleted", "DEL SimpleName: e", "DEL MethodInvocation", "DEL QualifiedName: FailureType.REJECTED_SEMAPHORE_EXECUTION", "DEL SimpleName: R", "DEL VariableDeclarationStatement", "DEL SimpleName: observer", "DEL SimpleName: observer", "DEL QualifiedName: HystrixEventType.SEMAPHORE_REJECTED", "DEL SimpleName: debug", "DEL MethodInvocation", "DEL SimpleName: executeCommand", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: executionHook", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: TryableSemaphore", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: tryAcquire", "DEL ExpressionStatement", "DEL SimpleName: r", "DEL SimpleName: metrics", "DEL SimpleName: executionSemaphore", "DEL SimpleName: R", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL TryStatement", "DEL SimpleName: Subscriber"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL QualifiedName: TimedOutStatus.NOT_EXECUTED", "DEL SimpleType: Subscriber", "DEL SimpleName: HystrixContextCallable", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: preTerminationWork", "DEL BooleanLiteral: false", "DEL SimpleName: _this", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: r", "DEL MethodInvocation", "DEL SimpleName: executionHook", "DEL VariableDeclarationFragment", "DEL ThrowStatement", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: getLogMessagePrefix", "DEL SimpleName: getFallbackOrThrowException", "DEL Block", "DEL SimpleType: R", "DEL ExpressionStatement", "DEL SimpleType: R", "DEL SimpleName: compareAndSet", "DEL MethodInvocation", "DEL SimpleName: onThreadStart", "DEL CatchClause", "DEL VariableDeclarationStatement", "DEL SimpleType: HystrixContextCallable", "DEL SimpleName: recordDuration", "DEL ExpressionStatement", "DEL SimpleType: Exception", "DEL SimpleType: Exception", "DEL SimpleName: r", "DEL ParameterizedType: HystrixCommand<R>", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: error", "DEL InfixExpression: +", "DEL QualifiedName: TimedOutStatus.NOT_EXECUTED", "DEL SimpleName: threadPool", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: R", "DEL SimpleType: R", "DEL MethodInvocation", "DEL SimpleName: metrics", "DEL SimpleName: getExecutor", "DEL Block", "DEL SimpleType: R", "DEL SimpleName: concurrencyStrategy", "DEL SimpleName: recordDuration", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: executeCommand", "DEL SimpleName: e", "DEL PrefixExpression: !", "DEL ClassInstanceCreation", "DEL SimpleName: RejectedExecutionException", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: _this", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: markThreadExecution", "DEL StringLiteral: \": Unexpected exception while submitting to queue.\"", "DEL MethodInvocation", "DEL SimpleName: markThreadPoolRejection", "DEL QualifiedName: FailureType.REJECTED_THREAD_EXECUTION", "DEL SimpleName: Subscriptions", "DEL SimpleName: wrapCallable", "DEL SimpleName: r", "DEL BooleanLiteral: true", "DEL SimpleName: f", "DEL WildcardType: ? super R", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Exception", "DEL TryStatement", "DEL SimpleName: invocationStartTime", "DEL SimpleName: isQueueSpaceAvailable", "DEL ExpressionStatement", "DEL SimpleType: Exception", "DEL MethodInvocation", "DEL SimpleType: HystrixCommand", "DEL NullLiteral", "DEL SimpleName: recordDuration", "DEL MethodInvocation", "DEL ParameterizedType: HystrixContextCallable<R>", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: recordDuration", "DEL SimpleName: logger", "DEL ExpressionStatement", "DEL SimpleType: R", "DEL SimpleName: executionHook", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: observer", "DEL QualifiedName: FailureType.REJECTED_THREAD_EXECUTION", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL QualifiedName: TimedOutStatus.COMPLETED", "DEL SimpleName: onError", "DEL MethodInvocation", "DEL Block", "DEL ParameterizedType: Subscriber<? super R>", "DEL SimpleName: startCurrentThreadExecutingCommand", "DEL SimpleName: recordDuration", "DEL SimpleName: onCompleted", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: RejectedExecutionException", "DEL Assignment: =", "DEL SimpleName: Action0", "DEL SimpleName: R", "DEL SimpleName: _this", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: Thread", "DEL MethodInvocation", "DEL SimpleName: observer", "DEL SimpleName: endCurrentThreadExecutingCommand", "DEL Modifier: final", "DEL SimpleName: observer", "DEL MethodInvocation", "DEL StringLiteral: \"had unexpected exception while attempting to queue for execution.\"", "DEL QualifiedName: TimedOutStatus.COMPLETED", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL StringLiteral: \"could not be queued for execution\"", "DEL ParameterizedType: Callable<R>", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: create", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Exception", "DEL ExpressionStatement", "DEL SimpleName: R", "DEL StringLiteral: \"ExecutionHook.onThreadComplete threw an exception that will be ignored.\"", "DEL SimpleName: observer", "DEL SimpleName: HystrixCommand", "DEL SimpleType: RejectedExecutionException", "DEL BooleanLiteral: true", "DEL SimpleName: Exception", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: markThreadCompletion", "DEL Block", "DEL TryStatement", "DEL SimpleName: assignCallingThread", "DEL SimpleName: onNext", "DEL SimpleName: R", "DEL SimpleType: Action0", "DEL Block", "DEL Block", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SimpleName: r", "DEL SimpleName: executionHook", "DEL SimpleName: threadPool", "DEL ThisExpression", "DEL MethodInvocation", "DEL Block", "DEL AnonymousClassDeclaration", "DEL SimpleName: e", "DEL SimpleType: Thread", "DEL SimpleName: onNext", "DEL TryStatement", "DEL SimpleName: preTerminationWork", "DEL SimpleName: recordDuration", "DEL SimpleName: callingThread", "DEL PrimitiveType: boolean", "DEL SimpleName: Hystrix", "DEL MethodInvocation", "DEL SimpleName: onNext", "DEL SimpleName: isCommandTimedOut", "DEL Block", "DEL SimpleName: Subscriber", "DEL AnonymousClassDeclaration", "DEL SimpleName: threadPool", "DEL SimpleName: preTerminationWork", "DEL ExpressionStatement", "DEL SimpleType: R", "DEL TryStatement", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: preTerminationWork", "DEL Modifier: final", "DEL PrimitiveType: boolean", "DEL SimpleName: getFallbackOrThrowException", "DEL ExpressionStatement", "DEL CatchClause", "DEL SimpleType: Exception", "DEL Block", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: Callable", "DEL SimpleType: Callable", "DEL SimpleName: add", "DEL SimpleName: Hystrix", "DEL ThrowStatement", "DEL Block", "DEL SimpleName: r", "DEL SimpleName: call", "DEL SimpleName: getCommandKey", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: onComplete", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL QualifiedName: HystrixEventType.THREAD_POOL_REJECTED", "DEL SimpleName: R", "DEL Block", "DEL SimpleName: recordTotalExecutionTime", "DEL SimpleName: onCompleted", "DEL SimpleName: compareAndSet", "DEL StringLiteral: \"Rejected command because thread-pool queueSize is at rejection threshold.\"", "DEL VariableDeclarationStatement", "DEL CatchClause", "DEL SimpleName: ExceptionThreadingUtility", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL SimpleName: R", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: RejectedExecutionException", "DEL SingleVariableDeclaration", "DEL SimpleName: observer", "DEL SimpleName: submit", "DEL SimpleName: callingThread", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: e", "DEL MethodDeclaration", "DEL SimpleName: isCommandTimedOut", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: threadPool", "DEL MethodInvocation", "DEL SimpleName: onCompleted", "DEL SimpleName: observer", "DEL SimpleName: recordDuration", "DEL QualifiedName: HystrixEventType.THREAD_POOL_REJECTED"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Assignment: =", "DEL QualifiedName: HystrixEventType.FAILURE", "DEL SimpleType: Exception", "DEL TryStatement", "DEL SimpleName: hookException", "DEL MethodInvocation", "DEL SimpleType: Exception", "DEL SimpleName: onRunSuccess", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: currentTimeMillis", "DEL Block", "DEL CatchClause", "DEL SimpleName: markSuccess", "DEL SimpleName: t", "DEL QualifiedName: FailureType.COMMAND_EXCEPTION", "DEL SimpleType: HystrixBadRequestException", "DEL TagElement: @return", "DEL ExpressionStatement", "DEL SimpleName: executionResult", "DEL SimpleName: response", "DEL SimpleName: executionHook", "DEL SimpleName: executionResult", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL PrimitiveType: int", "DEL SimpleType: Exception", "DEL Block", "DEL SimpleName: currentTimeMillis", "DEL SimpleType: HystrixBadRequestException", "DEL ExpressionStatement", "DEL IfStatement", "DEL NullLiteral", "DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: executionHook", "DEL Block", "DEL QualifiedName: TimedOutStatus.TIMED_OUT", "DEL SimpleName: circuitBreaker", "DEL MethodInvocation", "DEL SimpleName: run", "DEL CatchClause", "DEL IfStatement", "DEL SimpleName: HystrixBadRequestException", "DEL MethodInvocation", "DEL SimpleName: isCommandTimedOut", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Error executing HystrixCommand.run(). Proceeding to fallback logic ...\"", "DEL SimpleName: incrementConcurrentExecutionCount", "DEL Assignment: =", "DEL SimpleType: Exception", "DEL TagElement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL IfStatement", "DEL SimpleName: isCommandTimedOut", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: eventNotifier", "DEL MethodInvocation", "DEL SimpleName: HystrixBadRequestException", "DEL SimpleName: e", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: executionHook", "DEL SimpleType: R", "DEL PrimitiveType: long", "DEL TextElement:  R", "DEL SimpleName: executionIsolationStrategy", "DEL InstanceofExpression", "DEL TryStatement", "DEL ExpressionStatement", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL ThisExpression", "DEL SimpleName: startTime", "DEL SimpleName: onRunError", "DEL SimpleName: set", "DEL SimpleName: t", "DEL ThrowStatement", "DEL SimpleName: duration", "DEL SimpleName: metrics", "DEL SimpleName: onRunError", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleName: System", "DEL SimpleName: Exception", "DEL MethodInvocation", "DEL Block", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL SimpleType: HystrixBadRequestException", "DEL CatchClause", "DEL SimpleType: Exception", "DEL SimpleName: getFallbackOrThrowException", "DEL Block", "DEL Block", "DEL CastExpression", "DEL SimpleName: Exception", "DEL SimpleType: R", "DEL StringLiteral: \"failed\"", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TextElement: This does NOT use the circuit-breaker to determine if the command should be executed, use <code>execute()</code> for that. This method will ALWAYS attempt to execute the method.", "DEL InfixExpression: ==", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: properties", "DEL BooleanLiteral: true", "DEL MethodDeclaration", "DEL InstanceofExpression", "DEL Block", "DEL SimpleName: debug", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: metrics", "DEL MethodInvocation", "DEL SimpleName: isExecutionComplete", "DEL MethodInvocation", "DEL SimpleName: executionResult", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: setException", "DEL MethodInvocation", "DEL StringLiteral: \"Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...\"", "DEL SimpleName: R", "DEL ReturnStatement", "DEL SimpleName: duration", "DEL SimpleName: executeCommand", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: duration", "DEL SimpleName: e", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL TryStatement", "DEL SimpleName: get", "DEL SimpleName: executionResult", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL VariableDeclarationStatement", "DEL SimpleName: System", "DEL MethodInvocation", "DEL SimpleName: decorated", "DEL StringLiteral: \"Error calling ExecutionHook.endRunFailure\"", "DEL SimpleName: logger", "DEL SimpleName: e", "DEL ReturnStatement", "DEL SimpleName: markCommandExecution", "DEL SimpleName: R", "DEL SimpleName: startTime", "DEL SimpleName: t", "DEL ThisExpression", "DEL SimpleName: hookException", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: markFailure", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: decorated", "DEL MethodInvocation", "DEL SimpleName: markSuccess", "DEL QualifiedName: executionResult.events", "DEL SimpleName: get", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL StringLiteral: \"Error calling ExecutionHook.onRunError\"", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL CatchClause", "DEL SimpleName: response", "DEL NullLiteral", "DEL SimpleName: startTime", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL InfixExpression: -", "DEL SimpleName: logger", "DEL ThisExpression", "DEL SimpleName: metrics", "DEL SimpleName: getCommandKey", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL TextElement: Executes the command and marks success/failure on the circuit-breaker and calls <code>getFallback</code> if a failure occurs.", "DEL SimpleName: Exception", "DEL Block", "DEL PrimitiveType: long", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: Exception", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SimpleName: addEvents", "DEL SimpleName: hookException", "DEL CastExpression", "DEL Block", "DEL TextElement: <p>", "DEL SimpleName: metrics", "DEL SimpleName: e", "DEL SimpleName: System", "DEL MethodInvocation", "DEL SimpleName: HystrixBadRequestException", "DEL Block", "DEL SimpleName: currentTimeMillis", "DEL QualifiedName: TimedOutStatus.TIMED_OUT", "DEL StringLiteral: \"Throwable caught while executing.\"", "DEL SimpleName: warn", "DEL SimpleName: Exception", "DEL Block", "DEL SimpleName: hookException", "DEL SimpleName: duration", "DEL MethodInvocation", "DEL Assignment: =", "DEL QualifiedName: HystrixEventType.SUCCESS", "DEL SimpleName: addCommandExecutionTime", "DEL MethodInvocation", "DEL SimpleType: Exception", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: decorated"]}, {"root": "DEL Javadoc", "operations": ["DEL SimpleName: HystrixException", "DEL TagElement", "DEL TextElement: If something in the <code>getFallback()</code> implementation is latent (such as a network call) then the semaphore will cause us to start rejecting requests rather than allowing potentially", "DEL TextElement: Execute <code>getFallback()</code> within protection of a semaphore that limits number of concurrent executions.", "DEL TagElement: @throws", "DEL SimpleName: UnsupportedOperationException", "DEL TextElement: if getFallback() not implemented", "DEL Javadoc", "DEL TextElement:  K", "DEL TextElement: Fallback implementations shouldn't perform anything that can be blocking, but we protect against it anyways in case someone doesn't abide by the contract.", "DEL TextElement: if getFallback() fails (throws an Exception) or is rejected by the semaphore", "DEL TextElement: <p>", "DEL TextElement: <p>", "DEL TextElement: all threads to pile up and block.", "DEL TagElement: @throws", "DEL TagElement: @return"]}, {"root": "DEL SimpleName: executionHook", "operations": ["DEL SimpleName: executionHook"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleType: R", "operations": ["DEL SimpleType: R", "DEL SimpleName: R"]}, {"root": "DEL SimpleName: getFallbackWithProtection", "operations": ["DEL SimpleName: getFallbackWithProtection"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL SimpleType: TryableSemaphore", "DEL SimpleName: RuntimeException", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL SimpleName: getLogMessagePrefix", "DEL MethodInvocation", "DEL SimpleName: HystrixRuntimeException", "DEL SimpleName: TryableSemaphore", "DEL SimpleType: HystrixRuntimeException", "DEL SimpleType: RuntimeException", "DEL SimpleType: RuntimeException", "DEL Block", "DEL SimpleName: getClass", "DEL TryStatement", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL InstanceofExpression", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"HystrixCommand Fallback Rejection.\"", "DEL SimpleName: warn", "DEL StringLiteral: \"ExecutionHook.onFallbackError returned an exception that was not an instance of RuntimeException so will be ignored.\"", "DEL SimpleName: fallbackSemaphore", "DEL SimpleName: onFallbackStart", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: tryAcquire", "DEL SimpleName: decorated", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: decorated", "DEL MethodInvocation", "DEL ThisExpression", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: RuntimeException", "DEL ThrowStatement", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: logger", "DEL SimpleName: logger", "DEL SimpleName: debug", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: executionHook", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleName: executionHook", "DEL MethodInvocation", "DEL QualifiedName: FailureType.REJECTED_SEMAPHORE_FALLBACK", "DEL Block", "DEL SimpleName: fallbackSemaphore", "DEL Block", "DEL SimpleName: metrics", "DEL InfixExpression: +", "DEL SimpleName: release", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleType: Exception", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: getFallbackSemaphore", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: fallbackSemaphore", "DEL CastExpression", "DEL CatchClause", "DEL NullLiteral", "DEL StringLiteral: \" fallback execution rejected.\"", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: decorated", "DEL SimpleName: markFallbackRejection", "DEL IfStatement", "DEL Block", "DEL SimpleName: onFallbackError", "DEL SimpleName: Exception", "DEL SimpleName: decorated", "DEL ExpressionStatement"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL SimpleName: HystrixRuntimeException", "DEL TagElement: @throws"]}, {"root": "DEL SimpleType: R", "operations": ["DEL SimpleName: R", "DEL SimpleType: R"]}, {"root": "DEL SimpleName: getFallbackOrThrowException", "operations": ["DEL SimpleName: getFallbackOrThrowException"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: eventType"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: failureType", "DEL SimpleName: FailureType", "DEL SingleVariableDeclaration", "DEL SimpleType: FailureType"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: message", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: eventType", "operations": ["DEL SimpleName: eventType"]}, {"root": "DEL SimpleName: failureType", "operations": ["DEL SimpleName: failureType"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: executionHook", "operations": ["DEL SimpleName: executionHook"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL StringLiteral: \"Error calling ExecutionHook.onError\"", "operations": ["DEL StringLiteral: \"Error calling ExecutionHook.onError\""]}, {"root": "DEL SimpleName: hookException", "operations": ["DEL SimpleName: hookException"]}, {"root": "DEL Assignment: =", "operations": ["DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: executionHook", "DEL ThisExpression", "DEL SimpleName: e"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL StringLiteral: \" \"", "DEL MethodInvocation", "DEL SimpleName: executionHook", "DEL ExpressionStatement", "DEL SimpleName: getFallbackOrThrowException", "DEL Block", "DEL Block", "DEL SimpleName: message", "DEL SimpleName: e", "DEL SimpleName: HystrixRuntimeException", "DEL SimpleName: fe", "DEL SimpleName: fe", "DEL TryStatement", "DEL SimpleName: getFallbackWithProtection", "DEL SimpleType: FailureType", "DEL BooleanLiteral: true", "DEL Assignment: =", "DEL SimpleName: executionResult", "DEL SimpleName: logger", "DEL MethodInvocation", "DEL SimpleName: metrics", "DEL SimpleName: executionResult", "DEL SimpleName: failureType", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: e", "DEL SimpleName: set", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: hookException", "DEL MethodInvocation", "DEL SimpleName: fe", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL InfixExpression: +", "DEL TryStatement", "DEL SimpleName: executionResult", "DEL QualifiedName: HystrixEventType.FALLBACK_FAILURE", "DEL Assignment: =", "DEL SimpleType: HystrixRuntimeException", "DEL Block", "DEL SimpleName: failureType", "DEL Block", "DEL SimpleName: getClass", "DEL SimpleName: warn", "DEL CatchClause", "DEL StringLiteral: \"Error calling ExecutionHook.onError\"", "DEL SimpleName: Exception", "DEL SingleVariableDeclaration", "DEL TryStatement", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL QualifiedName: HystrixEventType.FALLBACK_SUCCESS", "DEL SimpleName: addEvents", "DEL TryStatement", "DEL CatchClause", "DEL SimpleName: executionResult", "DEL SimpleName: logger", "DEL Block", "DEL SimpleName: R", "DEL ThisExpression", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getClass", "DEL MethodInvocation", "DEL SimpleType: R", "DEL SimpleName: warn", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: message", "DEL TryStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: Exception", "DEL IfStatement", "DEL SimpleName: debug", "DEL ThisExpression", "DEL SimpleName: markFallbackSuccess", "DEL SimpleName: executionHook", "DEL SimpleName: fe", "DEL MethodInvocation", "DEL SimpleName: failureType", "DEL SimpleName: failureType", "DEL SimpleName: getLogMessagePrefix", "DEL ExpressionStatement", "DEL SimpleName: eventType", "DEL SimpleName: e", "DEL Javadoc", "DEL StringLiteral: \"No fallback for HystrixCommand. \"", "DEL StringLiteral: \" and fallback disabled.\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: addEvents", "DEL SimpleName: get", "DEL SimpleName: addEvents", "DEL SingleVariableDeclaration", "DEL SimpleName: logger", "DEL SimpleName: getLogMessagePrefix", "DEL SimpleName: debug", "DEL SimpleName: e", "DEL SimpleType: HystrixEventType", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: logger", "DEL SimpleName: markFallbackFailure", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: Exception", "DEL Block", "DEL SimpleType: HystrixRuntimeException", "DEL SimpleName: message", "DEL StringLiteral: \" \"", "DEL SimpleName: getLogMessagePrefix", "DEL SimpleName: metrics", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: e", "DEL SimpleName: FailureType", "DEL SimpleType: Exception", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL SimpleName: Exception", "DEL ExpressionStatement", "DEL SimpleName: properties", "DEL MethodInvocation", "DEL SimpleName: hookException", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleName: onError", "DEL SimpleName: eventType", "DEL SimpleName: getClass", "DEL SimpleName: HystrixRuntimeException", "DEL SimpleName: failureType", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL CatchClause", "DEL Block", "DEL SimpleName: debug", "DEL ExpressionStatement", "DEL SimpleName: hookException", "DEL SimpleName: isExecutionComplete", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL StringLiteral: \" and failed retrieving fallback.\"", "DEL SimpleType: Exception", "DEL Assignment: =", "DEL SimpleName: executionResult", "DEL SimpleName: onError", "DEL ExpressionStatement", "DEL StringLiteral: \" and fallback retrieval failed.\"", "DEL SimpleName: R", "DEL StringLiteral: \"HystrixCommand execution \"", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: HystrixRuntimeException", "DEL SimpleName: executionResult", "DEL SimpleName: hookException", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: HystrixRuntimeException", "DEL Block", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: failureType", "DEL SimpleName: fallbackEnabled", "DEL SimpleName: failureType", "DEL Block", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: e", "DEL ThisExpression", "DEL Block", "DEL SimpleName: fallback", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: executionResult", "DEL ThrowStatement", "DEL SimpleName: Exception", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: executionResult", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: addEvents", "DEL SimpleName: name", "DEL SimpleName: HystrixEventType", "DEL SimpleName: fe", "DEL SimpleName: logger", "DEL StringLiteral: \" \"", "DEL SimpleName: eventType", "DEL Block", "DEL SimpleType: R", "DEL StringLiteral: \"Fallback disabled for HystrixCommand so will throw HystrixRuntimeException. \"", "DEL MethodInvocation", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: fe", "DEL MethodInvocation", "DEL StringLiteral: \" and no fallback available.\"", "DEL TagElement: @throws", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: Exception", "DEL SimpleName: message", "DEL StringLiteral: \"Error calling ExecutionHook.onError\"", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: hookException", "DEL SimpleType: HystrixRuntimeException", "DEL MethodInvocation"]}]}}, {"HystrixCommand_diff": {"operations": ["Update QualifiedName: java.util.concurrent.Callable(18) to java.util.List", "Insert FieldDeclaration(96) into TypeDeclaration: class(1380) at 9", "Insert MethodDeclaration(839) into TypeDeclaration: class(1380) at 18", "Insert TypeDeclaration: class(1033) into TypeDeclaration: class(1380) at 19", "Insert MethodDeclaration(1043) into TypeDeclaration: class(1380) at 20", "Move MethodDeclaration(1268) into TypeDeclaration: class(1380) at 21", "Insert MethodDeclaration(1063) into TypeDeclaration: class(1380) at 22", "Insert MethodDeclaration(1073) into TypeDeclaration: class(1380) at 23", "Insert MethodDeclaration(1083) into TypeDeclaration: class(1380) at 24", "Insert MethodDeclaration(1092) into TypeDeclaration: class(1380) at 25", "Insert MethodDeclaration(1101) into TypeDeclaration: class(1380) at 26", "Insert MethodDeclaration(1110) into TypeDeclaration: class(1380) at 27", "Insert MethodDeclaration(1119) into TypeDeclaration: class(1380) at 28", "Insert MethodDeclaration(1128) into TypeDeclaration: class(1380) at 29", "Insert MethodDeclaration(1138) into TypeDeclaration: class(1380) at 30", "Insert MethodDeclaration(1147) into TypeDeclaration: class(1380) at 31", "Insert MethodDeclaration(1156) into TypeDeclaration: class(1380) at 32", "Insert MethodDeclaration(1165) into TypeDeclaration: class(1380) at 33", "Insert MethodDeclaration(1174) into TypeDeclaration: class(1380) at 34", "Insert MethodDeclaration(1183) into TypeDeclaration: class(1380) at 35", "Insert MethodDeclaration(1196) into TypeDeclaration: class(1380) at 36", "Insert MethodDeclaration(1205) into TypeDeclaration: class(1380) at 37", "Insert MethodDeclaration(1220) into TypeDeclaration: class(1380) at 38", "Insert MethodDeclaration(1232) into TypeDeclaration: class(1380) at 39", "Insert MethodDeclaration(1247) into TypeDeclaration: class(1380) at 40", "Insert MethodDeclaration(1261) into TypeDeclaration: class(1380) at 41", "Insert MethodDeclaration(1272) into TypeDeclaration: class(1380) at 42", "Insert MethodDeclaration(1289) into TypeDeclaration: class(1380) at 43", "Insert MethodDeclaration(1306) into TypeDeclaration: class(1380) at 44", "Insert MethodDeclaration(1318) into TypeDeclaration: class(1380) at 45", "Insert MethodDeclaration(1353) into TypeDeclaration: class(1380) at 48", "Insert MethodDeclaration(1364) into TypeDeclaration: class(1380) at 49", "Insert MethodDeclaration(1379) into TypeDeclaration: class(1380) at 50", "Insert Modifier: private(87) into FieldDeclaration(96) at 0", "Insert Modifier: final(88) into FieldDeclaration(96) at 1", "Insert ParameterizedType: HystrixCommandFromObservableCommand<R>(93) into FieldDeclaration(96) at 2", "Insert VariableDeclarationFragment(95) into FieldDeclaration(96) at 3", "Move Modifier: protected(822) into MethodDeclaration(839) at 0", "Move ParameterizedType: ObservableCommand<R>(827) into MethodDeclaration(839) at 1", "Move SimpleName: toObservable(828) into MethodDeclaration(839) at 2", "Move SingleVariableDeclaration(832) into MethodDeclaration(839) at 3", "Move SingleVariableDeclaration(835) into MethodDeclaration(839) at 4", "Insert Block(838) into MethodDeclaration(839) at 5", "Insert Modifier: static(840) into TypeDeclaration: class(1033) at 0", "Insert SimpleName: HystrixCommandFromObservableCommand(841) into TypeDeclaration: class(1033) at 1", "Move TypeParameter(1219) into TypeDeclaration: class(1033) at 2", "Insert ParameterizedType: HystrixObservableCommand<R>(848) into TypeDeclaration: class(1033) at 3", "Insert FieldDeclaration(858) into TypeDeclaration: class(1033) at 4", "Insert MethodDeclaration(888) into TypeDeclaration: class(1033) at 5", "Insert MethodDeclaration(898) into TypeDeclaration: class(1033) at 6", "Insert MethodDeclaration(959) into TypeDeclaration: class(1033) at 7", "Insert MethodDeclaration(1020) into TypeDeclaration: class(1033) at 8", "Insert MethodDeclaration(1032) into TypeDeclaration: class(1033) at 9", "Insert Modifier: public(1034) into MethodDeclaration(1043) at 0", "Insert SimpleType: HystrixCommandGroupKey(1036) into MethodDeclaration(1043) at 1", "Insert SimpleName: getCommandGroup(1037) into MethodDeclaration(1043) at 2", "Insert Block(1042) into MethodDeclaration(1043) at 3", "Insert SimpleType: HystrixCommandKey(1046) into MethodDeclaration(1053) at 1", "Insert SimpleName: getCommandKey(1047) into MethodDeclaration(1053) at 2", "Move Modifier: public(1271) into MethodDeclaration(1063) at 0", "Insert SimpleType: HystrixThreadPoolKey(1056) into MethodDeclaration(1063) at 1", "Insert SimpleName: getThreadPoolKey(1057) into MethodDeclaration(1063) at 2", "Insert Block(1062) into MethodDeclaration(1063) at 3", "Move Modifier: public(1306) into MethodDeclaration(1073) at 0", "Insert SimpleType: HystrixCommandMetrics(1066) into MethodDeclaration(1073) at 1", "Insert SimpleName: getMetrics(1067) into MethodDeclaration(1073) at 2", "Insert Block(1072) into MethodDeclaration(1073) at 3", "Move Modifier: public(1359) into MethodDeclaration(1083) at 0", "Insert SimpleType: HystrixCommandProperties(1076) into MethodDeclaration(1083) at 1", "Insert SimpleName: getProperties(1077) into MethodDeclaration(1083) at 2", "Insert Block(1082) into MethodDeclaration(1083) at 3", "Move Modifier: public(1395) into MethodDeclaration(1092) at 0", "Update PrimitiveType: int(1396) to boolean", "Move PrimitiveType: int(1396) into MethodDeclaration(1092) at 1", "Update SimpleName: getIntervalTimeInMilliseconds(1397) to isCircuitBreakerOpen", "Move SimpleName: getIntervalTimeInMilliseconds(1397) into MethodDeclaration(1092) at 2", "Move Block(1404) into MethodDeclaration(1092) at 3", "Move Modifier: public(1465) into MethodDeclaration(1101) at 0", "Update PrimitiveType: void(1466) to boolean", "Move PrimitiveType: void(1466) into MethodDeclaration(1101) at 1", "Update SimpleName: onCompleted(1467) to isExecutionComplete", "Move SimpleName: onCompleted(1467) into MethodDeclaration(1101) at 2", "Move Block(1476) into MethodDeclaration(1101) at 3", "Move Modifier: public(1480) into MethodDeclaration(1110) at 0", "Update PrimitiveType: void(1481) to boolean", "Move PrimitiveType: void(1481) into MethodDeclaration(1110) at 1", "Update SimpleName: onError(1482) to isExecutedInThread", "Move SimpleName: onError(1482) into MethodDeclaration(1110) at 2", "Move Block(1496) into MethodDeclaration(1110) at 3", "Move Modifier: public(1500) into MethodDeclaration(1119) at 0", "Update PrimitiveType: void(1501) to boolean", "Move PrimitiveType: void(1501) into MethodDeclaration(1119) at 1", "Update SimpleName: onNext(1502) to isSuccessfulExecution", "Move SimpleName: onNext(1502) into MethodDeclaration(1119) at 2", "Move Block(1516) into MethodDeclaration(1119) at 3", "Update Modifier: private(1524) to public", "Move Modifier: private(1524) into MethodDeclaration(1128) at 0", "Update PrimitiveType: void(1525) to boolean", "Move PrimitiveType: void(1525) into MethodDeclaration(1128) at 1", "Insert SimpleName: isFailedExecution(1122) into MethodDeclaration(1128) at 2", "Insert Block(1127) into MethodDeclaration(1128) at 3", "Insert Modifier: public(1129) into MethodDeclaration(1138) at 0", "Move SimpleType: Throwable(1049) into MethodDeclaration(1138) at 1", "Insert SimpleName: getFailedExecutionException(1132) into MethodDeclaration(1138) at 2", "Insert Block(1137) into MethodDeclaration(1138) at 3", "Insert Modifier: public(1139) into MethodDeclaration(1147) at 0", "Insert PrimitiveType: boolean(1140) into MethodDeclaration(1147) at 1", "Insert SimpleName: isResponseFromFallback(1141) into MethodDeclaration(1147) at 2", "Insert Block(1146) into MethodDeclaration(1147) at 3", "Update Modifier: private(1636) to public", "Move Modifier: private(1636) into MethodDeclaration(1156) at 0", "Update PrimitiveType: void(1637) to boolean", "Move PrimitiveType: void(1637) into MethodDeclaration(1156) at 1", "Update SimpleName: subscribeWithThreadIsolation(1638) to isResponseTimedOut", "Move SimpleName: subscribeWithThreadIsolation(1638) into MethodDeclaration(1156) at 2", "Insert Block(1155) into MethodDeclaration(1156) at 3", "Insert Modifier: public(1157) into MethodDeclaration(1165) at 0", "Insert PrimitiveType: boolean(1158) into MethodDeclaration(1165) at 1", "Insert SimpleName: isResponseShortCircuited(1159) into MethodDeclaration(1165) at 2", "Insert Block(1164) into MethodDeclaration(1165) at 3", "Move Modifier: public(1708) into MethodDeclaration(1174) at 0", "Insert PrimitiveType: boolean(1167) into MethodDeclaration(1174) at 1", "Insert SimpleName: isResponseFromCache(1168) into MethodDeclaration(1174) at 2", "Insert Block(1173) into MethodDeclaration(1174) at 3", "Update Modifier: private(1822) to public", "Move Modifier: private(1822) into MethodDeclaration(1183) at 0", "Insert PrimitiveType: boolean(1176) into MethodDeclaration(1183) at 1", "Insert SimpleName: isResponseRejected(1177) into MethodDeclaration(1183) at 2", "Insert Block(1182) into MethodDeclaration(1183) at 3", "Insert Modifier: public(1184) into MethodDeclaration(1196) at 0", "Insert ParameterizedType: List<HystrixEventType>(1189) into MethodDeclaration(1196) at 1", "Insert SimpleName: getExecutionEvents(1190) into MethodDeclaration(1196) at 2", "Insert Block(1195) into MethodDeclaration(1196) at 3", "Move Modifier: public(1875) into MethodDeclaration(1205) at 0", "Update PrimitiveType: void(1876) to int", "Move PrimitiveType: void(1876) into MethodDeclaration(1205) at 1", "Update SimpleName: call(1877) to getExecutionTimeInMilliseconds", "Move SimpleName: call(1877) into MethodDeclaration(1205) at 2", "Move Block(1887) into MethodDeclaration(1205) at 3", "Move MarkerAnnotation(1111) into MethodDeclaration(1220) at 0", "Insert Modifier: public(1208) into MethodDeclaration(1220) at 1", "Move ParameterizedType: Future<R>(1688) into MethodDeclaration(1220) at 2", "Insert SimpleName: queue(1214) into MethodDeclaration(1220) at 3", "Insert Block(1219) into MethodDeclaration(1220) at 4", "Insert MarkerAnnotation(1222) into MethodDeclaration(1232) at 0", "Insert Modifier: public(1223) into MethodDeclaration(1232) at 1", "Move SimpleType: R(1225) into MethodDeclaration(1232) at 2", "Insert SimpleName: execute(1226) into MethodDeclaration(1232) at 3", "Insert Block(1231) into MethodDeclaration(1232) at 4", "Insert MarkerAnnotation(1234) into MethodDeclaration(1247) at 0", "Update Modifier: private(1958) to public", "Move Modifier: private(1958) into MethodDeclaration(1247) at 1", "Move ParameterizedType: Observable<R>(1161) into MethodDeclaration(1247) at 2", "Insert SimpleName: observe(1241) into MethodDeclaration(1247) at 3", "Insert Block(1246) into MethodDeclaration(1247) at 4", "Insert MarkerAnnotation(1249) into MethodDeclaration(1261) at 0", "Insert PrimitiveType: void(1250) into MethodDeclaration(1261) at 1", "Insert SimpleName: markAsCollapsedCommand(1251) into MethodDeclaration(1261) at 2", "Insert SingleVariableDeclaration(1254) into MethodDeclaration(1261) at 3", "Insert Block(1260) into MethodDeclaration(1261) at 4", "Move MarkerAnnotation(1874) into MethodDeclaration(1272) at 0", "Insert SimpleType: HystrixCircuitBreaker(1265) into MethodDeclaration(1272) at 1", "Insert SimpleName: getCircuitBreaker(1266) into MethodDeclaration(1272) at 2", "Insert Block(1271) into MethodDeclaration(1272) at 3", "Move MarkerAnnotation(1270) into MethodDeclaration(1289) at 0", "Insert Modifier: protected(1275) into MethodDeclaration(1289) at 1", "Move SimpleType: Exception(2111) into MethodDeclaration(1289) at 2", "Insert SimpleName: getExceptionFromThrowable(1278) into MethodDeclaration(1289) at 3", "Move SingleVariableDeclaration(2102) into MethodDeclaration(1289) at 4", "Insert Block(1288) into MethodDeclaration(1289) at 5", "Move MarkerAnnotation(1707) into MethodDeclaration(1306) at 0", "Insert Modifier: protected(1292) into MethodDeclaration(1306) at 1", "Move SimpleType: RuntimeException(2272) into MethodDeclaration(1306) at 2", "Insert SimpleName: decomposeException(1295) into MethodDeclaration(1306) at 3", "Move SingleVariableDeclaration(2378) into MethodDeclaration(1306) at 4", "Insert Block(1305) into MethodDeclaration(1306) at 5", "Move MarkerAnnotation(1305) into MethodDeclaration(1318) at 0", "Insert Modifier: protected(1309) into MethodDeclaration(1318) at 1", "Insert SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1311) into MethodDeclaration(1318) at 2", "Insert SimpleName: getExecutionSemaphore(1312) into MethodDeclaration(1318) at 3", "Insert Block(1317) into MethodDeclaration(1318) at 4", "Move MarkerAnnotation(1499) into MethodDeclaration(1330) at 0", "Update Modifier: private(2229) to protected", "Insert SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1323) into MethodDeclaration(1330) at 2", "Insert SimpleName: getFallbackSemaphore(1324) into MethodDeclaration(1330) at 3", "Insert Block(1329) into MethodDeclaration(1330) at 4", "Move MarkerAnnotation(1479) into MethodDeclaration(1342) at 0", "Update Modifier: private(2331) to protected", "Move SimpleType: String(2344) into MethodDeclaration(1342) at 3", "Insert SimpleName: getLogMessagePrefix(1336) into MethodDeclaration(1342) at 3", "Move MarkerAnnotation(1464) into MethodDeclaration(1353) at 0", "Update Modifier: private(2359) to protected", "Move Modifier: private(2359) into MethodDeclaration(1353) at 1", "Insert PrimitiveType: boolean(1346) into MethodDeclaration(1353) at 2", "Insert SimpleName: isRequestCachingEnabled(1347) into MethodDeclaration(1353) at 3", "Insert Block(1352) into MethodDeclaration(1353) at 4", "Move MarkerAnnotation(1358) into MethodDeclaration(1364) at 0", "Insert Modifier: protected(1356) into MethodDeclaration(1364) at 1", "Insert PrimitiveType: void(1357) into MethodDeclaration(1364) at 2", "Insert SimpleName: recordExecutedCommand(1358) into MethodDeclaration(1364) at 3", "Insert Block(1363) into MethodDeclaration(1364) at 4", "Move MarkerAnnotation(1394) into MethodDeclaration(1379) at 0", "Insert Modifier: protected(1367) into MethodDeclaration(1379) at 1", "Insert PrimitiveType: void(1368) into MethodDeclaration(1379) at 2", "Insert SimpleName: recordTotalExecutionTime(1369) into MethodDeclaration(1379) at 3", "Insert SingleVariableDeclaration(1372) into MethodDeclaration(1379) at 4", "Insert Block(1378) into MethodDeclaration(1379) at 5", "Update TextElement: This command is essentially a blocking command but provides an Observable facade if used with  observe()(80) to This command is essentially a blocking command but provides an Observable facade if used with observe()", "Insert SimpleType: HystrixCommandFromObservableCommand(90) into ParameterizedType: HystrixCommandFromObservableCommand<R>(93) at 0", "Move SimpleType: R(1033) into ParameterizedType: HystrixCommandFromObservableCommand<R>(93) at 1", "Insert SimpleName: observableCommand(94) into VariableDeclarationFragment(95) at 0", "Insert ExpressionStatement(297) into Block(298) at 1", "Insert Modifier: final(819) into SingleVariableDeclaration(823) at 0", "Insert ReturnStatement(837) into Block(838) at 0", "Update SimpleType: Observable(852) to HystrixObservableCommand", "Move SimpleType: Observable(852) into ParameterizedType: HystrixObservableCommand<R>(848) at 0", "Move SimpleType: R(874) into ParameterizedType: HystrixObservableCommand<R>(848) at 1", "Insert Modifier: private(849) into FieldDeclaration(858) at 0", "Insert Modifier: final(850) into FieldDeclaration(858) at 1", "Move ParameterizedType: HystrixCommand<R>(895) into FieldDeclaration(858) at 2", "Insert VariableDeclarationFragment(857) into FieldDeclaration(858) at 3", "Insert Modifier: protected(859) into MethodDeclaration(888) at 0", "Insert SimpleName: HystrixCommandFromObservableCommand(860) into MethodDeclaration(888) at 1", "Move SingleVariableDeclaration(1250) into MethodDeclaration(888) at 2", "Insert Block(887) into MethodDeclaration(888) at 3", "Move ParameterizedType: HystrixCommand<R>(1232) into MethodDeclaration(898) at 0", "Insert SimpleName: getOriginal(894) into MethodDeclaration(898) at 1", "Insert Block(897) into MethodDeclaration(898) at 2", "Insert MarkerAnnotation(900) into MethodDeclaration(959) at 0", "Insert Modifier: protected(901) into MethodDeclaration(959) at 1", "Move ParameterizedType: Observable<R>(1063) into MethodDeclaration(959) at 2", "Insert SimpleName: run(907) into MethodDeclaration(959) at 3", "Insert Block(958) into MethodDeclaration(959) at 4", "Insert MarkerAnnotation(961) into MethodDeclaration(1020) at 0", "Update Modifier: public(1058) to protected", "Move Modifier: public(1058) into MethodDeclaration(1020) at 1", "Move ParameterizedType: Observable<R>(1054) into MethodDeclaration(1020) at 2", "Update SimpleName: call(1064) to getFallback", "Move SimpleName: call(1064) into MethodDeclaration(1020) at 3", "Insert Block(1019) into MethodDeclaration(1020) at 4", "Move MarkerAnnotation(1057) into MethodDeclaration(1032) at 0", "Insert Modifier: protected(1023) into MethodDeclaration(1032) at 1", "Move SimpleType: String(2372) into MethodDeclaration(1032) at 2", "Insert SimpleName: getCacheKey(1026) into MethodDeclaration(1032) at 3", "Insert Block(1031) into MethodDeclaration(1032) at 4", "Update SimpleName: CachedObservableResponse(1175) to HystrixCommandGroupKey", "Move SimpleName: CachedObservableResponse(1175) into SimpleType: HystrixCommandGroupKey(1036) at 0", "Move ReturnStatement(1210) into Block(1042) at 0", "Insert SimpleName: HystrixCommandKey(1045) into SimpleType: HystrixCommandKey(1046) at 0", "Insert ReturnStatement(1051) into Block(1052) at 0", "Update SimpleName: HystrixContextRunnable(1297) to HystrixThreadPoolKey", "Move SimpleName: HystrixContextRunnable(1297) into SimpleType: HystrixThreadPoolKey(1056) at 0", "Insert ReturnStatement(1061) into Block(1062) at 0", "Update SimpleName: HystrixRuntimeException(1333) to HystrixCommandMetrics", "Move SimpleName: HystrixRuntimeException(1333) into SimpleType: HystrixCommandMetrics(1066) at 0", "Insert ReturnStatement(1071) into Block(1072) at 0", "Insert SimpleName: HystrixCommandProperties(1075) into SimpleType: HystrixCommandProperties(1076) at 0", "Insert ReturnStatement(1081) into Block(1082) at 0", "Insert ReturnStatement(1099) into Block(1100) at 0", "Insert ReturnStatement(1108) into Block(1109) at 0", "Insert ReturnStatement(1117) into Block(1118) at 0", "Insert ReturnStatement(1126) into Block(1127) at 0", "Insert ReturnStatement(1136) into Block(1137) at 0", "Insert ReturnStatement(1145) into Block(1146) at 0", "Insert ReturnStatement(1154) into Block(1155) at 0", "Insert ReturnStatement(1163) into Block(1164) at 0", "Insert ReturnStatement(1172) into Block(1173) at 0", "Insert ReturnStatement(1181) into Block(1182) at 0", "Insert SimpleType: List(1186) into ParameterizedType: List<HystrixEventType>(1189) at 0", "Move SimpleType: HystrixEventType(2336) into ParameterizedType: List<HystrixEventType>(1189) at 1", "Insert ReturnStatement(1194) into Block(1195) at 0", "Insert ReturnStatement(1203) into Block(1204) at 0", "Insert ReturnStatement(1218) into Block(1219) at 0", "Insert SimpleName: Override(1221) into MarkerAnnotation(1222) at 0", "Insert ReturnStatement(1230) into Block(1231) at 0", "Insert SimpleName: Override(1233) into MarkerAnnotation(1234) at 0", "Insert ReturnStatement(1245) into Block(1246) at 0", "Insert SimpleName: Override(1248) into MarkerAnnotation(1249) at 0", "Insert PrimitiveType: int(1252) into SingleVariableDeclaration(1254) at 0", "Insert SimpleName: sizeOfBatch(1253) into SingleVariableDeclaration(1254) at 1", "Move ExpressionStatement(2078) into Block(1260) at 0", "Update SimpleName: Exception(2082) to HystrixCircuitBreaker", "Move SimpleName: Exception(2082) into SimpleType: HystrixCircuitBreaker(1265) at 0", "Insert ReturnStatement(1270) into Block(1271) at 0", "Insert ReturnStatement(1287) into Block(1288) at 0", "Insert ReturnStatement(1304) into Block(1305) at 0", "Insert QualifiedName: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1310) into SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1311) at 0", "Insert ReturnStatement(1316) into Block(1317) at 0", "Insert QualifiedName: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1322) into SimpleType: com.netflix.hystrix.AbstractHystrixCommand.TryableSemaphore(1323) at 0", "Move ReturnStatement(2254) into Block(1329) at 0", "Move ReturnStatement(2414) into Block(1352) at 0", "Move ExpressionStatement(2445) into Block(1363) at 0", "Insert PrimitiveType: long(1370) into SingleVariableDeclaration(1372) at 0", "Insert SimpleName: startTime(1371) into SingleVariableDeclaration(1372) at 1", "Move ExpressionStatement(2557) into Block(1378) at 0", "Insert SimpleName: HystrixCommandFromObservableCommand(89) into SimpleType: HystrixCommandFromObservableCommand(90) at 0", "Insert Assignment: =(296) into ExpressionStatement(297) at 0", "Insert ClassInstanceCreation(836) into ReturnStatement(837) at 0", "Update SimpleName: Observable(851) to HystrixObservableCommand", "Update SimpleName: fromCache(856) to original", "Move SimpleName: fromCache(856) into VariableDeclarationFragment(857) at 0", "Update SimpleName: originalCommand(1249) to o", "Insert SuperConstructorInvocation(880) into Block(887) at 0", "Move ExpressionStatement(870) into Block(887) at 1", "Insert ReturnStatement(896) into Block(897) at 0", "Insert SimpleName: Override(899) into MarkerAnnotation(900) at 0", "Insert ReturnStatement(957) into Block(958) at 0", "Insert SimpleName: Override(960) into MarkerAnnotation(961) at 0", "Insert ReturnStatement(1018) into Block(1019) at 0", "Insert ReturnStatement(1030) into Block(1031) at 0", "Insert MethodInvocation(1040) into ReturnStatement(1041) at 0", "Insert MethodInvocation(1050) into ReturnStatement(1051) at 0", "Insert MethodInvocation(1060) into ReturnStatement(1061) at 0", "Insert MethodInvocation(1070) into ReturnStatement(1071) at 0", "Insert MethodInvocation(1080) into ReturnStatement(1081) at 0", "Insert MethodInvocation(1098) into ReturnStatement(1099) at 0", "Insert MethodInvocation(1107) into ReturnStatement(1108) at 0", "Insert MethodInvocation(1116) into ReturnStatement(1117) at 0", "Insert MethodInvocation(1125) into ReturnStatement(1126) at 0", "Insert MethodInvocation(1135) into ReturnStatement(1136) at 0", "Insert MethodInvocation(1144) into ReturnStatement(1145) at 0", "Insert MethodInvocation(1153) into ReturnStatement(1154) at 0", "Insert MethodInvocation(1162) into ReturnStatement(1163) at 0", "Insert MethodInvocation(1171) into ReturnStatement(1172) at 0", "Insert MethodInvocation(1180) into ReturnStatement(1181) at 0", "Update SimpleName: Exception(1845) to List", "Move SimpleName: Exception(1845) into SimpleType: List(1186) at 0", "Insert MethodInvocation(1193) into ReturnStatement(1194) at 0", "Insert MethodInvocation(1202) into ReturnStatement(1203) at 0", "Insert MethodInvocation(1217) into ReturnStatement(1218) at 0", "Insert MethodInvocation(1229) into ReturnStatement(1230) at 0", "Insert MethodInvocation(1244) into ReturnStatement(1245) at 0", "Insert MethodInvocation(1269) into ReturnStatement(1270) at 0", "Insert MethodInvocation(1286) into ReturnStatement(1287) at 0", "Insert MethodInvocation(1303) into ReturnStatement(1304) at 0", "Insert MethodInvocation(1315) into ReturnStatement(1316) at 0", "Insert MethodInvocation(1376) into ExpressionStatement(1377) at 0", "Insert FieldAccess(288) into Assignment: =(296) at 0", "Insert ClassInstanceCreation(295) into Assignment: =(296) at 1", "Move ParameterizedType: ObservableCommand<R>(1197) into ClassInstanceCreation(836) at 0", "Insert MethodInvocation(834) into ClassInstanceCreation(836) at 1", "Insert ThisExpression(835) into ClassInstanceCreation(836) at 2", "Insert QualifiedName: o.commandGroup(868) into SuperConstructorInvocation(880) at 0", "Insert QualifiedName: o.commandKey(869) into SuperConstructorInvocation(880) at 1", "Insert QualifiedName: o.threadPoolKey(870) into SuperConstructorInvocation(880) at 2", "Insert QualifiedName: o.circuitBreaker(871) into SuperConstructorInvocation(880) at 3", "Insert QualifiedName: o.threadPool(872) into SuperConstructorInvocation(880) at 4", "Insert QualifiedName: o.commandPropertiesDefaults(873) into SuperConstructorInvocation(880) at 5", "Insert QualifiedName: o.threadPoolPropertiesDefaults(874) into SuperConstructorInvocation(880) at 6", "Insert QualifiedName: o.metrics(875) into SuperConstructorInvocation(880) at 7", "Insert QualifiedName: o.fallbackSemaphoreOverride(876) into SuperConstructorInvocation(880) at 8", "Insert QualifiedName: o.executionSemaphoreOverride(877) into SuperConstructorInvocation(880) at 9", "Insert QualifiedName: o.propertiesStrategy(878) into SuperConstructorInvocation(880) at 10", "Insert QualifiedName: o.executionHook(879) into SuperConstructorInvocation(880) at 11", "Insert Assignment: =(885) into ExpressionStatement(886) at 0", "Insert SimpleName: original(895) into ReturnStatement(896) at 0", "Insert MethodInvocation(956) into ReturnStatement(957) at 0", "Insert MethodInvocation(1017) into ReturnStatement(1018) at 0", "Insert MethodInvocation(1029) into ReturnStatement(1030) at 0", "Insert SimpleName: observableCommand(1038) into MethodInvocation(1040) at 0", "Insert SimpleName: getCommandGroup(1039) into MethodInvocation(1040) at 1", "Insert SimpleName: observableCommand(1048) into MethodInvocation(1050) at 0", "Insert SimpleName: getCommandKey(1049) into MethodInvocation(1050) at 1", "Insert SimpleName: observableCommand(1058) into MethodInvocation(1060) at 0", "Insert SimpleName: getThreadPoolKey(1059) into MethodInvocation(1060) at 1", "Update SimpleName: child(1337) to observableCommand", "Move SimpleName: child(1337) into MethodInvocation(1070) at 0", "Update SimpleName: onError(1338) to getMetrics", "Move SimpleName: onError(1338) into MethodInvocation(1070) at 1", "Update SimpleName: originalCommand(1376) to observableCommand", "Move SimpleName: originalCommand(1376) into MethodInvocation(1080) at 0", "Update SimpleName: recordTotalExecutionTime(1377) to getProperties", "Move SimpleName: recordTotalExecutionTime(1377) into MethodInvocation(1080) at 1", "Update SimpleName: executionIsolationThreadTimeoutInMilliseconds(1399) to observableCommand", "Move SimpleName: executionIsolationThreadTimeoutInMilliseconds(1399) into MethodInvocation(1089) at 0", "Update SimpleName: get(1401) to isCircuitBreakerOpen", "Update SimpleName: child(1472) to observableCommand", "Move SimpleName: child(1472) into MethodInvocation(1098) at 0", "Update SimpleName: onCompleted(1473) to isExecutionComplete", "Move SimpleName: onCompleted(1473) into MethodInvocation(1098) at 1", "Update SimpleName: child(1491) to observableCommand", "Move SimpleName: child(1491) into MethodInvocation(1107) at 0", "Update SimpleName: onError(1492) to isExecutedInThread", "Move SimpleName: onError(1492) into MethodInvocation(1107) at 1", "Update SimpleName: child(1511) to observableCommand", "Move SimpleName: child(1511) into MethodInvocation(1116) at 0", "Update SimpleName: onNext(1512) to isSuccessfulExecution", "Move SimpleName: onNext(1512) into MethodInvocation(1116) at 1", "Update SimpleName: observer(1567) to observableCommand", "Move SimpleName: observer(1567) into MethodInvocation(1125) at 0", "Update SimpleName: onNext(1568) to isFailedExecution", "Move SimpleName: onNext(1568) into MethodInvocation(1125) at 1", "Update SimpleName: observer(1589) to observableCommand", "Move SimpleName: observer(1589) into MethodInvocation(1135) at 0", "Update SimpleName: onError(1590) to getFailedExecutionException", "Move SimpleName: onError(1590) into MethodInvocation(1135) at 1", "Update SimpleName: observer(1619) to observableCommand", "Move SimpleName: observer(1619) into MethodInvocation(1144) at 0", "Update SimpleName: getFallbackOrThrowException(1621) to isResponseFromFallback", "Move SimpleName: getFallbackOrThrowException(1621) into MethodInvocation(1144) at 1", "Update SimpleName: isExecutedInThread(1648) to observableCommand", "Move SimpleName: isExecutedInThread(1648) into MethodInvocation(1153) at 0", "Update SimpleName: set(1649) to isResponseTimedOut", "Move SimpleName: set(1649) into MethodInvocation(1153) at 1", "Update SimpleName: Thread(1657) to observableCommand", "Move SimpleName: Thread(1657) into MethodInvocation(1162) at 0", "Update SimpleName: currentThread(1658) to isResponseShortCircuited", "Move SimpleName: currentThread(1658) into MethodInvocation(1162) at 1", "Update SimpleName: observer(1808) to observableCommand", "Move SimpleName: observer(1808) into MethodInvocation(1171) at 0", "Update SimpleName: e(1810) to isResponseFromCache", "Move SimpleName: e(1810) into MethodInvocation(1171) at 1", "Update SimpleName: onThreadComplete(1840) to observableCommand", "Move SimpleName: onThreadComplete(1840) into MethodInvocation(1180) at 0", "Update SimpleName: _this(1841) to isResponseRejected", "Move SimpleName: _this(1841) into MethodInvocation(1180) at 1", "Update SimpleName: logger(1849) to observableCommand", "Move SimpleName: logger(1849) into MethodInvocation(1193) at 0", "Update SimpleName: warn(1850) to getExecutionEvents", "Move SimpleName: warn(1850) into MethodInvocation(1193) at 1", "Update SimpleName: properties(1880) to observableCommand", "Move SimpleName: properties(1880) into MethodInvocation(1202) at 0", "Update SimpleName: executionIsolationThreadInterruptOnTimeout(1881) to getExecutionTimeInMilliseconds", "Move SimpleName: executionIsolationThreadInterruptOnTimeout(1881) into MethodInvocation(1202) at 1", "Update SimpleName: observer(1903) to observableCommand", "Move SimpleName: observer(1903) into MethodInvocation(1217) at 0", "Update SimpleName: e(1909) to queue", "Move SimpleName: e(1909) into MethodInvocation(1217) at 1", "Update SimpleName: observer(1932) to observableCommand", "Move SimpleName: observer(1932) into MethodInvocation(1229) at 0", "Update SimpleName: e(1938) to execute", "Move SimpleName: e(1938) into MethodInvocation(1229) at 1", "Update SimpleName: executionHook(1973) to observableCommand", "Move SimpleName: executionHook(1973) into MethodInvocation(1244) at 0", "Update SimpleName: onRunStart(1974) to observe", "Move SimpleName: onRunStart(1974) into MethodInvocation(1244) at 1", "Update SimpleName: logger(2073) to observableCommand", "Update SimpleName: warn(2074) to markAsCollapsedCommand", "Update SimpleName: decorated(2076) to sizeOfBatch", "Update SimpleName: logger(2086) to observableCommand", "Move SimpleName: logger(2086) into MethodInvocation(1269) at 0", "Update SimpleName: warn(2087) to getCircuitBreaker", "Move SimpleName: warn(2087) into MethodInvocation(1269) at 1", "Insert SimpleName: observableCommand(1283) into MethodInvocation(1286) at 0", "Insert SimpleName: getExceptionFromThrowable(1284) into MethodInvocation(1286) at 1", "Insert SimpleName: t(1285) into MethodInvocation(1286) at 2", "Update SimpleName: logger(2158) to observableCommand", "Move SimpleName: logger(2158) into MethodInvocation(1303) at 0", "Update SimpleName: debug(2159) to decomposeException", "Move SimpleName: debug(2159) into MethodInvocation(1303) at 1", "Move SimpleName: e(2161) into MethodInvocation(1303) at 2", "Update SimpleName: metrics(2200) to observableCommand", "Move SimpleName: metrics(2200) into MethodInvocation(1315) at 0", "Update SimpleName: decrementConcurrentExecutionCount(2201) to getExecutionSemaphore", "Move SimpleName: decrementConcurrentExecutionCount(2201) into MethodInvocation(1315) at 1", "Update SimpleName: onFallbackSuccess(2249) to observableCommand", "Update SimpleName: getFallback(2251) to getFallbackSemaphore", "Move SimpleName: getFallback(2251) into MethodInvocation(1327) at 2", "Update SimpleName: getFallbackOrThrowException(2347) to observableCommand", "Update SimpleName: message(2350) to getLogMessagePrefix", "Update SimpleName: onComplete(2410) to observableCommand", "Update SimpleName: fallback(2412) to isRequestCachingEnabled", "Update SimpleName: logger(2440) to observableCommand", "Update SimpleName: warn(2441) to recordExecutedCommand", "Update SimpleName: onError(2551) to observableCommand", "Move SimpleName: onError(2551) into MethodInvocation(1376) at 0", "Update SimpleName: failureType(2553) to recordTotalExecutionTime", "Move SimpleName: failureType(2553) into MethodInvocation(1376) at 1", "Update SimpleName: e(2554) to startTime", "Move SimpleName: e(2554) into MethodInvocation(1376) at 2", "Insert ThisExpression(286) into FieldAccess(288) at 0", "Insert SimpleName: observableCommand(287) into FieldAccess(288) at 1", "Insert ParameterizedType: HystrixCommandFromObservableCommand<R>(293) into ClassInstanceCreation(295) at 0", "Insert ThisExpression(294) into ClassInstanceCreation(295) at 1", "Update SimpleName: started(836) to observableCommand", "Move SimpleName: started(836) into MethodInvocation(834) at 0", "Update SimpleName: compareAndSet(837) to toObservable", "Move SimpleName: compareAndSet(837) into MethodInvocation(834) at 1", "Insert FieldAccess(883) into Assignment: =(885) at 0", "Insert SimpleName: o(884) into Assignment: =(885) at 1", "Move SimpleName: Observable(906) into MethodInvocation(956) at 0", "Move SimpleName: create(907) into MethodInvocation(956) at 1", "Move ClassInstanceCreation(1015) into MethodInvocation(956) at 2", "Move SimpleName: Observable(1073) into MethodInvocation(1017) at 0", "Update SimpleName: immediate(1086) to create", "Move SimpleName: immediate(1086) into MethodInvocation(1017) at 1", "Insert ClassInstanceCreation(1016) into MethodInvocation(1017) at 2", "Update SimpleName: requestCache(1163) to original", "Move SimpleName: requestCache(1163) into MethodInvocation(1029) at 0", "Move SimpleName: getCacheKey(1165) into MethodInvocation(1029) at 1", "Insert SimpleType: HystrixCommandFromObservableCommand(290) into ParameterizedType: HystrixCommandFromObservableCommand<R>(293) at 0", "Move SimpleType: R(879) into ParameterizedType: HystrixCommandFromObservableCommand<R>(293) at 1", "Insert ThisExpression(881) into FieldAccess(883) at 0", "Insert SimpleName: original(882) into FieldAccess(883) at 1", "Insert ParameterizedType: OnSubscribe<R>(975) into ClassInstanceCreation(1016) at 0", "Insert AnonymousClassDeclaration(1015) into ClassInstanceCreation(1016) at 1", "Insert SimpleName: HystrixCommandFromObservableCommand(289) into SimpleType: HystrixCommandFromObservableCommand(290) at 0", "Insert SimpleType: OnSubscribe(972) into ParameterizedType: OnSubscribe<R>(975) at 0", "Insert SimpleType: R(974) into ParameterizedType: OnSubscribe<R>(975) at 1", "Insert MethodDeclaration(1014) into AnonymousClassDeclaration(1015) at 0", "Insert Block(952) into MethodDeclaration(953) at 5", "Insert SimpleName: OnSubscribe(971) into SimpleType: OnSubscribe(972) at 0", "Update SimpleName: HystrixContextScheduler(1095) to R", "Move SimpleName: HystrixContextScheduler(1095) into SimpleType: R(974) at 0", "Insert MarkerAnnotation(977) into MethodDeclaration(1014) at 0", "Move Modifier: public(1112) into MethodDeclaration(1014) at 1", "Move PrimitiveType: void(1113) into MethodDeclaration(1014) at 2", "Move SimpleName: call(1114) into MethodDeclaration(1014) at 3", "Move SingleVariableDeclaration(1286) into MethodDeclaration(1014) at 4", "Insert Block(1013) into MethodDeclaration(1014) at 5", "Update SimpleName: observer(924) to s", "Move TryStatement(970) into Block(952) at 0", "Insert SimpleName: Override(976) into MarkerAnnotation(977) at 0", "Update SimpleName: child(1285) to s", "Insert TryStatement(1012) into Block(1013) at 0", "Insert Block(1000) into TryStatement(1012) at 0", "Insert CatchClause(1011) into TryStatement(1012) at 1", "Move SingleVariableDeclaration(1486) into CatchClause(950) at 0", "Insert ExpressionStatement(995) into Block(1000) at 0", "Move ExpressionStatement(1132) into Block(1000) at 1", "Move SingleVariableDeclaration(1068) into CatchClause(1011) at 0", "Insert Block(1010) into CatchClause(1011) at 1", "Insert MethodInvocation(994) into ExpressionStatement(995) at 0", "Move ExpressionStatement(1156) into Block(1010) at 0", "Update SimpleName: observer(945) to s", "Update SimpleName: observer(954) to s", "Insert SimpleName: s(989) into MethodInvocation(994) at 0", "Insert SimpleName: onNext(990) into MethodInvocation(994) at 1", "Insert MethodInvocation(993) into MethodInvocation(994) at 2", "Update SimpleName: tl(1129) to s", "Update SimpleName: clear(1130) to onCompleted", "Insert MethodInvocation(1008) into ExpressionStatement(1009) at 0", "Insert SimpleName: original(930) into MethodInvocation(932) at 0", "Update SimpleName: getFallbackOrThrowException(947) to run", "Update SimpleName: observer(963) to s", "Update SimpleName: timeoutTimer(1121) to original", "Move SimpleName: timeoutTimer(1121) into MethodInvocation(993) at 0", "Update SimpleName: get(1122) to getFallback", "Move SimpleName: get(1122) into MethodInvocation(993) at 1", "Insert SimpleName: s(1005) into MethodInvocation(1008) at 0", "Update SimpleName: o(1150) to onError", "Move SimpleName: o(1150) into MethodInvocation(1008) at 1", "Update SimpleName: cache(1151) to e", "Move SimpleName: cache(1151) into MethodInvocation(1008) at 2", "Delete QualifiedName: java.lang.ref.Reference(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: java.lang.ref.SoftReference(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.util.concurrent.RejectedExecutionException(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.concurrent.TimeoutException(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: rx.Observable.Operator(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: rx.functions.Action0(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: rx.functions.Func1(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: rx.subscriptions.CompositeSubscription(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: rx.subscriptions.Subscriptions(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: com.netflix.hystrix.exception.HystrixRuntimeException.FailureType(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable(64)", "Delete ImportDeclaration(65)", "Delete QualifiedName: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler(66)", "Delete ImportDeclaration(67)", "Delete QualifiedName: com.netflix.hystrix.util.ExceptionThreadingUtility(72)", "Delete ImportDeclaration(73)", "Delete QualifiedName: com.netflix.hystrix.util.HystrixTimer(74)", "Delete ImportDeclaration(75)", "Delete QualifiedName: com.netflix.hystrix.util.HystrixTimer.TimerListener(76)", "Delete ImportDeclaration(77)", "Delete Modifier: final(1243)", "Delete SimpleName: metrics(867)", "Delete SimpleName: markResponseFromCache(868)", "Delete MethodInvocation(869)", "Delete QualifiedName: HystrixEventType.SHORT_CIRCUITED(948)", "Delete QualifiedName: FailureType.SHORTCIRCUIT(949)", "Delete StringLiteral: \"short-circuited\"(950)", "Delete SimpleName: Exception(959)", "Delete SimpleType: Exception(960)", "Delete SimpleName: e(961)", "Delete SingleVariableDeclaration(962)", "Delete SimpleName: invocationStartTime(926)", "Delete SimpleName: System(927)", "Delete SimpleName: currentTimeMillis(928)", "Delete MethodInvocation(929)", "Delete Assignment: =(930)", "Delete ExpressionStatement(931)", "Delete SimpleName: executionHook(932)", "Delete SimpleName: onStart(933)", "Delete SimpleName: _this(934)", "Delete MethodInvocation(935)", "Delete ExpressionStatement(936)", "Delete SimpleName: circuitBreaker(937)", "Delete SimpleName: allowRequest(938)", "Delete MethodInvocation(939)", "Delete PrefixExpression: !(940)", "Delete SimpleName: metrics(941)", "Delete SimpleName: markShortCircuited(942)", "Delete MethodInvocation(943)", "Delete ExpressionStatement(944)", "Delete Block(971)", "Delete SimpleName: properties(972)", "Delete SimpleName: executionIsolationStrategy(973)", "Delete MethodInvocation(974)", "Delete SimpleName: get(975)", "Delete MethodInvocation(976)", "Delete SimpleName: equals(977)", "Delete QualifiedName: ExecutionIsolationStrategy.THREAD(978)", "Delete MethodInvocation(979)", "Delete SimpleName: subscribeWithThreadIsolation(980)", "Delete SimpleName: observer(981)", "Delete MethodInvocation(982)", "Delete ExpressionStatement(983)", "Delete Block(984)", "Delete SimpleName: subscribeWithSemaphoreIsolation(985)", "Delete SimpleName: observer(986)", "Delete MethodInvocation(987)", "Delete ExpressionStatement(988)", "Delete Block(989)", "Delete IfStatement(990)", "Delete Block(991)", "Delete SimpleName: RuntimeException(992)", "Delete SimpleType: RuntimeException(993)", "Delete SimpleName: e(994)", "Delete SingleVariableDeclaration(995)", "Delete SimpleName: observer(996)", "Delete SimpleName: onError(997)", "Delete SimpleName: e(998)", "Delete MethodInvocation(999)", "Delete ExpressionStatement(1000)", "Delete Block(1001)", "Delete CatchClause(1002)", "Delete TryStatement(1003)", "Delete Block(1004)", "Delete IfStatement(1005)", "Delete Block(1006)", "Delete SimpleName: recordExecutedCommand(1007)", "Delete MethodInvocation(1008)", "Delete ExpressionStatement(1009)", "Delete Block(1010)", "Delete TryStatement(1011)", "Delete Block(1012)", "Delete Modifier: final(1278)", "Delete SimpleName: o(1144)", "Delete SimpleName: CachedObservableOriginal(1145)", "Delete SimpleType: CachedObservableOriginal(1146)", "Delete SimpleName: R(1147)", "Delete SimpleType: R(1148)", "Delete ParameterizedType: CachedObservableOriginal<R>(1149)", "Delete MethodInvocation(1152)", "Delete ThisExpression(1153)", "Delete ClassInstanceCreation(1154)", "Delete Assignment: =(1155)", "Delete SimpleName: ObservableCommand(1202)", "Delete SimpleType: ObservableCommand(1203)", "Delete SimpleName: R(1204)", "Delete SimpleType: R(1205)", "Delete ParameterizedType: ObservableCommand<R>(1206)", "Delete SimpleName: o(1207)", "Delete ThisExpression(1208)", "Delete ClassInstanceCreation(1209)", "Delete SimpleName: TimeoutOperator(1242)", "Delete Modifier: final(1251)", "Delete PrimitiveType: boolean(1252)", "Delete SimpleName: isNonBlocking(1253)", "Delete SingleVariableDeclaration(1254)", "Delete ThisExpression(1255)", "Delete SimpleName: originalCommand(1256)", "Delete FieldAccess(1257)", "Delete SimpleName: originalCommand(1258)", "Delete Assignment: =(1259)", "Delete ExpressionStatement(1260)", "Delete ThisExpression(1261)", "Delete SimpleName: isNonBlocking(1262)", "Delete FieldAccess(1263)", "Delete SimpleName: isNonBlocking(1264)", "Delete Assignment: =(1265)", "Delete ExpressionStatement(1266)", "Delete QualifiedName: originalCommand.properties(1398)", "Delete MethodInvocation(1400)", "Delete SimpleName: tl(1468)", "Delete SimpleName: clear(1469)", "Delete MethodInvocation(1470)", "Delete ExpressionStatement(1471)", "Delete MethodInvocation(1474)", "Delete ExpressionStatement(1475)", "Delete SimpleName: tl(1487)", "Delete SimpleName: clear(1488)", "Delete MethodInvocation(1489)", "Delete ExpressionStatement(1490)", "Delete SimpleName: e(1493)", "Delete MethodInvocation(1494)", "Delete ExpressionStatement(1495)", "Delete SimpleName: tl(1507)", "Delete SimpleName: clear(1508)", "Delete MethodInvocation(1509)", "Delete ExpressionStatement(1510)", "Delete SimpleName: t(1513)", "Delete MethodInvocation(1514)", "Delete ExpressionStatement(1515)", "Delete SimpleName: f(1878)", "Delete SimpleName: cancel(1879)", "Delete MethodInvocation(1882)", "Delete SimpleName: get(1883)", "Delete MethodInvocation(1884)", "Delete MethodInvocation(1885)", "Delete ExpressionStatement(1886)", "Delete StringLiteral: \"ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.\"(2075)", "Delete BooleanLiteral: false(838)", "Delete BooleanLiteral: true(839)", "Delete MethodInvocation(840)", "Delete PrefixExpression: !(841)", "Delete SimpleName: IllegalStateException(842)", "Delete SimpleType: IllegalStateException(843)", "Delete StringLiteral: \"This instance can only be executed once. Please instantiate a new instance.\"(844)", "Delete ClassInstanceCreation(845)", "Delete ThrowStatement(846)", "Delete Block(847)", "Delete IfStatement(848)", "Delete SimpleName: isRequestCachingEnabled(849)", "Delete MethodInvocation(850)", "Delete SimpleName: R(853)", "Delete SimpleType: R(854)", "Delete ParameterizedType: Observable<R>(855)", "Delete SimpleName: requestCache(857)", "Delete SimpleName: get(858)", "Delete SimpleName: getCacheKey(859)", "Delete MethodInvocation(860)", "Delete MethodInvocation(861)", "Delete VariableDeclarationFragment(862)", "Delete VariableDeclarationStatement(863)", "Delete SimpleName: fromCache(864)", "Delete NullLiteral(865)", "Delete InfixExpression: !=(866)", "Delete SimpleName: CachedObservableResponse(871)", "Delete SimpleType: CachedObservableResponse(872)", "Delete ParameterizedType: CachedObservableResponse<R>(875)", "Delete SimpleName: CachedObservableOriginal(876)", "Delete SimpleType: CachedObservableOriginal(877)", "Delete ParameterizedType: CachedObservableOriginal<R>(880)", "Delete SimpleName: fromCache(881)", "Delete CastExpression(882)", "Delete ThisExpression(883)", "Delete ClassInstanceCreation(884)", "Delete ReturnStatement(885)", "Delete Block(886)", "Delete IfStatement(887)", "Delete Block(888)", "Delete IfStatement(889)", "Delete Modifier: final(890)", "Delete SimpleName: _this(896)", "Delete ThisExpression(897)", "Delete VariableDeclarationFragment(898)", "Delete VariableDeclarationStatement(899)", "Delete SimpleName: Observable(900)", "Delete SimpleType: Observable(901)", "Delete SimpleName: R(902)", "Delete SimpleType: R(903)", "Delete ParameterizedType: Observable<R>(904)", "Delete SimpleName: o(905)", "Delete MethodInvocation(1016)", "Delete VariableDeclarationFragment(1017)", "Delete VariableDeclarationStatement(1018)", "Delete SimpleName: properties(1019)", "Delete SimpleName: executionIsolationStrategy(1020)", "Delete MethodInvocation(1021)", "Delete SimpleName: get(1022)", "Delete MethodInvocation(1023)", "Delete SimpleName: equals(1024)", "Delete QualifiedName: ExecutionIsolationStrategy.THREAD(1025)", "Delete MethodInvocation(1026)", "Delete SimpleName: o(1027)", "Delete SimpleName: o(1028)", "Delete SimpleName: lift(1029)", "Delete SimpleName: TimeoutOperator(1030)", "Delete SimpleType: TimeoutOperator(1031)", "Delete ParameterizedType: TimeoutOperator<R>(1034)", "Delete SimpleName: _this(1035)", "Delete SimpleName: performAsyncTimeout(1036)", "Delete ClassInstanceCreation(1037)", "Delete MethodInvocation(1038)", "Delete Assignment: =(1039)", "Delete ExpressionStatement(1040)", "Delete Block(1041)", "Delete IfStatement(1042)", "Delete SimpleName: o(1043)", "Delete SimpleName: o(1044)", "Delete SimpleName: onErrorResumeNext(1045)", "Delete SimpleName: Func1(1046)", "Delete SimpleType: Func1(1047)", "Delete ParameterizedType: Func1<Throwable,Observable<R>>(1055)", "Delete SimpleName: metrics(1069)", "Delete SimpleName: markExceptionThrown(1070)", "Delete MethodInvocation(1071)", "Delete ExpressionStatement(1072)", "Delete SimpleName: error(1074)", "Delete SimpleName: e(1075)", "Delete MethodInvocation(1076)", "Delete ReturnStatement(1077)", "Delete Block(1078)", "Delete MethodDeclaration(1079)", "Delete AnonymousClassDeclaration(1080)", "Delete ClassInstanceCreation(1081)", "Delete MethodInvocation(1082)", "Delete Assignment: =(1083)", "Delete ExpressionStatement(1084)", "Delete SimpleName: Schedulers(1085)", "Delete MethodInvocation(1087)", "Delete SimpleName: equals(1088)", "Delete SimpleName: observeOn(1089)", "Delete MethodInvocation(1090)", "Delete PrefixExpression: !(1091)", "Delete SimpleName: o(1092)", "Delete SimpleName: o(1093)", "Delete SimpleName: observeOn(1094)", "Delete SimpleType: HystrixContextScheduler(1096)", "Delete SimpleName: concurrencyStrategy(1097)", "Delete SimpleName: observeOn(1098)", "Delete ClassInstanceCreation(1099)", "Delete MethodInvocation(1100)", "Delete Assignment: =(1101)", "Delete ExpressionStatement(1102)", "Delete Block(1103)", "Delete IfStatement(1104)", "Delete SimpleName: o(1105)", "Delete SimpleName: o(1106)", "Delete SimpleName: finallyDo(1107)", "Delete SimpleName: Action0(1108)", "Delete SimpleType: Action0(1109)", "Delete SimpleName: Reference(1115)", "Delete SimpleType: Reference(1116)", "Delete SimpleName: TimerListener(1117)", "Delete SimpleType: TimerListener(1118)", "Delete ParameterizedType: Reference<TimerListener>(1119)", "Delete SimpleName: tl(1120)", "Delete MethodInvocation(1123)", "Delete VariableDeclarationFragment(1124)", "Delete VariableDeclarationStatement(1125)", "Delete SimpleName: tl(1126)", "Delete NullLiteral(1127)", "Delete InfixExpression: !=(1128)", "Delete Block(1133)", "Delete IfStatement(1134)", "Delete Block(1135)", "Delete MethodDeclaration(1136)", "Delete AnonymousClassDeclaration(1137)", "Delete ClassInstanceCreation(1138)", "Delete MethodInvocation(1139)", "Delete Assignment: =(1140)", "Delete ExpressionStatement(1141)", "Delete SimpleName: isRequestCachingEnabled(1142)", "Delete MethodInvocation(1143)", "Delete SimpleName: fromCache(1162)", "Delete SimpleName: putIfAbsent(1164)", "Delete MethodInvocation(1166)", "Delete SimpleName: o(1167)", "Delete MethodInvocation(1168)", "Delete VariableDeclarationFragment(1169)", "Delete VariableDeclarationStatement(1170)", "Delete SimpleName: fromCache(1171)", "Delete NullLiteral(1172)", "Delete InfixExpression: !=(1173)", "Delete SimpleName: o(1174)", "Delete SimpleType: CachedObservableResponse(1176)", "Delete SimpleName: R(1177)", "Delete SimpleType: R(1178)", "Delete ParameterizedType: CachedObservableResponse<R>(1179)", "Delete SimpleName: CachedObservableOriginal(1180)", "Delete SimpleType: CachedObservableOriginal(1181)", "Delete SimpleName: R(1182)", "Delete SimpleType: R(1183)", "Delete ParameterizedType: CachedObservableOriginal<R>(1184)", "Delete SimpleName: fromCache(1185)", "Delete CastExpression(1186)", "Delete ThisExpression(1187)", "Delete ClassInstanceCreation(1188)", "Delete Assignment: =(1189)", "Delete ExpressionStatement(1190)", "Delete Block(1191)", "Delete IfStatement(1192)", "Delete SimpleName: o(1198)", "Delete CastExpression(1199)", "Delete ReturnStatement(1200)", "Delete Block(1201)", "Delete Block(1211)", "Delete IfStatement(1212)", "Delete Block(1213)", "Delete MethodDeclaration(1214)", "Delete Modifier: private(1215)", "Delete Modifier: static(1216)", "Delete SimpleName: TimeoutOperator(1217)", "Delete SimpleName: Operator(1220)", "Delete SimpleType: Operator(1221)", "Delete SimpleName: R(1222)", "Delete SimpleType: R(1223)", "Delete ParameterizedType: Operator<R,R>(1226)", "Delete Modifier: final(1227)", "Delete SimpleName: originalCommand(1233)", "Delete VariableDeclarationFragment(1234)", "Delete FieldDeclaration(1235)", "Delete Modifier: final(1236)", "Delete PrimitiveType: boolean(1237)", "Delete SimpleName: isNonBlocking(1238)", "Delete VariableDeclarationFragment(1239)", "Delete FieldDeclaration(1240)", "Delete SimpleName: Subscriber(1272)", "Delete SimpleType: Subscriber(1273)", "Delete SimpleName: R(1274)", "Delete SimpleType: R(1275)", "Delete ParameterizedType: Subscriber<R>(1276)", "Delete SimpleName: call(1277)", "Delete Modifier: final(1287)", "Delete SimpleName: CompositeSubscription(1288)", "Delete SimpleType: CompositeSubscription(1289)", "Delete SimpleName: s(1290)", "Delete SimpleName: CompositeSubscription(1291)", "Delete SimpleType: CompositeSubscription(1292)", "Delete ClassInstanceCreation(1293)", "Delete VariableDeclarationFragment(1294)", "Delete VariableDeclarationStatement(1295)", "Delete Modifier: final(1296)", "Delete SimpleType: HystrixContextRunnable(1298)", "Delete SimpleName: timeoutRunnable(1299)", "Delete SimpleName: HystrixContextRunnable(1300)", "Delete SimpleType: HystrixContextRunnable(1301)", "Delete SimpleName: Runnable(1302)", "Delete SimpleType: Runnable(1303)", "Delete PrimitiveType: void(1307)", "Delete SimpleName: run(1308)", "Delete SimpleName: R(1309)", "Delete SimpleType: R(1310)", "Delete SimpleName: v(1311)", "Delete SimpleName: originalCommand(1312)", "Delete SimpleName: getFallbackOrThrowException(1313)", "Delete QualifiedName: HystrixEventType.TIMEOUT(1314)", "Delete QualifiedName: FailureType.TIMEOUT(1315)", "Delete StringLiteral: \"timed-out\"(1316)", "Delete SimpleName: TimeoutException(1317)", "Delete SimpleType: TimeoutException(1318)", "Delete ClassInstanceCreation(1319)", "Delete MethodInvocation(1320)", "Delete VariableDeclarationFragment(1321)", "Delete VariableDeclarationStatement(1322)", "Delete SimpleName: child(1323)", "Delete SimpleName: onNext(1324)", "Delete SimpleName: v(1325)", "Delete MethodInvocation(1326)", "Delete ExpressionStatement(1327)", "Delete SimpleName: child(1328)", "Delete SimpleName: onCompleted(1329)", "Delete MethodInvocation(1330)", "Delete ExpressionStatement(1331)", "Delete Block(1332)", "Delete SimpleType: HystrixRuntimeException(1334)", "Delete SimpleName: re(1335)", "Delete SingleVariableDeclaration(1336)", "Delete SimpleName: re(1339)", "Delete MethodInvocation(1340)", "Delete ExpressionStatement(1341)", "Delete Block(1342)", "Delete CatchClause(1343)", "Delete TryStatement(1344)", "Delete Block(1345)", "Delete MethodDeclaration(1346)", "Delete AnonymousClassDeclaration(1347)", "Delete ClassInstanceCreation(1348)", "Delete ClassInstanceCreation(1349)", "Delete VariableDeclarationFragment(1350)", "Delete VariableDeclarationStatement(1351)", "Delete SimpleName: TimerListener(1352)", "Delete SimpleType: TimerListener(1353)", "Delete SimpleName: listener(1354)", "Delete SimpleName: TimerListener(1355)", "Delete SimpleType: TimerListener(1356)", "Delete PrimitiveType: void(1360)", "Delete SimpleName: tick(1361)", "Delete QualifiedName: originalCommand.isCommandTimedOut(1362)", "Delete SimpleName: compareAndSet(1363)", "Delete QualifiedName: TimedOutStatus.NOT_EXECUTED(1364)", "Delete QualifiedName: TimedOutStatus.TIMED_OUT(1365)", "Delete MethodInvocation(1366)", "Delete QualifiedName: originalCommand.metrics(1367)", "Delete SimpleName: markTimeout(1368)", "Delete SimpleName: System(1369)", "Delete SimpleName: currentTimeMillis(1370)", "Delete MethodInvocation(1371)", "Delete QualifiedName: originalCommand.invocationStartTime(1372)", "Delete InfixExpression: -(1373)", "Delete MethodInvocation(1374)", "Delete ExpressionStatement(1375)", "Delete QualifiedName: originalCommand.invocationStartTime(1378)", "Delete MethodInvocation(1379)", "Delete ExpressionStatement(1380)", "Delete SimpleName: timeoutRunnable(1381)", "Delete SimpleName: run(1382)", "Delete MethodInvocation(1383)", "Delete ExpressionStatement(1384)", "Delete Block(1385)", "Delete IfStatement(1386)", "Delete SimpleName: s(1387)", "Delete SimpleName: unsubscribe(1388)", "Delete MethodInvocation(1389)", "Delete ExpressionStatement(1390)", "Delete Block(1391)", "Delete MethodDeclaration(1392)", "Delete MethodDeclaration(1405)", "Delete AnonymousClassDeclaration(1406)", "Delete ClassInstanceCreation(1407)", "Delete VariableDeclarationFragment(1408)", "Delete VariableDeclarationStatement(1409)", "Delete SimpleName: Reference(1410)", "Delete SimpleType: Reference(1411)", "Delete SimpleName: TimerListener(1412)", "Delete SimpleType: TimerListener(1413)", "Delete ParameterizedType: Reference<TimerListener>(1414)", "Delete SimpleName: _tl(1415)", "Delete NullLiteral(1416)", "Delete VariableDeclarationFragment(1417)", "Delete VariableDeclarationStatement(1418)", "Delete SimpleName: isNonBlocking(1419)", "Delete SimpleName: _tl(1420)", "Delete SimpleName: HystrixTimer(1421)", "Delete SimpleName: getInstance(1422)", "Delete MethodInvocation(1423)", "Delete SimpleName: addTimerListener(1424)", "Delete SimpleName: listener(1425)", "Delete MethodInvocation(1426)", "Delete Assignment: =(1427)", "Delete ExpressionStatement(1428)", "Delete Block(1429)", "Delete SimpleName: _tl(1430)", "Delete SimpleName: SoftReference(1431)", "Delete SimpleType: SoftReference(1432)", "Delete SimpleName: TimerListener(1433)", "Delete SimpleType: TimerListener(1434)", "Delete ParameterizedType: SoftReference<TimerListener>(1435)", "Delete SimpleName: listener(1436)", "Delete ClassInstanceCreation(1437)", "Delete Assignment: =(1438)", "Delete ExpressionStatement(1439)", "Delete Block(1440)", "Delete IfStatement(1441)", "Delete Modifier: final(1442)", "Delete SimpleName: Reference(1443)", "Delete SimpleType: Reference(1444)", "Delete SimpleName: TimerListener(1445)", "Delete SimpleType: TimerListener(1446)", "Delete ParameterizedType: Reference<TimerListener>(1447)", "Delete SimpleName: tl(1448)", "Delete SimpleName: _tl(1449)", "Delete VariableDeclarationFragment(1450)", "Delete VariableDeclarationStatement(1451)", "Delete QualifiedName: originalCommand.timeoutTimer(1452)", "Delete SimpleName: set(1453)", "Delete SimpleName: tl(1454)", "Delete MethodInvocation(1455)", "Delete ExpressionStatement(1456)", "Delete SimpleName: Subscriber(1457)", "Delete SimpleType: Subscriber(1458)", "Delete SimpleName: R(1459)", "Delete SimpleType: R(1460)", "Delete ParameterizedType: Subscriber<R>(1461)", "Delete SimpleName: child(1462)", "Delete MethodDeclaration(1477)", "Delete MethodDeclaration(1497)", "Delete SimpleName: R(1503)", "Delete SimpleType: R(1504)", "Delete SimpleName: t(1505)", "Delete SingleVariableDeclaration(1506)", "Delete MethodDeclaration(1517)", "Delete AnonymousClassDeclaration(1518)", "Delete ClassInstanceCreation(1519)", "Delete ReturnStatement(1520)", "Delete Block(1521)", "Delete MethodDeclaration(1522)", "Delete TypeDeclaration: class(1523)", "Delete SimpleName: subscribeWithSemaphoreIsolation(1526)", "Delete Modifier: final(1527)", "Delete SimpleName: Subscriber(1528)", "Delete SimpleType: Subscriber(1529)", "Delete SimpleName: R(1530)", "Delete SimpleType: R(1531)", "Delete WildcardType: ? super R(1532)", "Delete ParameterizedType: Subscriber<? super R>(1533)", "Delete SimpleName: observer(1534)", "Delete SingleVariableDeclaration(1535)", "Delete SimpleName: TryableSemaphore(1536)", "Delete SimpleType: TryableSemaphore(1537)", "Delete SimpleName: executionSemaphore(1538)", "Delete SimpleName: getExecutionSemaphore(1539)", "Delete MethodInvocation(1540)", "Delete VariableDeclarationFragment(1541)", "Delete VariableDeclarationStatement(1542)", "Delete SimpleName: executionSemaphore(1543)", "Delete SimpleName: tryAcquire(1544)", "Delete MethodInvocation(1545)", "Delete SimpleName: Hystrix(1546)", "Delete SimpleName: startCurrentThreadExecutingCommand(1547)", "Delete SimpleName: getCommandKey(1548)", "Delete MethodInvocation(1549)", "Delete MethodInvocation(1550)", "Delete ExpressionStatement(1551)", "Delete SimpleName: R(1552)", "Delete SimpleType: R(1553)", "Delete SimpleName: r(1554)", "Delete SimpleName: executeCommand(1555)", "Delete MethodInvocation(1556)", "Delete VariableDeclarationFragment(1557)", "Delete VariableDeclarationStatement(1558)", "Delete SimpleName: r(1559)", "Delete SimpleName: executionHook(1560)", "Delete SimpleName: onComplete(1561)", "Delete ThisExpression(1562)", "Delete SimpleName: r(1563)", "Delete MethodInvocation(1564)", "Delete Assignment: =(1565)", "Delete ExpressionStatement(1566)", "Delete SimpleName: r(1569)", "Delete MethodInvocation(1570)", "Delete ExpressionStatement(1571)", "Delete SimpleName: recordTotalExecutionTime(1572)", "Delete SimpleName: invocationStartTime(1573)", "Delete MethodInvocation(1574)", "Delete ExpressionStatement(1575)", "Delete SimpleName: observer(1576)", "Delete SimpleName: onCompleted(1577)", "Delete MethodInvocation(1578)", "Delete ExpressionStatement(1579)", "Delete Block(1580)", "Delete SimpleName: Exception(1581)", "Delete SimpleType: Exception(1582)", "Delete SimpleName: e(1583)", "Delete SingleVariableDeclaration(1584)", "Delete SimpleName: recordTotalExecutionTime(1585)", "Delete SimpleName: invocationStartTime(1586)", "Delete MethodInvocation(1587)", "Delete ExpressionStatement(1588)", "Delete SimpleName: e(1591)", "Delete MethodInvocation(1592)", "Delete ExpressionStatement(1593)", "Delete Block(1594)", "Delete CatchClause(1595)", "Delete SimpleName: Hystrix(1596)", "Delete SimpleName: endCurrentThreadExecutingCommand(1597)", "Delete MethodInvocation(1598)", "Delete ExpressionStatement(1599)", "Delete Block(1600)", "Delete TryStatement(1601)", "Delete Block(1602)", "Delete SimpleName: executionSemaphore(1603)", "Delete SimpleName: release(1604)", "Delete MethodInvocation(1605)", "Delete ExpressionStatement(1606)", "Delete Block(1607)", "Delete TryStatement(1608)", "Delete Block(1609)", "Delete SimpleName: metrics(1610)", "Delete SimpleName: markSemaphoreRejection(1611)", "Delete MethodInvocation(1612)", "Delete ExpressionStatement(1613)", "Delete SimpleName: logger(1614)", "Delete SimpleName: debug(1615)", "Delete StringLiteral: \"HystrixCommand Execution Rejection by Semaphore.\"(1616)", "Delete MethodInvocation(1617)", "Delete ExpressionStatement(1618)", "Delete SimpleName: onNext(1620)", "Delete QualifiedName: HystrixEventType.SEMAPHORE_REJECTED(1622)", "Delete QualifiedName: FailureType.REJECTED_SEMAPHORE_EXECUTION(1623)", "Delete StringLiteral: \"could not acquire a semaphore for execution\"(1624)", "Delete MethodInvocation(1625)", "Delete MethodInvocation(1626)", "Delete ExpressionStatement(1627)", "Delete SimpleName: observer(1628)", "Delete SimpleName: onCompleted(1629)", "Delete MethodInvocation(1630)", "Delete ExpressionStatement(1631)", "Delete Block(1632)", "Delete IfStatement(1633)", "Delete Block(1634)", "Delete MethodDeclaration(1635)", "Delete Modifier: final(1639)", "Delete SimpleName: Subscriber(1640)", "Delete SimpleType: Subscriber(1641)", "Delete SimpleName: R(1642)", "Delete SimpleType: R(1643)", "Delete WildcardType: ? super R(1644)", "Delete ParameterizedType: Subscriber<? super R>(1645)", "Delete SimpleName: observer(1646)", "Delete SingleVariableDeclaration(1647)", "Delete BooleanLiteral: true(1650)", "Delete MethodInvocation(1651)", "Delete ExpressionStatement(1652)", "Delete Modifier: final(1653)", "Delete SimpleName: Thread(1654)", "Delete SimpleType: Thread(1655)", "Delete SimpleName: callingThread(1656)", "Delete MethodInvocation(1659)", "Delete VariableDeclarationFragment(1660)", "Delete VariableDeclarationStatement(1661)", "Delete Modifier: final(1662)", "Delete SimpleName: HystrixCommand(1663)", "Delete SimpleType: HystrixCommand(1664)", "Delete SimpleName: R(1665)", "Delete SimpleType: R(1666)", "Delete ParameterizedType: HystrixCommand<R>(1667)", "Delete SimpleName: _this(1668)", "Delete ThisExpression(1669)", "Delete VariableDeclarationFragment(1670)", "Delete VariableDeclarationStatement(1671)", "Delete SimpleName: threadPool(1672)", "Delete SimpleName: isQueueSpaceAvailable(1673)", "Delete MethodInvocation(1674)", "Delete PrefixExpression: !(1675)", "Delete SimpleName: RejectedExecutionException(1676)", "Delete SimpleType: RejectedExecutionException(1677)", "Delete StringLiteral: \"Rejected command because thread-pool queueSize is at rejection threshold.\"(1678)", "Delete ClassInstanceCreation(1679)", "Delete ThrowStatement(1680)", "Delete Block(1681)", "Delete IfStatement(1682)", "Delete Modifier: final(1683)", "Delete SimpleName: f(1689)", "Delete SimpleName: threadPool(1690)", "Delete SimpleName: getExecutor(1691)", "Delete MethodInvocation(1692)", "Delete SimpleName: submit(1693)", "Delete SimpleName: concurrencyStrategy(1694)", "Delete SimpleName: wrapCallable(1695)", "Delete SimpleName: HystrixContextCallable(1696)", "Delete SimpleType: HystrixContextCallable(1697)", "Delete SimpleName: R(1698)", "Delete SimpleType: R(1699)", "Delete ParameterizedType: HystrixContextCallable<R>(1700)", "Delete SimpleName: Callable(1701)", "Delete SimpleType: Callable(1702)", "Delete SimpleName: R(1703)", "Delete SimpleType: R(1704)", "Delete ParameterizedType: Callable<R>(1705)", "Delete SimpleName: R(1709)", "Delete SimpleType: R(1710)", "Delete SimpleName: call(1711)", "Delete SimpleName: Exception(1712)", "Delete SimpleType: Exception(1713)", "Delete PrimitiveType: boolean(1714)", "Delete SimpleName: recordDuration(1715)", "Delete BooleanLiteral: true(1716)", "Delete VariableDeclarationFragment(1717)", "Delete VariableDeclarationStatement(1718)", "Delete SimpleName: ExceptionThreadingUtility(1719)", "Delete SimpleName: assignCallingThread(1720)", "Delete SimpleName: callingThread(1721)", "Delete MethodInvocation(1722)", "Delete ExpressionStatement(1723)", "Delete SimpleName: executionHook(1724)", "Delete SimpleName: onThreadStart(1725)", "Delete SimpleName: _this(1726)", "Delete MethodInvocation(1727)", "Delete ExpressionStatement(1728)", "Delete SimpleName: threadPool(1729)", "Delete SimpleName: markThreadExecution(1730)", "Delete MethodInvocation(1731)", "Delete ExpressionStatement(1732)", "Delete SimpleName: Hystrix(1733)", "Delete SimpleName: startCurrentThreadExecutingCommand(1734)", "Delete SimpleName: getCommandKey(1735)", "Delete MethodInvocation(1736)", "Delete MethodInvocation(1737)", "Delete ExpressionStatement(1738)", "Delete SimpleName: R(1739)", "Delete SimpleType: R(1740)", "Delete SimpleName: r(1741)", "Delete SimpleName: executeCommand(1742)", "Delete MethodInvocation(1743)", "Delete VariableDeclarationFragment(1744)", "Delete VariableDeclarationStatement(1745)", "Delete SimpleName: isCommandTimedOut(1746)", "Delete SimpleName: compareAndSet(1747)", "Delete QualifiedName: TimedOutStatus.NOT_EXECUTED(1748)", "Delete QualifiedName: TimedOutStatus.COMPLETED(1749)", "Delete MethodInvocation(1750)", "Delete SimpleName: r(1751)", "Delete SimpleName: executionHook(1752)", "Delete SimpleName: onComplete(1753)", "Delete SimpleName: _this(1754)", "Delete SimpleName: r(1755)", "Delete MethodInvocation(1756)", "Delete Assignment: =(1757)", "Delete ExpressionStatement(1758)", "Delete SimpleName: observer(1759)", "Delete SimpleName: onNext(1760)", "Delete SimpleName: r(1761)", "Delete MethodInvocation(1762)", "Delete ExpressionStatement(1763)", "Delete SimpleName: preTerminationWork(1764)", "Delete SimpleName: recordDuration(1765)", "Delete MethodInvocation(1766)", "Delete ExpressionStatement(1767)", "Delete SimpleName: observer(1768)", "Delete SimpleName: onCompleted(1769)", "Delete MethodInvocation(1770)", "Delete ExpressionStatement(1771)", "Delete SimpleName: r(1772)", "Delete ReturnStatement(1773)", "Delete Block(1774)", "Delete SimpleName: recordDuration(1775)", "Delete BooleanLiteral: false(1776)", "Delete Assignment: =(1777)", "Delete ExpressionStatement(1778)", "Delete SimpleName: preTerminationWork(1779)", "Delete SimpleName: recordDuration(1780)", "Delete MethodInvocation(1781)", "Delete ExpressionStatement(1782)", "Delete NullLiteral(1783)", "Delete ReturnStatement(1784)", "Delete Block(1785)", "Delete IfStatement(1786)", "Delete Block(1787)", "Delete SimpleName: Hystrix(1788)", "Delete SimpleName: endCurrentThreadExecutingCommand(1789)", "Delete MethodInvocation(1790)", "Delete ExpressionStatement(1791)", "Delete Block(1792)", "Delete TryStatement(1793)", "Delete Block(1794)", "Delete SimpleName: Exception(1795)", "Delete SimpleType: Exception(1796)", "Delete SimpleName: e(1797)", "Delete SingleVariableDeclaration(1798)", "Delete SimpleName: preTerminationWork(1799)", "Delete SimpleName: recordDuration(1800)", "Delete MethodInvocation(1801)", "Delete ExpressionStatement(1802)", "Delete SimpleName: isCommandTimedOut(1803)", "Delete SimpleName: compareAndSet(1804)", "Delete QualifiedName: TimedOutStatus.NOT_EXECUTED(1805)", "Delete QualifiedName: TimedOutStatus.COMPLETED(1806)", "Delete MethodInvocation(1807)", "Delete SimpleName: onError(1809)", "Delete MethodInvocation(1811)", "Delete ExpressionStatement(1812)", "Delete Block(1813)", "Delete IfStatement(1814)", "Delete SimpleName: e(1815)", "Delete ThrowStatement(1816)", "Delete Block(1817)", "Delete CatchClause(1818)", "Delete TryStatement(1819)", "Delete Block(1820)", "Delete MethodDeclaration(1821)", "Delete PrimitiveType: void(1823)", "Delete SimpleName: preTerminationWork(1824)", "Delete PrimitiveType: boolean(1825)", "Delete SimpleName: recordDuration(1826)", "Delete SingleVariableDeclaration(1827)", "Delete SimpleName: recordDuration(1828)", "Delete SimpleName: recordTotalExecutionTime(1829)", "Delete SimpleName: invocationStartTime(1830)", "Delete MethodInvocation(1831)", "Delete ExpressionStatement(1832)", "Delete Block(1833)", "Delete IfStatement(1834)", "Delete SimpleName: threadPool(1835)", "Delete SimpleName: markThreadCompletion(1836)", "Delete MethodInvocation(1837)", "Delete ExpressionStatement(1838)", "Delete SimpleName: executionHook(1839)", "Delete MethodInvocation(1842)", "Delete ExpressionStatement(1843)", "Delete Block(1844)", "Delete SimpleType: Exception(1846)", "Delete SimpleName: e(1847)", "Delete SingleVariableDeclaration(1848)", "Delete StringLiteral: \"ExecutionHook.onThreadComplete threw an exception that will be ignored.\"(1851)", "Delete SimpleName: e(1852)", "Delete MethodInvocation(1853)", "Delete ExpressionStatement(1854)", "Delete Block(1855)", "Delete CatchClause(1856)", "Delete TryStatement(1857)", "Delete Block(1858)", "Delete MethodDeclaration(1859)", "Delete AnonymousClassDeclaration(1860)", "Delete ClassInstanceCreation(1861)", "Delete ClassInstanceCreation(1862)", "Delete MethodInvocation(1863)", "Delete MethodInvocation(1864)", "Delete VariableDeclarationFragment(1865)", "Delete VariableDeclarationStatement(1866)", "Delete SimpleName: observer(1867)", "Delete SimpleName: add(1868)", "Delete SimpleName: Subscriptions(1869)", "Delete SimpleName: create(1870)", "Delete SimpleName: Action0(1871)", "Delete SimpleType: Action0(1872)", "Delete MethodDeclaration(1888)", "Delete AnonymousClassDeclaration(1889)", "Delete ClassInstanceCreation(1890)", "Delete MethodInvocation(1891)", "Delete MethodInvocation(1892)", "Delete ExpressionStatement(1893)", "Delete Block(1894)", "Delete SimpleName: RejectedExecutionException(1895)", "Delete SimpleType: RejectedExecutionException(1896)", "Delete SimpleName: e(1897)", "Delete SingleVariableDeclaration(1898)", "Delete SimpleName: metrics(1899)", "Delete SimpleName: markThreadPoolRejection(1900)", "Delete MethodInvocation(1901)", "Delete ExpressionStatement(1902)", "Delete SimpleName: onNext(1904)", "Delete SimpleName: getFallbackOrThrowException(1905)", "Delete QualifiedName: HystrixEventType.THREAD_POOL_REJECTED(1906)", "Delete QualifiedName: FailureType.REJECTED_THREAD_EXECUTION(1907)", "Delete StringLiteral: \"could not be queued for execution\"(1908)", "Delete MethodInvocation(1910)", "Delete MethodInvocation(1911)", "Delete ExpressionStatement(1912)", "Delete SimpleName: observer(1913)", "Delete SimpleName: onCompleted(1914)", "Delete MethodInvocation(1915)", "Delete ExpressionStatement(1916)", "Delete Block(1917)", "Delete CatchClause(1918)", "Delete SimpleName: Exception(1919)", "Delete SimpleType: Exception(1920)", "Delete SimpleName: e(1921)", "Delete SingleVariableDeclaration(1922)", "Delete SimpleName: logger(1923)", "Delete SimpleName: error(1924)", "Delete SimpleName: getLogMessagePrefix(1925)", "Delete MethodInvocation(1926)", "Delete StringLiteral: \": Unexpected exception while submitting to queue.\"(1927)", "Delete InfixExpression: +(1928)", "Delete SimpleName: e(1929)", "Delete MethodInvocation(1930)", "Delete ExpressionStatement(1931)", "Delete SimpleName: onNext(1933)", "Delete SimpleName: getFallbackOrThrowException(1934)", "Delete QualifiedName: HystrixEventType.THREAD_POOL_REJECTED(1935)", "Delete QualifiedName: FailureType.REJECTED_THREAD_EXECUTION(1936)", "Delete StringLiteral: \"had unexpected exception while attempting to queue for execution.\"(1937)", "Delete MethodInvocation(1939)", "Delete MethodInvocation(1940)", "Delete ExpressionStatement(1941)", "Delete SimpleName: observer(1942)", "Delete SimpleName: onCompleted(1943)", "Delete MethodInvocation(1944)", "Delete ExpressionStatement(1945)", "Delete Block(1946)", "Delete CatchClause(1947)", "Delete TryStatement(1948)", "Delete Block(1949)", "Delete MethodDeclaration(1950)", "Delete TextElement: Executes the command and marks success/failure on the circuit-breaker and calls <code>getFallback</code> if a failure occurs.(1951)", "Delete TextElement: <p>(1952)", "Delete TextElement: This does NOT use the circuit-breaker to determine if the command should be executed, use <code>execute()</code> for that. This method will ALWAYS attempt to execute the method.(1953)", "Delete TagElement(1954)", "Delete TextElement:  R(1955)", "Delete TagElement: @return(1956)", "Delete Javadoc(1957)", "Delete SimpleName: R(1959)", "Delete SimpleType: R(1960)", "Delete SimpleName: executeCommand(1961)", "Delete PrimitiveType: long(1962)", "Delete SimpleName: startTime(1963)", "Delete SimpleName: System(1964)", "Delete SimpleName: currentTimeMillis(1965)", "Delete MethodInvocation(1966)", "Delete VariableDeclarationFragment(1967)", "Delete VariableDeclarationStatement(1968)", "Delete SimpleName: metrics(1969)", "Delete SimpleName: incrementConcurrentExecutionCount(1970)", "Delete MethodInvocation(1971)", "Delete ExpressionStatement(1972)", "Delete ThisExpression(1975)", "Delete MethodInvocation(1976)", "Delete ExpressionStatement(1977)", "Delete SimpleName: R(1978)", "Delete SimpleType: R(1979)", "Delete SimpleName: response(1980)", "Delete SimpleName: executionHook(1981)", "Delete SimpleName: onRunSuccess(1982)", "Delete ThisExpression(1983)", "Delete SimpleName: run(1984)", "Delete MethodInvocation(1985)", "Delete MethodInvocation(1986)", "Delete VariableDeclarationFragment(1987)", "Delete VariableDeclarationStatement(1988)", "Delete PrimitiveType: long(1989)", "Delete SimpleName: duration(1990)", "Delete SimpleName: System(1991)", "Delete SimpleName: currentTimeMillis(1992)", "Delete MethodInvocation(1993)", "Delete SimpleName: startTime(1994)", "Delete InfixExpression: -(1995)", "Delete VariableDeclarationFragment(1996)", "Delete VariableDeclarationStatement(1997)", "Delete SimpleName: metrics(1998)", "Delete SimpleName: addCommandExecutionTime(1999)", "Delete SimpleName: duration(2000)", "Delete MethodInvocation(2001)", "Delete ExpressionStatement(2002)", "Delete SimpleName: isCommandTimedOut(2003)", "Delete SimpleName: get(2004)", "Delete MethodInvocation(2005)", "Delete QualifiedName: TimedOutStatus.TIMED_OUT(2006)", "Delete InfixExpression: ==(2007)", "Delete NullLiteral(2008)", "Delete ReturnStatement(2009)", "Delete Block(2010)", "Delete SimpleName: executionResult(2011)", "Delete SimpleName: executionResult(2012)", "Delete SimpleName: addEvents(2013)", "Delete QualifiedName: HystrixEventType.SUCCESS(2014)", "Delete MethodInvocation(2015)", "Delete Assignment: =(2016)", "Delete ExpressionStatement(2017)", "Delete SimpleName: metrics(2018)", "Delete SimpleName: markSuccess(2019)", "Delete SimpleName: duration(2020)", "Delete MethodInvocation(2021)", "Delete ExpressionStatement(2022)", "Delete SimpleName: circuitBreaker(2023)", "Delete SimpleName: markSuccess(2024)", "Delete MethodInvocation(2025)", "Delete ExpressionStatement(2026)", "Delete SimpleName: eventNotifier(2027)", "Delete SimpleName: markCommandExecution(2028)", "Delete SimpleName: getCommandKey(2029)", "Delete MethodInvocation(2030)", "Delete SimpleName: properties(2031)", "Delete SimpleName: executionIsolationStrategy(2032)", "Delete MethodInvocation(2033)", "Delete SimpleName: get(2034)", "Delete MethodInvocation(2035)", "Delete PrimitiveType: int(2036)", "Delete SimpleName: duration(2037)", "Delete CastExpression(2038)", "Delete QualifiedName: executionResult.events(2039)", "Delete MethodInvocation(2040)", "Delete ExpressionStatement(2041)", "Delete SimpleName: response(2042)", "Delete ReturnStatement(2043)", "Delete Block(2044)", "Delete IfStatement(2045)", "Delete Block(2046)", "Delete SimpleName: HystrixBadRequestException(2047)", "Delete SimpleType: HystrixBadRequestException(2048)", "Delete SimpleName: e(2049)", "Delete SingleVariableDeclaration(2050)", "Delete SimpleName: Exception(2051)", "Delete SimpleType: Exception(2052)", "Delete SimpleName: decorated(2053)", "Delete SimpleName: executionHook(2054)", "Delete SimpleName: onRunError(2055)", "Delete ThisExpression(2056)", "Delete SimpleName: e(2057)", "Delete MethodInvocation(2058)", "Delete VariableDeclarationFragment(2059)", "Delete VariableDeclarationStatement(2060)", "Delete SimpleName: decorated(2061)", "Delete SimpleName: HystrixBadRequestException(2062)", "Delete SimpleType: HystrixBadRequestException(2063)", "Delete InstanceofExpression(2064)", "Delete SimpleName: e(2065)", "Delete SimpleName: HystrixBadRequestException(2066)", "Delete SimpleType: HystrixBadRequestException(2067)", "Delete SimpleName: decorated(2068)", "Delete CastExpression(2069)", "Delete Assignment: =(2070)", "Delete ExpressionStatement(2071)", "Delete Block(2072)", "Delete Block(2079)", "Delete IfStatement(2080)", "Delete Block(2081)", "Delete SimpleType: Exception(2083)", "Delete SimpleName: hookException(2084)", "Delete SingleVariableDeclaration(2085)", "Delete StringLiteral: \"Error calling ExecutionHook.onRunError\"(2088)", "Delete SimpleName: hookException(2089)", "Delete MethodInvocation(2090)", "Delete ExpressionStatement(2091)", "Delete Block(2092)", "Delete CatchClause(2093)", "Delete TryStatement(2094)", "Delete SimpleName: e(2095)", "Delete ThrowStatement(2096)", "Delete Block(2097)", "Delete CatchClause(2098)", "Delete SimpleName: Exception(2103)", "Delete SimpleType: Exception(2104)", "Delete SimpleName: e(2105)", "Delete NullLiteral(2106)", "Delete VariableDeclarationFragment(2107)", "Delete VariableDeclarationStatement(2108)", "Delete SimpleName: t(2109)", "Delete InstanceofExpression(2112)", "Delete SimpleName: e(2113)", "Delete SimpleName: Exception(2114)", "Delete SimpleType: Exception(2115)", "Delete SimpleName: t(2116)", "Delete CastExpression(2117)", "Delete Assignment: =(2118)", "Delete ExpressionStatement(2119)", "Delete Block(2120)", "Delete SimpleName: e(2121)", "Delete SimpleName: Exception(2122)", "Delete SimpleType: Exception(2123)", "Delete StringLiteral: \"Throwable caught while executing.\"(2124)", "Delete SimpleName: t(2125)", "Delete ClassInstanceCreation(2126)", "Delete Assignment: =(2127)", "Delete ExpressionStatement(2128)", "Delete Block(2129)", "Delete IfStatement(2130)", "Delete SimpleName: e(2131)", "Delete SimpleName: executionHook(2132)", "Delete SimpleName: onRunError(2133)", "Delete ThisExpression(2134)", "Delete SimpleName: e(2135)", "Delete MethodInvocation(2136)", "Delete Assignment: =(2137)", "Delete ExpressionStatement(2138)", "Delete Block(2139)", "Delete SimpleName: Exception(2140)", "Delete SimpleType: Exception(2141)", "Delete SimpleName: hookException(2142)", "Delete SingleVariableDeclaration(2143)", "Delete SimpleName: logger(2144)", "Delete SimpleName: warn(2145)", "Delete StringLiteral: \"Error calling ExecutionHook.endRunFailure\"(2146)", "Delete SimpleName: hookException(2147)", "Delete MethodInvocation(2148)", "Delete ExpressionStatement(2149)", "Delete Block(2150)", "Delete CatchClause(2151)", "Delete TryStatement(2152)", "Delete SimpleName: isCommandTimedOut(2153)", "Delete SimpleName: get(2154)", "Delete MethodInvocation(2155)", "Delete QualifiedName: TimedOutStatus.TIMED_OUT(2156)", "Delete InfixExpression: ==(2157)", "Delete StringLiteral: \"Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...\"(2160)", "Delete MethodInvocation(2162)", "Delete ExpressionStatement(2163)", "Delete NullLiteral(2164)", "Delete ReturnStatement(2165)", "Delete Block(2166)", "Delete SimpleName: logger(2167)", "Delete SimpleName: debug(2168)", "Delete StringLiteral: \"Error executing HystrixCommand.run(). Proceeding to fallback logic ...\"(2169)", "Delete SimpleName: e(2170)", "Delete MethodInvocation(2171)", "Delete ExpressionStatement(2172)", "Delete Block(2173)", "Delete IfStatement(2174)", "Delete SimpleName: metrics(2175)", "Delete SimpleName: markFailure(2176)", "Delete SimpleName: System(2177)", "Delete SimpleName: currentTimeMillis(2178)", "Delete MethodInvocation(2179)", "Delete SimpleName: startTime(2180)", "Delete InfixExpression: -(2181)", "Delete MethodInvocation(2182)", "Delete ExpressionStatement(2183)", "Delete SimpleName: executionResult(2184)", "Delete SimpleName: executionResult(2185)", "Delete SimpleName: setException(2186)", "Delete SimpleName: e(2187)", "Delete MethodInvocation(2188)", "Delete Assignment: =(2189)", "Delete ExpressionStatement(2190)", "Delete SimpleName: getFallbackOrThrowException(2191)", "Delete QualifiedName: HystrixEventType.FAILURE(2192)", "Delete QualifiedName: FailureType.COMMAND_EXCEPTION(2193)", "Delete StringLiteral: \"failed\"(2194)", "Delete SimpleName: e(2195)", "Delete MethodInvocation(2196)", "Delete ReturnStatement(2197)", "Delete Block(2198)", "Delete CatchClause(2199)", "Delete MethodInvocation(2202)", "Delete ExpressionStatement(2203)", "Delete SimpleName: isExecutionComplete(2204)", "Delete SimpleName: set(2205)", "Delete BooleanLiteral: true(2206)", "Delete MethodInvocation(2207)", "Delete ExpressionStatement(2208)", "Delete Block(2209)", "Delete TryStatement(2210)", "Delete Block(2211)", "Delete MethodDeclaration(2212)", "Delete TextElement: Execute <code>getFallback()</code> within protection of a semaphore that limits number of concurrent executions.(2213)", "Delete TextElement: <p>(2214)", "Delete TextElement: Fallback implementations shouldn't perform anything that can be blocking, but we protect against it anyways in case someone doesn't abide by the contract.(2215)", "Delete TextElement: <p>(2216)", "Delete TextElement: If something in the <code>getFallback()</code> implementation is latent (such as a network call) then the semaphore will cause us to start rejecting requests rather than allowing potentially(2217)", "Delete TextElement: all threads to pile up and block.(2218)", "Delete TagElement(2219)", "Delete TextElement:  K(2220)", "Delete TagElement: @return(2221)", "Delete SimpleName: UnsupportedOperationException(2222)", "Delete TextElement: if getFallback() not implemented(2223)", "Delete TagElement: @throws(2224)", "Delete SimpleName: HystrixException(2225)", "Delete TextElement: if getFallback() fails (throws an Exception) or is rejected by the semaphore(2226)", "Delete TagElement: @throws(2227)", "Delete Javadoc(2228)", "Delete SimpleName: executionHook(2248)", "Delete ThisExpression(2250)", "Delete MethodInvocation(2252)", "Delete SimpleName: R(2230)", "Delete SimpleType: R(2231)", "Delete SimpleName: getFallbackWithProtection(2232)", "Delete SimpleName: TryableSemaphore(2233)", "Delete SimpleType: TryableSemaphore(2234)", "Delete SimpleName: fallbackSemaphore(2235)", "Delete SimpleName: getFallbackSemaphore(2236)", "Delete MethodInvocation(2237)", "Delete VariableDeclarationFragment(2238)", "Delete VariableDeclarationStatement(2239)", "Delete SimpleName: fallbackSemaphore(2240)", "Delete SimpleName: tryAcquire(2241)", "Delete MethodInvocation(2242)", "Delete SimpleName: executionHook(2243)", "Delete SimpleName: onFallbackStart(2244)", "Delete ThisExpression(2245)", "Delete MethodInvocation(2246)", "Delete ExpressionStatement(2247)", "Delete Block(2255)", "Delete SimpleName: RuntimeException(2256)", "Delete SimpleType: RuntimeException(2257)", "Delete SimpleName: e(2258)", "Delete SingleVariableDeclaration(2259)", "Delete SimpleName: Exception(2260)", "Delete SimpleType: Exception(2261)", "Delete SimpleName: decorated(2262)", "Delete SimpleName: executionHook(2263)", "Delete SimpleName: onFallbackError(2264)", "Delete ThisExpression(2265)", "Delete SimpleName: e(2266)", "Delete MethodInvocation(2267)", "Delete VariableDeclarationFragment(2268)", "Delete VariableDeclarationStatement(2269)", "Delete SimpleName: decorated(2270)", "Delete InstanceofExpression(2273)", "Delete SimpleName: e(2274)", "Delete SimpleName: RuntimeException(2275)", "Delete SimpleType: RuntimeException(2276)", "Delete SimpleName: decorated(2277)", "Delete CastExpression(2278)", "Delete Assignment: =(2279)", "Delete ExpressionStatement(2280)", "Delete Block(2281)", "Delete SimpleName: logger(2282)", "Delete SimpleName: warn(2283)", "Delete StringLiteral: \"ExecutionHook.onFallbackError returned an exception that was not an instance of RuntimeException so will be ignored.\"(2284)", "Delete SimpleName: decorated(2285)", "Delete MethodInvocation(2286)", "Delete ExpressionStatement(2287)", "Delete Block(2288)", "Delete IfStatement(2289)", "Delete SimpleName: e(2290)", "Delete ThrowStatement(2291)", "Delete Block(2292)", "Delete CatchClause(2293)", "Delete SimpleName: fallbackSemaphore(2294)", "Delete SimpleName: release(2295)", "Delete MethodInvocation(2296)", "Delete ExpressionStatement(2297)", "Delete Block(2298)", "Delete TryStatement(2299)", "Delete Block(2300)", "Delete SimpleName: metrics(2301)", "Delete SimpleName: markFallbackRejection(2302)", "Delete MethodInvocation(2303)", "Delete ExpressionStatement(2304)", "Delete SimpleName: logger(2305)", "Delete SimpleName: debug(2306)", "Delete StringLiteral: \"HystrixCommand Fallback Rejection.\"(2307)", "Delete MethodInvocation(2308)", "Delete ExpressionStatement(2309)", "Delete SimpleName: HystrixRuntimeException(2310)", "Delete SimpleType: HystrixRuntimeException(2311)", "Delete QualifiedName: FailureType.REJECTED_SEMAPHORE_FALLBACK(2312)", "Delete ThisExpression(2313)", "Delete SimpleName: getClass(2314)", "Delete MethodInvocation(2315)", "Delete SimpleName: getLogMessagePrefix(2316)", "Delete MethodInvocation(2317)", "Delete StringLiteral: \" fallback execution rejected.\"(2318)", "Delete InfixExpression: +(2319)", "Delete NullLiteral(2320)", "Delete NullLiteral(2321)", "Delete ClassInstanceCreation(2322)", "Delete ThrowStatement(2323)", "Delete Block(2324)", "Delete IfStatement(2325)", "Delete Block(2326)", "Delete SimpleName: HystrixRuntimeException(2328)", "Delete TagElement: @throws(2329)", "Delete Javadoc(2330)", "Delete SimpleName: R(2332)", "Delete SimpleType: R(2333)", "Delete SimpleName: getFallbackOrThrowException(2334)", "Delete SimpleName: eventType(2337)", "Delete SingleVariableDeclaration(2338)", "Delete SimpleName: FailureType(2339)", "Delete SimpleType: FailureType(2340)", "Delete SimpleName: failureType(2341)", "Delete SingleVariableDeclaration(2342)", "Delete SimpleName: message(2345)", "Delete SingleVariableDeclaration(2346)", "Delete SimpleName: eventType(2348)", "Delete SimpleName: failureType(2349)", "Delete NullLiteral(2351)", "Delete SimpleName: executionHook(2409)", "Delete ThisExpression(2411)", "Delete StringLiteral: \"Error calling ExecutionHook.onError\"(2442)", "Delete SimpleName: hookException(2443)", "Delete SimpleName: e(2549)", "Delete SimpleName: executionHook(2550)", "Delete ThisExpression(2552)", "Delete MethodInvocation(2555)", "Delete Assignment: =(2556)", "Delete SimpleName: HystrixRuntimeException(2356)", "Delete TagElement: @throws(2357)", "Delete Javadoc(2358)", "Delete SimpleName: R(2360)", "Delete SimpleType: R(2361)", "Delete SimpleName: getFallbackOrThrowException(2362)", "Delete SimpleName: HystrixEventType(2363)", "Delete SimpleType: HystrixEventType(2364)", "Delete SimpleName: eventType(2365)", "Delete SingleVariableDeclaration(2366)", "Delete SimpleName: FailureType(2367)", "Delete SimpleType: FailureType(2368)", "Delete SimpleName: failureType(2369)", "Delete SingleVariableDeclaration(2370)", "Delete SimpleName: message(2373)", "Delete SingleVariableDeclaration(2374)", "Delete SimpleName: properties(2379)", "Delete SimpleName: fallbackEnabled(2380)", "Delete MethodInvocation(2381)", "Delete SimpleName: get(2382)", "Delete MethodInvocation(2383)", "Delete SimpleName: executionResult(2384)", "Delete SimpleName: executionResult(2385)", "Delete SimpleName: addEvents(2386)", "Delete SimpleName: eventType(2387)", "Delete MethodInvocation(2388)", "Delete Assignment: =(2389)", "Delete ExpressionStatement(2390)", "Delete SimpleName: R(2391)", "Delete SimpleType: R(2392)", "Delete SimpleName: fallback(2393)", "Delete SimpleName: getFallbackWithProtection(2394)", "Delete MethodInvocation(2395)", "Delete VariableDeclarationFragment(2396)", "Delete VariableDeclarationStatement(2397)", "Delete SimpleName: metrics(2398)", "Delete SimpleName: markFallbackSuccess(2399)", "Delete MethodInvocation(2400)", "Delete ExpressionStatement(2401)", "Delete SimpleName: executionResult(2402)", "Delete SimpleName: executionResult(2403)", "Delete SimpleName: addEvents(2404)", "Delete QualifiedName: HystrixEventType.FALLBACK_SUCCESS(2405)", "Delete MethodInvocation(2406)", "Delete Assignment: =(2407)", "Delete ExpressionStatement(2408)", "Delete Block(2415)", "Delete SimpleName: UnsupportedOperationException(2416)", "Delete SimpleType: UnsupportedOperationException(2417)", "Delete SimpleName: fe(2418)", "Delete SingleVariableDeclaration(2419)", "Delete SimpleName: logger(2420)", "Delete SimpleName: debug(2421)", "Delete StringLiteral: \"No fallback for HystrixCommand. \"(2422)", "Delete SimpleName: fe(2423)", "Delete MethodInvocation(2424)", "Delete ExpressionStatement(2425)", "Delete SimpleName: e(2426)", "Delete SimpleName: executionHook(2427)", "Delete SimpleName: onError(2428)", "Delete ThisExpression(2429)", "Delete SimpleName: failureType(2430)", "Delete SimpleName: e(2431)", "Delete MethodInvocation(2432)", "Delete Assignment: =(2433)", "Delete ExpressionStatement(2434)", "Delete Block(2435)", "Delete SimpleName: Exception(2436)", "Delete SimpleType: Exception(2437)", "Delete SimpleName: hookException(2438)", "Delete SingleVariableDeclaration(2439)", "Delete Block(2446)", "Delete CatchClause(2447)", "Delete TryStatement(2448)", "Delete SimpleName: HystrixRuntimeException(2449)", "Delete SimpleType: HystrixRuntimeException(2450)", "Delete SimpleName: failureType(2451)", "Delete ThisExpression(2452)", "Delete SimpleName: getClass(2453)", "Delete MethodInvocation(2454)", "Delete SimpleName: getLogMessagePrefix(2455)", "Delete MethodInvocation(2456)", "Delete StringLiteral: \" \"(2457)", "Delete SimpleName: message(2458)", "Delete StringLiteral: \" and no fallback available.\"(2459)", "Delete InfixExpression: +(2460)", "Delete SimpleName: e(2461)", "Delete SimpleName: fe(2462)", "Delete ClassInstanceCreation(2463)", "Delete ThrowStatement(2464)", "Delete Block(2465)", "Delete CatchClause(2466)", "Delete SimpleName: Exception(2467)", "Delete SimpleType: Exception(2468)", "Delete SimpleName: fe(2469)", "Delete SingleVariableDeclaration(2470)", "Delete SimpleName: logger(2471)", "Delete SimpleName: debug(2472)", "Delete StringLiteral: \"HystrixCommand execution \"(2473)", "Delete SimpleName: failureType(2474)", "Delete SimpleName: name(2475)", "Delete MethodInvocation(2476)", "Delete StringLiteral: \" and fallback retrieval failed.\"(2477)", "Delete InfixExpression: +(2478)", "Delete SimpleName: fe(2479)", "Delete MethodInvocation(2480)", "Delete ExpressionStatement(2481)", "Delete SimpleName: metrics(2482)", "Delete SimpleName: markFallbackFailure(2483)", "Delete MethodInvocation(2484)", "Delete ExpressionStatement(2485)", "Delete SimpleName: executionResult(2486)", "Delete SimpleName: executionResult(2487)", "Delete SimpleName: addEvents(2488)", "Delete QualifiedName: HystrixEventType.FALLBACK_FAILURE(2489)", "Delete MethodInvocation(2490)", "Delete Assignment: =(2491)", "Delete ExpressionStatement(2492)", "Delete SimpleName: e(2493)", "Delete SimpleName: executionHook(2494)", "Delete SimpleName: onError(2495)", "Delete ThisExpression(2496)", "Delete SimpleName: failureType(2497)", "Delete SimpleName: e(2498)", "Delete MethodInvocation(2499)", "Delete Assignment: =(2500)", "Delete ExpressionStatement(2501)", "Delete Block(2502)", "Delete SimpleName: Exception(2503)", "Delete SimpleType: Exception(2504)", "Delete SimpleName: hookException(2505)", "Delete SingleVariableDeclaration(2506)", "Delete SimpleName: logger(2507)", "Delete SimpleName: warn(2508)", "Delete StringLiteral: \"Error calling ExecutionHook.onError\"(2509)", "Delete SimpleName: hookException(2510)", "Delete MethodInvocation(2511)", "Delete ExpressionStatement(2512)", "Delete Block(2513)", "Delete CatchClause(2514)", "Delete TryStatement(2515)", "Delete SimpleName: HystrixRuntimeException(2516)", "Delete SimpleType: HystrixRuntimeException(2517)", "Delete SimpleName: failureType(2518)", "Delete ThisExpression(2519)", "Delete SimpleName: getClass(2520)", "Delete MethodInvocation(2521)", "Delete SimpleName: getLogMessagePrefix(2522)", "Delete MethodInvocation(2523)", "Delete StringLiteral: \" \"(2524)", "Delete SimpleName: message(2525)", "Delete StringLiteral: \" and failed retrieving fallback.\"(2526)", "Delete InfixExpression: +(2527)", "Delete SimpleName: e(2528)", "Delete SimpleName: fe(2529)", "Delete ClassInstanceCreation(2530)", "Delete ThrowStatement(2531)", "Delete Block(2532)", "Delete CatchClause(2533)", "Delete TryStatement(2534)", "Delete Block(2535)", "Delete SimpleName: logger(2536)", "Delete SimpleName: debug(2537)", "Delete StringLiteral: \"Fallback disabled for HystrixCommand so will throw HystrixRuntimeException. \"(2538)", "Delete SimpleName: e(2539)", "Delete MethodInvocation(2540)", "Delete ExpressionStatement(2541)", "Delete SimpleName: executionResult(2542)", "Delete SimpleName: executionResult(2543)", "Delete SimpleName: addEvents(2544)", "Delete SimpleName: eventType(2545)", "Delete MethodInvocation(2546)", "Delete Assignment: =(2547)", "Delete ExpressionStatement(2548)", "Delete Block(2558)", "Delete SimpleName: Exception(2559)", "Delete SimpleType: Exception(2560)", "Delete SimpleName: hookException(2561)", "Delete SingleVariableDeclaration(2562)", "Delete SimpleName: logger(2563)", "Delete SimpleName: warn(2564)", "Delete StringLiteral: \"Error calling ExecutionHook.onError\"(2565)", "Delete SimpleName: hookException(2566)", "Delete MethodInvocation(2567)", "Delete ExpressionStatement(2568)", "Delete Block(2569)", "Delete CatchClause(2570)", "Delete TryStatement(2571)", "Delete SimpleName: HystrixRuntimeException(2572)", "Delete SimpleType: HystrixRuntimeException(2573)", "Delete SimpleName: failureType(2574)", "Delete ThisExpression(2575)", "Delete SimpleName: getClass(2576)", "Delete MethodInvocation(2577)", "Delete SimpleName: getLogMessagePrefix(2578)", "Delete MethodInvocation(2579)", "Delete StringLiteral: \" \"(2580)", "Delete SimpleName: message(2581)", "Delete StringLiteral: \" and fallback disabled.\"(2582)", "Delete InfixExpression: +(2583)", "Delete SimpleName: e(2584)", "Delete NullLiteral(2585)", "Delete ClassInstanceCreation(2586)", "Delete ThrowStatement(2587)", "Delete Block(2588)", "Delete IfStatement(2589)", "Delete Block(2590)", "Delete SimpleName: isExecutionComplete(2591)", "Delete SimpleName: set(2592)", "Delete BooleanLiteral: true(2593)", "Delete MethodInvocation(2594)", "Delete ExpressionStatement(2595)", "Delete Block(2596)", "Delete TryStatement(2597)", "Delete Block(2598)", "Delete MethodDeclaration(2599)"]}}, {"HystrixObservableCommand_cluster": {"actions": [{"root": "INS IfStatement to Block at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS ParameterizedType: OnSubscribe<R> to ClassInstanceCreation at 0", "INS SimpleName: R to SimpleType: R at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ExpressionStatement to Block at 1", "INS SimpleName: s to SingleVariableDeclaration at 1", "INS ParameterizedType: Subscriber<? super R> to SingleVariableDeclaration at 0", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: R to SimpleType: R at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS WildcardType: ? super R to ParameterizedType: Subscriber<? super R> at 1", "INS SimpleName: onRunStart to MethodInvocation at 1", "INS SimpleName: _self to MethodInvocation at 2", "INS SimpleName: run to Assignment: = at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: executionHook to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Subscriber to SimpleType: Subscriber at 0", "INS IfStatement to Block at 6", "INS SimpleName: Observable to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: executionHook to MethodInvocation at 0", "INS SimpleName: _self to MethodInvocation at 2", "INS SimpleName: subscribeOn to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleType: R to ParameterizedType: OnSubscribe<R> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: call to MethodDeclaration at 3", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS SimpleType: R to WildcardType: ? super R at 0", "INS SimpleName: onThreadStart to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: OnSubscribe to SimpleType: OnSubscribe at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleType: Subscriber to ParameterizedType: Subscriber<? super R> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: OnSubscribe to ParameterizedType: OnSubscribe<R> at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV TryStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: run to MethodInvocation at 0", "MOV SimpleName: subscribeOn to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: isResponseRejected to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: > to InfixExpression: && at 0"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS SimpleName: isCommandTimedOut to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS QualifiedName: TimedOutStatus.TIMED_OUT to InfixExpression: == at 1", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"timed out before executing run()\" to ClassInstanceCreation at 1", "INS SimpleName: onError to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleName: s to MethodInvocation at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS SimpleName: s to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Observable to MethodInvocation at 0", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS SimpleType: R to MethodInvocation at 1", "INS SimpleName: t to MethodInvocation at 3", "INS SimpleName: error to MethodInvocation at 2", "INS SimpleName: R to SimpleType: R at 0", "INS SimpleType: Action0 to VariableDeclarationStatement at 1", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS SimpleName: endCurrentThread to VariableDeclarationFragment at 0", "INS SimpleName: startCurrentThreadExecutingCommand to MethodInvocation at 1", "INS SimpleName: subscribe to MethodInvocation at 1", "INS SimpleName: Action0 to SimpleType: Action0 at 0", "INS Block to CatchClause at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to TryStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS TryStatement to Block at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getCommandKey to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Block to IfStatement at 2", "INS CatchClause to TryStatement at 1", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Hystrix to MethodInvocation at 0"]}, {"root": "INS SimpleName: _self to MethodInvocation at 2", "operations": ["INS SimpleName: _self to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: s to MethodInvocation at 2", "INS SimpleName: call to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: call to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: run to MethodInvocation at 0", "INS SimpleName: subscribe to MethodInvocation at 1", "INS SimpleName: Action0 to SimpleType: Action0 at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: endCurrentThread to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Action0 to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: doOnTerminate to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: _self to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "UPDATE from run to executionHook", "operations": ["UPD SimpleName: run from run to executionHook"]}, {"root": "UPDATE from subscribeOn to onThreadComplete", "operations": ["UPD SimpleName: subscribeOn from subscribeOn to onThreadComplete"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: run", "DEL Assignment: =", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"HystrixObservableCommand_diff": {"operations": ["Insert IfStatement(1368) into Block(1775) at 5", "Move MethodInvocation(1240) into IfStatement(1368) at 0", "Insert Block(1341) into IfStatement(1368) at 1", "Insert Block(1367) into IfStatement(1368) at 2", "Move ExpressionStatement(1245) into Block(1341) at 0", "Insert ExpressionStatement(1340) into Block(1341) at 1", "Insert ExpressionStatement(1346) into Block(1367) at 0", "Move TryStatement(1232) into Block(1367) at 1", "Insert Assignment: =(1339) into ExpressionStatement(1340) at 0", "Insert MethodInvocation(1345) into ExpressionStatement(1346) at 0", "Insert SimpleName: run(1225) into Assignment: =(1339) at 0", "Insert MethodInvocation(1338) into Assignment: =(1339) at 1", "Insert SimpleName: executionHook(1342) into MethodInvocation(1345) at 0", "Insert SimpleName: onRunStart(1343) into MethodInvocation(1345) at 1", "Insert SimpleName: _self(1344) into MethodInvocation(1345) at 2", "Insert MethodInvocation(1333) into MethodInvocation(1338) at 0", "Insert SimpleName: subscribeOn(1334) into MethodInvocation(1338) at 1", "Move MethodInvocation(1251) into MethodInvocation(1338) at 2", "Insert SimpleName: Observable(1226) into MethodInvocation(1333) at 0", "Insert SimpleName: create(1227) into MethodInvocation(1333) at 1", "Insert ClassInstanceCreation(1332) into MethodInvocation(1333) at 2", "Insert ParameterizedType: OnSubscribe<R>(1232) into ClassInstanceCreation(1332) at 0", "Insert AnonymousClassDeclaration(1331) into ClassInstanceCreation(1332) at 1", "Insert SimpleType: OnSubscribe(1229) into ParameterizedType: OnSubscribe<R>(1232) at 0", "Insert SimpleType: R(1231) into ParameterizedType: OnSubscribe<R>(1232) at 1", "Insert MethodDeclaration(1330) into AnonymousClassDeclaration(1331) at 0", "Insert SimpleName: OnSubscribe(1228) into SimpleType: OnSubscribe(1229) at 0", "Insert SimpleName: R(1230) into SimpleType: R(1231) at 0", "Insert MarkerAnnotation(1234) into MethodDeclaration(1330) at 0", "Insert Modifier: public(1235) into MethodDeclaration(1330) at 1", "Insert PrimitiveType: void(1236) into MethodDeclaration(1330) at 2", "Insert SimpleName: call(1237) into MethodDeclaration(1330) at 3", "Insert SingleVariableDeclaration(1245) into MethodDeclaration(1330) at 4", "Insert Block(1329) into MethodDeclaration(1330) at 5", "Insert InfixExpression: &&(1041) into IfStatement(1047) at 0", "Insert SimpleName: Override(1233) into MarkerAnnotation(1234) at 0", "Insert ParameterizedType: Subscriber<? super R>(1243) into SingleVariableDeclaration(1245) at 0", "Insert SimpleName: s(1244) into SingleVariableDeclaration(1245) at 1", "Move ExpressionStatement(1194) into Block(1329) at 0", "Insert ExpressionStatement(1255) into Block(1329) at 1", "Move IfStatement(1256) into Block(1329) at 2", "Move InfixExpression: >(1037) into InfixExpression: &&(1041) at 0", "Insert PrefixExpression: !(1040) into InfixExpression: &&(1041) at 1", "Insert SimpleType: Subscriber(1239) into ParameterizedType: Subscriber<? super R>(1243) at 0", "Insert WildcardType: ? super R(1242) into ParameterizedType: Subscriber<? super R>(1243) at 1", "Insert MethodInvocation(1254) into ExpressionStatement(1255) at 0", "Insert InfixExpression: ==(1260) into IfStatement(1328) at 0", "Insert Block(1269) into IfStatement(1328) at 1", "Insert Block(1327) into IfStatement(1328) at 2", "Insert MethodInvocation(1039) into PrefixExpression: !(1040) at 0", "Insert SimpleName: Subscriber(1238) into SimpleType: Subscriber(1239) at 0", "Insert SimpleType: R(1241) into WildcardType: ? super R(1242) at 0", "Insert SimpleName: _self(1248) into MethodInvocation(1249) at 2", "Insert SimpleName: executionHook(1251) into MethodInvocation(1254) at 0", "Insert SimpleName: onThreadStart(1252) into MethodInvocation(1254) at 1", "Insert SimpleName: _self(1253) into MethodInvocation(1254) at 2", "Insert MethodInvocation(1258) into InfixExpression: ==(1260) at 0", "Insert QualifiedName: TimedOutStatus.TIMED_OUT(1259) into InfixExpression: ==(1260) at 1", "Insert ExpressionStatement(1268) into Block(1269) at 0", "Insert TryStatement(1326) into Block(1327) at 0", "Insert SimpleName: isResponseRejected(1038) into MethodInvocation(1039) at 0", "Insert SimpleName: R(1240) into SimpleType: R(1241) at 0", "Insert SimpleName: isCommandTimedOut(1256) into MethodInvocation(1258) at 0", "Insert SimpleName: get(1257) into MethodInvocation(1258) at 1", "Insert MethodInvocation(1267) into ExpressionStatement(1268) at 0", "Insert Block(1309) into TryStatement(1326) at 0", "Insert CatchClause(1325) into TryStatement(1326) at 1", "Insert SimpleName: s(1261) into MethodInvocation(1267) at 0", "Insert SimpleName: onError(1262) into MethodInvocation(1267) at 1", "Insert ClassInstanceCreation(1266) into MethodInvocation(1267) at 2", "Insert VariableDeclarationStatement(1280) into Block(1309) at 0", "Move ExpressionStatement(1254) into Block(1309) at 1", "Insert SingleVariableDeclaration(1313) into CatchClause(1325) at 0", "Insert Block(1324) into CatchClause(1325) at 1", "Insert SimpleType: RuntimeException(1264) into ClassInstanceCreation(1266) at 0", "Insert StringLiteral: \"timed out before executing run()\"(1265) into ClassInstanceCreation(1266) at 1", "Insert Modifier: final(1270) into VariableDeclarationStatement(1280) at 0", "Insert SimpleType: Action0(1272) into VariableDeclarationStatement(1280) at 1", "Insert VariableDeclarationFragment(1279) into VariableDeclarationStatement(1280) at 2", "Insert MethodInvocation(1307) into ExpressionStatement(1308) at 0", "Insert SimpleType: Throwable(1311) into SingleVariableDeclaration(1313) at 0", "Insert SimpleName: t(1312) into SingleVariableDeclaration(1313) at 1", "Insert ExpressionStatement(1323) into Block(1324) at 0", "Insert SimpleName: RuntimeException(1263) into SimpleType: RuntimeException(1264) at 0", "Insert SimpleName: Action0(1271) into SimpleType: Action0(1272) at 0", "Insert SimpleName: endCurrentThread(1273) into VariableDeclarationFragment(1279) at 0", "Insert MethodInvocation(1278) into VariableDeclarationFragment(1279) at 1", "Insert MethodInvocation(1304) into MethodInvocation(1307) at 0", "Insert SimpleName: subscribe(1305) into MethodInvocation(1307) at 1", "Insert SimpleName: s(1306) into MethodInvocation(1307) at 2", "Insert SimpleName: Throwable(1310) into SimpleType: Throwable(1311) at 0", "Insert MethodInvocation(1322) into ExpressionStatement(1323) at 0", "Insert SimpleName: Hystrix(1274) into MethodInvocation(1278) at 0", "Insert SimpleName: startCurrentThreadExecutingCommand(1275) into MethodInvocation(1278) at 1", "Insert MethodInvocation(1277) into MethodInvocation(1278) at 2", "Insert MethodInvocation(1282) into MethodInvocation(1304) at 0", "Insert SimpleName: doOnTerminate(1283) into MethodInvocation(1304) at 1", "Insert ClassInstanceCreation(1303) into MethodInvocation(1304) at 2", "Insert MethodInvocation(1319) into MethodInvocation(1322) at 0", "Insert SimpleName: subscribe(1320) into MethodInvocation(1322) at 1", "Insert SimpleName: s(1321) into MethodInvocation(1322) at 2", "Insert SimpleName: getCommandKey(1276) into MethodInvocation(1277) at 0", "Insert SimpleName: run(1281) into MethodInvocation(1282) at 0", "Insert SimpleType: Action0(1285) into ClassInstanceCreation(1303) at 0", "Insert AnonymousClassDeclaration(1302) into ClassInstanceCreation(1303) at 1", "Insert SimpleName: Observable(1314) into MethodInvocation(1319) at 0", "Insert SimpleType: R(1316) into MethodInvocation(1319) at 1", "Insert SimpleName: error(1317) into MethodInvocation(1319) at 2", "Insert SimpleName: t(1318) into MethodInvocation(1319) at 3", "Insert SimpleName: Action0(1284) into SimpleType: Action0(1285) at 0", "Insert MethodDeclaration(1301) into AnonymousClassDeclaration(1302) at 0", "Insert SimpleName: R(1315) into SimpleType: R(1316) at 0", "Insert MarkerAnnotation(1287) into MethodDeclaration(1301) at 0", "Insert Modifier: public(1288) into MethodDeclaration(1301) at 1", "Insert PrimitiveType: void(1289) into MethodDeclaration(1301) at 2", "Insert SimpleName: call(1290) into MethodDeclaration(1301) at 3", "Insert Block(1300) into MethodDeclaration(1301) at 4", "Insert SimpleName: Override(1286) into MarkerAnnotation(1287) at 0", "Insert ExpressionStatement(1295) into Block(1300) at 0", "Insert ExpressionStatement(1299) into Block(1300) at 1", "Insert MethodInvocation(1294) into ExpressionStatement(1295) at 0", "Insert MethodInvocation(1298) into ExpressionStatement(1299) at 0", "Update SimpleName: run(1247) to executionHook", "Move SimpleName: run(1247) into MethodInvocation(1294) at 0", "Update SimpleName: subscribeOn(1248) to onThreadComplete", "Move SimpleName: subscribeOn(1248) into MethodInvocation(1294) at 1", "Insert SimpleName: _self(1293) into MethodInvocation(1294) at 2", "Insert SimpleName: endCurrentThread(1296) into MethodInvocation(1298) at 0", "Insert SimpleName: call(1297) into MethodInvocation(1298) at 1", "Delete ThisExpression(1192)", "Delete SimpleName: run(1246)", "Delete MethodInvocation(1252)", "Delete Assignment: =(1253)", "Delete Block(1255)"]}}, {"HystrixRequestLog_cluster": {"actions": [{"root": "UPDATE from HystrixCommand to HystrixCommand.HystrixCommandFromObservableCommand", "operations": ["UPD SimpleType: HystrixCommand from HystrixCommand to HystrixCommand.HystrixCommandFromObservableCommand"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS CastExpression to ParenthesizedExpression at 0", "INS SimpleType: HystrixCommand.HystrixCommandFromObservableCommand to CastExpression at 0", "INS SimpleName: _c to VariableDeclarationFragment at 0", "INS SimpleName: getOriginal to MethodInvocation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"rawtypes\" to SingleMemberAnnotation at 1", "INS QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand to SimpleType: HystrixCommand.HystrixCommandFromObservableCommand at 0", "INS SimpleName: command to CastExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS SingleMemberAnnotation to VariableDeclarationStatement at 0"]}, {"root": "INS QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand to SimpleType: HystrixCommand at 0", "operations": ["INS QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand to SimpleType: HystrixCommand at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: HystrixCommand<?> to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleName: _c to MethodInvocation at 2", "operations": ["INS SimpleName: _c to MethodInvocation at 2"]}, {"root": "DEL SimpleName: HystrixCommand", "operations": ["DEL SimpleName: HystrixCommand"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: command", "DEL CastExpression"]}]}}, {"HystrixRequestLog_diff": {"operations": ["Update SimpleType: HystrixCommand(346) to HystrixCommand.HystrixCommandFromObservableCommand", "Insert VariableDeclarationStatement(364) into Block(380) at 0", "Insert QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand(345) into SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(346) at 0", "Insert SingleMemberAnnotation(350) into VariableDeclarationStatement(364) at 0", "Move ParameterizedType: HystrixCommand<?>(353) into VariableDeclarationStatement(364) at 1", "Insert VariableDeclarationFragment(363) into VariableDeclarationStatement(364) at 2", "Insert SimpleName: SuppressWarnings(348) into SingleMemberAnnotation(350) at 0", "Insert StringLiteral: \"rawtypes\"(349) into SingleMemberAnnotation(350) at 1", "Insert SimpleName: _c(355) into VariableDeclarationFragment(363) at 0", "Insert MethodInvocation(362) into VariableDeclarationFragment(363) at 1", "Insert ParenthesizedExpression(360) into MethodInvocation(362) at 0", "Insert SimpleName: getOriginal(361) into MethodInvocation(362) at 1", "Insert SimpleName: _c(367) into MethodInvocation(368) at 2", "Insert CastExpression(359) into ParenthesizedExpression(360) at 0", "Insert SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(357) into CastExpression(359) at 0", "Insert SimpleName: command(358) into CastExpression(359) at 1", "Insert QualifiedName: HystrixCommand.HystrixCommandFromObservableCommand(356) into SimpleType: HystrixCommand.HystrixCommandFromObservableCommand(357) at 0", "Delete SimpleName: HystrixCommand(345)", "Delete SimpleName: command(354)", "Delete CastExpression(355)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}