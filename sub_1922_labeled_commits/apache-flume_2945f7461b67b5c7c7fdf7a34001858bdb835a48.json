{"application": "apache-flume", "csha": "2945f7461b67b5c7c7fdf7a34001858bdb835a48", "files": [{"ChannelProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.common.base.Preconditions to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.flume.Context to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.flume.FlumeException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.flume.interceptor.Interceptor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.flume.interceptor.InterceptorChain to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.flume.conf.Configurable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS SimpleType: Configurable to TypeDeclaration: class at 3", "operations": ["INS SimpleType: Configurable to TypeDeclaration: class at 3", "INS SimpleName: Configurable to SimpleType: Configurable at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: interceptorChain to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: InterceptorChain to SimpleType: InterceptorChain at 0", "INS SimpleType: InterceptorChain to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: initialize to MethodDeclaration at 2", "INS SimpleName: interceptorChain to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to MethodDeclaration at 3", "INS SimpleName: initialize to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: close to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: interceptorChain to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Block to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: close to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: context to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: context to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: configure to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: context to TagElement: @param at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: configureInterceptors to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: Context to SingleVariableDeclaration at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS TextElement: The Context of the associated Source is passed. to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS QualifiedName: Interceptor.Builder to SimpleType: Interceptor.Builder at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: e to MethodInvocation at 3", "INS Block to CatchClause at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: Interceptor.Builder to VariableDeclarationStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleType: FlumeException to ClassInstanceCreation at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: interceptorContext to VariableDeclarationFragment at 0", "INS ThrowStatement to Block at 1", "INS StringLiteral: \"Unable to access Builder. Exception follows.\" to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: getSubProperties to MethodInvocation at 1", "INS SimpleType: Interceptor.Builder to TypeLiteral at 0", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleType: Context to VariableDeclarationStatement at 0", "INS SimpleName: interceptorName to SingleVariableDeclaration at 1", "INS QualifiedName: Interceptor.Builder to SimpleType: Interceptor.Builder at 0", "INS StringLiteral: \"Could not instantiate Builder. Exception follows.\" to MethodInvocation at 2", "INS SimpleType: Interceptor to ParameterizedType: List<Interceptor> at 1", "INS StringLiteral: \".\" to InfixExpression: + at 1", "INS SimpleName: setInterceptors to MethodInvocation at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: interceptorName to InfixExpression: + at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: interceptorListStr to MethodInvocation at 0", "INS SimpleName: IllegalAccessException to SimpleType: IllegalAccessException at 0", "INS SimpleName: interceptors to MethodInvocation at 0", "INS SimpleName: FlumeException to SimpleType: FlumeException at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS SimpleName: type to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: Context to ClassInstanceCreation at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: context to SingleVariableDeclaration at 1", "INS ParameterizedType: Class<?> to VariableDeclarationStatement at 0", "INS SimpleName: getSubProperties to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS EnhancedForStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: Interceptor to SimpleType: Interceptor at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: interceptorContexts to VariableDeclarationFragment at 0", "INS StringLiteral: \"interceptors.\" to MethodInvocation at 2", "INS CatchClause to TryStatement at 1", "INS SimpleName: newLinkedList to MethodInvocation at 1", "INS SimpleType: InstantiationException to SingleVariableDeclaration at 0", "INS QualifiedName: Interceptor.Builder to SimpleType: Interceptor.Builder at 0", "INS ExpressionStatement to Block at 2", "INS SimpleType: Context to SingleVariableDeclaration at 0", "INS ThrowStatement to Block at 1", "INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"Interceptor.Builder not found.\" to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: List to ParameterizedType: List<Interceptor> at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: type to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: interceptorContext to MethodInvocation at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS WildcardType: ? to ParameterizedType: Class<?> at 1", "INS SimpleType: ClassNotFoundException to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"\\\\s+\" to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: split to MethodInvocation at 1", "INS SimpleName: Context to SimpleType: Context at 0", "INS StringLiteral: \"Interceptor.Builder not constructable.\" to ClassInstanceCreation at 1", "INS SimpleName: interceptorNames to EnhancedForStatement at 1", "INS SimpleName: FlumeException to SimpleType: FlumeException at 0", "INS SimpleType: IllegalAccessException to SingleVariableDeclaration at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: interceptorNames to VariableDeclarationFragment at 0", "INS SimpleName: interceptors to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: interceptorContexts to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: interceptorContext to MethodInvocation at 0", "INS SimpleName: configureInterceptors to MethodDeclaration at 2", "INS SimpleType: Context to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to Block at 2", "INS Block to TryStatement at 0", "INS SimpleName: configure to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: InstantiationException to SimpleType: InstantiationException at 0", "INS SimpleName: interceptorListStr to MethodInvocation at 0", "INS TryStatement to Block at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"Builder class not found. Exception follows.\" to MethodInvocation at 2", "INS SimpleType: Interceptor.Builder to CastExpression at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"interceptors\" to MethodInvocation at 2", "INS SimpleType: Class to ParameterizedType: Class<?> at 0", "INS ThrowStatement to Block at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: forName to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: FlumeException to SimpleType: FlumeException at 0", "INS SimpleName: context to MethodInvocation at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: Class to MethodInvocation at 0", "INS CatchClause to TryStatement at 3", "INS SimpleType: Context to ClassInstanceCreation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleType: FlumeException to ClassInstanceCreation at 0", "INS SimpleName: interceptorChain to MethodInvocation at 0", "INS SimpleName: newInstance to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: getString to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"\" to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 4", "INS StringLiteral: \"Unable to access Interceptor.Builder.\" to ClassInstanceCreation at 1", "INS SimpleName: clazz to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Context to SimpleType: Context at 0", "INS SimpleName: interceptorListStr to VariableDeclarationFragment at 0", "INS ParameterizedType: List<Interceptor> to VariableDeclarationStatement at 0", "INS SimpleName: context to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Lists to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: clazz to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to CatchClause at 1", "INS StringLiteral: \"type\" to MethodInvocation at 2", "INS SimpleName: ClassNotFoundException to SimpleType: ClassNotFoundException at 0", "INS SimpleName: error to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: interceptors to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Context to SimpleType: Context at 0", "INS IfStatement to Block at 1", "INS SimpleName: getString to MethodInvocation at 1", "INS SimpleName: clazz to MethodInvocation at 2", "INS SimpleType: FlumeException to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: error to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: interceptorChain to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: InterceptorChain to SimpleType: InterceptorChain at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: InterceptorChain to ClassInstanceCreation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS StringLiteral: \"Event list must not be null\" to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: events to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: Preconditions to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: events to Assignment: = at 0", "INS SimpleName: intercept to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: interceptorChain to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: events to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: interceptorChain to MethodInvocation at 0", "INS SimpleName: event to Assignment: = at 0", "INS SimpleName: intercept to MethodInvocation at 1", "INS SimpleName: event to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS InfixExpression: == to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: event to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from requriedChannel to requiredChannel", "operations": ["UPD SimpleName: requriedChannel from requriedChannel to requiredChannel", "UPD SimpleName: requriedChannel from requriedChannel to requiredChannel"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS StringLiteral: \"Transaction object must not be null\" to MethodInvocation at 3", "INS SimpleName: tx to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: Preconditions to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: requiredChannel to MethodInvocation at 0", "INS SimpleName: getTransaction to MethodInvocation at 1"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: getTransaction", "DEL ExpressionStatement", "DEL SimpleName: tx", "DEL SimpleName: requriedChannel"]}]}}, {"ChannelProcessor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(965) at 1", "Insert ImportDeclaration(5) into CompilationUnit(965) at 2", "Insert ImportDeclaration(21) into CompilationUnit(965) at 10", "Insert ImportDeclaration(25) into CompilationUnit(965) at 12", "Insert ImportDeclaration(27) into CompilationUnit(965) at 13", "Insert ImportDeclaration(29) into CompilationUnit(965) at 14", "Insert ImportDeclaration(33) into CompilationUnit(965) at 16", "Insert QualifiedName: com.google.common.base.Preconditions(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.common.collect.Lists(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.flume.Context(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.flume.FlumeException(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.flume.interceptor.Interceptor(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.flume.interceptor.InterceptorChain(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.flume.conf.Configurable(32) into ImportDeclaration(33) at 0", "Insert SimpleType: Configurable(79) into TypeDeclaration: class(964) at 3", "Insert FieldDeclaration(107) into TypeDeclaration: class(964) at 6", "Insert MethodDeclaration(138) into TypeDeclaration: class(964) at 8", "Insert MethodDeclaration(147) into TypeDeclaration: class(964) at 9", "Insert MethodDeclaration(167) into TypeDeclaration: class(964) at 10", "Insert MethodDeclaration(359) into TypeDeclaration: class(964) at 11", "Insert SimpleName: Configurable(78) into SimpleType: Configurable(79) at 0", "Insert Modifier: private(101) into FieldDeclaration(107) at 0", "Insert Modifier: final(102) into FieldDeclaration(107) at 1", "Insert SimpleType: InterceptorChain(104) into FieldDeclaration(107) at 2", "Insert VariableDeclarationFragment(106) into FieldDeclaration(107) at 3", "Insert Modifier: public(130) into MethodDeclaration(138) at 0", "Insert PrimitiveType: void(131) into MethodDeclaration(138) at 1", "Insert SimpleName: initialize(132) into MethodDeclaration(138) at 2", "Insert Block(137) into MethodDeclaration(138) at 3", "Insert Modifier: public(139) into MethodDeclaration(147) at 0", "Insert PrimitiveType: void(140) into MethodDeclaration(147) at 1", "Insert SimpleName: close(141) into MethodDeclaration(147) at 2", "Insert Block(146) into MethodDeclaration(147) at 3", "Insert Javadoc(152) into MethodDeclaration(167) at 0", "Insert MarkerAnnotation(154) into MethodDeclaration(167) at 1", "Insert Modifier: public(155) into MethodDeclaration(167) at 2", "Insert PrimitiveType: void(156) into MethodDeclaration(167) at 3", "Insert SimpleName: configure(157) into MethodDeclaration(167) at 4", "Insert SingleVariableDeclaration(161) into MethodDeclaration(167) at 5", "Insert Block(166) into MethodDeclaration(167) at 6", "Insert Modifier: private(168) into MethodDeclaration(359) at 0", "Insert PrimitiveType: void(169) into MethodDeclaration(359) at 1", "Insert SimpleName: configureInterceptors(170) into MethodDeclaration(359) at 2", "Insert SingleVariableDeclaration(174) into MethodDeclaration(359) at 3", "Insert Block(358) into MethodDeclaration(359) at 4", "Insert SimpleName: InterceptorChain(103) into SimpleType: InterceptorChain(104) at 0", "Insert SimpleName: interceptorChain(105) into VariableDeclarationFragment(106) at 0", "Insert ExpressionStatement(127) into Block(128) at 1", "Insert ExpressionStatement(136) into Block(137) at 0", "Insert ExpressionStatement(145) into Block(146) at 0", "Insert TagElement(149) into Javadoc(152) at 0", "Insert TagElement: @param(151) into Javadoc(152) at 1", "Insert SimpleName: Override(153) into MarkerAnnotation(154) at 0", "Insert SimpleType: Context(159) into SingleVariableDeclaration(161) at 0", "Insert SimpleName: context(160) into SingleVariableDeclaration(161) at 1", "Insert ExpressionStatement(165) into Block(166) at 0", "Insert SimpleType: Context(172) into SingleVariableDeclaration(174) at 0", "Insert SimpleName: context(173) into SingleVariableDeclaration(174) at 1", "Insert VariableDeclarationStatement(185) into Block(358) at 0", "Insert VariableDeclarationStatement(195) into Block(358) at 1", "Insert IfStatement(201) into Block(358) at 2", "Insert VariableDeclarationStatement(212) into Block(358) at 3", "Insert VariableDeclarationStatement(224) into Block(358) at 4", "Insert EnhancedForStatement(352) into Block(358) at 5", "Insert ExpressionStatement(357) into Block(358) at 6", "Insert ExpressionStatement(414) into Block(747) at 0", "Insert ExpressionStatement(421) into Block(747) at 1", "Insert ExpressionStatement(793) into Block(962) at 0", "Insert IfStatement(799) into Block(962) at 1", "Insert Assignment: =(126) into ExpressionStatement(127) at 0", "Insert MethodInvocation(135) into ExpressionStatement(136) at 0", "Insert MethodInvocation(144) into ExpressionStatement(145) at 0", "Insert TextElement: The Context of the associated Source is passed.(148) into TagElement(149) at 0", "Insert SimpleName: context(150) into TagElement: @param(151) at 0", "Insert SimpleName: Context(158) into SimpleType: Context(159) at 0", "Insert MethodInvocation(164) into ExpressionStatement(165) at 0", "Insert SimpleName: Context(171) into SimpleType: Context(172) at 0", "Insert ParameterizedType: List<Interceptor>(179) into VariableDeclarationStatement(185) at 0", "Insert VariableDeclarationFragment(184) into VariableDeclarationStatement(185) at 1", "Insert SimpleType: String(187) into VariableDeclarationStatement(195) at 0", "Insert VariableDeclarationFragment(194) into VariableDeclarationStatement(195) at 1", "Insert MethodInvocation(198) into IfStatement(201) at 0", "Insert Block(200) into IfStatement(201) at 1", "Insert ArrayType: String[](205) into VariableDeclarationStatement(212) at 0", "Insert VariableDeclarationFragment(211) into VariableDeclarationStatement(212) at 1", "Insert SimpleType: Context(214) into VariableDeclarationStatement(224) at 0", "Insert VariableDeclarationFragment(223) into VariableDeclarationStatement(224) at 1", "Insert SingleVariableDeclaration(228) into EnhancedForStatement(352) at 0", "Insert SimpleName: interceptorNames(229) into EnhancedForStatement(352) at 1", "Insert Block(351) into EnhancedForStatement(352) at 2", "Insert MethodInvocation(356) into ExpressionStatement(357) at 0", "Insert MethodInvocation(413) into ExpressionStatement(414) at 0", "Insert Assignment: =(420) into ExpressionStatement(421) at 0", "Insert Assignment: =(792) into ExpressionStatement(793) at 0", "Insert InfixExpression: ==(796) into IfStatement(799) at 0", "Insert Block(798) into IfStatement(799) at 1", "Insert FieldAccess(122) into Assignment: =(126) at 0", "Insert ClassInstanceCreation(125) into Assignment: =(126) at 1", "Insert SimpleName: interceptorChain(133) into MethodInvocation(135) at 0", "Insert SimpleName: initialize(134) into MethodInvocation(135) at 1", "Insert SimpleName: interceptorChain(142) into MethodInvocation(144) at 0", "Insert SimpleName: close(143) into MethodInvocation(144) at 1", "Insert SimpleName: configureInterceptors(162) into MethodInvocation(164) at 0", "Insert SimpleName: context(163) into MethodInvocation(164) at 1", "Insert SimpleType: List(176) into ParameterizedType: List<Interceptor>(179) at 0", "Insert SimpleType: Interceptor(178) into ParameterizedType: List<Interceptor>(179) at 1", "Insert SimpleName: interceptors(180) into VariableDeclarationFragment(184) at 0", "Insert MethodInvocation(183) into VariableDeclarationFragment(184) at 1", "Insert SimpleName: String(186) into SimpleType: String(187) at 0", "Insert SimpleName: interceptorListStr(188) into VariableDeclarationFragment(194) at 0", "Insert MethodInvocation(193) into VariableDeclarationFragment(194) at 1", "Insert SimpleName: interceptorListStr(196) into MethodInvocation(198) at 0", "Insert SimpleName: isEmpty(197) into MethodInvocation(198) at 1", "Insert ReturnStatement(199) into Block(200) at 0", "Insert SimpleType: String(203) into ArrayType: String[](205) at 0", "Insert Dimension(204) into ArrayType: String[](205) at 1", "Insert SimpleName: interceptorNames(206) into VariableDeclarationFragment(211) at 0", "Insert MethodInvocation(210) into VariableDeclarationFragment(211) at 1", "Insert SimpleName: Context(213) into SimpleType: Context(214) at 0", "Insert SimpleName: interceptorContexts(215) into VariableDeclarationFragment(223) at 0", "Insert ClassInstanceCreation(222) into VariableDeclarationFragment(223) at 1", "Insert SimpleType: String(226) into SingleVariableDeclaration(228) at 0", "Insert SimpleName: interceptorName(227) into SingleVariableDeclaration(228) at 1", "Insert VariableDeclarationStatement(243) into Block(351) at 0", "Insert VariableDeclarationStatement(252) into Block(351) at 1", "Insert TryStatement(350) into Block(351) at 2", "Insert SimpleName: interceptorChain(353) into MethodInvocation(356) at 0", "Insert SimpleName: setInterceptors(354) into MethodInvocation(356) at 1", "Insert SimpleName: interceptors(355) into MethodInvocation(356) at 2", "Insert SimpleName: Preconditions(409) into MethodInvocation(413) at 0", "Insert SimpleName: checkNotNull(410) into MethodInvocation(413) at 1", "Insert SimpleName: events(411) into MethodInvocation(413) at 2", "Insert StringLiteral: \"Event list must not be null\"(412) into MethodInvocation(413) at 3", "Insert SimpleName: events(415) into Assignment: =(420) at 0", "Insert MethodInvocation(419) into Assignment: =(420) at 1", "Insert SimpleName: event(787) into Assignment: =(792) at 0", "Insert MethodInvocation(791) into Assignment: =(792) at 1", "Insert SimpleName: event(794) into InfixExpression: ==(796) at 0", "Insert NullLiteral(795) into InfixExpression: ==(796) at 1", "Insert ReturnStatement(797) into Block(798) at 0", "Update SimpleName: requriedChannel(527) to requiredChannel", "Insert ExpressionStatement(830) into Block(884) at 1", "Insert ThisExpression(120) into FieldAccess(122) at 0", "Insert SimpleName: interceptorChain(121) into FieldAccess(122) at 1", "Insert SimpleType: InterceptorChain(124) into ClassInstanceCreation(125) at 0", "Insert SimpleName: List(175) into SimpleType: List(176) at 0", "Insert SimpleName: Interceptor(177) into SimpleType: Interceptor(178) at 0", "Insert SimpleName: Lists(181) into MethodInvocation(183) at 0", "Insert SimpleName: newLinkedList(182) into MethodInvocation(183) at 1", "Insert SimpleName: context(189) into MethodInvocation(193) at 0", "Insert SimpleName: getString(190) into MethodInvocation(193) at 1", "Insert StringLiteral: \"interceptors\"(191) into MethodInvocation(193) at 2", "Insert StringLiteral: \"\"(192) into MethodInvocation(193) at 3", "Insert SimpleName: String(202) into SimpleType: String(203) at 0", "Insert SimpleName: interceptorListStr(207) into MethodInvocation(210) at 0", "Insert SimpleName: split(208) into MethodInvocation(210) at 1", "Insert StringLiteral: \"\\\\s+\"(209) into MethodInvocation(210) at 2", "Insert SimpleType: Context(217) into ClassInstanceCreation(222) at 0", "Insert MethodInvocation(221) into ClassInstanceCreation(222) at 1", "Insert SimpleName: String(225) into SimpleType: String(226) at 0", "Insert SimpleType: Context(231) into VariableDeclarationStatement(243) at 0", "Insert VariableDeclarationFragment(242) into VariableDeclarationStatement(243) at 1", "Insert SimpleType: String(245) into VariableDeclarationStatement(252) at 0", "Insert VariableDeclarationFragment(251) into VariableDeclarationStatement(252) at 1", "Insert Block(295) into TryStatement(350) at 0", "Insert CatchClause(313) into TryStatement(350) at 1", "Insert CatchClause(331) into TryStatement(350) at 2", "Insert CatchClause(349) into TryStatement(350) at 3", "Insert SimpleName: interceptorChain(416) into MethodInvocation(419) at 0", "Insert SimpleName: intercept(417) into MethodInvocation(419) at 1", "Insert SimpleName: events(418) into MethodInvocation(419) at 2", "Insert SimpleName: interceptorChain(788) into MethodInvocation(791) at 0", "Insert SimpleName: intercept(789) into MethodInvocation(791) at 1", "Insert SimpleName: event(790) into MethodInvocation(791) at 2", "Insert MethodInvocation(829) into ExpressionStatement(830) at 0", "Insert SimpleName: InterceptorChain(123) into SimpleType: InterceptorChain(124) at 0", "Insert SimpleName: Context(216) into SimpleType: Context(217) at 0", "Insert SimpleName: context(218) into MethodInvocation(221) at 0", "Insert SimpleName: getSubProperties(219) into MethodInvocation(221) at 1", "Insert StringLiteral: \"interceptors.\"(220) into MethodInvocation(221) at 2", "Insert SimpleName: Context(230) into SimpleType: Context(231) at 0", "Insert SimpleName: interceptorContext(232) into VariableDeclarationFragment(242) at 0", "Insert ClassInstanceCreation(241) into VariableDeclarationFragment(242) at 1", "Insert SimpleName: String(244) into SimpleType: String(245) at 0", "Insert SimpleName: type(246) into VariableDeclarationFragment(251) at 0", "Insert MethodInvocation(250) into VariableDeclarationFragment(251) at 1", "Insert VariableDeclarationStatement(263) into Block(295) at 0", "Insert IfStatement(294) into Block(295) at 1", "Insert SingleVariableDeclaration(299) into CatchClause(313) at 0", "Insert Block(312) into CatchClause(313) at 1", "Insert SingleVariableDeclaration(317) into CatchClause(331) at 0", "Insert Block(330) into CatchClause(331) at 1", "Insert SingleVariableDeclaration(335) into CatchClause(349) at 0", "Insert Block(348) into CatchClause(349) at 1", "Insert MethodInvocation(822) into VariableDeclarationFragment(823) at 1", "Insert SimpleName: Preconditions(825) into MethodInvocation(829) at 0", "Insert SimpleName: checkNotNull(826) into MethodInvocation(829) at 1", "Insert SimpleName: tx(827) into MethodInvocation(829) at 2", "Insert StringLiteral: \"Transaction object must not be null\"(828) into MethodInvocation(829) at 3", "Insert SimpleType: Context(234) into ClassInstanceCreation(241) at 0", "Insert MethodInvocation(240) into ClassInstanceCreation(241) at 1", "Insert SimpleName: interceptorContext(247) into MethodInvocation(250) at 0", "Insert SimpleName: getString(248) into MethodInvocation(250) at 1", "Insert StringLiteral: \"type\"(249) into MethodInvocation(250) at 2", "Insert ParameterizedType: Class<?>(256) into VariableDeclarationStatement(263) at 0", "Insert VariableDeclarationFragment(262) into VariableDeclarationStatement(263) at 1", "Insert MethodInvocation(269) into IfStatement(294) at 0", "Insert Block(293) into IfStatement(294) at 1", "Insert SimpleType: ClassNotFoundException(297) into SingleVariableDeclaration(299) at 0", "Insert SimpleName: e(298) into SingleVariableDeclaration(299) at 1", "Insert ExpressionStatement(305) into Block(312) at 0", "Insert ThrowStatement(311) into Block(312) at 1", "Insert SimpleType: InstantiationException(315) into SingleVariableDeclaration(317) at 0", "Insert SimpleName: e(316) into SingleVariableDeclaration(317) at 1", "Insert ExpressionStatement(323) into Block(330) at 0", "Insert ThrowStatement(329) into Block(330) at 1", "Insert SimpleType: IllegalAccessException(333) into SingleVariableDeclaration(335) at 0", "Insert SimpleName: e(334) into SingleVariableDeclaration(335) at 1", "Insert ExpressionStatement(341) into Block(348) at 0", "Insert ThrowStatement(347) into Block(348) at 1", "Insert SimpleName: requiredChannel(820) into MethodInvocation(822) at 0", "Insert SimpleName: getTransaction(821) into MethodInvocation(822) at 1", "Insert SimpleName: Context(233) into SimpleType: Context(234) at 0", "Insert SimpleName: interceptorContexts(235) into MethodInvocation(240) at 0", "Insert SimpleName: getSubProperties(236) into MethodInvocation(240) at 1", "Insert InfixExpression: +(239) into MethodInvocation(240) at 2", "Insert SimpleType: Class(254) into ParameterizedType: Class<?>(256) at 0", "Insert WildcardType: ?(255) into ParameterizedType: Class<?>(256) at 1", "Insert SimpleName: clazz(257) into VariableDeclarationFragment(262) at 0", "Insert MethodInvocation(261) into VariableDeclarationFragment(262) at 1", "Insert TypeLiteral(266) into MethodInvocation(269) at 0", "Insert SimpleName: isAssignableFrom(267) into MethodInvocation(269) at 1", "Insert SimpleName: clazz(268) into MethodInvocation(269) at 2", "Insert VariableDeclarationStatement(280) into Block(293) at 0", "Insert ExpressionStatement(285) into Block(293) at 1", "Insert ExpressionStatement(292) into Block(293) at 2", "Insert SimpleName: ClassNotFoundException(296) into SimpleType: ClassNotFoundException(297) at 0", "Insert MethodInvocation(304) into ExpressionStatement(305) at 0", "Insert ClassInstanceCreation(310) into ThrowStatement(311) at 0", "Insert SimpleName: InstantiationException(314) into SimpleType: InstantiationException(315) at 0", "Insert MethodInvocation(322) into ExpressionStatement(323) at 0", "Insert ClassInstanceCreation(328) into ThrowStatement(329) at 0", "Insert SimpleName: IllegalAccessException(332) into SimpleType: IllegalAccessException(333) at 0", "Insert MethodInvocation(340) into ExpressionStatement(341) at 0", "Insert ClassInstanceCreation(346) into ThrowStatement(347) at 0", "Update SimpleName: requriedChannel(546) to requiredChannel", "Insert SimpleName: interceptorName(237) into InfixExpression: +(239) at 0", "Insert StringLiteral: \".\"(238) into InfixExpression: +(239) at 1", "Insert SimpleName: Class(253) into SimpleType: Class(254) at 0", "Insert SimpleName: Class(258) into MethodInvocation(261) at 0", "Insert SimpleName: forName(259) into MethodInvocation(261) at 1", "Insert SimpleName: type(260) into MethodInvocation(261) at 2", "Insert SimpleType: Interceptor.Builder(265) into TypeLiteral(266) at 0", "Insert SimpleType: Interceptor.Builder(271) into VariableDeclarationStatement(280) at 0", "Insert VariableDeclarationFragment(279) into VariableDeclarationStatement(280) at 1", "Insert MethodInvocation(284) into ExpressionStatement(285) at 0", "Insert MethodInvocation(291) into ExpressionStatement(292) at 0", "Insert SimpleName: LOG(300) into MethodInvocation(304) at 0", "Insert SimpleName: error(301) into MethodInvocation(304) at 1", "Insert StringLiteral: \"Builder class not found. Exception follows.\"(302) into MethodInvocation(304) at 2", "Insert SimpleName: e(303) into MethodInvocation(304) at 3", "Insert SimpleType: FlumeException(307) into ClassInstanceCreation(310) at 0", "Insert StringLiteral: \"Interceptor.Builder not found.\"(308) into ClassInstanceCreation(310) at 1", "Insert SimpleName: e(309) into ClassInstanceCreation(310) at 2", "Insert SimpleName: LOG(318) into MethodInvocation(322) at 0", "Insert SimpleName: error(319) into MethodInvocation(322) at 1", "Insert StringLiteral: \"Could not instantiate Builder. Exception follows.\"(320) into MethodInvocation(322) at 2", "Insert SimpleName: e(321) into MethodInvocation(322) at 3", "Insert SimpleType: FlumeException(325) into ClassInstanceCreation(328) at 0", "Insert StringLiteral: \"Interceptor.Builder not constructable.\"(326) into ClassInstanceCreation(328) at 1", "Insert SimpleName: e(327) into ClassInstanceCreation(328) at 2", "Insert SimpleName: LOG(336) into MethodInvocation(340) at 0", "Insert SimpleName: error(337) into MethodInvocation(340) at 1", "Insert StringLiteral: \"Unable to access Builder. Exception follows.\"(338) into MethodInvocation(340) at 2", "Insert SimpleName: e(339) into MethodInvocation(340) at 3", "Insert SimpleType: FlumeException(343) into ClassInstanceCreation(346) at 0", "Insert StringLiteral: \"Unable to access Interceptor.Builder.\"(344) into ClassInstanceCreation(346) at 1", "Insert SimpleName: e(345) into ClassInstanceCreation(346) at 2", "Insert QualifiedName: Interceptor.Builder(264) into SimpleType: Interceptor.Builder(265) at 0", "Insert QualifiedName: Interceptor.Builder(270) into SimpleType: Interceptor.Builder(271) at 0", "Insert SimpleName: builder(272) into VariableDeclarationFragment(279) at 0", "Insert CastExpression(278) into VariableDeclarationFragment(279) at 1", "Insert SimpleName: builder(281) into MethodInvocation(284) at 0", "Insert SimpleName: configure(282) into MethodInvocation(284) at 1", "Insert SimpleName: interceptorContext(283) into MethodInvocation(284) at 2", "Insert SimpleName: interceptors(286) into MethodInvocation(291) at 0", "Insert SimpleName: add(287) into MethodInvocation(291) at 1", "Insert MethodInvocation(290) into MethodInvocation(291) at 2", "Insert SimpleName: FlumeException(306) into SimpleType: FlumeException(307) at 0", "Insert SimpleName: FlumeException(324) into SimpleType: FlumeException(325) at 0", "Insert SimpleName: FlumeException(342) into SimpleType: FlumeException(343) at 0", "Insert SimpleType: Interceptor.Builder(274) into CastExpression(278) at 0", "Insert MethodInvocation(277) into CastExpression(278) at 1", "Insert SimpleName: builder(288) into MethodInvocation(290) at 0", "Insert SimpleName: build(289) into MethodInvocation(290) at 1", "Insert QualifiedName: Interceptor.Builder(273) into SimpleType: Interceptor.Builder(274) at 0", "Insert SimpleName: clazz(275) into MethodInvocation(277) at 0", "Insert SimpleName: newInstance(276) into MethodInvocation(277) at 1", "Delete NullLiteral(533)", "Delete SimpleName: tx(536)", "Delete SimpleName: requriedChannel(537)", "Delete SimpleName: getTransaction(538)", "Delete MethodInvocation(539)", "Delete Assignment: =(540)", "Delete ExpressionStatement(541)"]}}, {"EventDrivenSourceRunner_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: org.apache.flume.Source to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.flume.channel.ChannelProcessor to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: Source to SimpleType: Source at 0", "INS SimpleName: source to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Source to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getChannelProcessor to MethodInvocation at 1", "INS SimpleName: source to MethodInvocation at 0", "INS SimpleName: ChannelProcessor to SimpleType: ChannelProcessor at 0", "INS SimpleType: ChannelProcessor to VariableDeclarationStatement at 0", "INS SimpleName: cp to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: initialize to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cp to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Source to VariableDeclarationStatement at 0", "INS SimpleName: source to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Source to SimpleType: Source at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: cp to VariableDeclarationFragment at 0", "INS SimpleName: ChannelProcessor to SimpleType: ChannelProcessor at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: source to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getChannelProcessor to MethodInvocation at 1", "INS SimpleType: ChannelProcessor to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: cp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: close to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: source to MethodInvocation at 0", "operations": ["INS SimpleName: source to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: source to MethodInvocation at 0", "operations": ["INS SimpleName: source to MethodInvocation at 0"]}]}}, {"EventDrivenSourceRunner_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(128) at 1", "Insert ImportDeclaration(7) into CompilationUnit(128) at 3", "Insert QualifiedName: org.apache.flume.Source(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.flume.channel.ChannelProcessor(6) into ImportDeclaration(7) at 0", "Insert VariableDeclarationStatement(46) into Block(67) at 0", "Insert VariableDeclarationStatement(54) into Block(67) at 1", "Insert ExpressionStatement(58) into Block(67) at 2", "Insert VariableDeclarationStatement(80) into Block(101) at 0", "Insert VariableDeclarationStatement(92) into Block(101) at 2", "Insert ExpressionStatement(96) into Block(101) at 3", "Insert SimpleType: Source(41) into VariableDeclarationStatement(46) at 0", "Insert VariableDeclarationFragment(45) into VariableDeclarationStatement(46) at 1", "Insert SimpleType: ChannelProcessor(48) into VariableDeclarationStatement(54) at 0", "Insert VariableDeclarationFragment(53) into VariableDeclarationStatement(54) at 1", "Insert MethodInvocation(57) into ExpressionStatement(58) at 0", "Insert SimpleType: Source(75) into VariableDeclarationStatement(80) at 0", "Insert VariableDeclarationFragment(79) into VariableDeclarationStatement(80) at 1", "Insert SimpleType: ChannelProcessor(86) into VariableDeclarationStatement(92) at 0", "Insert VariableDeclarationFragment(91) into VariableDeclarationStatement(92) at 1", "Insert MethodInvocation(95) into ExpressionStatement(96) at 0", "Insert SimpleName: Source(40) into SimpleType: Source(41) at 0", "Insert SimpleName: source(42) into VariableDeclarationFragment(45) at 0", "Move MethodInvocation(37) into VariableDeclarationFragment(45) at 1", "Insert SimpleName: ChannelProcessor(47) into SimpleType: ChannelProcessor(48) at 0", "Insert SimpleName: cp(49) into VariableDeclarationFragment(53) at 0", "Insert MethodInvocation(52) into VariableDeclarationFragment(53) at 1", "Insert SimpleName: cp(55) into MethodInvocation(57) at 0", "Insert SimpleName: initialize(56) into MethodInvocation(57) at 1", "Insert SimpleName: source(59) into MethodInvocation(61) at 0", "Insert SimpleName: Source(74) into SimpleType: Source(75) at 0", "Insert SimpleName: source(76) into VariableDeclarationFragment(79) at 0", "Move MethodInvocation(53) into VariableDeclarationFragment(79) at 1", "Insert SimpleName: source(81) into MethodInvocation(83) at 0", "Insert SimpleName: ChannelProcessor(85) into SimpleType: ChannelProcessor(86) at 0", "Insert SimpleName: cp(87) into VariableDeclarationFragment(91) at 0", "Insert MethodInvocation(90) into VariableDeclarationFragment(91) at 1", "Insert SimpleName: cp(93) into MethodInvocation(95) at 0", "Insert SimpleName: close(94) into MethodInvocation(95) at 1", "Insert SimpleName: source(50) into MethodInvocation(52) at 0", "Insert SimpleName: getChannelProcessor(51) into MethodInvocation(52) at 1", "Insert SimpleName: source(88) into MethodInvocation(90) at 0", "Insert SimpleName: getChannelProcessor(89) into MethodInvocation(90) at 1"]}}, {"PollableSourceRunner_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.flume.Source to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.flume.channel.ChannelProcessor to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: cp to VariableDeclarationFragment at 0", "INS SimpleName: getChannelProcessor to MethodInvocation at 1", "INS SimpleName: ChannelProcessor to SimpleType: ChannelProcessor at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: source to MethodInvocation at 0", "INS SimpleType: ChannelProcessor to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cp to MethodInvocation at 0", "INS SimpleName: initialize to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: Source to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: source to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: Source to SimpleType: Source at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleType: ChannelProcessor to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: cp to VariableDeclarationFragment at 0", "INS SimpleName: ChannelProcessor to SimpleType: ChannelProcessor at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getChannelProcessor to MethodInvocation at 1", "INS SimpleName: source to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: cp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: source to MethodInvocation at 0", "operations": ["INS SimpleName: source to MethodInvocation at 0"]}]}}, {"PollableSourceRunner_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(465) at 5", "Insert ImportDeclaration(15) into CompilationUnit(465) at 7", "Insert QualifiedName: org.apache.flume.Source(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.flume.channel.ChannelProcessor(14) into ImportDeclaration(15) at 0", "Insert VariableDeclarationStatement(165) into Block(207) at 1", "Insert ExpressionStatement(169) into Block(207) at 2", "Insert VariableDeclarationStatement(253) into Block(274) at 2", "Insert VariableDeclarationStatement(265) into Block(274) at 4", "Insert ExpressionStatement(269) into Block(274) at 5", "Insert SimpleType: ChannelProcessor(159) into VariableDeclarationStatement(165) at 0", "Insert VariableDeclarationFragment(164) into VariableDeclarationStatement(165) at 1", "Insert MethodInvocation(168) into ExpressionStatement(169) at 0", "Insert SimpleType: Source(248) into VariableDeclarationStatement(253) at 0", "Insert VariableDeclarationFragment(252) into VariableDeclarationStatement(253) at 1", "Insert SimpleType: ChannelProcessor(259) into VariableDeclarationStatement(265) at 0", "Insert VariableDeclarationFragment(264) into VariableDeclarationStatement(265) at 1", "Insert MethodInvocation(268) into ExpressionStatement(269) at 0", "Insert SimpleName: ChannelProcessor(158) into SimpleType: ChannelProcessor(159) at 0", "Insert SimpleName: cp(160) into VariableDeclarationFragment(164) at 0", "Insert MethodInvocation(163) into VariableDeclarationFragment(164) at 1", "Insert SimpleName: cp(166) into MethodInvocation(168) at 0", "Insert SimpleName: initialize(167) into MethodInvocation(168) at 1", "Insert SimpleName: Source(247) into SimpleType: Source(248) at 0", "Insert SimpleName: source(249) into VariableDeclarationFragment(252) at 0", "Move MethodInvocation(232) into VariableDeclarationFragment(252) at 1", "Insert SimpleName: source(254) into MethodInvocation(256) at 0", "Insert SimpleName: ChannelProcessor(258) into SimpleType: ChannelProcessor(259) at 0", "Insert SimpleName: cp(260) into VariableDeclarationFragment(264) at 0", "Insert MethodInvocation(263) into VariableDeclarationFragment(264) at 1", "Insert SimpleName: cp(266) into MethodInvocation(268) at 0", "Insert SimpleName: close(267) into MethodInvocation(268) at 1", "Insert SimpleName: source(161) into MethodInvocation(163) at 0", "Insert SimpleName: getChannelProcessor(162) into MethodInvocation(163) at 1", "Insert SimpleName: source(261) into MethodInvocation(263) at 0", "Insert SimpleName: getChannelProcessor(262) into MethodInvocation(263) at 1"]}}, {"PropertiesFileConfigurationProvider_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: Configurables to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: config to MethodInvocation at 3", "INS ExpressionStatement to Block at 9", "INS SimpleName: configure to MethodInvocation at 1", "INS SimpleName: channelProcessor to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: configure to MethodInvocation at 1", "INS ExpressionStatement to Block at 9", "INS SimpleName: channelProcessor to MethodInvocation at 2", "INS SimpleName: context to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Configurables to MethodInvocation at 0"]}]}}, {"PropertiesFileConfigurationProvider_diff": {"operations": ["Insert ExpressionStatement(660) into Block(679) at 9", "Insert ExpressionStatement(813) into Block(830) at 9", "Insert MethodInvocation(659) into ExpressionStatement(660) at 0", "Insert MethodInvocation(812) into ExpressionStatement(813) at 0", "Insert SimpleName: Configurables(655) into MethodInvocation(659) at 0", "Insert SimpleName: configure(656) into MethodInvocation(659) at 1", "Insert SimpleName: channelProcessor(657) into MethodInvocation(659) at 2", "Insert SimpleName: config(658) into MethodInvocation(659) at 3", "Insert SimpleName: Configurables(808) into MethodInvocation(812) at 0", "Insert SimpleName: configure(809) into MethodInvocation(812) at 1", "Insert SimpleName: channelProcessor(810) into MethodInvocation(812) at 2", "Insert SimpleName: context(811) into MethodInvocation(812) at 3"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}