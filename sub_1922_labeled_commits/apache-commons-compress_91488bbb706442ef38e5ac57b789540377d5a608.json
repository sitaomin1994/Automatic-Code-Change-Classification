{"application": "apache-commons-compress", "csha": "91488bbb706442ef38e5ac57b789540377d5a608", "files": [{"CpioArchiveInputStream_cluster": {"actions": [{"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Dimension", "DEL SimpleName: singleByteBuf", "DEL ArrayType: byte[]", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: final", "DEL FieldDeclaration", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL Dimension", "DEL NumberLiteral: 1", "DEL ArrayCreation", "DEL ArrayType: byte[]"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL FieldAccess", "DEL PrimitiveType: int", "DEL TextElement: if an I/O error has occurred or if a CPIO file error has", "DEL PrefixExpression: -", "DEL ArrayAccess", "DEL SimpleName: read", "DEL Modifier: public", "DEL NumberLiteral: 0xff", "DEL ThisExpression", "DEL NumberLiteral: 1", "DEL TextElement:  the byte read, or -1 if end of input is reached", "DEL Javadoc", "DEL ConditionalExpression", "DEL InfixExpression: &", "DEL Block", "DEL NumberLiteral: 0", "DEL TextElement: occurred", "DEL SimpleName: read", "DEL ReturnStatement", "DEL TagElement: @throws", "DEL SimpleName: singleByteBuf", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL NumberLiteral: 0", "DEL PrefixExpression: -", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: singleByteBuf", "DEL TextElement: Reads a byte of data. This method will block until enough input is", "DEL SimpleType: IOException", "DEL TextElement: available.", "DEL FieldAccess", "DEL SimpleName: IOException", "DEL NumberLiteral: 1", "DEL NumberLiteral: 1", "DEL TagElement", "DEL ThisExpression"]}]}}, {"CpioArchiveInputStream_diff": {"operations": ["Update Modifier: public(201) to private", "Delete Modifier: private(73)", "Delete Modifier: final(74)", "Delete PrimitiveType: byte(75)", "Delete Dimension(76)", "Delete ArrayType: byte[](77)", "Delete SimpleName: singleByteBuf(78)", "Delete PrimitiveType: byte(79)", "Delete Dimension(80)", "Delete ArrayType: byte[](81)", "Delete NumberLiteral: 1(82)", "Delete ArrayCreation(83)", "Delete VariableDeclarationFragment(84)", "Delete FieldDeclaration(85)", "Delete TextElement: Reads a byte of data. This method will block until enough input is(514)", "Delete TextElement: available.(515)", "Delete TagElement(516)", "Delete TextElement:  the byte read, or -1 if end of input is reached(517)", "Delete TagElement: @return(518)", "Delete SimpleName: IOException(519)", "Delete TextElement: if an I/O error has occurred or if a CPIO file error has(520)", "Delete TextElement: occurred(521)", "Delete TagElement: @throws(522)", "Delete Javadoc(523)", "Delete Modifier: public(524)", "Delete PrimitiveType: int(525)", "Delete SimpleName: read(526)", "Delete SimpleName: IOException(527)", "Delete SimpleType: IOException(528)", "Delete SimpleName: read(529)", "Delete ThisExpression(530)", "Delete SimpleName: singleByteBuf(531)", "Delete FieldAccess(532)", "Delete NumberLiteral: 0(533)", "Delete NumberLiteral: 1(534)", "Delete MethodInvocation(535)", "Delete NumberLiteral: 1(536)", "Delete PrefixExpression: -(537)", "Delete InfixExpression: ==(538)", "Delete NumberLiteral: 1(539)", "Delete PrefixExpression: -(540)", "Delete ThisExpression(541)", "Delete SimpleName: singleByteBuf(542)", "Delete FieldAccess(543)", "Delete NumberLiteral: 0(544)", "Delete ArrayAccess(545)", "Delete NumberLiteral: 0xff(546)", "Delete InfixExpression: &(547)", "Delete ConditionalExpression(548)", "Delete ReturnStatement(549)", "Delete Block(550)", "Delete MethodDeclaration(551)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}