{"application": "apache-zookeeper", "csha": "a8e0d7ba7d9797be3aa021fe23d5aef52ef39b91", "files": [{"Leader_cluster": {"actions": [{"root": "INS SimpleType: SyncedLearnerTracker to TypeDeclaration: class at 3", "operations": ["INS SimpleType: SyncedLearnerTracker to TypeDeclaration: class at 3"]}, {"root": "UPDATE from HashSet to SyncedLearnerTracker", "operations": ["UPD SimpleName: HashSet from HashSet to SyncedLearnerTracker", "UPD SimpleName: StringBuilder from StringBuilder to SyncedLearnerTracker", "UPD SimpleName: Long from Long to SyncedLearnerTracker"]}, {"root": "MOVE from SimpleType: SyncedLearnerTracker", "operations": ["MOV SimpleName: StringBuilder to SimpleType: SyncedLearnerTracker at 0"]}, {"root": "INS Block to WhileStatement at 1", "operations": ["INS SimpleName: start to VariableDeclarationFragment at 0", "INS EnhancedForStatement to Block at 9", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: addAck to MethodInvocation at 1", "INS SimpleName: start to InfixExpression: + at 0", "INS SimpleName: System to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: syncedAckSet to MethodInvocation at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS ExpressionStatement to Block at 8", "INS Block to SynchronizedStatement at 1", "INS SimpleName: getLearners to MethodInvocation at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: f to SingleVariableDeclaration at 1", "INS SimpleName: syncedAckSet to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS Block to WhileStatement at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS InfixExpression: < to WhileStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SynchronizedStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS WhileStatement to Block at 3", "INS SimpleName: System to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: LearnerHandler to SimpleType: LearnerHandler at 0", "INS ThisExpression to SynchronizedStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS Block to WhileStatement at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: LearnerHandler to SingleVariableDeclaration at 0", "INS SimpleName: addAck to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: end to VariableDeclarationFragment at 0", "INS SimpleName: cur to Assignment: = at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: start to VariableDeclarationFragment at 1", "INS SimpleName: cur to InfixExpression: < at 0", "INS IfStatement to Block at 0", "INS SimpleName: end to InfixExpression: < at 1", "INS MethodInvocation to Assignment: = at 1", "INS EnhancedForStatement to Block at 1", "INS SimpleName: cur to VariableDeclarationFragment at 0", "INS SimpleType: SyncedLearnerTracker to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV MethodInvocation to EnhancedForStatement at 1", "MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 11", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 6", "MOV IfStatement to Block at 4", "MOV IfStatement to Block at 10"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 7", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from SimpleType: SyncedLearnerTracker", "operations": ["MOV SimpleName: Long to SimpleType: SyncedLearnerTracker at 0"]}, {"root": "UPDATE from syncedSet to syncedAckSet", "operations": ["UPD SimpleName: syncedSet from syncedSet to syncedAckSet", "UPD SimpleName: containsQuorum from containsQuorum to syncedAckSet", "UPD SimpleName: syncedSet from syncedSet to syncedAckSet", "UPD SimpleName: getSidSetString from getSidSetString to syncedAckSet", "UPD SimpleName: syncedSet from syncedSet to syncedAckSet"]}, {"root": "UPDATE from add to addQuorumVerifier", "operations": ["UPD SimpleName: add from add to addQuorumVerifier", "UPD SimpleName: add from add to addQuorumVerifier"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS InfixExpression: != to InfixExpression: && at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS InfixExpression: > to InfixExpression: && at 1", "operations": ["INS InfixExpression: > to InfixExpression: && at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: getLastSeenQuorumVerifier to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getVersion to MethodInvocation at 1", "INS SimpleName: self to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV InfixExpression: / to InfixExpression: + at 1"]}, {"root": "INS SimpleType: SyncedLearnerTracker to ClassInstanceCreation at 0", "operations": ["INS SimpleType: SyncedLearnerTracker to ClassInstanceCreation at 0"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV MethodInvocation to InfixExpression: != at 0", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: >", "operations": ["MOV MethodInvocation to InfixExpression: > at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: wait to MethodInvocation at 0", "operations": ["INS SimpleName: wait to MethodInvocation at 0"]}, {"root": "INS InfixExpression: - to MethodInvocation at 1", "operations": ["INS InfixExpression: - to MethodInvocation at 1", "INS SimpleName: end to InfixExpression: - at 0", "INS SimpleName: cur to InfixExpression: - at 1"]}, {"root": "MOVE from SimpleType: SyncedLearnerTracker", "operations": ["MOV SimpleName: HashSet to SimpleType: SyncedLearnerTracker at 0"]}, {"root": "UPDATE from containsKey to self", "operations": ["UPD SimpleName: containsKey from containsKey to self", "UPD SimpleName: f from f to self"]}, {"root": "INS SimpleName: getLastSeenQuorumVerifier to MethodInvocation at 1", "operations": ["INS SimpleName: getLastSeenQuorumVerifier to MethodInvocation at 1"]}, {"root": "UPDATE from getVotingMembers to getVersion", "operations": ["UPD SimpleName: getVotingMembers from getVotingMembers to getVersion"]}, {"root": "UPDATE from syncedSet to hasAllQuorums", "operations": ["UPD SimpleName: syncedSet from syncedSet to hasAllQuorums"]}, {"root": "UPDATE from getSid to getLastSeenQuorumVerifier", "operations": ["UPD SimpleName: getSid from getSid to getLastSeenQuorumVerifier"]}, {"root": "UPDATE from syncedSet to ackSetsToString", "operations": ["UPD SimpleName: syncedSet from syncedSet to ackSetsToString"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleName: qvAcksetPairs", "DEL SimpleName: ArrayList", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL SimpleType: ArrayList", "DEL SimpleName: ArrayList", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL SimpleType: ArrayList", "DEL ParameterizedType: ArrayList<QuorumVerifierAcksetPair>", "DEL ParameterizedType: ArrayList<QuorumVerifierAcksetPair>", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: HashSet", "DEL SimpleName: size", "DEL SimpleType: Long", "DEL SimpleName: qv", "DEL SimpleName: add", "DEL SimpleName: addQuorumVerifier", "DEL ParameterizedType: HashSet<Long>", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL PrimitiveType: void", "DEL SimpleName: qvAcksetPairs", "DEL SimpleName: QuorumVerifier", "DEL SimpleName: qv", "DEL SimpleName: Long", "DEL SimpleName: getVotingMembers", "DEL SimpleType: QuorumVerifier", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL ExpressionStatement", "DEL SimpleName: qv", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: HashSet", "DEL Block", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: addAck", "DEL PrimitiveType: boolean", "DEL ReturnStatement", "DEL SimpleName: change", "DEL SimpleName: Long", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: sid", "DEL SimpleName: add", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleName: change", "DEL SingleVariableDeclaration", "DEL SimpleName: change", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: getAckset", "DEL SimpleName: qvAcksetPairs", "DEL SimpleName: qvAckset", "DEL SimpleName: getVotingMembers", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL PrimitiveType: boolean", "DEL ExpressionStatement", "DEL SimpleName: qvAckset", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: containsKey", "DEL SimpleName: sid", "DEL BooleanLiteral: false", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: getQuorumVerifier", "DEL SimpleType: Long", "DEL BooleanLiteral: true", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL SimpleName: sid", "DEL MethodInvocation", "DEL SimpleName: qvAckset", "DEL Modifier: public", "DEL IfStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL EnhancedForStatement", "DEL SimpleName: getQuorumVerifier", "DEL ReturnStatement", "DEL SimpleName: qvAckset", "DEL Modifier: public", "DEL SimpleName: hasAllQuorums", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL PrefixExpression: !", "DEL IfStatement", "DEL SimpleName: qvAckset", "DEL ReturnStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: containsQuorum", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL BooleanLiteral: true", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL Block", "DEL SimpleName: qvAckset", "DEL BooleanLiteral: false", "DEL SimpleName: getAckset", "DEL SimpleName: qvAcksetPairs", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: append", "DEL SimpleName: length", "DEL ClassInstanceCreation", "DEL SimpleName: qvAcksetPairs", "DEL MethodDeclaration", "DEL SimpleType: QuorumVerifierAcksetPair", "DEL Modifier: public", "DEL SimpleName: ackSetsToString", "DEL SimpleName: toString", "DEL SimpleName: sb", "DEL ReturnStatement", "DEL SimpleName: append", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: substring", "DEL MethodInvocation", "DEL SimpleName: sb", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: qvAckset", "DEL SimpleName: sb", "DEL SimpleName: sb", "DEL SimpleName: StringBuilder", "DEL NumberLiteral: 1", "DEL SimpleType: StringBuilder", "DEL SimpleName: qvAckset", "DEL StringLiteral: \",\"", "DEL SimpleType: String", "DEL SimpleType: StringBuilder", "DEL SimpleName: getAckset", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: QuorumVerifierAcksetPair"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ParameterizedType: HashSet<Long>", "DEL Block", "DEL FieldDeclaration", "DEL Modifier: public", "DEL ParameterizedType: HashSet<Long>", "DEL SimpleType: QuorumVerifier", "DEL Modifier: final", "DEL Assignment: =", "DEL SimpleName: HashSet", "DEL Block", "DEL SimpleName: Long", "DEL SimpleName: QuorumVerifier", "DEL ReturnStatement", "DEL Modifier: private", "DEL ReturnStatement", "DEL SimpleName: _ackset", "DEL Assignment: =", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL SimpleName: qv", "DEL ParameterizedType: HashSet<Long>", "DEL SimpleName: Long", "DEL Modifier: static", "DEL SimpleName: _qv", "DEL SimpleName: QuorumVerifierAcksetPair", "DEL SimpleType: Long", "DEL VariableDeclarationFragment", "DEL SimpleName: ackset", "DEL SimpleName: _ackset", "DEL SimpleName: getQuorumVerifier", "DEL SimpleName: _ackset", "DEL SimpleType: HashSet", "DEL Modifier: final", "DEL SimpleName: HashSet", "DEL TypeDeclaration: class", "DEL MethodDeclaration", "DEL SimpleType: Long", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: _qv", "DEL SimpleType: HashSet", "DEL SimpleName: Long", "DEL SimpleType: QuorumVerifier", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: Long", "DEL SimpleName: _qv", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: qv", "DEL SimpleName: getAckset", "DEL SimpleName: QuorumVerifier", "DEL SimpleType: HashSet", "DEL SimpleName: HashSet", "DEL SimpleType: QuorumVerifier", "DEL SimpleName: ackset", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: QuorumVerifier", "DEL SimpleName: QuorumVerifierAcksetPair"]}, {"root": "DEL SimpleName: Thread", "operations": ["DEL SimpleName: Thread"]}, {"root": "DEL SimpleName: sleep", "operations": ["DEL SimpleName: sleep"]}, {"root": "DEL ParameterizedType: HashSet<Long>", "operations": ["DEL SimpleName: Long", "DEL SimpleType: Long", "DEL ParameterizedType: HashSet<Long>", "DEL SimpleType: HashSet"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: HashSet", "DEL Block", "DEL SimpleType: Long", "DEL SimpleName: HashSet", "DEL Block", "DEL EnhancedForStatement", "DEL VariableDeclarationStatement", "DEL ParameterizedType: HashSet<Long>"]}]}}, {"Leader_diff": {"operations": ["Insert SimpleType: SyncedLearnerTracker(125) into TypeDeclaration: class(157) at 3", "Update SimpleName: StringBuilder(272) to SyncedLearnerTracker", "Move SimpleName: StringBuilder(272) into SimpleType: SyncedLearnerTracker(125) at 0", "Insert Block(1594) into WhileStatement(1595) at 1", "Insert SynchronizedStatement(1581) into Block(1594) at 0", "Insert EnhancedForStatement(1593) into Block(1594) at 1", "Insert ThisExpression(1442) into SynchronizedStatement(1581) at 0", "Insert Block(1580) into SynchronizedStatement(1581) at 1", "Move SingleVariableDeclaration(1697) into EnhancedForStatement(1593) at 0", "Move MethodInvocation(1699) into EnhancedForStatement(1593) at 1", "Insert Block(1592) into EnhancedForStatement(1593) at 2", "Insert VariableDeclarationStatement(1449) into Block(1580) at 0", "Insert VariableDeclarationStatement(1454) into Block(1580) at 1", "Insert VariableDeclarationStatement(1463) into Block(1580) at 2", "Insert WhileStatement(1480) into Block(1580) at 3", "Move IfStatement(1672) into Block(1580) at 4", "Insert VariableDeclarationStatement(1495) into Block(1580) at 5", "Move ExpressionStatement(1693) into Block(1580) at 6", "Move IfStatement(1722) into Block(1580) at 7", "Insert ExpressionStatement(1535) into Block(1580) at 8", "Insert EnhancedForStatement(1555) into Block(1580) at 9", "Move IfStatement(1750) into Block(1580) at 10", "Move ExpressionStatement(1755) into Block(1580) at 11", "Move ExpressionStatement(1726) into Block(1592) at 0", "Insert PrimitiveType: long(1443) into VariableDeclarationStatement(1449) at 0", "Insert VariableDeclarationFragment(1448) into VariableDeclarationStatement(1449) at 1", "Insert PrimitiveType: long(1450) into VariableDeclarationStatement(1454) at 0", "Insert VariableDeclarationFragment(1453) into VariableDeclarationStatement(1454) at 1", "Insert PrimitiveType: long(1455) into VariableDeclarationStatement(1463) at 0", "Insert VariableDeclarationFragment(1462) into VariableDeclarationStatement(1463) at 1", "Insert InfixExpression: <(1466) into WhileStatement(1480) at 0", "Insert Block(1479) into WhileStatement(1480) at 1", "Insert SimpleType: SyncedLearnerTracker(1489) into VariableDeclarationStatement(1495) at 0", "Move VariableDeclarationFragment(1685) into VariableDeclarationStatement(1495) at 1", "Insert MethodInvocation(1534) into ExpressionStatement(1535) at 0", "Insert SingleVariableDeclaration(1539) into EnhancedForStatement(1555) at 0", "Insert MethodInvocation(1541) into EnhancedForStatement(1555) at 1", "Insert Block(1554) into EnhancedForStatement(1555) at 2", "Insert SimpleName: start(1444) into VariableDeclarationFragment(1448) at 0", "Insert MethodInvocation(1447) into VariableDeclarationFragment(1448) at 1", "Insert SimpleName: cur(1451) into VariableDeclarationFragment(1453) at 0", "Insert SimpleName: start(1452) into VariableDeclarationFragment(1453) at 1", "Insert SimpleName: end(1456) into VariableDeclarationFragment(1462) at 0", "Insert InfixExpression: +(1461) into VariableDeclarationFragment(1462) at 1", "Insert SimpleName: cur(1464) into InfixExpression: <(1466) at 0", "Insert SimpleName: end(1465) into InfixExpression: <(1466) at 1", "Move ExpressionStatement(1665) into Block(1479) at 0", "Insert ExpressionStatement(1478) into Block(1479) at 1", "Update SimpleName: Long(1675) to SyncedLearnerTracker", "Move SimpleName: Long(1675) into SimpleType: SyncedLearnerTracker(1489) at 0", "Update SimpleName: syncedSet(1678) to syncedAckSet", "Update SimpleName: syncedSet(1687) to syncedAckSet", "Update SimpleName: add(1688) to addQuorumVerifier", "Move MethodInvocation(1733) into MethodInvocation(1501) at 2", "Insert InfixExpression: !=(1507) into InfixExpression: &&(1519) at 0", "Insert InfixExpression: >(1518) into InfixExpression: &&(1519) at 1", "Insert SimpleName: syncedAckSet(1529) into MethodInvocation(1534) at 0", "Insert SimpleName: addAck(1530) into MethodInvocation(1534) at 1", "Move MethodInvocation(1691) into MethodInvocation(1534) at 2", "Insert SimpleType: LearnerHandler(1537) into SingleVariableDeclaration(1539) at 0", "Insert SimpleName: f(1538) into SingleVariableDeclaration(1539) at 1", "Insert SimpleName: getLearners(1540) into MethodInvocation(1541) at 0", "Insert IfStatement(1553) into Block(1554) at 0", "Insert SimpleName: System(1445) into MethodInvocation(1447) at 0", "Insert SimpleName: currentTimeMillis(1446) into MethodInvocation(1447) at 1", "Insert SimpleName: start(1457) into InfixExpression: +(1461) at 0", "Move InfixExpression: /(1663) into InfixExpression: +(1461) at 1", "Insert Assignment: =(1477) into ExpressionStatement(1478) at 0", "Insert SimpleType: SyncedLearnerTracker(1492) into ClassInstanceCreation(1493) at 0", "Move MethodInvocation(1712) into InfixExpression: !=(1507) at 0", "Insert NullLiteral(1506) into InfixExpression: !=(1507) at 1", "Insert MethodInvocation(1512) into InfixExpression: >(1518) at 0", "Move MethodInvocation(1707) into InfixExpression: >(1518) at 1", "Insert SimpleName: LearnerHandler(1536) into SimpleType: LearnerHandler(1537) at 0", "Move MethodInvocation(1702) into IfStatement(1553) at 0", "Insert Block(1552) into IfStatement(1553) at 1", "Insert SimpleName: wait(1467) into MethodInvocation(1471) at 0", "Insert InfixExpression: -(1470) into MethodInvocation(1471) at 1", "Insert SimpleName: cur(1473) into Assignment: =(1477) at 0", "Insert MethodInvocation(1476) into Assignment: =(1477) at 1", "Update SimpleName: HashSet(1679) to SyncedLearnerTracker", "Move SimpleName: HashSet(1679) into SimpleType: SyncedLearnerTracker(1492) at 0", "Update SimpleName: containsKey(1708) to self", "Insert SimpleName: getLastSeenQuorumVerifier(1504) into MethodInvocation(1505) at 1", "Insert MethodInvocation(1510) into MethodInvocation(1512) at 0", "Insert SimpleName: getVersion(1511) into MethodInvocation(1512) at 1", "Update SimpleName: getVotingMembers(1706) to getVersion", "Update SimpleName: syncedSet(1714) to syncedAckSet", "Update SimpleName: add(1715) to addQuorumVerifier", "Insert ExpressionStatement(1551) into Block(1552) at 0", "Update SimpleName: containsQuorum(1734) to syncedAckSet", "Update SimpleName: syncedSet(1735) to hasAllQuorums", "Insert SimpleName: end(1468) into InfixExpression: -(1470) at 0", "Insert SimpleName: cur(1469) into InfixExpression: -(1470) at 1", "Insert SimpleName: System(1474) into MethodInvocation(1476) at 0", "Insert SimpleName: currentTimeMillis(1475) into MethodInvocation(1476) at 1", "Insert SimpleName: self(1508) into MethodInvocation(1510) at 0", "Insert SimpleName: getLastSeenQuorumVerifier(1509) into MethodInvocation(1510) at 1", "Update SimpleName: f(1716) to self", "Update SimpleName: getSid(1717) to getLastSeenQuorumVerifier", "Insert MethodInvocation(1550) into ExpressionStatement(1551) at 0", "Insert SimpleName: syncedAckSet(1545) into MethodInvocation(1550) at 0", "Insert SimpleName: addAck(1546) into MethodInvocation(1550) at 1", "Move MethodInvocation(1711) into MethodInvocation(1550) at 2", "Update SimpleName: getSidSetString(1741) to syncedAckSet", "Update SimpleName: syncedSet(1742) to ackSetsToString", "Delete Modifier: private(130)", "Delete SimpleName: ArrayList(131)", "Delete SimpleType: ArrayList(132)", "Delete SimpleName: QuorumVerifierAcksetPair(133)", "Delete SimpleType: QuorumVerifierAcksetPair(134)", "Delete ParameterizedType: ArrayList<QuorumVerifierAcksetPair>(135)", "Delete SimpleName: qvAcksetPairs(136)", "Delete SimpleName: ArrayList(137)", "Delete SimpleType: ArrayList(138)", "Delete SimpleName: QuorumVerifierAcksetPair(139)", "Delete SimpleType: QuorumVerifierAcksetPair(140)", "Delete ParameterizedType: ArrayList<QuorumVerifierAcksetPair>(141)", "Delete ClassInstanceCreation(142)", "Delete VariableDeclarationFragment(143)", "Delete FieldDeclaration(144)", "Delete Modifier: public(170)", "Delete PrimitiveType: void(171)", "Delete SimpleName: addQuorumVerifier(172)", "Delete SimpleName: QuorumVerifier(173)", "Delete SimpleType: QuorumVerifier(174)", "Delete SimpleName: qv(175)", "Delete SingleVariableDeclaration(176)", "Delete SimpleName: qvAcksetPairs(177)", "Delete SimpleName: add(178)", "Delete SimpleName: QuorumVerifierAcksetPair(179)", "Delete SimpleType: QuorumVerifierAcksetPair(180)", "Delete SimpleName: qv(181)", "Delete SimpleName: HashSet(182)", "Delete SimpleType: HashSet(183)", "Delete SimpleName: Long(184)", "Delete SimpleType: Long(185)", "Delete ParameterizedType: HashSet<Long>(186)", "Delete SimpleName: qv(187)", "Delete SimpleName: getVotingMembers(188)", "Delete MethodInvocation(189)", "Delete SimpleName: size(190)", "Delete MethodInvocation(191)", "Delete ClassInstanceCreation(192)", "Delete ClassInstanceCreation(193)", "Delete MethodInvocation(194)", "Delete ExpressionStatement(195)", "Delete Block(196)", "Delete MethodDeclaration(197)", "Delete Modifier: public(198)", "Delete PrimitiveType: boolean(199)", "Delete SimpleName: addAck(200)", "Delete SimpleName: Long(201)", "Delete SimpleType: Long(202)", "Delete SimpleName: sid(203)", "Delete SingleVariableDeclaration(204)", "Delete PrimitiveType: boolean(205)", "Delete SimpleName: change(206)", "Delete BooleanLiteral: false(207)", "Delete VariableDeclarationFragment(208)", "Delete VariableDeclarationStatement(209)", "Delete SimpleName: QuorumVerifierAcksetPair(210)", "Delete SimpleType: QuorumVerifierAcksetPair(211)", "Delete SimpleName: qvAckset(212)", "Delete SingleVariableDeclaration(213)", "Delete SimpleName: qvAcksetPairs(214)", "Delete SimpleName: qvAckset(215)", "Delete SimpleName: getQuorumVerifier(216)", "Delete MethodInvocation(217)", "Delete SimpleName: getVotingMembers(218)", "Delete MethodInvocation(219)", "Delete SimpleName: containsKey(220)", "Delete SimpleName: sid(221)", "Delete MethodInvocation(222)", "Delete SimpleName: qvAckset(223)", "Delete SimpleName: getAckset(224)", "Delete MethodInvocation(225)", "Delete SimpleName: add(226)", "Delete SimpleName: sid(227)", "Delete MethodInvocation(228)", "Delete ExpressionStatement(229)", "Delete SimpleName: change(230)", "Delete BooleanLiteral: true(231)", "Delete Assignment: =(232)", "Delete ExpressionStatement(233)", "Delete Block(234)", "Delete IfStatement(235)", "Delete Block(236)", "Delete EnhancedForStatement(237)", "Delete SimpleName: change(238)", "Delete ReturnStatement(239)", "Delete Block(240)", "Delete MethodDeclaration(241)", "Delete Modifier: public(242)", "Delete PrimitiveType: boolean(243)", "Delete SimpleName: hasAllQuorums(244)", "Delete SimpleName: QuorumVerifierAcksetPair(245)", "Delete SimpleType: QuorumVerifierAcksetPair(246)", "Delete SimpleName: qvAckset(247)", "Delete SingleVariableDeclaration(248)", "Delete SimpleName: qvAcksetPairs(249)", "Delete SimpleName: qvAckset(250)", "Delete SimpleName: getQuorumVerifier(251)", "Delete MethodInvocation(252)", "Delete SimpleName: containsQuorum(253)", "Delete SimpleName: qvAckset(254)", "Delete SimpleName: getAckset(255)", "Delete MethodInvocation(256)", "Delete MethodInvocation(257)", "Delete PrefixExpression: !(258)", "Delete BooleanLiteral: false(259)", "Delete ReturnStatement(260)", "Delete IfStatement(261)", "Delete Block(262)", "Delete EnhancedForStatement(263)", "Delete BooleanLiteral: true(264)", "Delete ReturnStatement(265)", "Delete Block(266)", "Delete MethodDeclaration(267)", "Delete Modifier: public(268)", "Delete SimpleName: String(269)", "Delete SimpleType: String(270)", "Delete SimpleName: ackSetsToString(271)", "Delete SimpleType: StringBuilder(273)", "Delete SimpleName: sb(274)", "Delete SimpleName: StringBuilder(275)", "Delete SimpleType: StringBuilder(276)", "Delete ClassInstanceCreation(277)", "Delete VariableDeclarationFragment(278)", "Delete VariableDeclarationStatement(279)", "Delete SimpleName: QuorumVerifierAcksetPair(280)", "Delete SimpleType: QuorumVerifierAcksetPair(281)", "Delete SimpleName: qvAckset(282)", "Delete SingleVariableDeclaration(283)", "Delete SimpleName: qvAcksetPairs(284)", "Delete SimpleName: sb(285)", "Delete SimpleName: append(286)", "Delete SimpleName: qvAckset(287)", "Delete SimpleName: getAckset(288)", "Delete MethodInvocation(289)", "Delete SimpleName: toString(290)", "Delete MethodInvocation(291)", "Delete MethodInvocation(292)", "Delete SimpleName: append(293)", "Delete StringLiteral: \",\"(294)", "Delete MethodInvocation(295)", "Delete ExpressionStatement(296)", "Delete Block(297)", "Delete EnhancedForStatement(298)", "Delete SimpleName: sb(299)", "Delete SimpleName: substring(300)", "Delete NumberLiteral: 0(301)", "Delete SimpleName: sb(302)", "Delete SimpleName: length(303)", "Delete MethodInvocation(304)", "Delete NumberLiteral: 1(305)", "Delete InfixExpression: -(306)", "Delete MethodInvocation(307)", "Delete ReturnStatement(308)", "Delete Block(309)", "Delete MethodDeclaration(310)", "Delete Modifier: public(311)", "Delete Modifier: static(312)", "Delete SimpleName: QuorumVerifierAcksetPair(313)", "Delete Modifier: private(314)", "Delete Modifier: final(315)", "Delete SimpleName: QuorumVerifier(316)", "Delete SimpleType: QuorumVerifier(317)", "Delete SimpleName: _qv(318)", "Delete VariableDeclarationFragment(319)", "Delete FieldDeclaration(320)", "Delete Modifier: private(321)", "Delete Modifier: final(322)", "Delete SimpleName: HashSet(323)", "Delete SimpleType: HashSet(324)", "Delete SimpleName: Long(325)", "Delete SimpleType: Long(326)", "Delete ParameterizedType: HashSet<Long>(327)", "Delete SimpleName: _ackset(328)", "Delete VariableDeclarationFragment(329)", "Delete FieldDeclaration(330)", "Delete Modifier: public(331)", "Delete SimpleName: QuorumVerifierAcksetPair(332)", "Delete SimpleName: QuorumVerifier(333)", "Delete SimpleType: QuorumVerifier(334)", "Delete SimpleName: qv(335)", "Delete SingleVariableDeclaration(336)", "Delete SimpleName: HashSet(337)", "Delete SimpleType: HashSet(338)", "Delete SimpleName: Long(339)", "Delete SimpleType: Long(340)", "Delete ParameterizedType: HashSet<Long>(341)", "Delete SimpleName: ackset(342)", "Delete SingleVariableDeclaration(343)", "Delete SimpleName: _qv(344)", "Delete SimpleName: qv(345)", "Delete Assignment: =(346)", "Delete ExpressionStatement(347)", "Delete SimpleName: _ackset(348)", "Delete SimpleName: ackset(349)", "Delete Assignment: =(350)", "Delete ExpressionStatement(351)", "Delete Block(352)", "Delete MethodDeclaration(353)", "Delete Modifier: public(354)", "Delete SimpleName: QuorumVerifier(355)", "Delete SimpleType: QuorumVerifier(356)", "Delete SimpleName: getQuorumVerifier(357)", "Delete SimpleName: _qv(358)", "Delete ReturnStatement(359)", "Delete Block(360)", "Delete MethodDeclaration(361)", "Delete Modifier: public(362)", "Delete SimpleName: HashSet(363)", "Delete SimpleType: HashSet(364)", "Delete SimpleName: Long(365)", "Delete SimpleType: Long(366)", "Delete ParameterizedType: HashSet<Long>(367)", "Delete SimpleName: getAckset(368)", "Delete SimpleName: _ackset(369)", "Delete ReturnStatement(370)", "Delete Block(371)", "Delete MethodDeclaration(372)", "Delete TypeDeclaration: class(373)", "Delete SimpleName: Thread(1659)", "Delete SimpleName: sleep(1660)", "Delete SimpleType: HashSet(1680)", "Delete SimpleName: Long(1681)", "Delete SimpleType: Long(1682)", "Delete ParameterizedType: HashSet<Long>(1683)", "Delete SimpleName: HashSet(1673)", "Delete SimpleType: HashSet(1674)", "Delete SimpleType: Long(1676)", "Delete ParameterizedType: HashSet<Long>(1677)", "Delete VariableDeclarationStatement(1686)", "Delete Block(1727)", "Delete EnhancedForStatement(1728)", "Delete Block(1756)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}