{"application": "google-caja", "csha": "5144f362a8924dd6e8c70300c90b6ba239ed5ce5", "files": [{"BuildServiceImplementation_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.caja.ancillary.opt.Fact to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.caja.ancillary.opt.LocalVarRenamer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.caja.ancillary.opt.ParseTreeKB to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: com.google.caja.lexer.JsLexer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: com.google.caja.lexer.JsTokenQueue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: com.google.caja.parser.js.Expression to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: com.google.caja.parser.js.Literal to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: com.google.caja.parser.js.ObjectConstructor to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: com.google.caja.parser.js.Parser to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS QualifiedName: com.google.caja.parser.js.StringLiteral to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 22"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: com.google.caja.reporting.MessagePart to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS SimpleType: ParseTreeKB to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parser to MethodInvocation at 0", "INS SimpleType: ObjectConstructor to VariableDeclarationStatement at 0", "INS SimpleName: parseExpression to MethodInvocation at 1", "INS SimpleName: ex to MethodInvocation at 0", "INS StringLiteral: \" \" to InfixExpression: + at 0", "INS SimpleName: kb to MethodInvocation at 0", "INS SimpleType: CharProducer to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS Assignment: += to ForStatement at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: rawExpr to MethodInvocation at 0", "INS SimpleName: StringLiteral to SimpleType: StringLiteral at 0", "INS SimpleName: substring to MethodInvocation at 1", "INS SimpleName: getTokenQueue to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: rawExpr to Assignment: = at 0", "INS MethodInvocation to InfixExpression: - at 0", "INS SimpleName: fromString to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: f to InfixExpression: + at 1", "INS SimpleName: kb to SingleVariableDeclaration at 1", "INS SimpleName: envJson to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: cp to VariableDeclarationFragment at 0", "INS SimpleName: i to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: sl to MethodInvocation at 0", "INS SimpleName: i to Assignment: += at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ReturnStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: parts to MethodInvocation at 0", "INS QualifiedName: MessageType.IO_ERROR to MethodInvocation at 2", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: MessageQueue to SimpleType: MessageQueue at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: sl to MethodInvocation at 0", "INS SimpleName: kb to ReturnStatement at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: toMessageQueue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: StringLiteral to SimpleType: StringLiteral at 0", "INS StringLiteral: \"Invalid JSON in \" to InfixExpression: + at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: f to SingleVariableDeclaration at 1", "INS NumberLiteral: 2 to Assignment: += at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: value to VariableDeclarationFragment at 0", "INS SimpleName: sl to VariableDeclarationFragment at 0", "INS Block to TryStatement at 0", "INS SimpleType: CharProducer to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS TryStatement to Block at 3", "INS SimpleName: mq to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: rawExpr to MethodInvocation at 0", "INS SimpleType: ParseTreeKB to SingleVariableDeclaration at 0", "INS TryStatement to Block at 1", "INS SimpleName: mq to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: ParseException to SimpleType: ParseException at 0", "INS SimpleName: value to MethodInvocation at 2", "INS WildcardType: ? extends Expression to ParameterizedType: List<? extends Expression> at 1", "INS SimpleName: f to MethodInvocation at 1", "INS SimpleName: mq to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: fromJsString to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: e to CastExpression at 1", "INS SimpleType: Parser to VariableDeclarationStatement at 0", "INS SimpleName: children to MethodInvocation at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: p to VariableDeclarationFragment at 0", "INS SimpleName: cp to MethodInvocation at 1", "INS SimpleName: e to VariableDeclarationFragment at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS Block to MethodDeclaration at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Literal to SimpleType: Literal at 0", "INS MethodInvocation to CastExpression at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: valueOf to MethodInvocation at 1", "INS ParameterizedType: List<? extends Expression> to VariableDeclarationStatement at 0", "INS SimpleName: mq to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: valueCp to MethodInvocation at 1", "INS SimpleName: loadEnvJsonFile to MethodDeclaration at 3", "INS SimpleName: expr to MethodInvocation at 2", "INS SimpleName: ParseTreeKB to SimpleType: ParseTreeKB at 0", "INS SimpleName: CharProducer to SimpleType: CharProducer at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: n to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS SimpleType: MessageQueue to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: File to SimpleType: File at 0", "INS Block to CatchClause at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 3", "INS QualifiedName: CharProducer.Factory to MethodInvocation at 0", "INS SimpleName: ParseException to SimpleType: ParseException at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: i to InfixExpression: + at 0", "INS SimpleName: mq to SingleVariableDeclaration at 1", "INS SimpleName: Parser to SimpleType: Parser at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: ObjectConstructor to SimpleType: ObjectConstructor at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: StringLiteral to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: ParseException to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS CastExpression to Assignment: = at 1", "INS SimpleName: expr to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: kb to ReturnStatement at 0", "INS SimpleName: toMessageQueue to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: parser to MethodInvocation at 0", "INS SimpleType: ParseTreeKB to MethodDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: List to ParameterizedType: List<? extends Expression> at 0", "INS SimpleName: get to MethodInvocation at 1", "INS TryStatement to Block at 5", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS SimpleName: kb to InfixExpression: == at 0", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS SimpleType: ObjectConstructor to CastExpression at 0", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS SimpleType: ParseException to SingleVariableDeclaration at 0", "INS SimpleName: parseExpression to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: addFact to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: envJson to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS SimpleType: Literal to VariableDeclarationStatement at 0", "INS ForStatement to Block at 6", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleName: ex to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: Fact to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS IfStatement to Block at 4", "INS ExpressionStatement to Block at 4", "INS Block to TryStatement at 0", "INS SimpleName: kb to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: kb to ReturnStatement at 0", "INS SimpleName: ObjectConstructor to SimpleType: ObjectConstructor at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: expectEmpty to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleName: ObjectConstructor to SimpleType: ObjectConstructor at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ex to MethodInvocation at 0", "INS SimpleName: p to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: Literal to SimpleType: Literal at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: read to MethodInvocation at 0", "INS SimpleName: CharProducer to SimpleType: CharProducer at 0", "INS SimpleName: mq to MethodInvocation at 2", "INS ReturnStatement to Block at 1", "INS Block to ForStatement at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cp to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: mq to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 3", "INS SimpleType: Expression to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 7", "INS SimpleName: envJson to MethodInvocation at 0", "INS SimpleName: valueCp to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: is to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getFilePosition to MethodInvocation at 1", "INS SimpleName: p to MethodInvocation at 0", "INS SimpleName: rawExpr to VariableDeclarationFragment at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: parts to MethodInvocation at 0", "INS SimpleName: parts to MethodInvocation at 0", "INS QualifiedName: MessageType.IO_ERROR to MethodInvocation at 2", "INS InfixExpression: - to MethodInvocation at 3", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS QualifiedName: CharProducer.Factory to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to InstanceofExpression at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleType: StringLiteral to CastExpression at 0", "INS SimpleName: addMessage to MethodInvocation at 1", "INS SimpleType: Expression to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: ParseTreeKB to SimpleType: ParseTreeKB at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: MessagePart.Factory to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: ObjectConstructor to InstanceofExpression at 1", "INS SimpleName: rawExpr to MethodInvocation at 2", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: n to InfixExpression: < at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: kb to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Expression to WildcardType: ? extends Expression at 0", "INS SimpleName: addMessage to MethodInvocation at 1", "INS SimpleName: ParseTreeKB to SimpleType: ParseTreeKB at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS Block to CatchClause at 1", "INS SimpleType: Literal to CastExpression at 0", "INS QualifiedName: MessagePart.Factory to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS Modifier: private to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS QualifiedName: CharProducer.Factory to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS StringLiteral: \"UTF-8\" to ClassInstanceCreation at 2", "INS SimpleName: f to MethodInvocation at 0", "INS SimpleType: CharProducer to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: InputStreamReader to ClassInstanceCreation at 0", "INS SimpleType: FileInputStream to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: is to MethodInvocation at 3", "INS SimpleName: FileInputStream to SimpleType: FileInputStream at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 1", "INS SimpleName: InputSource to SimpleType: InputSource at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: create to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS SimpleName: InputSource to SimpleType: InputSource at 0", "INS SimpleType: InputSource to VariableDeclarationStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: f to SingleVariableDeclaration at 1", "INS SimpleName: read to MethodDeclaration at 3", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: f to ClassInstanceCreation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: is to VariableDeclarationFragment at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleType: InputSource to ClassInstanceCreation at 0", "INS SimpleName: toURI to MethodInvocation at 1", "INS SimpleName: InputStreamReader to SimpleType: InputStreamReader at 0", "INS SimpleName: CharProducer to SimpleType: CharProducer at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: JsLexer to SimpleType: JsLexer at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ClassInstanceCreation at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: tq to ClassInstanceCreation at 1", "INS SimpleName: Parser to SimpleType: Parser at 0", "INS SimpleName: CharProducer to SimpleType: CharProducer at 0", "INS SimpleName: getCurrentPosition to MethodInvocation at 1", "INS SimpleType: JsTokenQueue to VariableDeclarationStatement at 0", "INS SimpleType: JsTokenQueue to ClassInstanceCreation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: cp to SingleVariableDeclaration at 1", "INS SimpleType: MessageQueue to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: source to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: JsTokenQueue to SimpleType: JsTokenQueue at 0", "INS SimpleType: JsLexer to VariableDeclarationStatement at 0", "INS SimpleName: errs to ClassInstanceCreation at 2", "INS SimpleName: Parser to SimpleType: Parser at 0", "INS SimpleType: Parser to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: errs to SingleVariableDeclaration at 1", "INS SimpleName: cp to ClassInstanceCreation at 1", "INS SimpleName: lexer to ClassInstanceCreation at 1", "INS SimpleType: Parser to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: CharProducer to SingleVariableDeclaration at 0", "INS SimpleName: cp to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: tq to VariableDeclarationFragment at 0", "INS SimpleName: MessageQueue to SimpleType: MessageQueue at 0", "INS SimpleName: lexer to VariableDeclarationFragment at 0", "INS SimpleType: JsLexer to ClassInstanceCreation at 0", "INS SimpleName: parser to MethodDeclaration at 3", "INS ReturnStatement to Block at 2", "INS SimpleName: JsLexer to SimpleType: JsLexer at 0", "INS SimpleName: JsTokenQueue to SimpleType: JsTokenQueue at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleType: MessageQueue to SingleVariableDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: mq to SingleVariableDeclaration at 1", "INS SimpleName: hasErrors to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: MessageQueue to SimpleType: MessageQueue at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Modifier: static to MethodDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: passed to InfixExpression: && at 0", "INS SimpleName: mq to MethodInvocation at 1", "INS SimpleName: hasErrors to MethodInvocation at 0", "INS ExpressionStatement to Block at 10", "INS SimpleName: passed to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: && to Assignment: = at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: ParseTreeKB to SimpleType: ParseTreeKB at 0", "INS SimpleName: optimizer to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ParseTreeKB to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS InfixExpression: && to Assignment: = at 1", "INS SimpleName: passed to Assignment: = at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: mq to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: hasErrors to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: passed to InfixExpression: && at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: optimize to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleType: LocalVarRenamer to ClassInstanceCreation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: LocalVarRenamer to SimpleType: LocalVarRenamer at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: passed to InfixExpression: && at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"rename\" to MethodInvocation at 2", "INS SimpleName: SimpleMessageQueue to SimpleType: SimpleMessageQueue at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: SimpleMessageQueue to SimpleType: SimpleMessageQueue at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleType: SimpleMessageQueue to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: options to MethodInvocation at 0", "INS SimpleName: optMq to ClassInstanceCreation at 1", "INS SimpleName: block to MethodInvocation at 2", "INS SimpleName: optMq to VariableDeclarationFragment at 0", "INS SimpleName: block to Assignment: = at 0", "INS SimpleType: SimpleMessageQueue to VariableDeclarationStatement at 0", "INS QualifiedName: Boolean.TRUE to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: optimizer to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: passed to InfixExpression: && at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: SimpleMessageQueue to SimpleType: SimpleMessageQueue at 0", "INS SimpleName: optMq to MethodInvocation at 3", "INS SimpleName: block to MethodInvocation at 2", "INS SimpleType: SimpleMessageQueue to ClassInstanceCreation at 0", "INS SimpleType: SimpleMessageQueue to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: optimize to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: optMq to VariableDeclarationFragment at 0", "INS SimpleName: SimpleMessageQueue to SimpleType: SimpleMessageQueue at 0", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: block to Assignment: = at 0", "INS SimpleName: optimizer to MethodInvocation at 0"]}, {"root": "UPDATE from >= to <=", "operations": ["UPD InfixExpression: >= from >= to <="]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS SimpleName: optimizer to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS Block to TryStatement at 0", "INS SimpleName: endsWith to MethodInvocation at 1", "INS SimpleName: mq to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS StringLiteral: \".env.json\" to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: loadEnvJsonFile to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: f to MethodInvocation at 0", "INS SimpleName: optimizer to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: f to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "DEL SimpleName: passed", "operations": ["DEL SimpleName: passed"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: passed", "DEL Assignment: =", "DEL ExpressionStatement", "DEL BooleanLiteral: false"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"BuildServiceImplementation_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1983) at 1", "Insert ImportDeclaration(5) into CompilationUnit(1983) at 2", "Insert ImportDeclaration(7) into CompilationUnit(1983) at 3", "Insert ImportDeclaration(15) into CompilationUnit(1983) at 7", "Insert ImportDeclaration(17) into CompilationUnit(1983) at 8", "Insert ImportDeclaration(33) into CompilationUnit(1983) at 16", "Insert ImportDeclaration(35) into CompilationUnit(1983) at 17", "Insert ImportDeclaration(39) into CompilationUnit(1983) at 19", "Insert ImportDeclaration(41) into CompilationUnit(1983) at 20", "Insert ImportDeclaration(45) into CompilationUnit(1983) at 22", "Insert ImportDeclaration(53) into CompilationUnit(1983) at 26", "Insert QualifiedName: com.google.caja.ancillary.opt.Fact(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.caja.ancillary.opt.LocalVarRenamer(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: com.google.caja.ancillary.opt.ParseTreeKB(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.caja.lexer.JsLexer(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: com.google.caja.lexer.JsTokenQueue(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: com.google.caja.parser.js.Expression(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: com.google.caja.parser.js.Literal(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: com.google.caja.parser.js.ObjectConstructor(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: com.google.caja.parser.js.Parser(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.google.caja.parser.js.StringLiteral(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: com.google.caja.reporting.MessagePart(52) into ImportDeclaration(53) at 0", "Insert MethodDeclaration(1867) into TypeDeclaration: class(1982) at 10", "Insert MethodDeclaration(1904) into TypeDeclaration: class(1982) at 11", "Insert MethodDeclaration(1948) into TypeDeclaration: class(1982) at 12", "Insert MethodDeclaration(1981) into TypeDeclaration: class(1982) at 13", "Insert Modifier: private(1604) into MethodDeclaration(1867) at 0", "Insert Modifier: static(1605) into MethodDeclaration(1867) at 1", "Insert SimpleType: ParseTreeKB(1607) into MethodDeclaration(1867) at 2", "Insert SimpleName: loadEnvJsonFile(1608) into MethodDeclaration(1867) at 3", "Insert SingleVariableDeclaration(1612) into MethodDeclaration(1867) at 4", "Insert SingleVariableDeclaration(1616) into MethodDeclaration(1867) at 5", "Insert SingleVariableDeclaration(1620) into MethodDeclaration(1867) at 6", "Insert Block(1866) into MethodDeclaration(1867) at 7", "Insert Modifier: private(1868) into MethodDeclaration(1904) at 0", "Insert Modifier: static(1869) into MethodDeclaration(1904) at 1", "Insert SimpleType: CharProducer(1871) into MethodDeclaration(1904) at 2", "Insert SimpleName: read(1872) into MethodDeclaration(1904) at 3", "Insert SingleVariableDeclaration(1876) into MethodDeclaration(1904) at 4", "Insert SimpleType: IOException(1878) into MethodDeclaration(1904) at 5", "Insert Block(1903) into MethodDeclaration(1904) at 6", "Insert Modifier: private(1905) into MethodDeclaration(1948) at 0", "Insert Modifier: static(1906) into MethodDeclaration(1948) at 1", "Insert SimpleType: Parser(1908) into MethodDeclaration(1948) at 2", "Insert SimpleName: parser(1909) into MethodDeclaration(1948) at 3", "Insert SingleVariableDeclaration(1913) into MethodDeclaration(1948) at 4", "Insert SingleVariableDeclaration(1917) into MethodDeclaration(1948) at 5", "Insert Block(1947) into MethodDeclaration(1948) at 6", "Insert Modifier: private(1949) into MethodDeclaration(1981) at 0", "Insert Modifier: static(1950) into MethodDeclaration(1981) at 1", "Insert PrimitiveType: boolean(1951) into MethodDeclaration(1981) at 2", "Insert SimpleName: hasErrors(1952) into MethodDeclaration(1981) at 3", "Insert SingleVariableDeclaration(1956) into MethodDeclaration(1981) at 4", "Move Block(713) into MethodDeclaration(1981) at 5", "Insert ExpressionStatement(812) into Block(1171) at 10", "Insert SimpleName: ParseTreeKB(1606) into SimpleType: ParseTreeKB(1607) at 0", "Insert SimpleType: File(1610) into SingleVariableDeclaration(1612) at 0", "Insert SimpleName: f(1611) into SingleVariableDeclaration(1612) at 1", "Insert SimpleType: ParseTreeKB(1614) into SingleVariableDeclaration(1616) at 0", "Insert SimpleName: kb(1615) into SingleVariableDeclaration(1616) at 1", "Insert SimpleType: MessageQueue(1618) into SingleVariableDeclaration(1620) at 0", "Insert SimpleName: mq(1619) into SingleVariableDeclaration(1620) at 1", "Insert VariableDeclarationStatement(1625) into Block(1866) at 0", "Insert TryStatement(1652) into Block(1866) at 1", "Insert VariableDeclarationStatement(1657) into Block(1866) at 2", "Insert TryStatement(1724) into Block(1866) at 3", "Insert IfStatement(1735) into Block(1866) at 4", "Insert VariableDeclarationStatement(1747) into Block(1866) at 5", "Insert ForStatement(1863) into Block(1866) at 6", "Insert ReturnStatement(1865) into Block(1866) at 7", "Insert SimpleName: CharProducer(1870) into SimpleType: CharProducer(1871) at 0", "Insert SimpleType: File(1874) into SingleVariableDeclaration(1876) at 0", "Insert SimpleName: f(1875) into SingleVariableDeclaration(1876) at 1", "Insert SimpleName: IOException(1877) into SimpleType: IOException(1878) at 0", "Insert VariableDeclarationStatement(1889) into Block(1903) at 0", "Insert ReturnStatement(1902) into Block(1903) at 1", "Insert SimpleName: Parser(1907) into SimpleType: Parser(1908) at 0", "Insert SimpleType: CharProducer(1911) into SingleVariableDeclaration(1913) at 0", "Insert SimpleName: cp(1912) into SingleVariableDeclaration(1913) at 1", "Insert SimpleType: MessageQueue(1915) into SingleVariableDeclaration(1917) at 0", "Insert SimpleName: errs(1916) into SingleVariableDeclaration(1917) at 1", "Insert VariableDeclarationStatement(1926) into Block(1947) at 0", "Insert VariableDeclarationStatement(1940) into Block(1947) at 1", "Insert ReturnStatement(1946) into Block(1947) at 2", "Insert SimpleType: MessageQueue(1954) into SingleVariableDeclaration(1956) at 0", "Insert SimpleName: mq(1955) into SingleVariableDeclaration(1956) at 1", "Insert ReturnStatement(1979) into Block(1980) at 1", "Insert Assignment: =(811) into ExpressionStatement(812) at 0", "Insert SimpleName: File(1609) into SimpleType: File(1610) at 0", "Insert SimpleName: ParseTreeKB(1613) into SimpleType: ParseTreeKB(1614) at 0", "Insert SimpleName: MessageQueue(1617) into SimpleType: MessageQueue(1618) at 0", "Insert SimpleType: CharProducer(1622) into VariableDeclarationStatement(1625) at 0", "Insert VariableDeclarationFragment(1624) into VariableDeclarationStatement(1625) at 1", "Insert Block(1632) into TryStatement(1652) at 0", "Insert CatchClause(1651) into TryStatement(1652) at 1", "Insert SimpleType: ObjectConstructor(1654) into VariableDeclarationStatement(1657) at 0", "Insert VariableDeclarationFragment(1656) into VariableDeclarationStatement(1657) at 1", "Insert Block(1710) into TryStatement(1724) at 0", "Insert CatchClause(1723) into TryStatement(1724) at 1", "Insert InfixExpression: ==(1727) into IfStatement(1735) at 0", "Insert Block(1734) into IfStatement(1735) at 1", "Insert ParameterizedType: List<? extends Expression>(1741) into VariableDeclarationStatement(1747) at 0", "Insert VariableDeclarationFragment(1746) into VariableDeclarationStatement(1747) at 1", "Insert VariableDeclarationExpression(1757) into ForStatement(1863) at 0", "Insert InfixExpression: <(1760) into ForStatement(1863) at 1", "Insert Assignment: +=(1763) into ForStatement(1863) at 2", "Insert Block(1862) into ForStatement(1863) at 3", "Insert SimpleName: kb(1864) into ReturnStatement(1865) at 0", "Insert SimpleName: File(1873) into SimpleType: File(1874) at 0", "Insert SimpleType: InputSource(1880) into VariableDeclarationStatement(1889) at 0", "Insert VariableDeclarationFragment(1888) into VariableDeclarationStatement(1889) at 1", "Insert MethodInvocation(1901) into ReturnStatement(1902) at 0", "Insert SimpleName: CharProducer(1910) into SimpleType: CharProducer(1911) at 0", "Insert SimpleName: MessageQueue(1914) into SimpleType: MessageQueue(1915) at 0", "Insert SimpleType: JsLexer(1919) into VariableDeclarationStatement(1926) at 0", "Insert VariableDeclarationFragment(1925) into VariableDeclarationStatement(1926) at 1", "Insert SimpleType: JsTokenQueue(1928) into VariableDeclarationStatement(1940) at 0", "Insert VariableDeclarationFragment(1939) into VariableDeclarationStatement(1940) at 1", "Insert ClassInstanceCreation(1945) into ReturnStatement(1946) at 0", "Insert SimpleName: MessageQueue(1953) into SimpleType: MessageQueue(1954) at 0", "Insert BooleanLiteral: false(1978) into ReturnStatement(1979) at 0", "Insert VariableDeclarationStatement(654) into Block(802) at 2", "Insert ExpressionStatement(741) into Block(802) at 4", "Insert IfStatement(793) into Block(802) at 6", "Insert SimpleName: passed(804) into Assignment: =(811) at 0", "Insert InfixExpression: &&(810) into Assignment: =(811) at 1", "Insert SimpleName: CharProducer(1621) into SimpleType: CharProducer(1622) at 0", "Insert SimpleName: cp(1623) into VariableDeclarationFragment(1624) at 0", "Insert ExpressionStatement(1631) into Block(1632) at 0", "Insert SingleVariableDeclaration(1636) into CatchClause(1651) at 0", "Insert Block(1650) into CatchClause(1651) at 1", "Insert SimpleName: ObjectConstructor(1653) into SimpleType: ObjectConstructor(1654) at 0", "Insert SimpleName: envJson(1655) into VariableDeclarationFragment(1656) at 0", "Insert VariableDeclarationStatement(1666) into Block(1710) at 0", "Insert VariableDeclarationStatement(1675) into Block(1710) at 1", "Insert ExpressionStatement(1681) into Block(1710) at 2", "Insert IfStatement(1702) into Block(1710) at 3", "Insert ExpressionStatement(1709) into Block(1710) at 4", "Insert SingleVariableDeclaration(1714) into CatchClause(1723) at 0", "Insert Block(1722) into CatchClause(1723) at 1", "Insert SimpleName: kb(1725) into InfixExpression: ==(1727) at 0", "Insert NullLiteral(1726) into InfixExpression: ==(1727) at 1", "Insert ExpressionStatement(1733) into Block(1734) at 0", "Insert SimpleType: List(1737) into ParameterizedType: List<? extends Expression>(1741) at 0", "Insert WildcardType: ? extends Expression(1740) into ParameterizedType: List<? extends Expression>(1741) at 1", "Insert SimpleName: parts(1742) into VariableDeclarationFragment(1746) at 0", "Insert MethodInvocation(1745) into VariableDeclarationFragment(1746) at 1", "Insert PrimitiveType: int(1748) into VariableDeclarationExpression(1757) at 0", "Insert VariableDeclarationFragment(1751) into VariableDeclarationExpression(1757) at 1", "Insert VariableDeclarationFragment(1756) into VariableDeclarationExpression(1757) at 2", "Insert SimpleName: i(1758) into InfixExpression: <(1760) at 0", "Insert SimpleName: n(1759) into InfixExpression: <(1760) at 1", "Insert SimpleName: i(1761) into Assignment: +=(1763) at 0", "Insert NumberLiteral: 2(1762) into Assignment: +=(1763) at 1", "Insert VariableDeclarationStatement(1775) into Block(1862) at 0", "Insert VariableDeclarationStatement(1789) into Block(1862) at 1", "Insert VariableDeclarationStatement(1797) into Block(1862) at 2", "Insert ExpressionStatement(1812) into Block(1862) at 3", "Insert VariableDeclarationStatement(1827) into Block(1862) at 4", "Insert TryStatement(1861) into Block(1862) at 5", "Insert SimpleName: InputSource(1879) into SimpleType: InputSource(1880) at 0", "Insert SimpleName: is(1881) into VariableDeclarationFragment(1888) at 0", "Insert ClassInstanceCreation(1887) into VariableDeclarationFragment(1888) at 1", "Insert QualifiedName: CharProducer.Factory(1890) into MethodInvocation(1901) at 0", "Insert SimpleName: create(1891) into MethodInvocation(1901) at 1", "Insert ClassInstanceCreation(1899) into MethodInvocation(1901) at 2", "Insert SimpleName: is(1900) into MethodInvocation(1901) at 3", "Insert SimpleName: JsLexer(1918) into SimpleType: JsLexer(1919) at 0", "Insert SimpleName: lexer(1920) into VariableDeclarationFragment(1925) at 0", "Insert ClassInstanceCreation(1924) into VariableDeclarationFragment(1925) at 1", "Insert SimpleName: JsTokenQueue(1927) into SimpleType: JsTokenQueue(1928) at 0", "Insert SimpleName: tq(1929) into VariableDeclarationFragment(1939) at 0", "Insert ClassInstanceCreation(1938) into VariableDeclarationFragment(1939) at 1", "Insert SimpleType: Parser(1942) into ClassInstanceCreation(1945) at 0", "Insert SimpleName: tq(1943) into ClassInstanceCreation(1945) at 1", "Insert SimpleName: errs(1944) into ClassInstanceCreation(1945) at 2", "Insert SimpleType: ParseTreeKB(650) into VariableDeclarationStatement(654) at 0", "Insert VariableDeclarationFragment(653) into VariableDeclarationStatement(654) at 1", "Insert Assignment: =(740) into ExpressionStatement(741) at 0", "Insert InfixExpression: &&(746) into IfStatement(764) at 0", "Insert Block(763) into IfStatement(764) at 1", "Insert InfixExpression: &&(773) into IfStatement(793) at 0", "Insert Block(792) into IfStatement(793) at 1", "Insert SimpleName: passed(805) into InfixExpression: &&(810) at 0", "Insert PrefixExpression: !(809) into InfixExpression: &&(810) at 1", "Insert Assignment: =(1630) into ExpressionStatement(1631) at 0", "Insert SimpleType: IOException(1634) into SingleVariableDeclaration(1636) at 0", "Insert SimpleName: ex(1635) into SingleVariableDeclaration(1636) at 1", "Insert ExpressionStatement(1647) into Block(1650) at 0", "Insert ReturnStatement(1649) into Block(1650) at 1", "Insert SimpleType: Parser(1659) into VariableDeclarationStatement(1666) at 0", "Insert VariableDeclarationFragment(1665) into VariableDeclarationStatement(1666) at 1", "Insert SimpleType: Expression(1668) into VariableDeclarationStatement(1675) at 0", "Insert VariableDeclarationFragment(1674) into VariableDeclarationStatement(1675) at 1", "Insert MethodInvocation(1680) into ExpressionStatement(1681) at 0", "Insert PrefixExpression: !(1687) into IfStatement(1702) at 0", "Insert Block(1701) into IfStatement(1702) at 1", "Insert Assignment: =(1708) into ExpressionStatement(1709) at 0", "Insert SimpleType: ParseException(1712) into SingleVariableDeclaration(1714) at 0", "Insert SimpleName: ex(1713) into SingleVariableDeclaration(1714) at 1", "Insert ExpressionStatement(1719) into Block(1722) at 0", "Insert ReturnStatement(1721) into Block(1722) at 1", "Insert Assignment: =(1732) into ExpressionStatement(1733) at 0", "Insert SimpleName: List(1736) into SimpleType: List(1737) at 0", "Insert SimpleType: Expression(1739) into WildcardType: ? extends Expression(1740) at 0", "Insert SimpleName: envJson(1743) into MethodInvocation(1745) at 0", "Insert SimpleName: children(1744) into MethodInvocation(1745) at 1", "Insert SimpleName: i(1749) into VariableDeclarationFragment(1751) at 0", "Insert NumberLiteral: 0(1750) into VariableDeclarationFragment(1751) at 1", "Insert SimpleName: n(1752) into VariableDeclarationFragment(1756) at 0", "Insert MethodInvocation(1755) into VariableDeclarationFragment(1756) at 1", "Insert SimpleType: StringLiteral(1765) into VariableDeclarationStatement(1775) at 0", "Insert VariableDeclarationFragment(1774) into VariableDeclarationStatement(1775) at 1", "Insert SimpleType: Literal(1777) into VariableDeclarationStatement(1789) at 0", "Insert VariableDeclarationFragment(1788) into VariableDeclarationStatement(1789) at 1", "Insert SimpleType: String(1791) into VariableDeclarationStatement(1797) at 0", "Insert VariableDeclarationFragment(1796) into VariableDeclarationStatement(1797) at 1", "Insert Assignment: =(1811) into ExpressionStatement(1812) at 0", "Insert SimpleType: CharProducer(1814) into VariableDeclarationStatement(1827) at 0", "Insert VariableDeclarationFragment(1826) into VariableDeclarationStatement(1827) at 1", "Insert Block(1849) into TryStatement(1861) at 0", "Insert CatchClause(1860) into TryStatement(1861) at 1", "Insert SimpleType: InputSource(1883) into ClassInstanceCreation(1887) at 0", "Insert MethodInvocation(1886) into ClassInstanceCreation(1887) at 1", "Insert SimpleType: InputStreamReader(1893) into ClassInstanceCreation(1899) at 0", "Insert ClassInstanceCreation(1897) into ClassInstanceCreation(1899) at 1", "Insert StringLiteral: \"UTF-8\"(1898) into ClassInstanceCreation(1899) at 2", "Insert SimpleType: JsLexer(1922) into ClassInstanceCreation(1924) at 0", "Insert SimpleName: cp(1923) into ClassInstanceCreation(1924) at 1", "Insert SimpleType: JsTokenQueue(1931) into ClassInstanceCreation(1938) at 0", "Insert SimpleName: lexer(1932) into ClassInstanceCreation(1938) at 1", "Insert MethodInvocation(1937) into ClassInstanceCreation(1938) at 2", "Insert SimpleName: Parser(1941) into SimpleType: Parser(1942) at 0", "Update InfixExpression: >=(703) to <=", "Insert SimpleName: ParseTreeKB(649) into SimpleType: ParseTreeKB(650) at 0", "Insert SimpleName: optimizer(651) into VariableDeclarationFragment(653) at 0", "Insert NullLiteral(652) into VariableDeclarationFragment(653) at 1", "Insert SimpleName: passed(733) into Assignment: =(740) at 0", "Insert InfixExpression: &&(739) into Assignment: =(740) at 1", "Insert SimpleName: passed(742) into InfixExpression: &&(746) at 0", "Insert InfixExpression: !=(745) into InfixExpression: &&(746) at 1", "Insert VariableDeclarationStatement(754) into Block(763) at 0", "Insert ExpressionStatement(762) into Block(763) at 1", "Insert SimpleName: passed(765) into InfixExpression: &&(773) at 0", "Insert MethodInvocation(772) into InfixExpression: &&(773) at 1", "Insert VariableDeclarationStatement(781) into Block(792) at 0", "Insert ExpressionStatement(791) into Block(792) at 1", "Insert MethodInvocation(808) into PrefixExpression: !(809) at 0", "Insert SimpleName: cp(1626) into Assignment: =(1630) at 0", "Insert MethodInvocation(1629) into Assignment: =(1630) at 1", "Insert SimpleName: IOException(1633) into SimpleType: IOException(1634) at 0", "Insert MethodInvocation(1646) into ExpressionStatement(1647) at 0", "Insert SimpleName: kb(1648) into ReturnStatement(1649) at 0", "Insert SimpleName: Parser(1658) into SimpleType: Parser(1659) at 0", "Insert SimpleName: p(1660) into VariableDeclarationFragment(1665) at 0", "Insert MethodInvocation(1664) into VariableDeclarationFragment(1665) at 1", "Insert SimpleName: Expression(1667) into SimpleType: Expression(1668) at 0", "Insert SimpleName: e(1669) into VariableDeclarationFragment(1674) at 0", "Insert MethodInvocation(1673) into VariableDeclarationFragment(1674) at 1", "Insert MethodInvocation(1678) into MethodInvocation(1680) at 0", "Insert SimpleName: expectEmpty(1679) into MethodInvocation(1680) at 1", "Insert ParenthesizedExpression(1686) into PrefixExpression: !(1687) at 0", "Insert ExpressionStatement(1698) into Block(1701) at 0", "Insert ReturnStatement(1700) into Block(1701) at 1", "Insert SimpleName: envJson(1703) into Assignment: =(1708) at 0", "Insert CastExpression(1707) into Assignment: =(1708) at 1", "Insert SimpleName: ParseException(1711) into SimpleType: ParseException(1712) at 0", "Insert MethodInvocation(1718) into ExpressionStatement(1719) at 0", "Insert SimpleName: kb(1720) into ReturnStatement(1721) at 0", "Insert SimpleName: kb(1728) into Assignment: =(1732) at 0", "Insert ClassInstanceCreation(1731) into Assignment: =(1732) at 1", "Insert SimpleName: Expression(1738) into SimpleType: Expression(1739) at 0", "Insert SimpleName: parts(1753) into MethodInvocation(1755) at 0", "Insert SimpleName: size(1754) into MethodInvocation(1755) at 1", "Insert SimpleName: StringLiteral(1764) into SimpleType: StringLiteral(1765) at 0", "Insert SimpleName: sl(1766) into VariableDeclarationFragment(1774) at 0", "Insert CastExpression(1773) into VariableDeclarationFragment(1774) at 1", "Insert SimpleName: Literal(1776) into SimpleType: Literal(1777) at 0", "Insert SimpleName: value(1778) into VariableDeclarationFragment(1788) at 0", "Insert CastExpression(1787) into VariableDeclarationFragment(1788) at 1", "Insert SimpleName: String(1790) into SimpleType: String(1791) at 0", "Insert SimpleName: rawExpr(1792) into VariableDeclarationFragment(1796) at 0", "Insert MethodInvocation(1795) into VariableDeclarationFragment(1796) at 1", "Insert SimpleName: rawExpr(1798) into Assignment: =(1811) at 0", "Insert InfixExpression: +(1810) into Assignment: =(1811) at 1", "Insert SimpleName: CharProducer(1813) into SimpleType: CharProducer(1814) at 0", "Insert SimpleName: valueCp(1815) into VariableDeclarationFragment(1826) at 0", "Insert MethodInvocation(1825) into VariableDeclarationFragment(1826) at 1", "Insert VariableDeclarationStatement(1839) into Block(1849) at 0", "Insert ExpressionStatement(1848) into Block(1849) at 1", "Insert SingleVariableDeclaration(1853) into CatchClause(1860) at 0", "Insert Block(1859) into CatchClause(1860) at 1", "Insert SimpleName: InputSource(1882) into SimpleType: InputSource(1883) at 0", "Insert SimpleName: f(1884) into MethodInvocation(1886) at 0", "Insert SimpleName: toURI(1885) into MethodInvocation(1886) at 1", "Insert SimpleName: InputStreamReader(1892) into SimpleType: InputStreamReader(1893) at 0", "Insert SimpleType: FileInputStream(1895) into ClassInstanceCreation(1897) at 0", "Insert SimpleName: f(1896) into ClassInstanceCreation(1897) at 1", "Insert SimpleName: JsLexer(1921) into SimpleType: JsLexer(1922) at 0", "Insert SimpleName: JsTokenQueue(1930) into SimpleType: JsTokenQueue(1931) at 0", "Insert MethodInvocation(1935) into MethodInvocation(1937) at 0", "Insert SimpleName: source(1936) into MethodInvocation(1937) at 1", "Insert ReturnStatement(1973) into Block(1974) at 0", "Insert Block(712) into TryStatement(730) at 0", "Insert SimpleName: passed(734) into InfixExpression: &&(739) at 0", "Insert PrefixExpression: !(738) into InfixExpression: &&(739) at 1", "Insert SimpleName: optimizer(743) into InfixExpression: !=(745) at 0", "Insert NullLiteral(744) into InfixExpression: !=(745) at 1", "Insert SimpleType: SimpleMessageQueue(748) into VariableDeclarationStatement(754) at 0", "Insert VariableDeclarationFragment(753) into VariableDeclarationStatement(754) at 1", "Insert Assignment: =(761) into ExpressionStatement(762) at 0", "Insert QualifiedName: Boolean.TRUE(766) into MethodInvocation(772) at 0", "Insert SimpleName: equals(767) into MethodInvocation(772) at 1", "Insert MethodInvocation(771) into MethodInvocation(772) at 2", "Insert SimpleType: SimpleMessageQueue(775) into VariableDeclarationStatement(781) at 0", "Insert VariableDeclarationFragment(780) into VariableDeclarationStatement(781) at 1", "Insert Assignment: =(790) into ExpressionStatement(791) at 0", "Insert SimpleName: hasErrors(806) into MethodInvocation(808) at 0", "Insert SimpleName: mq(807) into MethodInvocation(808) at 1", "Insert SimpleName: read(1627) into MethodInvocation(1629) at 0", "Insert SimpleName: f(1628) into MethodInvocation(1629) at 1", "Insert SimpleName: mq(1637) into MethodInvocation(1646) at 0", "Insert SimpleName: addMessage(1638) into MethodInvocation(1646) at 1", "Insert QualifiedName: MessageType.IO_ERROR(1639) into MethodInvocation(1646) at 2", "Insert MethodInvocation(1645) into MethodInvocation(1646) at 3", "Insert SimpleName: parser(1661) into MethodInvocation(1664) at 0", "Insert SimpleName: cp(1662) into MethodInvocation(1664) at 1", "Insert SimpleName: mq(1663) into MethodInvocation(1664) at 2", "Insert SimpleName: p(1670) into MethodInvocation(1673) at 0", "Insert SimpleName: parseExpression(1671) into MethodInvocation(1673) at 1", "Insert BooleanLiteral: true(1672) into MethodInvocation(1673) at 2", "Insert SimpleName: p(1676) into MethodInvocation(1678) at 0", "Insert SimpleName: getTokenQueue(1677) into MethodInvocation(1678) at 1", "Insert InstanceofExpression(1685) into ParenthesizedExpression(1686) at 0", "Insert MethodInvocation(1697) into ExpressionStatement(1698) at 0", "Insert SimpleName: kb(1699) into ReturnStatement(1700) at 0", "Insert SimpleType: ObjectConstructor(1705) into CastExpression(1707) at 0", "Insert SimpleName: e(1706) into CastExpression(1707) at 1", "Insert SimpleName: ex(1715) into MethodInvocation(1718) at 0", "Insert SimpleName: toMessageQueue(1716) into MethodInvocation(1718) at 1", "Insert SimpleName: mq(1717) into MethodInvocation(1718) at 2", "Insert SimpleType: ParseTreeKB(1730) into ClassInstanceCreation(1731) at 0", "Insert SimpleType: StringLiteral(1768) into CastExpression(1773) at 0", "Insert MethodInvocation(1772) into CastExpression(1773) at 1", "Insert SimpleType: Literal(1780) into CastExpression(1787) at 0", "Insert MethodInvocation(1786) into CastExpression(1787) at 1", "Insert SimpleName: sl(1793) into MethodInvocation(1795) at 0", "Insert SimpleName: getValue(1794) into MethodInvocation(1795) at 1", "Insert StringLiteral: \" \"(1799) into InfixExpression: +(1810) at 0", "Insert MethodInvocation(1808) into InfixExpression: +(1810) at 1", "Insert StringLiteral: \" \"(1809) into InfixExpression: +(1810) at 2", "Insert QualifiedName: CharProducer.Factory(1816) into MethodInvocation(1825) at 0", "Insert SimpleName: fromJsString(1817) into MethodInvocation(1825) at 1", "Insert MethodInvocation(1824) into MethodInvocation(1825) at 2", "Insert SimpleType: Expression(1829) into VariableDeclarationStatement(1839) at 0", "Insert VariableDeclarationFragment(1838) into VariableDeclarationStatement(1839) at 1", "Insert MethodInvocation(1847) into ExpressionStatement(1848) at 0", "Insert SimpleType: ParseException(1851) into SingleVariableDeclaration(1853) at 0", "Insert SimpleName: ex(1852) into SingleVariableDeclaration(1853) at 1", "Insert ExpressionStatement(1858) into Block(1859) at 0", "Insert SimpleName: FileInputStream(1894) into SimpleType: FileInputStream(1895) at 0", "Insert SimpleName: cp(1933) into MethodInvocation(1935) at 0", "Insert SimpleName: getCurrentPosition(1934) into MethodInvocation(1935) at 1", "Insert BooleanLiteral: true(1972) into ReturnStatement(1973) at 0", "Insert IfStatement(711) into Block(712) at 0", "Insert MethodInvocation(737) into PrefixExpression: !(738) at 0", "Insert SimpleName: SimpleMessageQueue(747) into SimpleType: SimpleMessageQueue(748) at 0", "Insert SimpleName: optMq(749) into VariableDeclarationFragment(753) at 0", "Insert ClassInstanceCreation(752) into VariableDeclarationFragment(753) at 1", "Insert SimpleName: block(755) into Assignment: =(761) at 0", "Insert MethodInvocation(760) into Assignment: =(761) at 1", "Insert SimpleName: options(768) into MethodInvocation(771) at 0", "Insert SimpleName: get(769) into MethodInvocation(771) at 1", "Insert StringLiteral: \"rename\"(770) into MethodInvocation(771) at 2", "Insert SimpleName: SimpleMessageQueue(774) into SimpleType: SimpleMessageQueue(775) at 0", "Insert SimpleName: optMq(776) into VariableDeclarationFragment(780) at 0", "Insert ClassInstanceCreation(779) into VariableDeclarationFragment(780) at 1", "Insert SimpleName: block(782) into Assignment: =(790) at 0", "Insert MethodInvocation(789) into Assignment: =(790) at 1", "Insert QualifiedName: MessagePart.Factory(1640) into MethodInvocation(1645) at 0", "Insert SimpleName: valueOf(1641) into MethodInvocation(1645) at 1", "Insert MethodInvocation(1644) into MethodInvocation(1645) at 2", "Insert SimpleName: e(1682) into InstanceofExpression(1685) at 0", "Insert SimpleType: ObjectConstructor(1684) into InstanceofExpression(1685) at 1", "Insert SimpleName: mq(1688) into MethodInvocation(1697) at 0", "Insert SimpleName: addMessage(1689) into MethodInvocation(1697) at 1", "Insert QualifiedName: MessageType.IO_ERROR(1690) into MethodInvocation(1697) at 2", "Insert MethodInvocation(1696) into MethodInvocation(1697) at 3", "Insert SimpleName: ObjectConstructor(1704) into SimpleType: ObjectConstructor(1705) at 0", "Insert SimpleName: ParseTreeKB(1729) into SimpleType: ParseTreeKB(1730) at 0", "Insert SimpleName: StringLiteral(1767) into SimpleType: StringLiteral(1768) at 0", "Insert SimpleName: parts(1769) into MethodInvocation(1772) at 0", "Insert SimpleName: get(1770) into MethodInvocation(1772) at 1", "Insert SimpleName: i(1771) into MethodInvocation(1772) at 2", "Insert SimpleName: Literal(1779) into SimpleType: Literal(1780) at 0", "Insert SimpleName: parts(1781) into MethodInvocation(1786) at 0", "Insert SimpleName: get(1782) into MethodInvocation(1786) at 1", "Insert InfixExpression: +(1785) into MethodInvocation(1786) at 2", "Insert SimpleName: rawExpr(1800) into MethodInvocation(1808) at 0", "Insert SimpleName: substring(1801) into MethodInvocation(1808) at 1", "Insert NumberLiteral: 1(1802) into MethodInvocation(1808) at 2", "Insert InfixExpression: -(1807) into MethodInvocation(1808) at 3", "Insert QualifiedName: CharProducer.Factory(1818) into MethodInvocation(1824) at 0", "Insert SimpleName: fromString(1819) into MethodInvocation(1824) at 1", "Insert SimpleName: rawExpr(1820) into MethodInvocation(1824) at 2", "Insert MethodInvocation(1823) into MethodInvocation(1824) at 3", "Insert SimpleName: Expression(1828) into SimpleType: Expression(1829) at 0", "Insert SimpleName: expr(1830) into VariableDeclarationFragment(1838) at 0", "Insert MethodInvocation(1837) into VariableDeclarationFragment(1838) at 1", "Insert SimpleName: kb(1840) into MethodInvocation(1847) at 0", "Insert SimpleName: addFact(1841) into MethodInvocation(1847) at 1", "Insert SimpleName: expr(1842) into MethodInvocation(1847) at 2", "Insert MethodInvocation(1846) into MethodInvocation(1847) at 3", "Insert SimpleName: ParseException(1850) into SimpleType: ParseException(1851) at 0", "Insert MethodInvocation(1857) into ExpressionStatement(1858) at 0", "Insert MethodInvocation(665) into IfStatement(711) at 0", "Insert Block(674) into IfStatement(711) at 1", "Move Block(667) into IfStatement(711) at 2", "Insert SimpleName: hasErrors(735) into MethodInvocation(737) at 0", "Insert SimpleName: mq(736) into MethodInvocation(737) at 1", "Insert SimpleType: SimpleMessageQueue(751) into ClassInstanceCreation(752) at 0", "Insert SimpleName: optimizer(756) into MethodInvocation(760) at 0", "Insert SimpleName: optimize(757) into MethodInvocation(760) at 1", "Insert SimpleName: block(758) into MethodInvocation(760) at 2", "Insert SimpleName: optMq(759) into MethodInvocation(760) at 3", "Insert SimpleType: SimpleMessageQueue(778) into ClassInstanceCreation(779) at 0", "Insert ClassInstanceCreation(786) into MethodInvocation(789) at 0", "Insert SimpleName: optimize(787) into MethodInvocation(789) at 1", "Insert SimpleName: block(788) into MethodInvocation(789) at 2", "Insert SimpleName: ex(1642) into MethodInvocation(1644) at 0", "Insert SimpleName: toString(1643) into MethodInvocation(1644) at 1", "Insert SimpleName: ObjectConstructor(1683) into SimpleType: ObjectConstructor(1684) at 0", "Insert QualifiedName: MessagePart.Factory(1691) into MethodInvocation(1696) at 0", "Insert SimpleName: valueOf(1692) into MethodInvocation(1696) at 1", "Insert InfixExpression: +(1695) into MethodInvocation(1696) at 2", "Insert SimpleName: i(1783) into InfixExpression: +(1785) at 0", "Insert NumberLiteral: 1(1784) into InfixExpression: +(1785) at 1", "Insert MethodInvocation(1805) into InfixExpression: -(1807) at 0", "Insert NumberLiteral: 1(1806) into InfixExpression: -(1807) at 1", "Insert SimpleName: sl(1821) into MethodInvocation(1823) at 0", "Insert SimpleName: getFilePosition(1822) into MethodInvocation(1823) at 1", "Insert MethodInvocation(1834) into MethodInvocation(1837) at 0", "Insert SimpleName: parseExpression(1835) into MethodInvocation(1837) at 1", "Insert BooleanLiteral: true(1836) into MethodInvocation(1837) at 2", "Insert SimpleName: Fact(1843) into MethodInvocation(1846) at 0", "Insert SimpleName: is(1844) into MethodInvocation(1846) at 1", "Insert SimpleName: value(1845) into MethodInvocation(1846) at 2", "Insert SimpleName: ex(1854) into MethodInvocation(1857) at 0", "Insert SimpleName: toMessageQueue(1855) into MethodInvocation(1857) at 1", "Insert SimpleName: mq(1856) into MethodInvocation(1857) at 2", "Insert MethodInvocation(662) into MethodInvocation(665) at 0", "Insert SimpleName: endsWith(663) into MethodInvocation(665) at 1", "Insert StringLiteral: \".env.json\"(664) into MethodInvocation(665) at 2", "Insert ExpressionStatement(673) into Block(674) at 0", "Insert SimpleName: SimpleMessageQueue(750) into SimpleType: SimpleMessageQueue(751) at 0", "Insert SimpleName: SimpleMessageQueue(777) into SimpleType: SimpleMessageQueue(778) at 0", "Insert SimpleType: LocalVarRenamer(784) into ClassInstanceCreation(786) at 0", "Insert SimpleName: optMq(785) into ClassInstanceCreation(786) at 1", "Insert StringLiteral: \"Invalid JSON in \"(1693) into InfixExpression: +(1695) at 0", "Insert SimpleName: f(1694) into InfixExpression: +(1695) at 1", "Insert SimpleName: rawExpr(1803) into MethodInvocation(1805) at 0", "Insert SimpleName: length(1804) into MethodInvocation(1805) at 1", "Insert SimpleName: parser(1831) into MethodInvocation(1834) at 0", "Insert SimpleName: valueCp(1832) into MethodInvocation(1834) at 1", "Insert SimpleName: mq(1833) into MethodInvocation(1834) at 2", "Insert SimpleName: f(660) into MethodInvocation(662) at 0", "Insert SimpleName: getName(661) into MethodInvocation(662) at 1", "Insert Assignment: =(672) into ExpressionStatement(673) at 0", "Insert SimpleName: LocalVarRenamer(783) into SimpleType: LocalVarRenamer(784) at 0", "Insert SimpleName: optimizer(666) into Assignment: =(672) at 0", "Insert MethodInvocation(671) into Assignment: =(672) at 1", "Insert SimpleName: loadEnvJsonFile(667) into MethodInvocation(671) at 0", "Insert SimpleName: f(668) into MethodInvocation(671) at 1", "Insert SimpleName: optimizer(669) into MethodInvocation(671) at 2", "Insert SimpleName: mq(670) into MethodInvocation(671) at 3", "Delete SimpleName: passed(688)", "Delete SimpleName: passed(704)", "Delete BooleanLiteral: false(705)", "Delete Assignment: =(706)", "Delete ExpressionStatement(707)", "Delete BreakStatement(708)"]}}, {"TransformAntTask_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: setRename to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: rename to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: rename to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: rename to SingleVariableDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 9"]}, {"root": "INS VariableDeclarationFragment to FieldDeclaration at 3", "operations": ["INS SimpleName: rename to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS StringLiteral: \"rename\" to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: options to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rename to MethodInvocation at 3"]}]}}, {"TransformAntTask_diff": {"operations": ["Insert MethodDeclaration(280) into TypeDeclaration: class(346) at 9", "Insert VariableDeclarationFragment(169) into FieldDeclaration(170) at 3", "Insert Modifier: public(267) into MethodDeclaration(280) at 0", "Insert PrimitiveType: void(268) into MethodDeclaration(280) at 1", "Insert SimpleName: setRename(269) into MethodDeclaration(280) at 2", "Insert SingleVariableDeclaration(272) into MethodDeclaration(280) at 3", "Insert Block(279) into MethodDeclaration(280) at 4", "Insert SimpleName: rename(168) into VariableDeclarationFragment(169) at 0", "Insert ExpressionStatement(248) into Block(251) at 5", "Insert PrimitiveType: boolean(270) into SingleVariableDeclaration(272) at 0", "Insert SimpleName: rename(271) into SingleVariableDeclaration(272) at 1", "Insert ExpressionStatement(278) into Block(279) at 0", "Insert MethodInvocation(247) into ExpressionStatement(248) at 0", "Insert Assignment: =(277) into ExpressionStatement(278) at 0", "Insert SimpleName: options(243) into MethodInvocation(247) at 0", "Insert SimpleName: put(244) into MethodInvocation(247) at 1", "Insert StringLiteral: \"rename\"(245) into MethodInvocation(247) at 2", "Insert SimpleName: rename(246) into MethodInvocation(247) at 3", "Insert FieldAccess(275) into Assignment: =(277) at 0", "Insert SimpleName: rename(276) into Assignment: =(277) at 1", "Insert ThisExpression(273) into FieldAccess(275) at 0", "Insert SimpleName: rename(274) into FieldAccess(275) at 1"]}}, {"Scope_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS InfixExpression: != to ForStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS QualifiedName: s.parent to Assignment: = at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: s to VariableDeclarationFragment at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: name to MethodInvocation at 2", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: Scope to VariableDeclarationExpression at 0", "INS ThisExpression to VariableDeclarationFragment at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: Scope to MethodDeclaration at 2", "INS IfStatement to Block at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS QualifiedName: s.locals to MethodInvocation at 0", "INS NullLiteral to ReturnStatement at 0", "INS Assignment: = to ForStatement at 2", "INS TextElement: Returns the scope that defines the given name or null if none. to TagElement at 0", "INS SimpleName: thatDefines to MethodDeclaration at 3", "INS SimpleName: s to Assignment: = at 0", "INS SimpleName: s to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to ForStatement at 3", "INS SimpleName: s to InfixExpression: != at 0", "INS Javadoc to MethodDeclaration at 0", "INS ForStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS SimpleType: ScopeType to MethodDeclaration at 1", "INS SimpleName: getType to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS Block to MethodDeclaration at 3", "INS SimpleName: type to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ScopeType to SimpleType: ScopeType at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS SimpleName: name to MethodInvocation at 1", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @param to Javadoc at 1", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS TextElement:  an identifier. to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 5", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: isDefinedAs to MethodInvocation at 0", "INS TextElement:  whether 'name' is defined as a declared function within this to TagElement: @return at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: scope. If 'name' is not defined, return false. to TagElement: @return at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS QualifiedName: LocalType.DATA to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: isData to MethodDeclaration at 3", "INS SimpleName: name to TagElement: @param at 0", "INS ReturnStatement to Block at 0", "INS TextElement: In this scope or some enclosing scope, is a given name to TagElement at 0", "INS TagElement: @return to Javadoc at 2", "INS TextElement: defined as data via a local \"var\" or formal parameter declaration? to TagElement at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}]}}, {"Scope_diff": {"operations": ["Insert MethodDeclaration(977) into TypeDeclaration: class(2117) at 36", "Insert MethodDeclaration(985) into TypeDeclaration: class(2117) at 37", "Insert MethodDeclaration(1145) into TypeDeclaration: class(2117) at 43", "Update Modifier: private(185) to public", "Insert Javadoc(943) into MethodDeclaration(977) at 0", "Insert Modifier: public(944) into MethodDeclaration(977) at 1", "Insert SimpleType: Scope(946) into MethodDeclaration(977) at 2", "Insert SimpleName: thatDefines(947) into MethodDeclaration(977) at 3", "Insert SingleVariableDeclaration(951) into MethodDeclaration(977) at 4", "Insert Block(976) into MethodDeclaration(977) at 5", "Insert Modifier: public(978) into MethodDeclaration(985) at 0", "Insert SimpleType: ScopeType(980) into MethodDeclaration(985) at 1", "Insert SimpleName: getType(981) into MethodDeclaration(985) at 2", "Insert Block(984) into MethodDeclaration(985) at 3", "Insert Javadoc(1131) into MethodDeclaration(1145) at 0", "Insert Modifier: public(1132) into MethodDeclaration(1145) at 1", "Insert PrimitiveType: boolean(1133) into MethodDeclaration(1145) at 2", "Insert SimpleName: isData(1134) into MethodDeclaration(1145) at 3", "Insert SingleVariableDeclaration(1138) into MethodDeclaration(1145) at 4", "Insert Block(1144) into MethodDeclaration(1145) at 5", "Insert TagElement(942) into Javadoc(943) at 0", "Insert SimpleName: Scope(945) into SimpleType: Scope(946) at 0", "Insert SimpleType: String(949) into SingleVariableDeclaration(951) at 0", "Insert SimpleName: name(950) into SingleVariableDeclaration(951) at 1", "Insert ForStatement(973) into Block(976) at 0", "Insert ReturnStatement(975) into Block(976) at 1", "Insert SimpleName: ScopeType(979) into SimpleType: ScopeType(980) at 0", "Insert ReturnStatement(983) into Block(984) at 0", "Insert TagElement(1124) into Javadoc(1131) at 0", "Insert TagElement: @param(1127) into Javadoc(1131) at 1", "Insert TagElement: @return(1130) into Javadoc(1131) at 2", "Insert SimpleType: String(1136) into SingleVariableDeclaration(1138) at 0", "Insert SimpleName: name(1137) into SingleVariableDeclaration(1138) at 1", "Insert ReturnStatement(1143) into Block(1144) at 0", "Insert TextElement: Returns the scope that defines the given name or null if none.(941) into TagElement(942) at 0", "Insert SimpleName: String(948) into SimpleType: String(949) at 0", "Insert VariableDeclarationExpression(957) into ForStatement(973) at 0", "Insert InfixExpression: !=(960) into ForStatement(973) at 1", "Insert Assignment: =(963) into ForStatement(973) at 2", "Insert Block(972) into ForStatement(973) at 3", "Insert NullLiteral(974) into ReturnStatement(975) at 0", "Insert SimpleName: type(982) into ReturnStatement(983) at 0", "Insert TextElement: In this scope or some enclosing scope, is a given name(1122) into TagElement(1124) at 0", "Insert TextElement: defined as data via a local \"var\" or formal parameter declaration?(1123) into TagElement(1124) at 1", "Insert SimpleName: name(1125) into TagElement: @param(1127) at 0", "Insert TextElement:  an identifier.(1126) into TagElement: @param(1127) at 1", "Insert TextElement:  whether 'name' is defined as a declared function within this(1128) into TagElement: @return(1130) at 0", "Insert TextElement: scope. If 'name' is not defined, return false.(1129) into TagElement: @return(1130) at 1", "Insert SimpleName: String(1135) into SimpleType: String(1136) at 0", "Insert MethodInvocation(1142) into ReturnStatement(1143) at 0", "Insert SimpleType: Scope(953) into VariableDeclarationExpression(957) at 0", "Insert VariableDeclarationFragment(956) into VariableDeclarationExpression(957) at 1", "Insert SimpleName: s(958) into InfixExpression: !=(960) at 0", "Insert NullLiteral(959) into InfixExpression: !=(960) at 1", "Insert SimpleName: s(961) into Assignment: =(963) at 0", "Insert QualifiedName: s.parent(962) into Assignment: =(963) at 1", "Insert IfStatement(971) into Block(972) at 0", "Insert SimpleName: isDefinedAs(1139) into MethodInvocation(1142) at 0", "Insert SimpleName: name(1140) into MethodInvocation(1142) at 1", "Insert QualifiedName: LocalType.DATA(1141) into MethodInvocation(1142) at 2", "Insert SimpleName: Scope(952) into SimpleType: Scope(953) at 0", "Insert SimpleName: s(954) into VariableDeclarationFragment(956) at 0", "Insert ThisExpression(955) into VariableDeclarationFragment(956) at 1", "Insert MethodInvocation(967) into IfStatement(971) at 0", "Insert Block(970) into IfStatement(971) at 1", "Insert QualifiedName: s.locals(964) into MethodInvocation(967) at 0", "Insert SimpleName: containsKey(965) into MethodInvocation(967) at 1", "Insert SimpleName: name(966) into MethodInvocation(967) at 2", "Insert ReturnStatement(969) into Block(970) at 0", "Insert SimpleName: s(968) into ReturnStatement(969) at 0"]}}], "commit_stats": [{"total_files": 26, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "True"}]}