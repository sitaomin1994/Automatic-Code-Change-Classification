{"application": "apache-mina", "csha": "cf8c21b09f998254f15d0420d4b518e5b0bfdfc0", "files": [{"IoSession_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV MethodDeclaration to TypeDeclaration: interface at 13", "MOV MethodDeclaration to TypeDeclaration: interface at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS TextElement:  <code>true</code> if this session is created. to TagElement: @return at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS TextElement: Tells if the session is created. to TagElement at 0", "INS SimpleName: isCreated to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 11"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: <li>CONNECTED -> CLOSING</li> to TagElement at 7", "INS TextElement: <ul> to TagElement at 2", "INS SimpleName: from to TagElement: @param at 0", "INS TextElement: <li>SECURING  -> CLOSING</li> to TagElement at 9", "INS TagElement: @param to Javadoc at 2", "INS TextElement:  The final SessionState to TagElement: @param at 1", "INS SimpleName: to to TagElement: @param at 0", "INS TextElement: <li>SECURED   -> CONNECTED</li> to TagElement at 10", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: transition are allowed. Here is the list of all the possible transitions :<br/> to TagElement at 1", "INS TextElement: <li>SECURING  -> SECURED</li> to TagElement at 8", "INS TextElement: <li>CLOSING   -> CLOSED</li> to TagElement at 12", "INS TextElement: <li>CONNECTED -> SECURING</li> to TagElement at 6", "INS TextElement: <li>CREATED   -> SECURING</li> to TagElement at 4", "INS TextElement: <li>CREATED   -> CLOSING</li> to TagElement at 5", "INS TextElement: <li>CREATED   -> CONNECTED</li> to TagElement at 3", "INS TextElement: <li>SECURED   -> CLOSING</li> to TagElement at 11", "INS TextElement: </ul> to TagElement at 13", "INS TagElement: @param to Javadoc at 1", "INS TextElement: Changes the session's state from a given state to another state. Not all the to TagElement at 0", "INS TextElement:  The initial SessionState to TagElement: @param at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from getState to changeState", "operations": ["UPD SimpleName: getState from getState to changeState"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: SessionState to SingleVariableDeclaration at 0", "INS SimpleName: from to SingleVariableDeclaration at 1", "INS SimpleName: SessionState to SimpleType: SessionState at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: to to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SimpleType: IllegalStateException to MethodDeclaration at 6", "operations": ["INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleType: IllegalStateException to MethodDeclaration at 6"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: SessionState to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from CONNECTED_SECURED to SECURED", "operations": ["UPD SimpleName: CONNECTED_SECURED from CONNECTED_SECURED to SECURED"]}]}}, {"IoSession_diff": {"operations": ["Move MethodDeclaration(129) into TypeDeclaration: interface(585) at 11", "Move MethodDeclaration(403) into TypeDeclaration: interface(585) at 13", "Insert MethodDeclaration(153) into TypeDeclaration: interface(585) at 11", "Insert Javadoc(150) into MethodDeclaration(153) at 0", "Insert PrimitiveType: boolean(151) into MethodDeclaration(153) at 1", "Insert SimpleName: isCreated(152) into MethodDeclaration(153) at 2", "Insert Javadoc(191) into MethodDeclaration(204) at 0", "Insert PrimitiveType: void(192) into MethodDeclaration(204) at 1", "Update SimpleName: getState(402) to changeState", "Insert SingleVariableDeclaration(197) into MethodDeclaration(204) at 3", "Insert SingleVariableDeclaration(201) into MethodDeclaration(204) at 4", "Insert SimpleType: IllegalStateException(203) into MethodDeclaration(204) at 5", "Insert TagElement(147) into Javadoc(150) at 0", "Insert TagElement: @return(149) into Javadoc(150) at 1", "Insert TagElement(184) into Javadoc(191) at 0", "Insert TagElement: @param(187) into Javadoc(191) at 1", "Insert TagElement: @param(190) into Javadoc(191) at 2", "Insert SimpleType: SessionState(195) into SingleVariableDeclaration(197) at 0", "Insert SimpleName: from(196) into SingleVariableDeclaration(197) at 1", "Move SimpleType: SessionState(401) into SingleVariableDeclaration(201) at 0", "Insert SimpleName: to(200) into SingleVariableDeclaration(201) at 1", "Insert SimpleName: IllegalStateException(202) into SimpleType: IllegalStateException(203) at 0", "Update SimpleName: CONNECTED_SECURED(423) to SECURED", "Insert TextElement: Tells if the session is created.(146) into TagElement(147) at 0", "Insert TextElement:  <code>true</code> if this session is created.(148) into TagElement: @return(149) at 0", "Insert TextElement: Changes the session's state from a given state to another state. Not all the(170) into TagElement(184) at 0", "Insert TextElement: transition are allowed. Here is the list of all the possible transitions :<br/>(171) into TagElement(184) at 1", "Insert TextElement: <ul>(172) into TagElement(184) at 2", "Insert TextElement: <li>CREATED   -> CONNECTED</li>(173) into TagElement(184) at 3", "Insert TextElement: <li>CREATED   -> SECURING</li>(174) into TagElement(184) at 4", "Insert TextElement: <li>CREATED   -> CLOSING</li>(175) into TagElement(184) at 5", "Insert TextElement: <li>CONNECTED -> SECURING</li>(176) into TagElement(184) at 6", "Insert TextElement: <li>CONNECTED -> CLOSING</li>(177) into TagElement(184) at 7", "Insert TextElement: <li>SECURING  -> SECURED</li>(178) into TagElement(184) at 8", "Insert TextElement: <li>SECURING  -> CLOSING</li>(179) into TagElement(184) at 9", "Insert TextElement: <li>SECURED   -> CONNECTED</li>(180) into TagElement(184) at 10", "Insert TextElement: <li>SECURED   -> CLOSING</li>(181) into TagElement(184) at 11", "Insert TextElement: <li>CLOSING   -> CLOSED</li>(182) into TagElement(184) at 12", "Insert TextElement: </ul>(183) into TagElement(184) at 13", "Insert SimpleName: from(185) into TagElement: @param(187) at 0", "Insert TextElement:  The initial SessionState(186) into TagElement: @param(187) at 1", "Insert SimpleName: to(188) into TagElement: @param(190) at 0", "Insert TextElement:  The final SessionState(189) into TagElement: @param(190) at 1", "Insert SimpleName: SessionState(194) into SimpleType: SessionState(195) at 0"]}}, {"AbstractIoSession_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: stateLock to VariableDeclarationFragment at 0", "INS SimpleType: ReadWriteLock to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: ReentrantReadWriteLock to ClassInstanceCreation at 0", "INS SimpleName: ReadWriteLock to SimpleType: ReadWriteLock at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: A lock to protect the access to the session's state  to TagElement at 0", "INS SimpleName: ReentrantReadWriteLock to SimpleType: ReentrantReadWriteLock at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: stateLock to MethodInvocation at 0", "INS Modifier: private to FieldDeclaration at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: A Read lock on the reentrant session's state lock  to TagElement at 0", "INS SimpleName: readLock to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: Lock to FieldDeclaration at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: stateReadLock to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS SimpleName: Lock to SimpleType: Lock at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS TagElement to Javadoc at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: Lock to SimpleType: Lock at 0", "INS SimpleType: Lock to FieldDeclaration at 3", "INS SimpleName: stateLock to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS Javadoc to FieldDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: stateWriteLock to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1", "INS TextElement: A Write lock on the reentrant session's state lock  to TagElement at 0", "INS SimpleName: writeLock to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: isCreated to MethodDeclaration at 4", "INS QualifiedName: SessionState.CREATED to InfixExpression: == at 1", "INS TryStatement to Block at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: state to InfixExpression: == at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS Block to TryStatement at 1", "INS ReturnStatement to Block at 1"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: The session's state : one of CREATED, CONNECTED, CLOSING, CLOSED, SECURING, CONNECTED_SECURED  to TagElement at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: stateReadLock to MethodInvocation at 0", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 0", "INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS Block to MethodDeclaration at 5"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: unlock to MethodInvocation at 1", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS TryStatement to Block at 0", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to TryStatement at 1", "INS SimpleName: unlock to MethodInvocation at 1", "INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS TryStatement to Block at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Block to TryStatement at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @inheritDoc to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to TryStatement at 0", "INS Block to MethodDeclaration at 5", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS SimpleName: lock to MethodInvocation at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "UPDATE from getState to changeState", "operations": ["UPD SimpleName: getState from getState to changeState"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: from to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: to to SingleVariableDeclaration at 1", "INS SimpleName: SessionState to SimpleType: SessionState at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: SessionState to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: IllegalStateException to MethodDeclaration at 7", "operations": ["INS SimpleType: IllegalStateException to MethodDeclaration at 7", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS QualifiedName: SessionState.CLOSED to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SwitchCase to SwitchStatement at 2", "INS Block to TryStatement at 0", "INS SimpleName: from to InfixExpression: + at 1", "INS SwitchCase to SwitchStatement at 2", "INS SimpleName: CREATED to SwitchCase at 0", "INS SwitchStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 2", "INS SimpleName: from to SwitchStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: to to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SwitchCase to SwitchStatement at 13", "INS SwitchCase to SwitchStatement at 1", "INS ExpressionStatement to SwitchStatement at 3", "INS SimpleName: CLOSING to SwitchCase at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS BreakStatement to SwitchStatement at 6", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: to to InfixExpression: + at 3", "INS Block to TryStatement at 1", "INS SimpleName: SECURING to SwitchCase at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS BreakStatement to SwitchStatement at 9", "INS SimpleName: CONNECTED to SwitchCase at 0", "INS SimpleName: to to SwitchStatement at 0", "INS ExpressionStatement to Block at 0", "INS SwitchCase to SwitchStatement at 17", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: state to Assignment: = at 0", "INS SimpleName: to to InfixExpression: + at 3", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SwitchCase to SwitchStatement at 7", "INS StringLiteral: \" to \" to InfixExpression: + at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS ThrowStatement to SwitchStatement at 18", "INS BreakStatement to SwitchStatement at 5", "INS SimpleName: to to InfixExpression: + at 1", "INS SwitchCase to SwitchStatement at 6", "INS ThrowStatement to SwitchStatement at 6", "INS StringLiteral: \"Cannot transit from \" to InfixExpression: + at 0", "INS SimpleName: from to InfixExpression: + at 1", "INS ExpressionStatement to SwitchStatement at 15", "INS SimpleName: SECURED to SwitchCase at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS ExpressionStatement to SwitchStatement at 4", "INS SimpleName: from to InfixExpression: + at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS StringLiteral: \" to \" to InfixExpression: + at 2", "INS StringLiteral: \" to \" to InfixExpression: + at 2", "INS SimpleName: to to InfixExpression: != at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: state to Assignment: = at 0", "INS SimpleName: stateWriteLock to MethodInvocation at 0", "INS SwitchStatement to SwitchStatement at 8", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SwitchCase to SwitchStatement at 1", "INS StringLiteral: \" to \" to InfixExpression: + at 2", "INS SwitchStatement to Block at 1", "INS SwitchCase to SwitchStatement at 5", "INS SimpleName: from to InfixExpression: + at 1", "INS SwitchCase to SwitchStatement at 4", "INS Assignment: = to ExpressionStatement at 0", "INS ThrowStatement to SwitchStatement at 7", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: CONNECTED to SwitchCase at 0", "INS SimpleName: to to InfixExpression: + at 3", "INS SimpleName: state to Assignment: = at 0", "INS ExpressionStatement to SwitchStatement at 3", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: to to Assignment: = at 1", "INS SimpleName: to to InfixExpression: + at 3", "INS SwitchCase to SwitchStatement at 5", "INS SimpleName: CLOSING to SwitchCase at 0", "INS StringLiteral: \"The session is already closed. cannot switch to \" to InfixExpression: + at 0", "INS TryStatement to Block at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: to to SwitchStatement at 0", "INS SimpleName: from to InfixExpression: + at 1", "INS SimpleName: to to Assignment: = at 1", "INS ExpressionStatement to SwitchStatement at 3", "INS StringLiteral: \"Cannot transit from \" to InfixExpression: + at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS BreakStatement to SwitchStatement at 16", "INS SimpleName: SECURING to SwitchCase at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: CONNECTED to SwitchCase at 0", "INS StringLiteral: \"Cannot transit from \" to InfixExpression: + at 0", "INS ThrowStatement to SwitchStatement at 6", "INS SimpleName: unlock to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 10", "INS BreakStatement to SwitchStatement at 12", "INS SwitchCase to SwitchStatement at 2", "INS ThrowStatement to Block at 0", "INS SimpleName: CLOSING to SwitchCase at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: state to Assignment: = at 0", "INS StringLiteral: \"Cannot transit from \" to InfixExpression: + at 0", "INS SimpleName: to to Assignment: = at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS Block to MethodDeclaration at 8", "INS SwitchStatement to SwitchStatement at 5", "INS SwitchStatement to SwitchStatement at 11", "INS SimpleName: to to SwitchStatement at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: SECURING to SwitchCase at 0", "INS BreakStatement to SwitchStatement at 4", "INS SwitchCase to SwitchStatement at 3", "INS SimpleName: state to Assignment: = at 0", "INS BreakStatement to SwitchStatement at 4", "INS BreakStatement to SwitchStatement at 3", "INS IfStatement to SwitchStatement at 14", "INS ThrowStatement to SwitchStatement at 6", "INS SimpleName: to to Assignment: = at 1", "INS SimpleName: to to InfixExpression: + at 3", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: CLOSING to SwitchCase at 0", "INS BreakStatement to SwitchStatement at 4", "INS StringLiteral: \" to \" to InfixExpression: + at 2", "INS StringLiteral: \"Cannot transit from \" to InfixExpression: + at 0", "INS SimpleName: to to SwitchStatement at 0", "INS SimpleName: CLOSING to SwitchCase at 0", "INS SimpleName: SECURED to SwitchCase at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: CLOSED to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 5", "INS SimpleName: stateWriteLock to MethodInvocation at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: SessionState to SingleVariableDeclaration at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: lock to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: stateReadLock to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: lock to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: stateReadLock to MethodInvocation at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "UPDATE from SessionState.CONNECTED_SECURED to SessionState.SECURED", "operations": ["UPD QualifiedName: SessionState.CONNECTED_SECURED from SessionState.CONNECTED_SECURED to SessionState.SECURED"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL SimpleName: state", "DEL Block"]}]}}, {"AbstractIoSession_diff": {"operations": ["Insert FieldDeclaration(217) into TypeDeclaration: class(1212) at 18", "Insert FieldDeclaration(230) into TypeDeclaration: class(1212) at 19", "Insert FieldDeclaration(243) into TypeDeclaration: class(1212) at 20", "Insert MethodDeclaration(505) into TypeDeclaration: class(1212) at 32", "Insert Javadoc(197) into FieldDeclaration(204) at 0", "Insert Javadoc(207) into FieldDeclaration(217) at 0", "Insert Modifier: private(208) into FieldDeclaration(217) at 1", "Insert Modifier: final(209) into FieldDeclaration(217) at 2", "Insert SimpleType: ReadWriteLock(211) into FieldDeclaration(217) at 3", "Insert VariableDeclarationFragment(216) into FieldDeclaration(217) at 4", "Insert Javadoc(220) into FieldDeclaration(230) at 0", "Insert Modifier: private(221) into FieldDeclaration(230) at 1", "Insert Modifier: final(222) into FieldDeclaration(230) at 2", "Insert SimpleType: Lock(224) into FieldDeclaration(230) at 3", "Insert VariableDeclarationFragment(229) into FieldDeclaration(230) at 4", "Insert Javadoc(233) into FieldDeclaration(243) at 0", "Insert Modifier: private(234) into FieldDeclaration(243) at 1", "Insert Modifier: final(235) into FieldDeclaration(243) at 2", "Insert SimpleType: Lock(237) into FieldDeclaration(243) at 3", "Insert VariableDeclarationFragment(242) into FieldDeclaration(243) at 4", "Insert Block(429) into MethodDeclaration(430) at 5", "Insert Block(454) into MethodDeclaration(455) at 5", "Insert Block(479) into MethodDeclaration(480) at 5", "Move Javadoc(422) into MethodDeclaration(505) at 0", "Move MarkerAnnotation(424) into MethodDeclaration(505) at 1", "Insert Modifier: public(486) into MethodDeclaration(505) at 2", "Insert PrimitiveType: boolean(487) into MethodDeclaration(505) at 3", "Insert SimpleName: isCreated(488) into MethodDeclaration(505) at 4", "Insert Block(504) into MethodDeclaration(505) at 5", "Insert Block(529) into MethodDeclaration(530) at 5", "Insert Javadoc(533) into MethodDeclaration(555) at 0", "Insert MarkerAnnotation(535) into MethodDeclaration(555) at 1", "Insert Block(554) into MethodDeclaration(555) at 5", "Insert Javadoc(558) into MethodDeclaration(714) at 0", "Insert PrimitiveType: void(560) into MethodDeclaration(714) at 2", "Update SimpleName: getState(437) to changeState", "Insert SingleVariableDeclaration(565) into MethodDeclaration(714) at 4", "Insert SingleVariableDeclaration(569) into MethodDeclaration(714) at 5", "Insert SimpleType: IllegalStateException(571) into MethodDeclaration(714) at 6", "Insert Block(713) into MethodDeclaration(714) at 7", "Insert TagElement(196) into Javadoc(197) at 0", "Insert TagElement(206) into Javadoc(207) at 0", "Insert SimpleName: ReadWriteLock(210) into SimpleType: ReadWriteLock(211) at 0", "Insert SimpleName: stateLock(212) into VariableDeclarationFragment(216) at 0", "Insert ClassInstanceCreation(215) into VariableDeclarationFragment(216) at 1", "Insert TagElement(219) into Javadoc(220) at 0", "Insert SimpleName: Lock(223) into SimpleType: Lock(224) at 0", "Insert SimpleName: stateReadLock(225) into VariableDeclarationFragment(229) at 0", "Insert MethodInvocation(228) into VariableDeclarationFragment(229) at 1", "Insert TagElement(232) into Javadoc(233) at 0", "Insert SimpleName: Lock(236) into SimpleType: Lock(237) at 0", "Insert SimpleName: stateWriteLock(238) into VariableDeclarationFragment(242) at 0", "Insert MethodInvocation(241) into VariableDeclarationFragment(242) at 1", "Insert TryStatement(428) into Block(429) at 0", "Insert TryStatement(453) into Block(454) at 0", "Insert TryStatement(478) into Block(479) at 0", "Insert TryStatement(503) into Block(504) at 0", "Insert TryStatement(528) into Block(529) at 0", "Insert TagElement(532) into Javadoc(533) at 0", "Insert SimpleName: Override(534) into MarkerAnnotation(535) at 0", "Insert TryStatement(553) into Block(554) at 0", "Insert TagElement(557) into Javadoc(558) at 0", "Move SimpleType: SessionState(436) into SingleVariableDeclaration(565) at 0", "Insert SimpleName: from(564) into SingleVariableDeclaration(565) at 1", "Insert SimpleType: SessionState(567) into SingleVariableDeclaration(569) at 0", "Insert SimpleName: to(568) into SingleVariableDeclaration(569) at 1", "Insert SimpleName: IllegalStateException(570) into SimpleType: IllegalStateException(571) at 0", "Insert TryStatement(712) into Block(713) at 0", "Insert TextElement: The session's state : one of CREATED, CONNECTED, CLOSING, CLOSED, SECURING, CONNECTED_SECURED (195) into TagElement(196) at 0", "Insert TextElement: A lock to protect the access to the session's state (205) into TagElement(206) at 0", "Insert SimpleType: ReentrantReadWriteLock(214) into ClassInstanceCreation(215) at 0", "Insert TextElement: A Read lock on the reentrant session's state lock (218) into TagElement(219) at 0", "Insert SimpleName: stateLock(226) into MethodInvocation(228) at 0", "Insert SimpleName: readLock(227) into MethodInvocation(228) at 1", "Insert TextElement: A Write lock on the reentrant session's state lock (231) into TagElement(232) at 0", "Insert SimpleName: stateLock(239) into MethodInvocation(241) at 0", "Insert SimpleName: writeLock(240) into MethodInvocation(241) at 1", "Move Block(376) into TryStatement(428) at 0", "Insert Block(427) into TryStatement(428) at 1", "Move Block(390) into TryStatement(453) at 0", "Insert Block(452) into TryStatement(453) at 1", "Move Block(404) into TryStatement(478) at 0", "Insert Block(477) into TryStatement(478) at 1", "Insert Block(497) into TryStatement(503) at 0", "Insert Block(502) into TryStatement(503) at 1", "Move Block(418) into TryStatement(528) at 0", "Insert Block(527) into TryStatement(528) at 1", "Insert TagElement: @inheritDoc(531) into TagElement(532) at 0", "Insert Block(547) into TryStatement(553) at 0", "Insert Block(552) into TryStatement(553) at 1", "Insert TagElement: @inheritDoc(556) into TagElement(557) at 0", "Insert SimpleName: SessionState(566) into SimpleType: SessionState(567) at 0", "Insert Block(706) into TryStatement(712) at 0", "Insert Block(711) into TryStatement(712) at 1", "Insert SimpleName: ReentrantReadWriteLock(213) into SimpleType: ReentrantReadWriteLock(214) at 0", "Insert ExpressionStatement(417) into Block(422) at 0", "Insert ExpressionStatement(426) into Block(427) at 0", "Insert ExpressionStatement(442) into Block(447) at 0", "Insert ExpressionStatement(451) into Block(452) at 0", "Insert ExpressionStatement(467) into Block(472) at 0", "Insert ExpressionStatement(476) into Block(477) at 0", "Insert ExpressionStatement(492) into Block(497) at 0", "Insert ReturnStatement(496) into Block(497) at 1", "Insert ExpressionStatement(501) into Block(502) at 0", "Insert ExpressionStatement(517) into Block(522) at 0", "Insert ExpressionStatement(526) into Block(527) at 0", "Insert ExpressionStatement(542) into Block(547) at 0", "Move ReturnStatement(431) into Block(547) at 1", "Insert ExpressionStatement(551) into Block(552) at 0", "Insert ExpressionStatement(575) into Block(706) at 0", "Insert SwitchStatement(705) into Block(706) at 1", "Insert ExpressionStatement(710) into Block(711) at 0", "Insert MethodInvocation(416) into ExpressionStatement(417) at 0", "Insert MethodInvocation(425) into ExpressionStatement(426) at 0", "Insert MethodInvocation(441) into ExpressionStatement(442) at 0", "Insert MethodInvocation(450) into ExpressionStatement(451) at 0", "Insert MethodInvocation(466) into ExpressionStatement(467) at 0", "Insert MethodInvocation(475) into ExpressionStatement(476) at 0", "Insert MethodInvocation(491) into ExpressionStatement(492) at 0", "Insert InfixExpression: ==(495) into ReturnStatement(496) at 0", "Insert MethodInvocation(500) into ExpressionStatement(501) at 0", "Insert MethodInvocation(516) into ExpressionStatement(517) at 0", "Insert MethodInvocation(525) into ExpressionStatement(526) at 0", "Insert MethodInvocation(541) into ExpressionStatement(542) at 0", "Insert MethodInvocation(550) into ExpressionStatement(551) at 0", "Insert MethodInvocation(574) into ExpressionStatement(575) at 0", "Insert SimpleName: from(576) into SwitchStatement(705) at 0", "Insert SwitchCase(578) into SwitchStatement(705) at 1", "Insert SwitchStatement(601) into SwitchStatement(705) at 2", "Insert BreakStatement(602) into SwitchStatement(705) at 3", "Insert SwitchCase(604) into SwitchStatement(705) at 4", "Insert SwitchStatement(625) into SwitchStatement(705) at 5", "Insert BreakStatement(626) into SwitchStatement(705) at 6", "Insert SwitchCase(628) into SwitchStatement(705) at 7", "Insert SwitchStatement(649) into SwitchStatement(705) at 8", "Insert BreakStatement(650) into SwitchStatement(705) at 9", "Insert SwitchCase(652) into SwitchStatement(705) at 10", "Insert SwitchStatement(673) into SwitchStatement(705) at 11", "Insert BreakStatement(674) into SwitchStatement(705) at 12", "Insert SwitchCase(676) into SwitchStatement(705) at 13", "Insert IfStatement(690) into SwitchStatement(705) at 14", "Insert ExpressionStatement(694) into SwitchStatement(705) at 15", "Insert BreakStatement(695) into SwitchStatement(705) at 16", "Insert SwitchCase(697) into SwitchStatement(705) at 17", "Insert ThrowStatement(704) into SwitchStatement(705) at 18", "Insert MethodInvocation(709) into ExpressionStatement(710) at 0", "Insert SimpleName: stateReadLock(414) into MethodInvocation(416) at 0", "Insert SimpleName: lock(415) into MethodInvocation(416) at 1", "Insert SimpleName: stateReadLock(423) into MethodInvocation(425) at 0", "Insert SimpleName: unlock(424) into MethodInvocation(425) at 1", "Insert SimpleName: stateReadLock(439) into MethodInvocation(441) at 0", "Insert SimpleName: lock(440) into MethodInvocation(441) at 1", "Insert SimpleName: stateReadLock(448) into MethodInvocation(450) at 0", "Insert SimpleName: unlock(449) into MethodInvocation(450) at 1", "Insert SimpleName: stateReadLock(464) into MethodInvocation(466) at 0", "Insert SimpleName: lock(465) into MethodInvocation(466) at 1", "Insert SimpleName: stateReadLock(473) into MethodInvocation(475) at 0", "Insert SimpleName: unlock(474) into MethodInvocation(475) at 1", "Insert SimpleName: stateReadLock(489) into MethodInvocation(491) at 0", "Insert SimpleName: lock(490) into MethodInvocation(491) at 1", "Insert SimpleName: state(493) into InfixExpression: ==(495) at 0", "Insert QualifiedName: SessionState.CREATED(494) into InfixExpression: ==(495) at 1", "Insert SimpleName: stateReadLock(498) into MethodInvocation(500) at 0", "Insert SimpleName: unlock(499) into MethodInvocation(500) at 1", "Insert SimpleName: stateReadLock(514) into MethodInvocation(516) at 0", "Insert SimpleName: lock(515) into MethodInvocation(516) at 1", "Insert SimpleName: stateReadLock(523) into MethodInvocation(525) at 0", "Insert SimpleName: unlock(524) into MethodInvocation(525) at 1", "Insert SimpleName: stateReadLock(539) into MethodInvocation(541) at 0", "Insert SimpleName: lock(540) into MethodInvocation(541) at 1", "Update QualifiedName: SessionState.CONNECTED_SECURED(429) to SessionState.SECURED", "Insert SimpleName: stateReadLock(548) into MethodInvocation(550) at 0", "Insert SimpleName: unlock(549) into MethodInvocation(550) at 1", "Insert SimpleName: stateWriteLock(572) into MethodInvocation(574) at 0", "Insert SimpleName: lock(573) into MethodInvocation(574) at 1", "Insert SimpleName: CREATED(577) into SwitchCase(578) at 0", "Insert SimpleName: to(579) into SwitchStatement(601) at 0", "Insert SwitchCase(581) into SwitchStatement(601) at 1", "Insert SwitchCase(583) into SwitchStatement(601) at 2", "Insert SwitchCase(585) into SwitchStatement(601) at 3", "Insert ExpressionStatement(589) into SwitchStatement(601) at 4", "Insert BreakStatement(590) into SwitchStatement(601) at 5", "Insert SwitchCase(591) into SwitchStatement(601) at 6", "Insert ThrowStatement(600) into SwitchStatement(601) at 7", "Insert SimpleName: CONNECTED(603) into SwitchCase(604) at 0", "Insert SimpleName: to(605) into SwitchStatement(625) at 0", "Insert SwitchCase(607) into SwitchStatement(625) at 1", "Insert SwitchCase(609) into SwitchStatement(625) at 2", "Insert ExpressionStatement(613) into SwitchStatement(625) at 3", "Insert BreakStatement(614) into SwitchStatement(625) at 4", "Insert SwitchCase(615) into SwitchStatement(625) at 5", "Insert ThrowStatement(624) into SwitchStatement(625) at 6", "Insert SimpleName: SECURING(627) into SwitchCase(628) at 0", "Insert SimpleName: to(629) into SwitchStatement(649) at 0", "Insert SwitchCase(631) into SwitchStatement(649) at 1", "Insert SwitchCase(633) into SwitchStatement(649) at 2", "Insert ExpressionStatement(637) into SwitchStatement(649) at 3", "Insert BreakStatement(638) into SwitchStatement(649) at 4", "Insert SwitchCase(639) into SwitchStatement(649) at 5", "Insert ThrowStatement(648) into SwitchStatement(649) at 6", "Insert SimpleName: SECURED(651) into SwitchCase(652) at 0", "Insert SimpleName: to(653) into SwitchStatement(673) at 0", "Insert SwitchCase(655) into SwitchStatement(673) at 1", "Insert SwitchCase(657) into SwitchStatement(673) at 2", "Insert ExpressionStatement(661) into SwitchStatement(673) at 3", "Insert BreakStatement(662) into SwitchStatement(673) at 4", "Insert SwitchCase(663) into SwitchStatement(673) at 5", "Insert ThrowStatement(672) into SwitchStatement(673) at 6", "Insert SimpleName: CLOSING(675) into SwitchCase(676) at 0", "Insert InfixExpression: !=(679) into IfStatement(690) at 0", "Insert Block(689) into IfStatement(690) at 1", "Insert Assignment: =(693) into ExpressionStatement(694) at 0", "Insert SimpleName: CLOSED(696) into SwitchCase(697) at 0", "Insert ClassInstanceCreation(703) into ThrowStatement(704) at 0", "Insert SimpleName: stateWriteLock(707) into MethodInvocation(709) at 0", "Insert SimpleName: unlock(708) into MethodInvocation(709) at 1", "Insert SimpleName: CONNECTED(580) into SwitchCase(581) at 0", "Insert SimpleName: SECURING(582) into SwitchCase(583) at 0", "Insert SimpleName: CLOSING(584) into SwitchCase(585) at 0", "Insert Assignment: =(588) into ExpressionStatement(589) at 0", "Insert ClassInstanceCreation(599) into ThrowStatement(600) at 0", "Insert SimpleName: SECURING(606) into SwitchCase(607) at 0", "Insert SimpleName: CLOSING(608) into SwitchCase(609) at 0", "Insert Assignment: =(612) into ExpressionStatement(613) at 0", "Insert ClassInstanceCreation(623) into ThrowStatement(624) at 0", "Insert SimpleName: SECURED(630) into SwitchCase(631) at 0", "Insert SimpleName: CLOSING(632) into SwitchCase(633) at 0", "Insert Assignment: =(636) into ExpressionStatement(637) at 0", "Insert ClassInstanceCreation(647) into ThrowStatement(648) at 0", "Insert SimpleName: CONNECTED(654) into SwitchCase(655) at 0", "Insert SimpleName: CLOSING(656) into SwitchCase(657) at 0", "Insert Assignment: =(660) into ExpressionStatement(661) at 0", "Insert ClassInstanceCreation(671) into ThrowStatement(672) at 0", "Insert SimpleName: to(677) into InfixExpression: !=(679) at 0", "Insert QualifiedName: SessionState.CLOSED(678) into InfixExpression: !=(679) at 1", "Insert ThrowStatement(688) into Block(689) at 0", "Insert SimpleName: state(691) into Assignment: =(693) at 0", "Insert SimpleName: to(692) into Assignment: =(693) at 1", "Insert SimpleType: IllegalStateException(699) into ClassInstanceCreation(703) at 0", "Insert InfixExpression: +(702) into ClassInstanceCreation(703) at 1", "Insert SimpleName: state(586) into Assignment: =(588) at 0", "Insert SimpleName: to(587) into Assignment: =(588) at 1", "Insert SimpleType: IllegalStateException(593) into ClassInstanceCreation(599) at 0", "Insert InfixExpression: +(598) into ClassInstanceCreation(599) at 1", "Insert SimpleName: state(610) into Assignment: =(612) at 0", "Insert SimpleName: to(611) into Assignment: =(612) at 1", "Insert SimpleType: IllegalStateException(617) into ClassInstanceCreation(623) at 0", "Insert InfixExpression: +(622) into ClassInstanceCreation(623) at 1", "Insert SimpleName: state(634) into Assignment: =(636) at 0", "Insert SimpleName: to(635) into Assignment: =(636) at 1", "Insert SimpleType: IllegalStateException(641) into ClassInstanceCreation(647) at 0", "Insert InfixExpression: +(646) into ClassInstanceCreation(647) at 1", "Insert SimpleName: state(658) into Assignment: =(660) at 0", "Insert SimpleName: to(659) into Assignment: =(660) at 1", "Insert SimpleType: IllegalStateException(665) into ClassInstanceCreation(671) at 0", "Insert InfixExpression: +(670) into ClassInstanceCreation(671) at 1", "Insert ClassInstanceCreation(687) into ThrowStatement(688) at 0", "Insert SimpleName: IllegalStateException(698) into SimpleType: IllegalStateException(699) at 0", "Insert StringLiteral: \"The session is already closed. cannot switch to \"(700) into InfixExpression: +(702) at 0", "Insert SimpleName: to(701) into InfixExpression: +(702) at 1", "Insert SimpleName: IllegalStateException(592) into SimpleType: IllegalStateException(593) at 0", "Insert StringLiteral: \"Cannot transit from \"(594) into InfixExpression: +(598) at 0", "Insert SimpleName: from(595) into InfixExpression: +(598) at 1", "Insert StringLiteral: \" to \"(596) into InfixExpression: +(598) at 2", "Insert SimpleName: to(597) into InfixExpression: +(598) at 3", "Insert SimpleName: IllegalStateException(616) into SimpleType: IllegalStateException(617) at 0", "Insert StringLiteral: \"Cannot transit from \"(618) into InfixExpression: +(622) at 0", "Insert SimpleName: from(619) into InfixExpression: +(622) at 1", "Insert StringLiteral: \" to \"(620) into InfixExpression: +(622) at 2", "Insert SimpleName: to(621) into InfixExpression: +(622) at 3", "Insert SimpleName: IllegalStateException(640) into SimpleType: IllegalStateException(641) at 0", "Insert StringLiteral: \"Cannot transit from \"(642) into InfixExpression: +(646) at 0", "Insert SimpleName: from(643) into InfixExpression: +(646) at 1", "Insert StringLiteral: \" to \"(644) into InfixExpression: +(646) at 2", "Insert SimpleName: to(645) into InfixExpression: +(646) at 3", "Insert SimpleName: IllegalStateException(664) into SimpleType: IllegalStateException(665) at 0", "Insert StringLiteral: \"Cannot transit from \"(666) into InfixExpression: +(670) at 0", "Insert SimpleName: from(667) into InfixExpression: +(670) at 1", "Insert StringLiteral: \" to \"(668) into InfixExpression: +(670) at 2", "Insert SimpleName: to(669) into InfixExpression: +(670) at 3", "Insert SimpleType: IllegalStateException(681) into ClassInstanceCreation(687) at 0", "Insert InfixExpression: +(686) into ClassInstanceCreation(687) at 1", "Insert SimpleName: IllegalStateException(680) into SimpleType: IllegalStateException(681) at 0", "Insert StringLiteral: \"Cannot transit from \"(682) into InfixExpression: +(686) at 0", "Insert SimpleName: from(683) into InfixExpression: +(686) at 1", "Insert StringLiteral: \" to \"(684) into InfixExpression: +(686) at 2", "Insert SimpleName: to(685) into InfixExpression: +(686) at 3", "Delete Block(432)", "Delete SimpleName: state(438)", "Delete ReturnStatement(439)", "Delete Block(440)"]}}, {"NioSelectorProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: javax.net.ssl.SSLEngine to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: javax.net.ssl.SSLEngineResult.HandshakeStatus to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS ImportDeclaration to CompilationUnit at 27", "INS QualifiedName: org.apache.mina.session.SslHelper to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleType: ByteBuffer to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: SSLException to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS SimpleName: processHandShake to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: session to SingleVariableDeclaration at 1", "INS SimpleName: SSLException to SimpleType: SSLException at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: IoSession to SingleVariableDeclaration at 0", "INS SimpleName: buffer to SingleVariableDeclaration at 1", "INS SimpleName: IoSession to SimpleType: IoSession at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: session to MethodInvocation at 1", "INS SimpleName: readBuffer to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: processHandShake to MethodInvocation at 0"]}]}}, {"NioSelectorProcessor_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(1766) at 16", "Insert ImportDeclaration(37) into CompilationUnit(1766) at 18", "Insert ImportDeclaration(55) into CompilationUnit(1766) at 27", "Insert QualifiedName: javax.net.ssl.SSLEngine(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: javax.net.ssl.SSLEngineResult.HandshakeStatus(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: org.apache.mina.session.SslHelper(54) into ImportDeclaration(55) at 0", "Insert MethodDeclaration(1487) into TypeDeclaration: class(1764) at 11", "Insert Modifier: private(1473) into MethodDeclaration(1487) at 0", "Insert PrimitiveType: void(1474) into MethodDeclaration(1487) at 1", "Insert SimpleName: processHandShake(1475) into MethodDeclaration(1487) at 2", "Insert SingleVariableDeclaration(1479) into MethodDeclaration(1487) at 3", "Insert SingleVariableDeclaration(1483) into MethodDeclaration(1487) at 4", "Insert SimpleType: SSLException(1485) into MethodDeclaration(1487) at 5", "Insert Block(1486) into MethodDeclaration(1487) at 6", "Insert SimpleType: IoSession(1477) into SingleVariableDeclaration(1479) at 0", "Insert SimpleName: session(1478) into SingleVariableDeclaration(1479) at 1", "Insert SimpleType: ByteBuffer(1481) into SingleVariableDeclaration(1483) at 0", "Insert SimpleName: buffer(1482) into SingleVariableDeclaration(1483) at 1", "Insert SimpleName: SSLException(1484) into SimpleType: SSLException(1485) at 0", "Insert SimpleName: IoSession(1476) into SimpleType: IoSession(1477) at 0", "Insert SimpleName: ByteBuffer(1480) into SimpleType: ByteBuffer(1481) at 0", "Insert ExpressionStatement(1457) into Block(1458) at 0", "Insert MethodInvocation(1456) into ExpressionStatement(1457) at 0", "Insert SimpleName: processHandShake(1453) into MethodInvocation(1456) at 0", "Insert SimpleName: session(1454) into MethodInvocation(1456) at 1", "Insert SimpleName: readBuffer(1455) into MethodInvocation(1456) at 2"]}}, {"NioTcpSession_cluster": {"actions": [{"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from getState to isCreated", "operations": ["UPD SimpleName: getState from getState to isCreated"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getState to MethodInvocation at 0"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !=", "DEL MethodInvocation", "DEL QualifiedName: SessionState.CREATED"]}]}}, {"NioTcpSession_diff": {"operations": ["Insert PrefixExpression: !(462) into IfStatement(469) at 0", "Insert MethodInvocation(461) into PrefixExpression: !(462) at 0", "Update SimpleName: getState(460) to isCreated", "Move SimpleName: getState(460) into MethodInvocation(461) at 0", "Delete MethodInvocation(461)", "Delete QualifiedName: SessionState.CREATED(462)", "Delete InfixExpression: !=(463)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}