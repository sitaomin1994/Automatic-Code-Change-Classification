{"application": "google-caja", "csha": "59e8f804c616259f74b29d9173b2fd2dcd9f7be4", "files": [{"JsWriter_cluster": {"actions": [{"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: Operation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: undefined to MethodInvocation at 1"]}, {"root": "UPDATE from UndefinedLiteral to Operation", "operations": ["UPD SimpleType: UndefinedLiteral from UndefinedLiteral to Operation", "UPD SimpleName: UndefinedLiteral from UndefinedLiteral to Operation"]}, {"root": "UPDATE from ul to voidOp", "operations": ["UPD SimpleName: ul from ul to voidOp", "UPD SimpleName: ul from ul to voidOp", "UPD SimpleName: ul from ul to voidOp"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Operation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: undefined to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.caja.parser.js.UndefinedLiteral", "DEL ImportDeclaration"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: UndefinedLiteral", "DEL SimpleName: UndefinedLiteral", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: UndefinedLiteral", "DEL SimpleName: UndefinedLiteral"]}]}}, {"JsWriter_diff": {"operations": ["Insert MethodInvocation(531) into MethodInvocation(533) at 2", "Update SimpleType: UndefinedLiteral(498) to Operation", "Update SimpleName: ul(510) to voidOp", "Insert SimpleName: Operation(529) into MethodInvocation(531) at 0", "Insert SimpleName: undefined(530) into MethodInvocation(531) at 1", "Update SimpleName: UndefinedLiteral(497) to Operation", "Update SimpleName: ul(499) to voidOp", "Insert MethodInvocation(500) into VariableDeclarationFragment(501) at 1", "Update SimpleName: ul(505) to voidOp", "Insert SimpleName: Operation(498) into MethodInvocation(500) at 0", "Insert SimpleName: undefined(499) into MethodInvocation(500) at 1", "Delete QualifiedName: com.google.caja.parser.js.UndefinedLiteral(32)", "Delete ImportDeclaration(33)", "Delete SimpleName: UndefinedLiteral(500)", "Delete SimpleType: UndefinedLiteral(501)", "Delete ClassInstanceCreation(502)", "Delete SimpleName: UndefinedLiteral(531)", "Delete SimpleType: UndefinedLiteral(532)", "Delete ClassInstanceCreation(533)"]}}, {"Operation_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: Operation to SimpleType: Operation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: IntegerLiteral to SimpleType: IntegerLiteral at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: static to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS ReturnStatement to Block at 0", "INS SimpleType: IntegerLiteral to ClassInstanceCreation at 0", "INS SimpleName: create to MethodInvocation at 0", "INS QualifiedName: Operator.VOID to MethodInvocation at 1", "INS SimpleName: undefined to MethodDeclaration at 3", "INS NumberLiteral: 0 to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: Operation to MethodDeclaration at 2"]}]}}, {"Operation_diff": {"operations": ["Insert MethodDeclaration(195) into TypeDeclaration: class(923) at 9", "Insert Modifier: public(181) into MethodDeclaration(195) at 0", "Insert Modifier: static(182) into MethodDeclaration(195) at 1", "Insert SimpleType: Operation(184) into MethodDeclaration(195) at 2", "Insert SimpleName: undefined(185) into MethodDeclaration(195) at 3", "Insert Block(194) into MethodDeclaration(195) at 4", "Insert SimpleName: Operation(183) into SimpleType: Operation(184) at 0", "Insert ReturnStatement(193) into Block(194) at 0", "Insert MethodInvocation(192) into ReturnStatement(193) at 0", "Insert SimpleName: create(186) into MethodInvocation(192) at 0", "Insert QualifiedName: Operator.VOID(187) into MethodInvocation(192) at 1", "Insert ClassInstanceCreation(191) into MethodInvocation(192) at 2", "Insert SimpleType: IntegerLiteral(189) into ClassInstanceCreation(191) at 0", "Insert NumberLiteral: 0(190) into ClassInstanceCreation(191) at 1", "Insert SimpleName: IntegerLiteral(188) into SimpleType: IntegerLiteral(189) at 0"]}}, {"Parser_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV Block to SwitchStatement at 17"]}, {"root": "INS BreakStatement to SwitchStatement at 21", "operations": ["INS BreakStatement to SwitchStatement at 21"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS BreakStatement to Block at 7", "operations": ["INS BreakStatement to Block at 7"]}, {"root": "INS NullLiteral to Assignment: = at 1", "operations": ["INS NullLiteral to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: IntegerLiteral to SimpleType: IntegerLiteral at 0", "INS SimpleName: getFilePosition to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: setFilePosition to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: children to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: vl to MethodInvocation at 0", "INS SimpleType: IntegerLiteral to CastExpression at 0", "INS SimpleName: vl to MethodInvocation at 0", "INS ParenthesizedExpression to MethodInvocation at 0"]}, {"root": "UPDATE from UndefinedLiteral to Operation", "operations": ["UPD SimpleType: UndefinedLiteral from UndefinedLiteral to Operation", "UPD SimpleName: UndefinedLiteral from UndefinedLiteral to Operation"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Operation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: undefined to MethodInvocation at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: UndefinedLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: UndefinedLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: lastPosition", "DEL SimpleName: setFilePosition", "DEL SimpleName: value", "DEL SimpleName: tq", "DEL MethodInvocation", "DEL SimpleName: endOf", "DEL SimpleName: FilePosition", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL SimpleName: UndefinedLiteral", "DEL SimpleName: e", "DEL BreakStatement", "DEL SimpleName: equals", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL QualifiedName: UndefinedLiteral.VALUE_NAME", "DEL Assignment: =", "DEL ExpressionStatement", "DEL IfStatement", "DEL Block", "DEL SimpleType: UndefinedLiteral", "DEL SimpleName: identifier"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: UndefinedLiteral", "DEL SimpleName: UndefinedLiteral", "DEL ClassInstanceCreation"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"Parser_diff": {"operations": ["Move Block(3484) into SwitchStatement(3857) at 17", "Insert BreakStatement(3850) into SwitchStatement(3857) at 20", "Move VariableDeclarationStatement(3393) into Block(3462) at 0", "Insert BreakStatement(3461) into Block(3462) at 7", "Insert NullLiteral(1537) into Assignment: =(1538) at 1", "Insert ExpressionStatement(3556) into Block(3562) at 2", "Update SimpleType: UndefinedLiteral(3554) to Operation", "Insert MethodInvocation(3555) into ExpressionStatement(3556) at 0", "Update SimpleName: UndefinedLiteral(3553) to Operation", "Insert MethodInvocation(3533) into VariableDeclarationFragment(3534) at 1", "Insert ParenthesizedExpression(3550) into MethodInvocation(3555) at 0", "Insert SimpleName: setFilePosition(3551) into MethodInvocation(3555) at 1", "Insert MethodInvocation(3554) into MethodInvocation(3555) at 2", "Insert SimpleName: Operation(3531) into MethodInvocation(3533) at 0", "Insert SimpleName: undefined(3532) into MethodInvocation(3533) at 1", "Insert CastExpression(3549) into ParenthesizedExpression(3550) at 0", "Insert SimpleName: vl(3552) into MethodInvocation(3554) at 0", "Insert SimpleName: getFilePosition(3553) into MethodInvocation(3554) at 1", "Insert SimpleType: IntegerLiteral(3542) into CastExpression(3549) at 0", "Insert MethodInvocation(3548) into CastExpression(3549) at 1", "Insert SimpleName: IntegerLiteral(3541) into SimpleType: IntegerLiteral(3542) at 0", "Insert MethodInvocation(3545) into MethodInvocation(3548) at 0", "Insert SimpleName: get(3546) into MethodInvocation(3548) at 1", "Insert NumberLiteral: 0(3547) into MethodInvocation(3548) at 2", "Insert SimpleName: vl(3543) into MethodInvocation(3545) at 0", "Insert SimpleName: children(3544) into MethodInvocation(3545) at 1", "Delete SimpleName: UndefinedLiteral(1537)", "Delete SimpleType: UndefinedLiteral(1538)", "Delete ClassInstanceCreation(1539)", "Delete SimpleName: value(1542)", "Delete SimpleName: setFilePosition(1543)", "Delete SimpleName: FilePosition(1544)", "Delete SimpleName: endOf(1545)", "Delete SimpleName: tq(1546)", "Delete SimpleName: lastPosition(1547)", "Delete MethodInvocation(1548)", "Delete MethodInvocation(1549)", "Delete MethodInvocation(1550)", "Delete ExpressionStatement(1551)", "Delete QualifiedName: UndefinedLiteral.VALUE_NAME(3394)", "Delete SimpleName: equals(3395)", "Delete SimpleName: identifier(3396)", "Delete MethodInvocation(3397)", "Delete SimpleName: e(3398)", "Delete SimpleName: UndefinedLiteral(3399)", "Delete SimpleType: UndefinedLiteral(3400)", "Delete ClassInstanceCreation(3401)", "Delete Assignment: =(3402)", "Delete ExpressionStatement(3403)", "Delete Block(3404)", "Delete IfStatement(3485)", "Delete BreakStatement(3486)", "Delete Block(3487)", "Delete SimpleName: UndefinedLiteral(3556)", "Delete SimpleType: UndefinedLiteral(3557)", "Delete ClassInstanceCreation(3558)", "Delete BreakStatement(3859)"]}}, {"ReturnStmt_cluster": {"actions": [{"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: Null if nothing is returned, which implicitly returns the undefined value. to TagElement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: appendChildren to MethodInvocation at 1", "INS SimpleName: createMutation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS MethodInvocation to InfixExpression: >= at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: children to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS NumberLiteral: 2 to InfixExpression: >= at 1", "INS Block to IfStatement at 1", "INS InfixExpression: >= to IfStatement at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS ThrowStatement to Block at 0"]}, {"root": "UPDATE from get to execute", "operations": ["UPD SimpleName: get from get to execute"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: children to MethodInvocation at 2"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL NumberLiteral: 0", "DEL ConstructorInvocation", "DEL MethodInvocation"]}]}}, {"ReturnStmt_diff": {"operations": ["Insert Javadoc(108) into MethodDeclaration(116) at 0", "Insert ExpressionStatement(48) into Block(49) at 0", "Insert IfStatement(87) into Block(104) at 1", "Insert TagElement(107) into Javadoc(108) at 0", "Insert MethodInvocation(47) into ExpressionStatement(48) at 0", "Insert InfixExpression: >=(81) into IfStatement(87) at 0", "Insert Block(86) into IfStatement(87) at 1", "Insert TextElement: Null if nothing is returned, which implicitly returns the undefined value.(106) into TagElement(107) at 0", "Insert MethodInvocation(45) into MethodInvocation(47) at 0", "Update SimpleName: get(42) to execute", "Move SimpleName: get(42) into MethodInvocation(47) at 1", "Insert MethodInvocation(79) into InfixExpression: >=(81) at 0", "Insert NumberLiteral: 2(80) into InfixExpression: >=(81) at 1", "Insert ThrowStatement(85) into Block(86) at 0", "Insert MethodInvocation(42) into MethodInvocation(45) at 0", "Insert SimpleName: appendChildren(43) into MethodInvocation(45) at 1", "Move SimpleName: children(41) into MethodInvocation(45) at 2", "Insert MethodInvocation(77) into MethodInvocation(79) at 0", "Insert SimpleName: size(78) into MethodInvocation(79) at 1", "Insert ClassInstanceCreation(84) into ThrowStatement(85) at 0", "Insert SimpleName: createMutation(41) into MethodInvocation(42) at 0", "Insert SimpleName: children(76) into MethodInvocation(77) at 0", "Insert SimpleType: IllegalArgumentException(83) into ClassInstanceCreation(84) at 0", "Insert SimpleName: IllegalArgumentException(82) into SimpleType: IllegalArgumentException(83) at 0", "Delete NumberLiteral: 0(43)", "Delete MethodInvocation(44)", "Delete ConstructorInvocation(45)"]}}, {"UndefinedLiteral_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: com.google.caja.parser.js", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.caja.parser.ParseTreeNode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TextElement: This ctor is provided for reflection.", "DEL ReturnStatement", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleName: value", "DEL SimpleType: List", "DEL SimpleName: UndefinedLiteral", "DEL WildcardType: ? extends ParseTreeNode", "DEL StringLiteral: \"undefined\"", "DEL SimpleName: VALUE", "DEL SimpleName: String", "DEL SimpleType: UndefinedPlaceholder", "DEL SimpleType: UndefinedPlaceholder", "DEL Javadoc", "DEL Modifier: public", "DEL TextElement: <code>(void 0)</code>, but we still treat undefined as a literal since it's", "DEL TypeDeclaration: class", "DEL Modifier: public", "DEL SimpleName: UndefinedPlaceholder", "DEL ParameterizedType: List<? extends ParseTreeNode>", "DEL TextElement:  unused.", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL TagElement", "DEL PrimitiveType: boolean", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL TextElement:  unused.", "DEL FieldDeclaration", "DEL TextElement: Undefined is not a keyword, it's just a variable initialized to", "DEL Modifier: public", "DEL SimpleName: String", "DEL Block", "DEL Modifier: final", "DEL TagElement: @author", "DEL SimpleName: Literal", "DEL Modifier: static", "DEL SimpleName: List", "DEL Modifier: final", "DEL SimpleName: ParseTreeNode", "DEL SimpleName: getValueInBooleanContext", "DEL FieldDeclaration", "DEL SimpleType: UndefinedPlaceholder", "DEL BooleanLiteral: false", "DEL SimpleName: children", "DEL SimpleType: ParseTreeNode", "DEL SimpleName: children", "DEL Block", "DEL Modifier: final", "DEL SimpleName: UndefinedLiteral", "DEL SimpleName: value", "DEL TextElement: the common idiom for a special value.", "DEL SimpleName: UndefinedPlaceholder", "DEL SimpleName: VALUE_NAME", "DEL MethodDeclaration", "DEL ConstructorInvocation", "DEL SimpleName: Override", "DEL Modifier: static", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: UndefinedPlaceholder", "DEL TagElement: @param", "DEL SimpleName: VALUE_NAME", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: Override", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: UndefinedPlaceholder", "DEL Modifier: public", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL TagElement: @param", "DEL SimpleType: String", "DEL Block", "DEL Modifier: public", "DEL Block", "DEL SimpleName: VALUE", "DEL SimpleName: UndefinedLiteral", "DEL SimpleType: UndefinedPlaceholder", "DEL TextElement: The literal value \"undefined\".", "DEL Modifier: static", "DEL SimpleName: toString", "DEL SimpleName: getValue", "DEL ReturnStatement", "DEL TypeDeclaration: class", "DEL Javadoc", "DEL TextElement:  mikesamuel@gmail.com", "DEL SimpleName: UndefinedPlaceholder", "DEL SimpleType: String", "DEL TagElement", "DEL SimpleType: Literal", "DEL SimpleName: UndefinedPlaceholder"]}]}}, {"UndefinedLiteral_diff": {"operations": ["Delete QualifiedName: com.google.caja.parser.js(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: com.google.caja.parser.ParseTreeNode(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.List(4)", "Delete ImportDeclaration(5)", "Delete TextElement: The literal value \"undefined\".(6)", "Delete TextElement: Undefined is not a keyword, it's just a variable initialized to(7)", "Delete TextElement: <code>(void 0)</code>, but we still treat undefined as a literal since it's(8)", "Delete TextElement: the common idiom for a special value.(9)", "Delete TagElement(10)", "Delete TextElement:  mikesamuel@gmail.com(11)", "Delete TagElement: @author(12)", "Delete Javadoc(13)", "Delete Modifier: public(14)", "Delete Modifier: final(15)", "Delete SimpleName: UndefinedLiteral(16)", "Delete SimpleName: Literal(17)", "Delete SimpleType: Literal(18)", "Delete Modifier: public(19)", "Delete Modifier: static(20)", "Delete Modifier: final(21)", "Delete SimpleName: String(22)", "Delete SimpleType: String(23)", "Delete SimpleName: VALUE_NAME(24)", "Delete StringLiteral: \"undefined\"(25)", "Delete VariableDeclarationFragment(26)", "Delete FieldDeclaration(27)", "Delete Modifier: public(28)", "Delete Modifier: static(29)", "Delete Modifier: final(30)", "Delete SimpleName: UndefinedPlaceholder(31)", "Delete SimpleType: UndefinedPlaceholder(32)", "Delete SimpleName: VALUE(33)", "Delete SimpleName: UndefinedPlaceholder(34)", "Delete SimpleType: UndefinedPlaceholder(35)", "Delete ClassInstanceCreation(36)", "Delete VariableDeclarationFragment(37)", "Delete FieldDeclaration(38)", "Delete TextElement: This ctor is provided for reflection.(39)", "Delete TagElement(40)", "Delete SimpleName: value(41)", "Delete TextElement:  unused.(42)", "Delete TagElement: @param(43)", "Delete SimpleName: children(44)", "Delete TextElement:  unused.(45)", "Delete TagElement: @param(46)", "Delete Javadoc(47)", "Delete Modifier: public(48)", "Delete SimpleName: UndefinedLiteral(49)", "Delete SimpleName: UndefinedPlaceholder(50)", "Delete SimpleType: UndefinedPlaceholder(51)", "Delete SimpleName: value(52)", "Delete SingleVariableDeclaration(53)", "Delete SimpleName: List(54)", "Delete SimpleType: List(55)", "Delete SimpleName: ParseTreeNode(56)", "Delete SimpleType: ParseTreeNode(57)", "Delete WildcardType: ? extends ParseTreeNode(58)", "Delete ParameterizedType: List<? extends ParseTreeNode>(59)", "Delete SimpleName: children(60)", "Delete SingleVariableDeclaration(61)", "Delete ConstructorInvocation(62)", "Delete Block(63)", "Delete MethodDeclaration(64)", "Delete Modifier: public(65)", "Delete SimpleName: UndefinedLiteral(66)", "Delete Block(67)", "Delete MethodDeclaration(68)", "Delete SimpleName: Override(69)", "Delete MarkerAnnotation(70)", "Delete Modifier: public(71)", "Delete SimpleName: UndefinedPlaceholder(72)", "Delete SimpleType: UndefinedPlaceholder(73)", "Delete SimpleName: getValue(74)", "Delete SimpleName: VALUE(75)", "Delete ReturnStatement(76)", "Delete Block(77)", "Delete MethodDeclaration(78)", "Delete SimpleName: Override(79)", "Delete MarkerAnnotation(80)", "Delete Modifier: public(81)", "Delete PrimitiveType: boolean(82)", "Delete SimpleName: getValueInBooleanContext(83)", "Delete BooleanLiteral: false(84)", "Delete ReturnStatement(85)", "Delete Block(86)", "Delete MethodDeclaration(87)", "Delete Modifier: public(88)", "Delete Modifier: static(89)", "Delete SimpleName: UndefinedPlaceholder(90)", "Delete SimpleName: Override(91)", "Delete MarkerAnnotation(92)", "Delete Modifier: public(93)", "Delete SimpleName: String(94)", "Delete SimpleType: String(95)", "Delete SimpleName: toString(96)", "Delete SimpleName: VALUE_NAME(97)", "Delete ReturnStatement(98)", "Delete Block(99)", "Delete MethodDeclaration(100)", "Delete Modifier: private(101)", "Delete SimpleName: UndefinedPlaceholder(102)", "Delete Block(103)", "Delete MethodDeclaration(104)", "Delete TypeDeclaration: class(105)", "Delete TypeDeclaration: class(106)"]}}, {"Rule_cluster": {"actions": [{"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: Operation to MethodInvocation at 0", "INS SimpleName: undefined to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: operands to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to isEmpty", "operations": ["UPD SimpleName: size from size to isEmpty"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.caja.parser.js.UndefinedLiteral", "DEL ImportDeclaration"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL NumberLiteral: 0", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: UndefinedLiteral", "DEL ClassInstanceCreation", "DEL SimpleType: UndefinedLiteral", "DEL ReturnStatement"]}]}}, {"Rule_diff": {"operations": ["Insert MethodInvocation(773) into IfStatement(779) at 0", "Insert Block(778) into IfStatement(779) at 1", "Move SimpleName: operands(773) into MethodInvocation(773) at 0", "Update SimpleName: size(774) to isEmpty", "Move SimpleName: size(774) into MethodInvocation(773) at 1", "Insert ReturnStatement(777) into Block(778) at 0", "Insert MethodInvocation(776) into ReturnStatement(777) at 0", "Insert SimpleName: Operation(774) into MethodInvocation(776) at 0", "Insert SimpleName: undefined(775) into MethodInvocation(776) at 1", "Delete QualifiedName: com.google.caja.parser.js.UndefinedLiteral(38)", "Delete ImportDeclaration(39)", "Delete MethodInvocation(775)", "Delete NumberLiteral: 0(776)", "Delete InfixExpression: ==(777)", "Delete SimpleName: UndefinedLiteral(778)", "Delete SimpleType: UndefinedLiteral(779)", "Delete ClassInstanceCreation(780)", "Delete ReturnStatement(781)"]}}, {"OpenTemplateStage_cluster": {"actions": [{"root": "UPDATE from UndefinedLiteral to Operation", "operations": ["UPD SimpleType: UndefinedLiteral from UndefinedLiteral to Operation", "UPD SimpleName: UndefinedLiteral from UndefinedLiteral to Operation"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: undefined to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Operation to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.caja.parser.js.UndefinedLiteral"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: UndefinedLiteral", "DEL SimpleType: UndefinedLiteral", "DEL ClassInstanceCreation"]}]}}, {"OpenTemplateStage_diff": {"operations": ["Update SimpleType: UndefinedLiteral(1556) to Operation", "Update SimpleName: UndefinedLiteral(1555) to Operation", "Insert MethodInvocation(1558) into VariableDeclarationFragment(1559) at 1", "Insert SimpleName: Operation(1556) into MethodInvocation(1558) at 0", "Insert SimpleName: undefined(1557) into MethodInvocation(1558) at 1", "Delete QualifiedName: com.google.caja.parser.js.UndefinedLiteral(40)", "Delete ImportDeclaration(41)", "Delete SimpleName: UndefinedLiteral(1558)", "Delete SimpleType: UndefinedLiteral(1559)", "Delete ClassInstanceCreation(1560)"]}}], "commit_stats": [{"total_files": 12, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}