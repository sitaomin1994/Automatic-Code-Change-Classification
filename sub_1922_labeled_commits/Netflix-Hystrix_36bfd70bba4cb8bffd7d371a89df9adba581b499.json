{"application": "Netflix-Hystrix", "csha": "36bfd70bba4cb8bffd7d371a89df9adba581b499", "files": [{"AbstractCommand_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "UPDATE from HystrixCachedObservable<R> to HystrixCommandResponseFromCache<R>", "operations": ["UPD ParameterizedType: HystrixCachedObservable<R> from HystrixCachedObservable<R> to HystrixCommandResponseFromCache<R>"]}, {"root": "UPDATE from HystrixCachedObservable to HystrixCommandResponseFromCache", "operations": ["UPD SimpleName: HystrixCachedObservable from HystrixCachedObservable to HystrixCommandResponseFromCache", "UPD SimpleType: HystrixCachedObservable from HystrixCachedObservable to HystrixCommandResponseFromCache"]}, {"root": "UPDATE from toObservable to toObservableWithStateCopiedInto", "operations": ["UPD SimpleName: toObservable from toObservable to toObservableWithStateCopiedInto"]}, {"root": "DEL Block", "operations": ["DEL MarkerAnnotation", "DEL ReturnStatement", "DEL SimpleName: afterCache", "DEL Block", "DEL SimpleType: AbstractCommand", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL SimpleName: commandCleanupExecuted", "DEL VariableDeclarationStatement", "DEL SimpleName: R", "DEL SimpleName: _cmd", "DEL SimpleType: Func0", "DEL PrimitiveType: void", "DEL SimpleName: commandStarted", "DEL SimpleName: toCache", "DEL ParameterizedType: Func0<Observable<R>>", "DEL BooleanLiteral: false", "DEL Block", "DEL SimpleType: HystrixCachedObservable", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleType: Func0", "DEL BooleanLiteral: false", "DEL Block", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL ParenthesizedExpression", "DEL VariableDeclarationFragment", "DEL SimpleType: CommandHookApplication", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: call", "DEL SimpleName: toCache", "DEL SimpleName: R", "DEL ThrowStatement", "DEL SimpleName: call", "DEL SimpleName: applyHystrixSemantics", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: Observable", "DEL SimpleName: get", "DEL Assignment: =", "DEL PrimitiveType: boolean", "DEL SimpleName: compareAndSet", "DEL SimpleName: afterCache", "DEL VariableDeclarationFragment", "DEL SimpleName: compareAndSet", "DEL SimpleName: requestCacheEnabled", "DEL ParameterizedType: Observable<R>", "DEL SimpleName: currentRequestLog", "DEL SimpleName: Action0", "DEL ExpressionStatement", "DEL ParameterizedType: HystrixCachedObservable<R>", "DEL InfixExpression: !=", "DEL BooleanLiteral: false", "DEL Modifier: public", "DEL SimpleType: AtomicBoolean", "DEL SimpleType: R", "DEL SimpleName: R", "DEL MethodInvocation", "DEL SimpleName: unsubscribe", "DEL SimpleName: AbstractCommand", "DEL Modifier: public", "DEL InfixExpression: -", "DEL VariableDeclarationStatement", "DEL SimpleName: commandStartTimestamp", "DEL VariableDeclarationFragment", "DEL SimpleName: doOnUnsubscribe", "DEL ThisExpression", "DEL SimpleName: Observable", "DEL SimpleName: handleRequestCacheHitAndEmitValues", "DEL ParameterizedType: Observable<R>", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: Action0", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: afterCache", "DEL SimpleName: executionResult", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL PrefixExpression: !", "DEL SimpleName: commandStartTimestamp", "DEL SimpleName: R", "DEL SimpleName: R", "DEL SimpleType: Action0", "DEL ExpressionStatement", "DEL SimpleName: fromCache", "DEL QualifiedName: HystrixEventType.CANCELLED", "DEL MethodInvocation", "DEL SimpleType: Observable", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: applyHystrixSemantics", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: unsubscribeCommandCleanup", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: Action0", "DEL InfixExpression: !=", "DEL SimpleName: R", "DEL SimpleType: R", "DEL SimpleName: hystrixObservable", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: requestCacheEnabled", "DEL ParameterizedType: Observable<R>", "DEL ParameterizedType: HystrixCachedObservable<R>", "DEL SimpleName: from", "DEL IfStatement", "DEL SimpleName: isExecutionComplete", "DEL SimpleName: R", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: Func0", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Block", "DEL ParameterizedType: Func0<Observable<R>>", "DEL ClassInstanceCreation", "DEL SimpleName: Observable", "DEL ExpressionStatement", "DEL ParameterizedType: Observable<R>", "DEL SimpleName: HystrixCachedObservable", "DEL Assignment: =", "DEL SimpleName: addExecutedCommand", "DEL ThisExpression", "DEL Block", "DEL VariableDeclarationStatement", "DEL ThisExpression", "DEL SimpleType: R", "DEL SimpleName: Action0", "DEL SimpleName: Observable", "DEL SimpleType: IllegalStateException", "DEL InfixExpression: !=", "DEL SimpleName: terminateCommandCleanup", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: isResponseFromCache", "DEL SimpleName: AtomicBoolean", "DEL SimpleName: Override", "DEL CastExpression", "DEL SimpleName: putIfAbsent", "DEL SimpleName: Override", "DEL SimpleName: properties", "DEL Modifier: final", "DEL SimpleName: unsubscribeCommandCleanup", "DEL SimpleType: R", "DEL SimpleName: _cmd", "DEL ParameterizedType: AbstractCommand<R>", "DEL SimpleType: Observable", "DEL VariableDeclarationFragment", "DEL SimpleName: defer", "DEL Block", "DEL SimpleType: Observable", "DEL SimpleName: IllegalStateException", "DEL SimpleName: R", "DEL VariableDeclarationFragment", "DEL SimpleName: fromCache", "DEL SimpleName: compareAndSet", "DEL ParameterizedType: Observable<R>", "DEL ClassInstanceCreation", "DEL SimpleType: R", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL SimpleType: AtomicBoolean", "DEL SimpleName: commandCleanupExecuted", "DEL BooleanLiteral: true", "DEL SimpleType: Observable", "DEL SimpleName: handleRequestCacheHitAndEmitValues", "DEL SimpleName: isResponseFromCache", "DEL SimpleName: toObservable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: executionResultAtTimeOfCancellation", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL NullLiteral", "DEL SimpleName: AtomicBoolean", "DEL SimpleType: R", "DEL SimpleType: Action0", "DEL AnonymousClassDeclaration", "DEL SimpleName: HystrixCachedObservable", "DEL SimpleName: HystrixCachedObservable", "DEL AnonymousClassDeclaration", "DEL Block", "DEL Assignment: =", "DEL Block", "DEL SimpleName: System", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL ClassInstanceCreation", "DEL SimpleName: commandKey", "DEL SimpleName: handleCommandEnd", "DEL SimpleName: HystrixCachedObservable", "DEL MethodInvocation", "DEL SimpleType: R", "DEL SimpleName: fromCache", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: CommandHookApplication", "DEL Block", "DEL SimpleName: fromCache", "DEL ParameterizedType: HystrixCachedObservable<R>", "DEL SimpleName: lift", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL SimpleName: Observable", "DEL MethodInvocation", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: afterCache", "DEL SimpleName: fromCache", "DEL AnonymousClassDeclaration", "DEL ExpressionStatement", "DEL SimpleName: eventNotifier", "DEL Block", "DEL SimpleName: handleCommandEnd", "DEL SimpleName: R", "DEL SimpleName: commandCleanupExecuted", "DEL MethodInvocation", "DEL SimpleName: isRequestCachingEnabled", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: getCacheKey", "DEL SimpleName: hystrixObservable", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: System", "DEL ExpressionStatement", "DEL SimpleName: requestCacheEnabled", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleType: HystrixCachedObservable", "DEL Modifier: final", "DEL ReturnStatement", "DEL QualifiedName: HystrixEventType.CANCELLED", "DEL Assignment: =", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: getCacheKey", "DEL SimpleName: fromCache", "DEL SimpleName: hystrixObservable", "DEL SimpleName: call", "DEL MethodInvocation", "DEL SimpleName: currentRequestLog", "DEL VariableDeclarationStatement", "DEL SimpleName: addEvent", "DEL SimpleName: requestLogEnabled", "DEL SimpleName: markEvent", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"This instance can only be executed once. Please instantiate a new instance.\"", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: HystrixCachedObservable", "DEL ExpressionStatement", "DEL SimpleName: toCache", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL QualifiedName: toCache.originalSubscription", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: Observable", "DEL SimpleName: Observable", "DEL Modifier: public", "DEL SimpleName: applyHystrixSemantics", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: Func0", "DEL SimpleName: Override", "DEL SimpleName: Action0", "DEL SimpleName: terminateCommandCleanup", "DEL SimpleName: get", "DEL Assignment: =", "DEL ThisExpression", "DEL BooleanLiteral: true", "DEL Modifier: final", "DEL SimpleName: requestCache", "DEL SimpleType: Action0", "DEL SimpleName: requestCache", "DEL SimpleType: R", "DEL SimpleName: doOnTerminate", "DEL IfStatement", "DEL SimpleType: R"]}]}}, {"AbstractCommand_diff": {"operations": ["Insert Block(1300) into MethodDeclaration(1301) at 4", "Update ParameterizedType: HystrixCachedObservable<R>(3080) to HystrixCommandResponseFromCache<R>", "Update SimpleType: HystrixCachedObservable(3077) to HystrixCommandResponseFromCache", "Update SimpleName: HystrixCachedObservable(3076) to HystrixCommandResponseFromCache", "Update SimpleName: toObservable(3113) to toObservableWithStateCopiedInto", "Delete SimpleName: commandStarted(1300)", "Delete SimpleName: compareAndSet(1301)", "Delete BooleanLiteral: false(1302)", "Delete BooleanLiteral: true(1303)", "Delete MethodInvocation(1304)", "Delete PrefixExpression: !(1305)", "Delete SimpleName: IllegalStateException(1306)", "Delete SimpleType: IllegalStateException(1307)", "Delete StringLiteral: \"This instance can only be executed once. Please instantiate a new instance.\"(1308)", "Delete ClassInstanceCreation(1309)", "Delete ThrowStatement(1310)", "Delete Block(1311)", "Delete IfStatement(1312)", "Delete SimpleName: commandStartTimestamp(1313)", "Delete SimpleName: System(1314)", "Delete SimpleName: currentTimeMillis(1315)", "Delete MethodInvocation(1316)", "Delete Assignment: =(1317)", "Delete ExpressionStatement(1318)", "Delete SimpleName: properties(1319)", "Delete SimpleName: requestLogEnabled(1320)", "Delete MethodInvocation(1321)", "Delete SimpleName: get(1322)", "Delete MethodInvocation(1323)", "Delete SimpleName: currentRequestLog(1324)", "Delete NullLiteral(1325)", "Delete InfixExpression: !=(1326)", "Delete SimpleName: currentRequestLog(1327)", "Delete SimpleName: addExecutedCommand(1328)", "Delete ThisExpression(1329)", "Delete MethodInvocation(1330)", "Delete ExpressionStatement(1331)", "Delete Block(1332)", "Delete IfStatement(1333)", "Delete Block(1334)", "Delete IfStatement(1335)", "Delete Modifier: final(1336)", "Delete PrimitiveType: boolean(1337)", "Delete SimpleName: requestCacheEnabled(1338)", "Delete SimpleName: isRequestCachingEnabled(1339)", "Delete MethodInvocation(1340)", "Delete VariableDeclarationFragment(1341)", "Delete VariableDeclarationStatement(1342)", "Delete Modifier: final(1343)", "Delete SimpleName: AbstractCommand(1344)", "Delete SimpleType: AbstractCommand(1345)", "Delete SimpleName: R(1346)", "Delete SimpleType: R(1347)", "Delete ParameterizedType: AbstractCommand<R>(1348)", "Delete SimpleName: _cmd(1349)", "Delete ThisExpression(1350)", "Delete VariableDeclarationFragment(1351)", "Delete VariableDeclarationStatement(1352)", "Delete SimpleName: requestCacheEnabled(1353)", "Delete SimpleName: HystrixCachedObservable(1354)", "Delete SimpleType: HystrixCachedObservable(1355)", "Delete SimpleName: R(1356)", "Delete SimpleType: R(1357)", "Delete ParameterizedType: HystrixCachedObservable<R>(1358)", "Delete SimpleName: fromCache(1359)", "Delete SimpleName: requestCache(1360)", "Delete SimpleName: get(1361)", "Delete SimpleName: getCacheKey(1362)", "Delete MethodInvocation(1363)", "Delete MethodInvocation(1364)", "Delete VariableDeclarationFragment(1365)", "Delete VariableDeclarationStatement(1366)", "Delete SimpleName: fromCache(1367)", "Delete NullLiteral(1368)", "Delete InfixExpression: !=(1369)", "Delete SimpleName: isResponseFromCache(1370)", "Delete BooleanLiteral: true(1371)", "Delete Assignment: =(1372)", "Delete ExpressionStatement(1373)", "Delete SimpleName: handleRequestCacheHitAndEmitValues(1374)", "Delete SimpleName: fromCache(1375)", "Delete MethodInvocation(1376)", "Delete ReturnStatement(1377)", "Delete Block(1378)", "Delete IfStatement(1379)", "Delete Block(1380)", "Delete IfStatement(1381)", "Delete Modifier: final(1382)", "Delete SimpleName: AtomicBoolean(1383)", "Delete SimpleType: AtomicBoolean(1384)", "Delete SimpleName: commandCleanupExecuted(1385)", "Delete SimpleName: AtomicBoolean(1386)", "Delete SimpleType: AtomicBoolean(1387)", "Delete BooleanLiteral: false(1388)", "Delete ClassInstanceCreation(1389)", "Delete VariableDeclarationFragment(1390)", "Delete VariableDeclarationStatement(1391)", "Delete Modifier: final(1392)", "Delete SimpleName: Action0(1393)", "Delete SimpleType: Action0(1394)", "Delete SimpleName: terminateCommandCleanup(1395)", "Delete SimpleName: Action0(1396)", "Delete SimpleType: Action0(1397)", "Delete SimpleName: Override(1398)", "Delete MarkerAnnotation(1399)", "Delete Modifier: public(1400)", "Delete PrimitiveType: void(1401)", "Delete SimpleName: call(1402)", "Delete SimpleName: commandCleanupExecuted(1403)", "Delete SimpleName: compareAndSet(1404)", "Delete BooleanLiteral: false(1405)", "Delete BooleanLiteral: true(1406)", "Delete MethodInvocation(1407)", "Delete SimpleName: isExecutionComplete(1408)", "Delete BooleanLiteral: true(1409)", "Delete Assignment: =(1410)", "Delete ExpressionStatement(1411)", "Delete SimpleName: handleCommandEnd(1412)", "Delete MethodInvocation(1413)", "Delete ExpressionStatement(1414)", "Delete Block(1415)", "Delete IfStatement(1416)", "Delete Block(1417)", "Delete MethodDeclaration(1418)", "Delete AnonymousClassDeclaration(1419)", "Delete ClassInstanceCreation(1420)", "Delete VariableDeclarationFragment(1421)", "Delete VariableDeclarationStatement(1422)", "Delete Modifier: final(1423)", "Delete SimpleName: Action0(1424)", "Delete SimpleType: Action0(1425)", "Delete SimpleName: unsubscribeCommandCleanup(1426)", "Delete SimpleName: Action0(1427)", "Delete SimpleType: Action0(1428)", "Delete SimpleName: Override(1429)", "Delete MarkerAnnotation(1430)", "Delete Modifier: public(1431)", "Delete PrimitiveType: void(1432)", "Delete SimpleName: call(1433)", "Delete SimpleName: commandCleanupExecuted(1434)", "Delete SimpleName: compareAndSet(1435)", "Delete BooleanLiteral: false(1436)", "Delete BooleanLiteral: true(1437)", "Delete MethodInvocation(1438)", "Delete SimpleName: eventNotifier(1439)", "Delete SimpleName: markEvent(1440)", "Delete QualifiedName: HystrixEventType.CANCELLED(1441)", "Delete SimpleName: commandKey(1442)", "Delete MethodInvocation(1443)", "Delete ExpressionStatement(1444)", "Delete SimpleName: executionResultAtTimeOfCancellation(1445)", "Delete SimpleName: executionResult(1446)", "Delete SimpleName: addEvent(1447)", "Delete PrimitiveType: int(1448)", "Delete SimpleName: System(1449)", "Delete SimpleName: currentTimeMillis(1450)", "Delete MethodInvocation(1451)", "Delete SimpleName: commandStartTimestamp(1452)", "Delete InfixExpression: -(1453)", "Delete ParenthesizedExpression(1454)", "Delete CastExpression(1455)", "Delete QualifiedName: HystrixEventType.CANCELLED(1456)", "Delete MethodInvocation(1457)", "Delete Assignment: =(1458)", "Delete ExpressionStatement(1459)", "Delete SimpleName: handleCommandEnd(1460)", "Delete MethodInvocation(1461)", "Delete ExpressionStatement(1462)", "Delete Block(1463)", "Delete IfStatement(1464)", "Delete Block(1465)", "Delete MethodDeclaration(1466)", "Delete AnonymousClassDeclaration(1467)", "Delete ClassInstanceCreation(1468)", "Delete VariableDeclarationFragment(1469)", "Delete VariableDeclarationStatement(1470)", "Delete Modifier: final(1471)", "Delete SimpleName: Func0(1472)", "Delete SimpleType: Func0(1473)", "Delete SimpleName: Observable(1474)", "Delete SimpleType: Observable(1475)", "Delete SimpleName: R(1476)", "Delete SimpleType: R(1477)", "Delete ParameterizedType: Observable<R>(1478)", "Delete ParameterizedType: Func0<Observable<R>>(1479)", "Delete SimpleName: applyHystrixSemantics(1480)", "Delete SimpleName: Func0(1481)", "Delete SimpleType: Func0(1482)", "Delete SimpleName: Observable(1483)", "Delete SimpleType: Observable(1484)", "Delete SimpleName: R(1485)", "Delete SimpleType: R(1486)", "Delete ParameterizedType: Observable<R>(1487)", "Delete ParameterizedType: Func0<Observable<R>>(1488)", "Delete SimpleName: Override(1489)", "Delete MarkerAnnotation(1490)", "Delete Modifier: public(1491)", "Delete SimpleName: Observable(1492)", "Delete SimpleType: Observable(1493)", "Delete SimpleName: R(1494)", "Delete SimpleType: R(1495)", "Delete ParameterizedType: Observable<R>(1496)", "Delete SimpleName: call(1497)", "Delete SimpleName: applyHystrixSemantics(1498)", "Delete SimpleName: _cmd(1499)", "Delete MethodInvocation(1500)", "Delete ReturnStatement(1501)", "Delete Block(1502)", "Delete MethodDeclaration(1503)", "Delete AnonymousClassDeclaration(1504)", "Delete ClassInstanceCreation(1505)", "Delete VariableDeclarationFragment(1506)", "Delete VariableDeclarationStatement(1507)", "Delete SimpleName: Observable(1508)", "Delete SimpleType: Observable(1509)", "Delete SimpleName: R(1510)", "Delete SimpleType: R(1511)", "Delete ParameterizedType: Observable<R>(1512)", "Delete SimpleName: hystrixObservable(1513)", "Delete SimpleName: Observable(1514)", "Delete SimpleName: defer(1515)", "Delete SimpleName: applyHystrixSemantics(1516)", "Delete MethodInvocation(1517)", "Delete SimpleName: lift(1518)", "Delete SimpleName: CommandHookApplication(1519)", "Delete SimpleType: CommandHookApplication(1520)", "Delete ThisExpression(1521)", "Delete ClassInstanceCreation(1522)", "Delete MethodInvocation(1523)", "Delete VariableDeclarationFragment(1524)", "Delete VariableDeclarationStatement(1525)", "Delete SimpleName: Observable(1526)", "Delete SimpleType: Observable(1527)", "Delete SimpleName: R(1528)", "Delete SimpleType: R(1529)", "Delete ParameterizedType: Observable<R>(1530)", "Delete SimpleName: afterCache(1531)", "Delete VariableDeclarationFragment(1532)", "Delete VariableDeclarationStatement(1533)", "Delete SimpleName: requestCacheEnabled(1534)", "Delete SimpleName: HystrixCachedObservable(1535)", "Delete SimpleType: HystrixCachedObservable(1536)", "Delete SimpleName: R(1537)", "Delete SimpleType: R(1538)", "Delete ParameterizedType: HystrixCachedObservable<R>(1539)", "Delete SimpleName: toCache(1540)", "Delete SimpleName: HystrixCachedObservable(1541)", "Delete SimpleName: from(1542)", "Delete SimpleName: hystrixObservable(1543)", "Delete ThisExpression(1544)", "Delete MethodInvocation(1545)", "Delete VariableDeclarationFragment(1546)", "Delete VariableDeclarationStatement(1547)", "Delete SimpleName: HystrixCachedObservable(1548)", "Delete SimpleType: HystrixCachedObservable(1549)", "Delete SimpleName: R(1550)", "Delete SimpleType: R(1551)", "Delete ParameterizedType: HystrixCachedObservable<R>(1552)", "Delete SimpleName: fromCache(1553)", "Delete SimpleName: requestCache(1554)", "Delete SimpleName: putIfAbsent(1555)", "Delete SimpleName: getCacheKey(1556)", "Delete MethodInvocation(1557)", "Delete SimpleName: toCache(1558)", "Delete MethodInvocation(1559)", "Delete VariableDeclarationFragment(1560)", "Delete VariableDeclarationStatement(1561)", "Delete SimpleName: fromCache(1562)", "Delete NullLiteral(1563)", "Delete InfixExpression: !=(1564)", "Delete QualifiedName: toCache.originalSubscription(1565)", "Delete SimpleName: unsubscribe(1566)", "Delete MethodInvocation(1567)", "Delete ExpressionStatement(1568)", "Delete SimpleName: isResponseFromCache(1569)", "Delete BooleanLiteral: true(1570)", "Delete Assignment: =(1571)", "Delete ExpressionStatement(1572)", "Delete SimpleName: handleRequestCacheHitAndEmitValues(1573)", "Delete SimpleName: fromCache(1574)", "Delete MethodInvocation(1575)", "Delete ReturnStatement(1576)", "Delete Block(1577)", "Delete SimpleName: afterCache(1578)", "Delete SimpleName: toCache(1579)", "Delete SimpleName: toObservable(1580)", "Delete MethodInvocation(1581)", "Delete Assignment: =(1582)", "Delete ExpressionStatement(1583)", "Delete Block(1584)", "Delete IfStatement(1585)", "Delete Block(1586)", "Delete SimpleName: afterCache(1587)", "Delete SimpleName: hystrixObservable(1588)", "Delete Assignment: =(1589)", "Delete ExpressionStatement(1590)", "Delete Block(1591)", "Delete IfStatement(1592)", "Delete SimpleName: afterCache(1593)", "Delete SimpleName: doOnTerminate(1594)", "Delete SimpleName: terminateCommandCleanup(1595)", "Delete MethodInvocation(1596)", "Delete SimpleName: doOnUnsubscribe(1597)", "Delete SimpleName: unsubscribeCommandCleanup(1598)", "Delete MethodInvocation(1599)", "Delete ReturnStatement(1600)", "Delete Block(1601)"]}}, {"HystrixCachedObservable_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 6", "INS PrimitiveType: int to FieldDeclaration at 2"]}, {"root": "INS Modifier: protected to FieldDeclaration at 0", "operations": ["INS Modifier: protected to FieldDeclaration at 0"]}, {"root": "INS Modifier: protected to FieldDeclaration at 0", "operations": ["INS Modifier: protected to FieldDeclaration at 0"]}, {"root": "UPDATE from final to private", "operations": ["UPD Modifier: final from final to private"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: final to FieldDeclaration at 0"]}, {"root": "UPDATE from final to volatile", "operations": ["UPD Modifier: final from final to volatile"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1", "MOV ParameterizedType: ReplaySubject<R> to VariableDeclarationStatement at 0", "MOV Modifier: final to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS Modifier: protected to MethodDeclaration at 0", "operations": ["INS Modifier: protected to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: HystrixCachedObservable<R> to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV Block to MethodDeclaration at 8", "MOV TypeParameter to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV ParameterizedType: HystrixCachedObservable<R> to MethodDeclaration at 3", "MOV TypeParameter to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "INS SimpleName: unsubscribe to MethodDeclaration at 2", "operations": ["INS SimpleName: unsubscribe to MethodDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS Block to MethodDeclaration at 3"]}, {"root": "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "operations": ["INS NumberLiteral: 0 to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Observable<R> to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from originalCommand to originalObservable", "operations": ["UPD SimpleName: originalCommand from originalCommand to originalObservable"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from HystrixCachedObservable<R> to HystrixCommandResponseFromCache<R>", "operations": ["UPD ParameterizedType: HystrixCachedObservable<R> from HystrixCachedObservable<R> to HystrixCommandResponseFromCache<R>"]}, {"root": "INS SimpleName: originalCommand to ClassInstanceCreation at 2", "operations": ["INS SimpleName: originalCommand to ClassInstanceCreation at 2"]}, {"root": "UPDATE from commandUnsubscribed to originalSubscription", "operations": ["UPD SimpleName: commandUnsubscribed from commandUnsubscribed to originalSubscription"]}, {"root": "UPDATE from commandToCopyStateInto to unsubscribe", "operations": ["UPD SimpleName: commandToCopyStateInto from commandToCopyStateInto to unsubscribe"]}, {"root": "UPDATE from HystrixCachedObservable to HystrixCommandResponseFromCache", "operations": ["UPD SimpleName: HystrixCachedObservable from HystrixCachedObservable to HystrixCommandResponseFromCache", "UPD SimpleType: HystrixCachedObservable from HystrixCachedObservable to HystrixCommandResponseFromCache"]}, {"root": "MOVE from ParameterizedType: HystrixCachedObservable<R>", "operations": ["MOV SimpleType: R to ParameterizedType: HystrixCachedObservable<R> at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Action0 to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Action0 to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS PostfixExpression: -- to ExpressionStatement at 0", "INS SimpleName: outstandingSubscriptions to PostfixExpression: -- at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS PostfixExpression: ++ to ExpressionStatement at 0", "operations": ["INS SimpleName: outstandingSubscriptions to PostfixExpression: ++ at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0"]}, {"root": "INS SimpleName: outstandingSubscriptions to InfixExpression: == at 0", "operations": ["INS SimpleName: outstandingSubscriptions to InfixExpression: == at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: rx.functions.Action1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.atomic.AtomicBoolean"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.atomic.AtomicInteger"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: AbstractCommand", "DEL SimpleName: R", "DEL SimpleName: AbstractCommand", "DEL SimpleType: R", "DEL ParameterizedType: AbstractCommand<R>", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: originalCommand"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: AtomicInteger", "DEL SimpleType: AtomicInteger", "DEL ClassInstanceCreation", "DEL NumberLiteral: 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: AtomicInteger", "DEL Modifier: final", "DEL SimpleName: AtomicInteger", "DEL FieldDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL ParameterizedType: Observable<R>", "DEL SimpleType: R", "DEL SimpleName: R", "DEL SimpleType: Observable", "DEL SimpleName: originalObservable", "DEL SimpleName: Observable", "DEL SingleVariableDeclaration"]}, {"root": "DEL ParameterizedType: AbstractCommand<R>", "operations": ["DEL ParameterizedType: AbstractCommand<R>", "DEL SimpleName: AbstractCommand", "DEL SimpleType: AbstractCommand"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: outstandingSubscriptions", "DEL SimpleName: decrementAndGet", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: outstandingSubscriptions", "DEL SimpleName: getAndIncrement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL SimpleName: originalCommand", "DEL ThisExpression", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: originalCommand"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: static", "DEL Modifier: public", "DEL SimpleName: from", "DEL MethodDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: HystrixCollapser", "DEL WildcardType: ?", "DEL SimpleType: R", "DEL SimpleName: HystrixCollapser", "DEL ParameterizedType: HystrixCollapser<?,R,?>", "DEL WildcardType: ?", "DEL SingleVariableDeclaration", "DEL SimpleName: originalCollapser", "DEL SimpleName: R"]}, {"root": "DEL SimpleType: R", "operations": ["DEL SimpleType: R", "DEL SimpleName: R"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL TypeParameter", "operations": ["DEL TypeParameter", "DEL SimpleName: R"]}, {"root": "DEL ParameterizedType: HystrixCachedObservable<R>", "operations": ["DEL SimpleType: R", "DEL SimpleName: R", "DEL SimpleName: HystrixCachedObservable", "DEL SimpleType: HystrixCachedObservable", "DEL ParameterizedType: HystrixCachedObservable<R>"]}, {"root": "DEL SimpleName: originalCommand", "operations": ["DEL SimpleName: originalCommand"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: o", "DEL SimpleName: R", "DEL SimpleName: Observable", "DEL SimpleType: Observable", "DEL SingleVariableDeclaration", "DEL SimpleType: R", "DEL ParameterizedType: Observable<R>"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: originalCollapser", "DEL WildcardType: ?", "DEL SimpleType: HystrixObservableCollapser", "DEL WildcardType: ?", "DEL WildcardType: ?", "DEL SimpleName: R", "DEL SimpleType: R", "DEL SimpleName: HystrixObservableCollapser", "DEL ParameterizedType: HystrixObservableCollapser<?,?,R,?>", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: HystrixCachedObservable", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL ParameterizedType: HystrixCachedObservable<R>", "DEL SimpleType: R", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: o", "DEL SimpleName: R", "DEL SimpleName: HystrixCachedObservable"]}, {"root": "DEL SimpleName: toObservable", "operations": ["DEL SimpleName: toObservable"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL ParameterizedType: AbstractCommand<R>", "DEL SimpleType: R", "DEL SimpleName: R", "DEL SimpleName: AbstractCommand", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: AbstractCommand", "DEL SimpleName: commandToCopyStateInto"]}, {"root": "DEL Block", "operations": ["DEL Modifier: final", "DEL ClassInstanceCreation", "DEL BooleanLiteral: true", "DEL MarkerAnnotation", "DEL SimpleName: Throwable", "DEL MethodDeclaration", "DEL SimpleName: commandCompleted", "DEL SimpleName: completionLogicRun", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: completionLogicRun", "DEL SimpleType: Action1", "DEL IfStatement", "DEL SimpleName: set", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: throwable", "DEL SimpleName: commandCompleted", "DEL SimpleName: set", "DEL SimpleName: completionLogicRun", "DEL AnonymousClassDeclaration", "DEL SimpleType: Throwable", "DEL SimpleType: AtomicBoolean", "DEL SimpleName: doOnCompleted", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL Block", "DEL SimpleType: Action0", "DEL AnonymousClassDeclaration", "DEL SimpleName: get", "DEL SimpleName: doOnUnsubscribe", "DEL SimpleName: call", "DEL ExpressionStatement", "DEL SimpleName: completionLogicRun", "DEL Modifier: public", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: AtomicBoolean", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL PrefixExpression: !", "DEL Block", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL SimpleType: Action0", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: Action1", "DEL IfStatement", "DEL SimpleName: call", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: completionLogicRun", "DEL SimpleName: doOnError", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleType: AtomicBoolean", "DEL MethodDeclaration", "DEL SimpleName: cachedObservable", "DEL MethodInvocation", "DEL SimpleName: set", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: AtomicBoolean", "DEL ClassInstanceCreation", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: Action0", "DEL SimpleName: commandToCopyStateInto", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL BooleanLiteral: false", "DEL SimpleName: completionLogicRun", "DEL SimpleType: Throwable", "DEL SimpleName: completionLogicRun", "DEL PrefixExpression: !", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL Block", "DEL Block", "DEL SimpleName: commandToCopyStateInto", "DEL MethodInvocation", "DEL SimpleName: Throwable", "DEL SimpleName: call", "DEL SimpleName: Override", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL ParameterizedType: Action1<Throwable>", "DEL ExpressionStatement", "DEL SimpleName: Action0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Assignment: =", "DEL SimpleName: commandToCopyStateInto", "DEL MethodDeclaration", "DEL SimpleName: AbstractCommand", "DEL Block", "DEL SimpleName: commandCompleted", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL Modifier: final", "DEL SimpleType: AbstractCommand", "DEL QualifiedName: originalCommand.executionResult", "DEL ParameterizedType: AbstractCommand<R>", "DEL SimpleName: R", "DEL SimpleType: R", "DEL QualifiedName: commandToCopyStateInto.executionResult", "DEL PrimitiveType: void", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ParameterizedType: AbstractCommand<R>", "DEL ExpressionStatement", "DEL Block", "DEL PrefixExpression: -", "DEL QualifiedName: commandToCopyStateInto.executionResult", "DEL Modifier: final", "DEL NumberLiteral: 1", "DEL QualifiedName: commandToCopyStateInto.executionResult", "DEL SingleVariableDeclaration", "DEL SimpleName: addEvent", "DEL ExpressionStatement", "DEL Assignment: =", "DEL QualifiedName: commandToCopyStateInto.executionResult", "DEL SimpleType: AbstractCommand", "DEL MethodDeclaration", "DEL SimpleName: commandUnsubscribed", "DEL SimpleName: AbstractCommand", "DEL MethodInvocation", "DEL SimpleType: R", "DEL SimpleName: commandToCopyStateInto", "DEL SimpleName: setExecutionLatency", "DEL Modifier: private", "DEL MethodInvocation", "DEL QualifiedName: HystrixEventType.CANCELLED", "DEL PrimitiveType: void", "DEL Assignment: =", "DEL QualifiedName: commandToCopyStateInto.executionResult", "DEL SimpleName: R"]}]}}, {"HystrixCachedObservable_diff": {"operations": ["Move FieldDeclaration(37) into TypeDeclaration: class(199) at 6", "Insert FieldDeclaration(37) into TypeDeclaration: class(199) at 5", "Insert Modifier: protected(14) into FieldDeclaration(20) at 0", "Insert Modifier: protected(21) into FieldDeclaration(30) at 0", "Update Modifier: final(20) to private", "Move Modifier: final(20) into FieldDeclaration(37) at 0", "Update Modifier: final(44) to volatile", "Move Modifier: final(44) into FieldDeclaration(37) at 1", "Insert PrimitiveType: int(33) into FieldDeclaration(37) at 2", "Move VariableDeclarationFragment(64) into FieldDeclaration(37) at 3", "Insert Modifier: protected(38) into MethodDeclaration(116) at 0", "Move TypeParameter(149) into MethodDeclaration(151) at 2", "Move ParameterizedType: HystrixCachedObservable<R>(154) into MethodDeclaration(151) at 3", "Move SingleVariableDeclaration(162) into MethodDeclaration(151) at 7", "Move SingleVariableDeclaration(169) into MethodDeclaration(151) at 8", "Move TypeParameter(184) into MethodDeclaration(178) at 2", "Move ParameterizedType: HystrixCachedObservable<R>(189) into MethodDeclaration(178) at 3", "Move SingleVariableDeclaration(197) into MethodDeclaration(178) at 7", "Move Block(179) into MethodDeclaration(178) at 8", "Move PrimitiveType: void(302) into MethodDeclaration(198) at 1", "Insert SimpleName: unsubscribe(192) into MethodDeclaration(198) at 2", "Insert Block(197) into MethodDeclaration(198) at 3", "Insert NumberLiteral: 0(35) into VariableDeclarationFragment(36) at 1", "Move ParameterizedType: Observable<R>(272) into SingleVariableDeclaration(47) at 1", "Update SimpleName: originalCommand(80) to originalObservable", "Insert VariableDeclarationStatement(58) into Block(115) at 0", "Move ExpressionStatement(371) into Block(197) at 0", "Move ParameterizedType: ReplaySubject<R>(49) into VariableDeclarationStatement(58) at 0", "Move VariableDeclarationFragment(54) into VariableDeclarationStatement(58) at 1", "Update ParameterizedType: HystrixCachedObservable<R>(211) to HystrixCommandResponseFromCache<R>", "Insert SimpleName: originalCommand(147) into ClassInstanceCreation(148) at 2", "Update SimpleName: commandUnsubscribed(368) to originalSubscription", "Update SimpleName: commandToCopyStateInto(369) to unsubscribe", "Update SimpleType: HystrixCachedObservable(208) to HystrixCommandResponseFromCache", "Move SimpleType: R(78) into ParameterizedType: HystrixCommandResponseFromCache<R>(145) at 1", "Move SimpleType: Action0(97) into ClassInstanceCreation(111) at 0", "Update SimpleName: HystrixCachedObservable(207) to HystrixCommandResponseFromCache", "Move SimpleType: Action0(121) into ClassInstanceCreation(95) at 0", "Move MarkerAnnotation(99) into MethodDeclaration(109) at 0", "Move MarkerAnnotation(123) into MethodDeclaration(93) at 0", "Insert ExpressionStatement(82) into Block(92) at 0", "Insert PostfixExpression: ++(106) into ExpressionStatement(107) at 0", "Insert PostfixExpression: --(81) into ExpressionStatement(82) at 0", "Insert SimpleName: outstandingSubscriptions(105) into PostfixExpression: ++(106) at 0", "Insert SimpleName: outstandingSubscriptions(80) into PostfixExpression: --(81) at 0", "Insert SimpleName: outstandingSubscriptions(83) into InfixExpression: ==(85) at 0", "Delete QualifiedName: rx.functions.Action1(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.concurrent.atomic.AtomicBoolean(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: java.util.concurrent.atomic.AtomicInteger(14)", "Delete ImportDeclaration(15)", "Delete SimpleName: AbstractCommand(21)", "Delete SimpleType: AbstractCommand(22)", "Delete SimpleName: R(23)", "Delete SimpleType: R(24)", "Delete ParameterizedType: AbstractCommand<R>(25)", "Delete SimpleName: originalCommand(26)", "Delete VariableDeclarationFragment(27)", "Delete FieldDeclaration(28)", "Delete SimpleName: AtomicInteger(60)", "Delete SimpleType: AtomicInteger(61)", "Delete NumberLiteral: 0(62)", "Delete ClassInstanceCreation(63)", "Delete FieldDeclaration(55)", "Delete Modifier: final(56)", "Delete SimpleName: AtomicInteger(57)", "Delete SimpleType: AtomicInteger(58)", "Delete FieldDeclaration(65)", "Delete SimpleName: Observable(67)", "Delete SimpleType: Observable(68)", "Delete SimpleName: R(69)", "Delete SimpleType: R(70)", "Delete ParameterizedType: Observable<R>(71)", "Delete SimpleName: originalObservable(72)", "Delete SingleVariableDeclaration(73)", "Delete SimpleName: AbstractCommand(75)", "Delete SimpleType: AbstractCommand(76)", "Delete ParameterizedType: AbstractCommand<R>(79)", "Delete SimpleName: outstandingSubscriptions(103)", "Delete SimpleName: decrementAndGet(104)", "Delete MethodInvocation(105)", "Delete SimpleName: outstandingSubscriptions(127)", "Delete SimpleName: getAndIncrement(128)", "Delete MethodInvocation(129)", "Delete ThisExpression(138)", "Delete SimpleName: originalCommand(139)", "Delete FieldAccess(140)", "Delete SimpleName: originalCommand(141)", "Delete Assignment: =(142)", "Delete ExpressionStatement(143)", "Delete Modifier: public(146)", "Delete Modifier: static(147)", "Delete SimpleName: from(155)", "Delete MethodDeclaration(180)", "Delete SimpleName: HystrixCollapser(198)", "Delete SimpleType: HystrixCollapser(199)", "Delete WildcardType: ?(200)", "Delete SimpleName: R(201)", "Delete SimpleType: R(202)", "Delete WildcardType: ?(203)", "Delete ParameterizedType: HystrixCollapser<?,R,?>(204)", "Delete SimpleName: originalCollapser(205)", "Delete SingleVariableDeclaration(206)", "Delete SimpleName: R(209)", "Delete SimpleType: R(210)", "Delete NullLiteral(213)", "Delete SimpleName: R(220)", "Delete TypeParameter(221)", "Delete SimpleName: HystrixCachedObservable(222)", "Delete SimpleType: HystrixCachedObservable(223)", "Delete SimpleName: R(224)", "Delete SimpleType: R(225)", "Delete ParameterizedType: HystrixCachedObservable<R>(226)", "Delete SimpleName: originalCommand(176)", "Delete SimpleName: Observable(228)", "Delete SimpleType: Observable(229)", "Delete SimpleName: R(230)", "Delete SimpleType: R(231)", "Delete ParameterizedType: Observable<R>(232)", "Delete SimpleName: o(233)", "Delete SingleVariableDeclaration(234)", "Delete SimpleName: HystrixObservableCollapser(235)", "Delete SimpleType: HystrixObservableCollapser(236)", "Delete WildcardType: ?(237)", "Delete WildcardType: ?(238)", "Delete SimpleName: R(239)", "Delete SimpleType: R(240)", "Delete WildcardType: ?(241)", "Delete ParameterizedType: HystrixObservableCollapser<?,?,R,?>(242)", "Delete SimpleName: originalCollapser(243)", "Delete SingleVariableDeclaration(244)", "Delete SimpleName: HystrixCachedObservable(245)", "Delete SimpleType: HystrixCachedObservable(246)", "Delete SimpleName: R(247)", "Delete SimpleType: R(248)", "Delete ParameterizedType: HystrixCachedObservable<R>(249)", "Delete SimpleName: o(250)", "Delete NullLiteral(251)", "Delete ClassInstanceCreation(252)", "Delete ReturnStatement(253)", "Delete Block(254)", "Delete SimpleName: toObservable(273)", "Delete Modifier: final(274)", "Delete SimpleName: AbstractCommand(275)", "Delete SimpleType: AbstractCommand(276)", "Delete SimpleName: R(277)", "Delete SimpleType: R(278)", "Delete ParameterizedType: AbstractCommand<R>(279)", "Delete SimpleName: commandToCopyStateInto(280)", "Delete SingleVariableDeclaration(281)", "Delete Modifier: final(282)", "Delete SimpleName: AtomicBoolean(283)", "Delete SimpleType: AtomicBoolean(284)", "Delete SimpleName: completionLogicRun(285)", "Delete SimpleName: AtomicBoolean(286)", "Delete SimpleType: AtomicBoolean(287)", "Delete BooleanLiteral: false(288)", "Delete ClassInstanceCreation(289)", "Delete VariableDeclarationFragment(290)", "Delete VariableDeclarationStatement(291)", "Delete SimpleName: cachedObservable(292)", "Delete SimpleName: doOnError(293)", "Delete SimpleName: Action1(294)", "Delete SimpleType: Action1(295)", "Delete SimpleName: Throwable(296)", "Delete SimpleType: Throwable(297)", "Delete ParameterizedType: Action1<Throwable>(298)", "Delete SimpleName: Override(299)", "Delete MarkerAnnotation(300)", "Delete Modifier: public(301)", "Delete SimpleName: call(303)", "Delete SimpleName: Throwable(304)", "Delete SimpleType: Throwable(305)", "Delete SimpleName: throwable(306)", "Delete SingleVariableDeclaration(307)", "Delete SimpleName: completionLogicRun(308)", "Delete SimpleName: get(309)", "Delete MethodInvocation(310)", "Delete PrefixExpression: !(311)", "Delete SimpleName: commandCompleted(312)", "Delete SimpleName: commandToCopyStateInto(313)", "Delete MethodInvocation(314)", "Delete ExpressionStatement(315)", "Delete SimpleName: completionLogicRun(316)", "Delete SimpleName: set(317)", "Delete BooleanLiteral: true(318)", "Delete MethodInvocation(319)", "Delete ExpressionStatement(320)", "Delete Block(321)", "Delete IfStatement(322)", "Delete Block(323)", "Delete MethodDeclaration(324)", "Delete AnonymousClassDeclaration(325)", "Delete ClassInstanceCreation(326)", "Delete MethodInvocation(327)", "Delete SimpleName: doOnCompleted(328)", "Delete SimpleName: Action0(329)", "Delete SimpleType: Action0(330)", "Delete SimpleName: Override(331)", "Delete MarkerAnnotation(332)", "Delete Modifier: public(333)", "Delete PrimitiveType: void(334)", "Delete SimpleName: call(335)", "Delete SimpleName: completionLogicRun(336)", "Delete SimpleName: get(337)", "Delete MethodInvocation(338)", "Delete PrefixExpression: !(339)", "Delete SimpleName: commandCompleted(340)", "Delete SimpleName: commandToCopyStateInto(341)", "Delete MethodInvocation(342)", "Delete ExpressionStatement(343)", "Delete SimpleName: completionLogicRun(344)", "Delete SimpleName: set(345)", "Delete BooleanLiteral: true(346)", "Delete MethodInvocation(347)", "Delete ExpressionStatement(348)", "Delete Block(349)", "Delete IfStatement(350)", "Delete Block(351)", "Delete MethodDeclaration(352)", "Delete AnonymousClassDeclaration(353)", "Delete ClassInstanceCreation(354)", "Delete MethodInvocation(355)", "Delete SimpleName: doOnUnsubscribe(356)", "Delete SimpleName: Action0(357)", "Delete SimpleType: Action0(358)", "Delete SimpleName: Override(359)", "Delete MarkerAnnotation(360)", "Delete Modifier: public(361)", "Delete PrimitiveType: void(362)", "Delete SimpleName: call(363)", "Delete SimpleName: completionLogicRun(364)", "Delete SimpleName: get(365)", "Delete MethodInvocation(366)", "Delete PrefixExpression: !(367)", "Delete SimpleName: completionLogicRun(372)", "Delete SimpleName: set(373)", "Delete BooleanLiteral: true(374)", "Delete MethodInvocation(375)", "Delete ExpressionStatement(376)", "Delete Block(377)", "Delete IfStatement(378)", "Delete Block(379)", "Delete MethodDeclaration(380)", "Delete AnonymousClassDeclaration(381)", "Delete ClassInstanceCreation(382)", "Delete MethodInvocation(383)", "Delete ReturnStatement(384)", "Delete Block(385)", "Delete Modifier: private(387)", "Delete PrimitiveType: void(388)", "Delete SimpleName: commandCompleted(389)", "Delete Modifier: final(390)", "Delete SimpleName: AbstractCommand(391)", "Delete SimpleType: AbstractCommand(392)", "Delete SimpleName: R(393)", "Delete SimpleType: R(394)", "Delete ParameterizedType: AbstractCommand<R>(395)", "Delete SimpleName: commandToCopyStateInto(396)", "Delete SingleVariableDeclaration(397)", "Delete QualifiedName: commandToCopyStateInto.executionResult(398)", "Delete QualifiedName: originalCommand.executionResult(399)", "Delete Assignment: =(400)", "Delete ExpressionStatement(401)", "Delete Block(402)", "Delete MethodDeclaration(403)", "Delete Modifier: private(404)", "Delete PrimitiveType: void(405)", "Delete SimpleName: commandUnsubscribed(406)", "Delete Modifier: final(407)", "Delete SimpleName: AbstractCommand(408)", "Delete SimpleType: AbstractCommand(409)", "Delete SimpleName: R(410)", "Delete SimpleType: R(411)", "Delete ParameterizedType: AbstractCommand<R>(412)", "Delete SimpleName: commandToCopyStateInto(413)", "Delete SingleVariableDeclaration(414)", "Delete QualifiedName: commandToCopyStateInto.executionResult(415)", "Delete QualifiedName: commandToCopyStateInto.executionResult(416)", "Delete SimpleName: addEvent(417)", "Delete QualifiedName: HystrixEventType.CANCELLED(418)", "Delete MethodInvocation(419)", "Delete Assignment: =(420)", "Delete ExpressionStatement(421)", "Delete QualifiedName: commandToCopyStateInto.executionResult(422)", "Delete QualifiedName: commandToCopyStateInto.executionResult(423)", "Delete SimpleName: setExecutionLatency(424)", "Delete NumberLiteral: 1(425)", "Delete PrefixExpression: -(426)", "Delete MethodInvocation(427)", "Delete Assignment: =(428)", "Delete ExpressionStatement(429)", "Delete Block(430)", "Delete MethodDeclaration(431)"]}}, {"HystrixCollapser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: rx.Subscription to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: rx.functions.Action0 to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: Subscription to SimpleType: Subscription at 0", "INS SimpleType: Subscription to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: underlyingSubscription to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS SimpleName: cacheKey to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: ResponseType to SimpleType: ResponseType at 0", "INS SimpleType: HystrixCollapser to ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType> at 0", "INS SimpleType: RequestArgumentType to ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType> at 3", "INS SimpleName: BatchReturnType to SimpleType: BatchReturnType at 0", "INS ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType> to VariableDeclarationStatement at 1", "INS SimpleName: RequestArgumentType to SimpleType: RequestArgumentType at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: BatchReturnType to ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType> at 1", "INS SimpleType: ResponseType to ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType> at 2", "INS SimpleName: _self to VariableDeclarationFragment at 0", "INS SimpleName: HystrixCollapser to SimpleType: HystrixCollapser at 0", "INS VariableDeclarationStatement to Block at 3", "INS ThisExpression to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: subject to MethodInvocation at 0", "INS SimpleName: underlyingSubscription to MethodInvocation at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: unsubscribe to MethodInvocation at 1", "INS SimpleName: Action0 to SimpleType: Action0 at 0", "INS SimpleName: doOnUnsubscribe to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: call to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Action0 to ClassInstanceCreation at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: cacheKey to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: isRequestCacheEnabled to InfixExpression: && at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: HystrixCachedObservable<ResponseType> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: HystrixCachedObservable<ResponseType> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: HystrixCachedObservable<ResponseType> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from getCacheKey to cacheKey", "operations": ["UPD SimpleName: getCacheKey from getCacheKey to cacheKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCacheKey to MethodInvocation at 2"]}, {"root": "INS SimpleName: cacheKey to MethodInvocation at 2", "operations": ["INS SimpleName: cacheKey to MethodInvocation at 2"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL SimpleName: subject", "operations": ["DEL SimpleName: subject"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: markRequestBatched", "DEL SimpleName: metrics"]}, {"root": "DEL SimpleName: isRequestCacheEnabled", "operations": ["DEL SimpleName: isRequestCacheEnabled"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: o", "DEL SimpleName: Observable", "DEL ParameterizedType: Observable<ResponseType>", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL SimpleName: ResponseType", "DEL SimpleType: ResponseType", "DEL VariableDeclarationFragment", "DEL SimpleType: Observable"]}, {"root": "DEL SimpleName: o", "operations": ["DEL SimpleName: o"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}]}}, {"HystrixCollapser_diff": {"operations": ["Insert ImportDeclaration(47) into CompilationUnit(1919) at 17", "Insert ImportDeclaration(49) into CompilationUnit(1919) at 18", "Insert QualifiedName: rx.Subscription(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: rx.functions.Action0(48) into ImportDeclaration(49) at 0", "Insert VariableDeclarationStatement(1141) into Block(1161) at 1", "Insert VariableDeclarationStatement(1294) into Block(1414) at 1", "Insert VariableDeclarationStatement(1336) into Block(1414) at 3", "Insert Modifier: final(1131) into VariableDeclarationStatement(1141) at 0", "Insert SimpleType: Subscription(1133) into VariableDeclarationStatement(1141) at 1", "Insert VariableDeclarationFragment(1140) into VariableDeclarationStatement(1141) at 2", "Insert MethodInvocation(1159) into ReturnStatement(1160) at 0", "Insert Modifier: final(1287) into VariableDeclarationStatement(1294) at 0", "Insert SimpleType: String(1289) into VariableDeclarationStatement(1294) at 1", "Insert VariableDeclarationFragment(1293) into VariableDeclarationStatement(1294) at 2", "Insert Modifier: final(1323) into VariableDeclarationStatement(1336) at 0", "Insert ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType>(1332) into VariableDeclarationStatement(1336) at 1", "Insert VariableDeclarationFragment(1335) into VariableDeclarationStatement(1336) at 2", "Insert InfixExpression: &&(1370) into IfStatement(1411) at 0", "Insert SimpleName: Subscription(1132) into SimpleType: Subscription(1133) at 0", "Insert SimpleName: underlyingSubscription(1134) into VariableDeclarationFragment(1140) at 0", "Move MethodInvocation(1131) into VariableDeclarationFragment(1140) at 1", "Insert SimpleName: subject(1142) into MethodInvocation(1159) at 0", "Insert SimpleName: doOnUnsubscribe(1143) into MethodInvocation(1159) at 1", "Insert ClassInstanceCreation(1158) into MethodInvocation(1159) at 2", "Insert SimpleName: String(1288) into SimpleType: String(1289) at 0", "Insert SimpleName: cacheKey(1290) into VariableDeclarationFragment(1293) at 0", "Move MethodInvocation(1346) into VariableDeclarationFragment(1293) at 1", "Insert SimpleType: HystrixCollapser(1325) into ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType>(1332) at 0", "Insert SimpleType: BatchReturnType(1327) into ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType>(1332) at 1", "Insert SimpleType: ResponseType(1329) into ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType>(1332) at 2", "Insert SimpleType: RequestArgumentType(1331) into ParameterizedType: HystrixCollapser<BatchReturnType,ResponseType,RequestArgumentType>(1332) at 3", "Insert SimpleName: _self(1333) into VariableDeclarationFragment(1335) at 0", "Insert ThisExpression(1334) into VariableDeclarationFragment(1335) at 1", "Insert SimpleName: isRequestCacheEnabled(1366) into InfixExpression: &&(1370) at 0", "Insert InfixExpression: !=(1369) into InfixExpression: &&(1370) at 1", "Insert SimpleType: Action0(1145) into ClassInstanceCreation(1158) at 0", "Insert AnonymousClassDeclaration(1157) into ClassInstanceCreation(1158) at 1", "Move ParameterizedType: HystrixCachedObservable<ResponseType>(1328) into VariableDeclarationStatement(1307) at 0", "Insert SimpleName: HystrixCollapser(1324) into SimpleType: HystrixCollapser(1325) at 0", "Insert SimpleName: BatchReturnType(1326) into SimpleType: BatchReturnType(1327) at 0", "Insert SimpleName: ResponseType(1328) into SimpleType: ResponseType(1329) at 0", "Insert SimpleName: RequestArgumentType(1330) into SimpleType: RequestArgumentType(1331) at 0", "Insert SimpleName: cacheKey(1367) into InfixExpression: !=(1369) at 0", "Insert NullLiteral(1368) into InfixExpression: !=(1369) at 1", "Move ParameterizedType: HystrixCachedObservable<ResponseType>(1341) into VariableDeclarationStatement(1382) at 0", "Move ParameterizedType: HystrixCachedObservable<ResponseType>(1266) into VariableDeclarationStatement(1395) at 0", "Move MethodInvocation(1514) into MethodInvocation(1554) at 0", "Insert SimpleName: Action0(1144) into SimpleType: Action0(1145) at 0", "Insert MethodDeclaration(1156) into AnonymousClassDeclaration(1157) at 0", "Insert MarkerAnnotation(1147) into MethodDeclaration(1156) at 0", "Insert Modifier: public(1148) into MethodDeclaration(1156) at 1", "Insert PrimitiveType: void(1149) into MethodDeclaration(1156) at 2", "Insert SimpleName: call(1150) into MethodDeclaration(1156) at 3", "Insert Block(1155) into MethodDeclaration(1156) at 4", "Update SimpleName: getCacheKey(1270) to cacheKey", "Move SimpleName: getCacheKey(1270) into MethodInvocation(1305) at 2", "Insert SimpleName: cacheKey(1391) into MethodInvocation(1393) at 2", "Insert SimpleName: Override(1146) into MarkerAnnotation(1147) at 0", "Insert ExpressionStatement(1154) into Block(1155) at 0", "Insert MethodInvocation(1153) into ExpressionStatement(1154) at 0", "Insert SimpleName: underlyingSubscription(1151) into MethodInvocation(1153) at 0", "Insert SimpleName: unsubscribe(1152) into MethodInvocation(1153) at 1", "Delete ExpressionStatement(1132)", "Delete SimpleName: subject(1133)", "Delete MethodInvocation(1271)", "Delete SimpleName: metrics(1319)", "Delete SimpleName: markRequestBatched(1320)", "Delete MethodInvocation(1321)", "Delete ExpressionStatement(1322)", "Delete SimpleName: isRequestCacheEnabled(1323)", "Delete ThisExpression(1333)", "Delete Modifier: final(1506)", "Delete SimpleName: Observable(1507)", "Delete SimpleType: Observable(1508)", "Delete SimpleName: ResponseType(1509)", "Delete SimpleType: ResponseType(1510)", "Delete ParameterizedType: Observable<ResponseType>(1511)", "Delete SimpleName: o(1512)", "Delete VariableDeclarationFragment(1515)", "Delete VariableDeclarationStatement(1516)", "Delete SimpleName: o(1517)", "Delete Modifier: public(1650)", "Delete Modifier: public(1664)", "Delete Modifier: public(1680)", "Delete Modifier: public(1697)", "Delete Modifier: public(1711)"]}}, {"HystrixObservableCollapser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: rx.Subscription to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: Subscription to SimpleType: Subscription at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: underlyingSubscription to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: Subscription to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: underlyingSubscription to MethodInvocation at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: doOnUnsubscribe to MethodInvocation at 1", "INS SimpleType: Action0 to ClassInstanceCreation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: unsubscribe to MethodInvocation at 1", "INS SimpleName: subject to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: call to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: Action0 to SimpleType: Action0 at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL SimpleName: subject", "operations": ["DEL SimpleName: subject"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}]}}, {"HystrixObservableCollapser_diff": {"operations": ["Insert ImportDeclaration(47) into CompilationUnit(1948) at 17", "Insert QualifiedName: rx.Subscription(46) into ImportDeclaration(47) at 0", "Insert VariableDeclarationStatement(1419) into Block(1439) at 1", "Insert Modifier: final(1409) into VariableDeclarationStatement(1419) at 0", "Insert SimpleType: Subscription(1411) into VariableDeclarationStatement(1419) at 1", "Insert VariableDeclarationFragment(1418) into VariableDeclarationStatement(1419) at 2", "Insert MethodInvocation(1437) into ReturnStatement(1438) at 0", "Insert SimpleName: Subscription(1410) into SimpleType: Subscription(1411) at 0", "Insert SimpleName: underlyingSubscription(1412) into VariableDeclarationFragment(1418) at 0", "Move MethodInvocation(1411) into VariableDeclarationFragment(1418) at 1", "Insert SimpleName: subject(1420) into MethodInvocation(1437) at 0", "Insert SimpleName: doOnUnsubscribe(1421) into MethodInvocation(1437) at 1", "Insert ClassInstanceCreation(1436) into MethodInvocation(1437) at 2", "Insert SimpleType: Action0(1423) into ClassInstanceCreation(1436) at 0", "Insert AnonymousClassDeclaration(1435) into ClassInstanceCreation(1436) at 1", "Insert SimpleName: Action0(1422) into SimpleType: Action0(1423) at 0", "Insert MethodDeclaration(1434) into AnonymousClassDeclaration(1435) at 0", "Insert MarkerAnnotation(1425) into MethodDeclaration(1434) at 0", "Insert Modifier: public(1426) into MethodDeclaration(1434) at 1", "Insert PrimitiveType: void(1427) into MethodDeclaration(1434) at 2", "Insert SimpleName: call(1428) into MethodDeclaration(1434) at 3", "Insert Block(1433) into MethodDeclaration(1434) at 4", "Insert SimpleName: Override(1424) into MarkerAnnotation(1425) at 0", "Insert ExpressionStatement(1432) into Block(1433) at 0", "Insert MethodInvocation(1431) into ExpressionStatement(1432) at 0", "Insert SimpleName: underlyingSubscription(1429) into MethodInvocation(1431) at 0", "Insert SimpleName: unsubscribe(1430) into MethodInvocation(1431) at 1", "Delete ExpressionStatement(1412)", "Delete SimpleName: subject(1413)", "Delete ThisExpression(1605)"]}}, {"HystrixCollapserBridge_cluster": {"actions": [{"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}]}}, {"HystrixCollapserBridge_diff": {"operations": ["Delete Modifier: public(45)", "Delete Modifier: public(73)", "Delete Modifier: public(93)", "Delete Modifier: public(120)"]}}, {"RequestBatch_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 12", "MOV FieldDeclaration to TypeDeclaration: class at 12"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: collapsedRequest to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS TextElement: This method finds the first occurrence of an argument in the batch, and removes that occurrence. to TagElement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: readLock to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: batchStarted to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: RequestArgumentType to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: batchLock to MethodInvocation at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS ReturnStatement to Block at 2", "INS IfStatement to Block at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to TryStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: tryLock to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: RequestArgumentType to SimpleType: RequestArgumentType at 0", "INS SimpleName: getArgument to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: batchArgumentQueue to EnhancedForStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: arg to TagElement: @param at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: batchLock to MethodInvocation at 0", "INS SimpleName: collapsedRequest to MethodInvocation at 0", "INS SimpleName: decrementAndGet to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: count to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement: My first pass at this is fairly naive, on the suspicion that unsubscription will be rare enough to not cause a perf problem. to TagElement at 3", "INS Block to IfStatement at 1", "INS SimpleName: batchArgumentQueue to MethodInvocation at 0", "INS SimpleName: readLock to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: arg to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS TextElement: Best-effort attempt to remove an argument from a batch.  This may get invoked when a cancellation occurs somewhere downstream. to TagElement at 0", "INS SimpleName: arg to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement: This is currently O(n).  If an O(1) approach is needed, then we need to refactor internals to use a Map instead of Queue. to TagElement at 2", "INS TryStatement to Block at 0", "INS SimpleName: collapsedRequest to SingleVariableDeclaration at 1", "INS IfStatement to Block at 0", "INS Block to TryStatement at 1", "INS TextElement:  argument to remove from batch to TagElement: @param at 1", "INS IfStatement to Block at 0", "INS SimpleName: remove to MethodDeclaration at 2", "INS SimpleName: batchStarted to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: count to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS ReturnStatement to Block at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getSize to MethodDeclaration at 2"]}, {"root": "INS Modifier: private to FieldDeclaration at 0", "operations": ["INS Modifier: private to FieldDeclaration at 0"]}, {"root": "UPDATE from requests to batchArgumentQueue", "operations": ["UPD SimpleName: requests from requests to batchArgumentQueue", "UPD SimpleName: requests from requests to batchArgumentQueue", "UPD SimpleName: requests from requests to batchArgumentQueue", "UPD SimpleName: requests from requests to batchArgumentQueue", "UPD SimpleName: requests from requests to batchArgumentQueue", "UPD SimpleName: requests from requests to batchArgumentQueue"]}, {"root": "UPDATE from > to >=", "operations": ["UPD InfixExpression: > from > to >="]}, {"root": "INS MethodInvocation to InfixExpression: > at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: count to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2"]}, {"root": "UPDATE from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequest<ResponseType,RequestArgumentType>", "operations": ["UPD ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequest<ResponseType,RequestArgumentType>"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "operations": ["UPD ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "UPD ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "UPD ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "UPD ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> from CollapsedRequestObservableFunction<ResponseType,RequestArgumentType> to CollapsedRequestSubject<ResponseType,RequestArgumentType>"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from CollapsedRequestObservableFunction to CollapsedRequest", "operations": ["UPD SimpleType: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequest", "UPD SimpleName: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequest"]}, {"root": "UPDATE from requests to count", "operations": ["UPD SimpleName: requests from requests to count", "UPD SimpleName: requests from requests to count"]}, {"root": "UPDATE from size to get", "operations": ["UPD SimpleName: size from size to get", "UPD SimpleName: size from size to get"]}, {"root": "UPDATE from CollapsedRequestObservableFunction to CollapsedRequestSubject", "operations": ["UPD SimpleType: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleName: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleType: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleType: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleName: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleName: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleType: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject", "UPD SimpleName: CollapsedRequestObservableFunction from CollapsedRequestObservableFunction to CollapsedRequestSubject"]}, {"root": "UPDATE from f to collapsedRequest", "operations": ["UPD SimpleName: f from f to collapsedRequest", "UPD SimpleName: f from f to collapsedRequest", "UPD SimpleName: Observable from Observable to collapsedRequest"]}, {"root": "UPDATE from create to toObservable", "operations": ["UPD SimpleName: create from create to toObservable"]}, {"root": "INS ThisExpression to ClassInstanceCreation at 2", "operations": ["INS ThisExpression to ClassInstanceCreation at 2"]}, {"root": "INS ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType> to CastExpression at 0", "operations": ["INS SimpleName: CollapsedRequestSubject to SimpleType: CollapsedRequestSubject at 0", "INS SimpleType: CollapsedRequestSubject to ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType> at 0", "INS SimpleType: ResponseType to ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType> at 1", "INS SimpleName: ResponseType to SimpleType: ResponseType at 0", "INS ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType> to CastExpression at 0", "INS SimpleName: RequestArgumentType to SimpleType: RequestArgumentType at 0", "INS SimpleType: RequestArgumentType to ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType> at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: int", "DEL SimpleName: s", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}, {"root": "DEL SimpleName: s", "operations": ["DEL SimpleName: s"]}, {"root": "DEL SimpleName: f", "operations": ["DEL SimpleName: f"]}]}}, {"RequestBatch_diff": {"operations": ["Move FieldDeclaration(115) into TypeDeclaration: class(816) at 12", "Move FieldDeclaration(126) into TypeDeclaration: class(816) at 12", "Insert MethodDeclaration(353) into TypeDeclaration: class(816) at 15", "Insert MethodDeclaration(815) into TypeDeclaration: class(816) at 18", "Insert Modifier: private(107) into FieldDeclaration(132) at 0", "Insert Javadoc(287) into MethodDeclaration(353) at 0", "Insert PrimitiveType: void(288) into MethodDeclaration(353) at 1", "Insert SimpleName: remove(289) into MethodDeclaration(353) at 2", "Insert SingleVariableDeclaration(293) into MethodDeclaration(353) at 3", "Insert Block(352) into MethodDeclaration(353) at 4", "Insert Modifier: public(807) into MethodDeclaration(815) at 0", "Insert PrimitiveType: int(808) into MethodDeclaration(815) at 1", "Insert SimpleName: getSize(809) into MethodDeclaration(815) at 2", "Insert Block(814) into MethodDeclaration(815) at 3", "Update SimpleName: requests(102) to batchArgumentQueue", "Insert TagElement(283) into Javadoc(287) at 0", "Insert TagElement: @param(286) into Javadoc(287) at 1", "Insert SimpleType: RequestArgumentType(291) into SingleVariableDeclaration(293) at 0", "Insert SimpleName: arg(292) into SingleVariableDeclaration(293) at 1", "Insert IfStatement(299) into Block(352) at 0", "Insert IfStatement(351) into Block(352) at 1", "Insert ReturnStatement(813) into Block(814) at 0", "Insert TextElement: Best-effort attempt to remove an argument from a batch.  This may get invoked when a cancellation occurs somewhere downstream.(279) into TagElement(283) at 0", "Insert TextElement: This method finds the first occurrence of an argument in the batch, and removes that occurrence.(280) into TagElement(283) at 1", "Insert TextElement: This is currently O(n).  If an O(1) approach is needed, then we need to refactor internals to use a Map instead of Queue.(281) into TagElement(283) at 2", "Insert TextElement: My first pass at this is fairly naive, on the suspicion that unsubscription will be rare enough to not cause a perf problem.(282) into TagElement(283) at 3", "Insert SimpleName: arg(284) into TagElement: @param(286) at 0", "Insert TextElement:  argument to remove from batch(285) into TagElement: @param(286) at 1", "Insert SimpleName: RequestArgumentType(290) into SimpleType: RequestArgumentType(291) at 0", "Insert MethodInvocation(296) into IfStatement(299) at 0", "Insert Block(298) into IfStatement(299) at 1", "Insert MethodInvocation(304) into IfStatement(351) at 0", "Insert Block(350) into IfStatement(351) at 1", "Insert MethodInvocation(812) into ReturnStatement(813) at 0", "Insert SimpleName: batchStarted(294) into MethodInvocation(296) at 0", "Insert SimpleName: get(295) into MethodInvocation(296) at 1", "Insert ReturnStatement(297) into Block(298) at 0", "Insert MethodInvocation(302) into MethodInvocation(304) at 0", "Insert SimpleName: tryLock(303) into MethodInvocation(304) at 1", "Insert TryStatement(349) into Block(350) at 0", "Insert SimpleName: count(810) into MethodInvocation(812) at 0", "Insert SimpleName: get(811) into MethodInvocation(812) at 1", "Insert SimpleName: batchLock(300) into MethodInvocation(302) at 0", "Insert SimpleName: readLock(301) into MethodInvocation(302) at 1", "Insert Block(341) into TryStatement(349) at 0", "Insert Block(348) into TryStatement(349) at 1", "Insert IfStatement(310) into Block(341) at 0", "Insert EnhancedForStatement(340) into Block(341) at 1", "Insert ExpressionStatement(347) into Block(348) at 0", "Update InfixExpression: >(228) to >=", "Insert MethodInvocation(307) into IfStatement(310) at 0", "Insert Block(309) into IfStatement(310) at 1", "Insert SingleVariableDeclaration(319) into EnhancedForStatement(340) at 0", "Insert SimpleName: batchArgumentQueue(320) into EnhancedForStatement(340) at 1", "Insert Block(339) into EnhancedForStatement(340) at 2", "Insert MethodInvocation(346) into ExpressionStatement(347) at 0", "Insert MethodInvocation(222) into InfixExpression: >=(224) at 0", "Insert ExpressionStatement(256) into Block(261) at 2", "Insert SimpleName: batchStarted(305) into MethodInvocation(307) at 0", "Insert SimpleName: get(306) into MethodInvocation(307) at 1", "Insert ReturnStatement(308) into Block(309) at 0", "Update ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(422) to CollapsedRequest<ResponseType,RequestArgumentType>", "Move ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(422) into SingleVariableDeclaration(319) at 0", "Insert SimpleName: collapsedRequest(318) into SingleVariableDeclaration(319) at 1", "Insert IfStatement(338) into Block(339) at 0", "Insert MethodInvocation(344) into MethodInvocation(346) at 0", "Insert SimpleName: unlock(345) into MethodInvocation(346) at 1", "Update SimpleName: requests(593) to batchArgumentQueue", "Insert SimpleName: count(220) into MethodInvocation(222) at 0", "Insert SimpleName: get(221) into MethodInvocation(222) at 1", "Update ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(238) to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "Move MethodInvocation(223) into ExpressionStatement(256) at 0", "Update SimpleType: CollapsedRequestObservableFunction(417) to CollapsedRequest", "Insert MethodInvocation(326) into IfStatement(338) at 0", "Insert Block(337) into IfStatement(338) at 1", "Insert SimpleName: batchLock(342) into MethodInvocation(344) at 0", "Insert SimpleName: readLock(343) into MethodInvocation(344) at 1", "Update SimpleName: requests(320) to batchArgumentQueue", "Update SimpleName: requests(643) to count", "Update SimpleName: size(644) to get", "Update SimpleName: requests(669) to batchArgumentQueue", "Update SimpleType: CollapsedRequestObservableFunction(233) to CollapsedRequestSubject", "Update SimpleName: f(239) to collapsedRequest", "Update SimpleName: requests(251) to batchArgumentQueue", "Update SimpleName: f(253) to collapsedRequest", "Update SimpleName: Observable(256) to collapsedRequest", "Update SimpleName: create(257) to toObservable", "Update SimpleName: CollapsedRequestObservableFunction(416) to CollapsedRequest", "Insert SimpleName: arg(321) into MethodInvocation(326) at 0", "Insert SimpleName: equals(322) into MethodInvocation(326) at 1", "Insert MethodInvocation(325) into MethodInvocation(326) at 2", "Insert ExpressionStatement(331) into Block(337) at 0", "Insert ExpressionStatement(335) into Block(337) at 1", "Insert ReturnStatement(336) into Block(337) at 2", "Update SimpleName: CollapsedRequestObservableFunction(232) to CollapsedRequestSubject", "Update ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(246) to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "Insert ThisExpression(244) into ClassInstanceCreation(245) at 2", "Insert SimpleName: collapsedRequest(323) into MethodInvocation(325) at 0", "Insert SimpleName: getArgument(324) into MethodInvocation(325) at 1", "Insert MethodInvocation(330) into ExpressionStatement(331) at 0", "Insert MethodInvocation(334) into ExpressionStatement(335) at 0", "Update SimpleType: CollapsedRequestObservableFunction(241) to CollapsedRequestSubject", "Insert SimpleName: batchArgumentQueue(327) into MethodInvocation(330) at 0", "Insert SimpleName: remove(328) into MethodInvocation(330) at 1", "Insert SimpleName: collapsedRequest(329) into MethodInvocation(330) at 2", "Insert SimpleName: count(332) into MethodInvocation(334) at 0", "Insert SimpleName: decrementAndGet(333) into MethodInvocation(334) at 1", "Update SimpleName: requests(651) to count", "Update SimpleName: size(652) to get", "Update SimpleName: CollapsedRequestObservableFunction(240) to CollapsedRequestSubject", "Update ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(676) to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "Update SimpleType: CollapsedRequestObservableFunction(671) to CollapsedRequestSubject", "Update SimpleName: CollapsedRequestObservableFunction(670) to CollapsedRequestSubject", "Update SimpleName: requests(415) to batchArgumentQueue", "Insert ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType>(497) into CastExpression(499) at 0", "Update ParameterizedType: CollapsedRequestObservableFunction<ResponseType,RequestArgumentType>(485) to CollapsedRequestSubject<ResponseType,RequestArgumentType>", "Insert SimpleType: CollapsedRequestSubject(492) into ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType>(497) at 0", "Insert SimpleType: ResponseType(494) into ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType>(497) at 1", "Insert SimpleType: RequestArgumentType(496) into ParameterizedType: CollapsedRequestSubject<ResponseType,RequestArgumentType>(497) at 2", "Update SimpleType: CollapsedRequestObservableFunction(480) to CollapsedRequestSubject", "Insert SimpleName: CollapsedRequestSubject(491) into SimpleType: CollapsedRequestSubject(492) at 0", "Insert SimpleName: ResponseType(493) into SimpleType: ResponseType(494) at 0", "Insert SimpleName: RequestArgumentType(495) into SimpleType: RequestArgumentType(496) at 0", "Update SimpleName: CollapsedRequestObservableFunction(479) to CollapsedRequestSubject", "Delete PrimitiveType: int(219)", "Delete SimpleName: s(220)", "Delete VariableDeclarationFragment(224)", "Delete VariableDeclarationStatement(225)", "Delete SimpleName: s(226)", "Delete SimpleName: f(258)"]}}, {"RequestCollapser_cluster": {"actions": [{"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: currentBatch to MethodInvocation at 0", "operations": ["INS SimpleName: currentBatch to MethodInvocation at 0"]}, {"root": "UPDATE from size to getSize", "operations": ["UPD SimpleName: size from size to getSize"]}, {"root": "DEL QualifiedName: currentBatch.requests", "operations": ["DEL QualifiedName: currentBatch.requests"]}]}}, {"RequestCollapser_diff": {"operations": ["Insert Modifier: final(275) into SingleVariableDeclaration(279) at 0", "Insert Modifier: final(303) into VariableDeclarationStatement(318) at 0", "Insert SimpleName: currentBatch(514) into MethodInvocation(516) at 0", "Update SimpleName: size(513) to getSize", "Delete QualifiedName: currentBatch.requests(512)"]}}], "commit_stats": [{"total_files": 14, "deleted_files": 2, "testing": "True", "maintenance": "False", "build": "False"}]}