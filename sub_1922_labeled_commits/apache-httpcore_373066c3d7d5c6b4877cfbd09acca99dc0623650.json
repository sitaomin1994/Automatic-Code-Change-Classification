{"application": "apache-httpcore", "csha": "373066c3d7d5c6b4877cfbd09acca99dc0623650", "files": [{"NHttpClient_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from java.util.concurrent.TimeUnit to org.apache.http.config.ConnectionConfig", "operations": ["UPD QualifiedName: java.util.concurrent.TimeUnit from java.util.concurrent.TimeUnit to org.apache.http.config.ConnectionConfig"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2"]}, {"root": "UPDATE from TimeUnit.SECONDS to ConnectionConfig.DEFAULT", "operations": ["UPD QualifiedName: TimeUnit.SECONDS from TimeUnit.SECONDS to ConnectionConfig.DEFAULT"]}, {"root": "DEL NumberLiteral: 3", "operations": ["DEL NumberLiteral: 3"]}]}}, {"NHttpClient_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(382) at 9", "Update QualifiedName: java.util.concurrent.TimeUnit(8) to org.apache.http.config.ConnectionConfig", "Insert QualifiedName: ConnectionConfig.DEFAULT(116) into ClassInstanceCreation(117) at 2", "Update QualifiedName: TimeUnit.SECONDS(135) to ConnectionConfig.DEFAULT", "Delete NumberLiteral: 3(134)"]}}, {"NHttpReverseProxy_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ProxyConnPool to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from TimeUnit to ConnectionConfig", "operations": ["UPD SimpleName: TimeUnit from TimeUnit to ConnectionConfig", "UPD SimpleType: TimeUnit from TimeUnit to ConnectionConfig"]}, {"root": "UPDATE from connectTimeout to config", "operations": ["UPD SimpleName: connectTimeout from connectTimeout to config", "UPD SimpleName: tunit from tunit to config"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ProxyConnPool to ClassInstanceCreation at 0"]}, {"root": "UPDATE from TimeUnit.SECONDS to ConnectionConfig.DEFAULT", "operations": ["UPD QualifiedName: TimeUnit.SECONDS from TimeUnit.SECONDS to ConnectionConfig.DEFAULT"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 2"]}, {"root": "DEL NumberLiteral: 3", "operations": ["DEL NumberLiteral: 3"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: connectTimeout", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: tunit", "operations": ["DEL SimpleName: tunit"]}]}}, {"NHttpReverseProxy_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(3297) at 19", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(38) into ImportDeclaration(39) at 0", "Move SimpleType: ProxyConnPool(358) into VariableDeclarationStatement(365) at 0", "Update SimpleType: TimeUnit(3162) to ConnectionConfig", "Update SimpleName: tunit(3163) to config", "Update SimpleName: TimeUnit(3161) to ConnectionConfig", "Update SimpleName: connectTimeout(3166) to config", "Move SimpleType: ProxyConnPool(355) into ClassInstanceCreation(363) at 0", "Update QualifiedName: TimeUnit.SECONDS(361) to ConnectionConfig.DEFAULT", "Insert QualifiedName: ConnectionConfig.DEFAULT(415) into ClassInstanceCreation(416) at 2", "Insert QualifiedName: ConnectionConfig.DEFAULT(426) into ClassInstanceCreation(427) at 2", "Delete NumberLiteral: 3(360)", "Delete PrimitiveType: int(3157)", "Delete SimpleName: connectTimeout(3158)", "Delete SingleVariableDeclaration(3159)", "Delete SimpleName: tunit(3167)"]}}, {"NHttpServer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 3", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 3"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 1", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ClassInstanceCreation at 1"]}]}}, {"NHttpServer_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(797) at 18", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: ConnectionConfig.DEFAULT(373) into ClassInstanceCreation(374) at 3", "Insert QualifiedName: ConnectionConfig.DEFAULT(381) into ClassInstanceCreation(382) at 1"]}}, {"NHttpMessageParserFactory_cluster": {"actions": [{"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"NHttpMessageParserFactory_diff": {"operations": ["Update QualifiedName: org.apache.http.impl.MessageConstraints(4) to org.apache.http.config.MessageConstraints"]}}, {"BHttpConnectionBase_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.http.config.MessageConstraints to ImportDeclaration at 0"]}]}}, {"BHttpConnectionBase_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(1195) at 19", "Insert QualifiedName: org.apache.http.config.MessageConstraints(38) into ImportDeclaration(39) at 0"]}}, {"DefaultBHttpClientConnection_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.http.config.MessageConstraints to ImportDeclaration at 0"]}]}}, {"DefaultBHttpClientConnection_diff": {"operations": ["Insert ImportDeclaration(29) into CompilationUnit(522) at 14", "Insert QualifiedName: org.apache.http.config.MessageConstraints(28) into ImportDeclaration(29) at 0"]}}, {"DefaultBHttpServerConnection_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.http.config.MessageConstraints to ImportDeclaration at 0"]}]}}, {"DefaultBHttpServerConnection_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(498) at 13", "Insert QualifiedName: org.apache.http.config.MessageConstraints(26) into ImportDeclaration(27) at 0"]}}, {"HttpMessageParserFactory_cluster": {"actions": [{"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"HttpMessageParserFactory_diff": {"operations": ["Update QualifiedName: org.apache.http.impl.MessageConstraints(4) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpClientIODispatch_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 1", "operations": ["INS SimpleName: config to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SSLNHttpClientConnectionFactory to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 4", "operations": ["INS SimpleName: config to ClassInstanceCreation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SSLNHttpClientConnectionFactory to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 3", "operations": ["INS SimpleName: config to ClassInstanceCreation at 3"]}]}}, {"DefaultHttpClientIODispatch_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(502) at 4", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(8) into ImportDeclaration(9) at 0", "Insert SingleVariableDeclaration(244) into MethodDeclaration(252) at 4", "Insert SingleVariableDeclaration(277) into MethodDeclaration(287) at 6", "Insert SingleVariableDeclaration(307) into MethodDeclaration(317) at 5", "Insert Modifier: final(240) into SingleVariableDeclaration(244) at 0", "Insert SimpleType: ConnectionConfig(242) into SingleVariableDeclaration(244) at 1", "Insert SimpleName: config(243) into SingleVariableDeclaration(244) at 2", "Insert Modifier: final(273) into SingleVariableDeclaration(277) at 0", "Insert SimpleType: ConnectionConfig(275) into SingleVariableDeclaration(277) at 1", "Insert SimpleName: config(276) into SingleVariableDeclaration(277) at 2", "Insert Modifier: final(303) into SingleVariableDeclaration(307) at 0", "Insert SimpleType: ConnectionConfig(305) into SingleVariableDeclaration(307) at 1", "Insert SimpleName: config(306) into SingleVariableDeclaration(307) at 2", "Insert SimpleName: ConnectionConfig(241) into SimpleType: ConnectionConfig(242) at 0", "Insert SimpleName: ConnectionConfig(274) into SimpleType: ConnectionConfig(275) at 0", "Insert SimpleName: ConnectionConfig(304) into SimpleType: ConnectionConfig(305) at 0", "Insert SimpleName: config(248) into ClassInstanceCreation(249) at 1", "Move SimpleType: SSLNHttpClientConnectionFactory(291) into ClassInstanceCreation(284) at 0", "Insert SimpleName: config(283) into ClassInstanceCreation(284) at 3", "Move SimpleType: SSLNHttpClientConnectionFactory(267) into ClassInstanceCreation(314) at 0", "Insert SimpleName: config(313) into ClassInstanceCreation(314) at 3"]}}, {"DefaultHttpServerIODispatch_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 1", "operations": ["INS SimpleName: config to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SSLNHttpServerConnectionFactory to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 4", "operations": ["INS SimpleName: config to ClassInstanceCreation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: SSLNHttpServerConnectionFactory to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 3", "operations": ["INS SimpleName: config to ClassInstanceCreation at 3"]}]}}, {"DefaultHttpServerIODispatch_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(480) at 4", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(8) into ImportDeclaration(9) at 0", "Insert SingleVariableDeclaration(234) into MethodDeclaration(242) at 4", "Insert SingleVariableDeclaration(267) into MethodDeclaration(277) at 6", "Insert SingleVariableDeclaration(297) into MethodDeclaration(307) at 5", "Insert Modifier: final(230) into SingleVariableDeclaration(234) at 0", "Insert SimpleType: ConnectionConfig(232) into SingleVariableDeclaration(234) at 1", "Insert SimpleName: config(233) into SingleVariableDeclaration(234) at 2", "Insert Modifier: final(263) into SingleVariableDeclaration(267) at 0", "Insert SimpleType: ConnectionConfig(265) into SingleVariableDeclaration(267) at 1", "Insert SimpleName: config(266) into SingleVariableDeclaration(267) at 2", "Insert Modifier: final(293) into SingleVariableDeclaration(297) at 0", "Insert SimpleType: ConnectionConfig(295) into SingleVariableDeclaration(297) at 1", "Insert SimpleName: config(296) into SingleVariableDeclaration(297) at 2", "Insert SimpleName: ConnectionConfig(231) into SimpleType: ConnectionConfig(232) at 0", "Insert SimpleName: ConnectionConfig(264) into SimpleType: ConnectionConfig(265) at 0", "Insert SimpleName: ConnectionConfig(294) into SimpleType: ConnectionConfig(295) at 0", "Insert SimpleName: config(238) into ClassInstanceCreation(239) at 1", "Move SimpleType: SSLNHttpServerConnectionFactory(281) into ClassInstanceCreation(274) at 0", "Insert SimpleName: config(273) into ClassInstanceCreation(274) at 3", "Move SimpleType: SSLNHttpServerConnectionFactory(257) into ClassInstanceCreation(304) at 0", "Insert SimpleName: config(303) into ClassInstanceCreation(304) at 3"]}}, {"DefaultNHttpClientConnection_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from Config to HttpParamConfig", "operations": ["UPD SimpleName: Config from Config to HttpParamConfig"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Config to MethodInvocation at 0", "MOV SimpleName: getInt to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 2"]}, {"root": "UPDATE from getInt to getMessageConstraints", "operations": ["UPD SimpleName: getInt from getInt to getMessageConstraints"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL ImportDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: MessageConstraints", "DEL SimpleName: setMaxHeaderCount", "DEL SimpleName: Config", "DEL SimpleName: custom", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH", "DEL SimpleName: params", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL SimpleName: getInt", "DEL QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT", "DEL MethodInvocation", "DEL SimpleName: build", "DEL SimpleName: setMaxLineLength", "DEL PrefixExpression: -", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"DefaultNHttpClientConnection_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(1193) at 14", "Update QualifiedName: org.apache.http.impl.MessageConstraints(26) to org.apache.http.config.MessageConstraints", "Update QualifiedName: org.apache.http.params.Config(68) to org.apache.http.params.HttpParamConfig", "Insert MethodInvocation(512) into VariableDeclarationFragment(513) at 1", "Update SimpleName: Config(515) to HttpParamConfig", "Move SimpleName: Config(515) into MethodInvocation(512) at 0", "Update SimpleName: getInt(516) to getMessageConstraints", "Move SimpleName: getInt(516) into MethodInvocation(512) at 1", "Move SimpleName: params(517) into MethodInvocation(512) at 2", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(70)", "Delete ImportDeclaration(71)", "Delete SimpleName: MessageConstraints(511)", "Delete SimpleName: custom(512)", "Delete MethodInvocation(513)", "Delete SimpleName: setMaxLineLength(514)", "Delete QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH(518)", "Delete NumberLiteral: 1(519)", "Delete PrefixExpression: -(520)", "Delete MethodInvocation(521)", "Delete MethodInvocation(522)", "Delete SimpleName: setMaxHeaderCount(523)", "Delete SimpleName: Config(524)", "Delete SimpleName: getInt(525)", "Delete SimpleName: params(526)", "Delete QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT(527)", "Delete NumberLiteral: 1(528)", "Delete PrefixExpression: -(529)", "Delete MethodInvocation(530)", "Delete MethodInvocation(531)", "Delete SimpleName: build(532)", "Delete MethodInvocation(533)"]}}, {"DefaultNHttpClientConnectionFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.nio.charset.CharsetDecoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 9"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: DefaultNHttpClientConnectionFactory to MethodDeclaration at 2"]}, {"root": "UPDATE from HttpResponseFactory to ConnectionConfig", "operations": ["UPD SimpleType: HttpResponseFactory from HttpResponseFactory to ConnectionConfig", "UPD SimpleName: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleName: HttpResponseFactory from HttpResponseFactory to ConnectionConfig"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Javadoc to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "UPDATE from responseFactory to config", "operations": ["UPD SimpleName: responseFactory from responseFactory to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: responseFactory from responseFactory to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: charencoder to VariableDeclarationFragment at 0", "INS SimpleType: CharsetEncoder to VariableDeclarationStatement at 0", "INS SimpleName: CharsetEncoder to SimpleType: CharsetEncoder at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: getCharset to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: charset to VariableDeclarationFragment at 0", "INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS VariableDeclarationStatement to Block at 2", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: charset to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: charset to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: charencoder to MethodInvocation at 0", "INS SimpleName: newEncoder to MethodInvocation at 1", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS SimpleName: charencoder to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS SimpleName: charencoder to Assignment: = at 0", "INS ExpressionStatement to Block at 5", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: newDecoder to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 5", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: charset to InfixExpression: != at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 6"]}, {"root": "MOVE from SimpleType: ConnectionConfig", "operations": ["MOV SimpleName: HttpParams to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 2", "operations": ["INS SimpleName: config to ConstructorInvocation at 2"]}, {"root": "UPDATE from DefaultNHttpClientConnection to CodingErrorAction", "operations": ["UPD SimpleType: DefaultNHttpClientConnection from DefaultNHttpClientConnection to CodingErrorAction", "UPD SimpleName: DefaultNHttpClientConnection from DefaultNHttpClientConnection to CodingErrorAction"]}, {"root": "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: responseFactory to ClassInstanceCreation at 2", "INS SimpleName: DefaultHttpResponseParserFactory to SimpleType: DefaultHttpResponseParserFactory at 0", "INS SimpleType: DefaultHttpResponseParserFactory to ClassInstanceCreation at 0", "INS NullLiteral to ClassInstanceCreation at 1", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: HttpParamConfig to MethodInvocation at 0", "INS SimpleName: getConnectionConfig to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: params to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: session to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0", "MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS QualifiedName: HeapByteBufferAllocator.INSTANCE to ConditionalExpression at 2", "INS SimpleName: allocator to InfixExpression: != at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: allocator to ConditionalExpression at 1"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2", "INS SimpleName: config to InfixExpression: != at 0", "INS SimpleName: config to ConditionalExpression at 1"]}, {"root": "UPDATE from timeout to malformedInputAction", "operations": ["UPD SimpleName: timeout from timeout to malformedInputAction", "UPD SimpleName: conn from conn to malformedInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: config to FieldAccess at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from timeout to unmappableInputAction", "operations": ["UPD SimpleName: timeout from timeout to unmappableInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 4", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 5", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1", "INS MethodInvocation to ClassInstanceCreation at 6", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getMessageConstraints to MethodInvocation at 1"]}, {"root": "UPDATE from responseFactory to responseParserFactory", "operations": ["UPD SimpleName: responseFactory from responseFactory to responseParserFactory"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: params to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: getInt to MethodInvocation at 1"]}, {"root": "UPDATE from conn to chardecoder", "operations": ["UPD SimpleName: conn from conn to chardecoder"]}, {"root": "UPDATE from setSocketTimeout to onMalformedInput", "operations": ["UPD SimpleName: setSocketTimeout from setSocketTimeout to onMalformedInput"]}, {"root": "UPDATE from session to getMalformedInputAction", "operations": ["UPD SimpleName: session from session to getMalformedInputAction"]}, {"root": "UPDATE from getInt to getUnmappableInputAction", "operations": ["UPD SimpleName: getInt from getInt to getUnmappableInputAction"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: HttpParams", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: params"]}, {"root": "DEL SimpleName: responseFactory", "operations": ["DEL SimpleName: responseFactory"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL NullLiteral", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: responseParserFactory", "DEL FieldAccess"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: responseFactory", "DEL ThisExpression", "DEL SimpleName: responseFactory", "DEL Assignment: =", "DEL ExpressionStatement", "DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: allocator"]}, {"root": "DEL SimpleName: allocator", "operations": ["DEL SimpleName: allocator"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: DefaultNHttpClientConnectionFactory", "DEL MethodDeclaration", "DEL Modifier: public"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: createConnection", "DEL MethodInvocation", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: params"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodInvocation", "operations": ["DEL NumberLiteral: 0", "DEL SimpleName: Config", "DEL MethodInvocation", "DEL QualifiedName: CoreConnectionPNames.SO_TIMEOUT"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL NullLiteral", "DEL FieldAccess", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: conn", "DEL Block"]}]}}, {"DefaultNHttpClientConnectionFactory_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(427) at 4", "Insert ImportDeclaration(3) into CompilationUnit(427) at 1", "Insert ImportDeclaration(5) into CompilationUnit(427) at 2", "Insert ImportDeclaration(7) into CompilationUnit(427) at 3", "Insert ImportDeclaration(9) into CompilationUnit(427) at 4", "Move FieldDeclaration(68) into TypeDeclaration: class(426) at 9", "Insert QualifiedName: java.nio.charset.Charset(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.nio.charset.CharsetDecoder(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.nio.charset.CharsetEncoder(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(8) into ImportDeclaration(9) at 0", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(24) to org.apache.http.config.ConnectionConfig", "Update QualifiedName: org.apache.http.params.Config(26) to org.apache.http.params.HttpParamConfig", "Insert MethodDeclaration(238) into TypeDeclaration: class(426) at 11", "Update SimpleType: HttpResponseFactory(65) to ConnectionConfig", "Move ExpressionStatement(139) into Block(160) at 6", "Move Javadoc(184) into MethodDeclaration(238) at 0", "Insert Modifier: public(187) into MethodDeclaration(238) at 1", "Insert SimpleName: DefaultNHttpClientConnectionFactory(188) into MethodDeclaration(238) at 2", "Move SingleVariableDeclaration(191) into MethodDeclaration(238) at 3", "Move SingleVariableDeclaration(196) into MethodDeclaration(238) at 4", "Insert SingleVariableDeclaration(203) into MethodDeclaration(238) at 5", "Move Block(226) into MethodDeclaration(238) at 6", "Insert SingleVariableDeclaration(248) into MethodDeclaration(254) at 3", "Update SimpleName: HttpResponseFactory(64) to ConnectionConfig", "Update SimpleName: responseFactory(66) to config", "Insert Modifier: final(199) into SingleVariableDeclaration(203) at 0", "Insert SimpleType: ConnectionConfig(201) into SingleVariableDeclaration(203) at 1", "Insert SimpleName: config(202) into SingleVariableDeclaration(203) at 2", "Insert Modifier: final(244) into SingleVariableDeclaration(248) at 0", "Insert SimpleType: ConnectionConfig(246) into SingleVariableDeclaration(248) at 1", "Insert SimpleName: config(247) into SingleVariableDeclaration(248) at 2", "Insert VariableDeclarationStatement(308) into Block(424) at 0", "Insert VariableDeclarationStatement(314) into Block(424) at 1", "Insert VariableDeclarationStatement(324) into Block(424) at 2", "Move VariableDeclarationStatement(307) into Block(424) at 3", "Move VariableDeclarationStatement(319) into Block(424) at 4", "Insert IfStatement(399) into Block(424) at 5", "Move ReturnStatement(347) into Block(424) at 6", "Update SimpleName: HttpParams(78) to ConnectionConfig", "Move SimpleName: HttpParams(78) into SimpleType: ConnectionConfig(201) at 0", "Insert SimpleName: ConnectionConfig(245) into SimpleType: ConnectionConfig(246) at 0", "Insert SimpleName: config(251) into ConstructorInvocation(252) at 2", "Insert SimpleType: CharsetDecoder(304) into VariableDeclarationStatement(308) at 0", "Insert VariableDeclarationFragment(307) into VariableDeclarationStatement(308) at 1", "Insert SimpleType: CharsetEncoder(310) into VariableDeclarationStatement(314) at 0", "Insert VariableDeclarationFragment(313) into VariableDeclarationStatement(314) at 1", "Insert SimpleType: Charset(316) into VariableDeclarationStatement(324) at 0", "Insert VariableDeclarationFragment(323) into VariableDeclarationStatement(324) at 1", "Update SimpleType: DefaultNHttpClientConnection(292) to CodingErrorAction", "Insert SimpleType: CodingErrorAction(345) into VariableDeclarationStatement(362) at 0", "Insert InfixExpression: !=(365) into IfStatement(399) at 0", "Insert Block(398) into IfStatement(399) at 1", "Insert ClassInstanceCreation(148) into Assignment: =(149) at 1", "Insert MethodInvocation(157) into Assignment: =(158) at 1", "Move FieldAccess(301) into Assignment: =(214) at 0", "Insert ConditionalExpression(213) into Assignment: =(214) at 1", "Insert ConditionalExpression(234) into Assignment: =(235) at 1", "Insert SimpleName: CharsetDecoder(303) into SimpleType: CharsetDecoder(304) at 0", "Insert SimpleName: chardecoder(305) into VariableDeclarationFragment(307) at 0", "Insert NullLiteral(306) into VariableDeclarationFragment(307) at 1", "Insert SimpleName: CharsetEncoder(309) into SimpleType: CharsetEncoder(310) at 0", "Insert SimpleName: charencoder(311) into VariableDeclarationFragment(313) at 0", "Insert NullLiteral(312) into VariableDeclarationFragment(313) at 1", "Insert SimpleName: Charset(315) into SimpleType: Charset(316) at 0", "Insert SimpleName: charset(317) into VariableDeclarationFragment(323) at 0", "Insert MethodInvocation(322) into VariableDeclarationFragment(323) at 1", "Update SimpleName: DefaultNHttpClientConnection(291) to CodingErrorAction", "Update SimpleName: conn(293) to malformedInputAction", "Insert ConditionalExpression(341) into VariableDeclarationFragment(342) at 1", "Insert SimpleName: CodingErrorAction(344) into SimpleType: CodingErrorAction(345) at 0", "Update SimpleName: timeout(309) to unmappableInputAction", "Insert ConditionalExpression(360) into VariableDeclarationFragment(361) at 1", "Insert SimpleName: charset(363) into InfixExpression: !=(365) at 0", "Insert NullLiteral(364) into InfixExpression: !=(365) at 1", "Insert ExpressionStatement(371) into Block(398) at 0", "Move ExpressionStatement(324) into Block(398) at 1", "Insert ExpressionStatement(381) into Block(398) at 2", "Insert ExpressionStatement(387) into Block(398) at 3", "Insert ExpressionStatement(392) into Block(398) at 4", "Insert ExpressionStatement(397) into Block(398) at 5", "Insert SimpleName: chardecoder(409) into ClassInstanceCreation(422) at 4", "Insert SimpleName: charencoder(410) into ClassInstanceCreation(422) at 5", "Insert MethodInvocation(415) into ClassInstanceCreation(422) at 6", "Update SimpleName: responseFactory(135) to responseParserFactory", "Insert SimpleType: DefaultHttpResponseParserFactory(145) into ClassInstanceCreation(148) at 0", "Insert NullLiteral(146) into ClassInstanceCreation(148) at 1", "Insert SimpleName: responseFactory(147) into ClassInstanceCreation(148) at 2", "Update SimpleName: params(147) to config", "Insert SimpleName: HttpParamConfig(154) into MethodInvocation(157) at 0", "Insert SimpleName: getConnectionConfig(155) into MethodInvocation(157) at 1", "Insert SimpleName: params(156) into MethodInvocation(157) at 2", "Insert InfixExpression: !=(210) into ConditionalExpression(213) at 0", "Insert SimpleName: allocator(211) into ConditionalExpression(213) at 1", "Insert QualifiedName: HeapByteBufferAllocator.INSTANCE(212) into ConditionalExpression(213) at 2", "Update SimpleName: params(221) to config", "Insert InfixExpression: !=(231) into ConditionalExpression(234) at 0", "Insert SimpleName: config(232) into ConditionalExpression(234) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(233) into ConditionalExpression(234) at 2", "Insert FieldAccess(320) into MethodInvocation(322) at 0", "Insert SimpleName: getCharset(321) into MethodInvocation(322) at 1", "Insert InfixExpression: !=(334) into ConditionalExpression(341) at 0", "Insert MethodInvocation(339) into ConditionalExpression(341) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(340) into ConditionalExpression(341) at 2", "Insert InfixExpression: !=(353) into ConditionalExpression(360) at 0", "Insert MethodInvocation(358) into ConditionalExpression(360) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(359) into ConditionalExpression(360) at 2", "Insert Assignment: =(370) into ExpressionStatement(371) at 0", "Insert MethodInvocation(380) into ExpressionStatement(381) at 0", "Insert Assignment: =(386) into ExpressionStatement(387) at 0", "Insert MethodInvocation(391) into ExpressionStatement(392) at 0", "Insert MethodInvocation(396) into ExpressionStatement(397) at 0", "Insert FieldAccess(413) into MethodInvocation(415) at 0", "Insert SimpleName: getMessageConstraints(414) into MethodInvocation(415) at 1", "Insert SimpleName: DefaultHttpResponseParserFactory(144) into SimpleType: DefaultHttpResponseParserFactory(145) at 0", "Insert SimpleName: allocator(208) into InfixExpression: !=(210) at 0", "Insert NullLiteral(209) into InfixExpression: !=(210) at 1", "Insert SimpleName: config(229) into InfixExpression: !=(231) at 0", "Insert NullLiteral(230) into InfixExpression: !=(231) at 1", "Move ThisExpression(286) into FieldAccess(320) at 0", "Update SimpleName: params(287) to config", "Move SimpleName: params(287) into FieldAccess(320) at 1", "Insert MethodInvocation(332) into InfixExpression: !=(334) at 0", "Insert NullLiteral(333) into InfixExpression: !=(334) at 1", "Move FieldAccess(298) into MethodInvocation(339) at 0", "Insert SimpleName: getMalformedInputAction(338) into MethodInvocation(339) at 1", "Insert MethodInvocation(351) into InfixExpression: !=(353) at 0", "Insert NullLiteral(352) into InfixExpression: !=(353) at 1", "Move FieldAccess(314) into MethodInvocation(358) at 0", "Insert SimpleName: getUnmappableInputAction(357) into MethodInvocation(358) at 1", "Insert SimpleName: chardecoder(366) into Assignment: =(370) at 0", "Insert MethodInvocation(369) into Assignment: =(370) at 1", "Update SimpleName: conn(320) to chardecoder", "Update SimpleName: setSocketTimeout(321) to onMalformedInput", "Update SimpleName: timeout(322) to malformedInputAction", "Insert SimpleName: chardecoder(377) into MethodInvocation(380) at 0", "Insert SimpleName: onUnmappableCharacter(378) into MethodInvocation(380) at 1", "Insert SimpleName: unmappableInputAction(379) into MethodInvocation(380) at 2", "Insert SimpleName: charencoder(382) into Assignment: =(386) at 0", "Insert MethodInvocation(385) into Assignment: =(386) at 1", "Insert SimpleName: charencoder(388) into MethodInvocation(391) at 0", "Insert SimpleName: onMalformedInput(389) into MethodInvocation(391) at 1", "Insert SimpleName: malformedInputAction(390) into MethodInvocation(391) at 2", "Insert SimpleName: charencoder(393) into MethodInvocation(396) at 0", "Insert SimpleName: onUnmappableCharacter(394) into MethodInvocation(396) at 1", "Insert SimpleName: unmappableInputAction(395) into MethodInvocation(396) at 2", "Insert ThisExpression(411) into FieldAccess(413) at 0", "Insert SimpleName: config(412) into FieldAccess(413) at 1", "Insert FieldAccess(330) into MethodInvocation(332) at 0", "Update SimpleName: session(295) to getMalformedInputAction", "Move SimpleName: session(295) into MethodInvocation(332) at 1", "Update SimpleName: responseFactory(297) to config", "Insert FieldAccess(349) into MethodInvocation(351) at 0", "Update SimpleName: getInt(311) to getUnmappableInputAction", "Move SimpleName: getInt(311) into MethodInvocation(351) at 1", "Update SimpleName: params(313) to config", "Insert SimpleName: charset(367) into MethodInvocation(369) at 0", "Insert SimpleName: newDecoder(368) into MethodInvocation(369) at 1", "Insert SimpleName: charset(383) into MethodInvocation(385) at 0", "Insert SimpleName: newEncoder(384) into MethodInvocation(385) at 1", "Insert ThisExpression(328) into FieldAccess(330) at 0", "Insert SimpleName: config(329) into FieldAccess(330) at 1", "Insert ThisExpression(347) into FieldAccess(349) at 0", "Insert SimpleName: config(348) into FieldAccess(349) at 1", "Delete Modifier: private(76)", "Delete Modifier: final(77)", "Delete SimpleType: HttpParams(79)", "Delete SimpleName: params(80)", "Delete VariableDeclarationFragment(81)", "Delete FieldDeclaration(82)", "Delete SimpleName: responseFactory(137)", "Delete SimpleName: params(149)", "Delete ThisExpression(152)", "Delete SimpleName: responseParserFactory(153)", "Delete FieldAccess(154)", "Delete NullLiteral(155)", "Delete Assignment: =(156)", "Delete ExpressionStatement(157)", "Delete ThisExpression(198)", "Delete SimpleName: responseFactory(199)", "Delete FieldAccess(200)", "Delete SimpleName: responseFactory(201)", "Delete Assignment: =(202)", "Delete ExpressionStatement(203)", "Delete ThisExpression(204)", "Delete SimpleName: allocator(205)", "Delete FieldAccess(206)", "Delete SimpleName: allocator(207)", "Delete NullLiteral(223)", "Delete Modifier: public(185)", "Delete SimpleName: DefaultNHttpClientConnectionFactory(186)", "Delete MethodDeclaration(227)", "Delete SimpleName: createConnection(294)", "Delete ThisExpression(302)", "Delete SimpleName: params(303)", "Delete FieldAccess(304)", "Delete MethodInvocation(305)", "Delete PrimitiveType: int(308)", "Delete SimpleName: Config(310)", "Delete QualifiedName: CoreConnectionPNames.SO_TIMEOUT(315)", "Delete NumberLiteral: 0(316)", "Delete MethodInvocation(317)", "Delete NullLiteral(340)", "Delete NullLiteral(341)", "Delete NullLiteral(342)", "Delete FieldAccess(288)", "Delete NullLiteral(289)", "Delete InfixExpression: !=(290)", "Delete SimpleName: conn(325)", "Delete ReturnStatement(326)", "Delete Block(327)", "Delete Block(348)", "Delete IfStatement(349)"]}}, {"DefaultNHttpServerConnection_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from Config to HttpParamConfig", "operations": ["UPD SimpleName: Config from Config to HttpParamConfig"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 2", "MOV SimpleName: getInt to MethodInvocation at 1", "MOV SimpleName: Config to MethodInvocation at 0"]}, {"root": "UPDATE from getInt to getMessageConstraints", "operations": ["UPD SimpleName: getInt from getInt to getMessageConstraints"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: setMaxLineLength", "DEL QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT", "DEL SimpleName: custom", "DEL MethodInvocation", "DEL QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH", "DEL SimpleName: getInt", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL SimpleName: MessageConstraints", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL SimpleName: Config", "DEL SimpleName: build", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: params", "DEL PrefixExpression: -", "DEL SimpleName: setMaxHeaderCount", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"DefaultNHttpServerConnection_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(1218) at 14", "Update QualifiedName: org.apache.http.impl.MessageConstraints(26) to org.apache.http.config.MessageConstraints", "Update QualifiedName: org.apache.http.params.Config(70) to org.apache.http.params.HttpParamConfig", "Insert MethodInvocation(537) into VariableDeclarationFragment(538) at 1", "Update SimpleName: Config(540) to HttpParamConfig", "Move SimpleName: Config(540) into MethodInvocation(537) at 0", "Update SimpleName: getInt(541) to getMessageConstraints", "Move SimpleName: getInt(541) into MethodInvocation(537) at 1", "Move SimpleName: params(542) into MethodInvocation(537) at 2", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(72)", "Delete ImportDeclaration(73)", "Delete SimpleName: MessageConstraints(536)", "Delete SimpleName: custom(537)", "Delete MethodInvocation(538)", "Delete SimpleName: setMaxLineLength(539)", "Delete QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH(543)", "Delete NumberLiteral: 1(544)", "Delete PrefixExpression: -(545)", "Delete MethodInvocation(546)", "Delete MethodInvocation(547)", "Delete SimpleName: setMaxHeaderCount(548)", "Delete SimpleName: Config(549)", "Delete SimpleName: getInt(550)", "Delete SimpleName: params(551)", "Delete QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT(552)", "Delete NumberLiteral: 1(553)", "Delete PrefixExpression: -(554)", "Delete MethodInvocation(555)", "Delete MethodInvocation(556)", "Delete SimpleName: build(557)", "Delete MethodInvocation(558)"]}}, {"DefaultNHttpServerConnectionFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.nio.charset.CharsetDecoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 9"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: DefaultNHttpServerConnectionFactory to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from HttpParams to ConnectionConfig", "operations": ["UPD SimpleName: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleName: HttpRequestFactory from HttpRequestFactory to ConnectionConfig", "UPD SimpleType: HttpRequestFactory from HttpRequestFactory to ConnectionConfig"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Block to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "UPDATE from params to config", "operations": ["UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: requestFactory from requestFactory to config", "UPD SimpleName: params from params to config", "UPD SimpleName: requestFactory from requestFactory to config", "UPD SimpleName: params from params to config"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: CharsetEncoder to VariableDeclarationStatement at 0", "INS SimpleName: charencoder to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CharsetEncoder to SimpleType: CharsetEncoder at 0", "INS VariableDeclarationStatement to Block at 1", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: getCharset to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS SimpleName: charset to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS VariableDeclarationStatement to Block at 2", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 5", "INS SimpleName: charset to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: charset to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: charencoder to MethodInvocation at 0", "INS SimpleName: newEncoder to MethodInvocation at 1", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS SimpleName: charencoder to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS SimpleName: charencoder to Assignment: = at 0", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 5", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: newDecoder to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: charset to InfixExpression: != at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 6"]}, {"root": "MOVE from SimpleType: ConnectionConfig", "operations": ["MOV SimpleName: HttpParams to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 2", "operations": ["INS SimpleName: config to ConstructorInvocation at 2"]}, {"root": "UPDATE from DefaultNHttpServerConnection to CodingErrorAction", "operations": ["UPD SimpleType: DefaultNHttpServerConnection from DefaultNHttpServerConnection to CodingErrorAction", "UPD SimpleName: DefaultNHttpServerConnection from DefaultNHttpServerConnection to CodingErrorAction"]}, {"root": "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV NullLiteral to ClassInstanceCreation at 10"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: requestFactory to ClassInstanceCreation at 2", "INS SimpleName: DefaultHttpRequestParserFactory to SimpleType: DefaultHttpRequestParserFactory at 0", "INS SimpleType: DefaultHttpRequestParserFactory to ClassInstanceCreation at 0", "INS NullLiteral to ClassInstanceCreation at 1", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: HttpParamConfig to MethodInvocation at 0", "INS SimpleName: getConnectionConfig to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: params to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: session to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0", "MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS QualifiedName: HeapByteBufferAllocator.INSTANCE to ConditionalExpression at 2", "INS SimpleName: allocator to InfixExpression: != at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: allocator to ConditionalExpression at 1"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2", "INS SimpleName: config to InfixExpression: != at 0", "INS SimpleName: config to ConditionalExpression at 1"]}, {"root": "UPDATE from timeout to malformedInputAction", "operations": ["UPD SimpleName: timeout from timeout to malformedInputAction", "UPD SimpleName: conn from conn to malformedInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: config to FieldAccess at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from timeout to unmappableInputAction", "operations": ["UPD SimpleName: timeout from timeout to unmappableInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 4", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 5", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1", "INS MethodInvocation to ClassInstanceCreation at 6", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getMessageConstraints to MethodInvocation at 1"]}, {"root": "UPDATE from requestFactory to requestParserFactory", "operations": ["UPD SimpleName: requestFactory from requestFactory to requestParserFactory"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: params to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: getInt to MethodInvocation at 1"]}, {"root": "UPDATE from conn to chardecoder", "operations": ["UPD SimpleName: conn from conn to chardecoder"]}, {"root": "UPDATE from setSocketTimeout to onMalformedInput", "operations": ["UPD SimpleName: setSocketTimeout from setSocketTimeout to onMalformedInput"]}, {"root": "UPDATE from session to getMalformedInputAction", "operations": ["UPD SimpleName: session from session to getMalformedInputAction"]}, {"root": "UPDATE from getInt to getUnmappableInputAction", "operations": ["UPD SimpleName: getInt from getInt to getUnmappableInputAction"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: HttpParams", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: params"]}, {"root": "DEL SimpleName: requestFactory", "operations": ["DEL SimpleName: requestFactory"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL NullLiteral", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: requestParserFactory", "DEL FieldAccess"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: requestFactory", "DEL ThisExpression", "DEL SimpleName: requestFactory", "DEL Assignment: =", "DEL ExpressionStatement", "DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: allocator"]}, {"root": "DEL SimpleName: allocator", "operations": ["DEL SimpleName: allocator"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: DefaultNHttpServerConnectionFactory", "DEL MethodDeclaration", "DEL Modifier: public"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: createConnection", "DEL MethodInvocation", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: params"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodInvocation", "operations": ["DEL NumberLiteral: 0", "DEL SimpleName: Config", "DEL MethodInvocation", "DEL QualifiedName: CoreConnectionPNames.SO_TIMEOUT"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL NullLiteral", "DEL FieldAccess", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: conn", "DEL Block"]}]}}, {"DefaultNHttpServerConnectionFactory_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(427) at 4", "Insert ImportDeclaration(3) into CompilationUnit(427) at 1", "Insert ImportDeclaration(5) into CompilationUnit(427) at 2", "Insert ImportDeclaration(7) into CompilationUnit(427) at 3", "Insert ImportDeclaration(9) into CompilationUnit(427) at 4", "Move FieldDeclaration(68) into TypeDeclaration: class(426) at 9", "Insert QualifiedName: java.nio.charset.Charset(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.nio.charset.CharsetDecoder(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.nio.charset.CharsetEncoder(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(8) into ImportDeclaration(9) at 0", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(24) to org.apache.http.config.ConnectionConfig", "Update QualifiedName: org.apache.http.params.Config(26) to org.apache.http.params.HttpParamConfig", "Insert MethodDeclaration(277) into TypeDeclaration: class(426) at 12", "Update SimpleType: HttpRequestFactory(65) to ConnectionConfig", "Move Javadoc(223) into MethodDeclaration(277) at 0", "Insert Modifier: public(226) into MethodDeclaration(277) at 1", "Insert SimpleName: DefaultNHttpServerConnectionFactory(227) into MethodDeclaration(277) at 2", "Move SingleVariableDeclaration(230) into MethodDeclaration(277) at 3", "Move SingleVariableDeclaration(235) into MethodDeclaration(277) at 4", "Insert SingleVariableDeclaration(242) into MethodDeclaration(277) at 5", "Move Block(265) into MethodDeclaration(277) at 6", "Insert SingleVariableDeclaration(287) into MethodDeclaration(293) at 3", "Update SimpleName: HttpRequestFactory(64) to ConnectionConfig", "Update SimpleName: requestFactory(66) to config", "Insert Modifier: final(238) into SingleVariableDeclaration(242) at 0", "Insert SimpleType: ConnectionConfig(240) into SingleVariableDeclaration(242) at 1", "Insert SimpleName: config(241) into SingleVariableDeclaration(242) at 2", "Insert Modifier: final(283) into SingleVariableDeclaration(287) at 0", "Insert SimpleType: ConnectionConfig(285) into SingleVariableDeclaration(287) at 1", "Insert SimpleName: config(286) into SingleVariableDeclaration(287) at 2", "Insert VariableDeclarationStatement(308) into Block(424) at 0", "Insert VariableDeclarationStatement(314) into Block(424) at 1", "Insert VariableDeclarationStatement(324) into Block(424) at 2", "Move VariableDeclarationStatement(307) into Block(424) at 3", "Move VariableDeclarationStatement(319) into Block(424) at 4", "Insert IfStatement(399) into Block(424) at 5", "Move ReturnStatement(347) into Block(424) at 6", "Update SimpleName: HttpParams(78) to ConnectionConfig", "Move SimpleName: HttpParams(78) into SimpleType: ConnectionConfig(240) at 0", "Insert SimpleName: ConnectionConfig(284) into SimpleType: ConnectionConfig(285) at 0", "Insert SimpleName: config(290) into ConstructorInvocation(291) at 2", "Insert SimpleType: CharsetDecoder(304) into VariableDeclarationStatement(308) at 0", "Insert VariableDeclarationFragment(307) into VariableDeclarationStatement(308) at 1", "Insert SimpleType: CharsetEncoder(310) into VariableDeclarationStatement(314) at 0", "Insert VariableDeclarationFragment(313) into VariableDeclarationStatement(314) at 1", "Insert SimpleType: Charset(316) into VariableDeclarationStatement(324) at 0", "Insert VariableDeclarationFragment(323) into VariableDeclarationStatement(324) at 1", "Update SimpleType: DefaultNHttpServerConnection(292) to CodingErrorAction", "Insert SimpleType: CodingErrorAction(345) into VariableDeclarationStatement(362) at 0", "Insert InfixExpression: !=(365) into IfStatement(399) at 0", "Insert Block(398) into IfStatement(399) at 1", "Move NullLiteral(339) into ClassInstanceCreation(422) at 10", "Insert ClassInstanceCreation(142) into Assignment: =(143) at 1", "Insert MethodInvocation(157) into Assignment: =(158) at 1", "Move FieldAccess(301) into Assignment: =(253) at 0", "Insert ConditionalExpression(252) into Assignment: =(253) at 1", "Insert ConditionalExpression(273) into Assignment: =(274) at 1", "Insert SimpleName: CharsetDecoder(303) into SimpleType: CharsetDecoder(304) at 0", "Insert SimpleName: chardecoder(305) into VariableDeclarationFragment(307) at 0", "Insert NullLiteral(306) into VariableDeclarationFragment(307) at 1", "Insert SimpleName: CharsetEncoder(309) into SimpleType: CharsetEncoder(310) at 0", "Insert SimpleName: charencoder(311) into VariableDeclarationFragment(313) at 0", "Insert NullLiteral(312) into VariableDeclarationFragment(313) at 1", "Insert SimpleName: Charset(315) into SimpleType: Charset(316) at 0", "Insert SimpleName: charset(317) into VariableDeclarationFragment(323) at 0", "Insert MethodInvocation(322) into VariableDeclarationFragment(323) at 1", "Update SimpleName: DefaultNHttpServerConnection(291) to CodingErrorAction", "Update SimpleName: conn(293) to malformedInputAction", "Insert ConditionalExpression(341) into VariableDeclarationFragment(342) at 1", "Insert SimpleName: CodingErrorAction(344) into SimpleType: CodingErrorAction(345) at 0", "Update SimpleName: timeout(309) to unmappableInputAction", "Insert ConditionalExpression(360) into VariableDeclarationFragment(361) at 1", "Insert SimpleName: charset(363) into InfixExpression: !=(365) at 0", "Insert NullLiteral(364) into InfixExpression: !=(365) at 1", "Insert ExpressionStatement(371) into Block(398) at 0", "Move ExpressionStatement(324) into Block(398) at 1", "Insert ExpressionStatement(381) into Block(398) at 2", "Insert ExpressionStatement(387) into Block(398) at 3", "Insert ExpressionStatement(392) into Block(398) at 4", "Insert ExpressionStatement(397) into Block(398) at 5", "Insert SimpleName: chardecoder(409) into ClassInstanceCreation(422) at 4", "Insert SimpleName: charencoder(410) into ClassInstanceCreation(422) at 5", "Insert MethodInvocation(415) into ClassInstanceCreation(422) at 6", "Update SimpleName: requestFactory(135) to requestParserFactory", "Insert SimpleType: DefaultHttpRequestParserFactory(139) into ClassInstanceCreation(142) at 0", "Insert NullLiteral(140) into ClassInstanceCreation(142) at 1", "Insert SimpleName: requestFactory(141) into ClassInstanceCreation(142) at 2", "Update SimpleName: params(147) to config", "Insert SimpleName: HttpParamConfig(154) into MethodInvocation(157) at 0", "Insert SimpleName: getConnectionConfig(155) into MethodInvocation(157) at 1", "Insert SimpleName: params(156) into MethodInvocation(157) at 2", "Insert InfixExpression: !=(249) into ConditionalExpression(252) at 0", "Insert SimpleName: allocator(250) into ConditionalExpression(252) at 1", "Insert QualifiedName: HeapByteBufferAllocator.INSTANCE(251) into ConditionalExpression(252) at 2", "Update SimpleName: params(260) to config", "Insert InfixExpression: !=(270) into ConditionalExpression(273) at 0", "Insert SimpleName: config(271) into ConditionalExpression(273) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(272) into ConditionalExpression(273) at 2", "Insert FieldAccess(320) into MethodInvocation(322) at 0", "Insert SimpleName: getCharset(321) into MethodInvocation(322) at 1", "Insert InfixExpression: !=(334) into ConditionalExpression(341) at 0", "Insert MethodInvocation(339) into ConditionalExpression(341) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(340) into ConditionalExpression(341) at 2", "Insert InfixExpression: !=(353) into ConditionalExpression(360) at 0", "Insert MethodInvocation(358) into ConditionalExpression(360) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(359) into ConditionalExpression(360) at 2", "Insert Assignment: =(370) into ExpressionStatement(371) at 0", "Insert MethodInvocation(380) into ExpressionStatement(381) at 0", "Insert Assignment: =(386) into ExpressionStatement(387) at 0", "Insert MethodInvocation(391) into ExpressionStatement(392) at 0", "Insert MethodInvocation(396) into ExpressionStatement(397) at 0", "Insert FieldAccess(413) into MethodInvocation(415) at 0", "Insert SimpleName: getMessageConstraints(414) into MethodInvocation(415) at 1", "Insert SimpleName: DefaultHttpRequestParserFactory(138) into SimpleType: DefaultHttpRequestParserFactory(139) at 0", "Insert SimpleName: allocator(247) into InfixExpression: !=(249) at 0", "Insert NullLiteral(248) into InfixExpression: !=(249) at 1", "Insert SimpleName: config(268) into InfixExpression: !=(270) at 0", "Insert NullLiteral(269) into InfixExpression: !=(270) at 1", "Move ThisExpression(286) into FieldAccess(320) at 0", "Update SimpleName: params(287) to config", "Move SimpleName: params(287) into FieldAccess(320) at 1", "Insert MethodInvocation(332) into InfixExpression: !=(334) at 0", "Insert NullLiteral(333) into InfixExpression: !=(334) at 1", "Move FieldAccess(298) into MethodInvocation(339) at 0", "Insert SimpleName: getMalformedInputAction(338) into MethodInvocation(339) at 1", "Insert MethodInvocation(351) into InfixExpression: !=(353) at 0", "Insert NullLiteral(352) into InfixExpression: !=(353) at 1", "Move FieldAccess(314) into MethodInvocation(358) at 0", "Insert SimpleName: getUnmappableInputAction(357) into MethodInvocation(358) at 1", "Insert SimpleName: chardecoder(366) into Assignment: =(370) at 0", "Insert MethodInvocation(369) into Assignment: =(370) at 1", "Update SimpleName: conn(320) to chardecoder", "Update SimpleName: setSocketTimeout(321) to onMalformedInput", "Update SimpleName: timeout(322) to malformedInputAction", "Insert SimpleName: chardecoder(377) into MethodInvocation(380) at 0", "Insert SimpleName: onUnmappableCharacter(378) into MethodInvocation(380) at 1", "Insert SimpleName: unmappableInputAction(379) into MethodInvocation(380) at 2", "Insert SimpleName: charencoder(382) into Assignment: =(386) at 0", "Insert MethodInvocation(385) into Assignment: =(386) at 1", "Insert SimpleName: charencoder(388) into MethodInvocation(391) at 0", "Insert SimpleName: onMalformedInput(389) into MethodInvocation(391) at 1", "Insert SimpleName: malformedInputAction(390) into MethodInvocation(391) at 2", "Insert SimpleName: charencoder(393) into MethodInvocation(396) at 0", "Insert SimpleName: onUnmappableCharacter(394) into MethodInvocation(396) at 1", "Insert SimpleName: unmappableInputAction(395) into MethodInvocation(396) at 2", "Insert ThisExpression(411) into FieldAccess(413) at 0", "Insert SimpleName: config(412) into FieldAccess(413) at 1", "Insert FieldAccess(330) into MethodInvocation(332) at 0", "Update SimpleName: session(295) to getMalformedInputAction", "Move SimpleName: session(295) into MethodInvocation(332) at 1", "Update SimpleName: requestFactory(297) to config", "Insert FieldAccess(349) into MethodInvocation(351) at 0", "Update SimpleName: getInt(311) to getUnmappableInputAction", "Move SimpleName: getInt(311) into MethodInvocation(351) at 1", "Update SimpleName: params(313) to config", "Insert SimpleName: charset(367) into MethodInvocation(369) at 0", "Insert SimpleName: newDecoder(368) into MethodInvocation(369) at 1", "Insert SimpleName: charset(383) into MethodInvocation(385) at 0", "Insert SimpleName: newEncoder(384) into MethodInvocation(385) at 1", "Insert ThisExpression(328) into FieldAccess(330) at 0", "Insert SimpleName: config(329) into FieldAccess(330) at 1", "Insert ThisExpression(347) into FieldAccess(349) at 0", "Insert SimpleName: config(348) into FieldAccess(349) at 1", "Delete Modifier: private(76)", "Delete Modifier: final(77)", "Delete SimpleType: HttpParams(79)", "Delete SimpleName: params(80)", "Delete VariableDeclarationFragment(81)", "Delete FieldDeclaration(82)", "Delete SimpleName: requestFactory(137)", "Delete SimpleName: params(149)", "Delete ThisExpression(152)", "Delete SimpleName: requestParserFactory(153)", "Delete FieldAccess(154)", "Delete NullLiteral(155)", "Delete Assignment: =(156)", "Delete ExpressionStatement(157)", "Delete ThisExpression(237)", "Delete SimpleName: requestFactory(238)", "Delete FieldAccess(239)", "Delete SimpleName: requestFactory(240)", "Delete Assignment: =(241)", "Delete ExpressionStatement(242)", "Delete ThisExpression(243)", "Delete SimpleName: allocator(244)", "Delete FieldAccess(245)", "Delete SimpleName: allocator(246)", "Delete NullLiteral(262)", "Delete Modifier: public(224)", "Delete SimpleName: DefaultNHttpServerConnectionFactory(225)", "Delete MethodDeclaration(266)", "Delete SimpleName: createConnection(294)", "Delete ThisExpression(302)", "Delete SimpleName: params(303)", "Delete FieldAccess(304)", "Delete MethodInvocation(305)", "Delete PrimitiveType: int(308)", "Delete SimpleName: Config(310)", "Delete QualifiedName: CoreConnectionPNames.SO_TIMEOUT(315)", "Delete NumberLiteral: 0(316)", "Delete MethodInvocation(317)", "Delete NullLiteral(340)", "Delete NullLiteral(341)", "Delete NullLiteral(345)", "Delete FieldAccess(288)", "Delete NullLiteral(289)", "Delete InfixExpression: !=(290)", "Delete SimpleName: conn(325)", "Delete ReturnStatement(326)", "Delete Block(327)", "Delete Block(348)", "Delete IfStatement(349)"]}}, {"NHttpConnectionBase_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 23"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"NHttpConnectionBase_diff": {"operations": ["Move ImportDeclaration(53) into CompilationUnit(1815) at 23", "Update QualifiedName: org.apache.http.impl.MessageConstraints(52) to org.apache.http.config.MessageConstraints"]}}, {"SSLNHttpClientConnectionFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "UPDATE from org.apache.http.message.BasicLineParser to java.nio.charset.CharsetDecoder", "operations": ["UPD QualifiedName: org.apache.http.message.BasicLineParser from org.apache.http.message.BasicLineParser to java.nio.charset.CharsetDecoder"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: SSLNHttpClientConnectionFactory to MethodDeclaration at 2"]}, {"root": "UPDATE from HttpResponseFactory to ConnectionConfig", "operations": ["UPD SimpleType: HttpResponseFactory from HttpResponseFactory to ConnectionConfig", "UPD SimpleName: HttpResponseFactory from HttpResponseFactory to ConnectionConfig", "UPD SimpleName: HttpParams from HttpParams to ConnectionConfig"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 8"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from params to config", "operations": ["UPD SimpleName: params from params to config", "UPD SimpleName: allocator from allocator to config", "UPD SimpleName: responseFactory from responseFactory to config", "UPD SimpleName: responseFactory from responseFactory to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: responseFactory from responseFactory to config", "UPD SimpleName: responseFactory from responseFactory to config"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0", "INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS SimpleName: getCharset to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS SimpleName: charset to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: malformedInputAction to VariableDeclarationFragment at 0", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS MethodInvocation to InfixExpression: != at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 5"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: charencoder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: charencoder to MethodInvocation at 0", "INS SimpleName: charset to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: charset to MethodInvocation at 0", "INS SimpleName: newDecoder to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS ExpressionStatement to Block at 5", "INS ExpressionStatement to Block at 2", "INS SimpleName: charset to InfixExpression: != at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: newEncoder to MethodInvocation at 1", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: charencoder to Assignment: = at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS IfStatement to Block at 6", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 7"]}, {"root": "MOVE from SimpleType: ConnectionConfig", "operations": ["MOV SimpleName: HttpParams to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 4", "operations": ["INS SimpleName: config to ConstructorInvocation at 4"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 4", "operations": ["INS SimpleName: config to ConstructorInvocation at 4"]}, {"root": "UPDATE from DefaultNHttpClientConnection to CharsetEncoder", "operations": ["UPD SimpleName: DefaultNHttpClientConnection from DefaultNHttpClientConnection to CharsetEncoder", "UPD SimpleType: DefaultNHttpClientConnection from DefaultNHttpClientConnection to CharsetEncoder"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: DefaultNHttpClientConnection to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: responseFactory to ClassInstanceCreation at 2", "INS SimpleName: DefaultHttpResponseParserFactory to SimpleType: DefaultHttpResponseParserFactory at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: DefaultHttpResponseParserFactory to ClassInstanceCreation at 0", "INS NullLiteral to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: params to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getConnectionConfig to MethodInvocation at 1", "INS SimpleName: HttpParamConfig to MethodInvocation at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS NullLiteral to ClassInstanceCreation at 1", "INS SimpleName: responseFactory to ClassInstanceCreation at 2"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS SimpleName: config to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS ConditionalExpression to Assignment: = at 1"]}, {"root": "UPDATE from conn to charencoder", "operations": ["UPD SimpleName: conn from conn to charencoder"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: conn to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from timeout to unmappableInputAction", "operations": ["UPD SimpleName: timeout from timeout to unmappableInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: config to FieldAccess at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 4", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 5", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getMessageConstraints to MethodInvocation at 1", "INS SimpleName: config to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ClassInstanceCreation at 6"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: DefaultHttpResponseParserFactory to ClassInstanceCreation at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV SimpleName: responseFactory to ConditionalExpression at 1", "MOV InfixExpression: != to ConditionalExpression at 0", "MOV QualifiedName: DefaultHttpResponseFactory.INSTANCE to ConditionalExpression at 2"]}, {"root": "UPDATE from DefaultHttpResponseFactory.INSTANCE to ConnectionConfig.DEFAULT", "operations": ["UPD QualifiedName: DefaultHttpResponseFactory.INSTANCE from DefaultHttpResponseFactory.INSTANCE to ConnectionConfig.DEFAULT"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV FieldAccess to MethodInvocation at 0", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: getInt to MethodInvocation at 1"]}, {"root": "UPDATE from conn to chardecoder", "operations": ["UPD SimpleName: conn from conn to chardecoder"]}, {"root": "UPDATE from setSocketTimeout to onMalformedInput", "operations": ["UPD SimpleName: setSocketTimeout from setSocketTimeout to onMalformedInput"]}, {"root": "UPDATE from timeout to malformedInputAction", "operations": ["UPD SimpleName: timeout from timeout to malformedInputAction"]}, {"root": "UPDATE from getInt to getUnmappableInputAction", "operations": ["UPD SimpleName: getInt from getInt to getUnmappableInputAction"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleType: HttpParams", "DEL SimpleName: params", "DEL Modifier: private", "DEL Modifier: final"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL SimpleName: responseFactory", "DEL FieldAccess"]}, {"root": "DEL SimpleName: responseFactory", "operations": ["DEL SimpleName: responseFactory"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NullLiteral", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL SimpleName: responseFactory", "DEL ThisExpression"]}, {"root": "DEL SimpleName: responseFactory", "operations": ["DEL SimpleName: responseFactory"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL QualifiedName: BasicLineParser.INSTANCE", "DEL ConditionalExpression"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL SimpleName: params", "DEL NullLiteral", "DEL ExpressionStatement", "DEL Assignment: =", "DEL FieldAccess"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleName: SSLNHttpClientConnectionFactory"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: Config", "DEL NumberLiteral: 0", "DEL QualifiedName: CoreConnectionPNames.SO_TIMEOUT", "DEL MethodInvocation"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: createConnection", "DEL SimpleName: ssliosession", "DEL NullLiteral", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: conn", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: params", "DEL InfixExpression: !=", "DEL Block"]}]}}, {"SSLNHttpClientConnectionFactory_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(675) at 1", "Move ImportDeclaration(35) into CompilationUnit(675) at 6", "Insert ImportDeclaration(3) into CompilationUnit(675) at 1", "Insert ImportDeclaration(7) into CompilationUnit(675) at 3", "Insert ImportDeclaration(9) into CompilationUnit(675) at 4", "Move FieldDeclaration(78) into TypeDeclaration: class(674) at 11", "Insert QualifiedName: java.nio.charset.Charset(2) into ImportDeclaration(3) at 0", "Update QualifiedName: org.apache.http.message.BasicLineParser(14) to java.nio.charset.CharsetDecoder", "Insert QualifiedName: java.nio.charset.CharsetEncoder(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(8) into ImportDeclaration(9) at 0", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(34) to org.apache.http.config.ConnectionConfig", "Update QualifiedName: org.apache.http.params.Config(36) to org.apache.http.params.HttpParamConfig", "Insert MethodDeclaration(378) into TypeDeclaration: class(674) at 15", "Update SimpleType: HttpResponseFactory(75) to ConnectionConfig", "Move ExpressionStatement(191) into Block(210) at 8", "Insert SingleVariableDeclaration(303) into MethodDeclaration(350) at 7", "Move ExpressionStatement(317) into Block(349) at 5", "Move Javadoc(354) into MethodDeclaration(378) at 0", "Insert Modifier: public(354) into MethodDeclaration(378) at 1", "Insert SimpleName: SSLNHttpClientConnectionFactory(355) into MethodDeclaration(378) at 2", "Move SingleVariableDeclaration(361) into MethodDeclaration(378) at 3", "Move SingleVariableDeclaration(366) into MethodDeclaration(378) at 4", "Insert SingleVariableDeclaration(370) into MethodDeclaration(378) at 5", "Move Block(372) into MethodDeclaration(378) at 6", "Insert SingleVariableDeclaration(388) into MethodDeclaration(396) at 3", "Update SimpleName: HttpResponseFactory(74) to ConnectionConfig", "Update SimpleName: responseFactory(76) to config", "Insert Modifier: final(299) into SingleVariableDeclaration(303) at 0", "Insert SimpleType: ConnectionConfig(301) into SingleVariableDeclaration(303) at 1", "Insert SimpleName: config(302) into SingleVariableDeclaration(303) at 2", "Insert Modifier: final(366) into SingleVariableDeclaration(370) at 0", "Insert SimpleType: ConnectionConfig(368) into SingleVariableDeclaration(370) at 1", "Insert SimpleName: config(369) into SingleVariableDeclaration(370) at 2", "Insert Modifier: final(384) into SingleVariableDeclaration(388) at 0", "Insert SimpleType: ConnectionConfig(386) into SingleVariableDeclaration(388) at 1", "Insert SimpleName: config(387) into SingleVariableDeclaration(388) at 2", "Insert VariableDeclarationStatement(556) into Block(672) at 1", "Insert VariableDeclarationStatement(562) into Block(672) at 2", "Insert VariableDeclarationStatement(572) into Block(672) at 3", "Insert VariableDeclarationStatement(591) into Block(672) at 4", "Move VariableDeclarationStatement(573) into Block(672) at 5", "Insert IfStatement(647) into Block(672) at 6", "Move ReturnStatement(601) into Block(672) at 7", "Insert SimpleName: ConnectionConfig(300) into SimpleType: ConnectionConfig(301) at 0", "Update SimpleName: HttpParams(102) to ConnectionConfig", "Move SimpleName: HttpParams(102) into SimpleType: ConnectionConfig(368) at 0", "Insert SimpleName: config(375) into ConstructorInvocation(376) at 4", "Insert SimpleName: ConnectionConfig(385) into SimpleType: ConnectionConfig(386) at 0", "Insert SimpleName: config(393) into ConstructorInvocation(394) at 4", "Insert SimpleType: CharsetDecoder(552) into VariableDeclarationStatement(556) at 0", "Insert VariableDeclarationFragment(555) into VariableDeclarationStatement(556) at 1", "Update SimpleType: DefaultNHttpClientConnection(546) to CharsetEncoder", "Move SimpleType: DefaultNHttpClientConnection(546) into VariableDeclarationStatement(562) at 0", "Insert VariableDeclarationFragment(561) into VariableDeclarationStatement(562) at 1", "Insert SimpleType: Charset(564) into VariableDeclarationStatement(572) at 0", "Insert VariableDeclarationFragment(571) into VariableDeclarationStatement(572) at 1", "Insert SimpleType: CodingErrorAction(574) into VariableDeclarationStatement(591) at 0", "Insert VariableDeclarationFragment(590) into VariableDeclarationStatement(591) at 1", "Insert SimpleType: CodingErrorAction(593) into VariableDeclarationStatement(610) at 0", "Insert InfixExpression: !=(613) into IfStatement(647) at 0", "Insert Block(646) into IfStatement(647) at 1", "Move FieldAccess(206) into Assignment: =(199) at 0", "Insert ClassInstanceCreation(198) into Assignment: =(199) at 1", "Insert MethodInvocation(207) into Assignment: =(208) at 1", "Move FieldAccess(331) into Assignment: =(336) at 0", "Insert ClassInstanceCreation(335) into Assignment: =(336) at 1", "Insert FieldAccess(340) into Assignment: =(347) at 0", "Insert ConditionalExpression(346) into Assignment: =(347) at 1", "Insert SimpleName: CharsetDecoder(551) into SimpleType: CharsetDecoder(552) at 0", "Insert SimpleName: chardecoder(553) into VariableDeclarationFragment(555) at 0", "Insert NullLiteral(554) into VariableDeclarationFragment(555) at 1", "Update SimpleName: DefaultNHttpClientConnection(545) to CharsetEncoder", "Update SimpleName: conn(547) to charencoder", "Move SimpleName: conn(547) into VariableDeclarationFragment(561) at 0", "Insert NullLiteral(560) into VariableDeclarationFragment(561) at 1", "Insert SimpleName: Charset(563) into SimpleType: Charset(564) at 0", "Insert SimpleName: charset(565) into VariableDeclarationFragment(571) at 0", "Insert MethodInvocation(570) into VariableDeclarationFragment(571) at 1", "Insert SimpleName: CodingErrorAction(573) into SimpleType: CodingErrorAction(574) at 0", "Insert SimpleName: malformedInputAction(575) into VariableDeclarationFragment(590) at 0", "Insert ConditionalExpression(589) into VariableDeclarationFragment(590) at 1", "Insert SimpleName: CodingErrorAction(592) into SimpleType: CodingErrorAction(593) at 0", "Update SimpleName: timeout(563) to unmappableInputAction", "Insert ConditionalExpression(608) into VariableDeclarationFragment(609) at 1", "Insert SimpleName: charset(611) into InfixExpression: !=(613) at 0", "Insert NullLiteral(612) into InfixExpression: !=(613) at 1", "Insert ExpressionStatement(619) into Block(646) at 0", "Move ExpressionStatement(578) into Block(646) at 1", "Insert ExpressionStatement(629) into Block(646) at 2", "Insert ExpressionStatement(635) into Block(646) at 3", "Insert ExpressionStatement(640) into Block(646) at 4", "Insert ExpressionStatement(645) into Block(646) at 5", "Insert SimpleName: chardecoder(657) into ClassInstanceCreation(670) at 4", "Insert SimpleName: charencoder(658) into ClassInstanceCreation(670) at 5", "Insert MethodInvocation(663) into ClassInstanceCreation(670) at 6", "Insert SimpleType: DefaultHttpResponseParserFactory(195) into ClassInstanceCreation(198) at 0", "Insert NullLiteral(196) into ClassInstanceCreation(198) at 1", "Insert SimpleName: responseFactory(197) into ClassInstanceCreation(198) at 2", "Update SimpleName: params(199) to config", "Insert SimpleName: HttpParamConfig(204) into MethodInvocation(207) at 0", "Insert SimpleName: getConnectionConfig(205) into MethodInvocation(207) at 1", "Insert SimpleName: params(206) into MethodInvocation(207) at 2", "Move SimpleType: DefaultHttpResponseParserFactory(333) into ClassInstanceCreation(335) at 0", "Insert NullLiteral(333) into ClassInstanceCreation(335) at 1", "Insert SimpleName: responseFactory(334) into ClassInstanceCreation(335) at 2", "Insert ThisExpression(338) into FieldAccess(340) at 0", "Insert SimpleName: config(339) into FieldAccess(340) at 1", "Move InfixExpression: !=(337) into ConditionalExpression(346) at 0", "Update SimpleName: responseFactory(338) to config", "Move SimpleName: responseFactory(338) into ConditionalExpression(346) at 1", "Update QualifiedName: DefaultHttpResponseFactory.INSTANCE(339) to ConnectionConfig.DEFAULT", "Move QualifiedName: DefaultHttpResponseFactory.INSTANCE(339) into ConditionalExpression(346) at 2", "Move FieldAccess(552) into MethodInvocation(570) at 0", "Insert SimpleName: getCharset(569) into MethodInvocation(570) at 1", "Insert InfixExpression: !=(582) into ConditionalExpression(589) at 0", "Insert MethodInvocation(587) into ConditionalExpression(589) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(588) into ConditionalExpression(589) at 2", "Insert InfixExpression: !=(601) into ConditionalExpression(608) at 0", "Insert MethodInvocation(606) into ConditionalExpression(608) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(607) into ConditionalExpression(608) at 2", "Insert Assignment: =(618) into ExpressionStatement(619) at 0", "Insert MethodInvocation(628) into ExpressionStatement(629) at 0", "Insert Assignment: =(634) into ExpressionStatement(635) at 0", "Insert MethodInvocation(639) into ExpressionStatement(640) at 0", "Insert MethodInvocation(644) into ExpressionStatement(645) at 0", "Insert FieldAccess(661) into MethodInvocation(663) at 0", "Insert SimpleName: getMessageConstraints(662) into MethodInvocation(663) at 1", "Insert SimpleName: DefaultHttpResponseParserFactory(194) into SimpleType: DefaultHttpResponseParserFactory(195) at 0", "Update SimpleName: responseFactory(335) to config", "Update SimpleName: responseFactory(551) to config", "Insert MethodInvocation(580) into InfixExpression: !=(582) at 0", "Insert NullLiteral(581) into InfixExpression: !=(582) at 1", "Move FieldAccess(558) into MethodInvocation(587) at 0", "Insert SimpleName: getMalformedInputAction(586) into MethodInvocation(587) at 1", "Insert MethodInvocation(599) into InfixExpression: !=(601) at 0", "Insert NullLiteral(600) into InfixExpression: !=(601) at 1", "Move FieldAccess(568) into MethodInvocation(606) at 0", "Insert SimpleName: getUnmappableInputAction(605) into MethodInvocation(606) at 1", "Insert SimpleName: chardecoder(614) into Assignment: =(618) at 0", "Insert MethodInvocation(617) into Assignment: =(618) at 1", "Update SimpleName: conn(574) to chardecoder", "Update SimpleName: setSocketTimeout(575) to onMalformedInput", "Update SimpleName: timeout(576) to malformedInputAction", "Insert SimpleName: chardecoder(625) into MethodInvocation(628) at 0", "Insert SimpleName: onUnmappableCharacter(626) into MethodInvocation(628) at 1", "Insert SimpleName: unmappableInputAction(627) into MethodInvocation(628) at 2", "Insert SimpleName: charencoder(630) into Assignment: =(634) at 0", "Insert MethodInvocation(633) into Assignment: =(634) at 1", "Insert SimpleName: charencoder(636) into MethodInvocation(639) at 0", "Insert SimpleName: onMalformedInput(637) into MethodInvocation(639) at 1", "Insert SimpleName: malformedInputAction(638) into MethodInvocation(639) at 2", "Insert SimpleName: charencoder(641) into MethodInvocation(644) at 0", "Insert SimpleName: onUnmappableCharacter(642) into MethodInvocation(644) at 1", "Insert SimpleName: unmappableInputAction(643) into MethodInvocation(644) at 2", "Insert ThisExpression(659) into FieldAccess(661) at 0", "Insert SimpleName: config(660) into FieldAccess(661) at 1", "Move FieldAccess(555) into MethodInvocation(580) at 0", "Insert SimpleName: getMalformedInputAction(579) into MethodInvocation(580) at 1", "Update SimpleName: params(557) to config", "Insert FieldAccess(597) into MethodInvocation(599) at 0", "Update SimpleName: getInt(565) to getUnmappableInputAction", "Move SimpleName: getInt(565) into MethodInvocation(599) at 1", "Update SimpleName: params(567) to config", "Insert SimpleName: charset(615) into MethodInvocation(617) at 0", "Insert SimpleName: newDecoder(616) into MethodInvocation(617) at 1", "Insert SimpleName: charset(631) into MethodInvocation(633) at 0", "Insert SimpleName: newEncoder(632) into MethodInvocation(633) at 1", "Update SimpleName: allocator(554) to config", "Insert ThisExpression(595) into FieldAccess(597) at 0", "Insert SimpleName: config(596) into FieldAccess(597) at 1", "Delete Modifier: private(100)", "Delete Modifier: final(101)", "Delete SimpleType: HttpParams(103)", "Delete SimpleName: params(104)", "Delete VariableDeclarationFragment(105)", "Delete FieldDeclaration(106)", "Delete ThisExpression(186)", "Delete SimpleName: responseFactory(187)", "Delete FieldAccess(188)", "Delete SimpleName: responseFactory(189)", "Delete SimpleName: params(201)", "Delete NullLiteral(207)", "Delete Assignment: =(208)", "Delete ExpressionStatement(209)", "Delete ThisExpression(312)", "Delete SimpleName: responseFactory(313)", "Delete FieldAccess(314)", "Delete SimpleName: responseFactory(315)", "Delete QualifiedName: BasicLineParser.INSTANCE(334)", "Delete ConditionalExpression(340)", "Delete ClassInstanceCreation(341)", "Delete ThisExpression(344)", "Delete SimpleName: params(345)", "Delete FieldAccess(346)", "Delete NullLiteral(347)", "Delete Assignment: =(348)", "Delete ExpressionStatement(349)", "Delete Modifier: public(355)", "Delete SimpleName: SSLNHttpClientConnectionFactory(356)", "Delete MethodDeclaration(373)", "Delete PrimitiveType: int(562)", "Delete SimpleName: Config(564)", "Delete QualifiedName: CoreConnectionPNames.SO_TIMEOUT(569)", "Delete NumberLiteral: 0(570)", "Delete MethodInvocation(571)", "Delete NullLiteral(594)", "Delete NullLiteral(595)", "Delete NullLiteral(596)", "Delete ThisExpression(540)", "Delete SimpleName: params(541)", "Delete FieldAccess(542)", "Delete NullLiteral(543)", "Delete InfixExpression: !=(544)", "Delete SimpleName: createConnection(548)", "Delete SimpleName: ssliosession(549)", "Delete MethodInvocation(559)", "Delete VariableDeclarationFragment(560)", "Delete VariableDeclarationStatement(561)", "Delete SimpleName: conn(579)", "Delete ReturnStatement(580)", "Delete Block(581)", "Delete Block(602)", "Delete IfStatement(603)"]}}, {"SSLNHttpServerConnectionFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.nio.charset.CharsetDecoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.config.ConnectionConfig"]}, {"root": "UPDATE from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.Config from org.apache.http.params.Config to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SSLNHttpServerConnectionFactory to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: config to SingleVariableDeclaration at 2"]}, {"root": "UPDATE from HttpParams to ConnectionConfig", "operations": ["UPD SimpleName: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleName: HttpRequestFactory from HttpRequestFactory to ConnectionConfig", "UPD SimpleType: HttpRequestFactory from HttpRequestFactory to ConnectionConfig"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 8"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from requestFactory to config", "operations": ["UPD SimpleName: requestFactory from requestFactory to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: params from params to config", "UPD SimpleName: requestFactory from requestFactory to config"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: CharsetEncoder to SimpleType: CharsetEncoder at 0", "INS SimpleName: charencoder to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: CharsetEncoder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: charset to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getCharset to MethodInvocation at 1", "INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 5", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: charset to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: charencoder to Assignment: = at 0", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: charencoder to MethodInvocation at 0", "INS SimpleName: charset to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: charset to InfixExpression: != at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: charencoder to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: newEncoder to MethodInvocation at 1", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS SimpleName: newDecoder to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 7"]}, {"root": "MOVE from SimpleType: ConnectionConfig", "operations": ["MOV SimpleName: HttpParams to SimpleType: ConnectionConfig at 0"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 4", "operations": ["INS SimpleName: config to ConstructorInvocation at 4"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 4", "operations": ["INS SimpleName: config to ConstructorInvocation at 4"]}, {"root": "UPDATE from DefaultNHttpServerConnection to CodingErrorAction", "operations": ["UPD SimpleType: DefaultNHttpServerConnection from DefaultNHttpServerConnection to CodingErrorAction", "UPD SimpleName: DefaultNHttpServerConnection from DefaultNHttpServerConnection to CodingErrorAction"]}, {"root": "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV NullLiteral to ClassInstanceCreation at 10"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: DefaultHttpRequestParserFactory to ClassInstanceCreation at 0", "INS NullLiteral to ClassInstanceCreation at 1", "INS SimpleName: requestFactory to ClassInstanceCreation at 2", "INS SimpleName: DefaultHttpRequestParserFactory to SimpleType: DefaultHttpRequestParserFactory at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: params to MethodInvocation at 2", "INS SimpleName: HttpParamConfig to MethodInvocation at 0", "INS SimpleName: getConnectionConfig to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: ssliosession to MethodInvocation at 1"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS SimpleName: allocator to InfixExpression: != at 0", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: HeapByteBufferAllocator.INSTANCE to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: allocator to ConditionalExpression at 1"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS SimpleName: config to ConditionalExpression at 1", "INS SimpleName: config to InfixExpression: != at 0", "INS ConditionalExpression to Assignment: = at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: != at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2"]}, {"root": "UPDATE from conn to malformedInputAction", "operations": ["UPD SimpleName: conn from conn to malformedInputAction", "UPD SimpleName: timeout from timeout to malformedInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: config to FieldAccess at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from timeout to unmappableInputAction", "operations": ["UPD SimpleName: timeout from timeout to unmappableInputAction"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to ConditionalExpression at 1", "INS FieldAccess to MethodInvocation at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1", "INS SimpleName: config to FieldAccess at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 4", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 5", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 5"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 6", "operations": ["INS MethodInvocation to ClassInstanceCreation at 6", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: config to FieldAccess at 1", "INS SimpleName: getMessageConstraints to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from requestFactory to requestParserFactory", "operations": ["UPD SimpleName: requestFactory from requestFactory to requestParserFactory"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: params to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: getInt to MethodInvocation at 1"]}, {"root": "UPDATE from conn to chardecoder", "operations": ["UPD SimpleName: conn from conn to chardecoder"]}, {"root": "UPDATE from setSocketTimeout to onMalformedInput", "operations": ["UPD SimpleName: setSocketTimeout from setSocketTimeout to onMalformedInput"]}, {"root": "UPDATE from ssliosession to getMalformedInputAction", "operations": ["UPD SimpleName: ssliosession from ssliosession to getMalformedInputAction"]}, {"root": "UPDATE from getInt to getUnmappableInputAction", "operations": ["UPD SimpleName: getInt from getInt to getUnmappableInputAction"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: params", "DEL Modifier: private", "DEL SimpleType: HttpParams"]}, {"root": "DEL SimpleName: requestFactory", "operations": ["DEL SimpleName: requestFactory"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: requestParserFactory", "DEL Assignment: =", "DEL NullLiteral", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: requestFactory", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: requestFactory"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: allocator"]}, {"root": "DEL SimpleName: allocator", "operations": ["DEL SimpleName: allocator"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleName: SSLNHttpServerConnectionFactory"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: params", "DEL FieldAccess", "DEL SimpleName: createConnection", "DEL ThisExpression"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodInvocation", "operations": ["DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL QualifiedName: CoreConnectionPNames.SO_TIMEOUT", "DEL SimpleName: Config"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL NullLiteral", "DEL Block", "DEL IfStatement", "DEL Block", "DEL FieldAccess", "DEL InfixExpression: !=", "DEL SimpleName: conn", "DEL ReturnStatement"]}]}}, {"SSLNHttpServerConnectionFactory_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(675) at 5", "Insert ImportDeclaration(3) into CompilationUnit(675) at 1", "Insert ImportDeclaration(5) into CompilationUnit(675) at 2", "Insert ImportDeclaration(7) into CompilationUnit(675) at 3", "Insert ImportDeclaration(9) into CompilationUnit(675) at 4", "Move FieldDeclaration(76) into TypeDeclaration: class(674) at 11", "Insert QualifiedName: java.nio.charset.Charset(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.nio.charset.CharsetDecoder(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.nio.charset.CharsetEncoder(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(8) into ImportDeclaration(9) at 0", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(32) to org.apache.http.config.ConnectionConfig", "Update QualifiedName: org.apache.http.params.Config(34) to org.apache.http.params.HttpParamConfig", "Insert MethodDeclaration(350) into TypeDeclaration: class(674) at 14", "Update SimpleType: HttpRequestFactory(73) to ConnectionConfig", "Move ExpressionStatement(189) into Block(210) at 8", "Move Javadoc(274) into MethodDeclaration(350) at 0", "Insert Modifier: public(277) into MethodDeclaration(350) at 1", "Insert SimpleName: SSLNHttpServerConnectionFactory(278) into MethodDeclaration(350) at 2", "Move SingleVariableDeclaration(281) into MethodDeclaration(350) at 3", "Move SingleVariableDeclaration(286) into MethodDeclaration(350) at 4", "Move SingleVariableDeclaration(291) into MethodDeclaration(350) at 5", "Move SingleVariableDeclaration(296) into MethodDeclaration(350) at 6", "Insert SingleVariableDeclaration(303) into MethodDeclaration(350) at 7", "Move Block(338) into MethodDeclaration(350) at 8", "Insert SingleVariableDeclaration(370) into MethodDeclaration(378) at 5", "Insert SingleVariableDeclaration(388) into MethodDeclaration(396) at 3", "Update SimpleName: HttpRequestFactory(72) to ConnectionConfig", "Update SimpleName: requestFactory(74) to config", "Insert Modifier: final(299) into SingleVariableDeclaration(303) at 0", "Insert SimpleType: ConnectionConfig(301) into SingleVariableDeclaration(303) at 1", "Insert SimpleName: config(302) into SingleVariableDeclaration(303) at 2", "Insert Modifier: final(366) into SingleVariableDeclaration(370) at 0", "Insert SimpleType: ConnectionConfig(368) into SingleVariableDeclaration(370) at 1", "Insert SimpleName: config(369) into SingleVariableDeclaration(370) at 2", "Insert Modifier: final(384) into SingleVariableDeclaration(388) at 0", "Insert SimpleType: ConnectionConfig(386) into SingleVariableDeclaration(388) at 1", "Insert SimpleName: config(387) into SingleVariableDeclaration(388) at 2", "Insert VariableDeclarationStatement(556) into Block(672) at 1", "Insert VariableDeclarationStatement(562) into Block(672) at 2", "Insert VariableDeclarationStatement(572) into Block(672) at 3", "Move VariableDeclarationStatement(549) into Block(672) at 4", "Move VariableDeclarationStatement(561) into Block(672) at 5", "Insert IfStatement(647) into Block(672) at 6", "Move ReturnStatement(589) into Block(672) at 7", "Update SimpleName: HttpParams(100) to ConnectionConfig", "Move SimpleName: HttpParams(100) into SimpleType: ConnectionConfig(301) at 0", "Insert SimpleName: ConnectionConfig(367) into SimpleType: ConnectionConfig(368) at 0", "Insert SimpleName: config(375) into ConstructorInvocation(376) at 4", "Insert SimpleName: ConnectionConfig(385) into SimpleType: ConnectionConfig(386) at 0", "Insert SimpleName: config(393) into ConstructorInvocation(394) at 4", "Insert SimpleType: CharsetDecoder(552) into VariableDeclarationStatement(556) at 0", "Insert VariableDeclarationFragment(555) into VariableDeclarationStatement(556) at 1", "Insert SimpleType: CharsetEncoder(558) into VariableDeclarationStatement(562) at 0", "Insert VariableDeclarationFragment(561) into VariableDeclarationStatement(562) at 1", "Insert SimpleType: Charset(564) into VariableDeclarationStatement(572) at 0", "Insert VariableDeclarationFragment(571) into VariableDeclarationStatement(572) at 1", "Update SimpleType: DefaultNHttpServerConnection(534) to CodingErrorAction", "Insert SimpleType: CodingErrorAction(593) into VariableDeclarationStatement(610) at 0", "Insert InfixExpression: !=(613) into IfStatement(647) at 0", "Insert Block(646) into IfStatement(647) at 1", "Move NullLiteral(581) into ClassInstanceCreation(670) at 10", "Insert ClassInstanceCreation(198) into Assignment: =(199) at 1", "Insert MethodInvocation(207) into Assignment: =(208) at 1", "Move FieldAccess(543) into Assignment: =(326) at 0", "Insert ConditionalExpression(325) into Assignment: =(326) at 1", "Insert ConditionalExpression(346) into Assignment: =(347) at 1", "Insert SimpleName: CharsetDecoder(551) into SimpleType: CharsetDecoder(552) at 0", "Insert SimpleName: chardecoder(553) into VariableDeclarationFragment(555) at 0", "Insert NullLiteral(554) into VariableDeclarationFragment(555) at 1", "Insert SimpleName: CharsetEncoder(557) into SimpleType: CharsetEncoder(558) at 0", "Insert SimpleName: charencoder(559) into VariableDeclarationFragment(561) at 0", "Insert NullLiteral(560) into VariableDeclarationFragment(561) at 1", "Insert SimpleName: Charset(563) into SimpleType: Charset(564) at 0", "Insert SimpleName: charset(565) into VariableDeclarationFragment(571) at 0", "Insert MethodInvocation(570) into VariableDeclarationFragment(571) at 1", "Update SimpleName: DefaultNHttpServerConnection(533) to CodingErrorAction", "Update SimpleName: conn(535) to malformedInputAction", "Insert ConditionalExpression(589) into VariableDeclarationFragment(590) at 1", "Insert SimpleName: CodingErrorAction(592) into SimpleType: CodingErrorAction(593) at 0", "Update SimpleName: timeout(551) to unmappableInputAction", "Insert ConditionalExpression(608) into VariableDeclarationFragment(609) at 1", "Insert SimpleName: charset(611) into InfixExpression: !=(613) at 0", "Insert NullLiteral(612) into InfixExpression: !=(613) at 1", "Insert ExpressionStatement(619) into Block(646) at 0", "Move ExpressionStatement(566) into Block(646) at 1", "Insert ExpressionStatement(629) into Block(646) at 2", "Insert ExpressionStatement(635) into Block(646) at 3", "Insert ExpressionStatement(640) into Block(646) at 4", "Insert ExpressionStatement(645) into Block(646) at 5", "Insert SimpleName: chardecoder(657) into ClassInstanceCreation(670) at 4", "Insert SimpleName: charencoder(658) into ClassInstanceCreation(670) at 5", "Insert MethodInvocation(663) into ClassInstanceCreation(670) at 6", "Update SimpleName: requestFactory(185) to requestParserFactory", "Insert SimpleType: DefaultHttpRequestParserFactory(195) into ClassInstanceCreation(198) at 0", "Insert NullLiteral(196) into ClassInstanceCreation(198) at 1", "Insert SimpleName: requestFactory(197) into ClassInstanceCreation(198) at 2", "Update SimpleName: params(197) to config", "Insert SimpleName: HttpParamConfig(204) into MethodInvocation(207) at 0", "Insert SimpleName: getConnectionConfig(205) into MethodInvocation(207) at 1", "Insert SimpleName: params(206) into MethodInvocation(207) at 2", "Insert InfixExpression: !=(322) into ConditionalExpression(325) at 0", "Insert SimpleName: allocator(323) into ConditionalExpression(325) at 1", "Insert QualifiedName: HeapByteBufferAllocator.INSTANCE(324) into ConditionalExpression(325) at 2", "Update SimpleName: params(333) to config", "Insert InfixExpression: !=(343) into ConditionalExpression(346) at 0", "Insert SimpleName: config(344) into ConditionalExpression(346) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(345) into ConditionalExpression(346) at 2", "Insert FieldAccess(568) into MethodInvocation(570) at 0", "Insert SimpleName: getCharset(569) into MethodInvocation(570) at 1", "Insert InfixExpression: !=(582) into ConditionalExpression(589) at 0", "Insert MethodInvocation(587) into ConditionalExpression(589) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(588) into ConditionalExpression(589) at 2", "Insert InfixExpression: !=(601) into ConditionalExpression(608) at 0", "Insert MethodInvocation(606) into ConditionalExpression(608) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(607) into ConditionalExpression(608) at 2", "Insert Assignment: =(618) into ExpressionStatement(619) at 0", "Insert MethodInvocation(628) into ExpressionStatement(629) at 0", "Insert Assignment: =(634) into ExpressionStatement(635) at 0", "Insert MethodInvocation(639) into ExpressionStatement(640) at 0", "Insert MethodInvocation(644) into ExpressionStatement(645) at 0", "Insert FieldAccess(661) into MethodInvocation(663) at 0", "Insert SimpleName: getMessageConstraints(662) into MethodInvocation(663) at 1", "Insert SimpleName: DefaultHttpRequestParserFactory(194) into SimpleType: DefaultHttpRequestParserFactory(195) at 0", "Insert SimpleName: allocator(320) into InfixExpression: !=(322) at 0", "Insert NullLiteral(321) into InfixExpression: !=(322) at 1", "Insert SimpleName: config(341) into InfixExpression: !=(343) at 0", "Insert NullLiteral(342) into InfixExpression: !=(343) at 1", "Move ThisExpression(528) into FieldAccess(568) at 0", "Update SimpleName: params(529) to config", "Move SimpleName: params(529) into FieldAccess(568) at 1", "Insert MethodInvocation(580) into InfixExpression: !=(582) at 0", "Insert NullLiteral(581) into InfixExpression: !=(582) at 1", "Move FieldAccess(540) into MethodInvocation(587) at 0", "Insert SimpleName: getMalformedInputAction(586) into MethodInvocation(587) at 1", "Insert MethodInvocation(599) into InfixExpression: !=(601) at 0", "Insert NullLiteral(600) into InfixExpression: !=(601) at 1", "Move FieldAccess(556) into MethodInvocation(606) at 0", "Insert SimpleName: getUnmappableInputAction(605) into MethodInvocation(606) at 1", "Insert SimpleName: chardecoder(614) into Assignment: =(618) at 0", "Insert MethodInvocation(617) into Assignment: =(618) at 1", "Update SimpleName: conn(562) to chardecoder", "Update SimpleName: setSocketTimeout(563) to onMalformedInput", "Update SimpleName: timeout(564) to malformedInputAction", "Insert SimpleName: chardecoder(625) into MethodInvocation(628) at 0", "Insert SimpleName: onUnmappableCharacter(626) into MethodInvocation(628) at 1", "Insert SimpleName: unmappableInputAction(627) into MethodInvocation(628) at 2", "Insert SimpleName: charencoder(630) into Assignment: =(634) at 0", "Insert MethodInvocation(633) into Assignment: =(634) at 1", "Insert SimpleName: charencoder(636) into MethodInvocation(639) at 0", "Insert SimpleName: onMalformedInput(637) into MethodInvocation(639) at 1", "Insert SimpleName: malformedInputAction(638) into MethodInvocation(639) at 2", "Insert SimpleName: charencoder(641) into MethodInvocation(644) at 0", "Insert SimpleName: onUnmappableCharacter(642) into MethodInvocation(644) at 1", "Insert SimpleName: unmappableInputAction(643) into MethodInvocation(644) at 2", "Insert ThisExpression(659) into FieldAccess(661) at 0", "Insert SimpleName: config(660) into FieldAccess(661) at 1", "Insert FieldAccess(578) into MethodInvocation(580) at 0", "Update SimpleName: ssliosession(537) to getMalformedInputAction", "Move SimpleName: ssliosession(537) into MethodInvocation(580) at 1", "Update SimpleName: requestFactory(539) to config", "Insert FieldAccess(597) into MethodInvocation(599) at 0", "Update SimpleName: getInt(553) to getUnmappableInputAction", "Move SimpleName: getInt(553) into MethodInvocation(599) at 1", "Update SimpleName: params(555) to config", "Insert SimpleName: charset(615) into MethodInvocation(617) at 0", "Insert SimpleName: newDecoder(616) into MethodInvocation(617) at 1", "Insert SimpleName: charset(631) into MethodInvocation(633) at 0", "Insert SimpleName: newEncoder(632) into MethodInvocation(633) at 1", "Insert ThisExpression(576) into FieldAccess(578) at 0", "Insert SimpleName: config(577) into FieldAccess(578) at 1", "Insert ThisExpression(595) into FieldAccess(597) at 0", "Insert SimpleName: config(596) into FieldAccess(597) at 1", "Delete Modifier: private(98)", "Delete Modifier: final(99)", "Delete SimpleType: HttpParams(101)", "Delete SimpleName: params(102)", "Delete VariableDeclarationFragment(103)", "Delete FieldDeclaration(104)", "Delete SimpleName: requestFactory(187)", "Delete SimpleName: params(199)", "Delete ThisExpression(202)", "Delete SimpleName: requestParserFactory(203)", "Delete FieldAccess(204)", "Delete NullLiteral(205)", "Delete Assignment: =(206)", "Delete ExpressionStatement(207)", "Delete ThisExpression(310)", "Delete SimpleName: requestFactory(311)", "Delete FieldAccess(312)", "Delete SimpleName: requestFactory(313)", "Delete Assignment: =(314)", "Delete ExpressionStatement(315)", "Delete ThisExpression(316)", "Delete SimpleName: allocator(317)", "Delete FieldAccess(318)", "Delete SimpleName: allocator(319)", "Delete NullLiteral(335)", "Delete Modifier: public(275)", "Delete SimpleName: SSLNHttpServerConnectionFactory(276)", "Delete MethodDeclaration(339)", "Delete SimpleName: createConnection(536)", "Delete ThisExpression(544)", "Delete SimpleName: params(545)", "Delete FieldAccess(546)", "Delete MethodInvocation(547)", "Delete PrimitiveType: int(550)", "Delete SimpleName: Config(552)", "Delete QualifiedName: CoreConnectionPNames.SO_TIMEOUT(557)", "Delete NumberLiteral: 0(558)", "Delete MethodInvocation(559)", "Delete NullLiteral(582)", "Delete NullLiteral(583)", "Delete NullLiteral(587)", "Delete FieldAccess(530)", "Delete NullLiteral(531)", "Delete InfixExpression: !=(532)", "Delete SimpleName: conn(567)", "Delete ReturnStatement(568)", "Delete Block(569)", "Delete Block(590)", "Delete IfStatement(591)"]}}, {"AbstractMessageParser_cluster": {"actions": [{"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from params to HttpParamConfig", "operations": ["UPD SimpleName: params from params to HttpParamConfig"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getIntParameter to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 0"]}, {"root": "UPDATE from getIntParameter to getMessageConstraints", "operations": ["UPD SimpleName: getIntParameter from getIntParameter to getMessageConstraints"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: MessageConstraints", "DEL NumberLiteral: 1", "DEL NumberLiteral: 1", "DEL SimpleName: setMaxLineLength", "DEL QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH", "DEL PrefixExpression: -", "DEL SimpleName: setMaxHeaderCount", "DEL QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT", "DEL SimpleName: custom", "DEL SimpleName: getIntParameter", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL SimpleName: build", "DEL MethodInvocation"]}]}}, {"AbstractMessageParser_diff": {"operations": ["Update QualifiedName: org.apache.http.impl.MessageConstraints(22) to org.apache.http.config.MessageConstraints", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(32) to org.apache.http.params.HttpParamConfig", "Insert MethodInvocation(195) into Assignment: =(196) at 1", "Update SimpleName: params(196) to HttpParamConfig", "Move SimpleName: params(196) into MethodInvocation(195) at 0", "Update SimpleName: getIntParameter(197) to getMessageConstraints", "Move SimpleName: getIntParameter(197) into MethodInvocation(195) at 1", "Move SimpleName: params(204) into MethodInvocation(195) at 2", "Delete SimpleName: MessageConstraints(192)", "Delete SimpleName: custom(193)", "Delete MethodInvocation(194)", "Delete SimpleName: setMaxHeaderCount(195)", "Delete QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT(198)", "Delete NumberLiteral: 1(199)", "Delete PrefixExpression: -(200)", "Delete MethodInvocation(201)", "Delete MethodInvocation(202)", "Delete SimpleName: setMaxLineLength(203)", "Delete SimpleName: getIntParameter(205)", "Delete QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH(206)", "Delete NumberLiteral: 1(207)", "Delete PrefixExpression: -(208)", "Delete MethodInvocation(209)", "Delete MethodInvocation(210)", "Delete SimpleName: build(211)", "Delete MethodInvocation(212)"]}}, {"DefaultHttpRequestParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpRequestParser_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(355) at 11", "Update QualifiedName: org.apache.http.impl.MessageConstraints(20) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpRequestParserFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpRequestParserFactory_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(133) at 6", "Update QualifiedName: org.apache.http.impl.MessageConstraints(10) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpResponseParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpResponseParser_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(353) at 11", "Update QualifiedName: org.apache.http.impl.MessageConstraints(20) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpResponseParserFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpResponseParserFactory_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(133) at 6", "Update QualifiedName: org.apache.http.impl.MessageConstraints(10) to org.apache.http.config.MessageConstraints"]}}, {"SessionInputBufferImpl_cluster": {"actions": [{"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"SessionInputBufferImpl_diff": {"operations": ["Update QualifiedName: org.apache.http.impl.MessageConstraints(18) to org.apache.http.config.MessageConstraints"]}}, {"BasicConnFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.nio.charset.CharsetDecoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.http.config.SocketConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.http.params.HttpParamConfig to ImportDeclaration at 0"]}, {"root": "UPDATE from TimeUnit to SocketConfig", "operations": ["UPD SimpleName: TimeUnit from TimeUnit to SocketConfig", "UPD SimpleType: TimeUnit from TimeUnit to SocketConfig"]}, {"root": "UPDATE from HttpParams to ConnectionConfig", "operations": ["UPD SimpleName: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleType: TimeUnit from TimeUnit to ConnectionConfig", "UPD SimpleType: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleType: TimeUnit from TimeUnit to ConnectionConfig", "UPD SimpleName: TimeUnit from TimeUnit to ConnectionConfig", "UPD SimpleName: TimeUnit from TimeUnit to ConnectionConfig"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "UPDATE from connectTimeout to sconfig", "operations": ["UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: tunit from tunit to sconfig"]}, {"root": "UPDATE from tunit to cconfig", "operations": ["UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: params from params to cconfig", "UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: sconfig to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: getSoTimeout to MethodInvocation at 1", "INS SimpleName: setSoTimeout to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: socket to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 9", "INS SimpleName: sconfig to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getSoLinger to MethodInvocation at 1", "INS SimpleName: linger to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS IfStatement to Block at 10", "INS InfixExpression: >= to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS Block to IfStatement at 1", "INS SimpleName: linger to InfixExpression: >= at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 11", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0", "INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 12", "operations": ["INS VariableDeclarationStatement to Block at 12", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: CharsetEncoder to SimpleType: CharsetEncoder at 0", "INS SimpleName: charencoder to VariableDeclarationFragment at 0", "INS SimpleType: CharsetEncoder to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 13", "operations": ["INS VariableDeclarationStatement to Block at 13", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS SimpleName: getCharset to MethodInvocation at 1", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS SimpleName: charset to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 14", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS SimpleName: malformedInputAction to VariableDeclarationFragment at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS SimpleName: cconfig to FieldAccess at 1", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS FieldAccess to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 14", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS SimpleName: getUnmappableInputAction to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS VariableDeclarationStatement to Block at 15", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: unmappableInputAction to VariableDeclarationFragment at 0", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0", "INS FieldAccess to MethodInvocation at 0", "INS InfixExpression: != to ConditionalExpression at 0"]}, {"root": "INS IfStatement to Block at 16", "operations": ["INS SimpleName: charset to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 16"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 18", "MOV ReturnStatement to Block at 19", "MOV VariableDeclarationStatement to Block at 17"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from TimeUnit.MILLISECONDS to SocketConfig.DEFAULT", "operations": ["UPD QualifiedName: TimeUnit.MILLISECONDS from TimeUnit.MILLISECONDS to SocketConfig.DEFAULT"]}, {"root": "INS QualifiedName: ConnectionConfig.DEFAULT to ConstructorInvocation at 3", "operations": ["INS QualifiedName: ConnectionConfig.DEFAULT to ConstructorInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getConnectionConfig to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: HttpParamConfig to MethodInvocation at 0", "INS SimpleName: params to MethodInvocation at 2"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS QualifiedName: SocketConfig.DEFAULT to ConditionalExpression at 2", "INS SimpleName: sconfig to InfixExpression: != at 0", "INS SimpleName: sconfig to ConditionalExpression at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ConditionalExpression to Assignment: = at 1"]}, {"root": "UPDATE from tunit to socket", "operations": ["UPD SimpleName: tunit from tunit to socket"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toMillis to MethodInvocation at 1", "MOV SimpleName: tunit to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from toMillis to connect", "operations": ["UPD SimpleName: toMillis from toMillis to connect"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "UPDATE from setSoTimeout to setTcpNoDelay", "operations": ["UPD SimpleName: setSoTimeout from setSoTimeout to setTcpNoDelay"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: sconfig to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: isTcpNoDelay to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: newDecoder to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: charset to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: chardecoder to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: charset to MethodInvocation at 0", "INS SimpleName: charencoder to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: newEncoder to MethodInvocation at 1", "INS ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS SimpleName: charencoder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: charencoder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS SimpleName: unmappableInputAction to MethodInvocation at 2"]}, {"root": "UPDATE from Config to HttpParamConfig", "operations": ["UPD SimpleName: Config from Config to HttpParamConfig"]}, {"root": "UPDATE from getInt to getSocketConfig", "operations": ["UPD SimpleName: getInt from getInt to getSocketConfig"]}, {"root": "UPDATE from TimeUnit.MILLISECONDS to ConnectionConfig.DEFAULT", "operations": ["UPD QualifiedName: TimeUnit.MILLISECONDS from TimeUnit.MILLISECONDS to ConnectionConfig.DEFAULT"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from connectTimeout to getConnectTimeout", "operations": ["UPD SimpleName: connectTimeout from connectTimeout to getConnectTimeout"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 2", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 3", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 3"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 4", "operations": ["INS MethodInvocation to ClassInstanceCreation at 4", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: cconfig to FieldAccess at 1", "INS SimpleName: getMessageConstraints to MethodInvocation at 1"]}, {"root": "UPDATE from connect to setSoLinger", "operations": ["UPD SimpleName: connect from connect to setSoLinger"]}, {"root": "INS InfixExpression: > to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to InfixExpression: > at 1", "INS InfixExpression: > to MethodInvocation at 2", "INS SimpleName: linger to InfixExpression: > at 0"]}, {"root": "INS SimpleName: linger to MethodInvocation at 3", "operations": ["INS SimpleName: linger to MethodInvocation at 3"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from create to chardecoder", "operations": ["UPD SimpleName: create from create to chardecoder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: socket to MethodInvocation at 1", "MOV SimpleName: create to MethodInvocation at 0"]}, {"root": "UPDATE from socket to onMalformedInput", "operations": ["UPD SimpleName: socket from socket to onMalformedInput"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL SimpleName: connectTimeout"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: params", "DEL FieldAccess", "DEL Assignment: =", "DEL ThisExpression"]}, {"root": "DEL QualifiedName: CoreConnectionPNames.CONNECTION_TIMEOUT", "operations": ["DEL QualifiedName: CoreConnectionPNames.CONNECTION_TIMEOUT"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL QualifiedName: TimeUnit.MILLISECONDS", "operations": ["DEL QualifiedName: TimeUnit.MILLISECONDS"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: connectTimeout", "operations": ["DEL SimpleName: connectTimeout"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL FieldAccess", "DEL NullLiteral", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: params"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL SimpleName: Math", "operations": ["DEL SimpleName: Math"]}, {"root": "DEL SimpleName: min", "operations": ["DEL SimpleName: min"]}, {"root": "DEL QualifiedName: Integer.MAX_VALUE", "operations": ["DEL QualifiedName: Integer.MAX_VALUE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL CastExpression", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: timeout", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: timeout", "operations": ["DEL SimpleName: timeout"]}, {"root": "DEL SimpleName: timeout", "operations": ["DEL SimpleName: timeout"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: params", "DEL FieldAccess", "DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL SimpleName: params", "DEL InfixExpression: !=", "DEL IfStatement"]}]}}, {"BasicConnFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(572) at 4", "Insert ImportDeclaration(11) into CompilationUnit(572) at 5", "Insert ImportDeclaration(13) into CompilationUnit(572) at 6", "Insert ImportDeclaration(15) into CompilationUnit(572) at 7", "Insert ImportDeclaration(27) into CompilationUnit(572) at 13", "Insert ImportDeclaration(29) into CompilationUnit(572) at 14", "Insert ImportDeclaration(37) into CompilationUnit(572) at 18", "Insert QualifiedName: java.nio.charset.Charset(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: java.nio.charset.CharsetDecoder(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.nio.charset.CharsetEncoder(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.http.config.SocketConfig(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.http.params.HttpParamConfig(36) into ImportDeclaration(37) at 0", "Update SimpleType: TimeUnit(76) to SocketConfig", "Update SimpleType: HttpParams(83) to ConnectionConfig", "Move ExpressionStatement(123) into Block(156) at 3", "Update SimpleName: TimeUnit(75) to SocketConfig", "Update SimpleName: tunit(77) to sconfig", "Update SimpleName: HttpParams(82) to ConnectionConfig", "Update SimpleName: params(84) to cconfig", "Insert Modifier: final(195) into SingleVariableDeclaration(199) at 0", "Insert SimpleType: SocketConfig(197) into SingleVariableDeclaration(199) at 1", "Update SimpleName: connectTimeout(191) to sconfig", "Update SimpleType: TimeUnit(195) to ConnectionConfig", "Update SimpleName: tunit(196) to cconfig", "Insert Modifier: final(241) into SingleVariableDeclaration(245) at 0", "Insert SimpleType: SocketConfig(243) into SingleVariableDeclaration(245) at 1", "Update SimpleName: connectTimeout(236) to sconfig", "Update SimpleType: TimeUnit(240) to ConnectionConfig", "Update SimpleName: tunit(241) to cconfig", "Insert ExpressionStatement(397) into Block(569) at 5", "Insert ExpressionStatement(415) into Block(569) at 6", "Insert VariableDeclarationStatement(433) into Block(569) at 8", "Insert IfStatement(446) into Block(569) at 9", "Insert VariableDeclarationStatement(452) into Block(569) at 10", "Insert VariableDeclarationStatement(458) into Block(569) at 11", "Insert VariableDeclarationStatement(468) into Block(569) at 12", "Insert VariableDeclarationStatement(487) into Block(569) at 13", "Insert VariableDeclarationStatement(506) into Block(569) at 14", "Insert IfStatement(543) into Block(569) at 15", "Move VariableDeclarationStatement(435) into Block(569) at 17", "Move ExpressionStatement(440) into Block(569) at 18", "Move ReturnStatement(442) into Block(569) at 19", "Move MethodInvocation(131) into ExpressionStatement(131) at 0", "Insert SimpleName: SocketConfig(196) into SimpleType: SocketConfig(197) at 0", "Update SimpleName: TimeUnit(194) to ConnectionConfig", "Insert SimpleName: SocketConfig(242) into SimpleType: SocketConfig(243) at 0", "Update SimpleName: TimeUnit(239) to ConnectionConfig", "Update SimpleName: connectTimeout(244) to sconfig", "Update SimpleName: tunit(245) to cconfig", "Update QualifiedName: TimeUnit.MILLISECONDS(256) to SocketConfig.DEFAULT", "Insert QualifiedName: ConnectionConfig.DEFAULT(264) into ConstructorInvocation(265) at 2", "Insert MethodInvocation(396) into ExpressionStatement(397) at 0", "Insert MethodInvocation(414) into ExpressionStatement(415) at 0", "Insert PrimitiveType: int(425) into VariableDeclarationStatement(433) at 0", "Insert VariableDeclarationFragment(432) into VariableDeclarationStatement(433) at 1", "Insert InfixExpression: >=(436) into IfStatement(446) at 0", "Insert Block(445) into IfStatement(446) at 1", "Insert SimpleType: CharsetDecoder(448) into VariableDeclarationStatement(452) at 0", "Insert VariableDeclarationFragment(451) into VariableDeclarationStatement(452) at 1", "Insert SimpleType: CharsetEncoder(454) into VariableDeclarationStatement(458) at 0", "Insert VariableDeclarationFragment(457) into VariableDeclarationStatement(458) at 1", "Insert SimpleType: Charset(460) into VariableDeclarationStatement(468) at 0", "Insert VariableDeclarationFragment(467) into VariableDeclarationStatement(468) at 1", "Insert SimpleType: CodingErrorAction(470) into VariableDeclarationStatement(487) at 0", "Insert VariableDeclarationFragment(486) into VariableDeclarationStatement(487) at 1", "Insert SimpleType: CodingErrorAction(489) into VariableDeclarationStatement(506) at 0", "Insert VariableDeclarationFragment(505) into VariableDeclarationStatement(506) at 1", "Insert InfixExpression: !=(509) into IfStatement(543) at 0", "Move Block(424) into IfStatement(543) at 1", "Insert MethodInvocation(153) into Assignment: =(154) at 1", "Insert ConditionalExpression(220) into Assignment: =(221) at 1", "Insert SimpleName: socket(389) into MethodInvocation(396) at 0", "Insert SimpleName: setSoTimeout(390) into MethodInvocation(396) at 1", "Insert MethodInvocation(395) into MethodInvocation(396) at 2", "Update SimpleName: tunit(384) to socket", "Move SimpleName: tunit(384) into MethodInvocation(414) at 0", "Update SimpleName: toMillis(385) to connect", "Move SimpleName: toMillis(385) into MethodInvocation(414) at 1", "Move ClassInstanceCreation(410) into MethodInvocation(414) at 2", "Move MethodInvocation(390) into MethodInvocation(414) at 3", "Update SimpleName: setSoTimeout(396) to setTcpNoDelay", "Insert MethodInvocation(422) into MethodInvocation(423) at 2", "Insert SimpleName: linger(426) into VariableDeclarationFragment(432) at 0", "Insert MethodInvocation(431) into VariableDeclarationFragment(432) at 1", "Insert SimpleName: linger(434) into InfixExpression: >=(436) at 0", "Insert NumberLiteral: 0(435) into InfixExpression: >=(436) at 1", "Move ExpressionStatement(413) into Block(445) at 0", "Insert SimpleName: CharsetDecoder(447) into SimpleType: CharsetDecoder(448) at 0", "Insert SimpleName: chardecoder(449) into VariableDeclarationFragment(451) at 0", "Insert NullLiteral(450) into VariableDeclarationFragment(451) at 1", "Insert SimpleName: CharsetEncoder(453) into SimpleType: CharsetEncoder(454) at 0", "Insert SimpleName: charencoder(455) into VariableDeclarationFragment(457) at 0", "Insert NullLiteral(456) into VariableDeclarationFragment(457) at 1", "Insert SimpleName: Charset(459) into SimpleType: Charset(460) at 0", "Insert SimpleName: charset(461) into VariableDeclarationFragment(467) at 0", "Insert MethodInvocation(466) into VariableDeclarationFragment(467) at 1", "Insert SimpleName: CodingErrorAction(469) into SimpleType: CodingErrorAction(470) at 0", "Insert SimpleName: malformedInputAction(471) into VariableDeclarationFragment(486) at 0", "Insert ConditionalExpression(485) into VariableDeclarationFragment(486) at 1", "Insert SimpleName: CodingErrorAction(488) into SimpleType: CodingErrorAction(489) at 0", "Insert SimpleName: unmappableInputAction(490) into VariableDeclarationFragment(505) at 0", "Insert ConditionalExpression(504) into VariableDeclarationFragment(505) at 1", "Insert SimpleName: charset(507) into InfixExpression: !=(509) at 0", "Insert NullLiteral(508) into InfixExpression: !=(509) at 1", "Insert ExpressionStatement(515) into Block(542) at 0", "Insert ExpressionStatement(520) into Block(542) at 1", "Insert ExpressionStatement(525) into Block(542) at 2", "Insert ExpressionStatement(531) into Block(542) at 3", "Insert ExpressionStatement(536) into Block(542) at 4", "Insert ExpressionStatement(541) into Block(542) at 5", "Update SimpleName: connectTimeout(135) to sconfig", "Update SimpleName: Config(137) to HttpParamConfig", "Update SimpleName: getInt(138) to getSocketConfig", "Update SimpleName: tunit(146) to cconfig", "Insert SimpleName: HttpParamConfig(150) into MethodInvocation(153) at 0", "Insert SimpleName: getConnectionConfig(151) into MethodInvocation(153) at 1", "Insert SimpleName: params(152) into MethodInvocation(153) at 2", "Update SimpleName: connectTimeout(206) to sconfig", "Insert InfixExpression: !=(217) into ConditionalExpression(220) at 0", "Insert SimpleName: sconfig(218) into ConditionalExpression(220) at 1", "Insert QualifiedName: SocketConfig.DEFAULT(219) into ConditionalExpression(220) at 2", "Update SimpleName: tunit(212) to cconfig", "Update SimpleName: tunit(217) to cconfig", "Update QualifiedName: TimeUnit.MILLISECONDS(218) to ConnectionConfig.DEFAULT", "Insert FieldAccess(393) into MethodInvocation(395) at 0", "Insert SimpleName: getSoTimeout(394) into MethodInvocation(395) at 1", "Insert FieldAccess(411) into MethodInvocation(413) at 0", "Update SimpleName: connectTimeout(388) to getConnectTimeout", "Insert FieldAccess(420) into MethodInvocation(422) at 0", "Insert SimpleName: isTcpNoDelay(421) into MethodInvocation(422) at 1", "Insert FieldAccess(429) into MethodInvocation(431) at 0", "Insert SimpleName: getSoLinger(430) into MethodInvocation(431) at 1", "Insert FieldAccess(464) into MethodInvocation(466) at 0", "Insert SimpleName: getCharset(465) into MethodInvocation(466) at 1", "Insert InfixExpression: !=(478) into ConditionalExpression(485) at 0", "Insert MethodInvocation(483) into ConditionalExpression(485) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(484) into ConditionalExpression(485) at 2", "Insert InfixExpression: !=(497) into ConditionalExpression(504) at 0", "Insert MethodInvocation(502) into ConditionalExpression(504) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(503) into ConditionalExpression(504) at 2", "Insert Assignment: =(514) into ExpressionStatement(515) at 0", "Insert MethodInvocation(519) into ExpressionStatement(520) at 0", "Insert MethodInvocation(524) into ExpressionStatement(525) at 0", "Insert Assignment: =(530) into ExpressionStatement(531) at 0", "Insert MethodInvocation(535) into ExpressionStatement(536) at 0", "Insert MethodInvocation(540) into ExpressionStatement(541) at 0", "Insert SimpleName: chardecoder(552) into ClassInstanceCreation(559) at 2", "Insert SimpleName: charencoder(553) into ClassInstanceCreation(559) at 3", "Insert MethodInvocation(558) into ClassInstanceCreation(559) at 4", "Insert SimpleName: sconfig(215) into InfixExpression: !=(217) at 0", "Insert NullLiteral(216) into InfixExpression: !=(217) at 1", "Update SimpleName: tunit(214) to cconfig", "Insert ThisExpression(391) into FieldAccess(393) at 0", "Insert SimpleName: sconfig(392) into FieldAccess(393) at 1", "Insert ThisExpression(409) into FieldAccess(411) at 0", "Insert SimpleName: cconfig(410) into FieldAccess(411) at 1", "Insert ThisExpression(418) into FieldAccess(420) at 0", "Insert SimpleName: sconfig(419) into FieldAccess(420) at 1", "Insert ThisExpression(427) into FieldAccess(429) at 0", "Insert SimpleName: sconfig(428) into FieldAccess(429) at 1", "Update SimpleName: connect(401) to setSoLinger", "Insert InfixExpression: >(441) into MethodInvocation(443) at 2", "Insert SimpleName: linger(442) into MethodInvocation(443) at 3", "Insert ThisExpression(462) into FieldAccess(464) at 0", "Insert SimpleName: cconfig(463) into FieldAccess(464) at 1", "Insert MethodInvocation(476) into InfixExpression: !=(478) at 0", "Move NullLiteral(415) into InfixExpression: !=(478) at 1", "Insert FieldAccess(481) into MethodInvocation(483) at 0", "Insert SimpleName: getMalformedInputAction(482) into MethodInvocation(483) at 1", "Insert MethodInvocation(495) into InfixExpression: !=(497) at 0", "Insert NullLiteral(496) into InfixExpression: !=(497) at 1", "Insert FieldAccess(500) into MethodInvocation(502) at 0", "Insert SimpleName: getUnmappableInputAction(501) into MethodInvocation(502) at 1", "Insert SimpleName: chardecoder(510) into Assignment: =(514) at 0", "Insert MethodInvocation(513) into Assignment: =(514) at 1", "Update SimpleName: create(417) to chardecoder", "Move SimpleName: create(417) into MethodInvocation(519) at 0", "Update SimpleName: socket(418) to onMalformedInput", "Move SimpleName: socket(418) into MethodInvocation(519) at 1", "Insert SimpleName: malformedInputAction(518) into MethodInvocation(519) at 2", "Insert SimpleName: chardecoder(521) into MethodInvocation(524) at 0", "Insert SimpleName: onUnmappableCharacter(522) into MethodInvocation(524) at 1", "Insert SimpleName: unmappableInputAction(523) into MethodInvocation(524) at 2", "Insert SimpleName: charencoder(526) into Assignment: =(530) at 0", "Insert MethodInvocation(529) into Assignment: =(530) at 1", "Insert SimpleName: charencoder(532) into MethodInvocation(535) at 0", "Insert SimpleName: onMalformedInput(533) into MethodInvocation(535) at 1", "Insert SimpleName: malformedInputAction(534) into MethodInvocation(535) at 2", "Insert SimpleName: charencoder(537) into MethodInvocation(540) at 0", "Insert SimpleName: onUnmappableCharacter(538) into MethodInvocation(540) at 1", "Insert SimpleName: unmappableInputAction(539) into MethodInvocation(540) at 2", "Insert FieldAccess(556) into MethodInvocation(558) at 0", "Insert SimpleName: getMessageConstraints(557) into MethodInvocation(558) at 1", "Insert SimpleName: linger(439) into InfixExpression: >(441) at 0", "Insert NumberLiteral: 0(440) into InfixExpression: >(441) at 1", "Insert FieldAccess(474) into MethodInvocation(476) at 0", "Insert SimpleName: getMalformedInputAction(475) into MethodInvocation(476) at 1", "Insert ThisExpression(479) into FieldAccess(481) at 0", "Insert SimpleName: cconfig(480) into FieldAccess(481) at 1", "Insert FieldAccess(493) into MethodInvocation(495) at 0", "Insert SimpleName: getUnmappableInputAction(494) into MethodInvocation(495) at 1", "Insert ThisExpression(498) into FieldAccess(500) at 0", "Insert SimpleName: cconfig(499) into FieldAccess(500) at 1", "Insert SimpleName: charset(511) into MethodInvocation(513) at 0", "Insert SimpleName: newDecoder(512) into MethodInvocation(513) at 1", "Insert SimpleName: charset(527) into MethodInvocation(529) at 0", "Insert SimpleName: newEncoder(528) into MethodInvocation(529) at 1", "Insert ThisExpression(554) into FieldAccess(556) at 0", "Insert SimpleName: cconfig(555) into FieldAccess(556) at 1", "Insert ThisExpression(472) into FieldAccess(474) at 0", "Insert SimpleName: cconfig(473) into FieldAccess(474) at 1", "Insert ThisExpression(491) into FieldAccess(493) at 0", "Insert SimpleName: cconfig(492) into FieldAccess(493) at 1", "Delete Modifier: private(67)", "Delete Modifier: final(68)", "Delete PrimitiveType: int(69)", "Delete SimpleName: connectTimeout(70)", "Delete VariableDeclarationFragment(71)", "Delete FieldDeclaration(72)", "Delete ThisExpression(124)", "Delete SimpleName: params(125)", "Delete FieldAccess(126)", "Delete Assignment: =(132)", "Delete QualifiedName: CoreConnectionPNames.CONNECTION_TIMEOUT(140)", "Delete NumberLiteral: 0(141)", "Delete QualifiedName: TimeUnit.MILLISECONDS(148)", "Delete PrimitiveType: int(190)", "Delete SimpleName: connectTimeout(208)", "Delete ThisExpression(222)", "Delete SimpleName: params(223)", "Delete FieldAccess(224)", "Delete NullLiteral(225)", "Delete Assignment: =(226)", "Delete ExpressionStatement(227)", "Delete PrimitiveType: int(235)", "Delete NumberLiteral: 0(255)", "Delete SimpleName: Math(386)", "Delete SimpleName: min(387)", "Delete QualifiedName: Integer.MAX_VALUE(389)", "Delete PrimitiveType: int(381)", "Delete SimpleName: timeout(382)", "Delete PrimitiveType: int(383)", "Delete MethodInvocation(391)", "Delete CastExpression(392)", "Delete VariableDeclarationFragment(393)", "Delete VariableDeclarationStatement(394)", "Delete SimpleName: timeout(397)", "Delete SimpleName: timeout(411)", "Delete ThisExpression(419)", "Delete SimpleName: params(420)", "Delete FieldAccess(421)", "Delete MethodInvocation(422)", "Delete ReturnStatement(423)", "Delete SimpleName: params(414)", "Delete InfixExpression: !=(416)", "Delete Block(443)", "Delete IfStatement(444)"]}}, {"BasicConnPool_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.http.config.SocketConfig to ImportDeclaration at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0"]}, {"root": "UPDATE from connectTimeout to sconfig", "operations": ["UPD SimpleName: connectTimeout from connectTimeout to sconfig", "UPD SimpleName: connectTimeout from connectTimeout to sconfig"]}, {"root": "UPDATE from TimeUnit to ConnectionConfig", "operations": ["UPD SimpleName: TimeUnit from TimeUnit to ConnectionConfig", "UPD SimpleType: TimeUnit from TimeUnit to ConnectionConfig"]}, {"root": "UPDATE from tunit to cconfig", "operations": ["UPD SimpleName: tunit from tunit to cconfig", "UPD SimpleName: tunit from tunit to cconfig"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}]}}, {"BasicConnPool_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(169) at 6", "Insert ImportDeclaration(15) into CompilationUnit(169) at 7", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.http.config.SocketConfig(14) into ImportDeclaration(15) at 0", "Insert Modifier: final(118) into SingleVariableDeclaration(122) at 0", "Insert SimpleType: SocketConfig(120) into SingleVariableDeclaration(122) at 1", "Update SimpleName: connectTimeout(115) to sconfig", "Update SimpleType: TimeUnit(119) to ConnectionConfig", "Update SimpleName: tunit(120) to cconfig", "Insert SimpleName: SocketConfig(119) into SimpleType: SocketConfig(120) at 0", "Update SimpleName: TimeUnit(118) to ConnectionConfig", "Update SimpleName: connectTimeout(124) to sconfig", "Update SimpleName: tunit(125) to cconfig", "Delete PrimitiveType: int(114)"]}}, {"AbstractMessageParser_cluster": {"actions": [{"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}, {"root": "UPDATE from org.apache.http.params.CoreConnectionPNames to org.apache.http.params.HttpParamConfig", "operations": ["UPD QualifiedName: org.apache.http.params.CoreConnectionPNames from org.apache.http.params.CoreConnectionPNames to org.apache.http.params.HttpParamConfig"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from params to HttpParamConfig", "operations": ["UPD SimpleName: params from params to HttpParamConfig"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getIntParameter to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 0"]}, {"root": "UPDATE from getIntParameter to getMessageConstraints", "operations": ["UPD SimpleName: getIntParameter from getIntParameter to getMessageConstraints"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: MessageConstraints", "DEL NumberLiteral: 1", "DEL NumberLiteral: 1", "DEL SimpleName: setMaxLineLength", "DEL QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH", "DEL PrefixExpression: -", "DEL SimpleName: setMaxHeaderCount", "DEL QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT", "DEL SimpleName: custom", "DEL SimpleName: getIntParameter", "DEL MethodInvocation", "DEL PrefixExpression: -", "DEL SimpleName: build", "DEL MethodInvocation"]}]}}, {"AbstractMessageParser_diff": {"operations": ["Update QualifiedName: org.apache.http.impl.MessageConstraints(22) to org.apache.http.config.MessageConstraints", "Update QualifiedName: org.apache.http.params.CoreConnectionPNames(32) to org.apache.http.params.HttpParamConfig", "Insert MethodInvocation(195) into Assignment: =(196) at 1", "Update SimpleName: params(196) to HttpParamConfig", "Move SimpleName: params(196) into MethodInvocation(195) at 0", "Update SimpleName: getIntParameter(197) to getMessageConstraints", "Move SimpleName: getIntParameter(197) into MethodInvocation(195) at 1", "Move SimpleName: params(204) into MethodInvocation(195) at 2", "Delete SimpleName: MessageConstraints(192)", "Delete SimpleName: custom(193)", "Delete MethodInvocation(194)", "Delete SimpleName: setMaxHeaderCount(195)", "Delete QualifiedName: CoreConnectionPNames.MAX_HEADER_COUNT(198)", "Delete NumberLiteral: 1(199)", "Delete PrefixExpression: -(200)", "Delete MethodInvocation(201)", "Delete MethodInvocation(202)", "Delete SimpleName: setMaxLineLength(203)", "Delete SimpleName: getIntParameter(205)", "Delete QualifiedName: CoreConnectionPNames.MAX_LINE_LENGTH(206)", "Delete NumberLiteral: 1(207)", "Delete PrefixExpression: -(208)", "Delete MethodInvocation(209)", "Delete MethodInvocation(210)", "Delete SimpleName: build(211)", "Delete MethodInvocation(212)"]}}, {"DefaultHttpRequestParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpRequestParser_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(355) at 11", "Update QualifiedName: org.apache.http.impl.MessageConstraints(20) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpRequestParserFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpRequestParserFactory_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(133) at 6", "Update QualifiedName: org.apache.http.impl.MessageConstraints(10) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpResponseParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpResponseParser_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(353) at 11", "Update QualifiedName: org.apache.http.impl.MessageConstraints(20) to org.apache.http.config.MessageConstraints"]}}, {"DefaultHttpResponseParserFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints", "operations": ["UPD QualifiedName: org.apache.http.impl.MessageConstraints from org.apache.http.impl.MessageConstraints to org.apache.http.config.MessageConstraints"]}]}}, {"DefaultHttpResponseParserFactory_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(133) at 6", "Update QualifiedName: org.apache.http.impl.MessageConstraints(10) to org.apache.http.config.MessageConstraints"]}}, {"BasicNIOConnFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: config to ConstructorInvocation at 4", "operations": ["INS SimpleName: config to ConstructorInvocation at 4"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 3", "operations": ["INS SimpleName: config to ClassInstanceCreation at 3"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 5", "operations": ["INS SimpleName: config to ClassInstanceCreation at 5"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 1", "operations": ["INS SimpleName: config to ClassInstanceCreation at 1"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"BasicNIOConnFactory_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(431) at 6", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(12) into ImportDeclaration(13) at 0", "Insert SingleVariableDeclaration(296) into MethodDeclaration(313) at 7", "Insert SingleVariableDeclaration(333) into MethodDeclaration(341) at 5", "Insert SingleVariableDeclaration(351) into MethodDeclaration(359) at 3", "Insert Modifier: final(292) into SingleVariableDeclaration(296) at 0", "Insert SimpleType: ConnectionConfig(294) into SingleVariableDeclaration(296) at 1", "Insert SimpleName: config(295) into SingleVariableDeclaration(296) at 2", "Insert Modifier: final(329) into SingleVariableDeclaration(333) at 0", "Insert SimpleType: ConnectionConfig(331) into SingleVariableDeclaration(333) at 1", "Insert SimpleName: config(332) into SingleVariableDeclaration(333) at 2", "Insert Modifier: final(347) into SingleVariableDeclaration(351) at 0", "Insert SimpleType: ConnectionConfig(349) into SingleVariableDeclaration(351) at 1", "Insert SimpleName: config(350) into SingleVariableDeclaration(351) at 2", "Insert SimpleName: ConnectionConfig(293) into SimpleType: ConnectionConfig(294) at 0", "Insert SimpleName: ConnectionConfig(330) into SimpleType: ConnectionConfig(331) at 0", "Insert SimpleName: config(338) into ConstructorInvocation(339) at 4", "Insert SimpleName: ConnectionConfig(348) into SimpleType: ConnectionConfig(349) at 0", "Insert SimpleName: config(301) into ClassInstanceCreation(302) at 3", "Insert SimpleName: config(309) into ClassInstanceCreation(310) at 5", "Insert SimpleName: config(354) into ClassInstanceCreation(355) at 1", "Delete NullLiteral(334)", "Delete NullLiteral(335)"]}}, {"BasicNIOConnPool_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from ConnectingIOReactor to ConnectionConfig", "operations": ["UPD SimpleName: ConnectingIOReactor from ConnectingIOReactor to ConnectionConfig", "UPD SimpleType: ConnectingIOReactor from ConnectingIOReactor to ConnectionConfig"]}, {"root": "UPDATE from ioreactor to config", "operations": ["UPD SimpleName: ioreactor from ioreactor to config"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV ClassInstanceCreation to ConstructorInvocation at 1"]}, {"root": "INS SimpleName: config to ClassInstanceCreation at 1", "operations": ["INS SimpleName: config to ClassInstanceCreation at 1"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: connectTimeout", "DEL SimpleName: ioreactor", "DEL ConstructorInvocation", "DEL SimpleName: BasicNIOConnPool", "DEL SimpleName: tunit", "DEL SimpleType: TimeUnit", "DEL SingleVariableDeclaration", "DEL SimpleName: tunit", "DEL Block", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: connectTimeout", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: TimeUnit", "DEL Modifier: final"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement:  4.3", "DEL TagElement: @since", "DEL Javadoc"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: BasicNIOConnFactory", "DEL SimpleType: BasicNIOConnFactory", "DEL ClassInstanceCreation"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL QualifiedName: TimeUnit.MILLISECONDS", "operations": ["DEL QualifiedName: TimeUnit.MILLISECONDS"]}]}}, {"BasicNIOConnPool_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(452) at 9", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(18) into ImportDeclaration(19) at 0", "Move Javadoc(286) into MethodDeclaration(308) at 0", "Move SingleVariableDeclaration(293) into MethodDeclaration(308) at 4", "Update SimpleType: ConnectingIOReactor(318) to ConnectionConfig", "Update SimpleName: ioreactor(319) to config", "Update SimpleName: ConnectingIOReactor(317) to ConnectionConfig", "Move ClassInstanceCreation(305) into ConstructorInvocation(306) at 1", "Insert SimpleName: config(304) into ClassInstanceCreation(305) at 1", "Delete Modifier: public(287)", "Delete SimpleName: BasicNIOConnPool(288)", "Delete PrimitiveType: int(294)", "Delete SimpleName: connectTimeout(295)", "Delete SingleVariableDeclaration(296)", "Delete Modifier: final(297)", "Delete SimpleName: TimeUnit(298)", "Delete SimpleType: TimeUnit(299)", "Delete SimpleName: tunit(300)", "Delete SingleVariableDeclaration(301)", "Delete SimpleName: ioreactor(302)", "Delete SimpleName: connectTimeout(306)", "Delete SimpleName: tunit(307)", "Delete ConstructorInvocation(308)", "Delete Block(309)", "Delete MethodDeclaration(310)", "Delete TextElement:  4.3(311)", "Delete TagElement: @since(312)", "Delete Javadoc(313)", "Delete SimpleName: BasicNIOConnFactory(322)", "Delete SimpleType: BasicNIOConnFactory(323)", "Delete ClassInstanceCreation(324)", "Delete NumberLiteral: 0(325)", "Delete QualifiedName: TimeUnit.MILLISECONDS(326)"]}}], "commit_stats": [{"total_files": 44, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}