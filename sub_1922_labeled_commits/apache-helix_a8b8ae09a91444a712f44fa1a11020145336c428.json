{"application": "apache-helix", "csha": "a8b8ae09a91444a712f44fa1a11020145336c428", "files": [{"GenericHelixController_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS ImportDeclaration to CompilationUnit at 32", "INS QualifiedName: org.apache.helix.controller.stages.IntermediateStateCalcStage to ImportDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rebalancePipeline to MethodInvocation at 0", "INS SimpleType: IntermediateStateCalcStage to ClassInstanceCreation at 0", "INS SimpleName: IntermediateStateCalcStage to SimpleType: IntermediateStateCalcStage at 0", "INS SimpleName: addStage to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2"]}]}}, {"GenericHelixController_diff": {"operations": ["Insert ImportDeclaration(65) into CompilationUnit(2297) at 32", "Insert QualifiedName: org.apache.helix.controller.stages.IntermediateStateCalcStage(64) into ImportDeclaration(65) at 0", "Insert ExpressionStatement(522) into Block(650) at 8", "Insert MethodInvocation(521) into ExpressionStatement(522) at 0", "Insert SimpleName: rebalancePipeline(516) into MethodInvocation(521) at 0", "Insert SimpleName: addStage(517) into MethodInvocation(521) at 1", "Insert ClassInstanceCreation(520) into MethodInvocation(521) at 2", "Insert SimpleType: IntermediateStateCalcStage(519) into ClassInstanceCreation(520) at 0", "Insert SimpleName: IntermediateStateCalcStage(518) into SimpleType: IntermediateStateCalcStage(519) at 0"]}}, {"AttributeName_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS SimpleName: INTERMEDIATE_STATE to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 5"]}]}}, {"AttributeName_diff": {"operations": ["Insert EnumConstantDeclaration(11) into EnumDeclaration(20) at 5", "Insert SimpleName: INTERMEDIATE_STATE(10) into EnumConstantDeclaration(11) at 0"]}}, {"BestPossibleStateOutput_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.helix.controller.common.PartitionStateMap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.helix.controller.common.ResourcesStateMap to ImportDeclaration at 0"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS Javadoc to TypeDeclaration: class at 0", "INS TextElement: Output for BestPossibleStateCalStage. to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS SimpleType: ResourcesStateMap to TypeDeclaration: class at 3", "operations": ["INS SimpleType: ResourcesStateMap to TypeDeclaration: class at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS SimpleName: getResourceMap to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 2", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS TextElement: Deprecated, use getResourceStatesMap instead. to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: resourceName to TagElement: @param at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS TagElement: @return to Javadoc at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: getStateMap to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getStateMap to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: stateMap to VariableDeclarationFragment at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS TextElement: Deprecated, use getResourceStatesMap instead. to TagElement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParameterizedType: Map.Entry<String,PartitionStateMap> to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Set to ResourcesStateMap", "operations": ["UPD SimpleName: Set from Set to ResourcesStateMap"]}, {"root": "MOVE from SimpleType: ResourcesStateMap", "operations": ["MOV SimpleName: Set to SimpleType: ResourcesStateMap at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Map<Partition,Map<String,String>> to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Map<String,Map<Partition,Map<String,String>>> to MethodDeclaration at 3"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "INS SimpleType: PartitionStateMap to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: PartitionStateMap to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<String,Map<Partition,Map<String,String>>> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from _stateMap to stateMap", "operations": ["UPD SimpleName: _stateMap from _stateMap to stateMap", "UPD SimpleName: _stateMap from _stateMap to stateMap"]}, {"root": "UPDATE from Partition to PartitionStateMap", "operations": ["UPD SimpleType: Partition from Partition to PartitionStateMap", "UPD SimpleName: Partition from Partition to PartitionStateMap", "UPD SimpleName: Partition from Partition to PartitionStateMap"]}, {"root": "MOVE from SimpleType: PartitionStateMap", "operations": ["MOV SimpleName: Partition to SimpleType: PartitionStateMap at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from _stateMap to _resourceStateMap", "operations": ["UPD SimpleName: _stateMap from _stateMap to _resourceStateMap", "UPD SimpleName: _stateMap from _stateMap to _resourceStateMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: _stateMap to MethodInvocation at 0"]}, {"root": "UPDATE from get to entrySet", "operations": ["UPD SimpleName: get from get to entrySet"]}, {"root": "UPDATE from HashMap to Map.Entry", "operations": ["UPD SimpleType: HashMap from HashMap to Map.Entry"]}, {"root": "MOVE from ParameterizedType: Map.Entry<String,PartitionStateMap>", "operations": ["MOV SimpleType: HashMap to ParameterizedType: Map.Entry<String,PartitionStateMap> at 0", "MOV SimpleType: Partition to ParameterizedType: Map.Entry<String,PartitionStateMap> at 2"]}, {"root": "MOVE from ParameterizedType: Map.Entry<String,PartitionStateMap>", "operations": ["MOV SimpleType: String to ParameterizedType: Map.Entry<String,PartitionStateMap> at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: bestInstanceStateMappingForResource to MethodInvocation at 1", "MOV SimpleName: map to MethodInvocation at 0"]}, {"root": "UPDATE from bestInstanceStateMappingForResource to getStateMap", "operations": ["UPD SimpleName: bestInstanceStateMappingForResource from bestInstanceStateMappingForResource to getStateMap"]}, {"root": "INS QualifiedName: Map.Entry to SimpleType: HashMap at 0", "operations": ["INS QualifiedName: Map.Entry to SimpleType: HashMap at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: _stateMap to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: put to MethodInvocation at 1"]}, {"root": "UPDATE from _stateMap to e", "operations": ["UPD SimpleName: _stateMap from _stateMap to e", "UPD SimpleName: map from map to e"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: _stateMap to MethodInvocation at 0", "MOV SimpleName: get to MethodInvocation at 1"]}, {"root": "UPDATE from get to getKey", "operations": ["UPD SimpleName: get from get to getKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: map to MethodInvocation at 0", "MOV SimpleName: get to MethodInvocation at 1"]}, {"root": "UPDATE from get to getValue", "operations": ["UPD SimpleName: get from get to getValue"]}, {"root": "DEL IfStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: Partition", "DEL ExpressionStatement", "DEL SimpleName: _stateMap", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleType: HashMap", "DEL SimpleName: put", "DEL SimpleName: Partition", "DEL ParameterizedType: Map<String,String>", "DEL SimpleType: Map", "DEL SimpleName: HashMap", "DEL SimpleName: String", "DEL SimpleName: _stateMap", "DEL Block", "DEL SimpleName: resourceName", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: resourceName", "DEL ParameterizedType: HashMap<Partition,Map<String,String>>", "DEL SimpleType: String", "DEL SimpleName: Map", "DEL SimpleName: containsKey"]}, {"root": "DEL ParameterizedType: Map<Partition,Map<String,String>>", "operations": ["DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: Map", "DEL SimpleName: Map", "DEL ParameterizedType: Map<Partition,Map<String,String>>", "DEL SimpleType: Partition", "DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleType: String"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: resource", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: put"]}, {"root": "DEL SimpleName: HashMap", "operations": ["DEL SimpleName: HashMap"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: _stateMap", "DEL VariableDeclarationFragment", "DEL FieldDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: BestPossibleStateOutput", "DEL Block", "DEL Modifier: public", "DEL Assignment: =", "DEL SimpleName: _stateMap"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: Set", "DEL Modifier: public", "DEL Block", "DEL SimpleType: String", "DEL SimpleName: resourceSet", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: _stateMap", "DEL MethodDeclaration", "DEL ParameterizedType: Set<String>", "DEL SimpleName: keySet", "DEL SimpleName: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleType: Partition", "DEL SimpleType: String", "DEL SimpleName: String", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: resource", "DEL SimpleName: Partition", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: bestInstanceStateMappingForResource", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: resourceName", "DEL SimpleName: Map", "DEL PrimitiveType: void", "DEL SimpleType: Map", "DEL SimpleName: setState", "DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: get", "DEL ClassInstanceCreation", "DEL SimpleType: Map", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ParameterizedType: HashMap<Partition,Map<String,String>>", "DEL SingleVariableDeclaration", "DEL SimpleName: Partition", "DEL MethodInvocation", "DEL SimpleName: String", "DEL PrimitiveType: void", "DEL SimpleType: Partition", "DEL SimpleName: instance", "DEL MethodInvocation", "DEL SimpleName: _stateMap", "DEL SimpleType: HashMap", "DEL MethodInvocation", "DEL SimpleName: resourceName", "DEL SimpleName: String", "DEL SimpleName: resourceName", "DEL SimpleName: resourceName", "DEL SimpleName: partition", "DEL SimpleName: Map", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: HashMap", "DEL MethodInvocation", "DEL SimpleName: resourceName", "DEL SimpleName: get", "DEL SimpleName: _stateMap", "DEL SimpleType: String", "DEL SimpleName: state", "DEL Block", "DEL IfStatement", "DEL SimpleType: String", "DEL MethodDeclaration", "DEL SimpleName: put", "DEL ParameterizedType: HashMap<String,String>", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: put", "DEL ClassInstanceCreation", "DEL SimpleName: resourceName", "DEL IfStatement", "DEL SimpleName: _stateMap", "DEL SimpleName: state", "DEL SimpleName: partition", "DEL SimpleName: partition", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: containsKey", "DEL SimpleName: String", "DEL SimpleName: containsKey", "DEL SimpleName: setState", "DEL SimpleType: String", "DEL PrefixExpression: !", "DEL SimpleName: String", "DEL PrefixExpression: !", "DEL SimpleName: instance", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL ParameterizedType: Map<String,String>"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: Partition", "DEL SimpleName: Map", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL SimpleName: resourceName", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL SimpleType: String", "DEL SimpleType: String", "DEL ParameterizedType: Map<Partition,Map<String,String>>", "DEL MethodInvocation", "DEL SimpleType: Map", "DEL SimpleType: Partition", "DEL SimpleName: String", "DEL SimpleType: Map", "DEL SimpleName: getInstanceStateMap", "DEL SimpleType: String", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: resourceName", "DEL SimpleName: partition", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL ParameterizedType: Map<String,String>", "DEL SingleVariableDeclaration", "DEL SimpleType: Map", "DEL SimpleName: map", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: Map", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleType: Partition", "DEL SimpleName: String", "DEL SimpleName: Partition", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: emptyMap", "DEL SimpleName: String", "DEL SimpleName: get", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: _stateMap", "DEL SimpleName: String", "DEL SimpleName: map", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: Map", "DEL InfixExpression: !=", "DEL IfStatement", "DEL SimpleName: Partition", "DEL Block", "DEL SimpleName: resourceName", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleName: map", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleType: Map", "DEL SimpleName: resourceName", "DEL SimpleName: map", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: Partition", "DEL SimpleName: Collections", "DEL SimpleName: String", "DEL NullLiteral", "DEL Block", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: Map", "DEL SimpleType: String", "DEL SimpleName: getResourceMap", "DEL ParameterizedType: Map<Partition,Map<String,String>>", "DEL SimpleName: Map"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getStateMap", "DEL Modifier: public", "DEL Block", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: toString", "DEL SimpleName: _stateMap", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL SimpleType: String"]}]}}, {"BestPossibleStateOutput_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(167) at 5", "Insert ImportDeclaration(13) into CompilationUnit(167) at 6", "Insert QualifiedName: org.apache.helix.controller.common.PartitionStateMap(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.helix.controller.common.ResourcesStateMap(12) into ImportDeclaration(13) at 0", "Insert Javadoc(18) into TypeDeclaration: class(166) at 0", "Insert SimpleType: ResourcesStateMap(22) into TypeDeclaration: class(166) at 3", "Insert MethodDeclaration(72) into TypeDeclaration: class(166) at 4", "Insert MethodDeclaration(165) into TypeDeclaration: class(166) at 5", "Insert TagElement(17) into Javadoc(18) at 0", "Update SimpleName: Set(60) to ResourcesStateMap", "Move SimpleName: Set(60) into SimpleType: ResourcesStateMap(22) at 0", "Insert Javadoc(28) into MethodDeclaration(72) at 0", "Insert MarkerAnnotation(30) into MethodDeclaration(72) at 1", "Move Modifier: public(72) into MethodDeclaration(72) at 2", "Move ParameterizedType: Map<Partition,Map<String,String>>(292) into MethodDeclaration(72) at 3", "Insert SimpleName: getResourceMap(44) into MethodDeclaration(72) at 4", "Move SingleVariableDeclaration(150) into MethodDeclaration(72) at 5", "Move Block(142) into MethodDeclaration(72) at 6", "Insert Javadoc(76) into MethodDeclaration(165) at 0", "Insert MarkerAnnotation(78) into MethodDeclaration(165) at 1", "Move Modifier: public(144) into MethodDeclaration(165) at 2", "Move ParameterizedType: Map<String,Map<Partition,Map<String,String>>>(347) into MethodDeclaration(165) at 3", "Insert SimpleName: getStateMap(97) into MethodDeclaration(165) at 4", "Insert Block(164) into MethodDeclaration(165) at 5", "Insert TextElement: Output for BestPossibleStateCalStage.(16) into TagElement(17) at 0", "Insert TagElement(24) into Javadoc(28) at 0", "Insert TagElement: @param(26) into Javadoc(28) at 1", "Insert TagElement: @return(27) into Javadoc(28) at 2", "Insert SimpleName: Deprecated(29) into MarkerAnnotation(30) at 0", "Insert IfStatement(66) into Block(71) at 1", "Move ReturnStatement(277) into Block(71) at 3", "Insert TagElement(74) into Javadoc(76) at 0", "Insert TagElement: @return(75) into Javadoc(76) at 1", "Insert SimpleName: Deprecated(77) into MarkerAnnotation(78) at 0", "Insert VariableDeclarationStatement(135) into Block(164) at 0", "Insert EnhancedForStatement(161) into Block(164) at 1", "Move ReturnStatement(350) into Block(164) at 2", "Insert TextElement: Deprecated, use getResourceStatesMap instead.(23) into TagElement(24) at 0", "Insert SimpleName: resourceName(25) into TagElement: @param(26) at 0", "Insert SimpleType: PartitionStateMap(50) into VariableDeclarationStatement(57) at 0", "Move InfixExpression: !=(266) into IfStatement(66) at 0", "Insert Block(65) into IfStatement(66) at 1", "Insert TextElement: Deprecated, use getResourceStatesMap instead.(73) into TagElement(74) at 0", "Move ParameterizedType: Map<String,Map<Partition,Map<String,String>>>(30) into VariableDeclarationStatement(135) at 0", "Insert VariableDeclarationFragment(134) into VariableDeclarationStatement(135) at 1", "Insert SingleVariableDeclaration(144) into EnhancedForStatement(161) at 0", "Insert MethodInvocation(147) into EnhancedForStatement(161) at 1", "Insert Block(160) into EnhancedForStatement(161) at 2", "Update SimpleName: _stateMap(349) to stateMap", "Update SimpleName: Partition(119) to PartitionStateMap", "Move SimpleName: Partition(119) into SimpleType: PartitionStateMap(50) at 0", "Insert ReturnStatement(64) into Block(65) at 0", "Insert SimpleName: stateMap(115) into VariableDeclarationFragment(134) at 0", "Move ClassInstanceCreation(54) into VariableDeclarationFragment(134) at 1", "Insert ParameterizedType: Map.Entry<String,PartitionStateMap>(142) into SingleVariableDeclaration(144) at 0", "Insert SimpleName: e(143) into SingleVariableDeclaration(144) at 1", "Update SimpleName: _stateMap(196) to _resourceStateMap", "Move SimpleName: _stateMap(196) into MethodInvocation(147) at 0", "Update SimpleName: get(197) to entrySet", "Move SimpleName: get(197) into MethodInvocation(147) at 1", "Insert ExpressionStatement(159) into Block(160) at 0", "Update SimpleName: _stateMap(130) to _resourceStateMap", "Insert MethodInvocation(63) into ReturnStatement(64) at 0", "Update SimpleType: HashMap(172) to Map.Entry", "Move SimpleType: HashMap(172) into ParameterizedType: Map.Entry<String,PartitionStateMap>(142) at 0", "Move SimpleType: String(107) into ParameterizedType: Map.Entry<String,PartitionStateMap>(142) at 1", "Update SimpleType: Partition(174) to PartitionStateMap", "Move SimpleType: Partition(174) into ParameterizedType: Map.Entry<String,PartitionStateMap>(142) at 2", "Insert MethodInvocation(158) into ExpressionStatement(159) at 0", "Move SimpleName: map(136) into MethodInvocation(63) at 0", "Update SimpleName: bestInstanceStateMappingForResource(139) to getStateMap", "Move SimpleName: bestInstanceStateMappingForResource(139) into MethodInvocation(63) at 1", "Insert QualifiedName: Map.Entry(136) into SimpleType: Map.Entry(137) at 0", "Update SimpleName: Partition(173) to PartitionStateMap", "Update SimpleName: _stateMap(214) to stateMap", "Move SimpleName: _stateMap(214) into MethodInvocation(158) at 0", "Move SimpleName: put(221) into MethodInvocation(158) at 1", "Insert MethodInvocation(152) into MethodInvocation(158) at 2", "Insert MethodInvocation(157) into MethodInvocation(158) at 3", "Update SimpleName: _stateMap(258) to e", "Move SimpleName: _stateMap(258) into MethodInvocation(152) at 0", "Update SimpleName: get(259) to getKey", "Move SimpleName: get(259) into MethodInvocation(152) at 1", "Insert MethodInvocation(155) into MethodInvocation(157) at 0", "Insert SimpleName: getStateMap(156) into MethodInvocation(157) at 1", "Update SimpleName: map(267) to e", "Move SimpleName: map(267) into MethodInvocation(155) at 0", "Update SimpleName: get(268) to getValue", "Move SimpleName: get(268) into MethodInvocation(155) at 1", "Delete SimpleName: _stateMap(92)", "Delete SimpleName: containsKey(93)", "Delete SimpleName: resourceName(94)", "Delete MethodInvocation(95)", "Delete PrefixExpression: !(96)", "Delete SimpleName: _stateMap(97)", "Delete SimpleName: put(98)", "Delete SimpleName: resourceName(99)", "Delete SimpleName: HashMap(100)", "Delete SimpleType: HashMap(101)", "Delete SimpleName: Partition(102)", "Delete SimpleType: Partition(103)", "Delete SimpleName: Map(104)", "Delete SimpleType: Map(105)", "Delete SimpleName: String(108)", "Delete SimpleType: String(109)", "Delete ParameterizedType: Map<String,String>(110)", "Delete ParameterizedType: HashMap<Partition,Map<String,String>>(111)", "Delete ClassInstanceCreation(112)", "Delete MethodInvocation(113)", "Delete ExpressionStatement(114)", "Delete Block(115)", "Delete IfStatement(116)", "Delete SimpleName: Map(117)", "Delete SimpleType: Map(118)", "Delete SimpleType: Partition(120)", "Delete SimpleName: Map(121)", "Delete SimpleType: Map(122)", "Delete SimpleName: String(123)", "Delete SimpleType: String(124)", "Delete SimpleName: String(125)", "Delete SimpleType: String(126)", "Delete ParameterizedType: Map<String,String>(127)", "Delete ParameterizedType: Map<Partition,Map<String,String>>(128)", "Delete SimpleName: put(137)", "Delete SimpleName: resource(138)", "Delete MethodInvocation(140)", "Delete ExpressionStatement(141)", "Delete SimpleName: HashMap(171)", "Delete SimpleName: _stateMap(31)", "Delete VariableDeclarationFragment(32)", "Delete FieldDeclaration(33)", "Delete Modifier: public(34)", "Delete SimpleName: BestPossibleStateOutput(35)", "Delete SimpleName: _stateMap(36)", "Delete Assignment: =(55)", "Delete ExpressionStatement(56)", "Delete Block(57)", "Delete MethodDeclaration(58)", "Delete Modifier: public(59)", "Delete SimpleType: Set(61)", "Delete SimpleName: String(62)", "Delete SimpleType: String(63)", "Delete ParameterizedType: Set<String>(64)", "Delete SimpleName: resourceSet(65)", "Delete SimpleName: _stateMap(66)", "Delete SimpleName: keySet(67)", "Delete MethodInvocation(68)", "Delete ReturnStatement(69)", "Delete Block(70)", "Delete MethodDeclaration(71)", "Delete PrimitiveType: void(73)", "Delete SimpleName: setState(74)", "Delete SimpleName: String(75)", "Delete SimpleType: String(76)", "Delete SimpleName: resourceName(77)", "Delete SingleVariableDeclaration(78)", "Delete SimpleName: Partition(79)", "Delete SimpleType: Partition(80)", "Delete SimpleName: resource(81)", "Delete SingleVariableDeclaration(82)", "Delete SimpleName: Map(83)", "Delete SimpleType: Map(84)", "Delete SimpleName: String(85)", "Delete SimpleType: String(86)", "Delete SimpleName: String(87)", "Delete SimpleType: String(88)", "Delete ParameterizedType: Map<String,String>(89)", "Delete SimpleName: bestInstanceStateMappingForResource(90)", "Delete SingleVariableDeclaration(91)", "Delete MethodDeclaration(143)", "Delete PrimitiveType: void(145)", "Delete SimpleName: setState(146)", "Delete SimpleName: Partition(151)", "Delete SimpleType: Partition(152)", "Delete SimpleName: partition(153)", "Delete SingleVariableDeclaration(154)", "Delete SimpleName: String(155)", "Delete SimpleType: String(156)", "Delete SimpleName: instance(157)", "Delete SingleVariableDeclaration(158)", "Delete SimpleName: String(159)", "Delete SimpleType: String(160)", "Delete SimpleName: state(161)", "Delete SingleVariableDeclaration(162)", "Delete SimpleName: _stateMap(163)", "Delete SimpleName: containsKey(164)", "Delete SimpleName: resourceName(165)", "Delete MethodInvocation(166)", "Delete PrefixExpression: !(167)", "Delete SimpleName: _stateMap(168)", "Delete SimpleName: put(169)", "Delete SimpleName: resourceName(170)", "Delete SimpleName: Map(175)", "Delete SimpleType: Map(176)", "Delete SimpleName: String(177)", "Delete SimpleType: String(178)", "Delete SimpleName: String(179)", "Delete SimpleType: String(180)", "Delete ParameterizedType: Map<String,String>(181)", "Delete ParameterizedType: HashMap<Partition,Map<String,String>>(182)", "Delete ClassInstanceCreation(183)", "Delete MethodInvocation(184)", "Delete ExpressionStatement(185)", "Delete Block(186)", "Delete IfStatement(187)", "Delete SimpleName: _stateMap(188)", "Delete SimpleName: get(189)", "Delete SimpleName: resourceName(190)", "Delete MethodInvocation(191)", "Delete SimpleName: containsKey(192)", "Delete SimpleName: partition(193)", "Delete MethodInvocation(194)", "Delete PrefixExpression: !(195)", "Delete SimpleName: resourceName(198)", "Delete MethodInvocation(199)", "Delete SimpleName: put(200)", "Delete SimpleName: partition(201)", "Delete SimpleName: HashMap(202)", "Delete SimpleType: HashMap(203)", "Delete SimpleName: String(204)", "Delete SimpleType: String(205)", "Delete SimpleName: String(206)", "Delete SimpleType: String(207)", "Delete ParameterizedType: HashMap<String,String>(208)", "Delete ClassInstanceCreation(209)", "Delete MethodInvocation(210)", "Delete ExpressionStatement(211)", "Delete Block(212)", "Delete IfStatement(213)", "Delete SimpleName: get(215)", "Delete SimpleName: resourceName(216)", "Delete MethodInvocation(217)", "Delete SimpleName: get(218)", "Delete SimpleName: partition(219)", "Delete MethodInvocation(220)", "Delete SimpleName: instance(222)", "Delete SimpleName: state(223)", "Delete MethodInvocation(224)", "Delete ExpressionStatement(225)", "Delete Block(226)", "Delete MethodDeclaration(227)", "Delete Modifier: public(228)", "Delete SimpleName: Map(229)", "Delete SimpleType: Map(230)", "Delete SimpleName: String(231)", "Delete SimpleType: String(232)", "Delete SimpleName: String(233)", "Delete SimpleType: String(234)", "Delete ParameterizedType: Map<String,String>(235)", "Delete SimpleName: getInstanceStateMap(236)", "Delete SimpleName: String(237)", "Delete SimpleType: String(238)", "Delete SimpleName: resourceName(239)", "Delete SingleVariableDeclaration(240)", "Delete SimpleName: Partition(241)", "Delete SimpleType: Partition(242)", "Delete SimpleName: partition(243)", "Delete SingleVariableDeclaration(244)", "Delete SimpleName: Map(245)", "Delete SimpleType: Map(246)", "Delete SimpleName: Partition(247)", "Delete SimpleType: Partition(248)", "Delete SimpleName: Map(249)", "Delete SimpleType: Map(250)", "Delete SimpleName: String(251)", "Delete SimpleType: String(252)", "Delete SimpleName: String(253)", "Delete SimpleType: String(254)", "Delete ParameterizedType: Map<String,String>(255)", "Delete ParameterizedType: Map<Partition,Map<String,String>>(256)", "Delete SimpleName: map(257)", "Delete SimpleName: resourceName(260)", "Delete MethodInvocation(261)", "Delete VariableDeclarationFragment(262)", "Delete VariableDeclarationStatement(263)", "Delete SimpleName: partition(269)", "Delete MethodInvocation(270)", "Delete ReturnStatement(271)", "Delete Block(272)", "Delete IfStatement(273)", "Delete Block(278)", "Delete MethodDeclaration(279)", "Delete Modifier: public(280)", "Delete SimpleName: getResourceMap(293)", "Delete SimpleName: String(294)", "Delete SimpleType: String(295)", "Delete SimpleName: resourceName(296)", "Delete SingleVariableDeclaration(297)", "Delete SimpleName: Map(298)", "Delete SimpleType: Map(299)", "Delete SimpleName: Partition(300)", "Delete SimpleType: Partition(301)", "Delete SimpleName: Map(302)", "Delete SimpleType: Map(303)", "Delete SimpleName: String(304)", "Delete SimpleType: String(305)", "Delete SimpleName: String(306)", "Delete SimpleType: String(307)", "Delete ParameterizedType: Map<String,String>(308)", "Delete ParameterizedType: Map<Partition,Map<String,String>>(309)", "Delete SimpleName: map(310)", "Delete SimpleName: _stateMap(311)", "Delete SimpleName: get(312)", "Delete SimpleName: resourceName(313)", "Delete MethodInvocation(314)", "Delete VariableDeclarationFragment(315)", "Delete VariableDeclarationStatement(316)", "Delete SimpleName: map(317)", "Delete NullLiteral(318)", "Delete InfixExpression: !=(319)", "Delete SimpleName: map(320)", "Delete ReturnStatement(321)", "Delete Block(322)", "Delete IfStatement(323)", "Delete SimpleName: Collections(324)", "Delete SimpleName: emptyMap(325)", "Delete MethodInvocation(326)", "Delete ReturnStatement(327)", "Delete Block(328)", "Delete MethodDeclaration(329)", "Delete Modifier: public(330)", "Delete SimpleName: getStateMap(348)", "Delete Block(351)", "Delete MethodDeclaration(352)", "Delete SimpleName: Override(353)", "Delete MarkerAnnotation(354)", "Delete Modifier: public(355)", "Delete SimpleName: String(356)", "Delete SimpleType: String(357)", "Delete SimpleName: toString(358)", "Delete SimpleName: _stateMap(359)", "Delete SimpleName: toString(360)", "Delete MethodInvocation(361)", "Delete ReturnStatement(362)", "Delete Block(363)", "Delete MethodDeclaration(364)"]}}, {"MessageGenerationPhase_cluster": {"actions": [{"root": "UPDATE from BestPossibleStateOutput to IntermediateStateOutput", "operations": ["UPD SimpleType: BestPossibleStateOutput from BestPossibleStateOutput to IntermediateStateOutput", "UPD SimpleName: BestPossibleStateOutput from BestPossibleStateOutput to IntermediateStateOutput"]}, {"root": "UPDATE from bestPossibleStateOutput to intermediateStateOutput", "operations": ["UPD SimpleName: bestPossibleStateOutput from bestPossibleStateOutput to intermediateStateOutput", "UPD SimpleName: bestPossibleStateOutput from bestPossibleStateOutput to intermediateStateOutput", "UPD SimpleName: bestPossibleStateOutput from bestPossibleStateOutput to intermediateStateOutput"]}, {"root": "UPDATE from AttributeName.BEST_POSSIBLE_STATE to AttributeName.INTERMEDIATE_STATE", "operations": ["UPD QualifiedName: AttributeName.BEST_POSSIBLE_STATE from AttributeName.BEST_POSSIBLE_STATE to AttributeName.INTERMEDIATE_STATE"]}, {"root": "UPDATE from \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|BEST_POSSIBLE_STATE\" to \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|INTERMEDIATE_STATE\"", "operations": ["UPD StringLiteral: \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|BEST_POSSIBLE_STATE\" from \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|BEST_POSSIBLE_STATE\" to \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|INTERMEDIATE_STATE\""]}]}}, {"MessageGenerationPhase_diff": {"operations": ["Update SimpleType: BestPossibleStateOutput(115) to IntermediateStateOutput", "Update SimpleName: BestPossibleStateOutput(114) to IntermediateStateOutput", "Update SimpleName: bestPossibleStateOutput(116) to intermediateStateOutput", "Update SimpleName: bestPossibleStateOutput(140) to intermediateStateOutput", "Update QualifiedName: AttributeName.BEST_POSSIBLE_STATE(119) to AttributeName.INTERMEDIATE_STATE", "Update StringLiteral: \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|BEST_POSSIBLE_STATE\"(148) to \". Requires HelixManager|DataCache|RESOURCES|CURRENT_STATE|INTERMEDIATE_STATE\"", "Update SimpleName: bestPossibleStateOutput(254) to intermediateStateOutput"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}