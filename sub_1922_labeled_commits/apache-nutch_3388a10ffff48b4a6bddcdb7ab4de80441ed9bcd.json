{"application": "apache-nutch", "csha": "3388a10ffff48b4a6bddcdb7ab4de80441ed9bcd", "files": [{"CrawlDb_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "INS SimpleType: NutchTool to TypeDeclaration: class at 3", "operations": ["INS SimpleType: NutchTool to TypeDeclaration: class at 3", "INS SimpleName: NutchTool to SimpleType: NutchTool at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS TryStatement to Block at 17", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: getPath to MethodInvocation at 1", "INS SimpleName: f2 to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleType: Comparator to ParameterizedType: Comparator<File> at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: segmentsList to VariableDeclarationFragment at 0", "INS StringLiteral: \"filter\" to MethodInvocation at 2", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Path to ArrayType: Path[] at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: dirs to MethodInvocation at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS PrefixExpression: - to MethodInvocation at 2", "INS SimpleName: lastModified to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS SimpleType: Path to ParameterizedType: HashSet<Path> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: CrawlDbFilter.URL_NORMALIZING to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 16", "INS SimpleName: toArray to MethodInvocation at 1", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS SimpleType: File to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getBoolean to MethodInvocation at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: File to SimpleType: File at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: File to ParameterizedType: Comparator<File> at 1", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: File[] to VariableDeclarationStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: dirs to VariableDeclarationFragment at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: segmentsDir to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS SimpleName: normalize to Assignment: = at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ArrayType: Path[] to ArrayCreation at 0", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 12", "INS SimpleName: crawldb to VariableDeclarationFragment at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: HashSet to ParameterizedType: HashSet<Path> at 0", "INS StringLiteral: \"/segments\" to InfixExpression: + at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleName: additionsAllowed to VariableDeclarationFragment at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: e to MethodInvocation at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: f1 to SingleVariableDeclaration at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: Path to SimpleType: Path at 0", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS Block to CatchClause at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: segmentsDir to VariableDeclarationFragment at 0", "INS ParameterizedType: Comparator<File> to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: force to Assignment: = at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: filter to Assignment: = at 0", "INS SimpleName: getBoolean to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: compare to MethodDeclaration at 3", "INS Dimension to ArrayType: File[] at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: crawldb to ClassInstanceCreation at 1", "INS SimpleName: f2 to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: > at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ParameterizedType: HashSet<Path> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS ClassInstanceCreation to MethodInvocation at 1", "INS IfStatement to Block at 8", "INS SimpleName: lastModified to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: segment_dir to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: normalize to VariableDeclarationFragment at 0", "INS QualifiedName: CrawlDbFilter.URL_FILTERING to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleName: File to SimpleType: File at 0", "INS StringLiteral: \"/crawldb\" to InfixExpression: + at 1", "INS StringLiteral: \"force\" to MethodInvocation at 2", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Block to IfStatement at 1", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SimpleType: File to ArrayType: File[] at 0", "INS SimpleName: getBoolean to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS ArrayCreation to MethodInvocation at 2", "INS IfStatement to Block at 9", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleName: results to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: CRAWLDB_ADDITIONS_ALLOWED to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: update to MethodInvocation at 0", "INS IfStatement to Block at 7", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: segment_dir to ClassInstanceCreation at 1", "INS StringLiteral: \"normalize\" to MethodInvocation at 2", "INS StringLiteral: \"noAdditions\" to MethodInvocation at 2", "INS SimpleName: force to VariableDeclarationFragment at 0", "INS SimpleName: filter to MethodInvocation at 4", "INS VariableDeclarationStatement to Block at 1", "INS Dimension to ArrayType: Path[] at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 13", "INS SimpleName: dirs to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: - to ReturnStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: Path to ParameterizedType: HashSet<Path> at 1", "INS ReturnStatement to Block at 2", "INS SimpleName: sort to MethodInvocation at 1", "INS IfStatement to Block at 10", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: filter to VariableDeclarationFragment at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: additionsAllowed to Assignment: = at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: normalize to MethodInvocation at 3", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS ParameterizedType: HashSet<Path> to ClassInstanceCreation at 0", "INS SimpleName: additionsAllowed to MethodInvocation at 5", "INS SimpleType: Exception to MethodDeclaration at 6", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"CrawlDb update: \" to InfixExpression: + at 0", "INS ReturnStatement to IfStatement at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: args to MethodInvocation at 0", "INS ReturnStatement to IfStatement at 2", "INS MethodInvocation to ArrayCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: listFiles to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: force to MethodInvocation at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: segmentsList to ArrayAccess at 0", "INS ExpressionStatement to Block at 15", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: f1 to MethodInvocation at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: segmentsList to MethodInvocation at 2", "INS SimpleName: dirs to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 14", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: HashSet to ParameterizedType: HashSet<Path> at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from Configured to Comparator", "operations": ["UPD SimpleName: Configured from Configured to Comparator"]}, {"root": "MOVE from SimpleType: Comparator", "operations": ["MOV SimpleName: Configured to SimpleType: Comparator at 0"]}, {"root": "DEL SimpleType: Configured", "operations": ["DEL SimpleType: Configured"]}]}}, {"CrawlDb_diff": {"operations": ["Insert ImportDeclaration(45) into CompilationUnit(1350) at 15", "Insert QualifiedName: org.apache.nutch.util.NutchTool(44) into ImportDeclaration(45) at 0", "Insert SimpleType: NutchTool(55) into TypeDeclaration: class(1349) at 3", "Insert MethodDeclaration(1348) into TypeDeclaration: class(1349) at 18", "Insert SimpleName: NutchTool(54) into SimpleType: NutchTool(55) at 0", "Insert MarkerAnnotation(1059) into MethodDeclaration(1348) at 0", "Insert Modifier: public(1060) into MethodDeclaration(1348) at 1", "Insert ParameterizedType: Map<String,Object>(1067) into MethodDeclaration(1348) at 2", "Insert SimpleName: run(1068) into MethodDeclaration(1348) at 3", "Insert SingleVariableDeclaration(1077) into MethodDeclaration(1348) at 4", "Insert SingleVariableDeclaration(1081) into MethodDeclaration(1348) at 5", "Insert SimpleType: Exception(1083) into MethodDeclaration(1348) at 6", "Insert Block(1347) into MethodDeclaration(1348) at 7", "Insert SimpleName: Override(1058) into MarkerAnnotation(1059) at 0", "Insert SimpleType: Map(1062) into ParameterizedType: Map<String,Object>(1067) at 0", "Insert SimpleType: String(1064) into ParameterizedType: Map<String,Object>(1067) at 1", "Insert SimpleType: Object(1066) into ParameterizedType: Map<String,Object>(1067) at 2", "Insert ParameterizedType: Map<String,String>(1075) into SingleVariableDeclaration(1077) at 0", "Insert SimpleName: args(1076) into SingleVariableDeclaration(1077) at 1", "Insert SimpleType: String(1079) into SingleVariableDeclaration(1081) at 0", "Insert SimpleName: crawlId(1080) into SingleVariableDeclaration(1081) at 1", "Insert SimpleName: Exception(1082) into SimpleType: Exception(1083) at 0", "Insert VariableDeclarationStatement(1101) into Block(1347) at 0", "Insert VariableDeclarationStatement(1107) into Block(1347) at 1", "Insert VariableDeclarationStatement(1117) into Block(1347) at 2", "Insert VariableDeclarationStatement(1127) into Block(1347) at 3", "Insert VariableDeclarationStatement(1137) into Block(1347) at 4", "Insert VariableDeclarationStatement(1142) into Block(1347) at 5", "Insert VariableDeclarationStatement(1156) into Block(1347) at 6", "Insert IfStatement(1166) into Block(1347) at 7", "Insert IfStatement(1176) into Block(1347) at 8", "Insert IfStatement(1186) into Block(1347) at 9", "Insert IfStatement(1196) into Block(1347) at 10", "Insert VariableDeclarationStatement(1204) into Block(1347) at 11", "Insert VariableDeclarationStatement(1212) into Block(1347) at 12", "Insert VariableDeclarationStatement(1221) into Block(1347) at 13", "Insert VariableDeclarationStatement(1231) into Block(1347) at 14", "Insert ExpressionStatement(1271) into Block(1347) at 15", "Insert ExpressionStatement(1283) into Block(1347) at 16", "Insert TryStatement(1346) into Block(1347) at 17", "Insert SimpleName: Map(1061) into SimpleType: Map(1062) at 0", "Insert SimpleName: String(1063) into SimpleType: String(1064) at 0", "Insert SimpleName: Object(1065) into SimpleType: Object(1066) at 0", "Insert SimpleType: Map(1070) into ParameterizedType: Map<String,String>(1075) at 0", "Insert SimpleType: String(1072) into ParameterizedType: Map<String,String>(1075) at 1", "Insert SimpleType: String(1074) into ParameterizedType: Map<String,String>(1075) at 2", "Insert SimpleName: String(1078) into SimpleType: String(1079) at 0", "Insert ParameterizedType: Map<String,Object>(1090) into VariableDeclarationStatement(1101) at 0", "Insert VariableDeclarationFragment(1100) into VariableDeclarationStatement(1101) at 1", "Insert SimpleType: String(1103) into VariableDeclarationStatement(1107) at 0", "Insert VariableDeclarationFragment(1106) into VariableDeclarationStatement(1107) at 1", "Insert PrimitiveType: boolean(1108) into VariableDeclarationStatement(1117) at 0", "Insert VariableDeclarationFragment(1116) into VariableDeclarationStatement(1117) at 1", "Insert PrimitiveType: boolean(1118) into VariableDeclarationStatement(1127) at 0", "Insert VariableDeclarationFragment(1126) into VariableDeclarationStatement(1127) at 1", "Insert PrimitiveType: boolean(1128) into VariableDeclarationStatement(1137) at 0", "Insert VariableDeclarationFragment(1136) into VariableDeclarationStatement(1137) at 1", "Insert PrimitiveType: boolean(1138) into VariableDeclarationStatement(1142) at 0", "Insert VariableDeclarationFragment(1141) into VariableDeclarationStatement(1142) at 1", "Insert ParameterizedType: HashSet<Path>(1147) into VariableDeclarationStatement(1156) at 0", "Insert VariableDeclarationFragment(1155) into VariableDeclarationStatement(1156) at 1", "Insert MethodInvocation(1160) into IfStatement(1166) at 0", "Insert Block(1165) into IfStatement(1166) at 1", "Insert MethodInvocation(1170) into IfStatement(1176) at 0", "Insert Block(1175) into IfStatement(1176) at 1", "Insert MethodInvocation(1180) into IfStatement(1186) at 0", "Insert Block(1185) into IfStatement(1186) at 1", "Insert MethodInvocation(1190) into IfStatement(1196) at 0", "Insert Block(1195) into IfStatement(1196) at 1", "Insert SimpleType: String(1198) into VariableDeclarationStatement(1204) at 0", "Insert VariableDeclarationFragment(1203) into VariableDeclarationStatement(1204) at 1", "Insert SimpleType: String(1206) into VariableDeclarationStatement(1212) at 0", "Insert VariableDeclarationFragment(1211) into VariableDeclarationStatement(1212) at 1", "Insert SimpleType: File(1214) into VariableDeclarationStatement(1221) at 0", "Insert VariableDeclarationFragment(1220) into VariableDeclarationStatement(1221) at 1", "Insert ArrayType: File[](1225) into VariableDeclarationStatement(1231) at 0", "Insert VariableDeclarationFragment(1230) into VariableDeclarationStatement(1231) at 1", "Insert MethodInvocation(1270) into ExpressionStatement(1271) at 0", "Insert MethodInvocation(1282) into ExpressionStatement(1283) at 0", "Insert Block(1317) into TryStatement(1346) at 0", "Insert CatchClause(1345) into TryStatement(1346) at 1", "Insert SimpleName: Map(1069) into SimpleType: Map(1070) at 0", "Insert SimpleName: String(1071) into SimpleType: String(1072) at 0", "Insert SimpleName: String(1073) into SimpleType: String(1074) at 0", "Insert SimpleType: Map(1085) into ParameterizedType: Map<String,Object>(1090) at 0", "Insert SimpleType: String(1087) into ParameterizedType: Map<String,Object>(1090) at 1", "Insert SimpleType: Object(1089) into ParameterizedType: Map<String,Object>(1090) at 2", "Insert SimpleName: results(1091) into VariableDeclarationFragment(1100) at 0", "Insert ClassInstanceCreation(1099) into VariableDeclarationFragment(1100) at 1", "Insert SimpleName: String(1102) into SimpleType: String(1103) at 0", "Insert SimpleName: RESULT(1104) into VariableDeclarationFragment(1106) at 0", "Insert StringLiteral: \"result\"(1105) into VariableDeclarationFragment(1106) at 1", "Insert SimpleName: normalize(1109) into VariableDeclarationFragment(1116) at 0", "Insert MethodInvocation(1115) into VariableDeclarationFragment(1116) at 1", "Insert SimpleName: filter(1119) into VariableDeclarationFragment(1126) at 0", "Insert MethodInvocation(1125) into VariableDeclarationFragment(1126) at 1", "Insert SimpleName: additionsAllowed(1129) into VariableDeclarationFragment(1136) at 0", "Insert MethodInvocation(1135) into VariableDeclarationFragment(1136) at 1", "Insert SimpleName: force(1139) into VariableDeclarationFragment(1141) at 0", "Insert BooleanLiteral: false(1140) into VariableDeclarationFragment(1141) at 1", "Insert SimpleType: HashSet(1144) into ParameterizedType: HashSet<Path>(1147) at 0", "Insert SimpleType: Path(1146) into ParameterizedType: HashSet<Path>(1147) at 1", "Insert SimpleName: dirs(1148) into VariableDeclarationFragment(1155) at 0", "Insert ClassInstanceCreation(1154) into VariableDeclarationFragment(1155) at 1", "Insert SimpleName: args(1157) into MethodInvocation(1160) at 0", "Insert SimpleName: containsKey(1158) into MethodInvocation(1160) at 1", "Insert StringLiteral: \"normalize\"(1159) into MethodInvocation(1160) at 2", "Insert ExpressionStatement(1164) into Block(1165) at 0", "Insert SimpleName: args(1167) into MethodInvocation(1170) at 0", "Insert SimpleName: containsKey(1168) into MethodInvocation(1170) at 1", "Insert StringLiteral: \"filter\"(1169) into MethodInvocation(1170) at 2", "Insert ExpressionStatement(1174) into Block(1175) at 0", "Insert SimpleName: args(1177) into MethodInvocation(1180) at 0", "Insert SimpleName: containsKey(1178) into MethodInvocation(1180) at 1", "Insert StringLiteral: \"force\"(1179) into MethodInvocation(1180) at 2", "Insert ExpressionStatement(1184) into Block(1185) at 0", "Insert SimpleName: args(1187) into MethodInvocation(1190) at 0", "Insert SimpleName: containsKey(1188) into MethodInvocation(1190) at 1", "Insert StringLiteral: \"noAdditions\"(1189) into MethodInvocation(1190) at 2", "Insert ExpressionStatement(1194) into Block(1195) at 0", "Insert SimpleName: String(1197) into SimpleType: String(1198) at 0", "Insert SimpleName: crawldb(1199) into VariableDeclarationFragment(1203) at 0", "Insert InfixExpression: +(1202) into VariableDeclarationFragment(1203) at 1", "Insert SimpleName: String(1205) into SimpleType: String(1206) at 0", "Insert SimpleName: segment_dir(1207) into VariableDeclarationFragment(1211) at 0", "Insert InfixExpression: +(1210) into VariableDeclarationFragment(1211) at 1", "Insert SimpleName: File(1213) into SimpleType: File(1214) at 0", "Insert SimpleName: segmentsDir(1215) into VariableDeclarationFragment(1220) at 0", "Insert ClassInstanceCreation(1219) into VariableDeclarationFragment(1220) at 1", "Insert SimpleType: File(1223) into ArrayType: File[](1225) at 0", "Insert Dimension(1224) into ArrayType: File[](1225) at 1", "Insert SimpleName: segmentsList(1226) into VariableDeclarationFragment(1230) at 0", "Insert MethodInvocation(1229) into VariableDeclarationFragment(1230) at 1", "Insert SimpleName: Arrays(1232) into MethodInvocation(1270) at 0", "Insert SimpleName: sort(1233) into MethodInvocation(1270) at 1", "Insert SimpleName: segmentsList(1234) into MethodInvocation(1270) at 2", "Insert ClassInstanceCreation(1269) into MethodInvocation(1270) at 3", "Insert SimpleName: dirs(1272) into MethodInvocation(1282) at 0", "Insert SimpleName: add(1273) into MethodInvocation(1282) at 1", "Insert ClassInstanceCreation(1281) into MethodInvocation(1282) at 2", "Insert ExpressionStatement(1305) into Block(1317) at 0", "Insert ExpressionStatement(1314) into Block(1317) at 1", "Insert ReturnStatement(1316) into Block(1317) at 2", "Insert SingleVariableDeclaration(1321) into CatchClause(1345) at 0", "Insert Block(1344) into CatchClause(1345) at 1", "Insert SimpleName: Map(1084) into SimpleType: Map(1085) at 0", "Insert SimpleName: String(1086) into SimpleType: String(1087) at 0", "Insert SimpleName: Object(1088) into SimpleType: Object(1089) at 0", "Insert ParameterizedType: HashMap<String,Object>(1098) into ClassInstanceCreation(1099) at 0", "Insert MethodInvocation(1111) into MethodInvocation(1115) at 0", "Insert SimpleName: getBoolean(1112) into MethodInvocation(1115) at 1", "Insert QualifiedName: CrawlDbFilter.URL_NORMALIZING(1113) into MethodInvocation(1115) at 2", "Insert BooleanLiteral: false(1114) into MethodInvocation(1115) at 3", "Insert MethodInvocation(1121) into MethodInvocation(1125) at 0", "Insert SimpleName: getBoolean(1122) into MethodInvocation(1125) at 1", "Insert QualifiedName: CrawlDbFilter.URL_FILTERING(1123) into MethodInvocation(1125) at 2", "Insert BooleanLiteral: false(1124) into MethodInvocation(1125) at 3", "Insert MethodInvocation(1131) into MethodInvocation(1135) at 0", "Insert SimpleName: getBoolean(1132) into MethodInvocation(1135) at 1", "Insert SimpleName: CRAWLDB_ADDITIONS_ALLOWED(1133) into MethodInvocation(1135) at 2", "Insert BooleanLiteral: true(1134) into MethodInvocation(1135) at 3", "Insert SimpleName: HashSet(1143) into SimpleType: HashSet(1144) at 0", "Insert SimpleName: Path(1145) into SimpleType: Path(1146) at 0", "Insert ParameterizedType: HashSet<Path>(1153) into ClassInstanceCreation(1154) at 0", "Insert Assignment: =(1163) into ExpressionStatement(1164) at 0", "Insert Assignment: =(1173) into ExpressionStatement(1174) at 0", "Insert Assignment: =(1183) into ExpressionStatement(1184) at 0", "Insert Assignment: =(1193) into ExpressionStatement(1194) at 0", "Insert SimpleName: crawlId(1200) into InfixExpression: +(1202) at 0", "Insert StringLiteral: \"/crawldb\"(1201) into InfixExpression: +(1202) at 1", "Insert SimpleName: crawlId(1208) into InfixExpression: +(1210) at 0", "Insert StringLiteral: \"/segments\"(1209) into InfixExpression: +(1210) at 1", "Insert SimpleType: File(1217) into ClassInstanceCreation(1219) at 0", "Insert SimpleName: segment_dir(1218) into ClassInstanceCreation(1219) at 1", "Insert SimpleName: File(1222) into SimpleType: File(1223) at 0", "Insert SimpleName: segmentsDir(1227) into MethodInvocation(1229) at 0", "Insert SimpleName: listFiles(1228) into MethodInvocation(1229) at 1", "Insert ParameterizedType: Comparator<File>(1239) into ClassInstanceCreation(1269) at 0", "Insert AnonymousClassDeclaration(1268) into ClassInstanceCreation(1269) at 1", "Insert SimpleType: Path(1275) into ClassInstanceCreation(1281) at 0", "Insert MethodInvocation(1280) into ClassInstanceCreation(1281) at 1", "Insert MethodInvocation(1304) into ExpressionStatement(1305) at 0", "Insert MethodInvocation(1313) into ExpressionStatement(1314) at 0", "Insert SimpleName: results(1315) into ReturnStatement(1316) at 0", "Insert SimpleType: Exception(1319) into SingleVariableDeclaration(1321) at 0", "Insert SimpleName: e(1320) into SingleVariableDeclaration(1321) at 1", "Insert ExpressionStatement(1331) into Block(1344) at 0", "Insert ExpressionStatement(1341) into Block(1344) at 1", "Insert ReturnStatement(1343) into Block(1344) at 2", "Insert SimpleType: HashMap(1093) into ParameterizedType: HashMap<String,Object>(1098) at 0", "Insert SimpleType: String(1095) into ParameterizedType: HashMap<String,Object>(1098) at 1", "Insert SimpleType: Object(1097) into ParameterizedType: HashMap<String,Object>(1098) at 2", "Insert SimpleName: getConf(1110) into MethodInvocation(1111) at 0", "Insert SimpleName: getConf(1120) into MethodInvocation(1121) at 0", "Insert SimpleName: getConf(1130) into MethodInvocation(1131) at 0", "Insert SimpleType: HashSet(1150) into ParameterizedType: HashSet<Path>(1153) at 0", "Insert SimpleType: Path(1152) into ParameterizedType: HashSet<Path>(1153) at 1", "Insert SimpleName: normalize(1161) into Assignment: =(1163) at 0", "Insert BooleanLiteral: true(1162) into Assignment: =(1163) at 1", "Insert SimpleName: filter(1171) into Assignment: =(1173) at 0", "Insert BooleanLiteral: true(1172) into Assignment: =(1173) at 1", "Insert SimpleName: force(1181) into Assignment: =(1183) at 0", "Insert BooleanLiteral: true(1182) into Assignment: =(1183) at 1", "Insert SimpleName: additionsAllowed(1191) into Assignment: =(1193) at 0", "Insert BooleanLiteral: false(1192) into Assignment: =(1193) at 1", "Insert SimpleName: File(1216) into SimpleType: File(1217) at 0", "Insert SimpleType: Comparator(1236) into ParameterizedType: Comparator<File>(1239) at 0", "Insert SimpleType: File(1238) into ParameterizedType: Comparator<File>(1239) at 1", "Insert MethodDeclaration(1267) into AnonymousClassDeclaration(1268) at 0", "Insert SimpleName: Path(1274) into SimpleType: Path(1275) at 0", "Insert ArrayAccess(1278) into MethodInvocation(1280) at 0", "Insert SimpleName: getPath(1279) into MethodInvocation(1280) at 1", "Insert SimpleName: update(1284) into MethodInvocation(1304) at 0", "Insert ClassInstanceCreation(1288) into MethodInvocation(1304) at 1", "Insert MethodInvocation(1299) into MethodInvocation(1304) at 2", "Insert SimpleName: normalize(1300) into MethodInvocation(1304) at 3", "Insert SimpleName: filter(1301) into MethodInvocation(1304) at 4", "Insert SimpleName: additionsAllowed(1302) into MethodInvocation(1304) at 5", "Insert SimpleName: force(1303) into MethodInvocation(1304) at 6", "Insert SimpleName: results(1306) into MethodInvocation(1313) at 0", "Insert SimpleName: put(1307) into MethodInvocation(1313) at 1", "Insert SimpleName: RESULT(1308) into MethodInvocation(1313) at 2", "Insert MethodInvocation(1312) into MethodInvocation(1313) at 3", "Insert SimpleName: Exception(1318) into SimpleType: Exception(1319) at 0", "Insert MethodInvocation(1330) into ExpressionStatement(1331) at 0", "Insert MethodInvocation(1340) into ExpressionStatement(1341) at 0", "Insert SimpleName: results(1342) into ReturnStatement(1343) at 0", "Insert SimpleName: HashMap(1092) into SimpleType: HashMap(1093) at 0", "Insert SimpleName: String(1094) into SimpleType: String(1095) at 0", "Insert SimpleName: Object(1096) into SimpleType: Object(1097) at 0", "Insert SimpleName: HashSet(1149) into SimpleType: HashSet(1150) at 0", "Insert SimpleName: Path(1151) into SimpleType: Path(1152) at 0", "Update SimpleName: Configured(52) to Comparator", "Move SimpleName: Configured(52) into SimpleType: Comparator(1236) at 0", "Insert SimpleName: File(1237) into SimpleType: File(1238) at 0", "Insert MarkerAnnotation(1241) into MethodDeclaration(1267) at 0", "Insert Modifier: public(1242) into MethodDeclaration(1267) at 1", "Insert PrimitiveType: int(1243) into MethodDeclaration(1267) at 2", "Insert SimpleName: compare(1244) into MethodDeclaration(1267) at 3", "Insert SingleVariableDeclaration(1248) into MethodDeclaration(1267) at 4", "Insert SingleVariableDeclaration(1252) into MethodDeclaration(1267) at 5", "Insert Block(1266) into MethodDeclaration(1267) at 6", "Insert SimpleName: segmentsList(1276) into ArrayAccess(1278) at 0", "Insert NumberLiteral: 0(1277) into ArrayAccess(1278) at 1", "Insert SimpleType: Path(1286) into ClassInstanceCreation(1288) at 0", "Insert SimpleName: crawldb(1287) into ClassInstanceCreation(1288) at 1", "Insert SimpleName: dirs(1289) into MethodInvocation(1299) at 0", "Insert SimpleName: toArray(1290) into MethodInvocation(1299) at 1", "Insert ArrayCreation(1298) into MethodInvocation(1299) at 2", "Insert SimpleName: Integer(1309) into MethodInvocation(1312) at 0", "Insert SimpleName: toString(1310) into MethodInvocation(1312) at 1", "Insert NumberLiteral: 0(1311) into MethodInvocation(1312) at 2", "Insert SimpleName: LOG(1322) into MethodInvocation(1330) at 0", "Insert SimpleName: error(1323) into MethodInvocation(1330) at 1", "Insert InfixExpression: +(1329) into MethodInvocation(1330) at 2", "Insert SimpleName: results(1332) into MethodInvocation(1340) at 0", "Insert SimpleName: put(1333) into MethodInvocation(1340) at 1", "Insert SimpleName: RESULT(1334) into MethodInvocation(1340) at 2", "Insert MethodInvocation(1339) into MethodInvocation(1340) at 3", "Insert SimpleName: Override(1240) into MarkerAnnotation(1241) at 0", "Insert SimpleType: File(1246) into SingleVariableDeclaration(1248) at 0", "Insert SimpleName: f1(1247) into SingleVariableDeclaration(1248) at 1", "Insert SimpleType: File(1250) into SingleVariableDeclaration(1252) at 0", "Insert SimpleName: f2(1251) into SingleVariableDeclaration(1252) at 1", "Insert IfStatement(1265) into Block(1266) at 0", "Insert SimpleName: Path(1285) into SimpleType: Path(1286) at 0", "Insert ArrayType: Path[](1294) into ArrayCreation(1298) at 0", "Insert MethodInvocation(1297) into ArrayCreation(1298) at 1", "Insert StringLiteral: \"CrawlDb update: \"(1324) into InfixExpression: +(1329) at 0", "Insert MethodInvocation(1328) into InfixExpression: +(1329) at 1", "Insert SimpleName: Integer(1335) into MethodInvocation(1339) at 0", "Insert SimpleName: toString(1336) into MethodInvocation(1339) at 1", "Insert PrefixExpression: -(1338) into MethodInvocation(1339) at 2", "Insert SimpleName: File(1245) into SimpleType: File(1246) at 0", "Insert SimpleName: File(1249) into SimpleType: File(1250) at 0", "Insert InfixExpression: >(1259) into IfStatement(1265) at 0", "Insert ReturnStatement(1262) into IfStatement(1265) at 1", "Insert ReturnStatement(1264) into IfStatement(1265) at 2", "Insert SimpleType: Path(1292) into ArrayType: Path[](1294) at 0", "Insert Dimension(1293) into ArrayType: Path[](1294) at 1", "Insert SimpleName: dirs(1295) into MethodInvocation(1297) at 0", "Insert SimpleName: size(1296) into MethodInvocation(1297) at 1", "Insert SimpleName: StringUtils(1325) into MethodInvocation(1328) at 0", "Insert SimpleName: stringifyException(1326) into MethodInvocation(1328) at 1", "Insert SimpleName: e(1327) into MethodInvocation(1328) at 2", "Insert NumberLiteral: 1(1337) into PrefixExpression: -(1338) at 0", "Insert MethodInvocation(1255) into InfixExpression: >(1259) at 0", "Insert MethodInvocation(1258) into InfixExpression: >(1259) at 1", "Insert PrefixExpression: -(1261) into ReturnStatement(1262) at 0", "Insert NumberLiteral: 0(1263) into ReturnStatement(1264) at 0", "Insert SimpleName: Path(1291) into SimpleType: Path(1292) at 0", "Insert SimpleName: f1(1253) into MethodInvocation(1255) at 0", "Insert SimpleName: lastModified(1254) into MethodInvocation(1255) at 1", "Insert SimpleName: f2(1256) into MethodInvocation(1258) at 0", "Insert SimpleName: lastModified(1257) into MethodInvocation(1258) at 1", "Insert NumberLiteral: 1(1260) into PrefixExpression: -(1261) at 0", "Delete SimpleType: Configured(53)"]}}, {"CrawlDbReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.io.File to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: java.util.HashMap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.apache.hadoop.conf.Configuration to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 48", "operations": ["INS ImportDeclaration to CompilationUnit at 48", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: TreeMap to SimpleType: TreeMap at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: config to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "INS SimpleName: crawlDb to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: config to MethodInvocation at 2", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleType: String to ParameterizedType: TreeMap<String,LongWritable> at 1", "INS SimpleName: stats to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: sort to MethodInvocation at 3", "INS SimpleName: crawlDb to SingleVariableDeclaration at 1", "INS SimpleType: LongWritable to ParameterizedType: TreeMap<String,LongWritable> at 2", "INS SimpleName: processStatJobHelper to MethodInvocation at 0", "INS SimpleType: TreeMap to ParameterizedType: TreeMap<String,LongWritable> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: sort to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParameterizedType: TreeMap<String,LongWritable> to VariableDeclarationStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: processStatJob to MethodDeclaration at 2", "INS SimpleName: Configuration to SimpleType: Configuration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: st to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: val to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \"nnn\" to MethodInvocation at 2", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 1", "INS SimpleName: stats to VariableDeclarationFragment at 0", "INS SimpleName: format to VariableDeclarationFragment at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: toHexString to MethodInvocation at 1", "INS SimpleName: totalCnt to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"out_dir\" to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: min to MethodInvocation at 3", "INS SimpleName: String to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: Date to SimpleType: Date at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS StringLiteral: \"metadata\" to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: url to MethodInvocation at 2", "INS IfStatement to Block at 5", "INS VariableDeclarationStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 5", "INS SimpleName: equals to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS StringLiteral: \"regex\" to MethodInvocation at 2", "INS StringLiteral: \"/part-00000\" to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS SimpleName: Float to MethodInvocation at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: StringUtil to MethodInvocation at 0", "INS NumberLiteral: 2 to ArrayAccess at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: regex to VariableDeclarationFragment at 0", "INS SimpleName: Date to SimpleType: Date at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: put to MethodInvocation at 1", "INS CastExpression to Assignment: = at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \"status\" to MethodInvocation at 2", "INS SimpleName: k to MethodInvocation at 0", "INS SimpleName: CrawlDatum to SimpleType: CrawlDatum at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS SimpleName: parseLong to MethodInvocation at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,String> at 0", "INS ClassInstanceCreation to MethodInvocation at 5", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS SimpleName: res to MethodInvocation at 0", "INS QualifiedName: st.length to InfixExpression: > at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: res to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 2 to InfixExpression: > at 1", "INS IfStatement to Block at 10", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS StringLiteral: \"T\" to MethodInvocation at 2", "INS SimpleName: totalCnt to VariableDeclarationFragment at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: dumpFile to ReturnStatement at 0", "INS StringLiteral: \"retryInterval\" to MethodInvocation at 2", "INS SimpleName: TreeMap to SimpleType: TreeMap at 0", "INS ReturnStatement to Block at 11", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: dumpFile to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 4", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: metadata to MethodInvocation at 0", "INS SimpleName: retry to VariableDeclarationFragment at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS IfStatement to Block at 6", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: / at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: String to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS SimpleName: conf to ClassInstanceCreation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: code to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: dumpFile to VariableDeclarationFragment at 0", "INS SimpleName: hostValues to Assignment: = at 0", "INS SimpleName: output to InfixExpression: + at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,String> at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: File to ClassInstanceCreation at 0", "INS ReturnStatement to Block at 6", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"score\" to MethodInvocation at 2", "INS StringLiteral: \"min\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: val to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: statusMap to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS CastExpression to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 1000.0f to InfixExpression: / at 1", "INS SimpleName: status to MethodInvocation at 6", "INS SimpleName: retry to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleName: type to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"normal\" to VariableDeclarationFragment at 1", "INS IfStatement to Block at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS SimpleName: individualStatusInfo to MethodInvocation at 0", "INS StringLiteral: \"scn\" to MethodInvocation at 2", "INS ParameterizedType: Map<String,String> to CastExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to IfStatement at 2", "INS ParameterizedType: TreeMap<String,LongWritable> to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS SimpleType: Date to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: NutchJob to SimpleType: NutchJob at 0", "INS NumberLiteral: 0.0f to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS CastExpression to MethodInvocation at 2", "INS PrimitiveType: double to CastExpression at 0", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to MethodInvocation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to InfixExpression: / at 0", "INS StringLiteral: \"status\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 5", "INS StringLiteral: \"hostValues\" to MethodInvocation at 2", "INS StringLiteral: \"stats\" to MethodInvocation at 2", "INS StringLiteral: \"url\" to MethodInvocation at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: statusMap to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: crawlDb to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: res to VariableDeclarationFragment at 0", "INS SimpleName: metadata to MethodInvocation at 3", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS Block to IfStatement at 1", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: valueOf to MethodInvocation at 1", "INS ParenthesizedExpression to MethodInvocation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getFetchTime to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: NutchConfiguration to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: TreeMap<String,LongWritable> at 1", "INS SimpleName: hostValues to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: Map to SimpleType: Map at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: res to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS StringLiteral: \"scx\" to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: LongWritable to ParameterizedType: TreeMap<String,LongWritable> at 2", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: val to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: val to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: / at 0", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS SimpleName: File to SimpleType: File at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: TreeMap to ParameterizedType: TreeMap<String,LongWritable> at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS StringLiteral: \"sort\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: min to VariableDeclarationFragment at 0", "INS SimpleName: status to Assignment: = at 0", "INS SimpleName: NutchJob to SimpleType: NutchJob at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: individualStatusInfo to VariableDeclarationFragment at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS IfStatement to Block at 7", "INS SimpleName: results to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: topN to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: parseFloat to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to IfStatement at 2", "INS SimpleName: individualStatusInfo to MethodInvocation at 0", "INS SimpleName: format to MethodInvocation at 4", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: split to MethodInvocation at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: args to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: e to MethodInvocation at 0", "INS PrimitiveType: float to CastExpression at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS Block to IfStatement at 1", "INS PrimitiveType: float to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS ExpressionStatement to Block at 6", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleType: NutchJob to ClassInstanceCreation at 0", "INS SimpleName: metadata to VariableDeclarationFragment at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 2", "INS StringLiteral: \"format\" to MethodInvocation at 2", "INS StringLiteral: \"sct\" to MethodInvocation at 2", "INS Block to IfStatement at 2", "INS SimpleName: retry to MethodInvocation at 7", "INS ParameterizedType: Map.Entry<String,LongWritable> to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: regex to Assignment: = at 0", "INS SimpleName: res to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS StringLiteral: \"maxScore\" to MethodInvocation at 2", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: status to VariableDeclarationFragment at 0", "INS SimpleName: Writable to SimpleType: Writable at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"status\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleType: LongWritable to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getMetaData to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: k to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: individualStatusInfo to VariableDeclarationFragment at 0", "INS SimpleName: processDumpJob to MethodInvocation at 0", "INS SimpleName: conf to ClassInstanceCreation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getFetchInterval to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: crawlDb to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS StringLiteral: \"totalUrls\" to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: results to MethodInvocation at 0", "INS ReturnStatement to Block at 6", "INS SimpleName: results to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \"url\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS StringLiteral: \"status\" to MethodInvocation at 2", "INS SimpleType: LongWritable to VariableDeclarationStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: code to VariableDeclarationFragment at 0", "INS SimpleName: File to SimpleType: File at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: conf to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayAccess to MethodInvocation at 2", "INS ParameterizedType: Map<String,Object> to CastExpression at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: CrawlDatum to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: File to SimpleType: File at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS StringLiteral: \"signature\" to MethodInvocation at 2", "INS StringLiteral: \"sort\" to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: res to MethodInvocation at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: individualStatusInfo to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS SimpleType: String to ParameterizedType: Map.Entry<String,LongWritable> at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: regex to MethodInvocation at 5", "INS SimpleName: put to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: sort to MethodInvocation at 3", "INS SimpleName: getStatus to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 10", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getScore to MethodInvocation at 1", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: hostValues to VariableDeclarationFragment at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: st to ArrayAccess at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: res to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: processTopNJob to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: get to MethodInvocation at 1", "INS StringLiteral: \"retry\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Date to ClassInstanceCreation at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: results to MethodInvocation at 0", "INS StringLiteral: \"out_dir\" to MethodInvocation at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS StringLiteral: \"retriesSinceFetch\" to MethodInvocation at 2", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS ExpressionStatement to Block at 5", "INS ExpressionStatement to Block at 11", "INS SimpleName: totalCnt to MethodInvocation at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: val to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS MethodInvocation to InfixExpression: / at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: CrawlDatum to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 2", "INS IfStatement to Block at 2", "INS IfStatement to Block at 8", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS SimpleType: NutchJob to ClassInstanceCreation at 0", "INS SimpleName: getMetaData to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS SimpleName: hostValues to MethodInvocation at 0", "INS StringLiteral: \"/part-00000\" to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: processStatJobHelper to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleType: Object to MethodDeclaration at 1", "INS ReturnStatement to Block at 12", "INS StringLiteral: \"minScore\" to MethodInvocation at 2", "INS SimpleName: getRetriesSinceFetch to MethodInvocation at 1", "INS NumberLiteral: 1000.0 to InfixExpression: / at 1", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS StringLiteral: \"status\" to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "INS MethodInvocation to CastExpression at 1", "INS ExpressionStatement to Block at 8", "INS SimpleName: NutchJob to SimpleType: NutchJob at 0", "INS ExpressionStatement to IfStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: args to MethodInvocation at 0", "INS ReturnStatement to Block at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 2", "INS SimpleName: topN to VariableDeclarationFragment at 0", "INS SimpleName: k to MethodInvocation at 0", "INS StringLiteral: \"min\" to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 7", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: Exception to MethodDeclaration at 7", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: individualStatusInfo to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: dumpFile to ReturnStatement at 0", "INS SimpleName: String to MethodInvocation at 0", "INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "INS SimpleName: query to MethodDeclaration at 2", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: Writable to ParameterizedType: Entry<Writable,Writable> at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: get to MethodInvocation at 0", "INS StringLiteral: \"count\" to MethodInvocation at 2", "INS BooleanLiteral: true to Assignment: = at 1", "INS Block to IfStatement at 2", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: val to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: sort to VariableDeclarationFragment at 0", "INS EnhancedForStatement to Block at 7", "INS ExpressionStatement to Block at 5", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: res to MethodInvocation at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \"fetchTime\" to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: k to MethodInvocation at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: st to ArrayAccess at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"avgScore\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 4", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 2", "INS SimpleType: Entry to ParameterizedType: Entry<Writable,Writable> at 0", "INS SimpleName: url to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: type to MethodInvocation at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS NumberLiteral: 1000.0f to InfixExpression: / at 1", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: k to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: res to MethodInvocation at 0", "INS SimpleName: conf to ClassInstanceCreation at 1", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: statusMap to VariableDeclarationFragment at 0", "INS SimpleType: LongWritable to ParameterizedType: Map.Entry<String,LongWritable> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 2", "INS ArrayAccess to MethodInvocation at 2", "INS StringLiteral: \"/crawldb\" to InfixExpression: + at 1", "INS SimpleName: getModifiedTime to MethodInvocation at 1", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: args to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: startsWith to MethodInvocation at 1", "INS SimpleName: crawlDb to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: format to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"true\" to MethodInvocation at 2", "INS SimpleName: getStatusName to MethodInvocation at 1", "INS StringLiteral: \"format\" to MethodInvocation at 2", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: args to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: crawlDb to VariableDeclarationFragment at 0", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleType: File to ClassInstanceCreation at 0", "INS StringLiteral: \"statusValue\" to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"retry\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: res to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 2", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: NutchJob to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 8", "INS ExpressionStatement to Block at 3", "INS CastExpression to ParenthesizedExpression at 0", "INS StringLiteral: \"regex\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 2", "INS InfixExpression: != to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: / at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: args to MethodInvocation at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS SimpleName: getSignature to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: sort to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS ParameterizedType: Entry<Writable,Writable> to SingleVariableDeclaration at 0", "INS StringLiteral: \"hostValues\" to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: individualStatusInfo to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: code to CastExpression at 1", "INS MethodInvocation to MethodInvocation at 3", "INS EnhancedForStatement to Block at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: k to MethodInvocation at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: output to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \" \" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"dump\" to MethodInvocation at 2", "INS StringLiteral: \"T\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: Writable to ParameterizedType: Entry<Writable,Writable> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<String,LongWritable> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS SimpleName: code to MethodInvocation at 2", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: crawlDb to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: output to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: valueOf to MethodInvocation at 1", "INS ExpressionStatement to Block at 9", "INS SimpleType: Integer to VariableDeclarationStatement at 0", "INS SimpleName: results to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS IfStatement to Block at 3", "INS VariableDeclarationStatement to Block at 2", "INS StringLiteral: \"topN\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: individualStatusInfo to MethodInvocation at 3", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: hostValues to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: val to VariableDeclarationFragment at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "INS StringLiteral: \"hostValues\" to MethodInvocation at 2", "INS StringLiteral: \"modifiedTime\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: min to Assignment: = at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: statusMap to MethodInvocation at 3", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: k to MethodInvocation at 0", "INS SimpleName: output to MethodInvocation at 2"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS ParameterizedType: TreeMap<String,LongWritable> to MethodDeclaration at 1", "operations": ["INS SimpleType: String to ParameterizedType: TreeMap<String,LongWritable> at 1", "INS SimpleType: LongWritable to ParameterizedType: TreeMap<String,LongWritable> at 2", "INS SimpleName: TreeMap to SimpleType: TreeMap at 0", "INS ParameterizedType: TreeMap<String,LongWritable> to MethodDeclaration at 1", "INS SimpleType: TreeMap to ParameterizedType: TreeMap<String,LongWritable> at 0", "INS SimpleName: LongWritable to SimpleType: LongWritable at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from processStatJob to processStatJobHelper", "operations": ["UPD SimpleName: processStatJob from processStatJob to processStatJobHelper"]}, {"root": "UPDATE from JobConf to Configuration", "operations": ["UPD SimpleType: JobConf from JobConf to Configuration", "UPD SimpleName: JobConf from JobConf to Configuration"]}, {"root": "INS ReturnStatement to Block at 24", "operations": ["INS SimpleName: stats to ReturnStatement at 0", "INS ReturnStatement to Block at 24"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3", "MOV IfStatement to Block at 0", "MOV IfStatement to Block at 2"]}, {"root": "UPDATE from \"\\t\\t\\tand optionally sort by host\" to \"\\t\\t[-sort]\\tlist status sorted by host\"", "operations": ["UPD StringLiteral: \"\\t\\t\\tand optionally sort by host\" from \"\\t\\t\\tand optionally sort by host\" to \"\\t\\t[-sort]\\tlist status sorted by host\""]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}]}}, {"CrawlDbReader_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(4144) at 2", "Insert ImportDeclaration(29) into CompilationUnit(4144) at 7", "Insert ImportDeclaration(51) into CompilationUnit(4144) at 18", "Insert ImportDeclaration(111) into CompilationUnit(4144) at 48", "Insert QualifiedName: java.io.File(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: java.util.HashMap(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.conf.Configuration(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: org.apache.nutch.util.NutchTool(110) into ImportDeclaration(111) at 0", "Insert MethodDeclaration(2121) into TypeDeclaration: class(4143) at 18", "Insert MethodDeclaration(4142) into TypeDeclaration: class(4143) at 26", "Update Modifier: public(1523) to private", "Insert ParameterizedType: TreeMap<String,LongWritable>(1538) into MethodDeclaration(1868) at 1", "Update SimpleName: processStatJob(1525) to processStatJobHelper", "Insert Modifier: public(1869) into MethodDeclaration(2121) at 0", "Insert PrimitiveType: void(1870) into MethodDeclaration(2121) at 1", "Insert SimpleName: processStatJob(1871) into MethodDeclaration(2121) at 2", "Insert SingleVariableDeclaration(1875) into MethodDeclaration(2121) at 3", "Insert SingleVariableDeclaration(1879) into MethodDeclaration(2121) at 4", "Insert SingleVariableDeclaration(1882) into MethodDeclaration(2121) at 5", "Insert SimpleType: IOException(1884) into MethodDeclaration(2121) at 6", "Insert Block(2120) into MethodDeclaration(2121) at 7", "Insert Modifier: public(3366) into MethodDeclaration(4142) at 0", "Insert SimpleType: Object(3368) into MethodDeclaration(4142) at 1", "Insert SimpleName: query(3369) into MethodDeclaration(4142) at 2", "Insert SingleVariableDeclaration(3378) into MethodDeclaration(4142) at 3", "Insert SingleVariableDeclaration(3382) into MethodDeclaration(4142) at 4", "Insert SingleVariableDeclaration(3386) into MethodDeclaration(4142) at 5", "Insert SingleVariableDeclaration(3390) into MethodDeclaration(4142) at 6", "Insert SimpleType: Exception(3392) into MethodDeclaration(4142) at 7", "Insert Block(4141) into MethodDeclaration(4142) at 8", "Insert SimpleType: TreeMap(1533) into ParameterizedType: TreeMap<String,LongWritable>(1538) at 0", "Insert SimpleType: String(1535) into ParameterizedType: TreeMap<String,LongWritable>(1538) at 1", "Insert SimpleType: LongWritable(1537) into ParameterizedType: TreeMap<String,LongWritable>(1538) at 2", "Update SimpleType: JobConf(1531) to Configuration", "Insert ReturnStatement(1866) into Block(1867) at 22", "Insert SimpleType: String(1873) into SingleVariableDeclaration(1875) at 0", "Insert SimpleName: crawlDb(1874) into SingleVariableDeclaration(1875) at 1", "Insert SimpleType: Configuration(1877) into SingleVariableDeclaration(1879) at 0", "Insert SimpleName: config(1878) into SingleVariableDeclaration(1879) at 1", "Insert PrimitiveType: boolean(1880) into SingleVariableDeclaration(1882) at 0", "Insert SimpleName: sort(1881) into SingleVariableDeclaration(1882) at 1", "Insert SimpleName: IOException(1883) into SimpleType: IOException(1884) at 0", "Move IfStatement(1550) into Block(2120) at 0", "Insert VariableDeclarationStatement(1911) into Block(2120) at 1", "Move IfStatement(2054) into Block(2120) at 2", "Move IfStatement(2070) into Block(2120) at 3", "Insert SimpleName: Object(3367) into SimpleType: Object(3368) at 0", "Insert ParameterizedType: Map<String,String>(3376) into SingleVariableDeclaration(3378) at 0", "Insert SimpleName: args(3377) into SingleVariableDeclaration(3378) at 1", "Insert SimpleType: Configuration(3380) into SingleVariableDeclaration(3382) at 0", "Insert SimpleName: conf(3381) into SingleVariableDeclaration(3382) at 1", "Insert SimpleType: String(3384) into SingleVariableDeclaration(3386) at 0", "Insert SimpleName: type(3385) into SingleVariableDeclaration(3386) at 1", "Insert SimpleType: String(3388) into SingleVariableDeclaration(3390) at 0", "Insert SimpleName: crawlId(3389) into SingleVariableDeclaration(3390) at 1", "Insert SimpleName: Exception(3391) into SimpleType: Exception(3392) at 0", "Insert VariableDeclarationStatement(3410) into Block(4141) at 0", "Insert VariableDeclarationStatement(3418) into Block(4141) at 1", "Insert IfStatement(3789) into Block(4141) at 2", "Insert IfStatement(3909) into Block(4141) at 3", "Insert IfStatement(3980) into Block(4141) at 4", "Insert IfStatement(4138) into Block(4141) at 5", "Insert ReturnStatement(4140) into Block(4141) at 6", "Insert SimpleName: TreeMap(1532) into SimpleType: TreeMap(1533) at 0", "Insert SimpleName: String(1534) into SimpleType: String(1535) at 0", "Insert SimpleName: LongWritable(1536) into SimpleType: LongWritable(1537) at 0", "Update SimpleName: JobConf(1530) to Configuration", "Insert SimpleName: stats(1865) into ReturnStatement(1866) at 0", "Insert SimpleName: String(1872) into SimpleType: String(1873) at 0", "Insert SimpleName: Configuration(1876) into SimpleType: Configuration(1877) at 0", "Insert ParameterizedType: TreeMap<String,LongWritable>(1903) into VariableDeclarationStatement(1911) at 0", "Insert VariableDeclarationFragment(1910) into VariableDeclarationStatement(1911) at 1", "Insert SimpleType: Map(3371) into ParameterizedType: Map<String,String>(3376) at 0", "Insert SimpleType: String(3373) into ParameterizedType: Map<String,String>(3376) at 1", "Insert SimpleType: String(3375) into ParameterizedType: Map<String,String>(3376) at 2", "Insert SimpleName: Configuration(3379) into SimpleType: Configuration(3380) at 0", "Insert SimpleName: String(3383) into SimpleType: String(3384) at 0", "Insert SimpleName: String(3387) into SimpleType: String(3388) at 0", "Insert ParameterizedType: Map<String,Object>(3399) into VariableDeclarationStatement(3410) at 0", "Insert VariableDeclarationFragment(3409) into VariableDeclarationStatement(3410) at 1", "Insert SimpleType: String(3412) into VariableDeclarationStatement(3418) at 0", "Insert VariableDeclarationFragment(3417) into VariableDeclarationStatement(3418) at 1", "Insert MethodInvocation(3422) into IfStatement(3789) at 0", "Insert Block(3788) into IfStatement(3789) at 1", "Insert MethodInvocation(3793) into IfStatement(3909) at 0", "Insert Block(3908) into IfStatement(3909) at 1", "Insert MethodInvocation(3913) into IfStatement(3980) at 0", "Insert Block(3979) into IfStatement(3980) at 1", "Insert MethodInvocation(3984) into IfStatement(4138) at 0", "Insert Block(4137) into IfStatement(4138) at 1", "Insert SimpleName: results(4139) into ReturnStatement(4140) at 0", "Insert SimpleType: TreeMap(1898) into ParameterizedType: TreeMap<String,LongWritable>(1903) at 0", "Insert SimpleType: String(1900) into ParameterizedType: TreeMap<String,LongWritable>(1903) at 1", "Insert SimpleType: LongWritable(1902) into ParameterizedType: TreeMap<String,LongWritable>(1903) at 2", "Insert SimpleName: stats(1904) into VariableDeclarationFragment(1910) at 0", "Insert MethodInvocation(1909) into VariableDeclarationFragment(1910) at 1", "Insert SimpleName: Map(3370) into SimpleType: Map(3371) at 0", "Insert SimpleName: String(3372) into SimpleType: String(3373) at 0", "Insert SimpleName: String(3374) into SimpleType: String(3375) at 0", "Insert SimpleType: Map(3394) into ParameterizedType: Map<String,Object>(3399) at 0", "Insert SimpleType: String(3396) into ParameterizedType: Map<String,Object>(3399) at 1", "Insert SimpleType: Object(3398) into ParameterizedType: Map<String,Object>(3399) at 2", "Insert SimpleName: results(3400) into VariableDeclarationFragment(3409) at 0", "Insert ClassInstanceCreation(3408) into VariableDeclarationFragment(3409) at 1", "Insert SimpleName: String(3411) into SimpleType: String(3412) at 0", "Insert SimpleName: crawlDb(3413) into VariableDeclarationFragment(3417) at 0", "Insert InfixExpression: +(3416) into VariableDeclarationFragment(3417) at 1", "Insert SimpleName: type(3419) into MethodInvocation(3422) at 0", "Insert SimpleName: equalsIgnoreCase(3420) into MethodInvocation(3422) at 1", "Insert StringLiteral: \"stats\"(3421) into MethodInvocation(3422) at 2", "Insert VariableDeclarationStatement(3427) into Block(3788) at 0", "Insert IfStatement(3445) into Block(3788) at 1", "Insert VariableDeclarationStatement(3462) into Block(3788) at 2", "Insert VariableDeclarationStatement(3471) into Block(3788) at 3", "Insert ExpressionStatement(3476) into Block(3788) at 4", "Insert ExpressionStatement(3487) into Block(3788) at 5", "Insert VariableDeclarationStatement(3505) into Block(3788) at 6", "Insert EnhancedForStatement(3779) into Block(3788) at 7", "Insert ExpressionStatement(3785) into Block(3788) at 8", "Insert ReturnStatement(3787) into Block(3788) at 9", "Insert SimpleName: type(3790) into MethodInvocation(3793) at 0", "Insert SimpleName: equalsIgnoreCase(3791) into MethodInvocation(3793) at 1", "Insert StringLiteral: \"dump\"(3792) into MethodInvocation(3793) at 2", "Insert VariableDeclarationStatement(3802) into Block(3908) at 0", "Insert VariableDeclarationStatement(3808) into Block(3908) at 1", "Insert VariableDeclarationStatement(3814) into Block(3908) at 2", "Insert VariableDeclarationStatement(3820) into Block(3908) at 3", "Insert VariableDeclarationStatement(3826) into Block(3908) at 4", "Insert IfStatement(3839) into Block(3908) at 5", "Insert IfStatement(3852) into Block(3908) at 6", "Insert IfStatement(3868) into Block(3908) at 7", "Insert IfStatement(3881) into Block(3908) at 8", "Insert ExpressionStatement(3894) into Block(3908) at 9", "Insert VariableDeclarationStatement(3905) into Block(3908) at 10", "Insert ReturnStatement(3907) into Block(3908) at 11", "Insert SimpleName: type(3910) into MethodInvocation(3913) at 0", "Insert SimpleName: equalsIgnoreCase(3911) into MethodInvocation(3913) at 1", "Insert StringLiteral: \"topN\"(3912) into MethodInvocation(3913) at 2", "Insert VariableDeclarationStatement(3922) into Block(3979) at 0", "Insert VariableDeclarationStatement(3933) into Block(3979) at 1", "Insert VariableDeclarationStatement(3938) into Block(3979) at 2", "Insert IfStatement(3954) into Block(3979) at 3", "Insert ExpressionStatement(3965) into Block(3979) at 4", "Insert VariableDeclarationStatement(3976) into Block(3979) at 5", "Insert ReturnStatement(3978) into Block(3979) at 6", "Insert SimpleName: type(3981) into MethodInvocation(3984) at 0", "Insert SimpleName: equalsIgnoreCase(3982) into MethodInvocation(3984) at 1", "Insert StringLiteral: \"url\"(3983) into MethodInvocation(3984) at 2", "Insert VariableDeclarationStatement(3993) into Block(4137) at 0", "Insert VariableDeclarationStatement(4006) into Block(4137) at 1", "Insert ExpressionStatement(4014) into Block(4137) at 2", "Insert ExpressionStatement(4025) into Block(4137) at 3", "Insert ExpressionStatement(4036) into Block(4137) at 4", "Insert ExpressionStatement(4044) into Block(4137) at 5", "Insert ExpressionStatement(4052) into Block(4137) at 6", "Insert ExpressionStatement(4060) into Block(4137) at 7", "Insert ExpressionStatement(4071) into Block(4137) at 8", "Insert VariableDeclarationStatement(4089) into Block(4137) at 9", "Insert IfStatement(4128) into Block(4137) at 10", "Insert ExpressionStatement(4134) into Block(4137) at 11", "Insert ReturnStatement(4136) into Block(4137) at 12", "Insert SimpleName: TreeMap(1897) into SimpleType: TreeMap(1898) at 0", "Insert SimpleName: String(1899) into SimpleType: String(1900) at 0", "Insert SimpleName: LongWritable(1901) into SimpleType: LongWritable(1902) at 0", "Insert SimpleName: processStatJobHelper(1905) into MethodInvocation(1909) at 0", "Insert SimpleName: crawlDb(1906) into MethodInvocation(1909) at 1", "Insert SimpleName: config(1907) into MethodInvocation(1909) at 2", "Insert SimpleName: sort(1908) into MethodInvocation(1909) at 3", "Insert SimpleName: Map(3393) into SimpleType: Map(3394) at 0", "Insert SimpleName: String(3395) into SimpleType: String(3396) at 0", "Insert SimpleName: Object(3397) into SimpleType: Object(3398) at 0", "Insert ParameterizedType: HashMap<String,Object>(3407) into ClassInstanceCreation(3408) at 0", "Insert SimpleName: crawlId(3414) into InfixExpression: +(3416) at 0", "Insert StringLiteral: \"/crawldb\"(3415) into InfixExpression: +(3416) at 1", "Insert PrimitiveType: boolean(3423) into VariableDeclarationStatement(3427) at 0", "Insert VariableDeclarationFragment(3426) into VariableDeclarationStatement(3427) at 1", "Insert MethodInvocation(3431) into IfStatement(3445) at 0", "Insert Block(3444) into IfStatement(3445) at 1", "Insert ParameterizedType: TreeMap<String,LongWritable>(3452) into VariableDeclarationStatement(3462) at 0", "Insert VariableDeclarationFragment(3461) into VariableDeclarationStatement(3462) at 1", "Insert SimpleType: LongWritable(3464) into VariableDeclarationStatement(3471) at 0", "Insert VariableDeclarationFragment(3470) into VariableDeclarationStatement(3471) at 1", "Insert MethodInvocation(3475) into ExpressionStatement(3476) at 0", "Insert MethodInvocation(3486) into ExpressionStatement(3487) at 0", "Insert ParameterizedType: Map<String,Object>(3494) into VariableDeclarationStatement(3505) at 0", "Insert VariableDeclarationFragment(3504) into VariableDeclarationStatement(3505) at 1", "Insert SingleVariableDeclaration(3514) into EnhancedForStatement(3779) at 0", "Insert MethodInvocation(3517) into EnhancedForStatement(3779) at 1", "Insert Block(3778) into EnhancedForStatement(3779) at 2", "Insert MethodInvocation(3784) into ExpressionStatement(3785) at 0", "Insert SimpleName: results(3786) into ReturnStatement(3787) at 0", "Insert SimpleType: String(3795) into VariableDeclarationStatement(3802) at 0", "Insert VariableDeclarationFragment(3801) into VariableDeclarationStatement(3802) at 1", "Insert SimpleType: String(3804) into VariableDeclarationStatement(3808) at 0", "Insert VariableDeclarationFragment(3807) into VariableDeclarationStatement(3808) at 1", "Insert SimpleType: String(3810) into VariableDeclarationStatement(3814) at 0", "Insert VariableDeclarationFragment(3813) into VariableDeclarationStatement(3814) at 1", "Insert SimpleType: Integer(3816) into VariableDeclarationStatement(3820) at 0", "Insert VariableDeclarationFragment(3819) into VariableDeclarationStatement(3820) at 1", "Insert SimpleType: String(3822) into VariableDeclarationStatement(3826) at 0", "Insert VariableDeclarationFragment(3825) into VariableDeclarationStatement(3826) at 1", "Insert MethodInvocation(3830) into IfStatement(3839) at 0", "Insert Block(3838) into IfStatement(3839) at 1", "Insert MethodInvocation(3843) into IfStatement(3852) at 0", "Insert Block(3851) into IfStatement(3852) at 1", "Insert MethodInvocation(3856) into IfStatement(3868) at 0", "Insert Block(3867) into IfStatement(3868) at 1", "Insert MethodInvocation(3872) into IfStatement(3881) at 0", "Insert Block(3880) into IfStatement(3881) at 1", "Insert MethodInvocation(3893) into ExpressionStatement(3894) at 0", "Insert SimpleType: File(3896) into VariableDeclarationStatement(3905) at 0", "Insert VariableDeclarationFragment(3904) into VariableDeclarationStatement(3905) at 1", "Insert SimpleName: dumpFile(3906) into ReturnStatement(3907) at 0", "Insert SimpleType: String(3915) into VariableDeclarationStatement(3922) at 0", "Insert VariableDeclarationFragment(3921) into VariableDeclarationStatement(3922) at 1", "Insert PrimitiveType: long(3923) into VariableDeclarationStatement(3933) at 0", "Insert VariableDeclarationFragment(3932) into VariableDeclarationStatement(3933) at 1", "Insert PrimitiveType: float(3934) into VariableDeclarationStatement(3938) at 0", "Insert VariableDeclarationFragment(3937) into VariableDeclarationStatement(3938) at 1", "Insert MethodInvocation(3942) into IfStatement(3954) at 0", "Insert Block(3953) into IfStatement(3954) at 1", "Insert MethodInvocation(3964) into ExpressionStatement(3965) at 0", "Insert SimpleType: File(3967) into VariableDeclarationStatement(3976) at 0", "Insert VariableDeclarationFragment(3975) into VariableDeclarationStatement(3976) at 1", "Insert SimpleName: dumpFile(3977) into ReturnStatement(3978) at 0", "Insert SimpleType: String(3986) into VariableDeclarationStatement(3993) at 0", "Insert VariableDeclarationFragment(3992) into VariableDeclarationStatement(3993) at 1", "Insert SimpleType: CrawlDatum(3995) into VariableDeclarationStatement(4006) at 0", "Insert VariableDeclarationFragment(4005) into VariableDeclarationStatement(4006) at 1", "Insert MethodInvocation(4013) into ExpressionStatement(4014) at 0", "Insert MethodInvocation(4024) into ExpressionStatement(4025) at 0", "Insert MethodInvocation(4035) into ExpressionStatement(4036) at 0", "Insert MethodInvocation(4043) into ExpressionStatement(4044) at 0", "Insert MethodInvocation(4051) into ExpressionStatement(4052) at 0", "Insert MethodInvocation(4059) into ExpressionStatement(4060) at 0", "Insert MethodInvocation(4070) into ExpressionStatement(4071) at 0", "Insert ParameterizedType: Map<String,String>(4078) into VariableDeclarationStatement(4089) at 0", "Insert VariableDeclarationFragment(4088) into VariableDeclarationStatement(4089) at 1", "Insert InfixExpression: !=(4094) into IfStatement(4128) at 0", "Insert Block(4127) into IfStatement(4128) at 1", "Insert MethodInvocation(4133) into ExpressionStatement(4134) at 0", "Insert SimpleName: results(4135) into ReturnStatement(4136) at 0", "Update StringLiteral: \"\\t\\t\\tand optionally sort by host\"(2891) to \"\\t\\t[-sort]\\tlist status sorted by host\"", "Insert SimpleType: HashMap(3402) into ParameterizedType: HashMap<String,Object>(3407) at 0", "Insert SimpleType: String(3404) into ParameterizedType: HashMap<String,Object>(3407) at 1", "Insert SimpleType: Object(3406) into ParameterizedType: HashMap<String,Object>(3407) at 2", "Insert SimpleName: sort(3424) into VariableDeclarationFragment(3426) at 0", "Insert BooleanLiteral: false(3425) into VariableDeclarationFragment(3426) at 1", "Insert SimpleName: args(3428) into MethodInvocation(3431) at 0", "Insert SimpleName: containsKey(3429) into MethodInvocation(3431) at 1", "Insert StringLiteral: \"sort\"(3430) into MethodInvocation(3431) at 2", "Insert IfStatement(3443) into Block(3444) at 0", "Insert SimpleType: TreeMap(3447) into ParameterizedType: TreeMap<String,LongWritable>(3452) at 0", "Insert SimpleType: String(3449) into ParameterizedType: TreeMap<String,LongWritable>(3452) at 1", "Insert SimpleType: LongWritable(3451) into ParameterizedType: TreeMap<String,LongWritable>(3452) at 2", "Insert SimpleName: stats(3453) into VariableDeclarationFragment(3461) at 0", "Insert MethodInvocation(3460) into VariableDeclarationFragment(3461) at 1", "Insert SimpleName: LongWritable(3463) into SimpleType: LongWritable(3464) at 0", "Insert SimpleName: totalCnt(3465) into VariableDeclarationFragment(3470) at 0", "Insert MethodInvocation(3469) into VariableDeclarationFragment(3470) at 1", "Insert SimpleName: stats(3472) into MethodInvocation(3475) at 0", "Insert SimpleName: remove(3473) into MethodInvocation(3475) at 1", "Insert StringLiteral: \"T\"(3474) into MethodInvocation(3475) at 2", "Insert SimpleName: results(3477) into MethodInvocation(3486) at 0", "Insert SimpleName: put(3478) into MethodInvocation(3486) at 1", "Insert StringLiteral: \"totalUrls\"(3479) into MethodInvocation(3486) at 2", "Insert MethodInvocation(3485) into MethodInvocation(3486) at 3", "Insert SimpleType: Map(3489) into ParameterizedType: Map<String,Object>(3494) at 0", "Insert SimpleType: String(3491) into ParameterizedType: Map<String,Object>(3494) at 1", "Insert SimpleType: Object(3493) into ParameterizedType: Map<String,Object>(3494) at 2", "Insert SimpleName: statusMap(3495) into VariableDeclarationFragment(3504) at 0", "Insert ClassInstanceCreation(3503) into VariableDeclarationFragment(3504) at 1", "Insert ParameterizedType: Map.Entry<String,LongWritable>(3512) into SingleVariableDeclaration(3514) at 0", "Insert SimpleName: entry(3513) into SingleVariableDeclaration(3514) at 1", "Insert SimpleName: stats(3515) into MethodInvocation(3517) at 0", "Insert SimpleName: entrySet(3516) into MethodInvocation(3517) at 1", "Insert VariableDeclarationStatement(3525) into Block(3778) at 0", "Insert VariableDeclarationStatement(3533) into Block(3778) at 1", "Insert IfStatement(3777) into Block(3778) at 2", "Insert SimpleName: results(3780) into MethodInvocation(3784) at 0", "Insert SimpleName: put(3781) into MethodInvocation(3784) at 1", "Insert StringLiteral: \"status\"(3782) into MethodInvocation(3784) at 2", "Insert SimpleName: statusMap(3783) into MethodInvocation(3784) at 3", "Insert SimpleName: String(3794) into SimpleType: String(3795) at 0", "Insert SimpleName: output(3796) into VariableDeclarationFragment(3801) at 0", "Insert MethodInvocation(3800) into VariableDeclarationFragment(3801) at 1", "Insert SimpleName: String(3803) into SimpleType: String(3804) at 0", "Insert SimpleName: format(3805) into VariableDeclarationFragment(3807) at 0", "Insert StringLiteral: \"normal\"(3806) into VariableDeclarationFragment(3807) at 1", "Insert SimpleName: String(3809) into SimpleType: String(3810) at 0", "Insert SimpleName: regex(3811) into VariableDeclarationFragment(3813) at 0", "Insert NullLiteral(3812) into VariableDeclarationFragment(3813) at 1", "Insert SimpleName: Integer(3815) into SimpleType: Integer(3816) at 0", "Insert SimpleName: retry(3817) into VariableDeclarationFragment(3819) at 0", "Insert NullLiteral(3818) into VariableDeclarationFragment(3819) at 1", "Insert SimpleName: String(3821) into SimpleType: String(3822) at 0", "Insert SimpleName: status(3823) into VariableDeclarationFragment(3825) at 0", "Insert NullLiteral(3824) into VariableDeclarationFragment(3825) at 1", "Insert SimpleName: args(3827) into MethodInvocation(3830) at 0", "Insert SimpleName: containsKey(3828) into MethodInvocation(3830) at 1", "Insert StringLiteral: \"format\"(3829) into MethodInvocation(3830) at 2", "Insert ExpressionStatement(3837) into Block(3838) at 0", "Insert SimpleName: args(3840) into MethodInvocation(3843) at 0", "Insert SimpleName: containsKey(3841) into MethodInvocation(3843) at 1", "Insert StringLiteral: \"regex\"(3842) into MethodInvocation(3843) at 2", "Insert ExpressionStatement(3850) into Block(3851) at 0", "Insert SimpleName: args(3853) into MethodInvocation(3856) at 0", "Insert SimpleName: containsKey(3854) into MethodInvocation(3856) at 1", "Insert StringLiteral: \"retry\"(3855) into MethodInvocation(3856) at 2", "Insert ExpressionStatement(3866) into Block(3867) at 0", "Insert SimpleName: args(3869) into MethodInvocation(3872) at 0", "Insert SimpleName: containsKey(3870) into MethodInvocation(3872) at 1", "Insert StringLiteral: \"status\"(3871) into MethodInvocation(3872) at 2", "Insert ExpressionStatement(3879) into Block(3880) at 0", "Insert SimpleName: processDumpJob(3882) into MethodInvocation(3893) at 0", "Insert SimpleName: crawlDb(3883) into MethodInvocation(3893) at 1", "Insert SimpleName: output(3884) into MethodInvocation(3893) at 2", "Insert ClassInstanceCreation(3888) into MethodInvocation(3893) at 3", "Insert SimpleName: format(3889) into MethodInvocation(3893) at 4", "Insert SimpleName: regex(3890) into MethodInvocation(3893) at 5", "Insert SimpleName: status(3891) into MethodInvocation(3893) at 6", "Insert SimpleName: retry(3892) into MethodInvocation(3893) at 7", "Insert SimpleName: File(3895) into SimpleType: File(3896) at 0", "Insert SimpleName: dumpFile(3897) into VariableDeclarationFragment(3904) at 0", "Insert ClassInstanceCreation(3903) into VariableDeclarationFragment(3904) at 1", "Insert SimpleName: String(3914) into SimpleType: String(3915) at 0", "Insert SimpleName: output(3916) into VariableDeclarationFragment(3921) at 0", "Insert MethodInvocation(3920) into VariableDeclarationFragment(3921) at 1", "Insert SimpleName: topN(3924) into VariableDeclarationFragment(3932) at 0", "Insert MethodInvocation(3931) into VariableDeclarationFragment(3932) at 1", "Insert SimpleName: min(3935) into VariableDeclarationFragment(3937) at 0", "Insert NumberLiteral: 0.0f(3936) into VariableDeclarationFragment(3937) at 1", "Insert SimpleName: args(3939) into MethodInvocation(3942) at 0", "Insert SimpleName: containsKey(3940) into MethodInvocation(3942) at 1", "Insert StringLiteral: \"min\"(3941) into MethodInvocation(3942) at 2", "Insert ExpressionStatement(3952) into Block(3953) at 0", "Insert SimpleName: processTopNJob(3955) into MethodInvocation(3964) at 0", "Insert SimpleName: crawlDb(3956) into MethodInvocation(3964) at 1", "Insert SimpleName: topN(3957) into MethodInvocation(3964) at 2", "Insert SimpleName: min(3958) into MethodInvocation(3964) at 3", "Insert SimpleName: output(3959) into MethodInvocation(3964) at 4", "Insert ClassInstanceCreation(3963) into MethodInvocation(3964) at 5", "Insert SimpleName: File(3966) into SimpleType: File(3967) at 0", "Insert SimpleName: dumpFile(3968) into VariableDeclarationFragment(3975) at 0", "Insert ClassInstanceCreation(3974) into VariableDeclarationFragment(3975) at 1", "Insert SimpleName: String(3985) into SimpleType: String(3986) at 0", "Insert SimpleName: url(3987) into VariableDeclarationFragment(3992) at 0", "Insert MethodInvocation(3991) into VariableDeclarationFragment(3992) at 1", "Insert SimpleName: CrawlDatum(3994) into SimpleType: CrawlDatum(3995) at 0", "Insert SimpleName: res(3996) into VariableDeclarationFragment(4005) at 0", "Insert MethodInvocation(4004) into VariableDeclarationFragment(4005) at 1", "Insert SimpleName: results(4007) into MethodInvocation(4013) at 0", "Insert SimpleName: put(4008) into MethodInvocation(4013) at 1", "Insert StringLiteral: \"status\"(4009) into MethodInvocation(4013) at 2", "Insert MethodInvocation(4012) into MethodInvocation(4013) at 3", "Insert SimpleName: results(4015) into MethodInvocation(4024) at 0", "Insert SimpleName: put(4016) into MethodInvocation(4024) at 1", "Insert StringLiteral: \"fetchTime\"(4017) into MethodInvocation(4024) at 2", "Insert ClassInstanceCreation(4023) into MethodInvocation(4024) at 3", "Insert SimpleName: results(4026) into MethodInvocation(4035) at 0", "Insert SimpleName: put(4027) into MethodInvocation(4035) at 1", "Insert StringLiteral: \"modifiedTime\"(4028) into MethodInvocation(4035) at 2", "Insert ClassInstanceCreation(4034) into MethodInvocation(4035) at 3", "Insert SimpleName: results(4037) into MethodInvocation(4043) at 0", "Insert SimpleName: put(4038) into MethodInvocation(4043) at 1", "Insert StringLiteral: \"retriesSinceFetch\"(4039) into MethodInvocation(4043) at 2", "Insert MethodInvocation(4042) into MethodInvocation(4043) at 3", "Insert SimpleName: results(4045) into MethodInvocation(4051) at 0", "Insert SimpleName: put(4046) into MethodInvocation(4051) at 1", "Insert StringLiteral: \"retryInterval\"(4047) into MethodInvocation(4051) at 2", "Insert MethodInvocation(4050) into MethodInvocation(4051) at 3", "Insert SimpleName: results(4053) into MethodInvocation(4059) at 0", "Insert SimpleName: put(4054) into MethodInvocation(4059) at 1", "Insert StringLiteral: \"score\"(4055) into MethodInvocation(4059) at 2", "Insert MethodInvocation(4058) into MethodInvocation(4059) at 3", "Insert SimpleName: results(4061) into MethodInvocation(4070) at 0", "Insert SimpleName: put(4062) into MethodInvocation(4070) at 1", "Insert StringLiteral: \"signature\"(4063) into MethodInvocation(4070) at 2", "Insert MethodInvocation(4069) into MethodInvocation(4070) at 3", "Insert SimpleType: Map(4073) into ParameterizedType: Map<String,String>(4078) at 0", "Insert SimpleType: String(4075) into ParameterizedType: Map<String,String>(4078) at 1", "Insert SimpleType: String(4077) into ParameterizedType: Map<String,String>(4078) at 2", "Insert SimpleName: metadata(4079) into VariableDeclarationFragment(4088) at 0", "Insert ClassInstanceCreation(4087) into VariableDeclarationFragment(4088) at 1", "Insert MethodInvocation(4092) into InfixExpression: !=(4094) at 0", "Insert NullLiteral(4093) into InfixExpression: !=(4094) at 1", "Insert EnhancedForStatement(4126) into Block(4127) at 0", "Insert SimpleName: results(4129) into MethodInvocation(4133) at 0", "Insert SimpleName: put(4130) into MethodInvocation(4133) at 1", "Insert StringLiteral: \"metadata\"(4131) into MethodInvocation(4133) at 2", "Insert SimpleName: metadata(4132) into MethodInvocation(4133) at 3", "Insert SimpleName: HashMap(3401) into SimpleType: HashMap(3402) at 0", "Insert SimpleName: String(3403) into SimpleType: String(3404) at 0", "Insert SimpleName: Object(3405) into SimpleType: Object(3406) at 0", "Insert MethodInvocation(3438) into IfStatement(3443) at 0", "Insert ExpressionStatement(3442) into IfStatement(3443) at 1", "Insert SimpleName: TreeMap(3446) into SimpleType: TreeMap(3447) at 0", "Insert SimpleName: String(3448) into SimpleType: String(3449) at 0", "Insert SimpleName: LongWritable(3450) into SimpleType: LongWritable(3451) at 0", "Insert SimpleName: processStatJobHelper(3454) into MethodInvocation(3460) at 0", "Insert SimpleName: crawlDb(3455) into MethodInvocation(3460) at 1", "Insert MethodInvocation(3458) into MethodInvocation(3460) at 2", "Insert SimpleName: sort(3459) into MethodInvocation(3460) at 3", "Insert SimpleName: stats(3466) into MethodInvocation(3469) at 0", "Insert SimpleName: get(3467) into MethodInvocation(3469) at 1", "Insert StringLiteral: \"T\"(3468) into MethodInvocation(3469) at 2", "Insert SimpleName: String(3480) into MethodInvocation(3485) at 0", "Insert SimpleName: valueOf(3481) into MethodInvocation(3485) at 1", "Insert MethodInvocation(3484) into MethodInvocation(3485) at 2", "Insert SimpleName: Map(3488) into SimpleType: Map(3489) at 0", "Insert SimpleName: String(3490) into SimpleType: String(3491) at 0", "Insert SimpleName: Object(3492) into SimpleType: Object(3493) at 0", "Insert ParameterizedType: HashMap<String,Object>(3502) into ClassInstanceCreation(3503) at 0", "Insert SimpleType: Map.Entry(3507) into ParameterizedType: Map.Entry<String,LongWritable>(3512) at 0", "Insert SimpleType: String(3509) into ParameterizedType: Map.Entry<String,LongWritable>(3512) at 1", "Insert SimpleType: LongWritable(3511) into ParameterizedType: Map.Entry<String,LongWritable>(3512) at 2", "Insert SimpleType: String(3519) into VariableDeclarationStatement(3525) at 0", "Insert VariableDeclarationFragment(3524) into VariableDeclarationStatement(3525) at 1", "Insert SimpleType: LongWritable(3527) into VariableDeclarationStatement(3533) at 0", "Insert VariableDeclarationFragment(3532) into VariableDeclarationStatement(3533) at 1", "Insert MethodInvocation(3537) into IfStatement(3777) at 0", "Insert Block(3552) into IfStatement(3777) at 1", "Insert IfStatement(3776) into IfStatement(3777) at 2", "Insert SimpleName: args(3797) into MethodInvocation(3800) at 0", "Insert SimpleName: get(3798) into MethodInvocation(3800) at 1", "Insert StringLiteral: \"out_dir\"(3799) into MethodInvocation(3800) at 2", "Insert Assignment: =(3836) into ExpressionStatement(3837) at 0", "Insert Assignment: =(3849) into ExpressionStatement(3850) at 0", "Insert Assignment: =(3865) into ExpressionStatement(3866) at 0", "Insert Assignment: =(3878) into ExpressionStatement(3879) at 0", "Insert SimpleType: NutchJob(3886) into ClassInstanceCreation(3888) at 0", "Insert SimpleName: conf(3887) into ClassInstanceCreation(3888) at 1", "Insert SimpleType: File(3899) into ClassInstanceCreation(3903) at 0", "Insert InfixExpression: +(3902) into ClassInstanceCreation(3903) at 1", "Insert SimpleName: args(3917) into MethodInvocation(3920) at 0", "Insert SimpleName: get(3918) into MethodInvocation(3920) at 1", "Insert StringLiteral: \"out_dir\"(3919) into MethodInvocation(3920) at 2", "Insert SimpleName: Long(3925) into MethodInvocation(3931) at 0", "Insert SimpleName: parseLong(3926) into MethodInvocation(3931) at 1", "Insert MethodInvocation(3930) into MethodInvocation(3931) at 2", "Insert Assignment: =(3951) into ExpressionStatement(3952) at 0", "Insert SimpleType: NutchJob(3961) into ClassInstanceCreation(3963) at 0", "Insert SimpleName: conf(3962) into ClassInstanceCreation(3963) at 1", "Insert SimpleType: File(3970) into ClassInstanceCreation(3974) at 0", "Insert InfixExpression: +(3973) into ClassInstanceCreation(3974) at 1", "Insert SimpleName: args(3988) into MethodInvocation(3991) at 0", "Insert SimpleName: get(3989) into MethodInvocation(3991) at 1", "Insert StringLiteral: \"url\"(3990) into MethodInvocation(3991) at 2", "Insert SimpleName: get(3997) into MethodInvocation(4004) at 0", "Insert SimpleName: crawlDb(3998) into MethodInvocation(4004) at 1", "Insert SimpleName: url(3999) into MethodInvocation(4004) at 2", "Insert ClassInstanceCreation(4003) into MethodInvocation(4004) at 3", "Insert SimpleName: res(4010) into MethodInvocation(4012) at 0", "Insert SimpleName: getStatus(4011) into MethodInvocation(4012) at 1", "Insert SimpleType: Date(4019) into ClassInstanceCreation(4023) at 0", "Insert MethodInvocation(4022) into ClassInstanceCreation(4023) at 1", "Insert SimpleType: Date(4030) into ClassInstanceCreation(4034) at 0", "Insert MethodInvocation(4033) into ClassInstanceCreation(4034) at 1", "Insert SimpleName: res(4040) into MethodInvocation(4042) at 0", "Insert SimpleName: getRetriesSinceFetch(4041) into MethodInvocation(4042) at 1", "Insert SimpleName: res(4048) into MethodInvocation(4050) at 0", "Insert SimpleName: getFetchInterval(4049) into MethodInvocation(4050) at 1", "Insert SimpleName: res(4056) into MethodInvocation(4058) at 0", "Insert SimpleName: getScore(4057) into MethodInvocation(4058) at 1", "Insert SimpleName: StringUtil(4064) into MethodInvocation(4069) at 0", "Insert SimpleName: toHexString(4065) into MethodInvocation(4069) at 1", "Insert MethodInvocation(4068) into MethodInvocation(4069) at 2", "Insert SimpleName: Map(4072) into SimpleType: Map(4073) at 0", "Insert SimpleName: String(4074) into SimpleType: String(4075) at 0", "Insert SimpleName: String(4076) into SimpleType: String(4077) at 0", "Insert ParameterizedType: HashMap<String,String>(4086) into ClassInstanceCreation(4087) at 0", "Insert SimpleName: res(4090) into MethodInvocation(4092) at 0", "Insert SimpleName: getMetaData(4091) into MethodInvocation(4092) at 1", "Insert SingleVariableDeclaration(4103) into EnhancedForStatement(4126) at 0", "Insert MethodInvocation(4108) into EnhancedForStatement(4126) at 1", "Insert Block(4125) into EnhancedForStatement(4126) at 2", "Insert MethodInvocation(3435) into MethodInvocation(3438) at 0", "Insert SimpleName: equalsIgnoreCase(3436) into MethodInvocation(3438) at 1", "Insert StringLiteral: \"true\"(3437) into MethodInvocation(3438) at 2", "Insert Assignment: =(3441) into ExpressionStatement(3442) at 0", "Insert SimpleName: NutchConfiguration(3456) into MethodInvocation(3458) at 0", "Insert SimpleName: create(3457) into MethodInvocation(3458) at 1", "Insert SimpleName: totalCnt(3482) into MethodInvocation(3484) at 0", "Insert SimpleName: get(3483) into MethodInvocation(3484) at 1", "Insert SimpleType: HashMap(3497) into ParameterizedType: HashMap<String,Object>(3502) at 0", "Insert SimpleType: String(3499) into ParameterizedType: HashMap<String,Object>(3502) at 1", "Insert SimpleType: Object(3501) into ParameterizedType: HashMap<String,Object>(3502) at 2", "Insert QualifiedName: Map.Entry(3506) into SimpleType: Map.Entry(3507) at 0", "Insert SimpleName: String(3508) into SimpleType: String(3509) at 0", "Insert SimpleName: LongWritable(3510) into SimpleType: LongWritable(3511) at 0", "Insert SimpleName: String(3518) into SimpleType: String(3519) at 0", "Insert SimpleName: k(3520) into VariableDeclarationFragment(3524) at 0", "Insert MethodInvocation(3523) into VariableDeclarationFragment(3524) at 1", "Insert SimpleName: LongWritable(3526) into SimpleType: LongWritable(3527) at 0", "Insert SimpleName: val(3528) into VariableDeclarationFragment(3532) at 0", "Insert MethodInvocation(3531) into VariableDeclarationFragment(3532) at 1", "Insert SimpleName: k(3534) into MethodInvocation(3537) at 0", "Insert SimpleName: equals(3535) into MethodInvocation(3537) at 1", "Insert StringLiteral: \"scn\"(3536) into MethodInvocation(3537) at 2", "Insert ExpressionStatement(3551) into Block(3552) at 0", "Insert MethodInvocation(3556) into IfStatement(3776) at 0", "Insert Block(3571) into IfStatement(3776) at 1", "Insert IfStatement(3775) into IfStatement(3776) at 2", "Insert SimpleName: format(3831) into Assignment: =(3836) at 0", "Insert MethodInvocation(3835) into Assignment: =(3836) at 1", "Insert SimpleName: regex(3844) into Assignment: =(3849) at 0", "Insert MethodInvocation(3848) into Assignment: =(3849) at 1", "Insert SimpleName: retry(3857) into Assignment: =(3865) at 0", "Insert MethodInvocation(3864) into Assignment: =(3865) at 1", "Insert SimpleName: status(3873) into Assignment: =(3878) at 0", "Insert MethodInvocation(3877) into Assignment: =(3878) at 1", "Insert SimpleName: NutchJob(3885) into SimpleType: NutchJob(3886) at 0", "Insert SimpleName: File(3898) into SimpleType: File(3899) at 0", "Insert SimpleName: output(3900) into InfixExpression: +(3902) at 0", "Insert StringLiteral: \"/part-00000\"(3901) into InfixExpression: +(3902) at 1", "Insert SimpleName: args(3927) into MethodInvocation(3930) at 0", "Insert SimpleName: get(3928) into MethodInvocation(3930) at 1", "Insert StringLiteral: \"nnn\"(3929) into MethodInvocation(3930) at 2", "Insert SimpleName: min(3943) into Assignment: =(3951) at 0", "Insert MethodInvocation(3950) into Assignment: =(3951) at 1", "Insert SimpleName: NutchJob(3960) into SimpleType: NutchJob(3961) at 0", "Insert SimpleName: File(3969) into SimpleType: File(3970) at 0", "Insert SimpleName: output(3971) into InfixExpression: +(3973) at 0", "Insert StringLiteral: \"/part-00000\"(3972) into InfixExpression: +(3973) at 1", "Insert SimpleType: NutchJob(4001) into ClassInstanceCreation(4003) at 0", "Insert SimpleName: conf(4002) into ClassInstanceCreation(4003) at 1", "Insert SimpleName: Date(4018) into SimpleType: Date(4019) at 0", "Insert SimpleName: res(4020) into MethodInvocation(4022) at 0", "Insert SimpleName: getFetchTime(4021) into MethodInvocation(4022) at 1", "Insert SimpleName: Date(4029) into SimpleType: Date(4030) at 0", "Insert SimpleName: res(4031) into MethodInvocation(4033) at 0", "Insert SimpleName: getModifiedTime(4032) into MethodInvocation(4033) at 1", "Insert SimpleName: res(4066) into MethodInvocation(4068) at 0", "Insert SimpleName: getSignature(4067) into MethodInvocation(4068) at 1", "Insert SimpleType: HashMap(4081) into ParameterizedType: HashMap<String,String>(4086) at 0", "Insert SimpleType: String(4083) into ParameterizedType: HashMap<String,String>(4086) at 1", "Insert SimpleType: String(4085) into ParameterizedType: HashMap<String,String>(4086) at 2", "Insert ParameterizedType: Entry<Writable,Writable>(4101) into SingleVariableDeclaration(4103) at 0", "Insert SimpleName: e(4102) into SingleVariableDeclaration(4103) at 1", "Insert MethodInvocation(4106) into MethodInvocation(4108) at 0", "Insert SimpleName: entrySet(4107) into MethodInvocation(4108) at 1", "Insert ExpressionStatement(4124) into Block(4125) at 0", "Insert SimpleName: args(3432) into MethodInvocation(3435) at 0", "Insert SimpleName: get(3433) into MethodInvocation(3435) at 1", "Insert StringLiteral: \"sort\"(3434) into MethodInvocation(3435) at 2", "Insert SimpleName: sort(3439) into Assignment: =(3441) at 0", "Insert BooleanLiteral: true(3440) into Assignment: =(3441) at 1", "Insert SimpleName: HashMap(3496) into SimpleType: HashMap(3497) at 0", "Insert SimpleName: String(3498) into SimpleType: String(3499) at 0", "Insert SimpleName: Object(3500) into SimpleType: Object(3501) at 0", "Insert SimpleName: entry(3521) into MethodInvocation(3523) at 0", "Insert SimpleName: getKey(3522) into MethodInvocation(3523) at 1", "Insert SimpleName: entry(3529) into MethodInvocation(3531) at 0", "Insert SimpleName: getValue(3530) into MethodInvocation(3531) at 1", "Insert MethodInvocation(3550) into ExpressionStatement(3551) at 0", "Insert SimpleName: k(3553) into MethodInvocation(3556) at 0", "Insert SimpleName: equals(3554) into MethodInvocation(3556) at 1", "Insert StringLiteral: \"scx\"(3555) into MethodInvocation(3556) at 2", "Insert ExpressionStatement(3570) into Block(3571) at 0", "Insert MethodInvocation(3575) into IfStatement(3775) at 0", "Insert Block(3600) into IfStatement(3775) at 1", "Insert IfStatement(3774) into IfStatement(3775) at 2", "Insert SimpleName: args(3832) into MethodInvocation(3835) at 0", "Insert SimpleName: get(3833) into MethodInvocation(3835) at 1", "Insert StringLiteral: \"format\"(3834) into MethodInvocation(3835) at 2", "Insert SimpleName: args(3845) into MethodInvocation(3848) at 0", "Insert SimpleName: get(3846) into MethodInvocation(3848) at 1", "Insert StringLiteral: \"regex\"(3847) into MethodInvocation(3848) at 2", "Insert SimpleName: Integer(3858) into MethodInvocation(3864) at 0", "Insert SimpleName: parseInt(3859) into MethodInvocation(3864) at 1", "Insert MethodInvocation(3863) into MethodInvocation(3864) at 2", "Insert SimpleName: args(3874) into MethodInvocation(3877) at 0", "Insert SimpleName: get(3875) into MethodInvocation(3877) at 1", "Insert StringLiteral: \"status\"(3876) into MethodInvocation(3877) at 2", "Insert SimpleName: Float(3944) into MethodInvocation(3950) at 0", "Insert SimpleName: parseFloat(3945) into MethodInvocation(3950) at 1", "Insert MethodInvocation(3949) into MethodInvocation(3950) at 2", "Insert SimpleName: NutchJob(4000) into SimpleType: NutchJob(4001) at 0", "Insert SimpleName: HashMap(4080) into SimpleType: HashMap(4081) at 0", "Insert SimpleName: String(4082) into SimpleType: String(4083) at 0", "Insert SimpleName: String(4084) into SimpleType: String(4085) at 0", "Insert SimpleType: Entry(4096) into ParameterizedType: Entry<Writable,Writable>(4101) at 0", "Insert SimpleType: Writable(4098) into ParameterizedType: Entry<Writable,Writable>(4101) at 1", "Insert SimpleType: Writable(4100) into ParameterizedType: Entry<Writable,Writable>(4101) at 2", "Insert SimpleName: res(4104) into MethodInvocation(4106) at 0", "Insert SimpleName: getMetaData(4105) into MethodInvocation(4106) at 1", "Insert MethodInvocation(4123) into ExpressionStatement(4124) at 0", "Insert SimpleName: results(3538) into MethodInvocation(3550) at 0", "Insert SimpleName: put(3539) into MethodInvocation(3550) at 1", "Insert StringLiteral: \"minScore\"(3540) into MethodInvocation(3550) at 2", "Insert MethodInvocation(3549) into MethodInvocation(3550) at 3", "Insert MethodInvocation(3569) into ExpressionStatement(3570) at 0", "Insert SimpleName: k(3572) into MethodInvocation(3575) at 0", "Insert SimpleName: equals(3573) into MethodInvocation(3575) at 1", "Insert StringLiteral: \"sct\"(3574) into MethodInvocation(3575) at 2", "Insert ExpressionStatement(3599) into Block(3600) at 0", "Insert MethodInvocation(3604) into IfStatement(3774) at 0", "Insert Block(3764) into IfStatement(3774) at 1", "Insert ExpressionStatement(3773) into IfStatement(3774) at 2", "Insert SimpleName: args(3860) into MethodInvocation(3863) at 0", "Insert SimpleName: get(3861) into MethodInvocation(3863) at 1", "Insert StringLiteral: \"retry\"(3862) into MethodInvocation(3863) at 2", "Insert SimpleName: args(3946) into MethodInvocation(3949) at 0", "Insert SimpleName: get(3947) into MethodInvocation(3949) at 1", "Insert StringLiteral: \"min\"(3948) into MethodInvocation(3949) at 2", "Insert SimpleName: Entry(4095) into SimpleType: Entry(4096) at 0", "Insert SimpleName: Writable(4097) into SimpleType: Writable(4098) at 0", "Insert SimpleName: Writable(4099) into SimpleType: Writable(4100) at 0", "Insert SimpleName: metadata(4109) into MethodInvocation(4123) at 0", "Insert SimpleName: put(4110) into MethodInvocation(4123) at 1", "Insert MethodInvocation(4116) into MethodInvocation(4123) at 2", "Insert MethodInvocation(4122) into MethodInvocation(4123) at 3", "Insert SimpleName: String(3541) into MethodInvocation(3549) at 0", "Insert SimpleName: valueOf(3542) into MethodInvocation(3549) at 1", "Insert ParenthesizedExpression(3548) into MethodInvocation(3549) at 2", "Insert SimpleName: results(3557) into MethodInvocation(3569) at 0", "Insert SimpleName: put(3558) into MethodInvocation(3569) at 1", "Insert StringLiteral: \"maxScore\"(3559) into MethodInvocation(3569) at 2", "Insert MethodInvocation(3568) into MethodInvocation(3569) at 3", "Insert MethodInvocation(3598) into ExpressionStatement(3599) at 0", "Insert SimpleName: k(3601) into MethodInvocation(3604) at 0", "Insert SimpleName: startsWith(3602) into MethodInvocation(3604) at 1", "Insert StringLiteral: \"status\"(3603) into MethodInvocation(3604) at 2", "Insert VariableDeclarationStatement(3615) into Block(3764) at 0", "Insert VariableDeclarationStatement(3625) into Block(3764) at 1", "Insert IfStatement(3763) into Block(3764) at 2", "Insert MethodInvocation(3772) into ExpressionStatement(3773) at 0", "Insert SimpleName: String(4111) into MethodInvocation(4116) at 0", "Insert SimpleName: valueOf(4112) into MethodInvocation(4116) at 1", "Insert MethodInvocation(4115) into MethodInvocation(4116) at 2", "Insert SimpleName: String(4117) into MethodInvocation(4122) at 0", "Insert SimpleName: valueOf(4118) into MethodInvocation(4122) at 1", "Insert MethodInvocation(4121) into MethodInvocation(4122) at 2", "Insert InfixExpression: /(3547) into ParenthesizedExpression(3548) at 0", "Insert SimpleName: String(3560) into MethodInvocation(3568) at 0", "Insert SimpleName: valueOf(3561) into MethodInvocation(3568) at 1", "Insert ParenthesizedExpression(3567) into MethodInvocation(3568) at 2", "Insert SimpleName: results(3576) into MethodInvocation(3598) at 0", "Insert SimpleName: put(3577) into MethodInvocation(3598) at 1", "Insert StringLiteral: \"avgScore\"(3578) into MethodInvocation(3598) at 2", "Insert MethodInvocation(3597) into MethodInvocation(3598) at 3", "Insert ArrayType: String[](3608) into VariableDeclarationStatement(3615) at 0", "Insert VariableDeclarationFragment(3614) into VariableDeclarationStatement(3615) at 1", "Insert PrimitiveType: int(3616) into VariableDeclarationStatement(3625) at 0", "Insert VariableDeclarationFragment(3624) into VariableDeclarationStatement(3625) at 1", "Insert InfixExpression: >(3628) into IfStatement(3763) at 0", "Insert Block(3714) into IfStatement(3763) at 1", "Insert Block(3762) into IfStatement(3763) at 2", "Insert SimpleName: results(3765) into MethodInvocation(3772) at 0", "Insert SimpleName: put(3766) into MethodInvocation(3772) at 1", "Insert SimpleName: k(3767) into MethodInvocation(3772) at 2", "Insert MethodInvocation(3771) into MethodInvocation(3772) at 3", "Insert SimpleName: e(4113) into MethodInvocation(4115) at 0", "Insert SimpleName: getKey(4114) into MethodInvocation(4115) at 1", "Insert SimpleName: e(4119) into MethodInvocation(4121) at 0", "Insert SimpleName: getValue(4120) into MethodInvocation(4121) at 1", "Insert MethodInvocation(3545) into InfixExpression: /(3547) at 0", "Insert NumberLiteral: 1000.0f(3546) into InfixExpression: /(3547) at 1", "Insert InfixExpression: /(3566) into ParenthesizedExpression(3567) at 0", "Insert SimpleName: String(3579) into MethodInvocation(3597) at 0", "Insert SimpleName: valueOf(3580) into MethodInvocation(3597) at 1", "Insert CastExpression(3596) into MethodInvocation(3597) at 2", "Insert SimpleType: String(3606) into ArrayType: String[](3608) at 0", "Insert Dimension(3607) into ArrayType: String[](3608) at 1", "Insert SimpleName: st(3609) into VariableDeclarationFragment(3614) at 0", "Insert MethodInvocation(3613) into VariableDeclarationFragment(3614) at 1", "Insert SimpleName: code(3617) into VariableDeclarationFragment(3624) at 0", "Insert MethodInvocation(3623) into VariableDeclarationFragment(3624) at 1", "Insert QualifiedName: st.length(3626) into InfixExpression: >(3628) at 0", "Insert NumberLiteral: 2(3627) into InfixExpression: >(3628) at 1", "Insert VariableDeclarationStatement(3653) into Block(3714) at 0", "Insert VariableDeclarationStatement(3663) into Block(3714) at 1", "Insert IfStatement(3702) into Block(3714) at 2", "Insert ExpressionStatement(3713) into Block(3714) at 3", "Insert VariableDeclarationStatement(3732) into Block(3762) at 0", "Insert ExpressionStatement(3743) into Block(3762) at 1", "Insert ExpressionStatement(3752) into Block(3762) at 2", "Insert ExpressionStatement(3761) into Block(3762) at 3", "Insert SimpleName: String(3768) into MethodInvocation(3771) at 0", "Insert SimpleName: valueOf(3769) into MethodInvocation(3771) at 1", "Insert SimpleName: val(3770) into MethodInvocation(3771) at 2", "Insert SimpleName: val(3543) into MethodInvocation(3545) at 0", "Insert SimpleName: get(3544) into MethodInvocation(3545) at 1", "Insert MethodInvocation(3564) into InfixExpression: /(3566) at 0", "Insert NumberLiteral: 1000.0f(3565) into InfixExpression: /(3566) at 1", "Insert PrimitiveType: float(3581) into CastExpression(3596) at 0", "Insert ParenthesizedExpression(3595) into CastExpression(3596) at 1", "Insert SimpleName: String(3605) into SimpleType: String(3606) at 0", "Insert SimpleName: k(3610) into MethodInvocation(3613) at 0", "Insert SimpleName: split(3611) into MethodInvocation(3613) at 1", "Insert StringLiteral: \" \"(3612) into MethodInvocation(3613) at 2", "Insert SimpleName: Integer(3618) into MethodInvocation(3623) at 0", "Insert SimpleName: parseInt(3619) into MethodInvocation(3623) at 1", "Insert ArrayAccess(3622) into MethodInvocation(3623) at 2", "Insert ParameterizedType: Map<String,Object>(3635) into VariableDeclarationStatement(3653) at 0", "Insert VariableDeclarationFragment(3652) into VariableDeclarationStatement(3653) at 1", "Insert ParameterizedType: Map<String,String>(3660) into VariableDeclarationStatement(3663) at 0", "Insert VariableDeclarationFragment(3662) into VariableDeclarationStatement(3663) at 1", "Insert MethodInvocation(3667) into IfStatement(3702) at 0", "Insert Block(3683) into IfStatement(3702) at 1", "Insert Block(3701) into IfStatement(3702) at 2", "Insert MethodInvocation(3712) into ExpressionStatement(3713) at 0", "Insert ParameterizedType: Map<String,Object>(3721) into VariableDeclarationStatement(3732) at 0", "Insert VariableDeclarationFragment(3731) into VariableDeclarationStatement(3732) at 1", "Insert MethodInvocation(3742) into ExpressionStatement(3743) at 0", "Insert MethodInvocation(3751) into ExpressionStatement(3752) at 0", "Insert MethodInvocation(3760) into ExpressionStatement(3761) at 0", "Insert SimpleName: val(3562) into MethodInvocation(3564) at 0", "Insert SimpleName: get(3563) into MethodInvocation(3564) at 1", "Insert InfixExpression: /(3594) into ParenthesizedExpression(3595) at 0", "Insert SimpleName: st(3620) into ArrayAccess(3622) at 0", "Insert NumberLiteral: 1(3621) into ArrayAccess(3622) at 1", "Insert SimpleType: Map(3630) into ParameterizedType: Map<String,Object>(3635) at 0", "Insert SimpleType: String(3632) into ParameterizedType: Map<String,Object>(3635) at 1", "Insert SimpleType: Object(3634) into ParameterizedType: Map<String,Object>(3635) at 2", "Insert SimpleName: individualStatusInfo(3636) into VariableDeclarationFragment(3652) at 0", "Insert CastExpression(3651) into VariableDeclarationFragment(3652) at 1", "Insert SimpleType: Map(3655) into ParameterizedType: Map<String,String>(3660) at 0", "Insert SimpleType: String(3657) into ParameterizedType: Map<String,String>(3660) at 1", "Insert SimpleType: String(3659) into ParameterizedType: Map<String,String>(3660) at 2", "Insert SimpleName: hostValues(3661) into VariableDeclarationFragment(3662) at 0", "Insert SimpleName: individualStatusInfo(3664) into MethodInvocation(3667) at 0", "Insert SimpleName: containsKey(3665) into MethodInvocation(3667) at 1", "Insert StringLiteral: \"hostValues\"(3666) into MethodInvocation(3667) at 2", "Insert ExpressionStatement(3682) into Block(3683) at 0", "Insert ExpressionStatement(3694) into Block(3701) at 0", "Insert ExpressionStatement(3700) into Block(3701) at 1", "Insert SimpleName: hostValues(3703) into MethodInvocation(3712) at 0", "Insert SimpleName: put(3704) into MethodInvocation(3712) at 1", "Insert ArrayAccess(3707) into MethodInvocation(3712) at 2", "Insert MethodInvocation(3711) into MethodInvocation(3712) at 3", "Insert SimpleType: Map(3716) into ParameterizedType: Map<String,Object>(3721) at 0", "Insert SimpleType: String(3718) into ParameterizedType: Map<String,Object>(3721) at 1", "Insert SimpleType: Object(3720) into ParameterizedType: Map<String,Object>(3721) at 2", "Insert SimpleName: individualStatusInfo(3722) into VariableDeclarationFragment(3731) at 0", "Insert ClassInstanceCreation(3730) into VariableDeclarationFragment(3731) at 1", "Insert SimpleName: individualStatusInfo(3733) into MethodInvocation(3742) at 0", "Insert SimpleName: put(3734) into MethodInvocation(3742) at 1", "Insert StringLiteral: \"statusValue\"(3735) into MethodInvocation(3742) at 2", "Insert MethodInvocation(3741) into MethodInvocation(3742) at 3", "Insert SimpleName: individualStatusInfo(3744) into MethodInvocation(3751) at 0", "Insert SimpleName: put(3745) into MethodInvocation(3751) at 1", "Insert StringLiteral: \"count\"(3746) into MethodInvocation(3751) at 2", "Insert MethodInvocation(3750) into MethodInvocation(3751) at 3", "Insert SimpleName: statusMap(3753) into MethodInvocation(3760) at 0", "Insert SimpleName: put(3754) into MethodInvocation(3760) at 1", "Insert MethodInvocation(3758) into MethodInvocation(3760) at 2", "Insert SimpleName: individualStatusInfo(3759) into MethodInvocation(3760) at 3", "Insert ParenthesizedExpression(3592) into InfixExpression: /(3594) at 0", "Insert NumberLiteral: 1000.0(3593) into InfixExpression: /(3594) at 1", "Insert SimpleName: Map(3629) into SimpleType: Map(3630) at 0", "Insert SimpleName: String(3631) into SimpleType: String(3632) at 0", "Insert SimpleName: Object(3633) into SimpleType: Object(3634) at 0", "Insert ParameterizedType: Map<String,Object>(3643) into CastExpression(3651) at 0", "Insert MethodInvocation(3650) into CastExpression(3651) at 1", "Insert SimpleName: Map(3654) into SimpleType: Map(3655) at 0", "Insert SimpleName: String(3656) into SimpleType: String(3657) at 0", "Insert SimpleName: String(3658) into SimpleType: String(3659) at 0", "Insert Assignment: =(3681) into ExpressionStatement(3682) at 0", "Insert Assignment: =(3693) into ExpressionStatement(3694) at 0", "Insert MethodInvocation(3699) into ExpressionStatement(3700) at 0", "Insert SimpleName: st(3705) into ArrayAccess(3707) at 0", "Insert NumberLiteral: 2(3706) into ArrayAccess(3707) at 1", "Insert SimpleName: String(3708) into MethodInvocation(3711) at 0", "Insert SimpleName: valueOf(3709) into MethodInvocation(3711) at 1", "Insert SimpleName: val(3710) into MethodInvocation(3711) at 2", "Insert SimpleName: Map(3715) into SimpleType: Map(3716) at 0", "Insert SimpleName: String(3717) into SimpleType: String(3718) at 0", "Insert SimpleName: Object(3719) into SimpleType: Object(3720) at 0", "Insert ParameterizedType: HashMap<String,Object>(3729) into ClassInstanceCreation(3730) at 0", "Insert SimpleName: CrawlDatum(3736) into MethodInvocation(3741) at 0", "Insert SimpleName: getStatusName(3737) into MethodInvocation(3741) at 1", "Insert CastExpression(3740) into MethodInvocation(3741) at 2", "Insert SimpleName: String(3747) into MethodInvocation(3750) at 0", "Insert SimpleName: valueOf(3748) into MethodInvocation(3750) at 1", "Insert SimpleName: val(3749) into MethodInvocation(3750) at 2", "Insert SimpleName: String(3755) into MethodInvocation(3758) at 0", "Insert SimpleName: valueOf(3756) into MethodInvocation(3758) at 1", "Insert SimpleName: code(3757) into MethodInvocation(3758) at 2", "Insert InfixExpression: /(3591) into ParenthesizedExpression(3592) at 0", "Insert SimpleType: Map(3638) into ParameterizedType: Map<String,Object>(3643) at 0", "Insert SimpleType: String(3640) into ParameterizedType: Map<String,Object>(3643) at 1", "Insert SimpleType: Object(3642) into ParameterizedType: Map<String,Object>(3643) at 2", "Insert SimpleName: statusMap(3644) into MethodInvocation(3650) at 0", "Insert SimpleName: get(3645) into MethodInvocation(3650) at 1", "Insert MethodInvocation(3649) into MethodInvocation(3650) at 2", "Insert SimpleName: hostValues(3668) into Assignment: =(3681) at 0", "Insert CastExpression(3680) into Assignment: =(3681) at 1", "Insert SimpleName: hostValues(3684) into Assignment: =(3693) at 0", "Insert ClassInstanceCreation(3692) into Assignment: =(3693) at 1", "Insert SimpleName: individualStatusInfo(3695) into MethodInvocation(3699) at 0", "Insert SimpleName: put(3696) into MethodInvocation(3699) at 1", "Insert StringLiteral: \"hostValues\"(3697) into MethodInvocation(3699) at 2", "Insert SimpleName: hostValues(3698) into MethodInvocation(3699) at 3", "Insert SimpleType: HashMap(3724) into ParameterizedType: HashMap<String,Object>(3729) at 0", "Insert SimpleType: String(3726) into ParameterizedType: HashMap<String,Object>(3729) at 1", "Insert SimpleType: Object(3728) into ParameterizedType: HashMap<String,Object>(3729) at 2", "Insert PrimitiveType: byte(3738) into CastExpression(3740) at 0", "Insert SimpleName: code(3739) into CastExpression(3740) at 1", "Insert ParenthesizedExpression(3587) into InfixExpression: /(3591) at 0", "Insert MethodInvocation(3590) into InfixExpression: /(3591) at 1", "Insert SimpleName: Map(3637) into SimpleType: Map(3638) at 0", "Insert SimpleName: String(3639) into SimpleType: String(3640) at 0", "Insert SimpleName: Object(3641) into SimpleType: Object(3642) at 0", "Insert SimpleName: String(3646) into MethodInvocation(3649) at 0", "Insert SimpleName: valueOf(3647) into MethodInvocation(3649) at 1", "Insert SimpleName: code(3648) into MethodInvocation(3649) at 2", "Insert ParameterizedType: Map<String,String>(3675) into CastExpression(3680) at 0", "Insert MethodInvocation(3679) into CastExpression(3680) at 1", "Insert ParameterizedType: HashMap<String,String>(3691) into ClassInstanceCreation(3692) at 0", "Insert SimpleName: HashMap(3723) into SimpleType: HashMap(3724) at 0", "Insert SimpleName: String(3725) into SimpleType: String(3726) at 0", "Insert SimpleName: Object(3727) into SimpleType: Object(3728) at 0", "Insert CastExpression(3586) into ParenthesizedExpression(3587) at 0", "Insert SimpleName: totalCnt(3588) into MethodInvocation(3590) at 0", "Insert SimpleName: get(3589) into MethodInvocation(3590) at 1", "Insert SimpleType: Map(3670) into ParameterizedType: Map<String,String>(3675) at 0", "Insert SimpleType: String(3672) into ParameterizedType: Map<String,String>(3675) at 1", "Insert SimpleType: String(3674) into ParameterizedType: Map<String,String>(3675) at 2", "Insert SimpleName: individualStatusInfo(3676) into MethodInvocation(3679) at 0", "Insert SimpleName: get(3677) into MethodInvocation(3679) at 1", "Insert StringLiteral: \"hostValues\"(3678) into MethodInvocation(3679) at 2", "Insert SimpleType: HashMap(3686) into ParameterizedType: HashMap<String,String>(3691) at 0", "Insert SimpleType: String(3688) into ParameterizedType: HashMap<String,String>(3691) at 1", "Insert SimpleType: String(3690) into ParameterizedType: HashMap<String,String>(3691) at 2", "Insert PrimitiveType: double(3582) into CastExpression(3586) at 0", "Insert MethodInvocation(3585) into CastExpression(3586) at 1", "Insert SimpleName: Map(3669) into SimpleType: Map(3670) at 0", "Insert SimpleName: String(3671) into SimpleType: String(3672) at 0", "Insert SimpleName: String(3673) into SimpleType: String(3674) at 0", "Insert SimpleName: HashMap(3685) into SimpleType: HashMap(3686) at 0", "Insert SimpleName: String(3687) into SimpleType: String(3688) at 0", "Insert SimpleName: String(3689) into SimpleType: String(3690) at 0", "Insert SimpleName: val(3583) into MethodInvocation(3585) at 0", "Insert SimpleName: get(3584) into MethodInvocation(3585) at 1", "Delete PrimitiveType: void(1524)"]}}, {"DeduplicationJob_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.util.HashMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.util.Map to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "UPDATE from Configured to NutchTool", "operations": ["UPD SimpleName: Configured from Configured to NutchTool", "UPD SimpleType: Configured from Configured to NutchTool"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: arg to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 7", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: String[] at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: arg to ArrayAccess at 0", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: crawldb to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 6", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"/crawldb\" to InfixExpression: + at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ArrayType: String[] to ArrayCreation at 0", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: results to MethodInvocation at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS Block to MethodDeclaration at 7", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: run to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleName: crawldb to Assignment: = at 1", "INS SimpleName: res to MethodInvocation at 2", "INS SimpleType: Exception to MethodDeclaration at 6", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: res to VariableDeclarationFragment at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS SimpleName: arg to MethodInvocation at 1"]}]}}, {"DeduplicationJob_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(1166) at 3", "Insert ImportDeclaration(11) into CompilationUnit(1166) at 5", "Insert ImportDeclaration(63) into CompilationUnit(1166) at 31", "Insert QualifiedName: java.util.HashMap(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.Map(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.nutch.util.NutchTool(62) into ImportDeclaration(63) at 0", "Update SimpleType: Configured(76) to NutchTool", "Insert MethodDeclaration(1164) into TypeDeclaration: class(1165) at 12", "Update SimpleName: Configured(75) to NutchTool", "Insert MarkerAnnotation(1069) into MethodDeclaration(1164) at 0", "Insert Modifier: public(1070) into MethodDeclaration(1164) at 1", "Insert ParameterizedType: Map<String,Object>(1077) into MethodDeclaration(1164) at 2", "Insert SimpleName: run(1078) into MethodDeclaration(1164) at 3", "Insert SingleVariableDeclaration(1087) into MethodDeclaration(1164) at 4", "Insert SingleVariableDeclaration(1091) into MethodDeclaration(1164) at 5", "Insert SimpleType: Exception(1093) into MethodDeclaration(1164) at 6", "Insert Block(1163) into MethodDeclaration(1164) at 7", "Insert SimpleName: Override(1068) into MarkerAnnotation(1069) at 0", "Insert SimpleType: Map(1072) into ParameterizedType: Map<String,Object>(1077) at 0", "Insert SimpleType: String(1074) into ParameterizedType: Map<String,Object>(1077) at 1", "Insert SimpleType: Object(1076) into ParameterizedType: Map<String,Object>(1077) at 2", "Insert ParameterizedType: Map<String,String>(1085) into SingleVariableDeclaration(1087) at 0", "Insert SimpleName: args(1086) into SingleVariableDeclaration(1087) at 1", "Insert SimpleType: String(1089) into SingleVariableDeclaration(1091) at 0", "Insert SimpleName: crawlId(1090) into SingleVariableDeclaration(1091) at 1", "Insert SimpleName: Exception(1092) into SimpleType: Exception(1093) at 0", "Insert VariableDeclarationStatement(1111) into Block(1163) at 0", "Insert VariableDeclarationStatement(1117) into Block(1163) at 1", "Insert VariableDeclarationStatement(1130) into Block(1163) at 2", "Insert VariableDeclarationStatement(1138) into Block(1163) at 3", "Insert ExpressionStatement(1144) into Block(1163) at 4", "Insert VariableDeclarationStatement(1151) into Block(1163) at 5", "Insert ExpressionStatement(1160) into Block(1163) at 6", "Insert ReturnStatement(1162) into Block(1163) at 7", "Insert SimpleName: Map(1071) into SimpleType: Map(1072) at 0", "Insert SimpleName: String(1073) into SimpleType: String(1074) at 0", "Insert SimpleName: Object(1075) into SimpleType: Object(1076) at 0", "Insert SimpleType: Map(1080) into ParameterizedType: Map<String,String>(1085) at 0", "Insert SimpleType: String(1082) into ParameterizedType: Map<String,String>(1085) at 1", "Insert SimpleType: String(1084) into ParameterizedType: Map<String,String>(1085) at 2", "Insert SimpleName: String(1088) into SimpleType: String(1089) at 0", "Insert ParameterizedType: Map<String,Object>(1100) into VariableDeclarationStatement(1111) at 0", "Insert VariableDeclarationFragment(1110) into VariableDeclarationStatement(1111) at 1", "Insert SimpleType: String(1113) into VariableDeclarationStatement(1117) at 0", "Insert VariableDeclarationFragment(1116) into VariableDeclarationStatement(1117) at 1", "Insert ArrayType: String[](1121) into VariableDeclarationStatement(1130) at 0", "Insert VariableDeclarationFragment(1129) into VariableDeclarationStatement(1130) at 1", "Insert SimpleType: String(1132) into VariableDeclarationStatement(1138) at 0", "Insert VariableDeclarationFragment(1137) into VariableDeclarationStatement(1138) at 1", "Insert Assignment: =(1143) into ExpressionStatement(1144) at 0", "Insert PrimitiveType: int(1145) into VariableDeclarationStatement(1151) at 0", "Insert VariableDeclarationFragment(1150) into VariableDeclarationStatement(1151) at 1", "Insert MethodInvocation(1159) into ExpressionStatement(1160) at 0", "Insert SimpleName: results(1161) into ReturnStatement(1162) at 0", "Insert SimpleName: Map(1079) into SimpleType: Map(1080) at 0", "Insert SimpleName: String(1081) into SimpleType: String(1082) at 0", "Insert SimpleName: String(1083) into SimpleType: String(1084) at 0", "Insert SimpleType: Map(1095) into ParameterizedType: Map<String,Object>(1100) at 0", "Insert SimpleType: String(1097) into ParameterizedType: Map<String,Object>(1100) at 1", "Insert SimpleType: Object(1099) into ParameterizedType: Map<String,Object>(1100) at 2", "Insert SimpleName: results(1101) into VariableDeclarationFragment(1110) at 0", "Insert ClassInstanceCreation(1109) into VariableDeclarationFragment(1110) at 1", "Insert SimpleName: String(1112) into SimpleType: String(1113) at 0", "Insert SimpleName: RESULT(1114) into VariableDeclarationFragment(1116) at 0", "Insert StringLiteral: \"result\"(1115) into VariableDeclarationFragment(1116) at 1", "Insert SimpleType: String(1119) into ArrayType: String[](1121) at 0", "Insert Dimension(1120) into ArrayType: String[](1121) at 1", "Insert SimpleName: arg(1122) into VariableDeclarationFragment(1129) at 0", "Insert ArrayCreation(1128) into VariableDeclarationFragment(1129) at 1", "Insert SimpleName: String(1131) into SimpleType: String(1132) at 0", "Insert SimpleName: crawldb(1133) into VariableDeclarationFragment(1137) at 0", "Insert InfixExpression: +(1136) into VariableDeclarationFragment(1137) at 1", "Insert ArrayAccess(1141) into Assignment: =(1143) at 0", "Insert SimpleName: crawldb(1142) into Assignment: =(1143) at 1", "Insert SimpleName: res(1146) into VariableDeclarationFragment(1150) at 0", "Insert MethodInvocation(1149) into VariableDeclarationFragment(1150) at 1", "Insert SimpleName: results(1152) into MethodInvocation(1159) at 0", "Insert SimpleName: put(1153) into MethodInvocation(1159) at 1", "Insert SimpleName: RESULT(1154) into MethodInvocation(1159) at 2", "Insert MethodInvocation(1158) into MethodInvocation(1159) at 3", "Insert SimpleName: Map(1094) into SimpleType: Map(1095) at 0", "Insert SimpleName: String(1096) into SimpleType: String(1097) at 0", "Insert SimpleName: Object(1098) into SimpleType: Object(1099) at 0", "Insert ParameterizedType: HashMap<String,Object>(1108) into ClassInstanceCreation(1109) at 0", "Insert SimpleName: String(1118) into SimpleType: String(1119) at 0", "Insert ArrayType: String[](1126) into ArrayCreation(1128) at 0", "Insert NumberLiteral: 1(1127) into ArrayCreation(1128) at 1", "Insert SimpleName: crawlId(1134) into InfixExpression: +(1136) at 0", "Insert StringLiteral: \"/crawldb\"(1135) into InfixExpression: +(1136) at 1", "Insert SimpleName: arg(1139) into ArrayAccess(1141) at 0", "Insert NumberLiteral: 0(1140) into ArrayAccess(1141) at 1", "Insert SimpleName: run(1147) into MethodInvocation(1149) at 0", "Insert SimpleName: arg(1148) into MethodInvocation(1149) at 1", "Insert SimpleName: Integer(1155) into MethodInvocation(1158) at 0", "Insert SimpleName: toString(1156) into MethodInvocation(1158) at 1", "Insert SimpleName: res(1157) into MethodInvocation(1158) at 2", "Insert SimpleType: HashMap(1103) into ParameterizedType: HashMap<String,Object>(1108) at 0", "Insert SimpleType: String(1105) into ParameterizedType: HashMap<String,Object>(1108) at 1", "Insert SimpleType: Object(1107) into ParameterizedType: HashMap<String,Object>(1108) at 2", "Insert SimpleType: String(1124) into ArrayType: String[](1126) at 0", "Insert Dimension(1125) into ArrayType: String[](1126) at 1", "Insert SimpleName: HashMap(1102) into SimpleType: HashMap(1103) at 0", "Insert SimpleName: String(1104) into SimpleType: String(1105) at 0", "Insert SimpleName: Object(1106) into SimpleType: Object(1107) at 0", "Insert SimpleName: String(1123) into SimpleType: String(1124) at 0"]}}, {"Generator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "UPDATE from Configured to NutchTool", "operations": ["UPD SimpleType: Configured from Configured to NutchTool", "UPD SimpleName: Configured from Configured to NutchTool"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: segments_dir to ClassInstanceCreation at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleName: parseLong to MethodInvocation at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Block to IfStatement at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 12", "INS Block to IfStatement at 1", "INS IfStatement to Block at 19", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: norm to Assignment: = at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: run to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: norm to VariableDeclarationFragment at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS StringLiteral: \"force\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: topN to VariableDeclarationFragment at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 10", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: generate to MethodInvocation at 0", "INS SimpleName: Long to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS NumberLiteral: 1000L to InfixExpression: * at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: maxNumSegments to Assignment: = at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: results to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: numDays to VariableDeclarationFragment at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS SimpleName: segs to InfixExpression: == at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: crawldb to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: numFetchers to Assignment: = at 0", "INS SimpleType: Exception to MethodDeclaration at 6", "INS IfStatement to Block at 18", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: maxNumSegments to MethodInvocation at 9", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: numFetchers to VariableDeclarationFragment at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: numDays to InfixExpression: * at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: curTime to VariableDeclarationFragment at 0", "INS StringLiteral: \"noFilter\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: dbDir to MethodInvocation at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: segmentsDir to VariableDeclarationFragment at 0", "INS NumberLiteral: 24 to InfixExpression: * at 4", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS ArrayType: Path[] to VariableDeclarationStatement at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: maxNumSegments to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: results to ReturnStatement at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: args to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 11", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 17", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS SimpleName: curTime to MethodInvocation at 5", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 21", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: * to Assignment: += at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: parseInt to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS StringLiteral: \"Generator: \" to InfixExpression: + at 0", "INS Block to CatchClause at 1", "INS StringLiteral: \"/segments\" to InfixExpression: + at 1", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS TryStatement to Block at 20", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SimpleName: filter to VariableDeclarationFragment at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS StringLiteral: \"topN\" to MethodInvocation at 2", "INS NumberLiteral: 60 to InfixExpression: * at 2", "INS StringLiteral: \"adddays\" to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS StringLiteral: \"topN\" to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: segmentsDir to MethodInvocation at 2", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 60 to InfixExpression: * at 3", "INS Block to TryStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: topN to MethodInvocation at 4", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: parseInt to MethodInvocation at 1", "INS SimpleName: segments_dir to VariableDeclarationFragment at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: args to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 14", "INS SimpleType: Path to ArrayType: Path[] at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS IfStatement to Block at 13", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: get to MethodInvocation at 1", "INS StringLiteral: \"maxNumSegments\" to MethodInvocation at 2", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: force to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: norm to MethodInvocation at 7", "INS SimpleName: args to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: crawldb to VariableDeclarationFragment at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS IfStatement to Block at 15", "INS SimpleName: args to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: RESULT to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: segs to VariableDeclarationFragment at 0", "INS SimpleName: force to MethodInvocation at 8", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: force to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS MethodInvocation to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: results to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: put to MethodInvocation at 1", "INS IfStatement to Block at 16", "INS SimpleName: containsKey to MethodInvocation at 1", "INS PrefixExpression: - to MethodInvocation at 2", "INS StringLiteral: \"maxNumSegments\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 6", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: topN to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 3", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: curTime to Assignment: += at 0", "INS SimpleName: filter to MethodInvocation at 6", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: results to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS QualifiedName: Long.MAX_VALUE to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: += to ExpressionStatement at 0", "INS StringLiteral: \"numFetchers\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: filter to Assignment: = at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS StringLiteral: \"/crawldb\" to InfixExpression: + at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: dbDir to VariableDeclarationFragment at 0", "INS StringLiteral: \"noNorm\" to MethodInvocation at 2", "INS Dimension to ArrayType: Path[] at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 9", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: args to MethodInvocation at 0", "INS StringLiteral: \"adddays\" to MethodInvocation at 2", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS Block to IfStatement at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS ReturnStatement to Block at 22", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: numFetchers to MethodInvocation at 3", "INS StringLiteral: \"numFetchers\" to MethodInvocation at 2", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1"]}]}}, {"Generator_diff": {"operations": ["Insert ImportDeclaration(63) into CompilationUnit(3651) at 24", "Insert QualifiedName: org.apache.nutch.util.NutchTool(62) into ImportDeclaration(63) at 0", "Update SimpleType: Configured(77) to NutchTool", "Insert MethodDeclaration(3649) into TypeDeclaration: class(3650) at 38", "Update SimpleName: Configured(76) to NutchTool", "Insert MarkerAnnotation(3348) into MethodDeclaration(3649) at 0", "Insert Modifier: public(3349) into MethodDeclaration(3649) at 1", "Insert ParameterizedType: Map<String,Object>(3356) into MethodDeclaration(3649) at 2", "Insert SimpleName: run(3357) into MethodDeclaration(3649) at 3", "Insert SingleVariableDeclaration(3366) into MethodDeclaration(3649) at 4", "Insert SingleVariableDeclaration(3370) into MethodDeclaration(3649) at 5", "Insert SimpleType: Exception(3372) into MethodDeclaration(3649) at 6", "Insert Block(3648) into MethodDeclaration(3649) at 7", "Insert SimpleName: Override(3347) into MarkerAnnotation(3348) at 0", "Insert SimpleType: Map(3351) into ParameterizedType: Map<String,Object>(3356) at 0", "Insert SimpleType: String(3353) into ParameterizedType: Map<String,Object>(3356) at 1", "Insert SimpleType: Object(3355) into ParameterizedType: Map<String,Object>(3356) at 2", "Insert ParameterizedType: Map<String,String>(3364) into SingleVariableDeclaration(3366) at 0", "Insert SimpleName: args(3365) into SingleVariableDeclaration(3366) at 1", "Insert SimpleType: String(3368) into SingleVariableDeclaration(3370) at 0", "Insert SimpleName: crawlId(3369) into SingleVariableDeclaration(3370) at 1", "Insert SimpleName: Exception(3371) into SimpleType: Exception(3372) at 0", "Insert VariableDeclarationStatement(3390) into Block(3648) at 0", "Insert VariableDeclarationStatement(3396) into Block(3648) at 1", "Insert VariableDeclarationStatement(3404) into Block(3648) at 2", "Insert VariableDeclarationStatement(3413) into Block(3648) at 3", "Insert VariableDeclarationStatement(3421) into Block(3648) at 4", "Insert VariableDeclarationStatement(3430) into Block(3648) at 5", "Insert VariableDeclarationStatement(3437) into Block(3648) at 6", "Insert VariableDeclarationStatement(3442) into Block(3648) at 7", "Insert VariableDeclarationStatement(3448) into Block(3648) at 8", "Insert VariableDeclarationStatement(3453) into Block(3648) at 9", "Insert VariableDeclarationStatement(3458) into Block(3648) at 10", "Insert VariableDeclarationStatement(3463) into Block(3648) at 11", "Insert VariableDeclarationStatement(3468) into Block(3648) at 12", "Insert IfStatement(3484) into Block(3648) at 13", "Insert IfStatement(3500) into Block(3648) at 14", "Insert IfStatement(3526) into Block(3648) at 15", "Insert IfStatement(3536) into Block(3648) at 16", "Insert IfStatement(3546) into Block(3648) at 17", "Insert IfStatement(3556) into Block(3648) at 18", "Insert IfStatement(3572) into Block(3648) at 19", "Insert TryStatement(3636) into Block(3648) at 20", "Insert ExpressionStatement(3645) into Block(3648) at 21", "Insert ReturnStatement(3647) into Block(3648) at 22", "Insert SimpleName: Map(3350) into SimpleType: Map(3351) at 0", "Insert SimpleName: String(3352) into SimpleType: String(3353) at 0", "Insert SimpleName: Object(3354) into SimpleType: Object(3355) at 0", "Insert SimpleType: Map(3359) into ParameterizedType: Map<String,String>(3364) at 0", "Insert SimpleType: String(3361) into ParameterizedType: Map<String,String>(3364) at 1", "Insert SimpleType: String(3363) into ParameterizedType: Map<String,String>(3364) at 2", "Insert SimpleName: String(3367) into SimpleType: String(3368) at 0", "Insert ParameterizedType: Map<String,Object>(3379) into VariableDeclarationStatement(3390) at 0", "Insert VariableDeclarationFragment(3389) into VariableDeclarationStatement(3390) at 1", "Insert SimpleType: String(3392) into VariableDeclarationStatement(3396) at 0", "Insert VariableDeclarationFragment(3395) into VariableDeclarationStatement(3396) at 1", "Insert SimpleType: String(3398) into VariableDeclarationStatement(3404) at 0", "Insert VariableDeclarationFragment(3403) into VariableDeclarationStatement(3404) at 1", "Insert SimpleType: Path(3406) into VariableDeclarationStatement(3413) at 0", "Insert VariableDeclarationFragment(3412) into VariableDeclarationStatement(3413) at 1", "Insert SimpleType: String(3415) into VariableDeclarationStatement(3421) at 0", "Insert VariableDeclarationFragment(3420) into VariableDeclarationStatement(3421) at 1", "Insert SimpleType: Path(3423) into VariableDeclarationStatement(3430) at 0", "Insert VariableDeclarationFragment(3429) into VariableDeclarationStatement(3430) at 1", "Insert PrimitiveType: long(3431) into VariableDeclarationStatement(3437) at 0", "Insert VariableDeclarationFragment(3436) into VariableDeclarationStatement(3437) at 1", "Insert PrimitiveType: long(3438) into VariableDeclarationStatement(3442) at 0", "Insert VariableDeclarationFragment(3441) into VariableDeclarationStatement(3442) at 1", "Insert PrimitiveType: int(3443) into VariableDeclarationStatement(3448) at 0", "Insert VariableDeclarationFragment(3447) into VariableDeclarationStatement(3448) at 1", "Insert PrimitiveType: boolean(3449) into VariableDeclarationStatement(3453) at 0", "Insert VariableDeclarationFragment(3452) into VariableDeclarationStatement(3453) at 1", "Insert PrimitiveType: boolean(3454) into VariableDeclarationStatement(3458) at 0", "Insert VariableDeclarationFragment(3457) into VariableDeclarationStatement(3458) at 1", "Insert PrimitiveType: boolean(3459) into VariableDeclarationStatement(3463) at 0", "Insert VariableDeclarationFragment(3462) into VariableDeclarationStatement(3463) at 1", "Insert PrimitiveType: int(3464) into VariableDeclarationStatement(3468) at 0", "Insert VariableDeclarationFragment(3467) into VariableDeclarationStatement(3468) at 1", "Insert MethodInvocation(3472) into IfStatement(3484) at 0", "Insert Block(3483) into IfStatement(3484) at 1", "Insert MethodInvocation(3488) into IfStatement(3500) at 0", "Insert Block(3499) into IfStatement(3500) at 1", "Insert MethodInvocation(3504) into IfStatement(3526) at 0", "Insert Block(3525) into IfStatement(3526) at 1", "Insert MethodInvocation(3530) into IfStatement(3536) at 0", "Insert Block(3535) into IfStatement(3536) at 1", "Insert MethodInvocation(3540) into IfStatement(3546) at 0", "Insert Block(3545) into IfStatement(3546) at 1", "Insert MethodInvocation(3550) into IfStatement(3556) at 0", "Insert Block(3555) into IfStatement(3556) at 1", "Insert MethodInvocation(3560) into IfStatement(3572) at 0", "Insert Block(3571) into IfStatement(3572) at 1", "Insert Block(3607) into TryStatement(3636) at 0", "Insert CatchClause(3635) into TryStatement(3636) at 1", "Insert MethodInvocation(3644) into ExpressionStatement(3645) at 0", "Insert SimpleName: results(3646) into ReturnStatement(3647) at 0", "Insert SimpleName: Map(3358) into SimpleType: Map(3359) at 0", "Insert SimpleName: String(3360) into SimpleType: String(3361) at 0", "Insert SimpleName: String(3362) into SimpleType: String(3363) at 0", "Insert SimpleType: Map(3374) into ParameterizedType: Map<String,Object>(3379) at 0", "Insert SimpleType: String(3376) into ParameterizedType: Map<String,Object>(3379) at 1", "Insert SimpleType: Object(3378) into ParameterizedType: Map<String,Object>(3379) at 2", "Insert SimpleName: results(3380) into VariableDeclarationFragment(3389) at 0", "Insert ClassInstanceCreation(3388) into VariableDeclarationFragment(3389) at 1", "Insert SimpleName: String(3391) into SimpleType: String(3392) at 0", "Insert SimpleName: RESULT(3393) into VariableDeclarationFragment(3395) at 0", "Insert StringLiteral: \"result\"(3394) into VariableDeclarationFragment(3395) at 1", "Insert SimpleName: String(3397) into SimpleType: String(3398) at 0", "Insert SimpleName: crawldb(3399) into VariableDeclarationFragment(3403) at 0", "Insert InfixExpression: +(3402) into VariableDeclarationFragment(3403) at 1", "Insert SimpleName: Path(3405) into SimpleType: Path(3406) at 0", "Insert SimpleName: dbDir(3407) into VariableDeclarationFragment(3412) at 0", "Insert ClassInstanceCreation(3411) into VariableDeclarationFragment(3412) at 1", "Insert SimpleName: String(3414) into SimpleType: String(3415) at 0", "Insert SimpleName: segments_dir(3416) into VariableDeclarationFragment(3420) at 0", "Insert InfixExpression: +(3419) into VariableDeclarationFragment(3420) at 1", "Insert SimpleName: Path(3422) into SimpleType: Path(3423) at 0", "Insert SimpleName: segmentsDir(3424) into VariableDeclarationFragment(3429) at 0", "Insert ClassInstanceCreation(3428) into VariableDeclarationFragment(3429) at 1", "Insert SimpleName: curTime(3432) into VariableDeclarationFragment(3436) at 0", "Insert MethodInvocation(3435) into VariableDeclarationFragment(3436) at 1", "Insert SimpleName: topN(3439) into VariableDeclarationFragment(3441) at 0", "Insert QualifiedName: Long.MAX_VALUE(3440) into VariableDeclarationFragment(3441) at 1", "Insert SimpleName: numFetchers(3444) into VariableDeclarationFragment(3447) at 0", "Insert PrefixExpression: -(3446) into VariableDeclarationFragment(3447) at 1", "Insert SimpleName: filter(3450) into VariableDeclarationFragment(3452) at 0", "Insert BooleanLiteral: true(3451) into VariableDeclarationFragment(3452) at 1", "Insert SimpleName: norm(3455) into VariableDeclarationFragment(3457) at 0", "Insert BooleanLiteral: true(3456) into VariableDeclarationFragment(3457) at 1", "Insert SimpleName: force(3460) into VariableDeclarationFragment(3462) at 0", "Insert BooleanLiteral: false(3461) into VariableDeclarationFragment(3462) at 1", "Insert SimpleName: maxNumSegments(3465) into VariableDeclarationFragment(3467) at 0", "Insert NumberLiteral: 1(3466) into VariableDeclarationFragment(3467) at 1", "Insert SimpleName: args(3469) into MethodInvocation(3472) at 0", "Insert SimpleName: containsKey(3470) into MethodInvocation(3472) at 1", "Insert StringLiteral: \"topN\"(3471) into MethodInvocation(3472) at 2", "Insert ExpressionStatement(3482) into Block(3483) at 0", "Insert SimpleName: args(3485) into MethodInvocation(3488) at 0", "Insert SimpleName: containsKey(3486) into MethodInvocation(3488) at 1", "Insert StringLiteral: \"numFetchers\"(3487) into MethodInvocation(3488) at 2", "Insert ExpressionStatement(3498) into Block(3499) at 0", "Insert SimpleName: args(3501) into MethodInvocation(3504) at 0", "Insert SimpleName: containsKey(3502) into MethodInvocation(3504) at 1", "Insert StringLiteral: \"adddays\"(3503) into MethodInvocation(3504) at 2", "Insert VariableDeclarationStatement(3515) into Block(3525) at 0", "Insert ExpressionStatement(3524) into Block(3525) at 1", "Insert SimpleName: args(3527) into MethodInvocation(3530) at 0", "Insert SimpleName: containsKey(3528) into MethodInvocation(3530) at 1", "Insert StringLiteral: \"noFilter\"(3529) into MethodInvocation(3530) at 2", "Insert ExpressionStatement(3534) into Block(3535) at 0", "Insert SimpleName: args(3537) into MethodInvocation(3540) at 0", "Insert SimpleName: containsKey(3538) into MethodInvocation(3540) at 1", "Insert StringLiteral: \"noNorm\"(3539) into MethodInvocation(3540) at 2", "Insert ExpressionStatement(3544) into Block(3545) at 0", "Insert SimpleName: args(3547) into MethodInvocation(3550) at 0", "Insert SimpleName: containsKey(3548) into MethodInvocation(3550) at 1", "Insert StringLiteral: \"force\"(3549) into MethodInvocation(3550) at 2", "Insert ExpressionStatement(3554) into Block(3555) at 0", "Insert SimpleName: args(3557) into MethodInvocation(3560) at 0", "Insert SimpleName: containsKey(3558) into MethodInvocation(3560) at 1", "Insert StringLiteral: \"maxNumSegments\"(3559) into MethodInvocation(3560) at 2", "Insert ExpressionStatement(3570) into Block(3571) at 0", "Insert VariableDeclarationStatement(3590) into Block(3607) at 0", "Insert IfStatement(3606) into Block(3607) at 1", "Insert SingleVariableDeclaration(3611) into CatchClause(3635) at 0", "Insert Block(3634) into CatchClause(3635) at 1", "Insert SimpleName: results(3637) into MethodInvocation(3644) at 0", "Insert SimpleName: put(3638) into MethodInvocation(3644) at 1", "Insert SimpleName: RESULT(3639) into MethodInvocation(3644) at 2", "Insert MethodInvocation(3643) into MethodInvocation(3644) at 3", "Insert SimpleName: Map(3373) into SimpleType: Map(3374) at 0", "Insert SimpleName: String(3375) into SimpleType: String(3376) at 0", "Insert SimpleName: Object(3377) into SimpleType: Object(3378) at 0", "Insert ParameterizedType: HashMap<String,Object>(3387) into ClassInstanceCreation(3388) at 0", "Insert SimpleName: crawlId(3400) into InfixExpression: +(3402) at 0", "Insert StringLiteral: \"/crawldb\"(3401) into InfixExpression: +(3402) at 1", "Insert SimpleType: Path(3409) into ClassInstanceCreation(3411) at 0", "Insert SimpleName: crawldb(3410) into ClassInstanceCreation(3411) at 1", "Insert SimpleName: crawlId(3417) into InfixExpression: +(3419) at 0", "Insert StringLiteral: \"/segments\"(3418) into InfixExpression: +(3419) at 1", "Insert SimpleType: Path(3426) into ClassInstanceCreation(3428) at 0", "Insert SimpleName: segments_dir(3427) into ClassInstanceCreation(3428) at 1", "Insert SimpleName: System(3433) into MethodInvocation(3435) at 0", "Insert SimpleName: currentTimeMillis(3434) into MethodInvocation(3435) at 1", "Insert NumberLiteral: 1(3445) into PrefixExpression: -(3446) at 0", "Insert Assignment: =(3481) into ExpressionStatement(3482) at 0", "Insert Assignment: =(3497) into ExpressionStatement(3498) at 0", "Insert PrimitiveType: long(3505) into VariableDeclarationStatement(3515) at 0", "Insert VariableDeclarationFragment(3514) into VariableDeclarationStatement(3515) at 1", "Insert Assignment: +=(3523) into ExpressionStatement(3524) at 0", "Insert Assignment: =(3533) into ExpressionStatement(3534) at 0", "Insert Assignment: =(3543) into ExpressionStatement(3544) at 0", "Insert Assignment: =(3553) into ExpressionStatement(3554) at 0", "Insert Assignment: =(3569) into ExpressionStatement(3570) at 0", "Insert ArrayType: Path[](3576) into VariableDeclarationStatement(3590) at 0", "Insert VariableDeclarationFragment(3589) into VariableDeclarationStatement(3590) at 1", "Insert InfixExpression: ==(3593) into IfStatement(3606) at 0", "Insert Block(3605) into IfStatement(3606) at 1", "Insert SimpleType: Exception(3609) into SingleVariableDeclaration(3611) at 0", "Insert SimpleName: e(3610) into SingleVariableDeclaration(3611) at 1", "Insert ExpressionStatement(3621) into Block(3634) at 0", "Insert ExpressionStatement(3631) into Block(3634) at 1", "Insert ReturnStatement(3633) into Block(3634) at 2", "Insert SimpleName: Integer(3640) into MethodInvocation(3643) at 0", "Insert SimpleName: toString(3641) into MethodInvocation(3643) at 1", "Insert NumberLiteral: 0(3642) into MethodInvocation(3643) at 2", "Insert SimpleType: HashMap(3382) into ParameterizedType: HashMap<String,Object>(3387) at 0", "Insert SimpleType: String(3384) into ParameterizedType: HashMap<String,Object>(3387) at 1", "Insert SimpleType: Object(3386) into ParameterizedType: HashMap<String,Object>(3387) at 2", "Insert SimpleName: Path(3408) into SimpleType: Path(3409) at 0", "Insert SimpleName: Path(3425) into SimpleType: Path(3426) at 0", "Insert SimpleName: topN(3473) into Assignment: =(3481) at 0", "Insert MethodInvocation(3480) into Assignment: =(3481) at 1", "Insert SimpleName: numFetchers(3489) into Assignment: =(3497) at 0", "Insert MethodInvocation(3496) into Assignment: =(3497) at 1", "Insert SimpleName: numDays(3506) into VariableDeclarationFragment(3514) at 0", "Insert MethodInvocation(3513) into VariableDeclarationFragment(3514) at 1", "Insert SimpleName: curTime(3516) into Assignment: +=(3523) at 0", "Insert InfixExpression: *(3522) into Assignment: +=(3523) at 1", "Insert SimpleName: filter(3531) into Assignment: =(3533) at 0", "Insert BooleanLiteral: false(3532) into Assignment: =(3533) at 1", "Insert SimpleName: norm(3541) into Assignment: =(3543) at 0", "Insert BooleanLiteral: false(3542) into Assignment: =(3543) at 1", "Insert SimpleName: force(3551) into Assignment: =(3553) at 0", "Insert BooleanLiteral: true(3552) into Assignment: =(3553) at 1", "Insert SimpleName: maxNumSegments(3561) into Assignment: =(3569) at 0", "Insert MethodInvocation(3568) into Assignment: =(3569) at 1", "Insert SimpleType: Path(3574) into ArrayType: Path[](3576) at 0", "Insert Dimension(3575) into ArrayType: Path[](3576) at 1", "Insert SimpleName: segs(3577) into VariableDeclarationFragment(3589) at 0", "Insert MethodInvocation(3588) into VariableDeclarationFragment(3589) at 1", "Insert SimpleName: segs(3591) into InfixExpression: ==(3593) at 0", "Insert NullLiteral(3592) into InfixExpression: ==(3593) at 1", "Insert ExpressionStatement(3602) into Block(3605) at 0", "Insert ReturnStatement(3604) into Block(3605) at 1", "Insert SimpleName: Exception(3608) into SimpleType: Exception(3609) at 0", "Insert MethodInvocation(3620) into ExpressionStatement(3621) at 0", "Insert MethodInvocation(3630) into ExpressionStatement(3631) at 0", "Insert SimpleName: results(3632) into ReturnStatement(3633) at 0", "Insert SimpleName: HashMap(3381) into SimpleType: HashMap(3382) at 0", "Insert SimpleName: String(3383) into SimpleType: String(3384) at 0", "Insert SimpleName: Object(3385) into SimpleType: Object(3386) at 0", "Insert SimpleName: Long(3474) into MethodInvocation(3480) at 0", "Insert SimpleName: parseLong(3475) into MethodInvocation(3480) at 1", "Insert MethodInvocation(3479) into MethodInvocation(3480) at 2", "Insert SimpleName: Integer(3490) into MethodInvocation(3496) at 0", "Insert SimpleName: parseInt(3491) into MethodInvocation(3496) at 1", "Insert MethodInvocation(3495) into MethodInvocation(3496) at 2", "Insert SimpleName: Integer(3507) into MethodInvocation(3513) at 0", "Insert SimpleName: parseInt(3508) into MethodInvocation(3513) at 1", "Insert MethodInvocation(3512) into MethodInvocation(3513) at 2", "Insert SimpleName: numDays(3517) into InfixExpression: *(3522) at 0", "Insert NumberLiteral: 1000L(3518) into InfixExpression: *(3522) at 1", "Insert NumberLiteral: 60(3519) into InfixExpression: *(3522) at 2", "Insert NumberLiteral: 60(3520) into InfixExpression: *(3522) at 3", "Insert NumberLiteral: 24(3521) into InfixExpression: *(3522) at 4", "Insert SimpleName: Integer(3562) into MethodInvocation(3568) at 0", "Insert SimpleName: parseInt(3563) into MethodInvocation(3568) at 1", "Insert MethodInvocation(3567) into MethodInvocation(3568) at 2", "Insert SimpleName: Path(3573) into SimpleType: Path(3574) at 0", "Insert SimpleName: generate(3578) into MethodInvocation(3588) at 0", "Insert SimpleName: dbDir(3579) into MethodInvocation(3588) at 1", "Insert SimpleName: segmentsDir(3580) into MethodInvocation(3588) at 2", "Insert SimpleName: numFetchers(3581) into MethodInvocation(3588) at 3", "Insert SimpleName: topN(3582) into MethodInvocation(3588) at 4", "Insert SimpleName: curTime(3583) into MethodInvocation(3588) at 5", "Insert SimpleName: filter(3584) into MethodInvocation(3588) at 6", "Insert SimpleName: norm(3585) into MethodInvocation(3588) at 7", "Insert SimpleName: force(3586) into MethodInvocation(3588) at 8", "Insert SimpleName: maxNumSegments(3587) into MethodInvocation(3588) at 9", "Insert MethodInvocation(3601) into ExpressionStatement(3602) at 0", "Insert SimpleName: results(3603) into ReturnStatement(3604) at 0", "Insert SimpleName: LOG(3612) into MethodInvocation(3620) at 0", "Insert SimpleName: error(3613) into MethodInvocation(3620) at 1", "Insert InfixExpression: +(3619) into MethodInvocation(3620) at 2", "Insert SimpleName: results(3622) into MethodInvocation(3630) at 0", "Insert SimpleName: put(3623) into MethodInvocation(3630) at 1", "Insert SimpleName: RESULT(3624) into MethodInvocation(3630) at 2", "Insert MethodInvocation(3629) into MethodInvocation(3630) at 3", "Insert SimpleName: args(3476) into MethodInvocation(3479) at 0", "Insert SimpleName: get(3477) into MethodInvocation(3479) at 1", "Insert StringLiteral: \"topN\"(3478) into MethodInvocation(3479) at 2", "Insert SimpleName: args(3492) into MethodInvocation(3495) at 0", "Insert SimpleName: get(3493) into MethodInvocation(3495) at 1", "Insert StringLiteral: \"numFetchers\"(3494) into MethodInvocation(3495) at 2", "Insert SimpleName: args(3509) into MethodInvocation(3512) at 0", "Insert SimpleName: get(3510) into MethodInvocation(3512) at 1", "Insert StringLiteral: \"adddays\"(3511) into MethodInvocation(3512) at 2", "Insert SimpleName: args(3564) into MethodInvocation(3567) at 0", "Insert SimpleName: get(3565) into MethodInvocation(3567) at 1", "Insert StringLiteral: \"maxNumSegments\"(3566) into MethodInvocation(3567) at 2", "Insert SimpleName: results(3594) into MethodInvocation(3601) at 0", "Insert SimpleName: put(3595) into MethodInvocation(3601) at 1", "Insert SimpleName: RESULT(3596) into MethodInvocation(3601) at 2", "Insert MethodInvocation(3600) into MethodInvocation(3601) at 3", "Insert StringLiteral: \"Generator: \"(3614) into InfixExpression: +(3619) at 0", "Insert MethodInvocation(3618) into InfixExpression: +(3619) at 1", "Insert SimpleName: Integer(3625) into MethodInvocation(3629) at 0", "Insert SimpleName: toString(3626) into MethodInvocation(3629) at 1", "Insert PrefixExpression: -(3628) into MethodInvocation(3629) at 2", "Insert SimpleName: Integer(3597) into MethodInvocation(3600) at 0", "Insert SimpleName: toString(3598) into MethodInvocation(3600) at 1", "Insert NumberLiteral: 1(3599) into MethodInvocation(3600) at 2", "Insert SimpleName: StringUtils(3615) into MethodInvocation(3618) at 0", "Insert SimpleName: stringifyException(3616) into MethodInvocation(3618) at 1", "Insert SimpleName: e(3617) into MethodInvocation(3618) at 2", "Insert NumberLiteral: 1(3627) into PrefixExpression: -(3628) at 0"]}}, {"Injector_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "UPDATE from Configured to NutchTool", "operations": ["UPD SimpleType: Configured from Configured to NutchTool", "UPD SimpleName: Configured from Configured to NutchTool"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS NumberLiteral: 1 to InfixExpression: < at 1", "INS ExpressionStatement to Block at 6", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS SimpleName: crawldb to ClassInstanceCreation at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: url_dir to ClassInstanceCreation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"Required arguments <url_dir>\" to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 7", "INS Block to IfStatement at 1", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ReturnStatement to Block at 7", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: url_dir to VariableDeclarationFragment at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: results to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: size to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to MethodInvocation at 1", "INS StringLiteral: \"url_dir\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS InfixExpression: < to IfStatement at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleType: Exception to MethodDeclaration at 6", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: inject to MethodInvocation at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS StringLiteral: \"/crawldb\" to InfixExpression: + at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: crawldb to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS IfStatement to Block at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: run to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS MethodInvocation to InfixExpression: < at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 5", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: Object to SimpleType: Object at 0"]}]}}, {"Injector_diff": {"operations": ["Insert ImportDeclaration(49) into CompilationUnit(1640) at 17", "Insert QualifiedName: org.apache.nutch.util.NutchTool(48) into ImportDeclaration(49) at 0", "Update SimpleType: Configured(67) to NutchTool", "Insert MethodDeclaration(1638) into TypeDeclaration: class(1639) at 16", "Update SimpleName: Configured(66) to NutchTool", "Insert MarkerAnnotation(1537) into MethodDeclaration(1638) at 0", "Insert Modifier: public(1538) into MethodDeclaration(1638) at 1", "Insert ParameterizedType: Map<String,Object>(1545) into MethodDeclaration(1638) at 2", "Insert SimpleName: run(1546) into MethodDeclaration(1638) at 3", "Insert SingleVariableDeclaration(1555) into MethodDeclaration(1638) at 4", "Insert SingleVariableDeclaration(1559) into MethodDeclaration(1638) at 5", "Insert SimpleType: Exception(1561) into MethodDeclaration(1638) at 6", "Insert Block(1637) into MethodDeclaration(1638) at 7", "Insert SimpleName: Override(1536) into MarkerAnnotation(1537) at 0", "Insert SimpleType: Map(1540) into ParameterizedType: Map<String,Object>(1545) at 0", "Insert SimpleType: String(1542) into ParameterizedType: Map<String,Object>(1545) at 1", "Insert SimpleType: Object(1544) into ParameterizedType: Map<String,Object>(1545) at 2", "Insert ParameterizedType: Map<String,String>(1553) into SingleVariableDeclaration(1555) at 0", "Insert SimpleName: args(1554) into SingleVariableDeclaration(1555) at 1", "Insert SimpleType: String(1557) into SingleVariableDeclaration(1559) at 0", "Insert SimpleName: crawlId(1558) into SingleVariableDeclaration(1559) at 1", "Insert SimpleName: Exception(1560) into SimpleType: Exception(1561) at 0", "Insert IfStatement(1573) into Block(1637) at 0", "Insert VariableDeclarationStatement(1591) into Block(1637) at 1", "Insert VariableDeclarationStatement(1597) into Block(1637) at 2", "Insert VariableDeclarationStatement(1605) into Block(1637) at 3", "Insert VariableDeclarationStatement(1614) into Block(1637) at 4", "Insert ExpressionStatement(1625) into Block(1637) at 5", "Insert ExpressionStatement(1634) into Block(1637) at 6", "Insert ReturnStatement(1636) into Block(1637) at 7", "Insert SimpleName: Map(1539) into SimpleType: Map(1540) at 0", "Insert SimpleName: String(1541) into SimpleType: String(1542) at 0", "Insert SimpleName: Object(1543) into SimpleType: Object(1544) at 0", "Insert SimpleType: Map(1548) into ParameterizedType: Map<String,String>(1553) at 0", "Insert SimpleType: String(1550) into ParameterizedType: Map<String,String>(1553) at 1", "Insert SimpleType: String(1552) into ParameterizedType: Map<String,String>(1553) at 2", "Insert SimpleName: String(1556) into SimpleType: String(1557) at 0", "Insert InfixExpression: <(1566) into IfStatement(1573) at 0", "Insert Block(1572) into IfStatement(1573) at 1", "Insert ParameterizedType: Map<String,Object>(1580) into VariableDeclarationStatement(1591) at 0", "Insert VariableDeclarationFragment(1590) into VariableDeclarationStatement(1591) at 1", "Insert SimpleType: String(1593) into VariableDeclarationStatement(1597) at 0", "Insert VariableDeclarationFragment(1596) into VariableDeclarationStatement(1597) at 1", "Insert SimpleType: String(1599) into VariableDeclarationStatement(1605) at 0", "Insert VariableDeclarationFragment(1604) into VariableDeclarationStatement(1605) at 1", "Insert SimpleType: String(1607) into VariableDeclarationStatement(1614) at 0", "Insert VariableDeclarationFragment(1613) into VariableDeclarationStatement(1614) at 1", "Insert MethodInvocation(1624) into ExpressionStatement(1625) at 0", "Insert MethodInvocation(1633) into ExpressionStatement(1634) at 0", "Insert SimpleName: results(1635) into ReturnStatement(1636) at 0", "Insert SimpleName: Map(1547) into SimpleType: Map(1548) at 0", "Insert SimpleName: String(1549) into SimpleType: String(1550) at 0", "Insert SimpleName: String(1551) into SimpleType: String(1552) at 0", "Insert MethodInvocation(1564) into InfixExpression: <(1566) at 0", "Insert NumberLiteral: 1(1565) into InfixExpression: <(1566) at 1", "Insert ThrowStatement(1571) into Block(1572) at 0", "Insert SimpleType: Map(1575) into ParameterizedType: Map<String,Object>(1580) at 0", "Insert SimpleType: String(1577) into ParameterizedType: Map<String,Object>(1580) at 1", "Insert SimpleType: Object(1579) into ParameterizedType: Map<String,Object>(1580) at 2", "Insert SimpleName: results(1581) into VariableDeclarationFragment(1590) at 0", "Insert ClassInstanceCreation(1589) into VariableDeclarationFragment(1590) at 1", "Insert SimpleName: String(1592) into SimpleType: String(1593) at 0", "Insert SimpleName: RESULT(1594) into VariableDeclarationFragment(1596) at 0", "Insert StringLiteral: \"result\"(1595) into VariableDeclarationFragment(1596) at 1", "Insert SimpleName: String(1598) into SimpleType: String(1599) at 0", "Insert SimpleName: crawldb(1600) into VariableDeclarationFragment(1604) at 0", "Insert InfixExpression: +(1603) into VariableDeclarationFragment(1604) at 1", "Insert SimpleName: String(1606) into SimpleType: String(1607) at 0", "Insert SimpleName: url_dir(1608) into VariableDeclarationFragment(1613) at 0", "Insert MethodInvocation(1612) into VariableDeclarationFragment(1613) at 1", "Insert SimpleName: inject(1615) into MethodInvocation(1624) at 0", "Insert ClassInstanceCreation(1619) into MethodInvocation(1624) at 1", "Insert ClassInstanceCreation(1623) into MethodInvocation(1624) at 2", "Insert SimpleName: results(1626) into MethodInvocation(1633) at 0", "Insert SimpleName: put(1627) into MethodInvocation(1633) at 1", "Insert SimpleName: RESULT(1628) into MethodInvocation(1633) at 2", "Insert MethodInvocation(1632) into MethodInvocation(1633) at 3", "Insert SimpleName: args(1562) into MethodInvocation(1564) at 0", "Insert SimpleName: size(1563) into MethodInvocation(1564) at 1", "Insert ClassInstanceCreation(1570) into ThrowStatement(1571) at 0", "Insert SimpleName: Map(1574) into SimpleType: Map(1575) at 0", "Insert SimpleName: String(1576) into SimpleType: String(1577) at 0", "Insert SimpleName: Object(1578) into SimpleType: Object(1579) at 0", "Insert ParameterizedType: HashMap<String,Object>(1588) into ClassInstanceCreation(1589) at 0", "Insert SimpleName: crawlId(1601) into InfixExpression: +(1603) at 0", "Insert StringLiteral: \"/crawldb\"(1602) into InfixExpression: +(1603) at 1", "Insert SimpleName: args(1609) into MethodInvocation(1612) at 0", "Insert SimpleName: get(1610) into MethodInvocation(1612) at 1", "Insert StringLiteral: \"url_dir\"(1611) into MethodInvocation(1612) at 2", "Insert SimpleType: Path(1617) into ClassInstanceCreation(1619) at 0", "Insert SimpleName: crawldb(1618) into ClassInstanceCreation(1619) at 1", "Insert SimpleType: Path(1621) into ClassInstanceCreation(1623) at 0", "Insert SimpleName: url_dir(1622) into ClassInstanceCreation(1623) at 1", "Insert SimpleName: Integer(1629) into MethodInvocation(1632) at 0", "Insert SimpleName: toString(1630) into MethodInvocation(1632) at 1", "Insert NumberLiteral: 0(1631) into MethodInvocation(1632) at 2", "Insert SimpleType: IllegalArgumentException(1568) into ClassInstanceCreation(1570) at 0", "Insert StringLiteral: \"Required arguments <url_dir>\"(1569) into ClassInstanceCreation(1570) at 1", "Insert SimpleType: HashMap(1583) into ParameterizedType: HashMap<String,Object>(1588) at 0", "Insert SimpleType: String(1585) into ParameterizedType: HashMap<String,Object>(1588) at 1", "Insert SimpleType: Object(1587) into ParameterizedType: HashMap<String,Object>(1588) at 2", "Insert SimpleName: Path(1616) into SimpleType: Path(1617) at 0", "Insert SimpleName: Path(1620) into SimpleType: Path(1621) at 0", "Insert SimpleName: IllegalArgumentException(1567) into SimpleType: IllegalArgumentException(1568) at 0", "Insert SimpleName: HashMap(1582) into SimpleType: HashMap(1583) at 0", "Insert SimpleName: String(1584) into SimpleType: String(1585) at 0", "Insert SimpleName: Object(1586) into SimpleType: Object(1587) at 0"]}}, {"LinkDb_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.nutch.util.NutchTool to ImportDeclaration at 0"]}, {"root": "INS SimpleType: NutchTool to TypeDeclaration: class at 3", "operations": ["INS SimpleType: NutchTool to TypeDeclaration: class at 3", "INS SimpleName: NutchTool to SimpleType: NutchTool at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 14", "INS SimpleName: size to MethodInvocation at 1", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: segs to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<Path> at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: segs to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: db to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ArrayCreation at 1", "INS ArrayCreation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS VariableDeclarationStatement to Block at 12", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Block to CatchClause at 1", "INS SimpleName: filter to MethodInvocation at 4", "INS SimpleName: File to SimpleType: File at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Exception to MethodDeclaration at 6", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS SimpleName: force to Assignment: = at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Path to ParameterizedType: ArrayList<Path> at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: segs to MethodInvocation at 0", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SimpleName: containsKey to MethodInvocation at 1", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS CatchClause to TryStatement at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: File to ParameterizedType: Comparator<File> at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS ExpressionStatement to Block at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 13", "INS PrefixExpression: - to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ArrayType: Path[] to ArrayCreation at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: normalize to Assignment: = at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ReturnStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 3", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS StringLiteral: \"noNormalize\" to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: force to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: File to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"/segments\" to InfixExpression: + at 1", "INS SimpleName: segmentsDir to VariableDeclarationFragment at 0", "INS SimpleName: getPath to MethodInvocation at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: File to SimpleType: File at 0", "INS TryStatement to Block at 16", "INS VariableDeclarationStatement to Block at 5", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS IfStatement to Block at 8", "INS IfStatement to Block at 0", "INS SimpleName: f2 to SingleVariableDeclaration at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<File> at 0", "INS SimpleName: force to MethodInvocation at 5", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: normalize to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: f1 to MethodInvocation at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: toArray to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: args to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: lastModified to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS ReturnStatement to IfStatement at 2", "INS SimpleName: compare to MethodDeclaration at 3", "INS PrefixExpression: - to ReturnStatement at 0", "INS SimpleType: Path to ArrayType: Path[] at 0", "INS SimpleName: f2 to MethodInvocation at 0", "INS SimpleName: segment_dir to ClassInstanceCreation at 1", "INS ParameterizedType: ArrayList<Path> to ClassInstanceCreation at 0", "INS SimpleName: filter to VariableDeclarationFragment at 0", "INS ArrayType: File[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ParameterizedType: ArrayList<Path> to VariableDeclarationStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: segmentsList to MethodInvocation at 2", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS IfStatement to Block at 9", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ParameterizedType: Comparator<File> to ClassInstanceCreation at 0", "INS StringLiteral: \"noFilter\" to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ReturnStatement to IfStatement at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleName: linkdb to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: Path to SimpleType: Path at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"LinkDb: \" to InfixExpression: + at 0", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationStatement to Block at 11", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<Path> at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: results to MethodInvocation at 0", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: > at 1", "INS ExpressionStatement to Block at 15", "INS SimpleType: File to ArrayType: File[] at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: Path to SimpleType: Path at 0", "INS StringLiteral: \"/linkdb\" to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 6", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: filter to Assignment: = at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: e to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: f1 to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: segmentsList to ArrayAccess at 0", "INS SimpleName: lastModified to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleName: normalize to VariableDeclarationFragment at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: Path to ParameterizedType: ArrayList<Path> at 1", "INS SimpleName: segmentsDir to MethodInvocation at 0", "INS Block to MethodDeclaration at 7", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS IfStatement to Block at 10", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS StringLiteral: \"force\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: > at 0", "INS Block to IfStatement at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: segment_dir to VariableDeclarationFragment at 0", "INS SimpleName: listFiles to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: linkdb to ClassInstanceCreation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: results to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: File[] at 1", "INS Dimension to ArrayType: Path[] at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: segmentsList to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: db to MethodInvocation at 1", "INS SimpleName: sort to MethodInvocation at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: segs to MethodInvocation at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: invert to MethodInvocation at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1"]}, {"root": "UPDATE from Configured to Comparator", "operations": ["UPD SimpleName: Configured from Configured to Comparator"]}, {"root": "MOVE from SimpleType: Comparator", "operations": ["MOV SimpleName: Configured to SimpleType: Comparator at 0"]}, {"root": "DEL SimpleType: Configured", "operations": ["DEL SimpleType: Configured"]}]}}, {"LinkDb_diff": {"operations": ["Insert ImportDeclaration(55) into CompilationUnit(1829) at 20", "Insert QualifiedName: org.apache.nutch.util.NutchTool(54) into ImportDeclaration(55) at 0", "Insert SimpleType: NutchTool(64) into TypeDeclaration: class(1828) at 3", "Insert MethodDeclaration(1827) into TypeDeclaration: class(1828) at 28", "Insert SimpleName: NutchTool(63) into SimpleType: NutchTool(64) at 0", "Insert MarkerAnnotation(1563) into MethodDeclaration(1827) at 0", "Insert Modifier: public(1564) into MethodDeclaration(1827) at 1", "Insert ParameterizedType: Map<String,Object>(1571) into MethodDeclaration(1827) at 2", "Insert SimpleName: run(1572) into MethodDeclaration(1827) at 3", "Insert SingleVariableDeclaration(1581) into MethodDeclaration(1827) at 4", "Insert SingleVariableDeclaration(1585) into MethodDeclaration(1827) at 5", "Insert SimpleType: Exception(1587) into MethodDeclaration(1827) at 6", "Insert Block(1826) into MethodDeclaration(1827) at 7", "Insert SimpleName: Override(1562) into MarkerAnnotation(1563) at 0", "Insert SimpleType: Map(1566) into ParameterizedType: Map<String,Object>(1571) at 0", "Insert SimpleType: String(1568) into ParameterizedType: Map<String,Object>(1571) at 1", "Insert SimpleType: Object(1570) into ParameterizedType: Map<String,Object>(1571) at 2", "Insert ParameterizedType: Map<String,String>(1579) into SingleVariableDeclaration(1581) at 0", "Insert SimpleName: args(1580) into SingleVariableDeclaration(1581) at 1", "Insert SimpleType: String(1583) into SingleVariableDeclaration(1585) at 0", "Insert SimpleName: crawlId(1584) into SingleVariableDeclaration(1585) at 1", "Insert SimpleName: Exception(1586) into SimpleType: Exception(1587) at 0", "Insert VariableDeclarationStatement(1605) into Block(1826) at 0", "Insert VariableDeclarationStatement(1611) into Block(1826) at 1", "Insert VariableDeclarationStatement(1619) into Block(1826) at 2", "Insert VariableDeclarationStatement(1628) into Block(1826) at 3", "Insert VariableDeclarationStatement(1642) into Block(1826) at 4", "Insert VariableDeclarationStatement(1647) into Block(1826) at 5", "Insert VariableDeclarationStatement(1652) into Block(1826) at 6", "Insert VariableDeclarationStatement(1657) into Block(1826) at 7", "Insert IfStatement(1667) into Block(1826) at 8", "Insert IfStatement(1677) into Block(1826) at 9", "Insert IfStatement(1687) into Block(1826) at 10", "Insert VariableDeclarationStatement(1695) into Block(1826) at 11", "Insert VariableDeclarationStatement(1704) into Block(1826) at 12", "Insert VariableDeclarationStatement(1714) into Block(1826) at 13", "Insert ExpressionStatement(1754) into Block(1826) at 14", "Insert ExpressionStatement(1766) into Block(1826) at 15", "Insert TryStatement(1825) into Block(1826) at 16", "Insert SimpleName: Map(1565) into SimpleType: Map(1566) at 0", "Insert SimpleName: String(1567) into SimpleType: String(1568) at 0", "Insert SimpleName: Object(1569) into SimpleType: Object(1570) at 0", "Insert SimpleType: Map(1574) into ParameterizedType: Map<String,String>(1579) at 0", "Insert SimpleType: String(1576) into ParameterizedType: Map<String,String>(1579) at 1", "Insert SimpleType: String(1578) into ParameterizedType: Map<String,String>(1579) at 2", "Insert SimpleName: String(1582) into SimpleType: String(1583) at 0", "Insert ParameterizedType: Map<String,Object>(1594) into VariableDeclarationStatement(1605) at 0", "Insert VariableDeclarationFragment(1604) into VariableDeclarationStatement(1605) at 1", "Insert SimpleType: String(1607) into VariableDeclarationStatement(1611) at 0", "Insert VariableDeclarationFragment(1610) into VariableDeclarationStatement(1611) at 1", "Insert SimpleType: String(1613) into VariableDeclarationStatement(1619) at 0", "Insert VariableDeclarationFragment(1618) into VariableDeclarationStatement(1619) at 1", "Insert SimpleType: Path(1621) into VariableDeclarationStatement(1628) at 0", "Insert VariableDeclarationFragment(1627) into VariableDeclarationStatement(1628) at 1", "Insert ParameterizedType: ArrayList<Path>(1633) into VariableDeclarationStatement(1642) at 0", "Insert VariableDeclarationFragment(1641) into VariableDeclarationStatement(1642) at 1", "Insert PrimitiveType: boolean(1643) into VariableDeclarationStatement(1647) at 0", "Insert VariableDeclarationFragment(1646) into VariableDeclarationStatement(1647) at 1", "Insert PrimitiveType: boolean(1648) into VariableDeclarationStatement(1652) at 0", "Insert VariableDeclarationFragment(1651) into VariableDeclarationStatement(1652) at 1", "Insert PrimitiveType: boolean(1653) into VariableDeclarationStatement(1657) at 0", "Insert VariableDeclarationFragment(1656) into VariableDeclarationStatement(1657) at 1", "Insert MethodInvocation(1661) into IfStatement(1667) at 0", "Insert Block(1666) into IfStatement(1667) at 1", "Insert MethodInvocation(1671) into IfStatement(1677) at 0", "Insert Block(1676) into IfStatement(1677) at 1", "Insert MethodInvocation(1681) into IfStatement(1687) at 0", "Insert Block(1686) into IfStatement(1687) at 1", "Insert SimpleType: String(1689) into VariableDeclarationStatement(1695) at 0", "Insert VariableDeclarationFragment(1694) into VariableDeclarationStatement(1695) at 1", "Insert SimpleType: File(1697) into VariableDeclarationStatement(1704) at 0", "Insert VariableDeclarationFragment(1703) into VariableDeclarationStatement(1704) at 1", "Insert ArrayType: File[](1708) into VariableDeclarationStatement(1714) at 0", "Insert VariableDeclarationFragment(1713) into VariableDeclarationStatement(1714) at 1", "Insert MethodInvocation(1753) into ExpressionStatement(1754) at 0", "Insert MethodInvocation(1765) into ExpressionStatement(1766) at 0", "Insert Block(1796) into TryStatement(1825) at 0", "Insert CatchClause(1824) into TryStatement(1825) at 1", "Insert SimpleName: Map(1573) into SimpleType: Map(1574) at 0", "Insert SimpleName: String(1575) into SimpleType: String(1576) at 0", "Insert SimpleName: String(1577) into SimpleType: String(1578) at 0", "Insert SimpleType: Map(1589) into ParameterizedType: Map<String,Object>(1594) at 0", "Insert SimpleType: String(1591) into ParameterizedType: Map<String,Object>(1594) at 1", "Insert SimpleType: Object(1593) into ParameterizedType: Map<String,Object>(1594) at 2", "Insert SimpleName: results(1595) into VariableDeclarationFragment(1604) at 0", "Insert ClassInstanceCreation(1603) into VariableDeclarationFragment(1604) at 1", "Insert SimpleName: String(1606) into SimpleType: String(1607) at 0", "Insert SimpleName: RESULT(1608) into VariableDeclarationFragment(1610) at 0", "Insert StringLiteral: \"result\"(1609) into VariableDeclarationFragment(1610) at 1", "Insert SimpleName: String(1612) into SimpleType: String(1613) at 0", "Insert SimpleName: linkdb(1614) into VariableDeclarationFragment(1618) at 0", "Insert InfixExpression: +(1617) into VariableDeclarationFragment(1618) at 1", "Insert SimpleName: Path(1620) into SimpleType: Path(1621) at 0", "Insert SimpleName: db(1622) into VariableDeclarationFragment(1627) at 0", "Insert ClassInstanceCreation(1626) into VariableDeclarationFragment(1627) at 1", "Insert SimpleType: ArrayList(1630) into ParameterizedType: ArrayList<Path>(1633) at 0", "Insert SimpleType: Path(1632) into ParameterizedType: ArrayList<Path>(1633) at 1", "Insert SimpleName: segs(1634) into VariableDeclarationFragment(1641) at 0", "Insert ClassInstanceCreation(1640) into VariableDeclarationFragment(1641) at 1", "Insert SimpleName: filter(1644) into VariableDeclarationFragment(1646) at 0", "Insert BooleanLiteral: true(1645) into VariableDeclarationFragment(1646) at 1", "Insert SimpleName: normalize(1649) into VariableDeclarationFragment(1651) at 0", "Insert BooleanLiteral: true(1650) into VariableDeclarationFragment(1651) at 1", "Insert SimpleName: force(1654) into VariableDeclarationFragment(1656) at 0", "Insert BooleanLiteral: false(1655) into VariableDeclarationFragment(1656) at 1", "Insert SimpleName: args(1658) into MethodInvocation(1661) at 0", "Insert SimpleName: containsKey(1659) into MethodInvocation(1661) at 1", "Insert StringLiteral: \"noNormalize\"(1660) into MethodInvocation(1661) at 2", "Insert ExpressionStatement(1665) into Block(1666) at 0", "Insert SimpleName: args(1668) into MethodInvocation(1671) at 0", "Insert SimpleName: containsKey(1669) into MethodInvocation(1671) at 1", "Insert StringLiteral: \"noFilter\"(1670) into MethodInvocation(1671) at 2", "Insert ExpressionStatement(1675) into Block(1676) at 0", "Insert SimpleName: args(1678) into MethodInvocation(1681) at 0", "Insert SimpleName: containsKey(1679) into MethodInvocation(1681) at 1", "Insert StringLiteral: \"force\"(1680) into MethodInvocation(1681) at 2", "Insert ExpressionStatement(1685) into Block(1686) at 0", "Insert SimpleName: String(1688) into SimpleType: String(1689) at 0", "Insert SimpleName: segment_dir(1690) into VariableDeclarationFragment(1694) at 0", "Insert InfixExpression: +(1693) into VariableDeclarationFragment(1694) at 1", "Insert SimpleName: File(1696) into SimpleType: File(1697) at 0", "Insert SimpleName: segmentsDir(1698) into VariableDeclarationFragment(1703) at 0", "Insert ClassInstanceCreation(1702) into VariableDeclarationFragment(1703) at 1", "Insert SimpleType: File(1706) into ArrayType: File[](1708) at 0", "Insert Dimension(1707) into ArrayType: File[](1708) at 1", "Insert SimpleName: segmentsList(1709) into VariableDeclarationFragment(1713) at 0", "Insert MethodInvocation(1712) into VariableDeclarationFragment(1713) at 1", "Insert SimpleName: Arrays(1715) into MethodInvocation(1753) at 0", "Insert SimpleName: sort(1716) into MethodInvocation(1753) at 1", "Insert SimpleName: segmentsList(1717) into MethodInvocation(1753) at 2", "Insert ClassInstanceCreation(1752) into MethodInvocation(1753) at 3", "Insert SimpleName: segs(1755) into MethodInvocation(1765) at 0", "Insert SimpleName: add(1756) into MethodInvocation(1765) at 1", "Insert ClassInstanceCreation(1764) into MethodInvocation(1765) at 2", "Insert ExpressionStatement(1784) into Block(1796) at 0", "Insert ExpressionStatement(1793) into Block(1796) at 1", "Insert ReturnStatement(1795) into Block(1796) at 2", "Insert SingleVariableDeclaration(1800) into CatchClause(1824) at 0", "Insert Block(1823) into CatchClause(1824) at 1", "Insert SimpleName: Map(1588) into SimpleType: Map(1589) at 0", "Insert SimpleName: String(1590) into SimpleType: String(1591) at 0", "Insert SimpleName: Object(1592) into SimpleType: Object(1593) at 0", "Insert ParameterizedType: HashMap<String,Object>(1602) into ClassInstanceCreation(1603) at 0", "Insert SimpleName: crawlId(1615) into InfixExpression: +(1617) at 0", "Insert StringLiteral: \"/linkdb\"(1616) into InfixExpression: +(1617) at 1", "Insert SimpleType: Path(1624) into ClassInstanceCreation(1626) at 0", "Insert SimpleName: linkdb(1625) into ClassInstanceCreation(1626) at 1", "Insert SimpleName: ArrayList(1629) into SimpleType: ArrayList(1630) at 0", "Insert SimpleName: Path(1631) into SimpleType: Path(1632) at 0", "Insert ParameterizedType: ArrayList<Path>(1639) into ClassInstanceCreation(1640) at 0", "Insert Assignment: =(1664) into ExpressionStatement(1665) at 0", "Insert Assignment: =(1674) into ExpressionStatement(1675) at 0", "Insert Assignment: =(1684) into ExpressionStatement(1685) at 0", "Insert SimpleName: crawlId(1691) into InfixExpression: +(1693) at 0", "Insert StringLiteral: \"/segments\"(1692) into InfixExpression: +(1693) at 1", "Insert SimpleType: File(1700) into ClassInstanceCreation(1702) at 0", "Insert SimpleName: segment_dir(1701) into ClassInstanceCreation(1702) at 1", "Insert SimpleName: File(1705) into SimpleType: File(1706) at 0", "Insert SimpleName: segmentsDir(1710) into MethodInvocation(1712) at 0", "Insert SimpleName: listFiles(1711) into MethodInvocation(1712) at 1", "Insert ParameterizedType: Comparator<File>(1722) into ClassInstanceCreation(1752) at 0", "Insert AnonymousClassDeclaration(1751) into ClassInstanceCreation(1752) at 1", "Insert SimpleType: Path(1758) into ClassInstanceCreation(1764) at 0", "Insert MethodInvocation(1763) into ClassInstanceCreation(1764) at 1", "Insert MethodInvocation(1783) into ExpressionStatement(1784) at 0", "Insert MethodInvocation(1792) into ExpressionStatement(1793) at 0", "Insert SimpleName: results(1794) into ReturnStatement(1795) at 0", "Insert SimpleType: Exception(1798) into SingleVariableDeclaration(1800) at 0", "Insert SimpleName: e(1799) into SingleVariableDeclaration(1800) at 1", "Insert ExpressionStatement(1810) into Block(1823) at 0", "Insert ExpressionStatement(1820) into Block(1823) at 1", "Insert ReturnStatement(1822) into Block(1823) at 2", "Insert SimpleType: HashMap(1597) into ParameterizedType: HashMap<String,Object>(1602) at 0", "Insert SimpleType: String(1599) into ParameterizedType: HashMap<String,Object>(1602) at 1", "Insert SimpleType: Object(1601) into ParameterizedType: HashMap<String,Object>(1602) at 2", "Insert SimpleName: Path(1623) into SimpleType: Path(1624) at 0", "Insert SimpleType: ArrayList(1636) into ParameterizedType: ArrayList<Path>(1639) at 0", "Insert SimpleType: Path(1638) into ParameterizedType: ArrayList<Path>(1639) at 1", "Insert SimpleName: normalize(1662) into Assignment: =(1664) at 0", "Insert BooleanLiteral: false(1663) into Assignment: =(1664) at 1", "Insert SimpleName: filter(1672) into Assignment: =(1674) at 0", "Insert BooleanLiteral: false(1673) into Assignment: =(1674) at 1", "Insert SimpleName: force(1682) into Assignment: =(1684) at 0", "Insert BooleanLiteral: true(1683) into Assignment: =(1684) at 1", "Insert SimpleName: File(1699) into SimpleType: File(1700) at 0", "Insert SimpleType: Comparator(1719) into ParameterizedType: Comparator<File>(1722) at 0", "Insert SimpleType: File(1721) into ParameterizedType: Comparator<File>(1722) at 1", "Insert MethodDeclaration(1750) into AnonymousClassDeclaration(1751) at 0", "Insert SimpleName: Path(1757) into SimpleType: Path(1758) at 0", "Insert ArrayAccess(1761) into MethodInvocation(1763) at 0", "Insert SimpleName: getPath(1762) into MethodInvocation(1763) at 1", "Insert SimpleName: invert(1767) into MethodInvocation(1783) at 0", "Insert SimpleName: db(1768) into MethodInvocation(1783) at 1", "Insert MethodInvocation(1779) into MethodInvocation(1783) at 2", "Insert SimpleName: normalize(1780) into MethodInvocation(1783) at 3", "Insert SimpleName: filter(1781) into MethodInvocation(1783) at 4", "Insert SimpleName: force(1782) into MethodInvocation(1783) at 5", "Insert SimpleName: results(1785) into MethodInvocation(1792) at 0", "Insert SimpleName: put(1786) into MethodInvocation(1792) at 1", "Insert SimpleName: RESULT(1787) into MethodInvocation(1792) at 2", "Insert MethodInvocation(1791) into MethodInvocation(1792) at 3", "Insert SimpleName: Exception(1797) into SimpleType: Exception(1798) at 0", "Insert MethodInvocation(1809) into ExpressionStatement(1810) at 0", "Insert MethodInvocation(1819) into ExpressionStatement(1820) at 0", "Insert SimpleName: results(1821) into ReturnStatement(1822) at 0", "Insert SimpleName: HashMap(1596) into SimpleType: HashMap(1597) at 0", "Insert SimpleName: String(1598) into SimpleType: String(1599) at 0", "Insert SimpleName: Object(1600) into SimpleType: Object(1601) at 0", "Insert SimpleName: ArrayList(1635) into SimpleType: ArrayList(1636) at 0", "Insert SimpleName: Path(1637) into SimpleType: Path(1638) at 0", "Update SimpleName: Configured(61) to Comparator", "Move SimpleName: Configured(61) into SimpleType: Comparator(1719) at 0", "Insert SimpleName: File(1720) into SimpleType: File(1721) at 0", "Insert MarkerAnnotation(1724) into MethodDeclaration(1750) at 0", "Insert Modifier: public(1725) into MethodDeclaration(1750) at 1", "Insert PrimitiveType: int(1726) into MethodDeclaration(1750) at 2", "Insert SimpleName: compare(1727) into MethodDeclaration(1750) at 3", "Insert SingleVariableDeclaration(1731) into MethodDeclaration(1750) at 4", "Insert SingleVariableDeclaration(1735) into MethodDeclaration(1750) at 5", "Insert Block(1749) into MethodDeclaration(1750) at 6", "Insert SimpleName: segmentsList(1759) into ArrayAccess(1761) at 0", "Insert NumberLiteral: 0(1760) into ArrayAccess(1761) at 1", "Insert SimpleName: segs(1769) into MethodInvocation(1779) at 0", "Insert SimpleName: toArray(1770) into MethodInvocation(1779) at 1", "Insert ArrayCreation(1778) into MethodInvocation(1779) at 2", "Insert SimpleName: Integer(1788) into MethodInvocation(1791) at 0", "Insert SimpleName: toString(1789) into MethodInvocation(1791) at 1", "Insert NumberLiteral: 0(1790) into MethodInvocation(1791) at 2", "Insert SimpleName: LOG(1801) into MethodInvocation(1809) at 0", "Insert SimpleName: error(1802) into MethodInvocation(1809) at 1", "Insert InfixExpression: +(1808) into MethodInvocation(1809) at 2", "Insert SimpleName: results(1811) into MethodInvocation(1819) at 0", "Insert SimpleName: put(1812) into MethodInvocation(1819) at 1", "Insert SimpleName: RESULT(1813) into MethodInvocation(1819) at 2", "Insert MethodInvocation(1818) into MethodInvocation(1819) at 3", "Insert SimpleName: Override(1723) into MarkerAnnotation(1724) at 0", "Insert SimpleType: File(1729) into SingleVariableDeclaration(1731) at 0", "Insert SimpleName: f1(1730) into SingleVariableDeclaration(1731) at 1", "Insert SimpleType: File(1733) into SingleVariableDeclaration(1735) at 0", "Insert SimpleName: f2(1734) into SingleVariableDeclaration(1735) at 1", "Insert IfStatement(1748) into Block(1749) at 0", "Insert ArrayType: Path[](1774) into ArrayCreation(1778) at 0", "Insert MethodInvocation(1777) into ArrayCreation(1778) at 1", "Insert StringLiteral: \"LinkDb: \"(1803) into InfixExpression: +(1808) at 0", "Insert MethodInvocation(1807) into InfixExpression: +(1808) at 1", "Insert SimpleName: Integer(1814) into MethodInvocation(1818) at 0", "Insert SimpleName: toString(1815) into MethodInvocation(1818) at 1", "Insert PrefixExpression: -(1817) into MethodInvocation(1818) at 2", "Insert SimpleName: File(1728) into SimpleType: File(1729) at 0", "Insert SimpleName: File(1732) into SimpleType: File(1733) at 0", "Insert InfixExpression: >(1742) into IfStatement(1748) at 0", "Insert ReturnStatement(1745) into IfStatement(1748) at 1", "Insert ReturnStatement(1747) into IfStatement(1748) at 2", "Insert SimpleType: Path(1772) into ArrayType: Path[](1774) at 0", "Insert Dimension(1773) into ArrayType: Path[](1774) at 1", "Insert SimpleName: segs(1775) into MethodInvocation(1777) at 0", "Insert SimpleName: size(1776) into MethodInvocation(1777) at 1", "Insert SimpleName: StringUtils(1804) into MethodInvocation(1807) at 0", "Insert SimpleName: stringifyException(1805) into MethodInvocation(1807) at 1", "Insert SimpleName: e(1806) into MethodInvocation(1807) at 2", "Insert NumberLiteral: 1(1816) into PrefixExpression: -(1817) at 0", "Insert MethodInvocation(1738) into InfixExpression: >(1742) at 0", "Insert MethodInvocation(1741) into InfixExpression: >(1742) at 1", "Insert PrefixExpression: -(1744) into ReturnStatement(1745) at 0", "Insert NumberLiteral: 0(1746) into ReturnStatement(1747) at 0", "Insert SimpleName: Path(1771) into SimpleType: Path(1772) at 0", "Insert SimpleName: f1(1736) into MethodInvocation(1738) at 0", "Insert SimpleName: lastModified(1737) into MethodInvocation(1738) at 1", "Insert SimpleName: f2(1739) into MethodInvocation(1741) at 0", "Insert SimpleName: lastModified(1740) into MethodInvocation(1741) at 1", "Insert NumberLiteral: 1(1743) into PrefixExpression: -(1744) at 0", "Delete SimpleType: Configured(62)"]}}, {"Fetcher_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.File to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS SimpleType: NutchTool to TypeDeclaration: class at 3", "operations": ["INS SimpleName: NutchTool to SimpleType: NutchTool at 0", "INS SimpleType: NutchTool to TypeDeclaration: class at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: sort to MethodInvocation at 1", "INS SimpleName: f2 to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: File to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS StringLiteral: \"fetcher.threads.fetch\" to MethodInvocation at 2", "INS SimpleName: stringifyException to MethodInvocation at 1", "INS SimpleName: compare to MethodDeclaration at 3", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 1", "INS ReturnStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: f1 to SingleVariableDeclaration at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: fetch to MethodInvocation at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: threads to MethodInvocation at 2", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 2", "INS SimpleName: threads to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: segmentsDir to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 7", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleType: Exception to MethodDeclaration at 6", "INS SimpleName: setInt to MethodInvocation at 1", "INS SimpleName: File to SimpleType: File at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: toString to MethodInvocation at 1", "INS ReturnStatement to IfStatement at 2", "INS ArrayAccess to MethodInvocation at 0", "INS PrefixExpression: - to ReturnStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: Map to SimpleType: Map at 0", "INS ExpressionStatement to Block at 10", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"fetcher.threads.fetch\" to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: threads to MethodInvocation at 3", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS ArrayType: File[] to VariableDeclarationStatement at 0", "INS SimpleName: lastModified to MethodInvocation at 1", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: segment to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: listFiles to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS SimpleName: segment_dir to ClassInstanceCreation at 1", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS Block to TryStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: segmentsList to ArrayAccess at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS CatchClause to TryStatement at 1", "INS TryStatement to Block at 11", "INS SimpleName: getPath to MethodInvocation at 1", "INS SimpleType: Comparator to ParameterizedType: Comparator<File> at 0", "INS SimpleName: File to SimpleType: File at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"threads\" to MethodInvocation at 2", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS StringLiteral: \"/segments\" to InfixExpression: + at 1", "INS SimpleName: results to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: > at 1", "INS Block to MethodDeclaration at 7", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS StringLiteral: \"threads\" to MethodInvocation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 6", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleType: File to ArrayType: File[] at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: RESULT to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS ReturnStatement to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: error to MethodInvocation at 1", "INS ParameterizedType: Comparator<File> to ClassInstanceCreation at 0", "INS SimpleName: f2 to MethodInvocation at 0", "INS SimpleName: threads to VariableDeclarationFragment at 0", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS StringLiteral: \"Fetcher: \" to InfixExpression: + at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleName: segment to VariableDeclarationFragment at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS IfStatement to Block at 9", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 10 to MethodInvocation at 3", "INS SimpleName: lastModified to MethodInvocation at 1", "INS SimpleType: File to ParameterizedType: Comparator<File> at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: segmentsList to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: parsing to VariableDeclarationFragment at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Dimension to ArrayType: File[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: segmentsDir to VariableDeclarationFragment at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: results to ReturnStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: f1 to MethodInvocation at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: run to MethodDeclaration at 3", "INS SimpleName: segment_dir to VariableDeclarationFragment at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleName: segmentsList to MethodInvocation at 2", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to MethodInvocation at 2", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Block to CatchClause at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS PrefixExpression: - to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from Configured to Comparator", "operations": ["UPD SimpleName: Configured from Configured to Comparator"]}, {"root": "MOVE from SimpleType: Comparator", "operations": ["MOV SimpleName: Configured to SimpleType: Comparator at 0"]}, {"root": "DEL SimpleType: Configured", "operations": ["DEL SimpleType: Configured"]}]}}, {"Fetcher_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(6565) at 1", "Insert QualifiedName: java.io.File(2) into ImportDeclaration(3) at 0", "Insert SimpleType: NutchTool(102) into TypeDeclaration: class(6564) at 3", "Insert MethodDeclaration(6563) into TypeDeclaration: class(6564) at 44", "Insert SimpleName: NutchTool(101) into SimpleType: NutchTool(102) at 0", "Insert MarkerAnnotation(6349) into MethodDeclaration(6563) at 0", "Insert Modifier: public(6350) into MethodDeclaration(6563) at 1", "Insert ParameterizedType: Map<String,Object>(6357) into MethodDeclaration(6563) at 2", "Insert SimpleName: run(6358) into MethodDeclaration(6563) at 3", "Insert SingleVariableDeclaration(6367) into MethodDeclaration(6563) at 4", "Insert SingleVariableDeclaration(6371) into MethodDeclaration(6563) at 5", "Insert SimpleType: Exception(6373) into MethodDeclaration(6563) at 6", "Insert Block(6562) into MethodDeclaration(6563) at 7", "Insert SimpleName: Override(6348) into MarkerAnnotation(6349) at 0", "Insert SimpleType: Map(6352) into ParameterizedType: Map<String,Object>(6357) at 0", "Insert SimpleType: String(6354) into ParameterizedType: Map<String,Object>(6357) at 1", "Insert SimpleType: Object(6356) into ParameterizedType: Map<String,Object>(6357) at 2", "Insert ParameterizedType: Map<String,String>(6365) into SingleVariableDeclaration(6367) at 0", "Insert SimpleName: args(6366) into SingleVariableDeclaration(6367) at 1", "Insert SimpleType: String(6369) into SingleVariableDeclaration(6371) at 0", "Insert SimpleName: crawlId(6370) into SingleVariableDeclaration(6371) at 1", "Insert SimpleName: Exception(6372) into SimpleType: Exception(6373) at 0", "Insert VariableDeclarationStatement(6391) into Block(6562) at 0", "Insert VariableDeclarationStatement(6397) into Block(6562) at 1", "Insert VariableDeclarationStatement(6405) into Block(6562) at 2", "Insert VariableDeclarationStatement(6414) into Block(6562) at 3", "Insert VariableDeclarationStatement(6424) into Block(6562) at 4", "Insert ExpressionStatement(6464) into Block(6562) at 5", "Insert VariableDeclarationStatement(6477) into Block(6562) at 6", "Insert VariableDeclarationStatement(6487) into Block(6562) at 7", "Insert VariableDeclarationStatement(6492) into Block(6562) at 8", "Insert IfStatement(6508) into Block(6562) at 9", "Insert ExpressionStatement(6515) into Block(6562) at 10", "Insert TryStatement(6561) into Block(6562) at 11", "Insert SimpleName: Map(6351) into SimpleType: Map(6352) at 0", "Insert SimpleName: String(6353) into SimpleType: String(6354) at 0", "Insert SimpleName: Object(6355) into SimpleType: Object(6356) at 0", "Insert SimpleType: Map(6360) into ParameterizedType: Map<String,String>(6365) at 0", "Insert SimpleType: String(6362) into ParameterizedType: Map<String,String>(6365) at 1", "Insert SimpleType: String(6364) into ParameterizedType: Map<String,String>(6365) at 2", "Insert SimpleName: String(6368) into SimpleType: String(6369) at 0", "Insert ParameterizedType: Map<String,Object>(6380) into VariableDeclarationStatement(6391) at 0", "Insert VariableDeclarationFragment(6390) into VariableDeclarationStatement(6391) at 1", "Insert SimpleType: String(6393) into VariableDeclarationStatement(6397) at 0", "Insert VariableDeclarationFragment(6396) into VariableDeclarationStatement(6397) at 1", "Insert SimpleType: String(6399) into VariableDeclarationStatement(6405) at 0", "Insert VariableDeclarationFragment(6404) into VariableDeclarationStatement(6405) at 1", "Insert SimpleType: File(6407) into VariableDeclarationStatement(6414) at 0", "Insert VariableDeclarationFragment(6413) into VariableDeclarationStatement(6414) at 1", "Insert ArrayType: File[](6418) into VariableDeclarationStatement(6424) at 0", "Insert VariableDeclarationFragment(6423) into VariableDeclarationStatement(6424) at 1", "Insert MethodInvocation(6463) into ExpressionStatement(6464) at 0", "Insert SimpleType: Path(6466) into VariableDeclarationStatement(6477) at 0", "Insert VariableDeclarationFragment(6476) into VariableDeclarationStatement(6477) at 1", "Insert PrimitiveType: int(6478) into VariableDeclarationStatement(6487) at 0", "Insert VariableDeclarationFragment(6486) into VariableDeclarationStatement(6487) at 1", "Insert PrimitiveType: boolean(6488) into VariableDeclarationStatement(6492) at 0", "Insert VariableDeclarationFragment(6491) into VariableDeclarationStatement(6492) at 1", "Insert MethodInvocation(6496) into IfStatement(6508) at 0", "Insert Block(6507) into IfStatement(6508) at 1", "Insert MethodInvocation(6514) into ExpressionStatement(6515) at 0", "Insert Block(6532) into TryStatement(6561) at 0", "Insert CatchClause(6560) into TryStatement(6561) at 1", "Insert SimpleName: Map(6359) into SimpleType: Map(6360) at 0", "Insert SimpleName: String(6361) into SimpleType: String(6362) at 0", "Insert SimpleName: String(6363) into SimpleType: String(6364) at 0", "Insert SimpleType: Map(6375) into ParameterizedType: Map<String,Object>(6380) at 0", "Insert SimpleType: String(6377) into ParameterizedType: Map<String,Object>(6380) at 1", "Insert SimpleType: Object(6379) into ParameterizedType: Map<String,Object>(6380) at 2", "Insert SimpleName: results(6381) into VariableDeclarationFragment(6390) at 0", "Insert ClassInstanceCreation(6389) into VariableDeclarationFragment(6390) at 1", "Insert SimpleName: String(6392) into SimpleType: String(6393) at 0", "Insert SimpleName: RESULT(6394) into VariableDeclarationFragment(6396) at 0", "Insert StringLiteral: \"result\"(6395) into VariableDeclarationFragment(6396) at 1", "Insert SimpleName: String(6398) into SimpleType: String(6399) at 0", "Insert SimpleName: segment_dir(6400) into VariableDeclarationFragment(6404) at 0", "Insert InfixExpression: +(6403) into VariableDeclarationFragment(6404) at 1", "Insert SimpleName: File(6406) into SimpleType: File(6407) at 0", "Insert SimpleName: segmentsDir(6408) into VariableDeclarationFragment(6413) at 0", "Insert ClassInstanceCreation(6412) into VariableDeclarationFragment(6413) at 1", "Insert SimpleType: File(6416) into ArrayType: File[](6418) at 0", "Insert Dimension(6417) into ArrayType: File[](6418) at 1", "Insert SimpleName: segmentsList(6419) into VariableDeclarationFragment(6423) at 0", "Insert MethodInvocation(6422) into VariableDeclarationFragment(6423) at 1", "Insert SimpleName: Arrays(6425) into MethodInvocation(6463) at 0", "Insert SimpleName: sort(6426) into MethodInvocation(6463) at 1", "Insert SimpleName: segmentsList(6427) into MethodInvocation(6463) at 2", "Insert ClassInstanceCreation(6462) into MethodInvocation(6463) at 3", "Insert SimpleName: Path(6465) into SimpleType: Path(6466) at 0", "Insert SimpleName: segment(6467) into VariableDeclarationFragment(6476) at 0", "Insert ClassInstanceCreation(6475) into VariableDeclarationFragment(6476) at 1", "Insert SimpleName: threads(6479) into VariableDeclarationFragment(6486) at 0", "Insert MethodInvocation(6485) into VariableDeclarationFragment(6486) at 1", "Insert SimpleName: parsing(6489) into VariableDeclarationFragment(6491) at 0", "Insert BooleanLiteral: false(6490) into VariableDeclarationFragment(6491) at 1", "Insert SimpleName: args(6493) into MethodInvocation(6496) at 0", "Insert SimpleName: containsKey(6494) into MethodInvocation(6496) at 1", "Insert StringLiteral: \"threads\"(6495) into MethodInvocation(6496) at 2", "Insert ExpressionStatement(6506) into Block(6507) at 0", "Insert MethodInvocation(6510) into MethodInvocation(6514) at 0", "Insert SimpleName: setInt(6511) into MethodInvocation(6514) at 1", "Insert StringLiteral: \"fetcher.threads.fetch\"(6512) into MethodInvocation(6514) at 2", "Insert SimpleName: threads(6513) into MethodInvocation(6514) at 3", "Insert ExpressionStatement(6520) into Block(6532) at 0", "Insert ExpressionStatement(6529) into Block(6532) at 1", "Insert ReturnStatement(6531) into Block(6532) at 2", "Insert SingleVariableDeclaration(6536) into CatchClause(6560) at 0", "Insert Block(6559) into CatchClause(6560) at 1", "Insert SimpleName: Map(6374) into SimpleType: Map(6375) at 0", "Insert SimpleName: String(6376) into SimpleType: String(6377) at 0", "Insert SimpleName: Object(6378) into SimpleType: Object(6379) at 0", "Insert ParameterizedType: HashMap<String,Object>(6388) into ClassInstanceCreation(6389) at 0", "Insert SimpleName: crawlId(6401) into InfixExpression: +(6403) at 0", "Insert StringLiteral: \"/segments\"(6402) into InfixExpression: +(6403) at 1", "Insert SimpleType: File(6410) into ClassInstanceCreation(6412) at 0", "Insert SimpleName: segment_dir(6411) into ClassInstanceCreation(6412) at 1", "Insert SimpleName: File(6415) into SimpleType: File(6416) at 0", "Insert SimpleName: segmentsDir(6420) into MethodInvocation(6422) at 0", "Insert SimpleName: listFiles(6421) into MethodInvocation(6422) at 1", "Insert ParameterizedType: Comparator<File>(6432) into ClassInstanceCreation(6462) at 0", "Insert AnonymousClassDeclaration(6461) into ClassInstanceCreation(6462) at 1", "Insert SimpleType: Path(6469) into ClassInstanceCreation(6475) at 0", "Insert MethodInvocation(6474) into ClassInstanceCreation(6475) at 1", "Insert MethodInvocation(6481) into MethodInvocation(6485) at 0", "Insert SimpleName: getInt(6482) into MethodInvocation(6485) at 1", "Insert StringLiteral: \"fetcher.threads.fetch\"(6483) into MethodInvocation(6485) at 2", "Insert NumberLiteral: 10(6484) into MethodInvocation(6485) at 3", "Insert Assignment: =(6505) into ExpressionStatement(6506) at 0", "Insert SimpleName: getConf(6509) into MethodInvocation(6510) at 0", "Insert MethodInvocation(6519) into ExpressionStatement(6520) at 0", "Insert MethodInvocation(6528) into ExpressionStatement(6529) at 0", "Insert SimpleName: results(6530) into ReturnStatement(6531) at 0", "Insert SimpleType: Exception(6534) into SingleVariableDeclaration(6536) at 0", "Insert SimpleName: e(6535) into SingleVariableDeclaration(6536) at 1", "Insert ExpressionStatement(6546) into Block(6559) at 0", "Insert ExpressionStatement(6556) into Block(6559) at 1", "Insert ReturnStatement(6558) into Block(6559) at 2", "Insert SimpleType: HashMap(6383) into ParameterizedType: HashMap<String,Object>(6388) at 0", "Insert SimpleType: String(6385) into ParameterizedType: HashMap<String,Object>(6388) at 1", "Insert SimpleType: Object(6387) into ParameterizedType: HashMap<String,Object>(6388) at 2", "Insert SimpleName: File(6409) into SimpleType: File(6410) at 0", "Insert SimpleType: Comparator(6429) into ParameterizedType: Comparator<File>(6432) at 0", "Insert SimpleType: File(6431) into ParameterizedType: Comparator<File>(6432) at 1", "Insert MethodDeclaration(6460) into AnonymousClassDeclaration(6461) at 0", "Insert SimpleName: Path(6468) into SimpleType: Path(6469) at 0", "Insert ArrayAccess(6472) into MethodInvocation(6474) at 0", "Insert SimpleName: getPath(6473) into MethodInvocation(6474) at 1", "Insert SimpleName: getConf(6480) into MethodInvocation(6481) at 0", "Insert SimpleName: threads(6497) into Assignment: =(6505) at 0", "Insert MethodInvocation(6504) into Assignment: =(6505) at 1", "Insert SimpleName: fetch(6516) into MethodInvocation(6519) at 0", "Insert SimpleName: segment(6517) into MethodInvocation(6519) at 1", "Insert SimpleName: threads(6518) into MethodInvocation(6519) at 2", "Insert SimpleName: results(6521) into MethodInvocation(6528) at 0", "Insert SimpleName: put(6522) into MethodInvocation(6528) at 1", "Insert SimpleName: RESULT(6523) into MethodInvocation(6528) at 2", "Insert MethodInvocation(6527) into MethodInvocation(6528) at 3", "Insert SimpleName: Exception(6533) into SimpleType: Exception(6534) at 0", "Insert MethodInvocation(6545) into ExpressionStatement(6546) at 0", "Insert MethodInvocation(6555) into ExpressionStatement(6556) at 0", "Insert SimpleName: results(6557) into ReturnStatement(6558) at 0", "Insert SimpleName: HashMap(6382) into SimpleType: HashMap(6383) at 0", "Insert SimpleName: String(6384) into SimpleType: String(6385) at 0", "Insert SimpleName: Object(6386) into SimpleType: Object(6387) at 0", "Update SimpleName: Configured(99) to Comparator", "Move SimpleName: Configured(99) into SimpleType: Comparator(6429) at 0", "Insert SimpleName: File(6430) into SimpleType: File(6431) at 0", "Insert MarkerAnnotation(6434) into MethodDeclaration(6460) at 0", "Insert Modifier: public(6435) into MethodDeclaration(6460) at 1", "Insert PrimitiveType: int(6436) into MethodDeclaration(6460) at 2", "Insert SimpleName: compare(6437) into MethodDeclaration(6460) at 3", "Insert SingleVariableDeclaration(6441) into MethodDeclaration(6460) at 4", "Insert SingleVariableDeclaration(6445) into MethodDeclaration(6460) at 5", "Insert Block(6459) into MethodDeclaration(6460) at 6", "Insert SimpleName: segmentsList(6470) into ArrayAccess(6472) at 0", "Insert NumberLiteral: 0(6471) into ArrayAccess(6472) at 1", "Insert SimpleName: Integer(6498) into MethodInvocation(6504) at 0", "Insert SimpleName: parseInt(6499) into MethodInvocation(6504) at 1", "Insert MethodInvocation(6503) into MethodInvocation(6504) at 2", "Insert SimpleName: Integer(6524) into MethodInvocation(6527) at 0", "Insert SimpleName: toString(6525) into MethodInvocation(6527) at 1", "Insert NumberLiteral: 0(6526) into MethodInvocation(6527) at 2", "Insert SimpleName: LOG(6537) into MethodInvocation(6545) at 0", "Insert SimpleName: error(6538) into MethodInvocation(6545) at 1", "Insert InfixExpression: +(6544) into MethodInvocation(6545) at 2", "Insert SimpleName: results(6547) into MethodInvocation(6555) at 0", "Insert SimpleName: put(6548) into MethodInvocation(6555) at 1", "Insert SimpleName: RESULT(6549) into MethodInvocation(6555) at 2", "Insert MethodInvocation(6554) into MethodInvocation(6555) at 3", "Insert SimpleName: Override(6433) into MarkerAnnotation(6434) at 0", "Insert SimpleType: File(6439) into SingleVariableDeclaration(6441) at 0", "Insert SimpleName: f1(6440) into SingleVariableDeclaration(6441) at 1", "Insert SimpleType: File(6443) into SingleVariableDeclaration(6445) at 0", "Insert SimpleName: f2(6444) into SingleVariableDeclaration(6445) at 1", "Insert IfStatement(6458) into Block(6459) at 0", "Insert SimpleName: args(6500) into MethodInvocation(6503) at 0", "Insert SimpleName: get(6501) into MethodInvocation(6503) at 1", "Insert StringLiteral: \"threads\"(6502) into MethodInvocation(6503) at 2", "Insert StringLiteral: \"Fetcher: \"(6539) into InfixExpression: +(6544) at 0", "Insert MethodInvocation(6543) into InfixExpression: +(6544) at 1", "Insert SimpleName: Integer(6550) into MethodInvocation(6554) at 0", "Insert SimpleName: toString(6551) into MethodInvocation(6554) at 1", "Insert PrefixExpression: -(6553) into MethodInvocation(6554) at 2", "Insert SimpleName: File(6438) into SimpleType: File(6439) at 0", "Insert SimpleName: File(6442) into SimpleType: File(6443) at 0", "Insert InfixExpression: >(6452) into IfStatement(6458) at 0", "Insert ReturnStatement(6455) into IfStatement(6458) at 1", "Insert ReturnStatement(6457) into IfStatement(6458) at 2", "Insert SimpleName: StringUtils(6540) into MethodInvocation(6543) at 0", "Insert SimpleName: stringifyException(6541) into MethodInvocation(6543) at 1", "Insert SimpleName: e(6542) into MethodInvocation(6543) at 2", "Insert NumberLiteral: 1(6552) into PrefixExpression: -(6553) at 0", "Insert MethodInvocation(6448) into InfixExpression: >(6452) at 0", "Insert MethodInvocation(6451) into InfixExpression: >(6452) at 1", "Insert PrefixExpression: -(6454) into ReturnStatement(6455) at 0", "Insert NumberLiteral: 0(6456) into ReturnStatement(6457) at 0", "Insert SimpleName: f1(6446) into MethodInvocation(6448) at 0", "Insert SimpleName: lastModified(6447) into MethodInvocation(6448) at 1", "Insert SimpleName: f2(6449) into MethodInvocation(6451) at 0", "Insert SimpleName: lastModified(6450) into MethodInvocation(6451) at 1", "Insert NumberLiteral: 1(6453) into PrefixExpression: -(6454) at 0", "Delete SimpleType: Configured(100)"]}}, {"Nutch_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 22", "operations": ["INS Modifier: public to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"progress\" to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: STAT_PROGRESS to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleType: String to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: interface at 22", "INS TextElement: For progress of job. Used by the Nutch REST service  to TagElement at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 23", "operations": ["INS TextElement: Used by Nutch REST service  to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: CRAWL_ID_KEY to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2", "INS StringLiteral: \"storage.crawl.id\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: interface at 23", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Modifier: final to FieldDeclaration at 3"]}]}}, {"Nutch_diff": {"operations": ["Insert FieldDeclaration(237) into TypeDeclaration: interface(250) at 22", "Insert FieldDeclaration(249) into TypeDeclaration: interface(250) at 23", "Insert Javadoc(228) into FieldDeclaration(237) at 0", "Insert Modifier: public(229) into FieldDeclaration(237) at 1", "Insert Modifier: static(230) into FieldDeclaration(237) at 2", "Insert Modifier: final(231) into FieldDeclaration(237) at 3", "Insert SimpleType: String(233) into FieldDeclaration(237) at 4", "Insert VariableDeclarationFragment(236) into FieldDeclaration(237) at 5", "Insert Javadoc(240) into FieldDeclaration(249) at 0", "Insert Modifier: public(241) into FieldDeclaration(249) at 1", "Insert Modifier: static(242) into FieldDeclaration(249) at 2", "Insert Modifier: final(243) into FieldDeclaration(249) at 3", "Insert SimpleType: String(245) into FieldDeclaration(249) at 4", "Insert VariableDeclarationFragment(248) into FieldDeclaration(249) at 5", "Insert TagElement(227) into Javadoc(228) at 0", "Insert SimpleName: String(232) into SimpleType: String(233) at 0", "Insert SimpleName: STAT_PROGRESS(234) into VariableDeclarationFragment(236) at 0", "Insert StringLiteral: \"progress\"(235) into VariableDeclarationFragment(236) at 1", "Insert TagElement(239) into Javadoc(240) at 0", "Insert SimpleName: String(244) into SimpleType: String(245) at 0", "Insert SimpleName: CRAWL_ID_KEY(246) into VariableDeclarationFragment(248) at 0", "Insert StringLiteral: \"storage.crawl.id\"(247) into VariableDeclarationFragment(248) at 1", "Insert TextElement: For progress of job. Used by the Nutch REST service (226) into TagElement(227) at 0", "Insert TextElement: Used by Nutch REST service (238) into TagElement(239) at 0"]}}, {"ParseSegment_cluster": {"actions": [{"root": "INS SimpleType: NutchTool to TypeDeclaration: class at 2", "operations": ["INS SimpleName: NutchTool to SimpleType: NutchTool at 0", "INS SimpleType: NutchTool to TypeDeclaration: class at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS StringLiteral: \"/segments\" to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: RESULT to VariableDeclarationFragment at 0", "INS SimpleName: segmentsDir to MethodInvocation at 0", "INS Dimension to ArrayType: File[] at 1", "INS InfixExpression: > to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Object> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS VariableDeclarationStatement to Block at 6", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: getPath to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleName: args to MethodInvocation at 0", "INS SimpleName: segmentsList to VariableDeclarationFragment at 0", "INS SimpleName: RESULT to MethodInvocation at 2", "INS SimpleType: Path to VariableDeclarationStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: f1 to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"nonormalize\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: parse to MethodInvocation at 0", "INS SimpleName: crawlId to InfixExpression: + at 0", "INS SimpleName: File to SimpleType: File at 0", "INS StringLiteral: \"result\" to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: lastModified to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS ParameterizedType: Map<String,Object> to MethodDeclaration at 1", "INS SimpleName: segment to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: HashMap<String,Object> to ClassInstanceCreation at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Exception to MethodDeclaration at 5", "INS StringLiteral: \"nofilter\" to MethodInvocation at 2", "INS SimpleName: getConf to MethodInvocation at 0", "INS SimpleType: Path to ClassInstanceCreation at 0", "INS SimpleName: f2 to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: segment_dir to ClassInstanceCreation at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS ExpressionStatement to Block at 9", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,Object> at 1", "INS Block to IfStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: File to ParameterizedType: Comparator<File> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS StringLiteral: \"parse.normalize.urls\" to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: args to SingleVariableDeclaration at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: setBoolean to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: args to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: segmentsList to MethodInvocation at 2", "INS SimpleName: setBoolean to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: crawlId to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS PrefixExpression: - to ReturnStatement at 0", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS ArrayType: File[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 7", "INS StringLiteral: \"parse.filter.urls\" to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: run to MethodDeclaration at 2", "INS SimpleType: File to ClassInstanceCreation at 0", "INS ReturnStatement to IfStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Object to ParameterizedType: HashMap<String,Object> at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: listFiles to MethodInvocation at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to InfixExpression: > at 1", "INS SimpleName: segmentsDir to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 11", "INS SimpleName: segment to MethodInvocation at 1", "INS SimpleName: put to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: lastModified to MethodInvocation at 1", "INS SimpleName: segment_dir to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS BooleanLiteral: false to MethodInvocation at 3", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: segmentsList to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: compare to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: f1 to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: sort to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: File to ArrayType: File[] at 0", "INS ReturnStatement to IfStatement at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ParameterizedType: Comparator<File> to ClassInstanceCreation at 0", "INS SimpleName: Path to SimpleType: Path at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: results to ReturnStatement at 0", "INS SimpleName: results to VariableDeclarationFragment at 0", "INS SimpleName: f2 to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<File> at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from Configured to Comparator", "operations": ["UPD SimpleName: Configured from Configured to Comparator"]}, {"root": "MOVE from SimpleType: Comparator", "operations": ["MOV SimpleName: Configured to SimpleType: Comparator at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.nutch.segment.SegmentChecker"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.fs.FileSystem", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: Configured", "operations": ["DEL SimpleType: Configured"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: FileSystem", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: isParsed", "DEL StringLiteral: \"Segment: \"", "DEL SimpleName: segment", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: warn", "DEL SimpleName: SegmentChecker", "DEL IfStatement", "DEL StringLiteral: \" already parsed!! Skipped parsing this segment!!\"", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: LOG", "DEL SimpleName: segment"]}]}}, {"ParseSegment_diff": {"operations": ["Insert SimpleType: NutchTool(59) into TypeDeclaration: class(1166) at 2", "Insert MethodDeclaration(1165) into TypeDeclaration: class(1166) at 22", "Insert SimpleName: NutchTool(58) into SimpleType: NutchTool(59) at 0", "Insert Modifier: public(995) into MethodDeclaration(1165) at 0", "Insert ParameterizedType: Map<String,Object>(1002) into MethodDeclaration(1165) at 1", "Insert SimpleName: run(1003) into MethodDeclaration(1165) at 2", "Insert SingleVariableDeclaration(1012) into MethodDeclaration(1165) at 3", "Insert SingleVariableDeclaration(1016) into MethodDeclaration(1165) at 4", "Insert SimpleType: Exception(1018) into MethodDeclaration(1165) at 5", "Insert Block(1164) into MethodDeclaration(1165) at 6", "Insert SimpleType: Map(997) into ParameterizedType: Map<String,Object>(1002) at 0", "Insert SimpleType: String(999) into ParameterizedType: Map<String,Object>(1002) at 1", "Insert SimpleType: Object(1001) into ParameterizedType: Map<String,Object>(1002) at 2", "Insert ParameterizedType: Map<String,String>(1010) into SingleVariableDeclaration(1012) at 0", "Insert SimpleName: args(1011) into SingleVariableDeclaration(1012) at 1", "Insert SimpleType: String(1014) into SingleVariableDeclaration(1016) at 0", "Insert SimpleName: crawlId(1015) into SingleVariableDeclaration(1016) at 1", "Insert SimpleName: Exception(1017) into SimpleType: Exception(1018) at 0", "Insert VariableDeclarationStatement(1036) into Block(1164) at 0", "Insert VariableDeclarationStatement(1042) into Block(1164) at 1", "Insert IfStatement(1055) into Block(1164) at 2", "Insert IfStatement(1068) into Block(1164) at 3", "Insert VariableDeclarationStatement(1076) into Block(1164) at 4", "Insert VariableDeclarationStatement(1085) into Block(1164) at 5", "Insert VariableDeclarationStatement(1095) into Block(1164) at 6", "Insert ExpressionStatement(1135) into Block(1164) at 7", "Insert VariableDeclarationStatement(1148) into Block(1164) at 8", "Insert ExpressionStatement(1152) into Block(1164) at 9", "Insert ExpressionStatement(1161) into Block(1164) at 10", "Insert ReturnStatement(1163) into Block(1164) at 11", "Insert SimpleName: Map(996) into SimpleType: Map(997) at 0", "Insert SimpleName: String(998) into SimpleType: String(999) at 0", "Insert SimpleName: Object(1000) into SimpleType: Object(1001) at 0", "Insert SimpleType: Map(1005) into ParameterizedType: Map<String,String>(1010) at 0", "Insert SimpleType: String(1007) into ParameterizedType: Map<String,String>(1010) at 1", "Insert SimpleType: String(1009) into ParameterizedType: Map<String,String>(1010) at 2", "Insert SimpleName: String(1013) into SimpleType: String(1014) at 0", "Insert ParameterizedType: Map<String,Object>(1025) into VariableDeclarationStatement(1036) at 0", "Insert VariableDeclarationFragment(1035) into VariableDeclarationStatement(1036) at 1", "Insert SimpleType: String(1038) into VariableDeclarationStatement(1042) at 0", "Insert VariableDeclarationFragment(1041) into VariableDeclarationStatement(1042) at 1", "Insert MethodInvocation(1046) into IfStatement(1055) at 0", "Insert Block(1054) into IfStatement(1055) at 1", "Insert MethodInvocation(1059) into IfStatement(1068) at 0", "Insert Block(1067) into IfStatement(1068) at 1", "Insert SimpleType: String(1070) into VariableDeclarationStatement(1076) at 0", "Insert VariableDeclarationFragment(1075) into VariableDeclarationStatement(1076) at 1", "Insert SimpleType: File(1078) into VariableDeclarationStatement(1085) at 0", "Insert VariableDeclarationFragment(1084) into VariableDeclarationStatement(1085) at 1", "Insert ArrayType: File[](1089) into VariableDeclarationStatement(1095) at 0", "Insert VariableDeclarationFragment(1094) into VariableDeclarationStatement(1095) at 1", "Insert MethodInvocation(1134) into ExpressionStatement(1135) at 0", "Insert SimpleType: Path(1137) into VariableDeclarationStatement(1148) at 0", "Insert VariableDeclarationFragment(1147) into VariableDeclarationStatement(1148) at 1", "Insert MethodInvocation(1151) into ExpressionStatement(1152) at 0", "Insert MethodInvocation(1160) into ExpressionStatement(1161) at 0", "Insert SimpleName: results(1162) into ReturnStatement(1163) at 0", "Insert SimpleName: Map(1004) into SimpleType: Map(1005) at 0", "Insert SimpleName: String(1006) into SimpleType: String(1007) at 0", "Insert SimpleName: String(1008) into SimpleType: String(1009) at 0", "Insert SimpleType: Map(1020) into ParameterizedType: Map<String,Object>(1025) at 0", "Insert SimpleType: String(1022) into ParameterizedType: Map<String,Object>(1025) at 1", "Insert SimpleType: Object(1024) into ParameterizedType: Map<String,Object>(1025) at 2", "Insert SimpleName: results(1026) into VariableDeclarationFragment(1035) at 0", "Insert ClassInstanceCreation(1034) into VariableDeclarationFragment(1035) at 1", "Insert SimpleName: String(1037) into SimpleType: String(1038) at 0", "Insert SimpleName: RESULT(1039) into VariableDeclarationFragment(1041) at 0", "Insert StringLiteral: \"result\"(1040) into VariableDeclarationFragment(1041) at 1", "Insert SimpleName: args(1043) into MethodInvocation(1046) at 0", "Insert SimpleName: containsKey(1044) into MethodInvocation(1046) at 1", "Insert StringLiteral: \"nofilter\"(1045) into MethodInvocation(1046) at 2", "Insert ExpressionStatement(1053) into Block(1054) at 0", "Insert SimpleName: args(1056) into MethodInvocation(1059) at 0", "Insert SimpleName: containsKey(1057) into MethodInvocation(1059) at 1", "Insert StringLiteral: \"nonormalize\"(1058) into MethodInvocation(1059) at 2", "Insert ExpressionStatement(1066) into Block(1067) at 0", "Insert SimpleName: String(1069) into SimpleType: String(1070) at 0", "Insert SimpleName: segment_dir(1071) into VariableDeclarationFragment(1075) at 0", "Insert InfixExpression: +(1074) into VariableDeclarationFragment(1075) at 1", "Insert SimpleName: File(1077) into SimpleType: File(1078) at 0", "Insert SimpleName: segmentsDir(1079) into VariableDeclarationFragment(1084) at 0", "Insert ClassInstanceCreation(1083) into VariableDeclarationFragment(1084) at 1", "Insert SimpleType: File(1087) into ArrayType: File[](1089) at 0", "Insert Dimension(1088) into ArrayType: File[](1089) at 1", "Insert SimpleName: segmentsList(1090) into VariableDeclarationFragment(1094) at 0", "Insert MethodInvocation(1093) into VariableDeclarationFragment(1094) at 1", "Insert SimpleName: Arrays(1096) into MethodInvocation(1134) at 0", "Insert SimpleName: sort(1097) into MethodInvocation(1134) at 1", "Insert SimpleName: segmentsList(1098) into MethodInvocation(1134) at 2", "Insert ClassInstanceCreation(1133) into MethodInvocation(1134) at 3", "Insert SimpleName: Path(1136) into SimpleType: Path(1137) at 0", "Insert SimpleName: segment(1138) into VariableDeclarationFragment(1147) at 0", "Insert ClassInstanceCreation(1146) into VariableDeclarationFragment(1147) at 1", "Insert SimpleName: parse(1149) into MethodInvocation(1151) at 0", "Insert SimpleName: segment(1150) into MethodInvocation(1151) at 1", "Insert SimpleName: results(1153) into MethodInvocation(1160) at 0", "Insert SimpleName: put(1154) into MethodInvocation(1160) at 1", "Insert SimpleName: RESULT(1155) into MethodInvocation(1160) at 2", "Insert MethodInvocation(1159) into MethodInvocation(1160) at 3", "Insert SimpleName: Map(1019) into SimpleType: Map(1020) at 0", "Insert SimpleName: String(1021) into SimpleType: String(1022) at 0", "Insert SimpleName: Object(1023) into SimpleType: Object(1024) at 0", "Insert ParameterizedType: HashMap<String,Object>(1033) into ClassInstanceCreation(1034) at 0", "Insert MethodInvocation(1052) into ExpressionStatement(1053) at 0", "Insert MethodInvocation(1065) into ExpressionStatement(1066) at 0", "Insert SimpleName: crawlId(1072) into InfixExpression: +(1074) at 0", "Insert StringLiteral: \"/segments\"(1073) into InfixExpression: +(1074) at 1", "Insert SimpleType: File(1081) into ClassInstanceCreation(1083) at 0", "Insert SimpleName: segment_dir(1082) into ClassInstanceCreation(1083) at 1", "Insert SimpleName: File(1086) into SimpleType: File(1087) at 0", "Insert SimpleName: segmentsDir(1091) into MethodInvocation(1093) at 0", "Insert SimpleName: listFiles(1092) into MethodInvocation(1093) at 1", "Insert ParameterizedType: Comparator<File>(1103) into ClassInstanceCreation(1133) at 0", "Insert AnonymousClassDeclaration(1132) into ClassInstanceCreation(1133) at 1", "Insert SimpleType: Path(1140) into ClassInstanceCreation(1146) at 0", "Insert MethodInvocation(1145) into ClassInstanceCreation(1146) at 1", "Insert SimpleName: Integer(1156) into MethodInvocation(1159) at 0", "Insert SimpleName: toString(1157) into MethodInvocation(1159) at 1", "Insert NumberLiteral: 0(1158) into MethodInvocation(1159) at 2", "Insert SimpleType: HashMap(1028) into ParameterizedType: HashMap<String,Object>(1033) at 0", "Insert SimpleType: String(1030) into ParameterizedType: HashMap<String,Object>(1033) at 1", "Insert SimpleType: Object(1032) into ParameterizedType: HashMap<String,Object>(1033) at 2", "Move MethodInvocation(715) into MethodInvocation(1052) at 0", "Insert SimpleName: setBoolean(1049) into MethodInvocation(1052) at 1", "Insert StringLiteral: \"parse.filter.urls\"(1050) into MethodInvocation(1052) at 2", "Insert BooleanLiteral: false(1051) into MethodInvocation(1052) at 3", "Insert MethodInvocation(1061) into MethodInvocation(1065) at 0", "Insert SimpleName: setBoolean(1062) into MethodInvocation(1065) at 1", "Insert StringLiteral: \"parse.normalize.urls\"(1063) into MethodInvocation(1065) at 2", "Insert BooleanLiteral: false(1064) into MethodInvocation(1065) at 3", "Insert SimpleName: File(1080) into SimpleType: File(1081) at 0", "Insert SimpleType: Comparator(1100) into ParameterizedType: Comparator<File>(1103) at 0", "Insert SimpleType: File(1102) into ParameterizedType: Comparator<File>(1103) at 1", "Insert MethodDeclaration(1131) into AnonymousClassDeclaration(1132) at 0", "Insert SimpleName: Path(1139) into SimpleType: Path(1140) at 0", "Insert ArrayAccess(1143) into MethodInvocation(1145) at 0", "Insert SimpleName: getPath(1144) into MethodInvocation(1145) at 1", "Insert SimpleName: HashMap(1027) into SimpleType: HashMap(1028) at 0", "Insert SimpleName: String(1029) into SimpleType: String(1030) at 0", "Insert SimpleName: Object(1031) into SimpleType: Object(1032) at 0", "Insert SimpleName: getConf(1060) into MethodInvocation(1061) at 0", "Update SimpleName: Configured(62) to Comparator", "Move SimpleName: Configured(62) into SimpleType: Comparator(1100) at 0", "Insert SimpleName: File(1101) into SimpleType: File(1102) at 0", "Insert MarkerAnnotation(1105) into MethodDeclaration(1131) at 0", "Insert Modifier: public(1106) into MethodDeclaration(1131) at 1", "Insert PrimitiveType: int(1107) into MethodDeclaration(1131) at 2", "Insert SimpleName: compare(1108) into MethodDeclaration(1131) at 3", "Insert SingleVariableDeclaration(1112) into MethodDeclaration(1131) at 4", "Insert SingleVariableDeclaration(1116) into MethodDeclaration(1131) at 5", "Insert Block(1130) into MethodDeclaration(1131) at 6", "Insert SimpleName: segmentsList(1141) into ArrayAccess(1143) at 0", "Insert NumberLiteral: 0(1142) into ArrayAccess(1143) at 1", "Insert SimpleName: Override(1104) into MarkerAnnotation(1105) at 0", "Insert SimpleType: File(1110) into SingleVariableDeclaration(1112) at 0", "Insert SimpleName: f1(1111) into SingleVariableDeclaration(1112) at 1", "Insert SimpleType: File(1114) into SingleVariableDeclaration(1116) at 0", "Insert SimpleName: f2(1115) into SingleVariableDeclaration(1116) at 1", "Insert IfStatement(1129) into Block(1130) at 0", "Insert SimpleName: File(1109) into SimpleType: File(1110) at 0", "Insert SimpleName: File(1113) into SimpleType: File(1114) at 0", "Insert InfixExpression: >(1123) into IfStatement(1129) at 0", "Insert ReturnStatement(1126) into IfStatement(1129) at 1", "Insert ReturnStatement(1128) into IfStatement(1129) at 2", "Insert MethodInvocation(1119) into InfixExpression: >(1123) at 0", "Insert MethodInvocation(1122) into InfixExpression: >(1123) at 1", "Insert PrefixExpression: -(1125) into ReturnStatement(1126) at 0", "Insert NumberLiteral: 0(1127) into ReturnStatement(1128) at 0", "Insert SimpleName: f1(1117) into MethodInvocation(1119) at 0", "Insert SimpleName: lastModified(1118) into MethodInvocation(1119) at 1", "Insert SimpleName: f2(1120) into MethodInvocation(1122) at 0", "Insert SimpleName: lastModified(1121) into MethodInvocation(1122) at 1", "Insert NumberLiteral: 1(1124) into PrefixExpression: -(1125) at 0", "Delete QualifiedName: org.apache.nutch.segment.SegmentChecker(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.fs.FileSystem(46)", "Delete ImportDeclaration(47)", "Delete SimpleType: Configured(63)", "Delete SimpleName: SegmentChecker(709)", "Delete SimpleName: isParsed(710)", "Delete SimpleName: segment(711)", "Delete SimpleName: FileSystem(712)", "Delete SimpleName: get(713)", "Delete MethodInvocation(716)", "Delete MethodInvocation(717)", "Delete SimpleName: LOG(718)", "Delete SimpleName: warn(719)", "Delete StringLiteral: \"Segment: \"(720)", "Delete SimpleName: segment(721)", "Delete StringLiteral: \" already parsed!! Skipped parsing this segment!!\"(722)", "Delete InfixExpression: +(723)", "Delete MethodInvocation(724)", "Delete ExpressionStatement(725)", "Delete ReturnStatement(726)", "Delete Block(727)", "Delete IfStatement(728)"]}}, {"RobotRulesParser_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 19"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 20"]}, {"root": "UPDATE from java.util.Arrays to java.util.ArrayList", "operations": ["UPD QualifiedName: java.util.Arrays from java.util.Arrays to java.util.ArrayList"]}, {"root": "UPDATE from org.apache.hadoop.util.Tool to org.apache.hadoop.conf.Configurable", "operations": ["UPD QualifiedName: org.apache.hadoop.util.Tool from org.apache.hadoop.util.Tool to org.apache.hadoop.conf.Configurable"]}, {"root": "UPDATE from org.apache.hadoop.util.ToolRunner to com.google.common.io.Files", "operations": ["UPD QualifiedName: org.apache.hadoop.util.ToolRunner from org.apache.hadoop.util.ToolRunner to com.google.common.io.Files"]}, {"root": "UPDATE from Tool to Configurable", "operations": ["UPD SimpleName: Tool from Tool to Configurable", "UPD SimpleType: Tool from Tool to Configurable"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20"]}, {"root": "UPDATE from protected to private", "operations": ["UPD Modifier: protected from protected to private"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SimpleType: BaseRobotRules to MethodDeclaration at 3"]}, {"root": "INS SimpleName: getRobotRulesSet to MethodDeclaration at 4", "operations": ["INS SimpleName: getRobotRulesSet to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "UPDATE from public to static", "operations": ["UPD Modifier: public from public to static"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SimpleName: run to MethodDeclaration at 4", "MOV PrimitiveType: int to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "UPDATE from int to void", "operations": ["UPD PrimitiveType: int from int to void"]}, {"root": "UPDATE from run to main", "operations": ["UPD SimpleName: run from run to main"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ArrayType: String[] to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from args to argv", "operations": ["UPD SimpleName: args from args to argv", "UPD SimpleName: args from args to argv", "UPD SimpleName: args from args to argv", "UPD SimpleName: args from args to argv"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS StringLiteral: \"text/plain\" to MethodInvocation at 4", "INS Block to TryStatement at 0", "INS SimpleName: rules to VariableDeclarationFragment at 0", "INS SimpleName: parseContent to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: robotParser to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TryStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ArrayAccess to MethodInvocation at 5", "INS SimpleName: robotsBytes to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "UPDATE from the given URL, parse it and return the set of robot rules applicable for to command-line main for testing ", "operations": ["UPD TextElement: the given URL, parse it and return the set of robot rules applicable for from the given URL, parse it and return the set of robot rules applicable for to command-line main for testing "]}, {"root": "UPDATE from < to !=", "operations": ["UPD InfixExpression: < from < to !="]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "UPDATE from args.length to argv.length", "operations": ["UPD QualifiedName: args.length from args.length to argv.length"]}, {"root": "UPDATE from 2 to 3", "operations": ["UPD NumberLiteral: 2 from 2 to 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS QualifiedName: System.err to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Usage: RobotRulesParser <robots-file> <url-file> <agent-names>\\n\" to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: System.err to MethodInvocation at 0", "INS StringLiteral: \"\\tThe <robots-file> will be parsed as a robots.txt file,\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: println to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS QualifiedName: System.err to MethodInvocation at 0", "INS StringLiteral: \"\\tusing the given <agent-name> to select rules.  URLs \" to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS QualifiedName: System.err to MethodInvocation at 0", "INS SimpleName: println to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"\\twill be read (one per line) from <url-file>, and tested\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS StringLiteral: \"\\tagainst the rules. Multiple agent names can be provided using\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: println to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS QualifiedName: System.err to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV WhileStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 3", "MOV ExpressionStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: BaseRobotRules to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "INS Block to WhileStatement at 1", "operations": ["INS Block to WhileStatement at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Exception to SingleVariableDeclaration at 0"]}, {"root": "INS StringLiteral: \"\\tcomma as a delimiter without any spaces.\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"\\tcomma as a delimiter without any spaces.\" to MethodInvocation at 2"]}, {"root": "UPDATE from robotsFile to robotsBytes", "operations": ["UPD SimpleName: robotsFile from robotsFile to robotsBytes"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: Files to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from error to e", "operations": ["UPD SimpleName: error from error to e"]}, {"root": "UPDATE from e to printStackTrace", "operations": ["UPD SimpleName: e from e to printStackTrace"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: File to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ArrayAccess to ClassInstanceCreation at 1"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV SimpleName: args to ArrayAccess at 0", "MOV NumberLiteral: 1 to ArrayAccess at 1"]}, {"root": "UPDATE from 1 to 0", "operations": ["UPD NumberLiteral: 1 from 1 to 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV NumberLiteral: 2 to ArrayAccess at 1", "MOV SimpleName: args to ArrayAccess at 0"]}, {"root": "INS ArrayAccess to ClassInstanceCreation at 1", "operations": ["INS ArrayAccess to ClassInstanceCreation at 1", "INS SimpleName: argv to ArrayAccess at 0", "INS NumberLiteral: 1 to ArrayAccess at 1"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: + at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS StringLiteral: \"not allowed\" to ConditionalExpression at 2", "INS StringLiteral: \"allowed\" to ConditionalExpression at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.InputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.net.MalformedURLException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Set", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.util.StringUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.nutch.util.NutchConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL TextElement: Protocol-specific implementations have to implement the method", "operations": ["DEL TextElement: Protocol-specific implementations have to implement the method"]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: getRobotRulesSet", "DEL TagElement: @link"]}, {"root": "DEL TextElement: .", "operations": ["DEL TextElement: ."]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TagElement", "DEL FieldDeclaration", "DEL SimpleName: Set", "DEL TextElement: set of host names or IPs to be explicitly excluded from robots.txt checking ", "DEL SimpleName: whiteList", "DEL ClassInstanceCreation", "DEL ParameterizedType: HashSet<String>", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Set<String>", "DEL SimpleName: String", "DEL Modifier: protected", "DEL SimpleType: String", "DEL SimpleType: Set", "DEL Javadoc", "DEL SimpleType: HashSet", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: HashSet"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: confWhiteList", "DEL SimpleName: getStrings", "DEL StringLiteral: \"http.robot.rules.whitelist\"", "DEL SimpleName: conf", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: confWhiteList", "DEL ExpressionStatement", "DEL SimpleName: Arrays", "DEL InfixExpression: !=", "DEL QualifiedName: confWhiteList.length", "DEL Block", "DEL SimpleName: confWhiteList", "DEL NumberLiteral: 0", "DEL SimpleName: whiteList", "DEL SimpleName: addAll", "DEL ExpressionStatement", "DEL SimpleName: LOG", "DEL SimpleName: info", "DEL InfixExpression: +", "DEL SimpleName: whiteList", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: asList", "DEL IfStatement", "DEL StringLiteral: \"Whitelisted hosts: \"", "DEL NullLiteral", "DEL InfixExpression: &&"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Check whether a URL belongs to a whitelisted host.", "DEL Javadoc", "DEL TagElement"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: isWhiteListed", "operations": ["DEL SimpleName: isWhiteListed"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: URL", "DEL SingleVariableDeclaration", "DEL SimpleName: URL", "DEL SimpleName: url"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: whiteList", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: url", "DEL SimpleName: contains", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getHost"]}, {"root": "DEL TextElement: Fetch robots.txt (or it's protocol-specific equivalent) which applies to", "operations": ["DEL TextElement: Fetch robots.txt (or it's protocol-specific equivalent) which applies to"]}, {"root": "DEL TextElement: the configured agent name(s).", "operations": ["DEL TextElement: the configured agent name(s)."]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: protocol", "DEL TextElement: protocol implementation"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: url", "DEL TagElement: @param", "DEL TextElement: URL to be checked whether fetching is allowed by robot rules"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  robot rules", "DEL TagElement: @return"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL SimpleName: String", "DEL Dimension", "DEL SimpleType: String", "DEL ArrayType: String[]"]}, {"root": "DEL SimpleName: s", "operations": ["DEL SimpleName: s"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL StringLiteral: \"\\tis used. If http.agent.name is empty, robots.txt is checked\"", "DEL StringLiteral: \"\\tURLs will be read (one per line) from <url-file>,\"", "DEL StringLiteral: \"\\tand tested against the rules.\"", "DEL ArrayType: String[]", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"\\tThe <robots-file> will be parsed as a robots.txt file,\"", "DEL SimpleType: String", "DEL ArrayInitializer", "DEL StringLiteral: \"Usage: RobotRulesParser <robots-file> <url-file> [<agent-names>]\\n\"", "DEL SimpleName: String", "DEL SimpleName: help", "DEL Dimension", "DEL StringLiteral: \"\\tcomma as a delimiter without any spaces.\"", "DEL StringLiteral: \"\\tMultiple agent names can be provided using\"", "DEL StringLiteral: \"\\tfor rules assigned to the user agent `*' (meaning any other).\"", "DEL StringLiteral: \"\\tusing the given <agent-name> to select rules.\"", "DEL StringLiteral: \"\\tIf no agent name is given the property http.agent.name\""]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: s", "DEL EnhancedForStatement", "DEL SimpleName: help", "DEL SingleVariableDeclaration", "DEL Block"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: File", "DEL SimpleName: File"]}, {"root": "DEL SimpleName: urlFile", "operations": ["DEL SimpleName: urlFile"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: status", "operations": ["DEL SimpleName: status"]}, {"root": "DEL Block", "operations": ["DEL CatchClause", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL TryStatement", "DEL ExpressionStatement", "DEL SimpleName: MalformedURLException", "DEL Block", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: status", "DEL SimpleName: isWhiteListed", "DEL StringLiteral: \"whitelisted\"", "DEL StringLiteral: \"allowed\"", "DEL Assignment: =", "DEL Block", "DEL Assignment: =", "DEL SimpleName: testPath", "DEL SimpleName: URL", "DEL SimpleName: url", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleType: String", "DEL SimpleType: URL", "DEL Assignment: =", "DEL SimpleType: URL", "DEL Block", "DEL SimpleName: status", "DEL Block", "DEL SimpleName: status", "DEL SimpleName: URL", "DEL IfStatement", "DEL SimpleName: url", "DEL Block", "DEL SimpleName: String", "DEL StringLiteral: \"not allowed\"", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: status", "DEL SimpleName: e", "DEL SimpleType: MalformedURLException", "DEL ExpressionStatement"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL SimpleName: LOG", "operations": ["DEL SimpleName: LOG"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: StringUtils", "DEL StringLiteral: \"Failed to run: \"", "DEL SimpleName: stringifyException"]}, {"root": "DEL ReturnStatement", "operations": ["DEL NumberLiteral: 1", "DEL ReturnStatement", "DEL PrefixExpression: -"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: File", "DEL ClassInstanceCreation", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleType: File", "DEL SimpleName: File", "DEL SimpleName: File", "DEL SimpleName: urlFile"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: String", "DEL QualifiedName: args.length", "DEL ArrayAccess", "DEL SimpleName: set", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL InfixExpression: >", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: setConf", "DEL ExpressionStatement", "DEL Block", "DEL StringLiteral: \"http.agent.name\"", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: conf", "DEL NumberLiteral: 2", "DEL SimpleName: agents", "DEL SimpleName: agents", "DEL MethodInvocation"]}, {"root": "DEL TryStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRobotRulesSet", "DEL SimpleName: rules", "DEL ExpressionStatement", "DEL Assignment: =", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: toURI", "DEL SimpleName: testPath", "DEL SimpleName: toURL", "DEL TryStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: robotsFile"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL NumberLiteral: 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getRobotRulesSet", "DEL SimpleType: BaseRobotRules", "DEL SimpleType: URL", "DEL SimpleType: Protocol", "DEL SimpleName: URL", "DEL SimpleName: url", "DEL Modifier: abstract", "DEL SingleVariableDeclaration", "DEL SimpleName: Protocol", "DEL MethodDeclaration", "DEL SimpleName: BaseRobotRules", "DEL SingleVariableDeclaration", "DEL SimpleName: protocol"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: setConf", "DEL MethodInvocation", "DEL Block", "DEL TagElement: @param", "DEL SimpleName: rules", "DEL SimpleName: set", "DEL Modifier: public", "DEL MethodInvocation", "DEL ArrayCreation", "DEL TextElement:   (ignored)", "DEL SimpleName: openStream", "DEL SimpleName: conf", "DEL SimpleName: getRobotRulesSet", "DEL VariableDeclarationFragment", "DEL SimpleName: protocol", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: EMPTY_RULES", "DEL SimpleName: get", "DEL SimpleName: url", "DEL CatchClause", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: parseContent", "DEL SimpleName: conf", "DEL SimpleName: Configuration", "DEL VariableDeclarationStatement", "DEL SimpleName: getContentLength", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: IOException", "DEL SimpleName: toString", "DEL StringLiteral: \"text/plain\"", "DEL InfixExpression: +", "DEL SimpleType: Configuration", "DEL VariableDeclarationFragment", "DEL TextElement: robots.txt passed by URL (usually pointing to a local file) in", "DEL SimpleName: rules", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: error", "DEL Modifier: private", "DEL SimpleName: RobotRulesParser", "DEL SimpleName: contentLength", "DEL SimpleName: stringifyException", "DEL MethodInvocation", "DEL SimpleName: contentLength", "DEL SimpleName: rules", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL StringLiteral: \"*\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TagElement: @link", "DEL StringLiteral: \"http.agent.name\"", "DEL Javadoc", "DEL TagElement: @link", "DEL SimpleName: get", "DEL SimpleName: url", "DEL SimpleName: rules", "DEL SimpleName: url", "DEL Assignment: =", "DEL SimpleName: openStream", "DEL SimpleName: robotsBytes", "DEL SimpleName: close", "DEL SimpleName: conf", "DEL MethodDeclaration", "DEL TextElement: location of the robots.txt file", "DEL SimpleName: TestRobotRulesParser", "DEL Block", "DEL SimpleName: TestRobotRulesParser", "DEL SingleVariableDeclaration", "DEL SimpleName: robotParser", "DEL SimpleName: LOG", "DEL Modifier: public", "DEL SimpleName: robotsBytes", "DEL SimpleName: openConnection", "DEL SimpleName: url", "DEL StringLiteral: \"Failed to open robots.txt file \"", "DEL SimpleType: RobotRulesParser", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL ThisExpression", "DEL IfStatement", "DEL SimpleName: e", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleType: InputStream", "DEL Block", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: RobotRulesParser", "DEL VariableDeclarationFragment", "DEL SimpleName: openStream", "DEL TryStatement", "DEL SimpleName: openStream", "DEL StringLiteral: \"http.agent.name\"", "DEL SimpleName: read", "DEL NullLiteral", "DEL TagElement: @param", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: StringUtils", "DEL SimpleName: getRobotRulesSet", "DEL SimpleName: conf", "DEL SimpleName: InputStream", "DEL SimpleType: IOException", "DEL SimpleName: conf", "DEL SimpleType: BaseRobotRules", "DEL TextElement:  implementation which expects the location of the", "DEL ExpressionStatement", "DEL SimpleName: robotsBytes", "DEL VariableDeclarationStatement", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL Assignment: =", "DEL Modifier: static", "DEL Javadoc", "DEL TagElement", "DEL StringLiteral: \"http.agent.name\"", "DEL MethodInvocation", "DEL TextElement: .", "DEL TypeDeclaration: class", "DEL SimpleName: BaseRobotRules", "DEL SimpleName: url", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: TestRobotRulesParser", "DEL VariableDeclarationFragment", "DEL SimpleName: System", "DEL Modifier: static", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL SimpleName: main", "DEL Block", "DEL SimpleName: Configuration", "DEL SimpleName: run", "DEL SimpleName: conf", "DEL SimpleName: conf", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: res", "DEL SimpleName: TestRobotRulesParser", "DEL SimpleName: NutchConfiguration", "DEL ClassInstanceCreation", "DEL SimpleType: Configuration", "DEL SimpleName: create", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: conf", "DEL SimpleName: String", "DEL SimpleName: exit", "DEL SimpleName: res", "DEL SimpleName: args", "DEL SimpleName: args", "DEL SimpleName: ToolRunner", "DEL ArrayType: String[]", "DEL SimpleType: String", "DEL ExpressionStatement"]}]}}, {"RobotRulesParser_diff": {"operations": ["Move ImportDeclaration(47) into CompilationUnit(592) at 19", "Move MethodDeclaration(416) into TypeDeclaration: class(591) at 20", "Update QualifiedName: java.util.Arrays(30) to java.util.ArrayList", "Update QualifiedName: org.apache.hadoop.util.Tool(50) to org.apache.hadoop.conf.Configurable", "Update QualifiedName: org.apache.hadoop.util.ToolRunner(52) to com.google.common.io.Files", "Update SimpleType: Tool(79) to Configurable", "Insert MethodDeclaration(590) into TypeDeclaration: class(591) at 19", "Update SimpleName: Tool(78) to Configurable", "Update Modifier: protected(169) to private", "Insert Modifier: abstract(425) into MethodDeclaration(437) at 1", "Move SimpleType: BaseRobotRules(819) into MethodDeclaration(437) at 3", "Insert SimpleName: getRobotRulesSet(428) into MethodDeclaration(437) at 3", "Move SingleVariableDeclaration(824) into MethodDeclaration(437) at 5", "Move SingleVariableDeclaration(828) into MethodDeclaration(437) at 6", "Move Javadoc(526) into MethodDeclaration(590) at 0", "Move Modifier: public(527) into MethodDeclaration(590) at 1", "Update Modifier: public(543) to static", "Move Modifier: public(543) into MethodDeclaration(590) at 2", "Update PrimitiveType: int(544) to void", "Move PrimitiveType: int(544) into MethodDeclaration(590) at 3", "Update SimpleName: run(545) to main", "Move SimpleName: run(545) into MethodDeclaration(590) at 4", "Move SingleVariableDeclaration(551) into MethodDeclaration(590) at 5", "Move Block(768) into MethodDeclaration(590) at 6", "Move ArrayType: String[](350) into SingleVariableDeclaration(450) at 0", "Update SimpleName: args(550) to argv", "Insert TryStatement(588) into Block(589) at 1", "Update TextElement: the given URL, parse it and return the set of robot rules applicable for(515) to command-line main for testing ", "Update InfixExpression: <(554) to !=", "Insert Block(577) into TryStatement(588) at 0", "Move CatchClause(764) into TryStatement(588) at 1", "Update QualifiedName: args.length(552) to argv.length", "Update NumberLiteral: 2(553) to 3", "Insert ExpressionStatement(458) into Block(490) at 0", "Insert ExpressionStatement(463) into Block(490) at 1", "Insert ExpressionStatement(468) into Block(490) at 2", "Insert ExpressionStatement(473) into Block(490) at 3", "Insert ExpressionStatement(478) into Block(490) at 4", "Move ExpressionStatement(582) into Block(490) at 5", "Move VariableDeclarationStatement(603) into Block(577) at 0", "Insert VariableDeclarationStatement(522) into Block(577) at 1", "Move VariableDeclarationStatement(662) into Block(577) at 2", "Move VariableDeclarationStatement(667) into Block(577) at 3", "Move WhileStatement(740) into Block(577) at 4", "Move ExpressionStatement(744) into Block(577) at 5", "Insert MethodInvocation(457) into ExpressionStatement(458) at 0", "Insert MethodInvocation(462) into ExpressionStatement(463) at 0", "Insert MethodInvocation(467) into ExpressionStatement(468) at 0", "Insert MethodInvocation(472) into ExpressionStatement(473) at 0", "Insert MethodInvocation(477) into ExpressionStatement(478) at 0", "Move ArrayType: byte[](845) into VariableDeclarationStatement(506) at 0", "Move SimpleType: BaseRobotRules(639) into VariableDeclarationStatement(522) at 0", "Insert VariableDeclarationFragment(521) into VariableDeclarationStatement(522) at 1", "Move SimpleType: String(574) into VariableDeclarationStatement(546) at 0", "Insert Block(571) into WhileStatement(572) at 1", "Move SimpleType: Exception(927) into SingleVariableDeclaration(581) at 0", "Insert QualifiedName: System.err(454) into MethodInvocation(457) at 0", "Insert SimpleName: println(455) into MethodInvocation(457) at 1", "Insert StringLiteral: \"Usage: RobotRulesParser <robots-file> <url-file> <agent-names>\\n\"(456) into MethodInvocation(457) at 2", "Insert QualifiedName: System.err(459) into MethodInvocation(462) at 0", "Insert SimpleName: println(460) into MethodInvocation(462) at 1", "Insert StringLiteral: \"\\tThe <robots-file> will be parsed as a robots.txt file,\"(461) into MethodInvocation(462) at 2", "Insert QualifiedName: System.err(464) into MethodInvocation(467) at 0", "Insert SimpleName: println(465) into MethodInvocation(467) at 1", "Insert StringLiteral: \"\\tusing the given <agent-name> to select rules.  URLs \"(466) into MethodInvocation(467) at 2", "Insert QualifiedName: System.err(469) into MethodInvocation(472) at 0", "Insert SimpleName: println(470) into MethodInvocation(472) at 1", "Insert StringLiteral: \"\\twill be read (one per line) from <url-file>, and tested\"(471) into MethodInvocation(472) at 2", "Insert QualifiedName: System.err(474) into MethodInvocation(477) at 0", "Insert SimpleName: println(475) into MethodInvocation(477) at 1", "Insert StringLiteral: \"\\tagainst the rules. Multiple agent names can be provided using\"(476) into MethodInvocation(477) at 2", "Insert StringLiteral: \"\\tcomma as a delimiter without any spaces.\"(481) into MethodInvocation(482) at 2", "Update SimpleName: robotsFile(595) to robotsBytes", "Insert MethodInvocation(504) into VariableDeclarationFragment(505) at 1", "Insert SimpleName: rules(509) into VariableDeclarationFragment(521) at 0", "Insert MethodInvocation(520) into VariableDeclarationFragment(521) at 1", "Move MethodInvocation(673) into VariableDeclarationFragment(545) at 1", "Move ExpressionStatement(724) into Block(571) at 0", "Move ExpressionStatement(738) into Block(571) at 1", "Insert SimpleName: Files(496) into MethodInvocation(504) at 0", "Insert SimpleName: toByteArray(497) into MethodInvocation(504) at 1", "Insert ClassInstanceCreation(503) into MethodInvocation(504) at 2", "Insert SimpleName: robotParser(510) into MethodInvocation(520) at 0", "Insert SimpleName: parseContent(511) into MethodInvocation(520) at 1", "Insert ArrayAccess(514) into MethodInvocation(520) at 2", "Insert SimpleName: robotsBytes(515) into MethodInvocation(520) at 3", "Insert StringLiteral: \"text/plain\"(516) into MethodInvocation(520) at 4", "Insert ArrayAccess(519) into MethodInvocation(520) at 5", "Update SimpleName: error(751) to e", "Update SimpleName: e(755) to printStackTrace", "Move SimpleName: e(755) into MethodInvocation(584) at 2", "Move SimpleType: File(594) into ClassInstanceCreation(503) at 0", "Move ArrayAccess(600) into ClassInstanceCreation(503) at 1", "Update SimpleName: args(609) to argv", "Move SimpleName: args(609) into ArrayAccess(514) at 0", "Update NumberLiteral: 1(610) to 0", "Move NumberLiteral: 1(610) into ArrayAccess(514) at 1", "Update SimpleName: args(621) to argv", "Move SimpleName: args(621) into ArrayAccess(519) at 0", "Move NumberLiteral: 2(622) into ArrayAccess(519) at 1", "Insert ArrayAccess(532) into ClassInstanceCreation(533) at 1", "Update SimpleName: args(598) to argv", "Insert SimpleName: argv(530) into ArrayAccess(532) at 0", "Insert NumberLiteral: 1(531) into ArrayAccess(532) at 1", "Insert ParenthesizedExpression(559) into InfixExpression: +(562) at 0", "Insert ConditionalExpression(558) into ParenthesizedExpression(559) at 0", "Move MethodInvocation(704) into ConditionalExpression(558) at 0", "Insert StringLiteral: \"allowed\"(556) into ConditionalExpression(558) at 1", "Insert StringLiteral: \"not allowed\"(557) into ConditionalExpression(558) at 2", "Delete QualifiedName: java.io.IOException(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.InputStream(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.net.MalformedURLException(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.util.HashSet(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.util.Set(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.util.StringUtils(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.nutch.util.NutchConfiguration(54)", "Delete ImportDeclaration(55)", "Delete TextElement: Protocol-specific implementations have to implement the method(69)", "Delete SimpleName: getRobotRulesSet(70)", "Delete TagElement: @link(71)", "Delete TextElement: .(72)", "Delete TextElement: set of host names or IPs to be explicitly excluded from robots.txt checking (181)", "Delete TagElement(182)", "Delete Javadoc(183)", "Delete Modifier: protected(184)", "Delete SimpleName: Set(185)", "Delete SimpleType: Set(186)", "Delete SimpleName: String(187)", "Delete SimpleType: String(188)", "Delete ParameterizedType: Set<String>(189)", "Delete SimpleName: whiteList(190)", "Delete SimpleName: HashSet(191)", "Delete SimpleType: HashSet(192)", "Delete SimpleName: String(193)", "Delete SimpleType: String(194)", "Delete ParameterizedType: HashSet<String>(195)", "Delete ClassInstanceCreation(196)", "Delete VariableDeclarationFragment(197)", "Delete FieldDeclaration(198)", "Delete SimpleName: confWhiteList(351)", "Delete SimpleName: conf(352)", "Delete SimpleName: getStrings(353)", "Delete StringLiteral: \"http.robot.rules.whitelist\"(354)", "Delete MethodInvocation(355)", "Delete VariableDeclarationFragment(356)", "Delete VariableDeclarationStatement(357)", "Delete SimpleName: confWhiteList(358)", "Delete NullLiteral(359)", "Delete InfixExpression: !=(360)", "Delete QualifiedName: confWhiteList.length(361)", "Delete NumberLiteral: 0(362)", "Delete InfixExpression: >(363)", "Delete InfixExpression: &&(364)", "Delete SimpleName: whiteList(365)", "Delete SimpleName: addAll(366)", "Delete SimpleName: Arrays(367)", "Delete SimpleName: asList(368)", "Delete SimpleName: confWhiteList(369)", "Delete MethodInvocation(370)", "Delete MethodInvocation(371)", "Delete ExpressionStatement(372)", "Delete SimpleName: LOG(373)", "Delete SimpleName: info(374)", "Delete StringLiteral: \"Whitelisted hosts: \"(375)", "Delete SimpleName: whiteList(376)", "Delete InfixExpression: +(377)", "Delete MethodInvocation(378)", "Delete ExpressionStatement(379)", "Delete Block(380)", "Delete IfStatement(381)", "Delete TextElement: Check whether a URL belongs to a whitelisted host.(398)", "Delete TagElement(399)", "Delete Javadoc(400)", "Delete PrimitiveType: boolean(402)", "Delete SimpleName: isWhiteListed(403)", "Delete SimpleName: URL(404)", "Delete SimpleType: URL(405)", "Delete SimpleName: url(406)", "Delete SingleVariableDeclaration(407)", "Delete SimpleName: whiteList(408)", "Delete SimpleName: contains(409)", "Delete SimpleName: url(410)", "Delete SimpleName: getHost(411)", "Delete MethodInvocation(412)", "Delete MethodInvocation(413)", "Delete ReturnStatement(414)", "Delete Block(415)", "Delete TextElement: Fetch robots.txt (or it's protocol-specific equivalent) which applies to(514)", "Delete TextElement: the configured agent name(s).(516)", "Delete SimpleName: protocol(518)", "Delete TextElement: protocol implementation(519)", "Delete TagElement: @param(520)", "Delete SimpleName: url(521)", "Delete TextElement: URL to be checked whether fetching is allowed by robot rules(522)", "Delete TagElement: @param(523)", "Delete TextElement:  robot rules(524)", "Delete TagElement: @return(525)", "Delete SimpleName: String(546)", "Delete SimpleType: String(547)", "Delete Dimension(548)", "Delete ArrayType: String[](549)", "Delete SimpleName: s(580)", "Delete SimpleName: String(555)", "Delete SimpleType: String(556)", "Delete Dimension(557)", "Delete ArrayType: String[](558)", "Delete SimpleName: help(559)", "Delete StringLiteral: \"Usage: RobotRulesParser <robots-file> <url-file> [<agent-names>]\\n\"(560)", "Delete StringLiteral: \"\\tThe <robots-file> will be parsed as a robots.txt file,\"(561)", "Delete StringLiteral: \"\\tusing the given <agent-name> to select rules.\"(562)", "Delete StringLiteral: \"\\tURLs will be read (one per line) from <url-file>,\"(563)", "Delete StringLiteral: \"\\tand tested against the rules.\"(564)", "Delete StringLiteral: \"\\tMultiple agent names can be provided using\"(565)", "Delete StringLiteral: \"\\tcomma as a delimiter without any spaces.\"(566)", "Delete StringLiteral: \"\\tIf no agent name is given the property http.agent.name\"(567)", "Delete StringLiteral: \"\\tis used. If http.agent.name is empty, robots.txt is checked\"(568)", "Delete StringLiteral: \"\\tfor rules assigned to the user agent `*' (meaning any other).\"(569)", "Delete ArrayInitializer(570)", "Delete VariableDeclarationFragment(571)", "Delete VariableDeclarationStatement(572)", "Delete SimpleName: s(575)", "Delete SingleVariableDeclaration(576)", "Delete SimpleName: help(577)", "Delete Block(583)", "Delete EnhancedForStatement(584)", "Delete SimpleName: File(596)", "Delete SimpleType: File(597)", "Delete ClassInstanceCreation(601)", "Delete SimpleName: urlFile(658)", "Delete SimpleName: String(663)", "Delete SimpleType: String(664)", "Delete SimpleName: status(719)", "Delete SimpleName: URL(679)", "Delete SimpleType: URL(680)", "Delete SimpleName: url(681)", "Delete SimpleName: URL(682)", "Delete SimpleType: URL(683)", "Delete SimpleName: testPath(684)", "Delete ClassInstanceCreation(685)", "Delete VariableDeclarationFragment(686)", "Delete VariableDeclarationStatement(687)", "Delete SimpleName: String(688)", "Delete SimpleType: String(689)", "Delete SimpleName: status(690)", "Delete VariableDeclarationFragment(691)", "Delete VariableDeclarationStatement(692)", "Delete SimpleName: isWhiteListed(693)", "Delete SimpleName: url(694)", "Delete MethodInvocation(695)", "Delete SimpleName: status(696)", "Delete StringLiteral: \"whitelisted\"(697)", "Delete Assignment: =(698)", "Delete ExpressionStatement(699)", "Delete Block(700)", "Delete SimpleName: status(705)", "Delete StringLiteral: \"allowed\"(706)", "Delete Assignment: =(707)", "Delete ExpressionStatement(708)", "Delete Block(709)", "Delete SimpleName: status(710)", "Delete StringLiteral: \"not allowed\"(711)", "Delete Assignment: =(712)", "Delete ExpressionStatement(713)", "Delete Block(714)", "Delete IfStatement(715)", "Delete IfStatement(716)", "Delete Block(725)", "Delete SimpleName: MalformedURLException(726)", "Delete SimpleType: MalformedURLException(727)", "Delete SimpleName: e(728)", "Delete SingleVariableDeclaration(729)", "Delete Block(730)", "Delete CatchClause(731)", "Delete TryStatement(732)", "Delete Block(739)", "Delete SimpleName: IOException(746)", "Delete SimpleType: IOException(747)", "Delete SimpleName: LOG(750)", "Delete StringLiteral: \"Failed to run: \"(752)", "Delete SimpleName: StringUtils(753)", "Delete SimpleName: stringifyException(754)", "Delete MethodInvocation(756)", "Delete InfixExpression: +(757)", "Delete NumberLiteral: 1(760)", "Delete PrefixExpression: -(761)", "Delete ReturnStatement(762)", "Delete SimpleName: File(604)", "Delete SimpleType: File(605)", "Delete SimpleName: urlFile(606)", "Delete SimpleName: File(607)", "Delete SimpleType: File(608)", "Delete ArrayAccess(611)", "Delete ClassInstanceCreation(612)", "Delete VariableDeclarationFragment(613)", "Delete VariableDeclarationStatement(614)", "Delete QualifiedName: args.length(615)", "Delete NumberLiteral: 2(616)", "Delete InfixExpression: >(617)", "Delete SimpleName: String(618)", "Delete SimpleType: String(619)", "Delete SimpleName: agents(620)", "Delete ArrayAccess(623)", "Delete VariableDeclarationFragment(624)", "Delete VariableDeclarationStatement(625)", "Delete SimpleName: conf(626)", "Delete SimpleName: set(627)", "Delete StringLiteral: \"http.agent.name\"(628)", "Delete SimpleName: agents(629)", "Delete MethodInvocation(630)", "Delete ExpressionStatement(631)", "Delete SimpleName: setConf(632)", "Delete SimpleName: conf(633)", "Delete MethodInvocation(634)", "Delete ExpressionStatement(635)", "Delete Block(636)", "Delete IfStatement(637)", "Delete SimpleName: rules(640)", "Delete SimpleName: getRobotRulesSet(641)", "Delete NullLiteral(642)", "Delete SimpleName: robotsFile(643)", "Delete SimpleName: toURI(644)", "Delete MethodInvocation(645)", "Delete SimpleName: toURL(646)", "Delete MethodInvocation(647)", "Delete MethodInvocation(648)", "Delete VariableDeclarationFragment(649)", "Delete VariableDeclarationStatement(650)", "Delete SimpleName: testPath(668)", "Delete Assignment: =(674)", "Delete ExpressionStatement(675)", "Delete Block(745)", "Delete TryStatement(765)", "Delete NumberLiteral: 0(766)", "Delete ReturnStatement(767)", "Delete Modifier: abstract(528)", "Delete SimpleName: BaseRobotRules(529)", "Delete SimpleType: BaseRobotRules(530)", "Delete SimpleName: getRobotRulesSet(531)", "Delete SimpleName: Protocol(532)", "Delete SimpleType: Protocol(533)", "Delete SimpleName: protocol(534)", "Delete SingleVariableDeclaration(535)", "Delete SimpleName: URL(536)", "Delete SimpleType: URL(537)", "Delete SimpleName: url(538)", "Delete SingleVariableDeclaration(539)", "Delete MethodDeclaration(540)", "Delete SimpleName: Override(541)", "Delete MarkerAnnotation(542)", "Delete MethodDeclaration(769)", "Delete SimpleName: RobotRulesParser(770)", "Delete TagElement: @link(771)", "Delete TextElement:  implementation which expects the location of the(772)", "Delete TextElement: robots.txt passed by URL (usually pointing to a local file) in(773)", "Delete SimpleName: getRobotRulesSet(774)", "Delete TagElement: @link(775)", "Delete TextElement: .(776)", "Delete TagElement(777)", "Delete Javadoc(778)", "Delete Modifier: private(779)", "Delete Modifier: static(780)", "Delete SimpleName: TestRobotRulesParser(781)", "Delete SimpleName: RobotRulesParser(782)", "Delete SimpleType: RobotRulesParser(783)", "Delete Modifier: public(784)", "Delete SimpleName: TestRobotRulesParser(785)", "Delete SimpleName: Configuration(786)", "Delete SimpleType: Configuration(787)", "Delete SimpleName: conf(788)", "Delete SingleVariableDeclaration(789)", "Delete SimpleName: conf(790)", "Delete SimpleName: get(791)", "Delete StringLiteral: \"http.agent.name\"(792)", "Delete MethodInvocation(793)", "Delete NullLiteral(794)", "Delete InfixExpression: ==(795)", "Delete SimpleName: conf(796)", "Delete SimpleName: set(797)", "Delete StringLiteral: \"http.agent.name\"(798)", "Delete StringLiteral: \"*\"(799)", "Delete MethodInvocation(800)", "Delete ExpressionStatement(801)", "Delete Block(802)", "Delete IfStatement(803)", "Delete SimpleName: setConf(804)", "Delete SimpleName: conf(805)", "Delete MethodInvocation(806)", "Delete ExpressionStatement(807)", "Delete Block(808)", "Delete MethodDeclaration(809)", "Delete SimpleName: protocol(810)", "Delete TextElement:   (ignored)(811)", "Delete TagElement: @param(812)", "Delete SimpleName: url(813)", "Delete TextElement: location of the robots.txt file(814)", "Delete TagElement: @param(815)", "Delete Javadoc(816)", "Delete Modifier: public(817)", "Delete SimpleName: getRobotRulesSet(820)", "Delete SimpleName: BaseRobotRules(829)", "Delete SimpleType: BaseRobotRules(830)", "Delete SimpleName: rules(831)", "Delete VariableDeclarationFragment(832)", "Delete VariableDeclarationStatement(833)", "Delete PrimitiveType: int(834)", "Delete SimpleName: contentLength(835)", "Delete SimpleName: url(836)", "Delete SimpleName: openConnection(837)", "Delete MethodInvocation(838)", "Delete SimpleName: getContentLength(839)", "Delete MethodInvocation(840)", "Delete VariableDeclarationFragment(841)", "Delete VariableDeclarationStatement(842)", "Delete SimpleName: robotsBytes(846)", "Delete PrimitiveType: byte(847)", "Delete Dimension(848)", "Delete ArrayType: byte[](849)", "Delete SimpleName: contentLength(850)", "Delete ArrayCreation(851)", "Delete VariableDeclarationFragment(852)", "Delete VariableDeclarationStatement(853)", "Delete SimpleName: InputStream(854)", "Delete SimpleType: InputStream(855)", "Delete SimpleName: openStream(856)", "Delete SimpleName: url(857)", "Delete SimpleName: openStream(858)", "Delete MethodInvocation(859)", "Delete VariableDeclarationFragment(860)", "Delete VariableDeclarationStatement(861)", "Delete SimpleName: openStream(862)", "Delete SimpleName: read(863)", "Delete SimpleName: robotsBytes(864)", "Delete MethodInvocation(865)", "Delete ExpressionStatement(866)", "Delete SimpleName: openStream(867)", "Delete SimpleName: close(868)", "Delete MethodInvocation(869)", "Delete ExpressionStatement(870)", "Delete SimpleName: rules(871)", "Delete SimpleName: robotParser(872)", "Delete SimpleName: parseContent(873)", "Delete SimpleName: url(874)", "Delete SimpleName: toString(875)", "Delete MethodInvocation(876)", "Delete SimpleName: robotsBytes(877)", "Delete StringLiteral: \"text/plain\"(878)", "Delete ThisExpression(879)", "Delete SimpleName: conf(880)", "Delete FieldAccess(881)", "Delete SimpleName: get(882)", "Delete StringLiteral: \"http.agent.name\"(883)", "Delete MethodInvocation(884)", "Delete MethodInvocation(885)", "Delete Assignment: =(886)", "Delete ExpressionStatement(887)", "Delete Block(888)", "Delete SimpleName: IOException(889)", "Delete SimpleType: IOException(890)", "Delete SimpleName: e(891)", "Delete SingleVariableDeclaration(892)", "Delete SimpleName: LOG(893)", "Delete SimpleName: error(894)", "Delete StringLiteral: \"Failed to open robots.txt file \"(895)", "Delete SimpleName: url(896)", "Delete SimpleName: StringUtils(897)", "Delete SimpleName: stringifyException(898)", "Delete SimpleName: e(899)", "Delete MethodInvocation(900)", "Delete InfixExpression: +(901)", "Delete MethodInvocation(902)", "Delete ExpressionStatement(903)", "Delete SimpleName: rules(904)", "Delete SimpleName: EMPTY_RULES(905)", "Delete Assignment: =(906)", "Delete ExpressionStatement(907)", "Delete Block(908)", "Delete CatchClause(909)", "Delete TryStatement(910)", "Delete SimpleName: rules(911)", "Delete ReturnStatement(912)", "Delete Block(913)", "Delete MethodDeclaration(914)", "Delete TypeDeclaration: class(915)", "Delete Modifier: public(916)", "Delete Modifier: static(917)", "Delete PrimitiveType: void(918)", "Delete SimpleName: main(919)", "Delete SimpleName: String(920)", "Delete SimpleType: String(921)", "Delete Dimension(922)", "Delete ArrayType: String[](923)", "Delete SimpleName: args(924)", "Delete SingleVariableDeclaration(925)", "Delete SimpleName: Configuration(928)", "Delete SimpleType: Configuration(929)", "Delete SimpleName: conf(930)", "Delete SimpleName: NutchConfiguration(931)", "Delete SimpleName: create(932)", "Delete MethodInvocation(933)", "Delete VariableDeclarationFragment(934)", "Delete VariableDeclarationStatement(935)", "Delete PrimitiveType: int(936)", "Delete SimpleName: res(937)", "Delete SimpleName: ToolRunner(938)", "Delete SimpleName: run(939)", "Delete SimpleName: conf(940)", "Delete SimpleName: TestRobotRulesParser(941)", "Delete SimpleType: TestRobotRulesParser(942)", "Delete SimpleName: conf(943)", "Delete ClassInstanceCreation(944)", "Delete SimpleName: args(945)", "Delete MethodInvocation(946)", "Delete VariableDeclarationFragment(947)", "Delete VariableDeclarationStatement(948)", "Delete SimpleName: System(949)", "Delete SimpleName: exit(950)", "Delete SimpleName: res(951)", "Delete MethodInvocation(952)", "Delete ExpressionStatement(953)", "Delete Block(954)", "Delete MethodDeclaration(955)"]}}, {"SegmentChecker_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL ReturnStatement", "DEL SimpleType: FileSystem", "DEL SimpleType: Path", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL PrimitiveType: boolean", "DEL SimpleName: segment", "DEL BooleanLiteral: true", "DEL Block", "DEL IfStatement", "DEL TagElement", "DEL SimpleName: fs", "DEL SimpleType: Path", "DEL SimpleName: segment", "DEL SimpleName: Path", "DEL ClassInstanceCreation", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL SimpleName: isParsed", "DEL SimpleName: FileSystem", "DEL SimpleName: fs", "DEL BooleanLiteral: false", "DEL MethodDeclaration", "DEL Modifier: public", "DEL TextElement: Check the segment to see if it is has been parsed before.", "DEL QualifiedName: CrawlDatum.PARSE_DIR_NAME", "DEL SimpleName: Path", "DEL SimpleName: exists"]}]}}, {"SegmentChecker_diff": {"operations": ["Delete TextElement: Check the segment to see if it is has been parsed before.(326)", "Delete TagElement(327)", "Delete Javadoc(328)", "Delete Modifier: public(329)", "Delete Modifier: static(330)", "Delete PrimitiveType: boolean(331)", "Delete SimpleName: isParsed(332)", "Delete SimpleName: Path(333)", "Delete SimpleType: Path(334)", "Delete SimpleName: segment(335)", "Delete SingleVariableDeclaration(336)", "Delete SimpleName: FileSystem(337)", "Delete SimpleType: FileSystem(338)", "Delete SimpleName: fs(339)", "Delete SingleVariableDeclaration(340)", "Delete SimpleName: IOException(341)", "Delete SimpleType: IOException(342)", "Delete SimpleName: fs(343)", "Delete SimpleName: exists(344)", "Delete SimpleName: Path(345)", "Delete SimpleType: Path(346)", "Delete SimpleName: segment(347)", "Delete QualifiedName: CrawlDatum.PARSE_DIR_NAME(348)", "Delete ClassInstanceCreation(349)", "Delete MethodInvocation(350)", "Delete BooleanLiteral: true(351)", "Delete ReturnStatement(352)", "Delete IfStatement(353)", "Delete BooleanLiteral: false(354)", "Delete ReturnStatement(355)", "Delete Block(356)", "Delete MethodDeclaration(357)"]}}, {"ConfManager_cluster": {"actions": []}}, {"ConfManager_diff": {"operations": []}}, {"JobManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from org.apache.nutch.service.model.response.JobConfig to org.apache.nutch.service.model.request.JobConfig", "operations": ["UPD QualifiedName: org.apache.nutch.service.model.response.JobConfig from org.apache.nutch.service.model.response.JobConfig to org.apache.nutch.service.model.request.JobConfig"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 11", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 11", "INS SimpleName: INVERTLINKS to EnumConstantDeclaration at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 12", "operations": ["INS SimpleName: DEDUP to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 12"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: jobConfig to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Creates specified job to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  JobInfo to TagElement: @return at 0"]}, {"root": "UPDATE from String to JobInfo", "operations": ["UPD SimpleName: String from String to JobInfo", "UPD SimpleType: String from String to JobInfo"]}]}}, {"JobManager_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(122) at 2", "Insert QualifiedName: java.util.Map(18) into ImportDeclaration(19) at 0", "Update QualifiedName: org.apache.nutch.service.model.response.JobConfig(18) to org.apache.nutch.service.model.request.JobConfig", "Insert EnumConstantDeclaration(48) into EnumDeclaration(51) at 11", "Insert EnumConstantDeclaration(50) into EnumDeclaration(51) at 12", "Insert Javadoc(87) into MethodDeclaration(96) at 0", "Update SimpleType: String(77) to JobInfo", "Insert SimpleName: INVERTLINKS(47) into EnumConstantDeclaration(48) at 0", "Insert SimpleName: DEDUP(49) into EnumConstantDeclaration(50) at 0", "Insert TagElement(82) into Javadoc(87) at 0", "Insert TagElement: @param(84) into Javadoc(87) at 1", "Insert TagElement: @return(86) into Javadoc(87) at 2", "Update SimpleName: String(76) to JobInfo", "Insert TextElement: Creates specified job(81) into TagElement(82) at 0", "Insert SimpleName: jobConfig(83) into TagElement: @param(84) at 0", "Insert TextElement:  JobInfo(85) into TagElement: @return(86) at 0"]}}, {"NutchServer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.util.concurrent.BlockingQueue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.nutch.service.impl.JobFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.nutch.service.impl.JobManagerImpl to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: org.apache.nutch.service.impl.NutchServerPoolExecutor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS QualifiedName: org.apache.nutch.service.resources.DbResource to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 23"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS ImportDeclaration to CompilationUnit at 27", "INS QualifiedName: com.google.common.collect.Queues to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: jobManager to VariableDeclarationFragment at 0", "INS SimpleName: JobManager to SimpleType: JobManager at 0", "INS SimpleType: JobManager to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 14"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: JobManager to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: getJobManager to MethodDeclaration at 2", "INS SimpleName: JobManager to SimpleType: JobManager at 0", "INS SimpleName: jobManager to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: running to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: isRunning to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 26"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS Block to MethodDeclaration at 3", "INS SimpleName: started to ReturnStatement at 0", "INS SimpleName: getStarted to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS PrimitiveType: long to MethodDeclaration at 1"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private", "UPD Modifier: public from public to private"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: newArrayBlockingQueue to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Runnable to ParameterizedType: BlockingQueue<Runnable> at 1", "INS SimpleName: Runnable to SimpleType: Runnable at 0", "INS SimpleName: JOB_CAPACITY to MethodInvocation at 2", "INS SimpleType: BlockingQueue to ParameterizedType: BlockingQueue<Runnable> at 0", "INS SimpleName: Queues to MethodInvocation at 0", "INS SimpleName: BlockingQueue to SimpleType: BlockingQueue at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: runnables to VariableDeclarationFragment at 0", "INS ParameterizedType: BlockingQueue<Runnable> to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS QualifiedName: TimeUnit.HOURS to ClassInstanceCreation at 4", "INS NumberLiteral: 1 to ClassInstanceCreation at 3", "INS NumberLiteral: 10 to ClassInstanceCreation at 1", "INS SimpleName: runnables to ClassInstanceCreation at 5", "INS SimpleName: executor to VariableDeclarationFragment at 0", "INS SimpleType: NutchServerPoolExecutor to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: NutchServerPoolExecutor to SimpleType: NutchServerPoolExecutor at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: NutchServerPoolExecutor to VariableDeclarationStatement at 0", "INS SimpleName: NutchServerPoolExecutor to SimpleType: NutchServerPoolExecutor at 0", "INS SimpleName: JOB_CAPACITY to ClassInstanceCreation at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: JobFactory to SimpleType: JobFactory at 0", "INS SimpleName: JobManagerImpl to SimpleType: JobManagerImpl at 0", "INS SimpleName: jobManager to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS SimpleType: JobManagerImpl to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS SimpleType: JobFactory to ClassInstanceCreation at 0", "INS SimpleName: executor to ClassInstanceCreation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: configManager to ClassInstanceCreation at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS TypeLiteral to MethodInvocation at 2", "INS SimpleType: DbResource to TypeLiteral at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: resources to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: DbResource to SimpleType: DbResource at 0"]}]}}, {"NutchServer_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(681) at 3", "Insert ImportDeclaration(23) into CompilationUnit(681) at 4", "Insert ImportDeclaration(53) into CompilationUnit(681) at 19", "Insert ImportDeclaration(55) into CompilationUnit(681) at 20", "Insert ImportDeclaration(57) into CompilationUnit(681) at 21", "Insert ImportDeclaration(61) into CompilationUnit(681) at 23", "Insert ImportDeclaration(69) into CompilationUnit(681) at 27", "Insert QualifiedName: java.util.concurrent.BlockingQueue(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: java.util.concurrent.TimeUnit(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.apache.nutch.service.impl.JobFactory(52) into ImportDeclaration(53) at 0", "Insert QualifiedName: org.apache.nutch.service.impl.JobManagerImpl(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: org.apache.nutch.service.impl.NutchServerPoolExecutor(56) into ImportDeclaration(57) at 0", "Insert QualifiedName: org.apache.nutch.service.resources.DbResource(60) into ImportDeclaration(61) at 0", "Insert QualifiedName: com.google.common.collect.Queues(68) into ImportDeclaration(69) at 0", "Insert FieldDeclaration(176) into TypeDeclaration: class(680) at 14", "Insert MethodDeclaration(498) into TypeDeclaration: class(680) at 25", "Insert MethodDeclaration(505) into TypeDeclaration: class(680) at 26", "Insert MethodDeclaration(512) into TypeDeclaration: class(680) at 27", "Insert Modifier: private(171) into FieldDeclaration(176) at 0", "Insert SimpleType: JobManager(173) into FieldDeclaration(176) at 1", "Insert VariableDeclarationFragment(175) into FieldDeclaration(176) at 2", "Update Modifier: public(341) to private", "Update Modifier: public(386) to private", "Insert Modifier: public(491) into MethodDeclaration(498) at 0", "Insert SimpleType: JobManager(493) into MethodDeclaration(498) at 1", "Insert SimpleName: getJobManager(494) into MethodDeclaration(498) at 2", "Insert Block(497) into MethodDeclaration(498) at 3", "Insert Modifier: public(499) into MethodDeclaration(505) at 0", "Insert PrimitiveType: boolean(500) into MethodDeclaration(505) at 1", "Insert SimpleName: isRunning(501) into MethodDeclaration(505) at 2", "Insert Block(504) into MethodDeclaration(505) at 3", "Insert Modifier: public(506) into MethodDeclaration(512) at 0", "Insert PrimitiveType: long(507) into MethodDeclaration(512) at 1", "Insert SimpleName: getStarted(508) into MethodDeclaration(512) at 2", "Insert Block(511) into MethodDeclaration(512) at 3", "Insert SimpleName: JobManager(172) into SimpleType: JobManager(173) at 0", "Insert SimpleName: jobManager(174) into VariableDeclarationFragment(175) at 0", "Insert VariableDeclarationStatement(218) into Block(302) at 1", "Insert VariableDeclarationStatement(231) into Block(302) at 2", "Insert ExpressionStatement(242) into Block(302) at 3", "Insert ExpressionStatement(444) into Block(447) at 3", "Insert SimpleName: JobManager(492) into SimpleType: JobManager(493) at 0", "Insert ReturnStatement(496) into Block(497) at 0", "Insert ReturnStatement(503) into Block(504) at 0", "Insert ReturnStatement(510) into Block(511) at 0", "Insert ParameterizedType: BlockingQueue<Runnable>(211) into VariableDeclarationStatement(218) at 0", "Insert VariableDeclarationFragment(217) into VariableDeclarationStatement(218) at 1", "Insert SimpleType: NutchServerPoolExecutor(220) into VariableDeclarationStatement(231) at 0", "Insert VariableDeclarationFragment(230) into VariableDeclarationStatement(231) at 1", "Insert Assignment: =(241) into ExpressionStatement(242) at 0", "Insert MethodInvocation(443) into ExpressionStatement(444) at 0", "Insert SimpleName: jobManager(495) into ReturnStatement(496) at 0", "Insert SimpleName: running(502) into ReturnStatement(503) at 0", "Insert SimpleName: started(509) into ReturnStatement(510) at 0", "Insert SimpleType: BlockingQueue(208) into ParameterizedType: BlockingQueue<Runnable>(211) at 0", "Insert SimpleType: Runnable(210) into ParameterizedType: BlockingQueue<Runnable>(211) at 1", "Insert SimpleName: runnables(212) into VariableDeclarationFragment(217) at 0", "Insert MethodInvocation(216) into VariableDeclarationFragment(217) at 1", "Insert SimpleName: NutchServerPoolExecutor(219) into SimpleType: NutchServerPoolExecutor(220) at 0", "Insert SimpleName: executor(221) into VariableDeclarationFragment(230) at 0", "Insert ClassInstanceCreation(229) into VariableDeclarationFragment(230) at 1", "Insert SimpleName: jobManager(232) into Assignment: =(241) at 0", "Insert ClassInstanceCreation(240) into Assignment: =(241) at 1", "Insert SimpleName: resources(438) into MethodInvocation(443) at 0", "Insert SimpleName: add(439) into MethodInvocation(443) at 1", "Insert TypeLiteral(442) into MethodInvocation(443) at 2", "Insert SimpleName: BlockingQueue(207) into SimpleType: BlockingQueue(208) at 0", "Insert SimpleName: Runnable(209) into SimpleType: Runnable(210) at 0", "Insert SimpleName: Queues(213) into MethodInvocation(216) at 0", "Insert SimpleName: newArrayBlockingQueue(214) into MethodInvocation(216) at 1", "Insert SimpleName: JOB_CAPACITY(215) into MethodInvocation(216) at 2", "Insert SimpleType: NutchServerPoolExecutor(223) into ClassInstanceCreation(229) at 0", "Insert NumberLiteral: 10(224) into ClassInstanceCreation(229) at 1", "Insert SimpleName: JOB_CAPACITY(225) into ClassInstanceCreation(229) at 2", "Insert NumberLiteral: 1(226) into ClassInstanceCreation(229) at 3", "Insert QualifiedName: TimeUnit.HOURS(227) into ClassInstanceCreation(229) at 4", "Insert SimpleName: runnables(228) into ClassInstanceCreation(229) at 5", "Insert SimpleType: JobManagerImpl(234) into ClassInstanceCreation(240) at 0", "Insert ClassInstanceCreation(237) into ClassInstanceCreation(240) at 1", "Insert SimpleName: configManager(238) into ClassInstanceCreation(240) at 2", "Insert SimpleName: executor(239) into ClassInstanceCreation(240) at 3", "Insert SimpleType: DbResource(441) into TypeLiteral(442) at 0", "Insert SimpleName: NutchServerPoolExecutor(222) into SimpleType: NutchServerPoolExecutor(223) at 0", "Insert SimpleName: JobManagerImpl(233) into SimpleType: JobManagerImpl(234) at 0", "Insert SimpleType: JobFactory(236) into ClassInstanceCreation(237) at 0", "Insert SimpleName: DbResource(440) into SimpleType: DbResource(441) at 0", "Insert SimpleName: JobFactory(235) into SimpleType: JobFactory(236) at 0"]}}, {"CommonCrawlDataDumper_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.validator.routines.UrlValidator", "DEL ImportDeclaration"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: UrlValidator", "DEL ClassInstanceCreation", "DEL SimpleType: UrlValidator", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: UrlValidator", "DEL SimpleName: UrlValidator", "DEL SimpleName: urlValidator"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: isValid", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: url", "DEL StringLiteral: \"Not valid URL detected: \"", "DEL SimpleName: url", "DEL Block", "DEL SimpleName: warn", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: urlValidator", "DEL IfStatement", "DEL SimpleName: LOG", "DEL PrefixExpression: !"]}]}}, {"CommonCrawlDataDumper_diff": {"operations": ["Delete QualifiedName: org.apache.commons.validator.routines.UrlValidator(72)", "Delete ImportDeclaration(73)", "Delete SimpleName: UrlValidator(1097)", "Delete SimpleType: UrlValidator(1098)", "Delete SimpleName: urlValidator(1099)", "Delete SimpleName: UrlValidator(1100)", "Delete SimpleType: UrlValidator(1101)", "Delete ClassInstanceCreation(1102)", "Delete VariableDeclarationFragment(1103)", "Delete VariableDeclarationStatement(1104)", "Delete SimpleName: urlValidator(1105)", "Delete SimpleName: isValid(1106)", "Delete SimpleName: url(1107)", "Delete MethodInvocation(1108)", "Delete PrefixExpression: !(1109)", "Delete SimpleName: LOG(1110)", "Delete SimpleName: warn(1111)", "Delete StringLiteral: \"Not valid URL detected: \"(1112)", "Delete SimpleName: url(1113)", "Delete InfixExpression: +(1114)", "Delete MethodInvocation(1115)", "Delete ExpressionStatement(1116)", "Delete Block(1117)", "Delete IfStatement(1118)"]}}, {"FileDumper_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: fullDir to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createTwoLevelsDirectory to MethodInvocation at 1", "MOV SimpleName: DumpFileUtil to MethodInvocation at 0", "MOV SimpleName: md5Ofurl to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TextElement: a boolean flag specifying whether the output directory should contain", "DEL TagElement: @param", "DEL TextElement: only files instead of using nested directories to prevent naming", "DEL SimpleName: flatDir", "DEL TextElement: conflicts."]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL SimpleName: flatDir"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: fullDir", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL SimpleName: fullDir", "DEL IfStatement", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: fullDir", "DEL SimpleName: flatDir", "DEL PrefixExpression: !", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL StringLiteral: \"optionally specify that the output directory should only contain files.\"", "DEL VariableDeclarationFragment", "DEL SingleMemberAnnotation", "DEL StringLiteral: \"flatdir\"", "DEL SimpleName: Option", "DEL StringLiteral: \"flatdir\"", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: dirStructureOpt", "DEL SimpleName: create", "DEL MethodInvocation", "DEL SimpleName: withDescription", "DEL SimpleName: OptionBuilder", "DEL SimpleName: SuppressWarnings", "DEL SimpleType: Option", "DEL SimpleName: withArgName", "DEL MethodInvocation", "DEL StringLiteral: \"static-access\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: options", "DEL SimpleName: addOption", "DEL ExpressionStatement", "DEL SimpleName: dirStructureOpt", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: boolean", "DEL SimpleName: line", "DEL SimpleName: flatDir", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"flatdir\"", "DEL SimpleName: hasOption"]}, {"root": "DEL SimpleName: flatDir", "operations": ["DEL SimpleName: flatDir"]}]}}, {"FileDumper_diff": {"operations": ["Insert VariableDeclarationStatement(585) into Block(661) at 1", "Move SimpleType: String(583) into VariableDeclarationStatement(585) at 0", "Insert VariableDeclarationFragment(584) into VariableDeclarationStatement(585) at 1", "Insert SimpleName: fullDir(576) into VariableDeclarationFragment(584) at 0", "Insert MethodInvocation(583) into VariableDeclarationFragment(584) at 1", "Move SimpleName: DumpFileUtil(593) into MethodInvocation(583) at 0", "Move SimpleName: createTwoLevelsDirectory(594) into MethodInvocation(583) at 1", "Move MethodInvocation(587) into MethodInvocation(583) at 2", "Move SimpleName: md5Ofurl(596) into MethodInvocation(583) at 3", "Delete SimpleName: flatDir(161)", "Delete TextElement: a boolean flag specifying whether the output directory should contain(162)", "Delete TextElement: only files instead of using nested directories to prevent naming(163)", "Delete TextElement: conflicts.(164)", "Delete TagElement: @param(165)", "Delete PrimitiveType: boolean(186)", "Delete SimpleName: flatDir(187)", "Delete SingleVariableDeclaration(188)", "Delete SimpleName: fullDir(584)", "Delete VariableDeclarationFragment(588)", "Delete VariableDeclarationStatement(589)", "Delete SimpleName: flatDir(590)", "Delete PrefixExpression: !(591)", "Delete SimpleName: fullDir(592)", "Delete SimpleName: fullDir(595)", "Delete MethodInvocation(597)", "Delete Assignment: =(598)", "Delete ExpressionStatement(599)", "Delete Block(600)", "Delete IfStatement(601)", "Delete SimpleName: SuppressWarnings(817)", "Delete StringLiteral: \"static-access\"(818)", "Delete SingleMemberAnnotation(819)", "Delete SimpleName: Option(820)", "Delete SimpleType: Option(821)", "Delete SimpleName: dirStructureOpt(822)", "Delete SimpleName: OptionBuilder(823)", "Delete SimpleName: withArgName(824)", "Delete StringLiteral: \"flatdir\"(825)", "Delete MethodInvocation(826)", "Delete SimpleName: withDescription(827)", "Delete StringLiteral: \"optionally specify that the output directory should only contain files.\"(828)", "Delete MethodInvocation(829)", "Delete SimpleName: create(830)", "Delete StringLiteral: \"flatdir\"(831)", "Delete MethodInvocation(832)", "Delete VariableDeclarationFragment(833)", "Delete VariableDeclarationStatement(834)", "Delete SimpleName: options(863)", "Delete SimpleName: addOption(864)", "Delete SimpleName: dirStructureOpt(865)", "Delete MethodInvocation(866)", "Delete ExpressionStatement(867)", "Delete PrimitiveType: boolean(955)", "Delete SimpleName: flatDir(956)", "Delete SimpleName: line(957)", "Delete SimpleName: hasOption(958)", "Delete StringLiteral: \"flatdir\"(959)", "Delete MethodInvocation(960)", "Delete VariableDeclarationFragment(961)", "Delete VariableDeclarationStatement(962)", "Delete SimpleName: flatDir(1007)"]}}, {"ConfManagerImpl_cluster": {"actions": []}}, {"ConfManagerImpl_diff": {"operations": []}}, {"AbstractResource_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: NutchServer to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: jobManager to Assignment: = at 0", "INS SimpleName: getJobManager to MethodInvocation at 1"]}]}}, {"AbstractResource_diff": {"operations": ["Insert ExpressionStatement(67) into Block(68) at 1", "Insert Assignment: =(66) into ExpressionStatement(67) at 0", "Insert SimpleName: jobManager(60) into Assignment: =(66) at 0", "Insert MethodInvocation(65) into Assignment: =(66) at 1", "Insert MethodInvocation(63) into MethodInvocation(65) at 0", "Insert SimpleName: getJobManager(64) into MethodInvocation(65) at 1", "Insert SimpleName: NutchServer(61) into MethodInvocation(63) at 0", "Insert SimpleName: getInstance(62) into MethodInvocation(63) at 1"]}}, {"ConfigResource_cluster": {"actions": []}}, {"ConfigResource_diff": {"operations": []}}, {"JobResource_cluster": {"actions": [{"root": "UPDATE from org.apache.nutch.service.model.response.JobConfig to org.apache.nutch.service.model.request.JobConfig", "operations": ["UPD QualifiedName: org.apache.nutch.service.model.response.JobConfig from org.apache.nutch.service.model.response.JobConfig to org.apache.nutch.service.model.request.JobConfig"]}, {"root": "UPDATE from String to JobInfo", "operations": ["UPD SimpleType: String from String to JobInfo", "UPD SimpleName: String from String to JobInfo"]}]}}, {"JobResource_diff": {"operations": ["Update QualifiedName: org.apache.nutch.service.model.response.JobConfig(36) to org.apache.nutch.service.model.request.JobConfig", "Update SimpleType: String(201) to JobInfo", "Update SimpleName: String(200) to JobInfo"]}}, {"JobInfo_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.nutch.service.model.request.JobConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 12"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 19", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getArgs to MethodDeclaration at 2"]}, {"root": "UPDATE from Map<String,Object> to Map<String,String>", "operations": ["UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,String>", "UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,String>", "UPD ParameterizedType: Map<String,Object> from Map<String,Object> to Map<String,String>"]}, {"root": "INS SimpleName: JobInfo to MethodDeclaration at 1", "operations": ["INS SimpleName: JobInfo to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleName: generateId to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: JobConfig to SimpleType: JobConfig at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: JobConfig to SingleVariableDeclaration at 0", "INS SimpleName: jobConfig to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: State to SimpleType: State at 0", "INS SimpleType: State to SingleVariableDeclaration at 0", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: msg to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: type to FieldAccess at 1", "INS SimpleName: confId to FieldAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: jobConfig to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: jobConfig to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: state to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: msg to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: getArgs to MethodInvocation at 1", "INS SimpleName: crawlId to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: id to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: jobConfig to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: jobConfig to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: state to FieldAccess at 1", "INS SimpleName: getConfId to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getCrawlId to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: args to FieldAccess at 1", "INS SimpleName: msg to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: generateId to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Map<String,Object> to MethodDeclaration at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Map<String,Object> to SingleVariableDeclaration at 0", "MOV Block to MethodDeclaration at 3"]}, {"root": "UPDATE from Object to String", "operations": ["UPD SimpleName: Object from Object to String", "UPD SimpleName: Object from Object to String", "UPD SimpleName: Object from Object to String", "UPD SimpleType: Object from Object to String", "UPD SimpleType: Object from Object to String", "UPD SimpleType: Object from Object to String"]}, {"root": "DEL SimpleName: getArgs", "operations": ["DEL SimpleName: getArgs"]}]}}, {"JobInfo_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(380) at 3", "Move MethodDeclaration(184) into TypeDeclaration: class(379) at 12", "Insert QualifiedName: org.apache.nutch.service.model.request.JobConfig(20) into ImportDeclaration(21) at 0", "Insert MethodDeclaration(256) into TypeDeclaration: class(379) at 19", "Update ParameterizedType: Map<String,Object>(70) to Map<String,String>", "Insert SimpleName: JobInfo(106) into MethodDeclaration(174) at 1", "Insert SingleVariableDeclaration(110) into MethodDeclaration(174) at 2", "Insert SingleVariableDeclaration(114) into MethodDeclaration(174) at 3", "Insert SingleVariableDeclaration(118) into MethodDeclaration(174) at 4", "Insert SingleVariableDeclaration(122) into MethodDeclaration(174) at 5", "Insert Block(173) into MethodDeclaration(174) at 6", "Insert Modifier: public(244) into MethodDeclaration(256) at 0", "Update ParameterizedType: Map<String,Object>(194) to Map<String,String>", "Move ParameterizedType: Map<String,Object>(194) into MethodDeclaration(256) at 1", "Insert SimpleName: getArgs(252) into MethodDeclaration(256) at 2", "Move Block(183) into MethodDeclaration(256) at 3", "Update SimpleType: Object(69) to String", "Insert SimpleType: String(108) into SingleVariableDeclaration(110) at 0", "Insert SimpleName: generateId(109) into SingleVariableDeclaration(110) at 1", "Insert SimpleType: JobConfig(112) into SingleVariableDeclaration(114) at 0", "Insert SimpleName: jobConfig(113) into SingleVariableDeclaration(114) at 1", "Insert SimpleType: State(116) into SingleVariableDeclaration(118) at 0", "Insert SimpleName: state(117) into SingleVariableDeclaration(118) at 1", "Insert SimpleType: String(120) into SingleVariableDeclaration(122) at 0", "Insert SimpleName: msg(121) into SingleVariableDeclaration(122) at 1", "Insert ExpressionStatement(128) into Block(173) at 0", "Insert ExpressionStatement(136) into Block(173) at 1", "Insert ExpressionStatement(144) into Block(173) at 2", "Insert ExpressionStatement(152) into Block(173) at 3", "Insert ExpressionStatement(160) into Block(173) at 4", "Insert ExpressionStatement(166) into Block(173) at 5", "Insert ExpressionStatement(172) into Block(173) at 6", "Update SimpleType: Object(193) to String", "Update ParameterizedType: Map<String,Object>(179) to Map<String,String>", "Move ParameterizedType: Map<String,Object>(179) into SingleVariableDeclaration(268) at 0", "Update SimpleName: Object(68) to String", "Insert SimpleName: String(107) into SimpleType: String(108) at 0", "Insert SimpleName: JobConfig(111) into SimpleType: JobConfig(112) at 0", "Insert SimpleName: State(115) into SimpleType: State(116) at 0", "Insert SimpleName: String(119) into SimpleType: String(120) at 0", "Insert Assignment: =(127) into ExpressionStatement(128) at 0", "Insert Assignment: =(135) into ExpressionStatement(136) at 0", "Insert Assignment: =(143) into ExpressionStatement(144) at 0", "Insert Assignment: =(151) into ExpressionStatement(152) at 0", "Insert Assignment: =(159) into ExpressionStatement(160) at 0", "Insert Assignment: =(165) into ExpressionStatement(166) at 0", "Insert Assignment: =(171) into ExpressionStatement(172) at 0", "Update SimpleName: Object(192) to String", "Update SimpleType: Object(178) to String", "Insert FieldAccess(125) into Assignment: =(127) at 0", "Insert SimpleName: generateId(126) into Assignment: =(127) at 1", "Insert FieldAccess(131) into Assignment: =(135) at 0", "Insert MethodInvocation(134) into Assignment: =(135) at 1", "Insert FieldAccess(139) into Assignment: =(143) at 0", "Insert MethodInvocation(142) into Assignment: =(143) at 1", "Insert FieldAccess(147) into Assignment: =(151) at 0", "Insert MethodInvocation(150) into Assignment: =(151) at 1", "Insert FieldAccess(155) into Assignment: =(159) at 0", "Insert MethodInvocation(158) into Assignment: =(159) at 1", "Insert FieldAccess(163) into Assignment: =(165) at 0", "Insert SimpleName: msg(164) into Assignment: =(165) at 1", "Insert FieldAccess(169) into Assignment: =(171) at 0", "Insert SimpleName: state(170) into Assignment: =(171) at 1", "Update SimpleName: Object(177) to String", "Insert ThisExpression(123) into FieldAccess(125) at 0", "Insert SimpleName: id(124) into FieldAccess(125) at 1", "Insert ThisExpression(129) into FieldAccess(131) at 0", "Insert SimpleName: type(130) into FieldAccess(131) at 1", "Insert SimpleName: jobConfig(132) into MethodInvocation(134) at 0", "Insert SimpleName: getType(133) into MethodInvocation(134) at 1", "Insert ThisExpression(137) into FieldAccess(139) at 0", "Insert SimpleName: confId(138) into FieldAccess(139) at 1", "Insert SimpleName: jobConfig(140) into MethodInvocation(142) at 0", "Insert SimpleName: getConfId(141) into MethodInvocation(142) at 1", "Insert ThisExpression(145) into FieldAccess(147) at 0", "Insert SimpleName: crawlId(146) into FieldAccess(147) at 1", "Insert SimpleName: jobConfig(148) into MethodInvocation(150) at 0", "Insert SimpleName: getCrawlId(149) into MethodInvocation(150) at 1", "Insert ThisExpression(153) into FieldAccess(155) at 0", "Insert SimpleName: args(154) into FieldAccess(155) at 1", "Insert SimpleName: jobConfig(156) into MethodInvocation(158) at 0", "Insert SimpleName: getArgs(157) into MethodInvocation(158) at 1", "Insert ThisExpression(161) into FieldAccess(163) at 0", "Insert SimpleName: msg(162) into FieldAccess(163) at 1", "Insert ThisExpression(167) into FieldAccess(169) at 0", "Insert SimpleName: state(168) into FieldAccess(169) at 1", "Delete SimpleName: getArgs(180)"]}}, {"FtpRobotRulesParser_cluster": {"actions": [{"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: robotRules to InfixExpression: == at 0"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: SimpleRobotRules to CastExpression at 0", "INS SimpleName: SimpleRobotRules to SimpleType: SimpleRobotRules at 0", "INS CastExpression to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: isWhiteListed", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: trace", "DEL SimpleName: isTraceEnabled", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: url", "DEL SimpleName: url", "DEL StringLiteral: \"Ignoring robots.txt (host is whitelisted) for URL: {}\"", "DEL SimpleName: LOG", "DEL SimpleName: LOG"]}, {"root": "DEL IfStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: robotRules", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL SimpleName: robotRules", "DEL IfStatement", "DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: isWhiteListed", "DEL SimpleName: url"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL SimpleName: robotRules", "DEL SimpleName: info", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleName: EMPTY_RULES", "DEL ExpressionStatement", "DEL SimpleName: LOG", "DEL Block", "DEL MethodInvocation", "DEL StringLiteral: \"Ignoring robots.txt for all URLs from whitelisted host: {}\"", "DEL StringLiteral: \"Whitelisted host found for: {}\"", "DEL SimpleName: host", "DEL SimpleName: info", "DEL SimpleName: url", "DEL Assignment: ="]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"FtpRobotRulesParser_diff": {"operations": ["Insert InfixExpression: ==(165) into IfStatement(287) at 0", "Insert CastExpression(155) into VariableDeclarationFragment(156) at 1", "Insert SimpleName: robotRules(163) into InfixExpression: ==(165) at 0", "Insert NullLiteral(164) into InfixExpression: ==(165) at 1", "Move IfStatement(187) into Block(286) at 0", "Move IfStatement(324) into Block(286) at 2", "Insert SimpleType: SimpleRobotRules(147) into CastExpression(155) at 0", "Move MethodInvocation(167) into CastExpression(155) at 1", "Move ExpressionStatement(185) into IfStatement(176) at 1", "Insert SimpleName: SimpleRobotRules(146) into SimpleType: SimpleRobotRules(147) at 0", "Delete SimpleName: LOG(143)", "Delete SimpleName: isTraceEnabled(144)", "Delete MethodInvocation(145)", "Delete SimpleName: isWhiteListed(146)", "Delete SimpleName: url(147)", "Delete MethodInvocation(148)", "Delete InfixExpression: &&(149)", "Delete SimpleName: LOG(150)", "Delete SimpleName: trace(151)", "Delete StringLiteral: \"Ignoring robots.txt (host is whitelisted) for URL: {}\"(152)", "Delete SimpleName: url(153)", "Delete MethodInvocation(154)", "Delete ExpressionStatement(155)", "Delete Block(156)", "Delete IfStatement(157)", "Delete SimpleName: robotRules(170)", "Delete NullLiteral(171)", "Delete InfixExpression: !=(172)", "Delete SimpleName: robotRules(173)", "Delete ReturnStatement(174)", "Delete Block(175)", "Delete IfStatement(188)", "Delete SimpleName: isWhiteListed(194)", "Delete SimpleName: url(195)", "Delete MethodInvocation(196)", "Delete SimpleName: robotRules(197)", "Delete SimpleName: EMPTY_RULES(198)", "Delete Assignment: =(199)", "Delete ExpressionStatement(200)", "Delete SimpleName: LOG(201)", "Delete SimpleName: info(202)", "Delete StringLiteral: \"Whitelisted host found for: {}\"(203)", "Delete SimpleName: url(204)", "Delete MethodInvocation(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: LOG(207)", "Delete SimpleName: info(208)", "Delete StringLiteral: \"Ignoring robots.txt for all URLs from whitelisted host: {}\"(209)", "Delete SimpleName: host(210)", "Delete MethodInvocation(211)", "Delete ExpressionStatement(212)", "Delete Block(213)", "Delete Block(186)"]}}, {"HttpRobotRulesParser_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: crawlercommons.robots.SimpleRobotRules to ImportDeclaration at 0"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: robotRules to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: SimpleRobotRules to CastExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: SimpleRobotRules to SimpleType: SimpleRobotRules at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: trace", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL StringLiteral: \"Ignoring robots.txt (host is whitelisted) for URL: {}\"", "DEL SimpleName: isWhiteListed", "DEL SimpleName: LOG", "DEL SimpleName: isTraceEnabled", "DEL ExpressionStatement", "DEL SimpleName: url", "DEL IfStatement", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleName: url"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: robotRules", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL Block", "DEL NullLiteral", "DEL IfStatement", "DEL SimpleName: robotRules"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: isWhiteListed", "DEL SimpleName: url"]}, {"root": "DEL Block", "operations": ["DEL StringLiteral: \"Whitelisted host found for: {}\"", "DEL SimpleName: LOG", "DEL SimpleName: url", "DEL StringLiteral: \"Ignoring robots.txt for all URLs from whitelisted host: {}\"", "DEL Assignment: =", "DEL SimpleName: url", "DEL SimpleName: EMPTY_RULES", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: LOG", "DEL SimpleName: info", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: robotRules", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: info", "DEL SimpleName: getHost"]}]}}, {"HttpRobotRulesParser_diff": {"operations": ["Insert ImportDeclaration(35) into CompilationUnit(477) at 10", "Insert QualifiedName: crawlercommons.robots.SimpleRobotRules(34) into ImportDeclaration(35) at 0", "Insert InfixExpression: ==(233) into IfStatement(471) at 0", "Insert CastExpression(223) into VariableDeclarationFragment(224) at 1", "Insert SimpleName: robotRules(231) into InfixExpression: ==(233) at 0", "Insert NullLiteral(232) into InfixExpression: ==(233) at 1", "Move VariableDeclarationStatement(265) into Block(470) at 0", "Move IfStatement(253) into Block(470) at 1", "Move IfStatement(507) into Block(470) at 3", "Insert SimpleType: SimpleRobotRules(218) into CastExpression(223) at 0", "Move MethodInvocation(233) into CastExpression(223) at 1", "Insert SimpleName: SimpleRobotRules(217) into SimpleType: SimpleRobotRules(218) at 0", "Delete SimpleName: LOG(204)", "Delete SimpleName: isTraceEnabled(205)", "Delete MethodInvocation(206)", "Delete SimpleName: isWhiteListed(207)", "Delete SimpleName: url(208)", "Delete MethodInvocation(209)", "Delete InfixExpression: &&(210)", "Delete SimpleName: LOG(211)", "Delete SimpleName: trace(212)", "Delete StringLiteral: \"Ignoring robots.txt (host is whitelisted) for URL: {}\"(213)", "Delete SimpleName: url(214)", "Delete MethodInvocation(215)", "Delete ExpressionStatement(216)", "Delete Block(217)", "Delete IfStatement(218)", "Delete SimpleName: robotRules(236)", "Delete NullLiteral(237)", "Delete InfixExpression: !=(238)", "Delete SimpleName: robotRules(239)", "Delete ReturnStatement(240)", "Delete Block(241)", "Delete IfStatement(254)", "Delete SimpleName: isWhiteListed(266)", "Delete SimpleName: url(267)", "Delete MethodInvocation(268)", "Delete SimpleName: robotRules(269)", "Delete SimpleName: EMPTY_RULES(270)", "Delete Assignment: =(271)", "Delete ExpressionStatement(272)", "Delete SimpleName: LOG(273)", "Delete SimpleName: info(274)", "Delete StringLiteral: \"Whitelisted host found for: {}\"(275)", "Delete SimpleName: url(276)", "Delete MethodInvocation(277)", "Delete ExpressionStatement(278)", "Delete SimpleName: LOG(279)", "Delete SimpleName: info(280)", "Delete StringLiteral: \"Ignoring robots.txt for all URLs from whitelisted host: {}\"(281)", "Delete SimpleName: url(282)", "Delete SimpleName: getHost(283)", "Delete MethodInvocation(284)", "Delete MethodInvocation(285)", "Delete ExpressionStatement(286)", "Delete Block(287)"]}}], "commit_stats": [{"total_files": 28, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}