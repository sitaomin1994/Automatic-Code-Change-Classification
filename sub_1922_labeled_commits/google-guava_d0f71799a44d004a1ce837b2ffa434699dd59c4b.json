{"application": "google-guava", "csha": "d0f71799a44d004a1ce837b2ffa434699dd59c4b", "files": [{"HashCode_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 11", "MOV MethodDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: maxLength to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: abstract to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: offset to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SimpleName: dest to SingleVariableDeclaration at 1", "INS SimpleName: writeBytesToImpl to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS ArrayAccess to Assignment: = at 0", "INS InfixExpression: * to ParenthesizedExpression at 0", "INS SimpleName: maxLength to InfixExpression: < at 1", "INS InfixExpression: + to ArrayAccess at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS CastExpression to Assignment: = at 1", "INS SimpleName: dest to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SimpleName: offset to SingleVariableDeclaration at 1", "INS SimpleName: offset to InfixExpression: + at 0", "INS SimpleName: i to InfixExpression: + at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS NumberLiteral: 8 to InfixExpression: * at 1", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: dest to ArrayAccess at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS ForStatement to Block at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: i to InfixExpression: * at 0", "INS SimpleName: writeBytesToImpl to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS Block to ForStatement at 3", "INS ParenthesizedExpression to InfixExpression: >> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: maxLength to SingleVariableDeclaration at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: maxLength to InfixExpression: < at 1", "INS InfixExpression: + to ArrayAccess at 1", "INS Block to ForStatement at 3", "INS SimpleName: hash to InfixExpression: >> at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: offset to InfixExpression: + at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: maxLength to SingleVariableDeclaration at 1", "INS InfixExpression: * to ParenthesizedExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS Dimension to ArrayType: byte[] at 1", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS ForStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: writeBytesToImpl to MethodDeclaration at 2", "INS NumberLiteral: 8 to InfixExpression: * at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: dest to ArrayAccess at 0", "INS SimpleName: i to InfixExpression: + at 1", "INS SimpleName: dest to SingleVariableDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS CastExpression to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS ArrayAccess to Assignment: = at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to InfixExpression: >> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: i to InfixExpression: * at 0", "INS SimpleName: offset to SingleVariableDeclaration at 1", "INS SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: arraycopy to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: offset to MethodInvocation at 5", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: writeBytesToImpl to MethodDeclaration at 2", "INS SimpleName: offset to SingleVariableDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: dest to MethodInvocation at 4", "INS SimpleName: maxLength to SingleVariableDeclaration at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: dest to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleName: maxLength to MethodInvocation at 6"]}, {"root": "UPDATE from System to writeBytesToImpl", "operations": ["UPD SimpleName: System from System to writeBytesToImpl"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL Dimension", "DEL SimpleName: asBytes", "DEL SimpleName: hash", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL VariableDeclarationFragment", "DEL PrimitiveType: byte", "DEL VariableDeclarationStatement"]}, {"root": "DEL SimpleName: arraycopy", "operations": ["DEL SimpleName: arraycopy"]}, {"root": "DEL SimpleName: hash", "operations": ["DEL SimpleName: hash"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}]}}, {"HashCode_diff": {"operations": ["Move MethodDeclaration(667) into TypeDeclaration: class(1255) at 6", "Move MethodDeclaration(925) into TypeDeclaration: class(1255) at 11", "Insert MethodDeclaration(214) into TypeDeclaration: class(1255) at 12", "Insert Modifier: abstract(200) into MethodDeclaration(214) at 0", "Insert PrimitiveType: void(201) into MethodDeclaration(214) at 1", "Insert SimpleName: writeBytesToImpl(202) into MethodDeclaration(214) at 2", "Insert SingleVariableDeclaration(207) into MethodDeclaration(214) at 3", "Insert SingleVariableDeclaration(210) into MethodDeclaration(214) at 4", "Insert SingleVariableDeclaration(213) into MethodDeclaration(214) at 5", "Insert MethodDeclaration(386) into TypeDeclaration: class(395) at 13", "Insert MethodDeclaration(587) into TypeDeclaration: class(596) at 13", "Insert MethodDeclaration(857) into TypeDeclaration: class(866) at 13", "Insert ArrayType: byte[](205) into SingleVariableDeclaration(207) at 0", "Insert SimpleName: dest(206) into SingleVariableDeclaration(207) at 1", "Insert PrimitiveType: int(208) into SingleVariableDeclaration(210) at 0", "Insert SimpleName: offset(209) into SingleVariableDeclaration(210) at 1", "Insert PrimitiveType: int(211) into SingleVariableDeclaration(213) at 0", "Insert SimpleName: maxLength(212) into SingleVariableDeclaration(213) at 1", "Insert MarkerAnnotation(343) into MethodDeclaration(386) at 0", "Insert PrimitiveType: void(344) into MethodDeclaration(386) at 1", "Insert SimpleName: writeBytesToImpl(345) into MethodDeclaration(386) at 2", "Insert SingleVariableDeclaration(350) into MethodDeclaration(386) at 3", "Insert SingleVariableDeclaration(353) into MethodDeclaration(386) at 4", "Insert SingleVariableDeclaration(356) into MethodDeclaration(386) at 5", "Insert Block(385) into MethodDeclaration(386) at 6", "Insert MarkerAnnotation(544) into MethodDeclaration(587) at 0", "Insert PrimitiveType: void(545) into MethodDeclaration(587) at 1", "Insert SimpleName: writeBytesToImpl(546) into MethodDeclaration(587) at 2", "Insert SingleVariableDeclaration(551) into MethodDeclaration(587) at 3", "Insert SingleVariableDeclaration(554) into MethodDeclaration(587) at 4", "Insert SingleVariableDeclaration(557) into MethodDeclaration(587) at 5", "Insert Block(586) into MethodDeclaration(587) at 6", "Insert MarkerAnnotation(833) into MethodDeclaration(857) at 0", "Insert PrimitiveType: void(834) into MethodDeclaration(857) at 1", "Insert SimpleName: writeBytesToImpl(835) into MethodDeclaration(857) at 2", "Insert SingleVariableDeclaration(840) into MethodDeclaration(857) at 3", "Insert SingleVariableDeclaration(843) into MethodDeclaration(857) at 4", "Insert SingleVariableDeclaration(846) into MethodDeclaration(857) at 5", "Insert Block(856) into MethodDeclaration(857) at 6", "Insert PrimitiveType: byte(203) into ArrayType: byte[](205) at 0", "Insert Dimension(204) into ArrayType: byte[](205) at 1", "Insert SimpleName: Override(342) into MarkerAnnotation(343) at 0", "Insert ArrayType: byte[](348) into SingleVariableDeclaration(350) at 0", "Insert SimpleName: dest(349) into SingleVariableDeclaration(350) at 1", "Insert PrimitiveType: int(351) into SingleVariableDeclaration(353) at 0", "Insert SimpleName: offset(352) into SingleVariableDeclaration(353) at 1", "Insert PrimitiveType: int(354) into SingleVariableDeclaration(356) at 0", "Insert SimpleName: maxLength(355) into SingleVariableDeclaration(356) at 1", "Insert ForStatement(384) into Block(385) at 0", "Insert SimpleName: Override(543) into MarkerAnnotation(544) at 0", "Insert ArrayType: byte[](549) into SingleVariableDeclaration(551) at 0", "Insert SimpleName: dest(550) into SingleVariableDeclaration(551) at 1", "Insert PrimitiveType: int(552) into SingleVariableDeclaration(554) at 0", "Insert SimpleName: offset(553) into SingleVariableDeclaration(554) at 1", "Insert PrimitiveType: int(555) into SingleVariableDeclaration(557) at 0", "Insert SimpleName: maxLength(556) into SingleVariableDeclaration(557) at 1", "Insert ForStatement(585) into Block(586) at 0", "Insert SimpleName: Override(832) into MarkerAnnotation(833) at 0", "Insert ArrayType: byte[](838) into SingleVariableDeclaration(840) at 0", "Insert SimpleName: dest(839) into SingleVariableDeclaration(840) at 1", "Insert PrimitiveType: int(841) into SingleVariableDeclaration(843) at 0", "Insert SimpleName: offset(842) into SingleVariableDeclaration(843) at 1", "Insert PrimitiveType: int(844) into SingleVariableDeclaration(846) at 0", "Insert SimpleName: maxLength(845) into SingleVariableDeclaration(846) at 1", "Insert ExpressionStatement(855) into Block(856) at 0", "Update SimpleName: System(913) to writeBytesToImpl", "Insert PrimitiveType: byte(346) into ArrayType: byte[](348) at 0", "Insert Dimension(347) into ArrayType: byte[](348) at 1", "Insert VariableDeclarationExpression(361) into ForStatement(384) at 0", "Insert InfixExpression: <(364) into ForStatement(384) at 1", "Insert PostfixExpression: ++(366) into ForStatement(384) at 2", "Insert Block(383) into ForStatement(384) at 3", "Insert PrimitiveType: byte(547) into ArrayType: byte[](549) at 0", "Insert Dimension(548) into ArrayType: byte[](549) at 1", "Insert VariableDeclarationExpression(562) into ForStatement(585) at 0", "Insert InfixExpression: <(565) into ForStatement(585) at 1", "Insert PostfixExpression: ++(567) into ForStatement(585) at 2", "Insert Block(584) into ForStatement(585) at 3", "Insert PrimitiveType: byte(836) into ArrayType: byte[](838) at 0", "Insert Dimension(837) into ArrayType: byte[](838) at 1", "Insert MethodInvocation(854) into ExpressionStatement(855) at 0", "Insert PrimitiveType: int(357) into VariableDeclarationExpression(361) at 0", "Insert VariableDeclarationFragment(360) into VariableDeclarationExpression(361) at 1", "Insert SimpleName: i(362) into InfixExpression: <(364) at 0", "Insert SimpleName: maxLength(363) into InfixExpression: <(364) at 1", "Insert SimpleName: i(365) into PostfixExpression: ++(366) at 0", "Insert ExpressionStatement(382) into Block(383) at 0", "Insert PrimitiveType: int(558) into VariableDeclarationExpression(562) at 0", "Insert VariableDeclarationFragment(561) into VariableDeclarationExpression(562) at 1", "Insert SimpleName: i(563) into InfixExpression: <(565) at 0", "Insert SimpleName: maxLength(564) into InfixExpression: <(565) at 1", "Insert SimpleName: i(566) into PostfixExpression: ++(567) at 0", "Insert ExpressionStatement(583) into Block(584) at 0", "Insert SimpleName: System(847) into MethodInvocation(854) at 0", "Insert SimpleName: arraycopy(848) into MethodInvocation(854) at 1", "Insert SimpleName: bytes(849) into MethodInvocation(854) at 2", "Insert NumberLiteral: 0(850) into MethodInvocation(854) at 3", "Insert SimpleName: dest(851) into MethodInvocation(854) at 4", "Insert SimpleName: offset(852) into MethodInvocation(854) at 5", "Insert SimpleName: maxLength(853) into MethodInvocation(854) at 6", "Insert SimpleName: i(358) into VariableDeclarationFragment(360) at 0", "Insert NumberLiteral: 0(359) into VariableDeclarationFragment(360) at 1", "Insert Assignment: =(381) into ExpressionStatement(382) at 0", "Insert SimpleName: i(559) into VariableDeclarationFragment(561) at 0", "Insert NumberLiteral: 0(560) into VariableDeclarationFragment(561) at 1", "Insert Assignment: =(582) into ExpressionStatement(583) at 0", "Insert ArrayAccess(371) into Assignment: =(381) at 0", "Insert CastExpression(380) into Assignment: =(381) at 1", "Insert ArrayAccess(572) into Assignment: =(582) at 0", "Insert CastExpression(581) into Assignment: =(582) at 1", "Insert SimpleName: dest(367) into ArrayAccess(371) at 0", "Insert InfixExpression: +(370) into ArrayAccess(371) at 1", "Insert PrimitiveType: byte(372) into CastExpression(380) at 0", "Insert ParenthesizedExpression(379) into CastExpression(380) at 1", "Insert SimpleName: dest(568) into ArrayAccess(572) at 0", "Insert InfixExpression: +(571) into ArrayAccess(572) at 1", "Insert PrimitiveType: byte(573) into CastExpression(581) at 0", "Insert ParenthesizedExpression(580) into CastExpression(581) at 1", "Insert SimpleName: offset(368) into InfixExpression: +(370) at 0", "Insert SimpleName: i(369) into InfixExpression: +(370) at 1", "Insert InfixExpression: >>(378) into ParenthesizedExpression(379) at 0", "Insert SimpleName: offset(569) into InfixExpression: +(571) at 0", "Insert SimpleName: i(570) into InfixExpression: +(571) at 1", "Insert InfixExpression: >>(579) into ParenthesizedExpression(580) at 0", "Insert SimpleName: hash(373) into InfixExpression: >>(378) at 0", "Insert ParenthesizedExpression(377) into InfixExpression: >>(378) at 1", "Insert SimpleName: hash(574) into InfixExpression: >>(579) at 0", "Insert ParenthesizedExpression(578) into InfixExpression: >>(579) at 1", "Insert InfixExpression: *(376) into ParenthesizedExpression(377) at 0", "Insert InfixExpression: *(577) into ParenthesizedExpression(578) at 0", "Insert SimpleName: i(374) into InfixExpression: *(376) at 0", "Insert NumberLiteral: 8(375) into InfixExpression: *(376) at 1", "Insert SimpleName: i(575) into InfixExpression: *(577) at 0", "Insert NumberLiteral: 8(576) into InfixExpression: *(577) at 1", "Delete Modifier: final(871)", "Delete PrimitiveType: byte(905)", "Delete Dimension(906)", "Delete ArrayType: byte[](907)", "Delete SimpleName: hash(908)", "Delete SimpleName: asBytes(909)", "Delete MethodInvocation(910)", "Delete VariableDeclarationFragment(911)", "Delete VariableDeclarationStatement(912)", "Delete SimpleName: arraycopy(914)", "Delete SimpleName: hash(915)", "Delete NumberLiteral: 0(916)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}